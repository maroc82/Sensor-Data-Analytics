<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\Pedometer-master\src\main\java\de\j4velin\pedometer\PowerReceiver.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * Copyright 2014 Thomas Hoffmann
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package pos:line="17" pos:column="1">package <name><name pos:line="17" pos:column="9">de</name><op:operator pos:line="17" pos:column="11">.</op:operator><name pos:line="17" pos:column="12">j4velin</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">pedometer</name></name>;</package>

<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">android</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">content</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">BroadcastReceiver</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">android</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">content</name><op:operator pos:line="20" pos:column="23">.</op:operator><name pos:line="20" pos:column="24">Context</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">android</name><op:operator pos:line="21" pos:column="15">.</op:operator><name pos:line="21" pos:column="16">content</name><op:operator pos:line="21" pos:column="23">.</op:operator><name pos:line="21" pos:column="24">Intent</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">android</name><op:operator pos:line="22" pos:column="15">.</op:operator><name pos:line="22" pos:column="16">content</name><op:operator pos:line="22" pos:column="23">.</op:operator><name pos:line="22" pos:column="24">SharedPreferences</name></name>;</import>

<class><specifier pos:line="24" pos:column="1">public</specifier> class <name pos:line="24" pos:column="14">PowerReceiver</name> <super><extends pos:line="24" pos:column="28">extends <name pos:line="24" pos:column="36">BroadcastReceiver</name></extends></super> <block pos:line="24" pos:column="54">{
    <function><type><annotation pos:line="25" pos:column="5">@<name pos:line="25" pos:column="6">Override</name></annotation>
    <specifier pos:line="26" pos:column="5">public</specifier> <name pos:line="26" pos:column="12">void</name></type> <name pos:line="26" pos:column="17">onReceive</name><parameter_list pos:line="26" pos:column="26">(<param><decl><type><specifier pos:line="26" pos:column="27">final</specifier> <name pos:line="26" pos:column="33">Context</name></type> <name pos:line="26" pos:column="41">context</name></decl></param>, <param><decl><type><specifier pos:line="26" pos:column="50">final</specifier> <name pos:line="26" pos:column="56">Intent</name></type> <name pos:line="26" pos:column="63">intent</name></decl></param>)</parameter_list> <block pos:line="26" pos:column="71">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">SharedPreferences</name></type> <name pos:line="27" pos:column="27">prefs</name> <init pos:line="27" pos:column="33">=
                <expr><call><name><name pos:line="28" pos:column="17">context</name><op:operator pos:line="28" pos:column="24">.</op:operator><name pos:line="28" pos:column="25">getSharedPreferences</name></name><argument_list pos:line="28" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="28" pos:column="46">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="59">Context</name><op:operator pos:line="28" pos:column="66">.</op:operator><name pos:line="28" pos:column="67">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><call><name><name pos:line="29" pos:column="13">Intent</name><op:operator pos:line="29" pos:column="19">.</op:operator><name pos:line="29" pos:column="20">ACTION_POWER_CONNECTED</name><op:operator pos:line="29" pos:column="42">.</op:operator><name pos:line="29" pos:column="43">equals</name></name><argument_list pos:line="29" pos:column="49">(<argument><expr><call><name><name pos:line="29" pos:column="50">intent</name><op:operator pos:line="29" pos:column="56">.</op:operator><name pos:line="29" pos:column="57">getAction</name></name><argument_list pos:line="29" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="29" pos:column="70">&amp;&amp;</op:operator>
                <op:operator pos:line="30" pos:column="17">!</op:operator><call><name><name pos:line="30" pos:column="18">prefs</name><op:operator pos:line="30" pos:column="23">.</op:operator><name pos:line="30" pos:column="24">contains</name></name><argument_list pos:line="30" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="33">"pauseCount"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="30" pos:column="47"> <block pos:line="30" pos:column="48">{
            <comment type="line" pos:line="31" pos:column="13">// if power connected &amp; not already paused, then pause now</comment>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">context</name><op:operator pos:line="32" pos:column="20">.</op:operator><name pos:line="32" pos:column="21">startService</name></name><argument_list pos:line="32" pos:column="33">(<argument><expr><op:operator pos:line="32" pos:column="34">new</op:operator> <call><name pos:line="32" pos:column="38">Intent</name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">context</name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="54">SensorListener</name><op:operator pos:line="32" pos:column="68">.</op:operator><name pos:line="32" pos:column="69">class</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="33" pos:column="21">.</op:operator><call><name pos:line="33" pos:column="22">putExtra</name><argument_list pos:line="33" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="33" pos:column="31">"action"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="41">SensorListener</name><op:operator pos:line="33" pos:column="55">.</op:operator><name pos:line="33" pos:column="56">ACTION_PAUSE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="34" pos:column="11">else <if pos:line="34" pos:column="16">if <condition pos:line="34" pos:column="19">(<expr><call><name><name pos:line="34" pos:column="20">Intent</name><op:operator pos:line="34" pos:column="26">.</op:operator><name pos:line="34" pos:column="27">ACTION_POWER_DISCONNECTED</name><op:operator pos:line="34" pos:column="52">.</op:operator><name pos:line="34" pos:column="53">equals</name></name><argument_list pos:line="34" pos:column="59">(<argument><expr><call><name><name pos:line="34" pos:column="60">intent</name><op:operator pos:line="34" pos:column="66">.</op:operator><name pos:line="34" pos:column="67">getAction</name></name><argument_list pos:line="34" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="34" pos:column="80">&amp;&amp;</op:operator>
                <call><name><name pos:line="35" pos:column="17">prefs</name><op:operator pos:line="35" pos:column="22">.</op:operator><name pos:line="35" pos:column="23">contains</name></name><argument_list pos:line="35" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="32">"pauseCount"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="35" pos:column="46"> <block pos:line="35" pos:column="47">{
            <comment type="line" pos:line="36" pos:column="13">// if power disconnected &amp; currently paused, then resume now</comment>
            <expr_stmt><expr><call><name><name pos:line="37" pos:column="13">context</name><op:operator pos:line="37" pos:column="20">.</op:operator><name pos:line="37" pos:column="21">startService</name></name><argument_list pos:line="37" pos:column="33">(<argument><expr><op:operator pos:line="37" pos:column="34">new</op:operator> <call><name pos:line="37" pos:column="38">Intent</name><argument_list pos:line="37" pos:column="44">(<argument><expr><name pos:line="37" pos:column="45">context</name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="54">SensorListener</name><op:operator pos:line="37" pos:column="68">.</op:operator><name pos:line="37" pos:column="69">class</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="38" pos:column="21">.</op:operator><call><name pos:line="38" pos:column="22">putExtra</name><argument_list pos:line="38" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="31">"action"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="41">SensorListener</name><op:operator pos:line="38" pos:column="55">.</op:operator><name pos:line="38" pos:column="56">ACTION_PAUSE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if></else></if>
    }</block></function>
}</block></class>
</unit>
