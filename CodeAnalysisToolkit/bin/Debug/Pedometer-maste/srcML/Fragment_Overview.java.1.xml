<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\Pedometer-master\src\main\java\de\j4velin\pedometer\ui\Fragment_Overview.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * Copyright 2014 Thomas Hoffmann
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>
<package pos:line="16" pos:column="1">package <name><name pos:line="16" pos:column="9">de</name><op:operator pos:line="16" pos:column="11">.</op:operator><name pos:line="16" pos:column="12">j4velin</name><op:operator pos:line="16" pos:column="19">.</op:operator><name pos:line="16" pos:column="20">pedometer</name><op:operator pos:line="16" pos:column="29">.</op:operator><name pos:line="16" pos:column="30">ui</name></name>;</package>

<import pos:line="18" pos:column="1">import <name><name pos:line="18" pos:column="8">android</name><op:operator pos:line="18" pos:column="15">.</op:operator><name pos:line="18" pos:column="16">app</name><op:operator pos:line="18" pos:column="19">.</op:operator><name pos:line="18" pos:column="20">Fragment</name></name>;</import>
<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">android</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">content</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">Context</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">android</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">content</name><op:operator pos:line="20" pos:column="23">.</op:operator><name pos:line="20" pos:column="24">Intent</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">android</name><op:operator pos:line="21" pos:column="15">.</op:operator><name pos:line="21" pos:column="16">content</name><op:operator pos:line="21" pos:column="23">.</op:operator><name pos:line="21" pos:column="24">SharedPreferences</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">android</name><op:operator pos:line="22" pos:column="15">.</op:operator><name pos:line="22" pos:column="16">graphics</name><op:operator pos:line="22" pos:column="24">.</op:operator><name pos:line="22" pos:column="25">Color</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">android</name><op:operator pos:line="23" pos:column="15">.</op:operator><name pos:line="23" pos:column="16">graphics</name><op:operator pos:line="23" pos:column="24">.</op:operator><name pos:line="23" pos:column="25">PorterDuff</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">android</name><op:operator pos:line="24" pos:column="15">.</op:operator><name pos:line="24" pos:column="16">graphics</name><op:operator pos:line="24" pos:column="24">.</op:operator><name pos:line="24" pos:column="25">drawable</name><op:operator pos:line="24" pos:column="33">.</op:operator><name pos:line="24" pos:column="34">Drawable</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">android</name><op:operator pos:line="25" pos:column="15">.</op:operator><name pos:line="25" pos:column="16">hardware</name><op:operator pos:line="25" pos:column="24">.</op:operator><name pos:line="25" pos:column="25">Sensor</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">android</name><op:operator pos:line="26" pos:column="15">.</op:operator><name pos:line="26" pos:column="16">hardware</name><op:operator pos:line="26" pos:column="24">.</op:operator><name pos:line="26" pos:column="25">SensorEvent</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">android</name><op:operator pos:line="27" pos:column="15">.</op:operator><name pos:line="27" pos:column="16">hardware</name><op:operator pos:line="27" pos:column="24">.</op:operator><name pos:line="27" pos:column="25">SensorEventListener</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">android</name><op:operator pos:line="28" pos:column="15">.</op:operator><name pos:line="28" pos:column="16">hardware</name><op:operator pos:line="28" pos:column="24">.</op:operator><name pos:line="28" pos:column="25">SensorManager</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">android</name><op:operator pos:line="29" pos:column="15">.</op:operator><name pos:line="29" pos:column="16">os</name><op:operator pos:line="29" pos:column="18">.</op:operator><name pos:line="29" pos:column="19">Bundle</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">android</name><op:operator pos:line="30" pos:column="15">.</op:operator><name pos:line="30" pos:column="16">view</name><op:operator pos:line="30" pos:column="20">.</op:operator><name pos:line="30" pos:column="21">LayoutInflater</name></name>;</import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">android</name><op:operator pos:line="31" pos:column="15">.</op:operator><name pos:line="31" pos:column="16">view</name><op:operator pos:line="31" pos:column="20">.</op:operator><name pos:line="31" pos:column="21">Menu</name></name>;</import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">android</name><op:operator pos:line="32" pos:column="15">.</op:operator><name pos:line="32" pos:column="16">view</name><op:operator pos:line="32" pos:column="20">.</op:operator><name pos:line="32" pos:column="21">MenuInflater</name></name>;</import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">android</name><op:operator pos:line="33" pos:column="15">.</op:operator><name pos:line="33" pos:column="16">view</name><op:operator pos:line="33" pos:column="20">.</op:operator><name pos:line="33" pos:column="21">MenuItem</name></name>;</import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">android</name><op:operator pos:line="34" pos:column="15">.</op:operator><name pos:line="34" pos:column="16">view</name><op:operator pos:line="34" pos:column="20">.</op:operator><name pos:line="34" pos:column="21">View</name></name>;</import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">android</name><op:operator pos:line="35" pos:column="15">.</op:operator><name pos:line="35" pos:column="16">view</name><op:operator pos:line="35" pos:column="20">.</op:operator><name pos:line="35" pos:column="21">View</name><op:operator pos:line="35" pos:column="25">.</op:operator><name pos:line="35" pos:column="26">OnClickListener</name></name>;</import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">android</name><op:operator pos:line="36" pos:column="15">.</op:operator><name pos:line="36" pos:column="16">view</name><op:operator pos:line="36" pos:column="20">.</op:operator><name pos:line="36" pos:column="21">ViewGroup</name></name>;</import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">android</name><op:operator pos:line="37" pos:column="15">.</op:operator><name pos:line="37" pos:column="16">widget</name><op:operator pos:line="37" pos:column="22">.</op:operator><name pos:line="37" pos:column="23">TextView</name></name>;</import>

<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">org</name><op:operator pos:line="39" pos:column="11">.</op:operator><name pos:line="39" pos:column="12">eazegraph</name><op:operator pos:line="39" pos:column="21">.</op:operator><name pos:line="39" pos:column="22">lib</name><op:operator pos:line="39" pos:column="25">.</op:operator><name pos:line="39" pos:column="26">charts</name><op:operator pos:line="39" pos:column="32">.</op:operator><name pos:line="39" pos:column="33">BarChart</name></name>;</import>
<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">org</name><op:operator pos:line="40" pos:column="11">.</op:operator><name pos:line="40" pos:column="12">eazegraph</name><op:operator pos:line="40" pos:column="21">.</op:operator><name pos:line="40" pos:column="22">lib</name><op:operator pos:line="40" pos:column="25">.</op:operator><name pos:line="40" pos:column="26">charts</name><op:operator pos:line="40" pos:column="32">.</op:operator><name pos:line="40" pos:column="33">PieChart</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">org</name><op:operator pos:line="41" pos:column="11">.</op:operator><name pos:line="41" pos:column="12">eazegraph</name><op:operator pos:line="41" pos:column="21">.</op:operator><name pos:line="41" pos:column="22">lib</name><op:operator pos:line="41" pos:column="25">.</op:operator><name pos:line="41" pos:column="26">models</name><op:operator pos:line="41" pos:column="32">.</op:operator><name pos:line="41" pos:column="33">BarModel</name></name>;</import>
<import pos:line="42" pos:column="1">import <name><name pos:line="42" pos:column="8">org</name><op:operator pos:line="42" pos:column="11">.</op:operator><name pos:line="42" pos:column="12">eazegraph</name><op:operator pos:line="42" pos:column="21">.</op:operator><name pos:line="42" pos:column="22">lib</name><op:operator pos:line="42" pos:column="25">.</op:operator><name pos:line="42" pos:column="26">models</name><op:operator pos:line="42" pos:column="32">.</op:operator><name pos:line="42" pos:column="33">PieModel</name></name>;</import>

<import pos:line="44" pos:column="1">import <name><name pos:line="44" pos:column="8">java</name><op:operator pos:line="44" pos:column="12">.</op:operator><name pos:line="44" pos:column="13">text</name><op:operator pos:line="44" pos:column="17">.</op:operator><name pos:line="44" pos:column="18">NumberFormat</name></name>;</import>
<import pos:line="45" pos:column="1">import <name><name pos:line="45" pos:column="8">java</name><op:operator pos:line="45" pos:column="12">.</op:operator><name pos:line="45" pos:column="13">text</name><op:operator pos:line="45" pos:column="17">.</op:operator><name pos:line="45" pos:column="18">SimpleDateFormat</name></name>;</import>
<import pos:line="46" pos:column="1">import <name><name pos:line="46" pos:column="8">java</name><op:operator pos:line="46" pos:column="12">.</op:operator><name pos:line="46" pos:column="13">util</name><op:operator pos:line="46" pos:column="17">.</op:operator><name pos:line="46" pos:column="18">Calendar</name></name>;</import>
<import pos:line="47" pos:column="1">import <name><name pos:line="47" pos:column="8">java</name><op:operator pos:line="47" pos:column="12">.</op:operator><name pos:line="47" pos:column="13">util</name><op:operator pos:line="47" pos:column="17">.</op:operator><name pos:line="47" pos:column="18">Date</name></name>;</import>
<import pos:line="48" pos:column="1">import <name><name pos:line="48" pos:column="8">java</name><op:operator pos:line="48" pos:column="12">.</op:operator><name pos:line="48" pos:column="13">util</name><op:operator pos:line="48" pos:column="17">.</op:operator><name pos:line="48" pos:column="18">Locale</name></name>;</import>

<import pos:line="50" pos:column="1">import <name><name pos:line="50" pos:column="8">de</name><op:operator pos:line="50" pos:column="10">.</op:operator><name pos:line="50" pos:column="11">j4velin</name><op:operator pos:line="50" pos:column="18">.</op:operator><name pos:line="50" pos:column="19">pedometer</name><op:operator pos:line="50" pos:column="28">.</op:operator><name pos:line="50" pos:column="29">BuildConfig</name></name>;</import>
<import pos:line="51" pos:column="1">import <name><name pos:line="51" pos:column="8">de</name><op:operator pos:line="51" pos:column="10">.</op:operator><name pos:line="51" pos:column="11">j4velin</name><op:operator pos:line="51" pos:column="18">.</op:operator><name pos:line="51" pos:column="19">pedometer</name><op:operator pos:line="51" pos:column="28">.</op:operator><name pos:line="51" pos:column="29">Database</name></name>;</import>
<import pos:line="52" pos:column="1">import <name><name pos:line="52" pos:column="8">de</name><op:operator pos:line="52" pos:column="10">.</op:operator><name pos:line="52" pos:column="11">j4velin</name><op:operator pos:line="52" pos:column="18">.</op:operator><name pos:line="52" pos:column="19">pedometer</name><op:operator pos:line="52" pos:column="28">.</op:operator><name pos:line="52" pos:column="29">R</name></name>;</import>
<import pos:line="53" pos:column="1">import <name><name pos:line="53" pos:column="8">de</name><op:operator pos:line="53" pos:column="10">.</op:operator><name pos:line="53" pos:column="11">j4velin</name><op:operator pos:line="53" pos:column="18">.</op:operator><name pos:line="53" pos:column="19">pedometer</name><op:operator pos:line="53" pos:column="28">.</op:operator><name pos:line="53" pos:column="29">SensorListener</name></name>;</import>
<import pos:line="54" pos:column="1">import <name><name pos:line="54" pos:column="8">de</name><op:operator pos:line="54" pos:column="10">.</op:operator><name pos:line="54" pos:column="11">j4velin</name><op:operator pos:line="54" pos:column="18">.</op:operator><name pos:line="54" pos:column="19">pedometer</name><op:operator pos:line="54" pos:column="28">.</op:operator><name pos:line="54" pos:column="29">util</name><op:operator pos:line="54" pos:column="33">.</op:operator><name pos:line="54" pos:column="34">Logger</name></name>;</import>
<import pos:line="55" pos:column="1">import <name><name pos:line="55" pos:column="8">de</name><op:operator pos:line="55" pos:column="10">.</op:operator><name pos:line="55" pos:column="11">j4velin</name><op:operator pos:line="55" pos:column="18">.</op:operator><name pos:line="55" pos:column="19">pedometer</name><op:operator pos:line="55" pos:column="28">.</op:operator><name pos:line="55" pos:column="29">util</name><op:operator pos:line="55" pos:column="33">.</op:operator><name pos:line="55" pos:column="34">Util</name></name>;</import>

<class><specifier pos:line="57" pos:column="1">public</specifier> class <name pos:line="57" pos:column="14">Fragment_Overview</name> <super><extends pos:line="57" pos:column="32">extends <name pos:line="57" pos:column="40">Fragment</name></extends> <implements pos:line="57" pos:column="49">implements <name pos:line="57" pos:column="60">SensorEventListener</name></implements></super> <block pos:line="57" pos:column="80">{

    <decl_stmt><decl><type><specifier pos:line="59" pos:column="5">private</specifier> <name pos:line="59" pos:column="13">TextView</name></type> <name pos:line="59" pos:column="22">stepsView</name></decl><op:operator pos:line="59" pos:column="31">,</op:operator> <decl><type ref="prev"/><name pos:line="59" pos:column="33">totalView</name></decl><op:operator pos:line="59" pos:column="42">,</op:operator> <decl><type ref="prev"/><name pos:line="59" pos:column="44">averageView</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="61" pos:column="5">private</specifier> <name pos:line="61" pos:column="13">PieModel</name></type> <name pos:line="61" pos:column="22">sliceGoal</name></decl><op:operator pos:line="61" pos:column="31">,</op:operator> <decl><type ref="prev"/><name pos:line="61" pos:column="33">sliceCurrent</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="62" pos:column="5">private</specifier> <name pos:line="62" pos:column="13">PieChart</name></type> <name pos:line="62" pos:column="22">pg</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="64" pos:column="5">private</specifier> <name pos:line="64" pos:column="13">int</name></type> <name pos:line="64" pos:column="17">todayOffset</name></decl><op:operator pos:line="64" pos:column="28">,</op:operator> <decl><type ref="prev"/><name pos:line="64" pos:column="30">total_start</name></decl><op:operator pos:line="64" pos:column="41">,</op:operator> <decl><type ref="prev"/><name pos:line="64" pos:column="43">goal</name></decl><op:operator pos:line="64" pos:column="47">,</op:operator> <decl><type ref="prev"/><name pos:line="64" pos:column="49">since_boot</name></decl><op:operator pos:line="64" pos:column="59">,</op:operator> <decl><type ref="prev"/><name pos:line="64" pos:column="61">total_days</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="65" pos:column="5">public</specifier> <specifier pos:line="65" pos:column="12">final</specifier> <specifier pos:line="65" pos:column="18">static</specifier> <name pos:line="65" pos:column="25">NumberFormat</name></type> <name pos:line="65" pos:column="38">formatter</name> <init pos:line="65" pos:column="48">= <expr><call><name><name pos:line="65" pos:column="50">NumberFormat</name><op:operator pos:line="65" pos:column="62">.</op:operator><name pos:line="65" pos:column="63">getInstance</name></name><argument_list pos:line="65" pos:column="74">(<argument><expr><call><name><name pos:line="65" pos:column="75">Locale</name><op:operator pos:line="65" pos:column="81">.</op:operator><name pos:line="65" pos:column="82">getDefault</name></name><argument_list pos:line="65" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="66" pos:column="5">private</specifier> <name pos:line="66" pos:column="13">boolean</name></type> <name pos:line="66" pos:column="21">showSteps</name> <init pos:line="66" pos:column="31">= <expr><lit:literal type="boolean" pos:line="66" pos:column="33">true</lit:literal></expr></init></decl>;</decl_stmt>

    <function><type><annotation pos:line="68" pos:column="5">@<name pos:line="68" pos:column="6">Override</name></annotation>
    <specifier pos:line="69" pos:column="5">public</specifier> <name pos:line="69" pos:column="12">void</name></type> <name pos:line="69" pos:column="17">onCreate</name><parameter_list pos:line="69" pos:column="25">(<param><decl><type><specifier pos:line="69" pos:column="26">final</specifier> <name pos:line="69" pos:column="32">Bundle</name></type> <name pos:line="69" pos:column="39">savedInstanceState</name></decl></param>)</parameter_list> <block pos:line="69" pos:column="59">{
        <expr_stmt><expr><call><name><name pos:line="70" pos:column="9">super</name><op:operator pos:line="70" pos:column="14">.</op:operator><name pos:line="70" pos:column="15">onCreate</name></name><argument_list pos:line="70" pos:column="23">(<argument><expr><name pos:line="70" pos:column="24">savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">setHasOptionsMenu</name><argument_list pos:line="71" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="71" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation pos:line="74" pos:column="5">@<name pos:line="74" pos:column="6">Override</name></annotation>
    <specifier pos:line="75" pos:column="5">public</specifier> <name pos:line="75" pos:column="12">View</name></type> <name pos:line="75" pos:column="17">onCreateView</name><parameter_list pos:line="75" pos:column="29">(<param><decl><type><name pos:line="75" pos:column="30">LayoutInflater</name></type> <name pos:line="75" pos:column="45">inflater</name></decl></param>, <param><decl><type><name pos:line="75" pos:column="55">ViewGroup</name></type> <name pos:line="75" pos:column="65">container</name></decl></param>, <param><decl><type><name pos:line="75" pos:column="76">Bundle</name></type> <name pos:line="75" pos:column="83">savedInstanceState</name></decl></param>)</parameter_list> <block pos:line="75" pos:column="103">{
        <decl_stmt><decl><type><specifier pos:line="76" pos:column="9">final</specifier> <name pos:line="76" pos:column="15">View</name></type> <name pos:line="76" pos:column="20">v</name> <init pos:line="76" pos:column="22">= <expr><call><name><name pos:line="76" pos:column="24">inflater</name><op:operator pos:line="76" pos:column="32">.</op:operator><name pos:line="76" pos:column="33">inflate</name></name><argument_list pos:line="76" pos:column="40">(<argument><expr><name><name pos:line="76" pos:column="41">R</name><op:operator pos:line="76" pos:column="42">.</op:operator><name pos:line="76" pos:column="43">layout</name><op:operator pos:line="76" pos:column="49">.</op:operator><name pos:line="76" pos:column="50">fragment_overview</name></name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="76" pos:column="69">null</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="77" pos:column="9">stepsView</name> <op:operator pos:line="77" pos:column="19">=</op:operator> <op:operator pos:line="77" pos:column="21">(</op:operator><name pos:line="77" pos:column="22">TextView</name><op:operator pos:line="77" pos:column="30">)</op:operator> <call><name><name pos:line="77" pos:column="32">v</name><op:operator pos:line="77" pos:column="33">.</op:operator><name pos:line="77" pos:column="34">findViewById</name></name><argument_list pos:line="77" pos:column="46">(<argument><expr><name><name pos:line="77" pos:column="47">R</name><op:operator pos:line="77" pos:column="48">.</op:operator><name pos:line="77" pos:column="49">id</name><op:operator pos:line="77" pos:column="51">.</op:operator><name pos:line="77" pos:column="52">steps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="78" pos:column="9">totalView</name> <op:operator pos:line="78" pos:column="19">=</op:operator> <op:operator pos:line="78" pos:column="21">(</op:operator><name pos:line="78" pos:column="22">TextView</name><op:operator pos:line="78" pos:column="30">)</op:operator> <call><name><name pos:line="78" pos:column="32">v</name><op:operator pos:line="78" pos:column="33">.</op:operator><name pos:line="78" pos:column="34">findViewById</name></name><argument_list pos:line="78" pos:column="46">(<argument><expr><name><name pos:line="78" pos:column="47">R</name><op:operator pos:line="78" pos:column="48">.</op:operator><name pos:line="78" pos:column="49">id</name><op:operator pos:line="78" pos:column="51">.</op:operator><name pos:line="78" pos:column="52">total</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="79" pos:column="9">averageView</name> <op:operator pos:line="79" pos:column="21">=</op:operator> <op:operator pos:line="79" pos:column="23">(</op:operator><name pos:line="79" pos:column="24">TextView</name><op:operator pos:line="79" pos:column="32">)</op:operator> <call><name><name pos:line="79" pos:column="34">v</name><op:operator pos:line="79" pos:column="35">.</op:operator><name pos:line="79" pos:column="36">findViewById</name></name><argument_list pos:line="79" pos:column="48">(<argument><expr><name><name pos:line="79" pos:column="49">R</name><op:operator pos:line="79" pos:column="50">.</op:operator><name pos:line="79" pos:column="51">id</name><op:operator pos:line="79" pos:column="53">.</op:operator><name pos:line="79" pos:column="54">average</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name pos:line="81" pos:column="9">pg</name> <op:operator pos:line="81" pos:column="12">=</op:operator> <op:operator pos:line="81" pos:column="14">(</op:operator><name pos:line="81" pos:column="15">PieChart</name><op:operator pos:line="81" pos:column="23">)</op:operator> <call><name><name pos:line="81" pos:column="25">v</name><op:operator pos:line="81" pos:column="26">.</op:operator><name pos:line="81" pos:column="27">findViewById</name></name><argument_list pos:line="81" pos:column="39">(<argument><expr><name><name pos:line="81" pos:column="40">R</name><op:operator pos:line="81" pos:column="41">.</op:operator><name pos:line="81" pos:column="42">id</name><op:operator pos:line="81" pos:column="44">.</op:operator><name pos:line="81" pos:column="45">graph</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:line="83" pos:column="9">// slice for the steps taken today</comment>
        <expr_stmt><expr><name pos:line="84" pos:column="9">sliceCurrent</name> <op:operator pos:line="84" pos:column="22">=</op:operator> <op:operator pos:line="84" pos:column="24">new</op:operator> <call><name pos:line="84" pos:column="28">PieModel</name><argument_list pos:line="84" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="37">""</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="84" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="84" pos:column="44">Color</name><op:operator pos:line="84" pos:column="49">.</op:operator><name pos:line="84" pos:column="50">parseColor</name></name><argument_list pos:line="84" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="61">"#99CC00"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="85" pos:column="9">pg</name><op:operator pos:line="85" pos:column="11">.</op:operator><name pos:line="85" pos:column="12">addPieSlice</name></name><argument_list pos:line="85" pos:column="23">(<argument><expr><name pos:line="85" pos:column="24">sliceCurrent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:line="87" pos:column="9">// slice for the "missing" steps until reaching the goal</comment>
        <expr_stmt><expr><name pos:line="88" pos:column="9">sliceGoal</name> <op:operator pos:line="88" pos:column="19">=</op:operator> <op:operator pos:line="88" pos:column="21">new</op:operator> <call><name pos:line="88" pos:column="25">PieModel</name><argument_list pos:line="88" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="34">""</lit:literal></expr></argument>, <argument><expr><name><name pos:line="88" pos:column="38">Fragment_Settings</name><op:operator pos:line="88" pos:column="55">.</op:operator><name pos:line="88" pos:column="56">DEFAULT_GOAL</name></name></expr></argument>, <argument><expr><call><name><name pos:line="88" pos:column="70">Color</name><op:operator pos:line="88" pos:column="75">.</op:operator><name pos:line="88" pos:column="76">parseColor</name></name><argument_list pos:line="88" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="87">"#CC0000"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="89" pos:column="9">pg</name><op:operator pos:line="89" pos:column="11">.</op:operator><name pos:line="89" pos:column="12">addPieSlice</name></name><argument_list pos:line="89" pos:column="23">(<argument><expr><name pos:line="89" pos:column="24">sliceGoal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="91" pos:column="9">pg</name><op:operator pos:line="91" pos:column="11">.</op:operator><name pos:line="91" pos:column="12">setOnClickListener</name></name><argument_list pos:line="91" pos:column="30">(<argument><expr><op:operator pos:line="91" pos:column="31">new</op:operator> <class><super><name pos:line="91" pos:column="35">OnClickListener</name></super><argument_list pos:line="91" pos:column="50">()</argument_list> <block pos:line="91" pos:column="53">{
            <function><type><annotation pos:line="92" pos:column="13">@<name pos:line="92" pos:column="14">Override</name></annotation>
            <specifier pos:line="93" pos:column="13">public</specifier> <name pos:line="93" pos:column="20">void</name></type> <name pos:line="93" pos:column="25">onClick</name><parameter_list pos:line="93" pos:column="32">(<param><decl><type><specifier pos:line="93" pos:column="33">final</specifier> <name pos:line="93" pos:column="39">View</name></type> <name pos:line="93" pos:column="44">view</name></decl></param>)</parameter_list> <block pos:line="93" pos:column="50">{
                <expr_stmt><expr><name pos:line="94" pos:column="17">showSteps</name> <op:operator pos:line="94" pos:column="27">=</op:operator> <op:operator pos:line="94" pos:column="29">!</op:operator><name pos:line="94" pos:column="30">showSteps</name></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="95" pos:column="17">stepsDistanceChanged</name><argument_list pos:line="95" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            }</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="99" pos:column="9">pg</name><op:operator pos:line="99" pos:column="11">.</op:operator><name pos:line="99" pos:column="12">setDrawValueInPie</name></name><argument_list pos:line="99" pos:column="29">(<argument><expr><lit:literal type="boolean" pos:line="99" pos:column="30">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="100" pos:column="9">pg</name><op:operator pos:line="100" pos:column="11">.</op:operator><name pos:line="100" pos:column="12">setUsePieRotation</name></name><argument_list pos:line="100" pos:column="29">(<argument><expr><lit:literal type="boolean" pos:line="100" pos:column="30">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="101" pos:column="9">pg</name><op:operator pos:line="101" pos:column="11">.</op:operator><name pos:line="101" pos:column="12">startAnimation</name></name><argument_list pos:line="101" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
        <return pos:line="102" pos:column="9">return <expr><name pos:line="102" pos:column="16">v</name></expr>;</return>
    }</block></function>

    <function><type><annotation pos:line="105" pos:column="5">@<name pos:line="105" pos:column="6">Override</name></annotation>
    <specifier pos:line="106" pos:column="5">public</specifier> <name pos:line="106" pos:column="12">void</name></type> <name pos:line="106" pos:column="17">onResume</name><parameter_list pos:line="106" pos:column="25">()</parameter_list> <block pos:line="106" pos:column="28">{
        <expr_stmt><expr><call><name><name pos:line="107" pos:column="9">super</name><op:operator pos:line="107" pos:column="14">.</op:operator><name pos:line="107" pos:column="15">onResume</name></name><argument_list pos:line="107" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="108" pos:column="9">getActivity</name><argument_list pos:line="108" pos:column="20">()</argument_list></call><op:operator pos:line="108" pos:column="22">.</op:operator><call><name pos:line="108" pos:column="23">getActionBar</name><argument_list pos:line="108" pos:column="35">()</argument_list></call><op:operator pos:line="108" pos:column="37">.</op:operator><call><name pos:line="108" pos:column="38">setDisplayHomeAsUpEnabled</name><argument_list pos:line="108" pos:column="63">(<argument><expr><lit:literal type="boolean" pos:line="108" pos:column="64">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="110" pos:column="9">Database</name></type> <name pos:line="110" pos:column="18">db</name> <init pos:line="110" pos:column="21">= <expr><call><name><name pos:line="110" pos:column="23">Database</name><op:operator pos:line="110" pos:column="31">.</op:operator><name pos:line="110" pos:column="32">getInstance</name></name><argument_list pos:line="110" pos:column="43">(<argument><expr><call><name pos:line="110" pos:column="44">getActivity</name><argument_list pos:line="110" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if pos:line="112" pos:column="9">if <condition pos:line="112" pos:column="12">(<expr><name><name pos:line="112" pos:column="13">BuildConfig</name><op:operator pos:line="112" pos:column="24">.</op:operator><name pos:line="112" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="112" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="112" pos:column="32">db</name><op:operator pos:line="112" pos:column="34">.</op:operator><name pos:line="112" pos:column="35">logState</name></name><argument_list pos:line="112" pos:column="43">()</argument_list></call></expr>;</expr_stmt></then></if>
        <comment type="line" pos:line="113" pos:column="9">// read todays offset</comment>
        <expr_stmt><expr><name pos:line="114" pos:column="9">todayOffset</name> <op:operator pos:line="114" pos:column="21">=</op:operator> <call><name><name pos:line="114" pos:column="23">db</name><op:operator pos:line="114" pos:column="25">.</op:operator><name pos:line="114" pos:column="26">getSteps</name></name><argument_list pos:line="114" pos:column="34">(<argument><expr><call><name><name pos:line="114" pos:column="35">Util</name><op:operator pos:line="114" pos:column="39">.</op:operator><name pos:line="114" pos:column="40">getToday</name></name><argument_list pos:line="114" pos:column="48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="116" pos:column="9">SharedPreferences</name></type> <name pos:line="116" pos:column="27">prefs</name> <init pos:line="116" pos:column="33">=
                <expr><call><name pos:line="117" pos:column="17">getActivity</name><argument_list pos:line="117" pos:column="28">()</argument_list></call><op:operator pos:line="117" pos:column="30">.</op:operator><call><name pos:line="117" pos:column="31">getSharedPreferences</name><argument_list pos:line="117" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="52">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="117" pos:column="65">Context</name><op:operator pos:line="117" pos:column="72">.</op:operator><name pos:line="117" pos:column="73">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt><expr><name pos:line="119" pos:column="9">goal</name> <op:operator pos:line="119" pos:column="14">=</op:operator> <call><name><name pos:line="119" pos:column="16">prefs</name><op:operator pos:line="119" pos:column="21">.</op:operator><name pos:line="119" pos:column="22">getInt</name></name><argument_list pos:line="119" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="119" pos:column="29">"goal"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="119" pos:column="37">Fragment_Settings</name><op:operator pos:line="119" pos:column="54">.</op:operator><name pos:line="119" pos:column="55">DEFAULT_GOAL</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">since_boot</name> <op:operator pos:line="120" pos:column="20">=</op:operator> <call><name><name pos:line="120" pos:column="22">db</name><op:operator pos:line="120" pos:column="24">.</op:operator><name pos:line="120" pos:column="25">getCurrentSteps</name></name><argument_list pos:line="120" pos:column="40">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="120" pos:column="44">// do not use the value from the sharedPreferences</comment>
        <decl_stmt><decl><type><name pos:line="121" pos:column="9">int</name></type> <name pos:line="121" pos:column="13">pauseDifference</name> <init pos:line="121" pos:column="29">= <expr><name pos:line="121" pos:column="31">since_boot</name> <op:operator pos:line="121" pos:column="42">-</op:operator> <call><name><name pos:line="121" pos:column="44">prefs</name><op:operator pos:line="121" pos:column="49">.</op:operator><name pos:line="121" pos:column="50">getInt</name></name><argument_list pos:line="121" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="121" pos:column="57">"pauseCount"</lit:literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="71">since_boot</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:line="123" pos:column="9">// register a sensorlistener to live update the UI if a step is taken</comment>
        <if pos:line="124" pos:column="9">if <condition pos:line="124" pos:column="12">(<expr><op:operator pos:line="124" pos:column="13">!</op:operator><call><name><name pos:line="124" pos:column="14">prefs</name><op:operator pos:line="124" pos:column="19">.</op:operator><name pos:line="124" pos:column="20">contains</name></name><argument_list pos:line="124" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="29">"pauseCount"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="124" pos:column="43"> <block pos:line="124" pos:column="44">{
            <decl_stmt><decl><type><name pos:line="125" pos:column="13">SensorManager</name></type> <name pos:line="125" pos:column="27">sm</name> <init pos:line="125" pos:column="30">=
                    <expr><op:operator pos:line="126" pos:column="21">(</op:operator><name pos:line="126" pos:column="22">SensorManager</name><op:operator pos:line="126" pos:column="35">)</op:operator> <call><name pos:line="126" pos:column="37">getActivity</name><argument_list pos:line="126" pos:column="48">()</argument_list></call><op:operator pos:line="126" pos:column="50">.</op:operator><call><name pos:line="126" pos:column="51">getSystemService</name><argument_list pos:line="126" pos:column="67">(<argument><expr><name><name pos:line="126" pos:column="68">Context</name><op:operator pos:line="126" pos:column="75">.</op:operator><name pos:line="126" pos:column="76">SENSOR_SERVICE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="127" pos:column="13">sm</name><op:operator pos:line="127" pos:column="15">.</op:operator><name pos:line="127" pos:column="16">registerListener</name></name><argument_list pos:line="127" pos:column="32">(<argument><expr><name pos:line="127" pos:column="33">this</name></expr></argument>, <argument><expr><call><name><name pos:line="127" pos:column="39">sm</name><op:operator pos:line="127" pos:column="41">.</op:operator><name pos:line="127" pos:column="42">getDefaultSensor</name></name><argument_list pos:line="127" pos:column="58">(<argument><expr><name><name pos:line="127" pos:column="59">Sensor</name><op:operator pos:line="127" pos:column="65">.</op:operator><name pos:line="127" pos:column="66">TYPE_STEP_COUNTER</name></name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument><expr><name><name pos:line="128" pos:column="21">SensorManager</name><op:operator pos:line="128" pos:column="34">.</op:operator><name pos:line="128" pos:column="35">SENSOR_DELAY_UI</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="128" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>

        <expr_stmt><expr><name pos:line="131" pos:column="9">since_boot</name> <op:operator pos:line="131" pos:column="20">-=</op:operator> <name pos:line="131" pos:column="23">pauseDifference</name></expr>;</expr_stmt>

        <expr_stmt><expr><name pos:line="133" pos:column="9">total_start</name> <op:operator pos:line="133" pos:column="21">=</op:operator> <call><name><name pos:line="133" pos:column="23">db</name><op:operator pos:line="133" pos:column="25">.</op:operator><name pos:line="133" pos:column="26">getTotalWithoutToday</name></name><argument_list pos:line="133" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="134" pos:column="9">total_days</name> <op:operator pos:line="134" pos:column="20">=</op:operator> <call><name><name pos:line="134" pos:column="22">db</name><op:operator pos:line="134" pos:column="24">.</op:operator><name pos:line="134" pos:column="25">getDays</name></name><argument_list pos:line="134" pos:column="32">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="136" pos:column="9">db</name><op:operator pos:line="136" pos:column="11">.</op:operator><name pos:line="136" pos:column="12">close</name></name><argument_list pos:line="136" pos:column="17">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name pos:line="138" pos:column="9">stepsDistanceChanged</name><argument_list pos:line="138" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="141" pos:column="5">/**
     * Call this method if the Fragment should update the "steps"/"km" text in
     * the pie graph as well as the pie and the bars graphs.
     */</comment>
    <function><type><specifier pos:line="145" pos:column="5">private</specifier> <name pos:line="145" pos:column="13">void</name></type> <name pos:line="145" pos:column="18">stepsDistanceChanged</name><parameter_list pos:line="145" pos:column="38">()</parameter_list> <block pos:line="145" pos:column="41">{
        <if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name pos:line="146" pos:column="13">showSteps</name></expr>)</condition><then pos:line="146" pos:column="23"> <block pos:line="146" pos:column="24">{
            <expr_stmt><expr><op:operator pos:line="147" pos:column="13">(</op:operator><op:operator pos:line="147" pos:column="14">(</op:operator><name pos:line="147" pos:column="15">TextView</name><op:operator pos:line="147" pos:column="23">)</op:operator> <call><name pos:line="147" pos:column="25">getView</name><argument_list pos:line="147" pos:column="32">()</argument_list></call><op:operator pos:line="147" pos:column="34">.</op:operator><call><name pos:line="147" pos:column="35">findViewById</name><argument_list pos:line="147" pos:column="47">(<argument><expr><name><name pos:line="147" pos:column="48">R</name><op:operator pos:line="147" pos:column="49">.</op:operator><name pos:line="147" pos:column="50">id</name><op:operator pos:line="147" pos:column="52">.</op:operator><name pos:line="147" pos:column="53">unit</name></name></expr></argument>)</argument_list></call><op:operator pos:line="147" pos:column="58">)</op:operator><op:operator pos:line="147" pos:column="59">.</op:operator><call><name pos:line="147" pos:column="60">setText</name><argument_list pos:line="147" pos:column="67">(<argument><expr><call><name pos:line="147" pos:column="68">getString</name><argument_list pos:line="147" pos:column="77">(<argument><expr><name><name pos:line="147" pos:column="78">R</name><op:operator pos:line="147" pos:column="79">.</op:operator><name pos:line="147" pos:column="80">string</name><op:operator pos:line="147" pos:column="86">.</op:operator><name pos:line="147" pos:column="87">steps</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="148" pos:column="11">else <block pos:line="148" pos:column="16">{
            <decl_stmt><decl><type><name pos:line="149" pos:column="13">String</name></type> <name pos:line="149" pos:column="20">unit</name> <init pos:line="149" pos:column="25">=
                    <expr><call><name pos:line="150" pos:column="21">getActivity</name><argument_list pos:line="150" pos:column="32">()</argument_list></call><op:operator pos:line="150" pos:column="34">.</op:operator><call><name pos:line="150" pos:column="35">getSharedPreferences</name><argument_list pos:line="150" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="150" pos:column="56">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="150" pos:column="69">Context</name><op:operator pos:line="150" pos:column="76">.</op:operator><name pos:line="150" pos:column="77">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call>
                            <op:operator pos:line="151" pos:column="29">.</op:operator><call><name pos:line="151" pos:column="30">getString</name><argument_list pos:line="151" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="40">"stepsize_unit"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="57">Fragment_Settings</name><op:operator pos:line="151" pos:column="74">.</op:operator><name pos:line="151" pos:column="75">DEFAULT_STEP_UNIT</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="152" pos:column="13">if <condition pos:line="152" pos:column="16">(<expr><call><name><name pos:line="152" pos:column="17">unit</name><op:operator pos:line="152" pos:column="21">.</op:operator><name pos:line="152" pos:column="22">equals</name></name><argument_list pos:line="152" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="152" pos:column="29">"cm"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="152" pos:column="35"> <block pos:line="152" pos:column="36">{
                <expr_stmt><expr><name pos:line="153" pos:column="17">unit</name> <op:operator pos:line="153" pos:column="22">=</op:operator> <lit:literal type="string" pos:line="153" pos:column="24">"km"</lit:literal></expr>;</expr_stmt>
            }</block></then> <else pos:line="154" pos:column="15">else <block pos:line="154" pos:column="20">{
                <expr_stmt><expr><name pos:line="155" pos:column="17">unit</name> <op:operator pos:line="155" pos:column="22">=</op:operator> <lit:literal type="string" pos:line="155" pos:column="24">"mi"</lit:literal></expr>;</expr_stmt>
            }</block></else></if>
            <expr_stmt><expr><op:operator pos:line="157" pos:column="13">(</op:operator><op:operator pos:line="157" pos:column="14">(</op:operator><name pos:line="157" pos:column="15">TextView</name><op:operator pos:line="157" pos:column="23">)</op:operator> <call><name pos:line="157" pos:column="25">getView</name><argument_list pos:line="157" pos:column="32">()</argument_list></call><op:operator pos:line="157" pos:column="34">.</op:operator><call><name pos:line="157" pos:column="35">findViewById</name><argument_list pos:line="157" pos:column="47">(<argument><expr><name><name pos:line="157" pos:column="48">R</name><op:operator pos:line="157" pos:column="49">.</op:operator><name pos:line="157" pos:column="50">id</name><op:operator pos:line="157" pos:column="52">.</op:operator><name pos:line="157" pos:column="53">unit</name></name></expr></argument>)</argument_list></call><op:operator pos:line="157" pos:column="58">)</op:operator><op:operator pos:line="157" pos:column="59">.</op:operator><call><name pos:line="157" pos:column="60">setText</name><argument_list pos:line="157" pos:column="67">(<argument><expr><name pos:line="157" pos:column="68">unit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>

        <expr_stmt><expr><call><name pos:line="160" pos:column="9">updatePie</name><argument_list pos:line="160" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="161" pos:column="9">updateBars</name><argument_list pos:line="161" pos:column="19">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation pos:line="164" pos:column="5">@<name pos:line="164" pos:column="6">Override</name></annotation>
    <specifier pos:line="165" pos:column="5">public</specifier> <name pos:line="165" pos:column="12">void</name></type> <name pos:line="165" pos:column="17">onPause</name><parameter_list pos:line="165" pos:column="24">()</parameter_list> <block pos:line="165" pos:column="27">{
        <expr_stmt><expr><call><name><name pos:line="166" pos:column="9">super</name><op:operator pos:line="166" pos:column="14">.</op:operator><name pos:line="166" pos:column="15">onPause</name></name><argument_list pos:line="166" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
        <try pos:line="167" pos:column="9">try <block pos:line="167" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="168" pos:column="13">SensorManager</name></type> <name pos:line="168" pos:column="27">sm</name> <init pos:line="168" pos:column="30">=
                    <expr><op:operator pos:line="169" pos:column="21">(</op:operator><name pos:line="169" pos:column="22">SensorManager</name><op:operator pos:line="169" pos:column="35">)</op:operator> <call><name pos:line="169" pos:column="37">getActivity</name><argument_list pos:line="169" pos:column="48">()</argument_list></call><op:operator pos:line="169" pos:column="50">.</op:operator><call><name pos:line="169" pos:column="51">getSystemService</name><argument_list pos:line="169" pos:column="67">(<argument><expr><name><name pos:line="169" pos:column="68">Context</name><op:operator pos:line="169" pos:column="75">.</op:operator><name pos:line="169" pos:column="76">SENSOR_SERVICE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="170" pos:column="13">sm</name><op:operator pos:line="170" pos:column="15">.</op:operator><name pos:line="170" pos:column="16">unregisterListener</name></name><argument_list pos:line="170" pos:column="34">(<argument><expr><name pos:line="170" pos:column="35">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="171" pos:column="11">catch <parameter_list pos:line="171" pos:column="17">(<param><decl><type><name pos:line="171" pos:column="18">Exception</name></type> <name pos:line="171" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="171" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="172" pos:column="13">e</name><op:operator pos:line="172" pos:column="14">.</op:operator><name pos:line="172" pos:column="15">printStackTrace</name></name><argument_list pos:line="172" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
        <decl_stmt><decl><type><name pos:line="174" pos:column="9">Database</name></type> <name pos:line="174" pos:column="18">db</name> <init pos:line="174" pos:column="21">= <expr><call><name><name pos:line="174" pos:column="23">Database</name><op:operator pos:line="174" pos:column="31">.</op:operator><name pos:line="174" pos:column="32">getInstance</name></name><argument_list pos:line="174" pos:column="43">(<argument><expr><call><name pos:line="174" pos:column="44">getActivity</name><argument_list pos:line="174" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="175" pos:column="9">db</name><op:operator pos:line="175" pos:column="11">.</op:operator><name pos:line="175" pos:column="12">saveCurrentSteps</name></name><argument_list pos:line="175" pos:column="28">(<argument><expr><name pos:line="175" pos:column="29">since_boot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="176" pos:column="9">db</name><op:operator pos:line="176" pos:column="11">.</op:operator><name pos:line="176" pos:column="12">close</name></name><argument_list pos:line="176" pos:column="17">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation pos:line="179" pos:column="5">@<name pos:line="179" pos:column="6">Override</name></annotation>
    <specifier pos:line="180" pos:column="5">public</specifier> <name pos:line="180" pos:column="12">void</name></type> <name pos:line="180" pos:column="17">onCreateOptionsMenu</name><parameter_list pos:line="180" pos:column="36">(<param><decl><type><specifier pos:line="180" pos:column="37">final</specifier> <name pos:line="180" pos:column="43">Menu</name></type> <name pos:line="180" pos:column="48">menu</name></decl></param>, <param><decl><type><specifier pos:line="180" pos:column="54">final</specifier> <name pos:line="180" pos:column="60">MenuInflater</name></type> <name pos:line="180" pos:column="73">inflater</name></decl></param>)</parameter_list> <block pos:line="180" pos:column="83">{
        <expr_stmt><expr><call><name><name pos:line="181" pos:column="9">inflater</name><op:operator pos:line="181" pos:column="17">.</op:operator><name pos:line="181" pos:column="18">inflate</name></name><argument_list pos:line="181" pos:column="25">(<argument><expr><name><name pos:line="181" pos:column="26">R</name><op:operator pos:line="181" pos:column="27">.</op:operator><name pos:line="181" pos:column="28">menu</name><op:operator pos:line="181" pos:column="32">.</op:operator><name pos:line="181" pos:column="33">main</name></name></expr></argument>, <argument><expr><name pos:line="181" pos:column="39">menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="182" pos:column="9">MenuItem</name></type> <name pos:line="182" pos:column="18">pause</name> <init pos:line="182" pos:column="24">= <expr><call><name><name pos:line="182" pos:column="26">menu</name><op:operator pos:line="182" pos:column="30">.</op:operator><name pos:line="182" pos:column="31">getItem</name></name><argument_list pos:line="182" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="182" pos:column="39">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="183" pos:column="9">Drawable</name></type> <name pos:line="183" pos:column="18">d</name></decl>;</decl_stmt>
        <if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><call><name pos:line="184" pos:column="13">getActivity</name><argument_list pos:line="184" pos:column="24">()</argument_list></call><op:operator pos:line="184" pos:column="26">.</op:operator><call><name pos:line="184" pos:column="27">getSharedPreferences</name><argument_list pos:line="184" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="184" pos:column="48">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="184" pos:column="61">Context</name><op:operator pos:line="184" pos:column="68">.</op:operator><name pos:line="184" pos:column="69">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call>
                <op:operator pos:line="185" pos:column="17">.</op:operator><call><name pos:line="185" pos:column="18">contains</name><argument_list pos:line="185" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="27">"pauseCount"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="185" pos:column="41"> <block pos:line="185" pos:column="42">{ <comment type="line" pos:line="185" pos:column="44">// currently paused</comment>
            <expr_stmt><expr><call><name><name pos:line="186" pos:column="13">pause</name><op:operator pos:line="186" pos:column="18">.</op:operator><name pos:line="186" pos:column="19">setTitle</name></name><argument_list pos:line="186" pos:column="27">(<argument><expr><name><name pos:line="186" pos:column="28">R</name><op:operator pos:line="186" pos:column="29">.</op:operator><name pos:line="186" pos:column="30">string</name><op:operator pos:line="186" pos:column="36">.</op:operator><name pos:line="186" pos:column="37">resume</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="187" pos:column="13">d</name> <op:operator pos:line="187" pos:column="15">=</op:operator> <call><name pos:line="187" pos:column="17">getResources</name><argument_list pos:line="187" pos:column="29">()</argument_list></call><op:operator pos:line="187" pos:column="31">.</op:operator><call><name pos:line="187" pos:column="32">getDrawable</name><argument_list pos:line="187" pos:column="43">(<argument><expr><name><name pos:line="187" pos:column="44">R</name><op:operator pos:line="187" pos:column="45">.</op:operator><name pos:line="187" pos:column="46">drawable</name><op:operator pos:line="187" pos:column="54">.</op:operator><name pos:line="187" pos:column="55">ic_resume</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="188" pos:column="11">else <block pos:line="188" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="189" pos:column="13">pause</name><op:operator pos:line="189" pos:column="18">.</op:operator><name pos:line="189" pos:column="19">setTitle</name></name><argument_list pos:line="189" pos:column="27">(<argument><expr><name><name pos:line="189" pos:column="28">R</name><op:operator pos:line="189" pos:column="29">.</op:operator><name pos:line="189" pos:column="30">string</name><op:operator pos:line="189" pos:column="36">.</op:operator><name pos:line="189" pos:column="37">pause</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="190" pos:column="13">d</name> <op:operator pos:line="190" pos:column="15">=</op:operator> <call><name pos:line="190" pos:column="17">getResources</name><argument_list pos:line="190" pos:column="29">()</argument_list></call><op:operator pos:line="190" pos:column="31">.</op:operator><call><name pos:line="190" pos:column="32">getDrawable</name><argument_list pos:line="190" pos:column="43">(<argument><expr><name><name pos:line="190" pos:column="44">R</name><op:operator pos:line="190" pos:column="45">.</op:operator><name pos:line="190" pos:column="46">drawable</name><op:operator pos:line="190" pos:column="54">.</op:operator><name pos:line="190" pos:column="55">ic_pause</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
        <expr_stmt><expr><call><name><name pos:line="192" pos:column="9">d</name><op:operator pos:line="192" pos:column="10">.</op:operator><name pos:line="192" pos:column="11">setColorFilter</name></name><argument_list pos:line="192" pos:column="25">(<argument><expr><name><name pos:line="192" pos:column="26">Color</name><op:operator pos:line="192" pos:column="31">.</op:operator><name pos:line="192" pos:column="32">WHITE</name></name></expr></argument>, <argument><expr><name><name pos:line="192" pos:column="39">PorterDuff</name><op:operator pos:line="192" pos:column="49">.</op:operator><name pos:line="192" pos:column="50">Mode</name><op:operator pos:line="192" pos:column="54">.</op:operator><name pos:line="192" pos:column="55">SRC_ATOP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="193" pos:column="9">pause</name><op:operator pos:line="193" pos:column="14">.</op:operator><name pos:line="193" pos:column="15">setIcon</name></name><argument_list pos:line="193" pos:column="22">(<argument><expr><name pos:line="193" pos:column="23">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation pos:line="196" pos:column="5">@<name pos:line="196" pos:column="6">Override</name></annotation>
    <specifier pos:line="197" pos:column="5">public</specifier> <name pos:line="197" pos:column="12">boolean</name></type> <name pos:line="197" pos:column="20">onOptionsItemSelected</name><parameter_list pos:line="197" pos:column="41">(<param><decl><type><specifier pos:line="197" pos:column="42">final</specifier> <name pos:line="197" pos:column="48">MenuItem</name></type> <name pos:line="197" pos:column="57">item</name></decl></param>)</parameter_list> <block pos:line="197" pos:column="63">{
        <switch pos:line="198" pos:column="9">switch <condition pos:line="198" pos:column="16">(<expr><call><name><name pos:line="198" pos:column="17">item</name><op:operator pos:line="198" pos:column="21">.</op:operator><name pos:line="198" pos:column="22">getItemId</name></name><argument_list pos:line="198" pos:column="31">()</argument_list></call></expr>)</condition> <block pos:line="198" pos:column="35">{
            <case pos:line="199" pos:column="13">case <expr><name><name pos:line="199" pos:column="18">R</name><op:operator pos:line="199" pos:column="19">.</op:operator><name pos:line="199" pos:column="20">id</name><op:operator pos:line="199" pos:column="22">.</op:operator><name pos:line="199" pos:column="23">action_split_count</name></name></expr>:
                <expr_stmt><expr><call><name><name pos:line="200" pos:column="17">Dialog_Split</name><op:operator pos:line="200" pos:column="29">.</op:operator><name pos:line="200" pos:column="30">getDialog</name></name><argument_list pos:line="200" pos:column="39">(<argument><expr><call><name pos:line="200" pos:column="40">getActivity</name><argument_list pos:line="200" pos:column="51">()</argument_list></call></expr></argument>,
                        <argument><expr><name pos:line="201" pos:column="25">total_start</name> <op:operator pos:line="201" pos:column="37">+</op:operator> <call><name><name pos:line="201" pos:column="39">Math</name><op:operator pos:line="201" pos:column="43">.</op:operator><name pos:line="201" pos:column="44">max</name></name><argument_list pos:line="201" pos:column="47">(<argument><expr><name pos:line="201" pos:column="48">todayOffset</name> <op:operator pos:line="201" pos:column="60">+</op:operator> <name pos:line="201" pos:column="62">since_boot</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="201" pos:column="74">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="201" pos:column="77">.</op:operator><call><name pos:line="201" pos:column="78">show</name><argument_list pos:line="201" pos:column="82">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="202" pos:column="17">return <expr><lit:literal type="boolean" pos:line="202" pos:column="24">true</lit:literal></expr>;</return>
            </case><case pos:line="203" pos:column="13">case <expr><name><name pos:line="203" pos:column="18">R</name><op:operator pos:line="203" pos:column="19">.</op:operator><name pos:line="203" pos:column="20">id</name><op:operator pos:line="203" pos:column="22">.</op:operator><name pos:line="203" pos:column="23">action_pause</name></name></expr>:
                <decl_stmt><decl><type><name pos:line="204" pos:column="17">SensorManager</name></type> <name pos:line="204" pos:column="31">sm</name> <init pos:line="204" pos:column="34">=
                        <expr><op:operator pos:line="205" pos:column="25">(</op:operator><name pos:line="205" pos:column="26">SensorManager</name><op:operator pos:line="205" pos:column="39">)</op:operator> <call><name pos:line="205" pos:column="41">getActivity</name><argument_list pos:line="205" pos:column="52">()</argument_list></call><op:operator pos:line="205" pos:column="54">.</op:operator><call><name pos:line="205" pos:column="55">getSystemService</name><argument_list pos:line="205" pos:column="71">(<argument><expr><name><name pos:line="205" pos:column="72">Context</name><op:operator pos:line="205" pos:column="79">.</op:operator><name pos:line="205" pos:column="80">SENSOR_SERVICE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="206" pos:column="17">Drawable</name></type> <name pos:line="206" pos:column="26">d</name></decl>;</decl_stmt>
                <if pos:line="207" pos:column="17">if <condition pos:line="207" pos:column="20">(<expr><call><name pos:line="207" pos:column="21">getActivity</name><argument_list pos:line="207" pos:column="32">()</argument_list></call><op:operator pos:line="207" pos:column="34">.</op:operator><call><name pos:line="207" pos:column="35">getSharedPreferences</name><argument_list pos:line="207" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="207" pos:column="56">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="207" pos:column="69">Context</name><op:operator pos:line="207" pos:column="76">.</op:operator><name pos:line="207" pos:column="77">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call>
                        <op:operator pos:line="208" pos:column="25">.</op:operator><call><name pos:line="208" pos:column="26">contains</name><argument_list pos:line="208" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="208" pos:column="35">"pauseCount"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="208" pos:column="49"> <block pos:line="208" pos:column="50">{ <comment type="line" pos:line="208" pos:column="52">// currently paused -&gt; now resumed</comment>
                    <expr_stmt><expr><call><name><name pos:line="209" pos:column="21">sm</name><op:operator pos:line="209" pos:column="23">.</op:operator><name pos:line="209" pos:column="24">registerListener</name></name><argument_list pos:line="209" pos:column="40">(<argument><expr><name pos:line="209" pos:column="41">this</name></expr></argument>, <argument><expr><call><name><name pos:line="209" pos:column="47">sm</name><op:operator pos:line="209" pos:column="49">.</op:operator><name pos:line="209" pos:column="50">getDefaultSensor</name></name><argument_list pos:line="209" pos:column="66">(<argument><expr><name><name pos:line="209" pos:column="67">Sensor</name><op:operator pos:line="209" pos:column="73">.</op:operator><name pos:line="209" pos:column="74">TYPE_STEP_COUNTER</name></name></expr></argument>)</argument_list></call></expr></argument>,
                            <argument><expr><name><name pos:line="210" pos:column="29">SensorManager</name><op:operator pos:line="210" pos:column="42">.</op:operator><name pos:line="210" pos:column="43">SENSOR_DELAY_UI</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="210" pos:column="60">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="211" pos:column="21">item</name><op:operator pos:line="211" pos:column="25">.</op:operator><name pos:line="211" pos:column="26">setTitle</name></name><argument_list pos:line="211" pos:column="34">(<argument><expr><name><name pos:line="211" pos:column="35">R</name><op:operator pos:line="211" pos:column="36">.</op:operator><name pos:line="211" pos:column="37">string</name><op:operator pos:line="211" pos:column="43">.</op:operator><name pos:line="211" pos:column="44">pause</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="212" pos:column="21">d</name> <op:operator pos:line="212" pos:column="23">=</op:operator> <call><name pos:line="212" pos:column="25">getResources</name><argument_list pos:line="212" pos:column="37">()</argument_list></call><op:operator pos:line="212" pos:column="39">.</op:operator><call><name pos:line="212" pos:column="40">getDrawable</name><argument_list pos:line="212" pos:column="51">(<argument><expr><name><name pos:line="212" pos:column="52">R</name><op:operator pos:line="212" pos:column="53">.</op:operator><name pos:line="212" pos:column="54">drawable</name><op:operator pos:line="212" pos:column="62">.</op:operator><name pos:line="212" pos:column="63">ic_pause</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then> <else pos:line="213" pos:column="19">else <block pos:line="213" pos:column="24">{
                    <expr_stmt><expr><call><name><name pos:line="214" pos:column="21">sm</name><op:operator pos:line="214" pos:column="23">.</op:operator><name pos:line="214" pos:column="24">unregisterListener</name></name><argument_list pos:line="214" pos:column="42">(<argument><expr><name pos:line="214" pos:column="43">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="215" pos:column="21">item</name><op:operator pos:line="215" pos:column="25">.</op:operator><name pos:line="215" pos:column="26">setTitle</name></name><argument_list pos:line="215" pos:column="34">(<argument><expr><name><name pos:line="215" pos:column="35">R</name><op:operator pos:line="215" pos:column="36">.</op:operator><name pos:line="215" pos:column="37">string</name><op:operator pos:line="215" pos:column="43">.</op:operator><name pos:line="215" pos:column="44">resume</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="216" pos:column="21">d</name> <op:operator pos:line="216" pos:column="23">=</op:operator> <call><name pos:line="216" pos:column="25">getResources</name><argument_list pos:line="216" pos:column="37">()</argument_list></call><op:operator pos:line="216" pos:column="39">.</op:operator><call><name pos:line="216" pos:column="40">getDrawable</name><argument_list pos:line="216" pos:column="51">(<argument><expr><name><name pos:line="216" pos:column="52">R</name><op:operator pos:line="216" pos:column="53">.</op:operator><name pos:line="216" pos:column="54">drawable</name><op:operator pos:line="216" pos:column="62">.</op:operator><name pos:line="216" pos:column="63">ic_resume</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <expr_stmt><expr><call><name><name pos:line="218" pos:column="17">d</name><op:operator pos:line="218" pos:column="18">.</op:operator><name pos:line="218" pos:column="19">setColorFilter</name></name><argument_list pos:line="218" pos:column="33">(<argument><expr><name><name pos:line="218" pos:column="34">Color</name><op:operator pos:line="218" pos:column="39">.</op:operator><name pos:line="218" pos:column="40">WHITE</name></name></expr></argument>, <argument><expr><name><name pos:line="218" pos:column="47">PorterDuff</name><op:operator pos:line="218" pos:column="57">.</op:operator><name pos:line="218" pos:column="58">Mode</name><op:operator pos:line="218" pos:column="62">.</op:operator><name pos:line="218" pos:column="63">SRC_ATOP</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="219" pos:column="17">item</name><op:operator pos:line="219" pos:column="21">.</op:operator><name pos:line="219" pos:column="22">setIcon</name></name><argument_list pos:line="219" pos:column="29">(<argument><expr><name pos:line="219" pos:column="30">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="220" pos:column="17">getActivity</name><argument_list pos:line="220" pos:column="28">()</argument_list></call><op:operator pos:line="220" pos:column="30">.</op:operator><call><name pos:line="220" pos:column="31">startService</name><argument_list pos:line="220" pos:column="43">(<argument><expr><op:operator pos:line="220" pos:column="44">new</op:operator> <call><name pos:line="220" pos:column="48">Intent</name><argument_list pos:line="220" pos:column="54">(<argument><expr><call><name pos:line="220" pos:column="55">getActivity</name><argument_list pos:line="220" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="220" pos:column="70">SensorListener</name><op:operator pos:line="220" pos:column="84">.</op:operator><name pos:line="220" pos:column="85">class</name></name></expr></argument>)</argument_list></call>
                        <op:operator pos:line="221" pos:column="25">.</op:operator><call><name pos:line="221" pos:column="26">putExtra</name><argument_list pos:line="221" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="221" pos:column="35">"action"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="221" pos:column="45">SensorListener</name><op:operator pos:line="221" pos:column="59">.</op:operator><name pos:line="221" pos:column="60">ACTION_PAUSE</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="222" pos:column="17">return <expr><lit:literal type="boolean" pos:line="222" pos:column="24">true</lit:literal></expr>;</return>
            </case><default pos:line="223" pos:column="13">default:
                <return pos:line="224" pos:column="17">return <expr><op:operator pos:line="224" pos:column="24">(</op:operator><op:operator pos:line="224" pos:column="25">(</op:operator><name pos:line="224" pos:column="26">Activity_Main</name><op:operator pos:line="224" pos:column="39">)</op:operator> <call><name pos:line="224" pos:column="41">getActivity</name><argument_list pos:line="224" pos:column="52">()</argument_list></call><op:operator pos:line="224" pos:column="54">)</op:operator><op:operator pos:line="224" pos:column="55">.</op:operator><call><name pos:line="224" pos:column="56">optionsItemSelected</name><argument_list pos:line="224" pos:column="75">(<argument><expr><name pos:line="224" pos:column="76">item</name></expr></argument>)</argument_list></call></expr>;</return>
        </default>}</block></switch>
    }</block></function>

    <function><type><annotation pos:line="228" pos:column="5">@<name pos:line="228" pos:column="6">Override</name></annotation>
    <specifier pos:line="229" pos:column="5">public</specifier> <name pos:line="229" pos:column="12">void</name></type> <name pos:line="229" pos:column="17">onAccuracyChanged</name><parameter_list pos:line="229" pos:column="34">(<param><decl><type><specifier pos:line="229" pos:column="35">final</specifier> <name pos:line="229" pos:column="41">Sensor</name></type> <name pos:line="229" pos:column="48">sensor</name></decl></param>, <param><decl><type><name pos:line="229" pos:column="56">int</name></type> <name pos:line="229" pos:column="60">accuracy</name></decl></param>)</parameter_list> <block pos:line="229" pos:column="70">{
        <comment type="line" pos:line="230" pos:column="9">// won't happen</comment>
    }</block></function>

    <function><type><annotation pos:line="233" pos:column="5">@<name pos:line="233" pos:column="6">Override</name></annotation>
    <specifier pos:line="234" pos:column="5">public</specifier> <name pos:line="234" pos:column="12">void</name></type> <name pos:line="234" pos:column="17">onSensorChanged</name><parameter_list pos:line="234" pos:column="32">(<param><decl><type><specifier pos:line="234" pos:column="33">final</specifier> <name pos:line="234" pos:column="39">SensorEvent</name></type> <name pos:line="234" pos:column="51">event</name></decl></param>)</parameter_list> <block pos:line="234" pos:column="58">{
        <if pos:line="235" pos:column="9">if <condition pos:line="235" pos:column="12">(<expr><name><name pos:line="235" pos:column="13">BuildConfig</name><op:operator pos:line="235" pos:column="24">.</op:operator><name pos:line="235" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="235" pos:column="31">
            <expr_stmt><expr><call><name><name pos:line="236" pos:column="13">Logger</name><op:operator pos:line="236" pos:column="19">.</op:operator><name pos:line="236" pos:column="20">log</name></name><argument_list pos:line="236" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="236" pos:column="24">"UI - sensorChanged | todayOffset: "</lit:literal> <op:operator pos:line="236" pos:column="61">+</op:operator> <name pos:line="236" pos:column="63">todayOffset</name> <op:operator pos:line="236" pos:column="75">+</op:operator> <lit:literal type="string" pos:line="236" pos:column="77">" since boot: "</lit:literal> <op:operator pos:line="236" pos:column="93">+</op:operator>
                    <name><name pos:line="237" pos:column="21">event</name><op:operator pos:line="237" pos:column="26">.</op:operator><name pos:line="237" pos:column="27">values</name><index pos:line="237" pos:column="33">[<expr><lit:literal type="number" pos:line="237" pos:column="34">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <if pos:line="238" pos:column="9">if <condition pos:line="238" pos:column="12">(<expr><name><name pos:line="238" pos:column="13">event</name><op:operator pos:line="238" pos:column="18">.</op:operator><name pos:line="238" pos:column="19">values</name><index pos:line="238" pos:column="25">[<expr><lit:literal type="number" pos:line="238" pos:column="26">0</lit:literal></expr>]</index></name> <op:operator pos:line="238" pos:column="29">&gt;</op:operator> <name><name pos:line="238" pos:column="31">Integer</name><op:operator pos:line="238" pos:column="38">.</op:operator><name pos:line="238" pos:column="39">MAX_VALUE</name></name> <op:operator pos:line="238" pos:column="49">||</op:operator> <name><name pos:line="238" pos:column="52">event</name><op:operator pos:line="238" pos:column="57">.</op:operator><name pos:line="238" pos:column="58">values</name><index pos:line="238" pos:column="64">[<expr><lit:literal type="number" pos:line="238" pos:column="65">0</lit:literal></expr>]</index></name> <op:operator pos:line="238" pos:column="68">==</op:operator> <lit:literal type="number" pos:line="238" pos:column="71">0</lit:literal></expr>)</condition><then pos:line="238" pos:column="73"> <block pos:line="238" pos:column="74">{
            <return pos:line="239" pos:column="13">return;</return>
        }</block></then></if>
        <if pos:line="241" pos:column="9">if <condition pos:line="241" pos:column="12">(<expr><name pos:line="241" pos:column="13">todayOffset</name> <op:operator pos:line="241" pos:column="25">==</op:operator> <name><name pos:line="241" pos:column="28">Integer</name><op:operator pos:line="241" pos:column="35">.</op:operator><name pos:line="241" pos:column="36">MIN_VALUE</name></name></expr>)</condition><then pos:line="241" pos:column="46"> <block pos:line="241" pos:column="47">{
            <comment type="line" pos:line="242" pos:column="13">// no values for today</comment>
            <comment type="line" pos:line="243" pos:column="13">// we dont know when the reboot was, so set todays steps to 0 by</comment>
            <comment type="line" pos:line="244" pos:column="13">// initializing them with -STEPS_SINCE_BOOT</comment>
            <expr_stmt><expr><name pos:line="245" pos:column="13">todayOffset</name> <op:operator pos:line="245" pos:column="25">=</op:operator> <op:operator pos:line="245" pos:column="27">-</op:operator><op:operator pos:line="245" pos:column="28">(</op:operator><name pos:line="245" pos:column="29">int</name><op:operator pos:line="245" pos:column="32">)</op:operator> <name><name pos:line="245" pos:column="34">event</name><op:operator pos:line="245" pos:column="39">.</op:operator><name pos:line="245" pos:column="40">values</name><index pos:line="245" pos:column="46">[<expr><lit:literal type="number" pos:line="245" pos:column="47">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="246" pos:column="13">Database</name></type> <name pos:line="246" pos:column="22">db</name> <init pos:line="246" pos:column="25">= <expr><call><name><name pos:line="246" pos:column="27">Database</name><op:operator pos:line="246" pos:column="35">.</op:operator><name pos:line="246" pos:column="36">getInstance</name></name><argument_list pos:line="246" pos:column="47">(<argument><expr><call><name pos:line="246" pos:column="48">getActivity</name><argument_list pos:line="246" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="247" pos:column="13">db</name><op:operator pos:line="247" pos:column="15">.</op:operator><name pos:line="247" pos:column="16">insertNewDay</name></name><argument_list pos:line="247" pos:column="28">(<argument><expr><call><name><name pos:line="247" pos:column="29">Util</name><op:operator pos:line="247" pos:column="33">.</op:operator><name pos:line="247" pos:column="34">getToday</name></name><argument_list pos:line="247" pos:column="42">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="247" pos:column="46">(</op:operator><name pos:line="247" pos:column="47">int</name><op:operator pos:line="247" pos:column="50">)</op:operator> <name><name pos:line="247" pos:column="52">event</name><op:operator pos:line="247" pos:column="57">.</op:operator><name pos:line="247" pos:column="58">values</name><index pos:line="247" pos:column="64">[<expr><lit:literal type="number" pos:line="247" pos:column="65">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="248" pos:column="13">db</name><op:operator pos:line="248" pos:column="15">.</op:operator><name pos:line="248" pos:column="16">close</name></name><argument_list pos:line="248" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="250" pos:column="9">since_boot</name> <op:operator pos:line="250" pos:column="20">=</op:operator> <op:operator pos:line="250" pos:column="22">(</op:operator><name pos:line="250" pos:column="23">int</name><op:operator pos:line="250" pos:column="26">)</op:operator> <name><name pos:line="250" pos:column="28">event</name><op:operator pos:line="250" pos:column="33">.</op:operator><name pos:line="250" pos:column="34">values</name><index pos:line="250" pos:column="40">[<expr><lit:literal type="number" pos:line="250" pos:column="41">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="251" pos:column="9">updatePie</name><argument_list pos:line="251" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="254" pos:column="5">/**
     * Updates the pie graph to show todays steps/distance as well as the
     * yesterday and total values. Should be called when switching from step
     * count to distance.
     */</comment>
    <function><type><specifier pos:line="259" pos:column="5">private</specifier> <name pos:line="259" pos:column="13">void</name></type> <name pos:line="259" pos:column="18">updatePie</name><parameter_list pos:line="259" pos:column="27">()</parameter_list> <block pos:line="259" pos:column="30">{
        <if pos:line="260" pos:column="9">if <condition pos:line="260" pos:column="12">(<expr><name><name pos:line="260" pos:column="13">BuildConfig</name><op:operator pos:line="260" pos:column="24">.</op:operator><name pos:line="260" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="260" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="260" pos:column="32">Logger</name><op:operator pos:line="260" pos:column="38">.</op:operator><name pos:line="260" pos:column="39">log</name></name><argument_list pos:line="260" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="260" pos:column="43">"UI - update steps: "</lit:literal> <op:operator pos:line="260" pos:column="65">+</op:operator> <name pos:line="260" pos:column="67">since_boot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <comment type="line" pos:line="261" pos:column="9">// todayOffset might still be Integer.MIN_VALUE on first start</comment>
        <decl_stmt><decl><type><name pos:line="262" pos:column="9">int</name></type> <name pos:line="262" pos:column="13">steps_today</name> <init pos:line="262" pos:column="25">= <expr><call><name><name pos:line="262" pos:column="27">Math</name><op:operator pos:line="262" pos:column="31">.</op:operator><name pos:line="262" pos:column="32">max</name></name><argument_list pos:line="262" pos:column="35">(<argument><expr><name pos:line="262" pos:column="36">todayOffset</name> <op:operator pos:line="262" pos:column="48">+</op:operator> <name pos:line="262" pos:column="50">since_boot</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="262" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="263" pos:column="9">sliceCurrent</name><op:operator pos:line="263" pos:column="21">.</op:operator><name pos:line="263" pos:column="22">setValue</name></name><argument_list pos:line="263" pos:column="30">(<argument><expr><name pos:line="263" pos:column="31">steps_today</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="264" pos:column="9">if <condition pos:line="264" pos:column="12">(<expr><name pos:line="264" pos:column="13">goal</name> <op:operator pos:line="264" pos:column="18">-</op:operator> <name pos:line="264" pos:column="20">steps_today</name> <op:operator pos:line="264" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="264" pos:column="34">0</lit:literal></expr>)</condition><then pos:line="264" pos:column="36"> <block pos:line="264" pos:column="37">{
            <comment type="line" pos:line="265" pos:column="13">// goal not reached yet</comment>
            <if pos:line="266" pos:column="13">if <condition pos:line="266" pos:column="16">(<expr><call><name><name pos:line="266" pos:column="17">pg</name><op:operator pos:line="266" pos:column="19">.</op:operator><name pos:line="266" pos:column="20">getData</name></name><argument_list pos:line="266" pos:column="27">()</argument_list></call><op:operator pos:line="266" pos:column="29">.</op:operator><call><name pos:line="266" pos:column="30">size</name><argument_list pos:line="266" pos:column="34">()</argument_list></call> <op:operator pos:line="266" pos:column="37">==</op:operator> <lit:literal type="number" pos:line="266" pos:column="40">1</lit:literal></expr>)</condition><then pos:line="266" pos:column="42"> <block pos:line="266" pos:column="43">{
                <comment type="line" pos:line="267" pos:column="17">// can happen if the goal value was changed: old goal value was</comment>
                <comment type="line" pos:line="268" pos:column="17">// reached but now there are some steps missing for the new goal</comment>
                <expr_stmt><expr><call><name><name pos:line="269" pos:column="17">pg</name><op:operator pos:line="269" pos:column="19">.</op:operator><name pos:line="269" pos:column="20">addPieSlice</name></name><argument_list pos:line="269" pos:column="31">(<argument><expr><name pos:line="269" pos:column="32">sliceGoal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="271" pos:column="13">sliceGoal</name><op:operator pos:line="271" pos:column="22">.</op:operator><name pos:line="271" pos:column="23">setValue</name></name><argument_list pos:line="271" pos:column="31">(<argument><expr><name pos:line="271" pos:column="32">goal</name> <op:operator pos:line="271" pos:column="37">-</op:operator> <name pos:line="271" pos:column="39">steps_today</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="272" pos:column="11">else <block pos:line="272" pos:column="16">{
            <comment type="line" pos:line="273" pos:column="13">// goal reached</comment>
            <expr_stmt><expr><call><name><name pos:line="274" pos:column="13">pg</name><op:operator pos:line="274" pos:column="15">.</op:operator><name pos:line="274" pos:column="16">clearChart</name></name><argument_list pos:line="274" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="275" pos:column="13">pg</name><op:operator pos:line="275" pos:column="15">.</op:operator><name pos:line="275" pos:column="16">addPieSlice</name></name><argument_list pos:line="275" pos:column="27">(<argument><expr><name pos:line="275" pos:column="28">sliceCurrent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
        <expr_stmt><expr><call><name><name pos:line="277" pos:column="9">pg</name><op:operator pos:line="277" pos:column="11">.</op:operator><name pos:line="277" pos:column="12">update</name></name><argument_list pos:line="277" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="278" pos:column="9">if <condition pos:line="278" pos:column="12">(<expr><name pos:line="278" pos:column="13">showSteps</name></expr>)</condition><then pos:line="278" pos:column="23"> <block pos:line="278" pos:column="24">{
            <expr_stmt><expr><call><name><name pos:line="279" pos:column="13">stepsView</name><op:operator pos:line="279" pos:column="22">.</op:operator><name pos:line="279" pos:column="23">setText</name></name><argument_list pos:line="279" pos:column="30">(<argument><expr><call><name><name pos:line="279" pos:column="31">formatter</name><op:operator pos:line="279" pos:column="40">.</op:operator><name pos:line="279" pos:column="41">format</name></name><argument_list pos:line="279" pos:column="47">(<argument><expr><name pos:line="279" pos:column="48">steps_today</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="280" pos:column="13">totalView</name><op:operator pos:line="280" pos:column="22">.</op:operator><name pos:line="280" pos:column="23">setText</name></name><argument_list pos:line="280" pos:column="30">(<argument><expr><call><name><name pos:line="280" pos:column="31">formatter</name><op:operator pos:line="280" pos:column="40">.</op:operator><name pos:line="280" pos:column="41">format</name></name><argument_list pos:line="280" pos:column="47">(<argument><expr><name pos:line="280" pos:column="48">total_start</name> <op:operator pos:line="280" pos:column="60">+</op:operator> <name pos:line="280" pos:column="62">steps_today</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="281" pos:column="13">averageView</name><op:operator pos:line="281" pos:column="24">.</op:operator><name pos:line="281" pos:column="25">setText</name></name><argument_list pos:line="281" pos:column="32">(<argument><expr><call><name><name pos:line="281" pos:column="33">formatter</name><op:operator pos:line="281" pos:column="42">.</op:operator><name pos:line="281" pos:column="43">format</name></name><argument_list pos:line="281" pos:column="49">(<argument><expr><op:operator pos:line="281" pos:column="50">(</op:operator><name pos:line="281" pos:column="51">total_start</name> <op:operator pos:line="281" pos:column="63">+</op:operator> <name pos:line="281" pos:column="65">steps_today</name><op:operator pos:line="281" pos:column="76">)</op:operator> <op:operator pos:line="281" pos:column="78">/</op:operator> <name pos:line="281" pos:column="80">total_days</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="282" pos:column="11">else <block pos:line="282" pos:column="16">{
            <comment type="line" pos:line="283" pos:column="13">// update only every 10 steps when displaying distance</comment>
            <decl_stmt><decl><type><name pos:line="284" pos:column="13">SharedPreferences</name></type> <name pos:line="284" pos:column="31">prefs</name> <init pos:line="284" pos:column="37">=
                    <expr><call><name pos:line="285" pos:column="21">getActivity</name><argument_list pos:line="285" pos:column="32">()</argument_list></call><op:operator pos:line="285" pos:column="34">.</op:operator><call><name pos:line="285" pos:column="35">getSharedPreferences</name><argument_list pos:line="285" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="285" pos:column="56">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="285" pos:column="69">Context</name><op:operator pos:line="285" pos:column="76">.</op:operator><name pos:line="285" pos:column="77">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="286" pos:column="13">float</name></type> <name pos:line="286" pos:column="19">stepsize</name> <init pos:line="286" pos:column="28">= <expr><call><name><name pos:line="286" pos:column="30">prefs</name><op:operator pos:line="286" pos:column="35">.</op:operator><name pos:line="286" pos:column="36">getFloat</name></name><argument_list pos:line="286" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="286" pos:column="45">"stepsize_value"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="286" pos:column="63">Fragment_Settings</name><op:operator pos:line="286" pos:column="80">.</op:operator><name pos:line="286" pos:column="81">DEFAULT_STEP_SIZE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="287" pos:column="13">float</name></type> <name pos:line="287" pos:column="19">distance_today</name> <init pos:line="287" pos:column="34">= <expr><name pos:line="287" pos:column="36">steps_today</name> <op:operator pos:line="287" pos:column="48">*</op:operator> <name pos:line="287" pos:column="50">stepsize</name></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="288" pos:column="13">float</name></type> <name pos:line="288" pos:column="19">distance_total</name> <init pos:line="288" pos:column="34">= <expr><op:operator pos:line="288" pos:column="36">(</op:operator><name pos:line="288" pos:column="37">total_start</name> <op:operator pos:line="288" pos:column="49">+</op:operator> <name pos:line="288" pos:column="51">steps_today</name><op:operator pos:line="288" pos:column="62">)</op:operator> <op:operator pos:line="288" pos:column="64">*</op:operator> <name pos:line="288" pos:column="66">stepsize</name></expr></init></decl>;</decl_stmt>
            <if pos:line="289" pos:column="13">if <condition pos:line="289" pos:column="16">(<expr><call><name><name pos:line="289" pos:column="17">prefs</name><op:operator pos:line="289" pos:column="22">.</op:operator><name pos:line="289" pos:column="23">getString</name></name><argument_list pos:line="289" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="289" pos:column="33">"stepsize_unit"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="289" pos:column="50">Fragment_Settings</name><op:operator pos:line="289" pos:column="67">.</op:operator><name pos:line="289" pos:column="68">DEFAULT_STEP_UNIT</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="290" pos:column="21">.</op:operator><call><name pos:line="290" pos:column="22">equals</name><argument_list pos:line="290" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="290" pos:column="29">"cm"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="290" pos:column="35"> <block pos:line="290" pos:column="36">{
                <expr_stmt><expr><name pos:line="291" pos:column="17">distance_today</name> <op:operator pos:line="291" pos:column="32">/=</op:operator> <lit:literal type="number" pos:line="291" pos:column="35">100000</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="292" pos:column="17">distance_total</name> <op:operator pos:line="292" pos:column="32">/=</op:operator> <lit:literal type="number" pos:line="292" pos:column="35">100000</lit:literal></expr>;</expr_stmt>
            }</block></then> <else pos:line="293" pos:column="15">else <block pos:line="293" pos:column="20">{
                <expr_stmt><expr><name pos:line="294" pos:column="17">distance_today</name> <op:operator pos:line="294" pos:column="32">/=</op:operator> <lit:literal type="number" pos:line="294" pos:column="35">5280</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="295" pos:column="17">distance_total</name> <op:operator pos:line="295" pos:column="32">/=</op:operator> <lit:literal type="number" pos:line="295" pos:column="35">5280</lit:literal></expr>;</expr_stmt>
            }</block></else></if>
            <expr_stmt><expr><call><name><name pos:line="297" pos:column="13">stepsView</name><op:operator pos:line="297" pos:column="22">.</op:operator><name pos:line="297" pos:column="23">setText</name></name><argument_list pos:line="297" pos:column="30">(<argument><expr><call><name><name pos:line="297" pos:column="31">formatter</name><op:operator pos:line="297" pos:column="40">.</op:operator><name pos:line="297" pos:column="41">format</name></name><argument_list pos:line="297" pos:column="47">(<argument><expr><name pos:line="297" pos:column="48">distance_today</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="298" pos:column="13">totalView</name><op:operator pos:line="298" pos:column="22">.</op:operator><name pos:line="298" pos:column="23">setText</name></name><argument_list pos:line="298" pos:column="30">(<argument><expr><call><name><name pos:line="298" pos:column="31">formatter</name><op:operator pos:line="298" pos:column="40">.</op:operator><name pos:line="298" pos:column="41">format</name></name><argument_list pos:line="298" pos:column="47">(<argument><expr><name pos:line="298" pos:column="48">distance_total</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="299" pos:column="13">averageView</name><op:operator pos:line="299" pos:column="24">.</op:operator><name pos:line="299" pos:column="25">setText</name></name><argument_list pos:line="299" pos:column="32">(<argument><expr><call><name><name pos:line="299" pos:column="33">formatter</name><op:operator pos:line="299" pos:column="42">.</op:operator><name pos:line="299" pos:column="43">format</name></name><argument_list pos:line="299" pos:column="49">(<argument><expr><name pos:line="299" pos:column="50">distance_total</name> <op:operator pos:line="299" pos:column="65">/</op:operator> <name pos:line="299" pos:column="67">total_days</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="303" pos:column="5">/**
     * Updates the bar graph to show the steps/distance of the last week. Should
     * be called when switching from step count to distance.
     */</comment>
    <function><type><specifier pos:line="307" pos:column="5">private</specifier> <name pos:line="307" pos:column="13">void</name></type> <name pos:line="307" pos:column="18">updateBars</name><parameter_list pos:line="307" pos:column="28">()</parameter_list> <block pos:line="307" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="308" pos:column="9">Database</name></type> <name pos:line="308" pos:column="18">db</name> <init pos:line="308" pos:column="21">= <expr><call><name><name pos:line="308" pos:column="23">Database</name><op:operator pos:line="308" pos:column="31">.</op:operator><name pos:line="308" pos:column="32">getInstance</name></name><argument_list pos:line="308" pos:column="43">(<argument><expr><call><name pos:line="308" pos:column="44">getActivity</name><argument_list pos:line="308" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="309" pos:column="9">Calendar</name></type> <name pos:line="309" pos:column="18">yesterday</name> <init pos:line="309" pos:column="28">= <expr><call><name><name pos:line="309" pos:column="30">Calendar</name><op:operator pos:line="309" pos:column="38">.</op:operator><name pos:line="309" pos:column="39">getInstance</name></name><argument_list pos:line="309" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="310" pos:column="9">yesterday</name><op:operator pos:line="310" pos:column="18">.</op:operator><name pos:line="310" pos:column="19">setTimeInMillis</name></name><argument_list pos:line="310" pos:column="34">(<argument><expr><call><name><name pos:line="310" pos:column="35">Util</name><op:operator pos:line="310" pos:column="39">.</op:operator><name pos:line="310" pos:column="40">getToday</name></name><argument_list pos:line="310" pos:column="48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="311" pos:column="9">yesterday</name><op:operator pos:line="311" pos:column="18">.</op:operator><name pos:line="311" pos:column="19">add</name></name><argument_list pos:line="311" pos:column="22">(<argument><expr><name><name pos:line="311" pos:column="23">Calendar</name><op:operator pos:line="311" pos:column="31">.</op:operator><name pos:line="311" pos:column="32">DAY_OF_YEAR</name></name></expr></argument>, <argument><expr><op:operator pos:line="311" pos:column="45">-</op:operator><lit:literal type="number" pos:line="311" pos:column="46">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="312" pos:column="9">BarChart</name></type> <name pos:line="312" pos:column="18">barChart</name> <init pos:line="312" pos:column="27">= <expr><op:operator pos:line="312" pos:column="29">(</op:operator><name pos:line="312" pos:column="30">BarChart</name><op:operator pos:line="312" pos:column="38">)</op:operator> <call><name pos:line="312" pos:column="40">getView</name><argument_list pos:line="312" pos:column="47">()</argument_list></call><op:operator pos:line="312" pos:column="49">.</op:operator><call><name pos:line="312" pos:column="50">findViewById</name><argument_list pos:line="312" pos:column="62">(<argument><expr><name><name pos:line="312" pos:column="63">R</name><op:operator pos:line="312" pos:column="64">.</op:operator><name pos:line="312" pos:column="65">id</name><op:operator pos:line="312" pos:column="67">.</op:operator><name pos:line="312" pos:column="68">bargraph</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="313" pos:column="9">if <condition pos:line="313" pos:column="12">(<expr><call><name><name pos:line="313" pos:column="13">barChart</name><op:operator pos:line="313" pos:column="21">.</op:operator><name pos:line="313" pos:column="22">getData</name></name><argument_list pos:line="313" pos:column="29">()</argument_list></call><op:operator pos:line="313" pos:column="31">.</op:operator><call><name pos:line="313" pos:column="32">size</name><argument_list pos:line="313" pos:column="36">()</argument_list></call> <op:operator pos:line="313" pos:column="39">&gt;</op:operator> <lit:literal type="number" pos:line="313" pos:column="41">0</lit:literal></expr>)</condition><then pos:line="313" pos:column="43"> <expr_stmt><expr><call><name><name pos:line="313" pos:column="44">barChart</name><op:operator pos:line="313" pos:column="52">.</op:operator><name pos:line="313" pos:column="53">clearChart</name></name><argument_list pos:line="313" pos:column="63">()</argument_list></call></expr>;</expr_stmt></then></if>
        <decl_stmt><decl><type><name pos:line="314" pos:column="9">SimpleDateFormat</name></type> <name pos:line="314" pos:column="26">df</name> <init pos:line="314" pos:column="29">= <expr><op:operator pos:line="314" pos:column="31">new</op:operator> <call><name pos:line="314" pos:column="35">SimpleDateFormat</name><argument_list pos:line="314" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="314" pos:column="52">"E"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="314" pos:column="57">Locale</name><op:operator pos:line="314" pos:column="63">.</op:operator><name pos:line="314" pos:column="64">getDefault</name></name><argument_list pos:line="314" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="315" pos:column="9">yesterday</name><op:operator pos:line="315" pos:column="18">.</op:operator><name pos:line="315" pos:column="19">add</name></name><argument_list pos:line="315" pos:column="22">(<argument><expr><name><name pos:line="315" pos:column="23">Calendar</name><op:operator pos:line="315" pos:column="31">.</op:operator><name pos:line="315" pos:column="32">DAY_OF_YEAR</name></name></expr></argument>, <argument><expr><op:operator pos:line="315" pos:column="45">-</op:operator><lit:literal type="number" pos:line="315" pos:column="46">6</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="316" pos:column="9">int</name></type> <name pos:line="316" pos:column="13">steps</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="317" pos:column="9">float</name></type> <name pos:line="317" pos:column="15">distance</name></decl><op:operator pos:line="317" pos:column="23">,</op:operator> <decl><type ref="prev"/><name pos:line="317" pos:column="25">stepsize</name> <init pos:line="317" pos:column="34">= <expr><name><name pos:line="317" pos:column="36">Fragment_Settings</name><op:operator pos:line="317" pos:column="53">.</op:operator><name pos:line="317" pos:column="54">DEFAULT_STEP_SIZE</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="318" pos:column="9">boolean</name></type> <name pos:line="318" pos:column="17">stepsize_cm</name> <init pos:line="318" pos:column="29">= <expr><lit:literal type="boolean" pos:line="318" pos:column="31">true</lit:literal></expr></init></decl>;</decl_stmt>
        <if pos:line="319" pos:column="9">if <condition pos:line="319" pos:column="12">(<expr><op:operator pos:line="319" pos:column="13">!</op:operator><name pos:line="319" pos:column="14">showSteps</name></expr>)</condition><then pos:line="319" pos:column="24"> <block pos:line="319" pos:column="25">{
            <comment type="line" pos:line="320" pos:column="13">// load some more settings if distance is needed</comment>
            <decl_stmt><decl><type><name pos:line="321" pos:column="13">SharedPreferences</name></type> <name pos:line="321" pos:column="31">prefs</name> <init pos:line="321" pos:column="37">=
                    <expr><call><name pos:line="322" pos:column="21">getActivity</name><argument_list pos:line="322" pos:column="32">()</argument_list></call><op:operator pos:line="322" pos:column="34">.</op:operator><call><name pos:line="322" pos:column="35">getSharedPreferences</name><argument_list pos:line="322" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="322" pos:column="56">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="322" pos:column="69">Context</name><op:operator pos:line="322" pos:column="76">.</op:operator><name pos:line="322" pos:column="77">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name pos:line="323" pos:column="13">stepsize</name> <op:operator pos:line="323" pos:column="22">=</op:operator> <call><name><name pos:line="323" pos:column="24">prefs</name><op:operator pos:line="323" pos:column="29">.</op:operator><name pos:line="323" pos:column="30">getFloat</name></name><argument_list pos:line="323" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="323" pos:column="39">"stepsize_value"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="323" pos:column="57">Fragment_Settings</name><op:operator pos:line="323" pos:column="74">.</op:operator><name pos:line="323" pos:column="75">DEFAULT_STEP_SIZE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="324" pos:column="13">stepsize_cm</name> <op:operator pos:line="324" pos:column="25">=</op:operator> <call><name><name pos:line="324" pos:column="27">prefs</name><op:operator pos:line="324" pos:column="32">.</op:operator><name pos:line="324" pos:column="33">getString</name></name><argument_list pos:line="324" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="324" pos:column="43">"stepsize_unit"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="324" pos:column="60">Fragment_Settings</name><op:operator pos:line="324" pos:column="77">.</op:operator><name pos:line="324" pos:column="78">DEFAULT_STEP_UNIT</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="325" pos:column="21">.</op:operator><call><name pos:line="325" pos:column="22">equals</name><argument_list pos:line="325" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="325" pos:column="29">"cm"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><call><name><name pos:line="327" pos:column="9">barChart</name><op:operator pos:line="327" pos:column="17">.</op:operator><name pos:line="327" pos:column="18">setShowDecimal</name></name><argument_list pos:line="327" pos:column="32">(<argument><expr><op:operator pos:line="327" pos:column="33">!</op:operator><name pos:line="327" pos:column="34">showSteps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="327" pos:column="46">// show decimal in distance view only</comment>
        <decl_stmt><decl><type><name pos:line="328" pos:column="9">BarModel</name></type> <name pos:line="328" pos:column="18">bm</name></decl>;</decl_stmt>
        <for pos:line="329" pos:column="9">for (<init><decl><type><name pos:line="329" pos:column="14">int</name></type> <name pos:line="329" pos:column="18">i</name> <init pos:line="329" pos:column="20">= <expr><lit:literal type="number" pos:line="329" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="329" pos:column="25">i</name> <op:operator pos:line="329" pos:column="27">&lt;</op:operator> <lit:literal type="number" pos:line="329" pos:column="29">7</lit:literal></expr>;</condition> <incr><expr><name pos:line="329" pos:column="32">i</name><op:operator pos:line="329" pos:column="33">++</op:operator></expr></incr>) <block pos:line="329" pos:column="37">{
            <expr_stmt><expr><name pos:line="330" pos:column="13">steps</name> <op:operator pos:line="330" pos:column="19">=</op:operator> <call><name><name pos:line="330" pos:column="21">db</name><op:operator pos:line="330" pos:column="23">.</op:operator><name pos:line="330" pos:column="24">getSteps</name></name><argument_list pos:line="330" pos:column="32">(<argument><expr><call><name><name pos:line="330" pos:column="33">yesterday</name><op:operator pos:line="330" pos:column="42">.</op:operator><name pos:line="330" pos:column="43">getTimeInMillis</name></name><argument_list pos:line="330" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="331" pos:column="13">if <condition pos:line="331" pos:column="16">(<expr><name pos:line="331" pos:column="17">steps</name> <op:operator pos:line="331" pos:column="23">&gt;</op:operator> <lit:literal type="number" pos:line="331" pos:column="25">0</lit:literal></expr>)</condition><then pos:line="331" pos:column="27"> <block pos:line="331" pos:column="28">{
                <expr_stmt><expr><name pos:line="332" pos:column="17">bm</name> <op:operator pos:line="332" pos:column="20">=</op:operator> <op:operator pos:line="332" pos:column="22">new</op:operator> <call><name pos:line="332" pos:column="26">BarModel</name><argument_list pos:line="332" pos:column="34">(<argument><expr><call><name><name pos:line="332" pos:column="35">df</name><op:operator pos:line="332" pos:column="37">.</op:operator><name pos:line="332" pos:column="38">format</name></name><argument_list pos:line="332" pos:column="44">(<argument><expr><op:operator pos:line="332" pos:column="45">new</op:operator> <call><name pos:line="332" pos:column="49">Date</name><argument_list pos:line="332" pos:column="53">(<argument><expr><call><name><name pos:line="332" pos:column="54">yesterday</name><op:operator pos:line="332" pos:column="63">.</op:operator><name pos:line="332" pos:column="64">getTimeInMillis</name></name><argument_list pos:line="332" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="332" pos:column="85">0</lit:literal></expr></argument>,
                        <argument><expr><name pos:line="333" pos:column="25">steps</name> <op:operator pos:line="333" pos:column="31">&gt;</op:operator> <name pos:line="333" pos:column="33">goal</name> <op:operator pos:line="333" pos:column="38">?</op:operator> <call><name><name pos:line="333" pos:column="40">Color</name><op:operator pos:line="333" pos:column="45">.</op:operator><name pos:line="333" pos:column="46">parseColor</name></name><argument_list pos:line="333" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="333" pos:column="57">"#99CC00"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="333" pos:column="68">:</op:operator> <call><name><name pos:line="333" pos:column="70">Color</name><op:operator pos:line="333" pos:column="75">.</op:operator><name pos:line="333" pos:column="76">parseColor</name></name><argument_list pos:line="333" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="333" pos:column="87">"#0099cc"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="334" pos:column="17">if <condition pos:line="334" pos:column="20">(<expr><name pos:line="334" pos:column="21">showSteps</name></expr>)</condition><then pos:line="334" pos:column="31"> <block pos:line="334" pos:column="32">{
                    <expr_stmt><expr><call><name><name pos:line="335" pos:column="21">bm</name><op:operator pos:line="335" pos:column="23">.</op:operator><name pos:line="335" pos:column="24">setValue</name></name><argument_list pos:line="335" pos:column="32">(<argument><expr><name pos:line="335" pos:column="33">steps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then> <else pos:line="336" pos:column="19">else <block pos:line="336" pos:column="24">{
                    <expr_stmt><expr><name pos:line="337" pos:column="21">distance</name> <op:operator pos:line="337" pos:column="30">=</op:operator> <name pos:line="337" pos:column="32">steps</name> <op:operator pos:line="337" pos:column="38">*</op:operator> <name pos:line="337" pos:column="40">stepsize</name></expr>;</expr_stmt>
                    <if pos:line="338" pos:column="21">if <condition pos:line="338" pos:column="24">(<expr><name pos:line="338" pos:column="25">stepsize_cm</name></expr>)</condition><then pos:line="338" pos:column="37"> <block pos:line="338" pos:column="38">{
                        <expr_stmt><expr><name pos:line="339" pos:column="25">distance</name> <op:operator pos:line="339" pos:column="34">/=</op:operator> <lit:literal type="number" pos:line="339" pos:column="37">100000</lit:literal></expr>;</expr_stmt>
                    }</block></then> <else pos:line="340" pos:column="23">else <block pos:line="340" pos:column="28">{
                        <expr_stmt><expr><name pos:line="341" pos:column="25">distance</name> <op:operator pos:line="341" pos:column="34">/=</op:operator> <lit:literal type="number" pos:line="341" pos:column="37">5280</lit:literal></expr>;</expr_stmt>
                    }</block></else></if>
                    <expr_stmt><expr><name pos:line="343" pos:column="21">distance</name> <op:operator pos:line="343" pos:column="30">=</op:operator> <call><name><name pos:line="343" pos:column="32">Math</name><op:operator pos:line="343" pos:column="36">.</op:operator><name pos:line="343" pos:column="37">round</name></name><argument_list pos:line="343" pos:column="42">(<argument><expr><name pos:line="343" pos:column="43">distance</name> <op:operator pos:line="343" pos:column="52">*</op:operator> <lit:literal type="number" pos:line="343" pos:column="54">1000</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="343" pos:column="60">/</op:operator> <lit:literal type="number" pos:line="343" pos:column="62">1000f</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="343" pos:column="69">// 3 decimals</comment>
                    <expr_stmt><expr><call><name><name pos:line="344" pos:column="21">bm</name><op:operator pos:line="344" pos:column="23">.</op:operator><name pos:line="344" pos:column="24">setValue</name></name><argument_list pos:line="344" pos:column="32">(<argument><expr><name pos:line="344" pos:column="33">distance</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
                <expr_stmt><expr><call><name><name pos:line="346" pos:column="17">barChart</name><op:operator pos:line="346" pos:column="25">.</op:operator><name pos:line="346" pos:column="26">addBar</name></name><argument_list pos:line="346" pos:column="32">(<argument><expr><name pos:line="346" pos:column="33">bm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <expr_stmt><expr><call><name><name pos:line="348" pos:column="13">yesterday</name><op:operator pos:line="348" pos:column="22">.</op:operator><name pos:line="348" pos:column="23">add</name></name><argument_list pos:line="348" pos:column="26">(<argument><expr><name><name pos:line="348" pos:column="27">Calendar</name><op:operator pos:line="348" pos:column="35">.</op:operator><name pos:line="348" pos:column="36">DAY_OF_YEAR</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="348" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></for>
        <if pos:line="350" pos:column="9">if <condition pos:line="350" pos:column="12">(<expr><call><name><name pos:line="350" pos:column="13">barChart</name><op:operator pos:line="350" pos:column="21">.</op:operator><name pos:line="350" pos:column="22">getData</name></name><argument_list pos:line="350" pos:column="29">()</argument_list></call><op:operator pos:line="350" pos:column="31">.</op:operator><call><name pos:line="350" pos:column="32">size</name><argument_list pos:line="350" pos:column="36">()</argument_list></call> <op:operator pos:line="350" pos:column="39">&gt;</op:operator> <lit:literal type="number" pos:line="350" pos:column="41">0</lit:literal></expr>)</condition><then pos:line="350" pos:column="43"> <block pos:line="350" pos:column="44">{
            <expr_stmt><expr><call><name><name pos:line="351" pos:column="13">barChart</name><op:operator pos:line="351" pos:column="21">.</op:operator><name pos:line="351" pos:column="22">setOnClickListener</name></name><argument_list pos:line="351" pos:column="40">(<argument><expr><op:operator pos:line="351" pos:column="41">new</op:operator> <class><super><name pos:line="351" pos:column="45">OnClickListener</name></super><argument_list pos:line="351" pos:column="60">()</argument_list> <block pos:line="351" pos:column="63">{
                <function><type><annotation pos:line="352" pos:column="17">@<name pos:line="352" pos:column="18">Override</name></annotation>
                <specifier pos:line="353" pos:column="17">public</specifier> <name pos:line="353" pos:column="24">void</name></type> <name pos:line="353" pos:column="29">onClick</name><parameter_list pos:line="353" pos:column="36">(<param><decl><type><name pos:line="353" pos:column="37">View</name></type> <name pos:line="353" pos:column="42">v</name></decl></param>)</parameter_list> <block pos:line="353" pos:column="45">{
                    <expr_stmt><expr><call><name><name pos:line="354" pos:column="21">Dialog_Statistics</name><op:operator pos:line="354" pos:column="38">.</op:operator><name pos:line="354" pos:column="39">getDialog</name></name><argument_list pos:line="354" pos:column="48">(<argument><expr><call><name pos:line="354" pos:column="49">getActivity</name><argument_list pos:line="354" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="354" pos:column="64">since_boot</name></expr></argument>)</argument_list></call><op:operator pos:line="354" pos:column="75">.</op:operator><call><name pos:line="354" pos:column="76">show</name><argument_list pos:line="354" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
                }</block></function>
            }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="357" pos:column="13">barChart</name><op:operator pos:line="357" pos:column="21">.</op:operator><name pos:line="357" pos:column="22">startAnimation</name></name><argument_list pos:line="357" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="358" pos:column="11">else <block pos:line="358" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="359" pos:column="13">barChart</name><op:operator pos:line="359" pos:column="21">.</op:operator><name pos:line="359" pos:column="22">setVisibility</name></name><argument_list pos:line="359" pos:column="35">(<argument><expr><name><name pos:line="359" pos:column="36">View</name><op:operator pos:line="359" pos:column="40">.</op:operator><name pos:line="359" pos:column="41">GONE</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
        <expr_stmt><expr><call><name><name pos:line="361" pos:column="9">db</name><op:operator pos:line="361" pos:column="11">.</op:operator><name pos:line="361" pos:column="12">close</name></name><argument_list pos:line="361" pos:column="17">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

}</block></class>
</unit>
