<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\Pedometer-master\src\main\java\de\j4velin\pedometer\SensorListener.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * Copyright 2013 Thomas Hoffmann
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package pos:line="17" pos:column="1">package <name><name pos:line="17" pos:column="9">de</name><op:operator pos:line="17" pos:column="11">.</op:operator><name pos:line="17" pos:column="12">j4velin</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">pedometer</name></name>;</package>

<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">android</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">app</name><op:operator pos:line="19" pos:column="19">.</op:operator><name pos:line="19" pos:column="20">AlarmManager</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">android</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">app</name><op:operator pos:line="20" pos:column="19">.</op:operator><name pos:line="20" pos:column="20">Notification</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">android</name><op:operator pos:line="21" pos:column="15">.</op:operator><name pos:line="21" pos:column="16">app</name><op:operator pos:line="21" pos:column="19">.</op:operator><name pos:line="21" pos:column="20">NotificationManager</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">android</name><op:operator pos:line="22" pos:column="15">.</op:operator><name pos:line="22" pos:column="16">app</name><op:operator pos:line="22" pos:column="19">.</op:operator><name pos:line="22" pos:column="20">PendingIntent</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">android</name><op:operator pos:line="23" pos:column="15">.</op:operator><name pos:line="23" pos:column="16">app</name><op:operator pos:line="23" pos:column="19">.</op:operator><name pos:line="23" pos:column="20">Service</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">android</name><op:operator pos:line="24" pos:column="15">.</op:operator><name pos:line="24" pos:column="16">content</name><op:operator pos:line="24" pos:column="23">.</op:operator><name pos:line="24" pos:column="24">Context</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">android</name><op:operator pos:line="25" pos:column="15">.</op:operator><name pos:line="25" pos:column="16">content</name><op:operator pos:line="25" pos:column="23">.</op:operator><name pos:line="25" pos:column="24">Intent</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">android</name><op:operator pos:line="26" pos:column="15">.</op:operator><name pos:line="26" pos:column="16">content</name><op:operator pos:line="26" pos:column="23">.</op:operator><name pos:line="26" pos:column="24">SharedPreferences</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">android</name><op:operator pos:line="27" pos:column="15">.</op:operator><name pos:line="27" pos:column="16">hardware</name><op:operator pos:line="27" pos:column="24">.</op:operator><name pos:line="27" pos:column="25">Sensor</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">android</name><op:operator pos:line="28" pos:column="15">.</op:operator><name pos:line="28" pos:column="16">hardware</name><op:operator pos:line="28" pos:column="24">.</op:operator><name pos:line="28" pos:column="25">SensorEvent</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">android</name><op:operator pos:line="29" pos:column="15">.</op:operator><name pos:line="29" pos:column="16">hardware</name><op:operator pos:line="29" pos:column="24">.</op:operator><name pos:line="29" pos:column="25">SensorEventListener</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">android</name><op:operator pos:line="30" pos:column="15">.</op:operator><name pos:line="30" pos:column="16">hardware</name><op:operator pos:line="30" pos:column="24">.</op:operator><name pos:line="30" pos:column="25">SensorManager</name></name>;</import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">android</name><op:operator pos:line="31" pos:column="15">.</op:operator><name pos:line="31" pos:column="16">os</name><op:operator pos:line="31" pos:column="18">.</op:operator><name pos:line="31" pos:column="19">IBinder</name></name>;</import>

<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">java</name><op:operator pos:line="33" pos:column="12">.</op:operator><name pos:line="33" pos:column="13">text</name><op:operator pos:line="33" pos:column="17">.</op:operator><name pos:line="33" pos:column="18">NumberFormat</name></name>;</import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">java</name><op:operator pos:line="34" pos:column="12">.</op:operator><name pos:line="34" pos:column="13">util</name><op:operator pos:line="34" pos:column="17">.</op:operator><name pos:line="34" pos:column="18">Locale</name></name>;</import>

<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">de</name><op:operator pos:line="36" pos:column="10">.</op:operator><name pos:line="36" pos:column="11">j4velin</name><op:operator pos:line="36" pos:column="18">.</op:operator><name pos:line="36" pos:column="19">pedometer</name><op:operator pos:line="36" pos:column="28">.</op:operator><name pos:line="36" pos:column="29">ui</name><op:operator pos:line="36" pos:column="31">.</op:operator><name pos:line="36" pos:column="32">Activity_Main</name></name>;</import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">de</name><op:operator pos:line="37" pos:column="10">.</op:operator><name pos:line="37" pos:column="11">j4velin</name><op:operator pos:line="37" pos:column="18">.</op:operator><name pos:line="37" pos:column="19">pedometer</name><op:operator pos:line="37" pos:column="28">.</op:operator><name pos:line="37" pos:column="29">util</name><op:operator pos:line="37" pos:column="33">.</op:operator><name pos:line="37" pos:column="34">Logger</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">de</name><op:operator pos:line="38" pos:column="10">.</op:operator><name pos:line="38" pos:column="11">j4velin</name><op:operator pos:line="38" pos:column="18">.</op:operator><name pos:line="38" pos:column="19">pedometer</name><op:operator pos:line="38" pos:column="28">.</op:operator><name pos:line="38" pos:column="29">util</name><op:operator pos:line="38" pos:column="33">.</op:operator><name pos:line="38" pos:column="34">Util</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">de</name><op:operator pos:line="39" pos:column="10">.</op:operator><name pos:line="39" pos:column="11">j4velin</name><op:operator pos:line="39" pos:column="18">.</op:operator><name pos:line="39" pos:column="19">pedometer</name><op:operator pos:line="39" pos:column="28">.</op:operator><name pos:line="39" pos:column="29">widget</name><op:operator pos:line="39" pos:column="35">.</op:operator><name pos:line="39" pos:column="36">WidgetUpdateService</name></name>;</import>

<comment type="block" format="javadoc" pos:line="41" pos:column="1">/**
 * Background service which keeps the step-sensor listener alive to always get
 * the number of steps since boot.
 * &lt;p/&gt;
 * This service won't be needed any more if there is a way to read the
 * step-value without waiting for a sensor event
 */</comment>
<class><specifier pos:line="48" pos:column="1">public</specifier> class <name pos:line="48" pos:column="14">SensorListener</name> <super><extends pos:line="48" pos:column="29">extends <name pos:line="48" pos:column="37">Service</name></extends> <implements pos:line="48" pos:column="45">implements <name pos:line="48" pos:column="56">SensorEventListener</name></implements></super> <block pos:line="48" pos:column="76">{

    <decl_stmt><decl><type><specifier pos:line="50" pos:column="5">private</specifier> <specifier pos:line="50" pos:column="13">final</specifier> <specifier pos:line="50" pos:column="19">static</specifier> <name pos:line="50" pos:column="26">int</name></type> <name pos:line="50" pos:column="30">NOTIFICATION_ID</name> <init pos:line="50" pos:column="46">= <expr><lit:literal type="number" pos:line="50" pos:column="48">1</lit:literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="52" pos:column="5">public</specifier> <specifier pos:line="52" pos:column="12">final</specifier> <specifier pos:line="52" pos:column="18">static</specifier> <name pos:line="52" pos:column="25">String</name></type> <name pos:line="52" pos:column="32">ACTION_PAUSE</name> <init pos:line="52" pos:column="45">= <expr><lit:literal type="string" pos:line="52" pos:column="47">"pause"</lit:literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="54" pos:column="5">private</specifier> <specifier pos:line="54" pos:column="13">static</specifier> <name pos:line="54" pos:column="20">boolean</name></type> <name pos:line="54" pos:column="28">WAIT_FOR_VALID_STEPS</name> <init pos:line="54" pos:column="49">= <expr><lit:literal type="boolean" pos:line="54" pos:column="51">false</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="55" pos:column="5">private</specifier> <specifier pos:line="55" pos:column="13">static</specifier> <name pos:line="55" pos:column="20">int</name></type> <name pos:line="55" pos:column="24">steps</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="57" pos:column="5">private</specifier> <specifier pos:line="57" pos:column="13">final</specifier> <specifier pos:line="57" pos:column="19">static</specifier> <name pos:line="57" pos:column="26">int</name></type> <name pos:line="57" pos:column="30">MICROSECONDS_IN_ONE_MINUTE</name> <init pos:line="57" pos:column="57">= <expr><lit:literal type="number" pos:line="57" pos:column="59">60000000</lit:literal></expr></init></decl>;</decl_stmt>

    <function><type><annotation pos:line="59" pos:column="5">@<name pos:line="59" pos:column="6">Override</name></annotation>
    <specifier pos:line="60" pos:column="5">public</specifier> <name pos:line="60" pos:column="12">void</name></type> <name pos:line="60" pos:column="17">onAccuracyChanged</name><parameter_list pos:line="60" pos:column="34">(<param><decl><type><specifier pos:line="60" pos:column="35">final</specifier> <name pos:line="60" pos:column="41">Sensor</name></type> <name pos:line="60" pos:column="48">sensor</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="56">int</name></type> <name pos:line="60" pos:column="60">accuracy</name></decl></param>)</parameter_list> <block pos:line="60" pos:column="70">{
        <comment type="line" pos:line="61" pos:column="9">// nobody knows what happens here: step value might magically decrease</comment>
        <comment type="line" pos:line="62" pos:column="9">// when this method is called...</comment>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">BuildConfig</name><op:operator pos:line="63" pos:column="24">.</op:operator><name pos:line="63" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="63" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="63" pos:column="32">Logger</name><op:operator pos:line="63" pos:column="38">.</op:operator><name pos:line="63" pos:column="39">log</name></name><argument_list pos:line="63" pos:column="42">(<argument><expr><call><name><name pos:line="63" pos:column="43">sensor</name><op:operator pos:line="63" pos:column="49">.</op:operator><name pos:line="63" pos:column="50">getName</name></name><argument_list pos:line="63" pos:column="57">()</argument_list></call> <op:operator pos:line="63" pos:column="60">+</op:operator> <lit:literal type="string" pos:line="63" pos:column="62">" accuracy changed: "</lit:literal> <op:operator pos:line="63" pos:column="84">+</op:operator> <name pos:line="63" pos:column="86">accuracy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
    }</block></function>

    <function><type><annotation pos:line="66" pos:column="5">@<name pos:line="66" pos:column="6">Override</name></annotation>
    <specifier pos:line="67" pos:column="5">public</specifier> <name pos:line="67" pos:column="12">void</name></type> <name pos:line="67" pos:column="17">onSensorChanged</name><parameter_list pos:line="67" pos:column="32">(<param><decl><type><specifier pos:line="67" pos:column="33">final</specifier> <name pos:line="67" pos:column="39">SensorEvent</name></type> <name pos:line="67" pos:column="51">event</name></decl></param>)</parameter_list> <block pos:line="67" pos:column="58">{
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">event</name><op:operator pos:line="68" pos:column="18">.</op:operator><name pos:line="68" pos:column="19">values</name><index pos:line="68" pos:column="25">[<expr><lit:literal type="number" pos:line="68" pos:column="26">0</lit:literal></expr>]</index></name> <op:operator pos:line="68" pos:column="29">&gt;</op:operator> <name><name pos:line="68" pos:column="31">Integer</name><op:operator pos:line="68" pos:column="38">.</op:operator><name pos:line="68" pos:column="39">MAX_VALUE</name></name></expr>)</condition><then pos:line="68" pos:column="49"> <block pos:line="68" pos:column="50">{
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name><name pos:line="69" pos:column="17">BuildConfig</name><op:operator pos:line="69" pos:column="28">.</op:operator><name pos:line="69" pos:column="29">DEBUG</name></name></expr>)</condition><then pos:line="69" pos:column="35"> <expr_stmt><expr><call><name><name pos:line="69" pos:column="36">Logger</name><op:operator pos:line="69" pos:column="42">.</op:operator><name pos:line="69" pos:column="43">log</name></name><argument_list pos:line="69" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="47">"probably not a real value: "</lit:literal> <op:operator pos:line="69" pos:column="77">+</op:operator> <name><name pos:line="69" pos:column="79">event</name><op:operator pos:line="69" pos:column="84">.</op:operator><name pos:line="69" pos:column="85">values</name><index pos:line="69" pos:column="91">[<expr><lit:literal type="number" pos:line="69" pos:column="92">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            <return pos:line="70" pos:column="13">return;</return>
        }</block></then> <else pos:line="71" pos:column="11">else <block pos:line="71" pos:column="16">{
            <expr_stmt><expr><name pos:line="72" pos:column="13">steps</name> <op:operator pos:line="72" pos:column="19">=</op:operator> <op:operator pos:line="72" pos:column="21">(</op:operator><name pos:line="72" pos:column="22">int</name><op:operator pos:line="72" pos:column="25">)</op:operator> <name><name pos:line="72" pos:column="27">event</name><op:operator pos:line="72" pos:column="32">.</op:operator><name pos:line="72" pos:column="33">values</name><index pos:line="72" pos:column="39">[<expr><lit:literal type="number" pos:line="72" pos:column="40">0</lit:literal></expr>]</index></name></expr>;</expr_stmt>
            <if pos:line="73" pos:column="13">if <condition pos:line="73" pos:column="16">(<expr><name pos:line="73" pos:column="17">WAIT_FOR_VALID_STEPS</name> <op:operator pos:line="73" pos:column="38">&amp;&amp;</op:operator> <name pos:line="73" pos:column="41">steps</name> <op:operator pos:line="73" pos:column="47">&gt;</op:operator> <lit:literal type="number" pos:line="73" pos:column="49">0</lit:literal></expr>)</condition><then pos:line="73" pos:column="51"> <block pos:line="73" pos:column="52">{
                <expr_stmt><expr><name pos:line="74" pos:column="17">WAIT_FOR_VALID_STEPS</name> <op:operator pos:line="74" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="74" pos:column="40">false</lit:literal></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="75" pos:column="17">Database</name></type> <name pos:line="75" pos:column="26">db</name> <init pos:line="75" pos:column="29">= <expr><call><name><name pos:line="75" pos:column="31">Database</name><op:operator pos:line="75" pos:column="39">.</op:operator><name pos:line="75" pos:column="40">getInstance</name></name><argument_list pos:line="75" pos:column="51">(<argument><expr><name pos:line="75" pos:column="52">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="76" pos:column="17">if <condition pos:line="76" pos:column="20">(<expr><call><name><name pos:line="76" pos:column="21">db</name><op:operator pos:line="76" pos:column="23">.</op:operator><name pos:line="76" pos:column="24">getSteps</name></name><argument_list pos:line="76" pos:column="32">(<argument><expr><call><name><name pos:line="76" pos:column="33">Util</name><op:operator pos:line="76" pos:column="37">.</op:operator><name pos:line="76" pos:column="38">getToday</name></name><argument_list pos:line="76" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="76" pos:column="50">==</op:operator> <name><name pos:line="76" pos:column="53">Integer</name><op:operator pos:line="76" pos:column="60">.</op:operator><name pos:line="76" pos:column="61">MIN_VALUE</name></name></expr>)</condition><then pos:line="76" pos:column="71"> <block pos:line="76" pos:column="72">{
                    <decl_stmt><decl><type><name pos:line="77" pos:column="21">int</name></type> <name pos:line="77" pos:column="25">pauseDifference</name> <init pos:line="77" pos:column="41">= <expr><name pos:line="77" pos:column="43">steps</name> <op:operator pos:line="77" pos:column="49">-</op:operator>
                            <call><name pos:line="78" pos:column="29">getSharedPreferences</name><argument_list pos:line="78" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="78" pos:column="50">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="63">Context</name><op:operator pos:line="78" pos:column="70">.</op:operator><name pos:line="78" pos:column="71">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call>
                                    <op:operator pos:line="79" pos:column="37">.</op:operator><call><name pos:line="79" pos:column="38">getInt</name><argument_list pos:line="79" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="45">"pauseCount"</lit:literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="59">steps</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="80" pos:column="21">db</name><op:operator pos:line="80" pos:column="23">.</op:operator><name pos:line="80" pos:column="24">insertNewDay</name></name><argument_list pos:line="80" pos:column="36">(<argument><expr><call><name><name pos:line="80" pos:column="37">Util</name><op:operator pos:line="80" pos:column="41">.</op:operator><name pos:line="80" pos:column="42">getToday</name></name><argument_list pos:line="80" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="80" pos:column="54">steps</name> <op:operator pos:line="80" pos:column="60">-</op:operator> <name pos:line="80" pos:column="62">pauseDifference</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="81" pos:column="21">if <condition pos:line="81" pos:column="24">(<expr><name pos:line="81" pos:column="25">pauseDifference</name> <op:operator pos:line="81" pos:column="41">&gt;</op:operator> <lit:literal type="number" pos:line="81" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="81" pos:column="45"> <block pos:line="81" pos:column="46">{
                        <comment type="line" pos:line="82" pos:column="25">// update pauseCount for the new day</comment>
                        <expr_stmt><expr><call><name pos:line="83" pos:column="25">getSharedPreferences</name><argument_list pos:line="83" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="83" pos:column="46">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="59">Context</name><op:operator pos:line="83" pos:column="66">.</op:operator><name pos:line="83" pos:column="67">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call><op:operator pos:line="83" pos:column="86">.</op:operator><call><name pos:line="83" pos:column="87">edit</name><argument_list pos:line="83" pos:column="91">()</argument_list></call>
                                <op:operator pos:line="84" pos:column="33">.</op:operator><call><name pos:line="84" pos:column="34">putInt</name><argument_list pos:line="84" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="41">"pauseCount"</lit:literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="55">steps</name></expr></argument>)</argument_list></call><op:operator pos:line="84" pos:column="61">.</op:operator><call><name pos:line="84" pos:column="62">commit</name><argument_list pos:line="84" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                    <expr_stmt><expr><call><name pos:line="86" pos:column="21">reRegisterSensor</name><argument_list pos:line="86" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="88" pos:column="17">db</name><op:operator pos:line="88" pos:column="19">.</op:operator><name pos:line="88" pos:column="20">saveCurrentSteps</name></name><argument_list pos:line="88" pos:column="36">(<argument><expr><name pos:line="88" pos:column="37">steps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="89" pos:column="17">db</name><op:operator pos:line="89" pos:column="19">.</op:operator><name pos:line="89" pos:column="20">close</name></name><argument_list pos:line="89" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">updateNotificationState</name><argument_list pos:line="90" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="91" pos:column="17">startService</name><argument_list pos:line="91" pos:column="29">(<argument><expr><op:operator pos:line="91" pos:column="30">new</op:operator> <call><name pos:line="91" pos:column="34">Intent</name><argument_list pos:line="91" pos:column="40">(<argument><expr><name pos:line="91" pos:column="41">this</name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="47">WidgetUpdateService</name><op:operator pos:line="91" pos:column="66">.</op:operator><name pos:line="91" pos:column="67">class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></else></if>
    }</block></function>

    <function><type><annotation pos:line="96" pos:column="5">@<name pos:line="96" pos:column="6">Override</name></annotation>
    <specifier pos:line="97" pos:column="5">public</specifier> <name pos:line="97" pos:column="12">IBinder</name></type> <name pos:line="97" pos:column="20">onBind</name><parameter_list pos:line="97" pos:column="26">(<param><decl><type><specifier pos:line="97" pos:column="27">final</specifier> <name pos:line="97" pos:column="33">Intent</name></type> <name pos:line="97" pos:column="40">intent</name></decl></param>)</parameter_list> <block pos:line="97" pos:column="48">{
        <return pos:line="98" pos:column="9">return <expr><lit:literal type="null" pos:line="98" pos:column="16">null</lit:literal></expr>;</return>
    }</block></function>

    <function><type><annotation pos:line="101" pos:column="5">@<name pos:line="101" pos:column="6">Override</name></annotation>
    <specifier pos:line="102" pos:column="5">public</specifier> <name pos:line="102" pos:column="12">int</name></type> <name pos:line="102" pos:column="16">onStartCommand</name><parameter_list pos:line="102" pos:column="30">(<param><decl><type><specifier pos:line="102" pos:column="31">final</specifier> <name pos:line="102" pos:column="37">Intent</name></type> <name pos:line="102" pos:column="44">intent</name></decl></param>, <param><decl><type><name pos:line="102" pos:column="52">int</name></type> <name pos:line="102" pos:column="56">flags</name></decl></param>, <param><decl><type><name pos:line="102" pos:column="63">int</name></type> <name pos:line="102" pos:column="67">startId</name></decl></param>)</parameter_list> <block pos:line="102" pos:column="76">{
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">intent</name> <op:operator pos:line="103" pos:column="20">!=</op:operator> <lit:literal type="null" pos:line="103" pos:column="23">null</lit:literal> <op:operator pos:line="103" pos:column="28">&amp;&amp;</op:operator> <call><name><name pos:line="103" pos:column="31">ACTION_PAUSE</name><op:operator pos:line="103" pos:column="43">.</op:operator><name pos:line="103" pos:column="44">equals</name></name><argument_list pos:line="103" pos:column="50">(<argument><expr><call><name><name pos:line="103" pos:column="51">intent</name><op:operator pos:line="103" pos:column="57">.</op:operator><name pos:line="103" pos:column="58">getStringExtra</name></name><argument_list pos:line="103" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="73">"action"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="103" pos:column="84"> <block pos:line="103" pos:column="85">{
            <if pos:line="104" pos:column="13">if <condition pos:line="104" pos:column="16">(<expr><name><name pos:line="104" pos:column="17">BuildConfig</name><op:operator pos:line="104" pos:column="28">.</op:operator><name pos:line="104" pos:column="29">DEBUG</name></name></expr>)</condition><then pos:line="104" pos:column="35">
                <expr_stmt><expr><call><name><name pos:line="105" pos:column="17">Logger</name><op:operator pos:line="105" pos:column="23">.</op:operator><name pos:line="105" pos:column="24">log</name></name><argument_list pos:line="105" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="28">"onStartCommand action: "</lit:literal> <op:operator pos:line="105" pos:column="54">+</op:operator> <call><name><name pos:line="105" pos:column="56">intent</name><op:operator pos:line="105" pos:column="62">.</op:operator><name pos:line="105" pos:column="63">getStringExtra</name></name><argument_list pos:line="105" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="78">"action"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            <if pos:line="106" pos:column="13">if <condition pos:line="106" pos:column="16">(<expr><name pos:line="106" pos:column="17">steps</name> <op:operator pos:line="106" pos:column="23">==</op:operator> <lit:literal type="number" pos:line="106" pos:column="26">0</lit:literal></expr>)</condition><then pos:line="106" pos:column="28"> <block pos:line="106" pos:column="29">{
                <decl_stmt><decl><type><name pos:line="107" pos:column="17">Database</name></type> <name pos:line="107" pos:column="26">db</name> <init pos:line="107" pos:column="29">= <expr><call><name><name pos:line="107" pos:column="31">Database</name><op:operator pos:line="107" pos:column="39">.</op:operator><name pos:line="107" pos:column="40">getInstance</name></name><argument_list pos:line="107" pos:column="51">(<argument><expr><name pos:line="107" pos:column="52">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="108" pos:column="17">steps</name> <op:operator pos:line="108" pos:column="23">=</op:operator> <call><name><name pos:line="108" pos:column="25">db</name><op:operator pos:line="108" pos:column="27">.</op:operator><name pos:line="108" pos:column="28">getCurrentSteps</name></name><argument_list pos:line="108" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="109" pos:column="17">db</name><op:operator pos:line="109" pos:column="19">.</op:operator><name pos:line="109" pos:column="20">close</name></name><argument_list pos:line="109" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <decl_stmt><decl><type><name pos:line="111" pos:column="13">SharedPreferences</name></type> <name pos:line="111" pos:column="31">prefs</name> <init pos:line="111" pos:column="37">= <expr><call><name pos:line="111" pos:column="39">getSharedPreferences</name><argument_list pos:line="111" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="111" pos:column="60">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="73">Context</name><op:operator pos:line="111" pos:column="80">.</op:operator><name pos:line="111" pos:column="81">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="112" pos:column="13">if <condition pos:line="112" pos:column="16">(<expr><call><name><name pos:line="112" pos:column="17">prefs</name><op:operator pos:line="112" pos:column="22">.</op:operator><name pos:line="112" pos:column="23">contains</name></name><argument_list pos:line="112" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="112" pos:column="32">"pauseCount"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="112" pos:column="46"> <block pos:line="112" pos:column="47">{ <comment type="line" pos:line="112" pos:column="49">// resume counting</comment>
                <decl_stmt><decl><type><name pos:line="113" pos:column="17">int</name></type> <name pos:line="113" pos:column="21">difference</name> <init pos:line="113" pos:column="32">= <expr><name pos:line="113" pos:column="34">steps</name> <op:operator pos:line="113" pos:column="40">-</op:operator>
                        <call><name><name pos:line="114" pos:column="25">prefs</name><op:operator pos:line="114" pos:column="30">.</op:operator><name pos:line="114" pos:column="31">getInt</name></name><argument_list pos:line="114" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="114" pos:column="38">"pauseCount"</lit:literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="52">steps</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="114" pos:column="60">// number of steps taken during the pause</comment>
                <decl_stmt><decl><type><name pos:line="115" pos:column="17">Database</name></type> <name pos:line="115" pos:column="26">db</name> <init pos:line="115" pos:column="29">= <expr><call><name><name pos:line="115" pos:column="31">Database</name><op:operator pos:line="115" pos:column="39">.</op:operator><name pos:line="115" pos:column="40">getInstance</name></name><argument_list pos:line="115" pos:column="51">(<argument><expr><name pos:line="115" pos:column="52">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="116" pos:column="17">db</name><op:operator pos:line="116" pos:column="19">.</op:operator><name pos:line="116" pos:column="20">updateSteps</name></name><argument_list pos:line="116" pos:column="31">(<argument><expr><call><name><name pos:line="116" pos:column="32">Util</name><op:operator pos:line="116" pos:column="36">.</op:operator><name pos:line="116" pos:column="37">getToday</name></name><argument_list pos:line="116" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="116" pos:column="49">-</op:operator><name pos:line="116" pos:column="50">difference</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="117" pos:column="17">db</name><op:operator pos:line="117" pos:column="19">.</op:operator><name pos:line="117" pos:column="20">close</name></name><argument_list pos:line="117" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="118" pos:column="17">prefs</name><op:operator pos:line="118" pos:column="22">.</op:operator><name pos:line="118" pos:column="23">edit</name></name><argument_list pos:line="118" pos:column="27">()</argument_list></call><op:operator pos:line="118" pos:column="29">.</op:operator><call><name pos:line="118" pos:column="30">remove</name><argument_list pos:line="118" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="118" pos:column="37">"pauseCount"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="118" pos:column="50">.</op:operator><call><name pos:line="118" pos:column="51">commit</name><argument_list pos:line="118" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="119" pos:column="17">updateNotificationState</name><argument_list pos:line="119" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="120" pos:column="15">else <block pos:line="120" pos:column="20">{ <comment type="line" pos:line="120" pos:column="22">// pause counting</comment>
                <comment type="line" pos:line="121" pos:column="17">// cancel restart</comment>
                <expr_stmt><expr><op:operator pos:line="122" pos:column="17">(</op:operator><op:operator pos:line="122" pos:column="18">(</op:operator><name pos:line="122" pos:column="19">AlarmManager</name><op:operator pos:line="122" pos:column="31">)</op:operator> <call><name pos:line="122" pos:column="33">getApplicationContext</name><argument_list pos:line="122" pos:column="54">()</argument_list></call><op:operator pos:line="122" pos:column="56">.</op:operator><call><name pos:line="122" pos:column="57">getSystemService</name><argument_list pos:line="122" pos:column="73">(<argument><expr><name><name pos:line="122" pos:column="74">Context</name><op:operator pos:line="122" pos:column="81">.</op:operator><name pos:line="122" pos:column="82">ALARM_SERVICE</name></name></expr></argument>)</argument_list></call><op:operator pos:line="122" pos:column="96">)</op:operator>
                        <op:operator pos:line="123" pos:column="25">.</op:operator><call><name pos:line="123" pos:column="26">cancel</name><argument_list pos:line="123" pos:column="32">(<argument><expr><call><name><name pos:line="123" pos:column="33">PendingIntent</name><op:operator pos:line="123" pos:column="46">.</op:operator><name pos:line="123" pos:column="47">getService</name></name><argument_list pos:line="123" pos:column="57">(<argument><expr><call><name pos:line="123" pos:column="58">getApplicationContext</name><argument_list pos:line="123" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="123" pos:column="83">2</lit:literal></expr></argument>,
                                <argument><expr><op:operator pos:line="124" pos:column="33">new</op:operator> <call><name pos:line="124" pos:column="37">Intent</name><argument_list pos:line="124" pos:column="43">(<argument><expr><name pos:line="124" pos:column="44">this</name></expr></argument>, <argument><expr><name><name pos:line="124" pos:column="50">SensorListener</name><op:operator pos:line="124" pos:column="64">.</op:operator><name pos:line="124" pos:column="65">class</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                <argument><expr><name><name pos:line="125" pos:column="33">PendingIntent</name><op:operator pos:line="125" pos:column="46">.</op:operator><name pos:line="125" pos:column="47">FLAG_UPDATE_CURRENT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="126" pos:column="17">prefs</name><op:operator pos:line="126" pos:column="22">.</op:operator><name pos:line="126" pos:column="23">edit</name></name><argument_list pos:line="126" pos:column="27">()</argument_list></call><op:operator pos:line="126" pos:column="29">.</op:operator><call><name pos:line="126" pos:column="30">putInt</name><argument_list pos:line="126" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="37">"pauseCount"</lit:literal></expr></argument>, <argument><expr><name pos:line="126" pos:column="51">steps</name></expr></argument>)</argument_list></call><op:operator pos:line="126" pos:column="57">.</op:operator><call><name pos:line="126" pos:column="58">commit</name><argument_list pos:line="126" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="127" pos:column="17">updateNotificationState</name><argument_list pos:line="127" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="128" pos:column="17">stopSelf</name><argument_list pos:line="128" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="129" pos:column="17">return <expr><name pos:line="129" pos:column="24">START_NOT_STICKY</name></expr>;</return>
            }</block></else></if>
        }</block></then></if>

        <comment type="line" pos:line="133" pos:column="9">// restart service every hour to get the current step count</comment>
        <expr_stmt><expr><op:operator pos:line="134" pos:column="9">(</op:operator><op:operator pos:line="134" pos:column="10">(</op:operator><name pos:line="134" pos:column="11">AlarmManager</name><op:operator pos:line="134" pos:column="23">)</op:operator> <call><name pos:line="134" pos:column="25">getApplicationContext</name><argument_list pos:line="134" pos:column="46">()</argument_list></call><op:operator pos:line="134" pos:column="48">.</op:operator><call><name pos:line="134" pos:column="49">getSystemService</name><argument_list pos:line="134" pos:column="65">(<argument><expr><name><name pos:line="134" pos:column="66">Context</name><op:operator pos:line="134" pos:column="73">.</op:operator><name pos:line="134" pos:column="74">ALARM_SERVICE</name></name></expr></argument>)</argument_list></call><op:operator pos:line="134" pos:column="88">)</op:operator>
                <op:operator pos:line="135" pos:column="17">.</op:operator><call><name pos:line="135" pos:column="18">set</name><argument_list pos:line="135" pos:column="21">(<argument><expr><name><name pos:line="135" pos:column="22">AlarmManager</name><op:operator pos:line="135" pos:column="34">.</op:operator><name pos:line="135" pos:column="35">RTC</name></name></expr></argument>, <argument><expr><call><name><name pos:line="135" pos:column="40">System</name><op:operator pos:line="135" pos:column="46">.</op:operator><name pos:line="135" pos:column="47">currentTimeMillis</name></name><argument_list pos:line="135" pos:column="64">()</argument_list></call> <op:operator pos:line="135" pos:column="67">+</op:operator> <name><name pos:line="135" pos:column="69">AlarmManager</name><op:operator pos:line="135" pos:column="81">.</op:operator><name pos:line="135" pos:column="82">INTERVAL_HOUR</name></name></expr></argument>,
                        <argument><expr><call><name><name pos:line="136" pos:column="25">PendingIntent</name><op:operator pos:line="136" pos:column="38">.</op:operator><name pos:line="136" pos:column="39">getService</name></name><argument_list pos:line="136" pos:column="49">(<argument><expr><call><name pos:line="136" pos:column="50">getApplicationContext</name><argument_list pos:line="136" pos:column="71">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="136" pos:column="75">2</lit:literal></expr></argument>,
                                <argument><expr><op:operator pos:line="137" pos:column="33">new</op:operator> <call><name pos:line="137" pos:column="37">Intent</name><argument_list pos:line="137" pos:column="43">(<argument><expr><name pos:line="137" pos:column="44">this</name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="50">SensorListener</name><op:operator pos:line="137" pos:column="64">.</op:operator><name pos:line="137" pos:column="65">class</name></name></expr></argument>)</argument_list></call></expr></argument>,
                                <argument><expr><name><name pos:line="138" pos:column="33">PendingIntent</name><op:operator pos:line="138" pos:column="46">.</op:operator><name pos:line="138" pos:column="47">FLAG_UPDATE_CURRENT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name pos:line="140" pos:column="9">WAIT_FOR_VALID_STEPS</name> <op:operator pos:line="140" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="140" pos:column="32">true</lit:literal></expr>;</expr_stmt>

        <return pos:line="142" pos:column="9">return <expr><name pos:line="142" pos:column="16">START_STICKY</name></expr>;</return>
    }</block></function>

    <function><type><annotation pos:line="145" pos:column="5">@<name pos:line="145" pos:column="6">Override</name></annotation>
    <specifier pos:line="146" pos:column="5">public</specifier> <name pos:line="146" pos:column="12">void</name></type> <name pos:line="146" pos:column="17">onCreate</name><parameter_list pos:line="146" pos:column="25">()</parameter_list> <block pos:line="146" pos:column="28">{
        <expr_stmt><expr><call><name><name pos:line="147" pos:column="9">super</name><op:operator pos:line="147" pos:column="14">.</op:operator><name pos:line="147" pos:column="15">onCreate</name></name><argument_list pos:line="147" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="148" pos:column="9">if <condition pos:line="148" pos:column="12">(<expr><name><name pos:line="148" pos:column="13">BuildConfig</name><op:operator pos:line="148" pos:column="24">.</op:operator><name pos:line="148" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="148" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="148" pos:column="32">Logger</name><op:operator pos:line="148" pos:column="38">.</op:operator><name pos:line="148" pos:column="39">log</name></name><argument_list pos:line="148" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="148" pos:column="43">"SensorListener onCreate"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><call><name pos:line="149" pos:column="9">reRegisterSensor</name><argument_list pos:line="149" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="150" pos:column="9">updateNotificationState</name><argument_list pos:line="150" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation pos:line="153" pos:column="5">@<name pos:line="153" pos:column="6">Override</name></annotation>
    <specifier pos:line="154" pos:column="5">public</specifier> <name pos:line="154" pos:column="12">void</name></type> <name pos:line="154" pos:column="17">onTaskRemoved</name><parameter_list pos:line="154" pos:column="30">(<param><decl><type><specifier pos:line="154" pos:column="31">final</specifier> <name pos:line="154" pos:column="37">Intent</name></type> <name pos:line="154" pos:column="44">rootIntent</name></decl></param>)</parameter_list> <block pos:line="154" pos:column="56">{
        <expr_stmt><expr><call><name><name pos:line="155" pos:column="9">super</name><op:operator pos:line="155" pos:column="14">.</op:operator><name pos:line="155" pos:column="15">onTaskRemoved</name></name><argument_list pos:line="155" pos:column="28">(<argument><expr><name pos:line="155" pos:column="29">rootIntent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><name><name pos:line="156" pos:column="13">BuildConfig</name><op:operator pos:line="156" pos:column="24">.</op:operator><name pos:line="156" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="156" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="156" pos:column="32">Logger</name><op:operator pos:line="156" pos:column="38">.</op:operator><name pos:line="156" pos:column="39">log</name></name><argument_list pos:line="156" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="43">"sensor service task removed"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <comment type="line" pos:line="157" pos:column="9">// Restart service in 500 ms</comment>
        <expr_stmt><expr><op:operator pos:line="158" pos:column="9">(</op:operator><op:operator pos:line="158" pos:column="10">(</op:operator><name pos:line="158" pos:column="11">AlarmManager</name><op:operator pos:line="158" pos:column="23">)</op:operator> <call><name pos:line="158" pos:column="25">getSystemService</name><argument_list pos:line="158" pos:column="41">(<argument><expr><name><name pos:line="158" pos:column="42">Context</name><op:operator pos:line="158" pos:column="49">.</op:operator><name pos:line="158" pos:column="50">ALARM_SERVICE</name></name></expr></argument>)</argument_list></call><op:operator pos:line="158" pos:column="64">)</op:operator>
                <op:operator pos:line="159" pos:column="17">.</op:operator><call><name pos:line="159" pos:column="18">set</name><argument_list pos:line="159" pos:column="21">(<argument><expr><name><name pos:line="159" pos:column="22">AlarmManager</name><op:operator pos:line="159" pos:column="34">.</op:operator><name pos:line="159" pos:column="35">RTC</name></name></expr></argument>, <argument><expr><call><name><name pos:line="159" pos:column="40">System</name><op:operator pos:line="159" pos:column="46">.</op:operator><name pos:line="159" pos:column="47">currentTimeMillis</name></name><argument_list pos:line="159" pos:column="64">()</argument_list></call> <op:operator pos:line="159" pos:column="67">+</op:operator> <lit:literal type="number" pos:line="159" pos:column="69">500</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="159" pos:column="74">PendingIntent</name>
                        <op:operator pos:line="160" pos:column="25">.</op:operator><name pos:line="160" pos:column="26">getService</name></name><argument_list pos:line="160" pos:column="36">(<argument><expr><name pos:line="160" pos:column="37">this</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="160" pos:column="43">3</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="160" pos:column="46">new</op:operator> <call><name pos:line="160" pos:column="50">Intent</name><argument_list pos:line="160" pos:column="56">(<argument><expr><name pos:line="160" pos:column="57">this</name></expr></argument>, <argument><expr><name><name pos:line="160" pos:column="63">SensorListener</name><op:operator pos:line="160" pos:column="77">.</op:operator><name pos:line="160" pos:column="78">class</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="160" pos:column="86">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation pos:line="163" pos:column="5">@<name pos:line="163" pos:column="6">Override</name></annotation>
    <specifier pos:line="164" pos:column="5">public</specifier> <name pos:line="164" pos:column="12">void</name></type> <name pos:line="164" pos:column="17">onDestroy</name><parameter_list pos:line="164" pos:column="26">()</parameter_list> <block pos:line="164" pos:column="29">{
        <expr_stmt><expr><call><name><name pos:line="165" pos:column="9">super</name><op:operator pos:line="165" pos:column="14">.</op:operator><name pos:line="165" pos:column="15">onDestroy</name></name><argument_list pos:line="165" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="166" pos:column="9">if <condition pos:line="166" pos:column="12">(<expr><name><name pos:line="166" pos:column="13">BuildConfig</name><op:operator pos:line="166" pos:column="24">.</op:operator><name pos:line="166" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="166" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="166" pos:column="32">Logger</name><op:operator pos:line="166" pos:column="38">.</op:operator><name pos:line="166" pos:column="39">log</name></name><argument_list pos:line="166" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="166" pos:column="43">"SensorListener onDestroy"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <try pos:line="167" pos:column="9">try <block pos:line="167" pos:column="13">{
            <decl_stmt><decl><type><name pos:line="168" pos:column="13">SensorManager</name></type> <name pos:line="168" pos:column="27">sm</name> <init pos:line="168" pos:column="30">= <expr><op:operator pos:line="168" pos:column="32">(</op:operator><name pos:line="168" pos:column="33">SensorManager</name><op:operator pos:line="168" pos:column="46">)</op:operator> <call><name pos:line="168" pos:column="48">getSystemService</name><argument_list pos:line="168" pos:column="64">(<argument><expr><name pos:line="168" pos:column="65">SENSOR_SERVICE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="169" pos:column="13">sm</name><op:operator pos:line="169" pos:column="15">.</op:operator><name pos:line="169" pos:column="16">unregisterListener</name></name><argument_list pos:line="169" pos:column="34">(<argument><expr><name pos:line="169" pos:column="35">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="170" pos:column="11">catch <parameter_list pos:line="170" pos:column="17">(<param><decl><type><name pos:line="170" pos:column="18">Exception</name></type> <name pos:line="170" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="170" pos:column="31">{
            <if pos:line="171" pos:column="13">if <condition pos:line="171" pos:column="16">(<expr><name><name pos:line="171" pos:column="17">BuildConfig</name><op:operator pos:line="171" pos:column="28">.</op:operator><name pos:line="171" pos:column="29">DEBUG</name></name></expr>)</condition><then pos:line="171" pos:column="35"> <expr_stmt><expr><call><name><name pos:line="171" pos:column="36">Logger</name><op:operator pos:line="171" pos:column="42">.</op:operator><name pos:line="171" pos:column="43">log</name></name><argument_list pos:line="171" pos:column="46">(<argument><expr><name pos:line="171" pos:column="47">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            <expr_stmt><expr><call><name><name pos:line="172" pos:column="13">e</name><op:operator pos:line="172" pos:column="14">.</op:operator><name pos:line="172" pos:column="15">printStackTrace</name></name><argument_list pos:line="172" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>
    }</block></function>

    <function><type><specifier pos:line="176" pos:column="5">private</specifier> <name pos:line="176" pos:column="13">void</name></type> <name pos:line="176" pos:column="18">updateNotificationState</name><parameter_list pos:line="176" pos:column="41">()</parameter_list> <block pos:line="176" pos:column="44">{
        <if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><name><name pos:line="177" pos:column="13">BuildConfig</name><op:operator pos:line="177" pos:column="24">.</op:operator><name pos:line="177" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="177" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="177" pos:column="32">Logger</name><op:operator pos:line="177" pos:column="38">.</op:operator><name pos:line="177" pos:column="39">log</name></name><argument_list pos:line="177" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="177" pos:column="43">"SensorListener updateNotificationState"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <decl_stmt><decl><type><name pos:line="178" pos:column="9">SharedPreferences</name></type> <name pos:line="178" pos:column="27">prefs</name> <init pos:line="178" pos:column="33">= <expr><call><name pos:line="178" pos:column="35">getSharedPreferences</name><argument_list pos:line="178" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="178" pos:column="56">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="178" pos:column="69">Context</name><op:operator pos:line="178" pos:column="76">.</op:operator><name pos:line="178" pos:column="77">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="179" pos:column="9">NotificationManager</name></type> <name pos:line="179" pos:column="29">nm</name> <init pos:line="179" pos:column="32">=
                <expr><op:operator pos:line="180" pos:column="17">(</op:operator><name pos:line="180" pos:column="18">NotificationManager</name><op:operator pos:line="180" pos:column="37">)</op:operator> <call><name pos:line="180" pos:column="39">getSystemService</name><argument_list pos:line="180" pos:column="55">(<argument><expr><name><name pos:line="180" pos:column="56">Context</name><op:operator pos:line="180" pos:column="63">.</op:operator><name pos:line="180" pos:column="64">NOTIFICATION_SERVICE</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><call><name><name pos:line="181" pos:column="13">prefs</name><op:operator pos:line="181" pos:column="18">.</op:operator><name pos:line="181" pos:column="19">getBoolean</name></name><argument_list pos:line="181" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="181" pos:column="30">"notification"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="181" pos:column="46">true</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="181" pos:column="52"> <block pos:line="181" pos:column="53">{
            <decl_stmt><decl><type><name pos:line="182" pos:column="13">int</name></type> <name pos:line="182" pos:column="17">goal</name> <init pos:line="182" pos:column="22">= <expr><call><name><name pos:line="182" pos:column="24">prefs</name><op:operator pos:line="182" pos:column="29">.</op:operator><name pos:line="182" pos:column="30">getInt</name></name><argument_list pos:line="182" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="182" pos:column="37">"goal"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="182" pos:column="45">10000</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="183" pos:column="13">Database</name></type> <name pos:line="183" pos:column="22">db</name> <init pos:line="183" pos:column="25">= <expr><call><name><name pos:line="183" pos:column="27">Database</name><op:operator pos:line="183" pos:column="35">.</op:operator><name pos:line="183" pos:column="36">getInstance</name></name><argument_list pos:line="183" pos:column="47">(<argument><expr><name pos:line="183" pos:column="48">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="184" pos:column="13">int</name></type> <name pos:line="184" pos:column="17">today_offset</name> <init pos:line="184" pos:column="30">= <expr><call><name><name pos:line="184" pos:column="32">db</name><op:operator pos:line="184" pos:column="34">.</op:operator><name pos:line="184" pos:column="35">getSteps</name></name><argument_list pos:line="184" pos:column="43">(<argument><expr><call><name><name pos:line="184" pos:column="44">Util</name><op:operator pos:line="184" pos:column="48">.</op:operator><name pos:line="184" pos:column="49">getToday</name></name><argument_list pos:line="184" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="185" pos:column="13">if <condition pos:line="185" pos:column="16">(<expr><name pos:line="185" pos:column="17">steps</name> <op:operator pos:line="185" pos:column="23">==</op:operator> <lit:literal type="number" pos:line="185" pos:column="26">0</lit:literal></expr>)</condition><then pos:line="185" pos:column="28">
                <expr_stmt><expr><name pos:line="186" pos:column="17">steps</name> <op:operator pos:line="186" pos:column="23">=</op:operator> <call><name><name pos:line="186" pos:column="25">db</name><op:operator pos:line="186" pos:column="27">.</op:operator><name pos:line="186" pos:column="28">getCurrentSteps</name></name><argument_list pos:line="186" pos:column="43">()</argument_list></call></expr>;</expr_stmt></then></if> <comment type="line" pos:line="186" pos:column="47">// use saved value if we haven't anything better</comment>
            <expr_stmt><expr><call><name><name pos:line="187" pos:column="13">db</name><op:operator pos:line="187" pos:column="15">.</op:operator><name pos:line="187" pos:column="16">close</name></name><argument_list pos:line="187" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="188" pos:column="13">Notification</name><op:operator pos:line="188" pos:column="25">.</op:operator><name pos:line="188" pos:column="26">Builder</name></name></type> <name pos:line="188" pos:column="34">notificationBuilder</name> <init pos:line="188" pos:column="54">= <expr><op:operator pos:line="188" pos:column="56">new</op:operator> <call><name><name pos:line="188" pos:column="60">Notification</name><op:operator pos:line="188" pos:column="72">.</op:operator><name pos:line="188" pos:column="73">Builder</name></name><argument_list pos:line="188" pos:column="80">(<argument><expr><name pos:line="188" pos:column="81">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="189" pos:column="13">if <condition pos:line="189" pos:column="16">(<expr><name pos:line="189" pos:column="17">steps</name> <op:operator pos:line="189" pos:column="23">&gt;</op:operator> <lit:literal type="number" pos:line="189" pos:column="25">0</lit:literal></expr>)</condition><then pos:line="189" pos:column="27"> <block pos:line="189" pos:column="28">{
                <if pos:line="190" pos:column="17">if <condition pos:line="190" pos:column="20">(<expr><name pos:line="190" pos:column="21">today_offset</name> <op:operator pos:line="190" pos:column="34">==</op:operator> <name><name pos:line="190" pos:column="37">Integer</name><op:operator pos:line="190" pos:column="44">.</op:operator><name pos:line="190" pos:column="45">MIN_VALUE</name></name></expr>)</condition><then pos:line="190" pos:column="55"> <expr_stmt><expr><name pos:line="190" pos:column="56">today_offset</name> <op:operator pos:line="190" pos:column="69">=</op:operator> <op:operator pos:line="190" pos:column="71">-</op:operator><name pos:line="190" pos:column="72">steps</name></expr>;</expr_stmt></then></if>
                <expr_stmt><expr><call><name><name pos:line="191" pos:column="17">notificationBuilder</name><op:operator pos:line="191" pos:column="36">.</op:operator><name pos:line="191" pos:column="37">setProgress</name></name><argument_list pos:line="191" pos:column="48">(<argument><expr><name pos:line="191" pos:column="49">goal</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="55">today_offset</name> <op:operator pos:line="191" pos:column="68">+</op:operator> <name pos:line="191" pos:column="70">steps</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="191" pos:column="77">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="191" pos:column="83">.</op:operator><call><name pos:line="191" pos:column="84">setContentText</name><argument_list pos:line="191" pos:column="98">(
                        <argument><expr><name pos:line="192" pos:column="25">today_offset</name> <op:operator pos:line="192" pos:column="38">+</op:operator> <name pos:line="192" pos:column="40">steps</name> <op:operator pos:line="192" pos:column="46">&gt;=</op:operator> <name pos:line="192" pos:column="49">goal</name> <op:operator pos:line="192" pos:column="54">?</op:operator> <call><name pos:line="192" pos:column="56">getString</name><argument_list pos:line="192" pos:column="65">(<argument><expr><name><name pos:line="192" pos:column="66">R</name><op:operator pos:line="192" pos:column="67">.</op:operator><name pos:line="192" pos:column="68">string</name><op:operator pos:line="192" pos:column="74">.</op:operator><name pos:line="192" pos:column="75">goal_reached_notification</name></name></expr></argument>,
                                <argument><expr><call><name><name pos:line="193" pos:column="33">NumberFormat</name><op:operator pos:line="193" pos:column="45">.</op:operator><name pos:line="193" pos:column="46">getInstance</name></name><argument_list pos:line="193" pos:column="57">(<argument><expr><call><name><name pos:line="193" pos:column="58">Locale</name><op:operator pos:line="193" pos:column="64">.</op:operator><name pos:line="193" pos:column="65">getDefault</name></name><argument_list pos:line="193" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call>
                                        <op:operator pos:line="194" pos:column="41">.</op:operator><call><name pos:line="194" pos:column="42">format</name><argument_list pos:line="194" pos:column="48">(<argument><expr><op:operator pos:line="194" pos:column="49">(</op:operator><name pos:line="194" pos:column="50">today_offset</name> <op:operator pos:line="194" pos:column="63">+</op:operator> <name pos:line="194" pos:column="65">steps</name><op:operator pos:line="194" pos:column="70">)</op:operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="194" pos:column="74">:</op:operator>
                                <call><name pos:line="195" pos:column="33">getString</name><argument_list pos:line="195" pos:column="42">(<argument><expr><name><name pos:line="195" pos:column="43">R</name><op:operator pos:line="195" pos:column="44">.</op:operator><name pos:line="195" pos:column="45">string</name><op:operator pos:line="195" pos:column="51">.</op:operator><name pos:line="195" pos:column="52">notification_text</name></name></expr></argument>,
                                        <argument><expr><call><name><name pos:line="196" pos:column="41">NumberFormat</name><op:operator pos:line="196" pos:column="53">.</op:operator><name pos:line="196" pos:column="54">getInstance</name></name><argument_list pos:line="196" pos:column="65">(<argument><expr><call><name><name pos:line="196" pos:column="66">Locale</name><op:operator pos:line="196" pos:column="72">.</op:operator><name pos:line="196" pos:column="73">getDefault</name></name><argument_list pos:line="196" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call>
                                                <op:operator pos:line="197" pos:column="49">.</op:operator><call><name pos:line="197" pos:column="50">format</name><argument_list pos:line="197" pos:column="56">(<argument><expr><op:operator pos:line="197" pos:column="57">(</op:operator><name pos:line="197" pos:column="58">goal</name> <op:operator pos:line="197" pos:column="63">-</op:operator> <name pos:line="197" pos:column="65">today_offset</name> <op:operator pos:line="197" pos:column="78">-</op:operator> <name pos:line="197" pos:column="80">steps</name><op:operator pos:line="197" pos:column="85">)</op:operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then> <else pos:line="198" pos:column="15">else <block pos:line="198" pos:column="20">{ <comment type="line" pos:line="198" pos:column="22">// still no step value?</comment>
                <expr_stmt><expr><call><name><name pos:line="199" pos:column="17">notificationBuilder</name>
                        <op:operator pos:line="200" pos:column="25">.</op:operator><name pos:line="200" pos:column="26">setContentText</name></name><argument_list pos:line="200" pos:column="40">(<argument><expr><call><name pos:line="200" pos:column="41">getString</name><argument_list pos:line="200" pos:column="50">(<argument><expr><name><name pos:line="200" pos:column="51">R</name><op:operator pos:line="200" pos:column="52">.</op:operator><name pos:line="200" pos:column="53">string</name><op:operator pos:line="200" pos:column="59">.</op:operator><name pos:line="200" pos:column="60">your_progress_will_be_shown_here_soon</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></else></if>
            <decl_stmt><decl><type><name pos:line="202" pos:column="13">boolean</name></type> <name pos:line="202" pos:column="21">isPaused</name> <init pos:line="202" pos:column="30">= <expr><call><name><name pos:line="202" pos:column="32">prefs</name><op:operator pos:line="202" pos:column="37">.</op:operator><name pos:line="202" pos:column="38">contains</name></name><argument_list pos:line="202" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="202" pos:column="47">"pauseCount"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="203" pos:column="13">notificationBuilder</name><op:operator pos:line="203" pos:column="32">.</op:operator><name pos:line="203" pos:column="33">setPriority</name></name><argument_list pos:line="203" pos:column="44">(<argument><expr><name><name pos:line="203" pos:column="45">Notification</name><op:operator pos:line="203" pos:column="57">.</op:operator><name pos:line="203" pos:column="58">PRIORITY_MIN</name></name></expr></argument>)</argument_list></call><op:operator pos:line="203" pos:column="71">.</op:operator><call><name pos:line="203" pos:column="72">setShowWhen</name><argument_list pos:line="203" pos:column="83">(<argument><expr><lit:literal type="boolean" pos:line="203" pos:column="84">false</lit:literal></expr></argument>)</argument_list></call>
                    <op:operator pos:line="204" pos:column="21">.</op:operator><call><name pos:line="204" pos:column="22">setContentTitle</name><argument_list pos:line="204" pos:column="37">(<argument><expr><name pos:line="204" pos:column="38">isPaused</name> <op:operator pos:line="204" pos:column="47">?</op:operator> <call><name pos:line="204" pos:column="49">getString</name><argument_list pos:line="204" pos:column="58">(<argument><expr><name><name pos:line="204" pos:column="59">R</name><op:operator pos:line="204" pos:column="60">.</op:operator><name pos:line="204" pos:column="61">string</name><op:operator pos:line="204" pos:column="67">.</op:operator><name pos:line="204" pos:column="68">ispaused</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="204" pos:column="78">:</op:operator>
                            <call><name pos:line="205" pos:column="29">getString</name><argument_list pos:line="205" pos:column="38">(<argument><expr><name><name pos:line="205" pos:column="39">R</name><op:operator pos:line="205" pos:column="40">.</op:operator><name pos:line="205" pos:column="41">string</name><op:operator pos:line="205" pos:column="47">.</op:operator><name pos:line="205" pos:column="48">notification_title</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="205" pos:column="68">.</op:operator><call><name pos:line="205" pos:column="69">setContentIntent</name><argument_list pos:line="205" pos:column="85">(<argument><expr><call><name><name pos:line="205" pos:column="86">PendingIntent</name>
                    <op:operator pos:line="206" pos:column="21">.</op:operator><name pos:line="206" pos:column="22">getActivity</name></name><argument_list pos:line="206" pos:column="33">(<argument><expr><name pos:line="206" pos:column="34">this</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="206" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="206" pos:column="43">new</op:operator> <call><name pos:line="206" pos:column="47">Intent</name><argument_list pos:line="206" pos:column="53">(<argument><expr><name pos:line="206" pos:column="54">this</name></expr></argument>, <argument><expr><name><name pos:line="206" pos:column="60">Activity_Main</name><op:operator pos:line="206" pos:column="73">.</op:operator><name pos:line="206" pos:column="74">class</name></name></expr></argument>)</argument_list></call></expr></argument>,
                            <argument><expr><name><name pos:line="207" pos:column="29">PendingIntent</name><op:operator pos:line="207" pos:column="42">.</op:operator><name pos:line="207" pos:column="43">FLAG_UPDATE_CURRENT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
                    <op:operator pos:line="208" pos:column="21">.</op:operator><call><name pos:line="208" pos:column="22">setSmallIcon</name><argument_list pos:line="208" pos:column="34">(<argument><expr><name><name pos:line="208" pos:column="35">R</name><op:operator pos:line="208" pos:column="36">.</op:operator><name pos:line="208" pos:column="37">drawable</name><op:operator pos:line="208" pos:column="45">.</op:operator><name pos:line="208" pos:column="46">ic_notification</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="209" pos:column="21">.</op:operator><call><name pos:line="209" pos:column="22">addAction</name><argument_list pos:line="209" pos:column="31">(<argument><expr><name pos:line="209" pos:column="32">isPaused</name> <op:operator pos:line="209" pos:column="41">?</op:operator> <name><name pos:line="209" pos:column="43">R</name><op:operator pos:line="209" pos:column="44">.</op:operator><name pos:line="209" pos:column="45">drawable</name><op:operator pos:line="209" pos:column="53">.</op:operator><name pos:line="209" pos:column="54">ic_resume</name></name> <op:operator pos:line="209" pos:column="64">:</op:operator> <name><name pos:line="209" pos:column="66">R</name><op:operator pos:line="209" pos:column="67">.</op:operator><name pos:line="209" pos:column="68">drawable</name><op:operator pos:line="209" pos:column="76">.</op:operator><name pos:line="209" pos:column="77">ic_pause</name></name></expr></argument>,
                            <argument><expr><name pos:line="210" pos:column="29">isPaused</name> <op:operator pos:line="210" pos:column="38">?</op:operator> <call><name pos:line="210" pos:column="40">getString</name><argument_list pos:line="210" pos:column="49">(<argument><expr><name><name pos:line="210" pos:column="50">R</name><op:operator pos:line="210" pos:column="51">.</op:operator><name pos:line="210" pos:column="52">string</name><op:operator pos:line="210" pos:column="58">.</op:operator><name pos:line="210" pos:column="59">resume</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="210" pos:column="67">:</op:operator> <call><name pos:line="210" pos:column="69">getString</name><argument_list pos:line="210" pos:column="78">(<argument><expr><name><name pos:line="210" pos:column="79">R</name><op:operator pos:line="210" pos:column="80">.</op:operator><name pos:line="210" pos:column="81">string</name><op:operator pos:line="210" pos:column="87">.</op:operator><name pos:line="210" pos:column="88">pause</name></name></expr></argument>)</argument_list></call></expr></argument>,
                            <argument><expr><call><name><name pos:line="211" pos:column="29">PendingIntent</name><op:operator pos:line="211" pos:column="42">.</op:operator><name pos:line="211" pos:column="43">getService</name></name><argument_list pos:line="211" pos:column="53">(<argument><expr><name pos:line="211" pos:column="54">this</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="211" pos:column="60">4</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="211" pos:column="63">new</op:operator> <call><name pos:line="211" pos:column="67">Intent</name><argument_list pos:line="211" pos:column="73">(<argument><expr><name pos:line="211" pos:column="74">this</name></expr></argument>, <argument><expr><name><name pos:line="211" pos:column="80">SensorListener</name><op:operator pos:line="211" pos:column="94">.</op:operator><name pos:line="211" pos:column="95">class</name></name></expr></argument>)</argument_list></call>
                                            <op:operator pos:line="212" pos:column="45">.</op:operator><call><name pos:line="212" pos:column="46">putExtra</name><argument_list pos:line="212" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="212" pos:column="55">"action"</lit:literal></expr></argument>, <argument><expr><name pos:line="212" pos:column="65">ACTION_PAUSE</name></expr></argument>)</argument_list></call></expr></argument>,
                                    <argument><expr><name><name pos:line="213" pos:column="37">PendingIntent</name><op:operator pos:line="213" pos:column="50">.</op:operator><name pos:line="213" pos:column="51">FLAG_UPDATE_CURRENT</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="213" pos:column="72">.</op:operator><call><name pos:line="213" pos:column="73">setOngoing</name><argument_list pos:line="213" pos:column="83">(<argument><expr><lit:literal type="boolean" pos:line="213" pos:column="84">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="214" pos:column="13">nm</name><op:operator pos:line="214" pos:column="15">.</op:operator><name pos:line="214" pos:column="16">notify</name></name><argument_list pos:line="214" pos:column="22">(<argument><expr><name pos:line="214" pos:column="23">NOTIFICATION_ID</name></expr></argument>, <argument><expr><call><name><name pos:line="214" pos:column="40">notificationBuilder</name><op:operator pos:line="214" pos:column="59">.</op:operator><name pos:line="214" pos:column="60">build</name></name><argument_list pos:line="214" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then> <else pos:line="215" pos:column="11">else <block pos:line="215" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="216" pos:column="13">nm</name><op:operator pos:line="216" pos:column="15">.</op:operator><name pos:line="216" pos:column="16">cancel</name></name><argument_list pos:line="216" pos:column="22">(<argument><expr><name pos:line="216" pos:column="23">NOTIFICATION_ID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
    }</block></function>

    <function><type><specifier pos:line="220" pos:column="5">private</specifier> <name pos:line="220" pos:column="13">void</name></type> <name pos:line="220" pos:column="18">reRegisterSensor</name><parameter_list pos:line="220" pos:column="34">()</parameter_list> <block pos:line="220" pos:column="37">{
        <if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><name><name pos:line="221" pos:column="13">BuildConfig</name><op:operator pos:line="221" pos:column="24">.</op:operator><name pos:line="221" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="221" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="221" pos:column="32">Logger</name><op:operator pos:line="221" pos:column="38">.</op:operator><name pos:line="221" pos:column="39">log</name></name><argument_list pos:line="221" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="221" pos:column="43">"re-register sensor listener"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <decl_stmt><decl><type><name pos:line="222" pos:column="9">SensorManager</name></type> <name pos:line="222" pos:column="23">sm</name> <init pos:line="222" pos:column="26">= <expr><op:operator pos:line="222" pos:column="28">(</op:operator><name pos:line="222" pos:column="29">SensorManager</name><op:operator pos:line="222" pos:column="42">)</op:operator> <call><name pos:line="222" pos:column="44">getSystemService</name><argument_list pos:line="222" pos:column="60">(<argument><expr><name pos:line="222" pos:column="61">SENSOR_SERVICE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <try pos:line="223" pos:column="9">try <block pos:line="223" pos:column="13">{
            <expr_stmt><expr><call><name><name pos:line="224" pos:column="13">sm</name><op:operator pos:line="224" pos:column="15">.</op:operator><name pos:line="224" pos:column="16">unregisterListener</name></name><argument_list pos:line="224" pos:column="34">(<argument><expr><name pos:line="224" pos:column="35">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block> <catch pos:line="225" pos:column="11">catch <parameter_list pos:line="225" pos:column="17">(<param><decl><type><name pos:line="225" pos:column="18">Exception</name></type> <name pos:line="225" pos:column="28">e</name></decl></param>)</parameter_list> <block pos:line="225" pos:column="31">{
            <if pos:line="226" pos:column="13">if <condition pos:line="226" pos:column="16">(<expr><name><name pos:line="226" pos:column="17">BuildConfig</name><op:operator pos:line="226" pos:column="28">.</op:operator><name pos:line="226" pos:column="29">DEBUG</name></name></expr>)</condition><then pos:line="226" pos:column="35"> <expr_stmt><expr><call><name><name pos:line="226" pos:column="36">Logger</name><op:operator pos:line="226" pos:column="42">.</op:operator><name pos:line="226" pos:column="43">log</name></name><argument_list pos:line="226" pos:column="46">(<argument><expr><name pos:line="226" pos:column="47">e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            <expr_stmt><expr><call><name><name pos:line="227" pos:column="13">e</name><op:operator pos:line="227" pos:column="14">.</op:operator><name pos:line="227" pos:column="15">printStackTrace</name></name><argument_list pos:line="227" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
        }</block></catch></try>

        <if pos:line="230" pos:column="9">if <condition pos:line="230" pos:column="12">(<expr><name><name pos:line="230" pos:column="13">BuildConfig</name><op:operator pos:line="230" pos:column="24">.</op:operator><name pos:line="230" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="230" pos:column="31"> <block pos:line="230" pos:column="32">{
            <expr_stmt><expr><call><name><name pos:line="231" pos:column="13">Logger</name><op:operator pos:line="231" pos:column="19">.</op:operator><name pos:line="231" pos:column="20">log</name></name><argument_list pos:line="231" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="231" pos:column="24">"step sensors: "</lit:literal> <op:operator pos:line="231" pos:column="41">+</op:operator> <call><name><name pos:line="231" pos:column="43">sm</name><op:operator pos:line="231" pos:column="45">.</op:operator><name pos:line="231" pos:column="46">getSensorList</name></name><argument_list pos:line="231" pos:column="59">(<argument><expr><name><name pos:line="231" pos:column="60">Sensor</name><op:operator pos:line="231" pos:column="66">.</op:operator><name pos:line="231" pos:column="67">TYPE_STEP_COUNTER</name></name></expr></argument>)</argument_list></call><op:operator pos:line="231" pos:column="85">.</op:operator><call><name pos:line="231" pos:column="86">size</name><argument_list pos:line="231" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="232" pos:column="13">if <condition pos:line="232" pos:column="16">(<expr><call><name><name pos:line="232" pos:column="17">sm</name><op:operator pos:line="232" pos:column="19">.</op:operator><name pos:line="232" pos:column="20">getSensorList</name></name><argument_list pos:line="232" pos:column="33">(<argument><expr><name><name pos:line="232" pos:column="34">Sensor</name><op:operator pos:line="232" pos:column="40">.</op:operator><name pos:line="232" pos:column="41">TYPE_STEP_COUNTER</name></name></expr></argument>)</argument_list></call><op:operator pos:line="232" pos:column="59">.</op:operator><call><name pos:line="232" pos:column="60">size</name><argument_list pos:line="232" pos:column="64">()</argument_list></call> <op:operator pos:line="232" pos:column="67">&lt;</op:operator> <lit:literal type="number" pos:line="232" pos:column="69">1</lit:literal></expr>)</condition><then pos:line="232" pos:column="71"> <return pos:line="232" pos:column="72">return;</return></then></if> <comment type="line" pos:line="232" pos:column="80">// emulator</comment>
            <expr_stmt><expr><call><name><name pos:line="233" pos:column="13">Logger</name><op:operator pos:line="233" pos:column="19">.</op:operator><name pos:line="233" pos:column="20">log</name></name><argument_list pos:line="233" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="233" pos:column="24">"default: "</lit:literal> <op:operator pos:line="233" pos:column="36">+</op:operator> <call><name><name pos:line="233" pos:column="38">sm</name><op:operator pos:line="233" pos:column="40">.</op:operator><name pos:line="233" pos:column="41">getDefaultSensor</name></name><argument_list pos:line="233" pos:column="57">(<argument><expr><name><name pos:line="233" pos:column="58">Sensor</name><op:operator pos:line="233" pos:column="64">.</op:operator><name pos:line="233" pos:column="65">TYPE_STEP_COUNTER</name></name></expr></argument>)</argument_list></call><op:operator pos:line="233" pos:column="83">.</op:operator><call><name pos:line="233" pos:column="84">getName</name><argument_list pos:line="233" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>

        <comment type="line" pos:line="236" pos:column="9">// enable batching with delay of max 5 min</comment>
        <expr_stmt><expr><call><name><name pos:line="237" pos:column="9">sm</name><op:operator pos:line="237" pos:column="11">.</op:operator><name pos:line="237" pos:column="12">registerListener</name></name><argument_list pos:line="237" pos:column="28">(<argument><expr><name pos:line="237" pos:column="29">this</name></expr></argument>, <argument><expr><call><name><name pos:line="237" pos:column="35">sm</name><op:operator pos:line="237" pos:column="37">.</op:operator><name pos:line="237" pos:column="38">getDefaultSensor</name></name><argument_list pos:line="237" pos:column="54">(<argument><expr><name><name pos:line="237" pos:column="55">Sensor</name><op:operator pos:line="237" pos:column="61">.</op:operator><name pos:line="237" pos:column="62">TYPE_STEP_COUNTER</name></name></expr></argument>)</argument_list></call></expr></argument>,
                <argument><expr><name><name pos:line="238" pos:column="17">SensorManager</name><op:operator pos:line="238" pos:column="30">.</op:operator><name pos:line="238" pos:column="31">SENSOR_DELAY_NORMAL</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="238" pos:column="52">5</lit:literal> <op:operator pos:line="238" pos:column="54">*</op:operator> <name pos:line="238" pos:column="56">MICROSECONDS_IN_ONE_MINUTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
