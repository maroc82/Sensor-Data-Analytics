<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\Pedometer-master\src\main\java\de\j4velin\pedometer\util\GoogleFit.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * Copyright 2014 Thomas Hoffmann
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package pos:line="17" pos:column="1">package <name><name pos:line="17" pos:column="9">de</name><op:operator pos:line="17" pos:column="11">.</op:operator><name pos:line="17" pos:column="12">j4velin</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">pedometer</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">util</name></name>;</package>

<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">android</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">content</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">Context</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">android</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">database</name><op:operator pos:line="20" pos:column="24">.</op:operator><name pos:line="20" pos:column="25">Cursor</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">android</name><op:operator pos:line="21" pos:column="15">.</op:operator><name pos:line="21" pos:column="16">os</name><op:operator pos:line="21" pos:column="18">.</op:operator><name pos:line="21" pos:column="19">AsyncTask</name></name>;</import>

<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">com</name><op:operator pos:line="23" pos:column="11">.</op:operator><name pos:line="23" pos:column="12">google</name><op:operator pos:line="23" pos:column="18">.</op:operator><name pos:line="23" pos:column="19">android</name><op:operator pos:line="23" pos:column="26">.</op:operator><name pos:line="23" pos:column="27">gms</name><op:operator pos:line="23" pos:column="30">.</op:operator><name pos:line="23" pos:column="31">common</name><op:operator pos:line="23" pos:column="37">.</op:operator><name pos:line="23" pos:column="38">api</name><op:operator pos:line="23" pos:column="41">.</op:operator><name pos:line="23" pos:column="42">GoogleApiClient</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">com</name><op:operator pos:line="24" pos:column="11">.</op:operator><name pos:line="24" pos:column="12">google</name><op:operator pos:line="24" pos:column="18">.</op:operator><name pos:line="24" pos:column="19">android</name><op:operator pos:line="24" pos:column="26">.</op:operator><name pos:line="24" pos:column="27">gms</name><op:operator pos:line="24" pos:column="30">.</op:operator><name pos:line="24" pos:column="31">fitness</name><op:operator pos:line="24" pos:column="38">.</op:operator><name pos:line="24" pos:column="39">Fitness</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">com</name><op:operator pos:line="25" pos:column="11">.</op:operator><name pos:line="25" pos:column="12">google</name><op:operator pos:line="25" pos:column="18">.</op:operator><name pos:line="25" pos:column="19">android</name><op:operator pos:line="25" pos:column="26">.</op:operator><name pos:line="25" pos:column="27">gms</name><op:operator pos:line="25" pos:column="30">.</op:operator><name pos:line="25" pos:column="31">fitness</name><op:operator pos:line="25" pos:column="38">.</op:operator><name pos:line="25" pos:column="39">data</name><op:operator pos:line="25" pos:column="43">.</op:operator><name pos:line="25" pos:column="44">Bucket</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">com</name><op:operator pos:line="26" pos:column="11">.</op:operator><name pos:line="26" pos:column="12">google</name><op:operator pos:line="26" pos:column="18">.</op:operator><name pos:line="26" pos:column="19">android</name><op:operator pos:line="26" pos:column="26">.</op:operator><name pos:line="26" pos:column="27">gms</name><op:operator pos:line="26" pos:column="30">.</op:operator><name pos:line="26" pos:column="31">fitness</name><op:operator pos:line="26" pos:column="38">.</op:operator><name pos:line="26" pos:column="39">data</name><op:operator pos:line="26" pos:column="43">.</op:operator><name pos:line="26" pos:column="44">DataPoint</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">com</name><op:operator pos:line="27" pos:column="11">.</op:operator><name pos:line="27" pos:column="12">google</name><op:operator pos:line="27" pos:column="18">.</op:operator><name pos:line="27" pos:column="19">android</name><op:operator pos:line="27" pos:column="26">.</op:operator><name pos:line="27" pos:column="27">gms</name><op:operator pos:line="27" pos:column="30">.</op:operator><name pos:line="27" pos:column="31">fitness</name><op:operator pos:line="27" pos:column="38">.</op:operator><name pos:line="27" pos:column="39">data</name><op:operator pos:line="27" pos:column="43">.</op:operator><name pos:line="27" pos:column="44">DataSet</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">com</name><op:operator pos:line="28" pos:column="11">.</op:operator><name pos:line="28" pos:column="12">google</name><op:operator pos:line="28" pos:column="18">.</op:operator><name pos:line="28" pos:column="19">android</name><op:operator pos:line="28" pos:column="26">.</op:operator><name pos:line="28" pos:column="27">gms</name><op:operator pos:line="28" pos:column="30">.</op:operator><name pos:line="28" pos:column="31">fitness</name><op:operator pos:line="28" pos:column="38">.</op:operator><name pos:line="28" pos:column="39">data</name><op:operator pos:line="28" pos:column="43">.</op:operator><name pos:line="28" pos:column="44">DataSource</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">com</name><op:operator pos:line="29" pos:column="11">.</op:operator><name pos:line="29" pos:column="12">google</name><op:operator pos:line="29" pos:column="18">.</op:operator><name pos:line="29" pos:column="19">android</name><op:operator pos:line="29" pos:column="26">.</op:operator><name pos:line="29" pos:column="27">gms</name><op:operator pos:line="29" pos:column="30">.</op:operator><name pos:line="29" pos:column="31">fitness</name><op:operator pos:line="29" pos:column="38">.</op:operator><name pos:line="29" pos:column="39">data</name><op:operator pos:line="29" pos:column="43">.</op:operator><name pos:line="29" pos:column="44">DataType</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">com</name><op:operator pos:line="30" pos:column="11">.</op:operator><name pos:line="30" pos:column="12">google</name><op:operator pos:line="30" pos:column="18">.</op:operator><name pos:line="30" pos:column="19">android</name><op:operator pos:line="30" pos:column="26">.</op:operator><name pos:line="30" pos:column="27">gms</name><op:operator pos:line="30" pos:column="30">.</op:operator><name pos:line="30" pos:column="31">fitness</name><op:operator pos:line="30" pos:column="38">.</op:operator><name pos:line="30" pos:column="39">data</name><op:operator pos:line="30" pos:column="43">.</op:operator><name pos:line="30" pos:column="44">Field</name></name>;</import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">com</name><op:operator pos:line="31" pos:column="11">.</op:operator><name pos:line="31" pos:column="12">google</name><op:operator pos:line="31" pos:column="18">.</op:operator><name pos:line="31" pos:column="19">android</name><op:operator pos:line="31" pos:column="26">.</op:operator><name pos:line="31" pos:column="27">gms</name><op:operator pos:line="31" pos:column="30">.</op:operator><name pos:line="31" pos:column="31">fitness</name><op:operator pos:line="31" pos:column="38">.</op:operator><name pos:line="31" pos:column="39">request</name><op:operator pos:line="31" pos:column="46">.</op:operator><name pos:line="31" pos:column="47">DataReadRequest</name></name>;</import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">com</name><op:operator pos:line="32" pos:column="11">.</op:operator><name pos:line="32" pos:column="12">google</name><op:operator pos:line="32" pos:column="18">.</op:operator><name pos:line="32" pos:column="19">android</name><op:operator pos:line="32" pos:column="26">.</op:operator><name pos:line="32" pos:column="27">gms</name><op:operator pos:line="32" pos:column="30">.</op:operator><name pos:line="32" pos:column="31">fitness</name><op:operator pos:line="32" pos:column="38">.</op:operator><name pos:line="32" pos:column="39">result</name><op:operator pos:line="32" pos:column="45">.</op:operator><name pos:line="32" pos:column="46">DataReadResult</name></name>;</import>

<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">java</name><op:operator pos:line="34" pos:column="12">.</op:operator><name pos:line="34" pos:column="13">text</name><op:operator pos:line="34" pos:column="17">.</op:operator><name pos:line="34" pos:column="18">SimpleDateFormat</name></name>;</import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">java</name><op:operator pos:line="35" pos:column="12">.</op:operator><name pos:line="35" pos:column="13">util</name><op:operator pos:line="35" pos:column="17">.</op:operator><name pos:line="35" pos:column="18">Calendar</name></name>;</import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">java</name><op:operator pos:line="36" pos:column="12">.</op:operator><name pos:line="36" pos:column="13">util</name><op:operator pos:line="36" pos:column="17">.</op:operator><name pos:line="36" pos:column="18">Date</name></name>;</import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">java</name><op:operator pos:line="37" pos:column="12">.</op:operator><name pos:line="37" pos:column="13">util</name><op:operator pos:line="37" pos:column="17">.</op:operator><name pos:line="37" pos:column="18">List</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">java</name><op:operator pos:line="38" pos:column="12">.</op:operator><name pos:line="38" pos:column="13">util</name><op:operator pos:line="38" pos:column="17">.</op:operator><name pos:line="38" pos:column="18">concurrent</name><op:operator pos:line="38" pos:column="28">.</op:operator><name pos:line="38" pos:column="29">TimeUnit</name></name>;</import>

<import pos:line="40" pos:column="1">import <name><name pos:line="40" pos:column="8">de</name><op:operator pos:line="40" pos:column="10">.</op:operator><name pos:line="40" pos:column="11">j4velin</name><op:operator pos:line="40" pos:column="18">.</op:operator><name pos:line="40" pos:column="19">pedometer</name><op:operator pos:line="40" pos:column="28">.</op:operator><name pos:line="40" pos:column="29">BuildConfig</name></name>;</import>
<import pos:line="41" pos:column="1">import <name><name pos:line="41" pos:column="8">de</name><op:operator pos:line="41" pos:column="10">.</op:operator><name pos:line="41" pos:column="11">j4velin</name><op:operator pos:line="41" pos:column="18">.</op:operator><name pos:line="41" pos:column="19">pedometer</name><op:operator pos:line="41" pos:column="28">.</op:operator><name pos:line="41" pos:column="29">Database</name></name>;</import>

<class><specifier pos:line="43" pos:column="1">public</specifier> class <name pos:line="43" pos:column="14">GoogleFit</name> <block pos:line="43" pos:column="24">{

    <class><specifier pos:line="45" pos:column="5">public</specifier> <specifier pos:line="45" pos:column="12">static</specifier> class <name pos:line="45" pos:column="25">Sync</name> <super><extends pos:line="45" pos:column="30">extends <name><name pos:line="45" pos:column="38">AsyncTask</name><argument_list pos:line="45" pos:column="47">&lt;<argument><name pos:line="45" pos:column="48">Void</name></argument>, <argument><name pos:line="45" pos:column="54">Void</name></argument>, <argument><name pos:line="45" pos:column="60">Void</name></argument>&gt;</argument_list></name></extends></super> <block pos:line="45" pos:column="66">{

        <decl_stmt><decl><type><specifier pos:line="47" pos:column="9">private</specifier> <specifier pos:line="47" pos:column="17">final</specifier> <name pos:line="47" pos:column="23">GoogleApiClient</name></type> <name pos:line="47" pos:column="39">mClient</name></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="48" pos:column="9">private</specifier> <specifier pos:line="48" pos:column="17">final</specifier> <name pos:line="48" pos:column="23">Context</name></type> <name pos:line="48" pos:column="31">context</name></decl>;</decl_stmt>

        <constructor><specifier pos:line="50" pos:column="9">public</specifier> <name pos:line="50" pos:column="16">Sync</name><parameter_list pos:line="50" pos:column="20">(<param><decl><type><specifier pos:line="50" pos:column="21">final</specifier> <name pos:line="50" pos:column="27">GoogleApiClient</name></type> <name pos:line="50" pos:column="43">client</name></decl></param>, <param><decl><type><specifier pos:line="50" pos:column="51">final</specifier> <name pos:line="50" pos:column="57">Context</name></type> <name pos:line="50" pos:column="65">c</name></decl></param>)</parameter_list> <block pos:line="50" pos:column="68">{
            <expr_stmt><expr><name pos:line="51" pos:column="13">mClient</name> <op:operator pos:line="51" pos:column="21">=</op:operator> <name pos:line="51" pos:column="23">client</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="52" pos:column="13">context</name> <op:operator pos:line="52" pos:column="21">=</op:operator> <name pos:line="52" pos:column="23">c</name></expr>;</expr_stmt>
        }</block></constructor>

        <function><type><annotation pos:line="55" pos:column="9">@<name pos:line="55" pos:column="10">Override</name></annotation>
        <specifier pos:line="56" pos:column="9">protected</specifier> <name pos:line="56" pos:column="19">Void</name></type> <name pos:line="56" pos:column="24">doInBackground</name><parameter_list pos:line="56" pos:column="38">(<param><decl><type><name pos:line="56" pos:column="39">Void</name><type:modifier pos:line="56" pos:column="43">...</type:modifier></type> <name pos:line="56" pos:column="47">voids</name></decl></param>)</parameter_list> <block pos:line="56" pos:column="54">{
            <decl_stmt><decl><type><name pos:line="57" pos:column="13">long</name></type> <name pos:line="57" pos:column="18">syncedUntil</name> <init pos:line="57" pos:column="30">= <expr><call><name><name pos:line="57" pos:column="32">context</name><op:operator pos:line="57" pos:column="39">.</op:operator><name pos:line="57" pos:column="40">getSharedPreferences</name></name><argument_list pos:line="57" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="61">"GoogleFit"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="74">Context</name><op:operator pos:line="57" pos:column="81">.</op:operator><name pos:line="57" pos:column="82">MODE_PRIVATE</name></name></expr></argument>)</argument_list></call>
                    <op:operator pos:line="58" pos:column="21">.</op:operator><call><name pos:line="58" pos:column="22">getLong</name><argument_list pos:line="58" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="58" pos:column="30">"syncedUntil"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="58" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="60" pos:column="13">// Create a data source</comment>
            <decl_stmt><decl><type><name pos:line="61" pos:column="13">DataSource</name></type> <name pos:line="61" pos:column="24">dataSource</name> <init pos:line="61" pos:column="35">=
                    <expr><op:operator pos:line="62" pos:column="21">new</op:operator> <call><name><name pos:line="62" pos:column="25">DataSource</name><op:operator pos:line="62" pos:column="35">.</op:operator><name pos:line="62" pos:column="36">Builder</name></name><argument_list pos:line="62" pos:column="43">()</argument_list></call><op:operator pos:line="62" pos:column="45">.</op:operator><call><name pos:line="62" pos:column="46">setAppPackageName</name><argument_list pos:line="62" pos:column="63">(<argument><expr><call><name><name pos:line="62" pos:column="64">context</name><op:operator pos:line="62" pos:column="71">.</op:operator><name pos:line="62" pos:column="72">getPackageName</name></name><argument_list pos:line="62" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call>
                            <op:operator pos:line="63" pos:column="29">.</op:operator><call><name pos:line="63" pos:column="30">setDataType</name><argument_list pos:line="63" pos:column="41">(<argument><expr><name><name pos:line="63" pos:column="42">DataType</name><op:operator pos:line="63" pos:column="50">.</op:operator><name pos:line="63" pos:column="51">TYPE_STEP_COUNT_DELTA</name></name></expr></argument>)</argument_list></call>
                            <op:operator pos:line="64" pos:column="29">.</op:operator><call><name pos:line="64" pos:column="30">setName</name><argument_list pos:line="64" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="38">"Pedometer - step count"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="64" pos:column="63">.</op:operator><call><name pos:line="64" pos:column="64">setType</name><argument_list pos:line="64" pos:column="71">(<argument><expr><name><name pos:line="64" pos:column="72">DataSource</name><op:operator pos:line="64" pos:column="82">.</op:operator><name pos:line="64" pos:column="83">TYPE_RAW</name></name></expr></argument>)</argument_list></call><op:operator pos:line="64" pos:column="92">.</op:operator><call><name pos:line="64" pos:column="93">build</name><argument_list pos:line="64" pos:column="98">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="66" pos:column="13">Database</name></type> <name pos:line="66" pos:column="22">db</name> <init pos:line="66" pos:column="25">= <expr><call><name><name pos:line="66" pos:column="27">Database</name><op:operator pos:line="66" pos:column="35">.</op:operator><name pos:line="66" pos:column="36">getInstance</name></name><argument_list pos:line="66" pos:column="47">(<argument><expr><name pos:line="66" pos:column="48">context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name pos:line="68" pos:column="13">Cursor</name></type> <name pos:line="68" pos:column="20">c</name> <init pos:line="68" pos:column="22">=
                    <expr><call><name><name pos:line="69" pos:column="21">db</name><op:operator pos:line="69" pos:column="23">.</op:operator><name pos:line="69" pos:column="24">query</name></name><argument_list pos:line="69" pos:column="29">(<argument><expr><op:operator pos:line="69" pos:column="30">new</op:operator> <name><name pos:line="69" pos:column="34">String</name><index pos:line="69" pos:column="40">[]</index></name><block pos:line="69" pos:column="42">{<expr><lit:literal type="string" pos:line="69" pos:column="43">"date, steps"</lit:literal></expr>}</block></expr></argument>, <argument><expr><lit:literal type="string" pos:line="69" pos:column="59">"date &gt; "</lit:literal> <op:operator pos:line="69" pos:column="69">+</op:operator> <name pos:line="69" pos:column="71">syncedUntil</name></expr></argument>, <argument><expr><lit:literal type="null" pos:line="69" pos:column="84">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="69" pos:column="90">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="69" pos:column="96">null</lit:literal></expr></argument>,
                            <argument><expr><lit:literal type="string" pos:line="70" pos:column="29">"date ASC"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="70" pos:column="41">null</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="71" pos:column="13">c</name><op:operator pos:line="71" pos:column="14">.</op:operator><name pos:line="71" pos:column="15">moveToFirst</name></name><argument_list pos:line="71" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">Calendar</name></type> <name pos:line="72" pos:column="22">endOfDay</name> <init pos:line="72" pos:column="31">= <expr><call><name><name pos:line="72" pos:column="33">Calendar</name><op:operator pos:line="72" pos:column="41">.</op:operator><name pos:line="72" pos:column="42">getInstance</name></name><argument_list pos:line="72" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <while pos:line="73" pos:column="13">while <condition pos:line="73" pos:column="19">(<expr><op:operator pos:line="73" pos:column="20">!</op:operator><call><name><name pos:line="73" pos:column="21">c</name><op:operator pos:line="73" pos:column="22">.</op:operator><name pos:line="73" pos:column="23">isAfterLast</name></name><argument_list pos:line="73" pos:column="34">()</argument_list></call></expr>)</condition> <block pos:line="73" pos:column="38">{
                <if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><call><name><name pos:line="74" pos:column="21">c</name><op:operator pos:line="74" pos:column="22">.</op:operator><name pos:line="74" pos:column="23">getInt</name></name><argument_list pos:line="74" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="74" pos:column="30">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="74" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="74" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="74" pos:column="37"> <block pos:line="74" pos:column="38">{
                    <comment type="line" pos:line="75" pos:column="21">// Create a data set</comment>
                    <decl_stmt><decl><type><name pos:line="76" pos:column="21">DataSet</name></type> <name pos:line="76" pos:column="29">dataSet</name> <init pos:line="76" pos:column="37">= <expr><call><name><name pos:line="76" pos:column="39">DataSet</name><op:operator pos:line="76" pos:column="46">.</op:operator><name pos:line="76" pos:column="47">create</name></name><argument_list pos:line="76" pos:column="53">(<argument><expr><name pos:line="76" pos:column="54">dataSource</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <comment type="line" pos:line="77" pos:column="21">// For each data point, specify a start time, end time, and the data value -- in this case,</comment>
                    <comment type="line" pos:line="78" pos:column="21">// the number of new steps.</comment>
                    <expr_stmt><expr><call><name><name pos:line="79" pos:column="21">endOfDay</name><op:operator pos:line="79" pos:column="29">.</op:operator><name pos:line="79" pos:column="30">setTimeInMillis</name></name><argument_list pos:line="79" pos:column="45">(<argument><expr><call><name><name pos:line="79" pos:column="46">c</name><op:operator pos:line="79" pos:column="47">.</op:operator><name pos:line="79" pos:column="48">getLong</name></name><argument_list pos:line="79" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="79" pos:column="56">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="80" pos:column="21">endOfDay</name><op:operator pos:line="80" pos:column="29">.</op:operator><name pos:line="80" pos:column="30">add</name></name><argument_list pos:line="80" pos:column="33">(<argument><expr><name><name pos:line="80" pos:column="34">Calendar</name><op:operator pos:line="80" pos:column="42">.</op:operator><name pos:line="80" pos:column="43">DAY_OF_MONTH</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="80" pos:column="57">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="81" pos:column="21">endOfDay</name><op:operator pos:line="81" pos:column="29">.</op:operator><name pos:line="81" pos:column="30">add</name></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name><name pos:line="81" pos:column="34">Calendar</name><op:operator pos:line="81" pos:column="42">.</op:operator><name pos:line="81" pos:column="43">SECOND</name></name></expr></argument>, <argument><expr><op:operator pos:line="81" pos:column="51">-</op:operator><lit:literal type="number" pos:line="81" pos:column="52">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="82" pos:column="21">dataSet</name><op:operator pos:line="82" pos:column="28">.</op:operator><name pos:line="82" pos:column="29">add</name></name><argument_list pos:line="82" pos:column="32">(<argument><expr><call><name><name pos:line="82" pos:column="33">dataSet</name><op:operator pos:line="82" pos:column="40">.</op:operator><name pos:line="82" pos:column="41">createDataPoint</name></name><argument_list pos:line="82" pos:column="56">()</argument_list></call>
                            <op:operator pos:line="83" pos:column="29">.</op:operator><call><name pos:line="83" pos:column="30">setTimeInterval</name><argument_list pos:line="83" pos:column="45">(<argument><expr><call><name><name pos:line="83" pos:column="46">c</name><op:operator pos:line="83" pos:column="47">.</op:operator><name pos:line="83" pos:column="48">getLong</name></name><argument_list pos:line="83" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="83" pos:column="56">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="83" pos:column="60">endOfDay</name><op:operator pos:line="83" pos:column="68">.</op:operator><name pos:line="83" pos:column="69">getTimeInMillis</name></name><argument_list pos:line="83" pos:column="84">()</argument_list></call></expr></argument>,
                                    <argument><expr><name><name pos:line="84" pos:column="37">TimeUnit</name><op:operator pos:line="84" pos:column="45">.</op:operator><name pos:line="84" pos:column="46">MILLISECONDS</name></name></expr></argument>)</argument_list></call><op:operator pos:line="84" pos:column="59">.</op:operator><call><name pos:line="84" pos:column="60">setIntValues</name><argument_list pos:line="84" pos:column="72">(<argument><expr><call><name><name pos:line="84" pos:column="73">c</name><op:operator pos:line="84" pos:column="74">.</op:operator><name pos:line="84" pos:column="75">getInt</name></name><argument_list pos:line="84" pos:column="81">(<argument><expr><lit:literal type="number" pos:line="84" pos:column="82">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name><name pos:line="85" pos:column="21">com</name><op:operator pos:line="85" pos:column="24">.</op:operator><name pos:line="85" pos:column="25">google</name><op:operator pos:line="85" pos:column="31">.</op:operator><name pos:line="85" pos:column="32">android</name><op:operator pos:line="85" pos:column="39">.</op:operator><name pos:line="85" pos:column="40">gms</name><op:operator pos:line="85" pos:column="43">.</op:operator><name pos:line="85" pos:column="44">common</name><op:operator pos:line="85" pos:column="50">.</op:operator><name pos:line="85" pos:column="51">api</name><op:operator pos:line="85" pos:column="54">.</op:operator><name pos:line="85" pos:column="55">Status</name></name></type> <name pos:line="85" pos:column="62">insertStatus</name> <init pos:line="85" pos:column="75">=
                            <expr><call><name><name pos:line="86" pos:column="29">Fitness</name><op:operator pos:line="86" pos:column="36">.</op:operator><name pos:line="86" pos:column="37">HistoryApi</name><op:operator pos:line="86" pos:column="47">.</op:operator><name pos:line="86" pos:column="48">insertData</name></name><argument_list pos:line="86" pos:column="58">(<argument><expr><name pos:line="86" pos:column="59">mClient</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="68">dataSet</name></expr></argument>)</argument_list></call>
                                    <op:operator pos:line="87" pos:column="37">.</op:operator><call><name pos:line="87" pos:column="38">await</name><argument_list pos:line="87" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="87" pos:column="44">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="47">TimeUnit</name><op:operator pos:line="87" pos:column="55">.</op:operator><name pos:line="87" pos:column="56">MINUTES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <if pos:line="88" pos:column="21">if <condition pos:line="88" pos:column="24">(<expr><name><name pos:line="88" pos:column="25">BuildConfig</name><op:operator pos:line="88" pos:column="36">.</op:operator><name pos:line="88" pos:column="37">DEBUG</name></name></expr>)</condition><then pos:line="88" pos:column="43"> <expr_stmt><expr><call><name><name pos:line="88" pos:column="44">Logger</name><op:operator pos:line="88" pos:column="50">.</op:operator><name pos:line="88" pos:column="51">log</name></name><argument_list pos:line="88" pos:column="54">(
                            <argument><expr><lit:literal type="string" pos:line="89" pos:column="29">"sync with Fit: "</lit:literal> <op:operator pos:line="89" pos:column="47">+</op:operator> <call><name><name pos:line="89" pos:column="49">c</name><op:operator pos:line="89" pos:column="50">.</op:operator><name pos:line="89" pos:column="51">getLong</name></name><argument_list pos:line="89" pos:column="58">(<argument><expr><lit:literal type="number" pos:line="89" pos:column="59">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="89" pos:column="62">+</op:operator> <lit:literal type="string" pos:line="89" pos:column="64">" - "</lit:literal> <op:operator pos:line="89" pos:column="70">+</op:operator> <call><name><name pos:line="89" pos:column="72">endOfDay</name><op:operator pos:line="89" pos:column="80">.</op:operator><name pos:line="89" pos:column="81">getTimeInMillis</name></name><argument_list pos:line="89" pos:column="96">()</argument_list></call> <op:operator pos:line="89" pos:column="99">+</op:operator>
                                    <lit:literal type="string" pos:line="90" pos:column="37">": "</lit:literal> <op:operator pos:line="90" pos:column="42">+</op:operator> <call><name><name pos:line="90" pos:column="44">c</name><op:operator pos:line="90" pos:column="45">.</op:operator><name pos:line="90" pos:column="46">getInt</name></name><argument_list pos:line="90" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="90" pos:column="53">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="90" pos:column="56">+</op:operator> <lit:literal type="string" pos:line="90" pos:column="58">" steps. Status: "</lit:literal> <op:operator pos:line="90" pos:column="77">+</op:operator>
                                    <call><name><name pos:line="91" pos:column="37">insertStatus</name><op:operator pos:line="91" pos:column="49">.</op:operator><name pos:line="91" pos:column="50">getStatusMessage</name></name><argument_list pos:line="91" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
                }</block></then></if>
                <expr_stmt><expr><name pos:line="93" pos:column="17">syncedUntil</name> <op:operator pos:line="93" pos:column="29">=</op:operator> <call><name><name pos:line="93" pos:column="31">c</name><op:operator pos:line="93" pos:column="32">.</op:operator><name pos:line="93" pos:column="33">getLong</name></name><argument_list pos:line="93" pos:column="40">(<argument><expr><lit:literal type="number" pos:line="93" pos:column="41">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="94" pos:column="17">c</name><op:operator pos:line="94" pos:column="18">.</op:operator><name pos:line="94" pos:column="19">moveToNext</name></name><argument_list pos:line="94" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
            }</block></while>
            <expr_stmt><expr><call><name><name pos:line="96" pos:column="13">c</name><op:operator pos:line="96" pos:column="14">.</op:operator><name pos:line="96" pos:column="15">close</name></name><argument_list pos:line="96" pos:column="20">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="97" pos:column="13">db</name><op:operator pos:line="97" pos:column="15">.</op:operator><name pos:line="97" pos:column="16">close</name></name><argument_list pos:line="97" pos:column="21">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="99" pos:column="13">context</name><op:operator pos:line="99" pos:column="20">.</op:operator><name pos:line="99" pos:column="21">getSharedPreferences</name></name><argument_list pos:line="99" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="99" pos:column="42">"GoogleFit"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="55">Context</name><op:operator pos:line="99" pos:column="62">.</op:operator><name pos:line="99" pos:column="63">MODE_PRIVATE</name></name></expr></argument>)</argument_list></call><op:operator pos:line="99" pos:column="76">.</op:operator><call><name pos:line="99" pos:column="77">edit</name><argument_list pos:line="99" pos:column="81">()</argument_list></call><op:operator pos:line="99" pos:column="83">.</op:operator>
                    <call><name pos:line="100" pos:column="21">putLong</name><argument_list pos:line="100" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="29">"syncedUntil"</lit:literal></expr></argument>, <argument><expr><name pos:line="100" pos:column="44">syncedUntil</name></expr></argument>)</argument_list></call><op:operator pos:line="100" pos:column="56">.</op:operator><call><name pos:line="100" pos:column="57">apply</name><argument_list pos:line="100" pos:column="62">()</argument_list></call></expr>;</expr_stmt>

            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">(<expr><name><name pos:line="102" pos:column="17">BuildConfig</name><op:operator pos:line="102" pos:column="28">.</op:operator><name pos:line="102" pos:column="29">DEBUG</name></name> <op:operator pos:line="102" pos:column="35">&amp;&amp;</op:operator> <lit:literal type="boolean" pos:line="102" pos:column="38">false</lit:literal></expr>)</condition><then pos:line="102" pos:column="44"> <block pos:line="102" pos:column="45">{ <comment type="line" pos:line="102" pos:column="47">// print last week</comment>
                <decl_stmt><decl><type><name pos:line="103" pos:column="17">Calendar</name></type> <name pos:line="103" pos:column="26">cal</name> <init pos:line="103" pos:column="30">= <expr><call><name><name pos:line="103" pos:column="32">Calendar</name><op:operator pos:line="103" pos:column="40">.</op:operator><name pos:line="103" pos:column="41">getInstance</name></name><argument_list pos:line="103" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="104" pos:column="17">Date</name></type> <name pos:line="104" pos:column="22">now</name> <init pos:line="104" pos:column="26">= <expr><op:operator pos:line="104" pos:column="28">new</op:operator> <call><name pos:line="104" pos:column="32">Date</name><argument_list pos:line="104" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="105" pos:column="17">cal</name><op:operator pos:line="105" pos:column="20">.</op:operator><name pos:line="105" pos:column="21">setTime</name></name><argument_list pos:line="105" pos:column="28">(<argument><expr><name pos:line="105" pos:column="29">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="106" pos:column="17">long</name></type> <name pos:line="106" pos:column="22">endTime</name> <init pos:line="106" pos:column="30">= <expr><call><name><name pos:line="106" pos:column="32">cal</name><op:operator pos:line="106" pos:column="35">.</op:operator><name pos:line="106" pos:column="36">getTimeInMillis</name></name><argument_list pos:line="106" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="107" pos:column="17">cal</name><op:operator pos:line="107" pos:column="20">.</op:operator><name pos:line="107" pos:column="21">add</name></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name><name pos:line="107" pos:column="25">Calendar</name><op:operator pos:line="107" pos:column="33">.</op:operator><name pos:line="107" pos:column="34">WEEK_OF_YEAR</name></name></expr></argument>, <argument><expr><op:operator pos:line="107" pos:column="48">-</op:operator><lit:literal type="number" pos:line="107" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="108" pos:column="17">long</name></type> <name pos:line="108" pos:column="22">startTime</name> <init pos:line="108" pos:column="32">= <expr><call><name><name pos:line="108" pos:column="34">cal</name><op:operator pos:line="108" pos:column="37">.</op:operator><name pos:line="108" pos:column="38">getTimeInMillis</name></name><argument_list pos:line="108" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="109" pos:column="17">DataReadRequest</name></type> <name pos:line="109" pos:column="33">readRequest</name> <init pos:line="109" pos:column="45">= <expr><op:operator pos:line="109" pos:column="47">new</op:operator> <call><name><name pos:line="109" pos:column="51">DataReadRequest</name><op:operator pos:line="109" pos:column="66">.</op:operator><name pos:line="109" pos:column="67">Builder</name></name><argument_list pos:line="109" pos:column="74">()</argument_list></call>
                        <op:operator pos:line="110" pos:column="25">.</op:operator><call><name pos:line="110" pos:column="26">aggregate</name><argument_list pos:line="110" pos:column="35">(<argument><expr><name><name pos:line="110" pos:column="36">DataType</name><op:operator pos:line="110" pos:column="44">.</op:operator><name pos:line="110" pos:column="45">TYPE_STEP_COUNT_DELTA</name></name></expr></argument>,
                                <argument><expr><name><name pos:line="111" pos:column="33">DataType</name><op:operator pos:line="111" pos:column="41">.</op:operator><name pos:line="111" pos:column="42">AGGREGATE_STEP_COUNT_DELTA</name></name></expr></argument>)</argument_list></call><op:operator pos:line="111" pos:column="69">.</op:operator><call><name pos:line="111" pos:column="70">bucketByTime</name><argument_list pos:line="111" pos:column="82">(<argument><expr><lit:literal type="number" pos:line="111" pos:column="83">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="111" pos:column="86">TimeUnit</name><op:operator pos:line="111" pos:column="94">.</op:operator><name pos:line="111" pos:column="95">DAYS</name></name></expr></argument>)</argument_list></call>
                        <op:operator pos:line="112" pos:column="25">.</op:operator><call><name pos:line="112" pos:column="26">setTimeRange</name><argument_list pos:line="112" pos:column="38">(<argument><expr><name pos:line="112" pos:column="39">startTime</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="50">endTime</name></expr></argument>, <argument><expr><name><name pos:line="112" pos:column="59">TimeUnit</name><op:operator pos:line="112" pos:column="67">.</op:operator><name pos:line="112" pos:column="68">MILLISECONDS</name></name></expr></argument>)</argument_list></call><op:operator pos:line="112" pos:column="81">.</op:operator><call><name pos:line="112" pos:column="82">build</name><argument_list pos:line="112" pos:column="87">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="113" pos:column="17">DataReadResult</name></type> <name pos:line="113" pos:column="32">dataReadResult</name> <init pos:line="113" pos:column="47">= <expr><call><name><name pos:line="113" pos:column="49">Fitness</name><op:operator pos:line="113" pos:column="56">.</op:operator><name pos:line="113" pos:column="57">HistoryApi</name><op:operator pos:line="113" pos:column="67">.</op:operator><name pos:line="113" pos:column="68">readData</name></name><argument_list pos:line="113" pos:column="76">(<argument><expr><name pos:line="113" pos:column="77">mClient</name></expr></argument>, <argument><expr><name pos:line="113" pos:column="86">readRequest</name></expr></argument>)</argument_list></call>
                        <op:operator pos:line="114" pos:column="25">.</op:operator><call><name pos:line="114" pos:column="26">await</name><argument_list pos:line="114" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="114" pos:column="32">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="114" pos:column="35">TimeUnit</name><op:operator pos:line="114" pos:column="43">.</op:operator><name pos:line="114" pos:column="44">MINUTES</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><name pos:line="115" pos:column="17">SimpleDateFormat</name></type> <name pos:line="115" pos:column="34">dateFormat</name> <init pos:line="115" pos:column="45">= <expr><op:operator pos:line="115" pos:column="47">new</op:operator> <call><name pos:line="115" pos:column="51">SimpleDateFormat</name><argument_list pos:line="115" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="68">"yyyy.MM.dd HH:mm:ss"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><call><name><name pos:line="116" pos:column="21">dataReadResult</name><op:operator pos:line="116" pos:column="35">.</op:operator><name pos:line="116" pos:column="36">getBuckets</name></name><argument_list pos:line="116" pos:column="46">()</argument_list></call><op:operator pos:line="116" pos:column="48">.</op:operator><call><name pos:line="116" pos:column="49">size</name><argument_list pos:line="116" pos:column="53">()</argument_list></call> <op:operator pos:line="116" pos:column="56">&gt;</op:operator> <lit:literal type="number" pos:line="116" pos:column="58">0</lit:literal></expr>)</condition><then pos:line="116" pos:column="60"> <block pos:line="116" pos:column="61">{
                    <expr_stmt><expr><call><name><name pos:line="117" pos:column="21">Logger</name><op:operator pos:line="117" pos:column="27">.</op:operator><name pos:line="117" pos:column="28">log</name></name><argument_list pos:line="117" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="32">"Number of returned buckets of DataSets is: "</lit:literal> <op:operator pos:line="117" pos:column="78">+</op:operator>
                            <call><name><name pos:line="118" pos:column="29">dataReadResult</name><op:operator pos:line="118" pos:column="43">.</op:operator><name pos:line="118" pos:column="44">getBuckets</name></name><argument_list pos:line="118" pos:column="54">()</argument_list></call><op:operator pos:line="118" pos:column="56">.</op:operator><call><name pos:line="118" pos:column="57">size</name><argument_list pos:line="118" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <for pos:line="119" pos:column="21">for (<init><decl><type><name pos:line="119" pos:column="26">Bucket</name></type> <name pos:line="119" pos:column="33">bucket</name> <range pos:line="119" pos:column="40">: <expr><call><name><name pos:line="119" pos:column="42">dataReadResult</name><op:operator pos:line="119" pos:column="56">.</op:operator><name pos:line="119" pos:column="57">getBuckets</name></name><argument_list pos:line="119" pos:column="67">()</argument_list></call></expr></range></decl></init>) <block pos:line="119" pos:column="71">{
                        <decl_stmt><decl><type><name><name pos:line="120" pos:column="25">List</name><argument_list pos:line="120" pos:column="29">&lt;<argument><name pos:line="120" pos:column="30">DataSet</name></argument>&gt;</argument_list></name></type> <name pos:line="120" pos:column="39">dataSets</name> <init pos:line="120" pos:column="48">= <expr><call><name><name pos:line="120" pos:column="50">bucket</name><op:operator pos:line="120" pos:column="56">.</op:operator><name pos:line="120" pos:column="57">getDataSets</name></name><argument_list pos:line="120" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
                        <for pos:line="121" pos:column="25">for (<init><decl><type><name pos:line="121" pos:column="30">DataSet</name></type> <name pos:line="121" pos:column="38">dataSet</name> <range pos:line="121" pos:column="46">: <expr><name pos:line="121" pos:column="48">dataSets</name></expr></range></decl></init>) <block pos:line="121" pos:column="58">{
                            <for pos:line="122" pos:column="29">for (<init><decl><type><name pos:line="122" pos:column="34">DataPoint</name></type> <name pos:line="122" pos:column="44">dp</name> <range pos:line="122" pos:column="47">: <expr><call><name><name pos:line="122" pos:column="49">dataSet</name><op:operator pos:line="122" pos:column="56">.</op:operator><name pos:line="122" pos:column="57">getDataPoints</name></name><argument_list pos:line="122" pos:column="70">()</argument_list></call></expr></range></decl></init>) <block pos:line="122" pos:column="74">{
                                <expr_stmt><expr><call><name><name pos:line="123" pos:column="33">Logger</name><op:operator pos:line="123" pos:column="39">.</op:operator><name pos:line="123" pos:column="40">log</name></name><argument_list pos:line="123" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="44">"Data point:"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="124" pos:column="33">Logger</name><op:operator pos:line="124" pos:column="39">.</op:operator><name pos:line="124" pos:column="40">log</name></name><argument_list pos:line="124" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="44">"\tType: "</lit:literal> <op:operator pos:line="124" pos:column="55">+</op:operator> <call><name><name pos:line="124" pos:column="57">dp</name><op:operator pos:line="124" pos:column="59">.</op:operator><name pos:line="124" pos:column="60">getDataType</name></name><argument_list pos:line="124" pos:column="71">()</argument_list></call><op:operator pos:line="124" pos:column="73">.</op:operator><call><name pos:line="124" pos:column="74">getName</name><argument_list pos:line="124" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="125" pos:column="33">Logger</name><op:operator pos:line="125" pos:column="39">.</op:operator><name pos:line="125" pos:column="40">log</name></name><argument_list pos:line="125" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="44">"\tStart: "</lit:literal> <op:operator pos:line="125" pos:column="56">+</op:operator>
                                        <call><name><name pos:line="126" pos:column="41">dateFormat</name><op:operator pos:line="126" pos:column="51">.</op:operator><name pos:line="126" pos:column="52">format</name></name><argument_list pos:line="126" pos:column="58">(<argument><expr><call><name><name pos:line="126" pos:column="59">dp</name><op:operator pos:line="126" pos:column="61">.</op:operator><name pos:line="126" pos:column="62">getStartTime</name></name><argument_list pos:line="126" pos:column="74">(<argument><expr><name><name pos:line="126" pos:column="75">TimeUnit</name><op:operator pos:line="126" pos:column="83">.</op:operator><name pos:line="126" pos:column="84">MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <expr_stmt><expr><call><name><name pos:line="127" pos:column="33">Logger</name><op:operator pos:line="127" pos:column="39">.</op:operator><name pos:line="127" pos:column="40">log</name></name><argument_list pos:line="127" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="44">"\tEnd: "</lit:literal> <op:operator pos:line="127" pos:column="54">+</op:operator>
                                        <call><name><name pos:line="128" pos:column="41">dateFormat</name><op:operator pos:line="128" pos:column="51">.</op:operator><name pos:line="128" pos:column="52">format</name></name><argument_list pos:line="128" pos:column="58">(<argument><expr><call><name><name pos:line="128" pos:column="59">dp</name><op:operator pos:line="128" pos:column="61">.</op:operator><name pos:line="128" pos:column="62">getEndTime</name></name><argument_list pos:line="128" pos:column="72">(<argument><expr><name><name pos:line="128" pos:column="73">TimeUnit</name><op:operator pos:line="128" pos:column="81">.</op:operator><name pos:line="128" pos:column="82">MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                <for pos:line="129" pos:column="33">for (<init><decl><type><name pos:line="129" pos:column="38">Field</name></type> <name pos:line="129" pos:column="44">field</name> <range pos:line="129" pos:column="50">: <expr><call><name><name pos:line="129" pos:column="52">dp</name><op:operator pos:line="129" pos:column="54">.</op:operator><name pos:line="129" pos:column="55">getDataType</name></name><argument_list pos:line="129" pos:column="66">()</argument_list></call><op:operator pos:line="129" pos:column="68">.</op:operator><call><name pos:line="129" pos:column="69">getFields</name><argument_list pos:line="129" pos:column="78">()</argument_list></call></expr></range></decl></init>) <block pos:line="129" pos:column="82">{
                                    <expr_stmt><expr><call><name><name pos:line="130" pos:column="37">Logger</name><op:operator pos:line="130" pos:column="43">.</op:operator><name pos:line="130" pos:column="44">log</name></name><argument_list pos:line="130" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="130" pos:column="48">"\tField: "</lit:literal> <op:operator pos:line="130" pos:column="60">+</op:operator> <call><name><name pos:line="130" pos:column="62">field</name><op:operator pos:line="130" pos:column="67">.</op:operator><name pos:line="130" pos:column="68">getName</name></name><argument_list pos:line="130" pos:column="75">()</argument_list></call> <op:operator pos:line="130" pos:column="78">+</op:operator>
                                            <lit:literal type="string" pos:line="131" pos:column="45">" Value: "</lit:literal> <op:operator pos:line="131" pos:column="56">+</op:operator> <call><name><name pos:line="131" pos:column="58">dp</name><op:operator pos:line="131" pos:column="60">.</op:operator><name pos:line="131" pos:column="61">getValue</name></name><argument_list pos:line="131" pos:column="69">(<argument><expr><name pos:line="131" pos:column="70">field</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                                }</block></for>
                            }</block></for>
                        }</block></for>
                    }</block></for>
                }</block></then> <else pos:line="136" pos:column="19">else <if pos:line="136" pos:column="24">if <condition pos:line="136" pos:column="27">(<expr><call><name><name pos:line="136" pos:column="28">dataReadResult</name><op:operator pos:line="136" pos:column="42">.</op:operator><name pos:line="136" pos:column="43">getDataSets</name></name><argument_list pos:line="136" pos:column="54">()</argument_list></call><op:operator pos:line="136" pos:column="56">.</op:operator><call><name pos:line="136" pos:column="57">size</name><argument_list pos:line="136" pos:column="61">()</argument_list></call> <op:operator pos:line="136" pos:column="64">&gt;</op:operator> <lit:literal type="number" pos:line="136" pos:column="66">0</lit:literal></expr>)</condition><then pos:line="136" pos:column="68"> <block pos:line="136" pos:column="69">{
                    <expr_stmt><expr><call><name><name pos:line="137" pos:column="21">Logger</name><op:operator pos:line="137" pos:column="27">.</op:operator><name pos:line="137" pos:column="28">log</name></name><argument_list pos:line="137" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="137" pos:column="32">"Number of returned DataSets is: "</lit:literal> <op:operator pos:line="137" pos:column="67">+</op:operator>
                            <call><name><name pos:line="138" pos:column="29">dataReadResult</name><op:operator pos:line="138" pos:column="43">.</op:operator><name pos:line="138" pos:column="44">getDataSets</name></name><argument_list pos:line="138" pos:column="55">()</argument_list></call><op:operator pos:line="138" pos:column="57">.</op:operator><call><name pos:line="138" pos:column="58">size</name><argument_list pos:line="138" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <for pos:line="139" pos:column="21">for (<init><decl><type><name pos:line="139" pos:column="26">DataSet</name></type> <name pos:line="139" pos:column="34">dataSet</name> <range pos:line="139" pos:column="42">: <expr><call><name><name pos:line="139" pos:column="44">dataReadResult</name><op:operator pos:line="139" pos:column="58">.</op:operator><name pos:line="139" pos:column="59">getDataSets</name></name><argument_list pos:line="139" pos:column="70">()</argument_list></call></expr></range></decl></init>) <block pos:line="139" pos:column="74">{
                        <for pos:line="140" pos:column="25">for (<init><decl><type><name pos:line="140" pos:column="30">DataPoint</name></type> <name pos:line="140" pos:column="40">dp</name> <range pos:line="140" pos:column="43">: <expr><call><name><name pos:line="140" pos:column="45">dataSet</name><op:operator pos:line="140" pos:column="52">.</op:operator><name pos:line="140" pos:column="53">getDataPoints</name></name><argument_list pos:line="140" pos:column="66">()</argument_list></call></expr></range></decl></init>) <block pos:line="140" pos:column="70">{
                            <expr_stmt><expr><call><name><name pos:line="141" pos:column="29">Logger</name><op:operator pos:line="141" pos:column="35">.</op:operator><name pos:line="141" pos:column="36">log</name></name><argument_list pos:line="141" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="141" pos:column="40">"Data point:"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="142" pos:column="29">Logger</name><op:operator pos:line="142" pos:column="35">.</op:operator><name pos:line="142" pos:column="36">log</name></name><argument_list pos:line="142" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="142" pos:column="40">"\tType: "</lit:literal> <op:operator pos:line="142" pos:column="51">+</op:operator> <call><name><name pos:line="142" pos:column="53">dp</name><op:operator pos:line="142" pos:column="55">.</op:operator><name pos:line="142" pos:column="56">getDataType</name></name><argument_list pos:line="142" pos:column="67">()</argument_list></call><op:operator pos:line="142" pos:column="69">.</op:operator><call><name pos:line="142" pos:column="70">getName</name><argument_list pos:line="142" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="143" pos:column="29">Logger</name><op:operator pos:line="143" pos:column="35">.</op:operator><name pos:line="143" pos:column="36">log</name></name><argument_list pos:line="143" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="40">"\tStart: "</lit:literal> <op:operator pos:line="143" pos:column="52">+</op:operator>
                                    <call><name><name pos:line="144" pos:column="37">dateFormat</name><op:operator pos:line="144" pos:column="47">.</op:operator><name pos:line="144" pos:column="48">format</name></name><argument_list pos:line="144" pos:column="54">(<argument><expr><call><name><name pos:line="144" pos:column="55">dp</name><op:operator pos:line="144" pos:column="57">.</op:operator><name pos:line="144" pos:column="58">getStartTime</name></name><argument_list pos:line="144" pos:column="70">(<argument><expr><name><name pos:line="144" pos:column="71">TimeUnit</name><op:operator pos:line="144" pos:column="79">.</op:operator><name pos:line="144" pos:column="80">MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <expr_stmt><expr><call><name><name pos:line="145" pos:column="29">Logger</name><op:operator pos:line="145" pos:column="35">.</op:operator><name pos:line="145" pos:column="36">log</name></name><argument_list pos:line="145" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="145" pos:column="40">"\tEnd: "</lit:literal> <op:operator pos:line="145" pos:column="50">+</op:operator>
                                    <call><name><name pos:line="146" pos:column="37">dateFormat</name><op:operator pos:line="146" pos:column="47">.</op:operator><name pos:line="146" pos:column="48">format</name></name><argument_list pos:line="146" pos:column="54">(<argument><expr><call><name><name pos:line="146" pos:column="55">dp</name><op:operator pos:line="146" pos:column="57">.</op:operator><name pos:line="146" pos:column="58">getEndTime</name></name><argument_list pos:line="146" pos:column="68">(<argument><expr><name><name pos:line="146" pos:column="69">TimeUnit</name><op:operator pos:line="146" pos:column="77">.</op:operator><name pos:line="146" pos:column="78">MILLISECONDS</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            <for pos:line="147" pos:column="29">for (<init><decl><type><name pos:line="147" pos:column="34">Field</name></type> <name pos:line="147" pos:column="40">field</name> <range pos:line="147" pos:column="46">: <expr><call><name><name pos:line="147" pos:column="48">dp</name><op:operator pos:line="147" pos:column="50">.</op:operator><name pos:line="147" pos:column="51">getDataType</name></name><argument_list pos:line="147" pos:column="62">()</argument_list></call><op:operator pos:line="147" pos:column="64">.</op:operator><call><name pos:line="147" pos:column="65">getFields</name><argument_list pos:line="147" pos:column="74">()</argument_list></call></expr></range></decl></init>) <block pos:line="147" pos:column="78">{
                                <expr_stmt><expr><call><name><name pos:line="148" pos:column="33">Logger</name><op:operator pos:line="148" pos:column="39">.</op:operator><name pos:line="148" pos:column="40">log</name></name><argument_list pos:line="148" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="148" pos:column="44">"\tField: "</lit:literal> <op:operator pos:line="148" pos:column="56">+</op:operator> <call><name><name pos:line="148" pos:column="58">field</name><op:operator pos:line="148" pos:column="63">.</op:operator><name pos:line="148" pos:column="64">getName</name></name><argument_list pos:line="148" pos:column="71">()</argument_list></call> <op:operator pos:line="148" pos:column="74">+</op:operator>
                                        <lit:literal type="string" pos:line="149" pos:column="41">" Value: "</lit:literal> <op:operator pos:line="149" pos:column="52">+</op:operator> <call><name><name pos:line="149" pos:column="54">dp</name><op:operator pos:line="149" pos:column="56">.</op:operator><name pos:line="149" pos:column="57">getValue</name></name><argument_list pos:line="149" pos:column="65">(<argument><expr><name pos:line="149" pos:column="66">field</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                            }</block></for>
                        }</block></for>
                    }</block></for>
                }</block></then></if></else></if>
            }</block></then></if>
            <return pos:line="155" pos:column="13">return <expr><lit:literal type="null" pos:line="155" pos:column="20">null</lit:literal></expr>;</return>
        }</block></function>
    }</block></class>

}</block></class>
</unit>
