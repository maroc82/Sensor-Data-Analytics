<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\Pedometer-master\src\main\java\de\j4velin\pedometer\util\PlayServices.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * Copyright 2013 Thomas Hoffmann
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package pos:line="17" pos:column="1">package <name><name pos:line="17" pos:column="9">de</name><op:operator pos:line="17" pos:column="11">.</op:operator><name pos:line="17" pos:column="12">j4velin</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">pedometer</name><op:operator pos:line="17" pos:column="29">.</op:operator><name pos:line="17" pos:column="30">util</name></name>;</package>

<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">android</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">content</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">Context</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">android</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">content</name><op:operator pos:line="20" pos:column="23">.</op:operator><name pos:line="20" pos:column="24">SharedPreferences</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">android</name><op:operator pos:line="21" pos:column="15">.</op:operator><name pos:line="21" pos:column="16">database</name><op:operator pos:line="21" pos:column="24">.</op:operator><name pos:line="21" pos:column="25">Cursor</name></name>;</import>
<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">android</name><op:operator pos:line="22" pos:column="15">.</op:operator><name pos:line="22" pos:column="16">preference</name><op:operator pos:line="22" pos:column="26">.</op:operator><name pos:line="22" pos:column="27">PreferenceManager</name></name>;</import>

<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">com</name><op:operator pos:line="24" pos:column="11">.</op:operator><name pos:line="24" pos:column="12">google</name><op:operator pos:line="24" pos:column="18">.</op:operator><name pos:line="24" pos:column="19">android</name><op:operator pos:line="24" pos:column="26">.</op:operator><name pos:line="24" pos:column="27">gms</name><op:operator pos:line="24" pos:column="30">.</op:operator><name pos:line="24" pos:column="31">common</name><op:operator pos:line="24" pos:column="37">.</op:operator><name pos:line="24" pos:column="38">api</name><op:operator pos:line="24" pos:column="41">.</op:operator><name pos:line="24" pos:column="42">GoogleApiClient</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">com</name><op:operator pos:line="25" pos:column="11">.</op:operator><name pos:line="25" pos:column="12">google</name><op:operator pos:line="25" pos:column="18">.</op:operator><name pos:line="25" pos:column="19">android</name><op:operator pos:line="25" pos:column="26">.</op:operator><name pos:line="25" pos:column="27">gms</name><op:operator pos:line="25" pos:column="30">.</op:operator><name pos:line="25" pos:column="31">games</name><op:operator pos:line="25" pos:column="36">.</op:operator><name pos:line="25" pos:column="37">Games</name></name>;</import>

<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">de</name><op:operator pos:line="27" pos:column="10">.</op:operator><name pos:line="27" pos:column="11">j4velin</name><op:operator pos:line="27" pos:column="18">.</op:operator><name pos:line="27" pos:column="19">pedometer</name><op:operator pos:line="27" pos:column="28">.</op:operator><name pos:line="27" pos:column="29">Database</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">de</name><op:operator pos:line="28" pos:column="10">.</op:operator><name pos:line="28" pos:column="11">j4velin</name><op:operator pos:line="28" pos:column="18">.</op:operator><name pos:line="28" pos:column="19">pedometer</name><op:operator pos:line="28" pos:column="28">.</op:operator><name pos:line="28" pos:column="29">R</name></name>;</import>

<comment type="block" format="javadoc" pos:line="30" pos:column="1">/**
 * Class to manage the Google Play achievements
 */</comment>
<class><specifier pos:line="33" pos:column="1">public</specifier> class <name pos:line="33" pos:column="14">PlayServices</name> <block pos:line="33" pos:column="27">{

    <comment type="block" format="javadoc" pos:line="35" pos:column="5">/**
     * Updates the 'most steps walked' leaderboard score
     *
     * @param gc         the GamesClient
     * @param c          the Context
     * @param totalSteps the new score = total steps walked
     */</comment>
    <function><type><specifier pos:line="42" pos:column="5">private</specifier> <specifier pos:line="42" pos:column="13">static</specifier> <name pos:line="42" pos:column="20">void</name></type> <name pos:line="42" pos:column="25">updateTotalLeaderboard</name><parameter_list pos:line="42" pos:column="47">(<param><decl><type><specifier pos:line="42" pos:column="48">final</specifier> <name pos:line="42" pos:column="54">GoogleApiClient</name></type> <name pos:line="42" pos:column="70">gc</name></decl></param>, <param><decl><type><specifier pos:line="42" pos:column="74">final</specifier> <name pos:line="42" pos:column="80">Context</name></type> <name pos:line="42" pos:column="88">c</name></decl></param>, <param><decl><type><name pos:line="42" pos:column="91">int</name></type> <name pos:line="42" pos:column="95">totalSteps</name></decl></param>)</parameter_list> <block pos:line="42" pos:column="107">{
        <comment type="line" pos:line="43" pos:column="9">// some cheat detection needed?</comment>
        <expr_stmt><expr><call><name><name pos:line="44" pos:column="9">Games</name><op:operator pos:line="44" pos:column="14">.</op:operator><name pos:line="44" pos:column="15">Leaderboards</name>
                <op:operator pos:line="45" pos:column="17">.</op:operator><name pos:line="45" pos:column="18">submitScore</name></name><argument_list pos:line="45" pos:column="29">(<argument><expr><name pos:line="45" pos:column="30">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="45" pos:column="34">c</name><op:operator pos:line="45" pos:column="35">.</op:operator><name pos:line="45" pos:column="36">getString</name></name><argument_list pos:line="45" pos:column="45">(<argument><expr><name><name pos:line="45" pos:column="46">R</name><op:operator pos:line="45" pos:column="47">.</op:operator><name pos:line="45" pos:column="48">string</name><op:operator pos:line="45" pos:column="54">.</op:operator><name pos:line="45" pos:column="55">leaderboard_most_steps_walked</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="45" pos:column="87">totalSteps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="48" pos:column="5">/**
     * Updates the 'most steps walked in one day' leaderboard score
     *
     * @param gc    the GamesClient
     * @param c     the Context
     * @param steps the new score = max number of steps walked in one day
     */</comment>
    <function><type><specifier pos:line="55" pos:column="5">private</specifier> <specifier pos:line="55" pos:column="13">static</specifier> <name pos:line="55" pos:column="20">void</name></type> <name pos:line="55" pos:column="25">updateOneDayLeaderboard</name><parameter_list pos:line="55" pos:column="48">(<param><decl><type><specifier pos:line="55" pos:column="49">final</specifier> <name pos:line="55" pos:column="55">GoogleApiClient</name></type> <name pos:line="55" pos:column="71">gc</name></decl></param>, <param><decl><type><specifier pos:line="55" pos:column="75">final</specifier> <name pos:line="55" pos:column="81">Context</name></type> <name pos:line="55" pos:column="89">c</name></decl></param>, <param><decl><type><name pos:line="55" pos:column="92">int</name></type> <name pos:line="55" pos:column="96">steps</name></decl></param>)</parameter_list> <block pos:line="55" pos:column="103">{
        <comment type="line" pos:line="56" pos:column="9">// some cheat detection needed?</comment>
        <expr_stmt><expr><call><name><name pos:line="57" pos:column="9">Games</name><op:operator pos:line="57" pos:column="14">.</op:operator><name pos:line="57" pos:column="15">Leaderboards</name>
                <op:operator pos:line="58" pos:column="17">.</op:operator><name pos:line="58" pos:column="18">submitScore</name></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name pos:line="58" pos:column="30">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="58" pos:column="34">c</name><op:operator pos:line="58" pos:column="35">.</op:operator><name pos:line="58" pos:column="36">getString</name></name><argument_list pos:line="58" pos:column="45">(<argument><expr><name><name pos:line="58" pos:column="46">R</name><op:operator pos:line="58" pos:column="47">.</op:operator><name pos:line="58" pos:column="48">string</name><op:operator pos:line="58" pos:column="54">.</op:operator><name pos:line="58" pos:column="55">leaderboard_most_steps_walked_in_one_day</name></name></expr></argument>)</argument_list></call></expr></argument>,
                        <argument><expr><name pos:line="59" pos:column="25">steps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="62" pos:column="5">/**
     * Updates the 'hightest average' leaderboard score
     *
     * @param gc  the GamesClient
     * @param c   the Context
     * @param avg the new score = current average
     */</comment>
    <function><type><specifier pos:line="69" pos:column="5">private</specifier> <specifier pos:line="69" pos:column="13">static</specifier> <name pos:line="69" pos:column="20">void</name></type> <name pos:line="69" pos:column="25">updateAverageLeaderboard</name><parameter_list pos:line="69" pos:column="49">(<param><decl><type><specifier pos:line="69" pos:column="50">final</specifier> <name pos:line="69" pos:column="56">GoogleApiClient</name></type> <name pos:line="69" pos:column="72">gc</name></decl></param>, <param><decl><type><specifier pos:line="69" pos:column="76">final</specifier> <name pos:line="69" pos:column="82">Context</name></type> <name pos:line="69" pos:column="90">c</name></decl></param>, <param><decl><type><name pos:line="69" pos:column="93">float</name></type> <name pos:line="69" pos:column="99">avg</name></decl></param>)</parameter_list> <block pos:line="69" pos:column="104">{
        <comment type="line" pos:line="70" pos:column="9">// some cheat detection needed?</comment>
        <expr_stmt><expr><call><name><name pos:line="71" pos:column="9">Games</name><op:operator pos:line="71" pos:column="14">.</op:operator><name pos:line="71" pos:column="15">Leaderboards</name>
                <op:operator pos:line="72" pos:column="17">.</op:operator><name pos:line="72" pos:column="18">submitScore</name></name><argument_list pos:line="72" pos:column="29">(<argument><expr><name pos:line="72" pos:column="30">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="72" pos:column="34">c</name><op:operator pos:line="72" pos:column="35">.</op:operator><name pos:line="72" pos:column="36">getString</name></name><argument_list pos:line="72" pos:column="45">(<argument><expr><name><name pos:line="72" pos:column="46">R</name><op:operator pos:line="72" pos:column="47">.</op:operator><name pos:line="72" pos:column="48">string</name><op:operator pos:line="72" pos:column="54">.</op:operator><name pos:line="72" pos:column="55">leaderboard_highest_average</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="72" pos:column="85">(</op:operator><name pos:line="72" pos:column="86">long</name><op:operator pos:line="72" pos:column="90">)</op:operator> <name pos:line="72" pos:column="92">avg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="javadoc" pos:line="75" pos:column="5">/**
     * Check the conditions for not-yet-unlocked achievements and unlock them if
     * the condition is met and updates the leaderboard
     *
     * @param gc      the GamesClient
     * @param context the Context
     */</comment>
    <function><type><specifier pos:line="82" pos:column="5">public</specifier> <specifier pos:line="82" pos:column="12">static</specifier> <name pos:line="82" pos:column="19">void</name></type> <name pos:line="82" pos:column="24">achievementsAndLeaderboard</name><parameter_list pos:line="82" pos:column="50">(<param><decl><type><specifier pos:line="82" pos:column="51">final</specifier> <name pos:line="82" pos:column="57">GoogleApiClient</name></type> <name pos:line="82" pos:column="73">gc</name></decl></param>, <param><decl><type><specifier pos:line="82" pos:column="77">final</specifier> <name pos:line="82" pos:column="83">Context</name></type> <name pos:line="82" pos:column="91">context</name></decl></param>)</parameter_list> <block pos:line="82" pos:column="100">{
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><call><name><name pos:line="83" pos:column="13">gc</name><op:operator pos:line="83" pos:column="15">.</op:operator><name pos:line="83" pos:column="16">isConnected</name></name><argument_list pos:line="83" pos:column="27">()</argument_list></call></expr>)</condition><then pos:line="83" pos:column="30"> <block pos:line="83" pos:column="31">{
            <decl_stmt><decl><type><name pos:line="84" pos:column="13">Database</name></type> <name pos:line="84" pos:column="22">db</name> <init pos:line="84" pos:column="25">= <expr><call><name><name pos:line="84" pos:column="27">Database</name><op:operator pos:line="84" pos:column="35">.</op:operator><name pos:line="84" pos:column="36">getInstance</name></name><argument_list pos:line="84" pos:column="47">(<argument><expr><name pos:line="84" pos:column="48">context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="85" pos:column="13">db</name><op:operator pos:line="85" pos:column="15">.</op:operator><name pos:line="85" pos:column="16">removeInvalidEntries</name></name><argument_list pos:line="85" pos:column="36">()</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="87" pos:column="13">SharedPreferences</name></type> <name pos:line="87" pos:column="31">prefs</name> <init pos:line="87" pos:column="37">= <expr><call><name><name pos:line="87" pos:column="39">PreferenceManager</name><op:operator pos:line="87" pos:column="56">.</op:operator><name pos:line="87" pos:column="57">getDefaultSharedPreferences</name></name><argument_list pos:line="87" pos:column="84">(<argument><expr><name pos:line="87" pos:column="85">context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="88" pos:column="13">if <condition pos:line="88" pos:column="16">(<expr><op:operator pos:line="88" pos:column="17">!</op:operator><call><name><name pos:line="88" pos:column="18">prefs</name><op:operator pos:line="88" pos:column="23">.</op:operator><name pos:line="88" pos:column="24">getBoolean</name></name><argument_list pos:line="88" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="88" pos:column="35">"achievement_boot_are_made_for_walking"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="88" pos:column="76">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="88" pos:column="83"> <block pos:line="88" pos:column="84">{
                <decl_stmt><decl><type><name pos:line="89" pos:column="17">Cursor</name></type> <name pos:line="89" pos:column="24">c</name> <init pos:line="89" pos:column="26">= <expr><call><name><name pos:line="89" pos:column="28">db</name><op:operator pos:line="89" pos:column="30">.</op:operator><name pos:line="89" pos:column="31">query</name></name><argument_list pos:line="89" pos:column="36">(<argument><expr><op:operator pos:line="89" pos:column="37">new</op:operator> <name><name pos:line="89" pos:column="41">String</name><index pos:line="89" pos:column="47">[]</index></name><block pos:line="89" pos:column="49">{<expr><lit:literal type="string" pos:line="89" pos:column="50">"steps"</lit:literal></expr>}</block></expr></argument>, <argument><expr><lit:literal type="string" pos:line="89" pos:column="60">"steps &gt;= 7500 AND date &gt; 0"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="89" pos:column="90">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="89" pos:column="96">null</lit:literal></expr></argument>,
                        <argument><expr><lit:literal type="null" pos:line="90" pos:column="25">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="90" pos:column="31">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="90" pos:column="37">"1"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="91" pos:column="17">if <condition pos:line="91" pos:column="20">(<expr><call><name><name pos:line="91" pos:column="21">c</name><op:operator pos:line="91" pos:column="22">.</op:operator><name pos:line="91" pos:column="23">getCount</name></name><argument_list pos:line="91" pos:column="31">()</argument_list></call> <op:operator pos:line="91" pos:column="34">&gt;=</op:operator> <lit:literal type="number" pos:line="91" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="91" pos:column="39"> <block pos:line="91" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="92" pos:column="21">unlockAchievement</name><argument_list pos:line="92" pos:column="38">(<argument><expr><name pos:line="92" pos:column="39">gc</name></expr></argument>,
                            <argument><expr><call><name><name pos:line="93" pos:column="29">context</name><op:operator pos:line="93" pos:column="36">.</op:operator><name pos:line="93" pos:column="37">getString</name></name><argument_list pos:line="93" pos:column="46">(<argument><expr><name><name pos:line="93" pos:column="47">R</name><op:operator pos:line="93" pos:column="48">.</op:operator><name pos:line="93" pos:column="49">string</name><op:operator pos:line="93" pos:column="55">.</op:operator><name pos:line="93" pos:column="56">achievement_boots_made_for_walking</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="94" pos:column="21">prefs</name><op:operator pos:line="94" pos:column="26">.</op:operator><name pos:line="94" pos:column="27">edit</name></name><argument_list pos:line="94" pos:column="31">()</argument_list></call><op:operator pos:line="94" pos:column="33">.</op:operator><call><name pos:line="94" pos:column="34">putBoolean</name><argument_list pos:line="94" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="94" pos:column="45">"achievement_boot_are_made_for_walking"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="94" pos:column="86">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="94" pos:column="91">.</op:operator><call><name pos:line="94" pos:column="92">apply</name><argument_list pos:line="94" pos:column="97">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="96" pos:column="17">c</name><op:operator pos:line="96" pos:column="18">.</op:operator><name pos:line="96" pos:column="19">close</name></name><argument_list pos:line="96" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="98" pos:column="13">if <condition pos:line="98" pos:column="16">(<expr><op:operator pos:line="98" pos:column="17">!</op:operator><call><name><name pos:line="98" pos:column="18">prefs</name><op:operator pos:line="98" pos:column="23">.</op:operator><name pos:line="98" pos:column="24">getBoolean</name></name><argument_list pos:line="98" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="35">"achievement_boot_are_made_for_walking2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="98" pos:column="77">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="98" pos:column="84"> <block pos:line="98" pos:column="85">{
                <decl_stmt><decl><type><name pos:line="99" pos:column="17">Cursor</name></type> <name pos:line="99" pos:column="24">c</name> <init pos:line="99" pos:column="26">=
                        <expr><call><name><name pos:line="100" pos:column="25">db</name><op:operator pos:line="100" pos:column="27">.</op:operator><name pos:line="100" pos:column="28">query</name></name><argument_list pos:line="100" pos:column="33">(<argument><expr><op:operator pos:line="100" pos:column="34">new</op:operator> <name><name pos:line="100" pos:column="38">String</name><index pos:line="100" pos:column="44">[]</index></name><block pos:line="100" pos:column="46">{<expr><lit:literal type="string" pos:line="100" pos:column="47">"steps"</lit:literal></expr>}</block></expr></argument>, <argument><expr><lit:literal type="string" pos:line="100" pos:column="57">"steps &gt;= 10000 AND date &gt; 0"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="100" pos:column="88">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="100" pos:column="94">null</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="null" pos:line="101" pos:column="33">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="101" pos:column="39">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="101" pos:column="45">"1"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><call><name><name pos:line="102" pos:column="21">c</name><op:operator pos:line="102" pos:column="22">.</op:operator><name pos:line="102" pos:column="23">getCount</name></name><argument_list pos:line="102" pos:column="31">()</argument_list></call> <op:operator pos:line="102" pos:column="34">&gt;=</op:operator> <lit:literal type="number" pos:line="102" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="102" pos:column="39"> <block pos:line="102" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="103" pos:column="21">unlockAchievement</name><argument_list pos:line="103" pos:column="38">(<argument><expr><name pos:line="103" pos:column="39">gc</name></expr></argument>,
                            <argument><expr><call><name><name pos:line="104" pos:column="29">context</name><op:operator pos:line="104" pos:column="36">.</op:operator><name pos:line="104" pos:column="37">getString</name></name><argument_list pos:line="104" pos:column="46">(<argument><expr><name><name pos:line="104" pos:column="47">R</name><op:operator pos:line="104" pos:column="48">.</op:operator><name pos:line="104" pos:column="49">string</name><op:operator pos:line="104" pos:column="55">.</op:operator><name pos:line="104" pos:column="56">achievement_boots_made_for_walking_ii</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="105" pos:column="21">prefs</name><op:operator pos:line="105" pos:column="26">.</op:operator><name pos:line="105" pos:column="27">edit</name></name><argument_list pos:line="105" pos:column="31">()</argument_list></call><op:operator pos:line="105" pos:column="33">.</op:operator><call><name pos:line="105" pos:column="34">putBoolean</name><argument_list pos:line="105" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="105" pos:column="45">"achievement_boot_are_made_for_walking2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="105" pos:column="87">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="105" pos:column="92">.</op:operator><call><name pos:line="105" pos:column="93">apply</name><argument_list pos:line="105" pos:column="98">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="107" pos:column="17">c</name><op:operator pos:line="107" pos:column="18">.</op:operator><name pos:line="107" pos:column="19">close</name></name><argument_list pos:line="107" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="109" pos:column="13">if <condition pos:line="109" pos:column="16">(<expr><op:operator pos:line="109" pos:column="17">!</op:operator><call><name><name pos:line="109" pos:column="18">prefs</name><op:operator pos:line="109" pos:column="23">.</op:operator><name pos:line="109" pos:column="24">getBoolean</name></name><argument_list pos:line="109" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="109" pos:column="35">"achievement_boot_are_made_for_walking3"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="109" pos:column="77">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="109" pos:column="84"> <block pos:line="109" pos:column="85">{
                <decl_stmt><decl><type><name pos:line="110" pos:column="17">Cursor</name></type> <name pos:line="110" pos:column="24">c</name> <init pos:line="110" pos:column="26">=
                        <expr><call><name><name pos:line="111" pos:column="25">db</name><op:operator pos:line="111" pos:column="27">.</op:operator><name pos:line="111" pos:column="28">query</name></name><argument_list pos:line="111" pos:column="33">(<argument><expr><op:operator pos:line="111" pos:column="34">new</op:operator> <name><name pos:line="111" pos:column="38">String</name><index pos:line="111" pos:column="44">[]</index></name><block pos:line="111" pos:column="46">{<expr><lit:literal type="string" pos:line="111" pos:column="47">"steps"</lit:literal></expr>}</block></expr></argument>, <argument><expr><lit:literal type="string" pos:line="111" pos:column="57">"steps &gt;= 15000 AND date &gt; 0"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="111" pos:column="88">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="111" pos:column="94">null</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="null" pos:line="112" pos:column="33">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="112" pos:column="39">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="112" pos:column="45">"1"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="113" pos:column="17">if <condition pos:line="113" pos:column="20">(<expr><call><name><name pos:line="113" pos:column="21">c</name><op:operator pos:line="113" pos:column="22">.</op:operator><name pos:line="113" pos:column="23">getCount</name></name><argument_list pos:line="113" pos:column="31">()</argument_list></call> <op:operator pos:line="113" pos:column="34">&gt;=</op:operator> <lit:literal type="number" pos:line="113" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="113" pos:column="39"> <block pos:line="113" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="114" pos:column="21">unlockAchievement</name><argument_list pos:line="114" pos:column="38">(<argument><expr><name pos:line="114" pos:column="39">gc</name></expr></argument>,
                            <argument><expr><call><name><name pos:line="115" pos:column="29">context</name><op:operator pos:line="115" pos:column="36">.</op:operator><name pos:line="115" pos:column="37">getString</name></name><argument_list pos:line="115" pos:column="46">(<argument><expr><name><name pos:line="115" pos:column="47">R</name><op:operator pos:line="115" pos:column="48">.</op:operator><name pos:line="115" pos:column="49">string</name><op:operator pos:line="115" pos:column="55">.</op:operator><name pos:line="115" pos:column="56">achievement_boots_made_for_walking_iii</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="116" pos:column="21">prefs</name><op:operator pos:line="116" pos:column="26">.</op:operator><name pos:line="116" pos:column="27">edit</name></name><argument_list pos:line="116" pos:column="31">()</argument_list></call><op:operator pos:line="116" pos:column="33">.</op:operator><call><name pos:line="116" pos:column="34">putBoolean</name><argument_list pos:line="116" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="116" pos:column="45">"achievement_boot_are_made_for_walking3"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="116" pos:column="87">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="116" pos:column="92">.</op:operator><call><name pos:line="116" pos:column="93">apply</name><argument_list pos:line="116" pos:column="98">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="118" pos:column="17">c</name><op:operator pos:line="118" pos:column="18">.</op:operator><name pos:line="118" pos:column="19">close</name></name><argument_list pos:line="118" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="120" pos:column="13">if <condition pos:line="120" pos:column="16">(<expr><op:operator pos:line="120" pos:column="17">!</op:operator><call><name><name pos:line="120" pos:column="18">prefs</name><op:operator pos:line="120" pos:column="23">.</op:operator><name pos:line="120" pos:column="24">getBoolean</name></name><argument_list pos:line="120" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="35">"achievement_boot_are_made_for_walking4"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="120" pos:column="77">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="120" pos:column="84"> <block pos:line="120" pos:column="85">{
                <decl_stmt><decl><type><name pos:line="121" pos:column="17">Cursor</name></type> <name pos:line="121" pos:column="24">c</name> <init pos:line="121" pos:column="26">=
                        <expr><call><name><name pos:line="122" pos:column="25">db</name><op:operator pos:line="122" pos:column="27">.</op:operator><name pos:line="122" pos:column="28">query</name></name><argument_list pos:line="122" pos:column="33">(<argument><expr><op:operator pos:line="122" pos:column="34">new</op:operator> <name><name pos:line="122" pos:column="38">String</name><index pos:line="122" pos:column="44">[]</index></name><block pos:line="122" pos:column="46">{<expr><lit:literal type="string" pos:line="122" pos:column="47">"steps"</lit:literal></expr>}</block></expr></argument>, <argument><expr><lit:literal type="string" pos:line="122" pos:column="57">"steps &gt;= 20000 AND date &gt; 0"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="122" pos:column="88">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="122" pos:column="94">null</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="null" pos:line="123" pos:column="33">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="123" pos:column="39">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="123" pos:column="45">"1"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="124" pos:column="17">if <condition pos:line="124" pos:column="20">(<expr><call><name><name pos:line="124" pos:column="21">c</name><op:operator pos:line="124" pos:column="22">.</op:operator><name pos:line="124" pos:column="23">getCount</name></name><argument_list pos:line="124" pos:column="31">()</argument_list></call> <op:operator pos:line="124" pos:column="34">&gt;=</op:operator> <lit:literal type="number" pos:line="124" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="124" pos:column="39"> <block pos:line="124" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="125" pos:column="21">unlockAchievement</name><argument_list pos:line="125" pos:column="38">(<argument><expr><name pos:line="125" pos:column="39">gc</name></expr></argument>,
                            <argument><expr><call><name><name pos:line="126" pos:column="29">context</name><op:operator pos:line="126" pos:column="36">.</op:operator><name pos:line="126" pos:column="37">getString</name></name><argument_list pos:line="126" pos:column="46">(<argument><expr><name><name pos:line="126" pos:column="47">R</name><op:operator pos:line="126" pos:column="48">.</op:operator><name pos:line="126" pos:column="49">string</name><op:operator pos:line="126" pos:column="55">.</op:operator><name pos:line="126" pos:column="56">achievement_boots_made_for_walking_iv</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="127" pos:column="21">prefs</name><op:operator pos:line="127" pos:column="26">.</op:operator><name pos:line="127" pos:column="27">edit</name></name><argument_list pos:line="127" pos:column="31">()</argument_list></call><op:operator pos:line="127" pos:column="33">.</op:operator><call><name pos:line="127" pos:column="34">putBoolean</name><argument_list pos:line="127" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="45">"achievement_boot_are_made_for_walking4"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="127" pos:column="87">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="127" pos:column="92">.</op:operator><call><name pos:line="127" pos:column="93">apply</name><argument_list pos:line="127" pos:column="98">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="129" pos:column="17">c</name><op:operator pos:line="129" pos:column="18">.</op:operator><name pos:line="129" pos:column="19">close</name></name><argument_list pos:line="129" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
            <if pos:line="131" pos:column="13">if <condition pos:line="131" pos:column="16">(<expr><op:operator pos:line="131" pos:column="17">!</op:operator><call><name><name pos:line="131" pos:column="18">prefs</name><op:operator pos:line="131" pos:column="23">.</op:operator><name pos:line="131" pos:column="24">getBoolean</name></name><argument_list pos:line="131" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="131" pos:column="35">"achievement_boot_are_made_for_walking5"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="131" pos:column="77">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="131" pos:column="84"> <block pos:line="131" pos:column="85">{
                <decl_stmt><decl><type><name pos:line="132" pos:column="17">Cursor</name></type> <name pos:line="132" pos:column="24">c</name> <init pos:line="132" pos:column="26">=
                        <expr><call><name><name pos:line="133" pos:column="25">db</name><op:operator pos:line="133" pos:column="27">.</op:operator><name pos:line="133" pos:column="28">query</name></name><argument_list pos:line="133" pos:column="33">(<argument><expr><op:operator pos:line="133" pos:column="34">new</op:operator> <name><name pos:line="133" pos:column="38">String</name><index pos:line="133" pos:column="44">[]</index></name><block pos:line="133" pos:column="46">{<expr><lit:literal type="string" pos:line="133" pos:column="47">"steps"</lit:literal></expr>}</block></expr></argument>, <argument><expr><lit:literal type="string" pos:line="133" pos:column="57">"steps &gt;= 25000 AND date &gt; 0"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="133" pos:column="88">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="133" pos:column="94">null</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="null" pos:line="134" pos:column="33">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="134" pos:column="39">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="134" pos:column="45">"1"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="135" pos:column="17">if <condition pos:line="135" pos:column="20">(<expr><call><name><name pos:line="135" pos:column="21">c</name><op:operator pos:line="135" pos:column="22">.</op:operator><name pos:line="135" pos:column="23">getCount</name></name><argument_list pos:line="135" pos:column="31">()</argument_list></call> <op:operator pos:line="135" pos:column="34">&gt;=</op:operator> <lit:literal type="number" pos:line="135" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="135" pos:column="39"> <block pos:line="135" pos:column="40">{
                    <expr_stmt><expr><call><name pos:line="136" pos:column="21">unlockAchievement</name><argument_list pos:line="136" pos:column="38">(<argument><expr><name pos:line="136" pos:column="39">gc</name></expr></argument>,
                            <argument><expr><call><name><name pos:line="137" pos:column="29">context</name><op:operator pos:line="137" pos:column="36">.</op:operator><name pos:line="137" pos:column="37">getString</name></name><argument_list pos:line="137" pos:column="46">(<argument><expr><name><name pos:line="137" pos:column="47">R</name><op:operator pos:line="137" pos:column="48">.</op:operator><name pos:line="137" pos:column="49">string</name><op:operator pos:line="137" pos:column="55">.</op:operator><name pos:line="137" pos:column="56">achievement_boots_made_for_walking_v</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="138" pos:column="21">prefs</name><op:operator pos:line="138" pos:column="26">.</op:operator><name pos:line="138" pos:column="27">edit</name></name><argument_list pos:line="138" pos:column="31">()</argument_list></call><op:operator pos:line="138" pos:column="33">.</op:operator><call><name pos:line="138" pos:column="34">putBoolean</name><argument_list pos:line="138" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="45">"achievement_boot_are_made_for_walking5"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="138" pos:column="87">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="138" pos:column="92">.</op:operator><call><name pos:line="138" pos:column="93">apply</name><argument_list pos:line="138" pos:column="98">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
                <expr_stmt><expr><call><name><name pos:line="140" pos:column="17">c</name><op:operator pos:line="140" pos:column="18">.</op:operator><name pos:line="140" pos:column="19">close</name></name><argument_list pos:line="140" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="143" pos:column="13">Cursor</name></type> <name pos:line="143" pos:column="20">c</name> <init pos:line="143" pos:column="22">= <expr><call><name><name pos:line="143" pos:column="24">db</name><op:operator pos:line="143" pos:column="26">.</op:operator><name pos:line="143" pos:column="27">query</name></name><argument_list pos:line="143" pos:column="32">(<argument><expr><op:operator pos:line="143" pos:column="33">new</op:operator> <name><name pos:line="143" pos:column="37">String</name><index pos:line="143" pos:column="43">[]</index></name><block pos:line="143" pos:column="45">{<expr><lit:literal type="string" pos:line="143" pos:column="46">"COUNT(*)"</lit:literal></expr>}</block></expr></argument>, <argument><expr><lit:literal type="string" pos:line="143" pos:column="59">"steps &gt;= 10000 AND date &gt; 0"</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="143" pos:column="90">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="143" pos:column="96">null</lit:literal></expr></argument>,
                    <argument><expr><lit:literal type="null" pos:line="144" pos:column="21">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="144" pos:column="27">null</lit:literal></expr></argument>, <argument><expr><lit:literal type="null" pos:line="144" pos:column="33">null</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="145" pos:column="13">c</name><op:operator pos:line="145" pos:column="14">.</op:operator><name pos:line="145" pos:column="15">moveToFirst</name></name><argument_list pos:line="145" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="146" pos:column="13">int</name></type> <name pos:line="146" pos:column="17">daysForStamina</name> <init pos:line="146" pos:column="32">= <expr><call><name><name pos:line="146" pos:column="34">c</name><op:operator pos:line="146" pos:column="35">.</op:operator><name pos:line="146" pos:column="36">getInt</name></name><argument_list pos:line="146" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="146" pos:column="43">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="147" pos:column="13">c</name><op:operator pos:line="147" pos:column="14">.</op:operator><name pos:line="147" pos:column="15">close</name></name><argument_list pos:line="147" pos:column="20">()</argument_list></call></expr>;</expr_stmt>

            <if pos:line="149" pos:column="13">if <condition pos:line="149" pos:column="16">(<expr><op:operator pos:line="149" pos:column="17">!</op:operator><call><name><name pos:line="149" pos:column="18">prefs</name><op:operator pos:line="149" pos:column="23">.</op:operator><name pos:line="149" pos:column="24">getBoolean</name></name><argument_list pos:line="149" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="149" pos:column="35">"achievement_stamina"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="149" pos:column="58">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="149" pos:column="65"> <block pos:line="149" pos:column="66">{
                <if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><name pos:line="150" pos:column="21">daysForStamina</name> <op:operator pos:line="150" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="150" pos:column="39">5</lit:literal></expr>)</condition><then pos:line="150" pos:column="41"> <block pos:line="150" pos:column="42">{
                    <expr_stmt><expr><call><name pos:line="151" pos:column="21">unlockAchievement</name><argument_list pos:line="151" pos:column="38">(<argument><expr><name pos:line="151" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="151" pos:column="43">context</name><op:operator pos:line="151" pos:column="50">.</op:operator><name pos:line="151" pos:column="51">getString</name></name><argument_list pos:line="151" pos:column="60">(<argument><expr><name><name pos:line="151" pos:column="61">R</name><op:operator pos:line="151" pos:column="62">.</op:operator><name pos:line="151" pos:column="63">string</name><op:operator pos:line="151" pos:column="69">.</op:operator><name pos:line="151" pos:column="70">achievement_stamina</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="152" pos:column="21">prefs</name><op:operator pos:line="152" pos:column="26">.</op:operator><name pos:line="152" pos:column="27">edit</name></name><argument_list pos:line="152" pos:column="31">()</argument_list></call><op:operator pos:line="152" pos:column="33">.</op:operator><call><name pos:line="152" pos:column="34">putBoolean</name><argument_list pos:line="152" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="152" pos:column="45">"achievement_stamina"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="152" pos:column="68">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="152" pos:column="73">.</op:operator><call><name pos:line="152" pos:column="74">apply</name><argument_list pos:line="152" pos:column="79">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="155" pos:column="13">if <condition pos:line="155" pos:column="16">(<expr><op:operator pos:line="155" pos:column="17">!</op:operator><call><name><name pos:line="155" pos:column="18">prefs</name><op:operator pos:line="155" pos:column="23">.</op:operator><name pos:line="155" pos:column="24">getBoolean</name></name><argument_list pos:line="155" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="155" pos:column="35">"achievement_stamina2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="155" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="155" pos:column="66"> <block pos:line="155" pos:column="67">{
                <if pos:line="156" pos:column="17">if <condition pos:line="156" pos:column="20">(<expr><name pos:line="156" pos:column="21">daysForStamina</name> <op:operator pos:line="156" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="156" pos:column="39">10</lit:literal></expr>)</condition><then pos:line="156" pos:column="42"> <block pos:line="156" pos:column="43">{
                    <expr_stmt><expr><call><name pos:line="157" pos:column="21">unlockAchievement</name><argument_list pos:line="157" pos:column="38">(<argument><expr><name pos:line="157" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="157" pos:column="43">context</name><op:operator pos:line="157" pos:column="50">.</op:operator><name pos:line="157" pos:column="51">getString</name></name><argument_list pos:line="157" pos:column="60">(<argument><expr><name><name pos:line="157" pos:column="61">R</name><op:operator pos:line="157" pos:column="62">.</op:operator><name pos:line="157" pos:column="63">string</name><op:operator pos:line="157" pos:column="69">.</op:operator><name pos:line="157" pos:column="70">achievement_stamina_ii</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="158" pos:column="21">prefs</name><op:operator pos:line="158" pos:column="26">.</op:operator><name pos:line="158" pos:column="27">edit</name></name><argument_list pos:line="158" pos:column="31">()</argument_list></call><op:operator pos:line="158" pos:column="33">.</op:operator><call><name pos:line="158" pos:column="34">putBoolean</name><argument_list pos:line="158" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="45">"achievement_stamina2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="158" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="158" pos:column="74">.</op:operator><call><name pos:line="158" pos:column="75">apply</name><argument_list pos:line="158" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="161" pos:column="13">if <condition pos:line="161" pos:column="16">(<expr><op:operator pos:line="161" pos:column="17">!</op:operator><call><name><name pos:line="161" pos:column="18">prefs</name><op:operator pos:line="161" pos:column="23">.</op:operator><name pos:line="161" pos:column="24">getBoolean</name></name><argument_list pos:line="161" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="161" pos:column="35">"achievement_stamina3"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="161" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="161" pos:column="66"> <block pos:line="161" pos:column="67">{
                <if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><name pos:line="162" pos:column="21">daysForStamina</name> <op:operator pos:line="162" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="162" pos:column="39">15</lit:literal></expr>)</condition><then pos:line="162" pos:column="42"> <block pos:line="162" pos:column="43">{
                    <expr_stmt><expr><call><name pos:line="163" pos:column="21">unlockAchievement</name><argument_list pos:line="163" pos:column="38">(<argument><expr><name pos:line="163" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="163" pos:column="43">context</name><op:operator pos:line="163" pos:column="50">.</op:operator><name pos:line="163" pos:column="51">getString</name></name><argument_list pos:line="163" pos:column="60">(<argument><expr><name><name pos:line="163" pos:column="61">R</name><op:operator pos:line="163" pos:column="62">.</op:operator><name pos:line="163" pos:column="63">string</name><op:operator pos:line="163" pos:column="69">.</op:operator><name pos:line="163" pos:column="70">achievement_stamina_iii</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="164" pos:column="21">prefs</name><op:operator pos:line="164" pos:column="26">.</op:operator><name pos:line="164" pos:column="27">edit</name></name><argument_list pos:line="164" pos:column="31">()</argument_list></call><op:operator pos:line="164" pos:column="33">.</op:operator><call><name pos:line="164" pos:column="34">putBoolean</name><argument_list pos:line="164" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="164" pos:column="45">"achievement_stamina3"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="164" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="164" pos:column="74">.</op:operator><call><name pos:line="164" pos:column="75">apply</name><argument_list pos:line="164" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="167" pos:column="13">if <condition pos:line="167" pos:column="16">(<expr><op:operator pos:line="167" pos:column="17">!</op:operator><call><name><name pos:line="167" pos:column="18">prefs</name><op:operator pos:line="167" pos:column="23">.</op:operator><name pos:line="167" pos:column="24">getBoolean</name></name><argument_list pos:line="167" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="167" pos:column="35">"achievement_stamina4"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="167" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="167" pos:column="66"> <block pos:line="167" pos:column="67">{
                <if pos:line="168" pos:column="17">if <condition pos:line="168" pos:column="20">(<expr><name pos:line="168" pos:column="21">daysForStamina</name> <op:operator pos:line="168" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="168" pos:column="39">30</lit:literal></expr>)</condition><then pos:line="168" pos:column="42"> <block pos:line="168" pos:column="43">{
                    <expr_stmt><expr><call><name pos:line="169" pos:column="21">unlockAchievement</name><argument_list pos:line="169" pos:column="38">(<argument><expr><name pos:line="169" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="169" pos:column="43">context</name><op:operator pos:line="169" pos:column="50">.</op:operator><name pos:line="169" pos:column="51">getString</name></name><argument_list pos:line="169" pos:column="60">(<argument><expr><name><name pos:line="169" pos:column="61">R</name><op:operator pos:line="169" pos:column="62">.</op:operator><name pos:line="169" pos:column="63">string</name><op:operator pos:line="169" pos:column="69">.</op:operator><name pos:line="169" pos:column="70">achievement_stamina_iv</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="170" pos:column="21">prefs</name><op:operator pos:line="170" pos:column="26">.</op:operator><name pos:line="170" pos:column="27">edit</name></name><argument_list pos:line="170" pos:column="31">()</argument_list></call><op:operator pos:line="170" pos:column="33">.</op:operator><call><name pos:line="170" pos:column="34">putBoolean</name><argument_list pos:line="170" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="170" pos:column="45">"achievement_stamina4"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="170" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="170" pos:column="74">.</op:operator><call><name pos:line="170" pos:column="75">apply</name><argument_list pos:line="170" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="173" pos:column="13">if <condition pos:line="173" pos:column="16">(<expr><op:operator pos:line="173" pos:column="17">!</op:operator><call><name><name pos:line="173" pos:column="18">prefs</name><op:operator pos:line="173" pos:column="23">.</op:operator><name pos:line="173" pos:column="24">getBoolean</name></name><argument_list pos:line="173" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="173" pos:column="35">"achievement_stamina5"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="173" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="173" pos:column="66"> <block pos:line="173" pos:column="67">{
                <if pos:line="174" pos:column="17">if <condition pos:line="174" pos:column="20">(<expr><name pos:line="174" pos:column="21">daysForStamina</name> <op:operator pos:line="174" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="174" pos:column="39">60</lit:literal></expr>)</condition><then pos:line="174" pos:column="42"> <block pos:line="174" pos:column="43">{
                    <expr_stmt><expr><call><name pos:line="175" pos:column="21">unlockAchievement</name><argument_list pos:line="175" pos:column="38">(<argument><expr><name pos:line="175" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="175" pos:column="43">context</name><op:operator pos:line="175" pos:column="50">.</op:operator><name pos:line="175" pos:column="51">getString</name></name><argument_list pos:line="175" pos:column="60">(<argument><expr><name><name pos:line="175" pos:column="61">R</name><op:operator pos:line="175" pos:column="62">.</op:operator><name pos:line="175" pos:column="63">string</name><op:operator pos:line="175" pos:column="69">.</op:operator><name pos:line="175" pos:column="70">achievement_stamina_v</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="176" pos:column="21">prefs</name><op:operator pos:line="176" pos:column="26">.</op:operator><name pos:line="176" pos:column="27">edit</name></name><argument_list pos:line="176" pos:column="31">()</argument_list></call><op:operator pos:line="176" pos:column="33">.</op:operator><call><name pos:line="176" pos:column="34">putBoolean</name><argument_list pos:line="176" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="176" pos:column="45">"achievement_stamina5"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="176" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="176" pos:column="74">.</op:operator><call><name pos:line="176" pos:column="75">apply</name><argument_list pos:line="176" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="179" pos:column="13">if <condition pos:line="179" pos:column="16">(<expr><op:operator pos:line="179" pos:column="17">!</op:operator><call><name><name pos:line="179" pos:column="18">prefs</name><op:operator pos:line="179" pos:column="23">.</op:operator><name pos:line="179" pos:column="24">getBoolean</name></name><argument_list pos:line="179" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="179" pos:column="35">"achievement_stamina6"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="179" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="179" pos:column="66"> <block pos:line="179" pos:column="67">{
                <if pos:line="180" pos:column="17">if <condition pos:line="180" pos:column="20">(<expr><name pos:line="180" pos:column="21">daysForStamina</name> <op:operator pos:line="180" pos:column="36">&gt;=</op:operator> <lit:literal type="number" pos:line="180" pos:column="39">100</lit:literal></expr>)</condition><then pos:line="180" pos:column="43"> <block pos:line="180" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="181" pos:column="21">unlockAchievement</name><argument_list pos:line="181" pos:column="38">(<argument><expr><name pos:line="181" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="181" pos:column="43">context</name><op:operator pos:line="181" pos:column="50">.</op:operator><name pos:line="181" pos:column="51">getString</name></name><argument_list pos:line="181" pos:column="60">(<argument><expr><name><name pos:line="181" pos:column="61">R</name><op:operator pos:line="181" pos:column="62">.</op:operator><name pos:line="181" pos:column="63">string</name><op:operator pos:line="181" pos:column="69">.</op:operator><name pos:line="181" pos:column="70">achievement_stamina_vi</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="182" pos:column="21">prefs</name><op:operator pos:line="182" pos:column="26">.</op:operator><name pos:line="182" pos:column="27">edit</name></name><argument_list pos:line="182" pos:column="31">()</argument_list></call><op:operator pos:line="182" pos:column="33">.</op:operator><call><name pos:line="182" pos:column="34">putBoolean</name><argument_list pos:line="182" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="182" pos:column="45">"achievement_stamina6"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="182" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="182" pos:column="74">.</op:operator><call><name pos:line="182" pos:column="75">apply</name><argument_list pos:line="182" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="186" pos:column="13">int</name></type> <name pos:line="186" pos:column="17">totalSteps</name> <init pos:line="186" pos:column="28">= <expr><call><name><name pos:line="186" pos:column="30">db</name><op:operator pos:line="186" pos:column="32">.</op:operator><name pos:line="186" pos:column="33">getTotalWithoutToday</name></name><argument_list pos:line="186" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="188" pos:column="13">if <condition pos:line="188" pos:column="16">(<expr><op:operator pos:line="188" pos:column="17">!</op:operator><call><name><name pos:line="188" pos:column="18">prefs</name><op:operator pos:line="188" pos:column="23">.</op:operator><name pos:line="188" pos:column="24">getBoolean</name></name><argument_list pos:line="188" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="188" pos:column="35">"achievement_marathon"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="188" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="188" pos:column="66"> <block pos:line="188" pos:column="67">{
                <if pos:line="189" pos:column="17">if <condition pos:line="189" pos:column="20">(<expr><name pos:line="189" pos:column="21">totalSteps</name> <op:operator pos:line="189" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="189" pos:column="34">100000</lit:literal></expr>)</condition><then pos:line="189" pos:column="41"> <block pos:line="189" pos:column="42">{
                    <expr_stmt><expr><call><name pos:line="190" pos:column="21">unlockAchievement</name><argument_list pos:line="190" pos:column="38">(<argument><expr><name pos:line="190" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="190" pos:column="43">context</name><op:operator pos:line="190" pos:column="50">.</op:operator><name pos:line="190" pos:column="51">getString</name></name><argument_list pos:line="190" pos:column="60">(<argument><expr><name><name pos:line="190" pos:column="61">R</name><op:operator pos:line="190" pos:column="62">.</op:operator><name pos:line="190" pos:column="63">string</name><op:operator pos:line="190" pos:column="69">.</op:operator><name pos:line="190" pos:column="70">achievement_marathon</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="191" pos:column="21">prefs</name><op:operator pos:line="191" pos:column="26">.</op:operator><name pos:line="191" pos:column="27">edit</name></name><argument_list pos:line="191" pos:column="31">()</argument_list></call><op:operator pos:line="191" pos:column="33">.</op:operator><call><name pos:line="191" pos:column="34">putBoolean</name><argument_list pos:line="191" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="191" pos:column="45">"achievement_marathon"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="191" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="191" pos:column="74">.</op:operator><call><name pos:line="191" pos:column="75">apply</name><argument_list pos:line="191" pos:column="80">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="194" pos:column="13">if <condition pos:line="194" pos:column="16">(<expr><op:operator pos:line="194" pos:column="17">!</op:operator><call><name><name pos:line="194" pos:column="18">prefs</name><op:operator pos:line="194" pos:column="23">.</op:operator><name pos:line="194" pos:column="24">getBoolean</name></name><argument_list pos:line="194" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="194" pos:column="35">"achievement_marathon2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="194" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="194" pos:column="67"> <block pos:line="194" pos:column="68">{
                <if pos:line="195" pos:column="17">if <condition pos:line="195" pos:column="20">(<expr><name pos:line="195" pos:column="21">totalSteps</name> <op:operator pos:line="195" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="195" pos:column="34">200000</lit:literal></expr>)</condition><then pos:line="195" pos:column="41"> <block pos:line="195" pos:column="42">{
                    <expr_stmt><expr><call><name pos:line="196" pos:column="21">unlockAchievement</name><argument_list pos:line="196" pos:column="38">(<argument><expr><name pos:line="196" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="196" pos:column="43">context</name><op:operator pos:line="196" pos:column="50">.</op:operator><name pos:line="196" pos:column="51">getString</name></name><argument_list pos:line="196" pos:column="60">(<argument><expr><name><name pos:line="196" pos:column="61">R</name><op:operator pos:line="196" pos:column="62">.</op:operator><name pos:line="196" pos:column="63">string</name><op:operator pos:line="196" pos:column="69">.</op:operator><name pos:line="196" pos:column="70">achievement_marathon_ii</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="197" pos:column="21">prefs</name><op:operator pos:line="197" pos:column="26">.</op:operator><name pos:line="197" pos:column="27">edit</name></name><argument_list pos:line="197" pos:column="31">()</argument_list></call><op:operator pos:line="197" pos:column="33">.</op:operator><call><name pos:line="197" pos:column="34">putBoolean</name><argument_list pos:line="197" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="197" pos:column="45">"achievement_marathon2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="197" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="197" pos:column="75">.</op:operator><call><name pos:line="197" pos:column="76">apply</name><argument_list pos:line="197" pos:column="81">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="200" pos:column="13">if <condition pos:line="200" pos:column="16">(<expr><op:operator pos:line="200" pos:column="17">!</op:operator><call><name><name pos:line="200" pos:column="18">prefs</name><op:operator pos:line="200" pos:column="23">.</op:operator><name pos:line="200" pos:column="24">getBoolean</name></name><argument_list pos:line="200" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="200" pos:column="35">"achievement_marathon3"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="200" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="200" pos:column="67"> <block pos:line="200" pos:column="68">{
                <if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><name pos:line="201" pos:column="21">totalSteps</name> <op:operator pos:line="201" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="201" pos:column="34">500000</lit:literal></expr>)</condition><then pos:line="201" pos:column="41"> <block pos:line="201" pos:column="42">{
                    <expr_stmt><expr><call><name pos:line="202" pos:column="21">unlockAchievement</name><argument_list pos:line="202" pos:column="38">(<argument><expr><name pos:line="202" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="202" pos:column="43">context</name><op:operator pos:line="202" pos:column="50">.</op:operator><name pos:line="202" pos:column="51">getString</name></name><argument_list pos:line="202" pos:column="60">(<argument><expr><name><name pos:line="202" pos:column="61">R</name><op:operator pos:line="202" pos:column="62">.</op:operator><name pos:line="202" pos:column="63">string</name><op:operator pos:line="202" pos:column="69">.</op:operator><name pos:line="202" pos:column="70">achievement_marathon_iii</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="203" pos:column="21">prefs</name><op:operator pos:line="203" pos:column="26">.</op:operator><name pos:line="203" pos:column="27">edit</name></name><argument_list pos:line="203" pos:column="31">()</argument_list></call><op:operator pos:line="203" pos:column="33">.</op:operator><call><name pos:line="203" pos:column="34">putBoolean</name><argument_list pos:line="203" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="203" pos:column="45">"achievement_marathon3"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="203" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="203" pos:column="75">.</op:operator><call><name pos:line="203" pos:column="76">apply</name><argument_list pos:line="203" pos:column="81">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="206" pos:column="13">if <condition pos:line="206" pos:column="16">(<expr><op:operator pos:line="206" pos:column="17">!</op:operator><call><name><name pos:line="206" pos:column="18">prefs</name><op:operator pos:line="206" pos:column="23">.</op:operator><name pos:line="206" pos:column="24">getBoolean</name></name><argument_list pos:line="206" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="206" pos:column="35">"achievement_marathon4"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="206" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="206" pos:column="67"> <block pos:line="206" pos:column="68">{
                <if pos:line="207" pos:column="17">if <condition pos:line="207" pos:column="20">(<expr><name pos:line="207" pos:column="21">totalSteps</name> <op:operator pos:line="207" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="207" pos:column="34">750000</lit:literal></expr>)</condition><then pos:line="207" pos:column="41"> <block pos:line="207" pos:column="42">{
                    <expr_stmt><expr><call><name pos:line="208" pos:column="21">unlockAchievement</name><argument_list pos:line="208" pos:column="38">(<argument><expr><name pos:line="208" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="208" pos:column="43">context</name><op:operator pos:line="208" pos:column="50">.</op:operator><name pos:line="208" pos:column="51">getString</name></name><argument_list pos:line="208" pos:column="60">(<argument><expr><name><name pos:line="208" pos:column="61">R</name><op:operator pos:line="208" pos:column="62">.</op:operator><name pos:line="208" pos:column="63">string</name><op:operator pos:line="208" pos:column="69">.</op:operator><name pos:line="208" pos:column="70">achievement_marathon_iv</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="209" pos:column="21">prefs</name><op:operator pos:line="209" pos:column="26">.</op:operator><name pos:line="209" pos:column="27">edit</name></name><argument_list pos:line="209" pos:column="31">()</argument_list></call><op:operator pos:line="209" pos:column="33">.</op:operator><call><name pos:line="209" pos:column="34">putBoolean</name><argument_list pos:line="209" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="45">"achievement_marathon4"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="209" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="209" pos:column="75">.</op:operator><call><name pos:line="209" pos:column="76">apply</name><argument_list pos:line="209" pos:column="81">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>
            <if pos:line="212" pos:column="13">if <condition pos:line="212" pos:column="16">(<expr><op:operator pos:line="212" pos:column="17">!</op:operator><call><name><name pos:line="212" pos:column="18">prefs</name><op:operator pos:line="212" pos:column="23">.</op:operator><name pos:line="212" pos:column="24">getBoolean</name></name><argument_list pos:line="212" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="212" pos:column="35">"achievement_marathon5"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="212" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="212" pos:column="67"> <block pos:line="212" pos:column="68">{
                <if pos:line="213" pos:column="17">if <condition pos:line="213" pos:column="20">(<expr><name pos:line="213" pos:column="21">totalSteps</name> <op:operator pos:line="213" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="213" pos:column="34">1000000</lit:literal></expr>)</condition><then pos:line="213" pos:column="42"> <block pos:line="213" pos:column="43">{
                    <expr_stmt><expr><call><name pos:line="214" pos:column="21">unlockAchievement</name><argument_list pos:line="214" pos:column="38">(<argument><expr><name pos:line="214" pos:column="39">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="214" pos:column="43">context</name><op:operator pos:line="214" pos:column="50">.</op:operator><name pos:line="214" pos:column="51">getString</name></name><argument_list pos:line="214" pos:column="60">(<argument><expr><name><name pos:line="214" pos:column="61">R</name><op:operator pos:line="214" pos:column="62">.</op:operator><name pos:line="214" pos:column="63">string</name><op:operator pos:line="214" pos:column="69">.</op:operator><name pos:line="214" pos:column="70">achievement_marathon_v</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="215" pos:column="21">prefs</name><op:operator pos:line="215" pos:column="26">.</op:operator><name pos:line="215" pos:column="27">edit</name></name><argument_list pos:line="215" pos:column="31">()</argument_list></call><op:operator pos:line="215" pos:column="33">.</op:operator><call><name pos:line="215" pos:column="34">putBoolean</name><argument_list pos:line="215" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="215" pos:column="45">"achievement_marathon5"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="215" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="215" pos:column="75">.</op:operator><call><name pos:line="215" pos:column="76">apply</name><argument_list pos:line="215" pos:column="81">()</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
            }</block></then></if>

            <decl_stmt><decl><type><name pos:line="219" pos:column="13">int</name></type> <name pos:line="219" pos:column="17">days</name> <init pos:line="219" pos:column="22">= <expr><call><name><name pos:line="219" pos:column="24">db</name><op:operator pos:line="219" pos:column="26">.</op:operator><name pos:line="219" pos:column="27">getDays</name></name><argument_list pos:line="219" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="220" pos:column="13">if <condition pos:line="220" pos:column="16">(<expr><name pos:line="220" pos:column="17">days</name> <op:operator pos:line="220" pos:column="22">&gt;=</op:operator> <lit:literal type="number" pos:line="220" pos:column="25">10</lit:literal></expr>)</condition><then pos:line="220" pos:column="28"> <block pos:line="220" pos:column="29">{
                <decl_stmt><decl><type><name pos:line="221" pos:column="17">float</name></type> <name pos:line="221" pos:column="23">average</name> <init pos:line="221" pos:column="31">= <expr><name pos:line="221" pos:column="33">totalSteps</name> <op:operator pos:line="221" pos:column="44">/</op:operator> <op:operator pos:line="221" pos:column="46">(</op:operator><name pos:line="221" pos:column="47">float</name><op:operator pos:line="221" pos:column="52">)</op:operator> <name pos:line="221" pos:column="54">days</name></expr></init></decl>;</decl_stmt>
                <if pos:line="222" pos:column="17">if <condition pos:line="222" pos:column="20">(<expr><op:operator pos:line="222" pos:column="21">!</op:operator><call><name><name pos:line="222" pos:column="22">prefs</name><op:operator pos:line="222" pos:column="27">.</op:operator><name pos:line="222" pos:column="28">getBoolean</name></name><argument_list pos:line="222" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="222" pos:column="39">"achievement_continual"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="222" pos:column="64">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="222" pos:column="71"> <block pos:line="222" pos:column="72">{
                    <if pos:line="223" pos:column="21">if <condition pos:line="223" pos:column="24">(<expr><name pos:line="223" pos:column="25">average</name> <op:operator pos:line="223" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="223" pos:column="35">7500</lit:literal></expr>)</condition><then pos:line="223" pos:column="40"> <block pos:line="223" pos:column="41">{
                        <expr_stmt><expr><call><name pos:line="224" pos:column="25">unlockAchievement</name><argument_list pos:line="224" pos:column="42">(<argument><expr><name pos:line="224" pos:column="43">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="224" pos:column="47">context</name><op:operator pos:line="224" pos:column="54">.</op:operator><name pos:line="224" pos:column="55">getString</name></name><argument_list pos:line="224" pos:column="64">(<argument><expr><name><name pos:line="224" pos:column="65">R</name><op:operator pos:line="224" pos:column="66">.</op:operator><name pos:line="224" pos:column="67">string</name><op:operator pos:line="224" pos:column="73">.</op:operator><name pos:line="224" pos:column="74">achievement_continual_i</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="225" pos:column="25">prefs</name><op:operator pos:line="225" pos:column="30">.</op:operator><name pos:line="225" pos:column="31">edit</name></name><argument_list pos:line="225" pos:column="35">()</argument_list></call><op:operator pos:line="225" pos:column="37">.</op:operator><call><name pos:line="225" pos:column="38">putBoolean</name><argument_list pos:line="225" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="225" pos:column="49">"achievement_continual"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="225" pos:column="74">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="225" pos:column="79">.</op:operator><call><name pos:line="225" pos:column="80">apply</name><argument_list pos:line="225" pos:column="85">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                <if pos:line="228" pos:column="17">if <condition pos:line="228" pos:column="20">(<expr><op:operator pos:line="228" pos:column="21">!</op:operator><call><name><name pos:line="228" pos:column="22">prefs</name><op:operator pos:line="228" pos:column="27">.</op:operator><name pos:line="228" pos:column="28">getBoolean</name></name><argument_list pos:line="228" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="228" pos:column="39">"achievement_continual2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="228" pos:column="65">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="228" pos:column="72"> <block pos:line="228" pos:column="73">{
                    <if pos:line="229" pos:column="21">if <condition pos:line="229" pos:column="24">(<expr><name pos:line="229" pos:column="25">average</name> <op:operator pos:line="229" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="229" pos:column="35">10000</lit:literal></expr>)</condition><then pos:line="229" pos:column="41"> <block pos:line="229" pos:column="42">{
                        <expr_stmt><expr><call><name pos:line="230" pos:column="25">unlockAchievement</name><argument_list pos:line="230" pos:column="42">(<argument><expr><name pos:line="230" pos:column="43">gc</name></expr></argument>, <argument><expr><call><name><name pos:line="230" pos:column="47">context</name><op:operator pos:line="230" pos:column="54">.</op:operator><name pos:line="230" pos:column="55">getString</name></name><argument_list pos:line="230" pos:column="64">(<argument><expr><name><name pos:line="230" pos:column="65">R</name><op:operator pos:line="230" pos:column="66">.</op:operator><name pos:line="230" pos:column="67">string</name><op:operator pos:line="230" pos:column="73">.</op:operator><name pos:line="230" pos:column="74">achievement_continual_ii</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="231" pos:column="25">prefs</name><op:operator pos:line="231" pos:column="30">.</op:operator><name pos:line="231" pos:column="31">edit</name></name><argument_list pos:line="231" pos:column="35">()</argument_list></call><op:operator pos:line="231" pos:column="37">.</op:operator><call><name pos:line="231" pos:column="38">putBoolean</name><argument_list pos:line="231" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="231" pos:column="49">"achievement_continual2"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="231" pos:column="75">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="231" pos:column="80">.</op:operator><call><name pos:line="231" pos:column="81">apply</name><argument_list pos:line="231" pos:column="86">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                <if pos:line="234" pos:column="17">if <condition pos:line="234" pos:column="20">(<expr><op:operator pos:line="234" pos:column="21">!</op:operator><call><name><name pos:line="234" pos:column="22">prefs</name><op:operator pos:line="234" pos:column="27">.</op:operator><name pos:line="234" pos:column="28">getBoolean</name></name><argument_list pos:line="234" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="234" pos:column="39">"achievement_continual3"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="234" pos:column="65">false</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="234" pos:column="72"> <block pos:line="234" pos:column="73">{
                    <if pos:line="235" pos:column="21">if <condition pos:line="235" pos:column="24">(<expr><name pos:line="235" pos:column="25">average</name> <op:operator pos:line="235" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="235" pos:column="35">12500</lit:literal></expr>)</condition><then pos:line="235" pos:column="41"> <block pos:line="235" pos:column="42">{
                        <expr_stmt><expr><call><name pos:line="236" pos:column="25">unlockAchievement</name><argument_list pos:line="236" pos:column="42">(<argument><expr><name pos:line="236" pos:column="43">gc</name></expr></argument>,
                                <argument><expr><call><name><name pos:line="237" pos:column="33">context</name><op:operator pos:line="237" pos:column="40">.</op:operator><name pos:line="237" pos:column="41">getString</name></name><argument_list pos:line="237" pos:column="50">(<argument><expr><name><name pos:line="237" pos:column="51">R</name><op:operator pos:line="237" pos:column="52">.</op:operator><name pos:line="237" pos:column="53">string</name><op:operator pos:line="237" pos:column="59">.</op:operator><name pos:line="237" pos:column="60">achievement_continual_iii</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="238" pos:column="25">prefs</name><op:operator pos:line="238" pos:column="30">.</op:operator><name pos:line="238" pos:column="31">edit</name></name><argument_list pos:line="238" pos:column="35">()</argument_list></call><op:operator pos:line="238" pos:column="37">.</op:operator><call><name pos:line="238" pos:column="38">putBoolean</name><argument_list pos:line="238" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="238" pos:column="49">"achievement_continual3"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="238" pos:column="75">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="238" pos:column="80">.</op:operator><call><name pos:line="238" pos:column="81">apply</name><argument_list pos:line="238" pos:column="86">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
                }</block></then></if>
                <expr_stmt><expr><call><name pos:line="241" pos:column="17">updateAverageLeaderboard</name><argument_list pos:line="241" pos:column="41">(<argument><expr><name pos:line="241" pos:column="42">gc</name></expr></argument>, <argument><expr><name pos:line="241" pos:column="46">context</name></expr></argument>, <argument><expr><name pos:line="241" pos:column="55">average</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>

            <expr_stmt><expr><call><name pos:line="244" pos:column="13">updateTotalLeaderboard</name><argument_list pos:line="244" pos:column="35">(<argument><expr><name pos:line="244" pos:column="36">gc</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="40">context</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="49">totalSteps</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name pos:line="246" pos:column="13">updateOneDayLeaderboard</name><argument_list pos:line="246" pos:column="36">(<argument><expr><name pos:line="246" pos:column="37">gc</name></expr></argument>, <argument><expr><name pos:line="246" pos:column="41">context</name></expr></argument>, <argument><expr><call><name><name pos:line="246" pos:column="50">db</name><op:operator pos:line="246" pos:column="52">.</op:operator><name pos:line="246" pos:column="53">getRecord</name></name><argument_list pos:line="246" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="248" pos:column="13">db</name><op:operator pos:line="248" pos:column="15">.</op:operator><name pos:line="248" pos:column="16">close</name></name><argument_list pos:line="248" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>

    <function><type><specifier pos:line="252" pos:column="5">private</specifier> <specifier pos:line="252" pos:column="13">static</specifier> <name pos:line="252" pos:column="20">void</name></type> <name pos:line="252" pos:column="25">unlockAchievement</name><parameter_list pos:line="252" pos:column="42">(<param><decl><type><name pos:line="252" pos:column="43">GoogleApiClient</name></type> <name pos:line="252" pos:column="59">gc</name></decl></param>, <param><decl><type><name pos:line="252" pos:column="63">String</name></type> <name pos:line="252" pos:column="70">achivmentName</name></decl></param>)</parameter_list> <block pos:line="252" pos:column="85">{
        <expr_stmt><expr><call><name><name pos:line="253" pos:column="9">Games</name><op:operator pos:line="253" pos:column="14">.</op:operator><name pos:line="253" pos:column="15">Achievements</name><op:operator pos:line="253" pos:column="27">.</op:operator><name pos:line="253" pos:column="28">unlock</name></name><argument_list pos:line="253" pos:column="34">(<argument><expr><name pos:line="253" pos:column="35">gc</name></expr></argument>, <argument><expr><name pos:line="253" pos:column="39">achivmentName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
}</block></class>
</unit>
