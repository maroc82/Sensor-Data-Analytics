<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\School\Grad School (Comp Sci)\Thesis\Apps\Pedometer-master\src\main\java\de\j4velin\pedometer\ShutdownRecevier.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 * Copyright 2013 Thomas Hoffmann
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */</comment>

<package pos:line="17" pos:column="1">package <name><name pos:line="17" pos:column="9">de</name><op:operator pos:line="17" pos:column="11">.</op:operator><name pos:line="17" pos:column="12">j4velin</name><op:operator pos:line="17" pos:column="19">.</op:operator><name pos:line="17" pos:column="20">pedometer</name></name>;</package>

<import pos:line="19" pos:column="1">import <name><name pos:line="19" pos:column="8">android</name><op:operator pos:line="19" pos:column="15">.</op:operator><name pos:line="19" pos:column="16">content</name><op:operator pos:line="19" pos:column="23">.</op:operator><name pos:line="19" pos:column="24">BroadcastReceiver</name></name>;</import>
<import pos:line="20" pos:column="1">import <name><name pos:line="20" pos:column="8">android</name><op:operator pos:line="20" pos:column="15">.</op:operator><name pos:line="20" pos:column="16">content</name><op:operator pos:line="20" pos:column="23">.</op:operator><name pos:line="20" pos:column="24">Context</name></name>;</import>
<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">android</name><op:operator pos:line="21" pos:column="15">.</op:operator><name pos:line="21" pos:column="16">content</name><op:operator pos:line="21" pos:column="23">.</op:operator><name pos:line="21" pos:column="24">Intent</name></name>;</import>

<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">de</name><op:operator pos:line="23" pos:column="10">.</op:operator><name pos:line="23" pos:column="11">j4velin</name><op:operator pos:line="23" pos:column="18">.</op:operator><name pos:line="23" pos:column="19">pedometer</name><op:operator pos:line="23" pos:column="28">.</op:operator><name pos:line="23" pos:column="29">util</name><op:operator pos:line="23" pos:column="33">.</op:operator><name pos:line="23" pos:column="34">Logger</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">de</name><op:operator pos:line="24" pos:column="10">.</op:operator><name pos:line="24" pos:column="11">j4velin</name><op:operator pos:line="24" pos:column="18">.</op:operator><name pos:line="24" pos:column="19">pedometer</name><op:operator pos:line="24" pos:column="28">.</op:operator><name pos:line="24" pos:column="29">util</name><op:operator pos:line="24" pos:column="33">.</op:operator><name pos:line="24" pos:column="34">Util</name></name>;</import>

<class><specifier pos:line="26" pos:column="1">public</specifier> class <name pos:line="26" pos:column="14">ShutdownRecevier</name> <super><extends pos:line="26" pos:column="31">extends <name pos:line="26" pos:column="39">BroadcastReceiver</name></extends></super> <block pos:line="26" pos:column="57">{

    <function><type><annotation pos:line="28" pos:column="5">@<name pos:line="28" pos:column="6">Override</name></annotation>
    <specifier pos:line="29" pos:column="5">public</specifier> <name pos:line="29" pos:column="12">void</name></type> <name pos:line="29" pos:column="17">onReceive</name><parameter_list pos:line="29" pos:column="26">(<param><decl><type><specifier pos:line="29" pos:column="27">final</specifier> <name pos:line="29" pos:column="33">Context</name></type> <name pos:line="29" pos:column="41">context</name></decl></param>, <param><decl><type><specifier pos:line="29" pos:column="50">final</specifier> <name pos:line="29" pos:column="56">Intent</name></type> <name pos:line="29" pos:column="63">intent</name></decl></param>)</parameter_list> <block pos:line="29" pos:column="71">{
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">BuildConfig</name><op:operator pos:line="30" pos:column="24">.</op:operator><name pos:line="30" pos:column="25">DEBUG</name></name></expr>)</condition><then pos:line="30" pos:column="31"> <expr_stmt><expr><call><name><name pos:line="30" pos:column="32">Logger</name><op:operator pos:line="30" pos:column="38">.</op:operator><name pos:line="30" pos:column="39">log</name></name><argument_list pos:line="30" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="30" pos:column="43">"shutting down"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">context</name><op:operator pos:line="32" pos:column="16">.</op:operator><name pos:line="32" pos:column="17">startService</name></name><argument_list pos:line="32" pos:column="29">(<argument><expr><op:operator pos:line="32" pos:column="30">new</op:operator> <call><name pos:line="32" pos:column="34">Intent</name><argument_list pos:line="32" pos:column="40">(<argument><expr><name pos:line="32" pos:column="41">context</name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="50">SensorListener</name><op:operator pos:line="32" pos:column="64">.</op:operator><name pos:line="32" pos:column="65">class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:line="34" pos:column="9">// if the user used a root script for shutdown, the DEVICE_SHUTDOWN</comment>
        <comment type="line" pos:line="35" pos:column="9">// broadcast might not be send. Therefore, the app will check this</comment>
        <comment type="line" pos:line="36" pos:column="9">// setting on the next boot and displays an error message if it's not</comment>
        <comment type="line" pos:line="37" pos:column="9">// set to true</comment>
        <expr_stmt><expr><call><name><name pos:line="38" pos:column="9">context</name><op:operator pos:line="38" pos:column="16">.</op:operator><name pos:line="38" pos:column="17">getSharedPreferences</name></name><argument_list pos:line="38" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="38" pos:column="38">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="51">Context</name><op:operator pos:line="38" pos:column="58">.</op:operator><name pos:line="38" pos:column="59">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call><op:operator pos:line="38" pos:column="78">.</op:operator><call><name pos:line="38" pos:column="79">edit</name><argument_list pos:line="38" pos:column="83">()</argument_list></call>
                <op:operator pos:line="39" pos:column="17">.</op:operator><call><name pos:line="39" pos:column="18">putBoolean</name><argument_list pos:line="39" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="39" pos:column="29">"correctShutdown"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="39" pos:column="48">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="39" pos:column="53">.</op:operator><call><name pos:line="39" pos:column="54">commit</name><argument_list pos:line="39" pos:column="60">()</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="41" pos:column="9">Database</name></type> <name pos:line="41" pos:column="18">db</name> <init pos:line="41" pos:column="21">= <expr><call><name><name pos:line="41" pos:column="23">Database</name><op:operator pos:line="41" pos:column="31">.</op:operator><name pos:line="41" pos:column="32">getInstance</name></name><argument_list pos:line="41" pos:column="43">(<argument><expr><name pos:line="41" pos:column="44">context</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <comment type="line" pos:line="42" pos:column="9">// if it's already a new day, add the temp. steps to the last one</comment>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name><name pos:line="43" pos:column="13">db</name><op:operator pos:line="43" pos:column="15">.</op:operator><name pos:line="43" pos:column="16">getSteps</name></name><argument_list pos:line="43" pos:column="24">(<argument><expr><call><name><name pos:line="43" pos:column="25">Util</name><op:operator pos:line="43" pos:column="29">.</op:operator><name pos:line="43" pos:column="30">getToday</name></name><argument_list pos:line="43" pos:column="38">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="43" pos:column="42">==</op:operator> <name><name pos:line="43" pos:column="45">Integer</name><op:operator pos:line="43" pos:column="52">.</op:operator><name pos:line="43" pos:column="53">MIN_VALUE</name></name></expr>)</condition><then pos:line="43" pos:column="63"> <block pos:line="43" pos:column="64">{
            <decl_stmt><decl><type><name pos:line="44" pos:column="13">int</name></type> <name pos:line="44" pos:column="17">steps</name> <init pos:line="44" pos:column="23">= <expr><call><name><name pos:line="44" pos:column="25">db</name><op:operator pos:line="44" pos:column="27">.</op:operator><name pos:line="44" pos:column="28">getCurrentSteps</name></name><argument_list pos:line="44" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">int</name></type> <name pos:line="45" pos:column="17">pauseDifference</name> <init pos:line="45" pos:column="33">= <expr><name pos:line="45" pos:column="35">steps</name> <op:operator pos:line="45" pos:column="41">-</op:operator>
                    <call><name><name pos:line="46" pos:column="21">context</name><op:operator pos:line="46" pos:column="28">.</op:operator><name pos:line="46" pos:column="29">getSharedPreferences</name></name><argument_list pos:line="46" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="46" pos:column="50">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="63">Context</name><op:operator pos:line="46" pos:column="70">.</op:operator><name pos:line="46" pos:column="71">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call>
                            <op:operator pos:line="47" pos:column="29">.</op:operator><call><name pos:line="47" pos:column="30">getInt</name><argument_list pos:line="47" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="47" pos:column="37">"pauseCount"</lit:literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="51">steps</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">db</name><op:operator pos:line="48" pos:column="15">.</op:operator><name pos:line="48" pos:column="16">insertNewDay</name></name><argument_list pos:line="48" pos:column="28">(<argument><expr><call><name><name pos:line="48" pos:column="29">Util</name><op:operator pos:line="48" pos:column="33">.</op:operator><name pos:line="48" pos:column="34">getToday</name></name><argument_list pos:line="48" pos:column="42">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="48" pos:column="46">steps</name> <op:operator pos:line="48" pos:column="52">-</op:operator> <name pos:line="48" pos:column="54">pauseDifference</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name pos:line="49" pos:column="17">pauseDifference</name> <op:operator pos:line="49" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="49" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="49" pos:column="37"> <block pos:line="49" pos:column="38">{
                <comment type="line" pos:line="50" pos:column="17">// update pauseCount for the new day</comment>
                <expr_stmt><expr><call><name><name pos:line="51" pos:column="17">context</name><op:operator pos:line="51" pos:column="24">.</op:operator><name pos:line="51" pos:column="25">getSharedPreferences</name></name><argument_list pos:line="51" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="51" pos:column="46">"pedometer"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="59">Context</name><op:operator pos:line="51" pos:column="66">.</op:operator><name pos:line="51" pos:column="67">MODE_MULTI_PROCESS</name></name></expr></argument>)</argument_list></call><op:operator pos:line="51" pos:column="86">.</op:operator><call><name pos:line="51" pos:column="87">edit</name><argument_list pos:line="51" pos:column="91">()</argument_list></call>
                        <op:operator pos:line="52" pos:column="25">.</op:operator><call><name pos:line="52" pos:column="26">putInt</name><argument_list pos:line="52" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="52" pos:column="33">"pauseCount"</lit:literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">steps</name></expr></argument>)</argument_list></call><op:operator pos:line="52" pos:column="53">.</op:operator><call><name pos:line="52" pos:column="54">commit</name><argument_list pos:line="52" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></then> <else pos:line="54" pos:column="11">else <block pos:line="54" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="55" pos:column="13">db</name><op:operator pos:line="55" pos:column="15">.</op:operator><name pos:line="55" pos:column="16">updateSteps</name></name><argument_list pos:line="55" pos:column="27">(<argument><expr><call><name><name pos:line="55" pos:column="28">Util</name><op:operator pos:line="55" pos:column="32">.</op:operator><name pos:line="55" pos:column="33">getToday</name></name><argument_list pos:line="55" pos:column="41">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="55" pos:column="45">db</name><op:operator pos:line="55" pos:column="47">.</op:operator><name pos:line="55" pos:column="48">getCurrentSteps</name></name><argument_list pos:line="55" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
        <comment type="line" pos:line="57" pos:column="9">// current steps will be reset on boot @see BootReceiver</comment>
        <expr_stmt><expr><call><name><name pos:line="58" pos:column="9">db</name><op:operator pos:line="58" pos:column="11">.</op:operator><name pos:line="58" pos:column="12">close</name></name><argument_list pos:line="58" pos:column="17">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

}</block></class>
</unit>
