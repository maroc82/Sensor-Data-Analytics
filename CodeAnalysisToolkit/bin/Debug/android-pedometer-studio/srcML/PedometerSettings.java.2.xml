<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\Users\kosta\Documents\Sensor-Data-Analytics\projects\android-pedometer-studio\app\src\main\java\name\bagi\levente\pedometer\PedometerSettings.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 *  Pedometer - Android App
 *  Copyright (C) 2009 Levente Bagi
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<package pos:line="19" pos:column="1">package <name><name pos:line="19" pos:column="9">name</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">bagi</name><op:operator pos:line="19" pos:column="18">.</op:operator><name pos:line="19" pos:column="19">levente</name><op:operator pos:line="19" pos:column="26">.</op:operator><name pos:line="19" pos:column="27">pedometer</name></name>;</package>

<import pos:line="21" pos:column="1">import <name><name pos:line="21" pos:column="8">android</name><op:operator pos:line="21" pos:column="15">.</op:operator><name pos:line="21" pos:column="16">content</name><op:operator pos:line="21" pos:column="23">.</op:operator><name pos:line="21" pos:column="24">SharedPreferences</name></name>;</import>

<comment type="block" format="javadoc" pos:line="23" pos:column="1">/**
 * Wrapper for {@link SharedPreferences}, handles preferences-related tasks.
 * @author Levente Bagi
 */</comment>
<class><specifier pos:line="27" pos:column="1">public</specifier> class <name pos:line="27" pos:column="14">PedometerSettings</name> <block pos:line="27" pos:column="32">{

    <decl_stmt><decl><type><name pos:line="29" pos:column="5">SharedPreferences</name></type> <name pos:line="29" pos:column="23">mSettings</name></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><specifier pos:line="31" pos:column="5">public</specifier> <specifier pos:line="31" pos:column="12">static</specifier> <name pos:line="31" pos:column="19">int</name></type> <name pos:line="31" pos:column="23">M_NONE</name> <init pos:line="31" pos:column="30">= <expr><lit:literal type="number" pos:line="31" pos:column="32">1</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="32" pos:column="5">public</specifier> <specifier pos:line="32" pos:column="12">static</specifier> <name pos:line="32" pos:column="19">int</name></type> <name pos:line="32" pos:column="23">M_PACE</name> <init pos:line="32" pos:column="30">= <expr><lit:literal type="number" pos:line="32" pos:column="32">2</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="33" pos:column="5">public</specifier> <specifier pos:line="33" pos:column="12">static</specifier> <name pos:line="33" pos:column="19">int</name></type> <name pos:line="33" pos:column="23">M_SPEED</name> <init pos:line="33" pos:column="31">= <expr><lit:literal type="number" pos:line="33" pos:column="33">3</lit:literal></expr></init></decl>;</decl_stmt>
    
    <constructor><specifier pos:line="35" pos:column="5">public</specifier> <name pos:line="35" pos:column="12">PedometerSettings</name><parameter_list pos:line="35" pos:column="29">(<param><decl><type><name pos:line="35" pos:column="30">SharedPreferences</name></type> <name pos:line="35" pos:column="48">settings</name></decl></param>)</parameter_list> <block pos:line="35" pos:column="58">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">mSettings</name> <op:operator pos:line="36" pos:column="19">=</op:operator> <name pos:line="36" pos:column="21">settings</name></expr>;</expr_stmt>
    }</block></constructor>
    
    <function><type><specifier pos:line="39" pos:column="5">public</specifier> <name pos:line="39" pos:column="12">boolean</name></type> <name pos:line="39" pos:column="20">isMetric</name><parameter_list pos:line="39" pos:column="28">()</parameter_list> <block pos:line="39" pos:column="31">{
        <return pos:line="40" pos:column="9">return <expr><call><name><name pos:line="40" pos:column="16">mSettings</name><op:operator pos:line="40" pos:column="25">.</op:operator><name pos:line="40" pos:column="26">getString</name></name><argument_list pos:line="40" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="36">"units"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="40" pos:column="45">"imperial"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="56">.</op:operator><call><name pos:line="40" pos:column="57">equals</name><argument_list pos:line="40" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="64">"metric"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="43" pos:column="5">public</specifier> <name pos:line="43" pos:column="12">float</name></type> <name pos:line="43" pos:column="18">getStepLength</name><parameter_list pos:line="43" pos:column="31">()</parameter_list> <block pos:line="43" pos:column="34">{
        <try pos:line="44" pos:column="9">try <block pos:line="44" pos:column="13">{
            <return pos:line="45" pos:column="13">return <expr><call><name><name pos:line="45" pos:column="20">Float</name><op:operator pos:line="45" pos:column="25">.</op:operator><name pos:line="45" pos:column="26">valueOf</name></name><argument_list pos:line="45" pos:column="33">(<argument><expr><call><name><name pos:line="45" pos:column="34">mSettings</name><op:operator pos:line="45" pos:column="43">.</op:operator><name pos:line="45" pos:column="44">getString</name></name><argument_list pos:line="45" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="45" pos:column="54">"step_length"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="45" pos:column="69">"20"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="45" pos:column="74">.</op:operator><call><name pos:line="45" pos:column="75">trim</name><argument_list pos:line="45" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block>
        <catch pos:line="47" pos:column="9">catch <parameter_list pos:line="47" pos:column="15">(<param><decl><type><name pos:line="47" pos:column="16">NumberFormatException</name></type> <name pos:line="47" pos:column="38">e</name></decl></param>)</parameter_list> <block pos:line="47" pos:column="41">{
            <comment type="line" pos:line="48" pos:column="13">// TODO: reset value, &amp; notify user somehow</comment>
            <return pos:line="49" pos:column="13">return <expr><lit:literal type="number" pos:line="49" pos:column="20">0f</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    
    <function><type><specifier pos:line="53" pos:column="5">public</specifier> <name pos:line="53" pos:column="12">float</name></type> <name pos:line="53" pos:column="18">getBodyWeight</name><parameter_list pos:line="53" pos:column="31">()</parameter_list> <block pos:line="53" pos:column="34">{
        <try pos:line="54" pos:column="9">try <block pos:line="54" pos:column="13">{
            <return pos:line="55" pos:column="13">return <expr><call><name><name pos:line="55" pos:column="20">Float</name><op:operator pos:line="55" pos:column="25">.</op:operator><name pos:line="55" pos:column="26">valueOf</name></name><argument_list pos:line="55" pos:column="33">(<argument><expr><call><name><name pos:line="55" pos:column="34">mSettings</name><op:operator pos:line="55" pos:column="43">.</op:operator><name pos:line="55" pos:column="44">getString</name></name><argument_list pos:line="55" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="54">"body_weight"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="55" pos:column="69">"50"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="55" pos:column="74">.</op:operator><call><name pos:line="55" pos:column="75">trim</name><argument_list pos:line="55" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block>
        <catch pos:line="57" pos:column="9">catch <parameter_list pos:line="57" pos:column="15">(<param><decl><type><name pos:line="57" pos:column="16">NumberFormatException</name></type> <name pos:line="57" pos:column="38">e</name></decl></param>)</parameter_list> <block pos:line="57" pos:column="41">{
            <comment type="line" pos:line="58" pos:column="13">// TODO: reset value, &amp; notify user somehow</comment>
            <return pos:line="59" pos:column="13">return <expr><lit:literal type="number" pos:line="59" pos:column="20">0f</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>

    <function><type><specifier pos:line="63" pos:column="5">public</specifier> <name pos:line="63" pos:column="12">boolean</name></type> <name pos:line="63" pos:column="20">isRunning</name><parameter_list pos:line="63" pos:column="29">()</parameter_list> <block pos:line="63" pos:column="32">{
        <return pos:line="64" pos:column="9">return <expr><call><name><name pos:line="64" pos:column="16">mSettings</name><op:operator pos:line="64" pos:column="25">.</op:operator><name pos:line="64" pos:column="26">getString</name></name><argument_list pos:line="64" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="36">"exercise_type"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="64" pos:column="53">"running"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="64" pos:column="63">.</op:operator><call><name pos:line="64" pos:column="64">equals</name><argument_list pos:line="64" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="71">"running"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="67" pos:column="5">public</specifier> <name pos:line="67" pos:column="12">int</name></type> <name pos:line="67" pos:column="16">getMaintainOption</name><parameter_list pos:line="67" pos:column="33">()</parameter_list> <block pos:line="67" pos:column="36">{
        <decl_stmt><decl><type><name pos:line="68" pos:column="9">String</name></type> <name pos:line="68" pos:column="16">p</name> <init pos:line="68" pos:column="18">= <expr><call><name><name pos:line="68" pos:column="20">mSettings</name><op:operator pos:line="68" pos:column="29">.</op:operator><name pos:line="68" pos:column="30">getString</name></name><argument_list pos:line="68" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="68" pos:column="40">"maintain"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="68" pos:column="52">"none"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <return pos:line="69" pos:column="9">return 
            <expr><call><name><name pos:line="70" pos:column="13">p</name><op:operator pos:line="70" pos:column="14">.</op:operator><name pos:line="70" pos:column="15">equals</name></name><argument_list pos:line="70" pos:column="21">(<argument><expr><lit:literal type="string" pos:line="70" pos:column="22">"none"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="70" pos:column="30">?</op:operator> <name pos:line="70" pos:column="32">M_NONE</name> <op:operator pos:line="70" pos:column="39">:</op:operator> <op:operator pos:line="70" pos:column="41">(</op:operator>
            <call><name><name pos:line="71" pos:column="13">p</name><op:operator pos:line="71" pos:column="14">.</op:operator><name pos:line="71" pos:column="15">equals</name></name><argument_list pos:line="71" pos:column="21">(<argument><expr><lit:literal type="string" pos:line="71" pos:column="22">"pace"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="71" pos:column="30">?</op:operator> <name pos:line="71" pos:column="32">M_PACE</name> <op:operator pos:line="71" pos:column="39">:</op:operator> <op:operator pos:line="71" pos:column="41">(</op:operator>
            <call><name><name pos:line="72" pos:column="13">p</name><op:operator pos:line="72" pos:column="14">.</op:operator><name pos:line="72" pos:column="15">equals</name></name><argument_list pos:line="72" pos:column="21">(<argument><expr><lit:literal type="string" pos:line="72" pos:column="22">"speed"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="72" pos:column="31">?</op:operator> <name pos:line="72" pos:column="33">M_SPEED</name> <op:operator pos:line="72" pos:column="41">:</op:operator> <op:operator pos:line="72" pos:column="43">(</op:operator> 
            <lit:literal type="number" pos:line="73" pos:column="13">0</lit:literal><op:operator pos:line="73" pos:column="14">)</op:operator><op:operator pos:line="73" pos:column="15">)</op:operator><op:operator pos:line="73" pos:column="16">)</op:operator></expr>;</return>
    }</block></function>
    
    <comment type="line" pos:line="76" pos:column="5">//-------------------------------------------------------------------</comment>
    <comment type="line" pos:line="77" pos:column="5">// Desired pace &amp; speed: </comment>
    <comment type="line" pos:line="78" pos:column="5">// these can not be set in the preference activity, only on the main</comment>
    <comment type="line" pos:line="79" pos:column="5">// screen if "maintain" is set to "pace" or "speed" </comment>
    
    <function><type><specifier pos:line="81" pos:column="5">public</specifier> <name pos:line="81" pos:column="12">int</name></type> <name pos:line="81" pos:column="16">getDesiredPace</name><parameter_list pos:line="81" pos:column="30">()</parameter_list> <block pos:line="81" pos:column="33">{
        <return pos:line="82" pos:column="9">return <expr><call><name><name pos:line="82" pos:column="16">mSettings</name><op:operator pos:line="82" pos:column="25">.</op:operator><name pos:line="82" pos:column="26">getInt</name></name><argument_list pos:line="82" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="33">"desired_pace"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="49">180</lit:literal></expr></argument>)</argument_list></call></expr>;</return> <comment type="line" pos:line="82" pos:column="55">// steps/minute</comment>
    }</block></function>
    <function><type><specifier pos:line="84" pos:column="5">public</specifier> <name pos:line="84" pos:column="12">float</name></type> <name pos:line="84" pos:column="18">getDesiredSpeed</name><parameter_list pos:line="84" pos:column="33">()</parameter_list> <block pos:line="84" pos:column="36">{
        <return pos:line="85" pos:column="9">return <expr><call><name><name pos:line="85" pos:column="16">mSettings</name><op:operator pos:line="85" pos:column="25">.</op:operator><name pos:line="85" pos:column="26">getFloat</name></name><argument_list pos:line="85" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="85" pos:column="35">"desired_speed"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="85" pos:column="52">4f</lit:literal></expr></argument>)</argument_list></call></expr>;</return> <comment type="line" pos:line="85" pos:column="57">// km/h or mph</comment>
    }</block></function>
    <function><type><specifier pos:line="87" pos:column="5">public</specifier> <name pos:line="87" pos:column="12">void</name></type> <name pos:line="87" pos:column="17">savePaceOrSpeedSetting</name><parameter_list pos:line="87" pos:column="39">(<param><decl><type><name pos:line="87" pos:column="40">int</name></type> <name pos:line="87" pos:column="44">maintain</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="54">float</name></type> <name pos:line="87" pos:column="60">desiredPaceOrSpeed</name></decl></param>)</parameter_list> <block pos:line="87" pos:column="80">{
        <decl_stmt><decl><type><name><name pos:line="88" pos:column="9">SharedPreferences</name><op:operator pos:line="88" pos:column="26">.</op:operator><name pos:line="88" pos:column="27">Editor</name></name></type> <name pos:line="88" pos:column="34">editor</name> <init pos:line="88" pos:column="41">= <expr><call><name><name pos:line="88" pos:column="43">mSettings</name><op:operator pos:line="88" pos:column="52">.</op:operator><name pos:line="88" pos:column="53">edit</name></name><argument_list pos:line="88" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">maintain</name> <op:operator pos:line="89" pos:column="22">==</op:operator> <name pos:line="89" pos:column="25">M_PACE</name></expr>)</condition><then pos:line="89" pos:column="32"> <block pos:line="89" pos:column="33">{
            <expr_stmt><expr><call><name><name pos:line="90" pos:column="13">editor</name><op:operator pos:line="90" pos:column="19">.</op:operator><name pos:line="90" pos:column="20">putInt</name></name><argument_list pos:line="90" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="27">"desired_pace"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="90" pos:column="43">(</op:operator><name pos:line="90" pos:column="44">int</name><op:operator pos:line="90" pos:column="47">)</op:operator><name pos:line="90" pos:column="48">desiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="92" pos:column="9">else
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><name pos:line="93" pos:column="13">maintain</name> <op:operator pos:line="93" pos:column="22">==</op:operator> <name pos:line="93" pos:column="25">M_SPEED</name></expr>)</condition><then pos:line="93" pos:column="33"> <block pos:line="93" pos:column="34">{
            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">editor</name><op:operator pos:line="94" pos:column="19">.</op:operator><name pos:line="94" pos:column="20">putFloat</name></name><argument_list pos:line="94" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="94" pos:column="29">"desired_speed"</lit:literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="46">desiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if></else></if>
        <expr_stmt><expr><call><name><name pos:line="96" pos:column="9">editor</name><op:operator pos:line="96" pos:column="15">.</op:operator><name pos:line="96" pos:column="16">commit</name></name><argument_list pos:line="96" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    
    <comment type="line" pos:line="99" pos:column="5">//-------------------------------------------------------------------</comment>
    <comment type="line" pos:line="100" pos:column="5">// Speaking:</comment>
    
    <function><type><specifier pos:line="102" pos:column="5">public</specifier> <name pos:line="102" pos:column="12">boolean</name></type> <name pos:line="102" pos:column="20">shouldSpeak</name><parameter_list pos:line="102" pos:column="31">()</parameter_list> <block pos:line="102" pos:column="34">{
        <return pos:line="103" pos:column="9">return <expr><call><name><name pos:line="103" pos:column="16">mSettings</name><op:operator pos:line="103" pos:column="25">.</op:operator><name pos:line="103" pos:column="26">getBoolean</name></name><argument_list pos:line="103" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="103" pos:column="37">"speak"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="103" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    <function><type><specifier pos:line="105" pos:column="5">public</specifier> <name pos:line="105" pos:column="12">float</name></type> <name pos:line="105" pos:column="18">getSpeakingInterval</name><parameter_list pos:line="105" pos:column="37">()</parameter_list> <block pos:line="105" pos:column="40">{
        <try pos:line="106" pos:column="9">try <block pos:line="106" pos:column="13">{
            <return pos:line="107" pos:column="13">return <expr><call><name><name pos:line="107" pos:column="20">Float</name><op:operator pos:line="107" pos:column="25">.</op:operator><name pos:line="107" pos:column="26">valueOf</name></name><argument_list pos:line="107" pos:column="33">(<argument><expr><call><name><name pos:line="107" pos:column="34">mSettings</name><op:operator pos:line="107" pos:column="43">.</op:operator><name pos:line="107" pos:column="44">getString</name></name><argument_list pos:line="107" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="54">"speaking_interval"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="107" pos:column="75">"1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
        }</block>
        <catch pos:line="109" pos:column="9">catch <parameter_list pos:line="109" pos:column="15">(<param><decl><type><name pos:line="109" pos:column="16">NumberFormatException</name></type> <name pos:line="109" pos:column="38">e</name></decl></param>)</parameter_list> <block pos:line="109" pos:column="41">{
            <comment type="line" pos:line="110" pos:column="13">// This could not happen as the value is selected from a list.</comment>
            <return pos:line="111" pos:column="13">return <expr><lit:literal type="number" pos:line="111" pos:column="20">1</lit:literal></expr>;</return>
        }</block></catch></try>
    }</block></function>
    <function><type><specifier pos:line="114" pos:column="5">public</specifier> <name pos:line="114" pos:column="12">boolean</name></type> <name pos:line="114" pos:column="20">shouldTellSteps</name><parameter_list pos:line="114" pos:column="35">()</parameter_list> <block pos:line="114" pos:column="38">{
        <return pos:line="115" pos:column="9">return <expr><call><name><name pos:line="115" pos:column="16">mSettings</name><op:operator pos:line="115" pos:column="25">.</op:operator><name pos:line="115" pos:column="26">getBoolean</name></name><argument_list pos:line="115" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="115" pos:column="37">"speak"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="115" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call> 
        <op:operator pos:line="116" pos:column="9">&amp;&amp;</op:operator> <call><name><name pos:line="116" pos:column="12">mSettings</name><op:operator pos:line="116" pos:column="21">.</op:operator><name pos:line="116" pos:column="22">getBoolean</name></name><argument_list pos:line="116" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="116" pos:column="33">"tell_steps"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="116" pos:column="47">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    <function><type><specifier pos:line="118" pos:column="5">public</specifier> <name pos:line="118" pos:column="12">boolean</name></type> <name pos:line="118" pos:column="20">shouldTellPace</name><parameter_list pos:line="118" pos:column="34">()</parameter_list> <block pos:line="118" pos:column="37">{
        <return pos:line="119" pos:column="9">return <expr><call><name><name pos:line="119" pos:column="16">mSettings</name><op:operator pos:line="119" pos:column="25">.</op:operator><name pos:line="119" pos:column="26">getBoolean</name></name><argument_list pos:line="119" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="119" pos:column="37">"speak"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="119" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call> 
        <op:operator pos:line="120" pos:column="9">&amp;&amp;</op:operator> <call><name><name pos:line="120" pos:column="12">mSettings</name><op:operator pos:line="120" pos:column="21">.</op:operator><name pos:line="120" pos:column="22">getBoolean</name></name><argument_list pos:line="120" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="33">"tell_pace"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="120" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    <function><type><specifier pos:line="122" pos:column="5">public</specifier> <name pos:line="122" pos:column="12">boolean</name></type> <name pos:line="122" pos:column="20">shouldTellDistance</name><parameter_list pos:line="122" pos:column="38">()</parameter_list> <block pos:line="122" pos:column="41">{
        <return pos:line="123" pos:column="9">return <expr><call><name><name pos:line="123" pos:column="16">mSettings</name><op:operator pos:line="123" pos:column="25">.</op:operator><name pos:line="123" pos:column="26">getBoolean</name></name><argument_list pos:line="123" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="37">"speak"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="123" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call> 
        <op:operator pos:line="124" pos:column="9">&amp;&amp;</op:operator> <call><name><name pos:line="124" pos:column="12">mSettings</name><op:operator pos:line="124" pos:column="21">.</op:operator><name pos:line="124" pos:column="22">getBoolean</name></name><argument_list pos:line="124" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="33">"tell_distance"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="124" pos:column="50">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    <function><type><specifier pos:line="126" pos:column="5">public</specifier> <name pos:line="126" pos:column="12">boolean</name></type> <name pos:line="126" pos:column="20">shouldTellSpeed</name><parameter_list pos:line="126" pos:column="35">()</parameter_list> <block pos:line="126" pos:column="38">{
        <return pos:line="127" pos:column="9">return <expr><call><name><name pos:line="127" pos:column="16">mSettings</name><op:operator pos:line="127" pos:column="25">.</op:operator><name pos:line="127" pos:column="26">getBoolean</name></name><argument_list pos:line="127" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="37">"speak"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="127" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call> 
        <op:operator pos:line="128" pos:column="9">&amp;&amp;</op:operator> <call><name><name pos:line="128" pos:column="12">mSettings</name><op:operator pos:line="128" pos:column="21">.</op:operator><name pos:line="128" pos:column="22">getBoolean</name></name><argument_list pos:line="128" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="128" pos:column="33">"tell_speed"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="128" pos:column="47">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    <function><type><specifier pos:line="130" pos:column="5">public</specifier> <name pos:line="130" pos:column="12">boolean</name></type> <name pos:line="130" pos:column="20">shouldTellCalories</name><parameter_list pos:line="130" pos:column="38">()</parameter_list> <block pos:line="130" pos:column="41">{
        <return pos:line="131" pos:column="9">return <expr><call><name><name pos:line="131" pos:column="16">mSettings</name><op:operator pos:line="131" pos:column="25">.</op:operator><name pos:line="131" pos:column="26">getBoolean</name></name><argument_list pos:line="131" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="131" pos:column="37">"speak"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="131" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call> 
        <op:operator pos:line="132" pos:column="9">&amp;&amp;</op:operator> <call><name><name pos:line="132" pos:column="12">mSettings</name><op:operator pos:line="132" pos:column="21">.</op:operator><name pos:line="132" pos:column="22">getBoolean</name></name><argument_list pos:line="132" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="132" pos:column="33">"tell_calories"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="132" pos:column="50">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    <function><type><specifier pos:line="134" pos:column="5">public</specifier> <name pos:line="134" pos:column="12">boolean</name></type> <name pos:line="134" pos:column="20">shouldTellFasterslower</name><parameter_list pos:line="134" pos:column="42">()</parameter_list> <block pos:line="134" pos:column="45">{
        <return pos:line="135" pos:column="9">return <expr><call><name><name pos:line="135" pos:column="16">mSettings</name><op:operator pos:line="135" pos:column="25">.</op:operator><name pos:line="135" pos:column="26">getBoolean</name></name><argument_list pos:line="135" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="135" pos:column="37">"speak"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="135" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call> 
        <op:operator pos:line="136" pos:column="9">&amp;&amp;</op:operator> <call><name><name pos:line="136" pos:column="12">mSettings</name><op:operator pos:line="136" pos:column="21">.</op:operator><name pos:line="136" pos:column="22">getBoolean</name></name><argument_list pos:line="136" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="136" pos:column="33">"tell_fasterslower"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="136" pos:column="54">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="139" pos:column="5">public</specifier> <name pos:line="139" pos:column="12">boolean</name></type> <name pos:line="139" pos:column="20">wakeAggressively</name><parameter_list pos:line="139" pos:column="36">()</parameter_list> <block pos:line="139" pos:column="39">{
        <return pos:line="140" pos:column="9">return <expr><call><name><name pos:line="140" pos:column="16">mSettings</name><op:operator pos:line="140" pos:column="25">.</op:operator><name pos:line="140" pos:column="26">getString</name></name><argument_list pos:line="140" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="36">"operation_level"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="140" pos:column="55">"run_in_background"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="140" pos:column="75">.</op:operator><call><name pos:line="140" pos:column="76">equals</name><argument_list pos:line="140" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="83">"wake_up"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    <function><type><specifier pos:line="142" pos:column="5">public</specifier> <name pos:line="142" pos:column="12">boolean</name></type> <name pos:line="142" pos:column="20">keepScreenOn</name><parameter_list pos:line="142" pos:column="32">()</parameter_list> <block pos:line="142" pos:column="35">{
        <return pos:line="143" pos:column="9">return <expr><call><name><name pos:line="143" pos:column="16">mSettings</name><op:operator pos:line="143" pos:column="25">.</op:operator><name pos:line="143" pos:column="26">getString</name></name><argument_list pos:line="143" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="36">"operation_level"</lit:literal></expr></argument>, <argument><expr><lit:literal type="string" pos:line="143" pos:column="55">"run_in_background"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="143" pos:column="75">.</op:operator><call><name pos:line="143" pos:column="76">equals</name><argument_list pos:line="143" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="143" pos:column="83">"keep_screen_on"</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    
    <comment type="line" pos:line="146" pos:column="5">//</comment>
    <comment type="line" pos:line="147" pos:column="5">// Internal</comment>
    
    <function><type><specifier pos:line="149" pos:column="5">public</specifier> <name pos:line="149" pos:column="12">void</name></type> <name pos:line="149" pos:column="17">saveServiceRunningWithTimestamp</name><parameter_list pos:line="149" pos:column="48">(<param><decl><type><name pos:line="149" pos:column="49">boolean</name></type> <name pos:line="149" pos:column="57">running</name></decl></param>)</parameter_list> <block pos:line="149" pos:column="66">{
        <decl_stmt><decl><type><name><name pos:line="150" pos:column="9">SharedPreferences</name><op:operator pos:line="150" pos:column="26">.</op:operator><name pos:line="150" pos:column="27">Editor</name></name></type> <name pos:line="150" pos:column="34">editor</name> <init pos:line="150" pos:column="41">= <expr><call><name><name pos:line="150" pos:column="43">mSettings</name><op:operator pos:line="150" pos:column="52">.</op:operator><name pos:line="150" pos:column="53">edit</name></name><argument_list pos:line="150" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="151" pos:column="9">editor</name><op:operator pos:line="151" pos:column="15">.</op:operator><name pos:line="151" pos:column="16">putBoolean</name></name><argument_list pos:line="151" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="27">"service_running"</lit:literal></expr></argument>, <argument><expr><name pos:line="151" pos:column="46">running</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="152" pos:column="9">editor</name><op:operator pos:line="152" pos:column="15">.</op:operator><name pos:line="152" pos:column="16">putLong</name></name><argument_list pos:line="152" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="152" pos:column="24">"last_seen"</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="152" pos:column="37">Utils</name><op:operator pos:line="152" pos:column="42">.</op:operator><name pos:line="152" pos:column="43">currentTimeInMillis</name></name><argument_list pos:line="152" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="153" pos:column="9">editor</name><op:operator pos:line="153" pos:column="15">.</op:operator><name pos:line="153" pos:column="16">commit</name></name><argument_list pos:line="153" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><specifier pos:line="156" pos:column="5">public</specifier> <name pos:line="156" pos:column="12">void</name></type> <name pos:line="156" pos:column="17">saveServiceRunningWithNullTimestamp</name><parameter_list pos:line="156" pos:column="52">(<param><decl><type><name pos:line="156" pos:column="53">boolean</name></type> <name pos:line="156" pos:column="61">running</name></decl></param>)</parameter_list> <block pos:line="156" pos:column="70">{
        <decl_stmt><decl><type><name><name pos:line="157" pos:column="9">SharedPreferences</name><op:operator pos:line="157" pos:column="26">.</op:operator><name pos:line="157" pos:column="27">Editor</name></name></type> <name pos:line="157" pos:column="34">editor</name> <init pos:line="157" pos:column="41">= <expr><call><name><name pos:line="157" pos:column="43">mSettings</name><op:operator pos:line="157" pos:column="52">.</op:operator><name pos:line="157" pos:column="53">edit</name></name><argument_list pos:line="157" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="158" pos:column="9">editor</name><op:operator pos:line="158" pos:column="15">.</op:operator><name pos:line="158" pos:column="16">putBoolean</name></name><argument_list pos:line="158" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="158" pos:column="27">"service_running"</lit:literal></expr></argument>, <argument><expr><name pos:line="158" pos:column="46">running</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="159" pos:column="9">editor</name><op:operator pos:line="159" pos:column="15">.</op:operator><name pos:line="159" pos:column="16">putLong</name></name><argument_list pos:line="159" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="159" pos:column="24">"last_seen"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="159" pos:column="37">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="160" pos:column="9">editor</name><op:operator pos:line="160" pos:column="15">.</op:operator><name pos:line="160" pos:column="16">commit</name></name><argument_list pos:line="160" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="163" pos:column="5">public</specifier> <name pos:line="163" pos:column="12">void</name></type> <name pos:line="163" pos:column="17">clearServiceRunning</name><parameter_list pos:line="163" pos:column="36">()</parameter_list> <block pos:line="163" pos:column="39">{
        <decl_stmt><decl><type><name><name pos:line="164" pos:column="9">SharedPreferences</name><op:operator pos:line="164" pos:column="26">.</op:operator><name pos:line="164" pos:column="27">Editor</name></name></type> <name pos:line="164" pos:column="34">editor</name> <init pos:line="164" pos:column="41">= <expr><call><name><name pos:line="164" pos:column="43">mSettings</name><op:operator pos:line="164" pos:column="52">.</op:operator><name pos:line="164" pos:column="53">edit</name></name><argument_list pos:line="164" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="165" pos:column="9">editor</name><op:operator pos:line="165" pos:column="15">.</op:operator><name pos:line="165" pos:column="16">putBoolean</name></name><argument_list pos:line="165" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="165" pos:column="27">"service_running"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="165" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="166" pos:column="9">editor</name><op:operator pos:line="166" pos:column="15">.</op:operator><name pos:line="166" pos:column="16">putLong</name></name><argument_list pos:line="166" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="166" pos:column="24">"last_seen"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="37">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="167" pos:column="9">editor</name><op:operator pos:line="167" pos:column="15">.</op:operator><name pos:line="167" pos:column="16">commit</name></name><argument_list pos:line="167" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="170" pos:column="5">public</specifier> <name pos:line="170" pos:column="12">boolean</name></type> <name pos:line="170" pos:column="20">isServiceRunning</name><parameter_list pos:line="170" pos:column="36">()</parameter_list> <block pos:line="170" pos:column="39">{
        <return pos:line="171" pos:column="9">return <expr><call><name><name pos:line="171" pos:column="16">mSettings</name><op:operator pos:line="171" pos:column="25">.</op:operator><name pos:line="171" pos:column="26">getBoolean</name></name><argument_list pos:line="171" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="171" pos:column="37">"service_running"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="171" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function>
    
    <function><type><specifier pos:line="174" pos:column="5">public</specifier> <name pos:line="174" pos:column="12">boolean</name></type> <name pos:line="174" pos:column="20">isNewStart</name><parameter_list pos:line="174" pos:column="30">()</parameter_list> <block pos:line="174" pos:column="33">{
        <comment type="line" pos:line="175" pos:column="9">// activity last paused more than 10 minutes ago</comment>
        <return pos:line="176" pos:column="9">return <expr><call><name><name pos:line="176" pos:column="16">mSettings</name><op:operator pos:line="176" pos:column="25">.</op:operator><name pos:line="176" pos:column="26">getLong</name></name><argument_list pos:line="176" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="176" pos:column="34">"last_seen"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="176" pos:column="47">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="176" pos:column="50">&lt;</op:operator> <call><name><name pos:line="176" pos:column="52">Utils</name><op:operator pos:line="176" pos:column="57">.</op:operator><name pos:line="176" pos:column="58">currentTimeInMillis</name></name><argument_list pos:line="176" pos:column="77">()</argument_list></call> <op:operator pos:line="176" pos:column="80">-</op:operator> <lit:literal type="number" pos:line="176" pos:column="82">1000</lit:literal><op:operator pos:line="176" pos:column="86">*</op:operator><lit:literal type="number" pos:line="176" pos:column="87">60</lit:literal><op:operator pos:line="176" pos:column="89">*</op:operator><lit:literal type="number" pos:line="176" pos:column="90">10</lit:literal></expr>;</return>
    }</block></function>

}</block></class>
</unit>
