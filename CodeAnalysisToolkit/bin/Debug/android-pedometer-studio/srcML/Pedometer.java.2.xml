<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="Java" filename="C:\Users\kosta\Documents\Sensor-Data-Analytics\projects\android-pedometer-studio\app\src\main\java\name\bagi\levente\pedometer\Pedometer.java" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 *  Pedometer - Android App
 *  Copyright (C) 2009 Levente Bagi
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */</comment>

<package pos:line="19" pos:column="1">package <name><name pos:line="19" pos:column="9">name</name><op:operator pos:line="19" pos:column="13">.</op:operator><name pos:line="19" pos:column="14">bagi</name><op:operator pos:line="19" pos:column="18">.</op:operator><name pos:line="19" pos:column="19">levente</name><op:operator pos:line="19" pos:column="26">.</op:operator><name pos:line="19" pos:column="27">pedometer</name></name>;</package>


<import pos:line="22" pos:column="1">import <name><name pos:line="22" pos:column="8">android</name><op:operator pos:line="22" pos:column="15">.</op:operator><name pos:line="22" pos:column="16">app</name><op:operator pos:line="22" pos:column="19">.</op:operator><name pos:line="22" pos:column="20">Activity</name></name>;</import>
<import pos:line="23" pos:column="1">import <name><name pos:line="23" pos:column="8">android</name><op:operator pos:line="23" pos:column="15">.</op:operator><name pos:line="23" pos:column="16">content</name><op:operator pos:line="23" pos:column="23">.</op:operator><name pos:line="23" pos:column="24">ComponentName</name></name>;</import>
<import pos:line="24" pos:column="1">import <name><name pos:line="24" pos:column="8">android</name><op:operator pos:line="24" pos:column="15">.</op:operator><name pos:line="24" pos:column="16">content</name><op:operator pos:line="24" pos:column="23">.</op:operator><name pos:line="24" pos:column="24">Context</name></name>;</import>
<import pos:line="25" pos:column="1">import <name><name pos:line="25" pos:column="8">android</name><op:operator pos:line="25" pos:column="15">.</op:operator><name pos:line="25" pos:column="16">content</name><op:operator pos:line="25" pos:column="23">.</op:operator><name pos:line="25" pos:column="24">Intent</name></name>;</import>
<import pos:line="26" pos:column="1">import <name><name pos:line="26" pos:column="8">android</name><op:operator pos:line="26" pos:column="15">.</op:operator><name pos:line="26" pos:column="16">content</name><op:operator pos:line="26" pos:column="23">.</op:operator><name pos:line="26" pos:column="24">ServiceConnection</name></name>;</import>
<import pos:line="27" pos:column="1">import <name><name pos:line="27" pos:column="8">android</name><op:operator pos:line="27" pos:column="15">.</op:operator><name pos:line="27" pos:column="16">content</name><op:operator pos:line="27" pos:column="23">.</op:operator><name pos:line="27" pos:column="24">SharedPreferences</name></name>;</import>
<import pos:line="28" pos:column="1">import <name><name pos:line="28" pos:column="8">android</name><op:operator pos:line="28" pos:column="15">.</op:operator><name pos:line="28" pos:column="16">os</name><op:operator pos:line="28" pos:column="18">.</op:operator><name pos:line="28" pos:column="19">Bundle</name></name>;</import>
<import pos:line="29" pos:column="1">import <name><name pos:line="29" pos:column="8">android</name><op:operator pos:line="29" pos:column="15">.</op:operator><name pos:line="29" pos:column="16">os</name><op:operator pos:line="29" pos:column="18">.</op:operator><name pos:line="29" pos:column="19">Handler</name></name>;</import>
<import pos:line="30" pos:column="1">import <name><name pos:line="30" pos:column="8">android</name><op:operator pos:line="30" pos:column="15">.</op:operator><name pos:line="30" pos:column="16">os</name><op:operator pos:line="30" pos:column="18">.</op:operator><name pos:line="30" pos:column="19">IBinder</name></name>;</import>
<import pos:line="31" pos:column="1">import <name><name pos:line="31" pos:column="8">android</name><op:operator pos:line="31" pos:column="15">.</op:operator><name pos:line="31" pos:column="16">os</name><op:operator pos:line="31" pos:column="18">.</op:operator><name pos:line="31" pos:column="19">Message</name></name>;</import>
<import pos:line="32" pos:column="1">import <name><name pos:line="32" pos:column="8">android</name><op:operator pos:line="32" pos:column="15">.</op:operator><name pos:line="32" pos:column="16">preference</name><op:operator pos:line="32" pos:column="26">.</op:operator><name pos:line="32" pos:column="27">PreferenceManager</name></name>;</import>
<import pos:line="33" pos:column="1">import <name><name pos:line="33" pos:column="8">android</name><op:operator pos:line="33" pos:column="15">.</op:operator><name pos:line="33" pos:column="16">util</name><op:operator pos:line="33" pos:column="20">.</op:operator><name pos:line="33" pos:column="21">Log</name></name>;</import>
<import pos:line="34" pos:column="1">import <name><name pos:line="34" pos:column="8">android</name><op:operator pos:line="34" pos:column="15">.</op:operator><name pos:line="34" pos:column="16">view</name><op:operator pos:line="34" pos:column="20">.</op:operator><name pos:line="34" pos:column="21">Menu</name></name>;</import>
<import pos:line="35" pos:column="1">import <name><name pos:line="35" pos:column="8">android</name><op:operator pos:line="35" pos:column="15">.</op:operator><name pos:line="35" pos:column="16">view</name><op:operator pos:line="35" pos:column="20">.</op:operator><name pos:line="35" pos:column="21">MenuItem</name></name>;</import>
<import pos:line="36" pos:column="1">import <name><name pos:line="36" pos:column="8">android</name><op:operator pos:line="36" pos:column="15">.</op:operator><name pos:line="36" pos:column="16">view</name><op:operator pos:line="36" pos:column="20">.</op:operator><name pos:line="36" pos:column="21">View</name></name>;</import>
<import pos:line="37" pos:column="1">import <name><name pos:line="37" pos:column="8">android</name><op:operator pos:line="37" pos:column="15">.</op:operator><name pos:line="37" pos:column="16">widget</name><op:operator pos:line="37" pos:column="22">.</op:operator><name pos:line="37" pos:column="23">Button</name></name>;</import>
<import pos:line="38" pos:column="1">import <name><name pos:line="38" pos:column="8">android</name><op:operator pos:line="38" pos:column="15">.</op:operator><name pos:line="38" pos:column="16">widget</name><op:operator pos:line="38" pos:column="22">.</op:operator><name pos:line="38" pos:column="23">LinearLayout</name></name>;</import>
<import pos:line="39" pos:column="1">import <name><name pos:line="39" pos:column="8">android</name><op:operator pos:line="39" pos:column="15">.</op:operator><name pos:line="39" pos:column="16">widget</name><op:operator pos:line="39" pos:column="22">.</op:operator><name pos:line="39" pos:column="23">TextView</name></name>;</import>



<class><specifier pos:line="43" pos:column="1">public</specifier> class <name pos:line="43" pos:column="14">Pedometer</name> <super><extends pos:line="43" pos:column="24">extends <name pos:line="43" pos:column="32">Activity</name></extends></super> <block pos:line="43" pos:column="41">{
	<decl_stmt><decl><type><specifier pos:line="44" pos:column="9">private</specifier> <specifier pos:line="44" pos:column="17">static</specifier> <specifier pos:line="44" pos:column="24">final</specifier> <name pos:line="44" pos:column="30">String</name></type> <name pos:line="44" pos:column="37">TAG</name> <init pos:line="44" pos:column="41">= <expr><lit:literal type="string" pos:line="44" pos:column="43">"Pedometer"</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="45" pos:column="5">private</specifier> <name pos:line="45" pos:column="13">SharedPreferences</name></type> <name pos:line="45" pos:column="31">mSettings</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="46" pos:column="5">private</specifier> <name pos:line="46" pos:column="13">PedometerSettings</name></type> <name pos:line="46" pos:column="31">mPedometerSettings</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="47" pos:column="5">private</specifier> <name pos:line="47" pos:column="13">Utils</name></type> <name pos:line="47" pos:column="19">mUtils</name></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><specifier pos:line="49" pos:column="5">private</specifier> <name pos:line="49" pos:column="13">TextView</name></type> <name pos:line="49" pos:column="22">mStepValueView</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="50" pos:column="5">private</specifier> <name pos:line="50" pos:column="13">TextView</name></type> <name pos:line="50" pos:column="22">mPaceValueView</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="51" pos:column="5">private</specifier> <name pos:line="51" pos:column="13">TextView</name></type> <name pos:line="51" pos:column="22">mDistanceValueView</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="52" pos:column="5">private</specifier> <name pos:line="52" pos:column="13">TextView</name></type> <name pos:line="52" pos:column="22">mSpeedValueView</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="53" pos:column="5">private</specifier> <name pos:line="53" pos:column="13">TextView</name></type> <name pos:line="53" pos:column="22">mCaloriesValueView</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="54" pos:column="5">TextView</name></type> <name pos:line="54" pos:column="14">mDesiredPaceView</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="55" pos:column="5">private</specifier> <name pos:line="55" pos:column="13">int</name></type> <name pos:line="55" pos:column="17">mStepValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="56" pos:column="5">private</specifier> <name pos:line="56" pos:column="13">int</name></type> <name pos:line="56" pos:column="17">mPaceValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="57" pos:column="5">private</specifier> <name pos:line="57" pos:column="13">float</name></type> <name pos:line="57" pos:column="19">mDistanceValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="58" pos:column="5">private</specifier> <name pos:line="58" pos:column="13">float</name></type> <name pos:line="58" pos:column="19">mSpeedValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="59" pos:column="5">private</specifier> <name pos:line="59" pos:column="13">int</name></type> <name pos:line="59" pos:column="17">mCaloriesValue</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="60" pos:column="5">private</specifier> <name pos:line="60" pos:column="13">float</name></type> <name pos:line="60" pos:column="19">mDesiredPaceOrSpeed</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="61" pos:column="5">private</specifier> <name pos:line="61" pos:column="13">int</name></type> <name pos:line="61" pos:column="17">mMaintain</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="62" pos:column="5">private</specifier> <name pos:line="62" pos:column="13">boolean</name></type> <name pos:line="62" pos:column="21">mIsMetric</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="63" pos:column="5">private</specifier> <name pos:line="63" pos:column="13">float</name></type> <name pos:line="63" pos:column="19">mMaintainInc</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="64" pos:column="5">private</specifier> <name pos:line="64" pos:column="13">boolean</name></type> <name pos:line="64" pos:column="21">mQuitting</name> <init pos:line="64" pos:column="31">= <expr><lit:literal type="boolean" pos:line="64" pos:column="33">false</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="64" pos:column="40">// Set when user selected Quit from menu, can be used by onPause, onStop, onDestroy</comment>

    
    <comment type="block" format="javadoc" pos:line="67" pos:column="5">/**
     * True, when service is running.
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="70" pos:column="5">private</specifier> <name pos:line="70" pos:column="13">boolean</name></type> <name pos:line="70" pos:column="21">mIsRunning</name></decl>;</decl_stmt>
    
    <comment type="block" format="javadoc" pos:line="72" pos:column="5">/** Called when the activity is first created. */</comment>
    <function><type><annotation pos:line="73" pos:column="5">@<name pos:line="73" pos:column="6">Override</name></annotation>
    <specifier pos:line="74" pos:column="5">public</specifier> <name pos:line="74" pos:column="12">void</name></type> <name pos:line="74" pos:column="17">onCreate</name><parameter_list pos:line="74" pos:column="25">(<param><decl><type><name pos:line="74" pos:column="26">Bundle</name></type> <name pos:line="74" pos:column="33">savedInstanceState</name></decl></param>)</parameter_list> <block pos:line="74" pos:column="53">{
        <expr_stmt><expr><call><name><name pos:line="75" pos:column="9">Log</name><op:operator pos:line="75" pos:column="12">.</op:operator><name pos:line="75" pos:column="13">i</name></name><argument_list pos:line="75" pos:column="14">(<argument><expr><name pos:line="75" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="75" pos:column="20">"[ACTIVITY] onCreate"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="76" pos:column="9">super</name><op:operator pos:line="76" pos:column="14">.</op:operator><name pos:line="76" pos:column="15">onCreate</name></name><argument_list pos:line="76" pos:column="23">(<argument><expr><name pos:line="76" pos:column="24">savedInstanceState</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><name pos:line="78" pos:column="9">mStepValue</name> <op:operator pos:line="78" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="78" pos:column="22">0</lit:literal></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="79" pos:column="9">mPaceValue</name> <op:operator pos:line="79" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="79" pos:column="22">0</lit:literal></expr>;</expr_stmt>
        
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">setContentView</name><argument_list pos:line="81" pos:column="23">(<argument><expr><name><name pos:line="81" pos:column="24">R</name><op:operator pos:line="81" pos:column="25">.</op:operator><name pos:line="81" pos:column="26">layout</name><op:operator pos:line="81" pos:column="32">.</op:operator><name pos:line="81" pos:column="33">main</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><name pos:line="83" pos:column="9">mUtils</name> <op:operator pos:line="83" pos:column="16">=</op:operator> <call><name><name pos:line="83" pos:column="18">Utils</name><op:operator pos:line="83" pos:column="23">.</op:operator><name pos:line="83" pos:column="24">getInstance</name></name><argument_list pos:line="83" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><annotation pos:line="86" pos:column="5">@<name pos:line="86" pos:column="6">Override</name></annotation>
    <specifier pos:line="87" pos:column="5">protected</specifier> <name pos:line="87" pos:column="15">void</name></type> <name pos:line="87" pos:column="20">onStart</name><parameter_list pos:line="87" pos:column="27">()</parameter_list> <block pos:line="87" pos:column="30">{
        <expr_stmt><expr><call><name><name pos:line="88" pos:column="9">Log</name><op:operator pos:line="88" pos:column="12">.</op:operator><name pos:line="88" pos:column="13">i</name></name><argument_list pos:line="88" pos:column="14">(<argument><expr><name pos:line="88" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="88" pos:column="20">"[ACTIVITY] onStart"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="89" pos:column="9">super</name><op:operator pos:line="89" pos:column="14">.</op:operator><name pos:line="89" pos:column="15">onStart</name></name><argument_list pos:line="89" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation pos:line="92" pos:column="5">@<name pos:line="92" pos:column="6">Override</name></annotation>
    <specifier pos:line="93" pos:column="5">protected</specifier> <name pos:line="93" pos:column="15">void</name></type> <name pos:line="93" pos:column="20">onResume</name><parameter_list pos:line="93" pos:column="28">()</parameter_list> <block pos:line="93" pos:column="31">{
        <expr_stmt><expr><call><name><name pos:line="94" pos:column="9">Log</name><op:operator pos:line="94" pos:column="12">.</op:operator><name pos:line="94" pos:column="13">i</name></name><argument_list pos:line="94" pos:column="14">(<argument><expr><name pos:line="94" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="94" pos:column="20">"[ACTIVITY] onResume"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="95" pos:column="9">super</name><op:operator pos:line="95" pos:column="14">.</op:operator><name pos:line="95" pos:column="15">onResume</name></name><argument_list pos:line="95" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><name pos:line="97" pos:column="9">mSettings</name> <op:operator pos:line="97" pos:column="19">=</op:operator> <call><name><name pos:line="97" pos:column="21">PreferenceManager</name><op:operator pos:line="97" pos:column="38">.</op:operator><name pos:line="97" pos:column="39">getDefaultSharedPreferences</name></name><argument_list pos:line="97" pos:column="66">(<argument><expr><name pos:line="97" pos:column="67">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="98" pos:column="9">mPedometerSettings</name> <op:operator pos:line="98" pos:column="28">=</op:operator> <op:operator pos:line="98" pos:column="30">new</op:operator> <call><name pos:line="98" pos:column="34">PedometerSettings</name><argument_list pos:line="98" pos:column="51">(<argument><expr><name pos:line="98" pos:column="52">mSettings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><call><name><name pos:line="100" pos:column="9">mUtils</name><op:operator pos:line="100" pos:column="15">.</op:operator><name pos:line="100" pos:column="16">setSpeak</name></name><argument_list pos:line="100" pos:column="24">(<argument><expr><call><name><name pos:line="100" pos:column="25">mSettings</name><op:operator pos:line="100" pos:column="34">.</op:operator><name pos:line="100" pos:column="35">getBoolean</name></name><argument_list pos:line="100" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="46">"speak"</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="100" pos:column="55">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line" pos:line="102" pos:column="9">// Read from preferences if the service was running on the last onPause</comment>
        <expr_stmt><expr><name pos:line="103" pos:column="9">mIsRunning</name> <op:operator pos:line="103" pos:column="20">=</op:operator> <call><name><name pos:line="103" pos:column="22">mPedometerSettings</name><op:operator pos:line="103" pos:column="40">.</op:operator><name pos:line="103" pos:column="41">isServiceRunning</name></name><argument_list pos:line="103" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
        
        <comment type="line" pos:line="105" pos:column="9">// Start the service if this is considered to be an application start (last onPause was long ago)</comment>
        <if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><op:operator pos:line="106" pos:column="13">!</op:operator><name pos:line="106" pos:column="14">mIsRunning</name> <op:operator pos:line="106" pos:column="25">&amp;&amp;</op:operator> <call><name><name pos:line="106" pos:column="28">mPedometerSettings</name><op:operator pos:line="106" pos:column="46">.</op:operator><name pos:line="106" pos:column="47">isNewStart</name></name><argument_list pos:line="106" pos:column="57">()</argument_list></call></expr>)</condition><then pos:line="106" pos:column="60"> <block pos:line="106" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">startStepService</name><argument_list pos:line="107" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">bindStepService</name><argument_list pos:line="108" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="110" pos:column="9">else <if pos:line="110" pos:column="14">if <condition pos:line="110" pos:column="17">(<expr><name pos:line="110" pos:column="18">mIsRunning</name></expr>)</condition><then pos:line="110" pos:column="29"> <block pos:line="110" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">bindStepService</name><argument_list pos:line="111" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if></else></if>
        
        <expr_stmt><expr><call><name><name pos:line="114" pos:column="9">mPedometerSettings</name><op:operator pos:line="114" pos:column="27">.</op:operator><name pos:line="114" pos:column="28">clearServiceRunning</name></name><argument_list pos:line="114" pos:column="47">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name pos:line="116" pos:column="9">mStepValueView</name>     <op:operator pos:line="116" pos:column="28">=</op:operator> <op:operator pos:line="116" pos:column="30">(</op:operator><name pos:line="116" pos:column="31">TextView</name><op:operator pos:line="116" pos:column="39">)</op:operator> <call><name pos:line="116" pos:column="41">findViewById</name><argument_list pos:line="116" pos:column="53">(<argument><expr><name><name pos:line="116" pos:column="54">R</name><op:operator pos:line="116" pos:column="55">.</op:operator><name pos:line="116" pos:column="56">id</name><op:operator pos:line="116" pos:column="58">.</op:operator><name pos:line="116" pos:column="59">step_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="117" pos:column="9">mPaceValueView</name>     <op:operator pos:line="117" pos:column="28">=</op:operator> <op:operator pos:line="117" pos:column="30">(</op:operator><name pos:line="117" pos:column="31">TextView</name><op:operator pos:line="117" pos:column="39">)</op:operator> <call><name pos:line="117" pos:column="41">findViewById</name><argument_list pos:line="117" pos:column="53">(<argument><expr><name><name pos:line="117" pos:column="54">R</name><op:operator pos:line="117" pos:column="55">.</op:operator><name pos:line="117" pos:column="56">id</name><op:operator pos:line="117" pos:column="58">.</op:operator><name pos:line="117" pos:column="59">pace_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="118" pos:column="9">mDistanceValueView</name> <op:operator pos:line="118" pos:column="28">=</op:operator> <op:operator pos:line="118" pos:column="30">(</op:operator><name pos:line="118" pos:column="31">TextView</name><op:operator pos:line="118" pos:column="39">)</op:operator> <call><name pos:line="118" pos:column="41">findViewById</name><argument_list pos:line="118" pos:column="53">(<argument><expr><name><name pos:line="118" pos:column="54">R</name><op:operator pos:line="118" pos:column="55">.</op:operator><name pos:line="118" pos:column="56">id</name><op:operator pos:line="118" pos:column="58">.</op:operator><name pos:line="118" pos:column="59">distance_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="119" pos:column="9">mSpeedValueView</name>    <op:operator pos:line="119" pos:column="28">=</op:operator> <op:operator pos:line="119" pos:column="30">(</op:operator><name pos:line="119" pos:column="31">TextView</name><op:operator pos:line="119" pos:column="39">)</op:operator> <call><name pos:line="119" pos:column="41">findViewById</name><argument_list pos:line="119" pos:column="53">(<argument><expr><name><name pos:line="119" pos:column="54">R</name><op:operator pos:line="119" pos:column="55">.</op:operator><name pos:line="119" pos:column="56">id</name><op:operator pos:line="119" pos:column="58">.</op:operator><name pos:line="119" pos:column="59">speed_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="120" pos:column="9">mCaloriesValueView</name> <op:operator pos:line="120" pos:column="28">=</op:operator> <op:operator pos:line="120" pos:column="30">(</op:operator><name pos:line="120" pos:column="31">TextView</name><op:operator pos:line="120" pos:column="39">)</op:operator> <call><name pos:line="120" pos:column="41">findViewById</name><argument_list pos:line="120" pos:column="53">(<argument><expr><name><name pos:line="120" pos:column="54">R</name><op:operator pos:line="120" pos:column="55">.</op:operator><name pos:line="120" pos:column="56">id</name><op:operator pos:line="120" pos:column="58">.</op:operator><name pos:line="120" pos:column="59">calories_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="121" pos:column="9">mDesiredPaceView</name>   <op:operator pos:line="121" pos:column="28">=</op:operator> <op:operator pos:line="121" pos:column="30">(</op:operator><name pos:line="121" pos:column="31">TextView</name><op:operator pos:line="121" pos:column="39">)</op:operator> <call><name pos:line="121" pos:column="41">findViewById</name><argument_list pos:line="121" pos:column="53">(<argument><expr><name><name pos:line="121" pos:column="54">R</name><op:operator pos:line="121" pos:column="55">.</op:operator><name pos:line="121" pos:column="56">id</name><op:operator pos:line="121" pos:column="58">.</op:operator><name pos:line="121" pos:column="59">desired_pace_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name pos:line="123" pos:column="9">mIsMetric</name> <op:operator pos:line="123" pos:column="19">=</op:operator> <call><name><name pos:line="123" pos:column="21">mPedometerSettings</name><op:operator pos:line="123" pos:column="39">.</op:operator><name pos:line="123" pos:column="40">isMetric</name></name><argument_list pos:line="123" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><op:operator pos:line="124" pos:column="9">(</op:operator><op:operator pos:line="124" pos:column="10">(</op:operator><name pos:line="124" pos:column="11">TextView</name><op:operator pos:line="124" pos:column="19">)</op:operator> <call><name pos:line="124" pos:column="21">findViewById</name><argument_list pos:line="124" pos:column="33">(<argument><expr><name><name pos:line="124" pos:column="34">R</name><op:operator pos:line="124" pos:column="35">.</op:operator><name pos:line="124" pos:column="36">id</name><op:operator pos:line="124" pos:column="38">.</op:operator><name pos:line="124" pos:column="39">distance_units</name></name></expr></argument>)</argument_list></call><op:operator pos:line="124" pos:column="54">)</op:operator><op:operator pos:line="124" pos:column="55">.</op:operator><call><name pos:line="124" pos:column="56">setText</name><argument_list pos:line="124" pos:column="63">(<argument><expr><call><name pos:line="124" pos:column="64">getString</name><argument_list pos:line="124" pos:column="73">(
                <argument><expr><name pos:line="125" pos:column="17">mIsMetric</name>
                <op:operator pos:line="126" pos:column="17">?</op:operator> <name><name pos:line="126" pos:column="19">R</name><op:operator pos:line="126" pos:column="20">.</op:operator><name pos:line="126" pos:column="21">string</name><op:operator pos:line="126" pos:column="27">.</op:operator><name pos:line="126" pos:column="28">kilometers</name></name>
                <op:operator pos:line="127" pos:column="17">:</op:operator> <name><name pos:line="127" pos:column="19">R</name><op:operator pos:line="127" pos:column="20">.</op:operator><name pos:line="127" pos:column="21">string</name><op:operator pos:line="127" pos:column="27">.</op:operator><name pos:line="127" pos:column="28">miles</name></name></expr></argument>
        )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><op:operator pos:line="129" pos:column="9">(</op:operator><op:operator pos:line="129" pos:column="10">(</op:operator><name pos:line="129" pos:column="11">TextView</name><op:operator pos:line="129" pos:column="19">)</op:operator> <call><name pos:line="129" pos:column="21">findViewById</name><argument_list pos:line="129" pos:column="33">(<argument><expr><name><name pos:line="129" pos:column="34">R</name><op:operator pos:line="129" pos:column="35">.</op:operator><name pos:line="129" pos:column="36">id</name><op:operator pos:line="129" pos:column="38">.</op:operator><name pos:line="129" pos:column="39">speed_units</name></name></expr></argument>)</argument_list></call><op:operator pos:line="129" pos:column="51">)</op:operator><op:operator pos:line="129" pos:column="52">.</op:operator><call><name pos:line="129" pos:column="53">setText</name><argument_list pos:line="129" pos:column="60">(<argument><expr><call><name pos:line="129" pos:column="61">getString</name><argument_list pos:line="129" pos:column="70">(
                <argument><expr><name pos:line="130" pos:column="17">mIsMetric</name>
                <op:operator pos:line="131" pos:column="17">?</op:operator> <name><name pos:line="131" pos:column="19">R</name><op:operator pos:line="131" pos:column="20">.</op:operator><name pos:line="131" pos:column="21">string</name><op:operator pos:line="131" pos:column="27">.</op:operator><name pos:line="131" pos:column="28">kilometers_per_hour</name></name>
                <op:operator pos:line="132" pos:column="17">:</op:operator> <name><name pos:line="132" pos:column="19">R</name><op:operator pos:line="132" pos:column="20">.</op:operator><name pos:line="132" pos:column="21">string</name><op:operator pos:line="132" pos:column="27">.</op:operator><name pos:line="132" pos:column="28">miles_per_hour</name></name></expr></argument>
        )</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        
        <expr_stmt><expr><name pos:line="135" pos:column="9">mMaintain</name> <op:operator pos:line="135" pos:column="19">=</op:operator> <call><name><name pos:line="135" pos:column="21">mPedometerSettings</name><op:operator pos:line="135" pos:column="39">.</op:operator><name pos:line="135" pos:column="40">getMaintainOption</name></name><argument_list pos:line="135" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><op:operator pos:line="136" pos:column="9">(</op:operator><op:operator pos:line="136" pos:column="10">(</op:operator><name pos:line="136" pos:column="11">LinearLayout</name><op:operator pos:line="136" pos:column="23">)</op:operator> <call><name><name pos:line="136" pos:column="25">this</name><op:operator pos:line="136" pos:column="29">.</op:operator><name pos:line="136" pos:column="30">findViewById</name></name><argument_list pos:line="136" pos:column="42">(<argument><expr><name><name pos:line="136" pos:column="43">R</name><op:operator pos:line="136" pos:column="44">.</op:operator><name pos:line="136" pos:column="45">id</name><op:operator pos:line="136" pos:column="47">.</op:operator><name pos:line="136" pos:column="48">desired_pace_control</name></name></expr></argument>)</argument_list></call><op:operator pos:line="136" pos:column="69">)</op:operator><op:operator pos:line="136" pos:column="70">.</op:operator><call><name pos:line="136" pos:column="71">setVisibility</name><argument_list pos:line="136" pos:column="84">(
                <argument><expr><name pos:line="137" pos:column="17">mMaintain</name> <op:operator pos:line="137" pos:column="27">!=</op:operator> <name><name pos:line="137" pos:column="30">PedometerSettings</name><op:operator pos:line="137" pos:column="47">.</op:operator><name pos:line="137" pos:column="48">M_NONE</name></name>
                <op:operator pos:line="138" pos:column="17">?</op:operator> <name><name pos:line="138" pos:column="19">View</name><op:operator pos:line="138" pos:column="23">.</op:operator><name pos:line="138" pos:column="24">VISIBLE</name></name>
                <op:operator pos:line="139" pos:column="17">:</op:operator> <name><name pos:line="139" pos:column="19">View</name><op:operator pos:line="139" pos:column="23">.</op:operator><name pos:line="139" pos:column="24">GONE</name></name></expr></argument>
            )</argument_list></call></expr>;</expr_stmt>
        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><name pos:line="141" pos:column="13">mMaintain</name> <op:operator pos:line="141" pos:column="23">==</op:operator> <name><name pos:line="141" pos:column="26">PedometerSettings</name><op:operator pos:line="141" pos:column="43">.</op:operator><name pos:line="141" pos:column="44">M_PACE</name></name></expr>)</condition><then pos:line="141" pos:column="51"> <block pos:line="141" pos:column="52">{
            <expr_stmt><expr><name pos:line="142" pos:column="13">mMaintainInc</name> <op:operator pos:line="142" pos:column="26">=</op:operator> <lit:literal type="number" pos:line="142" pos:column="28">5f</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="143" pos:column="13">mDesiredPaceOrSpeed</name> <op:operator pos:line="143" pos:column="33">=</op:operator> <op:operator pos:line="143" pos:column="35">(</op:operator><name pos:line="143" pos:column="36">float</name><op:operator pos:line="143" pos:column="41">)</op:operator><call><name><name pos:line="143" pos:column="42">mPedometerSettings</name><op:operator pos:line="143" pos:column="60">.</op:operator><name pos:line="143" pos:column="61">getDesiredPace</name></name><argument_list pos:line="143" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="145" pos:column="9">else 
        <if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name pos:line="146" pos:column="13">mMaintain</name> <op:operator pos:line="146" pos:column="23">==</op:operator> <name><name pos:line="146" pos:column="26">PedometerSettings</name><op:operator pos:line="146" pos:column="43">.</op:operator><name pos:line="146" pos:column="44">M_SPEED</name></name></expr>)</condition><then pos:line="146" pos:column="52"> <block pos:line="146" pos:column="53">{
            <expr_stmt><expr><name pos:line="147" pos:column="13">mDesiredPaceOrSpeed</name> <op:operator pos:line="147" pos:column="33">=</op:operator> <call><name><name pos:line="147" pos:column="35">mPedometerSettings</name><op:operator pos:line="147" pos:column="53">.</op:operator><name pos:line="147" pos:column="54">getDesiredSpeed</name></name><argument_list pos:line="147" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="148" pos:column="13">mMaintainInc</name> <op:operator pos:line="148" pos:column="26">=</op:operator> <lit:literal type="number" pos:line="148" pos:column="28">0.1f</lit:literal></expr>;</expr_stmt>
        }</block></then></if></else></if>
        <decl_stmt><decl><type><name pos:line="150" pos:column="9">Button</name></type> <name pos:line="150" pos:column="16">button1</name> <init pos:line="150" pos:column="24">= <expr><op:operator pos:line="150" pos:column="26">(</op:operator><name pos:line="150" pos:column="27">Button</name><op:operator pos:line="150" pos:column="33">)</op:operator> <call><name pos:line="150" pos:column="35">findViewById</name><argument_list pos:line="150" pos:column="47">(<argument><expr><name><name pos:line="150" pos:column="48">R</name><op:operator pos:line="150" pos:column="49">.</op:operator><name pos:line="150" pos:column="50">id</name><op:operator pos:line="150" pos:column="52">.</op:operator><name pos:line="150" pos:column="53">button_desired_pace_lower</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="151" pos:column="9">button1</name><op:operator pos:line="151" pos:column="16">.</op:operator><name pos:line="151" pos:column="17">setOnClickListener</name></name><argument_list pos:line="151" pos:column="35">(<argument><expr><op:operator pos:line="151" pos:column="36">new</op:operator> <class><super><name><name pos:line="151" pos:column="40">View</name><op:operator pos:line="151" pos:column="44">.</op:operator><name pos:line="151" pos:column="45">OnClickListener</name></name></super><argument_list pos:line="151" pos:column="60">()</argument_list> <block pos:line="151" pos:column="63">{
            <function><type><specifier pos:line="152" pos:column="13">public</specifier> <name pos:line="152" pos:column="20">void</name></type> <name pos:line="152" pos:column="25">onClick</name><parameter_list pos:line="152" pos:column="32">(<param><decl><type><name pos:line="152" pos:column="33">View</name></type> <name pos:line="152" pos:column="38">v</name></decl></param>)</parameter_list> <block pos:line="152" pos:column="41">{
                <expr_stmt><expr><name pos:line="153" pos:column="17">mDesiredPaceOrSpeed</name> <op:operator pos:line="153" pos:column="37">-=</op:operator> <name pos:line="153" pos:column="40">mMaintainInc</name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="154" pos:column="17">mDesiredPaceOrSpeed</name> <op:operator pos:line="154" pos:column="37">=</op:operator> <call><name><name pos:line="154" pos:column="39">Math</name><op:operator pos:line="154" pos:column="43">.</op:operator><name pos:line="154" pos:column="44">round</name></name><argument_list pos:line="154" pos:column="49">(<argument><expr><name pos:line="154" pos:column="50">mDesiredPaceOrSpeed</name> <op:operator pos:line="154" pos:column="70">*</op:operator> <lit:literal type="number" pos:line="154" pos:column="72">10</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="154" pos:column="76">/</op:operator> <lit:literal type="number" pos:line="154" pos:column="78">10f</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="155" pos:column="17">displayDesiredPaceOrSpeed</name><argument_list pos:line="155" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="156" pos:column="17">setDesiredPaceOrSpeed</name><argument_list pos:line="156" pos:column="38">(<argument><expr><name pos:line="156" pos:column="39">mDesiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <decl_stmt><decl><type><name pos:line="159" pos:column="9">Button</name></type> <name pos:line="159" pos:column="16">button2</name> <init pos:line="159" pos:column="24">= <expr><op:operator pos:line="159" pos:column="26">(</op:operator><name pos:line="159" pos:column="27">Button</name><op:operator pos:line="159" pos:column="33">)</op:operator> <call><name pos:line="159" pos:column="35">findViewById</name><argument_list pos:line="159" pos:column="47">(<argument><expr><name><name pos:line="159" pos:column="48">R</name><op:operator pos:line="159" pos:column="49">.</op:operator><name pos:line="159" pos:column="50">id</name><op:operator pos:line="159" pos:column="52">.</op:operator><name pos:line="159" pos:column="53">button_desired_pace_raise</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="160" pos:column="9">button2</name><op:operator pos:line="160" pos:column="16">.</op:operator><name pos:line="160" pos:column="17">setOnClickListener</name></name><argument_list pos:line="160" pos:column="35">(<argument><expr><op:operator pos:line="160" pos:column="36">new</op:operator> <class><super><name><name pos:line="160" pos:column="40">View</name><op:operator pos:line="160" pos:column="44">.</op:operator><name pos:line="160" pos:column="45">OnClickListener</name></name></super><argument_list pos:line="160" pos:column="60">()</argument_list> <block pos:line="160" pos:column="63">{
            <function><type><specifier pos:line="161" pos:column="13">public</specifier> <name pos:line="161" pos:column="20">void</name></type> <name pos:line="161" pos:column="25">onClick</name><parameter_list pos:line="161" pos:column="32">(<param><decl><type><name pos:line="161" pos:column="33">View</name></type> <name pos:line="161" pos:column="38">v</name></decl></param>)</parameter_list> <block pos:line="161" pos:column="41">{
                <expr_stmt><expr><name pos:line="162" pos:column="17">mDesiredPaceOrSpeed</name> <op:operator pos:line="162" pos:column="37">+=</op:operator> <name pos:line="162" pos:column="40">mMaintainInc</name></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="163" pos:column="17">mDesiredPaceOrSpeed</name> <op:operator pos:line="163" pos:column="37">=</op:operator> <call><name><name pos:line="163" pos:column="39">Math</name><op:operator pos:line="163" pos:column="43">.</op:operator><name pos:line="163" pos:column="44">round</name></name><argument_list pos:line="163" pos:column="49">(<argument><expr><name pos:line="163" pos:column="50">mDesiredPaceOrSpeed</name> <op:operator pos:line="163" pos:column="70">*</op:operator> <lit:literal type="number" pos:line="163" pos:column="72">10</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="163" pos:column="76">/</op:operator> <lit:literal type="number" pos:line="163" pos:column="78">10f</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="164" pos:column="17">displayDesiredPaceOrSpeed</name><argument_list pos:line="164" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="165" pos:column="17">setDesiredPaceOrSpeed</name><argument_list pos:line="165" pos:column="38">(<argument><expr><name pos:line="165" pos:column="39">mDesiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></function>
        }</block></class></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name pos:line="168" pos:column="13">mMaintain</name> <op:operator pos:line="168" pos:column="23">!=</op:operator> <name><name pos:line="168" pos:column="26">PedometerSettings</name><op:operator pos:line="168" pos:column="43">.</op:operator><name pos:line="168" pos:column="44">M_NONE</name></name></expr>)</condition><then pos:line="168" pos:column="51"> <block pos:line="168" pos:column="52">{
            <expr_stmt><expr><op:operator pos:line="169" pos:column="13">(</op:operator><op:operator pos:line="169" pos:column="14">(</op:operator><name pos:line="169" pos:column="15">TextView</name><op:operator pos:line="169" pos:column="23">)</op:operator> <call><name pos:line="169" pos:column="25">findViewById</name><argument_list pos:line="169" pos:column="37">(<argument><expr><name><name pos:line="169" pos:column="38">R</name><op:operator pos:line="169" pos:column="39">.</op:operator><name pos:line="169" pos:column="40">id</name><op:operator pos:line="169" pos:column="42">.</op:operator><name pos:line="169" pos:column="43">desired_pace_label</name></name></expr></argument>)</argument_list></call><op:operator pos:line="169" pos:column="62">)</op:operator><op:operator pos:line="169" pos:column="63">.</op:operator><call><name pos:line="169" pos:column="64">setText</name><argument_list pos:line="169" pos:column="71">(
                    <argument><expr><name pos:line="170" pos:column="21">mMaintain</name> <op:operator pos:line="170" pos:column="31">==</op:operator> <name><name pos:line="170" pos:column="34">PedometerSettings</name><op:operator pos:line="170" pos:column="51">.</op:operator><name pos:line="170" pos:column="52">M_PACE</name></name>
                    <op:operator pos:line="171" pos:column="21">?</op:operator> <name><name pos:line="171" pos:column="23">R</name><op:operator pos:line="171" pos:column="24">.</op:operator><name pos:line="171" pos:column="25">string</name><op:operator pos:line="171" pos:column="31">.</op:operator><name pos:line="171" pos:column="32">desired_pace</name></name>
                    <op:operator pos:line="172" pos:column="21">:</op:operator> <name><name pos:line="172" pos:column="23">R</name><op:operator pos:line="172" pos:column="24">.</op:operator><name pos:line="172" pos:column="25">string</name><op:operator pos:line="172" pos:column="31">.</op:operator><name pos:line="172" pos:column="32">desired_speed</name></name></expr></argument>
            )</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        
        
        <expr_stmt><expr><call><name pos:line="177" pos:column="9">displayDesiredPaceOrSpeed</name><argument_list pos:line="177" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><specifier pos:line="180" pos:column="5">private</specifier> <name pos:line="180" pos:column="13">void</name></type> <name pos:line="180" pos:column="18">displayDesiredPaceOrSpeed</name><parameter_list pos:line="180" pos:column="43">()</parameter_list> <block pos:line="180" pos:column="46">{
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><name pos:line="181" pos:column="13">mMaintain</name> <op:operator pos:line="181" pos:column="23">==</op:operator> <name><name pos:line="181" pos:column="26">PedometerSettings</name><op:operator pos:line="181" pos:column="43">.</op:operator><name pos:line="181" pos:column="44">M_PACE</name></name></expr>)</condition><then pos:line="181" pos:column="51"> <block pos:line="181" pos:column="52">{
            <expr_stmt><expr><call><name><name pos:line="182" pos:column="13">mDesiredPaceView</name><op:operator pos:line="182" pos:column="29">.</op:operator><name pos:line="182" pos:column="30">setText</name></name><argument_list pos:line="182" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="182" pos:column="38">""</lit:literal> <op:operator pos:line="182" pos:column="41">+</op:operator> <op:operator pos:line="182" pos:column="43">(</op:operator><name pos:line="182" pos:column="44">int</name><op:operator pos:line="182" pos:column="47">)</op:operator><name pos:line="182" pos:column="48">mDesiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="184" pos:column="9">else <block pos:line="184" pos:column="14">{
            <expr_stmt><expr><call><name><name pos:line="185" pos:column="13">mDesiredPaceView</name><op:operator pos:line="185" pos:column="29">.</op:operator><name pos:line="185" pos:column="30">setText</name></name><argument_list pos:line="185" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="38">""</lit:literal> <op:operator pos:line="185" pos:column="41">+</op:operator> <name pos:line="185" pos:column="43">mDesiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
    }</block></function>
    
    <function><type><annotation pos:line="189" pos:column="5">@<name pos:line="189" pos:column="6">Override</name></annotation>
    <specifier pos:line="190" pos:column="5">protected</specifier> <name pos:line="190" pos:column="15">void</name></type> <name pos:line="190" pos:column="20">onPause</name><parameter_list pos:line="190" pos:column="27">()</parameter_list> <block pos:line="190" pos:column="30">{
        <expr_stmt><expr><call><name><name pos:line="191" pos:column="9">Log</name><op:operator pos:line="191" pos:column="12">.</op:operator><name pos:line="191" pos:column="13">i</name></name><argument_list pos:line="191" pos:column="14">(<argument><expr><name pos:line="191" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="191" pos:column="20">"[ACTIVITY] onPause"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><name pos:line="192" pos:column="13">mIsRunning</name></expr>)</condition><then pos:line="192" pos:column="24"> <block pos:line="192" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="193" pos:column="13">unbindStepService</name><argument_list pos:line="193" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><name pos:line="195" pos:column="13">mQuitting</name></expr>)</condition><then pos:line="195" pos:column="23"> <block pos:line="195" pos:column="24">{
            <expr_stmt><expr><call><name><name pos:line="196" pos:column="13">mPedometerSettings</name><op:operator pos:line="196" pos:column="31">.</op:operator><name pos:line="196" pos:column="32">saveServiceRunningWithNullTimestamp</name></name><argument_list pos:line="196" pos:column="67">(<argument><expr><name pos:line="196" pos:column="68">mIsRunning</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="198" pos:column="9">else <block pos:line="198" pos:column="14">{
            <expr_stmt><expr><call><name><name pos:line="199" pos:column="13">mPedometerSettings</name><op:operator pos:line="199" pos:column="31">.</op:operator><name pos:line="199" pos:column="32">saveServiceRunningWithTimestamp</name></name><argument_list pos:line="199" pos:column="63">(<argument><expr><name pos:line="199" pos:column="64">mIsRunning</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>

        <expr_stmt><expr><call><name><name pos:line="202" pos:column="9">super</name><op:operator pos:line="202" pos:column="14">.</op:operator><name pos:line="202" pos:column="15">onPause</name></name><argument_list pos:line="202" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="203" pos:column="9">savePaceSetting</name><argument_list pos:line="203" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><annotation pos:line="206" pos:column="5">@<name pos:line="206" pos:column="6">Override</name></annotation>
    <specifier pos:line="207" pos:column="5">protected</specifier> <name pos:line="207" pos:column="15">void</name></type> <name pos:line="207" pos:column="20">onStop</name><parameter_list pos:line="207" pos:column="26">()</parameter_list> <block pos:line="207" pos:column="29">{
        <expr_stmt><expr><call><name><name pos:line="208" pos:column="9">Log</name><op:operator pos:line="208" pos:column="12">.</op:operator><name pos:line="208" pos:column="13">i</name></name><argument_list pos:line="208" pos:column="14">(<argument><expr><name pos:line="208" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="208" pos:column="20">"[ACTIVITY] onStop"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="209" pos:column="9">super</name><op:operator pos:line="209" pos:column="14">.</op:operator><name pos:line="209" pos:column="15">onStop</name></name><argument_list pos:line="209" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="212" pos:column="5">protected</specifier> <name pos:line="212" pos:column="15">void</name></type> <name pos:line="212" pos:column="20">onDestroy</name><parameter_list pos:line="212" pos:column="29">()</parameter_list> <block pos:line="212" pos:column="32">{
        <expr_stmt><expr><call><name><name pos:line="213" pos:column="9">Log</name><op:operator pos:line="213" pos:column="12">.</op:operator><name pos:line="213" pos:column="13">i</name></name><argument_list pos:line="213" pos:column="14">(<argument><expr><name pos:line="213" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="213" pos:column="20">"[ACTIVITY] onDestroy"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="214" pos:column="9">super</name><op:operator pos:line="214" pos:column="14">.</op:operator><name pos:line="214" pos:column="15">onDestroy</name></name><argument_list pos:line="214" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><specifier pos:line="217" pos:column="5">protected</specifier> <name pos:line="217" pos:column="15">void</name></type> <name pos:line="217" pos:column="20">onRestart</name><parameter_list pos:line="217" pos:column="29">()</parameter_list> <block pos:line="217" pos:column="32">{
        <expr_stmt><expr><call><name><name pos:line="218" pos:column="9">Log</name><op:operator pos:line="218" pos:column="12">.</op:operator><name pos:line="218" pos:column="13">i</name></name><argument_list pos:line="218" pos:column="14">(<argument><expr><name pos:line="218" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="218" pos:column="20">"[ACTIVITY] onRestart"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="219" pos:column="9">super</name><op:operator pos:line="219" pos:column="14">.</op:operator><name pos:line="219" pos:column="15">onDestroy</name></name><argument_list pos:line="219" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="222" pos:column="5">private</specifier> <name pos:line="222" pos:column="13">void</name></type> <name pos:line="222" pos:column="18">setDesiredPaceOrSpeed</name><parameter_list pos:line="222" pos:column="39">(<param><decl><type><name pos:line="222" pos:column="40">float</name></type> <name pos:line="222" pos:column="46">desiredPaceOrSpeed</name></decl></param>)</parameter_list> <block pos:line="222" pos:column="66">{
        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name pos:line="223" pos:column="13">mService</name> <op:operator pos:line="223" pos:column="22">!=</op:operator> <lit:literal type="null" pos:line="223" pos:column="25">null</lit:literal></expr>)</condition><then pos:line="223" pos:column="30"> <block pos:line="223" pos:column="31">{
            <if pos:line="224" pos:column="13">if <condition pos:line="224" pos:column="16">(<expr><name pos:line="224" pos:column="17">mMaintain</name> <op:operator pos:line="224" pos:column="27">==</op:operator> <name><name pos:line="224" pos:column="30">PedometerSettings</name><op:operator pos:line="224" pos:column="47">.</op:operator><name pos:line="224" pos:column="48">M_PACE</name></name></expr>)</condition><then pos:line="224" pos:column="55"> <block pos:line="224" pos:column="56">{
                <expr_stmt><expr><call><name><name pos:line="225" pos:column="17">mService</name><op:operator pos:line="225" pos:column="25">.</op:operator><name pos:line="225" pos:column="26">setDesiredPace</name></name><argument_list pos:line="225" pos:column="40">(<argument><expr><op:operator pos:line="225" pos:column="41">(</op:operator><name pos:line="225" pos:column="42">int</name><op:operator pos:line="225" pos:column="45">)</op:operator><name pos:line="225" pos:column="46">desiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="227" pos:column="13">else
            <if pos:line="228" pos:column="13">if <condition pos:line="228" pos:column="16">(<expr><name pos:line="228" pos:column="17">mMaintain</name> <op:operator pos:line="228" pos:column="27">==</op:operator> <name><name pos:line="228" pos:column="30">PedometerSettings</name><op:operator pos:line="228" pos:column="47">.</op:operator><name pos:line="228" pos:column="48">M_SPEED</name></name></expr>)</condition><then pos:line="228" pos:column="56"> <block pos:line="228" pos:column="57">{
                <expr_stmt><expr><call><name><name pos:line="229" pos:column="17">mService</name><op:operator pos:line="229" pos:column="25">.</op:operator><name pos:line="229" pos:column="26">setDesiredSpeed</name></name><argument_list pos:line="229" pos:column="41">(<argument><expr><name pos:line="229" pos:column="42">desiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if></else></if>
        }</block></then></if>
    }</block></function>
    
    <function><type><specifier pos:line="234" pos:column="5">private</specifier> <name pos:line="234" pos:column="13">void</name></type> <name pos:line="234" pos:column="18">savePaceSetting</name><parameter_list pos:line="234" pos:column="33">()</parameter_list> <block pos:line="234" pos:column="36">{
        <expr_stmt><expr><call><name><name pos:line="235" pos:column="9">mPedometerSettings</name><op:operator pos:line="235" pos:column="27">.</op:operator><name pos:line="235" pos:column="28">savePaceOrSpeedSetting</name></name><argument_list pos:line="235" pos:column="50">(<argument><expr><name pos:line="235" pos:column="51">mMaintain</name></expr></argument>, <argument><expr><name pos:line="235" pos:column="62">mDesiredPaceOrSpeed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <decl_stmt><decl><type><specifier pos:line="238" pos:column="5">private</specifier> <name pos:line="238" pos:column="13">StepService</name></type> <name pos:line="238" pos:column="25">mService</name></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><specifier pos:line="240" pos:column="5">private</specifier> <name pos:line="240" pos:column="13">ServiceConnection</name></type> <name pos:line="240" pos:column="31">mConnection</name> <init pos:line="240" pos:column="43">= <expr><op:operator pos:line="240" pos:column="45">new</op:operator> <class><super><name pos:line="240" pos:column="49">ServiceConnection</name></super><argument_list pos:line="240" pos:column="66">()</argument_list> <block pos:line="240" pos:column="69">{
        <function><type><specifier pos:line="241" pos:column="9">public</specifier> <name pos:line="241" pos:column="16">void</name></type> <name pos:line="241" pos:column="21">onServiceConnected</name><parameter_list pos:line="241" pos:column="39">(<param><decl><type><name pos:line="241" pos:column="40">ComponentName</name></type> <name pos:line="241" pos:column="54">className</name></decl></param>, <param><decl><type><name pos:line="241" pos:column="65">IBinder</name></type> <name pos:line="241" pos:column="73">service</name></decl></param>)</parameter_list> <block pos:line="241" pos:column="82">{
            <expr_stmt><expr><name pos:line="242" pos:column="13">mService</name> <op:operator pos:line="242" pos:column="22">=</op:operator> <op:operator pos:line="242" pos:column="24">(</op:operator><op:operator pos:line="242" pos:column="25">(</op:operator><name><name pos:line="242" pos:column="26">StepService</name><op:operator pos:line="242" pos:column="37">.</op:operator><name pos:line="242" pos:column="38">StepBinder</name></name><op:operator pos:line="242" pos:column="48">)</op:operator><name pos:line="242" pos:column="49">service</name><op:operator pos:line="242" pos:column="56">)</op:operator><op:operator pos:line="242" pos:column="57">.</op:operator><call><name pos:line="242" pos:column="58">getService</name><argument_list pos:line="242" pos:column="68">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="244" pos:column="13">mService</name><op:operator pos:line="244" pos:column="21">.</op:operator><name pos:line="244" pos:column="22">registerCallback</name></name><argument_list pos:line="244" pos:column="38">(<argument><expr><name pos:line="244" pos:column="39">mCallback</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="245" pos:column="13">mService</name><op:operator pos:line="245" pos:column="21">.</op:operator><name pos:line="245" pos:column="22">reloadSettings</name></name><argument_list pos:line="245" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
            
        }</block></function>

        <function><type><specifier pos:line="249" pos:column="9">public</specifier> <name pos:line="249" pos:column="16">void</name></type> <name pos:line="249" pos:column="21">onServiceDisconnected</name><parameter_list pos:line="249" pos:column="42">(<param><decl><type><name pos:line="249" pos:column="43">ComponentName</name></type> <name pos:line="249" pos:column="57">className</name></decl></param>)</parameter_list> <block pos:line="249" pos:column="68">{
            <expr_stmt><expr><name pos:line="250" pos:column="13">mService</name> <op:operator pos:line="250" pos:column="22">=</op:operator> <lit:literal type="null" pos:line="250" pos:column="24">null</lit:literal></expr>;</expr_stmt>
        }</block></function>
    }</block></class></expr></init></decl>;</decl_stmt>
    

    <function><type><specifier pos:line="255" pos:column="5">private</specifier> <name pos:line="255" pos:column="13">void</name></type> <name pos:line="255" pos:column="18">startStepService</name><parameter_list pos:line="255" pos:column="34">()</parameter_list> <block pos:line="255" pos:column="37">{
        <if pos:line="256" pos:column="9">if <condition pos:line="256" pos:column="12">(<expr><op:operator pos:line="256" pos:column="13">!</op:operator> <name pos:line="256" pos:column="15">mIsRunning</name></expr>)</condition><then pos:line="256" pos:column="26"> <block pos:line="256" pos:column="27">{
            <expr_stmt><expr><call><name><name pos:line="257" pos:column="13">Log</name><op:operator pos:line="257" pos:column="16">.</op:operator><name pos:line="257" pos:column="17">i</name></name><argument_list pos:line="257" pos:column="18">(<argument><expr><name pos:line="257" pos:column="19">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="257" pos:column="24">"[SERVICE] Start"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="258" pos:column="13">mIsRunning</name> <op:operator pos:line="258" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="258" pos:column="26">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="259" pos:column="13">startService</name><argument_list pos:line="259" pos:column="25">(<argument><expr><op:operator pos:line="259" pos:column="26">new</op:operator> <call><name pos:line="259" pos:column="30">Intent</name><argument_list pos:line="259" pos:column="36">(<argument><expr><name><name pos:line="259" pos:column="37">Pedometer</name><op:operator pos:line="259" pos:column="46">.</op:operator><name pos:line="259" pos:column="47">this</name></name></expr></argument>,
                    <argument><expr><name><name pos:line="260" pos:column="21">StepService</name><op:operator pos:line="260" pos:column="32">.</op:operator><name pos:line="260" pos:column="33">class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></function>
    
    <function><type><specifier pos:line="264" pos:column="5">private</specifier> <name pos:line="264" pos:column="13">void</name></type> <name pos:line="264" pos:column="18">bindStepService</name><parameter_list pos:line="264" pos:column="33">()</parameter_list> <block pos:line="264" pos:column="36">{
        <expr_stmt><expr><call><name><name pos:line="265" pos:column="9">Log</name><op:operator pos:line="265" pos:column="12">.</op:operator><name pos:line="265" pos:column="13">i</name></name><argument_list pos:line="265" pos:column="14">(<argument><expr><name pos:line="265" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="265" pos:column="20">"[SERVICE] Bind"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="266" pos:column="9">bindService</name><argument_list pos:line="266" pos:column="20">(<argument><expr><op:operator pos:line="266" pos:column="21">new</op:operator> <call><name pos:line="266" pos:column="25">Intent</name><argument_list pos:line="266" pos:column="31">(<argument><expr><name><name pos:line="266" pos:column="32">Pedometer</name><op:operator pos:line="266" pos:column="41">.</op:operator><name pos:line="266" pos:column="42">this</name></name></expr></argument>, 
                <argument><expr><name><name pos:line="267" pos:column="17">StepService</name><op:operator pos:line="267" pos:column="28">.</op:operator><name pos:line="267" pos:column="29">class</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="267" pos:column="37">mConnection</name></expr></argument>, <argument><expr><name><name pos:line="267" pos:column="50">Context</name><op:operator pos:line="267" pos:column="57">.</op:operator><name pos:line="267" pos:column="58">BIND_AUTO_CREATE</name></name> <op:operator pos:line="267" pos:column="75">+</op:operator> <name><name pos:line="267" pos:column="77">Context</name><op:operator pos:line="267" pos:column="84">.</op:operator><name pos:line="267" pos:column="85">BIND_DEBUG_UNBIND</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><specifier pos:line="270" pos:column="5">private</specifier> <name pos:line="270" pos:column="13">void</name></type> <name pos:line="270" pos:column="18">unbindStepService</name><parameter_list pos:line="270" pos:column="35">()</parameter_list> <block pos:line="270" pos:column="38">{
        <expr_stmt><expr><call><name><name pos:line="271" pos:column="9">Log</name><op:operator pos:line="271" pos:column="12">.</op:operator><name pos:line="271" pos:column="13">i</name></name><argument_list pos:line="271" pos:column="14">(<argument><expr><name pos:line="271" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="271" pos:column="20">"[SERVICE] Unbind"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="272" pos:column="9">unbindService</name><argument_list pos:line="272" pos:column="22">(<argument><expr><name pos:line="272" pos:column="23">mConnection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><specifier pos:line="275" pos:column="5">private</specifier> <name pos:line="275" pos:column="13">void</name></type> <name pos:line="275" pos:column="18">stopStepService</name><parameter_list pos:line="275" pos:column="33">()</parameter_list> <block pos:line="275" pos:column="36">{
        <expr_stmt><expr><call><name><name pos:line="276" pos:column="9">Log</name><op:operator pos:line="276" pos:column="12">.</op:operator><name pos:line="276" pos:column="13">i</name></name><argument_list pos:line="276" pos:column="14">(<argument><expr><name pos:line="276" pos:column="15">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="276" pos:column="20">"[SERVICE] Stop"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if pos:line="277" pos:column="9">if <condition pos:line="277" pos:column="12">(<expr><name pos:line="277" pos:column="13">mService</name> <op:operator pos:line="277" pos:column="22">!=</op:operator> <lit:literal type="null" pos:line="277" pos:column="25">null</lit:literal></expr>)</condition><then pos:line="277" pos:column="30"> <block pos:line="277" pos:column="31">{
            <expr_stmt><expr><call><name><name pos:line="278" pos:column="13">Log</name><op:operator pos:line="278" pos:column="16">.</op:operator><name pos:line="278" pos:column="17">i</name></name><argument_list pos:line="278" pos:column="18">(<argument><expr><name pos:line="278" pos:column="19">TAG</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="278" pos:column="24">"[SERVICE] stopService"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="279" pos:column="13">stopService</name><argument_list pos:line="279" pos:column="24">(<argument><expr><op:operator pos:line="279" pos:column="25">new</op:operator> <call><name pos:line="279" pos:column="29">Intent</name><argument_list pos:line="279" pos:column="35">(<argument><expr><name><name pos:line="279" pos:column="36">Pedometer</name><op:operator pos:line="279" pos:column="45">.</op:operator><name pos:line="279" pos:column="46">this</name></name></expr></argument>,
                  <argument><expr><name><name pos:line="280" pos:column="19">StepService</name><op:operator pos:line="280" pos:column="30">.</op:operator><name pos:line="280" pos:column="31">class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
        <expr_stmt><expr><name pos:line="282" pos:column="9">mIsRunning</name> <op:operator pos:line="282" pos:column="20">=</op:operator> <lit:literal type="boolean" pos:line="282" pos:column="22">false</lit:literal></expr>;</expr_stmt>
    }</block></function>
    
    <function><type><specifier pos:line="285" pos:column="5">private</specifier> <name pos:line="285" pos:column="13">void</name></type> <name pos:line="285" pos:column="18">resetValues</name><parameter_list pos:line="285" pos:column="29">(<param><decl><type><name pos:line="285" pos:column="30">boolean</name></type> <name pos:line="285" pos:column="38">updateDisplay</name></decl></param>)</parameter_list> <block pos:line="285" pos:column="53">{
        <if pos:line="286" pos:column="9">if <condition pos:line="286" pos:column="12">(<expr><name pos:line="286" pos:column="13">mService</name> <op:operator pos:line="286" pos:column="22">!=</op:operator> <lit:literal type="null" pos:line="286" pos:column="25">null</lit:literal> <op:operator pos:line="286" pos:column="30">&amp;&amp;</op:operator> <name pos:line="286" pos:column="33">mIsRunning</name></expr>)</condition><then pos:line="286" pos:column="44"> <block pos:line="286" pos:column="45">{
            <expr_stmt><expr><call><name><name pos:line="287" pos:column="13">mService</name><op:operator pos:line="287" pos:column="21">.</op:operator><name pos:line="287" pos:column="22">resetValues</name></name><argument_list pos:line="287" pos:column="33">()</argument_list></call></expr>;</expr_stmt>                    
        }</block></then>
        <else pos:line="289" pos:column="9">else <block pos:line="289" pos:column="14">{
            <expr_stmt><expr><call><name><name pos:line="290" pos:column="13">mStepValueView</name><op:operator pos:line="290" pos:column="27">.</op:operator><name pos:line="290" pos:column="28">setText</name></name><argument_list pos:line="290" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="290" pos:column="36">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="291" pos:column="13">mPaceValueView</name><op:operator pos:line="291" pos:column="27">.</op:operator><name pos:line="291" pos:column="28">setText</name></name><argument_list pos:line="291" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="291" pos:column="36">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="292" pos:column="13">mDistanceValueView</name><op:operator pos:line="292" pos:column="31">.</op:operator><name pos:line="292" pos:column="32">setText</name></name><argument_list pos:line="292" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="292" pos:column="40">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="293" pos:column="13">mSpeedValueView</name><op:operator pos:line="293" pos:column="28">.</op:operator><name pos:line="293" pos:column="29">setText</name></name><argument_list pos:line="293" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="293" pos:column="37">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="294" pos:column="13">mCaloriesValueView</name><op:operator pos:line="294" pos:column="31">.</op:operator><name pos:line="294" pos:column="32">setText</name></name><argument_list pos:line="294" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="294" pos:column="40">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="295" pos:column="13">SharedPreferences</name></type> <name pos:line="295" pos:column="31">state</name> <init pos:line="295" pos:column="37">= <expr><call><name pos:line="295" pos:column="39">getSharedPreferences</name><argument_list pos:line="295" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="295" pos:column="60">"state"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="295" pos:column="69">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="296" pos:column="13">SharedPreferences</name><op:operator pos:line="296" pos:column="30">.</op:operator><name pos:line="296" pos:column="31">Editor</name></name></type> <name pos:line="296" pos:column="38">stateEditor</name> <init pos:line="296" pos:column="50">= <expr><call><name><name pos:line="296" pos:column="52">state</name><op:operator pos:line="296" pos:column="57">.</op:operator><name pos:line="296" pos:column="58">edit</name></name><argument_list pos:line="296" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="297" pos:column="13">if <condition pos:line="297" pos:column="16">(<expr><name pos:line="297" pos:column="17">updateDisplay</name></expr>)</condition><then pos:line="297" pos:column="31"> <block pos:line="297" pos:column="32">{
                <expr_stmt><expr><call><name><name pos:line="298" pos:column="17">stateEditor</name><op:operator pos:line="298" pos:column="28">.</op:operator><name pos:line="298" pos:column="29">putInt</name></name><argument_list pos:line="298" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="298" pos:column="36">"steps"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="298" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="299" pos:column="17">stateEditor</name><op:operator pos:line="299" pos:column="28">.</op:operator><name pos:line="299" pos:column="29">putInt</name></name><argument_list pos:line="299" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="299" pos:column="36">"pace"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="299" pos:column="44">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="300" pos:column="17">stateEditor</name><op:operator pos:line="300" pos:column="28">.</op:operator><name pos:line="300" pos:column="29">putFloat</name></name><argument_list pos:line="300" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="300" pos:column="38">"distance"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="300" pos:column="50">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="301" pos:column="17">stateEditor</name><op:operator pos:line="301" pos:column="28">.</op:operator><name pos:line="301" pos:column="29">putFloat</name></name><argument_list pos:line="301" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="301" pos:column="38">"speed"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="301" pos:column="47">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="302" pos:column="17">stateEditor</name><op:operator pos:line="302" pos:column="28">.</op:operator><name pos:line="302" pos:column="29">putFloat</name></name><argument_list pos:line="302" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="302" pos:column="38">"calories"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="302" pos:column="50">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="303" pos:column="17">stateEditor</name><op:operator pos:line="303" pos:column="28">.</op:operator><name pos:line="303" pos:column="29">commit</name></name><argument_list pos:line="303" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
        }</block></else></if>
    }</block></function>

    <decl_stmt><decl><type><specifier pos:line="308" pos:column="5">private</specifier> <specifier pos:line="308" pos:column="13">static</specifier> <specifier pos:line="308" pos:column="20">final</specifier> <name pos:line="308" pos:column="26">int</name></type> <name pos:line="308" pos:column="30">MENU_SETTINGS</name> <init pos:line="308" pos:column="44">= <expr><lit:literal type="number" pos:line="308" pos:column="46">8</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="309" pos:column="5">private</specifier> <specifier pos:line="309" pos:column="13">static</specifier> <specifier pos:line="309" pos:column="20">final</specifier> <name pos:line="309" pos:column="26">int</name></type> <name pos:line="309" pos:column="30">MENU_QUIT</name>     <init pos:line="309" pos:column="44">= <expr><lit:literal type="number" pos:line="309" pos:column="46">9</lit:literal></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="311" pos:column="5">private</specifier> <specifier pos:line="311" pos:column="13">static</specifier> <specifier pos:line="311" pos:column="20">final</specifier> <name pos:line="311" pos:column="26">int</name></type> <name pos:line="311" pos:column="30">MENU_PAUSE</name> <init pos:line="311" pos:column="41">= <expr><lit:literal type="number" pos:line="311" pos:column="43">1</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="312" pos:column="5">private</specifier> <specifier pos:line="312" pos:column="13">static</specifier> <specifier pos:line="312" pos:column="20">final</specifier> <name pos:line="312" pos:column="26">int</name></type> <name pos:line="312" pos:column="30">MENU_RESUME</name> <init pos:line="312" pos:column="42">= <expr><lit:literal type="number" pos:line="312" pos:column="44">2</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="313" pos:column="5">private</specifier> <specifier pos:line="313" pos:column="13">static</specifier> <specifier pos:line="313" pos:column="20">final</specifier> <name pos:line="313" pos:column="26">int</name></type> <name pos:line="313" pos:column="30">MENU_RESET</name> <init pos:line="313" pos:column="41">= <expr><lit:literal type="number" pos:line="313" pos:column="43">3</lit:literal></expr></init></decl>;</decl_stmt>
    
    <comment type="block" pos:line="315" pos:column="5">/* Creates the menu items */</comment>
    <function><type><specifier pos:line="316" pos:column="5">public</specifier> <name pos:line="316" pos:column="12">boolean</name></type> <name pos:line="316" pos:column="20">onPrepareOptionsMenu</name><parameter_list pos:line="316" pos:column="40">(<param><decl><type><name pos:line="316" pos:column="41">Menu</name></type> <name pos:line="316" pos:column="46">menu</name></decl></param>)</parameter_list> <block pos:line="316" pos:column="52">{
        <expr_stmt><expr><call><name><name pos:line="317" pos:column="9">menu</name><op:operator pos:line="317" pos:column="13">.</op:operator><name pos:line="317" pos:column="14">clear</name></name><argument_list pos:line="317" pos:column="19">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="318" pos:column="9">if <condition pos:line="318" pos:column="12">(<expr><name pos:line="318" pos:column="13">mIsRunning</name></expr>)</condition><then pos:line="318" pos:column="24"> <block pos:line="318" pos:column="25">{
            <expr_stmt><expr><call><name><name pos:line="319" pos:column="13">menu</name><op:operator pos:line="319" pos:column="17">.</op:operator><name pos:line="319" pos:column="18">add</name></name><argument_list pos:line="319" pos:column="21">(<argument><expr><lit:literal type="number" pos:line="319" pos:column="22">0</lit:literal></expr></argument>, <argument><expr><name pos:line="319" pos:column="25">MENU_PAUSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="319" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="319" pos:column="40">R</name><op:operator pos:line="319" pos:column="41">.</op:operator><name pos:line="319" pos:column="42">string</name><op:operator pos:line="319" pos:column="48">.</op:operator><name pos:line="319" pos:column="49">pause</name></name></expr></argument>)</argument_list></call>
            <op:operator pos:line="320" pos:column="13">.</op:operator><call><name pos:line="320" pos:column="14">setIcon</name><argument_list pos:line="320" pos:column="21">(<argument><expr><name><name pos:line="320" pos:column="22">android</name><op:operator pos:line="320" pos:column="29">.</op:operator><name pos:line="320" pos:column="30">R</name><op:operator pos:line="320" pos:column="31">.</op:operator><name pos:line="320" pos:column="32">drawable</name><op:operator pos:line="320" pos:column="40">.</op:operator><name pos:line="320" pos:column="41">ic_media_pause</name></name></expr></argument>)</argument_list></call>
            <op:operator pos:line="321" pos:column="13">.</op:operator><call><name pos:line="321" pos:column="14">setShortcut</name><argument_list pos:line="321" pos:column="25">(<argument><expr><lit:literal type="char" pos:line="321" pos:column="26">'1'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="321" pos:column="31">'p'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
        <else pos:line="323" pos:column="9">else <block pos:line="323" pos:column="14">{
            <expr_stmt><expr><call><name><name pos:line="324" pos:column="13">menu</name><op:operator pos:line="324" pos:column="17">.</op:operator><name pos:line="324" pos:column="18">add</name></name><argument_list pos:line="324" pos:column="21">(<argument><expr><lit:literal type="number" pos:line="324" pos:column="22">0</lit:literal></expr></argument>, <argument><expr><name pos:line="324" pos:column="25">MENU_RESUME</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="324" pos:column="38">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="324" pos:column="41">R</name><op:operator pos:line="324" pos:column="42">.</op:operator><name pos:line="324" pos:column="43">string</name><op:operator pos:line="324" pos:column="49">.</op:operator><name pos:line="324" pos:column="50">resume</name></name></expr></argument>)</argument_list></call>
            <op:operator pos:line="325" pos:column="13">.</op:operator><call><name pos:line="325" pos:column="14">setIcon</name><argument_list pos:line="325" pos:column="21">(<argument><expr><name><name pos:line="325" pos:column="22">android</name><op:operator pos:line="325" pos:column="29">.</op:operator><name pos:line="325" pos:column="30">R</name><op:operator pos:line="325" pos:column="31">.</op:operator><name pos:line="325" pos:column="32">drawable</name><op:operator pos:line="325" pos:column="40">.</op:operator><name pos:line="325" pos:column="41">ic_media_play</name></name></expr></argument>)</argument_list></call>
            <op:operator pos:line="326" pos:column="13">.</op:operator><call><name pos:line="326" pos:column="14">setShortcut</name><argument_list pos:line="326" pos:column="25">(<argument><expr><lit:literal type="char" pos:line="326" pos:column="26">'1'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="326" pos:column="31">'p'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></else></if>
        <expr_stmt><expr><call><name><name pos:line="328" pos:column="9">menu</name><op:operator pos:line="328" pos:column="13">.</op:operator><name pos:line="328" pos:column="14">add</name></name><argument_list pos:line="328" pos:column="17">(<argument><expr><lit:literal type="number" pos:line="328" pos:column="18">0</lit:literal></expr></argument>, <argument><expr><name pos:line="328" pos:column="21">MENU_RESET</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="328" pos:column="33">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="328" pos:column="36">R</name><op:operator pos:line="328" pos:column="37">.</op:operator><name pos:line="328" pos:column="38">string</name><op:operator pos:line="328" pos:column="44">.</op:operator><name pos:line="328" pos:column="45">reset</name></name></expr></argument>)</argument_list></call>
        <op:operator pos:line="329" pos:column="9">.</op:operator><call><name pos:line="329" pos:column="10">setIcon</name><argument_list pos:line="329" pos:column="17">(<argument><expr><name><name pos:line="329" pos:column="18">android</name><op:operator pos:line="329" pos:column="25">.</op:operator><name pos:line="329" pos:column="26">R</name><op:operator pos:line="329" pos:column="27">.</op:operator><name pos:line="329" pos:column="28">drawable</name><op:operator pos:line="329" pos:column="36">.</op:operator><name pos:line="329" pos:column="37">ic_menu_close_clear_cancel</name></name></expr></argument>)</argument_list></call>
        <op:operator pos:line="330" pos:column="9">.</op:operator><call><name pos:line="330" pos:column="10">setShortcut</name><argument_list pos:line="330" pos:column="21">(<argument><expr><lit:literal type="char" pos:line="330" pos:column="22">'2'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="330" pos:column="27">'r'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="331" pos:column="9">menu</name><op:operator pos:line="331" pos:column="13">.</op:operator><name pos:line="331" pos:column="14">add</name></name><argument_list pos:line="331" pos:column="17">(<argument><expr><lit:literal type="number" pos:line="331" pos:column="18">0</lit:literal></expr></argument>, <argument><expr><name pos:line="331" pos:column="21">MENU_SETTINGS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="331" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="331" pos:column="39">R</name><op:operator pos:line="331" pos:column="40">.</op:operator><name pos:line="331" pos:column="41">string</name><op:operator pos:line="331" pos:column="47">.</op:operator><name pos:line="331" pos:column="48">settings</name></name></expr></argument>)</argument_list></call>
        <op:operator pos:line="332" pos:column="9">.</op:operator><call><name pos:line="332" pos:column="10">setIcon</name><argument_list pos:line="332" pos:column="17">(<argument><expr><name><name pos:line="332" pos:column="18">android</name><op:operator pos:line="332" pos:column="25">.</op:operator><name pos:line="332" pos:column="26">R</name><op:operator pos:line="332" pos:column="27">.</op:operator><name pos:line="332" pos:column="28">drawable</name><op:operator pos:line="332" pos:column="36">.</op:operator><name pos:line="332" pos:column="37">ic_menu_preferences</name></name></expr></argument>)</argument_list></call>
        <op:operator pos:line="333" pos:column="9">.</op:operator><call><name pos:line="333" pos:column="10">setShortcut</name><argument_list pos:line="333" pos:column="21">(<argument><expr><lit:literal type="char" pos:line="333" pos:column="22">'8'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="333" pos:column="27">'s'</lit:literal></expr></argument>)</argument_list></call>
        <op:operator pos:line="334" pos:column="9">.</op:operator><call><name pos:line="334" pos:column="10">setIntent</name><argument_list pos:line="334" pos:column="19">(<argument><expr><op:operator pos:line="334" pos:column="20">new</op:operator> <call><name pos:line="334" pos:column="24">Intent</name><argument_list pos:line="334" pos:column="30">(<argument><expr><name pos:line="334" pos:column="31">this</name></expr></argument>, <argument><expr><name><name pos:line="334" pos:column="37">Settings</name><op:operator pos:line="334" pos:column="45">.</op:operator><name pos:line="334" pos:column="46">class</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="335" pos:column="9">menu</name><op:operator pos:line="335" pos:column="13">.</op:operator><name pos:line="335" pos:column="14">add</name></name><argument_list pos:line="335" pos:column="17">(<argument><expr><lit:literal type="number" pos:line="335" pos:column="18">0</lit:literal></expr></argument>, <argument><expr><name pos:line="335" pos:column="21">MENU_QUIT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="335" pos:column="32">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="335" pos:column="35">R</name><op:operator pos:line="335" pos:column="36">.</op:operator><name pos:line="335" pos:column="37">string</name><op:operator pos:line="335" pos:column="43">.</op:operator><name pos:line="335" pos:column="44">quit</name></name></expr></argument>)</argument_list></call>
        <op:operator pos:line="336" pos:column="9">.</op:operator><call><name pos:line="336" pos:column="10">setIcon</name><argument_list pos:line="336" pos:column="17">(<argument><expr><name><name pos:line="336" pos:column="18">android</name><op:operator pos:line="336" pos:column="25">.</op:operator><name pos:line="336" pos:column="26">R</name><op:operator pos:line="336" pos:column="27">.</op:operator><name pos:line="336" pos:column="28">drawable</name><op:operator pos:line="336" pos:column="36">.</op:operator><name pos:line="336" pos:column="37">ic_lock_power_off</name></name></expr></argument>)</argument_list></call>
        <op:operator pos:line="337" pos:column="9">.</op:operator><call><name pos:line="337" pos:column="10">setShortcut</name><argument_list pos:line="337" pos:column="21">(<argument><expr><lit:literal type="char" pos:line="337" pos:column="22">'9'</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="337" pos:column="27">'q'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:line="338" pos:column="9">return <expr><lit:literal type="boolean" pos:line="338" pos:column="16">true</lit:literal></expr>;</return>
    }</block></function>

    <comment type="block" pos:line="341" pos:column="5">/* Handles item selections */</comment>
    <function><type><specifier pos:line="342" pos:column="5">public</specifier> <name pos:line="342" pos:column="12">boolean</name></type> <name pos:line="342" pos:column="20">onOptionsItemSelected</name><parameter_list pos:line="342" pos:column="41">(<param><decl><type><name pos:line="342" pos:column="42">MenuItem</name></type> <name pos:line="342" pos:column="51">item</name></decl></param>)</parameter_list> <block pos:line="342" pos:column="57">{
        <switch pos:line="343" pos:column="9">switch <condition pos:line="343" pos:column="16">(<expr><call><name><name pos:line="343" pos:column="17">item</name><op:operator pos:line="343" pos:column="21">.</op:operator><name pos:line="343" pos:column="22">getItemId</name></name><argument_list pos:line="343" pos:column="31">()</argument_list></call></expr>)</condition> <block pos:line="343" pos:column="35">{
            <case pos:line="344" pos:column="13">case <expr><name pos:line="344" pos:column="18">MENU_PAUSE</name></expr>:
                <expr_stmt><expr><call><name pos:line="345" pos:column="17">unbindStepService</name><argument_list pos:line="345" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="346" pos:column="17">stopStepService</name><argument_list pos:line="346" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="347" pos:column="17">return <expr><lit:literal type="boolean" pos:line="347" pos:column="24">true</lit:literal></expr>;</return>
            </case><case pos:line="348" pos:column="13">case <expr><name pos:line="348" pos:column="18">MENU_RESUME</name></expr>:
                <expr_stmt><expr><call><name pos:line="349" pos:column="17">startStepService</name><argument_list pos:line="349" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="350" pos:column="17">bindStepService</name><argument_list pos:line="350" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="351" pos:column="17">return <expr><lit:literal type="boolean" pos:line="351" pos:column="24">true</lit:literal></expr>;</return>
            </case><case pos:line="352" pos:column="13">case <expr><name pos:line="352" pos:column="18">MENU_RESET</name></expr>:
                <expr_stmt><expr><call><name pos:line="353" pos:column="17">resetValues</name><argument_list pos:line="353" pos:column="28">(<argument><expr><lit:literal type="boolean" pos:line="353" pos:column="29">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <return pos:line="354" pos:column="17">return <expr><lit:literal type="boolean" pos:line="354" pos:column="24">true</lit:literal></expr>;</return>
            </case><case pos:line="355" pos:column="13">case <expr><name pos:line="355" pos:column="18">MENU_QUIT</name></expr>:
                <expr_stmt><expr><call><name pos:line="356" pos:column="17">resetValues</name><argument_list pos:line="356" pos:column="28">(<argument><expr><lit:literal type="boolean" pos:line="356" pos:column="29">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="357" pos:column="17">unbindStepService</name><argument_list pos:line="357" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="358" pos:column="17">stopStepService</name><argument_list pos:line="358" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><name pos:line="359" pos:column="17">mQuitting</name> <op:operator pos:line="359" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="359" pos:column="29">true</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="360" pos:column="17">finish</name><argument_list pos:line="360" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
                <return pos:line="361" pos:column="17">return <expr><lit:literal type="boolean" pos:line="361" pos:column="24">true</lit:literal></expr>;</return>
        </case>}</block></switch>
        <return pos:line="363" pos:column="9">return <expr><lit:literal type="boolean" pos:line="363" pos:column="16">false</lit:literal></expr>;</return>
    }</block></function>
 
    <comment type="line" pos:line="366" pos:column="5">// TODO: unite all into 1 type of message</comment>
    <decl_stmt><decl><type><specifier pos:line="367" pos:column="5">private</specifier> <name><name pos:line="367" pos:column="13">StepService</name><op:operator pos:line="367" pos:column="24">.</op:operator><name pos:line="367" pos:column="25">ICallback</name></name></type> <name pos:line="367" pos:column="35">mCallback</name> <init pos:line="367" pos:column="45">= <expr><op:operator pos:line="367" pos:column="47">new</op:operator> <class><super><name><name pos:line="367" pos:column="51">StepService</name><op:operator pos:line="367" pos:column="62">.</op:operator><name pos:line="367" pos:column="63">ICallback</name></name></super><argument_list pos:line="367" pos:column="72">()</argument_list> <block pos:line="367" pos:column="75">{
        <function><type><specifier pos:line="368" pos:column="9">public</specifier> <name pos:line="368" pos:column="16">void</name></type> <name pos:line="368" pos:column="21">stepsChanged</name><parameter_list pos:line="368" pos:column="33">(<param><decl><type><name pos:line="368" pos:column="34">int</name></type> <name pos:line="368" pos:column="38">value</name></decl></param>)</parameter_list> <block pos:line="368" pos:column="45">{
            <expr_stmt><expr><call><name><name pos:line="369" pos:column="13">mHandler</name><op:operator pos:line="369" pos:column="21">.</op:operator><name pos:line="369" pos:column="22">sendMessage</name></name><argument_list pos:line="369" pos:column="33">(<argument><expr><call><name><name pos:line="369" pos:column="34">mHandler</name><op:operator pos:line="369" pos:column="42">.</op:operator><name pos:line="369" pos:column="43">obtainMessage</name></name><argument_list pos:line="369" pos:column="56">(<argument><expr><name pos:line="369" pos:column="57">STEPS_MSG</name></expr></argument>, <argument><expr><name pos:line="369" pos:column="68">value</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="369" pos:column="75">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="371" pos:column="9">public</specifier> <name pos:line="371" pos:column="16">void</name></type> <name pos:line="371" pos:column="21">paceChanged</name><parameter_list pos:line="371" pos:column="32">(<param><decl><type><name pos:line="371" pos:column="33">int</name></type> <name pos:line="371" pos:column="37">value</name></decl></param>)</parameter_list> <block pos:line="371" pos:column="44">{
            <expr_stmt><expr><call><name><name pos:line="372" pos:column="13">mHandler</name><op:operator pos:line="372" pos:column="21">.</op:operator><name pos:line="372" pos:column="22">sendMessage</name></name><argument_list pos:line="372" pos:column="33">(<argument><expr><call><name><name pos:line="372" pos:column="34">mHandler</name><op:operator pos:line="372" pos:column="42">.</op:operator><name pos:line="372" pos:column="43">obtainMessage</name></name><argument_list pos:line="372" pos:column="56">(<argument><expr><name pos:line="372" pos:column="57">PACE_MSG</name></expr></argument>, <argument><expr><name pos:line="372" pos:column="67">value</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="372" pos:column="74">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="374" pos:column="9">public</specifier> <name pos:line="374" pos:column="16">void</name></type> <name pos:line="374" pos:column="21">distanceChanged</name><parameter_list pos:line="374" pos:column="36">(<param><decl><type><name pos:line="374" pos:column="37">float</name></type> <name pos:line="374" pos:column="43">value</name></decl></param>)</parameter_list> <block pos:line="374" pos:column="50">{
            <expr_stmt><expr><call><name><name pos:line="375" pos:column="13">mHandler</name><op:operator pos:line="375" pos:column="21">.</op:operator><name pos:line="375" pos:column="22">sendMessage</name></name><argument_list pos:line="375" pos:column="33">(<argument><expr><call><name><name pos:line="375" pos:column="34">mHandler</name><op:operator pos:line="375" pos:column="42">.</op:operator><name pos:line="375" pos:column="43">obtainMessage</name></name><argument_list pos:line="375" pos:column="56">(<argument><expr><name pos:line="375" pos:column="57">DISTANCE_MSG</name></expr></argument>, <argument><expr><call pos:line="375" pos:column="71">(<name pos:line="375" pos:column="72">int</name>)<argument_list pos:line="375" pos:column="76">(<argument><expr><name pos:line="375" pos:column="77">value</name><op:operator pos:line="375" pos:column="82">*</op:operator><lit:literal type="number" pos:line="375" pos:column="83">1000</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="375" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="377" pos:column="9">public</specifier> <name pos:line="377" pos:column="16">void</name></type> <name pos:line="377" pos:column="21">speedChanged</name><parameter_list pos:line="377" pos:column="33">(<param><decl><type><name pos:line="377" pos:column="34">float</name></type> <name pos:line="377" pos:column="40">value</name></decl></param>)</parameter_list> <block pos:line="377" pos:column="47">{
            <expr_stmt><expr><call><name><name pos:line="378" pos:column="13">mHandler</name><op:operator pos:line="378" pos:column="21">.</op:operator><name pos:line="378" pos:column="22">sendMessage</name></name><argument_list pos:line="378" pos:column="33">(<argument><expr><call><name><name pos:line="378" pos:column="34">mHandler</name><op:operator pos:line="378" pos:column="42">.</op:operator><name pos:line="378" pos:column="43">obtainMessage</name></name><argument_list pos:line="378" pos:column="56">(<argument><expr><name pos:line="378" pos:column="57">SPEED_MSG</name></expr></argument>, <argument><expr><call pos:line="378" pos:column="68">(<name pos:line="378" pos:column="69">int</name>)<argument_list pos:line="378" pos:column="73">(<argument><expr><name pos:line="378" pos:column="74">value</name><op:operator pos:line="378" pos:column="79">*</op:operator><lit:literal type="number" pos:line="378" pos:column="80">1000</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="378" pos:column="87">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
        <function><type><specifier pos:line="380" pos:column="9">public</specifier> <name pos:line="380" pos:column="16">void</name></type> <name pos:line="380" pos:column="21">caloriesChanged</name><parameter_list pos:line="380" pos:column="36">(<param><decl><type><name pos:line="380" pos:column="37">float</name></type> <name pos:line="380" pos:column="43">value</name></decl></param>)</parameter_list> <block pos:line="380" pos:column="50">{
            <expr_stmt><expr><call><name><name pos:line="381" pos:column="13">mHandler</name><op:operator pos:line="381" pos:column="21">.</op:operator><name pos:line="381" pos:column="22">sendMessage</name></name><argument_list pos:line="381" pos:column="33">(<argument><expr><call><name><name pos:line="381" pos:column="34">mHandler</name><op:operator pos:line="381" pos:column="42">.</op:operator><name pos:line="381" pos:column="43">obtainMessage</name></name><argument_list pos:line="381" pos:column="56">(<argument><expr><name pos:line="381" pos:column="57">CALORIES_MSG</name></expr></argument>, <argument><expr><call pos:line="381" pos:column="71">(<name pos:line="381" pos:column="72">int</name>)<argument_list pos:line="381" pos:column="76">(<argument><expr><name pos:line="381" pos:column="77">value</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="381" pos:column="85">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></function>
    }</block></class></expr></init></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><specifier pos:line="385" pos:column="5">private</specifier> <specifier pos:line="385" pos:column="13">static</specifier> <specifier pos:line="385" pos:column="20">final</specifier> <name pos:line="385" pos:column="26">int</name></type> <name pos:line="385" pos:column="30">STEPS_MSG</name> <init pos:line="385" pos:column="40">= <expr><lit:literal type="number" pos:line="385" pos:column="42">1</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="386" pos:column="5">private</specifier> <specifier pos:line="386" pos:column="13">static</specifier> <specifier pos:line="386" pos:column="20">final</specifier> <name pos:line="386" pos:column="26">int</name></type> <name pos:line="386" pos:column="30">PACE_MSG</name> <init pos:line="386" pos:column="39">= <expr><lit:literal type="number" pos:line="386" pos:column="41">2</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="387" pos:column="5">private</specifier> <specifier pos:line="387" pos:column="13">static</specifier> <specifier pos:line="387" pos:column="20">final</specifier> <name pos:line="387" pos:column="26">int</name></type> <name pos:line="387" pos:column="30">DISTANCE_MSG</name> <init pos:line="387" pos:column="43">= <expr><lit:literal type="number" pos:line="387" pos:column="45">3</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="388" pos:column="5">private</specifier> <specifier pos:line="388" pos:column="13">static</specifier> <specifier pos:line="388" pos:column="20">final</specifier> <name pos:line="388" pos:column="26">int</name></type> <name pos:line="388" pos:column="30">SPEED_MSG</name> <init pos:line="388" pos:column="40">= <expr><lit:literal type="number" pos:line="388" pos:column="42">4</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="389" pos:column="5">private</specifier> <specifier pos:line="389" pos:column="13">static</specifier> <specifier pos:line="389" pos:column="20">final</specifier> <name pos:line="389" pos:column="26">int</name></type> <name pos:line="389" pos:column="30">CALORIES_MSG</name> <init pos:line="389" pos:column="43">= <expr><lit:literal type="number" pos:line="389" pos:column="45">5</lit:literal></expr></init></decl>;</decl_stmt>
    
    <decl_stmt><decl><type><specifier pos:line="391" pos:column="5">private</specifier> <name pos:line="391" pos:column="13">Handler</name></type> <name pos:line="391" pos:column="21">mHandler</name> <init pos:line="391" pos:column="30">= <expr><op:operator pos:line="391" pos:column="32">new</op:operator> <class><super><name pos:line="391" pos:column="36">Handler</name></super><argument_list pos:line="391" pos:column="43">()</argument_list> <block pos:line="391" pos:column="46">{
        <function><type><annotation pos:line="392" pos:column="9">@<name pos:line="392" pos:column="10">Override</name></annotation> <specifier pos:line="392" pos:column="19">public</specifier> <name pos:line="392" pos:column="26">void</name></type> <name pos:line="392" pos:column="31">handleMessage</name><parameter_list pos:line="392" pos:column="44">(<param><decl><type><name pos:line="392" pos:column="45">Message</name></type> <name pos:line="392" pos:column="53">msg</name></decl></param>)</parameter_list> <block pos:line="392" pos:column="58">{
            <switch pos:line="393" pos:column="13">switch <condition pos:line="393" pos:column="20">(<expr><name><name pos:line="393" pos:column="21">msg</name><op:operator pos:line="393" pos:column="24">.</op:operator><name pos:line="393" pos:column="25">what</name></name></expr>)</condition> <block pos:line="393" pos:column="31">{
                <case pos:line="394" pos:column="17">case <expr><name pos:line="394" pos:column="22">STEPS_MSG</name></expr>:
                    <expr_stmt><expr><name pos:line="395" pos:column="21">mStepValue</name> <op:operator pos:line="395" pos:column="32">=</op:operator> <op:operator pos:line="395" pos:column="34">(</op:operator><name pos:line="395" pos:column="35">int</name><op:operator pos:line="395" pos:column="38">)</op:operator><name><name pos:line="395" pos:column="39">msg</name><op:operator pos:line="395" pos:column="42">.</op:operator><name pos:line="395" pos:column="43">arg1</name></name></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="396" pos:column="21">mStepValueView</name><op:operator pos:line="396" pos:column="35">.</op:operator><name pos:line="396" pos:column="36">setText</name></name><argument_list pos:line="396" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="396" pos:column="44">""</lit:literal> <op:operator pos:line="396" pos:column="47">+</op:operator> <name pos:line="396" pos:column="49">mStepValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <break pos:line="397" pos:column="21">break;</break>
                </case><case pos:line="398" pos:column="17">case <expr><name pos:line="398" pos:column="22">PACE_MSG</name></expr>:
                    <expr_stmt><expr><name pos:line="399" pos:column="21">mPaceValue</name> <op:operator pos:line="399" pos:column="32">=</op:operator> <name><name pos:line="399" pos:column="34">msg</name><op:operator pos:line="399" pos:column="37">.</op:operator><name pos:line="399" pos:column="38">arg1</name></name></expr>;</expr_stmt>
                    <if pos:line="400" pos:column="21">if <condition pos:line="400" pos:column="24">(<expr><name pos:line="400" pos:column="25">mPaceValue</name> <op:operator pos:line="400" pos:column="36">&lt;=</op:operator> <lit:literal type="number" pos:line="400" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="400" pos:column="41"> <block pos:line="400" pos:column="42">{ 
                        <expr_stmt><expr><call><name><name pos:line="401" pos:column="25">mPaceValueView</name><op:operator pos:line="401" pos:column="39">.</op:operator><name pos:line="401" pos:column="40">setText</name></name><argument_list pos:line="401" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="401" pos:column="48">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="403" pos:column="21">else <block pos:line="403" pos:column="26">{
                        <expr_stmt><expr><call><name><name pos:line="404" pos:column="25">mPaceValueView</name><op:operator pos:line="404" pos:column="39">.</op:operator><name pos:line="404" pos:column="40">setText</name></name><argument_list pos:line="404" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="404" pos:column="48">""</lit:literal> <op:operator pos:line="404" pos:column="51">+</op:operator> <op:operator pos:line="404" pos:column="53">(</op:operator><name pos:line="404" pos:column="54">int</name><op:operator pos:line="404" pos:column="57">)</op:operator><name pos:line="404" pos:column="58">mPaceValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>
                    <break pos:line="406" pos:column="21">break;</break>
                </case><case pos:line="407" pos:column="17">case <expr><name pos:line="407" pos:column="22">DISTANCE_MSG</name></expr>:
                    <expr_stmt><expr><name pos:line="408" pos:column="21">mDistanceValue</name> <op:operator pos:line="408" pos:column="36">=</op:operator> <op:operator pos:line="408" pos:column="38">(</op:operator><op:operator pos:line="408" pos:column="39">(</op:operator><name pos:line="408" pos:column="40">int</name><op:operator pos:line="408" pos:column="43">)</op:operator><name><name pos:line="408" pos:column="44">msg</name><op:operator pos:line="408" pos:column="47">.</op:operator><name pos:line="408" pos:column="48">arg1</name></name><op:operator pos:line="408" pos:column="52">)</op:operator><op:operator pos:line="408" pos:column="53">/</op:operator><lit:literal type="number" pos:line="408" pos:column="54">1000f</lit:literal></expr>;</expr_stmt>
                    <if pos:line="409" pos:column="21">if <condition pos:line="409" pos:column="24">(<expr><name pos:line="409" pos:column="25">mDistanceValue</name> <op:operator pos:line="409" pos:column="40">&lt;=</op:operator> <lit:literal type="number" pos:line="409" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="409" pos:column="45"> <block pos:line="409" pos:column="46">{ 
                        <expr_stmt><expr><call><name><name pos:line="410" pos:column="25">mDistanceValueView</name><op:operator pos:line="410" pos:column="43">.</op:operator><name pos:line="410" pos:column="44">setText</name></name><argument_list pos:line="410" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="410" pos:column="52">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="412" pos:column="21">else <block pos:line="412" pos:column="26">{
                        <expr_stmt><expr><call><name><name pos:line="413" pos:column="25">mDistanceValueView</name><op:operator pos:line="413" pos:column="43">.</op:operator><name pos:line="413" pos:column="44">setText</name></name><argument_list pos:line="413" pos:column="51">(
                                <argument><expr><op:operator pos:line="414" pos:column="33">(</op:operator><lit:literal type="string" pos:line="414" pos:column="34">""</lit:literal> <op:operator pos:line="414" pos:column="37">+</op:operator> <op:operator pos:line="414" pos:column="39">(</op:operator><name pos:line="414" pos:column="40">mDistanceValue</name> <op:operator pos:line="414" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="414" pos:column="57">0.000001f</lit:literal><op:operator pos:line="414" pos:column="66">)</op:operator><op:operator pos:line="414" pos:column="67">)</op:operator><op:operator pos:line="414" pos:column="68">.</op:operator><call><name pos:line="414" pos:column="69">substring</name><argument_list pos:line="414" pos:column="78">(<argument><expr><lit:literal type="number" pos:line="414" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="414" pos:column="82">5</lit:literal></expr></argument>)</argument_list></call></expr></argument>
                        )</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>
                    <break pos:line="417" pos:column="21">break;</break>
                </case><case pos:line="418" pos:column="17">case <expr><name pos:line="418" pos:column="22">SPEED_MSG</name></expr>:
                    <expr_stmt><expr><name pos:line="419" pos:column="21">mSpeedValue</name> <op:operator pos:line="419" pos:column="33">=</op:operator> <op:operator pos:line="419" pos:column="35">(</op:operator><op:operator pos:line="419" pos:column="36">(</op:operator><name pos:line="419" pos:column="37">int</name><op:operator pos:line="419" pos:column="40">)</op:operator><name><name pos:line="419" pos:column="41">msg</name><op:operator pos:line="419" pos:column="44">.</op:operator><name pos:line="419" pos:column="45">arg1</name></name><op:operator pos:line="419" pos:column="49">)</op:operator><op:operator pos:line="419" pos:column="50">/</op:operator><lit:literal type="number" pos:line="419" pos:column="51">1000f</lit:literal></expr>;</expr_stmt>
                    <if pos:line="420" pos:column="21">if <condition pos:line="420" pos:column="24">(<expr><name pos:line="420" pos:column="25">mSpeedValue</name> <op:operator pos:line="420" pos:column="37">&lt;=</op:operator> <lit:literal type="number" pos:line="420" pos:column="40">0</lit:literal></expr>)</condition><then pos:line="420" pos:column="42"> <block pos:line="420" pos:column="43">{ 
                        <expr_stmt><expr><call><name><name pos:line="421" pos:column="25">mSpeedValueView</name><op:operator pos:line="421" pos:column="40">.</op:operator><name pos:line="421" pos:column="41">setText</name></name><argument_list pos:line="421" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="421" pos:column="49">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="423" pos:column="21">else <block pos:line="423" pos:column="26">{
                        <expr_stmt><expr><call><name><name pos:line="424" pos:column="25">mSpeedValueView</name><op:operator pos:line="424" pos:column="40">.</op:operator><name pos:line="424" pos:column="41">setText</name></name><argument_list pos:line="424" pos:column="48">(
                                <argument><expr><op:operator pos:line="425" pos:column="33">(</op:operator><lit:literal type="string" pos:line="425" pos:column="34">""</lit:literal> <op:operator pos:line="425" pos:column="37">+</op:operator> <op:operator pos:line="425" pos:column="39">(</op:operator><name pos:line="425" pos:column="40">mSpeedValue</name> <op:operator pos:line="425" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="425" pos:column="54">0.000001f</lit:literal><op:operator pos:line="425" pos:column="63">)</op:operator><op:operator pos:line="425" pos:column="64">)</op:operator><op:operator pos:line="425" pos:column="65">.</op:operator><call><name pos:line="425" pos:column="66">substring</name><argument_list pos:line="425" pos:column="75">(<argument><expr><lit:literal type="number" pos:line="425" pos:column="76">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="425" pos:column="79">4</lit:literal></expr></argument>)</argument_list></call></expr></argument>
                        )</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>
                    <break pos:line="428" pos:column="21">break;</break>
                </case><case pos:line="429" pos:column="17">case <expr><name pos:line="429" pos:column="22">CALORIES_MSG</name></expr>:
                    <expr_stmt><expr><name pos:line="430" pos:column="21">mCaloriesValue</name> <op:operator pos:line="430" pos:column="36">=</op:operator> <name><name pos:line="430" pos:column="38">msg</name><op:operator pos:line="430" pos:column="41">.</op:operator><name pos:line="430" pos:column="42">arg1</name></name></expr>;</expr_stmt>
                    <if pos:line="431" pos:column="21">if <condition pos:line="431" pos:column="24">(<expr><name pos:line="431" pos:column="25">mCaloriesValue</name> <op:operator pos:line="431" pos:column="40">&lt;=</op:operator> <lit:literal type="number" pos:line="431" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="431" pos:column="45"> <block pos:line="431" pos:column="46">{ 
                        <expr_stmt><expr><call><name><name pos:line="432" pos:column="25">mCaloriesValueView</name><op:operator pos:line="432" pos:column="43">.</op:operator><name pos:line="432" pos:column="44">setText</name></name><argument_list pos:line="432" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="432" pos:column="52">"0"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="434" pos:column="21">else <block pos:line="434" pos:column="26">{
                        <expr_stmt><expr><call><name><name pos:line="435" pos:column="25">mCaloriesValueView</name><op:operator pos:line="435" pos:column="43">.</op:operator><name pos:line="435" pos:column="44">setText</name></name><argument_list pos:line="435" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="435" pos:column="52">""</lit:literal> <op:operator pos:line="435" pos:column="55">+</op:operator> <op:operator pos:line="435" pos:column="57">(</op:operator><name pos:line="435" pos:column="58">int</name><op:operator pos:line="435" pos:column="61">)</op:operator><name pos:line="435" pos:column="62">mCaloriesValue</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></else></if>
                    <break pos:line="437" pos:column="21">break;</break>
                </case><default pos:line="438" pos:column="17">default:
                    <expr_stmt><expr><call><name><name pos:line="439" pos:column="21">super</name><op:operator pos:line="439" pos:column="26">.</op:operator><name pos:line="439" pos:column="27">handleMessage</name></name><argument_list pos:line="439" pos:column="40">(<argument><expr><name pos:line="439" pos:column="41">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </default>}</block></switch>
        }</block></function>
        
    }</block></class></expr></init></decl>;</decl_stmt>
    

}</block></class></unit>
