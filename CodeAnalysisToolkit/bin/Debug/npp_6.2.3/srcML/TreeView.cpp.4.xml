<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\TreeView\TreeView.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"TreeView.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="31" pos:column="1">HTREEITEM</name></type> <name><name pos:line="31" pos:column="11">TreeView</name><op:operator pos:line="31" pos:column="19">::</op:operator><name pos:line="31" pos:column="21">insertTo</name></name><parameter_list pos:line="31" pos:column="29">(<param><decl><type><name pos:line="31" pos:column="30">HTREEITEM</name></type> <name pos:line="31" pos:column="40">parent</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="48">TCHAR</name> <type:modifier pos:line="31" pos:column="54">*</type:modifier></type><name pos:line="31" pos:column="55">itemStr</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="64">int</name></type> <name pos:line="31" pos:column="68">imgIndex</name></decl></param>)</parameter_list>
<block pos:line="32" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="33" pos:column="9">TV_INSERTSTRUCT</name></type> <name pos:line="33" pos:column="25">tvinsert</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="34" pos:column="9">tvinsert</name><op:operator pos:line="34" pos:column="17">.</op:operator><name pos:line="34" pos:column="18">hParent</name></name><op:operator pos:line="34" pos:column="25">=</op:operator><name pos:line="34" pos:column="26">parent</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="35" pos:column="9">tvinsert</name><op:operator pos:line="35" pos:column="17">.</op:operator><name pos:line="35" pos:column="18">hInsertAfter</name></name><op:operator pos:line="35" pos:column="30">=</op:operator><name pos:line="35" pos:column="31">parent</name><op:operator pos:line="35" pos:column="37">?</op:operator><name pos:line="35" pos:column="38">TVI_LAST</name><op:operator pos:line="35" pos:column="46">:</op:operator><name pos:line="35" pos:column="47">TVI_ROOT</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="36" pos:column="9">tvinsert</name><op:operator pos:line="36" pos:column="17">.</op:operator><name pos:line="36" pos:column="18">item</name><op:operator pos:line="36" pos:column="22">.</op:operator><name pos:line="36" pos:column="23">mask</name></name><op:operator pos:line="36" pos:column="27">=</op:operator><name pos:line="36" pos:column="28">TVIF_TEXT</name><op:operator pos:line="36" pos:column="37">|</op:operator><name pos:line="36" pos:column="38">TVIF_IMAGE</name><op:operator pos:line="36" pos:column="48">|</op:operator><name pos:line="36" pos:column="49">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="37" pos:column="9">tvinsert</name><op:operator pos:line="37" pos:column="17">.</op:operator><name pos:line="37" pos:column="18">item</name><op:operator pos:line="37" pos:column="22">.</op:operator><name pos:line="37" pos:column="23">pszText</name></name><op:operator pos:line="37" pos:column="30">=</op:operator><name pos:line="37" pos:column="31">itemStr</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="38" pos:column="9">tvinsert</name><op:operator pos:line="38" pos:column="17">.</op:operator><name pos:line="38" pos:column="18">item</name><op:operator pos:line="38" pos:column="22">.</op:operator><name pos:line="38" pos:column="23">iImage</name></name><op:operator pos:line="38" pos:column="29">=</op:operator><name pos:line="38" pos:column="30">imgIndex</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="39" pos:column="9">tvinsert</name><op:operator pos:line="39" pos:column="17">.</op:operator><name pos:line="39" pos:column="18">item</name><op:operator pos:line="39" pos:column="22">.</op:operator><name pos:line="39" pos:column="23">iSelectedImage</name></name><op:operator pos:line="39" pos:column="37">=</op:operator><lit:literal type="number" pos:line="39" pos:column="38">0</lit:literal></expr>;</expr_stmt>
	<return pos:line="40" pos:column="9">return <expr><op:operator pos:line="40" pos:column="16">(</op:operator><name pos:line="40" pos:column="17">HTREEITEM</name><op:operator pos:line="40" pos:column="26">)</op:operator><call><name><op:operator pos:line="40" pos:column="27">::</op:operator><name pos:line="40" pos:column="29">SendMessage</name></name><argument_list pos:line="40" pos:column="40">(<argument><expr><name pos:line="40" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="40" pos:column="49">TVM_INSERTITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="40" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="40" pos:column="68">(</op:operator><name pos:line="40" pos:column="69">LPARAM</name><op:operator pos:line="40" pos:column="75">)</op:operator><op:operator pos:line="40" pos:column="76">&amp;</op:operator><name pos:line="40" pos:column="77">tvinsert</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="43" pos:column="1">void</name></type> <name><name pos:line="43" pos:column="6">TreeView</name><op:operator pos:line="43" pos:column="14">::</op:operator><name pos:line="43" pos:column="16">init</name></name><parameter_list pos:line="43" pos:column="20">(<param><decl><type><name pos:line="43" pos:column="21">HINSTANCE</name></type> <name pos:line="43" pos:column="31">hInst</name></decl></param>, <param><decl><type><name pos:line="43" pos:column="38">HWND</name></type> <name pos:line="43" pos:column="43">pere</name></decl></param>)</parameter_list>
<block pos:line="44" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="45" pos:column="9">Window</name><op:operator pos:line="45" pos:column="15">::</op:operator><name pos:line="45" pos:column="17">init</name></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="45" pos:column="29">pere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="46" pos:column="9">InitCommonControls</name><argument_list pos:line="46" pos:column="27">()</argument_list></call></expr>;</expr_stmt> 

	<decl_stmt><decl><type><name pos:line="48" pos:column="9">HTREEITEM</name></type> <name pos:line="48" pos:column="19">Parent</name></decl>;</decl_stmt>           <comment type="line" pos:line="48" pos:column="37">// Tree item handle</comment>
	<decl_stmt><decl><type><name pos:line="49" pos:column="9">HTREEITEM</name></type> <name pos:line="49" pos:column="19">Before</name></decl>;</decl_stmt>           <comment type="line" pos:line="49" pos:column="37">// .......</comment>
	<decl_stmt><decl><type><name pos:line="50" pos:column="9">HTREEITEM</name></type> <name pos:line="50" pos:column="19">Root</name></decl>;</decl_stmt> 
	
    <comment type="line" pos:line="52" pos:column="5">// Get the dimensions of the parent window's client area, and create </comment>
    <comment type="line" pos:line="53" pos:column="5">// the tree-view control. </comment>
    
    <expr_stmt><expr><name pos:line="55" pos:column="5">_hSelf</name> <op:operator pos:line="55" pos:column="12">=</op:operator> <call><name pos:line="55" pos:column="14">CreateWindowEx</name><argument_list pos:line="55" pos:column="28">(<argument><expr><lit:literal type="number" pos:line="55" pos:column="29">0</lit:literal></expr></argument>,
                            <argument><expr><name pos:line="56" pos:column="29">WC_TREEVIEW</name></expr></argument>,
                            <argument><expr><call><name pos:line="57" pos:column="29">TEXT</name><argument_list pos:line="57" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="34">"Tree View"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
                            <argument><expr><name pos:line="58" pos:column="29">WS_VISIBLE</name> <op:operator pos:line="58" pos:column="40">|</op:operator> <name pos:line="58" pos:column="42">WS_CHILD</name> <op:operator pos:line="58" pos:column="51">|</op:operator> <name pos:line="58" pos:column="53">WS_BORDER</name> <op:operator pos:line="58" pos:column="63">|</op:operator> 
							<name pos:line="59" pos:column="57">TVS_HASLINES</name> <op:operator pos:line="59" pos:column="70">|</op:operator> <name pos:line="59" pos:column="72">TVS_HASBUTTONS</name> <op:operator pos:line="59" pos:column="87">|</op:operator> <name pos:line="59" pos:column="89">TVS_SHOWSELALWAYS</name></expr></argument> , 
                            <argument><expr><lit:literal type="number" pos:line="60" pos:column="29">0</lit:literal></expr></argument>,  <argument><expr><lit:literal type="number" pos:line="60" pos:column="33">0</lit:literal></expr></argument>,  <argument><expr><lit:literal type="number" pos:line="60" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="60" pos:column="40">0</lit:literal></expr></argument>,
                            <argument><expr><name pos:line="61" pos:column="29">_hParent</name></expr></argument>, 
                            <argument><expr><name pos:line="62" pos:column="29">NULL</name></expr></argument>, 
                            <argument><expr><name pos:line="63" pos:column="29">_hInst</name></expr></argument>, 
                            <argument><expr><name pos:line="64" pos:column="29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
	
	<if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><op:operator pos:line="66" pos:column="13">!</op:operator><name pos:line="66" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="66" pos:column="21">
		<throw pos:line="67" pos:column="17">throw <expr><call><name pos:line="67" pos:column="23">int</name><argument_list pos:line="67" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="67" pos:column="27">56</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

	<expr_stmt><expr><name pos:line="69" pos:column="9">Parent</name> <op:operator pos:line="69" pos:column="16">=</op:operator> <call><name pos:line="69" pos:column="18">insertTo</name><argument_list pos:line="69" pos:column="26">(<argument><expr><name pos:line="69" pos:column="27">NULL</name></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="33">TEXT</name><argument_list pos:line="69" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="38">"MAOCS30 Command"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="69" pos:column="58">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="70" pos:column="9">Root</name><op:operator pos:line="70" pos:column="13">=</op:operator><name pos:line="70" pos:column="14">Parent</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="71" pos:column="9">Before</name><op:operator pos:line="71" pos:column="15">=</op:operator><name pos:line="71" pos:column="16">Parent</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="73" pos:column="9">Parent</name> <op:operator pos:line="73" pos:column="16">=</op:operator> <call><name pos:line="73" pos:column="18">insertTo</name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">Parent</name></expr></argument>, <argument><expr><call><name pos:line="73" pos:column="35">TEXT</name><argument_list pos:line="73" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="73" pos:column="40">"Native command"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="73" pos:column="59">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="74" pos:column="9">insertTo</name><argument_list pos:line="74" pos:column="17">(<argument><expr><name pos:line="74" pos:column="18">Parent</name></expr></argument>, <argument><expr><call><name pos:line="74" pos:column="26">TEXT</name><argument_list pos:line="74" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="31">"Power On"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="74" pos:column="44">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="75" pos:column="9">insertTo</name><argument_list pos:line="75" pos:column="17">(<argument><expr><name pos:line="75" pos:column="18">Parent</name></expr></argument>, <argument><expr><call><name pos:line="75" pos:column="26">TEXT</name><argument_list pos:line="75" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="31">"Power off"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="75" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="76" pos:column="9">insertTo</name><argument_list pos:line="76" pos:column="17">(<argument><expr><name pos:line="76" pos:column="18">Parent</name></expr></argument>, <argument><expr><call><name pos:line="76" pos:column="26">TEXT</name><argument_list pos:line="76" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="76" pos:column="31">"Entrant"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="76" pos:column="43">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">insertTo</name><argument_list pos:line="77" pos:column="17">(<argument><expr><name pos:line="77" pos:column="18">Parent</name></expr></argument>, <argument><expr><call><name pos:line="77" pos:column="26">TEXT</name><argument_list pos:line="77" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="77" pos:column="31">"Sortant"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="77" pos:column="43">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="78" pos:column="9">Parent</name> <op:operator pos:line="78" pos:column="16">=</op:operator> <call><name pos:line="78" pos:column="18">insertTo</name><argument_list pos:line="78" pos:column="26">(<argument><expr><name pos:line="78" pos:column="27">Before</name></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="35">TEXT</name><argument_list pos:line="78" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="78" pos:column="40">"Macro"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="78" pos:column="50">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="79" pos:column="9">insertTo</name><argument_list pos:line="79" pos:column="17">(<argument><expr><name pos:line="79" pos:column="18">Parent</name></expr></argument>, <argument><expr><call><name pos:line="79" pos:column="26">TEXT</name><argument_list pos:line="79" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="31">"ChangeCode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="79" pos:column="46">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="80" pos:column="9">insertTo</name><argument_list pos:line="80" pos:column="17">(<argument><expr><name pos:line="80" pos:column="18">Parent</name></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="26">TEXT</name><argument_list pos:line="80" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="80" pos:column="31">"CipherData"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="80" pos:column="46">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="82" pos:column="9">insertTo</name><argument_list pos:line="82" pos:column="17">(<argument><expr><name pos:line="82" pos:column="18">NULL</name></expr></argument>, <argument><expr><call><name pos:line="82" pos:column="24">TEXT</name><argument_list pos:line="82" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="29">"Bla bla bla bla..."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="83" pos:column="9">//display();</comment>
}</block></function></unit>
