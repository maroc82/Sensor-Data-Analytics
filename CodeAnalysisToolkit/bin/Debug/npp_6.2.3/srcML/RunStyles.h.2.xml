<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\RunStyles.h" pos:tabs="8"><comment type="block" format="doxygen" pos:line="1" pos:column="1">/** @file RunStyles.h
 ** Data structure used to store sparse styles.
 **/</comment>
<comment type="line" pos:line="4" pos:column="1">// Copyright 1998-2007 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="5" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<comment type="line" format="doxygen" pos:line="7" pos:column="1">/// Styling buffer using one element for each run rather than using</comment>
<comment type="line" format="doxygen" pos:line="8" pos:column="1">/// a filled buffer.</comment>

<cpp:ifndef pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">ifndef</cpp:directive> <name pos:line="10" pos:column="9">RUNSTYLES_H</name></cpp:ifndef>
<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">RUNSTYLES_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef</cpp:directive> <name pos:line="13" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="14" pos:column="1">namespace <name pos:line="14" pos:column="11">Scintilla</name> <block pos:line="14" pos:column="21">{
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif</cpp:directive></cpp:endif>

<class pos:line="17" pos:column="1">class <name pos:line="17" pos:column="7">RunStyles</name> <block pos:line="17" pos:column="17">{<private type="default" pos:line="17" pos:column="18">
</private><private pos:line="18" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">Partitioning</name> <type:modifier pos:line="19" pos:column="22">*</type:modifier></type><name pos:line="19" pos:column="23">starts</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="20" pos:column="9">SplitVector</name><argument_list pos:line="20" pos:column="20">&lt;<argument><expr><name pos:line="20" pos:column="21">int</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="20" pos:column="26">*</type:modifier></type><name pos:line="20" pos:column="27">styles</name></decl>;</decl_stmt>
	<function_decl><type><name pos:line="21" pos:column="9">int</name></type> <name pos:line="21" pos:column="13">RunFromPosition</name><parameter_list pos:line="21" pos:column="28">(<param><decl><type><name pos:line="21" pos:column="29">int</name></type> <name pos:line="21" pos:column="33">position</name></decl></param>)</parameter_list> <specifier pos:line="21" pos:column="43">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="22" pos:column="9">int</name></type> <name pos:line="22" pos:column="13">SplitRun</name><parameter_list pos:line="22" pos:column="21">(<param><decl><type><name pos:line="22" pos:column="22">int</name></type> <name pos:line="22" pos:column="26">position</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="23" pos:column="9">void</name></type> <name pos:line="23" pos:column="14">RemoveRun</name><parameter_list pos:line="23" pos:column="23">(<param><decl><type><name pos:line="23" pos:column="24">int</name></type> <name pos:line="23" pos:column="28">run</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="24" pos:column="9">void</name></type> <name pos:line="24" pos:column="14">RemoveRunIfEmpty</name><parameter_list pos:line="24" pos:column="30">(<param><decl><type><name pos:line="24" pos:column="31">int</name></type> <name pos:line="24" pos:column="35">run</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="25" pos:column="9">void</name></type> <name pos:line="25" pos:column="14">RemoveRunIfSameAsPrevious</name><parameter_list pos:line="25" pos:column="39">(<param><decl><type><name pos:line="25" pos:column="40">int</name></type> <name pos:line="25" pos:column="44">run</name></decl></param>)</parameter_list>;</function_decl>
</private><public pos:line="26" pos:column="1">public:
	<constructor_decl><name pos:line="27" pos:column="9">RunStyles</name><parameter_list pos:line="27" pos:column="18">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="28" pos:column="9">~<name pos:line="28" pos:column="10">RunStyles</name></name><parameter_list pos:line="28" pos:column="19">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="29" pos:column="9">int</name></type> <name pos:line="29" pos:column="13">Length</name><parameter_list pos:line="29" pos:column="19">()</parameter_list> <specifier pos:line="29" pos:column="22">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="30" pos:column="9">int</name></type> <name pos:line="30" pos:column="13">ValueAt</name><parameter_list pos:line="30" pos:column="20">(<param><decl><type><name pos:line="30" pos:column="21">int</name></type> <name pos:line="30" pos:column="25">position</name></decl></param>)</parameter_list> <specifier pos:line="30" pos:column="35">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="31" pos:column="9">int</name></type> <name pos:line="31" pos:column="13">FindNextChange</name><parameter_list pos:line="31" pos:column="27">(<param><decl><type><name pos:line="31" pos:column="28">int</name></type> <name pos:line="31" pos:column="32">position</name></decl></param>, <param><decl><type><name pos:line="31" pos:column="42">int</name></type> <name pos:line="31" pos:column="46">end</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="32" pos:column="9">int</name></type> <name pos:line="32" pos:column="13">StartRun</name><parameter_list pos:line="32" pos:column="21">(<param><decl><type><name pos:line="32" pos:column="22">int</name></type> <name pos:line="32" pos:column="26">position</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="33" pos:column="9">int</name></type> <name pos:line="33" pos:column="13">EndRun</name><parameter_list pos:line="33" pos:column="19">(<param><decl><type><name pos:line="33" pos:column="20">int</name></type> <name pos:line="33" pos:column="24">position</name></decl></param>)</parameter_list>;</function_decl>
	<comment type="line" pos:line="34" pos:column="9">// Returns true if some values may have changed</comment>
	<function_decl><type><name pos:line="35" pos:column="9">bool</name></type> <name pos:line="35" pos:column="14">FillRange</name><parameter_list pos:line="35" pos:column="23">(<param><decl><type><name pos:line="35" pos:column="24">int</name> <type:modifier pos:line="35" pos:column="28">&amp;</type:modifier></type><name pos:line="35" pos:column="29">position</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="39">int</name></type> <name pos:line="35" pos:column="43">value</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="50">int</name> <type:modifier pos:line="35" pos:column="54">&amp;</type:modifier></type><name pos:line="35" pos:column="55">fillLength</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="36" pos:column="9">void</name></type> <name pos:line="36" pos:column="14">SetValueAt</name><parameter_list pos:line="36" pos:column="24">(<param><decl><type><name pos:line="36" pos:column="25">int</name></type> <name pos:line="36" pos:column="29">position</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="39">int</name></type> <name pos:line="36" pos:column="43">value</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="37" pos:column="9">void</name></type> <name pos:line="37" pos:column="14">InsertSpace</name><parameter_list pos:line="37" pos:column="25">(<param><decl><type><name pos:line="37" pos:column="26">int</name></type> <name pos:line="37" pos:column="30">position</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="40">int</name></type> <name pos:line="37" pos:column="44">insertLength</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="38" pos:column="9">void</name></type> <name pos:line="38" pos:column="14">DeleteAll</name><parameter_list pos:line="38" pos:column="23">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="39" pos:column="9">void</name></type> <name pos:line="39" pos:column="14">DeleteRange</name><parameter_list pos:line="39" pos:column="25">(<param><decl><type><name pos:line="39" pos:column="26">int</name></type> <name pos:line="39" pos:column="30">position</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="40">int</name></type> <name pos:line="39" pos:column="44">deleteLength</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="40" pos:column="9">int</name></type> <name pos:line="40" pos:column="13">Runs</name><parameter_list pos:line="40" pos:column="17">()</parameter_list> <specifier pos:line="40" pos:column="20">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="41" pos:column="9">bool</name></type> <name pos:line="41" pos:column="14">AllSame</name><parameter_list pos:line="41" pos:column="21">()</parameter_list> <specifier pos:line="41" pos:column="24">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="42" pos:column="9">bool</name></type> <name pos:line="42" pos:column="14">AllSameAs</name><parameter_list pos:line="42" pos:column="23">(<param><decl><type><name pos:line="42" pos:column="24">int</name></type> <name pos:line="42" pos:column="28">value</name></decl></param>)</parameter_list> <specifier pos:line="42" pos:column="35">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="43" pos:column="9">int</name></type> <name pos:line="43" pos:column="13">Find</name><parameter_list pos:line="43" pos:column="17">(<param><decl><type><name pos:line="43" pos:column="18">int</name></type> <name pos:line="43" pos:column="22">value</name></decl></param>, <param><decl><type><name pos:line="43" pos:column="29">int</name></type> <name pos:line="43" pos:column="33">start</name></decl></param>)</parameter_list> <specifier pos:line="43" pos:column="40">const</specifier>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">ifdef</cpp:directive> <name pos:line="46" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
