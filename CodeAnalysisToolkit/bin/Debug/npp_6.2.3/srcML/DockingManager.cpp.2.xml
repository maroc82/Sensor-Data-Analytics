<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\dockingwnd\DockingManager.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// this file is part of docking functionality for Notepad++</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2006 Jens Lorenz &lt;jens.plugin.npp@gmx.de&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">// </comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">// </comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">// </comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"DockingManager.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"DockingSplitter.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"DockingCont.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"Gripper.h"</lit:literal></cpp:file></cpp:include>


<decl_stmt><decl><type><name pos:line="36" pos:column="1">BOOL</name></type> <name><name pos:line="36" pos:column="6">DockingManager</name><op:operator pos:line="36" pos:column="20">::</op:operator><name pos:line="36" pos:column="22">_isRegistered</name></name> <init pos:line="36" pos:column="36">= <expr><name pos:line="36" pos:column="38">FALSE</name></expr></init></decl>;</decl_stmt>

<comment type="line" pos:line="38" pos:column="1">//Window of event handling DockingManager (can only be one)</comment>
<decl_stmt><decl><type><specifier pos:line="39" pos:column="1">static</specifier>	<name pos:line="39" pos:column="9">HWND</name></type>			<name pos:line="39" pos:column="33">hWndServer</name>	<init pos:line="39" pos:column="49">= <expr><name pos:line="39" pos:column="51">NULL</name></expr></init></decl>;</decl_stmt>
<comment type="line" pos:line="40" pos:column="1">//Next hook in line</comment>
<decl_stmt><decl><type><specifier pos:line="41" pos:column="1">static</specifier>	<name pos:line="41" pos:column="9">HHOOK</name></type>			<name pos:line="41" pos:column="33">gWinCallHook</name> <init pos:line="41" pos:column="46">= <expr><name pos:line="41" pos:column="48">NULL</name></expr></init></decl>;</decl_stmt>
<function_decl><type><name pos:line="42" pos:column="1">LRESULT</name> <name pos:line="42" pos:column="9">CALLBACK</name></type> <name pos:line="42" pos:column="18">FocusWndProc</name><parameter_list pos:line="42" pos:column="30">(<param><decl><type><name pos:line="42" pos:column="31">int</name></type> <name pos:line="42" pos:column="35">nCode</name></decl></param>, <param><decl><type><name pos:line="42" pos:column="42">WPARAM</name></type> <name pos:line="42" pos:column="49">wParam</name></decl></param>, <param><decl><type><name pos:line="42" pos:column="57">LPARAM</name></type> <name pos:line="42" pos:column="64">lParam</name></decl></param>)</parameter_list>;</function_decl>

<comment type="line" pos:line="44" pos:column="1">// Callback function that handles messages (to test focus)</comment>
<function><type><name pos:line="45" pos:column="1">LRESULT</name> <name pos:line="45" pos:column="9">CALLBACK</name></type> <name pos:line="45" pos:column="18">FocusWndProc</name><parameter_list pos:line="45" pos:column="30">(<param><decl><type><name pos:line="45" pos:column="31">int</name></type> <name pos:line="45" pos:column="35">nCode</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="42">WPARAM</name></type> <name pos:line="45" pos:column="49">wParam</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="57">LPARAM</name></type> <name pos:line="45" pos:column="64">lParam</name></decl></param>)</parameter_list> <block pos:line="45" pos:column="72">{
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">nCode</name> <op:operator pos:line="46" pos:column="19">==</op:operator> <name pos:line="46" pos:column="22">HC_ACTION</name> <op:operator pos:line="46" pos:column="32">&amp;&amp;</op:operator> <name pos:line="46" pos:column="35">hWndServer</name></expr>)</condition><then pos:line="46" pos:column="46"> <block pos:line="46" pos:column="47">{
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">DockingManager</name> <type:modifier pos:line="47" pos:column="32">*</type:modifier></type><name pos:line="47" pos:column="33">pDockingManager</name> <init pos:line="47" pos:column="49">= <expr><op:operator pos:line="47" pos:column="51">(</op:operator><name pos:line="47" pos:column="52">DockingManager</name> <op:operator pos:line="47" pos:column="67">*</op:operator><op:operator pos:line="47" pos:column="68">)</op:operator><call><name><op:operator pos:line="47" pos:column="69">::</op:operator><name pos:line="47" pos:column="71">GetWindowLongPtr</name></name><argument_list pos:line="47" pos:column="87">(<argument><expr><name pos:line="47" pos:column="88">hWndServer</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="100">GWL_USERDATA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="48" pos:column="17">if <condition pos:line="48" pos:column="20">(<expr><name pos:line="48" pos:column="21">pDockingManager</name></expr>)</condition><then pos:line="48" pos:column="37"> <block pos:line="48" pos:column="38">{
			<decl_stmt><decl><type><name><name pos:line="49" pos:column="25">vector</name><argument_list pos:line="49" pos:column="31">&lt;<argument><expr><name pos:line="49" pos:column="32">DockingCont</name><type:modifier pos:line="49" pos:column="43">*</type:modifier></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="49" pos:column="46">&amp;</type:modifier></type> <name pos:line="49" pos:column="48">vcontainer</name> <init pos:line="49" pos:column="59">= <expr><call><name><name pos:line="49" pos:column="61">pDockingManager</name><op:operator pos:line="49" pos:column="76">-&gt;</op:operator><name pos:line="49" pos:column="78">getContainerInfo</name></name><argument_list pos:line="49" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="50" pos:column="25">CWPSTRUCT</name> <type:modifier pos:line="50" pos:column="35">*</type:modifier></type> <name pos:line="50" pos:column="37">pCwp</name> <init pos:line="50" pos:column="42">= <expr><op:operator pos:line="50" pos:column="44">(</op:operator><name pos:line="50" pos:column="45">CWPSTRUCT</name><op:operator pos:line="50" pos:column="54">*</op:operator><op:operator pos:line="50" pos:column="55">)</op:operator><name pos:line="50" pos:column="56">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="51" pos:column="25">if <condition pos:line="51" pos:column="28">(<expr><name><name pos:line="51" pos:column="29">pCwp</name><op:operator pos:line="51" pos:column="33">-&gt;</op:operator><name pos:line="51" pos:column="35">message</name></name> <op:operator pos:line="51" pos:column="43">==</op:operator> <name pos:line="51" pos:column="46">WM_KILLFOCUS</name></expr>)</condition><then pos:line="51" pos:column="59"> <block pos:line="51" pos:column="60">{
				<for pos:line="52" pos:column="33">for (<init><decl><type><name pos:line="52" pos:column="38">int</name></type> <name pos:line="52" pos:column="42">i</name> <init pos:line="52" pos:column="44">= <expr><lit:literal type="number" pos:line="52" pos:column="46">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="52" pos:column="49">i</name> <op:operator pos:line="52" pos:column="51">&lt;</op:operator> <name pos:line="52" pos:column="53">DOCKCONT_MAX</name></expr>;</condition> <incr><expr><name pos:line="52" pos:column="67">i</name><op:operator pos:line="52" pos:column="68">++</op:operator></expr></incr>)
				<block pos:line="53" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="54" pos:column="41">vcontainer</name><index pos:line="54" pos:column="51">[<expr><name pos:line="54" pos:column="52">i</name></expr>]</index></name><op:operator pos:line="54" pos:column="54">-&gt;</op:operator><call><name pos:line="54" pos:column="56">SetActive</name><argument_list pos:line="54" pos:column="65">(<argument><expr><name pos:line="54" pos:column="66">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="54" pos:column="81">//deactivate all containers</comment>
				}</block></for>
			}</block></then> <else pos:line="56" pos:column="27">else <if pos:line="56" pos:column="32">if <condition pos:line="56" pos:column="35">(<expr><name><name pos:line="56" pos:column="36">pCwp</name><op:operator pos:line="56" pos:column="40">-&gt;</op:operator><name pos:line="56" pos:column="42">message</name></name> <op:operator pos:line="56" pos:column="50">==</op:operator> <name pos:line="56" pos:column="53">WM_SETFOCUS</name></expr>)</condition><then pos:line="56" pos:column="65"> <block pos:line="56" pos:column="66">{
				<for pos:line="57" pos:column="33">for (<init><decl><type><name pos:line="57" pos:column="38">int</name></type> <name pos:line="57" pos:column="42">i</name> <init pos:line="57" pos:column="44">= <expr><lit:literal type="number" pos:line="57" pos:column="46">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="57" pos:column="49">i</name> <op:operator pos:line="57" pos:column="51">&lt;</op:operator> <name pos:line="57" pos:column="53">DOCKCONT_MAX</name></expr>;</condition> <incr><expr><name pos:line="57" pos:column="67">i</name><op:operator pos:line="57" pos:column="68">++</op:operator></expr></incr>)
				<block pos:line="58" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="59" pos:column="41">vcontainer</name><index pos:line="59" pos:column="51">[<expr><name pos:line="59" pos:column="52">i</name></expr>]</index></name><op:operator pos:line="59" pos:column="54">-&gt;</op:operator><call><name pos:line="59" pos:column="56">SetActive</name><argument_list pos:line="59" pos:column="65">(<argument><expr><call><name pos:line="59" pos:column="66">IsChild</name><argument_list pos:line="59" pos:column="73">(<argument><expr><name><name pos:line="59" pos:column="74">vcontainer</name><index pos:line="59" pos:column="84">[<expr><name pos:line="59" pos:column="85">i</name></expr>]</index></name><op:operator pos:line="59" pos:column="87">-&gt;</op:operator><call><name pos:line="59" pos:column="89">getHSelf</name><argument_list pos:line="59" pos:column="97">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="101">pCwp</name><op:operator pos:line="59" pos:column="105">-&gt;</op:operator><name pos:line="59" pos:column="107">hwnd</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="59" pos:column="121">//activate the container that contains the window with focus, this can be none</comment>
				}</block></for>
			}</block></then></if></else></if>
		}</block></then></if>
	}</block></then></if>
	<return pos:line="64" pos:column="9">return <expr><call><name pos:line="64" pos:column="16">CallNextHookEx</name><argument_list pos:line="64" pos:column="30">(<argument><expr><name pos:line="64" pos:column="31">gWinCallHook</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="45">nCode</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="52">wParam</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="60">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<constructor><name><name pos:line="67" pos:column="1">DockingManager</name><op:operator pos:line="67" pos:column="15">::</op:operator><name pos:line="67" pos:column="17">DockingManager</name></name><parameter_list pos:line="67" pos:column="31">()</parameter_list>
<block pos:line="68" pos:column="1">{
	<expr_stmt><expr><name pos:line="69" pos:column="9">_isInitialized</name>			<op:operator pos:line="69" pos:column="41">=</op:operator> <name pos:line="69" pos:column="43">FALSE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="70" pos:column="9">_hImageList</name>				<op:operator pos:line="70" pos:column="49">=</op:operator> <name pos:line="70" pos:column="51">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">memset</name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">_iContMap</name></expr></argument>, <argument><expr><op:operator pos:line="71" pos:column="27">-</op:operator><lit:literal type="number" pos:line="71" pos:column="28">1</lit:literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="31">CONT_MAP_MAX</name> <op:operator pos:line="71" pos:column="44">*</op:operator> <sizeof pos:line="71" pos:column="46">sizeof<argument_list pos:line="71" pos:column="52">(<argument><expr><name pos:line="71" pos:column="53">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="73" pos:column="9">_iContMap</name><index pos:line="73" pos:column="18">[<expr><lit:literal type="number" pos:line="73" pos:column="19">0</lit:literal></expr>]</index></name> <op:operator pos:line="73" pos:column="22">=</op:operator> <name pos:line="73" pos:column="24">CONT_LEFT</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="74" pos:column="9">_iContMap</name><index pos:line="74" pos:column="18">[<expr><lit:literal type="number" pos:line="74" pos:column="19">1</lit:literal></expr>]</index></name> <op:operator pos:line="74" pos:column="22">=</op:operator> <name pos:line="74" pos:column="24">CONT_RIGHT</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="75" pos:column="9">_iContMap</name><index pos:line="75" pos:column="18">[<expr><lit:literal type="number" pos:line="75" pos:column="19">2</lit:literal></expr>]</index></name> <op:operator pos:line="75" pos:column="22">=</op:operator> <name pos:line="75" pos:column="24">CONT_TOP</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="76" pos:column="9">_iContMap</name><index pos:line="76" pos:column="18">[<expr><lit:literal type="number" pos:line="76" pos:column="19">3</lit:literal></expr>]</index></name> <op:operator pos:line="76" pos:column="22">=</op:operator> <name pos:line="76" pos:column="24">CONT_BOTTOM</name></expr>;</expr_stmt>

	<comment type="line" pos:line="78" pos:column="9">// create four containers with splitters</comment>
	<for pos:line="79" pos:column="9">for (<init><decl><type><name pos:line="79" pos:column="14">int</name></type> <name pos:line="79" pos:column="18">i</name> <init pos:line="79" pos:column="20">= <expr><lit:literal type="number" pos:line="79" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="79" pos:column="25">i</name> <op:operator pos:line="79" pos:column="27">&lt;</op:operator> <name pos:line="79" pos:column="29">DOCKCONT_MAX</name></expr>;</condition> <incr><expr><name pos:line="79" pos:column="43">i</name><op:operator pos:line="79" pos:column="44">++</op:operator></expr></incr>)
	<block pos:line="80" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="81" pos:column="17">DockingCont</name> <type:modifier pos:line="81" pos:column="29">*</type:modifier></type><name pos:line="81" pos:column="30">_pDockCont</name> <init pos:line="81" pos:column="41">= <expr><op:operator pos:line="81" pos:column="43">new</op:operator> <name pos:line="81" pos:column="47">DockingCont</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="82" pos:column="17">_vContainer</name><op:operator pos:line="82" pos:column="28">.</op:operator><name pos:line="82" pos:column="29">push_back</name></name><argument_list pos:line="82" pos:column="38">(<argument><expr><name pos:line="82" pos:column="39">_pDockCont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="84" pos:column="17">DockingSplitter</name> <type:modifier pos:line="84" pos:column="33">*</type:modifier></type><name pos:line="84" pos:column="34">_pSplitter</name> <init pos:line="84" pos:column="45">= <expr><op:operator pos:line="84" pos:column="47">new</op:operator> <name pos:line="84" pos:column="51">DockingSplitter</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="85" pos:column="17">_vSplitter</name><op:operator pos:line="85" pos:column="27">.</op:operator><name pos:line="85" pos:column="28">push_back</name></name><argument_list pos:line="85" pos:column="37">(<argument><expr><name pos:line="85" pos:column="38">_pSplitter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></constructor>

<destructor><name><name pos:line="89" pos:column="1">DockingManager</name><op:operator pos:line="89" pos:column="15">::</op:operator>~<name pos:line="89" pos:column="18">DockingManager</name></name><parameter_list pos:line="89" pos:column="32">()</parameter_list>
<block pos:line="90" pos:column="1">{
	<comment type="line" pos:line="91" pos:column="9">// delete 4 splitters</comment>
	<for pos:line="92" pos:column="9">for (<init><decl><type><name pos:line="92" pos:column="14">int</name></type> <name pos:line="92" pos:column="18">i</name> <init pos:line="92" pos:column="20">= <expr><lit:literal type="number" pos:line="92" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="92" pos:column="25">i</name> <op:operator pos:line="92" pos:column="27">&lt;</op:operator> <name pos:line="92" pos:column="29">DOCKCONT_MAX</name></expr>;</condition> <incr><expr><name pos:line="92" pos:column="43">i</name><op:operator pos:line="92" pos:column="44">++</op:operator></expr></incr>)
	<block pos:line="93" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="94" pos:column="17">delete</op:operator> <name><name pos:line="94" pos:column="24">_vSplitter</name><index pos:line="94" pos:column="34">[<expr><name pos:line="94" pos:column="35">i</name></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
}</block></destructor>

<function><type><name pos:line="98" pos:column="1">void</name></type> <name><name pos:line="98" pos:column="6">DockingManager</name><op:operator pos:line="98" pos:column="20">::</op:operator><name pos:line="98" pos:column="22">init</name></name><parameter_list pos:line="98" pos:column="26">(<param><decl><type><name pos:line="98" pos:column="27">HINSTANCE</name></type> <name pos:line="98" pos:column="37">hInst</name></decl></param>, <param><decl><type><name pos:line="98" pos:column="44">HWND</name></type> <name pos:line="98" pos:column="49">hWnd</name></decl></param>, <param><decl><type><name pos:line="98" pos:column="55">Window</name> <type:modifier pos:line="98" pos:column="62">*</type:modifier><type:modifier pos:line="98" pos:column="63">*</type:modifier></type> <name pos:line="98" pos:column="65">ppWin</name></decl></param>)</parameter_list>
<block pos:line="99" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="100" pos:column="9">Window</name><op:operator pos:line="100" pos:column="15">::</op:operator><name pos:line="100" pos:column="17">init</name></name><argument_list pos:line="100" pos:column="21">(<argument><expr><name pos:line="100" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="100" pos:column="29">hWnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><op:operator pos:line="102" pos:column="13">!</op:operator><name pos:line="102" pos:column="14">_isRegistered</name></expr>)</condition><then pos:line="102" pos:column="28">
	<block pos:line="103" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="104" pos:column="17">WNDCLASS</name></type> <name pos:line="104" pos:column="26">clz</name></decl>;</decl_stmt>

		<expr_stmt><expr><name><name pos:line="106" pos:column="17">clz</name><op:operator pos:line="106" pos:column="20">.</op:operator><name pos:line="106" pos:column="21">style</name></name> <op:operator pos:line="106" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="106" pos:column="29">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="107" pos:column="17">clz</name><op:operator pos:line="107" pos:column="20">.</op:operator><name pos:line="107" pos:column="21">lpfnWndProc</name></name> <op:operator pos:line="107" pos:column="33">=</op:operator> <name pos:line="107" pos:column="35">staticWinProc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="108" pos:column="17">clz</name><op:operator pos:line="108" pos:column="20">.</op:operator><name pos:line="108" pos:column="21">cbClsExtra</name></name> <op:operator pos:line="108" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="108" pos:column="34">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="109" pos:column="17">clz</name><op:operator pos:line="109" pos:column="20">.</op:operator><name pos:line="109" pos:column="21">cbWndExtra</name></name> <op:operator pos:line="109" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="109" pos:column="34">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="110" pos:column="17">clz</name><op:operator pos:line="110" pos:column="20">.</op:operator><name pos:line="110" pos:column="21">hInstance</name></name> <op:operator pos:line="110" pos:column="31">=</op:operator> <name pos:line="110" pos:column="33">_hInst</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="111" pos:column="17">clz</name><op:operator pos:line="111" pos:column="20">.</op:operator><name pos:line="111" pos:column="21">hIcon</name></name> <op:operator pos:line="111" pos:column="27">=</op:operator> <name pos:line="111" pos:column="29">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="112" pos:column="17">clz</name><op:operator pos:line="112" pos:column="20">.</op:operator><name pos:line="112" pos:column="21">hCursor</name></name> <op:operator pos:line="112" pos:column="29">=</op:operator> <call><name><op:operator pos:line="112" pos:column="31">::</op:operator><name pos:line="112" pos:column="33">LoadCursor</name></name><argument_list pos:line="112" pos:column="43">(<argument><expr><name pos:line="112" pos:column="44">NULL</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="50">IDC_ARROW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="113" pos:column="17">clz</name><op:operator pos:line="113" pos:column="20">.</op:operator><name pos:line="113" pos:column="21">hbrBackground</name></name> <op:operator pos:line="113" pos:column="35">=</op:operator> <name pos:line="113" pos:column="37">NULL</name></expr>;</expr_stmt> 
		<expr_stmt><expr><name><name pos:line="114" pos:column="17">clz</name><op:operator pos:line="114" pos:column="20">.</op:operator><name pos:line="114" pos:column="21">lpszMenuName</name></name> <op:operator pos:line="114" pos:column="34">=</op:operator> <name pos:line="114" pos:column="36">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="115" pos:column="17">clz</name><op:operator pos:line="115" pos:column="20">.</op:operator><name pos:line="115" pos:column="21">lpszClassName</name></name> <op:operator pos:line="115" pos:column="35">=</op:operator> <name pos:line="115" pos:column="37">DSPC_CLASS_NAME</name></expr>;</expr_stmt>

		<if pos:line="117" pos:column="17">if <condition pos:line="117" pos:column="20">(<expr><op:operator pos:line="117" pos:column="21">!</op:operator><call><name><op:operator pos:line="117" pos:column="22">::</op:operator><name pos:line="117" pos:column="24">RegisterClass</name></name><argument_list pos:line="117" pos:column="37">(<argument><expr><op:operator pos:line="117" pos:column="38">&amp;</op:operator><name pos:line="117" pos:column="39">clz</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="117" pos:column="44">
		<block pos:line="118" pos:column="17">{
			<throw pos:line="119" pos:column="25">throw <expr><call><name><name pos:line="119" pos:column="31">std</name><op:operator pos:line="119" pos:column="34">::</op:operator><name pos:line="119" pos:column="36">runtime_error</name></name><argument_list pos:line="119" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="119" pos:column="50">"DockingManager::init : RegisterClass() function failed"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="121" pos:column="17">_isRegistered</name> <op:operator pos:line="121" pos:column="31">=</op:operator> <name pos:line="121" pos:column="33">TRUE</name></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="124" pos:column="9">_hSelf</name> <op:operator pos:line="124" pos:column="16">=</op:operator> <call><name><op:operator pos:line="124" pos:column="18">::</op:operator><name pos:line="124" pos:column="20">CreateWindowEx</name></name><argument_list pos:line="124" pos:column="34">(
					<argument><expr><lit:literal type="number" pos:line="125" pos:column="41">0</lit:literal></expr></argument>,
					<argument><expr><name pos:line="126" pos:column="41">DSPC_CLASS_NAME</name></expr></argument>,
					<argument><expr><call><name pos:line="127" pos:column="41">TEXT</name><argument_list pos:line="127" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="127" pos:column="46">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><name pos:line="128" pos:column="41">WS_CHILD</name> <op:operator pos:line="128" pos:column="50">|</op:operator> <name pos:line="128" pos:column="52">WS_CLIPCHILDREN</name></expr></argument>,
					<argument><expr><name pos:line="129" pos:column="41">CW_USEDEFAULT</name></expr></argument>, <argument><expr><name pos:line="129" pos:column="56">CW_USEDEFAULT</name></expr></argument>,
					<argument><expr><name pos:line="130" pos:column="41">CW_USEDEFAULT</name></expr></argument>, <argument><expr><name pos:line="130" pos:column="56">CW_USEDEFAULT</name></expr></argument>,
					<argument><expr><name pos:line="131" pos:column="41">_hParent</name></expr></argument>,
					<argument><expr><name pos:line="132" pos:column="41">NULL</name></expr></argument>,
					<argument><expr><name pos:line="133" pos:column="41">_hInst</name></expr></argument>,
					<argument><expr><op:operator pos:line="134" pos:column="41">(</op:operator><name pos:line="134" pos:column="42">LPVOID</name><op:operator pos:line="134" pos:column="48">)</op:operator><name pos:line="134" pos:column="49">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><op:operator pos:line="136" pos:column="13">!</op:operator><name pos:line="136" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="136" pos:column="21">
	<block pos:line="137" pos:column="9">{
		<throw pos:line="138" pos:column="17">throw <expr><call><name><name pos:line="138" pos:column="23">std</name><op:operator pos:line="138" pos:column="26">::</op:operator><name pos:line="138" pos:column="28">runtime_error</name></name><argument_list pos:line="138" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="42">"DockingManager::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="141" pos:column="9">setClientWnd</name><argument_list pos:line="141" pos:column="21">(<argument><expr><name pos:line="141" pos:column="22">ppWin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="143" pos:column="9">// create docking container</comment>
	<for pos:line="144" pos:column="9">for (<init><decl><type><name pos:line="144" pos:column="14">int</name></type> <name pos:line="144" pos:column="18">iCont</name> <init pos:line="144" pos:column="24">= <expr><lit:literal type="number" pos:line="144" pos:column="26">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="144" pos:column="29">iCont</name> <op:operator pos:line="144" pos:column="35">&lt;</op:operator> <name pos:line="144" pos:column="37">DOCKCONT_MAX</name></expr>;</condition> <incr><expr><name pos:line="144" pos:column="51">iCont</name><op:operator pos:line="144" pos:column="56">++</op:operator></expr></incr>)
	<block pos:line="145" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="146" pos:column="17">_vContainer</name><index pos:line="146" pos:column="28">[<expr><name pos:line="146" pos:column="29">iCont</name></expr>]</index></name><op:operator pos:line="146" pos:column="35">-&gt;</op:operator><call><name pos:line="146" pos:column="37">init</name><argument_list pos:line="146" pos:column="41">(<argument><expr><name pos:line="146" pos:column="42">_hInst</name></expr></argument>, <argument><expr><name pos:line="146" pos:column="50">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="147" pos:column="17">_vContainer</name><index pos:line="147" pos:column="28">[<expr><name pos:line="147" pos:column="29">iCont</name></expr>]</index></name><op:operator pos:line="147" pos:column="35">-&gt;</op:operator><call><name pos:line="147" pos:column="37">doDialog</name><argument_list pos:line="147" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="147" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="148" pos:column="17">::</op:operator><name pos:line="148" pos:column="19">SetParent</name></name><argument_list pos:line="148" pos:column="28">(<argument><expr><name><name pos:line="148" pos:column="29">_vContainer</name><index pos:line="148" pos:column="40">[<expr><name pos:line="148" pos:column="41">iCont</name></expr>]</index></name><op:operator pos:line="148" pos:column="47">-&gt;</op:operator><call><name pos:line="148" pos:column="49">getHSelf</name><argument_list pos:line="148" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="148" pos:column="61">_hParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="150" pos:column="17">if <condition pos:line="150" pos:column="20">(<expr><op:operator pos:line="150" pos:column="21">(</op:operator><name pos:line="150" pos:column="22">iCont</name> <op:operator pos:line="150" pos:column="28">==</op:operator> <name pos:line="150" pos:column="31">CONT_TOP</name><op:operator pos:line="150" pos:column="39">)</op:operator> <op:operator pos:line="150" pos:column="41">||</op:operator> <op:operator pos:line="150" pos:column="44">(</op:operator><name pos:line="150" pos:column="45">iCont</name> <op:operator pos:line="150" pos:column="51">==</op:operator> <name pos:line="150" pos:column="54">CONT_BOTTOM</name><op:operator pos:line="150" pos:column="65">)</op:operator></expr>)</condition><then pos:line="150" pos:column="67">
			<expr_stmt><expr><name><name pos:line="151" pos:column="25">_vSplitter</name><index pos:line="151" pos:column="35">[<expr><name pos:line="151" pos:column="36">iCont</name></expr>]</index></name><op:operator pos:line="151" pos:column="42">-&gt;</op:operator><call><name pos:line="151" pos:column="44">init</name><argument_list pos:line="151" pos:column="48">(<argument><expr><name pos:line="151" pos:column="49">_hInst</name></expr></argument>, <argument><expr><name pos:line="151" pos:column="57">_hParent</name></expr></argument>, <argument><expr><name pos:line="151" pos:column="67">_hSelf</name></expr></argument>, <argument><expr><name pos:line="151" pos:column="75">DMS_HORIZONTAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="152" pos:column="17">else
			<expr_stmt><expr><name><name pos:line="153" pos:column="25">_vSplitter</name><index pos:line="153" pos:column="35">[<expr><name pos:line="153" pos:column="36">iCont</name></expr>]</index></name><op:operator pos:line="153" pos:column="42">-&gt;</op:operator><call><name pos:line="153" pos:column="44">init</name><argument_list pos:line="153" pos:column="48">(<argument><expr><name pos:line="153" pos:column="49">_hInst</name></expr></argument>, <argument><expr><name pos:line="153" pos:column="57">_hParent</name></expr></argument>, <argument><expr><name pos:line="153" pos:column="67">_hSelf</name></expr></argument>, <argument><expr><name pos:line="153" pos:column="75">DMS_VERTICAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></for>
	<comment type="line" pos:line="155" pos:column="9">// register window event hooking</comment>
	<if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><op:operator pos:line="156" pos:column="13">!</op:operator><name pos:line="156" pos:column="14">hWndServer</name></expr>)</condition><then pos:line="156" pos:column="25">
		<expr_stmt><expr><name pos:line="157" pos:column="17">hWndServer</name> <op:operator pos:line="157" pos:column="28">=</op:operator> <name pos:line="157" pos:column="30">_hSelf</name></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name pos:line="158" pos:column="9">CoInitialize</name><argument_list pos:line="158" pos:column="21">(<argument><expr><name pos:line="158" pos:column="22">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><op:operator pos:line="159" pos:column="13">!</op:operator><name pos:line="159" pos:column="14">gWinCallHook</name></expr>)</condition><then pos:line="159" pos:column="27">	<comment type="line" pos:line="159" pos:column="33">//only set if not already done</comment>
		<expr_stmt><expr><name pos:line="160" pos:column="17">gWinCallHook</name> <op:operator pos:line="160" pos:column="30">=</op:operator> <call><name pos:line="160" pos:column="32">SetWindowsHookEx</name><argument_list pos:line="160" pos:column="48">(<argument><expr><name pos:line="160" pos:column="49">WH_CALLWNDPROC</name></expr></argument>, <argument><expr><name pos:line="160" pos:column="65">FocusWndProc</name></expr></argument>, <argument><expr><name pos:line="160" pos:column="79">hInst</name></expr></argument>, <argument><expr><call><name pos:line="160" pos:column="86">GetCurrentThreadId</name><argument_list pos:line="160" pos:column="104">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><op:operator pos:line="162" pos:column="13">!</op:operator><name pos:line="162" pos:column="14">gWinCallHook</name></expr>)</condition><then pos:line="162" pos:column="27">
	<block pos:line="163" pos:column="9">{
		<throw pos:line="164" pos:column="17">throw <expr><call><name><name pos:line="164" pos:column="23">std</name><op:operator pos:line="164" pos:column="26">::</op:operator><name pos:line="164" pos:column="28">runtime_error</name></name><argument_list pos:line="164" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="164" pos:column="42">"DockingManager::init : SetWindowsHookEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<expr_stmt><expr><name><name pos:line="167" pos:column="9">_dockData</name><op:operator pos:line="167" pos:column="18">.</op:operator><name pos:line="167" pos:column="19">hWnd</name></name> <op:operator pos:line="167" pos:column="24">=</op:operator> <name pos:line="167" pos:column="26">_hSelf</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="169" pos:column="9">_isInitialized</name> <op:operator pos:line="169" pos:column="24">=</op:operator> <name pos:line="169" pos:column="26">TRUE</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="172" pos:column="1">void</name></type> <name><name pos:line="172" pos:column="6">DockingManager</name><op:operator pos:line="172" pos:column="20">::</op:operator><name pos:line="172" pos:column="22">destroy</name></name><parameter_list pos:line="172" pos:column="29">()</parameter_list> 
<block pos:line="173" pos:column="1">{
	<expr_stmt><expr><call><name><op:operator pos:line="174" pos:column="9">::</op:operator><name pos:line="174" pos:column="11">DestroyWindow</name></name><argument_list pos:line="174" pos:column="24">(<argument><expr><name pos:line="174" pos:column="25">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="177" pos:column="1">LRESULT</name> <name pos:line="177" pos:column="9">CALLBACK</name></type> <name><name pos:line="177" pos:column="18">DockingManager</name><op:operator pos:line="177" pos:column="32">::</op:operator><name pos:line="177" pos:column="34">staticWinProc</name></name><parameter_list pos:line="177" pos:column="47">(<param><decl><type><name pos:line="177" pos:column="48">HWND</name></type> <name pos:line="177" pos:column="53">hwnd</name></decl></param>, <param><decl><type><name pos:line="177" pos:column="59">UINT</name></type> <name pos:line="177" pos:column="64">message</name></decl></param>, <param><decl><type><name pos:line="177" pos:column="73">WPARAM</name></type> <name pos:line="177" pos:column="80">wParam</name></decl></param>, <param><decl><type><name pos:line="177" pos:column="88">LPARAM</name></type> <name pos:line="177" pos:column="95">lParam</name></decl></param>)</parameter_list>
<block pos:line="178" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="179" pos:column="9">DockingManager</name> <type:modifier pos:line="179" pos:column="24">*</type:modifier></type><name pos:line="179" pos:column="25">pDockingManager</name> <init pos:line="179" pos:column="41">= <expr><name pos:line="179" pos:column="43">NULL</name></expr></init></decl>;</decl_stmt>
	<switch pos:line="180" pos:column="9">switch <condition pos:line="180" pos:column="16">(<expr><name pos:line="180" pos:column="17">message</name></expr>)</condition>
	<block pos:line="181" pos:column="9">{	
		<case pos:line="182" pos:column="17">case <expr><name pos:line="182" pos:column="22">WM_NCCREATE</name></expr> :
			<expr_stmt><expr><name pos:line="183" pos:column="25">pDockingManager</name> <op:operator pos:line="183" pos:column="41">=</op:operator> <op:operator pos:line="183" pos:column="43">(</op:operator><name pos:line="183" pos:column="44">DockingManager</name> <op:operator pos:line="183" pos:column="59">*</op:operator><op:operator pos:line="183" pos:column="60">)</op:operator><op:operator pos:line="183" pos:column="61">(</op:operator><op:operator pos:line="183" pos:column="62">(</op:operator><op:operator pos:line="183" pos:column="63">(</op:operator><name pos:line="183" pos:column="64">LPCREATESTRUCT</name><op:operator pos:line="183" pos:column="78">)</op:operator><name pos:line="183" pos:column="79">lParam</name><op:operator pos:line="183" pos:column="85">)</op:operator><op:operator pos:line="183" pos:column="86">-&gt;</op:operator><name pos:line="183" pos:column="88">lpCreateParams</name><op:operator pos:line="183" pos:column="102">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="184" pos:column="25">pDockingManager</name><op:operator pos:line="184" pos:column="40">-&gt;</op:operator><name pos:line="184" pos:column="42">_hSelf</name></name> <op:operator pos:line="184" pos:column="49">=</op:operator> <name pos:line="184" pos:column="51">hwnd</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="185" pos:column="25">::</op:operator><name pos:line="185" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="185" pos:column="43">(<argument><expr><name pos:line="185" pos:column="44">hwnd</name></expr></argument>, <argument><expr><name pos:line="185" pos:column="50">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="185" pos:column="65">(</op:operator><name pos:line="185" pos:column="66">LONG_PTR</name><op:operator pos:line="185" pos:column="74">)</op:operator><name pos:line="185" pos:column="75">pDockingManager</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="186" pos:column="25">return <expr><name pos:line="186" pos:column="32">TRUE</name></expr>;</return>

		</case><default pos:line="188" pos:column="17">default :
			<expr_stmt><expr><name pos:line="189" pos:column="25">pDockingManager</name> <op:operator pos:line="189" pos:column="41">=</op:operator> <op:operator pos:line="189" pos:column="43">(</op:operator><name pos:line="189" pos:column="44">DockingManager</name> <op:operator pos:line="189" pos:column="59">*</op:operator><op:operator pos:line="189" pos:column="60">)</op:operator><call><name><op:operator pos:line="189" pos:column="61">::</op:operator><name pos:line="189" pos:column="63">GetWindowLongPtr</name></name><argument_list pos:line="189" pos:column="79">(<argument><expr><name pos:line="189" pos:column="80">hwnd</name></expr></argument>, <argument><expr><name pos:line="189" pos:column="86">GWL_USERDATA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="190" pos:column="25">if <condition pos:line="190" pos:column="28">(<expr><op:operator pos:line="190" pos:column="29">!</op:operator><name pos:line="190" pos:column="30">pDockingManager</name></expr>)</condition><then pos:line="190" pos:column="46">
				<return pos:line="191" pos:column="33">return <expr><call><name><op:operator pos:line="191" pos:column="40">::</op:operator><name pos:line="191" pos:column="42">DefWindowProc</name></name><argument_list pos:line="191" pos:column="55">(<argument><expr><name pos:line="191" pos:column="56">hwnd</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="62">message</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="71">wParam</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
			<return pos:line="192" pos:column="25">return <expr><call><name><name pos:line="192" pos:column="32">pDockingManager</name><op:operator pos:line="192" pos:column="47">-&gt;</op:operator><name pos:line="192" pos:column="49">runProc</name></name><argument_list pos:line="192" pos:column="56">(<argument><expr><name pos:line="192" pos:column="57">hwnd</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="63">message</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="72">wParam</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="80">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="196" pos:column="1">void</name></type> <name><name pos:line="196" pos:column="6">DockingManager</name><op:operator pos:line="196" pos:column="20">::</op:operator><name pos:line="196" pos:column="22">updateContainerInfo</name></name><parameter_list pos:line="196" pos:column="41">(<param><decl><type><name pos:line="196" pos:column="42">HWND</name></type> <name pos:line="196" pos:column="47">hClient</name></decl></param>)</parameter_list> 
<block pos:line="197" pos:column="1">{
	<for pos:line="198" pos:column="9">for (<init><decl><type><name pos:line="198" pos:column="14">size_t</name></type> <name pos:line="198" pos:column="21">iCont</name> <init pos:line="198" pos:column="27">= <expr><lit:literal type="number" pos:line="198" pos:column="29">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="198" pos:column="32">iCont</name> <op:operator pos:line="198" pos:column="38">&lt;</op:operator> <call><name><name pos:line="198" pos:column="40">_vContainer</name><op:operator pos:line="198" pos:column="51">.</op:operator><name pos:line="198" pos:column="52">size</name></name><argument_list pos:line="198" pos:column="56">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="198" pos:column="60">iCont</name><op:operator pos:line="198" pos:column="65">++</op:operator></expr></incr>)
	<block pos:line="199" pos:column="9">{
		<if pos:line="200" pos:column="17">if <condition pos:line="200" pos:column="20">(<expr><name><name pos:line="200" pos:column="21">_vContainer</name><index pos:line="200" pos:column="32">[<expr><name pos:line="200" pos:column="33">iCont</name></expr>]</index></name><op:operator pos:line="200" pos:column="39">-&gt;</op:operator><call><name pos:line="200" pos:column="41">updateInfo</name><argument_list pos:line="200" pos:column="51">(<argument><expr><name pos:line="200" pos:column="52">hClient</name></expr></argument>)</argument_list></call> <op:operator pos:line="200" pos:column="61">==</op:operator> <name pos:line="200" pos:column="64">TRUE</name></expr>)</condition><then pos:line="200" pos:column="69">
		<block pos:line="201" pos:column="17">{
			<break pos:line="202" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="207" pos:column="1">void</name></type> <name><name pos:line="207" pos:column="6">DockingManager</name><op:operator pos:line="207" pos:column="20">::</op:operator><name pos:line="207" pos:column="22">showContainer</name></name><parameter_list pos:line="207" pos:column="35">(<param><decl><type><name pos:line="207" pos:column="36">HWND</name></type> <name pos:line="207" pos:column="41">hCont</name></decl></param>, <param><decl><type><name pos:line="207" pos:column="48">BOOL</name></type> <name pos:line="207" pos:column="53">view</name></decl></param>)</parameter_list> 
<block pos:line="208" pos:column="1">{
	<for pos:line="209" pos:column="9">for (<init><decl><type><name pos:line="209" pos:column="14">size_t</name></type> <name pos:line="209" pos:column="21">iCont</name> <init pos:line="209" pos:column="27">= <expr><lit:literal type="number" pos:line="209" pos:column="29">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="209" pos:column="32">iCont</name> <op:operator pos:line="209" pos:column="38">&lt;</op:operator> <call><name><name pos:line="209" pos:column="40">_vContainer</name><op:operator pos:line="209" pos:column="51">.</op:operator><name pos:line="209" pos:column="52">size</name></name><argument_list pos:line="209" pos:column="56">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="209" pos:column="60">iCont</name><op:operator pos:line="209" pos:column="65">++</op:operator></expr></incr>)
	<block pos:line="210" pos:column="9">{
		<if pos:line="211" pos:column="17">if <condition pos:line="211" pos:column="20">(<expr><name><name pos:line="211" pos:column="21">_vContainer</name><index pos:line="211" pos:column="32">[<expr><name pos:line="211" pos:column="33">iCont</name></expr>]</index></name><op:operator pos:line="211" pos:column="39">-&gt;</op:operator><call><name pos:line="211" pos:column="41">getHSelf</name><argument_list pos:line="211" pos:column="49">()</argument_list></call> <op:operator pos:line="211" pos:column="52">==</op:operator> <name pos:line="211" pos:column="55">hCont</name></expr>)</condition><then pos:line="211" pos:column="61">
			<expr_stmt><expr><call><name pos:line="212" pos:column="25">showContainer</name><argument_list pos:line="212" pos:column="38">(<argument><expr><name pos:line="212" pos:column="39">iCont</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="46">view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="216" pos:column="1">LRESULT</name></type> <name><name pos:line="216" pos:column="9">DockingManager</name><op:operator pos:line="216" pos:column="23">::</op:operator><name pos:line="216" pos:column="25">runProc</name></name><parameter_list pos:line="216" pos:column="32">(<param><decl><type><name pos:line="216" pos:column="33">HWND</name></type> <name pos:line="216" pos:column="38">hwnd</name></decl></param>, <param><decl><type><name pos:line="216" pos:column="44">UINT</name></type> <name pos:line="216" pos:column="49">message</name></decl></param>, <param><decl><type><name pos:line="216" pos:column="58">WPARAM</name></type> <name pos:line="216" pos:column="65">wParam</name></decl></param>, <param><decl><type><name pos:line="216" pos:column="73">LPARAM</name></type> <name pos:line="216" pos:column="80">lParam</name></decl></param>)</parameter_list>
<block pos:line="217" pos:column="1">{
	<switch pos:line="218" pos:column="9">switch <condition pos:line="218" pos:column="16">(<expr><name pos:line="218" pos:column="17">message</name></expr>)</condition>
	<block pos:line="219" pos:column="9">{
		<case pos:line="220" pos:column="17">case <expr><name pos:line="220" pos:column="22">WM_NCACTIVATE</name></expr>:
		<block pos:line="221" pos:column="17">{
			<comment type="line" pos:line="222" pos:column="25">// activate/deactivate titlebar of toolbars</comment>
			<for pos:line="223" pos:column="25">for (<init><decl><type><name pos:line="223" pos:column="30">size_t</name></type> <name pos:line="223" pos:column="37">iCont</name> <init pos:line="223" pos:column="43">= <expr><name pos:line="223" pos:column="45">DOCKCONT_MAX</name></expr></init></decl>;</init> <condition><expr><name pos:line="223" pos:column="59">iCont</name> <op:operator pos:line="223" pos:column="65">&lt;</op:operator> <call><name><name pos:line="223" pos:column="67">_vContainer</name><op:operator pos:line="223" pos:column="78">.</op:operator><name pos:line="223" pos:column="79">size</name></name><argument_list pos:line="223" pos:column="83">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="223" pos:column="87">iCont</name><op:operator pos:line="223" pos:column="92">++</op:operator></expr></incr>)
			<block pos:line="224" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="225" pos:column="33">::</op:operator><name pos:line="225" pos:column="35">SendMessage</name></name><argument_list pos:line="225" pos:column="46">(<argument><expr><name><name pos:line="225" pos:column="47">_vContainer</name><index pos:line="225" pos:column="58">[<expr><name pos:line="225" pos:column="59">iCont</name></expr>]</index></name><op:operator pos:line="225" pos:column="65">-&gt;</op:operator><call><name pos:line="225" pos:column="67">getHSelf</name><argument_list pos:line="225" pos:column="75">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="225" pos:column="79">WM_NCACTIVATE</name></expr></argument>, <argument><expr><name pos:line="225" pos:column="94">wParam</name></expr></argument>, <argument><expr><op:operator pos:line="225" pos:column="102">(</op:operator><name pos:line="225" pos:column="103">LPARAM</name><op:operator pos:line="225" pos:column="109">)</op:operator><op:operator pos:line="225" pos:column="110">-</op:operator><lit:literal type="number" pos:line="225" pos:column="111">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>

			<if pos:line="228" pos:column="25">if <condition pos:line="228" pos:column="28">(<expr><op:operator pos:line="228" pos:column="29">(</op:operator><name pos:line="228" pos:column="30">int</name><op:operator pos:line="228" pos:column="33">)</op:operator><name pos:line="228" pos:column="34">lParam</name> <op:operator pos:line="228" pos:column="41">!=</op:operator> <op:operator pos:line="228" pos:column="44">-</op:operator><lit:literal type="number" pos:line="228" pos:column="45">1</lit:literal></expr>)</condition><then pos:line="228" pos:column="47">
			<block pos:line="229" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="230" pos:column="33">::</op:operator><name pos:line="230" pos:column="35">SendMessage</name></name><argument_list pos:line="230" pos:column="46">(<argument><expr><name pos:line="230" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="230" pos:column="57">WM_NCACTIVATE</name></expr></argument>, <argument><expr><name pos:line="230" pos:column="72">wParam</name></expr></argument>, <argument><expr><op:operator pos:line="230" pos:column="80">(</op:operator><name pos:line="230" pos:column="81">LPARAM</name><op:operator pos:line="230" pos:column="87">)</op:operator><op:operator pos:line="230" pos:column="88">-</op:operator><lit:literal type="number" pos:line="230" pos:column="89">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<break pos:line="232" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="234" pos:column="17">case <expr><name pos:line="234" pos:column="22">WM_MOVE</name></expr>:
		</case><case pos:line="235" pos:column="17">case <expr><name pos:line="235" pos:column="22">WM_SIZE</name></expr>:
		<block pos:line="236" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="237" pos:column="25">onSize</name><argument_list pos:line="237" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="238" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="240" pos:column="17">case <expr><name pos:line="240" pos:column="22">WM_DESTROY</name></expr>:
		<block pos:line="241" pos:column="17">{
			<comment type="line" pos:line="242" pos:column="25">// unregister window event hooking BEFORE EVERYTHING ELSE</comment>
			<if pos:line="243" pos:column="25">if <condition pos:line="243" pos:column="28">(<expr><name pos:line="243" pos:column="29">hWndServer</name> <op:operator pos:line="243" pos:column="40">==</op:operator> <name pos:line="243" pos:column="43">hwnd</name></expr>)</condition><then pos:line="243" pos:column="48"> <block pos:line="243" pos:column="49">{
				<expr_stmt><expr><call><name pos:line="244" pos:column="33">UnhookWindowsHookEx</name><argument_list pos:line="244" pos:column="52">(<argument><expr><name pos:line="244" pos:column="53">gWinCallHook</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="245" pos:column="33">gWinCallHook</name> <op:operator pos:line="245" pos:column="46">=</op:operator> <name pos:line="245" pos:column="48">NULL</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="246" pos:column="33">hWndServer</name> <op:operator pos:line="246" pos:column="44">=</op:operator> <name pos:line="246" pos:column="46">NULL</name></expr>;</expr_stmt>
			}</block></then></if>

			<comment type="line" pos:line="249" pos:column="25">// destroy imagelist if it exists</comment>
			<if pos:line="250" pos:column="25">if <condition pos:line="250" pos:column="28">(<expr><name pos:line="250" pos:column="29">_hImageList</name> <op:operator pos:line="250" pos:column="41">!=</op:operator> <name pos:line="250" pos:column="44">NULL</name></expr>)</condition><then pos:line="250" pos:column="49">
			<block pos:line="251" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="252" pos:column="33">::</op:operator><name pos:line="252" pos:column="35">ImageList_Destroy</name></name><argument_list pos:line="252" pos:column="52">(<argument><expr><name pos:line="252" pos:column="53">_hImageList</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<comment type="line" pos:line="255" pos:column="25">// destroy containers</comment>
			<for pos:line="256" pos:column="25">for (<init><decl><type><name pos:line="256" pos:column="30">int</name></type> <name pos:line="256" pos:column="34">i</name> <init pos:line="256" pos:column="36">= <expr><call><name><name pos:line="256" pos:column="38">_vContainer</name><op:operator pos:line="256" pos:column="49">.</op:operator><name pos:line="256" pos:column="50">size</name></name><argument_list pos:line="256" pos:column="54">()</argument_list></call></expr></init></decl>;</init> <condition><expr><name pos:line="256" pos:column="58">i</name> <op:operator pos:line="256" pos:column="60">&gt;</op:operator> <lit:literal type="number" pos:line="256" pos:column="62">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="256" pos:column="65">i</name><op:operator pos:line="256" pos:column="66">--</op:operator></expr></incr>)
			<block pos:line="257" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="258" pos:column="33">_vContainer</name><index pos:line="258" pos:column="44">[<expr><name pos:line="258" pos:column="45">i</name><op:operator pos:line="258" pos:column="46">-</op:operator><lit:literal type="number" pos:line="258" pos:column="47">1</lit:literal></expr>]</index></name><op:operator pos:line="258" pos:column="49">-&gt;</op:operator><call><name pos:line="258" pos:column="51">destroy</name><argument_list pos:line="258" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="259" pos:column="33">delete</op:operator> <name><name pos:line="259" pos:column="40">_vContainer</name><index pos:line="259" pos:column="51">[<expr><name pos:line="259" pos:column="52">i</name><op:operator pos:line="259" pos:column="53">-</op:operator><lit:literal type="number" pos:line="259" pos:column="54">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><call><name pos:line="261" pos:column="25">CoUninitialize</name><argument_list pos:line="261" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="262" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="264" pos:column="17">case <expr><name pos:line="264" pos:column="22">DMM_LBUTTONUP</name></expr>:	<comment type="line" pos:line="264" pos:column="41">//is this message still relevant?</comment>
		<block pos:line="265" pos:column="17">{
			<if pos:line="266" pos:column="25">if <condition pos:line="266" pos:column="28">(<expr><call><name><op:operator pos:line="266" pos:column="29">::</op:operator><name pos:line="266" pos:column="31">GetActiveWindow</name></name><argument_list pos:line="266" pos:column="46">()</argument_list></call> <op:operator pos:line="266" pos:column="49">!=</op:operator> <name pos:line="266" pos:column="52">_hParent</name></expr>)</condition><then pos:line="266" pos:column="61">
				<break pos:line="267" pos:column="33">break;</break></then></if>

			<comment type="line" pos:line="269" pos:column="25">// set respective activate state</comment>
			<for pos:line="270" pos:column="25">for (<init><decl><type><name pos:line="270" pos:column="30">int</name></type> <name pos:line="270" pos:column="34">i</name> <init pos:line="270" pos:column="36">= <expr><lit:literal type="number" pos:line="270" pos:column="38">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="270" pos:column="41">i</name> <op:operator pos:line="270" pos:column="43">&lt;</op:operator> <name pos:line="270" pos:column="45">DOCKCONT_MAX</name></expr>;</condition> <incr><expr><name pos:line="270" pos:column="59">i</name><op:operator pos:line="270" pos:column="60">++</op:operator></expr></incr>)
			<block pos:line="271" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="272" pos:column="33">_vContainer</name><index pos:line="272" pos:column="44">[<expr><name pos:line="272" pos:column="45">i</name></expr>]</index></name><op:operator pos:line="272" pos:column="47">-&gt;</op:operator><call><name pos:line="272" pos:column="49">SetActive</name><argument_list pos:line="272" pos:column="58">(<argument><expr><call><name pos:line="272" pos:column="59">IsChild</name><argument_list pos:line="272" pos:column="66">(<argument><expr><name><name pos:line="272" pos:column="67">_vContainer</name><index pos:line="272" pos:column="78">[<expr><name pos:line="272" pos:column="79">i</name></expr>]</index></name><op:operator pos:line="272" pos:column="81">-&gt;</op:operator><call><name pos:line="272" pos:column="83">getHSelf</name><argument_list pos:line="272" pos:column="91">()</argument_list></call></expr></argument>, <argument><expr><call><name><op:operator pos:line="272" pos:column="95">::</op:operator><name pos:line="272" pos:column="97">GetFocus</name></name><argument_list pos:line="272" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<return pos:line="274" pos:column="25">return <expr><name pos:line="274" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="277" pos:column="17">case <expr><name pos:line="277" pos:column="22">DMM_MOVE</name></expr>:
		<block pos:line="278" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="279" pos:column="25">Gripper</name> <type:modifier pos:line="279" pos:column="33">*</type:modifier></type><name pos:line="279" pos:column="34">pGripper</name> <init pos:line="279" pos:column="43">= <expr><op:operator pos:line="279" pos:column="45">new</op:operator> <name pos:line="279" pos:column="49">Gripper</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="280" pos:column="25">pGripper</name><op:operator pos:line="280" pos:column="33">-&gt;</op:operator><name pos:line="280" pos:column="35">init</name></name><argument_list pos:line="280" pos:column="39">(<argument><expr><name pos:line="280" pos:column="40">_hInst</name></expr></argument>, <argument><expr><name pos:line="280" pos:column="48">_hParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="281" pos:column="25">pGripper</name><op:operator pos:line="281" pos:column="33">-&gt;</op:operator><name pos:line="281" pos:column="35">startGrip</name></name><argument_list pos:line="281" pos:column="44">(<argument><expr><op:operator pos:line="281" pos:column="45">(</op:operator><name pos:line="281" pos:column="46">DockingCont</name><op:operator pos:line="281" pos:column="57">*</op:operator><op:operator pos:line="281" pos:column="58">)</op:operator><name pos:line="281" pos:column="59">lParam</name></expr></argument>, <argument><expr><name pos:line="281" pos:column="67">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="282" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="285" pos:column="17">case <expr><name pos:line="285" pos:column="22">DMM_MOVE_SPLITTER</name></expr>:
		<block pos:line="286" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="287" pos:column="25">int</name></type> <name pos:line="287" pos:column="29">offset</name> <init pos:line="287" pos:column="36">= <expr><name pos:line="287" pos:column="38">wParam</name></expr></init></decl>;</decl_stmt>

			<for pos:line="289" pos:column="25">for (<init><decl><type><name pos:line="289" pos:column="30">int</name></type> <name pos:line="289" pos:column="34">iCont</name> <init pos:line="289" pos:column="40">= <expr><lit:literal type="number" pos:line="289" pos:column="42">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="289" pos:column="45">iCont</name> <op:operator pos:line="289" pos:column="51">&lt;</op:operator> <name pos:line="289" pos:column="53">DOCKCONT_MAX</name></expr>;</condition> <incr><expr><name pos:line="289" pos:column="67">iCont</name><op:operator pos:line="289" pos:column="72">++</op:operator></expr></incr>)
			<block pos:line="290" pos:column="25">{
				<if pos:line="291" pos:column="33">if <condition pos:line="291" pos:column="36">(<expr><name><name pos:line="291" pos:column="37">_vSplitter</name><index pos:line="291" pos:column="47">[<expr><name pos:line="291" pos:column="48">iCont</name></expr>]</index></name><op:operator pos:line="291" pos:column="54">-&gt;</op:operator><call><name pos:line="291" pos:column="56">getHSelf</name><argument_list pos:line="291" pos:column="64">()</argument_list></call> <op:operator pos:line="291" pos:column="67">==</op:operator> <op:operator pos:line="291" pos:column="70">(</op:operator><name pos:line="291" pos:column="71">HWND</name><op:operator pos:line="291" pos:column="75">)</op:operator><name pos:line="291" pos:column="76">lParam</name></expr>)</condition><then pos:line="291" pos:column="83">
				<block pos:line="292" pos:column="33">{
					<switch pos:line="293" pos:column="41">switch <condition pos:line="293" pos:column="48">(<expr><name pos:line="293" pos:column="49">iCont</name></expr>)</condition>
					<block pos:line="294" pos:column="41">{
						<case pos:line="295" pos:column="49">case <expr><name pos:line="295" pos:column="54">CONT_TOP</name></expr>:
							<expr_stmt><expr><name><name pos:line="296" pos:column="57">_dockData</name><op:operator pos:line="296" pos:column="66">.</op:operator><name pos:line="296" pos:column="67">rcRegion</name><index pos:line="296" pos:column="75">[<expr><name pos:line="296" pos:column="76">iCont</name></expr>]</index></name><op:operator pos:line="296" pos:column="82">.</op:operator><name pos:line="296" pos:column="83">bottom</name> <op:operator pos:line="296" pos:column="90">-=</op:operator> <name pos:line="296" pos:column="93">offset</name></expr>;</expr_stmt>
							<if pos:line="297" pos:column="57">if <condition pos:line="297" pos:column="60">(<expr><name><name pos:line="297" pos:column="61">_dockData</name><op:operator pos:line="297" pos:column="70">.</op:operator><name pos:line="297" pos:column="71">rcRegion</name><index pos:line="297" pos:column="79">[<expr><name pos:line="297" pos:column="80">iCont</name></expr>]</index></name><op:operator pos:line="297" pos:column="86">.</op:operator><name pos:line="297" pos:column="87">bottom</name> <op:operator pos:line="297" pos:column="94">&lt;</op:operator> <lit:literal type="number" pos:line="297" pos:column="96">0</lit:literal></expr>)</condition><then pos:line="297" pos:column="98">
							<block pos:line="298" pos:column="57">{
								<expr_stmt><expr><name><name pos:line="299" pos:column="65">_dockData</name><op:operator pos:line="299" pos:column="74">.</op:operator><name pos:line="299" pos:column="75">rcRegion</name><index pos:line="299" pos:column="83">[<expr><name pos:line="299" pos:column="84">iCont</name></expr>]</index></name><op:operator pos:line="299" pos:column="90">.</op:operator><name pos:line="299" pos:column="91">bottom</name> <op:operator pos:line="299" pos:column="98">=</op:operator> <lit:literal type="number" pos:line="299" pos:column="100">0</lit:literal></expr>;</expr_stmt>
							}</block></then></if>
							<if pos:line="301" pos:column="57">if <condition pos:line="301" pos:column="60">(<expr><op:operator pos:line="301" pos:column="61">(</op:operator><name><name pos:line="301" pos:column="62">_rcWork</name><op:operator pos:line="301" pos:column="69">.</op:operator><name pos:line="301" pos:column="70">bottom</name></name> <op:operator pos:line="301" pos:column="77">&lt;</op:operator> <op:operator pos:line="301" pos:column="79">(</op:operator><op:operator pos:line="301" pos:column="80">-</op:operator><name pos:line="301" pos:column="81">SPLITTER_WIDTH</name><op:operator pos:line="301" pos:column="95">)</op:operator><op:operator pos:line="301" pos:column="96">)</op:operator> <op:operator pos:line="301" pos:column="98">&amp;&amp;</op:operator> <op:operator pos:line="301" pos:column="101">(</op:operator><name pos:line="301" pos:column="102">offset</name> <op:operator pos:line="301" pos:column="109">&lt;</op:operator> <lit:literal type="number" pos:line="301" pos:column="111">0</lit:literal><op:operator pos:line="301" pos:column="112">)</op:operator></expr>)</condition><then pos:line="301" pos:column="114">
							<block pos:line="302" pos:column="57">{
								<expr_stmt><expr><name><name pos:line="303" pos:column="65">_dockData</name><op:operator pos:line="303" pos:column="74">.</op:operator><name pos:line="303" pos:column="75">rcRegion</name><index pos:line="303" pos:column="83">[<expr><name pos:line="303" pos:column="84">iCont</name></expr>]</index></name><op:operator pos:line="303" pos:column="90">.</op:operator><name pos:line="303" pos:column="91">bottom</name> <op:operator pos:line="303" pos:column="98">+=</op:operator> <name pos:line="303" pos:column="101">offset</name></expr>;</expr_stmt>
							}</block></then></if>
							<break pos:line="305" pos:column="57">break;</break>
						</case><case pos:line="306" pos:column="49">case <expr><name pos:line="306" pos:column="54">CONT_BOTTOM</name></expr>:
							<expr_stmt><expr><name><name pos:line="307" pos:column="57">_dockData</name><op:operator pos:line="307" pos:column="66">.</op:operator><name pos:line="307" pos:column="67">rcRegion</name><index pos:line="307" pos:column="75">[<expr><name pos:line="307" pos:column="76">iCont</name></expr>]</index></name><op:operator pos:line="307" pos:column="82">.</op:operator><name pos:line="307" pos:column="83">bottom</name>   <op:operator pos:line="307" pos:column="92">+=</op:operator> <name pos:line="307" pos:column="95">offset</name></expr>;</expr_stmt>
							<if pos:line="308" pos:column="57">if <condition pos:line="308" pos:column="60">(<expr><name><name pos:line="308" pos:column="61">_dockData</name><op:operator pos:line="308" pos:column="70">.</op:operator><name pos:line="308" pos:column="71">rcRegion</name><index pos:line="308" pos:column="79">[<expr><name pos:line="308" pos:column="80">iCont</name></expr>]</index></name><op:operator pos:line="308" pos:column="86">.</op:operator><name pos:line="308" pos:column="87">bottom</name> <op:operator pos:line="308" pos:column="94">&lt;</op:operator> <lit:literal type="number" pos:line="308" pos:column="96">0</lit:literal></expr>)</condition><then pos:line="308" pos:column="98">
							<block pos:line="309" pos:column="57">{
								<expr_stmt><expr><name><name pos:line="310" pos:column="65">_dockData</name><op:operator pos:line="310" pos:column="74">.</op:operator><name pos:line="310" pos:column="75">rcRegion</name><index pos:line="310" pos:column="83">[<expr><name pos:line="310" pos:column="84">iCont</name></expr>]</index></name><op:operator pos:line="310" pos:column="90">.</op:operator><name pos:line="310" pos:column="91">bottom</name>   <op:operator pos:line="310" pos:column="100">=</op:operator> <lit:literal type="number" pos:line="310" pos:column="102">0</lit:literal></expr>;</expr_stmt>
							}</block></then></if>
							<if pos:line="312" pos:column="57">if <condition pos:line="312" pos:column="60">(<expr><op:operator pos:line="312" pos:column="61">(</op:operator><name><name pos:line="312" pos:column="62">_rcWork</name><op:operator pos:line="312" pos:column="69">.</op:operator><name pos:line="312" pos:column="70">bottom</name></name> <op:operator pos:line="312" pos:column="77">&lt;</op:operator> <op:operator pos:line="312" pos:column="79">(</op:operator><op:operator pos:line="312" pos:column="80">-</op:operator><name pos:line="312" pos:column="81">SPLITTER_WIDTH</name><op:operator pos:line="312" pos:column="95">)</op:operator><op:operator pos:line="312" pos:column="96">)</op:operator> <op:operator pos:line="312" pos:column="98">&amp;&amp;</op:operator> <op:operator pos:line="312" pos:column="101">(</op:operator><name pos:line="312" pos:column="102">offset</name> <op:operator pos:line="312" pos:column="109">&gt;</op:operator> <lit:literal type="number" pos:line="312" pos:column="111">0</lit:literal><op:operator pos:line="312" pos:column="112">)</op:operator></expr>)</condition><then pos:line="312" pos:column="114">
							<block pos:line="313" pos:column="57">{
								<expr_stmt><expr><name><name pos:line="314" pos:column="65">_dockData</name><op:operator pos:line="314" pos:column="74">.</op:operator><name pos:line="314" pos:column="75">rcRegion</name><index pos:line="314" pos:column="83">[<expr><name pos:line="314" pos:column="84">iCont</name></expr>]</index></name><op:operator pos:line="314" pos:column="90">.</op:operator><name pos:line="314" pos:column="91">bottom</name> <op:operator pos:line="314" pos:column="98">-=</op:operator> <name pos:line="314" pos:column="101">offset</name></expr>;</expr_stmt>
							}</block></then></if>
							<break pos:line="316" pos:column="57">break;</break>
						</case><case pos:line="317" pos:column="49">case <expr><name pos:line="317" pos:column="54">CONT_LEFT</name></expr>:
							<expr_stmt><expr><name><name pos:line="318" pos:column="57">_dockData</name><op:operator pos:line="318" pos:column="66">.</op:operator><name pos:line="318" pos:column="67">rcRegion</name><index pos:line="318" pos:column="75">[<expr><name pos:line="318" pos:column="76">iCont</name></expr>]</index></name><op:operator pos:line="318" pos:column="82">.</op:operator><name pos:line="318" pos:column="83">right</name>    <op:operator pos:line="318" pos:column="92">-=</op:operator> <name pos:line="318" pos:column="95">offset</name></expr>;</expr_stmt>
							<if pos:line="319" pos:column="57">if <condition pos:line="319" pos:column="60">(<expr><name><name pos:line="319" pos:column="61">_dockData</name><op:operator pos:line="319" pos:column="70">.</op:operator><name pos:line="319" pos:column="71">rcRegion</name><index pos:line="319" pos:column="79">[<expr><name pos:line="319" pos:column="80">iCont</name></expr>]</index></name><op:operator pos:line="319" pos:column="86">.</op:operator><name pos:line="319" pos:column="87">right</name> <op:operator pos:line="319" pos:column="93">&lt;</op:operator> <lit:literal type="number" pos:line="319" pos:column="95">0</lit:literal></expr>)</condition><then pos:line="319" pos:column="97">
							<block pos:line="320" pos:column="57">{
								<expr_stmt><expr><name><name pos:line="321" pos:column="65">_dockData</name><op:operator pos:line="321" pos:column="74">.</op:operator><name pos:line="321" pos:column="75">rcRegion</name><index pos:line="321" pos:column="83">[<expr><name pos:line="321" pos:column="84">iCont</name></expr>]</index></name><op:operator pos:line="321" pos:column="90">.</op:operator><name pos:line="321" pos:column="91">right</name> <op:operator pos:line="321" pos:column="97">=</op:operator> <lit:literal type="number" pos:line="321" pos:column="99">0</lit:literal></expr>;</expr_stmt>
							}</block></then></if>
							<if pos:line="323" pos:column="57">if <condition pos:line="323" pos:column="60">(<expr><op:operator pos:line="323" pos:column="61">(</op:operator><name><name pos:line="323" pos:column="62">_rcWork</name><op:operator pos:line="323" pos:column="69">.</op:operator><name pos:line="323" pos:column="70">right</name></name> <op:operator pos:line="323" pos:column="76">&lt;</op:operator> <name pos:line="323" pos:column="78">SPLITTER_WIDTH</name><op:operator pos:line="323" pos:column="92">)</op:operator> <op:operator pos:line="323" pos:column="94">&amp;&amp;</op:operator> <op:operator pos:line="323" pos:column="97">(</op:operator><name pos:line="323" pos:column="98">offset</name> <op:operator pos:line="323" pos:column="105">&lt;</op:operator> <lit:literal type="number" pos:line="323" pos:column="107">0</lit:literal><op:operator pos:line="323" pos:column="108">)</op:operator></expr>)</condition><then pos:line="323" pos:column="110">
							<block pos:line="324" pos:column="57">{
								<expr_stmt><expr><name><name pos:line="325" pos:column="65">_dockData</name><op:operator pos:line="325" pos:column="74">.</op:operator><name pos:line="325" pos:column="75">rcRegion</name><index pos:line="325" pos:column="83">[<expr><name pos:line="325" pos:column="84">iCont</name></expr>]</index></name><op:operator pos:line="325" pos:column="90">.</op:operator><name pos:line="325" pos:column="91">right</name> <op:operator pos:line="325" pos:column="97">+=</op:operator> <name pos:line="325" pos:column="100">offset</name></expr>;</expr_stmt>
							}</block></then></if>
							<break pos:line="327" pos:column="57">break;</break>
						</case><case pos:line="328" pos:column="49">case <expr><name pos:line="328" pos:column="54">CONT_RIGHT</name></expr>:
							<expr_stmt><expr><name><name pos:line="329" pos:column="57">_dockData</name><op:operator pos:line="329" pos:column="66">.</op:operator><name pos:line="329" pos:column="67">rcRegion</name><index pos:line="329" pos:column="75">[<expr><name pos:line="329" pos:column="76">iCont</name></expr>]</index></name><op:operator pos:line="329" pos:column="82">.</op:operator><name pos:line="329" pos:column="83">right</name>    <op:operator pos:line="329" pos:column="92">+=</op:operator> <name pos:line="329" pos:column="95">offset</name></expr>;</expr_stmt>
							<if pos:line="330" pos:column="57">if <condition pos:line="330" pos:column="60">(<expr><name><name pos:line="330" pos:column="61">_dockData</name><op:operator pos:line="330" pos:column="70">.</op:operator><name pos:line="330" pos:column="71">rcRegion</name><index pos:line="330" pos:column="79">[<expr><name pos:line="330" pos:column="80">iCont</name></expr>]</index></name><op:operator pos:line="330" pos:column="86">.</op:operator><name pos:line="330" pos:column="87">right</name> <op:operator pos:line="330" pos:column="93">&lt;</op:operator> <lit:literal type="number" pos:line="330" pos:column="95">0</lit:literal></expr>)</condition><then pos:line="330" pos:column="97">
							<block pos:line="331" pos:column="57">{
								<expr_stmt><expr><name><name pos:line="332" pos:column="65">_dockData</name><op:operator pos:line="332" pos:column="74">.</op:operator><name pos:line="332" pos:column="75">rcRegion</name><index pos:line="332" pos:column="83">[<expr><name pos:line="332" pos:column="84">iCont</name></expr>]</index></name><op:operator pos:line="332" pos:column="90">.</op:operator><name pos:line="332" pos:column="91">right</name> <op:operator pos:line="332" pos:column="97">=</op:operator> <lit:literal type="number" pos:line="332" pos:column="99">0</lit:literal></expr>;</expr_stmt>
							}</block></then></if>
							<if pos:line="334" pos:column="57">if <condition pos:line="334" pos:column="60">(<expr><op:operator pos:line="334" pos:column="61">(</op:operator><name><name pos:line="334" pos:column="62">_rcWork</name><op:operator pos:line="334" pos:column="69">.</op:operator><name pos:line="334" pos:column="70">right</name></name> <op:operator pos:line="334" pos:column="76">&lt;</op:operator> <name pos:line="334" pos:column="78">SPLITTER_WIDTH</name><op:operator pos:line="334" pos:column="92">)</op:operator> <op:operator pos:line="334" pos:column="94">&amp;&amp;</op:operator> <op:operator pos:line="334" pos:column="97">(</op:operator><name pos:line="334" pos:column="98">offset</name> <op:operator pos:line="334" pos:column="105">&gt;</op:operator> <lit:literal type="number" pos:line="334" pos:column="107">0</lit:literal><op:operator pos:line="334" pos:column="108">)</op:operator></expr>)</condition><then pos:line="334" pos:column="110">
							<block pos:line="335" pos:column="57">{
								<expr_stmt><expr><name><name pos:line="336" pos:column="65">_dockData</name><op:operator pos:line="336" pos:column="74">.</op:operator><name pos:line="336" pos:column="75">rcRegion</name><index pos:line="336" pos:column="83">[<expr><name pos:line="336" pos:column="84">iCont</name></expr>]</index></name><op:operator pos:line="336" pos:column="90">.</op:operator><name pos:line="336" pos:column="91">right</name> <op:operator pos:line="336" pos:column="97">-=</op:operator> <name pos:line="336" pos:column="100">offset</name></expr>;</expr_stmt>
							}</block></then></if>
							<break pos:line="338" pos:column="57">break;</break>
					</case>}</block></switch>
					<expr_stmt><expr><call><name pos:line="340" pos:column="41">onSize</name><argument_list pos:line="340" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
					<break pos:line="341" pos:column="41">break;</break>
				}</block></then></if>
			}</block></for>
			<break pos:line="344" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="346" pos:column="17">case <expr><name pos:line="346" pos:column="22">DMM_DOCK</name></expr>:
		</case><case pos:line="347" pos:column="17">case <expr><name pos:line="347" pos:column="22">DMM_FLOAT</name></expr>:
		<block pos:line="348" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="349" pos:column="25">toggleActiveTb</name><argument_list pos:line="349" pos:column="39">(<argument><expr><op:operator pos:line="349" pos:column="40">(</op:operator><name pos:line="349" pos:column="41">DockingCont</name><op:operator pos:line="349" pos:column="52">*</op:operator><op:operator pos:line="349" pos:column="53">)</op:operator><name pos:line="349" pos:column="54">lParam</name></expr></argument>, <argument><expr><name pos:line="349" pos:column="62">message</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="350" pos:column="25">return <expr><name pos:line="350" pos:column="32">FALSE</name></expr>;</return>
		}</block>
		</case><case pos:line="352" pos:column="17">case <expr><name pos:line="352" pos:column="22">DMM_CLOSE</name></expr>:
		<block pos:line="353" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="354" pos:column="25">tTbData</name></type>	<name pos:line="354" pos:column="33">TbData</name>	<init pos:line="354" pos:column="41">= <expr><op:operator pos:line="354" pos:column="43">*</op:operator><op:operator pos:line="354" pos:column="44">(</op:operator><op:operator pos:line="354" pos:column="45">(</op:operator><name pos:line="354" pos:column="46">DockingCont</name><op:operator pos:line="354" pos:column="57">*</op:operator><op:operator pos:line="354" pos:column="58">)</op:operator><name pos:line="354" pos:column="59">lParam</name><op:operator pos:line="354" pos:column="65">)</op:operator><op:operator pos:line="354" pos:column="66">-&gt;</op:operator><call><name pos:line="354" pos:column="68">getDataOfActiveTb</name><argument_list pos:line="354" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="355" pos:column="25">return <expr><call><name pos:line="355" pos:column="32">SendNotify</name><argument_list pos:line="355" pos:column="42">(<argument><expr><name><name pos:line="355" pos:column="43">TbData</name><op:operator pos:line="355" pos:column="49">.</op:operator><name pos:line="355" pos:column="50">hClient</name></name></expr></argument>, <argument><expr><name pos:line="355" pos:column="59">DMN_CLOSE</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
		</case><case pos:line="357" pos:column="17">case <expr><name pos:line="357" pos:column="22">DMM_FLOATALL</name></expr>:
		<block pos:line="358" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="359" pos:column="25">toggleVisTb</name><argument_list pos:line="359" pos:column="36">(<argument><expr><op:operator pos:line="359" pos:column="37">(</op:operator><name pos:line="359" pos:column="38">DockingCont</name><op:operator pos:line="359" pos:column="49">*</op:operator><op:operator pos:line="359" pos:column="50">)</op:operator><name pos:line="359" pos:column="51">lParam</name></expr></argument>, <argument><expr><name pos:line="359" pos:column="59">DMM_FLOAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="360" pos:column="25">return <expr><name pos:line="360" pos:column="32">FALSE</name></expr>;</return>
		}</block>
		</case><case pos:line="362" pos:column="17">case <expr><name pos:line="362" pos:column="22">DMM_DOCKALL</name></expr>:
		<block pos:line="363" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="364" pos:column="25">toggleVisTb</name><argument_list pos:line="364" pos:column="36">(<argument><expr><op:operator pos:line="364" pos:column="37">(</op:operator><name pos:line="364" pos:column="38">DockingCont</name><op:operator pos:line="364" pos:column="49">*</op:operator><op:operator pos:line="364" pos:column="50">)</op:operator><name pos:line="364" pos:column="51">lParam</name></expr></argument>, <argument><expr><name pos:line="364" pos:column="59">DMM_DOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="365" pos:column="25">return <expr><name pos:line="365" pos:column="32">FALSE</name></expr>;</return>
		}</block>
		</case><case pos:line="367" pos:column="17">case <expr><name pos:line="367" pos:column="22">DMM_GETIMAGELIST</name></expr>:
		<block pos:line="368" pos:column="17">{
			<return pos:line="369" pos:column="25">return <expr><op:operator pos:line="369" pos:column="32">(</op:operator><name pos:line="369" pos:column="33">LPARAM</name><op:operator pos:line="369" pos:column="39">)</op:operator><name pos:line="369" pos:column="40">_hImageList</name></expr>;</return>
		}</block>
		</case><case pos:line="371" pos:column="17">case <expr><name pos:line="371" pos:column="22">DMM_GETICONPOS</name></expr>:
		<block pos:line="372" pos:column="17">{
			<for pos:line="373" pos:column="25">for (<init><decl><type><name pos:line="373" pos:column="30">UINT</name></type> <name pos:line="373" pos:column="35">uImageCnt</name> <init pos:line="373" pos:column="45">= <expr><lit:literal type="number" pos:line="373" pos:column="47">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="373" pos:column="50">uImageCnt</name> <op:operator pos:line="373" pos:column="60">&lt;</op:operator> <call><name><name pos:line="373" pos:column="62">_vImageList</name><op:operator pos:line="373" pos:column="73">.</op:operator><name pos:line="373" pos:column="74">size</name></name><argument_list pos:line="373" pos:column="78">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="373" pos:column="82">uImageCnt</name><op:operator pos:line="373" pos:column="91">++</op:operator></expr></incr>)
			<block pos:line="374" pos:column="25">{
				<if pos:line="375" pos:column="33">if <condition pos:line="375" pos:column="36">(<expr><op:operator pos:line="375" pos:column="37">(</op:operator><name pos:line="375" pos:column="38">HWND</name><op:operator pos:line="375" pos:column="42">)</op:operator><name pos:line="375" pos:column="43">lParam</name> <op:operator pos:line="375" pos:column="50">==</op:operator> <name><name pos:line="375" pos:column="53">_vImageList</name><index pos:line="375" pos:column="64">[<expr><name pos:line="375" pos:column="65">uImageCnt</name></expr>]</index></name></expr>)</condition><then pos:line="375" pos:column="76">
				<block pos:line="376" pos:column="33">{
					<return pos:line="377" pos:column="41">return <expr><name pos:line="377" pos:column="48">uImageCnt</name></expr>;</return>
				}</block></then></if>
			}</block></for>
			<return pos:line="380" pos:column="25">return <expr><op:operator pos:line="380" pos:column="32">-</op:operator><lit:literal type="number" pos:line="380" pos:column="33">1</lit:literal></expr>;</return>
		}</block>
		</case><default pos:line="382" pos:column="17">default :
			<break pos:line="383" pos:column="25">break;</break>
	</default>}</block></switch>

	<return pos:line="386" pos:column="9">return <expr><call><name><op:operator pos:line="386" pos:column="16">::</op:operator><name pos:line="386" pos:column="18">DefWindowProc</name></name><argument_list pos:line="386" pos:column="31">(<argument><expr><name pos:line="386" pos:column="32">_hSelf</name></expr></argument>, <argument><expr><name pos:line="386" pos:column="40">message</name></expr></argument>, <argument><expr><name pos:line="386" pos:column="49">wParam</name></expr></argument>, <argument><expr><name pos:line="386" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="389" pos:column="1">void</name></type> <name><name pos:line="389" pos:column="6">DockingManager</name><op:operator pos:line="389" pos:column="20">::</op:operator><name pos:line="389" pos:column="22">onSize</name></name><parameter_list pos:line="389" pos:column="28">()</parameter_list>
<block pos:line="390" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="391" pos:column="5">reSizeTo</name><argument_list pos:line="391" pos:column="13">(<argument><expr><name pos:line="391" pos:column="14">_rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="394" pos:column="1">void</name></type> <name><name pos:line="394" pos:column="6">DockingManager</name><op:operator pos:line="394" pos:column="20">::</op:operator><name pos:line="394" pos:column="22">reSizeTo</name></name><parameter_list pos:line="394" pos:column="30">(<param><decl><type><name pos:line="394" pos:column="31">RECT</name> <type:modifier pos:line="394" pos:column="36">&amp;</type:modifier></type> <name pos:line="394" pos:column="38">rc</name></decl></param>)</parameter_list>
<block pos:line="395" pos:column="1">{
	<comment type="line" pos:line="396" pos:column="9">// store current size of client area</comment>
	<expr_stmt><expr><name pos:line="397" pos:column="9">_rect</name> <op:operator pos:line="397" pos:column="15">=</op:operator> <name pos:line="397" pos:column="17">rc</name></expr>;</expr_stmt>

	<comment type="line" pos:line="399" pos:column="9">// prepare size of work area</comment>
	<expr_stmt><expr><name pos:line="400" pos:column="9">_rcWork</name>	<op:operator pos:line="400" pos:column="17">=</op:operator> <name pos:line="400" pos:column="19">rc</name></expr>;</expr_stmt>

	<if pos:line="402" pos:column="9">if <condition pos:line="402" pos:column="12">(<expr><name pos:line="402" pos:column="13">_isInitialized</name> <op:operator pos:line="402" pos:column="28">==</op:operator> <name pos:line="402" pos:column="31">FALSE</name></expr>)</condition><then pos:line="402" pos:column="37">
		<return pos:line="403" pos:column="17">return;</return></then></if>

	<comment type="line" pos:line="405" pos:column="9">// set top container</comment>
	<expr_stmt><expr><name><name pos:line="406" pos:column="9">_dockData</name><op:operator pos:line="406" pos:column="18">.</op:operator><name pos:line="406" pos:column="19">rcRegion</name><index pos:line="406" pos:column="27">[<expr><name pos:line="406" pos:column="28">CONT_TOP</name></expr>]</index></name><op:operator pos:line="406" pos:column="37">.</op:operator><name pos:line="406" pos:column="38">left</name>      <op:operator pos:line="406" pos:column="48">=</op:operator> <name><name pos:line="406" pos:column="50">rc</name><op:operator pos:line="406" pos:column="52">.</op:operator><name pos:line="406" pos:column="53">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="407" pos:column="9">_dockData</name><op:operator pos:line="407" pos:column="18">.</op:operator><name pos:line="407" pos:column="19">rcRegion</name><index pos:line="407" pos:column="27">[<expr><name pos:line="407" pos:column="28">CONT_TOP</name></expr>]</index></name><op:operator pos:line="407" pos:column="37">.</op:operator><name pos:line="407" pos:column="38">top</name>       <op:operator pos:line="407" pos:column="48">=</op:operator> <name><name pos:line="407" pos:column="50">rc</name><op:operator pos:line="407" pos:column="52">.</op:operator><name pos:line="407" pos:column="53">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="408" pos:column="9">_dockData</name><op:operator pos:line="408" pos:column="18">.</op:operator><name pos:line="408" pos:column="19">rcRegion</name><index pos:line="408" pos:column="27">[<expr><name pos:line="408" pos:column="28">CONT_TOP</name></expr>]</index></name><op:operator pos:line="408" pos:column="37">.</op:operator><name pos:line="408" pos:column="38">right</name>     <op:operator pos:line="408" pos:column="48">=</op:operator> <name><name pos:line="408" pos:column="50">rc</name><op:operator pos:line="408" pos:column="52">.</op:operator><name pos:line="408" pos:column="53">right</name></name><op:operator pos:line="408" pos:column="58">-</op:operator><name><name pos:line="408" pos:column="59">rc</name><op:operator pos:line="408" pos:column="61">.</op:operator><name pos:line="408" pos:column="62">left</name></name></expr>;</expr_stmt>
	
	<expr_stmt><expr><name><name pos:line="410" pos:column="9">_vSplitter</name><index pos:line="410" pos:column="19">[<expr><name pos:line="410" pos:column="20">CONT_TOP</name></expr>]</index></name><op:operator pos:line="410" pos:column="29">-&gt;</op:operator><call><name pos:line="410" pos:column="31">display</name><argument_list pos:line="410" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="410" pos:column="39">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="412" pos:column="9">if <condition pos:line="412" pos:column="12">(<expr><name><name pos:line="412" pos:column="13">_vContainer</name><index pos:line="412" pos:column="24">[<expr><name pos:line="412" pos:column="25">CONT_TOP</name></expr>]</index></name><op:operator pos:line="412" pos:column="34">-&gt;</op:operator><call><name pos:line="412" pos:column="36">isVisible</name><argument_list pos:line="412" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="412" pos:column="48">
	<block pos:line="413" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="414" pos:column="17">_rcWork</name><op:operator pos:line="414" pos:column="24">.</op:operator><name pos:line="414" pos:column="25">top</name></name>		<op:operator pos:line="414" pos:column="41">+=</op:operator> <name><name pos:line="414" pos:column="44">_dockData</name><op:operator pos:line="414" pos:column="53">.</op:operator><name pos:line="414" pos:column="54">rcRegion</name><index pos:line="414" pos:column="62">[<expr><name pos:line="414" pos:column="63">CONT_TOP</name></expr>]</index></name><op:operator pos:line="414" pos:column="72">.</op:operator><name pos:line="414" pos:column="73">bottom</name> <op:operator pos:line="414" pos:column="80">+</op:operator> <name pos:line="414" pos:column="82">SPLITTER_WIDTH</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="415" pos:column="17">_rcWork</name><op:operator pos:line="415" pos:column="24">.</op:operator><name pos:line="415" pos:column="25">bottom</name></name>	<op:operator pos:line="415" pos:column="33">-=</op:operator> <name><name pos:line="415" pos:column="36">_dockData</name><op:operator pos:line="415" pos:column="45">.</op:operator><name pos:line="415" pos:column="46">rcRegion</name><index pos:line="415" pos:column="54">[<expr><name pos:line="415" pos:column="55">CONT_TOP</name></expr>]</index></name><op:operator pos:line="415" pos:column="64">.</op:operator><name pos:line="415" pos:column="65">bottom</name> <op:operator pos:line="415" pos:column="72">+</op:operator> <name pos:line="415" pos:column="74">SPLITTER_WIDTH</name></expr>;</expr_stmt>

		<comment type="line" pos:line="417" pos:column="17">// set size of splitter</comment>
		<decl_stmt><decl><type><name pos:line="418" pos:column="17">RECT</name></type>	<name pos:line="418" pos:column="25">rc</name> <init pos:line="418" pos:column="28">= <expr><block pos:line="418" pos:column="30">{<expr><name><name pos:line="418" pos:column="31">_dockData</name><op:operator pos:line="418" pos:column="40">.</op:operator><name pos:line="418" pos:column="41">rcRegion</name><index pos:line="418" pos:column="49">[<expr><name pos:line="418" pos:column="50">CONT_TOP</name></expr>]</index></name><op:operator pos:line="418" pos:column="59">.</op:operator><name pos:line="418" pos:column="60">left</name></expr>  ,
					  <expr><name><name pos:line="419" pos:column="43">_dockData</name><op:operator pos:line="419" pos:column="52">.</op:operator><name pos:line="419" pos:column="53">rcRegion</name><index pos:line="419" pos:column="61">[<expr><name pos:line="419" pos:column="62">CONT_TOP</name></expr>]</index></name><op:operator pos:line="419" pos:column="71">.</op:operator><name pos:line="419" pos:column="72">top</name> <op:operator pos:line="419" pos:column="76">+</op:operator> <name><name pos:line="419" pos:column="78">_dockData</name><op:operator pos:line="419" pos:column="87">.</op:operator><name pos:line="419" pos:column="88">rcRegion</name><index pos:line="419" pos:column="96">[<expr><name pos:line="419" pos:column="97">CONT_TOP</name></expr>]</index></name><op:operator pos:line="419" pos:column="106">.</op:operator><name pos:line="419" pos:column="107">bottom</name></expr>,
					  <expr><name><name pos:line="420" pos:column="43">_dockData</name><op:operator pos:line="420" pos:column="52">.</op:operator><name pos:line="420" pos:column="53">rcRegion</name><index pos:line="420" pos:column="61">[<expr><name pos:line="420" pos:column="62">CONT_TOP</name></expr>]</index></name><op:operator pos:line="420" pos:column="71">.</op:operator><name pos:line="420" pos:column="72">right</name></expr> ,
					  <expr><name pos:line="421" pos:column="43">SPLITTER_WIDTH</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="422" pos:column="17">_vSplitter</name><index pos:line="422" pos:column="27">[<expr><name pos:line="422" pos:column="28">CONT_TOP</name></expr>]</index></name><op:operator pos:line="422" pos:column="37">-&gt;</op:operator><call><name pos:line="422" pos:column="39">reSizeTo</name><argument_list pos:line="422" pos:column="47">(<argument><expr><name pos:line="422" pos:column="48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="425" pos:column="9">// set bottom container</comment>
	<expr_stmt><expr><name><name pos:line="426" pos:column="9">_dockData</name><op:operator pos:line="426" pos:column="18">.</op:operator><name pos:line="426" pos:column="19">rcRegion</name><index pos:line="426" pos:column="27">[<expr><name pos:line="426" pos:column="28">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="426" pos:column="40">.</op:operator><name pos:line="426" pos:column="41">left</name>   <op:operator pos:line="426" pos:column="48">=</op:operator> <name><name pos:line="426" pos:column="50">rc</name><op:operator pos:line="426" pos:column="52">.</op:operator><name pos:line="426" pos:column="53">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="427" pos:column="9">_dockData</name><op:operator pos:line="427" pos:column="18">.</op:operator><name pos:line="427" pos:column="19">rcRegion</name><index pos:line="427" pos:column="27">[<expr><name pos:line="427" pos:column="28">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="427" pos:column="40">.</op:operator><name pos:line="427" pos:column="41">top</name>    <op:operator pos:line="427" pos:column="48">=</op:operator> <name><name pos:line="427" pos:column="50">rc</name><op:operator pos:line="427" pos:column="52">.</op:operator><name pos:line="427" pos:column="53">top</name></name> <op:operator pos:line="427" pos:column="57">+</op:operator> <name><name pos:line="427" pos:column="59">rc</name><op:operator pos:line="427" pos:column="61">.</op:operator><name pos:line="427" pos:column="62">bottom</name></name> <op:operator pos:line="427" pos:column="69">-</op:operator> <name><name pos:line="427" pos:column="71">_dockData</name><op:operator pos:line="427" pos:column="80">.</op:operator><name pos:line="427" pos:column="81">rcRegion</name><index pos:line="427" pos:column="89">[<expr><name pos:line="427" pos:column="90">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="427" pos:column="102">.</op:operator><name pos:line="427" pos:column="103">bottom</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="428" pos:column="9">_dockData</name><op:operator pos:line="428" pos:column="18">.</op:operator><name pos:line="428" pos:column="19">rcRegion</name><index pos:line="428" pos:column="27">[<expr><name pos:line="428" pos:column="28">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="428" pos:column="40">.</op:operator><name pos:line="428" pos:column="41">right</name>  <op:operator pos:line="428" pos:column="48">=</op:operator> <name><name pos:line="428" pos:column="50">rc</name><op:operator pos:line="428" pos:column="52">.</op:operator><name pos:line="428" pos:column="53">right</name></name><op:operator pos:line="428" pos:column="58">-</op:operator><name><name pos:line="428" pos:column="59">rc</name><op:operator pos:line="428" pos:column="61">.</op:operator><name pos:line="428" pos:column="62">left</name></name></expr>;</expr_stmt>

	<comment type="line" pos:line="430" pos:column="9">// create temporary rect for bottom container</comment>
	<decl_stmt><decl><type><name pos:line="431" pos:column="9">RECT</name></type>		<name pos:line="431" pos:column="25">rcBottom</name>	<init pos:line="431" pos:column="41">= <expr><name><name pos:line="431" pos:column="43">_dockData</name><op:operator pos:line="431" pos:column="52">.</op:operator><name pos:line="431" pos:column="53">rcRegion</name><index pos:line="431" pos:column="61">[<expr><name pos:line="431" pos:column="62">CONT_BOTTOM</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="433" pos:column="9">_vSplitter</name><index pos:line="433" pos:column="19">[<expr><name pos:line="433" pos:column="20">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="433" pos:column="32">-&gt;</op:operator><call><name pos:line="433" pos:column="34">display</name><argument_list pos:line="433" pos:column="41">(<argument><expr><lit:literal type="boolean" pos:line="433" pos:column="42">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="435" pos:column="9">if <condition pos:line="435" pos:column="12">(<expr><name><name pos:line="435" pos:column="13">_vContainer</name><index pos:line="435" pos:column="24">[<expr><name pos:line="435" pos:column="25">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="435" pos:column="37">-&gt;</op:operator><call><name pos:line="435" pos:column="39">isVisible</name><argument_list pos:line="435" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="435" pos:column="51">
	<block pos:line="436" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="437" pos:column="17">_rcWork</name><op:operator pos:line="437" pos:column="24">.</op:operator><name pos:line="437" pos:column="25">bottom</name></name>	<op:operator pos:line="437" pos:column="33">-=</op:operator> <name><name pos:line="437" pos:column="36">_dockData</name><op:operator pos:line="437" pos:column="45">.</op:operator><name pos:line="437" pos:column="46">rcRegion</name><index pos:line="437" pos:column="54">[<expr><name pos:line="437" pos:column="55">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="437" pos:column="67">.</op:operator><name pos:line="437" pos:column="68">bottom</name> <op:operator pos:line="437" pos:column="75">+</op:operator> <name pos:line="437" pos:column="77">SPLITTER_WIDTH</name></expr>;</expr_stmt>

		<comment type="line" pos:line="439" pos:column="17">// correct the visibility of bottom container when height is NULL</comment>
		<if pos:line="440" pos:column="17">if <condition pos:line="440" pos:column="20">(<expr><name><name pos:line="440" pos:column="21">_rcWork</name><op:operator pos:line="440" pos:column="28">.</op:operator><name pos:line="440" pos:column="29">bottom</name></name> <op:operator pos:line="440" pos:column="36">&lt;</op:operator> <name><name pos:line="440" pos:column="38">rc</name><op:operator pos:line="440" pos:column="40">.</op:operator><name pos:line="440" pos:column="41">top</name></name></expr>)</condition><then pos:line="440" pos:column="45">
		<block pos:line="441" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="442" pos:column="25">rcBottom</name><op:operator pos:line="442" pos:column="33">.</op:operator><name pos:line="442" pos:column="34">top</name></name>     <op:operator pos:line="442" pos:column="42">=</op:operator> <name><name pos:line="442" pos:column="44">_rcWork</name><op:operator pos:line="442" pos:column="51">.</op:operator><name pos:line="442" pos:column="52">top</name></name> <op:operator pos:line="442" pos:column="56">+</op:operator> <name><name pos:line="442" pos:column="58">rc</name><op:operator pos:line="442" pos:column="60">.</op:operator><name pos:line="442" pos:column="61">top</name></name> <op:operator pos:line="442" pos:column="65">+</op:operator> <name pos:line="442" pos:column="67">SPLITTER_WIDTH</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="443" pos:column="25">rcBottom</name><op:operator pos:line="443" pos:column="33">.</op:operator><name pos:line="443" pos:column="34">bottom</name></name> <op:operator pos:line="443" pos:column="41">+=</op:operator> <name><name pos:line="443" pos:column="44">_rcWork</name><op:operator pos:line="443" pos:column="51">.</op:operator><name pos:line="443" pos:column="52">bottom</name></name> <op:operator pos:line="443" pos:column="59">-</op:operator> <name><name pos:line="443" pos:column="61">rc</name><op:operator pos:line="443" pos:column="63">.</op:operator><name pos:line="443" pos:column="64">top</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="444" pos:column="25">_rcWork</name><op:operator pos:line="444" pos:column="32">.</op:operator><name pos:line="444" pos:column="33">bottom</name></name> <op:operator pos:line="444" pos:column="40">=</op:operator> <name><name pos:line="444" pos:column="42">rc</name><op:operator pos:line="444" pos:column="44">.</op:operator><name pos:line="444" pos:column="45">top</name></name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="446" pos:column="17">if <condition pos:line="446" pos:column="20">(<expr><op:operator pos:line="446" pos:column="21">(</op:operator><name><name pos:line="446" pos:column="22">rcBottom</name><op:operator pos:line="446" pos:column="30">.</op:operator><name pos:line="446" pos:column="31">bottom</name></name> <op:operator pos:line="446" pos:column="38">+</op:operator> <name pos:line="446" pos:column="40">SPLITTER_WIDTH</name><op:operator pos:line="446" pos:column="54">)</op:operator> <op:operator pos:line="446" pos:column="56">&lt;</op:operator> <lit:literal type="number" pos:line="446" pos:column="58">0</lit:literal></expr>)</condition><then pos:line="446" pos:column="60">
		<block pos:line="447" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="448" pos:column="25">_rcWork</name><op:operator pos:line="448" pos:column="32">.</op:operator><name pos:line="448" pos:column="33">bottom</name></name> <op:operator pos:line="448" pos:column="40">=</op:operator> <name><name pos:line="448" pos:column="42">rc</name><op:operator pos:line="448" pos:column="44">.</op:operator><name pos:line="448" pos:column="45">bottom</name></name> <op:operator pos:line="448" pos:column="52">-</op:operator> <name><name pos:line="448" pos:column="54">_dockData</name><op:operator pos:line="448" pos:column="63">.</op:operator><name pos:line="448" pos:column="64">rcRegion</name><index pos:line="448" pos:column="72">[<expr><name pos:line="448" pos:column="73">CONT_TOP</name></expr>]</index></name><op:operator pos:line="448" pos:column="82">.</op:operator><name pos:line="448" pos:column="83">bottom</name></expr>;</expr_stmt>
		}</block></then></if>

		<comment type="line" pos:line="451" pos:column="17">// set size of splitter</comment>
		<decl_stmt><decl><type><name pos:line="452" pos:column="17">RECT</name></type>	<name pos:line="452" pos:column="25">rc</name> <init pos:line="452" pos:column="28">= <expr><block pos:line="452" pos:column="30">{<expr><name><name pos:line="452" pos:column="31">rcBottom</name><op:operator pos:line="452" pos:column="39">.</op:operator><name pos:line="452" pos:column="40">left</name></name></expr>,
					  <expr><name><name pos:line="453" pos:column="43">rcBottom</name><op:operator pos:line="453" pos:column="51">.</op:operator><name pos:line="453" pos:column="52">top</name></name> <op:operator pos:line="453" pos:column="56">-</op:operator> <name pos:line="453" pos:column="58">SPLITTER_WIDTH</name></expr>,
					  <expr><name><name pos:line="454" pos:column="43">rcBottom</name><op:operator pos:line="454" pos:column="51">.</op:operator><name pos:line="454" pos:column="52">right</name></name></expr>,
					  <expr><name pos:line="455" pos:column="43">SPLITTER_WIDTH</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="456" pos:column="17">_vSplitter</name><index pos:line="456" pos:column="27">[<expr><name pos:line="456" pos:column="28">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="456" pos:column="40">-&gt;</op:operator><call><name pos:line="456" pos:column="42">reSizeTo</name><argument_list pos:line="456" pos:column="50">(<argument><expr><name pos:line="456" pos:column="51">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="459" pos:column="9">// set left container</comment>
	<expr_stmt><expr><name><name pos:line="460" pos:column="9">_dockData</name><op:operator pos:line="460" pos:column="18">.</op:operator><name pos:line="460" pos:column="19">rcRegion</name><index pos:line="460" pos:column="27">[<expr><name pos:line="460" pos:column="28">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="460" pos:column="38">.</op:operator><name pos:line="460" pos:column="39">left</name>     <op:operator pos:line="460" pos:column="48">=</op:operator> <name><name pos:line="460" pos:column="50">rc</name><op:operator pos:line="460" pos:column="52">.</op:operator><name pos:line="460" pos:column="53">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="461" pos:column="9">_dockData</name><op:operator pos:line="461" pos:column="18">.</op:operator><name pos:line="461" pos:column="19">rcRegion</name><index pos:line="461" pos:column="27">[<expr><name pos:line="461" pos:column="28">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="461" pos:column="38">.</op:operator><name pos:line="461" pos:column="39">top</name>      <op:operator pos:line="461" pos:column="48">=</op:operator> <name><name pos:line="461" pos:column="50">_rcWork</name><op:operator pos:line="461" pos:column="57">.</op:operator><name pos:line="461" pos:column="58">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="462" pos:column="9">_dockData</name><op:operator pos:line="462" pos:column="18">.</op:operator><name pos:line="462" pos:column="19">rcRegion</name><index pos:line="462" pos:column="27">[<expr><name pos:line="462" pos:column="28">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="462" pos:column="38">.</op:operator><name pos:line="462" pos:column="39">bottom</name>   <op:operator pos:line="462" pos:column="48">=</op:operator> <name><name pos:line="462" pos:column="50">_rcWork</name><op:operator pos:line="462" pos:column="57">.</op:operator><name pos:line="462" pos:column="58">bottom</name></name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="464" pos:column="9">_vSplitter</name><index pos:line="464" pos:column="19">[<expr><name pos:line="464" pos:column="20">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="464" pos:column="30">-&gt;</op:operator><call><name pos:line="464" pos:column="32">display</name><argument_list pos:line="464" pos:column="39">(<argument><expr><lit:literal type="boolean" pos:line="464" pos:column="40">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="466" pos:column="9">if <condition pos:line="466" pos:column="12">(<expr><name><name pos:line="466" pos:column="13">_vContainer</name><index pos:line="466" pos:column="24">[<expr><name pos:line="466" pos:column="25">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="466" pos:column="35">-&gt;</op:operator><call><name pos:line="466" pos:column="37">isVisible</name><argument_list pos:line="466" pos:column="46">()</argument_list></call></expr>)</condition><then pos:line="466" pos:column="49">
	<block pos:line="467" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="468" pos:column="17">_rcWork</name><op:operator pos:line="468" pos:column="24">.</op:operator><name pos:line="468" pos:column="25">left</name></name>		<op:operator pos:line="468" pos:column="41">+=</op:operator> <name><name pos:line="468" pos:column="44">_dockData</name><op:operator pos:line="468" pos:column="53">.</op:operator><name pos:line="468" pos:column="54">rcRegion</name><index pos:line="468" pos:column="62">[<expr><name pos:line="468" pos:column="63">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="468" pos:column="73">.</op:operator><name pos:line="468" pos:column="74">right</name> <op:operator pos:line="468" pos:column="80">+</op:operator> <name pos:line="468" pos:column="82">SPLITTER_WIDTH</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="469" pos:column="17">_rcWork</name><op:operator pos:line="469" pos:column="24">.</op:operator><name pos:line="469" pos:column="25">right</name></name>	<op:operator pos:line="469" pos:column="33">-=</op:operator> <name><name pos:line="469" pos:column="36">_dockData</name><op:operator pos:line="469" pos:column="45">.</op:operator><name pos:line="469" pos:column="46">rcRegion</name><index pos:line="469" pos:column="54">[<expr><name pos:line="469" pos:column="55">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="469" pos:column="65">.</op:operator><name pos:line="469" pos:column="66">right</name> <op:operator pos:line="469" pos:column="72">+</op:operator> <name pos:line="469" pos:column="74">SPLITTER_WIDTH</name></expr>;</expr_stmt>

		<comment type="line" pos:line="471" pos:column="17">// set size of splitter</comment>
		<decl_stmt><decl><type><name pos:line="472" pos:column="17">RECT</name></type>	<name pos:line="472" pos:column="25">rc</name> <init pos:line="472" pos:column="28">= <expr><block pos:line="472" pos:column="30">{<expr><name><name pos:line="472" pos:column="31">_dockData</name><op:operator pos:line="472" pos:column="40">.</op:operator><name pos:line="472" pos:column="41">rcRegion</name><index pos:line="472" pos:column="49">[<expr><name pos:line="472" pos:column="50">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="472" pos:column="60">.</op:operator><name pos:line="472" pos:column="61">right</name></expr>,
					  <expr><name><name pos:line="473" pos:column="43">_dockData</name><op:operator pos:line="473" pos:column="52">.</op:operator><name pos:line="473" pos:column="53">rcRegion</name><index pos:line="473" pos:column="61">[<expr><name pos:line="473" pos:column="62">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="473" pos:column="72">.</op:operator><name pos:line="473" pos:column="73">top</name></expr>,
					  <expr><name pos:line="474" pos:column="43">SPLITTER_WIDTH</name></expr>,
					  <expr><name><name pos:line="475" pos:column="43">_dockData</name><op:operator pos:line="475" pos:column="52">.</op:operator><name pos:line="475" pos:column="53">rcRegion</name><index pos:line="475" pos:column="61">[<expr><name pos:line="475" pos:column="62">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="475" pos:column="72">.</op:operator><name pos:line="475" pos:column="73">bottom</name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="476" pos:column="17">_vSplitter</name><index pos:line="476" pos:column="27">[<expr><name pos:line="476" pos:column="28">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="476" pos:column="38">-&gt;</op:operator><call><name pos:line="476" pos:column="40">reSizeTo</name><argument_list pos:line="476" pos:column="48">(<argument><expr><name pos:line="476" pos:column="49">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="479" pos:column="9">// set right container</comment>
	<expr_stmt><expr><name><name pos:line="480" pos:column="9">_dockData</name><op:operator pos:line="480" pos:column="18">.</op:operator><name pos:line="480" pos:column="19">rcRegion</name><index pos:line="480" pos:column="27">[<expr><name pos:line="480" pos:column="28">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="480" pos:column="39">.</op:operator><name pos:line="480" pos:column="40">left</name>    <op:operator pos:line="480" pos:column="48">=</op:operator> <name><name pos:line="480" pos:column="50">rc</name><op:operator pos:line="480" pos:column="52">.</op:operator><name pos:line="480" pos:column="53">right</name></name> <op:operator pos:line="480" pos:column="59">-</op:operator> <name><name pos:line="480" pos:column="61">_dockData</name><op:operator pos:line="480" pos:column="70">.</op:operator><name pos:line="480" pos:column="71">rcRegion</name><index pos:line="480" pos:column="79">[<expr><name pos:line="480" pos:column="80">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="480" pos:column="91">.</op:operator><name pos:line="480" pos:column="92">right</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="481" pos:column="9">_dockData</name><op:operator pos:line="481" pos:column="18">.</op:operator><name pos:line="481" pos:column="19">rcRegion</name><index pos:line="481" pos:column="27">[<expr><name pos:line="481" pos:column="28">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="481" pos:column="39">.</op:operator><name pos:line="481" pos:column="40">top</name>     <op:operator pos:line="481" pos:column="48">=</op:operator> <name><name pos:line="481" pos:column="50">_rcWork</name><op:operator pos:line="481" pos:column="57">.</op:operator><name pos:line="481" pos:column="58">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="482" pos:column="9">_dockData</name><op:operator pos:line="482" pos:column="18">.</op:operator><name pos:line="482" pos:column="19">rcRegion</name><index pos:line="482" pos:column="27">[<expr><name pos:line="482" pos:column="28">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="482" pos:column="39">.</op:operator><name pos:line="482" pos:column="40">bottom</name>  <op:operator pos:line="482" pos:column="48">=</op:operator> <name><name pos:line="482" pos:column="50">_rcWork</name><op:operator pos:line="482" pos:column="57">.</op:operator><name pos:line="482" pos:column="58">bottom</name></name></expr>;</expr_stmt>

	<comment type="line" pos:line="484" pos:column="9">// create temporary rect for right container</comment>
	<decl_stmt><decl><type><name pos:line="485" pos:column="9">RECT</name></type>		<name pos:line="485" pos:column="25">rcRight</name>		<init pos:line="485" pos:column="41">= <expr><name><name pos:line="485" pos:column="43">_dockData</name><op:operator pos:line="485" pos:column="52">.</op:operator><name pos:line="485" pos:column="53">rcRegion</name><index pos:line="485" pos:column="61">[<expr><name pos:line="485" pos:column="62">CONT_RIGHT</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="487" pos:column="9">_vSplitter</name><index pos:line="487" pos:column="19">[<expr><name pos:line="487" pos:column="20">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="487" pos:column="31">-&gt;</op:operator><call><name pos:line="487" pos:column="33">display</name><argument_list pos:line="487" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="487" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="488" pos:column="9">if <condition pos:line="488" pos:column="12">(<expr><name><name pos:line="488" pos:column="13">_vContainer</name><index pos:line="488" pos:column="24">[<expr><name pos:line="488" pos:column="25">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="488" pos:column="36">-&gt;</op:operator><call><name pos:line="488" pos:column="38">isVisible</name><argument_list pos:line="488" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="488" pos:column="50">
	<block pos:line="489" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="490" pos:column="17">_rcWork</name><op:operator pos:line="490" pos:column="24">.</op:operator><name pos:line="490" pos:column="25">right</name></name>	<op:operator pos:line="490" pos:column="33">-=</op:operator> <name><name pos:line="490" pos:column="36">_dockData</name><op:operator pos:line="490" pos:column="45">.</op:operator><name pos:line="490" pos:column="46">rcRegion</name><index pos:line="490" pos:column="54">[<expr><name pos:line="490" pos:column="55">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="490" pos:column="66">.</op:operator><name pos:line="490" pos:column="67">right</name> <op:operator pos:line="490" pos:column="73">+</op:operator> <name pos:line="490" pos:column="75">SPLITTER_WIDTH</name></expr>;</expr_stmt>

		<comment type="line" pos:line="492" pos:column="17">// correct the visibility of right container when width is NULL</comment>
		<if pos:line="493" pos:column="17">if <condition pos:line="493" pos:column="20">(<expr><name><name pos:line="493" pos:column="21">_rcWork</name><op:operator pos:line="493" pos:column="28">.</op:operator><name pos:line="493" pos:column="29">right</name></name> <op:operator pos:line="493" pos:column="35">&lt;</op:operator> <lit:literal type="number" pos:line="493" pos:column="37">15</lit:literal></expr>)</condition><then pos:line="493" pos:column="40">
		<block pos:line="494" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="495" pos:column="25">rcRight</name><op:operator pos:line="495" pos:column="32">.</op:operator><name pos:line="495" pos:column="33">left</name></name>    <op:operator pos:line="495" pos:column="41">=</op:operator> <name><name pos:line="495" pos:column="43">_rcWork</name><op:operator pos:line="495" pos:column="50">.</op:operator><name pos:line="495" pos:column="51">left</name></name> <op:operator pos:line="495" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="495" pos:column="58">15</lit:literal> <op:operator pos:line="495" pos:column="61">+</op:operator> <name pos:line="495" pos:column="63">SPLITTER_WIDTH</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="496" pos:column="25">rcRight</name><op:operator pos:line="496" pos:column="32">.</op:operator><name pos:line="496" pos:column="33">right</name></name>  <op:operator pos:line="496" pos:column="40">+=</op:operator> <name><name pos:line="496" pos:column="43">_rcWork</name><op:operator pos:line="496" pos:column="50">.</op:operator><name pos:line="496" pos:column="51">right</name></name> <op:operator pos:line="496" pos:column="57">-</op:operator> <lit:literal type="number" pos:line="496" pos:column="59">15</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="497" pos:column="25">_rcWork</name><op:operator pos:line="497" pos:column="32">.</op:operator><name pos:line="497" pos:column="33">right</name></name>	<op:operator pos:line="497" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="497" pos:column="43">15</lit:literal></expr>;</expr_stmt>
		}</block></then></if>

		<comment type="line" pos:line="500" pos:column="17">// set size of splitter</comment>
		<decl_stmt><decl><type><name pos:line="501" pos:column="17">RECT</name></type>	<name pos:line="501" pos:column="25">rc</name> <init pos:line="501" pos:column="28">= <expr><block pos:line="501" pos:column="30">{<expr><name><name pos:line="501" pos:column="31">rcRight</name><op:operator pos:line="501" pos:column="38">.</op:operator><name pos:line="501" pos:column="39">left</name></name> <op:operator pos:line="501" pos:column="44">-</op:operator> <name pos:line="501" pos:column="46">SPLITTER_WIDTH</name></expr>,
					  <expr><name><name pos:line="502" pos:column="43">rcRight</name><op:operator pos:line="502" pos:column="50">.</op:operator><name pos:line="502" pos:column="51">top</name></name></expr>,
					  <expr><name pos:line="503" pos:column="43">SPLITTER_WIDTH</name></expr>,
					  <expr><name><name pos:line="504" pos:column="43">rcRight</name><op:operator pos:line="504" pos:column="50">.</op:operator><name pos:line="504" pos:column="51">bottom</name></name></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="505" pos:column="17">_vSplitter</name><index pos:line="505" pos:column="27">[<expr><name pos:line="505" pos:column="28">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="505" pos:column="39">-&gt;</op:operator><call><name pos:line="505" pos:column="41">reSizeTo</name><argument_list pos:line="505" pos:column="49">(<argument><expr><name pos:line="505" pos:column="50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="508" pos:column="9">// set window positions of container</comment>
	<if pos:line="509" pos:column="9">if <condition pos:line="509" pos:column="12">(<expr><name><name pos:line="509" pos:column="13">_vContainer</name><index pos:line="509" pos:column="24">[<expr><name pos:line="509" pos:column="25">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="509" pos:column="37">-&gt;</op:operator><call><name pos:line="509" pos:column="39">isVisible</name><argument_list pos:line="509" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="509" pos:column="51">
	<block pos:line="510" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="511" pos:column="17">::</op:operator><name pos:line="511" pos:column="19">SetWindowPos</name></name><argument_list pos:line="511" pos:column="31">(<argument><expr><name><name pos:line="511" pos:column="32">_vContainer</name><index pos:line="511" pos:column="43">[<expr><name pos:line="511" pos:column="44">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="511" pos:column="56">-&gt;</op:operator><call><name pos:line="511" pos:column="58">getHSelf</name><argument_list pos:line="511" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="511" pos:column="70">NULL</name></expr></argument>, 
					   <argument><expr><name><name pos:line="512" pos:column="44">rcBottom</name><op:operator pos:line="512" pos:column="52">.</op:operator><name pos:line="512" pos:column="53">left</name></name></expr></argument>  ,
					   <argument><expr><name><name pos:line="513" pos:column="44">rcBottom</name><op:operator pos:line="513" pos:column="52">.</op:operator><name pos:line="513" pos:column="53">top</name></name></expr></argument>   ,
					   <argument><expr><name><name pos:line="514" pos:column="44">rcBottom</name><op:operator pos:line="514" pos:column="52">.</op:operator><name pos:line="514" pos:column="53">right</name></name></expr></argument> ,
					   <argument><expr><name><name pos:line="515" pos:column="44">rcBottom</name><op:operator pos:line="515" pos:column="52">.</op:operator><name pos:line="515" pos:column="53">bottom</name></name></expr></argument>,
					   <argument><expr><name pos:line="516" pos:column="44">SWP_NOZORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="517" pos:column="17">_vSplitter</name><index pos:line="517" pos:column="27">[<expr><name pos:line="517" pos:column="28">CONT_BOTTOM</name></expr>]</index></name><op:operator pos:line="517" pos:column="40">-&gt;</op:operator><call><name pos:line="517" pos:column="42">display</name><argument_list pos:line="517" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="520" pos:column="9">if <condition pos:line="520" pos:column="12">(<expr><name><name pos:line="520" pos:column="13">_vContainer</name><index pos:line="520" pos:column="24">[<expr><name pos:line="520" pos:column="25">CONT_TOP</name></expr>]</index></name><op:operator pos:line="520" pos:column="34">-&gt;</op:operator><call><name pos:line="520" pos:column="36">isVisible</name><argument_list pos:line="520" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="520" pos:column="48">
	<block pos:line="521" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="522" pos:column="17">::</op:operator><name pos:line="522" pos:column="19">SetWindowPos</name></name><argument_list pos:line="522" pos:column="31">(<argument><expr><name><name pos:line="522" pos:column="32">_vContainer</name><index pos:line="522" pos:column="43">[<expr><name pos:line="522" pos:column="44">CONT_TOP</name></expr>]</index></name><op:operator pos:line="522" pos:column="53">-&gt;</op:operator><call><name pos:line="522" pos:column="55">getHSelf</name><argument_list pos:line="522" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="522" pos:column="67">NULL</name></expr></argument>, 
					   <argument><expr><name><name pos:line="523" pos:column="44">_dockData</name><op:operator pos:line="523" pos:column="53">.</op:operator><name pos:line="523" pos:column="54">rcRegion</name><index pos:line="523" pos:column="62">[<expr><name pos:line="523" pos:column="63">CONT_TOP</name></expr>]</index></name><op:operator pos:line="523" pos:column="72">.</op:operator><name pos:line="523" pos:column="73">left</name></expr></argument>  ,
					   <argument><expr><name><name pos:line="524" pos:column="44">_dockData</name><op:operator pos:line="524" pos:column="53">.</op:operator><name pos:line="524" pos:column="54">rcRegion</name><index pos:line="524" pos:column="62">[<expr><name pos:line="524" pos:column="63">CONT_TOP</name></expr>]</index></name><op:operator pos:line="524" pos:column="72">.</op:operator><name pos:line="524" pos:column="73">top</name></expr></argument>   ,
					   <argument><expr><name><name pos:line="525" pos:column="44">_dockData</name><op:operator pos:line="525" pos:column="53">.</op:operator><name pos:line="525" pos:column="54">rcRegion</name><index pos:line="525" pos:column="62">[<expr><name pos:line="525" pos:column="63">CONT_TOP</name></expr>]</index></name><op:operator pos:line="525" pos:column="72">.</op:operator><name pos:line="525" pos:column="73">right</name></expr></argument> ,
					   <argument><expr><name><name pos:line="526" pos:column="44">_dockData</name><op:operator pos:line="526" pos:column="53">.</op:operator><name pos:line="526" pos:column="54">rcRegion</name><index pos:line="526" pos:column="62">[<expr><name pos:line="526" pos:column="63">CONT_TOP</name></expr>]</index></name><op:operator pos:line="526" pos:column="72">.</op:operator><name pos:line="526" pos:column="73">bottom</name></expr></argument>,
					   <argument><expr><name pos:line="527" pos:column="44">SWP_NOZORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="528" pos:column="17">_vSplitter</name><index pos:line="528" pos:column="27">[<expr><name pos:line="528" pos:column="28">CONT_TOP</name></expr>]</index></name><op:operator pos:line="528" pos:column="37">-&gt;</op:operator><call><name pos:line="528" pos:column="39">display</name><argument_list pos:line="528" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="531" pos:column="9">if <condition pos:line="531" pos:column="12">(<expr><name><name pos:line="531" pos:column="13">_vContainer</name><index pos:line="531" pos:column="24">[<expr><name pos:line="531" pos:column="25">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="531" pos:column="36">-&gt;</op:operator><call><name pos:line="531" pos:column="38">isVisible</name><argument_list pos:line="531" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="531" pos:column="50">
	<block pos:line="532" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="533" pos:column="17">::</op:operator><name pos:line="533" pos:column="19">SetWindowPos</name></name><argument_list pos:line="533" pos:column="31">(<argument><expr><name><name pos:line="533" pos:column="32">_vContainer</name><index pos:line="533" pos:column="43">[<expr><name pos:line="533" pos:column="44">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="533" pos:column="55">-&gt;</op:operator><call><name pos:line="533" pos:column="57">getHSelf</name><argument_list pos:line="533" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="533" pos:column="69">NULL</name></expr></argument>, 
					   <argument><expr><name><name pos:line="534" pos:column="44">rcRight</name><op:operator pos:line="534" pos:column="51">.</op:operator><name pos:line="534" pos:column="52">left</name></name></expr></argument>  ,
					   <argument><expr><name><name pos:line="535" pos:column="44">rcRight</name><op:operator pos:line="535" pos:column="51">.</op:operator><name pos:line="535" pos:column="52">top</name></name></expr></argument>   ,
					   <argument><expr><name><name pos:line="536" pos:column="44">rcRight</name><op:operator pos:line="536" pos:column="51">.</op:operator><name pos:line="536" pos:column="52">right</name></name></expr></argument> ,
					   <argument><expr><name><name pos:line="537" pos:column="44">rcRight</name><op:operator pos:line="537" pos:column="51">.</op:operator><name pos:line="537" pos:column="52">bottom</name></name></expr></argument>,
					   <argument><expr><name pos:line="538" pos:column="44">SWP_NOZORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="539" pos:column="17">_vSplitter</name><index pos:line="539" pos:column="27">[<expr><name pos:line="539" pos:column="28">CONT_RIGHT</name></expr>]</index></name><op:operator pos:line="539" pos:column="39">-&gt;</op:operator><call><name pos:line="539" pos:column="41">display</name><argument_list pos:line="539" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="542" pos:column="9">if <condition pos:line="542" pos:column="12">(<expr><name><name pos:line="542" pos:column="13">_vContainer</name><index pos:line="542" pos:column="24">[<expr><name pos:line="542" pos:column="25">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="542" pos:column="35">-&gt;</op:operator><call><name pos:line="542" pos:column="37">isVisible</name><argument_list pos:line="542" pos:column="46">()</argument_list></call></expr>)</condition><then pos:line="542" pos:column="49">
	<block pos:line="543" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="544" pos:column="17">::</op:operator><name pos:line="544" pos:column="19">SetWindowPos</name></name><argument_list pos:line="544" pos:column="31">(<argument><expr><name><name pos:line="544" pos:column="32">_vContainer</name><index pos:line="544" pos:column="43">[<expr><name pos:line="544" pos:column="44">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="544" pos:column="54">-&gt;</op:operator><call><name pos:line="544" pos:column="56">getHSelf</name><argument_list pos:line="544" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="544" pos:column="68">NULL</name></expr></argument>, 
					   <argument><expr><name><name pos:line="545" pos:column="44">_dockData</name><op:operator pos:line="545" pos:column="53">.</op:operator><name pos:line="545" pos:column="54">rcRegion</name><index pos:line="545" pos:column="62">[<expr><name pos:line="545" pos:column="63">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="545" pos:column="73">.</op:operator><name pos:line="545" pos:column="74">left</name></expr></argument>  ,
					   <argument><expr><name><name pos:line="546" pos:column="44">_dockData</name><op:operator pos:line="546" pos:column="53">.</op:operator><name pos:line="546" pos:column="54">rcRegion</name><index pos:line="546" pos:column="62">[<expr><name pos:line="546" pos:column="63">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="546" pos:column="73">.</op:operator><name pos:line="546" pos:column="74">top</name></expr></argument>   ,
					   <argument><expr><name><name pos:line="547" pos:column="44">_dockData</name><op:operator pos:line="547" pos:column="53">.</op:operator><name pos:line="547" pos:column="54">rcRegion</name><index pos:line="547" pos:column="62">[<expr><name pos:line="547" pos:column="63">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="547" pos:column="73">.</op:operator><name pos:line="547" pos:column="74">right</name></expr></argument> ,
					   <argument><expr><name><name pos:line="548" pos:column="44">_dockData</name><op:operator pos:line="548" pos:column="53">.</op:operator><name pos:line="548" pos:column="54">rcRegion</name><index pos:line="548" pos:column="62">[<expr><name pos:line="548" pos:column="63">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="548" pos:column="73">.</op:operator><name pos:line="548" pos:column="74">bottom</name></expr></argument>,
					   <argument><expr><name pos:line="549" pos:column="44">SWP_NOZORDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="550" pos:column="17">_vSplitter</name><index pos:line="550" pos:column="27">[<expr><name pos:line="550" pos:column="28">CONT_LEFT</name></expr>]</index></name><op:operator pos:line="550" pos:column="38">-&gt;</op:operator><call><name pos:line="550" pos:column="40">display</name><argument_list pos:line="550" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="552" pos:column="9">(<type:modifier pos:line="552" pos:column="10">*</type:modifier><name pos:line="552" pos:column="11">_ppMainWindow</name>)<op:operator pos:line="552" pos:column="25">-&gt;</op:operator><name pos:line="552" pos:column="27">reSizeTo</name></name><argument_list pos:line="552" pos:column="35">(<argument><expr><name pos:line="552" pos:column="36">_rcWork</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="555" pos:column="1">void</name></type> <name><name pos:line="555" pos:column="6">DockingManager</name><op:operator pos:line="555" pos:column="20">::</op:operator><name pos:line="555" pos:column="22">createDockableDlg</name></name><parameter_list pos:line="555" pos:column="39">(<param><decl><type><name pos:line="555" pos:column="40">tTbData</name></type> <name pos:line="555" pos:column="48">data</name></decl></param>, <param><decl><type><name pos:line="555" pos:column="54">int</name></type> <name pos:line="555" pos:column="58">iCont</name></decl></param>, <param><decl><type><name pos:line="555" pos:column="65">bool</name></type> <name pos:line="555" pos:column="70">isVisible</name></decl></param>)</parameter_list>
<block pos:line="556" pos:column="1">{
	<comment type="line" pos:line="557" pos:column="9">// add icons</comment>
	<if pos:line="558" pos:column="9">if <condition pos:line="558" pos:column="12">(<expr><name><name pos:line="558" pos:column="13">data</name><op:operator pos:line="558" pos:column="17">.</op:operator><name pos:line="558" pos:column="18">uMask</name></name> <op:operator pos:line="558" pos:column="24">&amp;</op:operator> <name pos:line="558" pos:column="26">DWS_ICONTAB</name></expr>)</condition><then pos:line="558" pos:column="38">
	<block pos:line="559" pos:column="9">{
		<comment type="line" pos:line="560" pos:column="17">// create image list if not exist</comment>
		<if pos:line="561" pos:column="17">if <condition pos:line="561" pos:column="20">(<expr><name pos:line="561" pos:column="21">_hImageList</name> <op:operator pos:line="561" pos:column="33">==</op:operator> <name pos:line="561" pos:column="36">NULL</name></expr>)</condition><then pos:line="561" pos:column="41">
		<block pos:line="562" pos:column="17">{
			<expr_stmt><expr><name pos:line="563" pos:column="25">_hImageList</name> <op:operator pos:line="563" pos:column="37">=</op:operator> <call><name><op:operator pos:line="563" pos:column="39">::</op:operator><name pos:line="563" pos:column="41">ImageList_Create</name></name><argument_list pos:line="563" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="563" pos:column="58">14</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="563" pos:column="61">14</lit:literal></expr></argument>,<argument><expr><name pos:line="563" pos:column="64">ILC_COLOR8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="563" pos:column="76">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="563" pos:column="79">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
		}</block></then></if>

		<comment type="line" pos:line="566" pos:column="17">// add icon</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="567" pos:column="17">::</op:operator><name pos:line="567" pos:column="19">ImageList_AddIcon</name></name><argument_list pos:line="567" pos:column="36">(<argument><expr><name pos:line="567" pos:column="37">_hImageList</name></expr></argument>, <argument><expr><name><name pos:line="567" pos:column="50">data</name><op:operator pos:line="567" pos:column="54">.</op:operator><name pos:line="567" pos:column="55">hIconTab</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="569" pos:column="17">// do the reference here to find later the correct position</comment>
		<expr_stmt><expr><call><name><name pos:line="570" pos:column="17">_vImageList</name><op:operator pos:line="570" pos:column="28">.</op:operator><name pos:line="570" pos:column="29">push_back</name></name><argument_list pos:line="570" pos:column="38">(<argument><expr><name><name pos:line="570" pos:column="39">data</name><op:operator pos:line="570" pos:column="43">.</op:operator><name pos:line="570" pos:column="44">hClient</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="573" pos:column="9">// create additional containers if necessary</comment>
	<decl_stmt><decl><type><name pos:line="574" pos:column="9">RECT</name></type>				<name pos:line="574" pos:column="41">rc</name>			<init pos:line="574" pos:column="65">= <expr><block pos:line="574" pos:column="67">{<expr><lit:literal type="number" pos:line="574" pos:column="68">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="574" pos:column="70">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="574" pos:column="72">0</lit:literal></expr>,<expr><lit:literal type="number" pos:line="574" pos:column="74">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="575" pos:column="9">DockingCont</name><type:modifier pos:line="575" pos:column="20">*</type:modifier></type>		<name pos:line="575" pos:column="33">pCont</name>		<init pos:line="575" pos:column="49">= <expr><name pos:line="575" pos:column="51">NULL</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="577" pos:column="9">// if floated rect not set</comment>
	<if pos:line="578" pos:column="9">if <condition pos:line="578" pos:column="12">(<expr><call><name pos:line="578" pos:column="13">memcmp</name><argument_list pos:line="578" pos:column="19">(<argument><expr><op:operator pos:line="578" pos:column="20">&amp;</op:operator><name><name pos:line="578" pos:column="21">data</name><op:operator pos:line="578" pos:column="25">.</op:operator><name pos:line="578" pos:column="26">rcFloat</name></name></expr></argument>, <argument><expr><op:operator pos:line="578" pos:column="35">&amp;</op:operator><name pos:line="578" pos:column="36">rc</name></expr></argument>, <argument><expr><sizeof pos:line="578" pos:column="40">sizeof<argument_list pos:line="578" pos:column="46">(<argument><expr><name pos:line="578" pos:column="47">RECT</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <op:operator pos:line="578" pos:column="54">==</op:operator> <lit:literal type="number" pos:line="578" pos:column="57">0</lit:literal></expr>)</condition><then pos:line="578" pos:column="59">
	<block pos:line="579" pos:column="9">{
		<comment type="line" pos:line="580" pos:column="17">// set default rect state</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="581" pos:column="17">::</op:operator><name pos:line="581" pos:column="19">GetWindowRect</name></name><argument_list pos:line="581" pos:column="32">(<argument><expr><name><name pos:line="581" pos:column="33">data</name><op:operator pos:line="581" pos:column="37">.</op:operator><name pos:line="581" pos:column="38">hClient</name></name></expr></argument>, <argument><expr><op:operator pos:line="581" pos:column="47">&amp;</op:operator><name><name pos:line="581" pos:column="48">data</name><op:operator pos:line="581" pos:column="52">.</op:operator><name pos:line="581" pos:column="53">rcFloat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="583" pos:column="17">// test if dialog is first time created</comment>
		<if pos:line="584" pos:column="17">if <condition pos:line="584" pos:column="20">(<expr><name pos:line="584" pos:column="21">iCont</name> <op:operator pos:line="584" pos:column="27">==</op:operator> <op:operator pos:line="584" pos:column="30">-</op:operator><lit:literal type="number" pos:line="584" pos:column="31">1</lit:literal></expr>)</condition><then pos:line="584" pos:column="33">
		<block pos:line="585" pos:column="17">{
			<comment type="line" pos:line="586" pos:column="25">// set default visible state</comment>
			<expr_stmt><expr><name pos:line="587" pos:column="25">isVisible</name> <op:operator pos:line="587" pos:column="35">=</op:operator> <op:operator pos:line="587" pos:column="37">(</op:operator><call><name><op:operator pos:line="587" pos:column="38">::</op:operator><name pos:line="587" pos:column="40">IsWindowVisible</name></name><argument_list pos:line="587" pos:column="55">(<argument><expr><name><name pos:line="587" pos:column="56">data</name><op:operator pos:line="587" pos:column="60">.</op:operator><name pos:line="587" pos:column="61">hClient</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="587" pos:column="70">==</op:operator> <name pos:line="587" pos:column="73">TRUE</name><op:operator pos:line="587" pos:column="77">)</op:operator></expr>;</expr_stmt>

			<if pos:line="589" pos:column="25">if <condition pos:line="589" pos:column="28">(<expr><name><name pos:line="589" pos:column="29">data</name><op:operator pos:line="589" pos:column="33">.</op:operator><name pos:line="589" pos:column="34">uMask</name></name> <op:operator pos:line="589" pos:column="40">&amp;</op:operator> <name pos:line="589" pos:column="42">DWS_DF_FLOATING</name></expr>)</condition><then pos:line="589" pos:column="58">
			<block pos:line="590" pos:column="25">{
				<comment type="line" pos:line="591" pos:column="33">// create new container</comment>
				<expr_stmt><expr><name pos:line="592" pos:column="33">pCont</name> <op:operator pos:line="592" pos:column="39">=</op:operator> <op:operator pos:line="592" pos:column="41">new</op:operator> <name pos:line="592" pos:column="45">DockingCont</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="593" pos:column="33">_vContainer</name><op:operator pos:line="593" pos:column="44">.</op:operator><name pos:line="593" pos:column="45">push_back</name></name><argument_list pos:line="593" pos:column="54">(<argument><expr><name pos:line="593" pos:column="55">pCont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="595" pos:column="33">// initialize</comment>
				<expr_stmt><expr><call><name><name pos:line="596" pos:column="33">pCont</name><op:operator pos:line="596" pos:column="38">-&gt;</op:operator><name pos:line="596" pos:column="40">init</name></name><argument_list pos:line="596" pos:column="44">(<argument><expr><name pos:line="596" pos:column="45">_hInst</name></expr></argument>, <argument><expr><name pos:line="596" pos:column="53">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="597" pos:column="33">pCont</name><op:operator pos:line="597" pos:column="38">-&gt;</op:operator><name pos:line="597" pos:column="40">doDialog</name></name><argument_list pos:line="597" pos:column="48">(<argument><expr><name pos:line="597" pos:column="49">isVisible</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="597" pos:column="60">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="599" pos:column="33">// get previous position and set container id</comment>
				<expr_stmt><expr><name><name pos:line="600" pos:column="33">data</name><op:operator pos:line="600" pos:column="37">.</op:operator><name pos:line="600" pos:column="38">iPrevCont</name></name> <op:operator pos:line="600" pos:column="48">=</op:operator> <op:operator pos:line="600" pos:column="50">(</op:operator><name><name pos:line="600" pos:column="51">data</name><op:operator pos:line="600" pos:column="55">.</op:operator><name pos:line="600" pos:column="56">uMask</name></name> <op:operator pos:line="600" pos:column="62">&amp;</op:operator> <lit:literal type="number" pos:line="600" pos:column="64">0x30000000</lit:literal><op:operator pos:line="600" pos:column="74">)</op:operator> <op:operator pos:line="600" pos:column="76">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="600" pos:column="79">28</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="601" pos:column="33">iCont</name>	<op:operator pos:line="601" pos:column="41">=</op:operator> <call><name><name pos:line="601" pos:column="43">_vContainer</name><op:operator pos:line="601" pos:column="54">.</op:operator><name pos:line="601" pos:column="55">size</name></name><argument_list pos:line="601" pos:column="59">()</argument_list></call><op:operator pos:line="601" pos:column="61">-</op:operator><lit:literal type="number" pos:line="601" pos:column="62">1</lit:literal></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="603" pos:column="25">else
			<block pos:line="604" pos:column="25">{
				<comment type="line" pos:line="605" pos:column="33">// set position</comment>
				<expr_stmt><expr><name pos:line="606" pos:column="33">iCont</name> <op:operator pos:line="606" pos:column="39">=</op:operator> <op:operator pos:line="606" pos:column="41">(</op:operator><name><name pos:line="606" pos:column="42">data</name><op:operator pos:line="606" pos:column="46">.</op:operator><name pos:line="606" pos:column="47">uMask</name></name> <op:operator pos:line="606" pos:column="53">&amp;</op:operator> <lit:literal type="number" pos:line="606" pos:column="55">0x30000000</lit:literal><op:operator pos:line="606" pos:column="65">)</op:operator> <op:operator pos:line="606" pos:column="67">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="606" pos:column="70">28</lit:literal></expr>;</expr_stmt>

				<comment type="line" pos:line="608" pos:column="33">// previous container is not selected</comment>
				<expr_stmt><expr><name><name pos:line="609" pos:column="33">data</name><op:operator pos:line="609" pos:column="37">.</op:operator><name pos:line="609" pos:column="38">iPrevCont</name></name> <op:operator pos:line="609" pos:column="48">=</op:operator> <op:operator pos:line="609" pos:column="50">-</op:operator><lit:literal type="number" pos:line="609" pos:column="51">1</lit:literal></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then></if>
	}</block></then>
	<comment type="line" pos:line="613" pos:column="9">// if one of the container was not created before</comment>
	<else pos:line="614" pos:column="9">else <if pos:line="614" pos:column="14">if <condition pos:line="614" pos:column="17">(<expr><op:operator pos:line="614" pos:column="18">(</op:operator><name pos:line="614" pos:column="19">iCont</name> <op:operator pos:line="614" pos:column="25">&gt;=</op:operator> <name pos:line="614" pos:column="28">DOCKCONT_MAX</name><op:operator pos:line="614" pos:column="40">)</op:operator> <op:operator pos:line="614" pos:column="42">||</op:operator> <op:operator pos:line="614" pos:column="45">(</op:operator><name><name pos:line="614" pos:column="46">data</name><op:operator pos:line="614" pos:column="50">.</op:operator><name pos:line="614" pos:column="51">iPrevCont</name></name> <op:operator pos:line="614" pos:column="61">&gt;=</op:operator> <name pos:line="614" pos:column="64">DOCKCONT_MAX</name><op:operator pos:line="614" pos:column="76">)</op:operator></expr>)</condition><then pos:line="614" pos:column="78">
	<block pos:line="615" pos:column="9">{
        <comment type="line" pos:line="616" pos:column="9">// test if current container is in floating state</comment>
		<if pos:line="617" pos:column="17">if <condition pos:line="617" pos:column="20">(<expr><name pos:line="617" pos:column="21">iCont</name> <op:operator pos:line="617" pos:column="27">&gt;=</op:operator> <name pos:line="617" pos:column="30">DOCKCONT_MAX</name></expr>)</condition><then pos:line="617" pos:column="43">
		<block pos:line="618" pos:column="17">{
			<comment type="line" pos:line="619" pos:column="25">// no mapping for available store mapping</comment>
			<if pos:line="620" pos:column="25">if <condition pos:line="620" pos:column="28">(<expr><name><name pos:line="620" pos:column="29">_iContMap</name><index pos:line="620" pos:column="38">[<expr><name pos:line="620" pos:column="39">iCont</name></expr>]</index></name> <op:operator pos:line="620" pos:column="46">==</op:operator> <op:operator pos:line="620" pos:column="49">-</op:operator><lit:literal type="number" pos:line="620" pos:column="50">1</lit:literal></expr>)</condition><then pos:line="620" pos:column="52">
			<block pos:line="621" pos:column="25">{
				<comment type="line" pos:line="622" pos:column="33">// create new container</comment>
				<expr_stmt><expr><name pos:line="623" pos:column="33">pCont</name> <op:operator pos:line="623" pos:column="39">=</op:operator> <op:operator pos:line="623" pos:column="41">new</op:operator> <name pos:line="623" pos:column="45">DockingCont</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="624" pos:column="33">_vContainer</name><op:operator pos:line="624" pos:column="44">.</op:operator><name pos:line="624" pos:column="45">push_back</name></name><argument_list pos:line="624" pos:column="54">(<argument><expr><name pos:line="624" pos:column="55">pCont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="626" pos:column="33">// initialize and map container id</comment>
				<expr_stmt><expr><call><name><name pos:line="627" pos:column="33">pCont</name><op:operator pos:line="627" pos:column="38">-&gt;</op:operator><name pos:line="627" pos:column="40">init</name></name><argument_list pos:line="627" pos:column="44">(<argument><expr><name pos:line="627" pos:column="45">_hInst</name></expr></argument>, <argument><expr><name pos:line="627" pos:column="53">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="628" pos:column="33">pCont</name><op:operator pos:line="628" pos:column="38">-&gt;</op:operator><name pos:line="628" pos:column="40">doDialog</name></name><argument_list pos:line="628" pos:column="48">(<argument><expr><name pos:line="628" pos:column="49">isVisible</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="628" pos:column="60">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="629" pos:column="33">_iContMap</name><index pos:line="629" pos:column="42">[<expr><name pos:line="629" pos:column="43">iCont</name></expr>]</index></name> <op:operator pos:line="629" pos:column="50">=</op:operator> <call><name><name pos:line="629" pos:column="52">_vContainer</name><op:operator pos:line="629" pos:column="63">.</op:operator><name pos:line="629" pos:column="64">size</name></name><argument_list pos:line="629" pos:column="68">()</argument_list></call><op:operator pos:line="629" pos:column="70">-</op:operator><lit:literal type="number" pos:line="629" pos:column="71">1</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<comment type="line" pos:line="632" pos:column="25">// get current container from map</comment>
			<expr_stmt><expr><name pos:line="633" pos:column="25">iCont</name> <op:operator pos:line="633" pos:column="31">=</op:operator> <name><name pos:line="633" pos:column="33">_iContMap</name><index pos:line="633" pos:column="42">[<expr><name pos:line="633" pos:column="43">iCont</name></expr>]</index></name></expr>;</expr_stmt>
		}</block></then>
		<comment type="line" pos:line="635" pos:column="17">// previous container is in floating state </comment>
		<else pos:line="636" pos:column="17">else
		<block pos:line="637" pos:column="17">{
			<comment type="line" pos:line="638" pos:column="25">// no mapping for available store mapping</comment>
			<if pos:line="639" pos:column="25">if <condition pos:line="639" pos:column="28">(<expr><name><name pos:line="639" pos:column="29">_iContMap</name><index pos:line="639" pos:column="38">[<expr><name><name pos:line="639" pos:column="39">data</name><op:operator pos:line="639" pos:column="43">.</op:operator><name pos:line="639" pos:column="44">iPrevCont</name></name></expr>]</index></name> <op:operator pos:line="639" pos:column="55">==</op:operator> <op:operator pos:line="639" pos:column="58">-</op:operator><lit:literal type="number" pos:line="639" pos:column="59">1</lit:literal></expr>)</condition><then pos:line="639" pos:column="61">
			<block pos:line="640" pos:column="25">{
				<comment type="line" pos:line="641" pos:column="33">// create new container</comment>
				<expr_stmt><expr><name pos:line="642" pos:column="33">pCont</name> <op:operator pos:line="642" pos:column="39">=</op:operator> <op:operator pos:line="642" pos:column="41">new</op:operator> <name pos:line="642" pos:column="45">DockingCont</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="643" pos:column="33">_vContainer</name><op:operator pos:line="643" pos:column="44">.</op:operator><name pos:line="643" pos:column="45">push_back</name></name><argument_list pos:line="643" pos:column="54">(<argument><expr><name pos:line="643" pos:column="55">pCont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="645" pos:column="33">// initialize and map container id</comment>
				<expr_stmt><expr><call><name><name pos:line="646" pos:column="33">pCont</name><op:operator pos:line="646" pos:column="38">-&gt;</op:operator><name pos:line="646" pos:column="40">init</name></name><argument_list pos:line="646" pos:column="44">(<argument><expr><name pos:line="646" pos:column="45">_hInst</name></expr></argument>, <argument><expr><name pos:line="646" pos:column="53">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="647" pos:column="33">pCont</name><op:operator pos:line="647" pos:column="38">-&gt;</op:operator><name pos:line="647" pos:column="40">doDialog</name></name><argument_list pos:line="647" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="647" pos:column="49">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="647" pos:column="56">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="648" pos:column="33">pCont</name><op:operator pos:line="648" pos:column="38">-&gt;</op:operator><name pos:line="648" pos:column="40">reSizeToWH</name></name><argument_list pos:line="648" pos:column="50">(<argument><expr><name><name pos:line="648" pos:column="51">data</name><op:operator pos:line="648" pos:column="55">.</op:operator><name pos:line="648" pos:column="56">rcFloat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="649" pos:column="33">_iContMap</name><index pos:line="649" pos:column="42">[<expr><name><name pos:line="649" pos:column="43">data</name><op:operator pos:line="649" pos:column="47">.</op:operator><name pos:line="649" pos:column="48">iPrevCont</name></name></expr>]</index></name> <op:operator pos:line="649" pos:column="59">=</op:operator> <call><name><name pos:line="649" pos:column="61">_vContainer</name><op:operator pos:line="649" pos:column="72">.</op:operator><name pos:line="649" pos:column="73">size</name></name><argument_list pos:line="649" pos:column="77">()</argument_list></call><op:operator pos:line="649" pos:column="79">-</op:operator><lit:literal type="number" pos:line="649" pos:column="80">1</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name><name pos:line="651" pos:column="25">data</name><op:operator pos:line="651" pos:column="29">.</op:operator><name pos:line="651" pos:column="30">iPrevCont</name></name> <op:operator pos:line="651" pos:column="40">=</op:operator> <name><name pos:line="651" pos:column="42">_iContMap</name><index pos:line="651" pos:column="51">[<expr><name><name pos:line="651" pos:column="52">data</name><op:operator pos:line="651" pos:column="56">.</op:operator><name pos:line="651" pos:column="57">iPrevCont</name></name></expr>]</index></name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if></else></if>

	<comment type="line" pos:line="655" pos:column="9">// attach toolbar</comment>
	<if pos:line="656" pos:column="9">if <condition pos:line="656" pos:column="12">(<expr><call><name><name pos:line="656" pos:column="13">_vContainer</name><op:operator pos:line="656" pos:column="24">.</op:operator><name pos:line="656" pos:column="25">size</name></name><argument_list pos:line="656" pos:column="29">()</argument_list></call> <op:operator pos:line="656" pos:column="32">&gt;</op:operator> <op:operator pos:line="656" pos:column="34">(</op:operator><name pos:line="656" pos:column="35">size_t</name><op:operator pos:line="656" pos:column="41">)</op:operator><name pos:line="656" pos:column="42">iCont</name> <op:operator pos:line="656" pos:column="48">&amp;&amp;</op:operator> <name><name pos:line="656" pos:column="51">_vContainer</name><index pos:line="656" pos:column="62">[<expr><name pos:line="656" pos:column="63">iCont</name></expr>]</index></name> <op:operator pos:line="656" pos:column="70">!=</op:operator> <name pos:line="656" pos:column="73">NULL</name></expr>)</condition><then pos:line="656" pos:column="78">
		<expr_stmt><expr><name><name pos:line="657" pos:column="17">_vContainer</name><index pos:line="657" pos:column="28">[<expr><name pos:line="657" pos:column="29">iCont</name></expr>]</index></name><op:operator pos:line="657" pos:column="35">-&gt;</op:operator><call><name pos:line="657" pos:column="37">createToolbar</name><argument_list pos:line="657" pos:column="50">(<argument><expr><name pos:line="657" pos:column="51">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<comment type="line" pos:line="659" pos:column="9">// notify client app</comment>
	<if pos:line="660" pos:column="9">if <condition pos:line="660" pos:column="12">(<expr><name pos:line="660" pos:column="13">iCont</name> <op:operator pos:line="660" pos:column="19">&lt;</op:operator> <name pos:line="660" pos:column="21">DOCKCONT_MAX</name></expr>)</condition><then pos:line="660" pos:column="34">
		<expr_stmt><expr><call><name pos:line="661" pos:column="17">SendNotify</name><argument_list pos:line="661" pos:column="27">(<argument><expr><name><name pos:line="661" pos:column="28">data</name><op:operator pos:line="661" pos:column="32">.</op:operator><name pos:line="661" pos:column="33">hClient</name></name></expr></argument>, <argument><expr><call><name pos:line="661" pos:column="42">MAKELONG</name><argument_list pos:line="661" pos:column="50">(<argument><expr><name pos:line="661" pos:column="51">DMN_DOCK</name></expr></argument>, <argument><expr><name pos:line="661" pos:column="61">iCont</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="662" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="663" pos:column="17">SendNotify</name><argument_list pos:line="663" pos:column="27">(<argument><expr><name><name pos:line="663" pos:column="28">data</name><op:operator pos:line="663" pos:column="32">.</op:operator><name pos:line="663" pos:column="33">hClient</name></name></expr></argument>, <argument><expr><call><name pos:line="663" pos:column="42">MAKELONG</name><argument_list pos:line="663" pos:column="50">(<argument><expr><name pos:line="663" pos:column="51">DMN_FLOAT</name></expr></argument>, <argument><expr><name pos:line="663" pos:column="62">iCont</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
}</block></function>

<function><type><name pos:line="666" pos:column="1">void</name></type> <name><name pos:line="666" pos:column="6">DockingManager</name><op:operator pos:line="666" pos:column="20">::</op:operator><name pos:line="666" pos:column="22">setActiveTab</name></name><parameter_list pos:line="666" pos:column="34">(<param><decl><type><name pos:line="666" pos:column="35">int</name></type> <name pos:line="666" pos:column="39">iCont</name></decl></param>, <param><decl><type><name pos:line="666" pos:column="46">int</name></type> <name pos:line="666" pos:column="50">iItem</name></decl></param>)</parameter_list>
<block pos:line="667" pos:column="1">{
	<if pos:line="668" pos:column="9">if <condition pos:line="668" pos:column="12">(<expr><op:operator pos:line="668" pos:column="13">(</op:operator><name pos:line="668" pos:column="14">iCont</name> <op:operator pos:line="668" pos:column="20">==</op:operator> <op:operator pos:line="668" pos:column="23">-</op:operator><lit:literal type="number" pos:line="668" pos:column="24">1</lit:literal><op:operator pos:line="668" pos:column="25">)</op:operator> <op:operator pos:line="668" pos:column="27">||</op:operator> <op:operator pos:line="668" pos:column="30">(</op:operator><name><name pos:line="668" pos:column="31">_iContMap</name><index pos:line="668" pos:column="40">[<expr><name pos:line="668" pos:column="41">iCont</name></expr>]</index></name> <op:operator pos:line="668" pos:column="48">==</op:operator> <op:operator pos:line="668" pos:column="51">-</op:operator><lit:literal type="number" pos:line="668" pos:column="52">1</lit:literal><op:operator pos:line="668" pos:column="53">)</op:operator></expr>)</condition><then pos:line="668" pos:column="55">
		<return pos:line="669" pos:column="17">return;</return></then></if>

	<expr_stmt><expr><name><name pos:line="671" pos:column="9">_vContainer</name><index pos:line="671" pos:column="20">[<expr><name><name pos:line="671" pos:column="21">_iContMap</name><index pos:line="671" pos:column="30">[<expr><name pos:line="671" pos:column="31">iCont</name></expr>]</index></name></expr>]</index></name><op:operator pos:line="671" pos:column="38">-&gt;</op:operator><call><name pos:line="671" pos:column="40">setActiveTb</name><argument_list pos:line="671" pos:column="51">(<argument><expr><name pos:line="671" pos:column="52">iItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="674" pos:column="1">void</name></type> <name><name pos:line="674" pos:column="6">DockingManager</name><op:operator pos:line="674" pos:column="20">::</op:operator><name pos:line="674" pos:column="22">showDockableDlg</name></name><parameter_list pos:line="674" pos:column="37">(<param><decl><type><name pos:line="674" pos:column="38">HWND</name></type> <name pos:line="674" pos:column="43">hDlg</name></decl></param>, <param><decl><type><name pos:line="674" pos:column="49">BOOL</name></type> <name pos:line="674" pos:column="54">view</name></decl></param>)</parameter_list> 
<block pos:line="675" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="676" pos:column="9">tTbData</name> <type:modifier pos:line="676" pos:column="17">*</type:modifier></type><name pos:line="676" pos:column="18">pTbData</name> <init pos:line="676" pos:column="26">= <expr><name pos:line="676" pos:column="28">NULL</name></expr></init></decl>;</decl_stmt>
	<for pos:line="677" pos:column="9">for (<init><decl><type><name pos:line="677" pos:column="14">size_t</name></type> <name pos:line="677" pos:column="21">i</name> <init pos:line="677" pos:column="23">= <expr><lit:literal type="number" pos:line="677" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="677" pos:column="28">i</name> <op:operator pos:line="677" pos:column="30">&lt;</op:operator> <call><name><name pos:line="677" pos:column="32">_vContainer</name><op:operator pos:line="677" pos:column="43">.</op:operator><name pos:line="677" pos:column="44">size</name></name><argument_list pos:line="677" pos:column="48">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="677" pos:column="52">i</name><op:operator pos:line="677" pos:column="53">++</op:operator></expr></incr>)
	<block pos:line="678" pos:column="9">{
		<expr_stmt><expr><name pos:line="679" pos:column="17">pTbData</name> <op:operator pos:line="679" pos:column="25">=</op:operator> <name><name pos:line="679" pos:column="27">_vContainer</name><index pos:line="679" pos:column="38">[<expr><name pos:line="679" pos:column="39">i</name></expr>]</index></name><op:operator pos:line="679" pos:column="41">-&gt;</op:operator><call><name pos:line="679" pos:column="43">findToolbarByWnd</name><argument_list pos:line="679" pos:column="59">(<argument><expr><name pos:line="679" pos:column="60">hDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="680" pos:column="17">if <condition pos:line="680" pos:column="20">(<expr><name pos:line="680" pos:column="21">pTbData</name> <op:operator pos:line="680" pos:column="29">!=</op:operator> <name pos:line="680" pos:column="32">NULL</name></expr>)</condition><then pos:line="680" pos:column="37">
		<block pos:line="681" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="682" pos:column="25">_vContainer</name><index pos:line="682" pos:column="36">[<expr><name pos:line="682" pos:column="37">i</name></expr>]</index></name><op:operator pos:line="682" pos:column="39">-&gt;</op:operator><call><name pos:line="682" pos:column="41">showToolbar</name><argument_list pos:line="682" pos:column="52">(<argument><expr><name pos:line="682" pos:column="53">pTbData</name></expr></argument>, <argument><expr><name pos:line="682" pos:column="62">view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="683" pos:column="25">return;</return>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="688" pos:column="1">void</name></type> <name><name pos:line="688" pos:column="6">DockingManager</name><op:operator pos:line="688" pos:column="20">::</op:operator><name pos:line="688" pos:column="22">showDockableDlg</name></name><parameter_list pos:line="688" pos:column="37">(<param><decl><type><name pos:line="688" pos:column="38">TCHAR</name><type:modifier pos:line="688" pos:column="43">*</type:modifier></type> <name pos:line="688" pos:column="45">pszName</name></decl></param>, <param><decl><type><name pos:line="688" pos:column="54">BOOL</name></type> <name pos:line="688" pos:column="59">view</name></decl></param>)</parameter_list>
<block pos:line="689" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="690" pos:column="9">tTbData</name> <type:modifier pos:line="690" pos:column="17">*</type:modifier></type><name pos:line="690" pos:column="18">pTbData</name> <init pos:line="690" pos:column="26">= <expr><name pos:line="690" pos:column="28">NULL</name></expr></init></decl>;</decl_stmt>
	<for pos:line="691" pos:column="9">for (<init><decl><type><name pos:line="691" pos:column="14">size_t</name></type> <name pos:line="691" pos:column="21">i</name> <init pos:line="691" pos:column="23">= <expr><lit:literal type="number" pos:line="691" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="691" pos:column="28">i</name> <op:operator pos:line="691" pos:column="30">&lt;</op:operator> <call><name><name pos:line="691" pos:column="32">_vContainer</name><op:operator pos:line="691" pos:column="43">.</op:operator><name pos:line="691" pos:column="44">size</name></name><argument_list pos:line="691" pos:column="48">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="691" pos:column="52">i</name><op:operator pos:line="691" pos:column="53">++</op:operator></expr></incr>)
	<block pos:line="692" pos:column="9">{
		<expr_stmt><expr><name pos:line="693" pos:column="17">pTbData</name> <op:operator pos:line="693" pos:column="25">=</op:operator> <name><name pos:line="693" pos:column="27">_vContainer</name><index pos:line="693" pos:column="38">[<expr><name pos:line="693" pos:column="39">i</name></expr>]</index></name><op:operator pos:line="693" pos:column="41">-&gt;</op:operator><call><name pos:line="693" pos:column="43">findToolbarByName</name><argument_list pos:line="693" pos:column="60">(<argument><expr><name pos:line="693" pos:column="61">pszName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="694" pos:column="17">if <condition pos:line="694" pos:column="20">(<expr><name pos:line="694" pos:column="21">pTbData</name> <op:operator pos:line="694" pos:column="29">!=</op:operator> <name pos:line="694" pos:column="32">NULL</name></expr>)</condition><then pos:line="694" pos:column="37">
		<block pos:line="695" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="696" pos:column="25">_vContainer</name><index pos:line="696" pos:column="36">[<expr><name pos:line="696" pos:column="37">i</name></expr>]</index></name><op:operator pos:line="696" pos:column="39">-&gt;</op:operator><call><name pos:line="696" pos:column="41">showToolbar</name><argument_list pos:line="696" pos:column="52">(<argument><expr><name pos:line="696" pos:column="53">pTbData</name></expr></argument>, <argument><expr><name pos:line="696" pos:column="62">view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="697" pos:column="25">return;</return>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="702" pos:column="1">LRESULT</name></type> <name><name pos:line="702" pos:column="9">DockingManager</name><op:operator pos:line="702" pos:column="23">::</op:operator><name pos:line="702" pos:column="25">SendNotify</name></name><parameter_list pos:line="702" pos:column="35">(<param><decl><type><name pos:line="702" pos:column="36">HWND</name></type> <name pos:line="702" pos:column="41">hWnd</name></decl></param>, <param><decl><type><name pos:line="702" pos:column="47">UINT</name></type> <name pos:line="702" pos:column="52">message</name></decl></param>)</parameter_list> 
<block pos:line="703" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="704" pos:column="9">NMHDR</name></type>	<name pos:line="704" pos:column="17">nmhdr</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="705" pos:column="9">nmhdr</name><op:operator pos:line="705" pos:column="14">.</op:operator><name pos:line="705" pos:column="15">code</name></name>		<op:operator pos:line="705" pos:column="33">=</op:operator> <name pos:line="705" pos:column="35">message</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="706" pos:column="9">nmhdr</name><op:operator pos:line="706" pos:column="14">.</op:operator><name pos:line="706" pos:column="15">hwndFrom</name></name>	<op:operator pos:line="706" pos:column="25">=</op:operator> <name pos:line="706" pos:column="27">_hParent</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="707" pos:column="9">nmhdr</name><op:operator pos:line="707" pos:column="14">.</op:operator><name pos:line="707" pos:column="15">idFrom</name></name>	<op:operator pos:line="707" pos:column="25">=</op:operator> <call><name><op:operator pos:line="707" pos:column="27">::</op:operator><name pos:line="707" pos:column="29">GetDlgCtrlID</name></name><argument_list pos:line="707" pos:column="41">(<argument><expr><name pos:line="707" pos:column="42">_hParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="708" pos:column="9">::</op:operator><name pos:line="708" pos:column="11">SendMessage</name></name><argument_list pos:line="708" pos:column="22">(<argument><expr><name pos:line="708" pos:column="23">hWnd</name></expr></argument>, <argument><expr><name pos:line="708" pos:column="29">WM_NOTIFY</name></expr></argument>, <argument><expr><name><name pos:line="708" pos:column="40">nmhdr</name><op:operator pos:line="708" pos:column="45">.</op:operator><name pos:line="708" pos:column="46">idFrom</name></name></expr></argument>, <argument><expr><op:operator pos:line="708" pos:column="54">(</op:operator><name pos:line="708" pos:column="55">LPARAM</name><op:operator pos:line="708" pos:column="61">)</op:operator><op:operator pos:line="708" pos:column="62">&amp;</op:operator><name pos:line="708" pos:column="63">nmhdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="709" pos:column="9">return <expr><call><name><op:operator pos:line="709" pos:column="16">::</op:operator><name pos:line="709" pos:column="18">GetWindowLongPtr</name></name><argument_list pos:line="709" pos:column="34">(<argument><expr><name pos:line="709" pos:column="35">hWnd</name></expr></argument>, <argument><expr><name pos:line="709" pos:column="41">DWL_MSGRESULT</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="712" pos:column="1">void</name></type> <name><name pos:line="712" pos:column="6">DockingManager</name><op:operator pos:line="712" pos:column="20">::</op:operator><name pos:line="712" pos:column="22">setDockedContSize</name></name><parameter_list pos:line="712" pos:column="39">(<param><decl><type><name pos:line="712" pos:column="40">int</name></type> <name pos:line="712" pos:column="44">iCont</name></decl></param>, <param><decl><type><name pos:line="712" pos:column="51">int</name></type> <name pos:line="712" pos:column="55">iSize</name></decl></param>)</parameter_list>
<block pos:line="713" pos:column="1">{
	<if pos:line="714" pos:column="9">if <condition pos:line="714" pos:column="12">(<expr><op:operator pos:line="714" pos:column="13">(</op:operator><name pos:line="714" pos:column="14">iCont</name> <op:operator pos:line="714" pos:column="20">==</op:operator> <name pos:line="714" pos:column="23">CONT_TOP</name><op:operator pos:line="714" pos:column="31">)</op:operator> <op:operator pos:line="714" pos:column="33">||</op:operator> <op:operator pos:line="714" pos:column="36">(</op:operator><name pos:line="714" pos:column="37">iCont</name> <op:operator pos:line="714" pos:column="43">==</op:operator> <name pos:line="714" pos:column="46">CONT_BOTTOM</name><op:operator pos:line="714" pos:column="57">)</op:operator></expr>)</condition><then pos:line="714" pos:column="59">
		<expr_stmt><expr><name><name pos:line="715" pos:column="17">_dockData</name><op:operator pos:line="715" pos:column="26">.</op:operator><name pos:line="715" pos:column="27">rcRegion</name><index pos:line="715" pos:column="35">[<expr><name pos:line="715" pos:column="36">iCont</name></expr>]</index></name><op:operator pos:line="715" pos:column="42">.</op:operator><name pos:line="715" pos:column="43">bottom</name> <op:operator pos:line="715" pos:column="50">=</op:operator> <name pos:line="715" pos:column="52">iSize</name></expr>;</expr_stmt></then>
	<else pos:line="716" pos:column="9">else <if pos:line="716" pos:column="14">if <condition pos:line="716" pos:column="17">(<expr><op:operator pos:line="716" pos:column="18">(</op:operator><name pos:line="716" pos:column="19">iCont</name> <op:operator pos:line="716" pos:column="25">==</op:operator> <name pos:line="716" pos:column="28">CONT_LEFT</name><op:operator pos:line="716" pos:column="37">)</op:operator> <op:operator pos:line="716" pos:column="39">||</op:operator> <op:operator pos:line="716" pos:column="42">(</op:operator><name pos:line="716" pos:column="43">iCont</name> <op:operator pos:line="716" pos:column="49">==</op:operator> <name pos:line="716" pos:column="52">CONT_RIGHT</name><op:operator pos:line="716" pos:column="62">)</op:operator></expr>)</condition><then pos:line="716" pos:column="64">
		<expr_stmt><expr><name><name pos:line="717" pos:column="17">_dockData</name><op:operator pos:line="717" pos:column="26">.</op:operator><name pos:line="717" pos:column="27">rcRegion</name><index pos:line="717" pos:column="35">[<expr><name pos:line="717" pos:column="36">iCont</name></expr>]</index></name><op:operator pos:line="717" pos:column="42">.</op:operator><name pos:line="717" pos:column="43">right</name> <op:operator pos:line="717" pos:column="49">=</op:operator> <name pos:line="717" pos:column="51">iSize</name></expr>;</expr_stmt></then>
	<else pos:line="718" pos:column="9">else
		<return pos:line="719" pos:column="17">return;</return></else></if></else></if>
	<expr_stmt><expr><call><name pos:line="720" pos:column="9">onSize</name><argument_list pos:line="720" pos:column="15">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="723" pos:column="1">int</name></type> <name><name pos:line="723" pos:column="5">DockingManager</name><op:operator pos:line="723" pos:column="19">::</op:operator><name pos:line="723" pos:column="21">getDockedContSize</name></name><parameter_list pos:line="723" pos:column="38">(<param><decl><type><name pos:line="723" pos:column="39">int</name></type> <name pos:line="723" pos:column="43">iCont</name></decl></param>)</parameter_list>
<block pos:line="724" pos:column="1">{
	<if pos:line="725" pos:column="9">if <condition pos:line="725" pos:column="12">(<expr><op:operator pos:line="725" pos:column="13">(</op:operator><name pos:line="725" pos:column="14">iCont</name> <op:operator pos:line="725" pos:column="20">==</op:operator> <name pos:line="725" pos:column="23">CONT_TOP</name><op:operator pos:line="725" pos:column="31">)</op:operator> <op:operator pos:line="725" pos:column="33">||</op:operator> <op:operator pos:line="725" pos:column="36">(</op:operator><name pos:line="725" pos:column="37">iCont</name> <op:operator pos:line="725" pos:column="43">==</op:operator> <name pos:line="725" pos:column="46">CONT_BOTTOM</name><op:operator pos:line="725" pos:column="57">)</op:operator></expr>)</condition><then pos:line="725" pos:column="59">
		<return pos:line="726" pos:column="17">return <expr><name><name pos:line="726" pos:column="24">_dockData</name><op:operator pos:line="726" pos:column="33">.</op:operator><name pos:line="726" pos:column="34">rcRegion</name><index pos:line="726" pos:column="42">[<expr><name pos:line="726" pos:column="43">iCont</name></expr>]</index></name><op:operator pos:line="726" pos:column="49">.</op:operator><name pos:line="726" pos:column="50">bottom</name></expr>;</return></then>
	<else pos:line="727" pos:column="9">else <if pos:line="727" pos:column="14">if <condition pos:line="727" pos:column="17">(<expr><op:operator pos:line="727" pos:column="18">(</op:operator><name pos:line="727" pos:column="19">iCont</name> <op:operator pos:line="727" pos:column="25">==</op:operator> <name pos:line="727" pos:column="28">CONT_LEFT</name><op:operator pos:line="727" pos:column="37">)</op:operator> <op:operator pos:line="727" pos:column="39">||</op:operator> <op:operator pos:line="727" pos:column="42">(</op:operator><name pos:line="727" pos:column="43">iCont</name> <op:operator pos:line="727" pos:column="49">==</op:operator> <name pos:line="727" pos:column="52">CONT_RIGHT</name><op:operator pos:line="727" pos:column="62">)</op:operator></expr>)</condition><then pos:line="727" pos:column="64">
		<return pos:line="728" pos:column="17">return <expr><name><name pos:line="728" pos:column="24">_dockData</name><op:operator pos:line="728" pos:column="33">.</op:operator><name pos:line="728" pos:column="34">rcRegion</name><index pos:line="728" pos:column="42">[<expr><name pos:line="728" pos:column="43">iCont</name></expr>]</index></name><op:operator pos:line="728" pos:column="49">.</op:operator><name pos:line="728" pos:column="50">right</name></expr>;</return></then>
	<else pos:line="729" pos:column="9">else
		<return pos:line="730" pos:column="17">return <expr><op:operator pos:line="730" pos:column="24">-</op:operator><lit:literal type="number" pos:line="730" pos:column="25">1</lit:literal></expr>;</return></else></if></else></if>
}</block></function>

<function><type><name pos:line="733" pos:column="1">DockingCont</name><type:modifier pos:line="733" pos:column="12">*</type:modifier></type> <name><name pos:line="733" pos:column="14">DockingManager</name><op:operator pos:line="733" pos:column="28">::</op:operator><name pos:line="733" pos:column="30">toggleActiveTb</name></name><parameter_list pos:line="733" pos:column="44">(<param><decl><type><name pos:line="733" pos:column="45">DockingCont</name><type:modifier pos:line="733" pos:column="56">*</type:modifier></type> <name pos:line="733" pos:column="58">pContSrc</name></decl></param>, <param><decl><type><name pos:line="733" pos:column="68">UINT</name></type> <name pos:line="733" pos:column="73">message</name></decl></param>, <param><decl><type><name pos:line="733" pos:column="82">BOOL</name></type> <name pos:line="733" pos:column="87">bNew</name></decl></param>, <param><decl><type><name pos:line="733" pos:column="93">LPRECT</name></type> <name pos:line="733" pos:column="100">prcFloat</name></decl></param>)</parameter_list>
<block pos:line="734" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="735" pos:column="9">tTbData</name></type>			<name pos:line="735" pos:column="33">TbData</name>		<init pos:line="735" pos:column="49">= <expr><op:operator pos:line="735" pos:column="51">*</op:operator><call><name><name pos:line="735" pos:column="52">pContSrc</name><op:operator pos:line="735" pos:column="60">-&gt;</op:operator><name pos:line="735" pos:column="62">getDataOfActiveTb</name></name><argument_list pos:line="735" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="736" pos:column="9">int</name></type>				<name pos:line="736" pos:column="41">iContSrc</name>	<init pos:line="736" pos:column="57">= <expr><call><name pos:line="736" pos:column="59">GetContainer</name><argument_list pos:line="736" pos:column="71">(<argument><expr><name pos:line="736" pos:column="72">pContSrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="737" pos:column="9">int</name></type>				<name pos:line="737" pos:column="41">iContPrev</name>	<init pos:line="737" pos:column="57">= <expr><name><name pos:line="737" pos:column="59">TbData</name><op:operator pos:line="737" pos:column="65">.</op:operator><name pos:line="737" pos:column="66">iPrevCont</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="738" pos:column="9">BOOL</name></type>			<name pos:line="738" pos:column="33">isCont</name>		<init pos:line="738" pos:column="49">= <expr><call><name pos:line="738" pos:column="51">ContExists</name><argument_list pos:line="738" pos:column="61">(<argument><expr><name pos:line="738" pos:column="62">iContPrev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="739" pos:column="9">DockingCont</name><type:modifier pos:line="739" pos:column="20">*</type:modifier></type>	<name pos:line="739" pos:column="25">pContTgt</name>	<init pos:line="739" pos:column="41">= <expr><name pos:line="739" pos:column="43">NULL</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="741" pos:column="9">// if new float position is given</comment>
	<if pos:line="742" pos:column="9">if <condition pos:line="742" pos:column="12">(<expr><name pos:line="742" pos:column="13">prcFloat</name> <op:operator pos:line="742" pos:column="22">!=</op:operator> <name pos:line="742" pos:column="25">NULL</name></expr>)</condition><then pos:line="742" pos:column="30">
	<block pos:line="743" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="744" pos:column="17">TbData</name><op:operator pos:line="744" pos:column="23">.</op:operator><name pos:line="744" pos:column="24">rcFloat</name></name> <op:operator pos:line="744" pos:column="32">=</op:operator> <op:operator pos:line="744" pos:column="34">*</op:operator><name pos:line="744" pos:column="35">prcFloat</name></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="747" pos:column="9">if <condition pos:line="747" pos:column="12">(<expr><op:operator pos:line="747" pos:column="13">(</op:operator><name pos:line="747" pos:column="14">isCont</name> <op:operator pos:line="747" pos:column="21">==</op:operator> <name pos:line="747" pos:column="24">FALSE</name><op:operator pos:line="747" pos:column="29">)</op:operator> <op:operator pos:line="747" pos:column="31">||</op:operator> <op:operator pos:line="747" pos:column="34">(</op:operator><name pos:line="747" pos:column="35">bNew</name> <op:operator pos:line="747" pos:column="40">==</op:operator> <name pos:line="747" pos:column="43">TRUE</name><op:operator pos:line="747" pos:column="47">)</op:operator></expr>)</condition><then pos:line="747" pos:column="49">
	<block pos:line="748" pos:column="9">{
		<comment type="line" pos:line="749" pos:column="17">// find an empty container</comment>
		<decl_stmt><decl><type><name pos:line="750" pos:column="17">int</name></type>	<name pos:line="750" pos:column="25">iContNew</name> <init pos:line="750" pos:column="34">= <expr><call><name pos:line="750" pos:column="36">FindEmptyContainer</name><argument_list pos:line="750" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="752" pos:column="17">if <condition pos:line="752" pos:column="20">(<expr><name pos:line="752" pos:column="21">iContNew</name> <op:operator pos:line="752" pos:column="30">==</op:operator> <op:operator pos:line="752" pos:column="33">-</op:operator><lit:literal type="number" pos:line="752" pos:column="34">1</lit:literal></expr>)</condition><then pos:line="752" pos:column="36">
		<block pos:line="753" pos:column="17">{
			<comment type="line" pos:line="754" pos:column="25">// if no free container is available create a new one</comment>
			<expr_stmt><expr><name pos:line="755" pos:column="25">pContTgt</name> <op:operator pos:line="755" pos:column="34">=</op:operator> <op:operator pos:line="755" pos:column="36">new</op:operator> <name pos:line="755" pos:column="40">DockingCont</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="756" pos:column="25">pContTgt</name><op:operator pos:line="756" pos:column="33">-&gt;</op:operator><name pos:line="756" pos:column="35">init</name></name><argument_list pos:line="756" pos:column="39">(<argument><expr><name pos:line="756" pos:column="40">_hInst</name></expr></argument>, <argument><expr><name pos:line="756" pos:column="48">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="757" pos:column="25">pContTgt</name><op:operator pos:line="757" pos:column="33">-&gt;</op:operator><name pos:line="757" pos:column="35">doDialog</name></name><argument_list pos:line="757" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="757" pos:column="44">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="757" pos:column="50">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="759" pos:column="25">// change only on toggling</comment>
			<if pos:line="760" pos:column="25">if <condition pos:line="760" pos:column="28">(<expr><op:operator pos:line="760" pos:column="29">(</op:operator><name pos:line="760" pos:column="30">bNew</name> <op:operator pos:line="760" pos:column="35">==</op:operator> <name pos:line="760" pos:column="38">FALSE</name><op:operator pos:line="760" pos:column="43">)</op:operator> <op:operator pos:line="760" pos:column="45">||</op:operator> <op:operator pos:line="760" pos:column="48">(</op:operator><op:operator pos:line="760" pos:column="49">!</op:operator><call><name><name pos:line="760" pos:column="50">pContSrc</name><op:operator pos:line="760" pos:column="58">-&gt;</op:operator><name pos:line="760" pos:column="60">isFloating</name></name><argument_list pos:line="760" pos:column="70">()</argument_list></call><op:operator pos:line="760" pos:column="72">)</op:operator></expr>)</condition><then pos:line="760" pos:column="74">
				<expr_stmt><expr><name><name pos:line="761" pos:column="33">TbData</name><op:operator pos:line="761" pos:column="39">.</op:operator><name pos:line="761" pos:column="40">iPrevCont</name></name> <op:operator pos:line="761" pos:column="50">=</op:operator> <name pos:line="761" pos:column="52">iContSrc</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="763" pos:column="25">pContTgt</name><op:operator pos:line="763" pos:column="33">-&gt;</op:operator><name pos:line="763" pos:column="35">createToolbar</name></name><argument_list pos:line="763" pos:column="48">(<argument><expr><name pos:line="763" pos:column="49">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="764" pos:column="25">_vContainer</name><op:operator pos:line="764" pos:column="36">.</op:operator><name pos:line="764" pos:column="37">push_back</name></name><argument_list pos:line="764" pos:column="46">(<argument><expr><name pos:line="764" pos:column="47">pContTgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="766" pos:column="17">else
		<block pos:line="767" pos:column="17">{
			<comment type="line" pos:line="768" pos:column="25">// set new target</comment>
			<expr_stmt><expr><name pos:line="769" pos:column="25">pContTgt</name> <op:operator pos:line="769" pos:column="34">=</op:operator> <name><name pos:line="769" pos:column="36">_vContainer</name><index pos:line="769" pos:column="47">[<expr><name pos:line="769" pos:column="48">iContNew</name></expr>]</index></name></expr>;</expr_stmt>

			<comment type="line" pos:line="771" pos:column="25">// change only on toggling</comment>
			<if pos:line="772" pos:column="25">if <condition pos:line="772" pos:column="28">(<expr><op:operator pos:line="772" pos:column="29">(</op:operator><call><name><name pos:line="772" pos:column="30">pContSrc</name><op:operator pos:line="772" pos:column="38">-&gt;</op:operator><name pos:line="772" pos:column="40">isFloating</name></name><argument_list pos:line="772" pos:column="50">()</argument_list></call><op:operator pos:line="772" pos:column="52">)</op:operator> <op:operator pos:line="772" pos:column="54">!=</op:operator> <op:operator pos:line="772" pos:column="57">(</op:operator><call><name><name pos:line="772" pos:column="58">pContTgt</name><op:operator pos:line="772" pos:column="66">-&gt;</op:operator><name pos:line="772" pos:column="68">isFloating</name></name><argument_list pos:line="772" pos:column="78">()</argument_list></call><op:operator pos:line="772" pos:column="80">)</op:operator></expr>)</condition><then pos:line="772" pos:column="82">
                <expr_stmt><expr><name><name pos:line="773" pos:column="17">TbData</name><op:operator pos:line="773" pos:column="23">.</op:operator><name pos:line="773" pos:column="24">iPrevCont</name></name> <op:operator pos:line="773" pos:column="34">=</op:operator> <name pos:line="773" pos:column="36">iContSrc</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="775" pos:column="25">pContTgt</name><op:operator pos:line="775" pos:column="33">-&gt;</op:operator><name pos:line="775" pos:column="35">createToolbar</name></name><argument_list pos:line="775" pos:column="48">(<argument><expr><name pos:line="775" pos:column="49">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then>
	<else pos:line="778" pos:column="9">else
	<block pos:line="779" pos:column="9">{
		<comment type="line" pos:line="780" pos:column="17">// set new target</comment>
		<expr_stmt><expr><name pos:line="781" pos:column="17">pContTgt</name> <op:operator pos:line="781" pos:column="26">=</op:operator> <name><name pos:line="781" pos:column="28">_vContainer</name><index pos:line="781" pos:column="39">[<expr><name pos:line="781" pos:column="40">iContPrev</name></expr>]</index></name></expr>;</expr_stmt>
        
		<comment type="line" pos:line="783" pos:column="17">// change data normaly</comment>
		<expr_stmt><expr><name><name pos:line="784" pos:column="17">TbData</name><op:operator pos:line="784" pos:column="23">.</op:operator><name pos:line="784" pos:column="24">iPrevCont</name></name> <op:operator pos:line="784" pos:column="34">=</op:operator> <name pos:line="784" pos:column="36">iContSrc</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="785" pos:column="17">pContTgt</name><op:operator pos:line="785" pos:column="25">-&gt;</op:operator><name pos:line="785" pos:column="27">createToolbar</name></name><argument_list pos:line="785" pos:column="40">(<argument><expr><name pos:line="785" pos:column="41">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<comment type="line" pos:line="788" pos:column="9">// notify client app</comment>
	<expr_stmt><expr><call><name pos:line="789" pos:column="9">SendNotify</name><argument_list pos:line="789" pos:column="19">(<argument><expr><name><name pos:line="789" pos:column="20">TbData</name><op:operator pos:line="789" pos:column="26">.</op:operator><name pos:line="789" pos:column="27">hClient</name></name></expr></argument>, <argument><expr><call><name pos:line="789" pos:column="36">MAKELONG</name><argument_list pos:line="789" pos:column="44">(<argument><expr><name pos:line="789" pos:column="45">message</name><op:operator pos:line="789" pos:column="52">==</op:operator><name pos:line="789" pos:column="54">DMM_DOCK</name><op:operator pos:line="789" pos:column="62">?</op:operator><name pos:line="789" pos:column="63">DMN_DOCK</name><op:operator pos:line="789" pos:column="71">:</op:operator><name pos:line="789" pos:column="72">DMN_FLOAT</name></expr></argument>, <argument><expr><call><name pos:line="789" pos:column="83">GetContainer</name><argument_list pos:line="789" pos:column="95">(<argument><expr><name pos:line="789" pos:column="96">pContTgt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="791" pos:column="9">// remove toolbar from source</comment>
	<expr_stmt><expr><name><name pos:line="792" pos:column="9">_vContainer</name><index pos:line="792" pos:column="20">[<expr><name pos:line="792" pos:column="21">iContSrc</name></expr>]</index></name><op:operator pos:line="792" pos:column="30">-&gt;</op:operator><call><name pos:line="792" pos:column="32">removeToolbar</name><argument_list pos:line="792" pos:column="45">(<argument><expr><name pos:line="792" pos:column="46">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:line="794" pos:column="9">return <expr><name pos:line="794" pos:column="16">pContTgt</name></expr>;</return>
}</block></function>

<function><type><name pos:line="797" pos:column="1">DockingCont</name><type:modifier pos:line="797" pos:column="12">*</type:modifier></type> <name><name pos:line="797" pos:column="14">DockingManager</name><op:operator pos:line="797" pos:column="28">::</op:operator><name pos:line="797" pos:column="30">toggleVisTb</name></name><parameter_list pos:line="797" pos:column="41">(<param><decl><type><name pos:line="797" pos:column="42">DockingCont</name><type:modifier pos:line="797" pos:column="53">*</type:modifier></type> <name pos:line="797" pos:column="55">pContSrc</name></decl></param>, <param><decl><type><name pos:line="797" pos:column="65">UINT</name></type> <name pos:line="797" pos:column="70">message</name></decl></param>, <param><decl><type><name pos:line="797" pos:column="79">LPRECT</name></type> <name pos:line="797" pos:column="86">prcFloat</name></decl></param>)</parameter_list>
<block pos:line="798" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="799" pos:column="9">vector</name><argument_list pos:line="799" pos:column="15">&lt;<argument><expr><name pos:line="799" pos:column="16">tTbData</name><type:modifier pos:line="799" pos:column="23">*</type:modifier></expr></argument>&gt;</argument_list></name></type>	<name pos:line="799" pos:column="33">vTbData</name>		<init pos:line="799" pos:column="49">= <expr><call><name><name pos:line="799" pos:column="51">pContSrc</name><op:operator pos:line="799" pos:column="59">-&gt;</op:operator><name pos:line="799" pos:column="61">getDataOfVisTb</name></name><argument_list pos:line="799" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="800" pos:column="9">tTbData</name><type:modifier pos:line="800" pos:column="16">*</type:modifier></type>			<name pos:line="800" pos:column="41">pTbData</name>		<init pos:line="800" pos:column="57">= <expr><call><name><name pos:line="800" pos:column="59">pContSrc</name><op:operator pos:line="800" pos:column="67">-&gt;</op:operator><name pos:line="800" pos:column="69">getDataOfActiveTb</name></name><argument_list pos:line="800" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="802" pos:column="9">int</name></type>					<name pos:line="802" pos:column="49">iContSrc</name>	<init pos:line="802" pos:column="65">= <expr><call><name pos:line="802" pos:column="67">GetContainer</name><argument_list pos:line="802" pos:column="79">(<argument><expr><name pos:line="802" pos:column="80">pContSrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="803" pos:column="9">int</name></type>					<name pos:line="803" pos:column="49">iContPrev</name>	<init pos:line="803" pos:column="65">= <expr><name><name pos:line="803" pos:column="67">pTbData</name><op:operator pos:line="803" pos:column="74">-&gt;</op:operator><name pos:line="803" pos:column="76">iPrevCont</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="804" pos:column="9">BOOL</name></type>				<name pos:line="804" pos:column="41">isCont</name>		<init pos:line="804" pos:column="57">= <expr><call><name pos:line="804" pos:column="59">ContExists</name><argument_list pos:line="804" pos:column="69">(<argument><expr><name pos:line="804" pos:column="70">iContPrev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="805" pos:column="9">DockingCont</name><type:modifier pos:line="805" pos:column="20">*</type:modifier></type>		<name pos:line="805" pos:column="33">pContTgt</name>	<init pos:line="805" pos:column="49">= <expr><name pos:line="805" pos:column="51">NULL</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="807" pos:column="9">// at first hide container and resize</comment>
	<expr_stmt><expr><call><name><name pos:line="808" pos:column="9">pContSrc</name><op:operator pos:line="808" pos:column="17">-&gt;</op:operator><name pos:line="808" pos:column="19">doDialog</name></name><argument_list pos:line="808" pos:column="27">(<argument><expr><lit:literal type="boolean" pos:line="808" pos:column="28">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="809" pos:column="9">onSize</name><argument_list pos:line="809" pos:column="15">()</argument_list></call></expr>;</expr_stmt>

	<for pos:line="811" pos:column="9">for (<init><decl><type><name pos:line="811" pos:column="14">size_t</name></type> <name pos:line="811" pos:column="21">iTb</name> <init pos:line="811" pos:column="25">= <expr><lit:literal type="number" pos:line="811" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="811" pos:column="30">iTb</name> <op:operator pos:line="811" pos:column="34">&lt;</op:operator> <call><name><name pos:line="811" pos:column="36">vTbData</name><op:operator pos:line="811" pos:column="43">.</op:operator><name pos:line="811" pos:column="44">size</name></name><argument_list pos:line="811" pos:column="48">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="811" pos:column="52">iTb</name><op:operator pos:line="811" pos:column="55">++</op:operator></expr></incr>)
	<block pos:line="812" pos:column="9">{
		<comment type="line" pos:line="813" pos:column="17">// get data one by another</comment>
		<decl_stmt><decl><type><name pos:line="814" pos:column="17">tTbData</name></type>		<name pos:line="814" pos:column="33">TbData</name> <init pos:line="814" pos:column="40">= <expr><op:operator pos:line="814" pos:column="42">*</op:operator><name><name pos:line="814" pos:column="43">vTbData</name><index pos:line="814" pos:column="50">[<expr><name pos:line="814" pos:column="51">iTb</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="816" pos:column="17">// if new float position is given</comment>
		<if pos:line="817" pos:column="17">if <condition pos:line="817" pos:column="20">(<expr><name pos:line="817" pos:column="21">prcFloat</name> <op:operator pos:line="817" pos:column="30">!=</op:operator> <name pos:line="817" pos:column="33">NULL</name></expr>)</condition><then pos:line="817" pos:column="38">
		<block pos:line="818" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="819" pos:column="25">TbData</name><op:operator pos:line="819" pos:column="31">.</op:operator><name pos:line="819" pos:column="32">rcFloat</name></name> <op:operator pos:line="819" pos:column="40">=</op:operator> <op:operator pos:line="819" pos:column="42">*</op:operator><name pos:line="819" pos:column="43">prcFloat</name></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="822" pos:column="17">if <condition pos:line="822" pos:column="20">(<expr><name pos:line="822" pos:column="21">isCont</name> <op:operator pos:line="822" pos:column="28">==</op:operator> <name pos:line="822" pos:column="31">FALSE</name></expr>)</condition><then pos:line="822" pos:column="37">
		<block pos:line="823" pos:column="17">{
            <comment type="line" pos:line="824" pos:column="13">// create new container</comment>
			<expr_stmt><expr><name pos:line="825" pos:column="25">pContTgt</name> <op:operator pos:line="825" pos:column="34">=</op:operator> <op:operator pos:line="825" pos:column="36">new</op:operator> <name pos:line="825" pos:column="40">DockingCont</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="826" pos:column="25">pContTgt</name><op:operator pos:line="826" pos:column="33">-&gt;</op:operator><name pos:line="826" pos:column="35">init</name></name><argument_list pos:line="826" pos:column="39">(<argument><expr><name pos:line="826" pos:column="40">_hInst</name></expr></argument>, <argument><expr><name pos:line="826" pos:column="48">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="827" pos:column="25">pContTgt</name><op:operator pos:line="827" pos:column="33">-&gt;</op:operator><name pos:line="827" pos:column="35">doDialog</name></name><argument_list pos:line="827" pos:column="43">(<argument><expr><lit:literal type="boolean" pos:line="827" pos:column="44">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="827" pos:column="50">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="829" pos:column="25">TbData</name><op:operator pos:line="829" pos:column="31">.</op:operator><name pos:line="829" pos:column="32">iPrevCont</name></name> <op:operator pos:line="829" pos:column="42">=</op:operator> <name pos:line="829" pos:column="44">iContSrc</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="830" pos:column="25">pContTgt</name><op:operator pos:line="830" pos:column="33">-&gt;</op:operator><name pos:line="830" pos:column="35">createToolbar</name></name><argument_list pos:line="830" pos:column="48">(<argument><expr><name pos:line="830" pos:column="49">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="831" pos:column="25">_vContainer</name><op:operator pos:line="831" pos:column="36">.</op:operator><name pos:line="831" pos:column="37">push_back</name></name><argument_list pos:line="831" pos:column="46">(<argument><expr><name pos:line="831" pos:column="47">pContTgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="833" pos:column="25">// now container exists</comment>
			<expr_stmt><expr><name pos:line="834" pos:column="25">isCont</name>	<op:operator pos:line="834" pos:column="33">=</op:operator> <name pos:line="834" pos:column="35">TRUE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="835" pos:column="25">iContPrev</name> <op:operator pos:line="835" pos:column="35">=</op:operator> <call><name pos:line="835" pos:column="37">GetContainer</name><argument_list pos:line="835" pos:column="49">(<argument><expr><name pos:line="835" pos:column="50">pContTgt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="837" pos:column="17">else
		<block pos:line="838" pos:column="17">{
			<comment type="line" pos:line="839" pos:column="25">// set new target</comment>
			<expr_stmt><expr><name pos:line="840" pos:column="25">pContTgt</name> <op:operator pos:line="840" pos:column="34">=</op:operator> <name><name pos:line="840" pos:column="36">_vContainer</name><index pos:line="840" pos:column="47">[<expr><name pos:line="840" pos:column="48">iContPrev</name></expr>]</index></name></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="842" pos:column="25">TbData</name><op:operator pos:line="842" pos:column="31">.</op:operator><name pos:line="842" pos:column="32">iPrevCont</name></name> <op:operator pos:line="842" pos:column="42">=</op:operator> <name pos:line="842" pos:column="44">iContSrc</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="843" pos:column="25">pContTgt</name><op:operator pos:line="843" pos:column="33">-&gt;</op:operator><name pos:line="843" pos:column="35">createToolbar</name></name><argument_list pos:line="843" pos:column="48">(<argument><expr><name pos:line="843" pos:column="49">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>

		<expr_stmt><expr><call><name pos:line="846" pos:column="17">SendNotify</name><argument_list pos:line="846" pos:column="27">(<argument><expr><name><name pos:line="846" pos:column="28">TbData</name><op:operator pos:line="846" pos:column="34">.</op:operator><name pos:line="846" pos:column="35">hClient</name></name></expr></argument>, <argument><expr><call><name pos:line="846" pos:column="44">MAKELONG</name><argument_list pos:line="846" pos:column="52">(<argument><expr><name pos:line="846" pos:column="53">message</name><op:operator pos:line="846" pos:column="60">==</op:operator><name pos:line="846" pos:column="62">DMM_DOCK</name><op:operator pos:line="846" pos:column="70">?</op:operator><name pos:line="846" pos:column="71">DMN_DOCK</name><op:operator pos:line="846" pos:column="79">:</op:operator><name pos:line="846" pos:column="80">DMN_FLOAT</name></expr></argument>, <argument><expr><call><name pos:line="846" pos:column="91">GetContainer</name><argument_list pos:line="846" pos:column="103">(<argument><expr><name pos:line="846" pos:column="104">pContTgt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="848" pos:column="17">// remove toolbar from anywhere</comment>
		<expr_stmt><expr><name><name pos:line="849" pos:column="17">_vContainer</name><index pos:line="849" pos:column="28">[<expr><name pos:line="849" pos:column="29">iContSrc</name></expr>]</index></name><op:operator pos:line="849" pos:column="38">-&gt;</op:operator><call><name pos:line="849" pos:column="40">removeToolbar</name><argument_list pos:line="849" pos:column="53">(<argument><expr><name pos:line="849" pos:column="54">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><name><name pos:line="852" pos:column="9">_vContainer</name><index pos:line="852" pos:column="20">[<expr><name pos:line="852" pos:column="21">iContPrev</name></expr>]</index></name><op:operator pos:line="852" pos:column="31">-&gt;</op:operator><call><name pos:line="852" pos:column="33">setActiveTb</name><argument_list pos:line="852" pos:column="44">(<argument><expr><name pos:line="852" pos:column="45">pTbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="853" pos:column="9">return <expr><name pos:line="853" pos:column="16">pContTgt</name></expr>;</return>
}</block></function>

<function><type><name pos:line="856" pos:column="1">void</name></type> <name><name pos:line="856" pos:column="6">DockingManager</name><op:operator pos:line="856" pos:column="20">::</op:operator><name pos:line="856" pos:column="22">toggleActiveTb</name></name><parameter_list pos:line="856" pos:column="36">(<param><decl><type><name pos:line="856" pos:column="37">DockingCont</name><type:modifier pos:line="856" pos:column="48">*</type:modifier></type> <name pos:line="856" pos:column="50">pContSrc</name></decl></param>, <param><decl><type><name pos:line="856" pos:column="60">DockingCont</name><type:modifier pos:line="856" pos:column="71">*</type:modifier></type> <name pos:line="856" pos:column="73">pContTgt</name></decl></param>)</parameter_list>
<block pos:line="857" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="858" pos:column="9">tTbData</name></type>		<name pos:line="858" pos:column="25">TbData</name>		<init pos:line="858" pos:column="41">= <expr><op:operator pos:line="858" pos:column="43">*</op:operator><call><name><name pos:line="858" pos:column="44">pContSrc</name><op:operator pos:line="858" pos:column="52">-&gt;</op:operator><name pos:line="858" pos:column="54">getDataOfActiveTb</name></name><argument_list pos:line="858" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="860" pos:column="9">toggleTb</name><argument_list pos:line="860" pos:column="17">(<argument><expr><name pos:line="860" pos:column="18">pContSrc</name></expr></argument>, <argument><expr><name pos:line="860" pos:column="28">pContTgt</name></expr></argument>, <argument><expr><name pos:line="860" pos:column="38">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>			
}</block></function>

<function><type><name pos:line="863" pos:column="1">void</name></type> <name><name pos:line="863" pos:column="6">DockingManager</name><op:operator pos:line="863" pos:column="20">::</op:operator><name pos:line="863" pos:column="22">toggleVisTb</name></name><parameter_list pos:line="863" pos:column="33">(<param><decl><type><name pos:line="863" pos:column="34">DockingCont</name><type:modifier pos:line="863" pos:column="45">*</type:modifier></type> <name pos:line="863" pos:column="47">pContSrc</name></decl></param>, <param><decl><type><name pos:line="863" pos:column="57">DockingCont</name><type:modifier pos:line="863" pos:column="68">*</type:modifier></type> <name pos:line="863" pos:column="70">pContTgt</name></decl></param>)</parameter_list>
<block pos:line="864" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="865" pos:column="9">vector</name><argument_list pos:line="865" pos:column="15">&lt;<argument><expr><name pos:line="865" pos:column="16">tTbData</name><type:modifier pos:line="865" pos:column="23">*</type:modifier></expr></argument>&gt;</argument_list></name></type>	<name pos:line="865" pos:column="33">vTbData</name>		<init pos:line="865" pos:column="49">= <expr><call><name><name pos:line="865" pos:column="51">pContSrc</name><op:operator pos:line="865" pos:column="59">-&gt;</op:operator><name pos:line="865" pos:column="61">getDataOfVisTb</name></name><argument_list pos:line="865" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="866" pos:column="9">tTbData</name><type:modifier pos:line="866" pos:column="16">*</type:modifier></type>			<name pos:line="866" pos:column="41">pTbData</name>		<init pos:line="866" pos:column="57">= <expr><call><name><name pos:line="866" pos:column="59">pContSrc</name><op:operator pos:line="866" pos:column="67">-&gt;</op:operator><name pos:line="866" pos:column="69">getDataOfActiveTb</name></name><argument_list pos:line="866" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="868" pos:column="9">// at first hide container and resize</comment>
	<expr_stmt><expr><call><name><name pos:line="869" pos:column="9">pContSrc</name><op:operator pos:line="869" pos:column="17">-&gt;</op:operator><name pos:line="869" pos:column="19">doDialog</name></name><argument_list pos:line="869" pos:column="27">(<argument><expr><lit:literal type="boolean" pos:line="869" pos:column="28">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="870" pos:column="9">onSize</name><argument_list pos:line="870" pos:column="15">()</argument_list></call></expr>;</expr_stmt>

	<for pos:line="872" pos:column="9">for (<init><decl><type><name pos:line="872" pos:column="14">size_t</name></type> <name pos:line="872" pos:column="21">iTb</name> <init pos:line="872" pos:column="25">= <expr><lit:literal type="number" pos:line="872" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="872" pos:column="30">iTb</name> <op:operator pos:line="872" pos:column="34">&lt;</op:operator> <call><name><name pos:line="872" pos:column="36">vTbData</name><op:operator pos:line="872" pos:column="43">.</op:operator><name pos:line="872" pos:column="44">size</name></name><argument_list pos:line="872" pos:column="48">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="872" pos:column="52">iTb</name><op:operator pos:line="872" pos:column="55">++</op:operator></expr></incr>)
	<block pos:line="873" pos:column="9">{
		<comment type="line" pos:line="874" pos:column="17">// get data one by another</comment>
		<decl_stmt><decl><type><name pos:line="875" pos:column="17">tTbData</name></type>		<name pos:line="875" pos:column="33">TbData</name> <init pos:line="875" pos:column="40">= <expr><op:operator pos:line="875" pos:column="42">*</op:operator><name><name pos:line="875" pos:column="43">vTbData</name><index pos:line="875" pos:column="50">[<expr><name pos:line="875" pos:column="51">iTb</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="876" pos:column="17">toggleTb</name><argument_list pos:line="876" pos:column="25">(<argument><expr><name pos:line="876" pos:column="26">pContSrc</name></expr></argument>, <argument><expr><name pos:line="876" pos:column="36">pContTgt</name></expr></argument>, <argument><expr><name pos:line="876" pos:column="46">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="878" pos:column="9">pContTgt</name><op:operator pos:line="878" pos:column="17">-&gt;</op:operator><name pos:line="878" pos:column="19">setActiveTb</name></name><argument_list pos:line="878" pos:column="30">(<argument><expr><name pos:line="878" pos:column="31">pTbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="881" pos:column="1">void</name></type> <name><name pos:line="881" pos:column="6">DockingManager</name><op:operator pos:line="881" pos:column="20">::</op:operator><name pos:line="881" pos:column="22">toggleTb</name></name><parameter_list pos:line="881" pos:column="30">(<param><decl><type><name pos:line="881" pos:column="31">DockingCont</name><type:modifier pos:line="881" pos:column="42">*</type:modifier></type> <name pos:line="881" pos:column="44">pContSrc</name></decl></param>, <param><decl><type><name pos:line="881" pos:column="54">DockingCont</name><type:modifier pos:line="881" pos:column="65">*</type:modifier></type> <name pos:line="881" pos:column="67">pContTgt</name></decl></param>, <param><decl><type><name pos:line="881" pos:column="77">tTbData</name></type> <name pos:line="881" pos:column="85">TbData</name></decl></param>)</parameter_list>
<block pos:line="882" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="883" pos:column="9">int</name></type>					<name pos:line="883" pos:column="49">iContSrc</name>	<init pos:line="883" pos:column="65">= <expr><call><name pos:line="883" pos:column="67">GetContainer</name><argument_list pos:line="883" pos:column="79">(<argument><expr><name pos:line="883" pos:column="80">pContSrc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="884" pos:column="9">int</name></type>					<name pos:line="884" pos:column="49">iContTgt</name>	<init pos:line="884" pos:column="65">= <expr><call><name pos:line="884" pos:column="67">GetContainer</name><argument_list pos:line="884" pos:column="79">(<argument><expr><name pos:line="884" pos:column="80">pContTgt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="886" pos:column="9">// test if container state changes from docking to floating or vice versa</comment>
	<if pos:line="887" pos:column="9">if <condition pos:line="887" pos:column="12">(<expr><op:operator pos:line="887" pos:column="13">(</op:operator><op:operator pos:line="887" pos:column="14">(</op:operator><name pos:line="887" pos:column="15">iContSrc</name> <op:operator pos:line="887" pos:column="24">&lt;</op:operator>  <name pos:line="887" pos:column="27">DOCKCONT_MAX</name><op:operator pos:line="887" pos:column="39">)</op:operator> <op:operator pos:line="887" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="887" pos:column="44">(</op:operator><name pos:line="887" pos:column="45">iContTgt</name> <op:operator pos:line="887" pos:column="54">&gt;=</op:operator> <name pos:line="887" pos:column="57">DOCKCONT_MAX</name><op:operator pos:line="887" pos:column="69">)</op:operator><op:operator pos:line="887" pos:column="70">)</op:operator> <op:operator pos:line="887" pos:column="72">||</op:operator>
		<op:operator pos:line="888" pos:column="17">(</op:operator><op:operator pos:line="888" pos:column="18">(</op:operator><name pos:line="888" pos:column="19">iContSrc</name> <op:operator pos:line="888" pos:column="28">&gt;=</op:operator> <name pos:line="888" pos:column="31">DOCKCONT_MAX</name><op:operator pos:line="888" pos:column="43">)</op:operator> <op:operator pos:line="888" pos:column="45">&amp;&amp;</op:operator> <op:operator pos:line="888" pos:column="48">(</op:operator><name pos:line="888" pos:column="49">iContTgt</name> <op:operator pos:line="888" pos:column="58">&lt;</op:operator>  <name pos:line="888" pos:column="61">DOCKCONT_MAX</name><op:operator pos:line="888" pos:column="73">)</op:operator><op:operator pos:line="888" pos:column="74">)</op:operator></expr>)</condition><then pos:line="888" pos:column="76">
	<block pos:line="889" pos:column="9">{
		<comment type="line" pos:line="890" pos:column="17">// change states</comment>
		<expr_stmt><expr><name><name pos:line="891" pos:column="17">TbData</name><op:operator pos:line="891" pos:column="23">.</op:operator><name pos:line="891" pos:column="24">iPrevCont</name></name> <op:operator pos:line="891" pos:column="34">=</op:operator> <name pos:line="891" pos:column="36">iContSrc</name></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="894" pos:column="9">// notify client app</comment>
	<if pos:line="895" pos:column="9">if <condition pos:line="895" pos:column="12">(<expr><name pos:line="895" pos:column="13">iContTgt</name> <op:operator pos:line="895" pos:column="22">&lt;</op:operator> <name pos:line="895" pos:column="24">DOCKCONT_MAX</name></expr>)</condition><then pos:line="895" pos:column="37">
		<expr_stmt><expr><call><name pos:line="896" pos:column="17">SendNotify</name><argument_list pos:line="896" pos:column="27">(<argument><expr><name><name pos:line="896" pos:column="28">TbData</name><op:operator pos:line="896" pos:column="34">.</op:operator><name pos:line="896" pos:column="35">hClient</name></name></expr></argument>, <argument><expr><call><name pos:line="896" pos:column="44">MAKELONG</name><argument_list pos:line="896" pos:column="52">(<argument><expr><name pos:line="896" pos:column="53">DMN_DOCK</name></expr></argument>, <argument><expr><name pos:line="896" pos:column="63">iContTgt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="897" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="898" pos:column="17">SendNotify</name><argument_list pos:line="898" pos:column="27">(<argument><expr><name><name pos:line="898" pos:column="28">TbData</name><op:operator pos:line="898" pos:column="34">.</op:operator><name pos:line="898" pos:column="35">hClient</name></name></expr></argument>, <argument><expr><call><name pos:line="898" pos:column="44">MAKELONG</name><argument_list pos:line="898" pos:column="52">(<argument><expr><name pos:line="898" pos:column="53">DMN_FLOAT</name></expr></argument>, <argument><expr><name pos:line="898" pos:column="64">iContTgt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

	<comment type="line" pos:line="900" pos:column="9">// create new toolbar</comment>
	<expr_stmt><expr><call><name><name pos:line="901" pos:column="9">pContTgt</name><op:operator pos:line="901" pos:column="17">-&gt;</op:operator><name pos:line="901" pos:column="19">createToolbar</name></name><argument_list pos:line="901" pos:column="32">(<argument><expr><name pos:line="901" pos:column="33">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	

	<comment type="line" pos:line="903" pos:column="9">// remove toolbar from source</comment>
	<expr_stmt><expr><name><name pos:line="904" pos:column="9">_vContainer</name><index pos:line="904" pos:column="20">[<expr><name pos:line="904" pos:column="21">iContSrc</name></expr>]</index></name><op:operator pos:line="904" pos:column="30">-&gt;</op:operator><call><name pos:line="904" pos:column="32">removeToolbar</name><argument_list pos:line="904" pos:column="45">(<argument><expr><name pos:line="904" pos:column="46">TbData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="907" pos:column="1">BOOL</name></type> <name><name pos:line="907" pos:column="6">DockingManager</name><op:operator pos:line="907" pos:column="20">::</op:operator><name pos:line="907" pos:column="22">ContExists</name></name><parameter_list pos:line="907" pos:column="32">(<param><decl><type><name pos:line="907" pos:column="33">size_t</name></type> <name pos:line="907" pos:column="40">iCont</name></decl></param>)</parameter_list>
<block pos:line="908" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="909" pos:column="9">BOOL</name></type>	<name pos:line="909" pos:column="17">bRet</name> <init pos:line="909" pos:column="22">= <expr><name pos:line="909" pos:column="24">FALSE</name></expr></init></decl>;</decl_stmt>

	<if pos:line="911" pos:column="9">if <condition pos:line="911" pos:column="12">(<expr><name pos:line="911" pos:column="13">iCont</name> <op:operator pos:line="911" pos:column="19">&lt;</op:operator> <call><name><name pos:line="911" pos:column="21">_vContainer</name><op:operator pos:line="911" pos:column="32">.</op:operator><name pos:line="911" pos:column="33">size</name></name><argument_list pos:line="911" pos:column="37">()</argument_list></call></expr>)</condition><then pos:line="911" pos:column="40">
	<block pos:line="912" pos:column="9">{
		<expr_stmt><expr><name pos:line="913" pos:column="17">bRet</name> <op:operator pos:line="913" pos:column="22">=</op:operator> <name pos:line="913" pos:column="24">TRUE</name></expr>;</expr_stmt>
	}</block></then></if>

	<return pos:line="916" pos:column="9">return <expr><name pos:line="916" pos:column="16">bRet</name></expr>;</return>
}</block></function>

<function><type><name pos:line="919" pos:column="1">int</name></type> <name><name pos:line="919" pos:column="5">DockingManager</name><op:operator pos:line="919" pos:column="19">::</op:operator><name pos:line="919" pos:column="21">GetContainer</name></name><parameter_list pos:line="919" pos:column="33">(<param><decl><type><name pos:line="919" pos:column="34">DockingCont</name><type:modifier pos:line="919" pos:column="45">*</type:modifier></type> <name pos:line="919" pos:column="47">pCont</name></decl></param>)</parameter_list>
<block pos:line="920" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="921" pos:column="9">int</name></type>		<name pos:line="921" pos:column="25">iRet</name> <init pos:line="921" pos:column="30">= <expr><op:operator pos:line="921" pos:column="32">-</op:operator><lit:literal type="number" pos:line="921" pos:column="33">1</lit:literal></expr></init></decl>;</decl_stmt>

	<for pos:line="923" pos:column="9">for (<init><decl><type><name pos:line="923" pos:column="14">size_t</name></type> <name pos:line="923" pos:column="21">iCont</name> <init pos:line="923" pos:column="27">= <expr><lit:literal type="number" pos:line="923" pos:column="29">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="923" pos:column="32">iCont</name> <op:operator pos:line="923" pos:column="38">&lt;</op:operator> <call><name><name pos:line="923" pos:column="40">_vContainer</name><op:operator pos:line="923" pos:column="51">.</op:operator><name pos:line="923" pos:column="52">size</name></name><argument_list pos:line="923" pos:column="56">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="923" pos:column="60">iCont</name><op:operator pos:line="923" pos:column="65">++</op:operator></expr></incr>)
	<block pos:line="924" pos:column="9">{
		<if pos:line="925" pos:column="17">if <condition pos:line="925" pos:column="20">(<expr><name><name pos:line="925" pos:column="21">_vContainer</name><index pos:line="925" pos:column="32">[<expr><name pos:line="925" pos:column="33">iCont</name></expr>]</index></name> <op:operator pos:line="925" pos:column="40">==</op:operator> <name pos:line="925" pos:column="43">pCont</name></expr>)</condition><then pos:line="925" pos:column="49">
		<block pos:line="926" pos:column="17">{
			<expr_stmt><expr><name pos:line="927" pos:column="25">iRet</name> <op:operator pos:line="927" pos:column="30">=</op:operator> <name pos:line="927" pos:column="32">iCont</name></expr>;</expr_stmt>
			<break pos:line="928" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>

	<return pos:line="932" pos:column="9">return <expr><name pos:line="932" pos:column="16">iRet</name></expr>;</return>
}</block></function>

<function><type><name pos:line="935" pos:column="1">int</name></type> <name><name pos:line="935" pos:column="5">DockingManager</name><op:operator pos:line="935" pos:column="19">::</op:operator><name pos:line="935" pos:column="21">FindEmptyContainer</name></name><parameter_list pos:line="935" pos:column="39">()</parameter_list>
<block pos:line="936" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="937" pos:column="5">int</name></type>      <name pos:line="937" pos:column="14">iRetCont</name>       <init pos:line="937" pos:column="29">= <expr><op:operator pos:line="937" pos:column="31">-</op:operator><lit:literal type="number" pos:line="937" pos:column="32">1</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="938" pos:column="5">BOOL</name><type:modifier pos:line="938" pos:column="9">*</type:modifier></type>    <name pos:line="938" pos:column="14">pPrevDockList</name>  <init pos:line="938" pos:column="29">= <expr><op:operator pos:line="938" pos:column="31">(</op:operator><name pos:line="938" pos:column="32">BOOL</name><op:operator pos:line="938" pos:column="36">*</op:operator><op:operator pos:line="938" pos:column="37">)</op:operator> <op:operator pos:line="938" pos:column="39">new</op:operator> <name><name pos:line="938" pos:column="43">BOOL</name><index pos:line="938" pos:column="47">[<expr><call><name><name pos:line="938" pos:column="48">_vContainer</name><op:operator pos:line="938" pos:column="59">.</op:operator><name pos:line="938" pos:column="60">size</name></name><argument_list pos:line="938" pos:column="64">()</argument_list></call><op:operator pos:line="938" pos:column="66">+</op:operator><lit:literal type="number" pos:line="938" pos:column="67">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="939" pos:column="5">BOOL</name><type:modifier pos:line="939" pos:column="9">*</type:modifier></type>    <name pos:line="939" pos:column="14">pArrayPos</name>      <init pos:line="939" pos:column="29">= <expr><op:operator pos:line="939" pos:column="31">&amp;</op:operator><name><name pos:line="939" pos:column="32">pPrevDockList</name><index pos:line="939" pos:column="45">[<expr><lit:literal type="number" pos:line="939" pos:column="46">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:line="941" pos:column="5">// delete all entries</comment>
    <for pos:line="942" pos:column="5">for (<init><decl><type><name pos:line="942" pos:column="10">size_t</name></type> <name pos:line="942" pos:column="17">iCont</name> <init pos:line="942" pos:column="23">= <expr><lit:literal type="number" pos:line="942" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="942" pos:column="28">iCont</name> <op:operator pos:line="942" pos:column="34">&lt;</op:operator> <call><name><name pos:line="942" pos:column="36">_vContainer</name><op:operator pos:line="942" pos:column="47">.</op:operator><name pos:line="942" pos:column="48">size</name></name><argument_list pos:line="942" pos:column="52">()</argument_list></call><op:operator pos:line="942" pos:column="54">+</op:operator><lit:literal type="number" pos:line="942" pos:column="55">1</lit:literal></expr>;</condition> <incr><expr><name pos:line="942" pos:column="58">iCont</name><op:operator pos:line="942" pos:column="63">++</op:operator></expr></incr>)
    <block pos:line="943" pos:column="5">{
        <expr_stmt><expr><name><name pos:line="944" pos:column="9">pPrevDockList</name><index pos:line="944" pos:column="22">[<expr><name pos:line="944" pos:column="23">iCont</name></expr>]</index></name> <op:operator pos:line="944" pos:column="30">=</op:operator> <name pos:line="944" pos:column="32">FALSE</name></expr>;</expr_stmt>
    }</block></for>

    <comment type="line" pos:line="947" pos:column="5">// search for used floated containers</comment>
    <for pos:line="948" pos:column="5">for (<init><decl><type><name pos:line="948" pos:column="10">size_t</name></type> <name pos:line="948" pos:column="17">iCont</name> <init pos:line="948" pos:column="23">= <expr><lit:literal type="number" pos:line="948" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="948" pos:column="28">iCont</name> <op:operator pos:line="948" pos:column="34">&lt;</op:operator> <name pos:line="948" pos:column="36">DOCKCONT_MAX</name></expr>;</condition> <incr><expr><name pos:line="948" pos:column="50">iCont</name><op:operator pos:line="948" pos:column="55">++</op:operator></expr></incr>)
    <block pos:line="949" pos:column="5">{
        <decl_stmt><decl><type><name><name pos:line="950" pos:column="9">vector</name><argument_list pos:line="950" pos:column="15">&lt;<argument><expr><name pos:line="950" pos:column="16">tTbData</name><type:modifier pos:line="950" pos:column="23">*</type:modifier></expr></argument>&gt;</argument_list></name></type>    <name pos:line="950" pos:column="29">vTbData</name> <init pos:line="950" pos:column="37">= <expr><name><name pos:line="950" pos:column="39">_vContainer</name><index pos:line="950" pos:column="50">[<expr><name pos:line="950" pos:column="51">iCont</name></expr>]</index></name><op:operator pos:line="950" pos:column="57">-&gt;</op:operator><call><name pos:line="950" pos:column="59">getDataOfAllTb</name><argument_list pos:line="950" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <for pos:line="952" pos:column="9">for (<init><decl><type><name pos:line="952" pos:column="14">size_t</name></type> <name pos:line="952" pos:column="21">iTb</name> <init pos:line="952" pos:column="25">= <expr><lit:literal type="number" pos:line="952" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="952" pos:column="30">iTb</name> <op:operator pos:line="952" pos:column="34">&lt;</op:operator> <call><name><name pos:line="952" pos:column="36">vTbData</name><op:operator pos:line="952" pos:column="43">.</op:operator><name pos:line="952" pos:column="44">size</name></name><argument_list pos:line="952" pos:column="48">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="952" pos:column="52">iTb</name><op:operator pos:line="952" pos:column="55">++</op:operator></expr></incr>)
        <block pos:line="953" pos:column="9">{
            <expr_stmt><expr><name><name pos:line="954" pos:column="13">pArrayPos</name><index pos:line="954" pos:column="22">[<expr><name><name pos:line="954" pos:column="23">vTbData</name><index pos:line="954" pos:column="30">[<expr><name pos:line="954" pos:column="31">iTb</name></expr>]</index></name><op:operator pos:line="954" pos:column="35">-&gt;</op:operator><name pos:line="954" pos:column="37">iPrevCont</name></expr>]</index></name> <op:operator pos:line="954" pos:column="48">=</op:operator> <name pos:line="954" pos:column="50">TRUE</name></expr>;</expr_stmt>
        }</block></for>
    }</block></for>

    <comment type="line" pos:line="958" pos:column="5">// find free container</comment>
    <for pos:line="959" pos:column="5">for (<init><decl><type><name pos:line="959" pos:column="10">size_t</name></type> <name pos:line="959" pos:column="17">iCont</name> <init pos:line="959" pos:column="23">= <expr><name pos:line="959" pos:column="25">DOCKCONT_MAX</name></expr></init></decl>;</init> <condition><expr><name pos:line="959" pos:column="39">iCont</name> <op:operator pos:line="959" pos:column="45">&lt;</op:operator> <call><name><name pos:line="959" pos:column="47">_vContainer</name><op:operator pos:line="959" pos:column="58">.</op:operator><name pos:line="959" pos:column="59">size</name></name><argument_list pos:line="959" pos:column="63">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="959" pos:column="67">iCont</name><op:operator pos:line="959" pos:column="72">++</op:operator></expr></incr>)
    <block pos:line="960" pos:column="5">{
        <if pos:line="961" pos:column="9">if <condition pos:line="961" pos:column="12">(<expr><name><name pos:line="961" pos:column="13">pArrayPos</name><index pos:line="961" pos:column="22">[<expr><name pos:line="961" pos:column="23">iCont</name></expr>]</index></name> <op:operator pos:line="961" pos:column="30">==</op:operator> <name pos:line="961" pos:column="33">FALSE</name></expr>)</condition><then pos:line="961" pos:column="39">
        <block pos:line="962" pos:column="9">{
            <comment type="line" pos:line="963" pos:column="13">// and test if container is hidden</comment>
            <if pos:line="964" pos:column="13">if <condition pos:line="964" pos:column="16">(<expr><op:operator pos:line="964" pos:column="17">!</op:operator><name><name pos:line="964" pos:column="18">_vContainer</name><index pos:line="964" pos:column="29">[<expr><name pos:line="964" pos:column="30">iCont</name></expr>]</index></name><op:operator pos:line="964" pos:column="36">-&gt;</op:operator><call><name pos:line="964" pos:column="38">isVisible</name><argument_list pos:line="964" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="964" pos:column="50">
            <block pos:line="965" pos:column="13">{
                <expr_stmt><expr><name pos:line="966" pos:column="17">iRetCont</name> <op:operator pos:line="966" pos:column="26">=</op:operator> <name pos:line="966" pos:column="28">iCont</name></expr>;</expr_stmt>
                <break pos:line="967" pos:column="17">break;</break>
            }</block></then></if>
        }</block></then></if>
    }</block></for>

    <expr_stmt><expr><op:operator pos:line="972" pos:column="5">delete</op:operator> <index pos:line="972" pos:column="12">[]</index> <name pos:line="972" pos:column="15">pPrevDockList</name></expr>;</expr_stmt>

    <comment type="line" pos:line="974" pos:column="5">// search for empty arrays</comment>
    <return pos:line="975" pos:column="5">return <expr><name pos:line="975" pos:column="12">iRetCont</name></expr>;</return> 
}</block></function>


</unit>
