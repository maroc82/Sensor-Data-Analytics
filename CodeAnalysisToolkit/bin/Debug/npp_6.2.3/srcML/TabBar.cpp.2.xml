<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\TabBar\TabBar.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"TabBar.h"</lit:literal></cpp:file></cpp:include>

<decl_stmt><decl><type><specifier pos:line="32" pos:column="1">const</specifier> <name pos:line="32" pos:column="7">COLORREF</name></type> <name pos:line="32" pos:column="16">blue</name>      	            <init pos:line="32" pos:column="45">= <expr><call><name pos:line="32" pos:column="47">RGB</name><argument_list pos:line="32" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="32" pos:column="51">0</lit:literal></expr></argument>,       <argument><expr><lit:literal type="number" pos:line="32" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="32" pos:column="63">0xFF</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="33" pos:column="1">const</specifier> <name pos:line="33" pos:column="7">COLORREF</name></type> <name pos:line="33" pos:column="16">black</name>     	            <init pos:line="33" pos:column="45">= <expr><call><name pos:line="33" pos:column="47">RGB</name><argument_list pos:line="33" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="33" pos:column="51">0</lit:literal></expr></argument>,       <argument><expr><lit:literal type="number" pos:line="33" pos:column="60">0</lit:literal></expr></argument>,    <argument><expr><lit:literal type="number" pos:line="33" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="34" pos:column="1">const</specifier> <name pos:line="34" pos:column="7">COLORREF</name></type> <name pos:line="34" pos:column="16">white</name>     	            <init pos:line="34" pos:column="45">= <expr><call><name pos:line="34" pos:column="47">RGB</name><argument_list pos:line="34" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="34" pos:column="51">0xFF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="34" pos:column="57">0xFF</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="34" pos:column="63">0xFF</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="35" pos:column="1">const</specifier> <name pos:line="35" pos:column="7">COLORREF</name></type> <name pos:line="35" pos:column="16">grey</name>      	            <init pos:line="35" pos:column="45">= <expr><call><name pos:line="35" pos:column="47">RGB</name><argument_list pos:line="35" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="35" pos:column="51">128</lit:literal></expr></argument>,   <argument><expr><lit:literal type="number" pos:line="35" pos:column="58">128</lit:literal></expr></argument>,  <argument><expr><lit:literal type="number" pos:line="35" pos:column="64">128</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:define pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="37" pos:column="9">IDC_DRAG_TAB</name></cpp:macro>     <cpp:value pos:line="37" pos:column="26">1404</cpp:value></cpp:define>
<cpp:define pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="38" pos:column="9">IDC_DRAG_INTERDIT_TAB</name></cpp:macro> <cpp:value pos:line="38" pos:column="31">1405</cpp:value></cpp:define>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="39" pos:column="9">IDC_DRAG_PLUS_TAB</name></cpp:macro> <cpp:value pos:line="39" pos:column="27">1406</cpp:value></cpp:define>
<cpp:define pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">define</cpp:directive>	<cpp:macro><name pos:line="40" pos:column="9">IDC_DRAG_OUT_TAB</name></cpp:macro> <cpp:value pos:line="40" pos:column="26">1407</cpp:value></cpp:define>

<decl_stmt><decl><type><name pos:line="42" pos:column="1">bool</name></type> <name><name pos:line="42" pos:column="6">TabBarPlus</name><op:operator pos:line="42" pos:column="16">::</op:operator><name pos:line="42" pos:column="18">_doDragNDrop</name></name> <init pos:line="42" pos:column="31">= <expr><lit:literal type="boolean" pos:line="42" pos:column="33">false</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="44" pos:column="1">bool</name></type> <name><name pos:line="44" pos:column="6">TabBarPlus</name><op:operator pos:line="44" pos:column="16">::</op:operator><name pos:line="44" pos:column="18">_drawTopBar</name></name> <init pos:line="44" pos:column="30">= <expr><lit:literal type="boolean" pos:line="44" pos:column="32">true</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="45" pos:column="1">bool</name></type> <name><name pos:line="45" pos:column="6">TabBarPlus</name><op:operator pos:line="45" pos:column="16">::</op:operator><name pos:line="45" pos:column="18">_drawInactiveTab</name></name> <init pos:line="45" pos:column="35">= <expr><lit:literal type="boolean" pos:line="45" pos:column="37">true</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="46" pos:column="1">bool</name></type> <name><name pos:line="46" pos:column="6">TabBarPlus</name><op:operator pos:line="46" pos:column="16">::</op:operator><name pos:line="46" pos:column="18">_drawTabCloseButton</name></name> <init pos:line="46" pos:column="38">= <expr><lit:literal type="boolean" pos:line="46" pos:column="40">false</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="47" pos:column="1">bool</name></type> <name><name pos:line="47" pos:column="6">TabBarPlus</name><op:operator pos:line="47" pos:column="16">::</op:operator><name pos:line="47" pos:column="18">_isDbClk2Close</name></name> <init pos:line="47" pos:column="33">= <expr><lit:literal type="boolean" pos:line="47" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="48" pos:column="1">bool</name></type> <name><name pos:line="48" pos:column="6">TabBarPlus</name><op:operator pos:line="48" pos:column="16">::</op:operator><name pos:line="48" pos:column="18">_isCtrlVertical</name></name> <init pos:line="48" pos:column="34">= <expr><lit:literal type="boolean" pos:line="48" pos:column="36">false</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="49" pos:column="1">bool</name></type> <name><name pos:line="49" pos:column="6">TabBarPlus</name><op:operator pos:line="49" pos:column="16">::</op:operator><name pos:line="49" pos:column="18">_isCtrlMultiLine</name></name> <init pos:line="49" pos:column="35">= <expr><lit:literal type="boolean" pos:line="49" pos:column="37">false</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="51" pos:column="1">COLORREF</name></type> <name><name pos:line="51" pos:column="10">TabBarPlus</name><op:operator pos:line="51" pos:column="20">::</op:operator><name pos:line="51" pos:column="22">_activeTextColour</name></name> <init pos:line="51" pos:column="40">= <expr><call><name><op:operator pos:line="51" pos:column="42">::</op:operator><name pos:line="51" pos:column="44">GetSysColor</name></name><argument_list pos:line="51" pos:column="55">(<argument><expr><name pos:line="51" pos:column="56">COLOR_BTNTEXT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="52" pos:column="1">COLORREF</name></type> <name><name pos:line="52" pos:column="10">TabBarPlus</name><op:operator pos:line="52" pos:column="20">::</op:operator><name pos:line="52" pos:column="22">_activeTopBarFocusedColour</name></name> <init pos:line="52" pos:column="49">= <expr><call><name pos:line="52" pos:column="51">RGB</name><argument_list pos:line="52" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="52" pos:column="55">250</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="52" pos:column="60">170</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="52" pos:column="65">60</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="53" pos:column="1">COLORREF</name></type> <name><name pos:line="53" pos:column="10">TabBarPlus</name><op:operator pos:line="53" pos:column="20">::</op:operator><name pos:line="53" pos:column="22">_activeTopBarUnfocusedColour</name></name> <init pos:line="53" pos:column="51">= <expr><call><name pos:line="53" pos:column="53">RGB</name><argument_list pos:line="53" pos:column="56">(<argument><expr><lit:literal type="number" pos:line="53" pos:column="57">250</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="53" pos:column="62">210</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="53" pos:column="67">150</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="54" pos:column="1">COLORREF</name></type> <name><name pos:line="54" pos:column="10">TabBarPlus</name><op:operator pos:line="54" pos:column="20">::</op:operator><name pos:line="54" pos:column="22">_inactiveTextColour</name></name> <init pos:line="54" pos:column="42">= <expr><name pos:line="54" pos:column="44">grey</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="55" pos:column="1">COLORREF</name></type> <name><name pos:line="55" pos:column="10">TabBarPlus</name><op:operator pos:line="55" pos:column="20">::</op:operator><name pos:line="55" pos:column="22">_inactiveBgColour</name></name> <init pos:line="55" pos:column="40">= <expr><call><name pos:line="55" pos:column="42">RGB</name><argument_list pos:line="55" pos:column="45">(<argument><expr><lit:literal type="number" pos:line="55" pos:column="46">192</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="55" pos:column="51">192</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="55" pos:column="56">192</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><name pos:line="57" pos:column="1">HWND</name></type> <name><name pos:line="57" pos:column="6">TabBarPlus</name><op:operator pos:line="57" pos:column="16">::</op:operator><name pos:line="57" pos:column="18">_hwndArray</name><index pos:line="57" pos:column="28">[<expr><name pos:line="57" pos:column="29">nbCtrlMax</name></expr>]</index></name> <init pos:line="57" pos:column="40">= <expr><block pos:line="57" pos:column="42">{<expr><name pos:line="57" pos:column="43">NULL</name></expr>, <expr><name pos:line="57" pos:column="49">NULL</name></expr>, <expr><name pos:line="57" pos:column="55">NULL</name></expr>, <expr><name pos:line="57" pos:column="61">NULL</name></expr>, <expr><name pos:line="57" pos:column="67">NULL</name></expr>, <expr><name pos:line="57" pos:column="73">NULL</name></expr>, <expr><name pos:line="57" pos:column="79">NULL</name></expr>, <expr><name pos:line="57" pos:column="85">NULL</name></expr>, <expr><name pos:line="57" pos:column="91">NULL</name></expr>, <expr><name pos:line="57" pos:column="97">NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="58" pos:column="1">int</name></type> <name><name pos:line="58" pos:column="5">TabBarPlus</name><op:operator pos:line="58" pos:column="15">::</op:operator><name pos:line="58" pos:column="17">_nbCtrl</name></name> <init pos:line="58" pos:column="25">= <expr><lit:literal type="number" pos:line="58" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="60" pos:column="1">void</name></type> <name><name pos:line="60" pos:column="6">TabBar</name><op:operator pos:line="60" pos:column="12">::</op:operator><name pos:line="60" pos:column="14">init</name></name><parameter_list pos:line="60" pos:column="18">(<param><decl><type><name pos:line="60" pos:column="19">HINSTANCE</name></type> <name pos:line="60" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="36">HWND</name></type> <name pos:line="60" pos:column="41">parent</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="49">bool</name></type> <name pos:line="60" pos:column="54">isVertical</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="66">bool</name></type> <name pos:line="60" pos:column="71">isTraditional</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="86">bool</name></type> <name pos:line="60" pos:column="91">isMultiLine</name></decl></param>)</parameter_list>
<block pos:line="61" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="62" pos:column="9">Window</name><op:operator pos:line="62" pos:column="15">::</op:operator><name pos:line="62" pos:column="17">init</name></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="62" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="63" pos:column="9">int</name></type> <name pos:line="63" pos:column="13">vertical</name> <init pos:line="63" pos:column="22">= <expr><name pos:line="63" pos:column="24">isVertical</name><op:operator pos:line="63" pos:column="34">?</op:operator><op:operator pos:line="63" pos:column="35">(</op:operator><name pos:line="63" pos:column="36">TCS_VERTICAL</name> <op:operator pos:line="63" pos:column="49">|</op:operator> <name pos:line="63" pos:column="51">TCS_MULTILINE</name> <op:operator pos:line="63" pos:column="65">|</op:operator> <name pos:line="63" pos:column="67">TCS_RIGHTJUSTIFY</name><op:operator pos:line="63" pos:column="83">)</op:operator><op:operator pos:line="63" pos:column="84">:</op:operator><lit:literal type="number" pos:line="63" pos:column="85">0</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="64" pos:column="9">_isTraditional</name> <op:operator pos:line="64" pos:column="24">=</op:operator> <name pos:line="64" pos:column="26">isTraditional</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="65" pos:column="9">_isVertical</name> <op:operator pos:line="65" pos:column="21">=</op:operator> <name pos:line="65" pos:column="23">isVertical</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="66" pos:column="9">_isMultiLine</name> <op:operator pos:line="66" pos:column="22">=</op:operator> <name pos:line="66" pos:column="24">isMultiLine</name></expr>;</expr_stmt>	

	<decl_stmt><decl><type><name pos:line="68" pos:column="9">INITCOMMONCONTROLSEX</name></type> <name pos:line="68" pos:column="30">icce</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="69" pos:column="9">icce</name><op:operator pos:line="69" pos:column="13">.</op:operator><name pos:line="69" pos:column="14">dwSize</name></name> <op:operator pos:line="69" pos:column="21">=</op:operator> <sizeof pos:line="69" pos:column="23">sizeof<argument_list pos:line="69" pos:column="29">(<argument><expr><name pos:line="69" pos:column="30">icce</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="70" pos:column="9">icce</name><op:operator pos:line="70" pos:column="13">.</op:operator><name pos:line="70" pos:column="14">dwICC</name></name> <op:operator pos:line="70" pos:column="20">=</op:operator> <name pos:line="70" pos:column="22">ICC_TAB_CLASSES</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="71" pos:column="9">InitCommonControlsEx</name><argument_list pos:line="71" pos:column="29">(<argument><expr><op:operator pos:line="71" pos:column="30">&amp;</op:operator><name pos:line="71" pos:column="31">icce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name pos:line="72" pos:column="5">int</name></type> <name pos:line="72" pos:column="9">multiLine</name> <init pos:line="72" pos:column="19">= <expr><name pos:line="72" pos:column="21">isMultiLine</name><op:operator pos:line="72" pos:column="32">?</op:operator><op:operator pos:line="72" pos:column="33">(</op:operator><name pos:line="72" pos:column="34">_isTraditional</name><op:operator pos:line="72" pos:column="48">?</op:operator><name pos:line="72" pos:column="49">TCS_MULTILINE</name><op:operator pos:line="72" pos:column="62">:</op:operator><lit:literal type="number" pos:line="72" pos:column="63">0</lit:literal><op:operator pos:line="72" pos:column="64">)</op:operator><op:operator pos:line="72" pos:column="65">:</op:operator><lit:literal type="number" pos:line="72" pos:column="66">0</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="74" pos:column="9">int</name></type> <name pos:line="74" pos:column="13">style</name> <init pos:line="74" pos:column="19">= <expr><name pos:line="74" pos:column="21">WS_CHILD</name> <op:operator pos:line="74" pos:column="30">|</op:operator> <name pos:line="74" pos:column="32">WS_CLIPCHILDREN</name> <op:operator pos:line="74" pos:column="48">|</op:operator> <name pos:line="74" pos:column="50">WS_CLIPSIBLINGS</name> <op:operator pos:line="74" pos:column="66">|</op:operator> <name pos:line="74" pos:column="68">WS_VISIBLE</name> <op:operator pos:line="74" pos:column="79">|</op:operator>\
        <name pos:line="75" pos:column="9">TCS_FOCUSNEVER</name> <op:operator pos:line="75" pos:column="24">|</op:operator> <name pos:line="75" pos:column="26">TCS_TABS</name> <op:operator pos:line="75" pos:column="35">|</op:operator> <name pos:line="75" pos:column="37">vertical</name> <op:operator pos:line="75" pos:column="46">|</op:operator> <name pos:line="75" pos:column="48">multiLine</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="77" pos:column="9">_hSelf</name> <op:operator pos:line="77" pos:column="16">=</op:operator> <call><name><op:operator pos:line="77" pos:column="18">::</op:operator><name pos:line="77" pos:column="20">CreateWindowEx</name></name><argument_list pos:line="77" pos:column="34">(
				<argument><expr><lit:literal type="number" pos:line="78" pos:column="33">0</lit:literal></expr></argument>,
				<argument><expr><name pos:line="79" pos:column="33">WC_TABCONTROL</name></expr></argument>,
				<argument><expr><call><name pos:line="80" pos:column="33">TEXT</name><argument_list pos:line="80" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="80" pos:column="38">"Tab"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><name pos:line="81" pos:column="33">style</name></expr></argument>,
				<argument><expr><lit:literal type="number" pos:line="82" pos:column="33">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="42">0</lit:literal></expr></argument>,
				<argument><expr><name pos:line="83" pos:column="33">_hParent</name></expr></argument>,
				<argument><expr><name pos:line="84" pos:column="33">NULL</name></expr></argument>,
				<argument><expr><name pos:line="85" pos:column="33">_hInst</name></expr></argument>,
				<argument><expr><lit:literal type="number" pos:line="86" pos:column="33">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><op:operator pos:line="88" pos:column="13">!</op:operator><name pos:line="88" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="88" pos:column="21">
	<block pos:line="89" pos:column="9">{
		<throw pos:line="90" pos:column="17">throw <expr><call><name><name pos:line="90" pos:column="23">std</name><op:operator pos:line="90" pos:column="26">::</op:operator><name pos:line="90" pos:column="28">runtime_error</name></name><argument_list pos:line="90" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="90" pos:column="42">"TabBar::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="94" pos:column="1">void</name></type> <name><name pos:line="94" pos:column="6">TabBar</name><op:operator pos:line="94" pos:column="12">::</op:operator><name pos:line="94" pos:column="14">destroy</name></name><parameter_list pos:line="94" pos:column="21">()</parameter_list>
<block pos:line="95" pos:column="1">{
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">_hFont</name></expr>)</condition><then pos:line="96" pos:column="20">
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">DeleteObject</name><argument_list pos:line="97" pos:column="29">(<argument><expr><name pos:line="97" pos:column="30">_hFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">(<expr><name pos:line="99" pos:column="13">_hLargeFont</name></expr>)</condition><then pos:line="99" pos:column="25">
		<expr_stmt><expr><call><name pos:line="100" pos:column="17">DeleteObject</name><argument_list pos:line="100" pos:column="29">(<argument><expr><name pos:line="100" pos:column="30">_hLargeFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><name pos:line="102" pos:column="13">_hVerticalFont</name></expr>)</condition><then pos:line="102" pos:column="28">
		<expr_stmt><expr><call><name pos:line="103" pos:column="17">DeleteObject</name><argument_list pos:line="103" pos:column="29">(<argument><expr><name pos:line="103" pos:column="30">_hVerticalFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">_hVerticalLargeFont</name></expr>)</condition><then pos:line="105" pos:column="33">
		<expr_stmt><expr><call><name pos:line="106" pos:column="17">DeleteObject</name><argument_list pos:line="106" pos:column="29">(<argument><expr><name pos:line="106" pos:column="30">_hVerticalLargeFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><call><name><op:operator pos:line="108" pos:column="9">::</op:operator><name pos:line="108" pos:column="11">DestroyWindow</name></name><argument_list pos:line="108" pos:column="24">(<argument><expr><name pos:line="108" pos:column="25">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="109" pos:column="9">_hSelf</name> <op:operator pos:line="109" pos:column="16">=</op:operator> <name pos:line="109" pos:column="18">NULL</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="112" pos:column="1">int</name></type> <name><name pos:line="112" pos:column="5">TabBar</name><op:operator pos:line="112" pos:column="11">::</op:operator><name pos:line="112" pos:column="13">insertAtEnd</name></name><parameter_list pos:line="112" pos:column="24">(<param><decl><type><specifier pos:line="112" pos:column="25">const</specifier> <name pos:line="112" pos:column="31">TCHAR</name> <type:modifier pos:line="112" pos:column="37">*</type:modifier></type><name pos:line="112" pos:column="38">subTabName</name></decl></param>)</parameter_list>
<block pos:line="113" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="114" pos:column="9">TCITEM</name></type> <name pos:line="114" pos:column="16">tie</name></decl>;</decl_stmt> 
	<expr_stmt><expr><name><name pos:line="115" pos:column="9">tie</name><op:operator pos:line="115" pos:column="12">.</op:operator><name pos:line="115" pos:column="13">mask</name></name> <op:operator pos:line="115" pos:column="18">=</op:operator> <name pos:line="115" pos:column="20">TCIF_TEXT</name> <op:operator pos:line="115" pos:column="30">|</op:operator> <name pos:line="115" pos:column="32">TCIF_IMAGE</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="116" pos:column="9">int</name></type> <name pos:line="116" pos:column="13">index</name> <init pos:line="116" pos:column="19">= <expr><op:operator pos:line="116" pos:column="21">-</op:operator><lit:literal type="number" pos:line="116" pos:column="22">1</lit:literal></expr></init></decl>;</decl_stmt>

	<if pos:line="118" pos:column="9">if <condition pos:line="118" pos:column="12">(<expr><name pos:line="118" pos:column="13">_hasImgLst</name></expr>)</condition><then pos:line="118" pos:column="24">
		<expr_stmt><expr><name pos:line="119" pos:column="17">index</name> <op:operator pos:line="119" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="119" pos:column="25">0</lit:literal></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><name><name pos:line="120" pos:column="9">tie</name><op:operator pos:line="120" pos:column="12">.</op:operator><name pos:line="120" pos:column="13">iImage</name></name> <op:operator pos:line="120" pos:column="20">=</op:operator> <name pos:line="120" pos:column="22">index</name></expr>;</expr_stmt> 
	<expr_stmt><expr><name><name pos:line="121" pos:column="9">tie</name><op:operator pos:line="121" pos:column="12">.</op:operator><name pos:line="121" pos:column="13">pszText</name></name> <op:operator pos:line="121" pos:column="21">=</op:operator> <op:operator pos:line="121" pos:column="23">(</op:operator><name pos:line="121" pos:column="24">TCHAR</name> <op:operator pos:line="121" pos:column="30">*</op:operator><op:operator pos:line="121" pos:column="31">)</op:operator><name pos:line="121" pos:column="32">subTabName</name></expr>;</expr_stmt> 
	<return pos:line="122" pos:column="9">return <expr><call><name pos:line="122" pos:column="16">int</name><argument_list pos:line="122" pos:column="19">(<argument><expr><call><name><op:operator pos:line="122" pos:column="20">::</op:operator><name pos:line="122" pos:column="22">SendMessage</name></name><argument_list pos:line="122" pos:column="33">(<argument><expr><name pos:line="122" pos:column="34">_hSelf</name></expr></argument>, <argument><expr><name pos:line="122" pos:column="42">TCM_INSERTITEM</name></expr></argument>, <argument><expr><name pos:line="122" pos:column="58">_nbItem</name><op:operator pos:line="122" pos:column="65">++</op:operator></expr></argument>, <argument><expr><call><name><name pos:line="122" pos:column="69">reinterpret_cast</name><argument_list pos:line="122" pos:column="85">&lt;<argument><expr><name pos:line="122" pos:column="86">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="122" pos:column="93">(<argument><expr><op:operator pos:line="122" pos:column="94">&amp;</op:operator><name pos:line="122" pos:column="95">tie</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="125" pos:column="1">void</name></type> <name><name pos:line="125" pos:column="6">TabBar</name><op:operator pos:line="125" pos:column="12">::</op:operator><name pos:line="125" pos:column="14">getCurrentTitle</name></name><parameter_list pos:line="125" pos:column="29">(<param><decl><type><name pos:line="125" pos:column="30">TCHAR</name> <type:modifier pos:line="125" pos:column="36">*</type:modifier></type><name pos:line="125" pos:column="37">title</name></decl></param>, <param><decl><type><name pos:line="125" pos:column="44">int</name></type> <name pos:line="125" pos:column="48">titleLen</name></decl></param>)</parameter_list>
<block pos:line="126" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="127" pos:column="9">TCITEM</name></type> <name pos:line="127" pos:column="16">tci</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="128" pos:column="9">tci</name><op:operator pos:line="128" pos:column="12">.</op:operator><name pos:line="128" pos:column="13">mask</name></name> <op:operator pos:line="128" pos:column="18">=</op:operator> <name pos:line="128" pos:column="20">TCIF_TEXT</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="129" pos:column="9">tci</name><op:operator pos:line="129" pos:column="12">.</op:operator><name pos:line="129" pos:column="13">pszText</name></name> <op:operator pos:line="129" pos:column="21">=</op:operator> <name pos:line="129" pos:column="23">title</name></expr>;</expr_stmt>     
	<expr_stmt><expr><name><name pos:line="130" pos:column="9">tci</name><op:operator pos:line="130" pos:column="12">.</op:operator><name pos:line="130" pos:column="13">cchTextMax</name></name> <op:operator pos:line="130" pos:column="24">=</op:operator> <name pos:line="130" pos:column="26">titleLen</name><op:operator pos:line="130" pos:column="34">-</op:operator><lit:literal type="number" pos:line="130" pos:column="35">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="131" pos:column="9">::</op:operator><name pos:line="131" pos:column="11">SendMessage</name></name><argument_list pos:line="131" pos:column="22">(<argument><expr><name pos:line="131" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="31">TCM_GETITEM</name></expr></argument>, <argument><expr><call><name pos:line="131" pos:column="44">getCurrentTabIndex</name><argument_list pos:line="131" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="131" pos:column="66">reinterpret_cast</name><argument_list pos:line="131" pos:column="82">&lt;<argument><expr><name pos:line="131" pos:column="83">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="131" pos:column="90">(<argument><expr><op:operator pos:line="131" pos:column="91">&amp;</op:operator><name pos:line="131" pos:column="92">tci</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="134" pos:column="1">void</name></type> <name><name pos:line="134" pos:column="6">TabBar</name><op:operator pos:line="134" pos:column="12">::</op:operator><name pos:line="134" pos:column="14">setFont</name></name><parameter_list pos:line="134" pos:column="21">(<param><decl><type><name pos:line="134" pos:column="22">TCHAR</name> <type:modifier pos:line="134" pos:column="28">*</type:modifier></type><name pos:line="134" pos:column="29">fontName</name></decl></param>, <param><decl><type><name pos:line="134" pos:column="39">size_t</name></type> <name pos:line="134" pos:column="46">fontSize</name></decl></param>)</parameter_list>
<block pos:line="135" pos:column="1">{
	<if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><name pos:line="136" pos:column="13">_hFont</name></expr>)</condition><then pos:line="136" pos:column="20">
		<expr_stmt><expr><call><name><op:operator pos:line="137" pos:column="17">::</op:operator><name pos:line="137" pos:column="19">DeleteObject</name></name><argument_list pos:line="137" pos:column="31">(<argument><expr><name pos:line="137" pos:column="32">_hFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="139" pos:column="9">_hFont</name> <op:operator pos:line="139" pos:column="16">=</op:operator> <call><name><op:operator pos:line="139" pos:column="18">::</op:operator><name pos:line="139" pos:column="20">CreateFont</name></name><argument_list pos:line="139" pos:column="30">( <argument><expr><name pos:line="139" pos:column="32">fontSize</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="139" pos:column="42">0</lit:literal></expr></argument>, 
						  <argument><expr><op:operator pos:line="140" pos:column="51">(</op:operator><name pos:line="140" pos:column="52">_isVertical</name><op:operator pos:line="140" pos:column="63">)</op:operator> <op:operator pos:line="140" pos:column="65">?</op:operator> <lit:literal type="number" pos:line="140" pos:column="67">900</lit:literal><op:operator pos:line="140" pos:column="70">:</op:operator><lit:literal type="number" pos:line="140" pos:column="71">0</lit:literal></expr></argument>,
						  <argument><expr><op:operator pos:line="141" pos:column="51">(</op:operator><name pos:line="141" pos:column="52">_isVertical</name><op:operator pos:line="141" pos:column="63">)</op:operator> <op:operator pos:line="141" pos:column="65">?</op:operator> <lit:literal type="number" pos:line="141" pos:column="67">900</lit:literal><op:operator pos:line="141" pos:column="70">:</op:operator><lit:literal type="number" pos:line="141" pos:column="71">0</lit:literal></expr></argument>,
		                   <argument><expr><name pos:line="142" pos:column="36">FW_NORMAL</name></expr></argument>,
			               <argument><expr><lit:literal type="number" pos:line="143" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="143" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="143" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="143" pos:column="49">0</lit:literal></expr></argument>,
			               <argument><expr><lit:literal type="number" pos:line="144" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="144" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="144" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="144" pos:column="49">0</lit:literal></expr></argument>,
				           <argument><expr><name pos:line="145" pos:column="44">fontName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="146" pos:column="9">if <condition pos:line="146" pos:column="12">(<expr><name pos:line="146" pos:column="13">_hFont</name></expr>)</condition><then pos:line="146" pos:column="20">
		<expr_stmt><expr><call><name><op:operator pos:line="147" pos:column="17">::</op:operator><name pos:line="147" pos:column="19">SendMessage</name></name><argument_list pos:line="147" pos:column="30">(<argument><expr><name pos:line="147" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="147" pos:column="39">WM_SETFONT</name></expr></argument>, <argument><expr><call><name><name pos:line="147" pos:column="51">reinterpret_cast</name><argument_list pos:line="147" pos:column="67">&lt;<argument><expr><name pos:line="147" pos:column="68">WPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="147" pos:column="75">(<argument><expr><name pos:line="147" pos:column="76">_hFont</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="147" pos:column="85">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<function><type><name pos:line="150" pos:column="1">void</name></type> <name><name pos:line="150" pos:column="6">TabBar</name><op:operator pos:line="150" pos:column="12">::</op:operator><name pos:line="150" pos:column="14">activateAt</name></name><parameter_list pos:line="150" pos:column="24">(<param><decl><type><name pos:line="150" pos:column="25">int</name></type> <name pos:line="150" pos:column="29">index</name></decl></param>)</parameter_list> <specifier pos:line="150" pos:column="36">const</specifier> 
<block pos:line="151" pos:column="1">{
	<if pos:line="152" pos:column="9">if <condition pos:line="152" pos:column="12">(<expr><call><name pos:line="152" pos:column="13">getCurrentTabIndex</name><argument_list pos:line="152" pos:column="31">()</argument_list></call> <op:operator pos:line="152" pos:column="34">!=</op:operator> <name pos:line="152" pos:column="37">index</name></expr>)</condition><then pos:line="152" pos:column="43"> 
	<block pos:line="153" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="154" pos:column="17">::</op:operator><name pos:line="154" pos:column="19">SendMessage</name></name><argument_list pos:line="154" pos:column="30">(<argument><expr><name pos:line="154" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="154" pos:column="39">TCM_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="154" pos:column="54">index</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="154" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="156" pos:column="9">TBHDR</name></type> <name pos:line="156" pos:column="15">nmhdr</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="157" pos:column="9">nmhdr</name><op:operator pos:line="157" pos:column="14">.</op:operator><name pos:line="157" pos:column="15">hdr</name><op:operator pos:line="157" pos:column="18">.</op:operator><name pos:line="157" pos:column="19">hwndFrom</name></name> <op:operator pos:line="157" pos:column="28">=</op:operator> <name pos:line="157" pos:column="30">_hSelf</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="158" pos:column="9">nmhdr</name><op:operator pos:line="158" pos:column="14">.</op:operator><name pos:line="158" pos:column="15">hdr</name><op:operator pos:line="158" pos:column="18">.</op:operator><name pos:line="158" pos:column="19">code</name></name> <op:operator pos:line="158" pos:column="24">=</op:operator> <name pos:line="158" pos:column="26">TCN_SELCHANGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="159" pos:column="9">nmhdr</name><op:operator pos:line="159" pos:column="14">.</op:operator><name pos:line="159" pos:column="15">hdr</name><op:operator pos:line="159" pos:column="18">.</op:operator><name pos:line="159" pos:column="19">idFrom</name></name> <op:operator pos:line="159" pos:column="26">=</op:operator> <call><name><name pos:line="159" pos:column="28">reinterpret_cast</name><argument_list pos:line="159" pos:column="44">&lt;<argument><expr><name pos:line="159" pos:column="45">unsigned</name> <name pos:line="159" pos:column="54">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="159" pos:column="58">(<argument><expr><name pos:line="159" pos:column="59">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="160" pos:column="9">nmhdr</name><op:operator pos:line="160" pos:column="14">.</op:operator><name pos:line="160" pos:column="15">tabOrigin</name></name> <op:operator pos:line="160" pos:column="25">=</op:operator> <name pos:line="160" pos:column="27">index</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="163" pos:column="1">void</name></type> <name><name pos:line="163" pos:column="6">TabBar</name><op:operator pos:line="163" pos:column="12">::</op:operator><name pos:line="163" pos:column="14">deletItemAt</name></name><parameter_list pos:line="163" pos:column="25">(<param><decl><type><name pos:line="163" pos:column="26">size_t</name></type> <name pos:line="163" pos:column="33">index</name></decl></param>)</parameter_list> 
<block pos:line="164" pos:column="1">{
	<if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><op:operator pos:line="165" pos:column="13">(</op:operator><name pos:line="165" pos:column="14">index</name> <op:operator pos:line="165" pos:column="20">==</op:operator> <name pos:line="165" pos:column="23">_nbItem</name><op:operator pos:line="165" pos:column="30">-</op:operator><lit:literal type="number" pos:line="165" pos:column="31">1</lit:literal><op:operator pos:line="165" pos:column="32">)</op:operator></expr>)</condition><then pos:line="165" pos:column="34">
	<block pos:line="166" pos:column="9">{
		<comment type="line" pos:line="167" pos:column="17">//prevent invisible tabs. If last visible tab is removed, other tabs are put in view but not redrawn</comment>
		<comment type="line" pos:line="168" pos:column="17">//Therefore, scroll one tab to the left if only one tab visible</comment>
		<if pos:line="169" pos:column="17">if <condition pos:line="169" pos:column="20">(<expr><name pos:line="169" pos:column="21">_nbItem</name> <op:operator pos:line="169" pos:column="29">&gt;</op:operator> <lit:literal type="number" pos:line="169" pos:column="31">1</lit:literal></expr>)</condition><then pos:line="169" pos:column="33">
		<block pos:line="170" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="171" pos:column="25">RECT</name></type> <name pos:line="171" pos:column="30">itemRect</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="172" pos:column="25">::</op:operator><name pos:line="172" pos:column="27">SendMessage</name></name><argument_list pos:line="172" pos:column="38">(<argument><expr><name pos:line="172" pos:column="39">_hSelf</name></expr></argument>, <argument><expr><name pos:line="172" pos:column="47">TCM_GETITEMRECT</name></expr></argument>, <argument><expr><op:operator pos:line="172" pos:column="64">(</op:operator><name pos:line="172" pos:column="65">WPARAM</name><op:operator pos:line="172" pos:column="71">)</op:operator><name pos:line="172" pos:column="72">index</name></expr></argument>, <argument><expr><op:operator pos:line="172" pos:column="79">(</op:operator><name pos:line="172" pos:column="80">LPARAM</name><op:operator pos:line="172" pos:column="86">)</op:operator><op:operator pos:line="172" pos:column="87">&amp;</op:operator><name pos:line="172" pos:column="88">itemRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="173" pos:column="25">if <condition pos:line="173" pos:column="28">(<expr><name><name pos:line="173" pos:column="29">itemRect</name><op:operator pos:line="173" pos:column="37">.</op:operator><name pos:line="173" pos:column="38">left</name></name> <op:operator pos:line="173" pos:column="43">&lt;</op:operator> <lit:literal type="number" pos:line="173" pos:column="45">5</lit:literal></expr>)</condition><then pos:line="173" pos:column="47"> <comment type="line" pos:line="173" pos:column="48">//if last visible tab, scroll left once (no more than 5px away should be safe, usually 2px depending on the drawing)</comment>
			<block pos:line="174" pos:column="25">{	
				<comment type="line" pos:line="175" pos:column="33">//To scroll the tab control to the left, use the WM_HSCROLL notification</comment>
				<comment type="line" pos:line="176" pos:column="33">//Doesn't really seem to be documented anywhere, but the values do match the message parameters</comment>
				<comment type="line" pos:line="177" pos:column="33">//The up/down control really is just some sort of scrollbar</comment>
				<comment type="line" pos:line="178" pos:column="33">//There seems to be no negative effect on any internal state of the tab control or the up/down control</comment>
				<decl_stmt><decl><type><name pos:line="179" pos:column="33">int</name></type> <name pos:line="179" pos:column="37">wParam</name> <init pos:line="179" pos:column="44">= <expr><call><name pos:line="179" pos:column="46">MAKEWPARAM</name><argument_list pos:line="179" pos:column="56">(<argument><expr><name pos:line="179" pos:column="57">SB_THUMBPOSITION</name></expr></argument>, <argument><expr><name pos:line="179" pos:column="75">index</name> <op:operator pos:line="179" pos:column="81">-</op:operator> <lit:literal type="number" pos:line="179" pos:column="83">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="180" pos:column="33">::</op:operator><name pos:line="180" pos:column="35">SendMessage</name></name><argument_list pos:line="180" pos:column="46">(<argument><expr><name pos:line="180" pos:column="47">_hSelf</name></expr></argument>, <argument><expr><name pos:line="180" pos:column="55">WM_HSCROLL</name></expr></argument>, <argument><expr><name pos:line="180" pos:column="67">wParam</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="180" pos:column="75">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><name pos:line="182" pos:column="33">wParam</name> <op:operator pos:line="182" pos:column="40">=</op:operator> <call><name pos:line="182" pos:column="42">MAKEWPARAM</name><argument_list pos:line="182" pos:column="52">(<argument><expr><name pos:line="182" pos:column="53">SB_ENDSCROLL</name></expr></argument>, <argument><expr><name pos:line="182" pos:column="67">index</name> <op:operator pos:line="182" pos:column="73">-</op:operator> <lit:literal type="number" pos:line="182" pos:column="75">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="183" pos:column="33">::</op:operator><name pos:line="183" pos:column="35">SendMessage</name></name><argument_list pos:line="183" pos:column="46">(<argument><expr><name pos:line="183" pos:column="47">_hSelf</name></expr></argument>, <argument><expr><name pos:line="183" pos:column="55">WM_HSCROLL</name></expr></argument>, <argument><expr><name pos:line="183" pos:column="67">wParam</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="183" pos:column="75">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="187" pos:column="9">::</op:operator><name pos:line="187" pos:column="11">SendMessage</name></name><argument_list pos:line="187" pos:column="22">(<argument><expr><name pos:line="187" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="187" pos:column="31">TCM_DELETEITEM</name></expr></argument>, <argument><expr><name pos:line="187" pos:column="47">index</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="187" pos:column="54">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="188" pos:column="9">_nbItem</name><op:operator pos:line="188" pos:column="16">--</op:operator></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="191" pos:column="1">void</name></type> <name><name pos:line="191" pos:column="6">TabBar</name><op:operator pos:line="191" pos:column="12">::</op:operator><name pos:line="191" pos:column="14">reSizeTo</name></name><parameter_list pos:line="191" pos:column="22">(<param><decl><type><name pos:line="191" pos:column="23">RECT</name> <type:modifier pos:line="191" pos:column="28">&amp;</type:modifier></type> <name pos:line="191" pos:column="30">rc2Ajust</name></decl></param>)</parameter_list>
<block pos:line="192" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="193" pos:column="9">RECT</name></type> <name pos:line="193" pos:column="14">RowRect</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="194" pos:column="9">int</name></type> <name pos:line="194" pos:column="13">RowCount</name></decl><op:operator pos:line="194" pos:column="21">,</op:operator> <decl><type ref="prev"/><name pos:line="194" pos:column="23">TabsLength</name></decl>;</decl_stmt>

	<comment type="line" pos:line="196" pos:column="9">// Important to do that!</comment>
	<comment type="line" pos:line="197" pos:column="9">// Otherwise, the window(s) it contains will take all the resouce of CPU</comment>
	<comment type="line" pos:line="198" pos:column="9">// We don't need to resize the contained windows if they are even invisible anyway</comment>
	<expr_stmt><expr><call><name pos:line="199" pos:column="9">display</name><argument_list pos:line="199" pos:column="16">(<argument><expr><name><name pos:line="199" pos:column="17">rc2Ajust</name><op:operator pos:line="199" pos:column="25">.</op:operator><name pos:line="199" pos:column="26">right</name></name> <op:operator pos:line="199" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="199" pos:column="34">10</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="200" pos:column="9">RECT</name></type> <name pos:line="200" pos:column="14">rc</name> <init pos:line="200" pos:column="17">= <expr><name pos:line="200" pos:column="19">rc2Ajust</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="201" pos:column="9">Window</name><op:operator pos:line="201" pos:column="15">::</op:operator><name pos:line="201" pos:column="17">reSizeTo</name></name><argument_list pos:line="201" pos:column="25">(<argument><expr><name pos:line="201" pos:column="26">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
	<comment type="line" pos:line="203" pos:column="9">// Do our own calculations because TabCtrl_AdjustRect doesn't work</comment>
	<comment type="line" pos:line="204" pos:column="9">// on vertical or multi-lined tab controls	</comment>
	
	<expr_stmt><expr><name pos:line="206" pos:column="9">RowCount</name> <op:operator pos:line="206" pos:column="18">=</op:operator> <call><name pos:line="206" pos:column="20">TabCtrl_GetRowCount</name><argument_list pos:line="206" pos:column="39">(<argument><expr><name pos:line="206" pos:column="40">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="207" pos:column="9">TabCtrl_GetItemRect</name><argument_list pos:line="207" pos:column="28">(<argument><expr><name pos:line="207" pos:column="29">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="207" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="207" pos:column="40">&amp;</op:operator><name pos:line="207" pos:column="41">RowRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="208" pos:column="9">if <condition pos:line="208" pos:column="12">(<expr><name pos:line="208" pos:column="13">_isTraditional</name></expr>)</condition><then pos:line="208" pos:column="28">
	<block pos:line="209" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="210" pos:column="17">TabCtrl_AdjustRect</name><argument_list pos:line="210" pos:column="35">(<argument><expr><name pos:line="210" pos:column="36">_hSelf</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="44">FALSE</name></expr></argument>, <argument><expr><op:operator pos:line="210" pos:column="51">&amp;</op:operator><name pos:line="210" pos:column="52">rc2Ajust</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="212" pos:column="9">else <if pos:line="212" pos:column="14">if <condition pos:line="212" pos:column="17">(<expr><name pos:line="212" pos:column="18">_isVertical</name></expr>)</condition><then pos:line="212" pos:column="30">
	<block pos:line="213" pos:column="9">{		
		<expr_stmt><expr><name pos:line="214" pos:column="17">TabsLength</name>  <op:operator pos:line="214" pos:column="29">=</op:operator> <name pos:line="214" pos:column="31">RowCount</name> <op:operator pos:line="214" pos:column="40">*</op:operator> <op:operator pos:line="214" pos:column="42">(</op:operator><name><name pos:line="214" pos:column="43">RowRect</name><op:operator pos:line="214" pos:column="50">.</op:operator><name pos:line="214" pos:column="51">right</name></name> <op:operator pos:line="214" pos:column="57">-</op:operator> <name><name pos:line="214" pos:column="59">RowRect</name><op:operator pos:line="214" pos:column="66">.</op:operator><name pos:line="214" pos:column="67">left</name></name><op:operator pos:line="214" pos:column="71">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="215" pos:column="17">TabsLength</name> <op:operator pos:line="215" pos:column="28">+=</op:operator> <call><name pos:line="215" pos:column="31">GetSystemMetrics</name><argument_list pos:line="215" pos:column="47">(<argument><expr><name pos:line="215" pos:column="48">SM_CXEDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><name><name pos:line="217" pos:column="17">rc2Ajust</name><op:operator pos:line="217" pos:column="25">.</op:operator><name pos:line="217" pos:column="26">left</name></name>	<op:operator pos:line="217" pos:column="33">+=</op:operator> <name pos:line="217" pos:column="36">TabsLength</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="218" pos:column="17">rc2Ajust</name><op:operator pos:line="218" pos:column="25">.</op:operator><name pos:line="218" pos:column="26">right</name></name>	<op:operator pos:line="218" pos:column="33">-=</op:operator> <name pos:line="218" pos:column="36">TabsLength</name></expr>;</expr_stmt>	
	}</block></then>
	<else pos:line="220" pos:column="9">else
	<block pos:line="221" pos:column="9">{
		<expr_stmt><expr><name pos:line="222" pos:column="17">TabsLength</name>  <op:operator pos:line="222" pos:column="29">=</op:operator> <name pos:line="222" pos:column="31">RowCount</name> <op:operator pos:line="222" pos:column="40">*</op:operator> <op:operator pos:line="222" pos:column="42">(</op:operator><name><name pos:line="222" pos:column="43">RowRect</name><op:operator pos:line="222" pos:column="50">.</op:operator><name pos:line="222" pos:column="51">bottom</name></name> <op:operator pos:line="222" pos:column="58">-</op:operator> <name><name pos:line="222" pos:column="60">RowRect</name><op:operator pos:line="222" pos:column="67">.</op:operator><name pos:line="222" pos:column="68">top</name></name><op:operator pos:line="222" pos:column="71">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="223" pos:column="17">TabsLength</name> <op:operator pos:line="223" pos:column="28">+=</op:operator> <call><name pos:line="223" pos:column="31">GetSystemMetrics</name><argument_list pos:line="223" pos:column="47">(<argument><expr><name pos:line="223" pos:column="48">SM_CYEDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="225" pos:column="17">rc2Ajust</name><op:operator pos:line="225" pos:column="25">.</op:operator><name pos:line="225" pos:column="26">top</name></name>	<op:operator pos:line="225" pos:column="33">+=</op:operator> <name pos:line="225" pos:column="36">TabsLength</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="226" pos:column="17">rc2Ajust</name><op:operator pos:line="226" pos:column="25">.</op:operator><name pos:line="226" pos:column="26">bottom</name></name> <op:operator pos:line="226" pos:column="33">-=</op:operator> <name pos:line="226" pos:column="36">TabsLength</name></expr>;</expr_stmt>
	}</block></else></if></else></if>
}</block></function>

<function><type><name pos:line="230" pos:column="1">void</name></type> <name><name pos:line="230" pos:column="6">TabBarPlus</name><op:operator pos:line="230" pos:column="16">::</op:operator><name pos:line="230" pos:column="18">init</name></name><parameter_list pos:line="230" pos:column="22">(<param><decl><type><name pos:line="230" pos:column="23">HINSTANCE</name></type> <name pos:line="230" pos:column="33">hInst</name></decl></param>, <param><decl><type><name pos:line="230" pos:column="40">HWND</name></type> <name pos:line="230" pos:column="45">parent</name></decl></param>, <param><decl><type><name pos:line="230" pos:column="53">bool</name></type> <name pos:line="230" pos:column="58">isVertical</name></decl></param>, <param><decl><type><name pos:line="230" pos:column="70">bool</name></type> <name pos:line="230" pos:column="75">isTraditional</name></decl></param>, <param><decl><type><name pos:line="230" pos:column="90">bool</name></type> <name pos:line="230" pos:column="95">isMultiLine</name></decl></param>)</parameter_list>
<block pos:line="231" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="232" pos:column="9">Window</name><op:operator pos:line="232" pos:column="15">::</op:operator><name pos:line="232" pos:column="17">init</name></name><argument_list pos:line="232" pos:column="21">(<argument><expr><name pos:line="232" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="233" pos:column="9">int</name></type> <name pos:line="233" pos:column="13">vertical</name> <init pos:line="233" pos:column="22">= <expr><name pos:line="233" pos:column="24">isVertical</name><op:operator pos:line="233" pos:column="34">?</op:operator><op:operator pos:line="233" pos:column="35">(</op:operator><name pos:line="233" pos:column="36">TCS_VERTICAL</name> <op:operator pos:line="233" pos:column="49">|</op:operator> <name pos:line="233" pos:column="51">TCS_MULTILINE</name> <op:operator pos:line="233" pos:column="65">|</op:operator> <name pos:line="233" pos:column="67">TCS_RIGHTJUSTIFY</name><op:operator pos:line="233" pos:column="83">)</op:operator><op:operator pos:line="233" pos:column="84">:</op:operator><lit:literal type="number" pos:line="233" pos:column="85">0</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="234" pos:column="9">_isTraditional</name> <op:operator pos:line="234" pos:column="24">=</op:operator> <name pos:line="234" pos:column="26">isTraditional</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="235" pos:column="9">_isVertical</name> <op:operator pos:line="235" pos:column="21">=</op:operator> <name pos:line="235" pos:column="23">isVertical</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="236" pos:column="9">_isMultiLine</name> <op:operator pos:line="236" pos:column="22">=</op:operator> <name pos:line="236" pos:column="24">isMultiLine</name></expr>;</expr_stmt>	

	<decl_stmt><decl><type><name pos:line="238" pos:column="9">INITCOMMONCONTROLSEX</name></type> <name pos:line="238" pos:column="30">icce</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="239" pos:column="9">icce</name><op:operator pos:line="239" pos:column="13">.</op:operator><name pos:line="239" pos:column="14">dwSize</name></name> <op:operator pos:line="239" pos:column="21">=</op:operator> <sizeof pos:line="239" pos:column="23">sizeof<argument_list pos:line="239" pos:column="29">(<argument><expr><name pos:line="239" pos:column="30">icce</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="240" pos:column="9">icce</name><op:operator pos:line="240" pos:column="13">.</op:operator><name pos:line="240" pos:column="14">dwICC</name></name> <op:operator pos:line="240" pos:column="20">=</op:operator> <name pos:line="240" pos:column="22">ICC_TAB_CLASSES</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="241" pos:column="9">InitCommonControlsEx</name><argument_list pos:line="241" pos:column="29">(<argument><expr><op:operator pos:line="241" pos:column="30">&amp;</op:operator><name pos:line="241" pos:column="31">icce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <decl_stmt><decl><type><name pos:line="242" pos:column="5">int</name></type> <name pos:line="242" pos:column="9">multiLine</name> <init pos:line="242" pos:column="19">= <expr><name pos:line="242" pos:column="21">isMultiLine</name><op:operator pos:line="242" pos:column="32">?</op:operator><op:operator pos:line="242" pos:column="33">(</op:operator><name pos:line="242" pos:column="34">_isTraditional</name><op:operator pos:line="242" pos:column="48">?</op:operator><name pos:line="242" pos:column="49">TCS_MULTILINE</name><op:operator pos:line="242" pos:column="62">:</op:operator><lit:literal type="number" pos:line="242" pos:column="63">0</lit:literal><op:operator pos:line="242" pos:column="64">)</op:operator><op:operator pos:line="242" pos:column="65">:</op:operator><lit:literal type="number" pos:line="242" pos:column="66">0</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="244" pos:column="9">int</name></type> <name pos:line="244" pos:column="13">style</name> <init pos:line="244" pos:column="19">= <expr><name pos:line="244" pos:column="21">WS_CHILD</name> <op:operator pos:line="244" pos:column="30">|</op:operator> <name pos:line="244" pos:column="32">WS_CLIPCHILDREN</name> <op:operator pos:line="244" pos:column="48">|</op:operator> <name pos:line="244" pos:column="50">WS_CLIPSIBLINGS</name> <op:operator pos:line="244" pos:column="66">|</op:operator> <name pos:line="244" pos:column="68">WS_VISIBLE</name> <op:operator pos:line="244" pos:column="79">|</op:operator>\
        <name pos:line="245" pos:column="9">TCS_TOOLTIPS</name> <op:operator pos:line="245" pos:column="22">|</op:operator> <name pos:line="245" pos:column="24">TCS_FOCUSNEVER</name> <op:operator pos:line="245" pos:column="39">|</op:operator> <name pos:line="245" pos:column="41">TCS_TABS</name> <op:operator pos:line="245" pos:column="50">|</op:operator> <name pos:line="245" pos:column="52">vertical</name> <op:operator pos:line="245" pos:column="61">|</op:operator> <name pos:line="245" pos:column="63">multiLine</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="247" pos:column="9">style</name> <op:operator pos:line="247" pos:column="15">|=</op:operator> <name pos:line="247" pos:column="18">TCS_OWNERDRAWFIXED</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="249" pos:column="9">_hSelf</name> <op:operator pos:line="249" pos:column="16">=</op:operator> <call><name><op:operator pos:line="249" pos:column="18">::</op:operator><name pos:line="249" pos:column="20">CreateWindowEx</name></name><argument_list pos:line="249" pos:column="34">(
				<argument><expr><lit:literal type="number" pos:line="250" pos:column="33">0</lit:literal></expr></argument>,
				<argument><expr><name pos:line="251" pos:column="33">WC_TABCONTROL</name></expr></argument>,
				<argument><expr><call><name pos:line="252" pos:column="33">TEXT</name><argument_list pos:line="252" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="252" pos:column="38">"Tab"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><name pos:line="253" pos:column="33">style</name></expr></argument>,
				<argument><expr><lit:literal type="number" pos:line="254" pos:column="33">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="254" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="254" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="254" pos:column="42">0</lit:literal></expr></argument>,
				<argument><expr><name pos:line="255" pos:column="33">_hParent</name></expr></argument>,
				<argument><expr><name pos:line="256" pos:column="33">NULL</name></expr></argument>,
				<argument><expr><name pos:line="257" pos:column="33">_hInst</name></expr></argument>,
				<argument><expr><lit:literal type="number" pos:line="258" pos:column="33">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="260" pos:column="9">if <condition pos:line="260" pos:column="12">(<expr><op:operator pos:line="260" pos:column="13">!</op:operator><name pos:line="260" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="260" pos:column="21">
	<block pos:line="261" pos:column="9">{
		<throw pos:line="262" pos:column="17">throw <expr><call><name><name pos:line="262" pos:column="23">std</name><op:operator pos:line="262" pos:column="26">::</op:operator><name pos:line="262" pos:column="28">runtime_error</name></name><argument_list pos:line="262" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="262" pos:column="42">"TabBarPlus::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>
	<if pos:line="264" pos:column="9">if <condition pos:line="264" pos:column="12">(<expr><op:operator pos:line="264" pos:column="13">!</op:operator><name pos:line="264" pos:column="14">_isTraditional</name></expr>)</condition><then pos:line="264" pos:column="29">
    <block pos:line="265" pos:column="5">{
		<if pos:line="266" pos:column="17">if <condition pos:line="266" pos:column="20">(<expr><op:operator pos:line="266" pos:column="21">!</op:operator><name><name pos:line="266" pos:column="22">_hwndArray</name><index pos:line="266" pos:column="32">[<expr><name pos:line="266" pos:column="33">_nbCtrl</name></expr>]</index></name></expr>)</condition><then pos:line="266" pos:column="42">
		<block pos:line="267" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="268" pos:column="25">_hwndArray</name><index pos:line="268" pos:column="35">[<expr><name pos:line="268" pos:column="36">_nbCtrl</name></expr>]</index></name> <op:operator pos:line="268" pos:column="45">=</op:operator> <name pos:line="268" pos:column="47">_hSelf</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="269" pos:column="25">_ctrlID</name> <op:operator pos:line="269" pos:column="33">=</op:operator> <name pos:line="269" pos:column="35">_nbCtrl</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="271" pos:column="17">else 
		<block pos:line="272" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="273" pos:column="25">int</name></type> <name pos:line="273" pos:column="29">i</name> <init pos:line="273" pos:column="31">= <expr><lit:literal type="number" pos:line="273" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="274" pos:column="25">bool</name></type> <name pos:line="274" pos:column="30">found</name> <init pos:line="274" pos:column="36">= <expr><lit:literal type="boolean" pos:line="274" pos:column="38">false</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="275" pos:column="25">for ( <init pos:line="275" pos:column="31">;</init> <condition><expr><name pos:line="275" pos:column="33">i</name> <op:operator pos:line="275" pos:column="35">&lt;</op:operator> <name pos:line="275" pos:column="37">nbCtrlMax</name> <op:operator pos:line="275" pos:column="47">&amp;&amp;</op:operator> <op:operator pos:line="275" pos:column="50">!</op:operator><name pos:line="275" pos:column="51">found</name></expr> ;</condition> <incr><expr><name pos:line="275" pos:column="59">i</name><op:operator pos:line="275" pos:column="60">++</op:operator></expr></incr>)
				<if pos:line="276" pos:column="33">if <condition pos:line="276" pos:column="36">(<expr><op:operator pos:line="276" pos:column="37">!</op:operator><name><name pos:line="276" pos:column="38">_hwndArray</name><index pos:line="276" pos:column="48">[<expr><name pos:line="276" pos:column="49">i</name></expr>]</index></name></expr>)</condition><then pos:line="276" pos:column="52">
					<expr_stmt><expr><name pos:line="277" pos:column="41">found</name> <op:operator pos:line="277" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="277" pos:column="49">true</lit:literal></expr>;</expr_stmt></then></if></for>
			<if pos:line="278" pos:column="25">if <condition pos:line="278" pos:column="28">(<expr><op:operator pos:line="278" pos:column="29">!</op:operator><name pos:line="278" pos:column="30">found</name></expr>)</condition><then pos:line="278" pos:column="36">
			<block pos:line="279" pos:column="25">{
				<expr_stmt><expr><name pos:line="280" pos:column="33">_ctrlID</name> <op:operator pos:line="280" pos:column="41">=</op:operator> <op:operator pos:line="280" pos:column="43">-</op:operator><lit:literal type="number" pos:line="280" pos:column="44">1</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="281" pos:column="33">destroy</name><argument_list pos:line="281" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
				<throw pos:line="282" pos:column="33">throw <expr><call><name><name pos:line="282" pos:column="39">std</name><op:operator pos:line="282" pos:column="42">::</op:operator><name pos:line="282" pos:column="44">runtime_error</name></name><argument_list pos:line="282" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="282" pos:column="58">"TabBarPlus::init : Tab Control error - Tab Control # is over its limit"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
			}</block></then></if>
			<expr_stmt><expr><name><name pos:line="284" pos:column="25">_hwndArray</name><index pos:line="284" pos:column="35">[<expr><name pos:line="284" pos:column="36">i</name></expr>]</index></name> <op:operator pos:line="284" pos:column="39">=</op:operator> <name pos:line="284" pos:column="41">_hSelf</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="285" pos:column="25">_ctrlID</name> <op:operator pos:line="285" pos:column="33">=</op:operator> <name pos:line="285" pos:column="35">i</name></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="287" pos:column="17">_nbCtrl</name><op:operator pos:line="287" pos:column="24">++</op:operator></expr>;</expr_stmt>

        <expr_stmt><expr><call><name><op:operator pos:line="289" pos:column="9">::</op:operator><name pos:line="289" pos:column="11">SetWindowLongPtr</name></name><argument_list pos:line="289" pos:column="27">(<argument><expr><name pos:line="289" pos:column="28">_hSelf</name></expr></argument>, <argument><expr><name pos:line="289" pos:column="36">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="289" pos:column="51">(</op:operator><name pos:line="289" pos:column="52">LONG_PTR</name><op:operator pos:line="289" pos:column="60">)</op:operator><name pos:line="289" pos:column="61">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><name pos:line="290" pos:column="13">_tabBarDefaultProc</name> <op:operator pos:line="290" pos:column="32">=</op:operator> <call><name><name pos:line="290" pos:column="34">reinterpret_cast</name><argument_list pos:line="290" pos:column="50">&lt;<argument><expr><name pos:line="290" pos:column="51">WNDPROC</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="290" pos:column="59">(<argument><expr><call><name><op:operator pos:line="290" pos:column="60">::</op:operator><name pos:line="290" pos:column="62">SetWindowLongPtr</name></name><argument_list pos:line="290" pos:column="78">(<argument><expr><name pos:line="290" pos:column="79">_hSelf</name></expr></argument>, <argument><expr><name pos:line="290" pos:column="87">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="290" pos:column="101">(</op:operator><name pos:line="290" pos:column="102">LONG_PTR</name><op:operator pos:line="290" pos:column="110">)</op:operator><name pos:line="290" pos:column="111">TabBarPlus_Proc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

	<decl_stmt><decl><type><name pos:line="293" pos:column="9">LOGFONT</name></type> <name pos:line="293" pos:column="17">LogFont</name></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="295" pos:column="9">_hFont</name> <op:operator pos:line="295" pos:column="16">=</op:operator> <op:operator pos:line="295" pos:column="18">(</op:operator><name pos:line="295" pos:column="19">HFONT</name><op:operator pos:line="295" pos:column="24">)</op:operator><call><name><op:operator pos:line="295" pos:column="25">::</op:operator><name pos:line="295" pos:column="27">SendMessage</name></name><argument_list pos:line="295" pos:column="38">(<argument><expr><name pos:line="295" pos:column="39">_hSelf</name></expr></argument>, <argument><expr><name pos:line="295" pos:column="47">WM_GETFONT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="295" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="295" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<if pos:line="297" pos:column="9">if <condition pos:line="297" pos:column="12">(<expr><name pos:line="297" pos:column="13">_hFont</name> <op:operator pos:line="297" pos:column="20">==</op:operator> <name pos:line="297" pos:column="23">NULL</name></expr>)</condition><then pos:line="297" pos:column="28">
		<expr_stmt><expr><name pos:line="298" pos:column="17">_hFont</name> <op:operator pos:line="298" pos:column="24">=</op:operator> <op:operator pos:line="298" pos:column="26">(</op:operator><name pos:line="298" pos:column="27">HFONT</name><op:operator pos:line="298" pos:column="32">)</op:operator><call><name><op:operator pos:line="298" pos:column="33">::</op:operator><name pos:line="298" pos:column="35">GetStockObject</name></name><argument_list pos:line="298" pos:column="49">(<argument><expr><name pos:line="298" pos:column="50">DEFAULT_GUI_FONT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="300" pos:column="9">if <condition pos:line="300" pos:column="12">(<expr><name pos:line="300" pos:column="13">_hLargeFont</name> <op:operator pos:line="300" pos:column="25">==</op:operator> <name pos:line="300" pos:column="28">NULL</name></expr>)</condition><then pos:line="300" pos:column="33">
		<expr_stmt><expr><name pos:line="301" pos:column="17">_hLargeFont</name> <op:operator pos:line="301" pos:column="29">=</op:operator> <op:operator pos:line="301" pos:column="31">(</op:operator><name pos:line="301" pos:column="32">HFONT</name><op:operator pos:line="301" pos:column="37">)</op:operator><call><name><op:operator pos:line="301" pos:column="38">::</op:operator><name pos:line="301" pos:column="40">GetStockObject</name></name><argument_list pos:line="301" pos:column="54">(<argument><expr><name pos:line="301" pos:column="55">SYSTEM_FONT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if> 	

	<if pos:line="303" pos:column="9">if <condition pos:line="303" pos:column="12">(<expr><call><name><op:operator pos:line="303" pos:column="13">::</op:operator><name pos:line="303" pos:column="15">GetObject</name></name><argument_list pos:line="303" pos:column="24">(<argument><expr><name pos:line="303" pos:column="25">_hFont</name></expr></argument>, <argument><expr><sizeof pos:line="303" pos:column="33">sizeof<argument_list pos:line="303" pos:column="39">(<argument><expr><name pos:line="303" pos:column="40">LOGFONT</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><op:operator pos:line="303" pos:column="50">&amp;</op:operator><name pos:line="303" pos:column="51">LogFont</name></expr></argument>)</argument_list></call> <op:operator pos:line="303" pos:column="60">!=</op:operator> <lit:literal type="number" pos:line="303" pos:column="63">0</lit:literal></expr>)</condition><then pos:line="303" pos:column="65">
	<block pos:line="304" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="305" pos:column="17">LogFont</name><op:operator pos:line="305" pos:column="24">.</op:operator><name pos:line="305" pos:column="25">lfEscapement</name></name>  <op:operator pos:line="305" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="305" pos:column="41">900</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="306" pos:column="17">LogFont</name><op:operator pos:line="306" pos:column="24">.</op:operator><name pos:line="306" pos:column="25">lfOrientation</name></name> <op:operator pos:line="306" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="306" pos:column="41">900</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="307" pos:column="17">_hVerticalFont</name> <op:operator pos:line="307" pos:column="32">=</op:operator> <call><name pos:line="307" pos:column="34">CreateFontIndirect</name><argument_list pos:line="307" pos:column="52">(<argument><expr><op:operator pos:line="307" pos:column="53">&amp;</op:operator><name pos:line="307" pos:column="54">LogFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
		
		<expr_stmt><expr><name><name pos:line="309" pos:column="17">LogFont</name><op:operator pos:line="309" pos:column="24">.</op:operator><name pos:line="309" pos:column="25">lfWeight</name></name> <op:operator pos:line="309" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="309" pos:column="36">900</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="310" pos:column="17">_hVerticalLargeFont</name> <op:operator pos:line="310" pos:column="37">=</op:operator> <call><name pos:line="310" pos:column="39">CreateFontIndirect</name><argument_list pos:line="310" pos:column="57">(<argument><expr><op:operator pos:line="310" pos:column="58">&amp;</op:operator><name pos:line="310" pos:column="59">LogFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="314" pos:column="1">void</name></type> <name><name pos:line="314" pos:column="6">TabBarPlus</name><op:operator pos:line="314" pos:column="16">::</op:operator><name pos:line="314" pos:column="18">doOwnerDrawTab</name></name><parameter_list pos:line="314" pos:column="32">()</parameter_list> 
<block pos:line="315" pos:column="1">{
	<expr_stmt><expr><call><name><op:operator pos:line="316" pos:column="9">::</op:operator><name pos:line="316" pos:column="11">SendMessage</name></name><argument_list pos:line="316" pos:column="22">(<argument><expr><name><name pos:line="316" pos:column="23">_hwndArray</name><index pos:line="316" pos:column="33">[<expr><lit:literal type="number" pos:line="316" pos:column="34">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="38">TCM_SETPADDING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="316" pos:column="54">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="316" pos:column="57">MAKELPARAM</name><argument_list pos:line="316" pos:column="67">(<argument><expr><lit:literal type="number" pos:line="316" pos:column="68">6</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="316" pos:column="71">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="317" pos:column="9">for (<init><decl><type><name pos:line="317" pos:column="14">int</name></type> <name pos:line="317" pos:column="18">i</name> <init pos:line="317" pos:column="20">= <expr><lit:literal type="number" pos:line="317" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="317" pos:column="26">i</name> <op:operator pos:line="317" pos:column="28">&lt;</op:operator> <name pos:line="317" pos:column="30">_nbCtrl</name></expr> ;</condition> <incr><expr><name pos:line="317" pos:column="40">i</name><op:operator pos:line="317" pos:column="41">++</op:operator></expr></incr>)
	<block pos:line="318" pos:column="9">{
		<if pos:line="319" pos:column="17">if <condition pos:line="319" pos:column="20">(<expr><name><name pos:line="319" pos:column="21">_hwndArray</name><index pos:line="319" pos:column="31">[<expr><name pos:line="319" pos:column="32">i</name></expr>]</index></name></expr>)</condition><then pos:line="319" pos:column="35">
		<block pos:line="320" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="321" pos:column="25">DWORD</name></type> <name pos:line="321" pos:column="31">style</name> <init pos:line="321" pos:column="37">= <expr><call><name><op:operator pos:line="321" pos:column="39">::</op:operator><name pos:line="321" pos:column="41">GetWindowLongPtr</name></name><argument_list pos:line="321" pos:column="57">(<argument><expr><name><name pos:line="321" pos:column="58">_hwndArray</name><index pos:line="321" pos:column="68">[<expr><name pos:line="321" pos:column="69">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="73">GWL_STYLE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="322" pos:column="25">if <condition pos:line="322" pos:column="28">(<expr><call><name pos:line="322" pos:column="29">isOwnerDrawTab</name><argument_list pos:line="322" pos:column="43">()</argument_list></call></expr>)</condition><then pos:line="322" pos:column="46">
				<expr_stmt><expr><name pos:line="323" pos:column="33">style</name> <op:operator pos:line="323" pos:column="39">|=</op:operator> <name pos:line="323" pos:column="42">TCS_OWNERDRAWFIXED</name></expr>;</expr_stmt></then>
			<else pos:line="324" pos:column="25">else
				<expr_stmt><expr><name pos:line="325" pos:column="33">style</name> <op:operator pos:line="325" pos:column="39">&amp;=</op:operator> <op:operator pos:line="325" pos:column="42">~</op:operator><name pos:line="325" pos:column="43">TCS_OWNERDRAWFIXED</name></expr>;</expr_stmt></else></if>

			<expr_stmt><expr><call><name><op:operator pos:line="327" pos:column="25">::</op:operator><name pos:line="327" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="327" pos:column="43">(<argument><expr><name><name pos:line="327" pos:column="44">_hwndArray</name><index pos:line="327" pos:column="54">[<expr><name pos:line="327" pos:column="55">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="59">GWL_STYLE</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="70">style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="328" pos:column="25">::</op:operator><name pos:line="328" pos:column="27">InvalidateRect</name></name><argument_list pos:line="328" pos:column="41">(<argument><expr><name><name pos:line="328" pos:column="42">_hwndArray</name><index pos:line="328" pos:column="52">[<expr><name pos:line="328" pos:column="53">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="57">NULL</name></expr></argument>, <argument><expr><name pos:line="328" pos:column="63">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><specifier pos:line="330" pos:column="25">const</specifier> <name pos:line="330" pos:column="31">int</name></type> <name pos:line="330" pos:column="35">base</name> <init pos:line="330" pos:column="40">= <expr><lit:literal type="number" pos:line="330" pos:column="42">6</lit:literal></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="331" pos:column="25">::</op:operator><name pos:line="331" pos:column="27">SendMessage</name></name><argument_list pos:line="331" pos:column="38">(<argument><expr><name><name pos:line="331" pos:column="39">_hwndArray</name><index pos:line="331" pos:column="49">[<expr><name pos:line="331" pos:column="50">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="331" pos:column="54">TCM_SETPADDING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="331" pos:column="70">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="331" pos:column="73">MAKELPARAM</name><argument_list pos:line="331" pos:column="83">(<argument><expr><name pos:line="331" pos:column="84">_drawTabCloseButton</name><op:operator pos:line="331" pos:column="103">?</op:operator><name pos:line="331" pos:column="104">base</name><op:operator pos:line="331" pos:column="108">+</op:operator><lit:literal type="number" pos:line="331" pos:column="109">3</lit:literal><op:operator pos:line="331" pos:column="110">:</op:operator><name pos:line="331" pos:column="111">base</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="331" pos:column="117">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="336" pos:column="1">void</name></type> <name><name pos:line="336" pos:column="6">TabBarPlus</name><op:operator pos:line="336" pos:column="16">::</op:operator><name pos:line="336" pos:column="18">setColour</name></name><parameter_list pos:line="336" pos:column="27">(<param><decl><type><name pos:line="336" pos:column="28">COLORREF</name></type> <name pos:line="336" pos:column="37">colour2Set</name></decl></param>, <param><decl><type><name pos:line="336" pos:column="49">tabColourIndex</name></type> <name pos:line="336" pos:column="64">i</name></decl></param>)</parameter_list> 
<block pos:line="337" pos:column="1">{
	<switch pos:line="338" pos:column="9">switch <condition pos:line="338" pos:column="16">(<expr><name pos:line="338" pos:column="17">i</name></expr>)</condition>
	<block pos:line="339" pos:column="9">{
		<case pos:line="340" pos:column="17">case <expr><name pos:line="340" pos:column="22">activeText</name></expr>:
			<expr_stmt><expr><name pos:line="341" pos:column="25">_activeTextColour</name> <op:operator pos:line="341" pos:column="43">=</op:operator> <name pos:line="341" pos:column="45">colour2Set</name></expr>;</expr_stmt>
			<break pos:line="342" pos:column="25">break;</break>
		</case><case pos:line="343" pos:column="17">case <expr><name pos:line="343" pos:column="22">activeFocusedTop</name></expr>:
			<expr_stmt><expr><name pos:line="344" pos:column="25">_activeTopBarFocusedColour</name> <op:operator pos:line="344" pos:column="52">=</op:operator> <name pos:line="344" pos:column="54">colour2Set</name></expr>;</expr_stmt>
			<break pos:line="345" pos:column="25">break;</break>
		</case><case pos:line="346" pos:column="17">case <expr><name pos:line="346" pos:column="22">activeUnfocusedTop</name></expr>:
			<expr_stmt><expr><name pos:line="347" pos:column="25">_activeTopBarUnfocusedColour</name> <op:operator pos:line="347" pos:column="54">=</op:operator> <name pos:line="347" pos:column="56">colour2Set</name></expr>;</expr_stmt>
			<break pos:line="348" pos:column="25">break;</break>
		</case><case pos:line="349" pos:column="17">case <expr><name pos:line="349" pos:column="22">inactiveText</name></expr>:
			<expr_stmt><expr><name pos:line="350" pos:column="25">_inactiveTextColour</name> <op:operator pos:line="350" pos:column="45">=</op:operator> <name pos:line="350" pos:column="47">colour2Set</name></expr>;</expr_stmt>
			<break pos:line="351" pos:column="25">break;</break>
		</case><case pos:line="352" pos:column="17">case <expr><name pos:line="352" pos:column="22">inactiveBg</name></expr> :
			<expr_stmt><expr><name pos:line="353" pos:column="25">_inactiveBgColour</name> <op:operator pos:line="353" pos:column="43">=</op:operator> <name pos:line="353" pos:column="45">colour2Set</name></expr>;</expr_stmt>
			<break pos:line="354" pos:column="25">break;</break>
		</case><default pos:line="355" pos:column="17">default :
			<return pos:line="356" pos:column="25">return;</return>
	</default>}</block></switch>
	<expr_stmt><expr><call><name pos:line="358" pos:column="9">doOwnerDrawTab</name><argument_list pos:line="358" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="361" pos:column="1">void</name></type> <name><name pos:line="361" pos:column="6">TabBarPlus</name><op:operator pos:line="361" pos:column="16">::</op:operator><name pos:line="361" pos:column="18">doVertical</name></name><parameter_list pos:line="361" pos:column="28">()</parameter_list>
<block pos:line="362" pos:column="1">{
	<for pos:line="363" pos:column="9">for (<init><decl><type><name pos:line="363" pos:column="14">int</name></type> <name pos:line="363" pos:column="18">i</name> <init pos:line="363" pos:column="20">= <expr><lit:literal type="number" pos:line="363" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="363" pos:column="26">i</name> <op:operator pos:line="363" pos:column="28">&lt;</op:operator> <name pos:line="363" pos:column="30">_nbCtrl</name></expr> ;</condition> <incr><expr><name pos:line="363" pos:column="40">i</name><op:operator pos:line="363" pos:column="41">++</op:operator></expr></incr>)
	<block pos:line="364" pos:column="9">{
		<if pos:line="365" pos:column="17">if <condition pos:line="365" pos:column="20">(<expr><name><name pos:line="365" pos:column="21">_hwndArray</name><index pos:line="365" pos:column="31">[<expr><name pos:line="365" pos:column="32">i</name></expr>]</index></name></expr>)</condition><then pos:line="365" pos:column="35">
			<expr_stmt><expr><call><name pos:line="366" pos:column="25">SendMessage</name><argument_list pos:line="366" pos:column="36">(<argument><expr><name><name pos:line="366" pos:column="37">_hwndArray</name><index pos:line="366" pos:column="47">[<expr><name pos:line="366" pos:column="48">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="366" pos:column="52">WM_TABSETSTYLE</name></expr></argument>, <argument><expr><call><name pos:line="366" pos:column="68">isVertical</name><argument_list pos:line="366" pos:column="78">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="366" pos:column="82">TCS_VERTICAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="370" pos:column="1">void</name></type> <name><name pos:line="370" pos:column="6">TabBarPlus</name><op:operator pos:line="370" pos:column="16">::</op:operator><name pos:line="370" pos:column="18">doMultiLine</name></name><parameter_list pos:line="370" pos:column="29">()</parameter_list>
<block pos:line="371" pos:column="1">{
	<for pos:line="372" pos:column="9">for (<init><decl><type><name pos:line="372" pos:column="14">int</name></type> <name pos:line="372" pos:column="18">i</name> <init pos:line="372" pos:column="20">= <expr><lit:literal type="number" pos:line="372" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="372" pos:column="26">i</name> <op:operator pos:line="372" pos:column="28">&lt;</op:operator> <name pos:line="372" pos:column="30">_nbCtrl</name></expr> ;</condition> <incr><expr><name pos:line="372" pos:column="40">i</name><op:operator pos:line="372" pos:column="41">++</op:operator></expr></incr>)
	<block pos:line="373" pos:column="9">{
		<if pos:line="374" pos:column="17">if <condition pos:line="374" pos:column="20">(<expr><name><name pos:line="374" pos:column="21">_hwndArray</name><index pos:line="374" pos:column="31">[<expr><name pos:line="374" pos:column="32">i</name></expr>]</index></name></expr>)</condition><then pos:line="374" pos:column="35">
			<expr_stmt><expr><call><name pos:line="375" pos:column="25">SendMessage</name><argument_list pos:line="375" pos:column="36">(<argument><expr><name><name pos:line="375" pos:column="37">_hwndArray</name><index pos:line="375" pos:column="47">[<expr><name pos:line="375" pos:column="48">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="375" pos:column="52">WM_TABSETSTYLE</name></expr></argument>, <argument><expr><call><name pos:line="375" pos:column="68">isMultiLine</name><argument_list pos:line="375" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="375" pos:column="83">TCS_MULTILINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="379" pos:column="1">LRESULT</name></type> <name><name pos:line="379" pos:column="9">TabBarPlus</name><op:operator pos:line="379" pos:column="19">::</op:operator><name pos:line="379" pos:column="21">runProc</name></name><parameter_list pos:line="379" pos:column="28">(<param><decl><type><name pos:line="379" pos:column="29">HWND</name></type> <name pos:line="379" pos:column="34">hwnd</name></decl></param>, <param><decl><type><name pos:line="379" pos:column="40">UINT</name></type> <name pos:line="379" pos:column="45">Message</name></decl></param>, <param><decl><type><name pos:line="379" pos:column="54">WPARAM</name></type> <name pos:line="379" pos:column="61">wParam</name></decl></param>, <param><decl><type><name pos:line="379" pos:column="69">LPARAM</name></type> <name pos:line="379" pos:column="76">lParam</name></decl></param>)</parameter_list>
<block pos:line="380" pos:column="1">{
	<switch pos:line="381" pos:column="9">switch <condition pos:line="381" pos:column="16">(<expr><name pos:line="381" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="382" pos:column="9">{
		<comment type="line" pos:line="383" pos:column="17">// Custom window message to change tab control style on the fly</comment>
		<case pos:line="384" pos:column="17">case <expr><name pos:line="384" pos:column="22">WM_TABSETSTYLE</name></expr>:
		<block pos:line="385" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="386" pos:column="25">DWORD</name></type> <name pos:line="386" pos:column="31">style</name></decl>;</decl_stmt>
			<comment type="line" pos:line="387" pos:column="25">//::SendMessage(upDownWnd, UDM_SETBUDDY, NULL, 0);	</comment>
			<expr_stmt><expr><name pos:line="388" pos:column="25">style</name> <op:operator pos:line="388" pos:column="31">=</op:operator> <call><name><op:operator pos:line="388" pos:column="33">::</op:operator><name pos:line="388" pos:column="35">GetWindowLongPtr</name></name><argument_list pos:line="388" pos:column="51">(<argument><expr><name pos:line="388" pos:column="52">hwnd</name></expr></argument>, <argument><expr><name pos:line="388" pos:column="58">GWL_STYLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<if pos:line="390" pos:column="25">if <condition pos:line="390" pos:column="28">(<expr><name pos:line="390" pos:column="29">wParam</name> <op:operator pos:line="390" pos:column="36">&gt;</op:operator> <lit:literal type="number" pos:line="390" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="390" pos:column="40">
				<expr_stmt><expr><name pos:line="391" pos:column="33">style</name> <op:operator pos:line="391" pos:column="39">|=</op:operator> <name pos:line="391" pos:column="42">lParam</name></expr>;</expr_stmt></then>
			<else pos:line="392" pos:column="25">else
				<expr_stmt><expr><name pos:line="393" pos:column="33">style</name> <op:operator pos:line="393" pos:column="39">&amp;=</op:operator> <op:operator pos:line="393" pos:column="42">~</op:operator><name pos:line="393" pos:column="43">lParam</name></expr>;</expr_stmt></else></if>
		
			<expr_stmt><expr><name pos:line="395" pos:column="25">_isVertical</name>  <op:operator pos:line="395" pos:column="38">=</op:operator> <op:operator pos:line="395" pos:column="40">(</op:operator><op:operator pos:line="395" pos:column="41">(</op:operator><name pos:line="395" pos:column="42">style</name> <op:operator pos:line="395" pos:column="48">&amp;</op:operator> <name pos:line="395" pos:column="50">TCS_VERTICAL</name><op:operator pos:line="395" pos:column="62">)</op:operator> <op:operator pos:line="395" pos:column="64">!=</op:operator> <lit:literal type="number" pos:line="395" pos:column="67">0</lit:literal><op:operator pos:line="395" pos:column="68">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="396" pos:column="25">_isMultiLine</name> <op:operator pos:line="396" pos:column="38">=</op:operator> <op:operator pos:line="396" pos:column="40">(</op:operator><op:operator pos:line="396" pos:column="41">(</op:operator><name pos:line="396" pos:column="42">style</name> <op:operator pos:line="396" pos:column="48">&amp;</op:operator> <name pos:line="396" pos:column="50">TCS_MULTILINE</name><op:operator pos:line="396" pos:column="63">)</op:operator> <op:operator pos:line="396" pos:column="65">!=</op:operator> <lit:literal type="number" pos:line="396" pos:column="68">0</lit:literal><op:operator pos:line="396" pos:column="69">)</op:operator></expr>;</expr_stmt>
		
			<expr_stmt><expr><call><name><op:operator pos:line="398" pos:column="25">::</op:operator><name pos:line="398" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="398" pos:column="43">(<argument><expr><name pos:line="398" pos:column="44">hwnd</name></expr></argument>, <argument><expr><name pos:line="398" pos:column="50">GWL_STYLE</name></expr></argument>, <argument><expr><name pos:line="398" pos:column="61">style</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="399" pos:column="25">::</op:operator><name pos:line="399" pos:column="27">InvalidateRect</name></name><argument_list pos:line="399" pos:column="41">(<argument><expr><name pos:line="399" pos:column="42">hwnd</name></expr></argument>, <argument><expr><name pos:line="399" pos:column="48">NULL</name></expr></argument>, <argument><expr><name pos:line="399" pos:column="54">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	

			<return pos:line="401" pos:column="25">return <expr><name pos:line="401" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="404" pos:column="17">case <expr><name pos:line="404" pos:column="22">WM_LBUTTONDOWN</name></expr> :
		<block pos:line="405" pos:column="17">{
			<if pos:line="406" pos:column="25">if <condition pos:line="406" pos:column="28">(<expr><name pos:line="406" pos:column="29">_drawTabCloseButton</name></expr>)</condition><then pos:line="406" pos:column="49">
			<block pos:line="407" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="408" pos:column="33">int</name></type> <name pos:line="408" pos:column="37">xPos</name> <init pos:line="408" pos:column="42">= <expr><call><name pos:line="408" pos:column="44">LOWORD</name><argument_list pos:line="408" pos:column="50">(<argument><expr><name pos:line="408" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="409" pos:column="33">int</name></type> <name pos:line="409" pos:column="37">yPos</name> <init pos:line="409" pos:column="42">= <expr><call><name pos:line="409" pos:column="44">HIWORD</name><argument_list pos:line="409" pos:column="50">(<argument><expr><name pos:line="409" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<if pos:line="411" pos:column="33">if <condition pos:line="411" pos:column="36">(<expr><call><name><name pos:line="411" pos:column="37">_closeButtonZone</name><op:operator pos:line="411" pos:column="53">.</op:operator><name pos:line="411" pos:column="54">isHit</name></name><argument_list pos:line="411" pos:column="59">(<argument><expr><name pos:line="411" pos:column="60">xPos</name></expr></argument>, <argument><expr><name pos:line="411" pos:column="66">yPos</name></expr></argument>, <argument><expr><name pos:line="411" pos:column="72">_currentHoverTabRect</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="411" pos:column="94">
				<block pos:line="412" pos:column="33">{
					<expr_stmt><expr><name pos:line="413" pos:column="41">_whichCloseClickDown</name> <op:operator pos:line="413" pos:column="62">=</op:operator> <call><name pos:line="413" pos:column="64">getTabIndexAt</name><argument_list pos:line="413" pos:column="77">(<argument><expr><name pos:line="413" pos:column="78">xPos</name></expr></argument>, <argument><expr><name pos:line="413" pos:column="84">yPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="414" pos:column="41">::</op:operator><name pos:line="414" pos:column="43">SendMessage</name></name><argument_list pos:line="414" pos:column="54">(<argument><expr><name pos:line="414" pos:column="55">_hParent</name></expr></argument>, <argument><expr><name pos:line="414" pos:column="65">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="414" pos:column="77">IDM_VIEW_REFRESHTABAR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="414" pos:column="100">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="415" pos:column="41">return <expr><name pos:line="415" pos:column="48">TRUE</name></expr>;</return>
				}</block></then></if>
			}</block></then></if>

            <expr_stmt><expr><call><name><op:operator pos:line="419" pos:column="13">::</op:operator><name pos:line="419" pos:column="15">CallWindowProc</name></name><argument_list pos:line="419" pos:column="29">(<argument><expr><name pos:line="419" pos:column="30">_tabBarDefaultProc</name></expr></argument>, <argument><expr><name pos:line="419" pos:column="50">hwnd</name></expr></argument>, <argument><expr><name pos:line="419" pos:column="56">Message</name></expr></argument>, <argument><expr><name pos:line="419" pos:column="65">wParam</name></expr></argument>, <argument><expr><name pos:line="419" pos:column="73">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="420" pos:column="25">int</name></type> <name pos:line="420" pos:column="29">currentTabOn</name> <init pos:line="420" pos:column="42">= <expr><call><name><op:operator pos:line="420" pos:column="44">::</op:operator><name pos:line="420" pos:column="46">SendMessage</name></name><argument_list pos:line="420" pos:column="57">(<argument><expr><name pos:line="420" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><name pos:line="420" pos:column="66">TCM_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="420" pos:column="81">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="420" pos:column="84">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="422" pos:column="25">if <condition pos:line="422" pos:column="28">(<expr><name pos:line="422" pos:column="29">wParam</name> <op:operator pos:line="422" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="422" pos:column="39">2</lit:literal></expr>)</condition><then pos:line="422" pos:column="41">
				<return pos:line="423" pos:column="33">return <expr><name pos:line="423" pos:column="40">TRUE</name></expr>;</return></then></if>

            <if pos:line="425" pos:column="13">if <condition pos:line="425" pos:column="16">(<expr><name pos:line="425" pos:column="17">_doDragNDrop</name></expr>)</condition><then pos:line="425" pos:column="30">
            <block pos:line="426" pos:column="13">{
                <expr_stmt><expr><name pos:line="427" pos:column="17">_nSrcTab</name> <op:operator pos:line="427" pos:column="26">=</op:operator> <name pos:line="427" pos:column="28">_nTabDragged</name> <op:operator pos:line="427" pos:column="41">=</op:operator> <name pos:line="427" pos:column="43">currentTabOn</name></expr>;</expr_stmt>

                <decl_stmt><decl><type><name pos:line="429" pos:column="17">POINT</name></type> <name pos:line="429" pos:column="23">point</name></decl>;</decl_stmt>
			    <expr_stmt><expr><name><name pos:line="430" pos:column="29">point</name><op:operator pos:line="430" pos:column="34">.</op:operator><name pos:line="430" pos:column="35">x</name></name> <op:operator pos:line="430" pos:column="37">=</op:operator> <call><name pos:line="430" pos:column="39">LOWORD</name><argument_list pos:line="430" pos:column="45">(<argument><expr><name pos:line="430" pos:column="46">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			    <expr_stmt><expr><name><name pos:line="431" pos:column="29">point</name><op:operator pos:line="431" pos:column="34">.</op:operator><name pos:line="431" pos:column="35">y</name></name> <op:operator pos:line="431" pos:column="37">=</op:operator> <call><name pos:line="431" pos:column="39">HIWORD</name><argument_list pos:line="431" pos:column="45">(<argument><expr><name pos:line="431" pos:column="46">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="432" pos:column="33">::</op:operator><name pos:line="432" pos:column="35">ClientToScreen</name></name><argument_list pos:line="432" pos:column="49">(<argument><expr><name pos:line="432" pos:column="50">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="432" pos:column="56">&amp;</op:operator><name pos:line="432" pos:column="57">point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			    <if pos:line="433" pos:column="29">if<condition pos:line="433" pos:column="31">(<expr><call><name><op:operator pos:line="433" pos:column="32">::</op:operator><name pos:line="433" pos:column="34">DragDetect</name></name><argument_list pos:line="433" pos:column="44">(<argument><expr><name pos:line="433" pos:column="45">hwnd</name></expr></argument>, <argument><expr><name pos:line="433" pos:column="51">point</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="433" pos:column="58"> 
			    <block pos:line="434" pos:column="29">{
				    <comment type="line" pos:line="435" pos:column="37">// Yes, we're beginning to drag, so capture the mouse...</comment>
				    <expr_stmt><expr><name pos:line="436" pos:column="37">_isDragging</name> <op:operator pos:line="436" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="436" pos:column="51">true</lit:literal></expr>;</expr_stmt>
				    <expr_stmt><expr><call><name><op:operator pos:line="437" pos:column="37">::</op:operator><name pos:line="437" pos:column="39">SetCapture</name></name><argument_list pos:line="437" pos:column="49">(<argument><expr><name pos:line="437" pos:column="50">hwnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			    }</block></then></if>
            }</block></then></if>

			<decl_stmt><decl><type><name pos:line="441" pos:column="25">TBHDR</name></type> <name pos:line="441" pos:column="31">nmhdr</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="442" pos:column="25">nmhdr</name><op:operator pos:line="442" pos:column="30">.</op:operator><name pos:line="442" pos:column="31">hdr</name><op:operator pos:line="442" pos:column="34">.</op:operator><name pos:line="442" pos:column="35">hwndFrom</name></name> <op:operator pos:line="442" pos:column="44">=</op:operator> <name pos:line="442" pos:column="46">_hSelf</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="443" pos:column="25">nmhdr</name><op:operator pos:line="443" pos:column="30">.</op:operator><name pos:line="443" pos:column="31">hdr</name><op:operator pos:line="443" pos:column="34">.</op:operator><name pos:line="443" pos:column="35">code</name></name> <op:operator pos:line="443" pos:column="40">=</op:operator> <name pos:line="443" pos:column="42">NM_CLICK</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="444" pos:column="13">nmhdr</name><op:operator pos:line="444" pos:column="18">.</op:operator><name pos:line="444" pos:column="19">hdr</name><op:operator pos:line="444" pos:column="22">.</op:operator><name pos:line="444" pos:column="23">idFrom</name></name> <op:operator pos:line="444" pos:column="30">=</op:operator> <call><name><name pos:line="444" pos:column="32">reinterpret_cast</name><argument_list pos:line="444" pos:column="48">&lt;<argument><expr><name pos:line="444" pos:column="49">unsigned</name> <name pos:line="444" pos:column="58">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="444" pos:column="62">(<argument><expr><name pos:line="444" pos:column="63">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="445" pos:column="25">nmhdr</name><op:operator pos:line="445" pos:column="30">.</op:operator><name pos:line="445" pos:column="31">tabOrigin</name></name> <op:operator pos:line="445" pos:column="41">=</op:operator> <name pos:line="445" pos:column="43">currentTabOn</name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><op:operator pos:line="447" pos:column="25">::</op:operator><name pos:line="447" pos:column="27">SendMessage</name></name><argument_list pos:line="447" pos:column="38">(<argument><expr><name pos:line="447" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="447" pos:column="49">WM_NOTIFY</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="447" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="447" pos:column="63">reinterpret_cast</name><argument_list pos:line="447" pos:column="79">&lt;<argument><expr><name pos:line="447" pos:column="80">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="447" pos:column="87">(<argument><expr><op:operator pos:line="447" pos:column="88">&amp;</op:operator><name pos:line="447" pos:column="89">nmhdr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:line="449" pos:column="13">return <expr><name pos:line="449" pos:column="20">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="451" pos:column="17">case <expr><name pos:line="451" pos:column="22">WM_RBUTTONDOWN</name></expr> :	<comment type="line" pos:line="451" pos:column="41">//rightclick selects tab aswell</comment>
		<block pos:line="452" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="453" pos:column="25">::</op:operator><name pos:line="453" pos:column="27">CallWindowProc</name></name><argument_list pos:line="453" pos:column="41">(<argument><expr><name pos:line="453" pos:column="42">_tabBarDefaultProc</name></expr></argument>, <argument><expr><name pos:line="453" pos:column="62">hwnd</name></expr></argument>, <argument><expr><name pos:line="453" pos:column="68">WM_LBUTTONDOWN</name></expr></argument>, <argument><expr><name pos:line="453" pos:column="84">wParam</name></expr></argument>, <argument><expr><name pos:line="453" pos:column="92">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="454" pos:column="25">return <expr><name pos:line="454" pos:column="32">TRUE</name></expr>;</return>
		}</block>
<comment type="line" pos:line="456" pos:column="1">//#define NPPM_INTERNAL_ISDRAGGING 40926</comment>
		</case><case pos:line="457" pos:column="17">case <expr><name pos:line="457" pos:column="22">WM_MOUSEMOVE</name></expr> :
		<block pos:line="458" pos:column="17">{
			<if pos:line="459" pos:column="25">if <condition pos:line="459" pos:column="28">(<expr><name pos:line="459" pos:column="29">_isDragging</name></expr>)</condition><then pos:line="459" pos:column="41">
			<block pos:line="460" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="461" pos:column="33">POINT</name></type> <name pos:line="461" pos:column="39">p</name></decl>;</decl_stmt> 
 				<expr_stmt><expr><name><name pos:line="462" pos:column="33">p</name><op:operator pos:line="462" pos:column="34">.</op:operator><name pos:line="462" pos:column="35">x</name></name> <op:operator pos:line="462" pos:column="37">=</op:operator> <call><name pos:line="462" pos:column="39">LOWORD</name><argument_list pos:line="462" pos:column="45">(<argument><expr><name pos:line="462" pos:column="46">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="463" pos:column="33">p</name><op:operator pos:line="463" pos:column="34">.</op:operator><name pos:line="463" pos:column="35">y</name></name> <op:operator pos:line="463" pos:column="37">=</op:operator> <call><name pos:line="463" pos:column="39">HIWORD</name><argument_list pos:line="463" pos:column="45">(<argument><expr><name pos:line="463" pos:column="46">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="464" pos:column="17">exchangeItemData</name><argument_list pos:line="464" pos:column="33">(<argument><expr><name pos:line="464" pos:column="34">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="466" pos:column="33">// Get cursor position of "Screen"</comment>
				<comment type="line" pos:line="467" pos:column="33">// For using the function "WindowFromPoint" afterward!!!</comment>
				<expr_stmt><expr><call><name><op:operator pos:line="468" pos:column="33">::</op:operator><name pos:line="468" pos:column="35">GetCursorPos</name></name><argument_list pos:line="468" pos:column="47">(<argument><expr><op:operator pos:line="468" pos:column="48">&amp;</op:operator><name pos:line="468" pos:column="49">_draggingPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<comment type="block" pos:line="469" pos:column="1">/*
				HWND h = ::WindowFromPoint(_draggingPoint);
				::SetFocus(h);
*/</comment>

				<expr_stmt><expr><call><name pos:line="474" pos:column="33">draggingCursor</name><argument_list pos:line="474" pos:column="47">(<argument><expr><name pos:line="474" pos:column="48">_draggingPoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="475" pos:column="33">//::SendMessage(h, NPPM_INTERNAL_ISDRAGGING, 0, 0);</comment>
			    <return pos:line="476" pos:column="29">return <expr><name pos:line="476" pos:column="36">TRUE</name></expr>;</return>
			}</block></then></if>
			
			<if pos:line="479" pos:column="25">if <condition pos:line="479" pos:column="28">(<expr><name pos:line="479" pos:column="29">_drawTabCloseButton</name></expr>)</condition><then pos:line="479" pos:column="49">
			<block pos:line="480" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="481" pos:column="33">int</name></type> <name pos:line="481" pos:column="37">xPos</name> <init pos:line="481" pos:column="42">= <expr><call><name pos:line="481" pos:column="44">LOWORD</name><argument_list pos:line="481" pos:column="50">(<argument><expr><name pos:line="481" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="482" pos:column="33">int</name></type> <name pos:line="482" pos:column="37">yPos</name> <init pos:line="482" pos:column="42">= <expr><call><name pos:line="482" pos:column="44">HIWORD</name><argument_list pos:line="482" pos:column="50">(<argument><expr><name pos:line="482" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="484" pos:column="33">int</name></type> <name pos:line="484" pos:column="37">index</name> <init pos:line="484" pos:column="43">= <expr><call><name pos:line="484" pos:column="45">getTabIndexAt</name><argument_list pos:line="484" pos:column="58">(<argument><expr><name pos:line="484" pos:column="59">xPos</name></expr></argument>, <argument><expr><name pos:line="484" pos:column="65">yPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<if pos:line="486" pos:column="33">if <condition pos:line="486" pos:column="36">(<expr><name pos:line="486" pos:column="37">index</name> <op:operator pos:line="486" pos:column="43">!=</op:operator> <op:operator pos:line="486" pos:column="46">-</op:operator><lit:literal type="number" pos:line="486" pos:column="47">1</lit:literal></expr>)</condition><then pos:line="486" pos:column="49">
				<block pos:line="487" pos:column="33">{
					<comment type="line" pos:line="488" pos:column="41">// Reduce flicker by only redrawing needed tabs</comment>
					
					<decl_stmt><decl><type><name pos:line="490" pos:column="41">bool</name></type> <name pos:line="490" pos:column="46">oldVal</name> <init pos:line="490" pos:column="53">= <expr><name pos:line="490" pos:column="55">_isCloseHover</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="491" pos:column="41">int</name></type> <name pos:line="491" pos:column="45">oldIndex</name> <init pos:line="491" pos:column="54">= <expr><name pos:line="491" pos:column="56">_currentHoverTabItem</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="492" pos:column="41">RECT</name></type> <name pos:line="492" pos:column="46">oldRect</name></decl>;</decl_stmt>

					<expr_stmt><expr><call><name><op:operator pos:line="494" pos:column="41">::</op:operator><name pos:line="494" pos:column="43">SendMessage</name></name><argument_list pos:line="494" pos:column="54">(<argument><expr><name pos:line="494" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="494" pos:column="63">TCM_GETITEMRECT</name></expr></argument>, <argument><expr><name pos:line="494" pos:column="80">index</name></expr></argument>, <argument><expr><op:operator pos:line="494" pos:column="87">(</op:operator><name pos:line="494" pos:column="88">LPARAM</name><op:operator pos:line="494" pos:column="94">)</op:operator><op:operator pos:line="494" pos:column="95">&amp;</op:operator><name pos:line="494" pos:column="96">_currentHoverTabRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="495" pos:column="41">::</op:operator><name pos:line="495" pos:column="43">SendMessage</name></name><argument_list pos:line="495" pos:column="54">(<argument><expr><name pos:line="495" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="495" pos:column="63">TCM_GETITEMRECT</name></expr></argument>, <argument><expr><name pos:line="495" pos:column="80">oldIndex</name></expr></argument>, <argument><expr><op:operator pos:line="495" pos:column="90">(</op:operator><name pos:line="495" pos:column="91">LPARAM</name><op:operator pos:line="495" pos:column="97">)</op:operator><op:operator pos:line="495" pos:column="98">&amp;</op:operator><name pos:line="495" pos:column="99">oldRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="496" pos:column="41">_currentHoverTabItem</name> <op:operator pos:line="496" pos:column="62">=</op:operator> <name pos:line="496" pos:column="64">index</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="497" pos:column="41">_isCloseHover</name> <op:operator pos:line="497" pos:column="55">=</op:operator> <call><name><name pos:line="497" pos:column="57">_closeButtonZone</name><op:operator pos:line="497" pos:column="73">.</op:operator><name pos:line="497" pos:column="74">isHit</name></name><argument_list pos:line="497" pos:column="79">(<argument><expr><name pos:line="497" pos:column="80">xPos</name></expr></argument>, <argument><expr><name pos:line="497" pos:column="86">yPos</name></expr></argument>, <argument><expr><name pos:line="497" pos:column="92">_currentHoverTabRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<if pos:line="499" pos:column="41">if <condition pos:line="499" pos:column="44">(<expr><name pos:line="499" pos:column="45">oldVal</name> <op:operator pos:line="499" pos:column="52">!=</op:operator> <name pos:line="499" pos:column="55">_isCloseHover</name></expr>)</condition><then pos:line="499" pos:column="69">
					<block pos:line="500" pos:column="41">{
						<expr_stmt><expr><call><name pos:line="501" pos:column="49">InvalidateRect</name><argument_list pos:line="501" pos:column="63">(<argument><expr><name pos:line="501" pos:column="64">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="501" pos:column="70">&amp;</op:operator><name pos:line="501" pos:column="71">oldRect</name></expr></argument>, <argument><expr><name pos:line="501" pos:column="80">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="502" pos:column="49">InvalidateRect</name><argument_list pos:line="502" pos:column="63">(<argument><expr><name pos:line="502" pos:column="64">hwnd</name></expr></argument>, <argument><expr><op:operator pos:line="502" pos:column="70">&amp;</op:operator><name pos:line="502" pos:column="71">_currentHoverTabRect</name></expr></argument>, <argument><expr><name pos:line="502" pos:column="93">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then></if>				
			}</block></then></if>
			<break pos:line="506" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="509" pos:column="17">case <expr><name pos:line="509" pos:column="22">WM_LBUTTONUP</name></expr> :
		<block pos:line="510" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="511" pos:column="25">int</name></type> <name pos:line="511" pos:column="29">xPos</name> <init pos:line="511" pos:column="34">= <expr><call><name pos:line="511" pos:column="36">LOWORD</name><argument_list pos:line="511" pos:column="42">(<argument><expr><name pos:line="511" pos:column="43">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="512" pos:column="25">int</name></type> <name pos:line="512" pos:column="29">yPos</name> <init pos:line="512" pos:column="34">= <expr><call><name pos:line="512" pos:column="36">HIWORD</name><argument_list pos:line="512" pos:column="42">(<argument><expr><name pos:line="512" pos:column="43">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="513" pos:column="25">int</name></type> <name pos:line="513" pos:column="29">currentTabOn</name> <init pos:line="513" pos:column="42">= <expr><call><name pos:line="513" pos:column="44">getTabIndexAt</name><argument_list pos:line="513" pos:column="57">(<argument><expr><name pos:line="513" pos:column="58">xPos</name></expr></argument>, <argument><expr><name pos:line="513" pos:column="64">yPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="514" pos:column="13">if <condition pos:line="514" pos:column="16">(<expr><name pos:line="514" pos:column="17">_isDragging</name></expr>)</condition><then pos:line="514" pos:column="29">
			<block pos:line="515" pos:column="25">{
				<if pos:line="516" pos:column="33">if<condition pos:line="516" pos:column="35">(<expr><call><name><op:operator pos:line="516" pos:column="36">::</op:operator><name pos:line="516" pos:column="38">GetCapture</name></name><argument_list pos:line="516" pos:column="48">()</argument_list></call> <op:operator pos:line="516" pos:column="51">==</op:operator> <name pos:line="516" pos:column="54">_hSelf</name></expr>)</condition><then pos:line="516" pos:column="61">
					<expr_stmt><expr><call><name><op:operator pos:line="517" pos:column="41">::</op:operator><name pos:line="517" pos:column="43">ReleaseCapture</name></name><argument_list pos:line="517" pos:column="57">()</argument_list></call></expr>;</expr_stmt></then></if>

				<comment type="line" pos:line="519" pos:column="33">// Send a notification message to the parent with wParam = 0, lParam = 0</comment>
				<comment type="line" pos:line="520" pos:column="33">// nmhdr.idFrom = this</comment>
				<comment type="line" pos:line="521" pos:column="33">// destIndex = this-&gt;_nSrcTab</comment>
				<comment type="line" pos:line="522" pos:column="33">// scrIndex  = this-&gt;_nTabDragged</comment>
				<decl_stmt><decl><type><name pos:line="523" pos:column="33">TBHDR</name></type> <name pos:line="523" pos:column="39">nmhdr</name></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="524" pos:column="33">nmhdr</name><op:operator pos:line="524" pos:column="38">.</op:operator><name pos:line="524" pos:column="39">hdr</name><op:operator pos:line="524" pos:column="42">.</op:operator><name pos:line="524" pos:column="43">hwndFrom</name></name> <op:operator pos:line="524" pos:column="52">=</op:operator> <name pos:line="524" pos:column="54">_hSelf</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="525" pos:column="33">nmhdr</name><op:operator pos:line="525" pos:column="38">.</op:operator><name pos:line="525" pos:column="39">hdr</name><op:operator pos:line="525" pos:column="42">.</op:operator><name pos:line="525" pos:column="43">code</name></name> <op:operator pos:line="525" pos:column="48">=</op:operator> <name pos:line="525" pos:column="50">_isDraggingInside</name><op:operator pos:line="525" pos:column="67">?</op:operator><name pos:line="525" pos:column="68">TCN_TABDROPPED</name><op:operator pos:line="525" pos:column="82">:</op:operator><name pos:line="525" pos:column="83">TCN_TABDROPPEDOUTSIDE</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="526" pos:column="33">nmhdr</name><op:operator pos:line="526" pos:column="38">.</op:operator><name pos:line="526" pos:column="39">hdr</name><op:operator pos:line="526" pos:column="42">.</op:operator><name pos:line="526" pos:column="43">idFrom</name></name> <op:operator pos:line="526" pos:column="50">=</op:operator> <call><name><name pos:line="526" pos:column="52">reinterpret_cast</name><argument_list pos:line="526" pos:column="68">&lt;<argument><expr><name pos:line="526" pos:column="69">unsigned</name> <name pos:line="526" pos:column="78">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="526" pos:column="82">(<argument><expr><name pos:line="526" pos:column="83">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="527" pos:column="33">nmhdr</name><op:operator pos:line="527" pos:column="38">.</op:operator><name pos:line="527" pos:column="39">tabOrigin</name></name> <op:operator pos:line="527" pos:column="49">=</op:operator> <name pos:line="527" pos:column="51">currentTabOn</name></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><op:operator pos:line="529" pos:column="33">::</op:operator><name pos:line="529" pos:column="35">SendMessage</name></name><argument_list pos:line="529" pos:column="46">(<argument><expr><name pos:line="529" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="529" pos:column="57">WM_NOTIFY</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="529" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="529" pos:column="71">reinterpret_cast</name><argument_list pos:line="529" pos:column="87">&lt;<argument><expr><name pos:line="529" pos:column="88">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="529" pos:column="95">(<argument><expr><op:operator pos:line="529" pos:column="96">&amp;</op:operator><name pos:line="529" pos:column="97">nmhdr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="530" pos:column="33">return <expr><name pos:line="530" pos:column="40">TRUE</name></expr>;</return>				
			}</block></then></if>

			<if pos:line="533" pos:column="25">if <condition pos:line="533" pos:column="28">(<expr><name pos:line="533" pos:column="29">_drawTabCloseButton</name></expr>)</condition><then pos:line="533" pos:column="49">
			<block pos:line="534" pos:column="25">{
				<if pos:line="535" pos:column="33">if <condition pos:line="535" pos:column="36">(<expr><op:operator pos:line="535" pos:column="37">(</op:operator><name pos:line="535" pos:column="38">_whichCloseClickDown</name> <op:operator pos:line="535" pos:column="59">==</op:operator> <name pos:line="535" pos:column="62">currentTabOn</name><op:operator pos:line="535" pos:column="74">)</op:operator> <op:operator pos:line="535" pos:column="76">&amp;&amp;</op:operator> <call><name><name pos:line="535" pos:column="79">_closeButtonZone</name><op:operator pos:line="535" pos:column="95">.</op:operator><name pos:line="535" pos:column="96">isHit</name></name><argument_list pos:line="535" pos:column="101">(<argument><expr><name pos:line="535" pos:column="102">xPos</name></expr></argument>, <argument><expr><name pos:line="535" pos:column="108">yPos</name></expr></argument>, <argument><expr><name pos:line="535" pos:column="114">_currentHoverTabRect</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="535" pos:column="136">
				<block pos:line="536" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="537" pos:column="41">TBHDR</name></type> <name pos:line="537" pos:column="47">nmhdr</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="538" pos:column="41">nmhdr</name><op:operator pos:line="538" pos:column="46">.</op:operator><name pos:line="538" pos:column="47">hdr</name><op:operator pos:line="538" pos:column="50">.</op:operator><name pos:line="538" pos:column="51">hwndFrom</name></name> <op:operator pos:line="538" pos:column="60">=</op:operator> <name pos:line="538" pos:column="62">_hSelf</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="539" pos:column="41">nmhdr</name><op:operator pos:line="539" pos:column="46">.</op:operator><name pos:line="539" pos:column="47">hdr</name><op:operator pos:line="539" pos:column="50">.</op:operator><name pos:line="539" pos:column="51">code</name></name> <op:operator pos:line="539" pos:column="56">=</op:operator> <name pos:line="539" pos:column="58">TCN_TABDELETE</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="540" pos:column="41">nmhdr</name><op:operator pos:line="540" pos:column="46">.</op:operator><name pos:line="540" pos:column="47">hdr</name><op:operator pos:line="540" pos:column="50">.</op:operator><name pos:line="540" pos:column="51">idFrom</name></name> <op:operator pos:line="540" pos:column="58">=</op:operator> <call><name><name pos:line="540" pos:column="60">reinterpret_cast</name><argument_list pos:line="540" pos:column="76">&lt;<argument><expr><name pos:line="540" pos:column="77">unsigned</name> <name pos:line="540" pos:column="86">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="540" pos:column="90">(<argument><expr><name pos:line="540" pos:column="91">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="541" pos:column="41">nmhdr</name><op:operator pos:line="541" pos:column="46">.</op:operator><name pos:line="541" pos:column="47">tabOrigin</name></name> <op:operator pos:line="541" pos:column="57">=</op:operator> <name pos:line="541" pos:column="59">currentTabOn</name></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><op:operator pos:line="543" pos:column="41">::</op:operator><name pos:line="543" pos:column="43">SendMessage</name></name><argument_list pos:line="543" pos:column="54">(<argument><expr><name pos:line="543" pos:column="55">_hParent</name></expr></argument>, <argument><expr><name pos:line="543" pos:column="65">WM_NOTIFY</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="543" pos:column="76">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="543" pos:column="79">reinterpret_cast</name><argument_list pos:line="543" pos:column="95">&lt;<argument><expr><name pos:line="543" pos:column="96">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="543" pos:column="103">(<argument><expr><op:operator pos:line="543" pos:column="104">&amp;</op:operator><name pos:line="543" pos:column="105">nmhdr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><name pos:line="545" pos:column="41">_whichCloseClickDown</name> <op:operator pos:line="545" pos:column="62">=</op:operator> <op:operator pos:line="545" pos:column="64">-</op:operator><lit:literal type="number" pos:line="545" pos:column="65">1</lit:literal></expr>;</expr_stmt>	
					<return pos:line="546" pos:column="41">return <expr><name pos:line="546" pos:column="48">TRUE</name></expr>;</return>
				}</block></then></if>
				<expr_stmt><expr><name pos:line="548" pos:column="33">_whichCloseClickDown</name> <op:operator pos:line="548" pos:column="54">=</op:operator> <op:operator pos:line="548" pos:column="56">-</op:operator><lit:literal type="number" pos:line="548" pos:column="57">1</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<break pos:line="551" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="554" pos:column="17">case <expr><name pos:line="554" pos:column="22">WM_CAPTURECHANGED</name></expr> :
		<block pos:line="555" pos:column="17">{
			<if pos:line="556" pos:column="25">if <condition pos:line="556" pos:column="28">(<expr><name pos:line="556" pos:column="29">_isDragging</name></expr>)</condition><then pos:line="556" pos:column="41">
			<block pos:line="557" pos:column="25">{
				<expr_stmt><expr><name pos:line="558" pos:column="33">_isDragging</name> <op:operator pos:line="558" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="558" pos:column="47">false</lit:literal></expr>;</expr_stmt>
				<return pos:line="559" pos:column="33">return <expr><name pos:line="559" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>
			<break pos:line="561" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="564" pos:column="17">case <expr><name pos:line="564" pos:column="22">WM_DRAWITEM</name></expr> :
		<block pos:line="565" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="566" pos:column="25">drawItem</name><argument_list pos:line="566" pos:column="33">(<argument><expr><op:operator pos:line="566" pos:column="34">(</op:operator><name pos:line="566" pos:column="35">DRAWITEMSTRUCT</name> <op:operator pos:line="566" pos:column="50">*</op:operator><op:operator pos:line="566" pos:column="51">)</op:operator><name pos:line="566" pos:column="52">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="567" pos:column="25">return <expr><name pos:line="567" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="570" pos:column="17">case <expr><name pos:line="570" pos:column="22">WM_KEYDOWN</name></expr> :
		<block pos:line="571" pos:column="17">{
			<if pos:line="572" pos:column="25">if <condition pos:line="572" pos:column="28">(<expr><name pos:line="572" pos:column="29">wParam</name> <op:operator pos:line="572" pos:column="36">==</op:operator> <name pos:line="572" pos:column="39">VK_LCONTROL</name></expr>)</condition><then pos:line="572" pos:column="51">
				<expr_stmt><expr><call><name><op:operator pos:line="573" pos:column="33">::</op:operator><name pos:line="573" pos:column="35">SetCursor</name></name><argument_list pos:line="573" pos:column="44">(<argument><expr><call><name><op:operator pos:line="573" pos:column="45">::</op:operator><name pos:line="573" pos:column="47">LoadCursor</name></name><argument_list pos:line="573" pos:column="57">(<argument><expr><name pos:line="573" pos:column="58">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="573" pos:column="66">MAKEINTRESOURCE</name><argument_list pos:line="573" pos:column="81">(<argument><expr><name pos:line="573" pos:column="82">IDC_DRAG_PLUS_TAB</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<return pos:line="574" pos:column="25">return <expr><name pos:line="574" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="577" pos:column="17">case <expr><name pos:line="577" pos:column="22">WM_MBUTTONUP</name></expr>:
		<block pos:line="578" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="579" pos:column="25">int</name></type> <name pos:line="579" pos:column="29">xPos</name> <init pos:line="579" pos:column="34">= <expr><call><name pos:line="579" pos:column="36">LOWORD</name><argument_list pos:line="579" pos:column="42">(<argument><expr><name pos:line="579" pos:column="43">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="580" pos:column="25">int</name></type> <name pos:line="580" pos:column="29">yPos</name> <init pos:line="580" pos:column="34">= <expr><call><name pos:line="580" pos:column="36">HIWORD</name><argument_list pos:line="580" pos:column="42">(<argument><expr><name pos:line="580" pos:column="43">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="581" pos:column="25">int</name></type> <name pos:line="581" pos:column="29">currentTabOn</name> <init pos:line="581" pos:column="42">= <expr><call><name pos:line="581" pos:column="44">getTabIndexAt</name><argument_list pos:line="581" pos:column="57">(<argument><expr><name pos:line="581" pos:column="58">xPos</name></expr></argument>, <argument><expr><name pos:line="581" pos:column="64">yPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="582" pos:column="25">TBHDR</name></type> <name pos:line="582" pos:column="31">nmhdr</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="583" pos:column="25">nmhdr</name><op:operator pos:line="583" pos:column="30">.</op:operator><name pos:line="583" pos:column="31">hdr</name><op:operator pos:line="583" pos:column="34">.</op:operator><name pos:line="583" pos:column="35">hwndFrom</name></name> <op:operator pos:line="583" pos:column="44">=</op:operator> <name pos:line="583" pos:column="46">_hSelf</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="584" pos:column="25">nmhdr</name><op:operator pos:line="584" pos:column="30">.</op:operator><name pos:line="584" pos:column="31">hdr</name><op:operator pos:line="584" pos:column="34">.</op:operator><name pos:line="584" pos:column="35">code</name></name> <op:operator pos:line="584" pos:column="40">=</op:operator> <name pos:line="584" pos:column="42">TCN_TABDELETE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="585" pos:column="25">nmhdr</name><op:operator pos:line="585" pos:column="30">.</op:operator><name pos:line="585" pos:column="31">hdr</name><op:operator pos:line="585" pos:column="34">.</op:operator><name pos:line="585" pos:column="35">idFrom</name></name> <op:operator pos:line="585" pos:column="42">=</op:operator> <call><name><name pos:line="585" pos:column="44">reinterpret_cast</name><argument_list pos:line="585" pos:column="60">&lt;<argument><expr><name pos:line="585" pos:column="61">unsigned</name> <name pos:line="585" pos:column="70">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="585" pos:column="74">(<argument><expr><name pos:line="585" pos:column="75">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="586" pos:column="25">nmhdr</name><op:operator pos:line="586" pos:column="30">.</op:operator><name pos:line="586" pos:column="31">tabOrigin</name></name> <op:operator pos:line="586" pos:column="41">=</op:operator> <name pos:line="586" pos:column="43">currentTabOn</name></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><op:operator pos:line="588" pos:column="25">::</op:operator><name pos:line="588" pos:column="27">SendMessage</name></name><argument_list pos:line="588" pos:column="38">(<argument><expr><name pos:line="588" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="588" pos:column="49">WM_NOTIFY</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="588" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="588" pos:column="63">reinterpret_cast</name><argument_list pos:line="588" pos:column="79">&lt;<argument><expr><name pos:line="588" pos:column="80">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="588" pos:column="87">(<argument><expr><op:operator pos:line="588" pos:column="88">&amp;</op:operator><name pos:line="588" pos:column="89">nmhdr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="589" pos:column="25">return <expr><name pos:line="589" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="592" pos:column="17">case <expr><name pos:line="592" pos:column="22">WM_LBUTTONDBLCLK</name></expr> :
		<block pos:line="593" pos:column="17">{
			<if pos:line="594" pos:column="25">if <condition pos:line="594" pos:column="28">(<expr><name pos:line="594" pos:column="29">_isDbClk2Close</name></expr>)</condition><then pos:line="594" pos:column="44">
			<block pos:line="595" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="596" pos:column="33">int</name></type> <name pos:line="596" pos:column="37">xPos</name> <init pos:line="596" pos:column="42">= <expr><call><name pos:line="596" pos:column="44">LOWORD</name><argument_list pos:line="596" pos:column="50">(<argument><expr><name pos:line="596" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="597" pos:column="33">int</name></type> <name pos:line="597" pos:column="37">yPos</name> <init pos:line="597" pos:column="42">= <expr><call><name pos:line="597" pos:column="44">HIWORD</name><argument_list pos:line="597" pos:column="50">(<argument><expr><name pos:line="597" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="598" pos:column="33">int</name></type> <name pos:line="598" pos:column="37">currentTabOn</name> <init pos:line="598" pos:column="50">= <expr><call><name pos:line="598" pos:column="52">getTabIndexAt</name><argument_list pos:line="598" pos:column="65">(<argument><expr><name pos:line="598" pos:column="66">xPos</name></expr></argument>, <argument><expr><name pos:line="598" pos:column="72">yPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="599" pos:column="33">TBHDR</name></type> <name pos:line="599" pos:column="39">nmhdr</name></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="600" pos:column="33">nmhdr</name><op:operator pos:line="600" pos:column="38">.</op:operator><name pos:line="600" pos:column="39">hdr</name><op:operator pos:line="600" pos:column="42">.</op:operator><name pos:line="600" pos:column="43">hwndFrom</name></name> <op:operator pos:line="600" pos:column="52">=</op:operator> <name pos:line="600" pos:column="54">_hSelf</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="601" pos:column="33">nmhdr</name><op:operator pos:line="601" pos:column="38">.</op:operator><name pos:line="601" pos:column="39">hdr</name><op:operator pos:line="601" pos:column="42">.</op:operator><name pos:line="601" pos:column="43">code</name></name> <op:operator pos:line="601" pos:column="48">=</op:operator> <name pos:line="601" pos:column="50">TCN_TABDELETE</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="602" pos:column="33">nmhdr</name><op:operator pos:line="602" pos:column="38">.</op:operator><name pos:line="602" pos:column="39">hdr</name><op:operator pos:line="602" pos:column="42">.</op:operator><name pos:line="602" pos:column="43">idFrom</name></name> <op:operator pos:line="602" pos:column="50">=</op:operator> <call><name><name pos:line="602" pos:column="52">reinterpret_cast</name><argument_list pos:line="602" pos:column="68">&lt;<argument><expr><name pos:line="602" pos:column="69">unsigned</name> <name pos:line="602" pos:column="78">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="602" pos:column="82">(<argument><expr><name pos:line="602" pos:column="83">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="603" pos:column="33">nmhdr</name><op:operator pos:line="603" pos:column="38">.</op:operator><name pos:line="603" pos:column="39">tabOrigin</name></name> <op:operator pos:line="603" pos:column="49">=</op:operator> <name pos:line="603" pos:column="51">currentTabOn</name></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><op:operator pos:line="605" pos:column="33">::</op:operator><name pos:line="605" pos:column="35">SendMessage</name></name><argument_list pos:line="605" pos:column="46">(<argument><expr><name pos:line="605" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="605" pos:column="57">WM_NOTIFY</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="605" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="605" pos:column="71">reinterpret_cast</name><argument_list pos:line="605" pos:column="87">&lt;<argument><expr><name pos:line="605" pos:column="88">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="605" pos:column="95">(<argument><expr><op:operator pos:line="605" pos:column="96">&amp;</op:operator><name pos:line="605" pos:column="97">nmhdr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="607" pos:column="25">return <expr><name pos:line="607" pos:column="32">TRUE</name></expr>;</return>
		}</block>
	</case>}</block></switch>
	<return pos:line="610" pos:column="9">return <expr><call><name><op:operator pos:line="610" pos:column="16">::</op:operator><name pos:line="610" pos:column="18">CallWindowProc</name></name><argument_list pos:line="610" pos:column="32">(<argument><expr><name pos:line="610" pos:column="33">_tabBarDefaultProc</name></expr></argument>, <argument><expr><name pos:line="610" pos:column="53">hwnd</name></expr></argument>, <argument><expr><name pos:line="610" pos:column="59">Message</name></expr></argument>, <argument><expr><name pos:line="610" pos:column="68">wParam</name></expr></argument>, <argument><expr><name pos:line="610" pos:column="76">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="613" pos:column="1">void</name></type> <name><name pos:line="613" pos:column="6">TabBarPlus</name><op:operator pos:line="613" pos:column="16">::</op:operator><name pos:line="613" pos:column="18">drawItem</name></name><parameter_list pos:line="613" pos:column="26">(<param><decl><type><name pos:line="613" pos:column="27">DRAWITEMSTRUCT</name> <type:modifier pos:line="613" pos:column="42">*</type:modifier></type><name pos:line="613" pos:column="43">pDrawItemStruct</name></decl></param>)</parameter_list>
<block pos:line="614" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="615" pos:column="9">RECT</name></type> <name pos:line="615" pos:column="14">rect</name> <init pos:line="615" pos:column="19">= <expr><name><name pos:line="615" pos:column="21">pDrawItemStruct</name><op:operator pos:line="615" pos:column="36">-&gt;</op:operator><name pos:line="615" pos:column="38">rcItem</name></name></expr></init></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="617" pos:column="9">int</name></type> <name pos:line="617" pos:column="13">nTab</name> <init pos:line="617" pos:column="18">= <expr><name><name pos:line="617" pos:column="20">pDrawItemStruct</name><op:operator pos:line="617" pos:column="35">-&gt;</op:operator><name pos:line="617" pos:column="37">itemID</name></name></expr></init></decl>;</decl_stmt>
	<if pos:line="618" pos:column="9">if <condition pos:line="618" pos:column="12">(<expr><name pos:line="618" pos:column="13">nTab</name> <op:operator pos:line="618" pos:column="18">&lt;</op:operator> <lit:literal type="number" pos:line="618" pos:column="20">0</lit:literal></expr>)</condition><then pos:line="618" pos:column="22">
	<block pos:line="619" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="620" pos:column="17">::</op:operator><name pos:line="620" pos:column="19">MessageBox</name></name><argument_list pos:line="620" pos:column="29">(<argument><expr><name pos:line="620" pos:column="30">NULL</name></expr></argument>, <argument><expr><call><name pos:line="620" pos:column="36">TEXT</name><argument_list pos:line="620" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="620" pos:column="41">"nTab &lt; 0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="620" pos:column="54">TEXT</name><argument_list pos:line="620" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="620" pos:column="59">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="620" pos:column="64">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="621" pos:column="17">//return ::CallWindowProc(_tabBarDefaultProc, hwnd, Message, wParam, lParam);</comment>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="623" pos:column="9">bool</name></type> <name pos:line="623" pos:column="14">isSelected</name> <init pos:line="623" pos:column="25">= <expr><op:operator pos:line="623" pos:column="27">(</op:operator><name pos:line="623" pos:column="28">nTab</name> <op:operator pos:line="623" pos:column="33">==</op:operator> <call><name><op:operator pos:line="623" pos:column="36">::</op:operator><name pos:line="623" pos:column="38">SendMessage</name></name><argument_list pos:line="623" pos:column="49">(<argument><expr><name pos:line="623" pos:column="50">_hSelf</name></expr></argument>, <argument><expr><name pos:line="623" pos:column="58">TCM_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="623" pos:column="73">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="623" pos:column="76">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="623" pos:column="78">)</op:operator></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="625" pos:column="9">TCHAR</name></type> <name><name pos:line="625" pos:column="15">label</name><index pos:line="625" pos:column="20">[<expr><name pos:line="625" pos:column="21">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="626" pos:column="9">TCITEM</name></type> <name pos:line="626" pos:column="16">tci</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="627" pos:column="9">tci</name><op:operator pos:line="627" pos:column="12">.</op:operator><name pos:line="627" pos:column="13">mask</name></name> <op:operator pos:line="627" pos:column="18">=</op:operator> <name pos:line="627" pos:column="20">TCIF_TEXT</name><op:operator pos:line="627" pos:column="29">|</op:operator><name pos:line="627" pos:column="30">TCIF_IMAGE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="628" pos:column="9">tci</name><op:operator pos:line="628" pos:column="12">.</op:operator><name pos:line="628" pos:column="13">pszText</name></name> <op:operator pos:line="628" pos:column="21">=</op:operator> <name pos:line="628" pos:column="23">label</name></expr>;</expr_stmt>     
	<expr_stmt><expr><name><name pos:line="629" pos:column="9">tci</name><op:operator pos:line="629" pos:column="12">.</op:operator><name pos:line="629" pos:column="13">cchTextMax</name></name> <op:operator pos:line="629" pos:column="24">=</op:operator> <name pos:line="629" pos:column="26">MAX_PATH</name><op:operator pos:line="629" pos:column="34">-</op:operator><lit:literal type="number" pos:line="629" pos:column="35">1</lit:literal></expr>;</expr_stmt>

	<if pos:line="631" pos:column="9">if <condition pos:line="631" pos:column="12">(<expr><op:operator pos:line="631" pos:column="13">!</op:operator><call><name><op:operator pos:line="631" pos:column="14">::</op:operator><name pos:line="631" pos:column="16">SendMessage</name></name><argument_list pos:line="631" pos:column="27">(<argument><expr><name pos:line="631" pos:column="28">_hSelf</name></expr></argument>, <argument><expr><name pos:line="631" pos:column="36">TCM_GETITEM</name></expr></argument>, <argument><expr><name pos:line="631" pos:column="49">nTab</name></expr></argument>, <argument><expr><call><name><name pos:line="631" pos:column="55">reinterpret_cast</name><argument_list pos:line="631" pos:column="71">&lt;<argument><expr><name pos:line="631" pos:column="72">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="631" pos:column="79">(<argument><expr><op:operator pos:line="631" pos:column="80">&amp;</op:operator><name pos:line="631" pos:column="81">tci</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="631" pos:column="87"> 
	<block pos:line="632" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="633" pos:column="17">::</op:operator><name pos:line="633" pos:column="19">MessageBox</name></name><argument_list pos:line="633" pos:column="29">(<argument><expr><name pos:line="633" pos:column="30">NULL</name></expr></argument>, <argument><expr><call><name pos:line="633" pos:column="36">TEXT</name><argument_list pos:line="633" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="633" pos:column="41">"! TCM_GETITEM"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="633" pos:column="59">TEXT</name><argument_list pos:line="633" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="633" pos:column="64">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="633" pos:column="69">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="634" pos:column="17">//return ::CallWindowProc(_tabBarDefaultProc, hwnd, Message, wParam, lParam);</comment>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="636" pos:column="9">HDC</name></type> <name pos:line="636" pos:column="13">hDC</name> <init pos:line="636" pos:column="17">= <expr><name><name pos:line="636" pos:column="19">pDrawItemStruct</name><op:operator pos:line="636" pos:column="34">-&gt;</op:operator><name pos:line="636" pos:column="36">hDC</name></name></expr></init></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="638" pos:column="9">int</name></type> <name pos:line="638" pos:column="13">nSavedDC</name> <init pos:line="638" pos:column="22">= <expr><call><name><op:operator pos:line="638" pos:column="24">::</op:operator><name pos:line="638" pos:column="26">SaveDC</name></name><argument_list pos:line="638" pos:column="32">(<argument><expr><name pos:line="638" pos:column="33">hDC</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="640" pos:column="9">::</op:operator><name pos:line="640" pos:column="11">SetBkMode</name></name><argument_list pos:line="640" pos:column="20">(<argument><expr><name pos:line="640" pos:column="21">hDC</name></expr></argument>, <argument><expr><name pos:line="640" pos:column="26">TRANSPARENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="641" pos:column="9">HBRUSH</name></type> <name pos:line="641" pos:column="16">hBrush</name> <init pos:line="641" pos:column="23">= <expr><call><name><op:operator pos:line="641" pos:column="25">::</op:operator><name pos:line="641" pos:column="27">CreateSolidBrush</name></name><argument_list pos:line="641" pos:column="43">(<argument><expr><call><name><op:operator pos:line="641" pos:column="44">::</op:operator><name pos:line="641" pos:column="46">GetSysColor</name></name><argument_list pos:line="641" pos:column="57">(<argument><expr><name pos:line="641" pos:column="58">COLOR_BTNFACE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="642" pos:column="9">::</op:operator><name pos:line="642" pos:column="11">FillRect</name></name><argument_list pos:line="642" pos:column="19">(<argument><expr><name pos:line="642" pos:column="20">hDC</name></expr></argument>, <argument><expr><op:operator pos:line="642" pos:column="25">&amp;</op:operator><name pos:line="642" pos:column="26">rect</name></expr></argument>, <argument><expr><name pos:line="642" pos:column="32">hBrush</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="643" pos:column="9">::</op:operator><name pos:line="643" pos:column="11">DeleteObject</name></name><argument_list pos:line="643" pos:column="23">(<argument><expr><op:operator pos:line="643" pos:column="24">(</op:operator><name pos:line="643" pos:column="25">HGDIOBJ</name><op:operator pos:line="643" pos:column="32">)</op:operator><name pos:line="643" pos:column="33">hBrush</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="645" pos:column="9">if <condition pos:line="645" pos:column="12">(<expr><name pos:line="645" pos:column="13">isSelected</name></expr>)</condition><then pos:line="645" pos:column="24">
	<block pos:line="646" pos:column="9">{
		<if pos:line="647" pos:column="17">if <condition pos:line="647" pos:column="20">(<expr><name pos:line="647" pos:column="21">_drawTopBar</name></expr>)</condition><then pos:line="647" pos:column="33">
		<block pos:line="648" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="649" pos:column="25">RECT</name></type> <name pos:line="649" pos:column="30">barRect</name> <init pos:line="649" pos:column="38">= <expr><name pos:line="649" pos:column="40">rect</name></expr></init></decl>;</decl_stmt>
			
			<if pos:line="651" pos:column="25">if <condition pos:line="651" pos:column="28">(<expr><name pos:line="651" pos:column="29">_isVertical</name></expr>)</condition><then pos:line="651" pos:column="41">
			<block pos:line="652" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="653" pos:column="33">barRect</name><op:operator pos:line="653" pos:column="40">.</op:operator><name pos:line="653" pos:column="41">right</name></name> <op:operator pos:line="653" pos:column="47">=</op:operator> <name><name pos:line="653" pos:column="49">barRect</name><op:operator pos:line="653" pos:column="56">.</op:operator><name pos:line="653" pos:column="57">left</name></name> <op:operator pos:line="653" pos:column="62">+</op:operator> <lit:literal type="number" pos:line="653" pos:column="64">6</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="654" pos:column="33">rect</name><op:operator pos:line="654" pos:column="37">.</op:operator><name pos:line="654" pos:column="38">left</name></name> <op:operator pos:line="654" pos:column="43">+=</op:operator> <lit:literal type="number" pos:line="654" pos:column="46">2</lit:literal></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="656" pos:column="25">else
			<block pos:line="657" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="658" pos:column="33">barRect</name><op:operator pos:line="658" pos:column="40">.</op:operator><name pos:line="658" pos:column="41">bottom</name></name> <op:operator pos:line="658" pos:column="48">=</op:operator> <name><name pos:line="658" pos:column="50">barRect</name><op:operator pos:line="658" pos:column="57">.</op:operator><name pos:line="658" pos:column="58">top</name></name> <op:operator pos:line="658" pos:column="62">+</op:operator> <lit:literal type="number" pos:line="658" pos:column="64">6</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="659" pos:column="33">rect</name><op:operator pos:line="659" pos:column="37">.</op:operator><name pos:line="659" pos:column="38">top</name></name> <op:operator pos:line="659" pos:column="42">+=</op:operator> <lit:literal type="number" pos:line="659" pos:column="45">2</lit:literal></expr>;</expr_stmt>
			}</block></else></if>

			<if pos:line="662" pos:column="25">if <condition pos:line="662" pos:column="28">(<expr><call><name><op:operator pos:line="662" pos:column="29">::</op:operator><name pos:line="662" pos:column="31">SendMessage</name></name><argument_list pos:line="662" pos:column="42">(<argument><expr><name pos:line="662" pos:column="43">_hParent</name></expr></argument>, <argument><expr><name pos:line="662" pos:column="53">NPPM_INTERNAL_ISFOCUSEDTAB</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="662" pos:column="81">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="662" pos:column="84">(</op:operator><name pos:line="662" pos:column="85">LPARAM</name><op:operator pos:line="662" pos:column="91">)</op:operator><name pos:line="662" pos:column="92">_hSelf</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="662" pos:column="100">
				<expr_stmt><expr><name pos:line="663" pos:column="33">hBrush</name> <op:operator pos:line="663" pos:column="40">=</op:operator> <call><name><op:operator pos:line="663" pos:column="42">::</op:operator><name pos:line="663" pos:column="44">CreateSolidBrush</name></name><argument_list pos:line="663" pos:column="60">(<argument><expr><name pos:line="663" pos:column="61">_activeTopBarFocusedColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then> <comment type="line" pos:line="663" pos:column="90">// #FAAA3C</comment>
			<else pos:line="664" pos:column="25">else
				<expr_stmt><expr><name pos:line="665" pos:column="33">hBrush</name> <op:operator pos:line="665" pos:column="40">=</op:operator> <call><name><op:operator pos:line="665" pos:column="42">::</op:operator><name pos:line="665" pos:column="44">CreateSolidBrush</name></name><argument_list pos:line="665" pos:column="60">(<argument><expr><name pos:line="665" pos:column="61">_activeTopBarUnfocusedColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if> <comment type="line" pos:line="665" pos:column="92">// #FAD296</comment>

			<expr_stmt><expr><call><name><op:operator pos:line="667" pos:column="25">::</op:operator><name pos:line="667" pos:column="27">FillRect</name></name><argument_list pos:line="667" pos:column="35">(<argument><expr><name pos:line="667" pos:column="36">hDC</name></expr></argument>, <argument><expr><op:operator pos:line="667" pos:column="41">&amp;</op:operator><name pos:line="667" pos:column="42">barRect</name></expr></argument>, <argument><expr><name pos:line="667" pos:column="51">hBrush</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="668" pos:column="25">::</op:operator><name pos:line="668" pos:column="27">DeleteObject</name></name><argument_list pos:line="668" pos:column="39">(<argument><expr><op:operator pos:line="668" pos:column="40">(</op:operator><name pos:line="668" pos:column="41">HGDIOBJ</name><op:operator pos:line="668" pos:column="48">)</op:operator><name pos:line="668" pos:column="49">hBrush</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
		}</block></then></if>
	}</block></then>
	<else pos:line="671" pos:column="9">else
	<block pos:line="672" pos:column="9">{
		<if pos:line="673" pos:column="17">if <condition pos:line="673" pos:column="20">(<expr><name pos:line="673" pos:column="21">_drawInactiveTab</name></expr>)</condition><then pos:line="673" pos:column="38">
		<block pos:line="674" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="675" pos:column="25">RECT</name></type> <name pos:line="675" pos:column="30">barRect</name> <init pos:line="675" pos:column="38">= <expr><name pos:line="675" pos:column="40">rect</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><name pos:line="677" pos:column="25">hBrush</name> <op:operator pos:line="677" pos:column="32">=</op:operator> <call><name><op:operator pos:line="677" pos:column="34">::</op:operator><name pos:line="677" pos:column="36">CreateSolidBrush</name></name><argument_list pos:line="677" pos:column="52">(<argument><expr><name pos:line="677" pos:column="53">_inactiveBgColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="678" pos:column="25">::</op:operator><name pos:line="678" pos:column="27">FillRect</name></name><argument_list pos:line="678" pos:column="35">(<argument><expr><name pos:line="678" pos:column="36">hDC</name></expr></argument>, <argument><expr><op:operator pos:line="678" pos:column="41">&amp;</op:operator><name pos:line="678" pos:column="42">barRect</name></expr></argument>, <argument><expr><name pos:line="678" pos:column="51">hBrush</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="679" pos:column="25">::</op:operator><name pos:line="679" pos:column="27">DeleteObject</name></name><argument_list pos:line="679" pos:column="39">(<argument><expr><op:operator pos:line="679" pos:column="40">(</op:operator><name pos:line="679" pos:column="41">HGDIOBJ</name><op:operator pos:line="679" pos:column="48">)</op:operator><name pos:line="679" pos:column="49">hBrush</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></else></if>

	<if pos:line="683" pos:column="9">if <condition pos:line="683" pos:column="12">(<expr><name pos:line="683" pos:column="13">_drawTabCloseButton</name></expr>)</condition><then pos:line="683" pos:column="33">
	<block pos:line="684" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="685" pos:column="17">RECT</name></type> <name pos:line="685" pos:column="22">closeButtonRect</name> <init pos:line="685" pos:column="38">= <expr><call><name><name pos:line="685" pos:column="40">_closeButtonZone</name><op:operator pos:line="685" pos:column="56">.</op:operator><name pos:line="685" pos:column="57">getButtonRectFrom</name></name><argument_list pos:line="685" pos:column="74">(<argument><expr><name pos:line="685" pos:column="75">rect</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="686" pos:column="17">if <condition pos:line="686" pos:column="20">(<expr><name pos:line="686" pos:column="21">isSelected</name></expr>)</condition><then pos:line="686" pos:column="32">
		<block pos:line="687" pos:column="17">{
			<if pos:line="688" pos:column="25">if <condition pos:line="688" pos:column="28">(<expr><op:operator pos:line="688" pos:column="29">!</op:operator><name pos:line="688" pos:column="30">_isVertical</name></expr>)</condition><then pos:line="688" pos:column="42">
			<block pos:line="689" pos:column="25">{
				<comment type="line" pos:line="690" pos:column="33">//closeButtonRect.top  += 2;</comment>
				<expr_stmt><expr><name><name pos:line="691" pos:column="33">closeButtonRect</name><op:operator pos:line="691" pos:column="48">.</op:operator><name pos:line="691" pos:column="49">left</name></name> <op:operator pos:line="691" pos:column="54">-=</op:operator> <lit:literal type="number" pos:line="691" pos:column="57">2</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then>
		<else pos:line="694" pos:column="17">else
		<block pos:line="695" pos:column="17">{
			<if pos:line="696" pos:column="25">if <condition pos:line="696" pos:column="28">(<expr><name pos:line="696" pos:column="29">_isVertical</name></expr>)</condition><then pos:line="696" pos:column="41">
				<expr_stmt><expr><name><name pos:line="697" pos:column="33">closeButtonRect</name><op:operator pos:line="697" pos:column="48">.</op:operator><name pos:line="697" pos:column="49">left</name></name> <op:operator pos:line="697" pos:column="54">+=</op:operator> <lit:literal type="number" pos:line="697" pos:column="57">2</lit:literal></expr>;</expr_stmt></then></if>			
		}</block></else></if>

		
		<comment type="line" pos:line="701" pos:column="17">// 3 status for each inactive tab and selected tab close item :</comment>
		<comment type="line" pos:line="702" pos:column="17">// normal / hover / pushed</comment>
		<decl_stmt><decl><type><name pos:line="703" pos:column="17">int</name></type> <name pos:line="703" pos:column="21">idCloseImg</name></decl>;</decl_stmt>

		<if pos:line="705" pos:column="17">if <condition pos:line="705" pos:column="20">(<expr><name pos:line="705" pos:column="21">_isCloseHover</name> <op:operator pos:line="705" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="705" pos:column="38">(</op:operator><name pos:line="705" pos:column="39">_currentHoverTabItem</name> <op:operator pos:line="705" pos:column="60">==</op:operator> <name pos:line="705" pos:column="63">nTab</name><op:operator pos:line="705" pos:column="67">)</op:operator> <op:operator pos:line="705" pos:column="69">&amp;&amp;</op:operator> <op:operator pos:line="705" pos:column="72">(</op:operator><name pos:line="705" pos:column="73">_whichCloseClickDown</name> <op:operator pos:line="705" pos:column="94">==</op:operator> <op:operator pos:line="705" pos:column="97">-</op:operator><lit:literal type="number" pos:line="705" pos:column="98">1</lit:literal><op:operator pos:line="705" pos:column="99">)</op:operator></expr>)</condition><then pos:line="705" pos:column="101"> <comment type="line" pos:line="705" pos:column="102">// hover</comment>
			<expr_stmt><expr><name pos:line="706" pos:column="25">idCloseImg</name> <op:operator pos:line="706" pos:column="36">=</op:operator> <name pos:line="706" pos:column="38">IDR_CLOSETAB_HOVER</name></expr>;</expr_stmt></then>
		<else pos:line="707" pos:column="17">else <if pos:line="707" pos:column="22">if <condition pos:line="707" pos:column="25">(<expr><name pos:line="707" pos:column="26">_isCloseHover</name> <op:operator pos:line="707" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="707" pos:column="43">(</op:operator><name pos:line="707" pos:column="44">_currentHoverTabItem</name> <op:operator pos:line="707" pos:column="65">==</op:operator> <name pos:line="707" pos:column="68">nTab</name><op:operator pos:line="707" pos:column="72">)</op:operator> <op:operator pos:line="707" pos:column="74">&amp;&amp;</op:operator> <op:operator pos:line="707" pos:column="77">(</op:operator><name pos:line="707" pos:column="78">_whichCloseClickDown</name> <op:operator pos:line="707" pos:column="99">==</op:operator> <name pos:line="707" pos:column="102">_currentHoverTabItem</name><op:operator pos:line="707" pos:column="122">)</op:operator></expr>)</condition><then pos:line="707" pos:column="124"> <comment type="line" pos:line="707" pos:column="125">// pushed</comment>
			<expr_stmt><expr><name pos:line="708" pos:column="25">idCloseImg</name> <op:operator pos:line="708" pos:column="36">=</op:operator> <name pos:line="708" pos:column="38">IDR_CLOSETAB_PUSH</name></expr>;</expr_stmt></then>
		<else pos:line="709" pos:column="17">else
			<expr_stmt><expr><name pos:line="710" pos:column="25">idCloseImg</name> <op:operator pos:line="710" pos:column="36">=</op:operator> <name pos:line="710" pos:column="38">isSelected</name><op:operator pos:line="710" pos:column="48">?</op:operator><name pos:line="710" pos:column="49">IDR_CLOSETAB</name><op:operator pos:line="710" pos:column="61">:</op:operator><name pos:line="710" pos:column="62">IDR_CLOSETAB_INACT</name></expr>;</expr_stmt></else></if></else></if>


		<decl_stmt><decl><type><name pos:line="713" pos:column="17">HDC</name></type> <name pos:line="713" pos:column="21">hdcMemory</name></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="714" pos:column="17">hdcMemory</name> <op:operator pos:line="714" pos:column="27">=</op:operator> <call><name><op:operator pos:line="714" pos:column="29">::</op:operator><name pos:line="714" pos:column="31">CreateCompatibleDC</name></name><argument_list pos:line="714" pos:column="49">(<argument><expr><name pos:line="714" pos:column="50">hDC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="715" pos:column="17">HBITMAP</name></type> <name pos:line="715" pos:column="25">hBmp</name> <init pos:line="715" pos:column="30">= <expr><call><name><op:operator pos:line="715" pos:column="32">::</op:operator><name pos:line="715" pos:column="34">LoadBitmap</name></name><argument_list pos:line="715" pos:column="44">(<argument><expr><name pos:line="715" pos:column="45">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="715" pos:column="53">MAKEINTRESOURCE</name><argument_list pos:line="715" pos:column="68">(<argument><expr><name pos:line="715" pos:column="69">idCloseImg</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="716" pos:column="17">BITMAP</name></type> <name pos:line="716" pos:column="24">bmp</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="717" pos:column="17">::</op:operator><name pos:line="717" pos:column="19">GetObject</name></name><argument_list pos:line="717" pos:column="28">(<argument><expr><name pos:line="717" pos:column="29">hBmp</name></expr></argument>, <argument><expr><sizeof pos:line="717" pos:column="35">sizeof<argument_list pos:line="717" pos:column="41">(<argument><expr><name pos:line="717" pos:column="42">bmp</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><op:operator pos:line="717" pos:column="48">&amp;</op:operator><name pos:line="717" pos:column="49">bmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="719" pos:column="17">if <condition pos:line="719" pos:column="20">(<expr><name pos:line="719" pos:column="21">_isVertical</name></expr>)</condition><then pos:line="719" pos:column="33">
			<expr_stmt><expr><name><name pos:line="720" pos:column="25">rect</name><op:operator pos:line="720" pos:column="29">.</op:operator><name pos:line="720" pos:column="30">top</name></name> <op:operator pos:line="720" pos:column="34">=</op:operator> <name><name pos:line="720" pos:column="36">closeButtonRect</name><op:operator pos:line="720" pos:column="51">.</op:operator><name pos:line="720" pos:column="52">top</name></name> <op:operator pos:line="720" pos:column="56">+</op:operator> <name><name pos:line="720" pos:column="58">bmp</name><op:operator pos:line="720" pos:column="61">.</op:operator><name pos:line="720" pos:column="62">bmHeight</name></name></expr>;</expr_stmt></then>		
		<else pos:line="721" pos:column="17">else
			<expr_stmt><expr><name><name pos:line="722" pos:column="25">rect</name><op:operator pos:line="722" pos:column="29">.</op:operator><name pos:line="722" pos:column="30">right</name></name> <op:operator pos:line="722" pos:column="36">=</op:operator> <name><name pos:line="722" pos:column="38">closeButtonRect</name><op:operator pos:line="722" pos:column="53">.</op:operator><name pos:line="722" pos:column="54">left</name></name></expr>;</expr_stmt></else></if>

		<expr_stmt><expr><call><name><op:operator pos:line="724" pos:column="17">::</op:operator><name pos:line="724" pos:column="19">SelectObject</name></name><argument_list pos:line="724" pos:column="31">(<argument><expr><name pos:line="724" pos:column="32">hdcMemory</name></expr></argument>, <argument><expr><name pos:line="724" pos:column="43">hBmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="725" pos:column="17">::</op:operator><name pos:line="725" pos:column="19">BitBlt</name></name><argument_list pos:line="725" pos:column="25">(<argument><expr><name pos:line="725" pos:column="26">hDC</name></expr></argument>, <argument><expr><name><name pos:line="725" pos:column="31">closeButtonRect</name><op:operator pos:line="725" pos:column="46">.</op:operator><name pos:line="725" pos:column="47">left</name></name></expr></argument>, <argument><expr><name><name pos:line="725" pos:column="53">closeButtonRect</name><op:operator pos:line="725" pos:column="68">.</op:operator><name pos:line="725" pos:column="69">top</name></name></expr></argument>, <argument><expr><name><name pos:line="725" pos:column="74">bmp</name><op:operator pos:line="725" pos:column="77">.</op:operator><name pos:line="725" pos:column="78">bmWidth</name></name></expr></argument>, <argument><expr><name><name pos:line="725" pos:column="87">bmp</name><op:operator pos:line="725" pos:column="90">.</op:operator><name pos:line="725" pos:column="91">bmHeight</name></name></expr></argument>, <argument><expr><name pos:line="725" pos:column="101">hdcMemory</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="725" pos:column="112">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="725" pos:column="115">0</lit:literal></expr></argument>, <argument><expr><name pos:line="725" pos:column="118">SRCCOPY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="726" pos:column="17">::</op:operator><name pos:line="726" pos:column="19">DeleteDC</name></name><argument_list pos:line="726" pos:column="27">(<argument><expr><name pos:line="726" pos:column="28">hdcMemory</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="727" pos:column="17">::</op:operator><name pos:line="727" pos:column="19">DeleteObject</name></name><argument_list pos:line="727" pos:column="31">(<argument><expr><name pos:line="727" pos:column="32">hBmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="730" pos:column="9">// Draw image</comment>
	<decl_stmt><decl><type><name pos:line="731" pos:column="9">HIMAGELIST</name></type> <name pos:line="731" pos:column="20">hImgLst</name> <init pos:line="731" pos:column="28">= <expr><op:operator pos:line="731" pos:column="30">(</op:operator><name pos:line="731" pos:column="31">HIMAGELIST</name><op:operator pos:line="731" pos:column="41">)</op:operator><call><name><op:operator pos:line="731" pos:column="42">::</op:operator><name pos:line="731" pos:column="44">SendMessage</name></name><argument_list pos:line="731" pos:column="55">(<argument><expr><name pos:line="731" pos:column="56">_hSelf</name></expr></argument>, <argument><expr><name pos:line="731" pos:column="64">TCM_GETIMAGELIST</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="731" pos:column="82">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="731" pos:column="85">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="733" pos:column="9">SIZE</name></type> <name pos:line="733" pos:column="14">charPixel</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="734" pos:column="9">::</op:operator><name pos:line="734" pos:column="11">GetTextExtentPoint</name></name><argument_list pos:line="734" pos:column="29">(<argument><expr><name pos:line="734" pos:column="30">hDC</name></expr></argument>, <argument><expr><call><name pos:line="734" pos:column="35">TEXT</name><argument_list pos:line="734" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="734" pos:column="40">" "</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="734" pos:column="46">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="734" pos:column="49">&amp;</op:operator><name pos:line="734" pos:column="50">charPixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="735" pos:column="9">int</name></type> <name pos:line="735" pos:column="13">spaceUnit</name> <init pos:line="735" pos:column="23">= <expr><name><name pos:line="735" pos:column="25">charPixel</name><op:operator pos:line="735" pos:column="34">.</op:operator><name pos:line="735" pos:column="35">cx</name></name></expr></init></decl>;</decl_stmt>

	<if pos:line="737" pos:column="9">if <condition pos:line="737" pos:column="12">(<expr><name pos:line="737" pos:column="13">hImgLst</name> <op:operator pos:line="737" pos:column="21">&amp;&amp;</op:operator> <name><name pos:line="737" pos:column="24">tci</name><op:operator pos:line="737" pos:column="27">.</op:operator><name pos:line="737" pos:column="28">iImage</name></name> <op:operator pos:line="737" pos:column="35">&gt;=</op:operator> <lit:literal type="number" pos:line="737" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="737" pos:column="40">
	<block pos:line="738" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="739" pos:column="17">IMAGEINFO</name></type> <name pos:line="739" pos:column="27">info</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="740" pos:column="17">int</name></type> <name pos:line="740" pos:column="21">yPos</name> <init pos:line="740" pos:column="26">= <expr><lit:literal type="number" pos:line="740" pos:column="28">0</lit:literal></expr></init><op:operator pos:line="740" pos:column="29">,</op:operator> <name pos:line="740" pos:column="31">xPos</name> <init pos:line="740" pos:column="36">= <expr><lit:literal type="number" pos:line="740" pos:column="38">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="741" pos:column="17">int</name></type> <name pos:line="741" pos:column="21">marge</name> <init pos:line="741" pos:column="27">= <expr><lit:literal type="number" pos:line="741" pos:column="29">0</lit:literal></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name pos:line="743" pos:column="17">ImageList_GetImageInfo</name><argument_list pos:line="743" pos:column="39">(<argument><expr><name pos:line="743" pos:column="40">hImgLst</name></expr></argument>, <argument><expr><name><name pos:line="743" pos:column="49">tci</name><op:operator pos:line="743" pos:column="52">.</op:operator><name pos:line="743" pos:column="53">iImage</name></name></expr></argument>, <argument><expr><op:operator pos:line="743" pos:column="61">&amp;</op:operator><name pos:line="743" pos:column="62">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="745" pos:column="17">RECT</name> <type:modifier pos:line="745" pos:column="22">&amp;</type:modifier></type> <name pos:line="745" pos:column="24">imageRect</name> <init pos:line="745" pos:column="34">= <expr><name><name pos:line="745" pos:column="36">info</name><op:operator pos:line="745" pos:column="40">.</op:operator><name pos:line="745" pos:column="41">rcImage</name></name></expr></init></decl>;</decl_stmt>
		
		<if pos:line="747" pos:column="17">if <condition pos:line="747" pos:column="20">(<expr><name pos:line="747" pos:column="21">_isVertical</name></expr>)</condition><then pos:line="747" pos:column="33">
			<expr_stmt><expr><name pos:line="748" pos:column="25">xPos</name> <op:operator pos:line="748" pos:column="30">=</op:operator> <op:operator pos:line="748" pos:column="32">(</op:operator><name><name pos:line="748" pos:column="33">rect</name><op:operator pos:line="748" pos:column="37">.</op:operator><name pos:line="748" pos:column="38">left</name></name> <op:operator pos:line="748" pos:column="43">+</op:operator> <op:operator pos:line="748" pos:column="45">(</op:operator><name><name pos:line="748" pos:column="46">rect</name><op:operator pos:line="748" pos:column="50">.</op:operator><name pos:line="748" pos:column="51">right</name></name> <op:operator pos:line="748" pos:column="57">-</op:operator> <name><name pos:line="748" pos:column="59">rect</name><op:operator pos:line="748" pos:column="63">.</op:operator><name pos:line="748" pos:column="64">left</name></name><op:operator pos:line="748" pos:column="68">)</op:operator><op:operator pos:line="748" pos:column="69">/</op:operator><lit:literal type="number" pos:line="748" pos:column="70">2</lit:literal> <op:operator pos:line="748" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="748" pos:column="74">2</lit:literal><op:operator pos:line="748" pos:column="75">)</op:operator> <op:operator pos:line="748" pos:column="77">-</op:operator> <op:operator pos:line="748" pos:column="79">(</op:operator><name><name pos:line="748" pos:column="80">imageRect</name><op:operator pos:line="748" pos:column="89">.</op:operator><name pos:line="748" pos:column="90">right</name></name> <op:operator pos:line="748" pos:column="96">-</op:operator> <name><name pos:line="748" pos:column="98">imageRect</name><op:operator pos:line="748" pos:column="107">.</op:operator><name pos:line="748" pos:column="108">left</name></name><op:operator pos:line="748" pos:column="112">)</op:operator><op:operator pos:line="748" pos:column="113">/</op:operator><lit:literal type="number" pos:line="748" pos:column="114">2</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="749" pos:column="17">else
			<expr_stmt><expr><name pos:line="750" pos:column="25">yPos</name> <op:operator pos:line="750" pos:column="30">=</op:operator> <op:operator pos:line="750" pos:column="32">(</op:operator><name><name pos:line="750" pos:column="33">rect</name><op:operator pos:line="750" pos:column="37">.</op:operator><name pos:line="750" pos:column="38">top</name></name> <op:operator pos:line="750" pos:column="42">+</op:operator> <op:operator pos:line="750" pos:column="44">(</op:operator><name><name pos:line="750" pos:column="45">rect</name><op:operator pos:line="750" pos:column="49">.</op:operator><name pos:line="750" pos:column="50">bottom</name></name> <op:operator pos:line="750" pos:column="57">-</op:operator> <name><name pos:line="750" pos:column="59">rect</name><op:operator pos:line="750" pos:column="63">.</op:operator><name pos:line="750" pos:column="64">top</name></name><op:operator pos:line="750" pos:column="67">)</op:operator><op:operator pos:line="750" pos:column="68">/</op:operator><lit:literal type="number" pos:line="750" pos:column="69">2</lit:literal> <op:operator pos:line="750" pos:column="71">+</op:operator> <op:operator pos:line="750" pos:column="73">(</op:operator><name pos:line="750" pos:column="74">isSelected</name><op:operator pos:line="750" pos:column="84">?</op:operator><lit:literal type="number" pos:line="750" pos:column="85">0</lit:literal><op:operator pos:line="750" pos:column="86">:</op:operator><lit:literal type="number" pos:line="750" pos:column="87">2</lit:literal><op:operator pos:line="750" pos:column="88">)</op:operator><op:operator pos:line="750" pos:column="89">)</op:operator> <op:operator pos:line="750" pos:column="91">-</op:operator> <op:operator pos:line="750" pos:column="93">(</op:operator><name><name pos:line="750" pos:column="94">imageRect</name><op:operator pos:line="750" pos:column="103">.</op:operator><name pos:line="750" pos:column="104">bottom</name></name> <op:operator pos:line="750" pos:column="111">-</op:operator> <name><name pos:line="750" pos:column="113">imageRect</name><op:operator pos:line="750" pos:column="122">.</op:operator><name pos:line="750" pos:column="123">top</name></name><op:operator pos:line="750" pos:column="126">)</op:operator><op:operator pos:line="750" pos:column="127">/</op:operator><lit:literal type="number" pos:line="750" pos:column="128">2</lit:literal></expr>;</expr_stmt></else></if>

		<if pos:line="752" pos:column="17">if <condition pos:line="752" pos:column="20">(<expr><name pos:line="752" pos:column="21">isSelected</name></expr>)</condition><then pos:line="752" pos:column="32">
			<expr_stmt><expr><name pos:line="753" pos:column="25">marge</name> <op:operator pos:line="753" pos:column="31">=</op:operator> <name pos:line="753" pos:column="33">spaceUnit</name><op:operator pos:line="753" pos:column="42">*</op:operator><lit:literal type="number" pos:line="753" pos:column="43">2</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="754" pos:column="17">else
			<expr_stmt><expr><name pos:line="755" pos:column="25">marge</name> <op:operator pos:line="755" pos:column="31">=</op:operator> <name pos:line="755" pos:column="33">spaceUnit</name></expr>;</expr_stmt></else></if>

		<if pos:line="757" pos:column="17">if <condition pos:line="757" pos:column="20">(<expr><name pos:line="757" pos:column="21">_isVertical</name></expr>)</condition><then pos:line="757" pos:column="33">
		<block pos:line="758" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="759" pos:column="25">rect</name><op:operator pos:line="759" pos:column="29">.</op:operator><name pos:line="759" pos:column="30">bottom</name></name> <op:operator pos:line="759" pos:column="37">-=</op:operator> <name><name pos:line="759" pos:column="40">imageRect</name><op:operator pos:line="759" pos:column="49">.</op:operator><name pos:line="759" pos:column="50">bottom</name></name> <op:operator pos:line="759" pos:column="57">-</op:operator> <name><name pos:line="759" pos:column="59">imageRect</name><op:operator pos:line="759" pos:column="68">.</op:operator><name pos:line="759" pos:column="69">top</name></name></expr>;</expr_stmt>			
			<expr_stmt><expr><call><name pos:line="760" pos:column="25">ImageList_Draw</name><argument_list pos:line="760" pos:column="39">(<argument><expr><name pos:line="760" pos:column="40">hImgLst</name></expr></argument>, <argument><expr><name><name pos:line="760" pos:column="49">tci</name><op:operator pos:line="760" pos:column="52">.</op:operator><name pos:line="760" pos:column="53">iImage</name></name></expr></argument>, <argument><expr><name pos:line="760" pos:column="61">hDC</name></expr></argument>, <argument><expr><name pos:line="760" pos:column="66">xPos</name></expr></argument>, <argument><expr><name><name pos:line="760" pos:column="72">rect</name><op:operator pos:line="760" pos:column="76">.</op:operator><name pos:line="760" pos:column="77">bottom</name></name> <op:operator pos:line="760" pos:column="84">-</op:operator> <name pos:line="760" pos:column="86">marge</name></expr></argument>, <argument><expr><name pos:line="760" pos:column="93">isSelected</name><op:operator pos:line="760" pos:column="103">?</op:operator><name pos:line="760" pos:column="104">ILD_TRANSPARENT</name><op:operator pos:line="760" pos:column="119">:</op:operator><name pos:line="760" pos:column="120">ILD_SELECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="761" pos:column="25">rect</name><op:operator pos:line="761" pos:column="29">.</op:operator><name pos:line="761" pos:column="30">bottom</name></name> <op:operator pos:line="761" pos:column="37">+=</op:operator> <name pos:line="761" pos:column="40">marge</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="763" pos:column="17">else
		<block pos:line="764" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="765" pos:column="25">rect</name><op:operator pos:line="765" pos:column="29">.</op:operator><name pos:line="765" pos:column="30">left</name></name> <op:operator pos:line="765" pos:column="35">+=</op:operator> <name pos:line="765" pos:column="38">marge</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="766" pos:column="25">ImageList_Draw</name><argument_list pos:line="766" pos:column="39">(<argument><expr><name pos:line="766" pos:column="40">hImgLst</name></expr></argument>, <argument><expr><name><name pos:line="766" pos:column="49">tci</name><op:operator pos:line="766" pos:column="52">.</op:operator><name pos:line="766" pos:column="53">iImage</name></name></expr></argument>, <argument><expr><name pos:line="766" pos:column="61">hDC</name></expr></argument>, <argument><expr><name><name pos:line="766" pos:column="66">rect</name><op:operator pos:line="766" pos:column="70">.</op:operator><name pos:line="766" pos:column="71">left</name></name></expr></argument>, <argument><expr><name pos:line="766" pos:column="77">yPos</name></expr></argument>, <argument><expr><name pos:line="766" pos:column="83">isSelected</name><op:operator pos:line="766" pos:column="93">?</op:operator><name pos:line="766" pos:column="94">ILD_TRANSPARENT</name><op:operator pos:line="766" pos:column="109">:</op:operator><name pos:line="766" pos:column="110">ILD_SELECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="767" pos:column="25">rect</name><op:operator pos:line="767" pos:column="29">.</op:operator><name pos:line="767" pos:column="30">left</name></name> <op:operator pos:line="767" pos:column="35">+=</op:operator> <name><name pos:line="767" pos:column="38">imageRect</name><op:operator pos:line="767" pos:column="47">.</op:operator><name pos:line="767" pos:column="48">right</name></name> <op:operator pos:line="767" pos:column="54">-</op:operator> <name><name pos:line="767" pos:column="56">imageRect</name><op:operator pos:line="767" pos:column="65">.</op:operator><name pos:line="767" pos:column="66">left</name></name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="771" pos:column="9">bool</name></type> <name pos:line="771" pos:column="14">isStandardSize</name> <init pos:line="771" pos:column="29">= <expr><op:operator pos:line="771" pos:column="31">(</op:operator><call><name><op:operator pos:line="771" pos:column="32">::</op:operator><name pos:line="771" pos:column="34">SendMessage</name></name><argument_list pos:line="771" pos:column="45">(<argument><expr><name pos:line="771" pos:column="46">_hParent</name></expr></argument>, <argument><expr><name pos:line="771" pos:column="56">NPPM_INTERNAL_ISTABBARREDUCED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="771" pos:column="87">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="771" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="771" pos:column="93">==</op:operator> <name pos:line="771" pos:column="96">TRUE</name><op:operator pos:line="771" pos:column="100">)</op:operator></expr></init></decl>;</decl_stmt>

	<if pos:line="773" pos:column="9">if <condition pos:line="773" pos:column="12">(<expr><name pos:line="773" pos:column="13">isStandardSize</name></expr>)</condition><then pos:line="773" pos:column="28">
	<block pos:line="774" pos:column="9">{
		<if pos:line="775" pos:column="17">if <condition pos:line="775" pos:column="20">(<expr><name pos:line="775" pos:column="21">_isVertical</name></expr>)</condition><then pos:line="775" pos:column="33">
			<expr_stmt><expr><call><name pos:line="776" pos:column="25">SelectObject</name><argument_list pos:line="776" pos:column="37">(<argument><expr><name pos:line="776" pos:column="38">hDC</name></expr></argument>, <argument><expr><name pos:line="776" pos:column="43">_hVerticalFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="777" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="778" pos:column="25">SelectObject</name><argument_list pos:line="778" pos:column="37">(<argument><expr><name pos:line="778" pos:column="38">hDC</name></expr></argument>, <argument><expr><name pos:line="778" pos:column="43">_hFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></then>
	<else pos:line="780" pos:column="9">else
	<block pos:line="781" pos:column="9">{
		<if pos:line="782" pos:column="17">if <condition pos:line="782" pos:column="20">(<expr><name pos:line="782" pos:column="21">_isVertical</name></expr>)</condition><then pos:line="782" pos:column="33">
			<expr_stmt><expr><call><name pos:line="783" pos:column="25">SelectObject</name><argument_list pos:line="783" pos:column="37">(<argument><expr><name pos:line="783" pos:column="38">hDC</name></expr></argument>, <argument><expr><name pos:line="783" pos:column="43">_hVerticalLargeFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="784" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="785" pos:column="25">SelectObject</name><argument_list pos:line="785" pos:column="37">(<argument><expr><name pos:line="785" pos:column="38">hDC</name></expr></argument>, <argument><expr><name pos:line="785" pos:column="43">_hLargeFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></else></if>

	<decl_stmt><decl><type><name pos:line="788" pos:column="9">int</name></type> <name pos:line="788" pos:column="13">Flags</name> <init pos:line="788" pos:column="19">= <expr><name pos:line="788" pos:column="21">DT_SINGLELINE</name></expr></init></decl>;</decl_stmt>

	<if pos:line="790" pos:column="9">if <condition pos:line="790" pos:column="12">(<expr><name pos:line="790" pos:column="13">_drawTabCloseButton</name></expr>)</condition><then pos:line="790" pos:column="33">
	<block pos:line="791" pos:column="9">{
		<expr_stmt><expr><name pos:line="792" pos:column="17">Flags</name> <op:operator pos:line="792" pos:column="23">|=</op:operator> <name pos:line="792" pos:column="26">DT_LEFT</name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="794" pos:column="9">else
	<block pos:line="795" pos:column="9">{
		<if pos:line="796" pos:column="17">if <condition pos:line="796" pos:column="20">(<expr><op:operator pos:line="796" pos:column="21">!</op:operator><name pos:line="796" pos:column="22">_isVertical</name></expr>)</condition><then pos:line="796" pos:column="34">
			<expr_stmt><expr><name pos:line="797" pos:column="25">Flags</name> <op:operator pos:line="797" pos:column="31">|=</op:operator> <name pos:line="797" pos:column="34">DT_CENTER</name></expr>;</expr_stmt></then></if>
	}</block></else></if>
		
	<comment type="line" pos:line="800" pos:column="9">// the following uses pixel values the fix alignments issues with DrawText </comment>
	<comment type="line" pos:line="801" pos:column="9">// and font's that are rotated 90 degrees</comment>
	<if pos:line="802" pos:column="9">if <condition pos:line="802" pos:column="12">(<expr><name pos:line="802" pos:column="13">isSelected</name></expr>)</condition><then pos:line="802" pos:column="24"> 
	<block pos:line="803" pos:column="9">{
		<comment type="line" pos:line="804" pos:column="17">//COLORREF selectedColor = RGB(0, 0, 255);</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="805" pos:column="17">::</op:operator><name pos:line="805" pos:column="19">SetTextColor</name></name><argument_list pos:line="805" pos:column="31">(<argument><expr><name pos:line="805" pos:column="32">hDC</name></expr></argument>, <argument><expr><name pos:line="805" pos:column="37">_activeTextColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="807" pos:column="17">if <condition pos:line="807" pos:column="20">(<expr><name pos:line="807" pos:column="21">_isVertical</name></expr>)</condition><then pos:line="807" pos:column="33">
		<block pos:line="808" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="809" pos:column="25">rect</name><op:operator pos:line="809" pos:column="29">.</op:operator><name pos:line="809" pos:column="30">bottom</name></name> <op:operator pos:line="809" pos:column="37">-=</op:operator> <lit:literal type="number" pos:line="809" pos:column="40">2</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="810" pos:column="25">rect</name><op:operator pos:line="810" pos:column="29">.</op:operator><name pos:line="810" pos:column="30">left</name></name>   <op:operator pos:line="810" pos:column="37">+=</op:operator> <call><name><op:operator pos:line="810" pos:column="40">::</op:operator><name pos:line="810" pos:column="42">GetSystemMetrics</name></name><argument_list pos:line="810" pos:column="58">(<argument><expr><name pos:line="810" pos:column="59">SM_CXEDGE</name></expr></argument>)</argument_list></call> <op:operator pos:line="810" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="810" pos:column="72">4</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="811" pos:column="25">rect</name><op:operator pos:line="811" pos:column="29">.</op:operator><name pos:line="811" pos:column="30">top</name></name>    <op:operator pos:line="811" pos:column="37">+=</op:operator> <op:operator pos:line="811" pos:column="40">(</op:operator><name pos:line="811" pos:column="41">_drawTabCloseButton</name><op:operator pos:line="811" pos:column="60">)</op:operator><op:operator pos:line="811" pos:column="61">?</op:operator><name pos:line="811" pos:column="62">spaceUnit</name><op:operator pos:line="811" pos:column="71">:</op:operator><lit:literal type="number" pos:line="811" pos:column="72">0</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="813" pos:column="25">Flags</name> <op:operator pos:line="813" pos:column="31">|=</op:operator> <name pos:line="813" pos:column="34">DT_BOTTOM</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="815" pos:column="17">else
		<block pos:line="816" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="817" pos:column="25">rect</name><op:operator pos:line="817" pos:column="29">.</op:operator><name pos:line="817" pos:column="30">top</name></name> <op:operator pos:line="817" pos:column="34">-=</op:operator> <call><name><op:operator pos:line="817" pos:column="37">::</op:operator><name pos:line="817" pos:column="39">GetSystemMetrics</name></name><argument_list pos:line="817" pos:column="55">(<argument><expr><name pos:line="817" pos:column="56">SM_CYEDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="818" pos:column="25">rect</name><op:operator pos:line="818" pos:column="29">.</op:operator><name pos:line="818" pos:column="30">top</name></name> <op:operator pos:line="818" pos:column="34">+=</op:operator> <lit:literal type="number" pos:line="818" pos:column="37">3</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="819" pos:column="25">rect</name><op:operator pos:line="819" pos:column="29">.</op:operator><name pos:line="819" pos:column="30">left</name></name> <op:operator pos:line="819" pos:column="35">+=</op:operator> <name pos:line="819" pos:column="38">_drawTabCloseButton</name><op:operator pos:line="819" pos:column="57">?</op:operator><name pos:line="819" pos:column="58">spaceUnit</name><op:operator pos:line="819" pos:column="67">:</op:operator><lit:literal type="number" pos:line="819" pos:column="68">0</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="821" pos:column="25">Flags</name> <op:operator pos:line="821" pos:column="31">|=</op:operator> <name pos:line="821" pos:column="34">DT_VCENTER</name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then> 
	<else pos:line="824" pos:column="9">else 
	<block pos:line="825" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="826" pos:column="17">::</op:operator><name pos:line="826" pos:column="19">SetTextColor</name></name><argument_list pos:line="826" pos:column="31">(<argument><expr><name pos:line="826" pos:column="32">hDC</name></expr></argument>, <argument><expr><name pos:line="826" pos:column="37">_inactiveTextColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="827" pos:column="17">if <condition pos:line="827" pos:column="20">(<expr><name pos:line="827" pos:column="21">_isVertical</name></expr>)</condition><then pos:line="827" pos:column="33">
		<block pos:line="828" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="829" pos:column="25">rect</name><op:operator pos:line="829" pos:column="29">.</op:operator><name pos:line="829" pos:column="30">top</name></name>	<op:operator pos:line="829" pos:column="41">+=</op:operator> <lit:literal type="number" pos:line="829" pos:column="44">2</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="830" pos:column="25">rect</name><op:operator pos:line="830" pos:column="29">.</op:operator><name pos:line="830" pos:column="30">bottom</name></name> <op:operator pos:line="830" pos:column="37">+=</op:operator> <lit:literal type="number" pos:line="830" pos:column="40">4</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="831" pos:column="25">rect</name><op:operator pos:line="831" pos:column="29">.</op:operator><name pos:line="831" pos:column="30">left</name></name>   <op:operator pos:line="831" pos:column="37">+=</op:operator> <call><name><op:operator pos:line="831" pos:column="40">::</op:operator><name pos:line="831" pos:column="42">GetSystemMetrics</name></name><argument_list pos:line="831" pos:column="58">(<argument><expr><name pos:line="831" pos:column="59">SM_CXEDGE</name></expr></argument>)</argument_list></call> <op:operator pos:line="831" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="831" pos:column="72">2</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="833" pos:column="17">else
		<block pos:line="834" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="835" pos:column="25">rect</name><op:operator pos:line="835" pos:column="29">.</op:operator><name pos:line="835" pos:column="30">left</name></name>   <op:operator pos:line="835" pos:column="37">+=</op:operator> <op:operator pos:line="835" pos:column="40">(</op:operator><name pos:line="835" pos:column="41">_drawTabCloseButton</name><op:operator pos:line="835" pos:column="60">)</op:operator><op:operator pos:line="835" pos:column="61">?</op:operator><name pos:line="835" pos:column="62">spaceUnit</name><op:operator pos:line="835" pos:column="71">:</op:operator><lit:literal type="number" pos:line="835" pos:column="72">0</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
			
		<expr_stmt><expr><name pos:line="838" pos:column="17">Flags</name> <op:operator pos:line="838" pos:column="23">|=</op:operator> <name pos:line="838" pos:column="26">DT_BOTTOM</name></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><op:operator pos:line="840" pos:column="9">::</op:operator><name pos:line="840" pos:column="11">DrawText</name></name><argument_list pos:line="840" pos:column="19">(<argument><expr><name pos:line="840" pos:column="20">hDC</name></expr></argument>, <argument><expr><name pos:line="840" pos:column="25">label</name></expr></argument>, <argument><expr><call><name pos:line="840" pos:column="32">lstrlen</name><argument_list pos:line="840" pos:column="39">(<argument><expr><name pos:line="840" pos:column="40">label</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="840" pos:column="48">&amp;</op:operator><name pos:line="840" pos:column="49">rect</name></expr></argument>, <argument><expr><name pos:line="840" pos:column="55">Flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="841" pos:column="9">::</op:operator><name pos:line="841" pos:column="11">RestoreDC</name></name><argument_list pos:line="841" pos:column="20">(<argument><expr><name pos:line="841" pos:column="21">hDC</name></expr></argument>, <argument><expr><name pos:line="841" pos:column="26">nSavedDC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="845" pos:column="1">void</name></type> <name><name pos:line="845" pos:column="6">TabBarPlus</name><op:operator pos:line="845" pos:column="16">::</op:operator><name pos:line="845" pos:column="18">draggingCursor</name></name><parameter_list pos:line="845" pos:column="32">(<param><decl><type><name pos:line="845" pos:column="33">POINT</name></type> <name pos:line="845" pos:column="39">screenPoint</name></decl></param>)</parameter_list>
<block pos:line="846" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="847" pos:column="9">HWND</name></type> <name pos:line="847" pos:column="14">hWin</name> <init pos:line="847" pos:column="19">= <expr><call><name><op:operator pos:line="847" pos:column="21">::</op:operator><name pos:line="847" pos:column="23">WindowFromPoint</name></name><argument_list pos:line="847" pos:column="38">(<argument><expr><name pos:line="847" pos:column="39">screenPoint</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="848" pos:column="9">if <condition pos:line="848" pos:column="12">(<expr><name pos:line="848" pos:column="13">_hSelf</name> <op:operator pos:line="848" pos:column="20">==</op:operator> <name pos:line="848" pos:column="23">hWin</name></expr>)</condition><then pos:line="848" pos:column="28">
		<expr_stmt><expr><call><name><op:operator pos:line="849" pos:column="17">::</op:operator><name pos:line="849" pos:column="19">SetCursor</name></name><argument_list pos:line="849" pos:column="28">(<argument><expr><call><name><op:operator pos:line="849" pos:column="29">::</op:operator><name pos:line="849" pos:column="31">LoadCursor</name></name><argument_list pos:line="849" pos:column="41">(<argument><expr><name pos:line="849" pos:column="42">NULL</name></expr></argument>, <argument><expr><name pos:line="849" pos:column="48">IDC_ARROW</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="850" pos:column="9">else
	<block pos:line="851" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="852" pos:column="17">TCHAR</name></type> <name><name pos:line="852" pos:column="23">className</name><index pos:line="852" pos:column="32">[<expr><lit:literal type="number" pos:line="852" pos:column="33">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="853" pos:column="17">::</op:operator><name pos:line="853" pos:column="19">GetClassName</name></name><argument_list pos:line="853" pos:column="31">(<argument><expr><name pos:line="853" pos:column="32">hWin</name></expr></argument>, <argument><expr><name pos:line="853" pos:column="38">className</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="853" pos:column="49">256</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="854" pos:column="17">if <condition pos:line="854" pos:column="20">(<expr><op:operator pos:line="854" pos:column="21">(</op:operator><op:operator pos:line="854" pos:column="22">!</op:operator><call><name pos:line="854" pos:column="23">lstrcmp</name><argument_list pos:line="854" pos:column="30">(<argument><expr><name pos:line="854" pos:column="31">className</name></expr></argument>, <argument><expr><call><name pos:line="854" pos:column="42">TEXT</name><argument_list pos:line="854" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="854" pos:column="47">"Scintilla"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="854" pos:column="60">)</op:operator> <op:operator pos:line="854" pos:column="62">||</op:operator> <op:operator pos:line="854" pos:column="65">(</op:operator><op:operator pos:line="854" pos:column="66">!</op:operator><call><name pos:line="854" pos:column="67">lstrcmp</name><argument_list pos:line="854" pos:column="74">(<argument><expr><name pos:line="854" pos:column="75">className</name></expr></argument>, <argument><expr><name pos:line="854" pos:column="86">WC_TABCONTROL</name></expr></argument>)</argument_list></call><op:operator pos:line="854" pos:column="100">)</op:operator></expr>)</condition><then pos:line="854" pos:column="102">
		<block pos:line="855" pos:column="17">{
			<if pos:line="856" pos:column="25">if <condition pos:line="856" pos:column="28">(<expr><call><name><op:operator pos:line="856" pos:column="29">::</op:operator><name pos:line="856" pos:column="31">GetKeyState</name></name><argument_list pos:line="856" pos:column="42">(<argument><expr><name pos:line="856" pos:column="43">VK_LCONTROL</name></expr></argument>)</argument_list></call> <op:operator pos:line="856" pos:column="56">&amp;</op:operator> <lit:literal type="number" pos:line="856" pos:column="58">0x80000000</lit:literal></expr>)</condition><then pos:line="856" pos:column="69">
				<expr_stmt><expr><call><name><op:operator pos:line="857" pos:column="33">::</op:operator><name pos:line="857" pos:column="35">SetCursor</name></name><argument_list pos:line="857" pos:column="44">(<argument><expr><call><name><op:operator pos:line="857" pos:column="45">::</op:operator><name pos:line="857" pos:column="47">LoadCursor</name></name><argument_list pos:line="857" pos:column="57">(<argument><expr><name pos:line="857" pos:column="58">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="857" pos:column="66">MAKEINTRESOURCE</name><argument_list pos:line="857" pos:column="81">(<argument><expr><name pos:line="857" pos:column="82">IDC_DRAG_PLUS_TAB</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="858" pos:column="25">else
				<expr_stmt><expr><call><name><op:operator pos:line="859" pos:column="33">::</op:operator><name pos:line="859" pos:column="35">SetCursor</name></name><argument_list pos:line="859" pos:column="44">(<argument><expr><call><name><op:operator pos:line="859" pos:column="45">::</op:operator><name pos:line="859" pos:column="47">LoadCursor</name></name><argument_list pos:line="859" pos:column="57">(<argument><expr><name pos:line="859" pos:column="58">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="859" pos:column="66">MAKEINTRESOURCE</name><argument_list pos:line="859" pos:column="81">(<argument><expr><name pos:line="859" pos:column="82">IDC_DRAG_TAB</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="861" pos:column="17">else <if pos:line="861" pos:column="22">if <condition pos:line="861" pos:column="25">(<expr><call><name pos:line="861" pos:column="26">isPointInParentZone</name><argument_list pos:line="861" pos:column="45">(<argument><expr><name pos:line="861" pos:column="46">screenPoint</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="861" pos:column="59">
			<expr_stmt><expr><call><name><op:operator pos:line="862" pos:column="25">::</op:operator><name pos:line="862" pos:column="27">SetCursor</name></name><argument_list pos:line="862" pos:column="36">(<argument><expr><call><name><op:operator pos:line="862" pos:column="37">::</op:operator><name pos:line="862" pos:column="39">LoadCursor</name></name><argument_list pos:line="862" pos:column="49">(<argument><expr><name pos:line="862" pos:column="50">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="862" pos:column="58">MAKEINTRESOURCE</name><argument_list pos:line="862" pos:column="73">(<argument><expr><name pos:line="862" pos:column="74">IDC_DRAG_INTERDIT_TAB</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
        <else pos:line="863" pos:column="9">else <comment type="line" pos:line="863" pos:column="14">// drag out of application</comment>
            <expr_stmt><expr><call><name><op:operator pos:line="864" pos:column="13">::</op:operator><name pos:line="864" pos:column="15">SetCursor</name></name><argument_list pos:line="864" pos:column="24">(<argument><expr><call><name><op:operator pos:line="864" pos:column="25">::</op:operator><name pos:line="864" pos:column="27">LoadCursor</name></name><argument_list pos:line="864" pos:column="37">(<argument><expr><name pos:line="864" pos:column="38">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="864" pos:column="46">MAKEINTRESOURCE</name><argument_list pos:line="864" pos:column="61">(<argument><expr><name pos:line="864" pos:column="62">IDC_DRAG_OUT_TAB</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if></else></if>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="868" pos:column="1">void</name></type> <name><name pos:line="868" pos:column="6">TabBarPlus</name><op:operator pos:line="868" pos:column="16">::</op:operator><name pos:line="868" pos:column="18">exchangeItemData</name></name><parameter_list pos:line="868" pos:column="34">(<param><decl><type><name pos:line="868" pos:column="35">POINT</name></type> <name pos:line="868" pos:column="41">point</name></decl></param>)</parameter_list>
<block pos:line="869" pos:column="1">{
	<comment type="line" pos:line="870" pos:column="9">// Find the destination tab...</comment>
	<decl_stmt><decl><type><name pos:line="871" pos:column="9">int</name></type> <name pos:line="871" pos:column="13">nTab</name> <init pos:line="871" pos:column="18">= <expr><call><name pos:line="871" pos:column="20">getTabIndexAt</name><argument_list pos:line="871" pos:column="33">(<argument><expr><name pos:line="871" pos:column="34">point</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="873" pos:column="9">// The position is over a tab.</comment>
	<comment type="line" pos:line="874" pos:column="9">//if (hitinfo.flags != TCHT_NOWHERE)</comment>
	<if pos:line="875" pos:column="9">if <condition pos:line="875" pos:column="12">(<expr><name pos:line="875" pos:column="13">nTab</name> <op:operator pos:line="875" pos:column="18">!=</op:operator> <op:operator pos:line="875" pos:column="21">-</op:operator><lit:literal type="number" pos:line="875" pos:column="22">1</lit:literal></expr>)</condition><then pos:line="875" pos:column="24">
	<block pos:line="876" pos:column="9">{
		<expr_stmt><expr><name pos:line="877" pos:column="17">_isDraggingInside</name> <op:operator pos:line="877" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="877" pos:column="37">true</lit:literal></expr>;</expr_stmt>

		<if pos:line="879" pos:column="17">if <condition pos:line="879" pos:column="20">(<expr><name pos:line="879" pos:column="21">nTab</name> <op:operator pos:line="879" pos:column="26">!=</op:operator> <name pos:line="879" pos:column="29">_nTabDragged</name></expr>)</condition><then pos:line="879" pos:column="42">
		<block pos:line="880" pos:column="17">{
			<comment type="line" pos:line="881" pos:column="25">//1. set to focus</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="882" pos:column="25">::</op:operator><name pos:line="882" pos:column="27">SendMessage</name></name><argument_list pos:line="882" pos:column="38">(<argument><expr><name pos:line="882" pos:column="39">_hSelf</name></expr></argument>, <argument><expr><name pos:line="882" pos:column="47">TCM_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="882" pos:column="62">nTab</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="882" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="884" pos:column="25">//2. shift their data, and insert the source</comment>
			<decl_stmt><decl><type><name pos:line="885" pos:column="25">TCITEM</name></type> <name pos:line="885" pos:column="32">itemData_nDraggedTab</name></decl><op:operator pos:line="885" pos:column="52">,</op:operator> <decl><type ref="prev"/><name pos:line="885" pos:column="54">itemData_shift</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="886" pos:column="25">itemData_nDraggedTab</name><op:operator pos:line="886" pos:column="45">.</op:operator><name pos:line="886" pos:column="46">mask</name></name> <op:operator pos:line="886" pos:column="51">=</op:operator> <name><name pos:line="886" pos:column="53">itemData_shift</name><op:operator pos:line="886" pos:column="67">.</op:operator><name pos:line="886" pos:column="68">mask</name></name> <op:operator pos:line="886" pos:column="73">=</op:operator> <name pos:line="886" pos:column="75">TCIF_IMAGE</name> <op:operator pos:line="886" pos:column="86">|</op:operator> <name pos:line="886" pos:column="88">TCIF_TEXT</name> <op:operator pos:line="886" pos:column="98">|</op:operator> <name pos:line="886" pos:column="100">TCIF_PARAM</name></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="887" pos:column="25">const</specifier> <name pos:line="887" pos:column="31">int</name></type> <name pos:line="887" pos:column="35">stringSize</name> <init pos:line="887" pos:column="46">= <expr><lit:literal type="number" pos:line="887" pos:column="48">256</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="888" pos:column="25">TCHAR</name></type> <name><name pos:line="888" pos:column="31">str1</name><index pos:line="888" pos:column="35">[<expr><name pos:line="888" pos:column="36">stringSize</name></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="889" pos:column="25">TCHAR</name></type> <name><name pos:line="889" pos:column="31">str2</name><index pos:line="889" pos:column="35">[<expr><name pos:line="889" pos:column="36">stringSize</name></expr>]</index></name></decl>;</decl_stmt>

			<expr_stmt><expr><name><name pos:line="891" pos:column="25">itemData_nDraggedTab</name><op:operator pos:line="891" pos:column="45">.</op:operator><name pos:line="891" pos:column="46">pszText</name></name> <op:operator pos:line="891" pos:column="54">=</op:operator> <name pos:line="891" pos:column="56">str1</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="892" pos:column="25">itemData_nDraggedTab</name><op:operator pos:line="892" pos:column="45">.</op:operator><name pos:line="892" pos:column="46">cchTextMax</name></name> <op:operator pos:line="892" pos:column="57">=</op:operator> <op:operator pos:line="892" pos:column="59">(</op:operator><name pos:line="892" pos:column="60">stringSize</name><op:operator pos:line="892" pos:column="70">)</op:operator></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="894" pos:column="25">itemData_shift</name><op:operator pos:line="894" pos:column="39">.</op:operator><name pos:line="894" pos:column="40">pszText</name></name> <op:operator pos:line="894" pos:column="48">=</op:operator> <name pos:line="894" pos:column="50">str2</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="895" pos:column="25">itemData_shift</name><op:operator pos:line="895" pos:column="39">.</op:operator><name pos:line="895" pos:column="40">cchTextMax</name></name> <op:operator pos:line="895" pos:column="51">=</op:operator> <op:operator pos:line="895" pos:column="53">(</op:operator><name pos:line="895" pos:column="54">stringSize</name><op:operator pos:line="895" pos:column="64">)</op:operator></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><op:operator pos:line="897" pos:column="25">::</op:operator><name pos:line="897" pos:column="27">SendMessage</name></name><argument_list pos:line="897" pos:column="38">(<argument><expr><name pos:line="897" pos:column="39">_hSelf</name></expr></argument>, <argument><expr><name pos:line="897" pos:column="47">TCM_GETITEM</name></expr></argument>, <argument><expr><name pos:line="897" pos:column="60">_nTabDragged</name></expr></argument>, <argument><expr><call><name><name pos:line="897" pos:column="74">reinterpret_cast</name><argument_list pos:line="897" pos:column="90">&lt;<argument><expr><name pos:line="897" pos:column="91">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="897" pos:column="98">(<argument><expr><op:operator pos:line="897" pos:column="99">&amp;</op:operator><name pos:line="897" pos:column="100">itemData_nDraggedTab</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="899" pos:column="25">if <condition pos:line="899" pos:column="28">(<expr><name pos:line="899" pos:column="29">_nTabDragged</name> <op:operator pos:line="899" pos:column="42">&gt;</op:operator> <name pos:line="899" pos:column="44">nTab</name></expr>)</condition><then pos:line="899" pos:column="49">
			<block pos:line="900" pos:column="25">{
				<for pos:line="901" pos:column="33">for (<init><decl><type><name pos:line="901" pos:column="38">int</name></type> <name pos:line="901" pos:column="42">i</name> <init pos:line="901" pos:column="44">= <expr><name pos:line="901" pos:column="46">_nTabDragged</name></expr></init></decl> ;</init> <condition><expr><name pos:line="901" pos:column="61">i</name> <op:operator pos:line="901" pos:column="63">&gt;</op:operator> <name pos:line="901" pos:column="65">nTab</name></expr> ;</condition> <incr><expr><name pos:line="901" pos:column="72">i</name><op:operator pos:line="901" pos:column="73">--</op:operator></expr></incr>)
				<block pos:line="902" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="903" pos:column="41">::</op:operator><name pos:line="903" pos:column="43">SendMessage</name></name><argument_list pos:line="903" pos:column="54">(<argument><expr><name pos:line="903" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="903" pos:column="63">TCM_GETITEM</name></expr></argument>, <argument><expr><name pos:line="903" pos:column="76">i</name><op:operator pos:line="903" pos:column="77">-</op:operator><lit:literal type="number" pos:line="903" pos:column="78">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="903" pos:column="81">reinterpret_cast</name><argument_list pos:line="903" pos:column="97">&lt;<argument><expr><name pos:line="903" pos:column="98">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="903" pos:column="105">(<argument><expr><op:operator pos:line="903" pos:column="106">&amp;</op:operator><name pos:line="903" pos:column="107">itemData_shift</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="904" pos:column="41">::</op:operator><name pos:line="904" pos:column="43">SendMessage</name></name><argument_list pos:line="904" pos:column="54">(<argument><expr><name pos:line="904" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="904" pos:column="63">TCM_SETITEM</name></expr></argument>, <argument><expr><name pos:line="904" pos:column="76">i</name></expr></argument>, <argument><expr><call><name><name pos:line="904" pos:column="79">reinterpret_cast</name><argument_list pos:line="904" pos:column="95">&lt;<argument><expr><name pos:line="904" pos:column="96">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="904" pos:column="103">(<argument><expr><op:operator pos:line="904" pos:column="104">&amp;</op:operator><name pos:line="904" pos:column="105">itemData_shift</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
			}</block></then>
			<else pos:line="907" pos:column="25">else
			<block pos:line="908" pos:column="25">{
				<for pos:line="909" pos:column="33">for (<init><decl><type><name pos:line="909" pos:column="38">int</name></type> <name pos:line="909" pos:column="42">i</name> <init pos:line="909" pos:column="44">= <expr><name pos:line="909" pos:column="46">_nTabDragged</name></expr></init></decl> ;</init> <condition><expr><name pos:line="909" pos:column="61">i</name> <op:operator pos:line="909" pos:column="63">&lt;</op:operator> <name pos:line="909" pos:column="65">nTab</name></expr> ;</condition> <incr><expr><name pos:line="909" pos:column="72">i</name><op:operator pos:line="909" pos:column="73">++</op:operator></expr></incr>)
				<block pos:line="910" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="911" pos:column="41">::</op:operator><name pos:line="911" pos:column="43">SendMessage</name></name><argument_list pos:line="911" pos:column="54">(<argument><expr><name pos:line="911" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="911" pos:column="63">TCM_GETITEM</name></expr></argument>, <argument><expr><name pos:line="911" pos:column="76">i</name><op:operator pos:line="911" pos:column="77">+</op:operator><lit:literal type="number" pos:line="911" pos:column="78">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="911" pos:column="81">reinterpret_cast</name><argument_list pos:line="911" pos:column="97">&lt;<argument><expr><name pos:line="911" pos:column="98">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="911" pos:column="105">(<argument><expr><op:operator pos:line="911" pos:column="106">&amp;</op:operator><name pos:line="911" pos:column="107">itemData_shift</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="912" pos:column="41">::</op:operator><name pos:line="912" pos:column="43">SendMessage</name></name><argument_list pos:line="912" pos:column="54">(<argument><expr><name pos:line="912" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="912" pos:column="63">TCM_SETITEM</name></expr></argument>, <argument><expr><name pos:line="912" pos:column="76">i</name></expr></argument>, <argument><expr><call><name><name pos:line="912" pos:column="79">reinterpret_cast</name><argument_list pos:line="912" pos:column="95">&lt;<argument><expr><name pos:line="912" pos:column="96">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="912" pos:column="103">(<argument><expr><op:operator pos:line="912" pos:column="104">&amp;</op:operator><name pos:line="912" pos:column="105">itemData_shift</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
			}</block></else></if>
			<expr_stmt><expr><call><name><op:operator pos:line="915" pos:column="25">::</op:operator><name pos:line="915" pos:column="27">SendMessage</name></name><argument_list pos:line="915" pos:column="38">(<argument><expr><name pos:line="915" pos:column="39">_hSelf</name></expr></argument>, <argument><expr><name pos:line="915" pos:column="47">TCM_SETITEM</name></expr></argument>, <argument><expr><name pos:line="915" pos:column="60">nTab</name></expr></argument>, <argument><expr><call><name><name pos:line="915" pos:column="66">reinterpret_cast</name><argument_list pos:line="915" pos:column="82">&lt;<argument><expr><name pos:line="915" pos:column="83">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="915" pos:column="90">(<argument><expr><op:operator pos:line="915" pos:column="91">&amp;</op:operator><name pos:line="915" pos:column="92">itemData_nDraggedTab</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="917" pos:column="25">//3. update the current index</comment>
			<expr_stmt><expr><name pos:line="918" pos:column="25">_nTabDragged</name> <op:operator pos:line="918" pos:column="38">=</op:operator> <name pos:line="918" pos:column="40">nTab</name></expr>;</expr_stmt>

			<comment type="line" pos:line="920" pos:column="25">// Tell Notepad_plus to notifiy plugins that a D&amp;D operation was done (so doc index has been changed)</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="921" pos:column="25">::</op:operator><name pos:line="921" pos:column="27">SendMessage</name></name><argument_list pos:line="921" pos:column="38">(<argument><expr><name pos:line="921" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="921" pos:column="49">NPPM_INTERNAL_DOCORDERCHANGED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="921" pos:column="80">0</lit:literal></expr></argument>, <argument><expr><name pos:line="921" pos:column="83">_nTabDragged</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then>
	<else pos:line="924" pos:column="9">else
	<block pos:line="925" pos:column="9">{
		<comment type="line" pos:line="926" pos:column="17">//::SetCursor(::LoadCursor(_hInst, MAKEINTRESOURCE(IDC_DRAG_TAB)));</comment>
		<expr_stmt><expr><name pos:line="927" pos:column="17">_isDraggingInside</name> <op:operator pos:line="927" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="927" pos:column="37">false</lit:literal></expr>;</expr_stmt>
	}</block></else></if>
	
}</block></function>
<function><type><name pos:line="931" pos:column="1">bool</name></type> <name><name pos:line="931" pos:column="6">CloseButtonZone</name><op:operator pos:line="931" pos:column="21">::</op:operator><name pos:line="931" pos:column="23">isHit</name></name><parameter_list pos:line="931" pos:column="28">(<param><decl><type><name pos:line="931" pos:column="29">int</name></type> <name pos:line="931" pos:column="33">x</name></decl></param>, <param><decl><type><name pos:line="931" pos:column="36">int</name></type> <name pos:line="931" pos:column="40">y</name></decl></param>, <param><decl><type><specifier pos:line="931" pos:column="43">const</specifier> <name pos:line="931" pos:column="49">RECT</name> <type:modifier pos:line="931" pos:column="54">&amp;</type:modifier></type> <name pos:line="931" pos:column="56">testZone</name></decl></param>)</parameter_list> <specifier pos:line="931" pos:column="66">const</specifier> 
<block pos:line="932" pos:column="1">{
	<if pos:line="933" pos:column="9">if <condition pos:line="933" pos:column="12">(<expr><op:operator pos:line="933" pos:column="13">(</op:operator><op:operator pos:line="933" pos:column="14">(</op:operator><name pos:line="933" pos:column="15">x</name> <op:operator pos:line="933" pos:column="17">+</op:operator> <name pos:line="933" pos:column="19">_width</name> <op:operator pos:line="933" pos:column="26">+</op:operator> <name pos:line="933" pos:column="28">_fromRight</name><op:operator pos:line="933" pos:column="38">)</op:operator> <op:operator pos:line="933" pos:column="40">&lt;</op:operator> <name><name pos:line="933" pos:column="42">testZone</name><op:operator pos:line="933" pos:column="50">.</op:operator><name pos:line="933" pos:column="51">right</name></name><op:operator pos:line="933" pos:column="56">)</op:operator> <op:operator pos:line="933" pos:column="58">||</op:operator> <op:operator pos:line="933" pos:column="61">(</op:operator><name pos:line="933" pos:column="62">x</name> <op:operator pos:line="933" pos:column="64">&gt;</op:operator> <op:operator pos:line="933" pos:column="66">(</op:operator><name><name pos:line="933" pos:column="67">testZone</name><op:operator pos:line="933" pos:column="75">.</op:operator><name pos:line="933" pos:column="76">right</name></name> <op:operator pos:line="933" pos:column="82">-</op:operator> <name pos:line="933" pos:column="84">_fromRight</name><op:operator pos:line="933" pos:column="94">)</op:operator><op:operator pos:line="933" pos:column="95">)</op:operator></expr>)</condition><then pos:line="933" pos:column="97">
		<return pos:line="934" pos:column="17">return <expr><lit:literal type="boolean" pos:line="934" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<if pos:line="936" pos:column="9">if <condition pos:line="936" pos:column="12">(<expr><op:operator pos:line="936" pos:column="13">(</op:operator><op:operator pos:line="936" pos:column="14">(</op:operator><name pos:line="936" pos:column="15">y</name> <op:operator pos:line="936" pos:column="17">-</op:operator> <name pos:line="936" pos:column="19">_hight</name> <op:operator pos:line="936" pos:column="26">-</op:operator> <name pos:line="936" pos:column="28">_fromTop</name><op:operator pos:line="936" pos:column="36">)</op:operator> <op:operator pos:line="936" pos:column="38">&gt;</op:operator> <name><name pos:line="936" pos:column="40">testZone</name><op:operator pos:line="936" pos:column="48">.</op:operator><name pos:line="936" pos:column="49">top</name></name><op:operator pos:line="936" pos:column="52">)</op:operator> <op:operator pos:line="936" pos:column="54">||</op:operator> <op:operator pos:line="936" pos:column="57">(</op:operator><name pos:line="936" pos:column="58">y</name> <op:operator pos:line="936" pos:column="60">&lt;</op:operator> <op:operator pos:line="936" pos:column="62">(</op:operator><name><name pos:line="936" pos:column="63">testZone</name><op:operator pos:line="936" pos:column="71">.</op:operator><name pos:line="936" pos:column="72">top</name></name> <op:operator pos:line="936" pos:column="76">+</op:operator> <name pos:line="936" pos:column="78">_fromTop</name><op:operator pos:line="936" pos:column="86">)</op:operator><op:operator pos:line="936" pos:column="87">)</op:operator></expr>)</condition><then pos:line="936" pos:column="89">
		<return pos:line="937" pos:column="17">return <expr><lit:literal type="boolean" pos:line="937" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<return pos:line="939" pos:column="9">return <expr><lit:literal type="boolean" pos:line="939" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="942" pos:column="1">RECT</name></type> <name><name pos:line="942" pos:column="6">CloseButtonZone</name><op:operator pos:line="942" pos:column="21">::</op:operator><name pos:line="942" pos:column="23">getButtonRectFrom</name></name><parameter_list pos:line="942" pos:column="40">(<param><decl><type><specifier pos:line="942" pos:column="41">const</specifier> <name pos:line="942" pos:column="47">RECT</name> <type:modifier pos:line="942" pos:column="52">&amp;</type:modifier></type> <name pos:line="942" pos:column="54">tabItemRect</name></decl></param>)</parameter_list> <specifier pos:line="942" pos:column="67">const</specifier> 
<block pos:line="943" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="944" pos:column="9">RECT</name></type> <name pos:line="944" pos:column="14">rect</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="945" pos:column="9">rect</name><op:operator pos:line="945" pos:column="13">.</op:operator><name pos:line="945" pos:column="14">right</name></name> <op:operator pos:line="945" pos:column="20">=</op:operator> <name><name pos:line="945" pos:column="22">tabItemRect</name><op:operator pos:line="945" pos:column="33">.</op:operator><name pos:line="945" pos:column="34">right</name></name> <op:operator pos:line="945" pos:column="40">-</op:operator> <name pos:line="945" pos:column="42">_fromRight</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="946" pos:column="9">rect</name><op:operator pos:line="946" pos:column="13">.</op:operator><name pos:line="946" pos:column="14">left</name></name> <op:operator pos:line="946" pos:column="19">=</op:operator> <name><name pos:line="946" pos:column="21">rect</name><op:operator pos:line="946" pos:column="25">.</op:operator><name pos:line="946" pos:column="26">right</name></name> <op:operator pos:line="946" pos:column="32">-</op:operator> <name pos:line="946" pos:column="34">_width</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="947" pos:column="9">rect</name><op:operator pos:line="947" pos:column="13">.</op:operator><name pos:line="947" pos:column="14">top</name></name> <op:operator pos:line="947" pos:column="18">=</op:operator> <name><name pos:line="947" pos:column="20">tabItemRect</name><op:operator pos:line="947" pos:column="31">.</op:operator><name pos:line="947" pos:column="32">top</name></name> <op:operator pos:line="947" pos:column="36">+</op:operator> <name pos:line="947" pos:column="38">_fromTop</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="948" pos:column="9">rect</name><op:operator pos:line="948" pos:column="13">.</op:operator><name pos:line="948" pos:column="14">bottom</name></name> <op:operator pos:line="948" pos:column="21">=</op:operator> <name><name pos:line="948" pos:column="23">rect</name><op:operator pos:line="948" pos:column="27">.</op:operator><name pos:line="948" pos:column="28">top</name></name> <op:operator pos:line="948" pos:column="32">+</op:operator> <name pos:line="948" pos:column="34">_hight</name></expr>;</expr_stmt>

	<return pos:line="950" pos:column="9">return <expr><name pos:line="950" pos:column="16">rect</name></expr>;</return>
}</block></function></unit>
