<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\WindowInterface.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">WINDOW_INTERFACE_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">WINDOW_INTERFACE_H</name></cpp:macro></cpp:define>

<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"Window.h"</lit:literal></cpp:file></cpp:include>

<class pos:line="34" pos:column="1">class <name pos:line="34" pos:column="7">WindowInterface</name> <super pos:line="34" pos:column="23">: <specifier pos:line="34" pos:column="25">public</specifier> <name pos:line="34" pos:column="32">Window</name></super>
<block pos:line="35" pos:column="1">{<private type="default" pos:line="35" pos:column="2">
</private><public pos:line="36" pos:column="1">public :
	<function><type><name pos:line="37" pos:column="9">void</name></type> <name pos:line="37" pos:column="14">init</name><parameter_list pos:line="37" pos:column="18">(<param><decl><type><name pos:line="37" pos:column="19">HINSTANCE</name></type> <name pos:line="37" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="36">HWND</name></type> <name pos:line="37" pos:column="41">parent</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="49">HWND</name></type> <name pos:line="37" pos:column="54">hSelf</name></decl></param>)</parameter_list> <block pos:line="37" pos:column="61">{
		<expr_stmt><expr><call><name><name pos:line="38" pos:column="17">Window</name><op:operator pos:line="38" pos:column="23">::</op:operator><name pos:line="38" pos:column="25">init</name></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name pos:line="38" pos:column="30">hInst</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="37">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">_hSelf</name> <op:operator pos:line="39" pos:column="24">=</op:operator> <name pos:line="39" pos:column="26">hSelf</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="40" pos:column="10">;</empty_stmt>
	<function><type><specifier pos:line="41" pos:column="9">virtual</specifier> <name pos:line="41" pos:column="17">void</name></type> <name pos:line="41" pos:column="22">destroy</name><parameter_list pos:line="41" pos:column="29">()</parameter_list> <block pos:line="41" pos:column="32">{}</block></function><empty_stmt pos:line="41" pos:column="34">;</empty_stmt>
</public>}</block>;</class>

<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="44" pos:column="8">// WINDOW_INTERFACE_H</comment>
</unit>
