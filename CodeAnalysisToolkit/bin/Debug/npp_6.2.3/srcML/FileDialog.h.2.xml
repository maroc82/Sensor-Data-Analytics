<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\OpenSaveFileDialog\FileDialog.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">FILE_DIALOG_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">FILE_DIALOG_H</name></cpp:macro></cpp:define>

<decl_stmt><decl><type><specifier pos:line="32" pos:column="1">const</specifier> <name pos:line="32" pos:column="7">int</name></type> <name pos:line="32" pos:column="11">nbExtMax</name> <init pos:line="32" pos:column="20">= <expr><lit:literal type="number" pos:line="32" pos:column="22">256</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="33" pos:column="1">const</specifier> <name pos:line="33" pos:column="7">int</name></type> <name pos:line="33" pos:column="11">extLenMax</name> <init pos:line="33" pos:column="21">= <expr><lit:literal type="number" pos:line="33" pos:column="23">64</lit:literal></expr></init></decl>;</decl_stmt>

<using pos:line="35" pos:column="1">using namespace <name pos:line="35" pos:column="17">std</name>;</using>

<typedef pos:line="37" pos:column="1">typedef <type><name><name pos:line="37" pos:column="9">vector</name><argument_list pos:line="37" pos:column="15">&lt;<argument><expr><name pos:line="37" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="37" pos:column="32">stringVector</name>;</typedef>

<struct pos:line="39" pos:column="1">struct <name pos:line="39" pos:column="8">OPENFILENAMENPP</name> <block pos:line="39" pos:column="24">{<public type="default" pos:line="39" pos:column="25">
   <decl_stmt><decl><type><name pos:line="40" pos:column="4">DWORD</name></type>        <name pos:line="40" pos:column="17">lStructSize</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="41" pos:column="4">HWND</name></type>         <name pos:line="41" pos:column="17">hwndOwner</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="42" pos:column="4">HINSTANCE</name></type>    <name pos:line="42" pos:column="17">hInstance</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="43" pos:column="4">LPCTSTR</name></type>      <name pos:line="43" pos:column="17">lpstrFilter</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="44" pos:column="4">LPTSTR</name></type>       <name pos:line="44" pos:column="17">lpstrCustomFilter</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="45" pos:column="4">DWORD</name></type>        <name pos:line="45" pos:column="17">nMaxCustFilter</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="46" pos:column="4">DWORD</name></type>        <name pos:line="46" pos:column="17">nFilterIndex</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="47" pos:column="4">LPTSTR</name></type>       <name pos:line="47" pos:column="17">lpstrFile</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="48" pos:column="4">DWORD</name></type>        <name pos:line="48" pos:column="17">nMaxFile</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="49" pos:column="4">LPTSTR</name></type>       <name pos:line="49" pos:column="17">lpstrFileTitle</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="50" pos:column="4">DWORD</name></type>        <name pos:line="50" pos:column="17">nMaxFileTitle</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="51" pos:column="4">LPCTSTR</name></type>      <name pos:line="51" pos:column="17">lpstrInitialDir</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="52" pos:column="4">LPCTSTR</name></type>      <name pos:line="52" pos:column="17">lpstrTitle</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="53" pos:column="4">DWORD</name></type>        <name pos:line="53" pos:column="17">Flags</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="54" pos:column="4">WORD</name></type>         <name pos:line="54" pos:column="17">nFileOffset</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="55" pos:column="4">WORD</name></type>         <name pos:line="55" pos:column="17">nFileExtension</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="56" pos:column="4">LPCTSTR</name></type>      <name pos:line="56" pos:column="17">lpstrDefExt</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="57" pos:column="4">LPARAM</name></type>       <name pos:line="57" pos:column="17">lCustData</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="58" pos:column="4">LPOFNHOOKPROC</name></type> <name pos:line="58" pos:column="18">lpfnHook</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="59" pos:column="4">LPCTSTR</name></type>      <name pos:line="59" pos:column="17">lpTemplateName</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="60" pos:column="4">void</name> <type:modifier pos:line="60" pos:column="9">*</type:modifier></type>		<name pos:line="60" pos:column="25">pvReserved</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="61" pos:column="4">DWORD</name></type>        <name pos:line="61" pos:column="17">dwReserved</name></decl>;</decl_stmt>
   <decl_stmt><decl><type><name pos:line="62" pos:column="4">DWORD</name></type>        <name pos:line="62" pos:column="17">FlagsEx</name></decl>;</decl_stmt>
</public>}</block>;</struct>


<function_decl><type><name pos:line="66" pos:column="1">generic_string</name></type> <name pos:line="66" pos:column="16">changeExt</name><parameter_list pos:line="66" pos:column="25">(<param><decl><type><name pos:line="66" pos:column="26">generic_string</name></type> <name pos:line="66" pos:column="41">fn</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="45">generic_string</name></type> <name pos:line="66" pos:column="60">ext</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="65">bool</name></type> <name pos:line="66" pos:column="70">forceReplaced</name> <init pos:line="66" pos:column="84">= <expr><lit:literal type="boolean" pos:line="66" pos:column="86">true</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="67" pos:column="1">void</name></type> <name pos:line="67" pos:column="6">goToCenter</name><parameter_list pos:line="67" pos:column="16">(<param><decl><type><name pos:line="67" pos:column="17">HWND</name></type> <name pos:line="67" pos:column="22">hwnd</name></decl></param>)</parameter_list>;</function_decl>


<class pos:line="70" pos:column="1">class <name pos:line="70" pos:column="7">FileDialog</name>
<block pos:line="71" pos:column="1">{<private type="default" pos:line="71" pos:column="2">
</private><public pos:line="72" pos:column="1">public:
	<constructor_decl><name pos:line="73" pos:column="9">FileDialog</name><parameter_list pos:line="73" pos:column="19">(<param><decl><type><name pos:line="73" pos:column="20">HWND</name></type> <name pos:line="73" pos:column="25">hwnd</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="31">HINSTANCE</name></type> <name pos:line="73" pos:column="41">hInst</name></decl></param>)</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="74" pos:column="9">~<name pos:line="74" pos:column="10">FileDialog</name></name><parameter_list pos:line="74" pos:column="20">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="75" pos:column="9">void</name></type> <name pos:line="75" pos:column="14">setExtFilter</name><parameter_list pos:line="75" pos:column="26">(<param><decl><type><specifier pos:line="75" pos:column="27">const</specifier></type> <name pos:line="75" pos:column="33">TCHAR</name> <type:modifier pos:line="75" pos:column="39">*</type:modifier></decl></param>, <param><decl><type><specifier pos:line="75" pos:column="42">const</specifier></type> <name pos:line="75" pos:column="48">TCHAR</name> <type:modifier pos:line="75" pos:column="54">*</type:modifier></decl></param>, <param><decl><type><type:modifier pos:line="75" pos:column="57">...</type:modifier></type></decl></param>)</parameter_list>;</function_decl>
	
	<function_decl><type><name pos:line="77" pos:column="9">int</name></type> <name pos:line="77" pos:column="13">setExtsFilter</name><parameter_list pos:line="77" pos:column="26">(<param><decl><type><specifier pos:line="77" pos:column="27">const</specifier> <name pos:line="77" pos:column="33">TCHAR</name> <type:modifier pos:line="77" pos:column="39">*</type:modifier></type><name pos:line="77" pos:column="40">extText</name></decl></param>, <param><decl><type><specifier pos:line="77" pos:column="49">const</specifier> <name pos:line="77" pos:column="55">TCHAR</name> <type:modifier pos:line="77" pos:column="61">*</type:modifier></type><name pos:line="77" pos:column="62">exts</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="78" pos:column="9">void</name></type> <name pos:line="78" pos:column="14">setDefFileName</name><parameter_list pos:line="78" pos:column="28">(<param><decl><type><specifier pos:line="78" pos:column="29">const</specifier> <name pos:line="78" pos:column="35">TCHAR</name> <type:modifier pos:line="78" pos:column="41">*</type:modifier></type><name pos:line="78" pos:column="42">fn</name></decl></param>)</parameter_list><block pos:line="78" pos:column="45">{<expr_stmt><expr><call><name pos:line="78" pos:column="46">lstrcpy</name><argument_list pos:line="78" pos:column="53">(<argument><expr><name pos:line="78" pos:column="54">_fileName</name></expr></argument>, <argument><expr><name pos:line="78" pos:column="65">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>}</block></function>

	<function_decl><type><name pos:line="80" pos:column="9">TCHAR</name> <type:modifier pos:line="80" pos:column="15">*</type:modifier></type> <name pos:line="80" pos:column="17">doSaveDlg</name><parameter_list pos:line="80" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="81" pos:column="9">stringVector</name> <type:modifier pos:line="81" pos:column="22">*</type:modifier></type> <name pos:line="81" pos:column="24">doOpenMultiFilesDlg</name><parameter_list pos:line="81" pos:column="43">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="82" pos:column="9">TCHAR</name> <type:modifier pos:line="82" pos:column="15">*</type:modifier></type> <name pos:line="82" pos:column="17">doOpenSingleFileDlg</name><parameter_list pos:line="82" pos:column="36">()</parameter_list>;</function_decl>
	<function><type><name pos:line="83" pos:column="9">bool</name></type> <name pos:line="83" pos:column="14">isReadOnly</name><parameter_list pos:line="83" pos:column="24">()</parameter_list> <block pos:line="83" pos:column="27">{<return pos:line="83" pos:column="28">return <expr><name><name pos:line="83" pos:column="35">_ofn</name><op:operator pos:line="83" pos:column="39">.</op:operator><name pos:line="83" pos:column="40">Flags</name></name> <op:operator pos:line="83" pos:column="46">&amp;</op:operator> <name pos:line="83" pos:column="48">OFN_READONLY</name></expr>;</return>}</block></function><empty_stmt pos:line="83" pos:column="62">;</empty_stmt>
    <function><type><name pos:line="84" pos:column="5">void</name></type> <name pos:line="84" pos:column="10">setExtIndex</name><parameter_list pos:line="84" pos:column="21">(<param><decl><type><name pos:line="84" pos:column="22">int</name></type> <name pos:line="84" pos:column="26">extTypeIndex</name></decl></param>)</parameter_list> <block pos:line="84" pos:column="40">{<expr_stmt><expr><name pos:line="84" pos:column="41">_extTypeIndex</name> <op:operator pos:line="84" pos:column="55">=</op:operator> <name pos:line="84" pos:column="57">extTypeIndex</name></expr>;</expr_stmt>}</block></function><empty_stmt pos:line="84" pos:column="71">;</empty_stmt>

	<decl_stmt><decl><type><specifier pos:line="86" pos:column="9">static</specifier> <name pos:line="86" pos:column="16">int</name></type> <name pos:line="86" pos:column="20">_dialogFileBoxId</name></decl>;</decl_stmt>
</public><protected pos:line="87" pos:column="1">protected :
    <function_decl><type><specifier pos:line="88" pos:column="5">static</specifier> <name pos:line="88" pos:column="12">UINT_PTR</name> <name pos:line="88" pos:column="21">CALLBACK</name></type> <name pos:line="88" pos:column="30">OFNHookProc</name><parameter_list pos:line="88" pos:column="41">(<param><decl><type><name pos:line="88" pos:column="42">HWND</name></type> <name pos:line="88" pos:column="47">hWnd</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="53">UINT</name></type> <name pos:line="88" pos:column="58">uMsg</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="64">WPARAM</name></type> <name pos:line="88" pos:column="71">wParam</name></decl></param>, <param><decl><type><name pos:line="88" pos:column="79">LPARAM</name></type> <name pos:line="88" pos:column="86">lParam</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="89" pos:column="5">BOOL</name> <name pos:line="89" pos:column="10">APIENTRY</name></type> <name pos:line="89" pos:column="19">run</name><parameter_list pos:line="89" pos:column="22">(<param><decl><type><name pos:line="89" pos:column="23">HWND</name></type> <name pos:line="89" pos:column="28">hWnd</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="34">UINT</name></type> <name pos:line="89" pos:column="39">uMsg</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="45">WPARAM</name></type> <name pos:line="89" pos:column="52">wParam</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="60">LPARAM</name></type> <name pos:line="89" pos:column="67">lParam</name></decl></param>)</parameter_list>;</function_decl>

</protected><private pos:line="91" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">TCHAR</name></type> <name><name pos:line="92" pos:column="15">_fileName</name><index pos:line="92" pos:column="24">[<expr><name pos:line="92" pos:column="25">MAX_PATH</name><op:operator pos:line="92" pos:column="33">*</op:operator><lit:literal type="number" pos:line="92" pos:column="34">8</lit:literal></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="94" pos:column="9">TCHAR</name> <type:modifier pos:line="94" pos:column="15">*</type:modifier></type> <name pos:line="94" pos:column="17">_fileExt</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="95" pos:column="9">int</name></type> <name pos:line="95" pos:column="13">_nbCharFileExt</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="97" pos:column="9">stringVector</name></type> <name pos:line="97" pos:column="22">_fileNames</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="99" pos:column="9">OPENFILENAMENPP</name></type> <name pos:line="99" pos:column="25">_ofn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="100" pos:column="9">winVer</name></type> <name pos:line="100" pos:column="16">_winVersion</name></decl>;</decl_stmt>
	

    <comment type="line" pos:line="103" pos:column="5">//TCHAR _extArray[nbExtMax][extLenMax];</comment>
    <decl_stmt><decl><type><name pos:line="104" pos:column="5">int</name></type> <name pos:line="104" pos:column="9">_nbExt</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="105" pos:column="5">int</name></type> <name pos:line="105" pos:column="9">_extTypeIndex</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="106" pos:column="5">static</specifier> <name pos:line="106" pos:column="12">FileDialog</name> <type:modifier pos:line="106" pos:column="23">*</type:modifier></type><name pos:line="106" pos:column="24">staticThis</name></decl>;</decl_stmt>
</private>}</block>;</class>

<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="109" pos:column="8">//FILE_DIALOG_H</comment>
</unit>
