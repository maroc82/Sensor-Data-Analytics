<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\ScitillaComponent\FindReplaceDlg.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">FIND_REPLACE_DLG_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">FIND_REPLACE_DLG_H</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">FINDREPLACE_DLG_H</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"FindReplaceDlg_rc.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="34" pos:column="8">//FINDREPLACE_DLG_H</comment>

<cpp:ifndef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifndef</cpp:directive> <name pos:line="36" pos:column="9">SCINTILLA_EDIT_VIEW_H</name></cpp:ifndef>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"ScintillaEditView.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="38" pos:column="8">//SCINTILLA_EDIT_VIEW_H</comment>

<cpp:ifndef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifndef</cpp:directive> <name pos:line="40" pos:column="9">DOCKINGDLGINTERFACE_H</name></cpp:ifndef>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="41" pos:column="10">"DockingDlgInterface.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="42" pos:column="8">//DOCKINGDLGINTERFACE_H</comment>

<cpp:include pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="44" pos:column="10">"BoostRegexSearch.h"</lit:literal></cpp:file></cpp:include>

<cpp:define pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="46" pos:column="9">FIND_RECURSIVE</name></cpp:macro> <cpp:value pos:line="46" pos:column="24">1</cpp:value></cpp:define>
<cpp:define pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="47" pos:column="9">FIND_INHIDDENDIR</name></cpp:macro> <cpp:value pos:line="47" pos:column="26">2</cpp:value></cpp:define>

<cpp:define pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="49" pos:column="9">FINDREPLACE_MAXLENGTH</name></cpp:macro> <cpp:value pos:line="49" pos:column="31">2048</cpp:value></cpp:define>

<enum pos:line="51" pos:column="1">enum <name pos:line="51" pos:column="6">DIALOG_TYPE</name> <block pos:line="51" pos:column="18">{<decl><name pos:line="51" pos:column="19">FIND_DLG</name></decl><op:operator pos:line="51" pos:column="27">,</op:operator> <decl><name pos:line="51" pos:column="29">REPLACE_DLG</name></decl><op:operator pos:line="51" pos:column="40">,</op:operator> <decl><name pos:line="51" pos:column="42">FINDINFILES_DLG</name></decl><op:operator pos:line="51" pos:column="57">,</op:operator> <decl><name pos:line="51" pos:column="59">MARK_DLG</name></decl>}</block>;</enum>

<cpp:define pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="53" pos:column="9">DIR_DOWN</name></cpp:macro> <cpp:value pos:line="53" pos:column="18">true</cpp:value></cpp:define>
<cpp:define pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="54" pos:column="9">DIR_UP</name></cpp:macro> <cpp:value pos:line="54" pos:column="16">false</cpp:value></cpp:define>

<comment type="line" pos:line="56" pos:column="1">//#define FIND_REPLACE_STR_MAX 256</comment>

<enum pos:line="58" pos:column="1">enum <name pos:line="58" pos:column="6">InWhat</name><block pos:line="58" pos:column="12">{<decl><name pos:line="58" pos:column="13">ALL_OPEN_DOCS</name></decl><op:operator pos:line="58" pos:column="26">,</op:operator> <decl><name pos:line="58" pos:column="28">FILES_IN_DIR</name></decl><op:operator pos:line="58" pos:column="40">,</op:operator> <decl><name pos:line="58" pos:column="42">CURRENT_DOC</name></decl>}</block>;</enum>

<struct pos:line="60" pos:column="1">struct <name pos:line="60" pos:column="8">FoundInfo</name> <block pos:line="60" pos:column="18">{<public type="default" pos:line="60" pos:column="19">
	<constructor><name pos:line="61" pos:column="9">FoundInfo</name><parameter_list pos:line="61" pos:column="18">(<param><decl><type><name pos:line="61" pos:column="19">int</name></type> <name pos:line="61" pos:column="23">start</name></decl></param>, <param><decl><type><name pos:line="61" pos:column="30">int</name></type> <name pos:line="61" pos:column="34">end</name></decl></param>, <param><decl><type><specifier pos:line="61" pos:column="39">const</specifier> <name pos:line="61" pos:column="45">TCHAR</name> <type:modifier pos:line="61" pos:column="51">*</type:modifier></type><name pos:line="61" pos:column="52">fullPath</name></decl></param>)</parameter_list>
		<member_list pos:line="62" pos:column="17">: <call><name pos:line="62" pos:column="19">_start</name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">start</name></expr></argument>)</argument_list></call><op:operator pos:line="62" pos:column="32">,</op:operator> <call><name pos:line="62" pos:column="34">_end</name><argument_list pos:line="62" pos:column="38">(<argument><expr><name pos:line="62" pos:column="39">end</name></expr></argument>)</argument_list></call><op:operator pos:line="62" pos:column="43">,</op:operator> <call><name pos:line="62" pos:column="45">_fullPath</name><argument_list pos:line="62" pos:column="54">(<argument><expr><name pos:line="62" pos:column="55">fullPath</name></expr></argument>)</argument_list></call> </member_list><block pos:line="62" pos:column="65">{}</block></constructor><empty_stmt pos:line="62" pos:column="67">;</empty_stmt>
	<decl_stmt><decl><type><name pos:line="63" pos:column="9">int</name></type> <name pos:line="63" pos:column="13">_start</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="64" pos:column="9">int</name></type> <name pos:line="64" pos:column="13">_end</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="65" pos:column="9">generic_string</name></type> <name pos:line="65" pos:column="24">_fullPath</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<struct pos:line="68" pos:column="1">struct <name pos:line="68" pos:column="8">TargetRange</name> <block pos:line="68" pos:column="20">{<public type="default" pos:line="68" pos:column="21">
	<decl_stmt><decl><type><name pos:line="69" pos:column="9">int</name></type> <name pos:line="69" pos:column="13">targetStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="70" pos:column="9">int</name></type> <name pos:line="70" pos:column="13">targetEnd</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<enum pos:line="73" pos:column="1">enum <name pos:line="73" pos:column="6">SearchIncrementalType</name> <block pos:line="73" pos:column="28">{ <decl><name pos:line="73" pos:column="30">NotIncremental</name></decl><op:operator pos:line="73" pos:column="44">,</op:operator> <decl><name pos:line="73" pos:column="46">FirstIncremental</name></decl><op:operator pos:line="73" pos:column="62">,</op:operator> <decl><name pos:line="73" pos:column="64">NextIncremental</name></decl> }</block>;</enum>
<enum pos:line="74" pos:column="1">enum <name pos:line="74" pos:column="6">SearchType</name> <block pos:line="74" pos:column="17">{ <decl><name pos:line="74" pos:column="19">FindNormal</name></decl><op:operator pos:line="74" pos:column="29">,</op:operator> <decl><name pos:line="74" pos:column="31">FindExtended</name></decl><op:operator pos:line="74" pos:column="43">,</op:operator> <decl><name pos:line="74" pos:column="45">FindRegex</name></decl> }</block>;</enum>
<enum pos:line="75" pos:column="1">enum <name pos:line="75" pos:column="6">ProcessOperation</name> <block pos:line="75" pos:column="23">{ <decl><name pos:line="75" pos:column="25">ProcessFindAll</name></decl><op:operator pos:line="75" pos:column="39">,</op:operator> <decl><name pos:line="75" pos:column="41">ProcessReplaceAll</name></decl><op:operator pos:line="75" pos:column="58">,</op:operator> <decl><name pos:line="75" pos:column="60">ProcessCountAll</name></decl><op:operator pos:line="75" pos:column="75">,</op:operator> <decl><name pos:line="75" pos:column="77">ProcessMarkAll</name></decl><op:operator pos:line="75" pos:column="91">,</op:operator> <decl><name pos:line="75" pos:column="93">ProcessMarkAll_2</name></decl><op:operator pos:line="75" pos:column="109">,</op:operator> <decl><name pos:line="75" pos:column="111">ProcessMarkAll_IncSearch</name></decl><op:operator pos:line="75" pos:column="135">,</op:operator> <decl><name pos:line="75" pos:column="137">ProcessMarkAllExt</name></decl> }</block>;</enum>

<struct pos:line="77" pos:column="1">struct <name pos:line="77" pos:column="8">FindOption</name>
<block pos:line="78" pos:column="1">{<public type="default" pos:line="78" pos:column="2">
	<decl_stmt><decl><type><name pos:line="79" pos:column="9">bool</name></type> <name pos:line="79" pos:column="14">_isWholeWord</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="80" pos:column="9">bool</name></type> <name pos:line="80" pos:column="14">_isMatchCase</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="81" pos:column="9">bool</name></type> <name pos:line="81" pos:column="14">_isWrapAround</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="82" pos:column="9">bool</name></type> <name pos:line="82" pos:column="14">_whichDirection</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="83" pos:column="9">SearchIncrementalType</name></type> <name pos:line="83" pos:column="31">_incrementalType</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="84" pos:column="9">SearchType</name></type> <name pos:line="84" pos:column="20">_searchType</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="85" pos:column="9">bool</name></type> <name pos:line="85" pos:column="14">_doPurge</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="86" pos:column="9">bool</name></type> <name pos:line="86" pos:column="14">_doMarkLine</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="87" pos:column="9">bool</name></type> <name pos:line="87" pos:column="14">_isInSelection</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="88" pos:column="9">generic_string</name></type> <name pos:line="88" pos:column="24">_str2Search</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="89" pos:column="9">generic_string</name></type> <name pos:line="89" pos:column="24">_str4Replace</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="90" pos:column="9">generic_string</name></type> <name pos:line="90" pos:column="24">_filters</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="91" pos:column="9">generic_string</name></type> <name pos:line="91" pos:column="24">_directory</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">bool</name></type> <name pos:line="92" pos:column="14">_isRecursive</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="93" pos:column="9">bool</name></type> <name pos:line="93" pos:column="14">_isInHiddenDir</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="94" pos:column="9">bool</name></type> <name pos:line="94" pos:column="14">_dotMatchesNewline</name></decl>;</decl_stmt>
	<constructor><name pos:line="95" pos:column="9">FindOption</name><parameter_list pos:line="95" pos:column="19">()</parameter_list> <member_list pos:line="95" pos:column="22">: <call><name pos:line="95" pos:column="24">_isWholeWord</name><argument_list pos:line="95" pos:column="36">(<argument><expr><lit:literal type="boolean" pos:line="95" pos:column="37">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="95" pos:column="42">,</op:operator> <call><name pos:line="95" pos:column="44">_isMatchCase</name><argument_list pos:line="95" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="95" pos:column="57">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="95" pos:column="62">,</op:operator> <call><name pos:line="95" pos:column="64">_searchType</name><argument_list pos:line="95" pos:column="75">(<argument><expr><name pos:line="95" pos:column="76">FindNormal</name></expr></argument>)</argument_list></call><op:operator pos:line="95" pos:column="87">,</op:operator>\
		<call><name pos:line="96" pos:column="17">_isWrapAround</name><argument_list pos:line="96" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="96" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="96" pos:column="36">,</op:operator> <call><name pos:line="96" pos:column="38">_whichDirection</name><argument_list pos:line="96" pos:column="53">(<argument><expr><name pos:line="96" pos:column="54">DIR_DOWN</name></expr></argument>)</argument_list></call><op:operator pos:line="96" pos:column="63">,</op:operator> <call><name pos:line="96" pos:column="65">_incrementalType</name><argument_list pos:line="96" pos:column="81">(<argument><expr><name pos:line="96" pos:column="82">NotIncremental</name></expr></argument>)</argument_list></call><op:operator pos:line="96" pos:column="97">,</op:operator> 
		<call><name pos:line="97" pos:column="17">_doPurge</name><argument_list pos:line="97" pos:column="25">(<argument><expr><lit:literal type="boolean" pos:line="97" pos:column="26">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="97" pos:column="32">,</op:operator> <call><name pos:line="97" pos:column="34">_doMarkLine</name><argument_list pos:line="97" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="97" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="97" pos:column="52">,</op:operator>
		<call><name pos:line="98" pos:column="17">_isInSelection</name><argument_list pos:line="98" pos:column="31">(<argument><expr><lit:literal type="boolean" pos:line="98" pos:column="32">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="98" pos:column="38">,</op:operator>  <call><name pos:line="98" pos:column="41">_isRecursive</name><argument_list pos:line="98" pos:column="53">(<argument><expr><lit:literal type="boolean" pos:line="98" pos:column="54">true</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="98" pos:column="59">,</op:operator> <call><name pos:line="98" pos:column="61">_isInHiddenDir</name><argument_list pos:line="98" pos:column="75">(<argument><expr><lit:literal type="boolean" pos:line="98" pos:column="76">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="98" pos:column="82">,</op:operator>
		<call><name pos:line="99" pos:column="17">_dotMatchesNewline</name><argument_list pos:line="99" pos:column="35">(<argument><expr><lit:literal type="boolean" pos:line="99" pos:column="36">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="99" pos:column="42">,</op:operator>
		<call><name pos:line="100" pos:column="17">_filters</name><argument_list pos:line="100" pos:column="25">(<argument><expr><call><name pos:line="100" pos:column="26">TEXT</name><argument_list pos:line="100" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="31">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="100" pos:column="35">,</op:operator> <call><name pos:line="100" pos:column="37">_directory</name><argument_list pos:line="100" pos:column="47">(<argument><expr><call><name pos:line="100" pos:column="48">TEXT</name><argument_list pos:line="100" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="53">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> </member_list><block pos:line="100" pos:column="58">{}</block></constructor><empty_stmt pos:line="100" pos:column="60">;</empty_stmt>
</public>}</block>;</struct>

<comment type="line" pos:line="103" pos:column="1">//This class contains generic search functions as static functions for easy access</comment>
<class pos:line="104" pos:column="1">class <name pos:line="104" pos:column="7">Searching</name> <block pos:line="104" pos:column="17">{<private type="default" pos:line="104" pos:column="18">
</private><public pos:line="105" pos:column="1">public:
	<function_decl><type><specifier pos:line="106" pos:column="9">static</specifier> <name pos:line="106" pos:column="16">int</name></type> <name pos:line="106" pos:column="20">convertExtendedToString</name><parameter_list pos:line="106" pos:column="43">(<param><decl><type><specifier pos:line="106" pos:column="44">const</specifier> <name pos:line="106" pos:column="50">TCHAR</name> <type:modifier pos:line="106" pos:column="56">*</type:modifier></type> <name pos:line="106" pos:column="58">query</name></decl></param>, <param><decl><type><name pos:line="106" pos:column="65">TCHAR</name> <type:modifier pos:line="106" pos:column="71">*</type:modifier></type> <name pos:line="106" pos:column="73">result</name></decl></param>, <param><decl><type><name pos:line="106" pos:column="81">int</name></type> <name pos:line="106" pos:column="85">length</name></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><specifier pos:line="107" pos:column="9">static</specifier> <name pos:line="107" pos:column="16">TargetRange</name></type> <name pos:line="107" pos:column="28">t</name></decl>;</decl_stmt>
	<function><type><specifier pos:line="108" pos:column="9">static</specifier> <name pos:line="108" pos:column="16">int</name></type> <name pos:line="108" pos:column="20">buildSearchFlags</name><parameter_list pos:line="108" pos:column="36">(<param><decl><type><specifier pos:line="108" pos:column="37">const</specifier> <name pos:line="108" pos:column="43">FindOption</name> <type:modifier pos:line="108" pos:column="54">*</type:modifier></type> <name pos:line="108" pos:column="56">option</name></decl></param>)</parameter_list> <block pos:line="108" pos:column="64">{
		<return pos:line="109" pos:column="17">return	<expr><op:operator pos:line="109" pos:column="25">(</op:operator><name><name pos:line="109" pos:column="26">option</name><op:operator pos:line="109" pos:column="32">-&gt;</op:operator><name pos:line="109" pos:column="34">_isWholeWord</name></name> <op:operator pos:line="109" pos:column="47">?</op:operator> <name pos:line="109" pos:column="49">SCFIND_WHOLEWORD</name> <op:operator pos:line="109" pos:column="66">:</op:operator> <lit:literal type="number" pos:line="109" pos:column="68">0</lit:literal><op:operator pos:line="109" pos:column="69">)</op:operator> <op:operator pos:line="109" pos:column="71">|</op:operator>
				<op:operator pos:line="110" pos:column="33">(</op:operator><name><name pos:line="110" pos:column="34">option</name><op:operator pos:line="110" pos:column="40">-&gt;</op:operator><name pos:line="110" pos:column="42">_isMatchCase</name></name> <op:operator pos:line="110" pos:column="55">?</op:operator> <name pos:line="110" pos:column="57">SCFIND_MATCHCASE</name> <op:operator pos:line="110" pos:column="74">:</op:operator> <lit:literal type="number" pos:line="110" pos:column="76">0</lit:literal><op:operator pos:line="110" pos:column="77">)</op:operator> <op:operator pos:line="110" pos:column="79">|</op:operator>
				<op:operator pos:line="111" pos:column="33">(</op:operator><name><name pos:line="111" pos:column="34">option</name><op:operator pos:line="111" pos:column="40">-&gt;</op:operator><name pos:line="111" pos:column="42">_searchType</name></name> <op:operator pos:line="111" pos:column="54">==</op:operator> <name pos:line="111" pos:column="57">FindRegex</name> <op:operator pos:line="111" pos:column="67">?</op:operator> <name pos:line="111" pos:column="69">SCFIND_REGEXP</name><op:operator pos:line="111" pos:column="82">|</op:operator><name pos:line="111" pos:column="83">SCFIND_POSIX</name> <op:operator pos:line="111" pos:column="96">:</op:operator> <lit:literal type="number" pos:line="111" pos:column="98">0</lit:literal><op:operator pos:line="111" pos:column="99">)</op:operator> <op:operator pos:line="111" pos:column="101">|</op:operator>
				<op:operator pos:line="112" pos:column="33">(</op:operator><op:operator pos:line="112" pos:column="34">(</op:operator><name><name pos:line="112" pos:column="35">option</name><op:operator pos:line="112" pos:column="41">-&gt;</op:operator><name pos:line="112" pos:column="43">_searchType</name></name> <op:operator pos:line="112" pos:column="55">==</op:operator> <name pos:line="112" pos:column="58">FindRegex</name> <op:operator pos:line="112" pos:column="68">&amp;&amp;</op:operator> <name><name pos:line="112" pos:column="71">option</name><op:operator pos:line="112" pos:column="77">-&gt;</op:operator><name pos:line="112" pos:column="79">_dotMatchesNewline</name></name><op:operator pos:line="112" pos:column="97">)</op:operator> <op:operator pos:line="112" pos:column="99">?</op:operator> <name pos:line="112" pos:column="101">SCFIND_REGEXP_DOTMATCHESNL</name> <op:operator pos:line="112" pos:column="128">:</op:operator> <lit:literal type="number" pos:line="112" pos:column="130">0</lit:literal><op:operator pos:line="112" pos:column="131">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="113" pos:column="10">;</empty_stmt>
	<function_decl><type><specifier pos:line="114" pos:column="9">static</specifier> <name pos:line="114" pos:column="16">void</name></type> <name pos:line="114" pos:column="21">displaySectionCentered</name><parameter_list pos:line="114" pos:column="43">(<param><decl><type><name pos:line="114" pos:column="44">int</name></type> <name pos:line="114" pos:column="48">posStart</name></decl></param>, <param><decl><type><name pos:line="114" pos:column="58">int</name></type> <name pos:line="114" pos:column="62">posEnd</name></decl></param>, <param><decl><type><name pos:line="114" pos:column="70">ScintillaEditView</name> <type:modifier pos:line="114" pos:column="88">*</type:modifier></type> <name pos:line="114" pos:column="90">pEditView</name></decl></param>, <param><decl><type><name pos:line="114" pos:column="101">bool</name></type> <name pos:line="114" pos:column="106">isDownwards</name> <init pos:line="114" pos:column="118">= <expr><lit:literal type="boolean" pos:line="114" pos:column="120">true</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>

</public><private pos:line="116" pos:column="1">private:
	<function_decl><type><specifier pos:line="117" pos:column="9">static</specifier> <name pos:line="117" pos:column="16">bool</name></type> <name pos:line="117" pos:column="21">readBase</name><parameter_list pos:line="117" pos:column="29">(<param><decl><type><specifier pos:line="117" pos:column="30">const</specifier> <name pos:line="117" pos:column="36">TCHAR</name> <type:modifier pos:line="117" pos:column="42">*</type:modifier></type> <name pos:line="117" pos:column="44">str</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="49">int</name> <type:modifier pos:line="117" pos:column="53">*</type:modifier></type> <name pos:line="117" pos:column="55">value</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="62">int</name></type> <name pos:line="117" pos:column="66">base</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="72">int</name></type> <name pos:line="117" pos:column="76">size</name></decl></param>)</parameter_list>;</function_decl>

</private>}</block>;</class>

<comment type="line" pos:line="121" pos:column="1">//Finder: Dockable window that contains search results</comment>
<class pos:line="122" pos:column="1">class <name pos:line="122" pos:column="7">Finder</name> <super pos:line="122" pos:column="14">: <specifier pos:line="122" pos:column="16">public</specifier> <name pos:line="122" pos:column="23">DockingDlgInterface</name></super> <block pos:line="122" pos:column="43">{<private type="default" pos:line="122" pos:column="44">
<class_decl><specifier pos:line="123" pos:column="1">friend</specifier> class <name pos:line="123" pos:column="14">FindReplaceDlg</name>;</class_decl>
</private><public pos:line="124" pos:column="1">public:
	<constructor><name pos:line="125" pos:column="9">Finder</name><parameter_list pos:line="125" pos:column="15">()</parameter_list> <member_list pos:line="125" pos:column="18">: <call><name pos:line="125" pos:column="20">DockingDlgInterface</name><argument_list pos:line="125" pos:column="39">(<argument><expr><name pos:line="125" pos:column="40">IDD_FINDRESULT</name></expr></argument>)</argument_list></call><op:operator pos:line="125" pos:column="55">,</op:operator> <call><name pos:line="125" pos:column="57">_pMainFoundInfos</name><argument_list pos:line="125" pos:column="73">(<argument><expr><op:operator pos:line="125" pos:column="74">&amp;</op:operator><name pos:line="125" pos:column="75">_foundInfos1</name></expr></argument>)</argument_list></call><op:operator pos:line="125" pos:column="88">,</op:operator> <call><name pos:line="125" pos:column="90">_pMainMarkings</name><argument_list pos:line="125" pos:column="104">(<argument><expr><op:operator pos:line="125" pos:column="105">&amp;</op:operator><name pos:line="125" pos:column="106">_markings1</name></expr></argument>)</argument_list></call> </member_list><block pos:line="125" pos:column="118">{
		<expr_stmt><expr><name><name pos:line="126" pos:column="17">_MarkingsStruct</name><op:operator pos:line="126" pos:column="32">.</op:operator><name pos:line="126" pos:column="33">_length</name></name> <op:operator pos:line="126" pos:column="41">=</op:operator> <lit:literal type="number" pos:line="126" pos:column="43">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="127" pos:column="17">_MarkingsStruct</name><op:operator pos:line="127" pos:column="32">.</op:operator><name pos:line="127" pos:column="33">_markings</name></name> <op:operator pos:line="127" pos:column="43">=</op:operator> <name pos:line="127" pos:column="45">NULL</name></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="128" pos:column="10">;</empty_stmt>

	<destructor><name pos:line="130" pos:column="9">~<name pos:line="130" pos:column="10">Finder</name></name><parameter_list pos:line="130" pos:column="16">()</parameter_list> <block pos:line="130" pos:column="19">{
		<expr_stmt><expr><call><name><name pos:line="131" pos:column="17">_scintView</name><op:operator pos:line="131" pos:column="27">.</op:operator><name pos:line="131" pos:column="28">destroy</name></name><argument_list pos:line="131" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	}</block></destructor>
	<function><type><name pos:line="133" pos:column="9">void</name></type> <name pos:line="133" pos:column="14">init</name><parameter_list pos:line="133" pos:column="18">(<param><decl><type><name pos:line="133" pos:column="19">HINSTANCE</name></type> <name pos:line="133" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="133" pos:column="36">HWND</name></type> <name pos:line="133" pos:column="41">hPere</name></decl></param>, <param><decl><type><name pos:line="133" pos:column="48">ScintillaEditView</name> <type:modifier pos:line="133" pos:column="66">*</type:modifier><type:modifier pos:line="133" pos:column="67">*</type:modifier></type><name pos:line="133" pos:column="68">ppEditView</name></decl></param>)</parameter_list> <block pos:line="133" pos:column="80">{
		<expr_stmt><expr><call><name><name pos:line="134" pos:column="17">DockingDlgInterface</name><op:operator pos:line="134" pos:column="36">::</op:operator><name pos:line="134" pos:column="38">init</name></name><argument_list pos:line="134" pos:column="42">(<argument><expr><name pos:line="134" pos:column="43">hInst</name></expr></argument>, <argument><expr><name pos:line="134" pos:column="50">hPere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="135" pos:column="17">_ppEditView</name> <op:operator pos:line="135" pos:column="29">=</op:operator> <name pos:line="135" pos:column="31">ppEditView</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="136" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="138" pos:column="9">void</name></type> <name pos:line="138" pos:column="14">addSearchLine</name><parameter_list pos:line="138" pos:column="27">(<param><decl><type><specifier pos:line="138" pos:column="28">const</specifier> <name pos:line="138" pos:column="34">TCHAR</name> <type:modifier pos:line="138" pos:column="40">*</type:modifier></type><name pos:line="138" pos:column="41">searchName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="139" pos:column="9">void</name></type> <name pos:line="139" pos:column="14">addFileNameTitle</name><parameter_list pos:line="139" pos:column="30">(<param><decl><type><specifier pos:line="139" pos:column="31">const</specifier> <name pos:line="139" pos:column="37">TCHAR</name> <type:modifier pos:line="139" pos:column="43">*</type:modifier></type> <name pos:line="139" pos:column="45">fileName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="140" pos:column="9">void</name></type> <name pos:line="140" pos:column="14">addFileHitCount</name><parameter_list pos:line="140" pos:column="29">(<param><decl><type><name pos:line="140" pos:column="30">int</name></type> <name pos:line="140" pos:column="34">count</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="141" pos:column="9">void</name></type> <name pos:line="141" pos:column="14">addSearchHitCount</name><parameter_list pos:line="141" pos:column="31">(<param><decl><type><name pos:line="141" pos:column="32">int</name></type> <name pos:line="141" pos:column="36">count</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="142" pos:column="9">void</name></type> <name pos:line="142" pos:column="14">add</name><parameter_list pos:line="142" pos:column="17">(<param><decl><type><name pos:line="142" pos:column="18">FoundInfo</name></type> <name pos:line="142" pos:column="28">fi</name></decl></param>, <param><decl><type><name pos:line="142" pos:column="32">SearchResultMarking</name></type> <name pos:line="142" pos:column="52">mi</name></decl></param>, <param><decl><type><specifier pos:line="142" pos:column="56">const</specifier> <name pos:line="142" pos:column="62">TCHAR</name><type:modifier pos:line="142" pos:column="67">*</type:modifier></type> <name pos:line="142" pos:column="69">foundline</name></decl></param>, <param><decl><type><name pos:line="142" pos:column="80">int</name></type> <name pos:line="142" pos:column="84">lineNb</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="143" pos:column="9">void</name></type> <name pos:line="143" pos:column="14">setFinderStyle</name><parameter_list pos:line="143" pos:column="28">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="144" pos:column="9">void</name></type> <name pos:line="144" pos:column="14">removeAll</name><parameter_list pos:line="144" pos:column="23">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="145" pos:column="9">void</name></type> <name pos:line="145" pos:column="14">openAll</name><parameter_list pos:line="145" pos:column="21">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="146" pos:column="9">void</name></type> <name pos:line="146" pos:column="14">beginNewFilesSearch</name><parameter_list pos:line="146" pos:column="33">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="147" pos:column="9">void</name></type> <name pos:line="147" pos:column="14">finishFilesSearch</name><parameter_list pos:line="147" pos:column="31">(<param><decl><type><name pos:line="147" pos:column="32">int</name></type> <name pos:line="147" pos:column="36">count</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="148" pos:column="9">void</name></type> <name pos:line="148" pos:column="14">gotoNextFoundResult</name><parameter_list pos:line="148" pos:column="33">(<param><decl><type><name pos:line="148" pos:column="34">int</name></type> <name pos:line="148" pos:column="38">direction</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="149" pos:column="9">void</name></type> <name pos:line="149" pos:column="14">GotoFoundLine</name><parameter_list pos:line="149" pos:column="27">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="150" pos:column="9">void</name></type> <name pos:line="150" pos:column="14">DeleteResult</name><parameter_list pos:line="150" pos:column="26">()</parameter_list>;</function_decl>

</public><protected pos:line="152" pos:column="1">protected :
	<function_decl><type><specifier pos:line="153" pos:column="9">virtual</specifier> <name pos:line="153" pos:column="17">BOOL</name> <name pos:line="153" pos:column="22">CALLBACK</name></type> <name pos:line="153" pos:column="31">run_dlgProc</name><parameter_list pos:line="153" pos:column="42">(<param><decl><type><name pos:line="153" pos:column="43">UINT</name></type> <name pos:line="153" pos:column="48">message</name></decl></param>, <param><decl><type><name pos:line="153" pos:column="57">WPARAM</name></type> <name pos:line="153" pos:column="64">wParam</name></decl></param>, <param><decl><type><name pos:line="153" pos:column="72">LPARAM</name></type> <name pos:line="153" pos:column="79">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="154" pos:column="9">bool</name></type> <name pos:line="154" pos:column="14">notify</name><parameter_list pos:line="154" pos:column="20">(<param><decl><type><name pos:line="154" pos:column="21">SCNotification</name> <type:modifier pos:line="154" pos:column="36">*</type:modifier></type><name pos:line="154" pos:column="37">notification</name></decl></param>)</parameter_list>;</function_decl>

</protected><private pos:line="156" pos:column="1">private:

	<enum pos:line="158" pos:column="9">enum <block pos:line="158" pos:column="14">{ <decl><name pos:line="158" pos:column="16">searchHeaderLevel</name> <init pos:line="158" pos:column="34">= <expr><name pos:line="158" pos:column="36">SC_FOLDLEVELBASE</name> <op:operator pos:line="158" pos:column="53">+</op:operator> <lit:literal type="number" pos:line="158" pos:column="55">1</lit:literal></expr></init></decl><op:operator pos:line="158" pos:column="56">,</op:operator> <decl><name pos:line="158" pos:column="58">fileHeaderLevel</name></decl><op:operator pos:line="158" pos:column="73">,</op:operator> <decl><name pos:line="158" pos:column="75">resultLevel</name></decl> }</block>;</enum>

	<decl_stmt><decl><type><name pos:line="160" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="160" pos:column="27">*</type:modifier><type:modifier pos:line="160" pos:column="28">*</type:modifier></type><name pos:line="160" pos:column="29">_ppEditView</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="161" pos:column="9">std</name><op:operator pos:line="161" pos:column="12">::</op:operator><name><name pos:line="161" pos:column="14">vector</name><argument_list pos:line="161" pos:column="20">&lt;<argument><expr><name pos:line="161" pos:column="21">FoundInfo</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="161" pos:column="32">_foundInfos1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="162" pos:column="9">std</name><op:operator pos:line="162" pos:column="12">::</op:operator><name><name pos:line="162" pos:column="14">vector</name><argument_list pos:line="162" pos:column="20">&lt;<argument><expr><name pos:line="162" pos:column="21">FoundInfo</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="162" pos:column="32">_foundInfos2</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="163" pos:column="9">std</name><op:operator pos:line="163" pos:column="12">::</op:operator><name><name pos:line="163" pos:column="14">vector</name><argument_list pos:line="163" pos:column="20">&lt;<argument><expr><name pos:line="163" pos:column="21">FoundInfo</name></expr></argument>&gt;</argument_list></name></name><type:modifier pos:line="163" pos:column="31">*</type:modifier></type> <name pos:line="163" pos:column="33">_pMainFoundInfos</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="164" pos:column="9">std</name><op:operator pos:line="164" pos:column="12">::</op:operator><name><name pos:line="164" pos:column="14">vector</name><argument_list pos:line="164" pos:column="20">&lt;<argument><expr><name pos:line="164" pos:column="21">SearchResultMarking</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="164" pos:column="42">_markings1</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="165" pos:column="9">std</name><op:operator pos:line="165" pos:column="12">::</op:operator><name><name pos:line="165" pos:column="14">vector</name><argument_list pos:line="165" pos:column="20">&lt;<argument><expr><name pos:line="165" pos:column="21">SearchResultMarking</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="165" pos:column="42">_markings2</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="166" pos:column="9">std</name><op:operator pos:line="166" pos:column="12">::</op:operator><name><name pos:line="166" pos:column="14">vector</name><argument_list pos:line="166" pos:column="20">&lt;<argument><expr><name pos:line="166" pos:column="21">SearchResultMarking</name></expr></argument>&gt;</argument_list></name></name><type:modifier pos:line="166" pos:column="41">*</type:modifier></type> <name pos:line="166" pos:column="43">_pMainMarkings</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="167" pos:column="9">SearchResultMarkings</name></type> <name pos:line="167" pos:column="30">_MarkingsStruct</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="169" pos:column="9">ScintillaEditView</name></type> <name pos:line="169" pos:column="27">_scintView</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="170" pos:column="9">unsigned</name> <name pos:line="170" pos:column="18">int</name></type> <name pos:line="170" pos:column="22">nFoundFiles</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="172" pos:column="9">int</name></type> <name pos:line="172" pos:column="13">_lastFileHeaderPos</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="173" pos:column="9">int</name></type> <name pos:line="173" pos:column="13">_lastSearchHeaderPos</name></decl>;</decl_stmt>

	<function><type><name pos:line="175" pos:column="9">void</name></type> <name pos:line="175" pos:column="14">setFinderReadOnly</name><parameter_list pos:line="175" pos:column="31">(<param><decl><type><name pos:line="175" pos:column="32">bool</name></type> <name pos:line="175" pos:column="37">isReadOnly</name></decl></param>)</parameter_list> <block pos:line="175" pos:column="49">{
		<expr_stmt><expr><call><name><name pos:line="176" pos:column="17">_scintView</name><op:operator pos:line="176" pos:column="27">.</op:operator><name pos:line="176" pos:column="28">execute</name></name><argument_list pos:line="176" pos:column="35">(<argument><expr><name pos:line="176" pos:column="36">SCI_SETREADONLY</name></expr></argument>, <argument><expr><name pos:line="176" pos:column="53">isReadOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="177" pos:column="10">;</empty_stmt>

	<decl_stmt><decl><type><specifier pos:line="179" pos:column="9">static</specifier> <name pos:line="179" pos:column="16">FoundInfo</name></type> <name pos:line="179" pos:column="26">EmptyFoundInfo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="180" pos:column="9">static</specifier> <name pos:line="180" pos:column="16">SearchResultMarking</name></type> <name pos:line="180" pos:column="36">EmptySearchResultMarking</name></decl>;</decl_stmt>
</private>}</block>;</class>

<enum pos:line="183" pos:column="1">enum <name pos:line="183" pos:column="6">FindStatus</name> <block pos:line="183" pos:column="17">{ <decl><name pos:line="183" pos:column="19">FSFound</name></decl><op:operator pos:line="183" pos:column="26">,</op:operator> <decl><name pos:line="183" pos:column="28">FSNotFound</name></decl><op:operator pos:line="183" pos:column="38">,</op:operator> <decl><name pos:line="183" pos:column="40">FSTopReached</name></decl><op:operator pos:line="183" pos:column="52">,</op:operator> <decl><name pos:line="183" pos:column="54">FSEndReached</name></decl>}</block>;</enum>

<class pos:line="185" pos:column="1">class <name pos:line="185" pos:column="7">FindReplaceDlg</name> <super pos:line="185" pos:column="22">: <specifier pos:line="185" pos:column="24">public</specifier> <name pos:line="185" pos:column="31">StaticDialog</name></super>
<block pos:line="186" pos:column="1">{<private type="default" pos:line="186" pos:column="2">
<class_decl><specifier pos:line="187" pos:column="1">friend</specifier> class <name pos:line="187" pos:column="14">FindIncrementDlg</name>;</class_decl>
</private><public pos:line="188" pos:column="1">public :
	<decl_stmt><decl><type><specifier pos:line="189" pos:column="9">static</specifier> <name pos:line="189" pos:column="16">FindOption</name></type> <name pos:line="189" pos:column="27">_options</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="190" pos:column="9">static</specifier> <name pos:line="190" pos:column="16">FindOption</name><type:modifier pos:line="190" pos:column="26">*</type:modifier></type> <name pos:line="190" pos:column="28">_env</name></decl>;</decl_stmt>
	<constructor><name pos:line="191" pos:column="9">FindReplaceDlg</name><parameter_list pos:line="191" pos:column="23">()</parameter_list> <member_list pos:line="191" pos:column="26">: <call><name pos:line="191" pos:column="28">StaticDialog</name><argument_list pos:line="191" pos:column="40">()</argument_list></call><op:operator pos:line="191" pos:column="42">,</op:operator> <call><name pos:line="191" pos:column="44">_pFinder</name><argument_list pos:line="191" pos:column="52">(<argument><expr><name pos:line="191" pos:column="53">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="191" pos:column="58">,</op:operator> <call><name pos:line="191" pos:column="60">_isRTL</name><argument_list pos:line="191" pos:column="66">(<argument><expr><lit:literal type="boolean" pos:line="191" pos:column="67">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="191" pos:column="73">,</op:operator>\
		<call><name pos:line="192" pos:column="17">_fileNameLenMax</name><argument_list pos:line="192" pos:column="32">(<argument><expr><lit:literal type="number" pos:line="192" pos:column="33">1024</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="192" pos:column="39">{
		<expr_stmt><expr><name pos:line="193" pos:column="17">_uniFileName</name> <op:operator pos:line="193" pos:column="30">=</op:operator> <op:operator pos:line="193" pos:column="32">new</op:operator> <name><name pos:line="193" pos:column="36">char</name><index pos:line="193" pos:column="40">[<expr><op:operator pos:line="193" pos:column="41">(</op:operator><name pos:line="193" pos:column="42">_fileNameLenMax</name> <op:operator pos:line="193" pos:column="58">+</op:operator> <lit:literal type="number" pos:line="193" pos:column="60">3</lit:literal><op:operator pos:line="193" pos:column="61">)</op:operator> <op:operator pos:line="193" pos:column="63">*</op:operator> <lit:literal type="number" pos:line="193" pos:column="65">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="194" pos:column="17">_winVer</name> <op:operator pos:line="194" pos:column="25">=</op:operator> <op:operator pos:line="194" pos:column="27">(</op:operator><call><name><name pos:line="194" pos:column="28">NppParameters</name><op:operator pos:line="194" pos:column="41">::</op:operator><name pos:line="194" pos:column="43">getInstance</name></name><argument_list pos:line="194" pos:column="54">()</argument_list></call><op:operator pos:line="194" pos:column="56">)</op:operator><op:operator pos:line="194" pos:column="57">-&gt;</op:operator><call><name pos:line="194" pos:column="59">getWinVersion</name><argument_list pos:line="194" pos:column="72">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="195" pos:column="17">_env</name> <op:operator pos:line="195" pos:column="22">=</op:operator> <op:operator pos:line="195" pos:column="24">&amp;</op:operator><name pos:line="195" pos:column="25">_options</name></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="196" pos:column="10">;</empty_stmt>
	<destructor_decl><name pos:line="197" pos:column="9">~<name pos:line="197" pos:column="10">FindReplaceDlg</name></name><parameter_list pos:line="197" pos:column="24">()</parameter_list>;</destructor_decl>

	<function><type><name pos:line="199" pos:column="9">void</name></type> <name pos:line="199" pos:column="14">init</name><parameter_list pos:line="199" pos:column="18">(<param><decl><type><name pos:line="199" pos:column="19">HINSTANCE</name></type> <name pos:line="199" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="199" pos:column="36">HWND</name></type> <name pos:line="199" pos:column="41">hPere</name></decl></param>, <param><decl><type><name pos:line="199" pos:column="48">ScintillaEditView</name> <type:modifier pos:line="199" pos:column="66">*</type:modifier><type:modifier pos:line="199" pos:column="67">*</type:modifier></type><name pos:line="199" pos:column="68">ppEditView</name></decl></param>)</parameter_list> <block pos:line="199" pos:column="80">{
		<expr_stmt><expr><call><name><name pos:line="200" pos:column="17">Window</name><op:operator pos:line="200" pos:column="23">::</op:operator><name pos:line="200" pos:column="25">init</name></name><argument_list pos:line="200" pos:column="29">(<argument><expr><name pos:line="200" pos:column="30">hInst</name></expr></argument>, <argument><expr><name pos:line="200" pos:column="37">hPere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><op:operator pos:line="201" pos:column="21">!</op:operator><name pos:line="201" pos:column="22">ppEditView</name></expr>)</condition><then pos:line="201" pos:column="33">
			<throw pos:line="202" pos:column="25">throw <expr><call><name><name pos:line="202" pos:column="31">std</name><op:operator pos:line="202" pos:column="34">::</op:operator><name pos:line="202" pos:column="36">runtime_error</name></name><argument_list pos:line="202" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="202" pos:column="50">"FindIncrementDlg::init : ppEditView is null."</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>
		<expr_stmt><expr><name pos:line="203" pos:column="17">_ppEditView</name> <op:operator pos:line="203" pos:column="29">=</op:operator> <name pos:line="203" pos:column="31">ppEditView</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="204" pos:column="10">;</empty_stmt>

	<function_decl><type><specifier pos:line="206" pos:column="9">virtual</specifier> <name pos:line="206" pos:column="17">void</name></type> <name pos:line="206" pos:column="22">create</name><parameter_list pos:line="206" pos:column="28">(<param><decl><type><name pos:line="206" pos:column="29">int</name></type> <name pos:line="206" pos:column="33">dialogID</name></decl></param>, <param><decl><type><name pos:line="206" pos:column="43">bool</name></type> <name pos:line="206" pos:column="48">isRTL</name> <init pos:line="206" pos:column="54">= <expr><lit:literal type="boolean" pos:line="206" pos:column="56">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	
	<function_decl><type><name pos:line="208" pos:column="9">void</name></type> <name pos:line="208" pos:column="14">initOptionsFromDlg</name><parameter_list pos:line="208" pos:column="32">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="210" pos:column="9">void</name></type> <name pos:line="210" pos:column="14">doDialog</name><parameter_list pos:line="210" pos:column="22">(<param><decl><type><name pos:line="210" pos:column="23">DIALOG_TYPE</name></type> <name pos:line="210" pos:column="35">whichType</name></decl></param>, <param><decl><type><name pos:line="210" pos:column="46">bool</name></type> <name pos:line="210" pos:column="51">isRTL</name> <init pos:line="210" pos:column="57">= <expr><lit:literal type="boolean" pos:line="210" pos:column="59">false</lit:literal></expr></init></decl></param>, <name pos:line="210" pos:column="66">bool</name> <name pos:line="210" pos:column="71">toShow</name> <op:operator pos:line="210" pos:column="78">=</op:operator> <lit:literal type="boolean" pos:line="210" pos:column="80">true</lit:literal>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="211" pos:column="9">bool</name></type> <name pos:line="211" pos:column="14">processFindNext</name><parameter_list pos:line="211" pos:column="29">(<param><decl><type><specifier pos:line="211" pos:column="30">const</specifier> <name pos:line="211" pos:column="36">TCHAR</name> <type:modifier pos:line="211" pos:column="42">*</type:modifier></type><name pos:line="211" pos:column="43">txt2find</name></decl></param>, <param><decl><type><specifier pos:line="211" pos:column="53">const</specifier> <name pos:line="211" pos:column="59">FindOption</name> <type:modifier pos:line="211" pos:column="70">*</type:modifier></type><name pos:line="211" pos:column="71">options</name> <init pos:line="211" pos:column="79">= <expr><name pos:line="211" pos:column="81">NULL</name></expr></init></decl></param>, <name pos:line="211" pos:column="87">FindStatus</name> <type:modifier pos:line="211" pos:column="98">*</type:modifier><name pos:line="211" pos:column="99">oFindStatus</name> <op:operator pos:line="211" pos:column="111">=</op:operator> <name pos:line="211" pos:column="113">NULL</name>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="212" pos:column="9">bool</name></type> <name pos:line="212" pos:column="14">processReplace</name><parameter_list pos:line="212" pos:column="28">(<param><decl><type><specifier pos:line="212" pos:column="29">const</specifier> <name pos:line="212" pos:column="35">TCHAR</name> <type:modifier pos:line="212" pos:column="41">*</type:modifier></type><name pos:line="212" pos:column="42">txt2find</name></decl></param>, <param><decl><type><specifier pos:line="212" pos:column="52">const</specifier> <name pos:line="212" pos:column="58">TCHAR</name> <type:modifier pos:line="212" pos:column="64">*</type:modifier></type><name pos:line="212" pos:column="65">txt2replace</name></decl></param>, <param><decl><type><specifier pos:line="212" pos:column="78">const</specifier> <name pos:line="212" pos:column="84">FindOption</name> <type:modifier pos:line="212" pos:column="95">*</type:modifier></type><name pos:line="212" pos:column="96">options</name> <init pos:line="212" pos:column="104">= <expr><name pos:line="212" pos:column="106">NULL</name></expr></init></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="214" pos:column="9">int</name></type> <name pos:line="214" pos:column="13">markAll</name><parameter_list pos:line="214" pos:column="20">(<param><decl><type><specifier pos:line="214" pos:column="21">const</specifier> <name pos:line="214" pos:column="27">TCHAR</name> <type:modifier pos:line="214" pos:column="33">*</type:modifier></type><name pos:line="214" pos:column="34">txt2find</name></decl></param>, <param><decl><type><name pos:line="214" pos:column="44">int</name></type> <name pos:line="214" pos:column="48">styleID</name></decl></param>)</parameter_list>;</function_decl>
	<comment type="line" pos:line="215" pos:column="9">//int markAll2(const TCHAR *str2find);</comment>
	<function_decl><type><name pos:line="216" pos:column="9">int</name></type> <name pos:line="216" pos:column="13">markAllInc</name><parameter_list pos:line="216" pos:column="23">(<param><decl><type><specifier pos:line="216" pos:column="24">const</specifier> <name pos:line="216" pos:column="30">FindOption</name> <type:modifier pos:line="216" pos:column="41">*</type:modifier></type><name pos:line="216" pos:column="42">opt</name></decl></param>)</parameter_list>;</function_decl>
	

	<decl_stmt><decl><type><name pos:line="219" pos:column="9">int</name></type> <name pos:line="219" pos:column="13">processAll</name><argument_list pos:line="219" pos:column="23">(<argument><expr><name pos:line="219" pos:column="24">ProcessOperation</name> <name pos:line="219" pos:column="41">op</name></expr></argument>, <argument><expr pos:line="219" pos:column="45">const <name pos:line="219" pos:column="51">FindOption</name> <op:operator pos:line="219" pos:column="62">*</op:operator><name pos:line="219" pos:column="63">opt</name></expr></argument>, <argument><expr><name pos:line="219" pos:column="68">bool</name> <name pos:line="219" pos:column="73">isEntire</name> <op:operator pos:line="219" pos:column="82">=</op:operator> <lit:literal type="boolean" pos:line="219" pos:column="84">false</lit:literal></expr></argument>, <argument><expr pos:line="219" pos:column="91">const <name pos:line="219" pos:column="97">TCHAR</name> <op:operator pos:line="219" pos:column="103">*</op:operator><name pos:line="219" pos:column="104">fileName</name> <op:operator pos:line="219" pos:column="113">=</op:operator> <name pos:line="219" pos:column="115">NULL</name></expr></argument>, <argument><expr><name pos:line="219" pos:column="121">int</name> <name pos:line="219" pos:column="125">colourStyleID</name> <op:operator pos:line="219" pos:column="139">=</op:operator> <op:operator pos:line="219" pos:column="141">-</op:operator><lit:literal type="number" pos:line="219" pos:column="142">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
<comment type="line" pos:line="220" pos:column="1">//	int processAll(ProcessOperation op, const TCHAR *txt2find, const TCHAR *txt2replace, bool isEntire = false, const TCHAR *fileName = NULL, const FindOption *opt = NULL, int colourStyleID = -1);</comment>
	<decl_stmt><decl><type><name pos:line="221" pos:column="9">int</name></type> <name pos:line="221" pos:column="13">processRange</name><argument_list pos:line="221" pos:column="25">(<argument><expr><name pos:line="221" pos:column="26">ProcessOperation</name> <name pos:line="221" pos:column="43">op</name></expr></argument>, <argument><expr pos:line="221" pos:column="47">const <name pos:line="221" pos:column="53">TCHAR</name> <op:operator pos:line="221" pos:column="59">*</op:operator><name pos:line="221" pos:column="60">txt2find</name></expr></argument>, <argument><expr pos:line="221" pos:column="70">const <name pos:line="221" pos:column="76">TCHAR</name> <op:operator pos:line="221" pos:column="82">*</op:operator><name pos:line="221" pos:column="83">txt2replace</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="96">int</name> <name pos:line="221" pos:column="100">startRange</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="112">int</name> <name pos:line="221" pos:column="116">endRange</name></expr></argument>, <argument><expr pos:line="221" pos:column="126">const <name pos:line="221" pos:column="132">TCHAR</name> <op:operator pos:line="221" pos:column="138">*</op:operator><name pos:line="221" pos:column="139">fileName</name> <op:operator pos:line="221" pos:column="148">=</op:operator> <name pos:line="221" pos:column="150">NULL</name></expr></argument>, <argument><expr pos:line="221" pos:column="156">const <name pos:line="221" pos:column="162">FindOption</name> <op:operator pos:line="221" pos:column="173">*</op:operator><name pos:line="221" pos:column="174">opt</name> <op:operator pos:line="221" pos:column="178">=</op:operator> <name pos:line="221" pos:column="180">NULL</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="186">int</name> <name pos:line="221" pos:column="190">colourStyleID</name> <op:operator pos:line="221" pos:column="204">=</op:operator> <op:operator pos:line="221" pos:column="206">-</op:operator><lit:literal type="number" pos:line="221" pos:column="207">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
	<function_decl><type><name pos:line="222" pos:column="9">void</name></type> <name pos:line="222" pos:column="14">replaceAllInOpenedDocs</name><parameter_list pos:line="222" pos:column="36">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="223" pos:column="9">void</name></type> <name pos:line="223" pos:column="14">findAllIn</name><parameter_list pos:line="223" pos:column="23">(<param><decl><type><name pos:line="223" pos:column="24">InWhat</name></type> <name pos:line="223" pos:column="31">op</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="224" pos:column="9">void</name></type> <name pos:line="224" pos:column="14">setSearchText</name><parameter_list pos:line="224" pos:column="27">(<param><decl><type><name pos:line="224" pos:column="28">TCHAR</name> <type:modifier pos:line="224" pos:column="34">*</type:modifier></type> <name pos:line="224" pos:column="36">txt2find</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="226" pos:column="9">void</name></type> <name pos:line="226" pos:column="14">gotoNextFoundResult</name><parameter_list pos:line="226" pos:column="33">(<param><decl><type><name pos:line="226" pos:column="34">int</name></type> <name pos:line="226" pos:column="38">direction</name> <init pos:line="226" pos:column="48">= <expr><lit:literal type="number" pos:line="226" pos:column="50">0</lit:literal></expr></init></decl></param>)</parameter_list> <block pos:line="226" pos:column="53">{<if pos:line="226" pos:column="54">if <condition pos:line="226" pos:column="57">(<expr><name pos:line="226" pos:column="58">_pFinder</name></expr>)</condition><then pos:line="226" pos:column="67"> <expr_stmt><expr><call><name><name pos:line="226" pos:column="68">_pFinder</name><op:operator pos:line="226" pos:column="76">-&gt;</op:operator><name pos:line="226" pos:column="78">gotoNextFoundResult</name></name><argument_list pos:line="226" pos:column="97">(<argument><expr><name pos:line="226" pos:column="98">direction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>}</block></function><empty_stmt pos:line="226" pos:column="110">;</empty_stmt>

	<function><type><name pos:line="228" pos:column="9">void</name></type> <name pos:line="228" pos:column="14">putFindResult</name><parameter_list pos:line="228" pos:column="27">(<param><decl><type><name pos:line="228" pos:column="28">int</name></type> <name pos:line="228" pos:column="32">result</name></decl></param>)</parameter_list> <block pos:line="228" pos:column="40">{
		<expr_stmt><expr><name pos:line="229" pos:column="17">_findAllResult</name> <op:operator pos:line="229" pos:column="32">=</op:operator> <name pos:line="229" pos:column="34">result</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="230" pos:column="10">;</empty_stmt>
	<function><type><specifier pos:line="231" pos:column="9">const</specifier> <name pos:line="231" pos:column="15">TCHAR</name> <type:modifier pos:line="231" pos:column="21">*</type:modifier></type> <name pos:line="231" pos:column="23">getDir2Search</name><parameter_list pos:line="231" pos:column="36">()</parameter_list> <specifier pos:line="231" pos:column="39">const</specifier> <block pos:line="231" pos:column="45">{<return pos:line="231" pos:column="46">return <expr><call><name><name pos:line="231" pos:column="53">_env</name><op:operator pos:line="231" pos:column="57">-&gt;</op:operator><name pos:line="231" pos:column="59">_directory</name><op:operator pos:line="231" pos:column="69">.</op:operator><name pos:line="231" pos:column="70">c_str</name></name><argument_list pos:line="231" pos:column="75">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="231" pos:column="79">;</empty_stmt>

	<function_decl><type><name pos:line="233" pos:column="9">void</name></type> <name pos:line="233" pos:column="14">getPatterns</name><parameter_list pos:line="233" pos:column="25">(<param><decl><type><name><name pos:line="233" pos:column="26">vector</name><argument_list pos:line="233" pos:column="32">&lt;<argument><expr><name pos:line="233" pos:column="33">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="233" pos:column="49">&amp;</type:modifier></type> <name pos:line="233" pos:column="51">patternVect</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="235" pos:column="9">void</name></type> <name pos:line="235" pos:column="14">launchFindInFilesDlg</name><parameter_list pos:line="235" pos:column="34">()</parameter_list> <block pos:line="235" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="236" pos:column="17">doDialog</name><argument_list pos:line="236" pos:column="25">(<argument><expr><name pos:line="236" pos:column="26">FINDINFILES_DLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="237" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="239" pos:column="9">void</name></type> <name pos:line="239" pos:column="14">setFindInFilesDirFilter</name><parameter_list pos:line="239" pos:column="37">(<param><decl><type><specifier pos:line="239" pos:column="38">const</specifier> <name pos:line="239" pos:column="44">TCHAR</name> <type:modifier pos:line="239" pos:column="50">*</type:modifier></type><name pos:line="239" pos:column="51">dir</name></decl></param>, <param><decl><type><specifier pos:line="239" pos:column="56">const</specifier> <name pos:line="239" pos:column="62">TCHAR</name> <type:modifier pos:line="239" pos:column="68">*</type:modifier></type><name pos:line="239" pos:column="69">filters</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="241" pos:column="9">generic_string</name></type> <name pos:line="241" pos:column="24">getText2search</name><parameter_list pos:line="241" pos:column="38">()</parameter_list> <specifier pos:line="241" pos:column="41">const</specifier> <block pos:line="241" pos:column="47">{
		<return pos:line="242" pos:column="17">return <expr><name><name pos:line="242" pos:column="24">_env</name><op:operator pos:line="242" pos:column="28">-&gt;</op:operator><name pos:line="242" pos:column="30">_str2Search</name></name></expr>;</return>
	}</block></function><empty_stmt pos:line="243" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="245" pos:column="9">const</specifier> <name pos:line="245" pos:column="15">generic_string</name> <type:modifier pos:line="245" pos:column="30">&amp;</type:modifier></type> <name pos:line="245" pos:column="32">getFilters</name><parameter_list pos:line="245" pos:column="42">()</parameter_list> <specifier pos:line="245" pos:column="45">const</specifier> <block pos:line="245" pos:column="51">{<return pos:line="245" pos:column="52">return <expr><name><name pos:line="245" pos:column="59">_env</name><op:operator pos:line="245" pos:column="63">-&gt;</op:operator><name pos:line="245" pos:column="65">_filters</name></name></expr>;</return>}</block></function><empty_stmt pos:line="245" pos:column="75">;</empty_stmt>
	<function><type><specifier pos:line="246" pos:column="9">const</specifier> <name pos:line="246" pos:column="15">generic_string</name> <type:modifier pos:line="246" pos:column="30">&amp;</type:modifier></type> <name pos:line="246" pos:column="32">getDirectory</name><parameter_list pos:line="246" pos:column="44">()</parameter_list> <specifier pos:line="246" pos:column="47">const</specifier> <block pos:line="246" pos:column="53">{<return pos:line="246" pos:column="54">return <expr><name><name pos:line="246" pos:column="61">_env</name><op:operator pos:line="246" pos:column="65">-&gt;</op:operator><name pos:line="246" pos:column="67">_directory</name></name></expr>;</return>}</block></function><empty_stmt pos:line="246" pos:column="79">;</empty_stmt>
	<function><type><specifier pos:line="247" pos:column="9">const</specifier> <name pos:line="247" pos:column="15">FindOption</name> <type:modifier pos:line="247" pos:column="26">&amp;</type:modifier></type> <name pos:line="247" pos:column="28">getCurrentOptions</name><parameter_list pos:line="247" pos:column="45">()</parameter_list> <specifier pos:line="247" pos:column="48">const</specifier> <block pos:line="247" pos:column="54">{<return pos:line="247" pos:column="55">return <expr><op:operator pos:line="247" pos:column="62">*</op:operator><name pos:line="247" pos:column="63">_env</name></expr>;</return>}</block></function><empty_stmt pos:line="247" pos:column="69">;</empty_stmt>
	<function><type><name pos:line="248" pos:column="9">bool</name></type> <name pos:line="248" pos:column="14">isRecursive</name><parameter_list pos:line="248" pos:column="25">()</parameter_list> <specifier pos:line="248" pos:column="28">const</specifier> <block pos:line="248" pos:column="34">{ <return pos:line="248" pos:column="36">return <expr><name><name pos:line="248" pos:column="43">_env</name><op:operator pos:line="248" pos:column="47">-&gt;</op:operator><name pos:line="248" pos:column="49">_isRecursive</name></name></expr>;</return> }</block></function><empty_stmt pos:line="248" pos:column="64">;</empty_stmt>
	<function><type><name pos:line="249" pos:column="9">bool</name></type> <name pos:line="249" pos:column="14">isInHiddenDir</name><parameter_list pos:line="249" pos:column="27">()</parameter_list> <specifier pos:line="249" pos:column="30">const</specifier> <block pos:line="249" pos:column="36">{ <return pos:line="249" pos:column="38">return <expr><name><name pos:line="249" pos:column="45">_env</name><op:operator pos:line="249" pos:column="49">-&gt;</op:operator><name pos:line="249" pos:column="51">_isInHiddenDir</name></name></expr>;</return> }</block></function><empty_stmt pos:line="249" pos:column="68">;</empty_stmt>
	<function_decl><type><name pos:line="250" pos:column="9">void</name></type> <name pos:line="250" pos:column="14">saveFindHistory</name><parameter_list pos:line="250" pos:column="29">()</parameter_list>;</function_decl>
	<function><type><name pos:line="251" pos:column="9">void</name></type> <name pos:line="251" pos:column="14">changeTabName</name><parameter_list pos:line="251" pos:column="27">(<param><decl><type><name pos:line="251" pos:column="28">DIALOG_TYPE</name></type> <name pos:line="251" pos:column="40">index</name></decl></param>, <param><decl><type><specifier pos:line="251" pos:column="47">const</specifier> <name pos:line="251" pos:column="53">TCHAR</name> <type:modifier pos:line="251" pos:column="59">*</type:modifier></type><name pos:line="251" pos:column="60">name2change</name></decl></param>)</parameter_list> <block pos:line="251" pos:column="73">{
		<decl_stmt><decl><type><name pos:line="252" pos:column="17">TCITEM</name></type> <name pos:line="252" pos:column="24">tie</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="253" pos:column="17">tie</name><op:operator pos:line="253" pos:column="20">.</op:operator><name pos:line="253" pos:column="21">mask</name></name> <op:operator pos:line="253" pos:column="26">=</op:operator> <name pos:line="253" pos:column="28">TCIF_TEXT</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="254" pos:column="17">tie</name><op:operator pos:line="254" pos:column="20">.</op:operator><name pos:line="254" pos:column="21">pszText</name></name> <op:operator pos:line="254" pos:column="29">=</op:operator> <op:operator pos:line="254" pos:column="31">(</op:operator><name pos:line="254" pos:column="32">TCHAR</name> <op:operator pos:line="254" pos:column="38">*</op:operator><op:operator pos:line="254" pos:column="39">)</op:operator><name pos:line="254" pos:column="40">name2change</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="255" pos:column="17">TabCtrl_SetItem</name><argument_list pos:line="255" pos:column="32">(<argument><expr><call><name><name pos:line="255" pos:column="33">_tab</name><op:operator pos:line="255" pos:column="37">.</op:operator><name pos:line="255" pos:column="38">getHSelf</name></name><argument_list pos:line="255" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="255" pos:column="50">index</name></expr></argument>, <argument><expr><op:operator pos:line="255" pos:column="57">&amp;</op:operator><name pos:line="255" pos:column="58">tie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>
	<function><type><name pos:line="257" pos:column="9">void</name></type> <name pos:line="257" pos:column="14">beginNewFilesSearch</name><parameter_list pos:line="257" pos:column="33">()</parameter_list>
	<block pos:line="258" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="259" pos:column="17">_pFinder</name><op:operator pos:line="259" pos:column="25">-&gt;</op:operator><name pos:line="259" pos:column="27">beginNewFilesSearch</name></name><argument_list pos:line="259" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="260" pos:column="17">_pFinder</name><op:operator pos:line="260" pos:column="25">-&gt;</op:operator><name pos:line="260" pos:column="27">addSearchLine</name></name><argument_list pos:line="260" pos:column="40">(<argument><expr><call><name pos:line="260" pos:column="41">getText2search</name><argument_list pos:line="260" pos:column="55">()</argument_list></call><op:operator pos:line="260" pos:column="57">.</op:operator><call><name pos:line="260" pos:column="58">c_str</name><argument_list pos:line="260" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><name pos:line="263" pos:column="9">void</name></type> <name pos:line="263" pos:column="14">finishFilesSearch</name><parameter_list pos:line="263" pos:column="31">(<param><decl><type><name pos:line="263" pos:column="32">int</name></type> <name pos:line="263" pos:column="36">count</name></decl></param>)</parameter_list>
	<block pos:line="264" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="265" pos:column="17">_pFinder</name><op:operator pos:line="265" pos:column="25">-&gt;</op:operator><name pos:line="265" pos:column="27">finishFilesSearch</name></name><argument_list pos:line="265" pos:column="44">(<argument><expr><name pos:line="265" pos:column="45">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

	<function><type><name pos:line="268" pos:column="9">void</name></type> <name pos:line="268" pos:column="14">focusOnFinder</name><parameter_list pos:line="268" pos:column="27">()</parameter_list> <block pos:line="268" pos:column="30">{
		<comment type="line" pos:line="269" pos:column="17">// Show finder and set focus</comment>
		<if pos:line="270" pos:column="17">if <condition pos:line="270" pos:column="20">(<expr><name pos:line="270" pos:column="21">_pFinder</name></expr>)</condition><then pos:line="270" pos:column="30"> 
		<block pos:line="271" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="272" pos:column="25">::</op:operator><name pos:line="272" pos:column="27">SendMessage</name></name><argument_list pos:line="272" pos:column="38">(<argument><expr><name pos:line="272" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="272" pos:column="49">NPPM_DMMSHOW</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="272" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="272" pos:column="66">(</op:operator><name pos:line="272" pos:column="67">LPARAM</name><op:operator pos:line="272" pos:column="73">)</op:operator><call><name><name pos:line="272" pos:column="74">_pFinder</name><op:operator pos:line="272" pos:column="82">-&gt;</op:operator><name pos:line="272" pos:column="84">getHSelf</name></name><argument_list pos:line="272" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="273" pos:column="25">_pFinder</name><op:operator pos:line="273" pos:column="33">-&gt;</op:operator><name pos:line="273" pos:column="35">_scintView</name><op:operator pos:line="273" pos:column="45">.</op:operator><name pos:line="273" pos:column="46">getFocus</name></name><argument_list pos:line="273" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></function><empty_stmt pos:line="275" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="277" pos:column="9">HWND</name></type> <name pos:line="277" pos:column="14">getHFindResults</name><parameter_list pos:line="277" pos:column="29">()</parameter_list> <block pos:line="277" pos:column="32">{
		<if pos:line="278" pos:column="17">if <condition pos:line="278" pos:column="20">(<expr><name pos:line="278" pos:column="21">_pFinder</name></expr>)</condition><then pos:line="278" pos:column="30">
			<return pos:line="279" pos:column="25">return <expr><call><name><name pos:line="279" pos:column="32">_pFinder</name><op:operator pos:line="279" pos:column="40">-&gt;</op:operator><name pos:line="279" pos:column="42">_scintView</name><op:operator pos:line="279" pos:column="52">.</op:operator><name pos:line="279" pos:column="53">getHSelf</name></name><argument_list pos:line="279" pos:column="61">()</argument_list></call></expr>;</return></then></if>
		<return pos:line="280" pos:column="17">return <expr><name pos:line="280" pos:column="24">NULL</name></expr>;</return>
	}</block></function>

	<function><type><name pos:line="283" pos:column="9">void</name></type> <name pos:line="283" pos:column="14">updateFinderScintilla</name><parameter_list pos:line="283" pos:column="35">()</parameter_list> <block pos:line="283" pos:column="38">{
		<if pos:line="284" pos:column="17">if <condition pos:line="284" pos:column="20">(<expr><name pos:line="284" pos:column="21">_pFinder</name> <op:operator pos:line="284" pos:column="30">&amp;&amp;</op:operator> <call><name><name pos:line="284" pos:column="33">_pFinder</name><op:operator pos:line="284" pos:column="41">-&gt;</op:operator><name pos:line="284" pos:column="43">isCreated</name></name><argument_list pos:line="284" pos:column="52">()</argument_list></call> <op:operator pos:line="284" pos:column="55">&amp;&amp;</op:operator> <call><name><name pos:line="284" pos:column="58">_pFinder</name><op:operator pos:line="284" pos:column="66">-&gt;</op:operator><name pos:line="284" pos:column="68">isVisible</name></name><argument_list pos:line="284" pos:column="77">()</argument_list></call></expr>)</condition><then pos:line="284" pos:column="80">
		<block pos:line="285" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="286" pos:column="25">_pFinder</name><op:operator pos:line="286" pos:column="33">-&gt;</op:operator><name pos:line="286" pos:column="35">setFinderStyle</name></name><argument_list pos:line="286" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></function>
	<function_decl><type><name pos:line="289" pos:column="9">void</name></type> <name pos:line="289" pos:column="14">execSavedCommand</name><parameter_list pos:line="289" pos:column="30">(<param><decl><type><name pos:line="289" pos:column="31">int</name></type> <name pos:line="289" pos:column="35">cmd</name></decl></param>, <param><decl><type><name pos:line="289" pos:column="40">int</name></type> <name pos:line="289" pos:column="44">intValue</name></decl></param>, <param><decl><type><name pos:line="289" pos:column="54">generic_string</name></type> <name pos:line="289" pos:column="69">stringValue</name></decl></param>)</parameter_list>;</function_decl>

</public><protected pos:line="291" pos:column="1">protected :
	<function_decl><type><specifier pos:line="292" pos:column="9">virtual</specifier> <name pos:line="292" pos:column="17">BOOL</name> <name pos:line="292" pos:column="22">CALLBACK</name></type> <name pos:line="292" pos:column="31">run_dlgProc</name><parameter_list pos:line="292" pos:column="42">(<param><decl><type><name pos:line="292" pos:column="43">UINT</name></type> <name pos:line="292" pos:column="48">message</name></decl></param>, <param><decl><type><name pos:line="292" pos:column="57">WPARAM</name></type> <name pos:line="292" pos:column="64">wParam</name></decl></param>, <param><decl><type><name pos:line="292" pos:column="72">LPARAM</name></type> <name pos:line="292" pos:column="79">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="293" pos:column="9">void</name></type> <name pos:line="293" pos:column="14">addText2Combo</name><parameter_list pos:line="293" pos:column="27">(<param><decl><type><specifier pos:line="293" pos:column="28">const</specifier> <name pos:line="293" pos:column="34">TCHAR</name> <type:modifier pos:line="293" pos:column="40">*</type:modifier></type> <name pos:line="293" pos:column="42">txt2add</name></decl></param>, <param><decl><type><name pos:line="293" pos:column="51">HWND</name></type> <name pos:line="293" pos:column="56">comboID</name></decl></param>, <param><decl><type><name pos:line="293" pos:column="65">bool</name></type> <name pos:line="293" pos:column="70">isUTF8</name> <init pos:line="293" pos:column="77">= <expr><lit:literal type="boolean" pos:line="293" pos:column="79">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="294" pos:column="9">generic_string</name></type> <name pos:line="294" pos:column="24">getTextFromCombo</name><parameter_list pos:line="294" pos:column="40">(<param><decl><type><name pos:line="294" pos:column="41">HWND</name></type> <name pos:line="294" pos:column="46">hCombo</name></decl></param>, <param><decl><type><name pos:line="294" pos:column="54">bool</name></type> <name pos:line="294" pos:column="59">isUnicode</name> <init pos:line="294" pos:column="69">= <expr><lit:literal type="boolean" pos:line="294" pos:column="71">false</lit:literal></expr></init></decl></param>)</parameter_list> <specifier pos:line="294" pos:column="78">const</specifier>;</function_decl>
	<decl_stmt><decl><type><specifier pos:line="295" pos:column="9">static</specifier> <name pos:line="295" pos:column="16">LONG</name></type> <name pos:line="295" pos:column="21">originalFinderProc</name></decl>;</decl_stmt>

	<comment type="line" pos:line="297" pos:column="9">// Window procedure for the finder</comment>
	<function_decl><type><specifier pos:line="298" pos:column="9">static</specifier> <name pos:line="298" pos:column="16">LRESULT</name> <name pos:line="298" pos:column="24">FAR</name> <name pos:line="298" pos:column="28">PASCAL</name></type> <name pos:line="298" pos:column="35">finderProc</name><parameter_list pos:line="298" pos:column="45">(<param><decl><type><name pos:line="298" pos:column="46">HWND</name></type> <name pos:line="298" pos:column="51">hwnd</name></decl></param>, <param><decl><type><name pos:line="298" pos:column="57">UINT</name></type> <name pos:line="298" pos:column="62">message</name></decl></param>, <param><decl><type><name pos:line="298" pos:column="71">WPARAM</name></type> <name pos:line="298" pos:column="78">wParam</name></decl></param>, <param><decl><type><name pos:line="298" pos:column="86">LPARAM</name></type> <name pos:line="298" pos:column="93">lParam</name></decl></param>)</parameter_list>;</function_decl>

    <function_decl><type><name pos:line="300" pos:column="5">void</name></type> <name pos:line="300" pos:column="10">combo2ExtendedMode</name><parameter_list pos:line="300" pos:column="28">(<param><decl><type><name pos:line="300" pos:column="29">int</name></type> <name pos:line="300" pos:column="33">comboID</name></decl></param>)</parameter_list>;</function_decl>

</protected><private pos:line="302" pos:column="1">private :

	<decl_stmt><decl><type><name pos:line="304" pos:column="9">DIALOG_TYPE</name></type> <name pos:line="304" pos:column="21">_currentStatus</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="305" pos:column="9">RECT</name></type> <name pos:line="305" pos:column="14">_findClosePos</name></decl><op:operator pos:line="305" pos:column="27">,</op:operator> <decl><type ref="prev"/><name pos:line="305" pos:column="29">_replaceClosePos</name></decl><op:operator pos:line="305" pos:column="45">,</op:operator> <decl><type ref="prev"/><name pos:line="305" pos:column="47">_findInFilesClosePos</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="307" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="307" pos:column="27">*</type:modifier><type:modifier pos:line="307" pos:column="28">*</type:modifier></type><name pos:line="307" pos:column="29">_ppEditView</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="308" pos:column="9">Finder</name>  <type:modifier pos:line="308" pos:column="17">*</type:modifier></type><name pos:line="308" pos:column="18">_pFinder</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="309" pos:column="9">bool</name></type> <name pos:line="309" pos:column="14">_isRTL</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="311" pos:column="9">int</name></type> <name pos:line="311" pos:column="13">_findAllResult</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="312" pos:column="9">TCHAR</name></type> <name><name pos:line="312" pos:column="15">_findAllResultStr</name><index pos:line="312" pos:column="32">[<expr><lit:literal type="number" pos:line="312" pos:column="33">1024</lit:literal></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="314" pos:column="9">int</name></type> <name pos:line="314" pos:column="13">_fileNameLenMax</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="315" pos:column="9">char</name> <type:modifier pos:line="315" pos:column="14">*</type:modifier></type><name pos:line="315" pos:column="15">_uniFileName</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="317" pos:column="9">TabBar</name></type> <name pos:line="317" pos:column="16">_tab</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="318" pos:column="9">winVer</name></type> <name pos:line="318" pos:column="16">_winVer</name></decl>;</decl_stmt>

	<function_decl><type><name pos:line="320" pos:column="9">void</name></type> <name pos:line="320" pos:column="14">enableReplaceFunc</name><parameter_list pos:line="320" pos:column="31">(<param><decl><type><name pos:line="320" pos:column="32">bool</name></type> <name pos:line="320" pos:column="37">isEnable</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="321" pos:column="9">void</name></type> <name pos:line="321" pos:column="14">enableFindInFilesControls</name><parameter_list pos:line="321" pos:column="39">(<param><decl><type><name pos:line="321" pos:column="40">bool</name></type> <name pos:line="321" pos:column="45">isEnable</name> <init pos:line="321" pos:column="54">= <expr><lit:literal type="boolean" pos:line="321" pos:column="56">true</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="322" pos:column="9">void</name></type> <name pos:line="322" pos:column="14">enableFindInFilesFunc</name><parameter_list pos:line="322" pos:column="35">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="323" pos:column="9">void</name></type> <name pos:line="323" pos:column="14">enableMarkAllControls</name><parameter_list pos:line="323" pos:column="35">(<param><decl><type><name pos:line="323" pos:column="36">bool</name></type> <name pos:line="323" pos:column="41">isEnable</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="324" pos:column="9">void</name></type> <name pos:line="324" pos:column="14">enableMarkFunc</name><parameter_list pos:line="324" pos:column="28">()</parameter_list>;</function_decl>

	<function><type><name pos:line="326" pos:column="9">void</name></type> <name pos:line="326" pos:column="14">setDefaultButton</name><parameter_list pos:line="326" pos:column="30">(<param><decl><type><name pos:line="326" pos:column="31">int</name></type> <name pos:line="326" pos:column="35">nID</name></decl></param>)</parameter_list> <block pos:line="326" pos:column="40">{
		<expr_stmt><expr><call><name pos:line="327" pos:column="17">SendMessage</name><argument_list pos:line="327" pos:column="28">(<argument><expr><name pos:line="327" pos:column="29">_hSelf</name></expr></argument>, <argument><expr><name pos:line="327" pos:column="37">DM_SETDEFID</name></expr></argument>, <argument><expr><op:operator pos:line="327" pos:column="50">(</op:operator><name pos:line="327" pos:column="51">WPARAM</name><op:operator pos:line="327" pos:column="57">)</op:operator><name pos:line="327" pos:column="58">nID</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="327" pos:column="63">0L</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="328" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="330" pos:column="9">void</name></type> <name pos:line="330" pos:column="14">gotoCorrectTab</name><parameter_list pos:line="330" pos:column="28">()</parameter_list> <block pos:line="330" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="331" pos:column="17">int</name></type> <name pos:line="331" pos:column="21">currentIndex</name> <init pos:line="331" pos:column="34">= <expr><call><name><name pos:line="331" pos:column="36">_tab</name><op:operator pos:line="331" pos:column="40">.</op:operator><name pos:line="331" pos:column="41">getCurrentTabIndex</name></name><argument_list pos:line="331" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="332" pos:column="17">if <condition pos:line="332" pos:column="20">(<expr><name pos:line="332" pos:column="21">currentIndex</name> <op:operator pos:line="332" pos:column="34">!=</op:operator> <name pos:line="332" pos:column="37">_currentStatus</name></expr>)</condition><then pos:line="332" pos:column="52">
			<expr_stmt><expr><call><name><name pos:line="333" pos:column="25">_tab</name><op:operator pos:line="333" pos:column="29">.</op:operator><name pos:line="333" pos:column="30">activateAt</name></name><argument_list pos:line="333" pos:column="40">(<argument><expr><name pos:line="333" pos:column="41">_currentStatus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></function><empty_stmt pos:line="334" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="336" pos:column="9">void</name></type> <name pos:line="336" pos:column="14">updateCombos</name><parameter_list pos:line="336" pos:column="26">()</parameter_list>;</function_decl>
	<function><type><name pos:line="337" pos:column="9">void</name></type> <name pos:line="337" pos:column="14">updateCombo</name><parameter_list pos:line="337" pos:column="25">(<param><decl><type><name pos:line="337" pos:column="26">int</name></type> <name pos:line="337" pos:column="30">comboID</name></decl></param>)</parameter_list> <block pos:line="337" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="338" pos:column="17">bool</name></type> <name pos:line="338" pos:column="22">isUnicode</name> <init pos:line="338" pos:column="32">= <expr><call><name pos:line="338" pos:column="34">(<type:modifier pos:line="338" pos:column="35">*</type:modifier><name pos:line="338" pos:column="36">_ppEditView</name>)<op:operator pos:line="338" pos:column="48">-&gt;</op:operator><name pos:line="338" pos:column="50">getCurrentBuffer</name></name><argument_list pos:line="338" pos:column="66">()</argument_list></call><op:operator pos:line="338" pos:column="68">-&gt;</op:operator><call><name pos:line="338" pos:column="70">getUnicodeMode</name><argument_list pos:line="338" pos:column="84">()</argument_list></call> <op:operator pos:line="338" pos:column="87">!=</op:operator> <name pos:line="338" pos:column="90">uni8Bit</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="339" pos:column="17">HWND</name></type> <name pos:line="339" pos:column="22">hCombo</name> <init pos:line="339" pos:column="29">= <expr><call><name><op:operator pos:line="339" pos:column="31">::</op:operator><name pos:line="339" pos:column="33">GetDlgItem</name></name><argument_list pos:line="339" pos:column="43">(<argument><expr><name pos:line="339" pos:column="44">_hSelf</name></expr></argument>, <argument><expr><name pos:line="339" pos:column="52">comboID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="340" pos:column="17">addText2Combo</name><argument_list pos:line="340" pos:column="30">(<argument><expr><call><name pos:line="340" pos:column="31">getTextFromCombo</name><argument_list pos:line="340" pos:column="47">(<argument><expr><name pos:line="340" pos:column="48">hCombo</name></expr></argument>, <argument><expr><name pos:line="340" pos:column="56">isUnicode</name></expr></argument>)</argument_list></call><op:operator pos:line="340" pos:column="66">.</op:operator><call><name pos:line="340" pos:column="67">c_str</name><argument_list pos:line="340" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="340" pos:column="76">hCombo</name></expr></argument>, <argument><expr><name pos:line="340" pos:column="84">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="341" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="342" pos:column="9">void</name></type> <name pos:line="342" pos:column="14">fillFindHistory</name><parameter_list pos:line="342" pos:column="29">()</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="343" pos:column="5">void</name></type> <name pos:line="343" pos:column="10">fillComboHistory</name><parameter_list pos:line="343" pos:column="26">(<param><decl><type><name pos:line="343" pos:column="27">int</name></type> <name pos:line="343" pos:column="31">id</name></decl></param>, <param><decl><type><specifier pos:line="343" pos:column="35">const</specifier> <name><name pos:line="343" pos:column="41">std</name><op:operator pos:line="343" pos:column="44">::</op:operator><name><name pos:line="343" pos:column="46">vector</name><argument_list pos:line="343" pos:column="52">&lt;<argument><expr><name pos:line="343" pos:column="53">generic_string</name></expr></argument>&gt;</argument_list></name></name> <type:modifier pos:line="343" pos:column="69">&amp;</type:modifier></type> <name pos:line="343" pos:column="71">strings</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="344" pos:column="5">int</name></type> <name pos:line="344" pos:column="9">saveComboHistory</name><parameter_list pos:line="344" pos:column="25">(<param><decl><type><name pos:line="344" pos:column="26">int</name></type> <name pos:line="344" pos:column="30">id</name></decl></param>, <param><decl><type><name pos:line="344" pos:column="34">int</name></type> <name pos:line="344" pos:column="38">maxcount</name></decl></param>, <param><decl><type><name><name pos:line="344" pos:column="48">vector</name><argument_list pos:line="344" pos:column="54">&lt;<argument><expr><name pos:line="344" pos:column="55">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="344" pos:column="71">&amp;</type:modifier></type> <name pos:line="344" pos:column="73">strings</name></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><specifier pos:line="345" pos:column="9">static</specifier> <specifier pos:line="345" pos:column="16">const</specifier> <name pos:line="345" pos:column="22">int</name></type> <name pos:line="345" pos:column="26">FR_OP_FIND</name> <init pos:line="345" pos:column="37">= <expr><lit:literal type="number" pos:line="345" pos:column="39">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="346" pos:column="9">static</specifier> <specifier pos:line="346" pos:column="16">const</specifier> <name pos:line="346" pos:column="22">int</name></type> <name pos:line="346" pos:column="26">FR_OP_REPLACE</name> <init pos:line="346" pos:column="40">= <expr><lit:literal type="number" pos:line="346" pos:column="42">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="347" pos:column="9">static</specifier> <specifier pos:line="347" pos:column="16">const</specifier> <name pos:line="347" pos:column="22">int</name></type> <name pos:line="347" pos:column="26">FR_OP_FIF</name> <init pos:line="347" pos:column="36">= <expr><lit:literal type="number" pos:line="347" pos:column="38">4</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="348" pos:column="9">static</specifier> <specifier pos:line="348" pos:column="16">const</specifier> <name pos:line="348" pos:column="22">int</name></type> <name pos:line="348" pos:column="26">FR_OP_GLOBAL</name> <init pos:line="348" pos:column="39">= <expr><lit:literal type="number" pos:line="348" pos:column="41">8</lit:literal></expr></init></decl>;</decl_stmt>
	<function_decl><type><name pos:line="349" pos:column="9">void</name></type> <name pos:line="349" pos:column="14">saveInMacro</name><parameter_list pos:line="349" pos:column="25">(<param><decl><type><name pos:line="349" pos:column="26">int</name></type> <name pos:line="349" pos:column="30">cmd</name></decl></param>, <param><decl><type><name pos:line="349" pos:column="35">int</name></type> <name pos:line="349" pos:column="39">cmdType</name></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<comment type="line" pos:line="352" pos:column="1">//FindIncrementDlg: incremental search dialog, docked in rebar</comment>
<class pos:line="353" pos:column="1">class <name pos:line="353" pos:column="7">FindIncrementDlg</name> <super pos:line="353" pos:column="24">: <specifier pos:line="353" pos:column="26">public</specifier> <name pos:line="353" pos:column="33">StaticDialog</name></super>
<block pos:line="354" pos:column="1">{<private type="default" pos:line="354" pos:column="2">
</private><public pos:line="355" pos:column="1">public :
	<constructor><name pos:line="356" pos:column="9">FindIncrementDlg</name><parameter_list pos:line="356" pos:column="25">()</parameter_list> <member_list pos:line="356" pos:column="28">: <call><name pos:line="356" pos:column="30">_pFRDlg</name><argument_list pos:line="356" pos:column="37">(<argument><expr><name pos:line="356" pos:column="38">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="356" pos:column="43">,</op:operator> <call><name pos:line="356" pos:column="45">_pRebar</name><argument_list pos:line="356" pos:column="52">(<argument><expr><name pos:line="356" pos:column="53">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="356" pos:column="58">,</op:operator> <call><name pos:line="356" pos:column="60">_FindStatus</name><argument_list pos:line="356" pos:column="71">(<argument><expr><name pos:line="356" pos:column="72">FSFound</name></expr></argument>)</argument_list></call> </member_list><block pos:line="356" pos:column="81">{}</block></constructor><empty_stmt pos:line="356" pos:column="83">;</empty_stmt>
	<function_decl><type><name pos:line="357" pos:column="9">void</name></type> <name pos:line="357" pos:column="14">init</name><parameter_list pos:line="357" pos:column="18">(<param><decl><type><name pos:line="357" pos:column="19">HINSTANCE</name></type> <name pos:line="357" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="36">HWND</name></type> <name pos:line="357" pos:column="41">hPere</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="48">FindReplaceDlg</name> <type:modifier pos:line="357" pos:column="63">*</type:modifier></type><name pos:line="357" pos:column="64">pFRDlg</name></decl></param>, <param><decl><type><name pos:line="357" pos:column="72">bool</name></type> <name pos:line="357" pos:column="77">isRTL</name> <init pos:line="357" pos:column="83">= <expr><lit:literal type="boolean" pos:line="357" pos:column="85">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="358" pos:column="9">virtual</specifier> <name pos:line="358" pos:column="17">void</name></type> <name pos:line="358" pos:column="22">destroy</name><parameter_list pos:line="358" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="359" pos:column="9">virtual</specifier> <name pos:line="359" pos:column="17">void</name></type> <name pos:line="359" pos:column="22">display</name><parameter_list pos:line="359" pos:column="29">(<param><decl><type><name pos:line="359" pos:column="30">bool</name></type> <name pos:line="359" pos:column="35">toShow</name> <init pos:line="359" pos:column="42">= <expr><lit:literal type="boolean" pos:line="359" pos:column="44">true</lit:literal></expr></init></decl></param>)</parameter_list> <specifier pos:line="359" pos:column="50">const</specifier>;</function_decl>
<cpp:ifdef pos:line="360" pos:column="1">#<cpp:directive pos:line="360" pos:column="2">ifdef</cpp:directive> <name pos:line="360" pos:column="8">UNICODE</name></cpp:ifdef>
	<function><type><name pos:line="361" pos:column="9">void</name></type> <name pos:line="361" pos:column="14">setSearchText</name><parameter_list pos:line="361" pos:column="27">(<param><decl><type><specifier pos:line="361" pos:column="28">const</specifier> <name pos:line="361" pos:column="34">TCHAR</name> <type:modifier pos:line="361" pos:column="40">*</type:modifier></type> <name pos:line="361" pos:column="42">txt2find</name></decl></param>, <param><decl><type><name pos:line="361" pos:column="52">bool</name></type></decl></param>)</parameter_list> <block pos:line="361" pos:column="58">{
		<expr_stmt><expr><call><name><op:operator pos:line="362" pos:column="17">::</op:operator><name pos:line="362" pos:column="19">SendDlgItemMessage</name></name><argument_list pos:line="362" pos:column="37">(<argument><expr><name pos:line="362" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="362" pos:column="46">IDC_INCFINDTEXT</name></expr></argument>, <argument><expr><name pos:line="362" pos:column="63">WM_SETTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="362" pos:column="75">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="362" pos:column="78">(</op:operator><name pos:line="362" pos:column="79">LPARAM</name><op:operator pos:line="362" pos:column="85">)</op:operator><name pos:line="362" pos:column="86">txt2find</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="363" pos:column="10">;</empty_stmt>
<cpp:else pos:line="364" pos:column="1">#<cpp:directive pos:line="364" pos:column="2">else</cpp:directive></cpp:else>
	<function><type><name pos:line="365" pos:column="9">void</name></type> <name pos:line="365" pos:column="14">setSearchText</name><parameter_list pos:line="365" pos:column="27">(<param><decl><type><specifier pos:line="365" pos:column="28">const</specifier> <name pos:line="365" pos:column="34">TCHAR</name> <type:modifier pos:line="365" pos:column="40">*</type:modifier></type> <name pos:line="365" pos:column="42">txt2find</name></decl></param>, <param><decl><type><name pos:line="365" pos:column="52">bool</name></type> <name pos:line="365" pos:column="57">isUTF8</name> <init pos:line="365" pos:column="64">= <expr><lit:literal type="boolean" pos:line="365" pos:column="66">false</lit:literal></expr></init></decl></param>)</parameter_list> <block pos:line="365" pos:column="73">{
		<if pos:line="366" pos:column="17">if <condition pos:line="366" pos:column="20">(<expr><op:operator pos:line="366" pos:column="21">!</op:operator><name pos:line="366" pos:column="22">isUTF8</name></expr>)</condition><then pos:line="366" pos:column="29">
		<block pos:line="367" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="368" pos:column="25">::</op:operator><name pos:line="368" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="368" pos:column="45">(<argument><expr><name pos:line="368" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="368" pos:column="54">IDC_INCFINDTEXT</name></expr></argument>, <argument><expr><name pos:line="368" pos:column="71">WM_SETTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="368" pos:column="83">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="368" pos:column="86">(</op:operator><name pos:line="368" pos:column="87">LPARAM</name><op:operator pos:line="368" pos:column="93">)</op:operator><name pos:line="368" pos:column="94">txt2find</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="369" pos:column="25">return;</return>
		}</block></then></if>
		<decl_stmt><decl><type><specifier pos:line="371" pos:column="17">const</specifier> <name pos:line="371" pos:column="23">int</name></type> <name pos:line="371" pos:column="27">wideBufferSize</name> <init pos:line="371" pos:column="42">= <expr><lit:literal type="number" pos:line="371" pos:column="44">256</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="372" pos:column="17">WCHAR</name></type> <name><name pos:line="372" pos:column="23">wchars</name><index pos:line="372" pos:column="29">[<expr><name pos:line="372" pos:column="30">wideBufferSize</name></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="373" pos:column="17">::</op:operator><name pos:line="373" pos:column="19">MultiByteToWideChar</name></name><argument_list pos:line="373" pos:column="38">(<argument><expr><name pos:line="373" pos:column="39">CP_UTF8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="373" pos:column="48">0</lit:literal></expr></argument>, <argument><expr><name pos:line="373" pos:column="51">txt2find</name></expr></argument>, <argument><expr><op:operator pos:line="373" pos:column="61">-</op:operator><lit:literal type="number" pos:line="373" pos:column="62">1</lit:literal></expr></argument>, <argument><expr><name pos:line="373" pos:column="65">wchars</name></expr></argument>, <argument><expr><name pos:line="373" pos:column="73">wideBufferSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="374" pos:column="17">winVer</name></type> <name pos:line="374" pos:column="24">winVersion</name> <init pos:line="374" pos:column="35">= <expr><call><name><name pos:line="374" pos:column="37">NppParameters</name><op:operator pos:line="374" pos:column="50">::</op:operator><name pos:line="374" pos:column="52">getInstance</name></name><argument_list pos:line="374" pos:column="63">()</argument_list></call><op:operator pos:line="374" pos:column="65">-&gt;</op:operator><call><name pos:line="374" pos:column="67">getWinVersion</name><argument_list pos:line="374" pos:column="80">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="375" pos:column="17">if <condition pos:line="375" pos:column="20">(<expr><name pos:line="375" pos:column="21">winVersion</name> <op:operator pos:line="375" pos:column="32">&lt;=</op:operator> <name pos:line="375" pos:column="35">WV_ME</name></expr>)</condition><then pos:line="375" pos:column="41"> <block pos:line="375" pos:column="42">{
			<comment type="line" pos:line="376" pos:column="25">//Cannot simply take txt2find since its UTF8</comment>
			<decl_stmt><decl><type><name pos:line="377" pos:column="25">char</name></type> <name><name pos:line="377" pos:column="30">ansiBuffer</name><index pos:line="377" pos:column="40">[<expr><name pos:line="377" pos:column="41">wideBufferSize</name></expr>]</index></name></decl>;</decl_stmt>	<comment type="line" pos:line="377" pos:column="65">//Assuming no more than 2 bytes for each wchar (SBCS or DBCS, no UTF8 and sorts)</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="378" pos:column="25">::</op:operator><name pos:line="378" pos:column="27">WideCharToMultiByte</name></name><argument_list pos:line="378" pos:column="46">(<argument><expr><name pos:line="378" pos:column="47">CP_ACP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="378" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="378" pos:column="58">wchars</name></expr></argument>, <argument><expr><op:operator pos:line="378" pos:column="66">-</op:operator><lit:literal type="number" pos:line="378" pos:column="67">1</lit:literal></expr></argument>, <argument><expr><name pos:line="378" pos:column="70">ansiBuffer</name></expr></argument>, <argument><expr><name pos:line="378" pos:column="82">wideBufferSize</name></expr></argument>, <argument><expr><name pos:line="378" pos:column="98">NULL</name></expr></argument>, <argument><expr><name pos:line="378" pos:column="104">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="379" pos:column="25">::</op:operator><name pos:line="379" pos:column="27">SendDlgItemMessageA</name></name><argument_list pos:line="379" pos:column="46">(<argument><expr><name pos:line="379" pos:column="47">_hSelf</name></expr></argument>, <argument><expr><name pos:line="379" pos:column="55">IDC_INCFINDTEXT</name></expr></argument>, <argument><expr><name pos:line="379" pos:column="72">WM_SETTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="379" pos:column="84">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="379" pos:column="87">(</op:operator><name pos:line="379" pos:column="88">LPARAM</name><op:operator pos:line="379" pos:column="94">)</op:operator><name pos:line="379" pos:column="95">ansiBuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="380" pos:column="19">else <block pos:line="380" pos:column="24">{
			<expr_stmt><expr><call><name><op:operator pos:line="381" pos:column="25">::</op:operator><name pos:line="381" pos:column="27">SendDlgItemMessageW</name></name><argument_list pos:line="381" pos:column="46">(<argument><expr><name pos:line="381" pos:column="47">_hSelf</name></expr></argument>, <argument><expr><name pos:line="381" pos:column="55">IDC_INCFINDTEXT</name></expr></argument>, <argument><expr><name pos:line="381" pos:column="72">WM_SETTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="381" pos:column="84">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="381" pos:column="87">(</op:operator><name pos:line="381" pos:column="88">LPARAM</name><op:operator pos:line="381" pos:column="94">)</op:operator><name pos:line="381" pos:column="95">wchars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></function><empty_stmt pos:line="383" pos:column="10">;</empty_stmt>
<cpp:endif pos:line="384" pos:column="1">#<cpp:directive pos:line="384" pos:column="2">endif</cpp:directive></cpp:endif>

	<function_decl><type><name pos:line="386" pos:column="9">void</name></type> <name pos:line="386" pos:column="14">setFindStatus</name><parameter_list pos:line="386" pos:column="27">(<param><decl><type><name pos:line="386" pos:column="28">FindStatus</name></type> <name pos:line="386" pos:column="39">iStatus</name></decl></param>)</parameter_list>;</function_decl>
	
	<function><type><name pos:line="388" pos:column="9">FindStatus</name></type> <name pos:line="388" pos:column="20">getFindStatus</name><parameter_list pos:line="388" pos:column="33">()</parameter_list> <block pos:line="388" pos:column="36">{
		<return pos:line="389" pos:column="17">return <expr><name pos:line="389" pos:column="24">_FindStatus</name></expr>;</return>
	}</block></function>

	<function_decl><type><name pos:line="392" pos:column="9">void</name></type> <name pos:line="392" pos:column="14">addToRebar</name><parameter_list pos:line="392" pos:column="24">(<param><decl><type><name pos:line="392" pos:column="25">ReBar</name> <type:modifier pos:line="392" pos:column="31">*</type:modifier></type> <name pos:line="392" pos:column="33">rebar</name></decl></param>)</parameter_list>;</function_decl>
</public><private pos:line="393" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="394" pos:column="9">bool</name></type> <name pos:line="394" pos:column="14">_isRTL</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="395" pos:column="9">FindReplaceDlg</name> <type:modifier pos:line="395" pos:column="24">*</type:modifier></type><name pos:line="395" pos:column="25">_pFRDlg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="396" pos:column="9">FindStatus</name></type> <name pos:line="396" pos:column="20">_FindStatus</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="398" pos:column="9">ReBar</name> <type:modifier pos:line="398" pos:column="15">*</type:modifier></type> <name pos:line="398" pos:column="17">_pRebar</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="399" pos:column="9">REBARBANDINFO</name></type> <name pos:line="399" pos:column="23">_rbBand</name></decl>;</decl_stmt>

	<function_decl><type><specifier pos:line="401" pos:column="9">virtual</specifier> <name pos:line="401" pos:column="17">BOOL</name> <name pos:line="401" pos:column="22">CALLBACK</name></type> <name pos:line="401" pos:column="31">run_dlgProc</name><parameter_list pos:line="401" pos:column="42">(<param><decl><type><name pos:line="401" pos:column="43">UINT</name></type> <name pos:line="401" pos:column="48">message</name></decl></param>, <param><decl><type><name pos:line="401" pos:column="57">WPARAM</name></type> <name pos:line="401" pos:column="64">wParam</name></decl></param>, <param><decl><type><name pos:line="401" pos:column="72">LPARAM</name></type> <name pos:line="401" pos:column="79">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="402" pos:column="9">void</name></type> <name pos:line="402" pos:column="14">markSelectedTextInc</name><parameter_list pos:line="402" pos:column="33">(<param><decl><type><name pos:line="402" pos:column="34">bool</name></type> <name pos:line="402" pos:column="39">enable</name></decl></param>, <param><decl><type><name pos:line="402" pos:column="47">FindOption</name> <type:modifier pos:line="402" pos:column="58">*</type:modifier></type><name pos:line="402" pos:column="59">opt</name> <init pos:line="402" pos:column="63">= <expr><name pos:line="402" pos:column="65">NULL</name></expr></init></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<cpp:endif pos:line="405" pos:column="1">#<cpp:directive pos:line="405" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="405" pos:column="8">//FIND_REPLACE_DLG_H</comment>
</unit>
