<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\MISC\Process\Process.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">PROCESSUS_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">PROCESSUS_H</name></cpp:macro></cpp:define>

<using pos:line="32" pos:column="1">using namespace <name pos:line="32" pos:column="17">std</name>;</using>

<enum pos:line="34" pos:column="1">enum <name pos:line="34" pos:column="6">progType</name> <block pos:line="34" pos:column="15">{<decl><name pos:line="34" pos:column="16">WIN32_PROG</name></decl><op:operator pos:line="34" pos:column="26">,</op:operator> <decl><name pos:line="34" pos:column="28">CONSOLE_PROG</name></decl>}</block>;</enum>

<class pos:line="36" pos:column="1">class <name pos:line="36" pos:column="7">Process</name> 
<block pos:line="37" pos:column="1">{<private type="default" pos:line="37" pos:column="2">
</private><public pos:line="38" pos:column="1">public:
    <constructor><name pos:line="39" pos:column="5">Process</name><parameter_list pos:line="39" pos:column="12">(<param><decl><type><specifier pos:line="39" pos:column="13">const</specifier> <name pos:line="39" pos:column="19">TCHAR</name> <type:modifier pos:line="39" pos:column="25">*</type:modifier></type><name pos:line="39" pos:column="26">cmd</name></decl></param>, <param><decl><type><specifier pos:line="39" pos:column="31">const</specifier> <name pos:line="39" pos:column="37">TCHAR</name> <type:modifier pos:line="39" pos:column="43">*</type:modifier></type><name pos:line="39" pos:column="44">args</name></decl></param>, <param><decl><type><specifier pos:line="39" pos:column="50">const</specifier> <name pos:line="39" pos:column="56">TCHAR</name> <type:modifier pos:line="39" pos:column="62">*</type:modifier></type><name pos:line="39" pos:column="63">cDir</name></decl></param>)</parameter_list>
		<member_list pos:line="40" pos:column="17">:<call><name pos:line="40" pos:column="18">_command</name><argument_list pos:line="40" pos:column="26">(<argument><expr><name pos:line="40" pos:column="27">cmd</name></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="31">,</op:operator> <call><name pos:line="40" pos:column="33">_args</name><argument_list pos:line="40" pos:column="38">(<argument><expr><name pos:line="40" pos:column="39">args</name></expr></argument>)</argument_list></call><op:operator pos:line="40" pos:column="44">,</op:operator> <call><name pos:line="40" pos:column="46">_curDir</name><argument_list pos:line="40" pos:column="53">(<argument><expr><name pos:line="40" pos:column="54">cDir</name></expr></argument>)</argument_list></call></member_list><block pos:line="40" pos:column="59">{}</block></constructor><empty_stmt pos:line="40" pos:column="61">;</empty_stmt>

	<function_decl><type><name pos:line="42" pos:column="9">void</name></type> <name pos:line="42" pos:column="14">run</name><parameter_list pos:line="42" pos:column="17">()</parameter_list>;</function_decl>
 
</public><protected pos:line="44" pos:column="1">protected:
    <decl_stmt><decl><type><name pos:line="45" pos:column="5">generic_string</name></type> <name pos:line="45" pos:column="20">_command</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="46" pos:column="9">generic_string</name></type> <name pos:line="46" pos:column="24">_args</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="47" pos:column="9">generic_string</name></type> <name pos:line="47" pos:column="24">_curDir</name></decl>;</decl_stmt>
</protected>}</block>;</class>

<cpp:endif pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="50" pos:column="8">//PROCESSUS_H</comment>

</unit>
