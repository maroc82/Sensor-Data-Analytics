<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\Editor.cxx" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file Editor.cxx
 ** Main code for the edit control.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2011 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:include pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">include</cpp:directive> <cpp:file pos:line="8" pos:column="10">&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">include</cpp:directive> <cpp:file pos:line="9" pos:column="10">&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">include</cpp:directive> <cpp:file pos:line="10" pos:column="10">&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">include</cpp:directive> <cpp:file pos:line="11" pos:column="10">&lt;ctype.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">include</cpp:directive> <cpp:file pos:line="12" pos:column="10">&lt;assert.h&gt;</cpp:file></cpp:include>

<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include</cpp:directive> <cpp:file pos:line="14" pos:column="10">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">include</cpp:directive> <cpp:file pos:line="15" pos:column="10">&lt;vector&gt;</cpp:file></cpp:include>
<cpp:include pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">include</cpp:directive> <cpp:file pos:line="16" pos:column="10">&lt;algorithm&gt;</cpp:file></cpp:include>
<cpp:include pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">include</cpp:directive> <cpp:file pos:line="17" pos:column="10">&lt;memory&gt;</cpp:file></cpp:include>

<cpp:include pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="19" pos:column="10">"Platform.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="21" pos:column="10">"ILexer.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="22" pos:column="10">"Scintilla.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="24" pos:column="10">"SplitVector.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="25" pos:column="10">"Partitioning.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="26" pos:column="10">"RunStyles.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="27" pos:column="10">"ContractionState.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="28" pos:column="10">"CellBuffer.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"KeyMap.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Indicator.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"XPM.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"LineMarker.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"Style.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"ViewStyle.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"CharClassify.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="36" pos:column="10">"Decoration.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"Document.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"Selection.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="39" pos:column="10">"PositionCache.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="40" pos:column="10">"Editor.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifdef pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">ifdef</cpp:directive> <name pos:line="42" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<using pos:line="43" pos:column="1">using namespace <name pos:line="43" pos:column="17">Scintilla</name>;</using>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" pos:line="46" pos:column="1">/*
	return whether this modification represents an operation that
	may reasonably be deferred (not done now OR [possibly] at all)
*/</comment>
<function><type><specifier pos:line="50" pos:column="1">static</specifier> <name pos:line="50" pos:column="8">bool</name></type> <name pos:line="50" pos:column="13">CanDeferToLastStep</name><parameter_list pos:line="50" pos:column="31">(<param><decl><type><specifier pos:line="50" pos:column="32">const</specifier> <name pos:line="50" pos:column="38">DocModification</name> <type:modifier pos:line="50" pos:column="54">&amp;</type:modifier></type><name pos:line="50" pos:column="55">mh</name></decl></param>)</parameter_list> <block pos:line="50" pos:column="59">{
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">mh</name><op:operator pos:line="51" pos:column="15">.</op:operator><name pos:line="51" pos:column="16">modificationType</name></name> <op:operator pos:line="51" pos:column="33">&amp;</op:operator> <op:operator pos:line="51" pos:column="35">(</op:operator><name pos:line="51" pos:column="36">SC_MOD_BEFOREINSERT</name> <op:operator pos:line="51" pos:column="56">|</op:operator> <name pos:line="51" pos:column="58">SC_MOD_BEFOREDELETE</name><op:operator pos:line="51" pos:column="77">)</op:operator></expr>)</condition><then pos:line="51" pos:column="79">
		<return pos:line="52" pos:column="17">return <expr><lit:literal type="boolean" pos:line="52" pos:column="24">true</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="52" pos:column="33">// CAN skip</comment>
	<if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><op:operator pos:line="53" pos:column="13">!</op:operator><op:operator pos:line="53" pos:column="14">(</op:operator><name><name pos:line="53" pos:column="15">mh</name><op:operator pos:line="53" pos:column="17">.</op:operator><name pos:line="53" pos:column="18">modificationType</name></name> <op:operator pos:line="53" pos:column="35">&amp;</op:operator> <op:operator pos:line="53" pos:column="37">(</op:operator><name pos:line="53" pos:column="38">SC_PERFORMED_UNDO</name> <op:operator pos:line="53" pos:column="56">|</op:operator> <name pos:line="53" pos:column="58">SC_PERFORMED_REDO</name><op:operator pos:line="53" pos:column="75">)</op:operator><op:operator pos:line="53" pos:column="76">)</op:operator></expr>)</condition><then pos:line="53" pos:column="78">
		<return pos:line="54" pos:column="17">return <expr><lit:literal type="boolean" pos:line="54" pos:column="24">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="54" pos:column="33">// MUST do</comment>
	<if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><name><name pos:line="55" pos:column="13">mh</name><op:operator pos:line="55" pos:column="15">.</op:operator><name pos:line="55" pos:column="16">modificationType</name></name> <op:operator pos:line="55" pos:column="33">&amp;</op:operator> <name pos:line="55" pos:column="35">SC_MULTISTEPUNDOREDO</name></expr>)</condition><then pos:line="55" pos:column="56">
		<return pos:line="56" pos:column="17">return <expr><lit:literal type="boolean" pos:line="56" pos:column="24">true</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="56" pos:column="33">// CAN skip</comment>
	<return pos:line="57" pos:column="9">return <expr><lit:literal type="boolean" pos:line="57" pos:column="16">false</lit:literal></expr>;</return>		<comment type="line" pos:line="57" pos:column="33">// PRESUMABLY must do</comment>
}</block></function>

<function><type><specifier pos:line="60" pos:column="1">static</specifier> <name pos:line="60" pos:column="8">bool</name></type> <name pos:line="60" pos:column="13">CanEliminate</name><parameter_list pos:line="60" pos:column="25">(<param><decl><type><specifier pos:line="60" pos:column="26">const</specifier> <name pos:line="60" pos:column="32">DocModification</name> <type:modifier pos:line="60" pos:column="48">&amp;</type:modifier></type><name pos:line="60" pos:column="49">mh</name></decl></param>)</parameter_list> <block pos:line="60" pos:column="53">{
	<return pos:line="61" pos:column="9">return
	    <expr><op:operator pos:line="62" pos:column="13">(</op:operator><name><name pos:line="62" pos:column="14">mh</name><op:operator pos:line="62" pos:column="16">.</op:operator><name pos:line="62" pos:column="17">modificationType</name></name> <op:operator pos:line="62" pos:column="34">&amp;</op:operator> <op:operator pos:line="62" pos:column="36">(</op:operator><name pos:line="62" pos:column="37">SC_MOD_BEFOREINSERT</name> <op:operator pos:line="62" pos:column="57">|</op:operator> <name pos:line="62" pos:column="59">SC_MOD_BEFOREDELETE</name><op:operator pos:line="62" pos:column="78">)</op:operator><op:operator pos:line="62" pos:column="79">)</op:operator> <op:operator pos:line="62" pos:column="81">!=</op:operator> <lit:literal type="number" pos:line="62" pos:column="84">0</lit:literal></expr>;</return>
}</block></function>

<comment type="block" pos:line="65" pos:column="1">/*
	return whether this modification represents the FINAL step
	in a [possibly lengthy] multi-step Undo/Redo sequence
*/</comment>
<function><type><specifier pos:line="69" pos:column="1">static</specifier> <name pos:line="69" pos:column="8">bool</name></type> <name pos:line="69" pos:column="13">IsLastStep</name><parameter_list pos:line="69" pos:column="23">(<param><decl><type><specifier pos:line="69" pos:column="24">const</specifier> <name pos:line="69" pos:column="30">DocModification</name> <type:modifier pos:line="69" pos:column="46">&amp;</type:modifier></type><name pos:line="69" pos:column="47">mh</name></decl></param>)</parameter_list> <block pos:line="69" pos:column="51">{
	<return pos:line="70" pos:column="9">return
	    <expr><op:operator pos:line="71" pos:column="13">(</op:operator><name><name pos:line="71" pos:column="14">mh</name><op:operator pos:line="71" pos:column="16">.</op:operator><name pos:line="71" pos:column="17">modificationType</name></name> <op:operator pos:line="71" pos:column="34">&amp;</op:operator> <op:operator pos:line="71" pos:column="36">(</op:operator><name pos:line="71" pos:column="37">SC_PERFORMED_UNDO</name> <op:operator pos:line="71" pos:column="55">|</op:operator> <name pos:line="71" pos:column="57">SC_PERFORMED_REDO</name><op:operator pos:line="71" pos:column="74">)</op:operator><op:operator pos:line="71" pos:column="75">)</op:operator> <op:operator pos:line="71" pos:column="77">!=</op:operator> <lit:literal type="number" pos:line="71" pos:column="80">0</lit:literal>
	    <op:operator pos:line="72" pos:column="13">&amp;&amp;</op:operator> <op:operator pos:line="72" pos:column="16">(</op:operator><name><name pos:line="72" pos:column="17">mh</name><op:operator pos:line="72" pos:column="19">.</op:operator><name pos:line="72" pos:column="20">modificationType</name></name> <op:operator pos:line="72" pos:column="37">&amp;</op:operator> <name pos:line="72" pos:column="39">SC_MULTISTEPUNDOREDO</name><op:operator pos:line="72" pos:column="59">)</op:operator> <op:operator pos:line="72" pos:column="61">!=</op:operator> <lit:literal type="number" pos:line="72" pos:column="64">0</lit:literal>
	    <op:operator pos:line="73" pos:column="13">&amp;&amp;</op:operator> <op:operator pos:line="73" pos:column="16">(</op:operator><name><name pos:line="73" pos:column="17">mh</name><op:operator pos:line="73" pos:column="19">.</op:operator><name pos:line="73" pos:column="20">modificationType</name></name> <op:operator pos:line="73" pos:column="37">&amp;</op:operator> <name pos:line="73" pos:column="39">SC_LASTSTEPINUNDOREDO</name><op:operator pos:line="73" pos:column="60">)</op:operator> <op:operator pos:line="73" pos:column="62">!=</op:operator> <lit:literal type="number" pos:line="73" pos:column="65">0</lit:literal>
	    <op:operator pos:line="74" pos:column="13">&amp;&amp;</op:operator> <op:operator pos:line="74" pos:column="16">(</op:operator><name><name pos:line="74" pos:column="17">mh</name><op:operator pos:line="74" pos:column="19">.</op:operator><name pos:line="74" pos:column="20">modificationType</name></name> <op:operator pos:line="74" pos:column="37">&amp;</op:operator> <name pos:line="74" pos:column="39">SC_MULTILINEUNDOREDO</name><op:operator pos:line="74" pos:column="59">)</op:operator> <op:operator pos:line="74" pos:column="61">!=</op:operator> <lit:literal type="number" pos:line="74" pos:column="64">0</lit:literal></expr>;</return>
}</block></function>

<constructor><name><name pos:line="77" pos:column="1">Caret</name><op:operator pos:line="77" pos:column="6">::</op:operator><name pos:line="77" pos:column="8">Caret</name></name><parameter_list pos:line="77" pos:column="13">()</parameter_list> <member_list pos:line="77" pos:column="16">:
		<call><name pos:line="78" pos:column="17">active</name><argument_list pos:line="78" pos:column="23">(<argument><expr><lit:literal type="boolean" pos:line="78" pos:column="24">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="30">,</op:operator> <call><name pos:line="78" pos:column="32">on</name><argument_list pos:line="78" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="78" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="78" pos:column="41">,</op:operator> <call><name pos:line="78" pos:column="43">period</name><argument_list pos:line="78" pos:column="49">(<argument><expr><lit:literal type="number" pos:line="78" pos:column="50">500</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="78" pos:column="55">{}</block></constructor>

<constructor><name><name pos:line="80" pos:column="1">Timer</name><op:operator pos:line="80" pos:column="6">::</op:operator><name pos:line="80" pos:column="8">Timer</name></name><parameter_list pos:line="80" pos:column="13">()</parameter_list> <member_list pos:line="80" pos:column="16">:
		<call><name pos:line="81" pos:column="17">ticking</name><argument_list pos:line="81" pos:column="24">(<argument><expr><lit:literal type="boolean" pos:line="81" pos:column="25">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="81" pos:column="31">,</op:operator> <call><name pos:line="81" pos:column="33">ticksToWait</name><argument_list pos:line="81" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="81" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="81" pos:column="47">,</op:operator> <call><name pos:line="81" pos:column="49">tickerID</name><argument_list pos:line="81" pos:column="57">(<argument><expr><lit:literal type="number" pos:line="81" pos:column="58">0</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="81" pos:column="61">{}</block></constructor>

<constructor><name><name pos:line="83" pos:column="1">Idler</name><op:operator pos:line="83" pos:column="6">::</op:operator><name pos:line="83" pos:column="8">Idler</name></name><parameter_list pos:line="83" pos:column="13">()</parameter_list> <member_list pos:line="83" pos:column="16">:
		<call><name pos:line="84" pos:column="17">state</name><argument_list pos:line="84" pos:column="22">(<argument><expr><lit:literal type="boolean" pos:line="84" pos:column="23">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="84" pos:column="29">,</op:operator> <call><name pos:line="84" pos:column="31">idlerID</name><argument_list pos:line="84" pos:column="38">(<argument><expr><lit:literal type="number" pos:line="84" pos:column="39">0</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="84" pos:column="42">{}</block></constructor>

<function><type><specifier pos:line="86" pos:column="1">static</specifier> <specifier pos:line="86" pos:column="8">inline</specifier> <name pos:line="86" pos:column="15">bool</name></type> <name pos:line="86" pos:column="20">IsControlCharacter</name><parameter_list pos:line="86" pos:column="38">(<param><decl><type><name pos:line="86" pos:column="39">int</name></type> <name pos:line="86" pos:column="43">ch</name></decl></param>)</parameter_list> <block pos:line="86" pos:column="47">{
	<comment type="line" pos:line="87" pos:column="9">// iscntrl returns true for lots of chars &gt; 127 which are displayable</comment>
	<return pos:line="88" pos:column="9">return <expr><name pos:line="88" pos:column="16">ch</name> <op:operator pos:line="88" pos:column="19">&gt;=</op:operator> <lit:literal type="number" pos:line="88" pos:column="22">0</lit:literal> <op:operator pos:line="88" pos:column="24">&amp;&amp;</op:operator> <name pos:line="88" pos:column="27">ch</name> <op:operator pos:line="88" pos:column="30">&lt;</op:operator> <lit:literal type="char" pos:line="88" pos:column="32">' '</lit:literal></expr>;</return>
}</block></function>

<function><type><specifier pos:line="91" pos:column="1">static</specifier> <specifier pos:line="91" pos:column="8">inline</specifier> <name pos:line="91" pos:column="15">bool</name></type> <name pos:line="91" pos:column="20">IsAllSpacesOrTabs</name><parameter_list pos:line="91" pos:column="37">(<param><decl><type><name pos:line="91" pos:column="38">char</name> <type:modifier pos:line="91" pos:column="43">*</type:modifier></type><name pos:line="91" pos:column="44">s</name></decl></param>, <param><decl><type><name pos:line="91" pos:column="47">unsigned</name> <name pos:line="91" pos:column="56">int</name></type> <name pos:line="91" pos:column="60">len</name></decl></param>)</parameter_list> <block pos:line="91" pos:column="65">{
	<for pos:line="92" pos:column="9">for (<init><decl><type><name pos:line="92" pos:column="14">unsigned</name> <name pos:line="92" pos:column="23">int</name></type> <name pos:line="92" pos:column="27">i</name> <init pos:line="92" pos:column="29">= <expr><lit:literal type="number" pos:line="92" pos:column="31">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="92" pos:column="34">i</name> <op:operator pos:line="92" pos:column="36">&lt;</op:operator> <name pos:line="92" pos:column="38">len</name></expr>;</condition> <incr><expr><name pos:line="92" pos:column="43">i</name><op:operator pos:line="92" pos:column="44">++</op:operator></expr></incr>) <block pos:line="92" pos:column="48">{
		<comment type="line" pos:line="93" pos:column="17">// This is safe because IsSpaceOrTab() will return false for null terminators</comment>
		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><op:operator pos:line="94" pos:column="21">!</op:operator><call><name pos:line="94" pos:column="22">IsSpaceOrTab</name><argument_list pos:line="94" pos:column="34">(<argument><expr><name><name pos:line="94" pos:column="35">s</name><index pos:line="94" pos:column="36">[<expr><name pos:line="94" pos:column="37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="94" pos:column="41">
			<return pos:line="95" pos:column="25">return <expr><lit:literal type="boolean" pos:line="95" pos:column="32">false</lit:literal></expr>;</return></then></if>
	}</block></for>
	<return pos:line="97" pos:column="9">return <expr><lit:literal type="boolean" pos:line="97" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<constructor><name><name pos:line="100" pos:column="1">Editor</name><op:operator pos:line="100" pos:column="7">::</op:operator><name pos:line="100" pos:column="9">Editor</name></name><parameter_list pos:line="100" pos:column="15">()</parameter_list> <block pos:line="100" pos:column="18">{
	<expr_stmt><expr><name pos:line="101" pos:column="9">ctrlID</name> <op:operator pos:line="101" pos:column="16">=</op:operator> <lit:literal type="number" pos:line="101" pos:column="18">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="103" pos:column="9">stylesValid</name> <op:operator pos:line="103" pos:column="21">=</op:operator> <lit:literal type="boolean" pos:line="103" pos:column="23">false</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="105" pos:column="9">printMagnification</name> <op:operator pos:line="105" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="105" pos:column="30">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="106" pos:column="9">printColourMode</name> <op:operator pos:line="106" pos:column="25">=</op:operator> <name pos:line="106" pos:column="27">SC_PRINT_NORMAL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="107" pos:column="9">printWrapState</name> <op:operator pos:line="107" pos:column="24">=</op:operator> <name pos:line="107" pos:column="26">eWrapWord</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="108" pos:column="9">cursorMode</name> <op:operator pos:line="108" pos:column="20">=</op:operator> <name pos:line="108" pos:column="22">SC_CURSORNORMAL</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="109" pos:column="9">controlCharSymbol</name> <op:operator pos:line="109" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="109" pos:column="29">0</lit:literal></expr>;</expr_stmt>	<comment type="block" pos:line="109" pos:column="33">/* Draw the control characters */</comment>

	<expr_stmt><expr><name pos:line="111" pos:column="9">hasFocus</name> <op:operator pos:line="111" pos:column="18">=</op:operator> <lit:literal type="boolean" pos:line="111" pos:column="20">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="112" pos:column="9">hideSelection</name> <op:operator pos:line="112" pos:column="23">=</op:operator> <lit:literal type="boolean" pos:line="112" pos:column="25">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="113" pos:column="9">inOverstrike</name> <op:operator pos:line="113" pos:column="22">=</op:operator> <lit:literal type="boolean" pos:line="113" pos:column="24">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="114" pos:column="9">errorStatus</name> <op:operator pos:line="114" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="114" pos:column="23">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="115" pos:column="9">mouseDownCaptures</name> <op:operator pos:line="115" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="115" pos:column="29">true</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="117" pos:column="9">bufferedDraw</name> <op:operator pos:line="117" pos:column="22">=</op:operator> <lit:literal type="boolean" pos:line="117" pos:column="24">true</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="118" pos:column="9">twoPhaseDraw</name> <op:operator pos:line="118" pos:column="22">=</op:operator> <lit:literal type="boolean" pos:line="118" pos:column="24">true</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="120" pos:column="9">lastClickTime</name> <op:operator pos:line="120" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="120" pos:column="25">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="121" pos:column="9">dwellDelay</name> <op:operator pos:line="121" pos:column="20">=</op:operator> <name pos:line="121" pos:column="22">SC_TIME_FOREVER</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="122" pos:column="9">ticksToDwell</name> <op:operator pos:line="122" pos:column="22">=</op:operator> <name pos:line="122" pos:column="24">SC_TIME_FOREVER</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="123" pos:column="9">dwelling</name> <op:operator pos:line="123" pos:column="18">=</op:operator> <lit:literal type="boolean" pos:line="123" pos:column="20">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="124" pos:column="9">ptMouseLast</name><op:operator pos:line="124" pos:column="20">.</op:operator><name pos:line="124" pos:column="21">x</name></name> <op:operator pos:line="124" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="124" pos:column="25">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="125" pos:column="9">ptMouseLast</name><op:operator pos:line="125" pos:column="20">.</op:operator><name pos:line="125" pos:column="21">y</name></name> <op:operator pos:line="125" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="125" pos:column="25">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="126" pos:column="9">inDragDrop</name> <op:operator pos:line="126" pos:column="20">=</op:operator> <name pos:line="126" pos:column="22">ddNone</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="127" pos:column="9">dropWentOutside</name> <op:operator pos:line="127" pos:column="25">=</op:operator> <lit:literal type="boolean" pos:line="127" pos:column="27">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="128" pos:column="9">posDrag</name> <op:operator pos:line="128" pos:column="17">=</op:operator> <call><name pos:line="128" pos:column="19">SelectionPosition</name><argument_list pos:line="128" pos:column="36">(<argument><expr><name pos:line="128" pos:column="37">invalidPosition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="129" pos:column="9">posDrop</name> <op:operator pos:line="129" pos:column="17">=</op:operator> <call><name pos:line="129" pos:column="19">SelectionPosition</name><argument_list pos:line="129" pos:column="36">(<argument><expr><name pos:line="129" pos:column="37">invalidPosition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="130" pos:column="9">hotSpotClickPos</name> <op:operator pos:line="130" pos:column="25">=</op:operator> <name pos:line="130" pos:column="27">INVALID_POSITION</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="131" pos:column="9">selectionType</name> <op:operator pos:line="131" pos:column="23">=</op:operator> <name pos:line="131" pos:column="25">selChar</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="133" pos:column="9">lastXChosen</name> <op:operator pos:line="133" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="133" pos:column="23">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="134" pos:column="9">lineAnchorPos</name> <op:operator pos:line="134" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="134" pos:column="25">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="135" pos:column="9">originalAnchorPos</name> <op:operator pos:line="135" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="135" pos:column="29">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="136" pos:column="9">wordSelectAnchorStartPos</name> <op:operator pos:line="136" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="136" pos:column="36">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="137" pos:column="9">wordSelectAnchorEndPos</name> <op:operator pos:line="137" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="137" pos:column="34">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="138" pos:column="9">wordSelectInitialCaretPos</name> <op:operator pos:line="138" pos:column="35">=</op:operator> <op:operator pos:line="138" pos:column="37">-</op:operator><lit:literal type="number" pos:line="138" pos:column="38">1</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="140" pos:column="9">primarySelection</name> <op:operator pos:line="140" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="140" pos:column="28">true</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="142" pos:column="9">caretXPolicy</name> <op:operator pos:line="142" pos:column="22">=</op:operator> <name pos:line="142" pos:column="24">CARET_SLOP</name> <op:operator pos:line="142" pos:column="35">|</op:operator> <name pos:line="142" pos:column="37">CARET_EVEN</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="143" pos:column="9">caretXSlop</name> <op:operator pos:line="143" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="143" pos:column="22">50</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="145" pos:column="9">caretYPolicy</name> <op:operator pos:line="145" pos:column="22">=</op:operator> <name pos:line="145" pos:column="24">CARET_EVEN</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="146" pos:column="9">caretYSlop</name> <op:operator pos:line="146" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="146" pos:column="22">0</lit:literal></expr>;</expr_stmt>
	
	<expr_stmt><expr><name pos:line="148" pos:column="9">visiblePolicy</name> <op:operator pos:line="148" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="148" pos:column="25">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="149" pos:column="9">visibleSlop</name> <op:operator pos:line="149" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="149" pos:column="23">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="151" pos:column="9">searchAnchor</name> <op:operator pos:line="151" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="151" pos:column="24">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="153" pos:column="9">xOffset</name> <op:operator pos:line="153" pos:column="17">=</op:operator> <lit:literal type="number" pos:line="153" pos:column="19">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="154" pos:column="9">xCaretMargin</name> <op:operator pos:line="154" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="154" pos:column="24">50</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="155" pos:column="9">horizontalScrollBarVisible</name> <op:operator pos:line="155" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="155" pos:column="38">true</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="156" pos:column="9">scrollWidth</name> <op:operator pos:line="156" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="156" pos:column="23">2000</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="157" pos:column="9">trackLineWidth</name> <op:operator pos:line="157" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="157" pos:column="26">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="158" pos:column="9">lineWidthMaxSeen</name> <op:operator pos:line="158" pos:column="26">=</op:operator> <lit:literal type="number" pos:line="158" pos:column="28">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="159" pos:column="9">verticalScrollBarVisible</name> <op:operator pos:line="159" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="159" pos:column="36">true</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="160" pos:column="9">endAtLastLine</name> <op:operator pos:line="160" pos:column="23">=</op:operator> <lit:literal type="boolean" pos:line="160" pos:column="25">true</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="161" pos:column="9">caretSticky</name> <op:operator pos:line="161" pos:column="21">=</op:operator> <name pos:line="161" pos:column="23">SC_CARETSTICKY_OFF</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="162" pos:column="9">marginOptions</name> <op:operator pos:line="162" pos:column="23">=</op:operator> <name pos:line="162" pos:column="25">SC_MARGINOPTION_NONE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="163" pos:column="9">multipleSelection</name> <op:operator pos:line="163" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="163" pos:column="29">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="164" pos:column="9">additionalSelectionTyping</name> <op:operator pos:line="164" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="164" pos:column="37">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="165" pos:column="9">multiPasteMode</name> <op:operator pos:line="165" pos:column="24">=</op:operator> <name pos:line="165" pos:column="26">SC_MULTIPASTE_ONCE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="166" pos:column="9">additionalCaretsBlink</name> <op:operator pos:line="166" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="166" pos:column="33">true</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="167" pos:column="9">additionalCaretsVisible</name> <op:operator pos:line="167" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="167" pos:column="35">true</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="168" pos:column="9">virtualSpaceOptions</name> <op:operator pos:line="168" pos:column="29">=</op:operator> <name pos:line="168" pos:column="31">SCVS_NONE</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="170" pos:column="9">pixmapLine</name> <op:operator pos:line="170" pos:column="20">=</op:operator> <call><name><name pos:line="170" pos:column="22">Surface</name><op:operator pos:line="170" pos:column="29">::</op:operator><name pos:line="170" pos:column="31">Allocate</name></name><argument_list pos:line="170" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="171" pos:column="9">pixmapSelMargin</name> <op:operator pos:line="171" pos:column="25">=</op:operator> <call><name><name pos:line="171" pos:column="27">Surface</name><op:operator pos:line="171" pos:column="34">::</op:operator><name pos:line="171" pos:column="36">Allocate</name></name><argument_list pos:line="171" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="172" pos:column="9">pixmapSelPattern</name> <op:operator pos:line="172" pos:column="26">=</op:operator> <call><name><name pos:line="172" pos:column="28">Surface</name><op:operator pos:line="172" pos:column="35">::</op:operator><name pos:line="172" pos:column="37">Allocate</name></name><argument_list pos:line="172" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="173" pos:column="9">pixmapIndentGuide</name> <op:operator pos:line="173" pos:column="27">=</op:operator> <call><name><name pos:line="173" pos:column="29">Surface</name><op:operator pos:line="173" pos:column="36">::</op:operator><name pos:line="173" pos:column="38">Allocate</name></name><argument_list pos:line="173" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="174" pos:column="9">pixmapIndentGuideHighlight</name> <op:operator pos:line="174" pos:column="36">=</op:operator> <call><name><name pos:line="174" pos:column="38">Surface</name><op:operator pos:line="174" pos:column="45">::</op:operator><name pos:line="174" pos:column="47">Allocate</name></name><argument_list pos:line="174" pos:column="55">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="176" pos:column="9">targetStart</name> <op:operator pos:line="176" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="176" pos:column="23">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="177" pos:column="9">targetEnd</name> <op:operator pos:line="177" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="177" pos:column="21">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="178" pos:column="9">searchFlags</name> <op:operator pos:line="178" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="178" pos:column="23">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="180" pos:column="9">topLine</name> <op:operator pos:line="180" pos:column="17">=</op:operator> <lit:literal type="number" pos:line="180" pos:column="19">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="181" pos:column="9">posTopLine</name> <op:operator pos:line="181" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="181" pos:column="22">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="183" pos:column="9">lengthForEncode</name> <op:operator pos:line="183" pos:column="25">=</op:operator> <op:operator pos:line="183" pos:column="27">-</op:operator><lit:literal type="number" pos:line="183" pos:column="28">1</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="185" pos:column="9">needUpdateUI</name> <op:operator pos:line="185" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="185" pos:column="24">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="186" pos:column="9">ContainerNeedsUpdate</name><argument_list pos:line="186" pos:column="29">(<argument><expr><name pos:line="186" pos:column="30">SC_UPDATE_CONTENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="187" pos:column="9">braces</name><index pos:line="187" pos:column="15">[<expr><lit:literal type="number" pos:line="187" pos:column="16">0</lit:literal></expr>]</index></name> <op:operator pos:line="187" pos:column="19">=</op:operator> <name pos:line="187" pos:column="21">invalidPosition</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="188" pos:column="9">braces</name><index pos:line="188" pos:column="15">[<expr><lit:literal type="number" pos:line="188" pos:column="16">1</lit:literal></expr>]</index></name> <op:operator pos:line="188" pos:column="19">=</op:operator> <name pos:line="188" pos:column="21">invalidPosition</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="189" pos:column="9">bracesMatchStyle</name> <op:operator pos:line="189" pos:column="26">=</op:operator> <name pos:line="189" pos:column="28">STYLE_BRACEBAD</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="190" pos:column="9">highlightGuideColumn</name> <op:operator pos:line="190" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="190" pos:column="32">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="192" pos:column="9">theEdge</name> <op:operator pos:line="192" pos:column="17">=</op:operator> <lit:literal type="number" pos:line="192" pos:column="19">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="194" pos:column="9">paintState</name> <op:operator pos:line="194" pos:column="20">=</op:operator> <name pos:line="194" pos:column="22">notPainting</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="196" pos:column="9">modEventMask</name> <op:operator pos:line="196" pos:column="22">=</op:operator> <name pos:line="196" pos:column="24">SC_MODEVENTMASKALL</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="198" pos:column="9">pdoc</name> <op:operator pos:line="198" pos:column="14">=</op:operator> <op:operator pos:line="198" pos:column="16">new</op:operator> <call><name pos:line="198" pos:column="20">Document</name><argument_list pos:line="198" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="199" pos:column="9">pdoc</name><op:operator pos:line="199" pos:column="13">-&gt;</op:operator><name pos:line="199" pos:column="15">AddRef</name></name><argument_list pos:line="199" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="200" pos:column="9">pdoc</name><op:operator pos:line="200" pos:column="13">-&gt;</op:operator><name pos:line="200" pos:column="15">AddWatcher</name></name><argument_list pos:line="200" pos:column="25">(<argument><expr><name pos:line="200" pos:column="26">this</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="200" pos:column="32">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="202" pos:column="9">recordingMacro</name> <op:operator pos:line="202" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="202" pos:column="26">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="203" pos:column="9">foldFlags</name> <op:operator pos:line="203" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="203" pos:column="21">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="205" pos:column="9">wrapState</name> <op:operator pos:line="205" pos:column="19">=</op:operator> <name pos:line="205" pos:column="21">eWrapNone</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="206" pos:column="9">wrapWidth</name> <op:operator pos:line="206" pos:column="19">=</op:operator> <name><name pos:line="206" pos:column="21">LineLayout</name><op:operator pos:line="206" pos:column="31">::</op:operator><name pos:line="206" pos:column="33">wrapWidthInfinite</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="207" pos:column="9">wrapStart</name> <op:operator pos:line="207" pos:column="19">=</op:operator> <name pos:line="207" pos:column="21">wrapLineLarge</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="208" pos:column="9">wrapEnd</name> <op:operator pos:line="208" pos:column="17">=</op:operator> <name pos:line="208" pos:column="19">wrapLineLarge</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="209" pos:column="9">wrapVisualFlags</name> <op:operator pos:line="209" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="209" pos:column="27">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="210" pos:column="9">wrapVisualFlagsLocation</name> <op:operator pos:line="210" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="210" pos:column="35">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="211" pos:column="9">wrapVisualStartIndent</name> <op:operator pos:line="211" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="211" pos:column="33">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="212" pos:column="9">wrapIndentMode</name> <op:operator pos:line="212" pos:column="24">=</op:operator> <name pos:line="212" pos:column="26">SC_WRAPINDENT_FIXED</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="213" pos:column="9">wrapAddIndent</name> <op:operator pos:line="213" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="213" pos:column="25">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="215" pos:column="9">convertPastes</name> <op:operator pos:line="215" pos:column="23">=</op:operator> <lit:literal type="boolean" pos:line="215" pos:column="25">true</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="217" pos:column="9">hsStart</name> <op:operator pos:line="217" pos:column="17">=</op:operator> <op:operator pos:line="217" pos:column="19">-</op:operator><lit:literal type="number" pos:line="217" pos:column="20">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="218" pos:column="9">hsEnd</name> <op:operator pos:line="218" pos:column="15">=</op:operator> <op:operator pos:line="218" pos:column="17">-</op:operator><lit:literal type="number" pos:line="218" pos:column="18">1</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="220" pos:column="9">llc</name><op:operator pos:line="220" pos:column="12">.</op:operator><name pos:line="220" pos:column="13">SetLevel</name></name><argument_list pos:line="220" pos:column="21">(<argument><expr><name><name pos:line="220" pos:column="22">LineLayoutCache</name><op:operator pos:line="220" pos:column="37">::</op:operator><name pos:line="220" pos:column="39">llcCaret</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="221" pos:column="9">posCache</name><op:operator pos:line="221" pos:column="17">.</op:operator><name pos:line="221" pos:column="18">SetSize</name></name><argument_list pos:line="221" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="221" pos:column="26">0x400</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></constructor>

<destructor><name><name pos:line="224" pos:column="1">Editor</name><op:operator pos:line="224" pos:column="7">::</op:operator>~<name pos:line="224" pos:column="10">Editor</name></name><parameter_list pos:line="224" pos:column="16">()</parameter_list> <block pos:line="224" pos:column="19">{
	<expr_stmt><expr><call><name><name pos:line="225" pos:column="9">pdoc</name><op:operator pos:line="225" pos:column="13">-&gt;</op:operator><name pos:line="225" pos:column="15">RemoveWatcher</name></name><argument_list pos:line="225" pos:column="28">(<argument><expr><name pos:line="225" pos:column="29">this</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="225" pos:column="35">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="226" pos:column="9">pdoc</name><op:operator pos:line="226" pos:column="13">-&gt;</op:operator><name pos:line="226" pos:column="15">Release</name></name><argument_list pos:line="226" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="227" pos:column="9">pdoc</name> <op:operator pos:line="227" pos:column="14">=</op:operator> <lit:literal type="number" pos:line="227" pos:column="16">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="228" pos:column="9">DropGraphics</name><argument_list pos:line="228" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="229" pos:column="9">delete</op:operator> <name pos:line="229" pos:column="16">pixmapLine</name></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="230" pos:column="9">delete</op:operator> <name pos:line="230" pos:column="16">pixmapSelMargin</name></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="231" pos:column="9">delete</op:operator> <name pos:line="231" pos:column="16">pixmapSelPattern</name></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="232" pos:column="9">delete</op:operator> <name pos:line="232" pos:column="16">pixmapIndentGuide</name></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="233" pos:column="9">delete</op:operator> <name pos:line="233" pos:column="16">pixmapIndentGuideHighlight</name></expr>;</expr_stmt>
}</block></destructor>

<function><type><name pos:line="236" pos:column="1">void</name></type> <name><name pos:line="236" pos:column="6">Editor</name><op:operator pos:line="236" pos:column="12">::</op:operator><name pos:line="236" pos:column="14">Finalise</name></name><parameter_list pos:line="236" pos:column="22">()</parameter_list> <block pos:line="236" pos:column="25">{
	<expr_stmt><expr><call><name pos:line="237" pos:column="9">SetIdle</name><argument_list pos:line="237" pos:column="16">(<argument><expr><lit:literal type="boolean" pos:line="237" pos:column="17">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="238" pos:column="9">CancelModes</name><argument_list pos:line="238" pos:column="20">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="241" pos:column="1">void</name></type> <name><name pos:line="241" pos:column="6">Editor</name><op:operator pos:line="241" pos:column="12">::</op:operator><name pos:line="241" pos:column="14">DropGraphics</name></name><parameter_list pos:line="241" pos:column="26">()</parameter_list> <block pos:line="241" pos:column="29">{
	<expr_stmt><expr><call><name><name pos:line="242" pos:column="9">pixmapLine</name><op:operator pos:line="242" pos:column="19">-&gt;</op:operator><name pos:line="242" pos:column="21">Release</name></name><argument_list pos:line="242" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="243" pos:column="9">pixmapSelMargin</name><op:operator pos:line="243" pos:column="24">-&gt;</op:operator><name pos:line="243" pos:column="26">Release</name></name><argument_list pos:line="243" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="244" pos:column="9">pixmapSelPattern</name><op:operator pos:line="244" pos:column="25">-&gt;</op:operator><name pos:line="244" pos:column="27">Release</name></name><argument_list pos:line="244" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="245" pos:column="9">pixmapIndentGuide</name><op:operator pos:line="245" pos:column="26">-&gt;</op:operator><name pos:line="245" pos:column="28">Release</name></name><argument_list pos:line="245" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="246" pos:column="9">pixmapIndentGuideHighlight</name><op:operator pos:line="246" pos:column="35">-&gt;</op:operator><name pos:line="246" pos:column="37">Release</name></name><argument_list pos:line="246" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="249" pos:column="1">void</name></type> <name><name pos:line="249" pos:column="6">Editor</name><op:operator pos:line="249" pos:column="12">::</op:operator><name pos:line="249" pos:column="14">InvalidateStyleData</name></name><parameter_list pos:line="249" pos:column="33">()</parameter_list> <block pos:line="249" pos:column="36">{
	<expr_stmt><expr><name pos:line="250" pos:column="9">stylesValid</name> <op:operator pos:line="250" pos:column="21">=</op:operator> <lit:literal type="boolean" pos:line="250" pos:column="23">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="251" pos:column="9">DropGraphics</name><argument_list pos:line="251" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="252" pos:column="9">palette</name><op:operator pos:line="252" pos:column="16">.</op:operator><name pos:line="252" pos:column="17">Release</name></name><argument_list pos:line="252" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="253" pos:column="9">llc</name><op:operator pos:line="253" pos:column="12">.</op:operator><name pos:line="253" pos:column="13">Invalidate</name></name><argument_list pos:line="253" pos:column="23">(<argument><expr><name><name pos:line="253" pos:column="24">LineLayout</name><op:operator pos:line="253" pos:column="34">::</op:operator><name pos:line="253" pos:column="36">llInvalid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="254" pos:column="9">posCache</name><op:operator pos:line="254" pos:column="17">.</op:operator><name pos:line="254" pos:column="18">Clear</name></name><argument_list pos:line="254" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="257" pos:column="1">void</name></type> <name><name pos:line="257" pos:column="6">Editor</name><op:operator pos:line="257" pos:column="12">::</op:operator><name pos:line="257" pos:column="14">InvalidateStyleRedraw</name></name><parameter_list pos:line="257" pos:column="35">()</parameter_list> <block pos:line="257" pos:column="38">{
	<expr_stmt><expr><call><name pos:line="258" pos:column="9">NeedWrapping</name><argument_list pos:line="258" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="259" pos:column="9">InvalidateStyleData</name><argument_list pos:line="259" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="260" pos:column="9">Redraw</name><argument_list pos:line="260" pos:column="15">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="263" pos:column="1">void</name></type> <name><name pos:line="263" pos:column="6">Editor</name><op:operator pos:line="263" pos:column="12">::</op:operator><name pos:line="263" pos:column="14">RefreshColourPalette</name></name><parameter_list pos:line="263" pos:column="34">(<param><decl><type><name pos:line="263" pos:column="35">Palette</name> <type:modifier pos:line="263" pos:column="43">&amp;</type:modifier></type><name pos:line="263" pos:column="44">pal</name></decl></param>, <param><decl><type><name pos:line="263" pos:column="49">bool</name></type> <name pos:line="263" pos:column="54">want</name></decl></param>)</parameter_list> <block pos:line="263" pos:column="60">{
	<expr_stmt><expr><call><name><name pos:line="264" pos:column="9">vs</name><op:operator pos:line="264" pos:column="11">.</op:operator><name pos:line="264" pos:column="12">RefreshColourPalette</name></name><argument_list pos:line="264" pos:column="32">(<argument><expr><name pos:line="264" pos:column="33">pal</name></expr></argument>, <argument><expr><name pos:line="264" pos:column="38">want</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="267" pos:column="1">void</name></type> <name><name pos:line="267" pos:column="6">Editor</name><op:operator pos:line="267" pos:column="12">::</op:operator><name pos:line="267" pos:column="14">RefreshStyleData</name></name><parameter_list pos:line="267" pos:column="30">()</parameter_list> <block pos:line="267" pos:column="33">{
	<if pos:line="268" pos:column="9">if <condition pos:line="268" pos:column="12">(<expr><op:operator pos:line="268" pos:column="13">!</op:operator><name pos:line="268" pos:column="14">stylesValid</name></expr>)</condition><then pos:line="268" pos:column="26"> <block pos:line="268" pos:column="27">{
		<expr_stmt><expr><name pos:line="269" pos:column="17">stylesValid</name> <op:operator pos:line="269" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="269" pos:column="31">true</lit:literal></expr>;</expr_stmt>
		<function_decl><type><name pos:line="270" pos:column="17">AutoSurface</name></type> <name pos:line="270" pos:column="29">surface</name><parameter_list pos:line="270" pos:column="36">(<param><decl><type><name pos:line="270" pos:column="37">this</name></type></decl></param>)</parameter_list>;</function_decl>
		<if pos:line="271" pos:column="17">if <condition pos:line="271" pos:column="20">(<expr><name pos:line="271" pos:column="21">surface</name></expr>)</condition><then pos:line="271" pos:column="29"> <block pos:line="271" pos:column="30">{
			<expr_stmt><expr><call><name><name pos:line="272" pos:column="25">vs</name><op:operator pos:line="272" pos:column="27">.</op:operator><name pos:line="272" pos:column="28">Refresh</name></name><argument_list pos:line="272" pos:column="35">(<argument><expr><op:operator pos:line="272" pos:column="36">*</op:operator><name pos:line="272" pos:column="37">surface</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="273" pos:column="25">RefreshColourPalette</name><argument_list pos:line="273" pos:column="45">(<argument><expr><name pos:line="273" pos:column="46">palette</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="273" pos:column="55">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="274" pos:column="25">palette</name><op:operator pos:line="274" pos:column="32">.</op:operator><name pos:line="274" pos:column="33">Allocate</name></name><argument_list pos:line="274" pos:column="41">(<argument><expr><name pos:line="274" pos:column="42">wMain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="275" pos:column="25">RefreshColourPalette</name><argument_list pos:line="275" pos:column="45">(<argument><expr><name pos:line="275" pos:column="46">palette</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="275" pos:column="55">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="277" pos:column="17">if <condition pos:line="277" pos:column="20">(<expr><name pos:line="277" pos:column="21">wrapIndentMode</name> <op:operator pos:line="277" pos:column="36">==</op:operator> <name pos:line="277" pos:column="39">SC_WRAPINDENT_INDENT</name></expr>)</condition><then pos:line="277" pos:column="60"> <block pos:line="277" pos:column="61">{
			<expr_stmt><expr><name pos:line="278" pos:column="25">wrapAddIndent</name> <op:operator pos:line="278" pos:column="39">=</op:operator> <call><name><name pos:line="278" pos:column="41">pdoc</name><op:operator pos:line="278" pos:column="45">-&gt;</op:operator><name pos:line="278" pos:column="47">IndentSize</name></name><argument_list pos:line="278" pos:column="57">()</argument_list></call> <op:operator pos:line="278" pos:column="60">*</op:operator> <name><name pos:line="278" pos:column="62">vs</name><op:operator pos:line="278" pos:column="64">.</op:operator><name pos:line="278" pos:column="65">spaceWidth</name></name></expr>;</expr_stmt>
		}</block></then> <else pos:line="279" pos:column="19">else <if pos:line="279" pos:column="24">if <condition pos:line="279" pos:column="27">(<expr><name pos:line="279" pos:column="28">wrapIndentMode</name> <op:operator pos:line="279" pos:column="43">==</op:operator> <name pos:line="279" pos:column="46">SC_WRAPINDENT_SAME</name></expr>)</condition><then pos:line="279" pos:column="65"> <block pos:line="279" pos:column="66">{
			<expr_stmt><expr><name pos:line="280" pos:column="25">wrapAddIndent</name> <op:operator pos:line="280" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="280" pos:column="41">0</lit:literal></expr>;</expr_stmt>
		}</block></then> <else pos:line="281" pos:column="19">else <block pos:line="281" pos:column="24">{ <comment type="line" pos:line="281" pos:column="26">//SC_WRAPINDENT_FIXED</comment>
			<expr_stmt><expr><name pos:line="282" pos:column="25">wrapAddIndent</name> <op:operator pos:line="282" pos:column="39">=</op:operator> <name pos:line="282" pos:column="41">wrapVisualStartIndent</name> <op:operator pos:line="282" pos:column="63">*</op:operator> <name><name pos:line="282" pos:column="65">vs</name><op:operator pos:line="282" pos:column="67">.</op:operator><name pos:line="282" pos:column="68">aveCharWidth</name></name></expr>;</expr_stmt>
			<if pos:line="283" pos:column="25">if <condition pos:line="283" pos:column="28">(<expr><op:operator pos:line="283" pos:column="29">(</op:operator><name pos:line="283" pos:column="30">wrapVisualFlags</name> <op:operator pos:line="283" pos:column="46">&amp;</op:operator> <name pos:line="283" pos:column="48">SC_WRAPVISUALFLAG_START</name><op:operator pos:line="283" pos:column="71">)</op:operator> <op:operator pos:line="283" pos:column="73">&amp;&amp;</op:operator> <op:operator pos:line="283" pos:column="76">(</op:operator><name pos:line="283" pos:column="77">wrapAddIndent</name> <op:operator pos:line="283" pos:column="91">&lt;=</op:operator> <lit:literal type="number" pos:line="283" pos:column="94">0</lit:literal><op:operator pos:line="283" pos:column="95">)</op:operator></expr>)</condition><then pos:line="283" pos:column="97">
				<expr_stmt><expr><name pos:line="284" pos:column="33">wrapAddIndent</name> <op:operator pos:line="284" pos:column="47">=</op:operator> <name><name pos:line="284" pos:column="49">vs</name><op:operator pos:line="284" pos:column="51">.</op:operator><name pos:line="284" pos:column="52">aveCharWidth</name></name></expr>;</expr_stmt></then></if> <comment type="line" pos:line="284" pos:column="66">// must indent to show start visual</comment>
		}</block></else></if></else></if>
		<expr_stmt><expr><call><name pos:line="286" pos:column="17">SetScrollBars</name><argument_list pos:line="286" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="287" pos:column="17">SetRectangularRange</name><argument_list pos:line="287" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="291" pos:column="1">PRectangle</name></type> <name><name pos:line="291" pos:column="12">Editor</name><op:operator pos:line="291" pos:column="18">::</op:operator><name pos:line="291" pos:column="20">GetClientRectangle</name></name><parameter_list pos:line="291" pos:column="38">()</parameter_list> <block pos:line="291" pos:column="41">{
	<return pos:line="292" pos:column="9">return <expr><call><name><name pos:line="292" pos:column="16">wMain</name><op:operator pos:line="292" pos:column="21">.</op:operator><name pos:line="292" pos:column="22">GetClientPosition</name></name><argument_list pos:line="292" pos:column="39">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="295" pos:column="1">PRectangle</name></type> <name><name pos:line="295" pos:column="12">Editor</name><op:operator pos:line="295" pos:column="18">::</op:operator><name pos:line="295" pos:column="20">GetTextRectangle</name></name><parameter_list pos:line="295" pos:column="36">()</parameter_list> <block pos:line="295" pos:column="39">{
	<decl_stmt><decl><type><name pos:line="296" pos:column="9">PRectangle</name></type> <name pos:line="296" pos:column="20">rc</name> <init pos:line="296" pos:column="23">= <expr><call><name pos:line="296" pos:column="25">GetClientRectangle</name><argument_list pos:line="296" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="297" pos:column="9">rc</name><op:operator pos:line="297" pos:column="11">.</op:operator><name pos:line="297" pos:column="12">left</name></name> <op:operator pos:line="297" pos:column="17">+=</op:operator> <name><name pos:line="297" pos:column="20">vs</name><op:operator pos:line="297" pos:column="22">.</op:operator><name pos:line="297" pos:column="23">fixedColumnWidth</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="298" pos:column="9">rc</name><op:operator pos:line="298" pos:column="11">.</op:operator><name pos:line="298" pos:column="12">right</name></name> <op:operator pos:line="298" pos:column="18">-=</op:operator> <name><name pos:line="298" pos:column="21">vs</name><op:operator pos:line="298" pos:column="23">.</op:operator><name pos:line="298" pos:column="24">rightMarginWidth</name></name></expr>;</expr_stmt>
	<return pos:line="299" pos:column="9">return <expr><name pos:line="299" pos:column="16">rc</name></expr>;</return>
}</block></function>

<function><type><name pos:line="302" pos:column="1">int</name></type> <name><name pos:line="302" pos:column="5">Editor</name><op:operator pos:line="302" pos:column="11">::</op:operator><name pos:line="302" pos:column="13">LinesOnScreen</name></name><parameter_list pos:line="302" pos:column="26">()</parameter_list> <block pos:line="302" pos:column="29">{
	<decl_stmt><decl><type><name pos:line="303" pos:column="9">PRectangle</name></type> <name pos:line="303" pos:column="20">rcClient</name> <init pos:line="303" pos:column="29">= <expr><call><name pos:line="303" pos:column="31">GetClientRectangle</name><argument_list pos:line="303" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="304" pos:column="9">int</name></type> <name pos:line="304" pos:column="13">htClient</name> <init pos:line="304" pos:column="22">= <expr><name><name pos:line="304" pos:column="24">rcClient</name><op:operator pos:line="304" pos:column="32">.</op:operator><name pos:line="304" pos:column="33">bottom</name></name> <op:operator pos:line="304" pos:column="40">-</op:operator> <name><name pos:line="304" pos:column="42">rcClient</name><op:operator pos:line="304" pos:column="50">.</op:operator><name pos:line="304" pos:column="51">top</name></name></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="305" pos:column="9">//Platform::DebugPrintf("lines on screen = %d\n", htClient / lineHeight + 1);</comment>
	<return pos:line="306" pos:column="9">return <expr><name pos:line="306" pos:column="16">htClient</name> <op:operator pos:line="306" pos:column="25">/</op:operator> <name><name pos:line="306" pos:column="27">vs</name><op:operator pos:line="306" pos:column="29">.</op:operator><name pos:line="306" pos:column="30">lineHeight</name></name></expr>;</return>
}</block></function>

<function><type><name pos:line="309" pos:column="1">int</name></type> <name><name pos:line="309" pos:column="5">Editor</name><op:operator pos:line="309" pos:column="11">::</op:operator><name pos:line="309" pos:column="13">LinesToScroll</name></name><parameter_list pos:line="309" pos:column="26">()</parameter_list> <block pos:line="309" pos:column="29">{
	<decl_stmt><decl><type><name pos:line="310" pos:column="9">int</name></type> <name pos:line="310" pos:column="13">retVal</name> <init pos:line="310" pos:column="20">= <expr><call><name pos:line="310" pos:column="22">LinesOnScreen</name><argument_list pos:line="310" pos:column="35">()</argument_list></call> <op:operator pos:line="310" pos:column="38">-</op:operator> <lit:literal type="number" pos:line="310" pos:column="40">1</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><name pos:line="311" pos:column="13">retVal</name> <op:operator pos:line="311" pos:column="20">&lt;</op:operator> <lit:literal type="number" pos:line="311" pos:column="22">1</lit:literal></expr>)</condition><then pos:line="311" pos:column="24">
		<return pos:line="312" pos:column="17">return <expr><lit:literal type="number" pos:line="312" pos:column="24">1</lit:literal></expr>;</return></then>
	<else pos:line="313" pos:column="9">else
		<return pos:line="314" pos:column="17">return <expr><name pos:line="314" pos:column="24">retVal</name></expr>;</return></else></if>
}</block></function>

<function><type><name pos:line="317" pos:column="1">int</name></type> <name><name pos:line="317" pos:column="5">Editor</name><op:operator pos:line="317" pos:column="11">::</op:operator><name pos:line="317" pos:column="13">MaxScrollPos</name></name><parameter_list pos:line="317" pos:column="25">()</parameter_list> <block pos:line="317" pos:column="28">{
	<comment type="line" pos:line="318" pos:column="9">//Platform::DebugPrintf("Lines %d screen = %d maxScroll = %d\n",</comment>
	<comment type="line" pos:line="319" pos:column="9">//LinesTotal(), LinesOnScreen(), LinesTotal() - LinesOnScreen() + 1);</comment>
	<decl_stmt><decl><type><name pos:line="320" pos:column="9">int</name></type> <name pos:line="320" pos:column="13">retVal</name> <init pos:line="320" pos:column="20">= <expr><call><name><name pos:line="320" pos:column="22">cs</name><op:operator pos:line="320" pos:column="24">.</op:operator><name pos:line="320" pos:column="25">LinesDisplayed</name></name><argument_list pos:line="320" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="321" pos:column="9">if <condition pos:line="321" pos:column="12">(<expr><name pos:line="321" pos:column="13">endAtLastLine</name></expr>)</condition><then pos:line="321" pos:column="27"> <block pos:line="321" pos:column="28">{
		<expr_stmt><expr><name pos:line="322" pos:column="17">retVal</name> <op:operator pos:line="322" pos:column="24">-=</op:operator> <call><name pos:line="322" pos:column="27">LinesOnScreen</name><argument_list pos:line="322" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="323" pos:column="11">else <block pos:line="323" pos:column="16">{
		<expr_stmt><expr><name pos:line="324" pos:column="17">retVal</name><op:operator pos:line="324" pos:column="23">--</op:operator></expr>;</expr_stmt>
	}</block></else></if>
	<if pos:line="326" pos:column="9">if <condition pos:line="326" pos:column="12">(<expr><name pos:line="326" pos:column="13">retVal</name> <op:operator pos:line="326" pos:column="20">&lt;</op:operator> <lit:literal type="number" pos:line="326" pos:column="22">0</lit:literal></expr>)</condition><then pos:line="326" pos:column="24"> <block pos:line="326" pos:column="25">{
		<return pos:line="327" pos:column="17">return <expr><lit:literal type="number" pos:line="327" pos:column="24">0</lit:literal></expr>;</return>
	}</block></then> <else pos:line="328" pos:column="11">else <block pos:line="328" pos:column="16">{
		<return pos:line="329" pos:column="17">return <expr><name pos:line="329" pos:column="24">retVal</name></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><specifier pos:line="333" pos:column="1">const</specifier> <name pos:line="333" pos:column="7">char</name> <type:modifier pos:line="333" pos:column="12">*</type:modifier></type><name pos:line="333" pos:column="13">ControlCharacterString</name><parameter_list pos:line="333" pos:column="35">(<param><decl><type><name pos:line="333" pos:column="36">unsigned</name> <name pos:line="333" pos:column="45">char</name></type> <name pos:line="333" pos:column="50">ch</name></decl></param>)</parameter_list> <block pos:line="333" pos:column="54">{
	<decl_stmt><decl><type><specifier pos:line="334" pos:column="9">const</specifier> <name pos:line="334" pos:column="15">char</name> <type:modifier pos:line="334" pos:column="20">*</type:modifier></type><name><name pos:line="334" pos:column="21">reps</name><index pos:line="334" pos:column="25">[]</index></name> <init pos:line="334" pos:column="28">= <expr><block pos:line="334" pos:column="30">{
		<expr><lit:literal type="string" pos:line="335" pos:column="17">"NUL"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="335" pos:column="24">"SOH"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="335" pos:column="31">"STX"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="335" pos:column="38">"ETX"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="335" pos:column="45">"EOT"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="335" pos:column="52">"ENQ"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="335" pos:column="59">"ACK"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="335" pos:column="66">"BEL"</lit:literal></expr>,
		<expr><lit:literal type="string" pos:line="336" pos:column="17">"BS"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="336" pos:column="23">"HT"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="336" pos:column="29">"LF"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="336" pos:column="35">"VT"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="336" pos:column="41">"FF"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="336" pos:column="47">"CR"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="336" pos:column="53">"SO"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="336" pos:column="59">"SI"</lit:literal></expr>,
		<expr><lit:literal type="string" pos:line="337" pos:column="17">"DLE"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="337" pos:column="24">"DC1"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="337" pos:column="31">"DC2"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="337" pos:column="38">"DC3"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="337" pos:column="45">"DC4"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="337" pos:column="52">"NAK"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="337" pos:column="59">"SYN"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="337" pos:column="66">"ETB"</lit:literal></expr>,
		<expr><lit:literal type="string" pos:line="338" pos:column="17">"CAN"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="338" pos:column="24">"EM"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="338" pos:column="30">"SUB"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="338" pos:column="37">"ESC"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="338" pos:column="44">"FS"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="338" pos:column="50">"GS"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="338" pos:column="56">"RS"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="338" pos:column="62">"US"</lit:literal></expr>
	}</block></expr></init></decl>;</decl_stmt>
	<if pos:line="340" pos:column="9">if <condition pos:line="340" pos:column="12">(<expr><name pos:line="340" pos:column="13">ch</name> <op:operator pos:line="340" pos:column="16">&lt;</op:operator> <op:operator pos:line="340" pos:column="18">(</op:operator><sizeof pos:line="340" pos:column="19">sizeof<argument_list pos:line="340" pos:column="25">(<argument><expr><name pos:line="340" pos:column="26">reps</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="340" pos:column="32">/</op:operator> <sizeof pos:line="340" pos:column="34">sizeof<argument_list pos:line="340" pos:column="40">(<argument><expr><name><name pos:line="340" pos:column="41">reps</name><index pos:line="340" pos:column="45">[<expr><lit:literal type="number" pos:line="340" pos:column="46">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof><op:operator pos:line="340" pos:column="49">)</op:operator></expr>)</condition><then pos:line="340" pos:column="51"> <block pos:line="340" pos:column="52">{
		<return pos:line="341" pos:column="17">return <expr><name><name pos:line="341" pos:column="24">reps</name><index pos:line="341" pos:column="28">[<expr><name pos:line="341" pos:column="29">ch</name></expr>]</index></name></expr>;</return>
	}</block></then> <else pos:line="342" pos:column="11">else <block pos:line="342" pos:column="16">{
		<return pos:line="343" pos:column="17">return <expr><lit:literal type="string" pos:line="343" pos:column="24">"BAD"</lit:literal></expr>;</return>
	}</block></else></if>
}</block></function>

<comment type="block" format="doxygen" pos:line="347" pos:column="1">/**
 * Convenience class to ensure LineLayout objects are always disposed.
 */</comment>
<class pos:line="350" pos:column="1">class <name pos:line="350" pos:column="7">AutoLineLayout</name> <block pos:line="350" pos:column="22">{<private type="default" pos:line="350" pos:column="23">
	<decl_stmt><decl><type><name pos:line="351" pos:column="9">LineLayoutCache</name> <type:modifier pos:line="351" pos:column="25">&amp;</type:modifier></type><name pos:line="351" pos:column="26">llc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="352" pos:column="9">LineLayout</name> <type:modifier pos:line="352" pos:column="20">*</type:modifier></type><name pos:line="352" pos:column="21">ll</name></decl>;</decl_stmt>
	<function_decl><type><name pos:line="353" pos:column="9">AutoLineLayout</name> <type:modifier pos:line="353" pos:column="24">&amp;</type:modifier></type><name pos:line="353" pos:column="25">operator=</name><parameter_list pos:line="353" pos:column="34">(<param><decl><type><specifier pos:line="353" pos:column="35">const</specifier></type> <name pos:line="353" pos:column="41">AutoLineLayout</name> <type:modifier pos:line="353" pos:column="56">&amp;</type:modifier></decl></param>)</parameter_list>;</function_decl>
</private><public pos:line="354" pos:column="1">public:
	<constructor><name pos:line="355" pos:column="9">AutoLineLayout</name><parameter_list pos:line="355" pos:column="23">(<param><decl><type><name pos:line="355" pos:column="24">LineLayoutCache</name> <type:modifier pos:line="355" pos:column="40">&amp;</type:modifier></type><name pos:line="355" pos:column="41">llc_</name></decl></param>, <param><decl><type><name pos:line="355" pos:column="47">LineLayout</name> <type:modifier pos:line="355" pos:column="58">*</type:modifier></type><name pos:line="355" pos:column="59">ll_</name></decl></param>)</parameter_list> <member_list pos:line="355" pos:column="64">: <call><name pos:line="355" pos:column="66">llc</name><argument_list pos:line="355" pos:column="69">(<argument><expr><name pos:line="355" pos:column="70">llc_</name></expr></argument>)</argument_list></call><op:operator pos:line="355" pos:column="75">,</op:operator> <call><name pos:line="355" pos:column="77">ll</name><argument_list pos:line="355" pos:column="79">(<argument><expr><name pos:line="355" pos:column="80">ll_</name></expr></argument>)</argument_list></call> </member_list><block pos:line="355" pos:column="85">{}</block></constructor>
	<destructor><name pos:line="356" pos:column="9">~<name pos:line="356" pos:column="10">AutoLineLayout</name></name><parameter_list pos:line="356" pos:column="24">()</parameter_list> <block pos:line="356" pos:column="27">{
		<expr_stmt><expr><call><name><name pos:line="357" pos:column="17">llc</name><op:operator pos:line="357" pos:column="20">.</op:operator><name pos:line="357" pos:column="21">Dispose</name></name><argument_list pos:line="357" pos:column="28">(<argument><expr><name pos:line="357" pos:column="29">ll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="358" pos:column="17">ll</name> <op:operator pos:line="358" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="358" pos:column="22">0</lit:literal></expr>;</expr_stmt>
	}</block></destructor>
	<function><type><name pos:line="360" pos:column="9">LineLayout</name> <type:modifier pos:line="360" pos:column="20">*</type:modifier></type><name pos:line="360" pos:column="21">operator-&gt;</name><parameter_list pos:line="360" pos:column="31">()</parameter_list> <specifier pos:line="360" pos:column="34">const</specifier> <block pos:line="360" pos:column="40">{
		<return pos:line="361" pos:column="17">return <expr><name pos:line="361" pos:column="24">ll</name></expr>;</return>
	}</block></function>
	<function><name pos:line="363" pos:column="9">operator LineLayout *</name><parameter_list pos:line="363" pos:column="30">()</parameter_list> <specifier pos:line="363" pos:column="33">const</specifier> <block pos:line="363" pos:column="39">{
		<return pos:line="364" pos:column="17">return <expr><name pos:line="364" pos:column="24">ll</name></expr>;</return>
	}</block></function>
	<function><type><name pos:line="366" pos:column="9">void</name></type> <name pos:line="366" pos:column="14">Set</name><parameter_list pos:line="366" pos:column="17">(<param><decl><type><name pos:line="366" pos:column="18">LineLayout</name> <type:modifier pos:line="366" pos:column="29">*</type:modifier></type><name pos:line="366" pos:column="30">ll_</name></decl></param>)</parameter_list> <block pos:line="366" pos:column="35">{
		<expr_stmt><expr><call><name><name pos:line="367" pos:column="17">llc</name><op:operator pos:line="367" pos:column="20">.</op:operator><name pos:line="367" pos:column="21">Dispose</name></name><argument_list pos:line="367" pos:column="28">(<argument><expr><name pos:line="367" pos:column="29">ll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="368" pos:column="17">ll</name> <op:operator pos:line="368" pos:column="20">=</op:operator> <name pos:line="368" pos:column="22">ll_</name></expr>;</expr_stmt>
	}</block></function>
</public>}</block>;</class>

<function><type><name pos:line="372" pos:column="1">SelectionPosition</name></type> <name><name pos:line="372" pos:column="19">Editor</name><op:operator pos:line="372" pos:column="25">::</op:operator><name pos:line="372" pos:column="27">ClampPositionIntoDocument</name></name><parameter_list pos:line="372" pos:column="52">(<param><decl><type><name pos:line="372" pos:column="53">SelectionPosition</name></type> <name pos:line="372" pos:column="71">sp</name></decl></param>)</parameter_list> <specifier pos:line="372" pos:column="75">const</specifier> <block pos:line="372" pos:column="81">{
	<if pos:line="373" pos:column="9">if <condition pos:line="373" pos:column="12">(<expr><call><name><name pos:line="373" pos:column="13">sp</name><op:operator pos:line="373" pos:column="15">.</op:operator><name pos:line="373" pos:column="16">Position</name></name><argument_list pos:line="373" pos:column="24">()</argument_list></call> <op:operator pos:line="373" pos:column="27">&lt;</op:operator> <lit:literal type="number" pos:line="373" pos:column="29">0</lit:literal></expr>)</condition><then pos:line="373" pos:column="31"> <block pos:line="373" pos:column="32">{
		<return pos:line="374" pos:column="17">return <expr><call><name pos:line="374" pos:column="24">SelectionPosition</name><argument_list pos:line="374" pos:column="41">(<argument><expr><lit:literal type="number" pos:line="374" pos:column="42">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then> <else pos:line="375" pos:column="11">else <if pos:line="375" pos:column="16">if <condition pos:line="375" pos:column="19">(<expr><call><name><name pos:line="375" pos:column="20">sp</name><op:operator pos:line="375" pos:column="22">.</op:operator><name pos:line="375" pos:column="23">Position</name></name><argument_list pos:line="375" pos:column="31">()</argument_list></call> <op:operator pos:line="375" pos:column="34">&gt;</op:operator> <call><name><name pos:line="375" pos:column="36">pdoc</name><op:operator pos:line="375" pos:column="40">-&gt;</op:operator><name pos:line="375" pos:column="42">Length</name></name><argument_list pos:line="375" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="375" pos:column="51"> <block pos:line="375" pos:column="52">{
		<return pos:line="376" pos:column="17">return <expr><call><name pos:line="376" pos:column="24">SelectionPosition</name><argument_list pos:line="376" pos:column="41">(<argument><expr><call><name><name pos:line="376" pos:column="42">pdoc</name><op:operator pos:line="376" pos:column="46">-&gt;</op:operator><name pos:line="376" pos:column="48">Length</name></name><argument_list pos:line="376" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then> <else pos:line="377" pos:column="11">else <block pos:line="377" pos:column="16">{
		<comment type="line" pos:line="378" pos:column="17">// If not at end of line then set offset to 0</comment>
		<if pos:line="379" pos:column="17">if <condition pos:line="379" pos:column="20">(<expr><op:operator pos:line="379" pos:column="21">!</op:operator><call><name><name pos:line="379" pos:column="22">pdoc</name><op:operator pos:line="379" pos:column="26">-&gt;</op:operator><name pos:line="379" pos:column="28">IsLineEndPosition</name></name><argument_list pos:line="379" pos:column="45">(<argument><expr><call><name><name pos:line="379" pos:column="46">sp</name><op:operator pos:line="379" pos:column="48">.</op:operator><name pos:line="379" pos:column="49">Position</name></name><argument_list pos:line="379" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="379" pos:column="61">
			<expr_stmt><expr><call><name><name pos:line="380" pos:column="25">sp</name><op:operator pos:line="380" pos:column="27">.</op:operator><name pos:line="380" pos:column="28">SetVirtualSpace</name></name><argument_list pos:line="380" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="380" pos:column="44">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<return pos:line="381" pos:column="17">return <expr><name pos:line="381" pos:column="24">sp</name></expr>;</return>
	}</block></else></if></else></if>
}</block></function>

<function><type><name pos:line="385" pos:column="1">Point</name></type> <name><name pos:line="385" pos:column="7">Editor</name><op:operator pos:line="385" pos:column="13">::</op:operator><name pos:line="385" pos:column="15">LocationFromPosition</name></name><parameter_list pos:line="385" pos:column="35">(<param><decl><type><name pos:line="385" pos:column="36">SelectionPosition</name></type> <name pos:line="385" pos:column="54">pos</name></decl></param>)</parameter_list> <block pos:line="385" pos:column="59">{
	<decl_stmt><decl><type><name pos:line="386" pos:column="9">Point</name></type> <name pos:line="386" pos:column="15">pt</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="387" pos:column="9">RefreshStyleData</name><argument_list pos:line="387" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="388" pos:column="9">if <condition pos:line="388" pos:column="12">(<expr><call><name><name pos:line="388" pos:column="13">pos</name><op:operator pos:line="388" pos:column="16">.</op:operator><name pos:line="388" pos:column="17">Position</name></name><argument_list pos:line="388" pos:column="25">()</argument_list></call> <op:operator pos:line="388" pos:column="28">==</op:operator> <name pos:line="388" pos:column="31">INVALID_POSITION</name></expr>)</condition><then pos:line="388" pos:column="48">
		<return pos:line="389" pos:column="17">return <expr><name pos:line="389" pos:column="24">pt</name></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="390" pos:column="9">int</name></type> <name pos:line="390" pos:column="13">line</name> <init pos:line="390" pos:column="18">= <expr><call><name><name pos:line="390" pos:column="20">pdoc</name><op:operator pos:line="390" pos:column="24">-&gt;</op:operator><name pos:line="390" pos:column="26">LineFromPosition</name></name><argument_list pos:line="390" pos:column="42">(<argument><expr><call><name><name pos:line="390" pos:column="43">pos</name><op:operator pos:line="390" pos:column="46">.</op:operator><name pos:line="390" pos:column="47">Position</name></name><argument_list pos:line="390" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="391" pos:column="9">int</name></type> <name pos:line="391" pos:column="13">lineVisible</name> <init pos:line="391" pos:column="25">= <expr><call><name><name pos:line="391" pos:column="27">cs</name><op:operator pos:line="391" pos:column="29">.</op:operator><name pos:line="391" pos:column="30">DisplayFromDoc</name></name><argument_list pos:line="391" pos:column="44">(<argument><expr><name pos:line="391" pos:column="45">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="392" pos:column="9">//Platform::DebugPrintf("line=%d\n", line);</comment>
	<function_decl><type><name pos:line="393" pos:column="9">AutoSurface</name></type> <name pos:line="393" pos:column="21">surface</name><parameter_list pos:line="393" pos:column="28">(<param><decl><type><name pos:line="393" pos:column="29">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="394" pos:column="9">AutoLineLayout</name></type> <name pos:line="394" pos:column="24">ll</name><argument_list pos:line="394" pos:column="26">(<argument><expr><name pos:line="394" pos:column="27">llc</name></expr></argument>, <argument><expr><call><name pos:line="394" pos:column="32">RetrieveLineLayout</name><argument_list pos:line="394" pos:column="50">(<argument><expr><name pos:line="394" pos:column="51">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<if pos:line="395" pos:column="9">if <condition pos:line="395" pos:column="12">(<expr><name pos:line="395" pos:column="13">surface</name> <op:operator pos:line="395" pos:column="21">&amp;&amp;</op:operator> <name pos:line="395" pos:column="24">ll</name></expr>)</condition><then pos:line="395" pos:column="27"> <block pos:line="395" pos:column="28">{
		<comment type="line" pos:line="396" pos:column="17">// -1 because of adding in for visible lines in following loop.</comment>
		<expr_stmt><expr><name><name pos:line="397" pos:column="17">pt</name><op:operator pos:line="397" pos:column="19">.</op:operator><name pos:line="397" pos:column="20">y</name></name> <op:operator pos:line="397" pos:column="22">=</op:operator> <op:operator pos:line="397" pos:column="24">(</op:operator><name pos:line="397" pos:column="25">lineVisible</name> <op:operator pos:line="397" pos:column="37">-</op:operator> <name pos:line="397" pos:column="39">topLine</name> <op:operator pos:line="397" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="397" pos:column="49">1</lit:literal><op:operator pos:line="397" pos:column="50">)</op:operator> <op:operator pos:line="397" pos:column="52">*</op:operator> <name><name pos:line="397" pos:column="54">vs</name><op:operator pos:line="397" pos:column="56">.</op:operator><name pos:line="397" pos:column="57">lineHeight</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="398" pos:column="17">pt</name><op:operator pos:line="398" pos:column="19">.</op:operator><name pos:line="398" pos:column="20">x</name></name> <op:operator pos:line="398" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="398" pos:column="24">0</lit:literal></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="399" pos:column="17">unsigned</name> <name pos:line="399" pos:column="26">int</name></type> <name pos:line="399" pos:column="30">posLineStart</name> <init pos:line="399" pos:column="43">= <expr><call><name><name pos:line="399" pos:column="45">pdoc</name><op:operator pos:line="399" pos:column="49">-&gt;</op:operator><name pos:line="399" pos:column="51">LineStart</name></name><argument_list pos:line="399" pos:column="60">(<argument><expr><name pos:line="399" pos:column="61">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="400" pos:column="17">LayoutLine</name><argument_list pos:line="400" pos:column="27">(<argument><expr><name pos:line="400" pos:column="28">line</name></expr></argument>, <argument><expr><name pos:line="400" pos:column="34">surface</name></expr></argument>, <argument><expr><name pos:line="400" pos:column="43">vs</name></expr></argument>, <argument><expr><name pos:line="400" pos:column="47">ll</name></expr></argument>, <argument><expr><name pos:line="400" pos:column="51">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="401" pos:column="17">int</name></type> <name pos:line="401" pos:column="21">posInLine</name> <init pos:line="401" pos:column="31">= <expr><call><name><name pos:line="401" pos:column="33">pos</name><op:operator pos:line="401" pos:column="36">.</op:operator><name pos:line="401" pos:column="37">Position</name></name><argument_list pos:line="401" pos:column="45">()</argument_list></call> <op:operator pos:line="401" pos:column="48">-</op:operator> <name pos:line="401" pos:column="50">posLineStart</name></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="402" pos:column="17">// In case of very long line put x at arbitrary large position</comment>
		<if pos:line="403" pos:column="17">if <condition pos:line="403" pos:column="20">(<expr><name pos:line="403" pos:column="21">posInLine</name> <op:operator pos:line="403" pos:column="31">&gt;</op:operator> <name><name pos:line="403" pos:column="33">ll</name><op:operator pos:line="403" pos:column="35">-&gt;</op:operator><name pos:line="403" pos:column="37">maxLineLength</name></name></expr>)</condition><then pos:line="403" pos:column="51"> <block pos:line="403" pos:column="52">{
			<expr_stmt><expr><name><name pos:line="404" pos:column="25">pt</name><op:operator pos:line="404" pos:column="27">.</op:operator><name pos:line="404" pos:column="28">x</name></name> <op:operator pos:line="404" pos:column="30">=</op:operator> <name><name pos:line="404" pos:column="32">ll</name><op:operator pos:line="404" pos:column="34">-&gt;</op:operator><name pos:line="404" pos:column="36">positions</name><index pos:line="404" pos:column="45">[<expr><name><name pos:line="404" pos:column="46">ll</name><op:operator pos:line="404" pos:column="48">-&gt;</op:operator><name pos:line="404" pos:column="50">maxLineLength</name></name></expr>]</index></name> <op:operator pos:line="404" pos:column="65">-</op:operator> <name><name pos:line="404" pos:column="67">ll</name><op:operator pos:line="404" pos:column="69">-&gt;</op:operator><name pos:line="404" pos:column="71">positions</name><index pos:line="404" pos:column="80">[<expr><call><name><name pos:line="404" pos:column="81">ll</name><op:operator pos:line="404" pos:column="83">-&gt;</op:operator><name pos:line="404" pos:column="85">LineStart</name></name><argument_list pos:line="404" pos:column="94">(<argument><expr><name><name pos:line="404" pos:column="95">ll</name><op:operator pos:line="404" pos:column="97">-&gt;</op:operator><name pos:line="404" pos:column="99">lines</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
		}</block></then></if>

		<for pos:line="407" pos:column="17">for (<init><decl><type><name pos:line="407" pos:column="22">int</name></type> <name pos:line="407" pos:column="26">subLine</name> <init pos:line="407" pos:column="34">= <expr><lit:literal type="number" pos:line="407" pos:column="36">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="407" pos:column="39">subLine</name> <op:operator pos:line="407" pos:column="47">&lt;</op:operator> <name><name pos:line="407" pos:column="49">ll</name><op:operator pos:line="407" pos:column="51">-&gt;</op:operator><name pos:line="407" pos:column="53">lines</name></name></expr>;</condition> <incr><expr><name pos:line="407" pos:column="60">subLine</name><op:operator pos:line="407" pos:column="67">++</op:operator></expr></incr>) <block pos:line="407" pos:column="71">{
			<if pos:line="408" pos:column="25">if <condition pos:line="408" pos:column="28">(<expr><op:operator pos:line="408" pos:column="29">(</op:operator><name pos:line="408" pos:column="30">posInLine</name> <op:operator pos:line="408" pos:column="40">&gt;=</op:operator> <call><name><name pos:line="408" pos:column="43">ll</name><op:operator pos:line="408" pos:column="45">-&gt;</op:operator><name pos:line="408" pos:column="47">LineStart</name></name><argument_list pos:line="408" pos:column="56">(<argument><expr><name pos:line="408" pos:column="57">subLine</name></expr></argument>)</argument_list></call><op:operator pos:line="408" pos:column="65">)</op:operator> <op:operator pos:line="408" pos:column="67">&amp;&amp;</op:operator> <op:operator pos:line="408" pos:column="70">(</op:operator><name pos:line="408" pos:column="71">posInLine</name> <op:operator pos:line="408" pos:column="81">&lt;=</op:operator> <call><name><name pos:line="408" pos:column="84">ll</name><op:operator pos:line="408" pos:column="86">-&gt;</op:operator><name pos:line="408" pos:column="88">LineStart</name></name><argument_list pos:line="408" pos:column="97">(<argument><expr><name pos:line="408" pos:column="98">subLine</name> <op:operator pos:line="408" pos:column="106">+</op:operator> <lit:literal type="number" pos:line="408" pos:column="108">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="408" pos:column="110">)</op:operator></expr>)</condition><then pos:line="408" pos:column="112"> <block pos:line="408" pos:column="113">{
				<expr_stmt><expr><name><name pos:line="409" pos:column="33">pt</name><op:operator pos:line="409" pos:column="35">.</op:operator><name pos:line="409" pos:column="36">x</name></name> <op:operator pos:line="409" pos:column="38">=</op:operator> <name><name pos:line="409" pos:column="40">ll</name><op:operator pos:line="409" pos:column="42">-&gt;</op:operator><name pos:line="409" pos:column="44">positions</name><index pos:line="409" pos:column="53">[<expr><name pos:line="409" pos:column="54">posInLine</name></expr>]</index></name> <op:operator pos:line="409" pos:column="65">-</op:operator> <name><name pos:line="409" pos:column="67">ll</name><op:operator pos:line="409" pos:column="69">-&gt;</op:operator><name pos:line="409" pos:column="71">positions</name><index pos:line="409" pos:column="80">[<expr><call><name><name pos:line="409" pos:column="81">ll</name><op:operator pos:line="409" pos:column="83">-&gt;</op:operator><name pos:line="409" pos:column="85">LineStart</name></name><argument_list pos:line="409" pos:column="94">(<argument><expr><name pos:line="409" pos:column="95">subLine</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
				<if pos:line="410" pos:column="33">if <condition pos:line="410" pos:column="36">(<expr><name><name pos:line="410" pos:column="37">ll</name><op:operator pos:line="410" pos:column="39">-&gt;</op:operator><name pos:line="410" pos:column="41">wrapIndent</name></name> <op:operator pos:line="410" pos:column="52">!=</op:operator> <lit:literal type="number" pos:line="410" pos:column="55">0</lit:literal></expr>)</condition><then pos:line="410" pos:column="57"> <block pos:line="410" pos:column="58">{
					<decl_stmt><decl><type><name pos:line="411" pos:column="41">int</name></type> <name pos:line="411" pos:column="45">lineStart</name> <init pos:line="411" pos:column="55">= <expr><call><name><name pos:line="411" pos:column="57">ll</name><op:operator pos:line="411" pos:column="59">-&gt;</op:operator><name pos:line="411" pos:column="61">LineStart</name></name><argument_list pos:line="411" pos:column="70">(<argument><expr><name pos:line="411" pos:column="71">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="412" pos:column="41">if <condition pos:line="412" pos:column="44">(<expr><name pos:line="412" pos:column="45">lineStart</name> <op:operator pos:line="412" pos:column="55">!=</op:operator> <lit:literal type="number" pos:line="412" pos:column="58">0</lit:literal></expr>)</condition><then pos:line="412" pos:column="60">	<comment type="line" pos:line="412" pos:column="65">// Wrapped</comment>
						<expr_stmt><expr><name><name pos:line="413" pos:column="49">pt</name><op:operator pos:line="413" pos:column="51">.</op:operator><name pos:line="413" pos:column="52">x</name></name> <op:operator pos:line="413" pos:column="54">+=</op:operator> <name><name pos:line="413" pos:column="57">ll</name><op:operator pos:line="413" pos:column="59">-&gt;</op:operator><name pos:line="413" pos:column="61">wrapIndent</name></name></expr>;</expr_stmt></then></if>
				}</block></then></if>
			}</block></then></if>
			<if pos:line="416" pos:column="25">if <condition pos:line="416" pos:column="28">(<expr><name pos:line="416" pos:column="29">posInLine</name> <op:operator pos:line="416" pos:column="39">&gt;=</op:operator> <call><name><name pos:line="416" pos:column="42">ll</name><op:operator pos:line="416" pos:column="44">-&gt;</op:operator><name pos:line="416" pos:column="46">LineStart</name></name><argument_list pos:line="416" pos:column="55">(<argument><expr><name pos:line="416" pos:column="56">subLine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="416" pos:column="65"> <block pos:line="416" pos:column="66">{
				<expr_stmt><expr><name><name pos:line="417" pos:column="33">pt</name><op:operator pos:line="417" pos:column="35">.</op:operator><name pos:line="417" pos:column="36">y</name></name> <op:operator pos:line="417" pos:column="38">+=</op:operator> <name><name pos:line="417" pos:column="41">vs</name><op:operator pos:line="417" pos:column="43">.</op:operator><name pos:line="417" pos:column="44">lineHeight</name></name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
		<expr_stmt><expr><name><name pos:line="420" pos:column="17">pt</name><op:operator pos:line="420" pos:column="19">.</op:operator><name pos:line="420" pos:column="20">x</name></name> <op:operator pos:line="420" pos:column="22">+=</op:operator> <name><name pos:line="420" pos:column="25">vs</name><op:operator pos:line="420" pos:column="27">.</op:operator><name pos:line="420" pos:column="28">fixedColumnWidth</name></name> <op:operator pos:line="420" pos:column="45">-</op:operator> <name pos:line="420" pos:column="47">xOffset</name></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name><name pos:line="422" pos:column="9">pt</name><op:operator pos:line="422" pos:column="11">.</op:operator><name pos:line="422" pos:column="12">x</name></name> <op:operator pos:line="422" pos:column="14">+=</op:operator> <call><name><name pos:line="422" pos:column="17">pos</name><op:operator pos:line="422" pos:column="20">.</op:operator><name pos:line="422" pos:column="21">VirtualSpace</name></name><argument_list pos:line="422" pos:column="33">()</argument_list></call> <op:operator pos:line="422" pos:column="36">*</op:operator> <call><name><name pos:line="422" pos:column="38">static_cast</name><argument_list pos:line="422" pos:column="49">&lt;<argument><expr><name pos:line="422" pos:column="50">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="422" pos:column="54">(<argument><expr><name><name pos:line="422" pos:column="55">vs</name><op:operator pos:line="422" pos:column="57">.</op:operator><name pos:line="422" pos:column="58">styles</name><index pos:line="422" pos:column="64">[<expr><call><name><name pos:line="422" pos:column="65">ll</name><op:operator pos:line="422" pos:column="67">-&gt;</op:operator><name pos:line="422" pos:column="69">EndLineStyle</name></name><argument_list pos:line="422" pos:column="81">()</argument_list></call></expr>]</index></name><op:operator pos:line="422" pos:column="84">.</op:operator><name pos:line="422" pos:column="85">spaceWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="423" pos:column="9">return <expr><name pos:line="423" pos:column="16">pt</name></expr>;</return>
}</block></function>

<function><type><name pos:line="426" pos:column="1">Point</name></type> <name><name pos:line="426" pos:column="7">Editor</name><op:operator pos:line="426" pos:column="13">::</op:operator><name pos:line="426" pos:column="15">LocationFromPosition</name></name><parameter_list pos:line="426" pos:column="35">(<param><decl><type><name pos:line="426" pos:column="36">int</name></type> <name pos:line="426" pos:column="40">pos</name></decl></param>)</parameter_list> <block pos:line="426" pos:column="45">{
	<return pos:line="427" pos:column="9">return <expr><call><name pos:line="427" pos:column="16">LocationFromPosition</name><argument_list pos:line="427" pos:column="36">(<argument><expr><call><name pos:line="427" pos:column="37">SelectionPosition</name><argument_list pos:line="427" pos:column="54">(<argument><expr><name pos:line="427" pos:column="55">pos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="430" pos:column="1">int</name></type> <name><name pos:line="430" pos:column="5">Editor</name><op:operator pos:line="430" pos:column="11">::</op:operator><name pos:line="430" pos:column="13">XFromPosition</name></name><parameter_list pos:line="430" pos:column="26">(<param><decl><type><name pos:line="430" pos:column="27">int</name></type> <name pos:line="430" pos:column="31">pos</name></decl></param>)</parameter_list> <block pos:line="430" pos:column="36">{
	<decl_stmt><decl><type><name pos:line="431" pos:column="9">Point</name></type> <name pos:line="431" pos:column="15">pt</name> <init pos:line="431" pos:column="18">= <expr><call><name pos:line="431" pos:column="20">LocationFromPosition</name><argument_list pos:line="431" pos:column="40">(<argument><expr><name pos:line="431" pos:column="41">pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="432" pos:column="9">return <expr><name><name pos:line="432" pos:column="16">pt</name><op:operator pos:line="432" pos:column="18">.</op:operator><name pos:line="432" pos:column="19">x</name></name> <op:operator pos:line="432" pos:column="21">-</op:operator> <name><name pos:line="432" pos:column="23">vs</name><op:operator pos:line="432" pos:column="25">.</op:operator><name pos:line="432" pos:column="26">fixedColumnWidth</name></name> <op:operator pos:line="432" pos:column="43">+</op:operator> <name pos:line="432" pos:column="45">xOffset</name></expr>;</return>
}</block></function>

<function><type><name pos:line="435" pos:column="1">int</name></type> <name><name pos:line="435" pos:column="5">Editor</name><op:operator pos:line="435" pos:column="11">::</op:operator><name pos:line="435" pos:column="13">XFromPosition</name></name><parameter_list pos:line="435" pos:column="26">(<param><decl><type><name pos:line="435" pos:column="27">SelectionPosition</name></type> <name pos:line="435" pos:column="45">sp</name></decl></param>)</parameter_list> <block pos:line="435" pos:column="49">{
	<decl_stmt><decl><type><name pos:line="436" pos:column="9">Point</name></type> <name pos:line="436" pos:column="15">pt</name> <init pos:line="436" pos:column="18">= <expr><call><name pos:line="436" pos:column="20">LocationFromPosition</name><argument_list pos:line="436" pos:column="40">(<argument><expr><name pos:line="436" pos:column="41">sp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="437" pos:column="9">return <expr><name><name pos:line="437" pos:column="16">pt</name><op:operator pos:line="437" pos:column="18">.</op:operator><name pos:line="437" pos:column="19">x</name></name> <op:operator pos:line="437" pos:column="21">-</op:operator> <name><name pos:line="437" pos:column="23">vs</name><op:operator pos:line="437" pos:column="25">.</op:operator><name pos:line="437" pos:column="26">fixedColumnWidth</name></name> <op:operator pos:line="437" pos:column="43">+</op:operator> <name pos:line="437" pos:column="45">xOffset</name></expr>;</return>
}</block></function>

<function><type><name pos:line="440" pos:column="1">int</name></type> <name><name pos:line="440" pos:column="5">Editor</name><op:operator pos:line="440" pos:column="11">::</op:operator><name pos:line="440" pos:column="13">LineFromLocation</name></name><parameter_list pos:line="440" pos:column="29">(<param><decl><type><name pos:line="440" pos:column="30">Point</name></type> <name pos:line="440" pos:column="36">pt</name></decl></param>)</parameter_list> <block pos:line="440" pos:column="40">{
	<return pos:line="441" pos:column="9">return <expr><call><name><name pos:line="441" pos:column="16">cs</name><op:operator pos:line="441" pos:column="18">.</op:operator><name pos:line="441" pos:column="19">DocFromDisplay</name></name><argument_list pos:line="441" pos:column="33">(<argument><expr><name><name pos:line="441" pos:column="34">pt</name><op:operator pos:line="441" pos:column="36">.</op:operator><name pos:line="441" pos:column="37">y</name></name> <op:operator pos:line="441" pos:column="39">/</op:operator> <name><name pos:line="441" pos:column="41">vs</name><op:operator pos:line="441" pos:column="43">.</op:operator><name pos:line="441" pos:column="44">lineHeight</name></name> <op:operator pos:line="441" pos:column="55">+</op:operator> <name pos:line="441" pos:column="57">topLine</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="444" pos:column="1">void</name></type> <name><name pos:line="444" pos:column="6">Editor</name><op:operator pos:line="444" pos:column="12">::</op:operator><name pos:line="444" pos:column="14">SetTopLine</name></name><parameter_list pos:line="444" pos:column="24">(<param><decl><type><name pos:line="444" pos:column="25">int</name></type> <name pos:line="444" pos:column="29">topLineNew</name></decl></param>)</parameter_list> <block pos:line="444" pos:column="41">{
	<if pos:line="445" pos:column="9">if <condition pos:line="445" pos:column="12">(<expr><name pos:line="445" pos:column="13">topLine</name> <op:operator pos:line="445" pos:column="21">!=</op:operator> <name pos:line="445" pos:column="24">topLineNew</name></expr>)</condition><then pos:line="445" pos:column="35"> <block pos:line="445" pos:column="36">{
		<expr_stmt><expr><name pos:line="446" pos:column="17">topLine</name> <op:operator pos:line="446" pos:column="25">=</op:operator> <name pos:line="446" pos:column="27">topLineNew</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="447" pos:column="17">ContainerNeedsUpdate</name><argument_list pos:line="447" pos:column="37">(<argument><expr><name pos:line="447" pos:column="38">SC_UPDATE_V_SCROLL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name pos:line="449" pos:column="9">posTopLine</name> <op:operator pos:line="449" pos:column="20">=</op:operator> <call><name><name pos:line="449" pos:column="22">pdoc</name><op:operator pos:line="449" pos:column="26">-&gt;</op:operator><name pos:line="449" pos:column="28">LineStart</name></name><argument_list pos:line="449" pos:column="37">(<argument><expr><call><name><name pos:line="449" pos:column="38">cs</name><op:operator pos:line="449" pos:column="40">.</op:operator><name pos:line="449" pos:column="41">DocFromDisplay</name></name><argument_list pos:line="449" pos:column="55">(<argument><expr><name pos:line="449" pos:column="56">topLine</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="452" pos:column="1">SelectionPosition</name></type> <name><name pos:line="452" pos:column="19">Editor</name><op:operator pos:line="452" pos:column="25">::</op:operator><name pos:line="452" pos:column="27">SPositionFromLocation</name></name><parameter_list pos:line="452" pos:column="48">(<param><decl><type><name pos:line="452" pos:column="49">Point</name></type> <name pos:line="452" pos:column="55">pt</name></decl></param>, <param><decl><type><name pos:line="452" pos:column="59">bool</name></type> <name pos:line="452" pos:column="64">canReturnInvalid</name></decl></param>, <param><decl><type><name pos:line="452" pos:column="82">bool</name></type> <name pos:line="452" pos:column="87">charPosition</name></decl></param>, <param><decl><type><name pos:line="452" pos:column="101">bool</name></type> <name pos:line="452" pos:column="106">virtualSpace</name></decl></param>)</parameter_list> <block pos:line="452" pos:column="120">{
	<expr_stmt><expr><call><name pos:line="453" pos:column="9">RefreshStyleData</name><argument_list pos:line="453" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="454" pos:column="9">if <condition pos:line="454" pos:column="12">(<expr><name pos:line="454" pos:column="13">canReturnInvalid</name></expr>)</condition><then pos:line="454" pos:column="30"> <block pos:line="454" pos:column="31">{
		<decl_stmt><decl><type><name pos:line="455" pos:column="17">PRectangle</name></type> <name pos:line="455" pos:column="28">rcClient</name> <init pos:line="455" pos:column="37">= <expr><call><name pos:line="455" pos:column="39">GetTextRectangle</name><argument_list pos:line="455" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="456" pos:column="17">if <condition pos:line="456" pos:column="20">(<expr><op:operator pos:line="456" pos:column="21">!</op:operator><call><name><name pos:line="456" pos:column="22">rcClient</name><op:operator pos:line="456" pos:column="30">.</op:operator><name pos:line="456" pos:column="31">Contains</name></name><argument_list pos:line="456" pos:column="39">(<argument><expr><name pos:line="456" pos:column="40">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="456" pos:column="44">
			<return pos:line="457" pos:column="25">return <expr><call><name pos:line="457" pos:column="32">SelectionPosition</name><argument_list pos:line="457" pos:column="49">(<argument><expr><name pos:line="457" pos:column="50">INVALID_POSITION</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
		<if pos:line="458" pos:column="17">if <condition pos:line="458" pos:column="20">(<expr><name><name pos:line="458" pos:column="21">pt</name><op:operator pos:line="458" pos:column="23">.</op:operator><name pos:line="458" pos:column="24">x</name></name> <op:operator pos:line="458" pos:column="26">&lt;</op:operator> <name><name pos:line="458" pos:column="28">vs</name><op:operator pos:line="458" pos:column="30">.</op:operator><name pos:line="458" pos:column="31">fixedColumnWidth</name></name></expr>)</condition><then pos:line="458" pos:column="48">
			<return pos:line="459" pos:column="25">return <expr><call><name pos:line="459" pos:column="32">SelectionPosition</name><argument_list pos:line="459" pos:column="49">(<argument><expr><name pos:line="459" pos:column="50">INVALID_POSITION</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
		<if pos:line="460" pos:column="17">if <condition pos:line="460" pos:column="20">(<expr><name><name pos:line="460" pos:column="21">pt</name><op:operator pos:line="460" pos:column="23">.</op:operator><name pos:line="460" pos:column="24">y</name></name> <op:operator pos:line="460" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="460" pos:column="28">0</lit:literal></expr>)</condition><then pos:line="460" pos:column="30">
			<return pos:line="461" pos:column="25">return <expr><call><name pos:line="461" pos:column="32">SelectionPosition</name><argument_list pos:line="461" pos:column="49">(<argument><expr><name pos:line="461" pos:column="50">INVALID_POSITION</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
	}</block></then></if>
	<expr_stmt><expr><name><name pos:line="463" pos:column="9">pt</name><op:operator pos:line="463" pos:column="11">.</op:operator><name pos:line="463" pos:column="12">x</name></name> <op:operator pos:line="463" pos:column="14">=</op:operator> <name><name pos:line="463" pos:column="16">pt</name><op:operator pos:line="463" pos:column="18">.</op:operator><name pos:line="463" pos:column="19">x</name></name> <op:operator pos:line="463" pos:column="21">-</op:operator> <name><name pos:line="463" pos:column="23">vs</name><op:operator pos:line="463" pos:column="25">.</op:operator><name pos:line="463" pos:column="26">fixedColumnWidth</name></name> <op:operator pos:line="463" pos:column="43">+</op:operator> <name pos:line="463" pos:column="45">xOffset</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="464" pos:column="9">int</name></type> <name pos:line="464" pos:column="13">visibleLine</name> <init pos:line="464" pos:column="25">= <expr><name><name pos:line="464" pos:column="27">pt</name><op:operator pos:line="464" pos:column="29">.</op:operator><name pos:line="464" pos:column="30">y</name></name> <op:operator pos:line="464" pos:column="32">/</op:operator> <name><name pos:line="464" pos:column="34">vs</name><op:operator pos:line="464" pos:column="36">.</op:operator><name pos:line="464" pos:column="37">lineHeight</name></name> <op:operator pos:line="464" pos:column="48">+</op:operator> <name pos:line="464" pos:column="50">topLine</name></expr></init></decl>;</decl_stmt>
	<if pos:line="465" pos:column="9">if <condition pos:line="465" pos:column="12">(<expr><name><name pos:line="465" pos:column="13">pt</name><op:operator pos:line="465" pos:column="15">.</op:operator><name pos:line="465" pos:column="16">y</name></name> <op:operator pos:line="465" pos:column="18">&lt;</op:operator> <lit:literal type="number" pos:line="465" pos:column="20">0</lit:literal></expr>)</condition><then pos:line="465" pos:column="22"> <block pos:line="465" pos:column="23">{	<comment type="line" pos:line="465" pos:column="25">// Division rounds towards 0</comment>
		<expr_stmt><expr><name pos:line="466" pos:column="17">visibleLine</name> <op:operator pos:line="466" pos:column="29">=</op:operator> <op:operator pos:line="466" pos:column="31">(</op:operator><name><name pos:line="466" pos:column="32">pt</name><op:operator pos:line="466" pos:column="34">.</op:operator><name pos:line="466" pos:column="35">y</name></name> <op:operator pos:line="466" pos:column="37">-</op:operator> <op:operator pos:line="466" pos:column="39">(</op:operator><name><name pos:line="466" pos:column="40">vs</name><op:operator pos:line="466" pos:column="42">.</op:operator><name pos:line="466" pos:column="43">lineHeight</name></name> <op:operator pos:line="466" pos:column="54">-</op:operator> <lit:literal type="number" pos:line="466" pos:column="56">1</lit:literal><op:operator pos:line="466" pos:column="57">)</op:operator><op:operator pos:line="466" pos:column="58">)</op:operator> <op:operator pos:line="466" pos:column="60">/</op:operator> <name><name pos:line="466" pos:column="62">vs</name><op:operator pos:line="466" pos:column="64">.</op:operator><name pos:line="466" pos:column="65">lineHeight</name></name> <op:operator pos:line="466" pos:column="76">+</op:operator> <name pos:line="466" pos:column="78">topLine</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="468" pos:column="9">if <condition pos:line="468" pos:column="12">(<expr><op:operator pos:line="468" pos:column="13">!</op:operator><name pos:line="468" pos:column="14">canReturnInvalid</name> <op:operator pos:line="468" pos:column="31">&amp;&amp;</op:operator> <op:operator pos:line="468" pos:column="34">(</op:operator><name pos:line="468" pos:column="35">visibleLine</name> <op:operator pos:line="468" pos:column="47">&lt;</op:operator> <lit:literal type="number" pos:line="468" pos:column="49">0</lit:literal><op:operator pos:line="468" pos:column="50">)</op:operator></expr>)</condition><then pos:line="468" pos:column="52">
		<expr_stmt><expr><name pos:line="469" pos:column="17">visibleLine</name> <op:operator pos:line="469" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="469" pos:column="31">0</lit:literal></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="470" pos:column="9">int</name></type> <name pos:line="470" pos:column="13">lineDoc</name> <init pos:line="470" pos:column="21">= <expr><call><name><name pos:line="470" pos:column="23">cs</name><op:operator pos:line="470" pos:column="25">.</op:operator><name pos:line="470" pos:column="26">DocFromDisplay</name></name><argument_list pos:line="470" pos:column="40">(<argument><expr><name pos:line="470" pos:column="41">visibleLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="471" pos:column="9">if <condition pos:line="471" pos:column="12">(<expr><name pos:line="471" pos:column="13">canReturnInvalid</name> <op:operator pos:line="471" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="471" pos:column="33">(</op:operator><name pos:line="471" pos:column="34">lineDoc</name> <op:operator pos:line="471" pos:column="42">&lt;</op:operator> <lit:literal type="number" pos:line="471" pos:column="44">0</lit:literal><op:operator pos:line="471" pos:column="45">)</op:operator></expr>)</condition><then pos:line="471" pos:column="47">
		<return pos:line="472" pos:column="17">return <expr><call><name pos:line="472" pos:column="24">SelectionPosition</name><argument_list pos:line="472" pos:column="41">(<argument><expr><name pos:line="472" pos:column="42">INVALID_POSITION</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<if pos:line="473" pos:column="9">if <condition pos:line="473" pos:column="12">(<expr><name pos:line="473" pos:column="13">lineDoc</name> <op:operator pos:line="473" pos:column="21">&gt;=</op:operator> <call><name><name pos:line="473" pos:column="24">pdoc</name><op:operator pos:line="473" pos:column="28">-&gt;</op:operator><name pos:line="473" pos:column="30">LinesTotal</name></name><argument_list pos:line="473" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="473" pos:column="43">
		<return pos:line="474" pos:column="17">return <expr><call><name pos:line="474" pos:column="24">SelectionPosition</name><argument_list pos:line="474" pos:column="41">(<argument><expr><name pos:line="474" pos:column="42">canReturnInvalid</name> <op:operator pos:line="474" pos:column="59">?</op:operator> <name pos:line="474" pos:column="61">INVALID_POSITION</name> <op:operator pos:line="474" pos:column="78">:</op:operator> <call><name><name pos:line="474" pos:column="80">pdoc</name><op:operator pos:line="474" pos:column="84">-&gt;</op:operator><name pos:line="474" pos:column="86">Length</name></name><argument_list pos:line="474" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="475" pos:column="9">unsigned</name> <name pos:line="475" pos:column="18">int</name></type> <name pos:line="475" pos:column="22">posLineStart</name> <init pos:line="475" pos:column="35">= <expr><call><name><name pos:line="475" pos:column="37">pdoc</name><op:operator pos:line="475" pos:column="41">-&gt;</op:operator><name pos:line="475" pos:column="43">LineStart</name></name><argument_list pos:line="475" pos:column="52">(<argument><expr><name pos:line="475" pos:column="53">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="476" pos:column="9">SelectionPosition</name></type> <name pos:line="476" pos:column="27">retVal</name><argument_list pos:line="476" pos:column="33">(<argument><expr><name pos:line="476" pos:column="34">canReturnInvalid</name> <op:operator pos:line="476" pos:column="51">?</op:operator> <name pos:line="476" pos:column="53">INVALID_POSITION</name> <op:operator pos:line="476" pos:column="70">:</op:operator> <call><name><name pos:line="476" pos:column="72">static_cast</name><argument_list pos:line="476" pos:column="83">&lt;<argument><expr><name pos:line="476" pos:column="84">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="476" pos:column="88">(<argument><expr><name pos:line="476" pos:column="89">posLineStart</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<function_decl><type><name pos:line="477" pos:column="9">AutoSurface</name></type> <name pos:line="477" pos:column="21">surface</name><parameter_list pos:line="477" pos:column="28">(<param><decl><type><name pos:line="477" pos:column="29">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="478" pos:column="9">AutoLineLayout</name></type> <name pos:line="478" pos:column="24">ll</name><argument_list pos:line="478" pos:column="26">(<argument><expr><name pos:line="478" pos:column="27">llc</name></expr></argument>, <argument><expr><call><name pos:line="478" pos:column="32">RetrieveLineLayout</name><argument_list pos:line="478" pos:column="50">(<argument><expr><name pos:line="478" pos:column="51">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<if pos:line="479" pos:column="9">if <condition pos:line="479" pos:column="12">(<expr><name pos:line="479" pos:column="13">surface</name> <op:operator pos:line="479" pos:column="21">&amp;&amp;</op:operator> <name pos:line="479" pos:column="24">ll</name></expr>)</condition><then pos:line="479" pos:column="27"> <block pos:line="479" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="480" pos:column="17">LayoutLine</name><argument_list pos:line="480" pos:column="27">(<argument><expr><name pos:line="480" pos:column="28">lineDoc</name></expr></argument>, <argument><expr><name pos:line="480" pos:column="37">surface</name></expr></argument>, <argument><expr><name pos:line="480" pos:column="46">vs</name></expr></argument>, <argument><expr><name pos:line="480" pos:column="50">ll</name></expr></argument>, <argument><expr><name pos:line="480" pos:column="54">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="481" pos:column="17">int</name></type> <name pos:line="481" pos:column="21">lineStartSet</name> <init pos:line="481" pos:column="34">= <expr><call><name><name pos:line="481" pos:column="36">cs</name><op:operator pos:line="481" pos:column="38">.</op:operator><name pos:line="481" pos:column="39">DisplayFromDoc</name></name><argument_list pos:line="481" pos:column="53">(<argument><expr><name pos:line="481" pos:column="54">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="482" pos:column="17">int</name></type> <name pos:line="482" pos:column="21">subLine</name> <init pos:line="482" pos:column="29">= <expr><name pos:line="482" pos:column="31">visibleLine</name> <op:operator pos:line="482" pos:column="43">-</op:operator> <name pos:line="482" pos:column="45">lineStartSet</name></expr></init></decl>;</decl_stmt>
		<if pos:line="483" pos:column="17">if <condition pos:line="483" pos:column="20">(<expr><name pos:line="483" pos:column="21">subLine</name> <op:operator pos:line="483" pos:column="29">&lt;</op:operator> <name><name pos:line="483" pos:column="31">ll</name><op:operator pos:line="483" pos:column="33">-&gt;</op:operator><name pos:line="483" pos:column="35">lines</name></name></expr>)</condition><then pos:line="483" pos:column="41"> <block pos:line="483" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="484" pos:column="25">int</name></type> <name pos:line="484" pos:column="29">lineStart</name> <init pos:line="484" pos:column="39">= <expr><call><name><name pos:line="484" pos:column="41">ll</name><op:operator pos:line="484" pos:column="43">-&gt;</op:operator><name pos:line="484" pos:column="45">LineStart</name></name><argument_list pos:line="484" pos:column="54">(<argument><expr><name pos:line="484" pos:column="55">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="485" pos:column="25">int</name></type> <name pos:line="485" pos:column="29">lineEnd</name> <init pos:line="485" pos:column="37">= <expr><call><name><name pos:line="485" pos:column="39">ll</name><op:operator pos:line="485" pos:column="41">-&gt;</op:operator><name pos:line="485" pos:column="43">LineLastVisible</name></name><argument_list pos:line="485" pos:column="58">(<argument><expr><name pos:line="485" pos:column="59">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="486" pos:column="25">int</name></type> <name pos:line="486" pos:column="29">subLineStart</name> <init pos:line="486" pos:column="42">= <expr><name><name pos:line="486" pos:column="44">ll</name><op:operator pos:line="486" pos:column="46">-&gt;</op:operator><name pos:line="486" pos:column="48">positions</name><index pos:line="486" pos:column="57">[<expr><name pos:line="486" pos:column="58">lineStart</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

			<if pos:line="488" pos:column="25">if <condition pos:line="488" pos:column="28">(<expr><name><name pos:line="488" pos:column="29">ll</name><op:operator pos:line="488" pos:column="31">-&gt;</op:operator><name pos:line="488" pos:column="33">wrapIndent</name></name> <op:operator pos:line="488" pos:column="44">!=</op:operator> <lit:literal type="number" pos:line="488" pos:column="47">0</lit:literal></expr>)</condition><then pos:line="488" pos:column="49"> <block pos:line="488" pos:column="50">{
				<if pos:line="489" pos:column="33">if <condition pos:line="489" pos:column="36">(<expr><name pos:line="489" pos:column="37">lineStart</name> <op:operator pos:line="489" pos:column="47">!=</op:operator> <lit:literal type="number" pos:line="489" pos:column="50">0</lit:literal></expr>)</condition><then pos:line="489" pos:column="52">	<comment type="line" pos:line="489" pos:column="57">// Wrapped</comment>
					<expr_stmt><expr><name><name pos:line="490" pos:column="41">pt</name><op:operator pos:line="490" pos:column="43">.</op:operator><name pos:line="490" pos:column="44">x</name></name> <op:operator pos:line="490" pos:column="46">-=</op:operator> <name><name pos:line="490" pos:column="49">ll</name><op:operator pos:line="490" pos:column="51">-&gt;</op:operator><name pos:line="490" pos:column="53">wrapIndent</name></name></expr>;</expr_stmt></then></if>
			}</block></then></if>
			<decl_stmt><decl><type><name pos:line="492" pos:column="25">int</name></type> <name pos:line="492" pos:column="29">i</name> <init pos:line="492" pos:column="31">= <expr><call><name><name pos:line="492" pos:column="33">ll</name><op:operator pos:line="492" pos:column="35">-&gt;</op:operator><name pos:line="492" pos:column="37">FindBefore</name></name><argument_list pos:line="492" pos:column="47">(<argument><expr><name><name pos:line="492" pos:column="48">pt</name><op:operator pos:line="492" pos:column="50">.</op:operator><name pos:line="492" pos:column="51">x</name></name> <op:operator pos:line="492" pos:column="53">+</op:operator> <name pos:line="492" pos:column="55">subLineStart</name></expr></argument>, <argument><expr><name pos:line="492" pos:column="69">lineStart</name></expr></argument>, <argument><expr><name pos:line="492" pos:column="80">lineEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<while pos:line="493" pos:column="25">while <condition pos:line="493" pos:column="31">(<expr><name pos:line="493" pos:column="32">i</name> <op:operator pos:line="493" pos:column="34">&lt;</op:operator> <name pos:line="493" pos:column="36">lineEnd</name></expr>)</condition> <block pos:line="493" pos:column="45">{
				<if pos:line="494" pos:column="33">if <condition pos:line="494" pos:column="36">(<expr><name pos:line="494" pos:column="37">charPosition</name></expr>)</condition><then pos:line="494" pos:column="50"> <block pos:line="494" pos:column="51">{
					<if pos:line="495" pos:column="41">if <condition pos:line="495" pos:column="44">(<expr><op:operator pos:line="495" pos:column="45">(</op:operator><name><name pos:line="495" pos:column="46">pt</name><op:operator pos:line="495" pos:column="48">.</op:operator><name pos:line="495" pos:column="49">x</name></name> <op:operator pos:line="495" pos:column="51">+</op:operator> <name pos:line="495" pos:column="53">subLineStart</name><op:operator pos:line="495" pos:column="65">)</op:operator> <op:operator pos:line="495" pos:column="67">&lt;</op:operator> <op:operator pos:line="495" pos:column="69">(</op:operator><name><name pos:line="495" pos:column="70">ll</name><op:operator pos:line="495" pos:column="72">-&gt;</op:operator><name pos:line="495" pos:column="74">positions</name><index pos:line="495" pos:column="83">[<expr><name pos:line="495" pos:column="84">i</name> <op:operator pos:line="495" pos:column="86">+</op:operator> <lit:literal type="number" pos:line="495" pos:column="88">1</lit:literal></expr>]</index></name><op:operator pos:line="495" pos:column="90">)</op:operator></expr>)</condition><then pos:line="495" pos:column="92"> <block pos:line="495" pos:column="93">{
						<return pos:line="496" pos:column="49">return <expr><call><name pos:line="496" pos:column="56">SelectionPosition</name><argument_list pos:line="496" pos:column="73">(<argument><expr><call><name><name pos:line="496" pos:column="74">pdoc</name><op:operator pos:line="496" pos:column="78">-&gt;</op:operator><name pos:line="496" pos:column="80">MovePositionOutsideChar</name></name><argument_list pos:line="496" pos:column="103">(<argument><expr><name pos:line="496" pos:column="104">i</name> <op:operator pos:line="496" pos:column="106">+</op:operator> <name pos:line="496" pos:column="108">posLineStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="496" pos:column="122">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
					}</block></then></if>
				}</block></then> <else pos:line="498" pos:column="35">else <block pos:line="498" pos:column="40">{
					<if pos:line="499" pos:column="41">if <condition pos:line="499" pos:column="44">(<expr><op:operator pos:line="499" pos:column="45">(</op:operator><name><name pos:line="499" pos:column="46">pt</name><op:operator pos:line="499" pos:column="48">.</op:operator><name pos:line="499" pos:column="49">x</name></name> <op:operator pos:line="499" pos:column="51">+</op:operator> <name pos:line="499" pos:column="53">subLineStart</name><op:operator pos:line="499" pos:column="65">)</op:operator> <op:operator pos:line="499" pos:column="67">&lt;</op:operator> <op:operator pos:line="499" pos:column="69">(</op:operator><op:operator pos:line="499" pos:column="70">(</op:operator><name><name pos:line="499" pos:column="71">ll</name><op:operator pos:line="499" pos:column="73">-&gt;</op:operator><name pos:line="499" pos:column="75">positions</name><index pos:line="499" pos:column="84">[<expr><name pos:line="499" pos:column="85">i</name></expr>]</index></name> <op:operator pos:line="499" pos:column="88">+</op:operator> <name><name pos:line="499" pos:column="90">ll</name><op:operator pos:line="499" pos:column="92">-&gt;</op:operator><name pos:line="499" pos:column="94">positions</name><index pos:line="499" pos:column="103">[<expr><name pos:line="499" pos:column="104">i</name> <op:operator pos:line="499" pos:column="106">+</op:operator> <lit:literal type="number" pos:line="499" pos:column="108">1</lit:literal></expr>]</index></name><op:operator pos:line="499" pos:column="110">)</op:operator> <op:operator pos:line="499" pos:column="112">/</op:operator> <lit:literal type="number" pos:line="499" pos:column="114">2</lit:literal><op:operator pos:line="499" pos:column="115">)</op:operator></expr>)</condition><then pos:line="499" pos:column="117"> <block pos:line="499" pos:column="118">{
						<return pos:line="500" pos:column="49">return <expr><call><name pos:line="500" pos:column="56">SelectionPosition</name><argument_list pos:line="500" pos:column="73">(<argument><expr><call><name><name pos:line="500" pos:column="74">pdoc</name><op:operator pos:line="500" pos:column="78">-&gt;</op:operator><name pos:line="500" pos:column="80">MovePositionOutsideChar</name></name><argument_list pos:line="500" pos:column="103">(<argument><expr><name pos:line="500" pos:column="104">i</name> <op:operator pos:line="500" pos:column="106">+</op:operator> <name pos:line="500" pos:column="108">posLineStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="500" pos:column="122">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
					}</block></then></if>
				}</block></else></if>
				<expr_stmt><expr><name pos:line="503" pos:column="33">i</name><op:operator pos:line="503" pos:column="34">++</op:operator></expr>;</expr_stmt>
			}</block></while>
			<if pos:line="505" pos:column="25">if <condition pos:line="505" pos:column="28">(<expr><name pos:line="505" pos:column="29">virtualSpace</name></expr>)</condition><then pos:line="505" pos:column="42"> <block pos:line="505" pos:column="43">{
				<decl_stmt><decl><type><specifier pos:line="506" pos:column="33">const</specifier> <name pos:line="506" pos:column="39">int</name></type> <name pos:line="506" pos:column="43">spaceWidth</name> <init pos:line="506" pos:column="54">= <expr><call><name><name pos:line="506" pos:column="56">static_cast</name><argument_list pos:line="506" pos:column="67">&lt;<argument><expr><name pos:line="506" pos:column="68">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="506" pos:column="72">(<argument><expr><name><name pos:line="506" pos:column="73">vs</name><op:operator pos:line="506" pos:column="75">.</op:operator><name pos:line="506" pos:column="76">styles</name><index pos:line="506" pos:column="82">[<expr><call><name><name pos:line="506" pos:column="83">ll</name><op:operator pos:line="506" pos:column="85">-&gt;</op:operator><name pos:line="506" pos:column="87">EndLineStyle</name></name><argument_list pos:line="506" pos:column="99">()</argument_list></call></expr>]</index></name><op:operator pos:line="506" pos:column="102">.</op:operator><name pos:line="506" pos:column="103">spaceWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="507" pos:column="33">int</name></type> <name pos:line="507" pos:column="37">spaceOffset</name> <init pos:line="507" pos:column="49">= <expr><op:operator pos:line="507" pos:column="51">(</op:operator><name><name pos:line="507" pos:column="52">pt</name><op:operator pos:line="507" pos:column="54">.</op:operator><name pos:line="507" pos:column="55">x</name></name> <op:operator pos:line="507" pos:column="57">+</op:operator> <name pos:line="507" pos:column="59">subLineStart</name> <op:operator pos:line="507" pos:column="72">-</op:operator> <name><name pos:line="507" pos:column="74">ll</name><op:operator pos:line="507" pos:column="76">-&gt;</op:operator><name pos:line="507" pos:column="78">positions</name><index pos:line="507" pos:column="87">[<expr><name pos:line="507" pos:column="88">lineEnd</name></expr>]</index></name> <op:operator pos:line="507" pos:column="97">+</op:operator> <name pos:line="507" pos:column="99">spaceWidth</name> <op:operator pos:line="507" pos:column="110">/</op:operator> <lit:literal type="number" pos:line="507" pos:column="112">2</lit:literal><op:operator pos:line="507" pos:column="113">)</op:operator> <op:operator pos:line="507" pos:column="115">/</op:operator>
					<name pos:line="508" pos:column="41">spaceWidth</name></expr></init></decl>;</decl_stmt>
				<return pos:line="509" pos:column="33">return <expr><call><name pos:line="509" pos:column="40">SelectionPosition</name><argument_list pos:line="509" pos:column="57">(<argument><expr><name pos:line="509" pos:column="58">lineEnd</name> <op:operator pos:line="509" pos:column="66">+</op:operator> <name pos:line="509" pos:column="68">posLineStart</name></expr></argument>, <argument><expr><name pos:line="509" pos:column="82">spaceOffset</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then> <else pos:line="510" pos:column="27">else <if pos:line="510" pos:column="32">if <condition pos:line="510" pos:column="35">(<expr><name pos:line="510" pos:column="36">canReturnInvalid</name></expr>)</condition><then pos:line="510" pos:column="53"> <block pos:line="510" pos:column="54">{
				<if pos:line="511" pos:column="33">if <condition pos:line="511" pos:column="36">(<expr><name><name pos:line="511" pos:column="37">pt</name><op:operator pos:line="511" pos:column="39">.</op:operator><name pos:line="511" pos:column="40">x</name></name> <op:operator pos:line="511" pos:column="42">&lt;</op:operator> <op:operator pos:line="511" pos:column="44">(</op:operator><name><name pos:line="511" pos:column="45">ll</name><op:operator pos:line="511" pos:column="47">-&gt;</op:operator><name pos:line="511" pos:column="49">positions</name><index pos:line="511" pos:column="58">[<expr><name pos:line="511" pos:column="59">lineEnd</name></expr>]</index></name> <op:operator pos:line="511" pos:column="68">-</op:operator> <name pos:line="511" pos:column="70">subLineStart</name><op:operator pos:line="511" pos:column="82">)</op:operator></expr>)</condition><then pos:line="511" pos:column="84"> <block pos:line="511" pos:column="85">{
					<return pos:line="512" pos:column="41">return <expr><call><name pos:line="512" pos:column="48">SelectionPosition</name><argument_list pos:line="512" pos:column="65">(<argument><expr><call><name><name pos:line="512" pos:column="66">pdoc</name><op:operator pos:line="512" pos:column="70">-&gt;</op:operator><name pos:line="512" pos:column="72">MovePositionOutsideChar</name></name><argument_list pos:line="512" pos:column="95">(<argument><expr><name pos:line="512" pos:column="96">lineEnd</name> <op:operator pos:line="512" pos:column="104">+</op:operator> <name pos:line="512" pos:column="106">posLineStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="512" pos:column="120">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
				}</block></then></if>
			}</block></then> <else pos:line="514" pos:column="27">else <block pos:line="514" pos:column="32">{
				<return pos:line="515" pos:column="33">return <expr><call><name pos:line="515" pos:column="40">SelectionPosition</name><argument_list pos:line="515" pos:column="57">(<argument><expr><name pos:line="515" pos:column="58">lineEnd</name> <op:operator pos:line="515" pos:column="66">+</op:operator> <name pos:line="515" pos:column="68">posLineStart</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></else></if></else></if>
		}</block></then></if>
		<if pos:line="518" pos:column="17">if <condition pos:line="518" pos:column="20">(<expr><op:operator pos:line="518" pos:column="21">!</op:operator><name pos:line="518" pos:column="22">canReturnInvalid</name></expr>)</condition><then pos:line="518" pos:column="39">
			<return pos:line="519" pos:column="25">return <expr><call><name pos:line="519" pos:column="32">SelectionPosition</name><argument_list pos:line="519" pos:column="49">(<argument><expr><name><name pos:line="519" pos:column="50">ll</name><op:operator pos:line="519" pos:column="52">-&gt;</op:operator><name pos:line="519" pos:column="54">numCharsInLine</name></name> <op:operator pos:line="519" pos:column="69">+</op:operator> <name pos:line="519" pos:column="71">posLineStart</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
	}</block></then></if>
	<return pos:line="521" pos:column="9">return <expr><name pos:line="521" pos:column="16">retVal</name></expr>;</return>
}</block></function>

<function><type><name pos:line="524" pos:column="1">int</name></type> <name><name pos:line="524" pos:column="5">Editor</name><op:operator pos:line="524" pos:column="11">::</op:operator><name pos:line="524" pos:column="13">PositionFromLocation</name></name><parameter_list pos:line="524" pos:column="33">(<param><decl><type><name pos:line="524" pos:column="34">Point</name></type> <name pos:line="524" pos:column="40">pt</name></decl></param>, <param><decl><type><name pos:line="524" pos:column="44">bool</name></type> <name pos:line="524" pos:column="49">canReturnInvalid</name></decl></param>, <param><decl><type><name pos:line="524" pos:column="67">bool</name></type> <name pos:line="524" pos:column="72">charPosition</name></decl></param>)</parameter_list> <block pos:line="524" pos:column="86">{
	<return pos:line="525" pos:column="9">return <expr><call><name pos:line="525" pos:column="16">SPositionFromLocation</name><argument_list pos:line="525" pos:column="37">(<argument><expr><name pos:line="525" pos:column="38">pt</name></expr></argument>, <argument><expr><name pos:line="525" pos:column="42">canReturnInvalid</name></expr></argument>, <argument><expr><name pos:line="525" pos:column="60">charPosition</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="525" pos:column="74">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="525" pos:column="80">.</op:operator><call><name pos:line="525" pos:column="81">Position</name><argument_list pos:line="525" pos:column="89">()</argument_list></call></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="528" pos:column="1">/**
 * Find the document position corresponding to an x coordinate on a particular document line.
 * Ensure is between whole characters when document is in multi-byte or UTF-8 mode.
 */</comment>
<function><type><name pos:line="532" pos:column="1">int</name></type> <name><name pos:line="532" pos:column="5">Editor</name><op:operator pos:line="532" pos:column="11">::</op:operator><name pos:line="532" pos:column="13">PositionFromLineX</name></name><parameter_list pos:line="532" pos:column="30">(<param><decl><type><name pos:line="532" pos:column="31">int</name></type> <name pos:line="532" pos:column="35">lineDoc</name></decl></param>, <param><decl><type><name pos:line="532" pos:column="44">int</name></type> <name pos:line="532" pos:column="48">x</name></decl></param>)</parameter_list> <block pos:line="532" pos:column="51">{
	<expr_stmt><expr><call><name pos:line="533" pos:column="9">RefreshStyleData</name><argument_list pos:line="533" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="534" pos:column="9">if <condition pos:line="534" pos:column="12">(<expr><name pos:line="534" pos:column="13">lineDoc</name> <op:operator pos:line="534" pos:column="21">&gt;=</op:operator> <call><name><name pos:line="534" pos:column="24">pdoc</name><op:operator pos:line="534" pos:column="28">-&gt;</op:operator><name pos:line="534" pos:column="30">LinesTotal</name></name><argument_list pos:line="534" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="534" pos:column="43">
		<return pos:line="535" pos:column="17">return <expr><call><name><name pos:line="535" pos:column="24">pdoc</name><op:operator pos:line="535" pos:column="28">-&gt;</op:operator><name pos:line="535" pos:column="30">Length</name></name><argument_list pos:line="535" pos:column="36">()</argument_list></call></expr>;</return></then></if>
	<comment type="line" pos:line="536" pos:column="9">//Platform::DebugPrintf("Position of (%d,%d) line = %d top=%d\n", pt.x, pt.y, line, topLine);</comment>
	<function_decl><type><name pos:line="537" pos:column="9">AutoSurface</name></type> <name pos:line="537" pos:column="21">surface</name><parameter_list pos:line="537" pos:column="28">(<param><decl><type><name pos:line="537" pos:column="29">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="538" pos:column="9">AutoLineLayout</name></type> <name pos:line="538" pos:column="24">ll</name><argument_list pos:line="538" pos:column="26">(<argument><expr><name pos:line="538" pos:column="27">llc</name></expr></argument>, <argument><expr><call><name pos:line="538" pos:column="32">RetrieveLineLayout</name><argument_list pos:line="538" pos:column="50">(<argument><expr><name pos:line="538" pos:column="51">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="539" pos:column="9">int</name></type> <name pos:line="539" pos:column="13">retVal</name> <init pos:line="539" pos:column="20">= <expr><lit:literal type="number" pos:line="539" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="540" pos:column="9">if <condition pos:line="540" pos:column="12">(<expr><name pos:line="540" pos:column="13">surface</name> <op:operator pos:line="540" pos:column="21">&amp;&amp;</op:operator> <name pos:line="540" pos:column="24">ll</name></expr>)</condition><then pos:line="540" pos:column="27"> <block pos:line="540" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="541" pos:column="17">unsigned</name> <name pos:line="541" pos:column="26">int</name></type> <name pos:line="541" pos:column="30">posLineStart</name> <init pos:line="541" pos:column="43">= <expr><call><name><name pos:line="541" pos:column="45">pdoc</name><op:operator pos:line="541" pos:column="49">-&gt;</op:operator><name pos:line="541" pos:column="51">LineStart</name></name><argument_list pos:line="541" pos:column="60">(<argument><expr><name pos:line="541" pos:column="61">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="542" pos:column="17">LayoutLine</name><argument_list pos:line="542" pos:column="27">(<argument><expr><name pos:line="542" pos:column="28">lineDoc</name></expr></argument>, <argument><expr><name pos:line="542" pos:column="37">surface</name></expr></argument>, <argument><expr><name pos:line="542" pos:column="46">vs</name></expr></argument>, <argument><expr><name pos:line="542" pos:column="50">ll</name></expr></argument>, <argument><expr><name pos:line="542" pos:column="54">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="543" pos:column="17">retVal</name> <op:operator pos:line="543" pos:column="24">=</op:operator> <name><name pos:line="543" pos:column="26">ll</name><op:operator pos:line="543" pos:column="28">-&gt;</op:operator><name pos:line="543" pos:column="30">numCharsBeforeEOL</name></name> <op:operator pos:line="543" pos:column="48">+</op:operator> <name pos:line="543" pos:column="50">posLineStart</name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="544" pos:column="17">int</name></type> <name pos:line="544" pos:column="21">subLine</name> <init pos:line="544" pos:column="29">= <expr><lit:literal type="number" pos:line="544" pos:column="31">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="545" pos:column="17">int</name></type> <name pos:line="545" pos:column="21">lineStart</name> <init pos:line="545" pos:column="31">= <expr><call><name><name pos:line="545" pos:column="33">ll</name><op:operator pos:line="545" pos:column="35">-&gt;</op:operator><name pos:line="545" pos:column="37">LineStart</name></name><argument_list pos:line="545" pos:column="46">(<argument><expr><name pos:line="545" pos:column="47">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="546" pos:column="17">int</name></type> <name pos:line="546" pos:column="21">lineEnd</name> <init pos:line="546" pos:column="29">= <expr><call><name><name pos:line="546" pos:column="31">ll</name><op:operator pos:line="546" pos:column="33">-&gt;</op:operator><name pos:line="546" pos:column="35">LineLastVisible</name></name><argument_list pos:line="546" pos:column="50">(<argument><expr><name pos:line="546" pos:column="51">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="547" pos:column="17">int</name></type> <name pos:line="547" pos:column="21">subLineStart</name> <init pos:line="547" pos:column="34">= <expr><name><name pos:line="547" pos:column="36">ll</name><op:operator pos:line="547" pos:column="38">-&gt;</op:operator><name pos:line="547" pos:column="40">positions</name><index pos:line="547" pos:column="49">[<expr><name pos:line="547" pos:column="50">lineStart</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<if pos:line="549" pos:column="17">if <condition pos:line="549" pos:column="20">(<expr><name><name pos:line="549" pos:column="21">ll</name><op:operator pos:line="549" pos:column="23">-&gt;</op:operator><name pos:line="549" pos:column="25">wrapIndent</name></name> <op:operator pos:line="549" pos:column="36">!=</op:operator> <lit:literal type="number" pos:line="549" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="549" pos:column="41"> <block pos:line="549" pos:column="42">{
			<if pos:line="550" pos:column="25">if <condition pos:line="550" pos:column="28">(<expr><name pos:line="550" pos:column="29">lineStart</name> <op:operator pos:line="550" pos:column="39">!=</op:operator> <lit:literal type="number" pos:line="550" pos:column="42">0</lit:literal></expr>)</condition><then pos:line="550" pos:column="44">	<comment type="line" pos:line="550" pos:column="49">// Wrapped</comment>
				<expr_stmt><expr><name pos:line="551" pos:column="33">x</name> <op:operator pos:line="551" pos:column="35">-=</op:operator> <name><name pos:line="551" pos:column="38">ll</name><op:operator pos:line="551" pos:column="40">-&gt;</op:operator><name pos:line="551" pos:column="42">wrapIndent</name></name></expr>;</expr_stmt></then></if>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="553" pos:column="17">int</name></type> <name pos:line="553" pos:column="21">i</name> <init pos:line="553" pos:column="23">= <expr><call><name><name pos:line="553" pos:column="25">ll</name><op:operator pos:line="553" pos:column="27">-&gt;</op:operator><name pos:line="553" pos:column="29">FindBefore</name></name><argument_list pos:line="553" pos:column="39">(<argument><expr><name pos:line="553" pos:column="40">x</name> <op:operator pos:line="553" pos:column="42">+</op:operator> <name pos:line="553" pos:column="44">subLineStart</name></expr></argument>, <argument><expr><name pos:line="553" pos:column="58">lineStart</name></expr></argument>, <argument><expr><name pos:line="553" pos:column="69">lineEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<while pos:line="554" pos:column="17">while <condition pos:line="554" pos:column="23">(<expr><name pos:line="554" pos:column="24">i</name> <op:operator pos:line="554" pos:column="26">&lt;</op:operator> <name pos:line="554" pos:column="28">lineEnd</name></expr>)</condition> <block pos:line="554" pos:column="37">{
			<if pos:line="555" pos:column="25">if <condition pos:line="555" pos:column="28">(<expr><op:operator pos:line="555" pos:column="29">(</op:operator><name pos:line="555" pos:column="30">x</name> <op:operator pos:line="555" pos:column="32">+</op:operator> <name pos:line="555" pos:column="34">subLineStart</name><op:operator pos:line="555" pos:column="46">)</op:operator> <op:operator pos:line="555" pos:column="48">&lt;</op:operator> <op:operator pos:line="555" pos:column="50">(</op:operator><op:operator pos:line="555" pos:column="51">(</op:operator><name><name pos:line="555" pos:column="52">ll</name><op:operator pos:line="555" pos:column="54">-&gt;</op:operator><name pos:line="555" pos:column="56">positions</name><index pos:line="555" pos:column="65">[<expr><name pos:line="555" pos:column="66">i</name></expr>]</index></name> <op:operator pos:line="555" pos:column="69">+</op:operator> <name><name pos:line="555" pos:column="71">ll</name><op:operator pos:line="555" pos:column="73">-&gt;</op:operator><name pos:line="555" pos:column="75">positions</name><index pos:line="555" pos:column="84">[<expr><name pos:line="555" pos:column="85">i</name> <op:operator pos:line="555" pos:column="87">+</op:operator> <lit:literal type="number" pos:line="555" pos:column="89">1</lit:literal></expr>]</index></name><op:operator pos:line="555" pos:column="91">)</op:operator> <op:operator pos:line="555" pos:column="93">/</op:operator> <lit:literal type="number" pos:line="555" pos:column="95">2</lit:literal><op:operator pos:line="555" pos:column="96">)</op:operator></expr>)</condition><then pos:line="555" pos:column="98"> <block pos:line="555" pos:column="99">{
				<expr_stmt><expr><name pos:line="556" pos:column="33">retVal</name> <op:operator pos:line="556" pos:column="40">=</op:operator> <call><name><name pos:line="556" pos:column="42">pdoc</name><op:operator pos:line="556" pos:column="46">-&gt;</op:operator><name pos:line="556" pos:column="48">MovePositionOutsideChar</name></name><argument_list pos:line="556" pos:column="71">(<argument><expr><name pos:line="556" pos:column="72">i</name> <op:operator pos:line="556" pos:column="74">+</op:operator> <name pos:line="556" pos:column="76">posLineStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="556" pos:column="90">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="557" pos:column="33">break;</break>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="559" pos:column="25">i</name><op:operator pos:line="559" pos:column="26">++</op:operator></expr>;</expr_stmt>
		}</block></while>
	}</block></then></if>
	<return pos:line="562" pos:column="9">return <expr><name pos:line="562" pos:column="16">retVal</name></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="565" pos:column="1">/**
 * Find the document position corresponding to an x coordinate on a particular document line.
 * Ensure is between whole characters when document is in multi-byte or UTF-8 mode.
 */</comment>
<function><type><name pos:line="569" pos:column="1">SelectionPosition</name></type> <name><name pos:line="569" pos:column="19">Editor</name><op:operator pos:line="569" pos:column="25">::</op:operator><name pos:line="569" pos:column="27">SPositionFromLineX</name></name><parameter_list pos:line="569" pos:column="45">(<param><decl><type><name pos:line="569" pos:column="46">int</name></type> <name pos:line="569" pos:column="50">lineDoc</name></decl></param>, <param><decl><type><name pos:line="569" pos:column="59">int</name></type> <name pos:line="569" pos:column="63">x</name></decl></param>)</parameter_list> <block pos:line="569" pos:column="66">{
	<expr_stmt><expr><call><name pos:line="570" pos:column="9">RefreshStyleData</name><argument_list pos:line="570" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="571" pos:column="9">if <condition pos:line="571" pos:column="12">(<expr><name pos:line="571" pos:column="13">lineDoc</name> <op:operator pos:line="571" pos:column="21">&gt;=</op:operator> <call><name><name pos:line="571" pos:column="24">pdoc</name><op:operator pos:line="571" pos:column="28">-&gt;</op:operator><name pos:line="571" pos:column="30">LinesTotal</name></name><argument_list pos:line="571" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="571" pos:column="43">
		<return pos:line="572" pos:column="17">return <expr><call><name pos:line="572" pos:column="24">SelectionPosition</name><argument_list pos:line="572" pos:column="41">(<argument><expr><call><name><name pos:line="572" pos:column="42">pdoc</name><op:operator pos:line="572" pos:column="46">-&gt;</op:operator><name pos:line="572" pos:column="48">Length</name></name><argument_list pos:line="572" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<comment type="line" pos:line="573" pos:column="9">//Platform::DebugPrintf("Position of (%d,%d) line = %d top=%d\n", pt.x, pt.y, line, topLine);</comment>
	<function_decl><type><name pos:line="574" pos:column="9">AutoSurface</name></type> <name pos:line="574" pos:column="21">surface</name><parameter_list pos:line="574" pos:column="28">(<param><decl><type><name pos:line="574" pos:column="29">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="575" pos:column="9">AutoLineLayout</name></type> <name pos:line="575" pos:column="24">ll</name><argument_list pos:line="575" pos:column="26">(<argument><expr><name pos:line="575" pos:column="27">llc</name></expr></argument>, <argument><expr><call><name pos:line="575" pos:column="32">RetrieveLineLayout</name><argument_list pos:line="575" pos:column="50">(<argument><expr><name pos:line="575" pos:column="51">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="576" pos:column="9">int</name></type> <name pos:line="576" pos:column="13">retVal</name> <init pos:line="576" pos:column="20">= <expr><lit:literal type="number" pos:line="576" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="577" pos:column="9">if <condition pos:line="577" pos:column="12">(<expr><name pos:line="577" pos:column="13">surface</name> <op:operator pos:line="577" pos:column="21">&amp;&amp;</op:operator> <name pos:line="577" pos:column="24">ll</name></expr>)</condition><then pos:line="577" pos:column="27"> <block pos:line="577" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="578" pos:column="17">unsigned</name> <name pos:line="578" pos:column="26">int</name></type> <name pos:line="578" pos:column="30">posLineStart</name> <init pos:line="578" pos:column="43">= <expr><call><name><name pos:line="578" pos:column="45">pdoc</name><op:operator pos:line="578" pos:column="49">-&gt;</op:operator><name pos:line="578" pos:column="51">LineStart</name></name><argument_list pos:line="578" pos:column="60">(<argument><expr><name pos:line="578" pos:column="61">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="579" pos:column="17">LayoutLine</name><argument_list pos:line="579" pos:column="27">(<argument><expr><name pos:line="579" pos:column="28">lineDoc</name></expr></argument>, <argument><expr><name pos:line="579" pos:column="37">surface</name></expr></argument>, <argument><expr><name pos:line="579" pos:column="46">vs</name></expr></argument>, <argument><expr><name pos:line="579" pos:column="50">ll</name></expr></argument>, <argument><expr><name pos:line="579" pos:column="54">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="580" pos:column="17">int</name></type> <name pos:line="580" pos:column="21">subLine</name> <init pos:line="580" pos:column="29">= <expr><lit:literal type="number" pos:line="580" pos:column="31">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="581" pos:column="17">int</name></type> <name pos:line="581" pos:column="21">lineStart</name> <init pos:line="581" pos:column="31">= <expr><call><name><name pos:line="581" pos:column="33">ll</name><op:operator pos:line="581" pos:column="35">-&gt;</op:operator><name pos:line="581" pos:column="37">LineStart</name></name><argument_list pos:line="581" pos:column="46">(<argument><expr><name pos:line="581" pos:column="47">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="582" pos:column="17">int</name></type> <name pos:line="582" pos:column="21">lineEnd</name> <init pos:line="582" pos:column="29">= <expr><call><name><name pos:line="582" pos:column="31">ll</name><op:operator pos:line="582" pos:column="33">-&gt;</op:operator><name pos:line="582" pos:column="35">LineLastVisible</name></name><argument_list pos:line="582" pos:column="50">(<argument><expr><name pos:line="582" pos:column="51">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="583" pos:column="17">int</name></type> <name pos:line="583" pos:column="21">subLineStart</name> <init pos:line="583" pos:column="34">= <expr><name><name pos:line="583" pos:column="36">ll</name><op:operator pos:line="583" pos:column="38">-&gt;</op:operator><name pos:line="583" pos:column="40">positions</name><index pos:line="583" pos:column="49">[<expr><name pos:line="583" pos:column="50">lineStart</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<if pos:line="585" pos:column="17">if <condition pos:line="585" pos:column="20">(<expr><name><name pos:line="585" pos:column="21">ll</name><op:operator pos:line="585" pos:column="23">-&gt;</op:operator><name pos:line="585" pos:column="25">wrapIndent</name></name> <op:operator pos:line="585" pos:column="36">!=</op:operator> <lit:literal type="number" pos:line="585" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="585" pos:column="41"> <block pos:line="585" pos:column="42">{
			<if pos:line="586" pos:column="25">if <condition pos:line="586" pos:column="28">(<expr><name pos:line="586" pos:column="29">lineStart</name> <op:operator pos:line="586" pos:column="39">!=</op:operator> <lit:literal type="number" pos:line="586" pos:column="42">0</lit:literal></expr>)</condition><then pos:line="586" pos:column="44">	<comment type="line" pos:line="586" pos:column="49">// Wrapped</comment>
				<expr_stmt><expr><name pos:line="587" pos:column="33">x</name> <op:operator pos:line="587" pos:column="35">-=</op:operator> <name><name pos:line="587" pos:column="38">ll</name><op:operator pos:line="587" pos:column="40">-&gt;</op:operator><name pos:line="587" pos:column="42">wrapIndent</name></name></expr>;</expr_stmt></then></if>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="589" pos:column="17">int</name></type> <name pos:line="589" pos:column="21">i</name> <init pos:line="589" pos:column="23">= <expr><call><name><name pos:line="589" pos:column="25">ll</name><op:operator pos:line="589" pos:column="27">-&gt;</op:operator><name pos:line="589" pos:column="29">FindBefore</name></name><argument_list pos:line="589" pos:column="39">(<argument><expr><name pos:line="589" pos:column="40">x</name> <op:operator pos:line="589" pos:column="42">+</op:operator> <name pos:line="589" pos:column="44">subLineStart</name></expr></argument>, <argument><expr><name pos:line="589" pos:column="58">lineStart</name></expr></argument>, <argument><expr><name pos:line="589" pos:column="69">lineEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<while pos:line="590" pos:column="17">while <condition pos:line="590" pos:column="23">(<expr><name pos:line="590" pos:column="24">i</name> <op:operator pos:line="590" pos:column="26">&lt;</op:operator> <name pos:line="590" pos:column="28">lineEnd</name></expr>)</condition> <block pos:line="590" pos:column="37">{
			<if pos:line="591" pos:column="25">if <condition pos:line="591" pos:column="28">(<expr><op:operator pos:line="591" pos:column="29">(</op:operator><name pos:line="591" pos:column="30">x</name> <op:operator pos:line="591" pos:column="32">+</op:operator> <name pos:line="591" pos:column="34">subLineStart</name><op:operator pos:line="591" pos:column="46">)</op:operator> <op:operator pos:line="591" pos:column="48">&lt;</op:operator> <op:operator pos:line="591" pos:column="50">(</op:operator><op:operator pos:line="591" pos:column="51">(</op:operator><name><name pos:line="591" pos:column="52">ll</name><op:operator pos:line="591" pos:column="54">-&gt;</op:operator><name pos:line="591" pos:column="56">positions</name><index pos:line="591" pos:column="65">[<expr><name pos:line="591" pos:column="66">i</name></expr>]</index></name> <op:operator pos:line="591" pos:column="69">+</op:operator> <name><name pos:line="591" pos:column="71">ll</name><op:operator pos:line="591" pos:column="73">-&gt;</op:operator><name pos:line="591" pos:column="75">positions</name><index pos:line="591" pos:column="84">[<expr><name pos:line="591" pos:column="85">i</name> <op:operator pos:line="591" pos:column="87">+</op:operator> <lit:literal type="number" pos:line="591" pos:column="89">1</lit:literal></expr>]</index></name><op:operator pos:line="591" pos:column="91">)</op:operator> <op:operator pos:line="591" pos:column="93">/</op:operator> <lit:literal type="number" pos:line="591" pos:column="95">2</lit:literal><op:operator pos:line="591" pos:column="96">)</op:operator></expr>)</condition><then pos:line="591" pos:column="98"> <block pos:line="591" pos:column="99">{
				<expr_stmt><expr><name pos:line="592" pos:column="33">retVal</name> <op:operator pos:line="592" pos:column="40">=</op:operator> <call><name><name pos:line="592" pos:column="42">pdoc</name><op:operator pos:line="592" pos:column="46">-&gt;</op:operator><name pos:line="592" pos:column="48">MovePositionOutsideChar</name></name><argument_list pos:line="592" pos:column="71">(<argument><expr><name pos:line="592" pos:column="72">i</name> <op:operator pos:line="592" pos:column="74">+</op:operator> <name pos:line="592" pos:column="76">posLineStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="592" pos:column="90">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="593" pos:column="33">return <expr><call><name pos:line="593" pos:column="40">SelectionPosition</name><argument_list pos:line="593" pos:column="57">(<argument><expr><name pos:line="593" pos:column="58">retVal</name></expr></argument>)</argument_list></call></expr>;</return>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="595" pos:column="25">i</name><op:operator pos:line="595" pos:column="26">++</op:operator></expr>;</expr_stmt>
		}</block></while>
		<decl_stmt><decl><type><specifier pos:line="597" pos:column="17">const</specifier> <name pos:line="597" pos:column="23">int</name></type> <name pos:line="597" pos:column="27">spaceWidth</name> <init pos:line="597" pos:column="38">= <expr><call><name><name pos:line="597" pos:column="40">static_cast</name><argument_list pos:line="597" pos:column="51">&lt;<argument><expr><name pos:line="597" pos:column="52">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="597" pos:column="56">(<argument><expr><name><name pos:line="597" pos:column="57">vs</name><op:operator pos:line="597" pos:column="59">.</op:operator><name pos:line="597" pos:column="60">styles</name><index pos:line="597" pos:column="66">[<expr><call><name><name pos:line="597" pos:column="67">ll</name><op:operator pos:line="597" pos:column="69">-&gt;</op:operator><name pos:line="597" pos:column="71">EndLineStyle</name></name><argument_list pos:line="597" pos:column="83">()</argument_list></call></expr>]</index></name><op:operator pos:line="597" pos:column="86">.</op:operator><name pos:line="597" pos:column="87">spaceWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="598" pos:column="17">int</name></type> <name pos:line="598" pos:column="21">spaceOffset</name> <init pos:line="598" pos:column="33">= <expr><op:operator pos:line="598" pos:column="35">(</op:operator><name pos:line="598" pos:column="36">x</name> <op:operator pos:line="598" pos:column="38">+</op:operator> <name pos:line="598" pos:column="40">subLineStart</name> <op:operator pos:line="598" pos:column="53">-</op:operator> <name><name pos:line="598" pos:column="55">ll</name><op:operator pos:line="598" pos:column="57">-&gt;</op:operator><name pos:line="598" pos:column="59">positions</name><index pos:line="598" pos:column="68">[<expr><name pos:line="598" pos:column="69">lineEnd</name></expr>]</index></name> <op:operator pos:line="598" pos:column="78">+</op:operator> <name pos:line="598" pos:column="80">spaceWidth</name> <op:operator pos:line="598" pos:column="91">/</op:operator> <lit:literal type="number" pos:line="598" pos:column="93">2</lit:literal><op:operator pos:line="598" pos:column="94">)</op:operator> <op:operator pos:line="598" pos:column="96">/</op:operator> <name pos:line="598" pos:column="98">spaceWidth</name></expr></init></decl>;</decl_stmt>
		<return pos:line="599" pos:column="17">return <expr><call><name pos:line="599" pos:column="24">SelectionPosition</name><argument_list pos:line="599" pos:column="41">(<argument><expr><name pos:line="599" pos:column="42">lineEnd</name> <op:operator pos:line="599" pos:column="50">+</op:operator> <name pos:line="599" pos:column="52">posLineStart</name></expr></argument>, <argument><expr><name pos:line="599" pos:column="66">spaceOffset</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then></if>
	<return pos:line="601" pos:column="9">return <expr><call><name pos:line="601" pos:column="16">SelectionPosition</name><argument_list pos:line="601" pos:column="33">(<argument><expr><name pos:line="601" pos:column="34">retVal</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="604" pos:column="1">/**
 * If painting then abandon the painting because a wider redraw is needed.
 * @return true if calling code should stop drawing.
 */</comment>
<function><type><name pos:line="608" pos:column="1">bool</name></type> <name><name pos:line="608" pos:column="6">Editor</name><op:operator pos:line="608" pos:column="12">::</op:operator><name pos:line="608" pos:column="14">AbandonPaint</name></name><parameter_list pos:line="608" pos:column="26">()</parameter_list> <block pos:line="608" pos:column="29">{
	<if pos:line="609" pos:column="9">if <condition pos:line="609" pos:column="12">(<expr><op:operator pos:line="609" pos:column="13">(</op:operator><name pos:line="609" pos:column="14">paintState</name> <op:operator pos:line="609" pos:column="25">==</op:operator> <name pos:line="609" pos:column="28">painting</name><op:operator pos:line="609" pos:column="36">)</op:operator> <op:operator pos:line="609" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="609" pos:column="41">!</op:operator><name pos:line="609" pos:column="42">paintingAllText</name></expr>)</condition><then pos:line="609" pos:column="58"> <block pos:line="609" pos:column="59">{
		<expr_stmt><expr><name pos:line="610" pos:column="17">paintState</name> <op:operator pos:line="610" pos:column="28">=</op:operator> <name pos:line="610" pos:column="30">paintAbandoned</name></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="612" pos:column="9">return <expr><name pos:line="612" pos:column="16">paintState</name> <op:operator pos:line="612" pos:column="27">==</op:operator> <name pos:line="612" pos:column="30">paintAbandoned</name></expr>;</return>
}</block></function>

<function><type><name pos:line="615" pos:column="1">void</name></type> <name><name pos:line="615" pos:column="6">Editor</name><op:operator pos:line="615" pos:column="12">::</op:operator><name pos:line="615" pos:column="14">RedrawRect</name></name><parameter_list pos:line="615" pos:column="24">(<param><decl><type><name pos:line="615" pos:column="25">PRectangle</name></type> <name pos:line="615" pos:column="36">rc</name></decl></param>)</parameter_list> <block pos:line="615" pos:column="40">{
	<comment type="line" pos:line="616" pos:column="9">//Platform::DebugPrintf("Redraw %0d,%0d - %0d,%0d\n", rc.left, rc.top, rc.right, rc.bottom);</comment>

	<comment type="line" pos:line="618" pos:column="9">// Clip the redraw rectangle into the client area</comment>
	<decl_stmt><decl><type><name pos:line="619" pos:column="9">PRectangle</name></type> <name pos:line="619" pos:column="20">rcClient</name> <init pos:line="619" pos:column="29">= <expr><call><name pos:line="619" pos:column="31">GetClientRectangle</name><argument_list pos:line="619" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="620" pos:column="9">if <condition pos:line="620" pos:column="12">(<expr><name><name pos:line="620" pos:column="13">rc</name><op:operator pos:line="620" pos:column="15">.</op:operator><name pos:line="620" pos:column="16">top</name></name> <op:operator pos:line="620" pos:column="20">&lt;</op:operator> <name><name pos:line="620" pos:column="22">rcClient</name><op:operator pos:line="620" pos:column="30">.</op:operator><name pos:line="620" pos:column="31">top</name></name></expr>)</condition><then pos:line="620" pos:column="35">
		<expr_stmt><expr><name><name pos:line="621" pos:column="17">rc</name><op:operator pos:line="621" pos:column="19">.</op:operator><name pos:line="621" pos:column="20">top</name></name> <op:operator pos:line="621" pos:column="24">=</op:operator> <name><name pos:line="621" pos:column="26">rcClient</name><op:operator pos:line="621" pos:column="34">.</op:operator><name pos:line="621" pos:column="35">top</name></name></expr>;</expr_stmt></then></if>
	<if pos:line="622" pos:column="9">if <condition pos:line="622" pos:column="12">(<expr><name><name pos:line="622" pos:column="13">rc</name><op:operator pos:line="622" pos:column="15">.</op:operator><name pos:line="622" pos:column="16">bottom</name></name> <op:operator pos:line="622" pos:column="23">&gt;</op:operator> <name><name pos:line="622" pos:column="25">rcClient</name><op:operator pos:line="622" pos:column="33">.</op:operator><name pos:line="622" pos:column="34">bottom</name></name></expr>)</condition><then pos:line="622" pos:column="41">
		<expr_stmt><expr><name><name pos:line="623" pos:column="17">rc</name><op:operator pos:line="623" pos:column="19">.</op:operator><name pos:line="623" pos:column="20">bottom</name></name> <op:operator pos:line="623" pos:column="27">=</op:operator> <name><name pos:line="623" pos:column="29">rcClient</name><op:operator pos:line="623" pos:column="37">.</op:operator><name pos:line="623" pos:column="38">bottom</name></name></expr>;</expr_stmt></then></if>
	<if pos:line="624" pos:column="9">if <condition pos:line="624" pos:column="12">(<expr><name><name pos:line="624" pos:column="13">rc</name><op:operator pos:line="624" pos:column="15">.</op:operator><name pos:line="624" pos:column="16">left</name></name> <op:operator pos:line="624" pos:column="21">&lt;</op:operator> <name><name pos:line="624" pos:column="23">rcClient</name><op:operator pos:line="624" pos:column="31">.</op:operator><name pos:line="624" pos:column="32">left</name></name></expr>)</condition><then pos:line="624" pos:column="37">
		<expr_stmt><expr><name><name pos:line="625" pos:column="17">rc</name><op:operator pos:line="625" pos:column="19">.</op:operator><name pos:line="625" pos:column="20">left</name></name> <op:operator pos:line="625" pos:column="25">=</op:operator> <name><name pos:line="625" pos:column="27">rcClient</name><op:operator pos:line="625" pos:column="35">.</op:operator><name pos:line="625" pos:column="36">left</name></name></expr>;</expr_stmt></then></if>
	<if pos:line="626" pos:column="9">if <condition pos:line="626" pos:column="12">(<expr><name><name pos:line="626" pos:column="13">rc</name><op:operator pos:line="626" pos:column="15">.</op:operator><name pos:line="626" pos:column="16">right</name></name> <op:operator pos:line="626" pos:column="22">&gt;</op:operator> <name><name pos:line="626" pos:column="24">rcClient</name><op:operator pos:line="626" pos:column="32">.</op:operator><name pos:line="626" pos:column="33">right</name></name></expr>)</condition><then pos:line="626" pos:column="39">
		<expr_stmt><expr><name><name pos:line="627" pos:column="17">rc</name><op:operator pos:line="627" pos:column="19">.</op:operator><name pos:line="627" pos:column="20">right</name></name> <op:operator pos:line="627" pos:column="26">=</op:operator> <name><name pos:line="627" pos:column="28">rcClient</name><op:operator pos:line="627" pos:column="36">.</op:operator><name pos:line="627" pos:column="37">right</name></name></expr>;</expr_stmt></then></if>

	<if pos:line="629" pos:column="9">if <condition pos:line="629" pos:column="12">(<expr><op:operator pos:line="629" pos:column="13">(</op:operator><name><name pos:line="629" pos:column="14">rc</name><op:operator pos:line="629" pos:column="16">.</op:operator><name pos:line="629" pos:column="17">bottom</name></name> <op:operator pos:line="629" pos:column="24">&gt;</op:operator> <name><name pos:line="629" pos:column="26">rc</name><op:operator pos:line="629" pos:column="28">.</op:operator><name pos:line="629" pos:column="29">top</name></name><op:operator pos:line="629" pos:column="32">)</op:operator> <op:operator pos:line="629" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="629" pos:column="37">(</op:operator><name><name pos:line="629" pos:column="38">rc</name><op:operator pos:line="629" pos:column="40">.</op:operator><name pos:line="629" pos:column="41">right</name></name> <op:operator pos:line="629" pos:column="47">&gt;</op:operator> <name><name pos:line="629" pos:column="49">rc</name><op:operator pos:line="629" pos:column="51">.</op:operator><name pos:line="629" pos:column="52">left</name></name><op:operator pos:line="629" pos:column="56">)</op:operator></expr>)</condition><then pos:line="629" pos:column="58"> <block pos:line="629" pos:column="59">{
		<expr_stmt><expr><call><name><name pos:line="630" pos:column="17">wMain</name><op:operator pos:line="630" pos:column="22">.</op:operator><name pos:line="630" pos:column="23">InvalidateRectangle</name></name><argument_list pos:line="630" pos:column="42">(<argument><expr><name pos:line="630" pos:column="43">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="634" pos:column="1">void</name></type> <name><name pos:line="634" pos:column="6">Editor</name><op:operator pos:line="634" pos:column="12">::</op:operator><name pos:line="634" pos:column="14">Redraw</name></name><parameter_list pos:line="634" pos:column="20">()</parameter_list> <block pos:line="634" pos:column="23">{
	<comment type="line" pos:line="635" pos:column="9">//Platform::DebugPrintf("Redraw all\n");</comment>
	<decl_stmt><decl><type><name pos:line="636" pos:column="9">PRectangle</name></type> <name pos:line="636" pos:column="20">rcClient</name> <init pos:line="636" pos:column="29">= <expr><call><name pos:line="636" pos:column="31">GetClientRectangle</name><argument_list pos:line="636" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="637" pos:column="9">wMain</name><op:operator pos:line="637" pos:column="14">.</op:operator><name pos:line="637" pos:column="15">InvalidateRectangle</name></name><argument_list pos:line="637" pos:column="34">(<argument><expr><name pos:line="637" pos:column="35">rcClient</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="638" pos:column="9">//wMain.InvalidateAll();</comment>
}</block></function>

<function><type><name pos:line="641" pos:column="1">void</name></type> <name><name pos:line="641" pos:column="6">Editor</name><op:operator pos:line="641" pos:column="12">::</op:operator><name pos:line="641" pos:column="14">RedrawSelMargin</name></name><parameter_list pos:line="641" pos:column="29">(<param><decl><type><name pos:line="641" pos:column="30">int</name></type> <name pos:line="641" pos:column="34">line</name></decl></param>, <param><decl><type><name pos:line="641" pos:column="40">bool</name></type> <name pos:line="641" pos:column="45">allAfter</name></decl></param>)</parameter_list> <block pos:line="641" pos:column="55">{
	<if pos:line="642" pos:column="9">if <condition pos:line="642" pos:column="12">(<expr><op:operator pos:line="642" pos:column="13">!</op:operator><call><name pos:line="642" pos:column="14">AbandonPaint</name><argument_list pos:line="642" pos:column="26">()</argument_list></call></expr>)</condition><then pos:line="642" pos:column="29"> <block pos:line="642" pos:column="30">{
		<if pos:line="643" pos:column="17">if <condition pos:line="643" pos:column="20">(<expr><name><name pos:line="643" pos:column="21">vs</name><op:operator pos:line="643" pos:column="23">.</op:operator><name pos:line="643" pos:column="24">maskInLine</name></name></expr>)</condition><then pos:line="643" pos:column="35"> <block pos:line="643" pos:column="36">{
			<expr_stmt><expr><call><name pos:line="644" pos:column="25">Redraw</name><argument_list pos:line="644" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="645" pos:column="19">else <block pos:line="645" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="646" pos:column="25">PRectangle</name></type> <name pos:line="646" pos:column="36">rcSelMargin</name> <init pos:line="646" pos:column="48">= <expr><call><name pos:line="646" pos:column="50">GetClientRectangle</name><argument_list pos:line="646" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="647" pos:column="25">rcSelMargin</name><op:operator pos:line="647" pos:column="36">.</op:operator><name pos:line="647" pos:column="37">right</name></name> <op:operator pos:line="647" pos:column="43">=</op:operator> <name><name pos:line="647" pos:column="45">vs</name><op:operator pos:line="647" pos:column="47">.</op:operator><name pos:line="647" pos:column="48">fixedColumnWidth</name></name></expr>;</expr_stmt>
			<if pos:line="648" pos:column="25">if <condition pos:line="648" pos:column="28">(<expr><name pos:line="648" pos:column="29">line</name> <op:operator pos:line="648" pos:column="34">!=</op:operator> <op:operator pos:line="648" pos:column="37">-</op:operator><lit:literal type="number" pos:line="648" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="648" pos:column="40"> <block pos:line="648" pos:column="41">{
				<decl_stmt><decl><type><name pos:line="649" pos:column="33">int</name></type> <name pos:line="649" pos:column="37">position</name> <init pos:line="649" pos:column="46">= <expr><call><name><name pos:line="649" pos:column="48">pdoc</name><op:operator pos:line="649" pos:column="52">-&gt;</op:operator><name pos:line="649" pos:column="54">LineStart</name></name><argument_list pos:line="649" pos:column="63">(<argument><expr><name pos:line="649" pos:column="64">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="650" pos:column="33">PRectangle</name></type> <name pos:line="650" pos:column="44">rcLine</name> <init pos:line="650" pos:column="51">= <expr><call><name pos:line="650" pos:column="53">RectangleFromRange</name><argument_list pos:line="650" pos:column="71">(<argument><expr><name pos:line="650" pos:column="72">position</name></expr></argument>, <argument><expr><name pos:line="650" pos:column="82">position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="651" pos:column="33">rcSelMargin</name><op:operator pos:line="651" pos:column="44">.</op:operator><name pos:line="651" pos:column="45">top</name></name> <op:operator pos:line="651" pos:column="49">=</op:operator> <name><name pos:line="651" pos:column="51">rcLine</name><op:operator pos:line="651" pos:column="57">.</op:operator><name pos:line="651" pos:column="58">top</name></name></expr>;</expr_stmt>
				<if pos:line="652" pos:column="33">if <condition pos:line="652" pos:column="36">(<expr><op:operator pos:line="652" pos:column="37">!</op:operator><name pos:line="652" pos:column="38">allAfter</name></expr>)</condition><then pos:line="652" pos:column="47">
					<expr_stmt><expr><name><name pos:line="653" pos:column="41">rcSelMargin</name><op:operator pos:line="653" pos:column="52">.</op:operator><name pos:line="653" pos:column="53">bottom</name></name> <op:operator pos:line="653" pos:column="60">=</op:operator> <name><name pos:line="653" pos:column="62">rcLine</name><op:operator pos:line="653" pos:column="68">.</op:operator><name pos:line="653" pos:column="69">bottom</name></name></expr>;</expr_stmt></then></if>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="655" pos:column="25">wMain</name><op:operator pos:line="655" pos:column="30">.</op:operator><name pos:line="655" pos:column="31">InvalidateRectangle</name></name><argument_list pos:line="655" pos:column="50">(<argument><expr><name pos:line="655" pos:column="51">rcSelMargin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="660" pos:column="1">PRectangle</name></type> <name><name pos:line="660" pos:column="12">Editor</name><op:operator pos:line="660" pos:column="18">::</op:operator><name pos:line="660" pos:column="20">RectangleFromRange</name></name><parameter_list pos:line="660" pos:column="38">(<param><decl><type><name pos:line="660" pos:column="39">int</name></type> <name pos:line="660" pos:column="43">start</name></decl></param>, <param><decl><type><name pos:line="660" pos:column="50">int</name></type> <name pos:line="660" pos:column="54">end</name></decl></param>)</parameter_list> <block pos:line="660" pos:column="59">{
	<decl_stmt><decl><type><name pos:line="661" pos:column="9">int</name></type> <name pos:line="661" pos:column="13">minPos</name> <init pos:line="661" pos:column="20">= <expr><name pos:line="661" pos:column="22">start</name></expr></init></decl>;</decl_stmt>
	<if pos:line="662" pos:column="9">if <condition pos:line="662" pos:column="12">(<expr><name pos:line="662" pos:column="13">minPos</name> <op:operator pos:line="662" pos:column="20">&gt;</op:operator> <name pos:line="662" pos:column="22">end</name></expr>)</condition><then pos:line="662" pos:column="26">
		<expr_stmt><expr><name pos:line="663" pos:column="17">minPos</name> <op:operator pos:line="663" pos:column="24">=</op:operator> <name pos:line="663" pos:column="26">end</name></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="664" pos:column="9">int</name></type> <name pos:line="664" pos:column="13">maxPos</name> <init pos:line="664" pos:column="20">= <expr><name pos:line="664" pos:column="22">start</name></expr></init></decl>;</decl_stmt>
	<if pos:line="665" pos:column="9">if <condition pos:line="665" pos:column="12">(<expr><name pos:line="665" pos:column="13">maxPos</name> <op:operator pos:line="665" pos:column="20">&lt;</op:operator> <name pos:line="665" pos:column="22">end</name></expr>)</condition><then pos:line="665" pos:column="26">
		<expr_stmt><expr><name pos:line="666" pos:column="17">maxPos</name> <op:operator pos:line="666" pos:column="24">=</op:operator> <name pos:line="666" pos:column="26">end</name></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="667" pos:column="9">int</name></type> <name pos:line="667" pos:column="13">minLine</name> <init pos:line="667" pos:column="21">= <expr><call><name><name pos:line="667" pos:column="23">cs</name><op:operator pos:line="667" pos:column="25">.</op:operator><name pos:line="667" pos:column="26">DisplayFromDoc</name></name><argument_list pos:line="667" pos:column="40">(<argument><expr><call><name><name pos:line="667" pos:column="41">pdoc</name><op:operator pos:line="667" pos:column="45">-&gt;</op:operator><name pos:line="667" pos:column="47">LineFromPosition</name></name><argument_list pos:line="667" pos:column="63">(<argument><expr><name pos:line="667" pos:column="64">minPos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="668" pos:column="9">int</name></type> <name pos:line="668" pos:column="13">lineDocMax</name> <init pos:line="668" pos:column="24">= <expr><call><name><name pos:line="668" pos:column="26">pdoc</name><op:operator pos:line="668" pos:column="30">-&gt;</op:operator><name pos:line="668" pos:column="32">LineFromPosition</name></name><argument_list pos:line="668" pos:column="48">(<argument><expr><name pos:line="668" pos:column="49">maxPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="669" pos:column="9">int</name></type> <name pos:line="669" pos:column="13">maxLine</name> <init pos:line="669" pos:column="21">= <expr><call><name><name pos:line="669" pos:column="23">cs</name><op:operator pos:line="669" pos:column="25">.</op:operator><name pos:line="669" pos:column="26">DisplayFromDoc</name></name><argument_list pos:line="669" pos:column="40">(<argument><expr><name pos:line="669" pos:column="41">lineDocMax</name></expr></argument>)</argument_list></call> <op:operator pos:line="669" pos:column="53">+</op:operator> <call><name><name pos:line="669" pos:column="55">cs</name><op:operator pos:line="669" pos:column="57">.</op:operator><name pos:line="669" pos:column="58">GetHeight</name></name><argument_list pos:line="669" pos:column="67">(<argument><expr><name pos:line="669" pos:column="68">lineDocMax</name></expr></argument>)</argument_list></call> <op:operator pos:line="669" pos:column="80">-</op:operator> <lit:literal type="number" pos:line="669" pos:column="82">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="670" pos:column="9">PRectangle</name></type> <name pos:line="670" pos:column="20">rcClient</name> <init pos:line="670" pos:column="29">= <expr><call><name pos:line="670" pos:column="31">GetTextRectangle</name><argument_list pos:line="670" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="671" pos:column="9">PRectangle</name></type> <name pos:line="671" pos:column="20">rc</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="672" pos:column="9">rc</name><op:operator pos:line="672" pos:column="11">.</op:operator><name pos:line="672" pos:column="12">left</name></name> <op:operator pos:line="672" pos:column="17">=</op:operator> <name><name pos:line="672" pos:column="19">vs</name><op:operator pos:line="672" pos:column="21">.</op:operator><name pos:line="672" pos:column="22">fixedColumnWidth</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="673" pos:column="9">rc</name><op:operator pos:line="673" pos:column="11">.</op:operator><name pos:line="673" pos:column="12">top</name></name> <op:operator pos:line="673" pos:column="16">=</op:operator> <op:operator pos:line="673" pos:column="18">(</op:operator><name pos:line="673" pos:column="19">minLine</name> <op:operator pos:line="673" pos:column="27">-</op:operator> <name pos:line="673" pos:column="29">topLine</name><op:operator pos:line="673" pos:column="36">)</op:operator> <op:operator pos:line="673" pos:column="38">*</op:operator> <name><name pos:line="673" pos:column="40">vs</name><op:operator pos:line="673" pos:column="42">.</op:operator><name pos:line="673" pos:column="43">lineHeight</name></name></expr>;</expr_stmt>
	<if pos:line="674" pos:column="9">if <condition pos:line="674" pos:column="12">(<expr><name><name pos:line="674" pos:column="13">rc</name><op:operator pos:line="674" pos:column="15">.</op:operator><name pos:line="674" pos:column="16">top</name></name> <op:operator pos:line="674" pos:column="20">&lt;</op:operator> <lit:literal type="number" pos:line="674" pos:column="22">0</lit:literal></expr>)</condition><then pos:line="674" pos:column="24">
		<expr_stmt><expr><name><name pos:line="675" pos:column="17">rc</name><op:operator pos:line="675" pos:column="19">.</op:operator><name pos:line="675" pos:column="20">top</name></name> <op:operator pos:line="675" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="675" pos:column="26">0</lit:literal></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><name><name pos:line="676" pos:column="9">rc</name><op:operator pos:line="676" pos:column="11">.</op:operator><name pos:line="676" pos:column="12">right</name></name> <op:operator pos:line="676" pos:column="18">=</op:operator> <name><name pos:line="676" pos:column="20">rcClient</name><op:operator pos:line="676" pos:column="28">.</op:operator><name pos:line="676" pos:column="29">right</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="677" pos:column="9">rc</name><op:operator pos:line="677" pos:column="11">.</op:operator><name pos:line="677" pos:column="12">bottom</name></name> <op:operator pos:line="677" pos:column="19">=</op:operator> <op:operator pos:line="677" pos:column="21">(</op:operator><name pos:line="677" pos:column="22">maxLine</name> <op:operator pos:line="677" pos:column="30">-</op:operator> <name pos:line="677" pos:column="32">topLine</name> <op:operator pos:line="677" pos:column="40">+</op:operator> <lit:literal type="number" pos:line="677" pos:column="42">1</lit:literal><op:operator pos:line="677" pos:column="43">)</op:operator> <op:operator pos:line="677" pos:column="45">*</op:operator> <name><name pos:line="677" pos:column="47">vs</name><op:operator pos:line="677" pos:column="49">.</op:operator><name pos:line="677" pos:column="50">lineHeight</name></name></expr>;</expr_stmt>
	<comment type="line" pos:line="678" pos:column="9">// Ensure PRectangle is within 16 bit space</comment>
	<expr_stmt><expr><name><name pos:line="679" pos:column="9">rc</name><op:operator pos:line="679" pos:column="11">.</op:operator><name pos:line="679" pos:column="12">top</name></name> <op:operator pos:line="679" pos:column="16">=</op:operator> <call><name><name pos:line="679" pos:column="18">Platform</name><op:operator pos:line="679" pos:column="26">::</op:operator><name pos:line="679" pos:column="28">Clamp</name></name><argument_list pos:line="679" pos:column="33">(<argument><expr><name><name pos:line="679" pos:column="34">rc</name><op:operator pos:line="679" pos:column="36">.</op:operator><name pos:line="679" pos:column="37">top</name></name></expr></argument>, <argument><expr><op:operator pos:line="679" pos:column="42">-</op:operator><lit:literal type="number" pos:line="679" pos:column="43">32000</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="679" pos:column="50">32000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="680" pos:column="9">rc</name><op:operator pos:line="680" pos:column="11">.</op:operator><name pos:line="680" pos:column="12">bottom</name></name> <op:operator pos:line="680" pos:column="19">=</op:operator> <call><name><name pos:line="680" pos:column="21">Platform</name><op:operator pos:line="680" pos:column="29">::</op:operator><name pos:line="680" pos:column="31">Clamp</name></name><argument_list pos:line="680" pos:column="36">(<argument><expr><name><name pos:line="680" pos:column="37">rc</name><op:operator pos:line="680" pos:column="39">.</op:operator><name pos:line="680" pos:column="40">bottom</name></name></expr></argument>, <argument><expr><op:operator pos:line="680" pos:column="48">-</op:operator><lit:literal type="number" pos:line="680" pos:column="49">32000</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="680" pos:column="56">32000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:line="682" pos:column="9">return <expr><name pos:line="682" pos:column="16">rc</name></expr>;</return>
}</block></function>

<function><type><name pos:line="685" pos:column="1">void</name></type> <name><name pos:line="685" pos:column="6">Editor</name><op:operator pos:line="685" pos:column="12">::</op:operator><name pos:line="685" pos:column="14">InvalidateRange</name></name><parameter_list pos:line="685" pos:column="29">(<param><decl><type><name pos:line="685" pos:column="30">int</name></type> <name pos:line="685" pos:column="34">start</name></decl></param>, <param><decl><type><name pos:line="685" pos:column="41">int</name></type> <name pos:line="685" pos:column="45">end</name></decl></param>)</parameter_list> <block pos:line="685" pos:column="50">{
	<expr_stmt><expr><call><name pos:line="686" pos:column="9">RedrawRect</name><argument_list pos:line="686" pos:column="19">(<argument><expr><call><name pos:line="686" pos:column="20">RectangleFromRange</name><argument_list pos:line="686" pos:column="38">(<argument><expr><name pos:line="686" pos:column="39">start</name></expr></argument>, <argument><expr><name pos:line="686" pos:column="46">end</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="689" pos:column="1">int</name></type> <name><name pos:line="689" pos:column="5">Editor</name><op:operator pos:line="689" pos:column="11">::</op:operator><name pos:line="689" pos:column="13">CurrentPosition</name></name><parameter_list pos:line="689" pos:column="28">()</parameter_list> <block pos:line="689" pos:column="31">{
	<return pos:line="690" pos:column="9">return <expr><call><name><name pos:line="690" pos:column="16">sel</name><op:operator pos:line="690" pos:column="19">.</op:operator><name pos:line="690" pos:column="20">MainCaret</name></name><argument_list pos:line="690" pos:column="29">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="693" pos:column="1">bool</name></type> <name><name pos:line="693" pos:column="6">Editor</name><op:operator pos:line="693" pos:column="12">::</op:operator><name pos:line="693" pos:column="14">SelectionEmpty</name></name><parameter_list pos:line="693" pos:column="28">()</parameter_list> <block pos:line="693" pos:column="31">{
	<return pos:line="694" pos:column="9">return <expr><call><name><name pos:line="694" pos:column="16">sel</name><op:operator pos:line="694" pos:column="19">.</op:operator><name pos:line="694" pos:column="20">Empty</name></name><argument_list pos:line="694" pos:column="25">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="697" pos:column="1">SelectionPosition</name></type> <name><name pos:line="697" pos:column="19">Editor</name><op:operator pos:line="697" pos:column="25">::</op:operator><name pos:line="697" pos:column="27">SelectionStart</name></name><parameter_list pos:line="697" pos:column="41">()</parameter_list> <block pos:line="697" pos:column="44">{
	<return pos:line="698" pos:column="9">return <expr><call><name><name pos:line="698" pos:column="16">sel</name><op:operator pos:line="698" pos:column="19">.</op:operator><name pos:line="698" pos:column="20">RangeMain</name></name><argument_list pos:line="698" pos:column="29">()</argument_list></call><op:operator pos:line="698" pos:column="31">.</op:operator><call><name pos:line="698" pos:column="32">Start</name><argument_list pos:line="698" pos:column="37">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="701" pos:column="1">SelectionPosition</name></type> <name><name pos:line="701" pos:column="19">Editor</name><op:operator pos:line="701" pos:column="25">::</op:operator><name pos:line="701" pos:column="27">SelectionEnd</name></name><parameter_list pos:line="701" pos:column="39">()</parameter_list> <block pos:line="701" pos:column="42">{
	<return pos:line="702" pos:column="9">return <expr><call><name><name pos:line="702" pos:column="16">sel</name><op:operator pos:line="702" pos:column="19">.</op:operator><name pos:line="702" pos:column="20">RangeMain</name></name><argument_list pos:line="702" pos:column="29">()</argument_list></call><op:operator pos:line="702" pos:column="31">.</op:operator><call><name pos:line="702" pos:column="32">End</name><argument_list pos:line="702" pos:column="35">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="705" pos:column="1">void</name></type> <name><name pos:line="705" pos:column="6">Editor</name><op:operator pos:line="705" pos:column="12">::</op:operator><name pos:line="705" pos:column="14">SetRectangularRange</name></name><parameter_list pos:line="705" pos:column="33">()</parameter_list> <block pos:line="705" pos:column="36">{
	<if pos:line="706" pos:column="9">if <condition pos:line="706" pos:column="12">(<expr><call><name><name pos:line="706" pos:column="13">sel</name><op:operator pos:line="706" pos:column="16">.</op:operator><name pos:line="706" pos:column="17">IsRectangular</name></name><argument_list pos:line="706" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="706" pos:column="33"> <block pos:line="706" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="707" pos:column="17">int</name></type> <name pos:line="707" pos:column="21">xAnchor</name> <init pos:line="707" pos:column="29">= <expr><call><name pos:line="707" pos:column="31">XFromPosition</name><argument_list pos:line="707" pos:column="44">(<argument><expr><call><name><name pos:line="707" pos:column="45">sel</name><op:operator pos:line="707" pos:column="48">.</op:operator><name pos:line="707" pos:column="49">Rectangular</name></name><argument_list pos:line="707" pos:column="60">()</argument_list></call><op:operator pos:line="707" pos:column="62">.</op:operator><name pos:line="707" pos:column="63">anchor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="708" pos:column="17">int</name></type> <name pos:line="708" pos:column="21">xCaret</name> <init pos:line="708" pos:column="28">= <expr><call><name pos:line="708" pos:column="30">XFromPosition</name><argument_list pos:line="708" pos:column="43">(<argument><expr><call><name><name pos:line="708" pos:column="44">sel</name><op:operator pos:line="708" pos:column="47">.</op:operator><name pos:line="708" pos:column="48">Rectangular</name></name><argument_list pos:line="708" pos:column="59">()</argument_list></call><op:operator pos:line="708" pos:column="61">.</op:operator><name pos:line="708" pos:column="62">caret</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="709" pos:column="17">if <condition pos:line="709" pos:column="20">(<expr><name><name pos:line="709" pos:column="21">sel</name><op:operator pos:line="709" pos:column="24">.</op:operator><name pos:line="709" pos:column="25">selType</name></name> <op:operator pos:line="709" pos:column="33">==</op:operator> <name><name pos:line="709" pos:column="36">Selection</name><op:operator pos:line="709" pos:column="45">::</op:operator><name pos:line="709" pos:column="47">selThin</name></name></expr>)</condition><then pos:line="709" pos:column="55"> <block pos:line="709" pos:column="56">{
			<expr_stmt><expr><name pos:line="710" pos:column="25">xCaret</name> <op:operator pos:line="710" pos:column="32">=</op:operator> <name pos:line="710" pos:column="34">xAnchor</name></expr>;</expr_stmt>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="712" pos:column="17">int</name></type> <name pos:line="712" pos:column="21">lineAnchorRect</name> <init pos:line="712" pos:column="36">= <expr><call><name><name pos:line="712" pos:column="38">pdoc</name><op:operator pos:line="712" pos:column="42">-&gt;</op:operator><name pos:line="712" pos:column="44">LineFromPosition</name></name><argument_list pos:line="712" pos:column="60">(<argument><expr><call><name><name pos:line="712" pos:column="61">sel</name><op:operator pos:line="712" pos:column="64">.</op:operator><name pos:line="712" pos:column="65">Rectangular</name></name><argument_list pos:line="712" pos:column="76">()</argument_list></call><op:operator pos:line="712" pos:column="78">.</op:operator><call><name><name pos:line="712" pos:column="79">anchor</name><op:operator pos:line="712" pos:column="85">.</op:operator><name pos:line="712" pos:column="86">Position</name></name><argument_list pos:line="712" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="713" pos:column="17">int</name></type> <name pos:line="713" pos:column="21">lineCaret</name> <init pos:line="713" pos:column="31">= <expr><call><name><name pos:line="713" pos:column="33">pdoc</name><op:operator pos:line="713" pos:column="37">-&gt;</op:operator><name pos:line="713" pos:column="39">LineFromPosition</name></name><argument_list pos:line="713" pos:column="55">(<argument><expr><call><name><name pos:line="713" pos:column="56">sel</name><op:operator pos:line="713" pos:column="59">.</op:operator><name pos:line="713" pos:column="60">Rectangular</name></name><argument_list pos:line="713" pos:column="71">()</argument_list></call><op:operator pos:line="713" pos:column="73">.</op:operator><call><name><name pos:line="713" pos:column="74">caret</name><op:operator pos:line="713" pos:column="79">.</op:operator><name pos:line="713" pos:column="80">Position</name></name><argument_list pos:line="713" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="714" pos:column="17">int</name></type> <name pos:line="714" pos:column="21">increment</name> <init pos:line="714" pos:column="31">= <expr><op:operator pos:line="714" pos:column="33">(</op:operator><name pos:line="714" pos:column="34">lineCaret</name> <op:operator pos:line="714" pos:column="44">&gt;</op:operator> <name pos:line="714" pos:column="46">lineAnchorRect</name><op:operator pos:line="714" pos:column="60">)</op:operator> <op:operator pos:line="714" pos:column="62">?</op:operator> <lit:literal type="number" pos:line="714" pos:column="64">1</lit:literal> <op:operator pos:line="714" pos:column="66">:</op:operator> <op:operator pos:line="714" pos:column="68">-</op:operator><lit:literal type="number" pos:line="714" pos:column="69">1</lit:literal></expr></init></decl>;</decl_stmt>
		<for pos:line="715" pos:column="17">for (<init><decl><type><name pos:line="715" pos:column="22">int</name></type> <name pos:line="715" pos:column="26">line</name><init pos:line="715" pos:column="30">=<expr><name pos:line="715" pos:column="31">lineAnchorRect</name></expr></init></decl>;</init> <condition><expr><name pos:line="715" pos:column="47">line</name> <op:operator pos:line="715" pos:column="52">!=</op:operator> <name pos:line="715" pos:column="55">lineCaret</name><op:operator pos:line="715" pos:column="64">+</op:operator><name pos:line="715" pos:column="65">increment</name></expr>;</condition> <incr><expr><name pos:line="715" pos:column="76">line</name> <op:operator pos:line="715" pos:column="81">+=</op:operator> <name pos:line="715" pos:column="84">increment</name></expr></incr>) <block pos:line="715" pos:column="95">{
			<decl_stmt><decl><type><name pos:line="716" pos:column="25">SelectionRange</name></type> <name pos:line="716" pos:column="40">range</name><argument_list pos:line="716" pos:column="45">(<argument><expr><call><name pos:line="716" pos:column="46">SPositionFromLineX</name><argument_list pos:line="716" pos:column="64">(<argument><expr><name pos:line="716" pos:column="65">line</name></expr></argument>, <argument><expr><name pos:line="716" pos:column="71">xCaret</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="716" pos:column="80">SPositionFromLineX</name><argument_list pos:line="716" pos:column="98">(<argument><expr><name pos:line="716" pos:column="99">line</name></expr></argument>, <argument><expr><name pos:line="716" pos:column="105">xAnchor</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			<if pos:line="717" pos:column="25">if <condition pos:line="717" pos:column="28">(<expr><op:operator pos:line="717" pos:column="29">(</op:operator><name pos:line="717" pos:column="30">virtualSpaceOptions</name> <op:operator pos:line="717" pos:column="50">&amp;</op:operator> <name pos:line="717" pos:column="52">SCVS_RECTANGULARSELECTION</name><op:operator pos:line="717" pos:column="77">)</op:operator> <op:operator pos:line="717" pos:column="79">==</op:operator> <lit:literal type="number" pos:line="717" pos:column="82">0</lit:literal></expr>)</condition><then pos:line="717" pos:column="84">
				<expr_stmt><expr><call><name><name pos:line="718" pos:column="33">range</name><op:operator pos:line="718" pos:column="38">.</op:operator><name pos:line="718" pos:column="39">ClearVirtualSpace</name></name><argument_list pos:line="718" pos:column="56">()</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="719" pos:column="25">if <condition pos:line="719" pos:column="28">(<expr><name pos:line="719" pos:column="29">line</name> <op:operator pos:line="719" pos:column="34">==</op:operator> <name pos:line="719" pos:column="37">lineAnchorRect</name></expr>)</condition><then pos:line="719" pos:column="52">
				<expr_stmt><expr><call><name><name pos:line="720" pos:column="33">sel</name><op:operator pos:line="720" pos:column="36">.</op:operator><name pos:line="720" pos:column="37">SetSelection</name></name><argument_list pos:line="720" pos:column="49">(<argument><expr><name pos:line="720" pos:column="50">range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="721" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="722" pos:column="33">sel</name><op:operator pos:line="722" pos:column="36">.</op:operator><name pos:line="722" pos:column="37">AddSelectionWithoutTrim</name></name><argument_list pos:line="722" pos:column="60">(<argument><expr><name pos:line="722" pos:column="61">range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></for>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="727" pos:column="1">void</name></type> <name><name pos:line="727" pos:column="6">Editor</name><op:operator pos:line="727" pos:column="12">::</op:operator><name pos:line="727" pos:column="14">ThinRectangularRange</name></name><parameter_list pos:line="727" pos:column="34">()</parameter_list> <block pos:line="727" pos:column="37">{
	<if pos:line="728" pos:column="9">if <condition pos:line="728" pos:column="12">(<expr><call><name><name pos:line="728" pos:column="13">sel</name><op:operator pos:line="728" pos:column="16">.</op:operator><name pos:line="728" pos:column="17">IsRectangular</name></name><argument_list pos:line="728" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="728" pos:column="33"> <block pos:line="728" pos:column="34">{
		<expr_stmt><expr><name><name pos:line="729" pos:column="17">sel</name><op:operator pos:line="729" pos:column="20">.</op:operator><name pos:line="729" pos:column="21">selType</name></name> <op:operator pos:line="729" pos:column="29">=</op:operator> <name><name pos:line="729" pos:column="31">Selection</name><op:operator pos:line="729" pos:column="40">::</op:operator><name pos:line="729" pos:column="42">selThin</name></name></expr>;</expr_stmt>
		<if pos:line="730" pos:column="17">if <condition pos:line="730" pos:column="20">(<expr><call><name><name pos:line="730" pos:column="21">sel</name><op:operator pos:line="730" pos:column="24">.</op:operator><name pos:line="730" pos:column="25">Rectangular</name></name><argument_list pos:line="730" pos:column="36">()</argument_list></call><op:operator pos:line="730" pos:column="38">.</op:operator><name pos:line="730" pos:column="39">caret</name> <op:operator pos:line="730" pos:column="45">&lt;</op:operator> <call><name><name pos:line="730" pos:column="47">sel</name><op:operator pos:line="730" pos:column="50">.</op:operator><name pos:line="730" pos:column="51">Rectangular</name></name><argument_list pos:line="730" pos:column="62">()</argument_list></call><op:operator pos:line="730" pos:column="64">.</op:operator><name pos:line="730" pos:column="65">anchor</name></expr>)</condition><then pos:line="730" pos:column="72"> <block pos:line="730" pos:column="73">{
			<expr_stmt><expr><call><name><name pos:line="731" pos:column="25">sel</name><op:operator pos:line="731" pos:column="28">.</op:operator><name pos:line="731" pos:column="29">Rectangular</name></name><argument_list pos:line="731" pos:column="40">()</argument_list></call> <op:operator pos:line="731" pos:column="43">=</op:operator> <call><name pos:line="731" pos:column="45">SelectionRange</name><argument_list pos:line="731" pos:column="59">(<argument><expr><call><name><name pos:line="731" pos:column="60">sel</name><op:operator pos:line="731" pos:column="63">.</op:operator><name pos:line="731" pos:column="64">Range</name></name><argument_list pos:line="731" pos:column="69">(<argument><expr><call><name><name pos:line="731" pos:column="70">sel</name><op:operator pos:line="731" pos:column="73">.</op:operator><name pos:line="731" pos:column="74">Count</name></name><argument_list pos:line="731" pos:column="79">()</argument_list></call><op:operator pos:line="731" pos:column="81">-</op:operator><lit:literal type="number" pos:line="731" pos:column="82">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="731" pos:column="84">.</op:operator><name pos:line="731" pos:column="85">caret</name></expr></argument>, <argument><expr><call><name><name pos:line="731" pos:column="92">sel</name><op:operator pos:line="731" pos:column="95">.</op:operator><name pos:line="731" pos:column="96">Range</name></name><argument_list pos:line="731" pos:column="101">(<argument><expr><lit:literal type="number" pos:line="731" pos:column="102">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="731" pos:column="104">.</op:operator><name pos:line="731" pos:column="105">anchor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="732" pos:column="19">else <block pos:line="732" pos:column="24">{
			<expr_stmt><expr><call><name><name pos:line="733" pos:column="25">sel</name><op:operator pos:line="733" pos:column="28">.</op:operator><name pos:line="733" pos:column="29">Rectangular</name></name><argument_list pos:line="733" pos:column="40">()</argument_list></call> <op:operator pos:line="733" pos:column="43">=</op:operator> <call><name pos:line="733" pos:column="45">SelectionRange</name><argument_list pos:line="733" pos:column="59">(<argument><expr><call><name><name pos:line="733" pos:column="60">sel</name><op:operator pos:line="733" pos:column="63">.</op:operator><name pos:line="733" pos:column="64">Range</name></name><argument_list pos:line="733" pos:column="69">(<argument><expr><call><name><name pos:line="733" pos:column="70">sel</name><op:operator pos:line="733" pos:column="73">.</op:operator><name pos:line="733" pos:column="74">Count</name></name><argument_list pos:line="733" pos:column="79">()</argument_list></call><op:operator pos:line="733" pos:column="81">-</op:operator><lit:literal type="number" pos:line="733" pos:column="82">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="733" pos:column="84">.</op:operator><name pos:line="733" pos:column="85">anchor</name></expr></argument>, <argument><expr><call><name><name pos:line="733" pos:column="93">sel</name><op:operator pos:line="733" pos:column="96">.</op:operator><name pos:line="733" pos:column="97">Range</name></name><argument_list pos:line="733" pos:column="102">(<argument><expr><lit:literal type="number" pos:line="733" pos:column="103">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="733" pos:column="105">.</op:operator><name pos:line="733" pos:column="106">caret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="735" pos:column="17">SetRectangularRange</name><argument_list pos:line="735" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="739" pos:column="1">void</name></type> <name><name pos:line="739" pos:column="6">Editor</name><op:operator pos:line="739" pos:column="12">::</op:operator><name pos:line="739" pos:column="14">InvalidateSelection</name></name><parameter_list pos:line="739" pos:column="33">(<param><decl><type><name pos:line="739" pos:column="34">SelectionRange</name></type> <name pos:line="739" pos:column="49">newMain</name></decl></param>, <param><decl><type><name pos:line="739" pos:column="58">bool</name></type> <name pos:line="739" pos:column="63">invalidateWholeSelection</name></decl></param>)</parameter_list> <block pos:line="739" pos:column="89">{
	<if pos:line="740" pos:column="9">if <condition pos:line="740" pos:column="12">(<expr><call><name><name pos:line="740" pos:column="13">sel</name><op:operator pos:line="740" pos:column="16">.</op:operator><name pos:line="740" pos:column="17">Count</name></name><argument_list pos:line="740" pos:column="22">()</argument_list></call> <op:operator pos:line="740" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="740" pos:column="27">1</lit:literal> <op:operator pos:line="740" pos:column="29">||</op:operator> <op:operator pos:line="740" pos:column="32">!</op:operator><op:operator pos:line="740" pos:column="33">(</op:operator><call><name><name pos:line="740" pos:column="34">sel</name><op:operator pos:line="740" pos:column="37">.</op:operator><name pos:line="740" pos:column="38">RangeMain</name></name><argument_list pos:line="740" pos:column="47">()</argument_list></call><op:operator pos:line="740" pos:column="49">.</op:operator><name pos:line="740" pos:column="50">anchor</name> <op:operator pos:line="740" pos:column="57">==</op:operator> <name><name pos:line="740" pos:column="60">newMain</name><op:operator pos:line="740" pos:column="67">.</op:operator><name pos:line="740" pos:column="68">anchor</name></name><op:operator pos:line="740" pos:column="74">)</op:operator> <op:operator pos:line="740" pos:column="76">||</op:operator> <call><name><name pos:line="740" pos:column="79">sel</name><op:operator pos:line="740" pos:column="82">.</op:operator><name pos:line="740" pos:column="83">IsRectangular</name></name><argument_list pos:line="740" pos:column="96">()</argument_list></call></expr>)</condition><then pos:line="740" pos:column="99"> <block pos:line="740" pos:column="100">{
		<expr_stmt><expr><name pos:line="741" pos:column="17">invalidateWholeSelection</name> <op:operator pos:line="741" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="741" pos:column="44">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="743" pos:column="9">int</name></type> <name pos:line="743" pos:column="13">firstAffected</name> <init pos:line="743" pos:column="27">= <expr><call><name><name pos:line="743" pos:column="29">Platform</name><op:operator pos:line="743" pos:column="37">::</op:operator><name pos:line="743" pos:column="39">Minimum</name></name><argument_list pos:line="743" pos:column="46">(<argument><expr><call><name><name pos:line="743" pos:column="47">sel</name><op:operator pos:line="743" pos:column="50">.</op:operator><name pos:line="743" pos:column="51">RangeMain</name></name><argument_list pos:line="743" pos:column="60">()</argument_list></call><op:operator pos:line="743" pos:column="62">.</op:operator><call><name pos:line="743" pos:column="63">Start</name><argument_list pos:line="743" pos:column="68">()</argument_list></call><op:operator pos:line="743" pos:column="70">.</op:operator><call><name pos:line="743" pos:column="71">Position</name><argument_list pos:line="743" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="743" pos:column="83">newMain</name><op:operator pos:line="743" pos:column="90">.</op:operator><name pos:line="743" pos:column="91">Start</name></name><argument_list pos:line="743" pos:column="96">()</argument_list></call><op:operator pos:line="743" pos:column="98">.</op:operator><call><name pos:line="743" pos:column="99">Position</name><argument_list pos:line="743" pos:column="107">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="744" pos:column="9">// +1 for lastAffected ensures caret repainted</comment>
	<decl_stmt><decl><type><name pos:line="745" pos:column="9">int</name></type> <name pos:line="745" pos:column="13">lastAffected</name> <init pos:line="745" pos:column="26">= <expr><call><name><name pos:line="745" pos:column="28">Platform</name><op:operator pos:line="745" pos:column="36">::</op:operator><name pos:line="745" pos:column="38">Maximum</name></name><argument_list pos:line="745" pos:column="45">(<argument><expr><call><name><name pos:line="745" pos:column="46">newMain</name><op:operator pos:line="745" pos:column="53">.</op:operator><name pos:line="745" pos:column="54">caret</name><op:operator pos:line="745" pos:column="59">.</op:operator><name pos:line="745" pos:column="60">Position</name></name><argument_list pos:line="745" pos:column="68">()</argument_list></call><op:operator pos:line="745" pos:column="70">+</op:operator><lit:literal type="number" pos:line="745" pos:column="71">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="745" pos:column="74">newMain</name><op:operator pos:line="745" pos:column="81">.</op:operator><name pos:line="745" pos:column="82">anchor</name><op:operator pos:line="745" pos:column="88">.</op:operator><name pos:line="745" pos:column="89">Position</name></name><argument_list pos:line="745" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="746" pos:column="9">lastAffected</name> <op:operator pos:line="746" pos:column="22">=</op:operator> <call><name><name pos:line="746" pos:column="24">Platform</name><op:operator pos:line="746" pos:column="32">::</op:operator><name pos:line="746" pos:column="34">Maximum</name></name><argument_list pos:line="746" pos:column="41">(<argument><expr><name pos:line="746" pos:column="42">lastAffected</name></expr></argument>, <argument><expr><call><name><name pos:line="746" pos:column="56">sel</name><op:operator pos:line="746" pos:column="59">.</op:operator><name pos:line="746" pos:column="60">RangeMain</name></name><argument_list pos:line="746" pos:column="69">()</argument_list></call><op:operator pos:line="746" pos:column="71">.</op:operator><call><name pos:line="746" pos:column="72">End</name><argument_list pos:line="746" pos:column="75">()</argument_list></call><op:operator pos:line="746" pos:column="77">.</op:operator><call><name pos:line="746" pos:column="78">Position</name><argument_list pos:line="746" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="747" pos:column="9">if <condition pos:line="747" pos:column="12">(<expr><name pos:line="747" pos:column="13">invalidateWholeSelection</name></expr>)</condition><then pos:line="747" pos:column="38"> <block pos:line="747" pos:column="39">{
		<for pos:line="748" pos:column="17">for (<init><decl><type><name pos:line="748" pos:column="22">size_t</name></type> <name pos:line="748" pos:column="29">r</name><init pos:line="748" pos:column="30">=<expr><lit:literal type="number" pos:line="748" pos:column="31">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="748" pos:column="34">r</name><op:operator pos:line="748" pos:column="35">&lt;</op:operator><call><name><name pos:line="748" pos:column="36">sel</name><op:operator pos:line="748" pos:column="39">.</op:operator><name pos:line="748" pos:column="40">Count</name></name><argument_list pos:line="748" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="748" pos:column="49">r</name><op:operator pos:line="748" pos:column="50">++</op:operator></expr></incr>) <block pos:line="748" pos:column="54">{
			<expr_stmt><expr><name pos:line="749" pos:column="25">firstAffected</name> <op:operator pos:line="749" pos:column="39">=</op:operator> <call><name><name pos:line="749" pos:column="41">Platform</name><op:operator pos:line="749" pos:column="49">::</op:operator><name pos:line="749" pos:column="51">Minimum</name></name><argument_list pos:line="749" pos:column="58">(<argument><expr><name pos:line="749" pos:column="59">firstAffected</name></expr></argument>, <argument><expr><call><name><name pos:line="749" pos:column="74">sel</name><op:operator pos:line="749" pos:column="77">.</op:operator><name pos:line="749" pos:column="78">Range</name></name><argument_list pos:line="749" pos:column="83">(<argument><expr><name pos:line="749" pos:column="84">r</name></expr></argument>)</argument_list></call><op:operator pos:line="749" pos:column="86">.</op:operator><call><name><name pos:line="749" pos:column="87">caret</name><op:operator pos:line="749" pos:column="92">.</op:operator><name pos:line="749" pos:column="93">Position</name></name><argument_list pos:line="749" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="750" pos:column="25">firstAffected</name> <op:operator pos:line="750" pos:column="39">=</op:operator> <call><name><name pos:line="750" pos:column="41">Platform</name><op:operator pos:line="750" pos:column="49">::</op:operator><name pos:line="750" pos:column="51">Minimum</name></name><argument_list pos:line="750" pos:column="58">(<argument><expr><name pos:line="750" pos:column="59">firstAffected</name></expr></argument>, <argument><expr><call><name><name pos:line="750" pos:column="74">sel</name><op:operator pos:line="750" pos:column="77">.</op:operator><name pos:line="750" pos:column="78">Range</name></name><argument_list pos:line="750" pos:column="83">(<argument><expr><name pos:line="750" pos:column="84">r</name></expr></argument>)</argument_list></call><op:operator pos:line="750" pos:column="86">.</op:operator><call><name><name pos:line="750" pos:column="87">anchor</name><op:operator pos:line="750" pos:column="93">.</op:operator><name pos:line="750" pos:column="94">Position</name></name><argument_list pos:line="750" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="751" pos:column="25">lastAffected</name> <op:operator pos:line="751" pos:column="38">=</op:operator> <call><name><name pos:line="751" pos:column="40">Platform</name><op:operator pos:line="751" pos:column="48">::</op:operator><name pos:line="751" pos:column="50">Maximum</name></name><argument_list pos:line="751" pos:column="57">(<argument><expr><name pos:line="751" pos:column="58">lastAffected</name></expr></argument>, <argument><expr><call><name><name pos:line="751" pos:column="72">sel</name><op:operator pos:line="751" pos:column="75">.</op:operator><name pos:line="751" pos:column="76">Range</name></name><argument_list pos:line="751" pos:column="81">(<argument><expr><name pos:line="751" pos:column="82">r</name></expr></argument>)</argument_list></call><op:operator pos:line="751" pos:column="84">.</op:operator><call><name><name pos:line="751" pos:column="85">caret</name><op:operator pos:line="751" pos:column="90">.</op:operator><name pos:line="751" pos:column="91">Position</name></name><argument_list pos:line="751" pos:column="99">()</argument_list></call><op:operator pos:line="751" pos:column="101">+</op:operator><lit:literal type="number" pos:line="751" pos:column="102">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="752" pos:column="25">lastAffected</name> <op:operator pos:line="752" pos:column="38">=</op:operator> <call><name><name pos:line="752" pos:column="40">Platform</name><op:operator pos:line="752" pos:column="48">::</op:operator><name pos:line="752" pos:column="50">Maximum</name></name><argument_list pos:line="752" pos:column="57">(<argument><expr><name pos:line="752" pos:column="58">lastAffected</name></expr></argument>, <argument><expr><call><name><name pos:line="752" pos:column="72">sel</name><op:operator pos:line="752" pos:column="75">.</op:operator><name pos:line="752" pos:column="76">Range</name></name><argument_list pos:line="752" pos:column="81">(<argument><expr><name pos:line="752" pos:column="82">r</name></expr></argument>)</argument_list></call><op:operator pos:line="752" pos:column="84">.</op:operator><call><name><name pos:line="752" pos:column="85">anchor</name><op:operator pos:line="752" pos:column="91">.</op:operator><name pos:line="752" pos:column="92">Position</name></name><argument_list pos:line="752" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="755" pos:column="9">ContainerNeedsUpdate</name><argument_list pos:line="755" pos:column="29">(<argument><expr><name pos:line="755" pos:column="30">SC_UPDATE_SELECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="756" pos:column="9">InvalidateRange</name><argument_list pos:line="756" pos:column="24">(<argument><expr><name pos:line="756" pos:column="25">firstAffected</name></expr></argument>, <argument><expr><name pos:line="756" pos:column="40">lastAffected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="759" pos:column="1">void</name></type> <name><name pos:line="759" pos:column="6">Editor</name><op:operator pos:line="759" pos:column="12">::</op:operator><name pos:line="759" pos:column="14">SetSelection</name></name><parameter_list pos:line="759" pos:column="26">(<param><decl><type><name pos:line="759" pos:column="27">SelectionPosition</name></type> <name pos:line="759" pos:column="45">currentPos_</name></decl></param>, <param><decl><type><name pos:line="759" pos:column="58">SelectionPosition</name></type> <name pos:line="759" pos:column="76">anchor_</name></decl></param>)</parameter_list> <block pos:line="759" pos:column="85">{
	<expr_stmt><expr><name pos:line="760" pos:column="9">currentPos_</name> <op:operator pos:line="760" pos:column="21">=</op:operator> <call><name pos:line="760" pos:column="23">ClampPositionIntoDocument</name><argument_list pos:line="760" pos:column="48">(<argument><expr><name pos:line="760" pos:column="49">currentPos_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="761" pos:column="9">anchor_</name> <op:operator pos:line="761" pos:column="17">=</op:operator> <call><name pos:line="761" pos:column="19">ClampPositionIntoDocument</name><argument_list pos:line="761" pos:column="44">(<argument><expr><name pos:line="761" pos:column="45">anchor_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="762" pos:column="9">int</name></type> <name pos:line="762" pos:column="13">currentLine</name> <init pos:line="762" pos:column="25">= <expr><call><name><name pos:line="762" pos:column="27">pdoc</name><op:operator pos:line="762" pos:column="31">-&gt;</op:operator><name pos:line="762" pos:column="33">LineFromPosition</name></name><argument_list pos:line="762" pos:column="49">(<argument><expr><call><name><name pos:line="762" pos:column="50">currentPos_</name><op:operator pos:line="762" pos:column="61">.</op:operator><name pos:line="762" pos:column="62">Position</name></name><argument_list pos:line="762" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="block" pos:line="763" pos:column="9">/* For Line selection - ensure the anchor and caret are always
	   at the beginning and end of the region lines. */</comment>
	<if pos:line="765" pos:column="9">if <condition pos:line="765" pos:column="12">(<expr><name><name pos:line="765" pos:column="13">sel</name><op:operator pos:line="765" pos:column="16">.</op:operator><name pos:line="765" pos:column="17">selType</name></name> <op:operator pos:line="765" pos:column="25">==</op:operator> <name><name pos:line="765" pos:column="28">Selection</name><op:operator pos:line="765" pos:column="37">::</op:operator><name pos:line="765" pos:column="39">selLines</name></name></expr>)</condition><then pos:line="765" pos:column="48"> <block pos:line="765" pos:column="49">{
		<if pos:line="766" pos:column="17">if <condition pos:line="766" pos:column="20">(<expr><name pos:line="766" pos:column="21">currentPos_</name> <op:operator pos:line="766" pos:column="33">&gt;</op:operator> <name pos:line="766" pos:column="35">anchor_</name></expr>)</condition><then pos:line="766" pos:column="43"> <block pos:line="766" pos:column="44">{
			<expr_stmt><expr><name pos:line="767" pos:column="25">anchor_</name> <op:operator pos:line="767" pos:column="33">=</op:operator> <call><name pos:line="767" pos:column="35">SelectionPosition</name><argument_list pos:line="767" pos:column="52">(<argument><expr><call><name><name pos:line="767" pos:column="53">pdoc</name><op:operator pos:line="767" pos:column="57">-&gt;</op:operator><name pos:line="767" pos:column="59">LineStart</name></name><argument_list pos:line="767" pos:column="68">(<argument><expr><call><name><name pos:line="767" pos:column="69">pdoc</name><op:operator pos:line="767" pos:column="73">-&gt;</op:operator><name pos:line="767" pos:column="75">LineFromPosition</name></name><argument_list pos:line="767" pos:column="91">(<argument><expr><call><name><name pos:line="767" pos:column="92">anchor_</name><op:operator pos:line="767" pos:column="99">.</op:operator><name pos:line="767" pos:column="100">Position</name></name><argument_list pos:line="767" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="768" pos:column="25">currentPos_</name> <op:operator pos:line="768" pos:column="37">=</op:operator> <call><name pos:line="768" pos:column="39">SelectionPosition</name><argument_list pos:line="768" pos:column="56">(<argument><expr><call><name><name pos:line="768" pos:column="57">pdoc</name><op:operator pos:line="768" pos:column="61">-&gt;</op:operator><name pos:line="768" pos:column="63">LineEnd</name></name><argument_list pos:line="768" pos:column="70">(<argument><expr><call><name><name pos:line="768" pos:column="71">pdoc</name><op:operator pos:line="768" pos:column="75">-&gt;</op:operator><name pos:line="768" pos:column="77">LineFromPosition</name></name><argument_list pos:line="768" pos:column="93">(<argument><expr><call><name><name pos:line="768" pos:column="94">currentPos_</name><op:operator pos:line="768" pos:column="105">.</op:operator><name pos:line="768" pos:column="106">Position</name></name><argument_list pos:line="768" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="769" pos:column="19">else <block pos:line="769" pos:column="24">{
			<expr_stmt><expr><name pos:line="770" pos:column="25">currentPos_</name> <op:operator pos:line="770" pos:column="37">=</op:operator> <call><name pos:line="770" pos:column="39">SelectionPosition</name><argument_list pos:line="770" pos:column="56">(<argument><expr><call><name><name pos:line="770" pos:column="57">pdoc</name><op:operator pos:line="770" pos:column="61">-&gt;</op:operator><name pos:line="770" pos:column="63">LineStart</name></name><argument_list pos:line="770" pos:column="72">(<argument><expr><call><name><name pos:line="770" pos:column="73">pdoc</name><op:operator pos:line="770" pos:column="77">-&gt;</op:operator><name pos:line="770" pos:column="79">LineFromPosition</name></name><argument_list pos:line="770" pos:column="95">(<argument><expr><call><name><name pos:line="770" pos:column="96">currentPos_</name><op:operator pos:line="770" pos:column="107">.</op:operator><name pos:line="770" pos:column="108">Position</name></name><argument_list pos:line="770" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="771" pos:column="25">anchor_</name> <op:operator pos:line="771" pos:column="33">=</op:operator> <call><name pos:line="771" pos:column="35">SelectionPosition</name><argument_list pos:line="771" pos:column="52">(<argument><expr><call><name><name pos:line="771" pos:column="53">pdoc</name><op:operator pos:line="771" pos:column="57">-&gt;</op:operator><name pos:line="771" pos:column="59">LineEnd</name></name><argument_list pos:line="771" pos:column="66">(<argument><expr><call><name><name pos:line="771" pos:column="67">pdoc</name><op:operator pos:line="771" pos:column="71">-&gt;</op:operator><name pos:line="771" pos:column="73">LineFromPosition</name></name><argument_list pos:line="771" pos:column="89">(<argument><expr><call><name><name pos:line="771" pos:column="90">anchor_</name><op:operator pos:line="771" pos:column="97">.</op:operator><name pos:line="771" pos:column="98">Position</name></name><argument_list pos:line="771" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
	<function_decl><type><name pos:line="774" pos:column="9">SelectionRange</name></type> <name pos:line="774" pos:column="24">rangeNew</name><parameter_list pos:line="774" pos:column="32">(<param><decl><type><name pos:line="774" pos:column="33">currentPos_</name></type></decl></param>, <param><decl><type><name pos:line="774" pos:column="46">anchor_</name></type></decl></param>)</parameter_list>;</function_decl>
	<if pos:line="775" pos:column="9">if <condition pos:line="775" pos:column="12">(<expr><call><name><name pos:line="775" pos:column="13">sel</name><op:operator pos:line="775" pos:column="16">.</op:operator><name pos:line="775" pos:column="17">Count</name></name><argument_list pos:line="775" pos:column="22">()</argument_list></call> <op:operator pos:line="775" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="775" pos:column="27">1</lit:literal> <op:operator pos:line="775" pos:column="29">||</op:operator> <op:operator pos:line="775" pos:column="32">!</op:operator><op:operator pos:line="775" pos:column="33">(</op:operator><call><name><name pos:line="775" pos:column="34">sel</name><op:operator pos:line="775" pos:column="37">.</op:operator><name pos:line="775" pos:column="38">RangeMain</name></name><argument_list pos:line="775" pos:column="47">()</argument_list></call> <op:operator pos:line="775" pos:column="50">==</op:operator> <name pos:line="775" pos:column="53">rangeNew</name><op:operator pos:line="775" pos:column="61">)</op:operator></expr>)</condition><then pos:line="775" pos:column="63"> <block pos:line="775" pos:column="64">{
		<expr_stmt><expr><call><name pos:line="776" pos:column="17">InvalidateSelection</name><argument_list pos:line="776" pos:column="36">(<argument><expr><name pos:line="776" pos:column="37">rangeNew</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="778" pos:column="9">sel</name><op:operator pos:line="778" pos:column="12">.</op:operator><name pos:line="778" pos:column="13">RangeMain</name></name><argument_list pos:line="778" pos:column="22">()</argument_list></call> <op:operator pos:line="778" pos:column="25">=</op:operator> <name pos:line="778" pos:column="27">rangeNew</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="779" pos:column="9">SetRectangularRange</name><argument_list pos:line="779" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="780" pos:column="9">ClaimSelection</name><argument_list pos:line="780" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<if pos:line="782" pos:column="9">if <condition pos:line="782" pos:column="12">(<expr><call><name><name pos:line="782" pos:column="13">highlightDelimiter</name><op:operator pos:line="782" pos:column="31">.</op:operator><name pos:line="782" pos:column="32">NeedsDrawing</name></name><argument_list pos:line="782" pos:column="44">(<argument><expr><name pos:line="782" pos:column="45">currentLine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="782" pos:column="58"> <block pos:line="782" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="783" pos:column="17">RedrawSelMargin</name><argument_list pos:line="783" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="787" pos:column="1">void</name></type> <name><name pos:line="787" pos:column="6">Editor</name><op:operator pos:line="787" pos:column="12">::</op:operator><name pos:line="787" pos:column="14">SetSelection</name></name><parameter_list pos:line="787" pos:column="26">(<param><decl><type><name pos:line="787" pos:column="27">int</name></type> <name pos:line="787" pos:column="31">currentPos_</name></decl></param>, <param><decl><type><name pos:line="787" pos:column="44">int</name></type> <name pos:line="787" pos:column="48">anchor_</name></decl></param>)</parameter_list> <block pos:line="787" pos:column="57">{
	<expr_stmt><expr><call><name pos:line="788" pos:column="9">SetSelection</name><argument_list pos:line="788" pos:column="21">(<argument><expr><call><name pos:line="788" pos:column="22">SelectionPosition</name><argument_list pos:line="788" pos:column="39">(<argument><expr><name pos:line="788" pos:column="40">currentPos_</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="788" pos:column="54">SelectionPosition</name><argument_list pos:line="788" pos:column="71">(<argument><expr><name pos:line="788" pos:column="72">anchor_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" pos:line="791" pos:column="1">// Just move the caret on the main selection</comment>
<function><type><name pos:line="792" pos:column="1">void</name></type> <name><name pos:line="792" pos:column="6">Editor</name><op:operator pos:line="792" pos:column="12">::</op:operator><name pos:line="792" pos:column="14">SetSelection</name></name><parameter_list pos:line="792" pos:column="26">(<param><decl><type><name pos:line="792" pos:column="27">SelectionPosition</name></type> <name pos:line="792" pos:column="45">currentPos_</name></decl></param>)</parameter_list> <block pos:line="792" pos:column="58">{
	<expr_stmt><expr><name pos:line="793" pos:column="9">currentPos_</name> <op:operator pos:line="793" pos:column="21">=</op:operator> <call><name pos:line="793" pos:column="23">ClampPositionIntoDocument</name><argument_list pos:line="793" pos:column="48">(<argument><expr><name pos:line="793" pos:column="49">currentPos_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="794" pos:column="9">int</name></type> <name pos:line="794" pos:column="13">currentLine</name> <init pos:line="794" pos:column="25">= <expr><call><name><name pos:line="794" pos:column="27">pdoc</name><op:operator pos:line="794" pos:column="31">-&gt;</op:operator><name pos:line="794" pos:column="33">LineFromPosition</name></name><argument_list pos:line="794" pos:column="49">(<argument><expr><call><name><name pos:line="794" pos:column="50">currentPos_</name><op:operator pos:line="794" pos:column="61">.</op:operator><name pos:line="794" pos:column="62">Position</name></name><argument_list pos:line="794" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="795" pos:column="9">if <condition pos:line="795" pos:column="12">(<expr><call><name><name pos:line="795" pos:column="13">sel</name><op:operator pos:line="795" pos:column="16">.</op:operator><name pos:line="795" pos:column="17">Count</name></name><argument_list pos:line="795" pos:column="22">()</argument_list></call> <op:operator pos:line="795" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="795" pos:column="27">1</lit:literal> <op:operator pos:line="795" pos:column="29">||</op:operator> <op:operator pos:line="795" pos:column="32">!</op:operator><op:operator pos:line="795" pos:column="33">(</op:operator><call><name><name pos:line="795" pos:column="34">sel</name><op:operator pos:line="795" pos:column="37">.</op:operator><name pos:line="795" pos:column="38">RangeMain</name></name><argument_list pos:line="795" pos:column="47">()</argument_list></call><op:operator pos:line="795" pos:column="49">.</op:operator><name pos:line="795" pos:column="50">caret</name> <op:operator pos:line="795" pos:column="56">==</op:operator> <name pos:line="795" pos:column="59">currentPos_</name><op:operator pos:line="795" pos:column="70">)</op:operator></expr>)</condition><then pos:line="795" pos:column="72"> <block pos:line="795" pos:column="73">{
		<expr_stmt><expr><call><name pos:line="796" pos:column="17">InvalidateSelection</name><argument_list pos:line="796" pos:column="36">(<argument><expr><call><name pos:line="796" pos:column="37">SelectionRange</name><argument_list pos:line="796" pos:column="51">(<argument><expr><name pos:line="796" pos:column="52">currentPos_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="798" pos:column="9">if <condition pos:line="798" pos:column="12">(<expr><call><name><name pos:line="798" pos:column="13">sel</name><op:operator pos:line="798" pos:column="16">.</op:operator><name pos:line="798" pos:column="17">IsRectangular</name></name><argument_list pos:line="798" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="798" pos:column="33"> <block pos:line="798" pos:column="34">{
		<expr_stmt><expr><call><name><name pos:line="799" pos:column="17">sel</name><op:operator pos:line="799" pos:column="20">.</op:operator><name pos:line="799" pos:column="21">Rectangular</name></name><argument_list pos:line="799" pos:column="32">()</argument_list></call> <op:operator pos:line="799" pos:column="35">=</op:operator>
			<call><name pos:line="800" pos:column="25">SelectionRange</name><argument_list pos:line="800" pos:column="39">(<argument><expr><call><name pos:line="800" pos:column="40">SelectionPosition</name><argument_list pos:line="800" pos:column="57">(<argument><expr><name pos:line="800" pos:column="58">currentPos_</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="800" pos:column="72">sel</name><op:operator pos:line="800" pos:column="75">.</op:operator><name pos:line="800" pos:column="76">Rectangular</name></name><argument_list pos:line="800" pos:column="87">()</argument_list></call><op:operator pos:line="800" pos:column="89">.</op:operator><name pos:line="800" pos:column="90">anchor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="801" pos:column="17">SetRectangularRange</name><argument_list pos:line="801" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="802" pos:column="11">else <block pos:line="802" pos:column="16">{
		<expr_stmt><expr><call><name><name pos:line="803" pos:column="17">sel</name><op:operator pos:line="803" pos:column="20">.</op:operator><name pos:line="803" pos:column="21">RangeMain</name></name><argument_list pos:line="803" pos:column="30">()</argument_list></call> <op:operator pos:line="803" pos:column="33">=</op:operator>
			<call><name pos:line="804" pos:column="25">SelectionRange</name><argument_list pos:line="804" pos:column="39">(<argument><expr><call><name pos:line="804" pos:column="40">SelectionPosition</name><argument_list pos:line="804" pos:column="57">(<argument><expr><name pos:line="804" pos:column="58">currentPos_</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="804" pos:column="72">sel</name><op:operator pos:line="804" pos:column="75">.</op:operator><name pos:line="804" pos:column="76">RangeMain</name></name><argument_list pos:line="804" pos:column="85">()</argument_list></call><op:operator pos:line="804" pos:column="87">.</op:operator><name pos:line="804" pos:column="88">anchor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name pos:line="806" pos:column="9">ClaimSelection</name><argument_list pos:line="806" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<if pos:line="808" pos:column="9">if <condition pos:line="808" pos:column="12">(<expr><call><name><name pos:line="808" pos:column="13">highlightDelimiter</name><op:operator pos:line="808" pos:column="31">.</op:operator><name pos:line="808" pos:column="32">NeedsDrawing</name></name><argument_list pos:line="808" pos:column="44">(<argument><expr><name pos:line="808" pos:column="45">currentLine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="808" pos:column="58"> <block pos:line="808" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="809" pos:column="17">RedrawSelMargin</name><argument_list pos:line="809" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="813" pos:column="1">void</name></type> <name><name pos:line="813" pos:column="6">Editor</name><op:operator pos:line="813" pos:column="12">::</op:operator><name pos:line="813" pos:column="14">SetSelection</name></name><parameter_list pos:line="813" pos:column="26">(<param><decl><type><name pos:line="813" pos:column="27">int</name></type> <name pos:line="813" pos:column="31">currentPos_</name></decl></param>)</parameter_list> <block pos:line="813" pos:column="44">{
	<expr_stmt><expr><call><name pos:line="814" pos:column="9">SetSelection</name><argument_list pos:line="814" pos:column="21">(<argument><expr><call><name pos:line="814" pos:column="22">SelectionPosition</name><argument_list pos:line="814" pos:column="39">(<argument><expr><name pos:line="814" pos:column="40">currentPos_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="817" pos:column="1">void</name></type> <name><name pos:line="817" pos:column="6">Editor</name><op:operator pos:line="817" pos:column="12">::</op:operator><name pos:line="817" pos:column="14">SetEmptySelection</name></name><parameter_list pos:line="817" pos:column="31">(<param><decl><type><name pos:line="817" pos:column="32">SelectionPosition</name></type> <name pos:line="817" pos:column="50">currentPos_</name></decl></param>)</parameter_list> <block pos:line="817" pos:column="63">{
	<decl_stmt><decl><type><name pos:line="818" pos:column="9">int</name></type> <name pos:line="818" pos:column="13">currentLine</name> <init pos:line="818" pos:column="25">= <expr><call><name><name pos:line="818" pos:column="27">pdoc</name><op:operator pos:line="818" pos:column="31">-&gt;</op:operator><name pos:line="818" pos:column="33">LineFromPosition</name></name><argument_list pos:line="818" pos:column="49">(<argument><expr><call><name><name pos:line="818" pos:column="50">currentPos_</name><op:operator pos:line="818" pos:column="61">.</op:operator><name pos:line="818" pos:column="62">Position</name></name><argument_list pos:line="818" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="819" pos:column="9">SelectionRange</name></type> <name pos:line="819" pos:column="24">rangeNew</name><argument_list pos:line="819" pos:column="32">(<argument><expr><call><name pos:line="819" pos:column="33">ClampPositionIntoDocument</name><argument_list pos:line="819" pos:column="58">(<argument><expr><name pos:line="819" pos:column="59">currentPos_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<if pos:line="820" pos:column="9">if <condition pos:line="820" pos:column="12">(<expr><call><name><name pos:line="820" pos:column="13">sel</name><op:operator pos:line="820" pos:column="16">.</op:operator><name pos:line="820" pos:column="17">Count</name></name><argument_list pos:line="820" pos:column="22">()</argument_list></call> <op:operator pos:line="820" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="820" pos:column="27">1</lit:literal> <op:operator pos:line="820" pos:column="29">||</op:operator> <op:operator pos:line="820" pos:column="32">!</op:operator><op:operator pos:line="820" pos:column="33">(</op:operator><call><name><name pos:line="820" pos:column="34">sel</name><op:operator pos:line="820" pos:column="37">.</op:operator><name pos:line="820" pos:column="38">RangeMain</name></name><argument_list pos:line="820" pos:column="47">()</argument_list></call> <op:operator pos:line="820" pos:column="50">==</op:operator> <name pos:line="820" pos:column="53">rangeNew</name><op:operator pos:line="820" pos:column="61">)</op:operator></expr>)</condition><then pos:line="820" pos:column="63"> <block pos:line="820" pos:column="64">{
		<expr_stmt><expr><call><name pos:line="821" pos:column="17">InvalidateSelection</name><argument_list pos:line="821" pos:column="36">(<argument><expr><name pos:line="821" pos:column="37">rangeNew</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="823" pos:column="9">sel</name><op:operator pos:line="823" pos:column="12">.</op:operator><name pos:line="823" pos:column="13">Clear</name></name><argument_list pos:line="823" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="824" pos:column="9">sel</name><op:operator pos:line="824" pos:column="12">.</op:operator><name pos:line="824" pos:column="13">RangeMain</name></name><argument_list pos:line="824" pos:column="22">()</argument_list></call> <op:operator pos:line="824" pos:column="25">=</op:operator> <name pos:line="824" pos:column="27">rangeNew</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="825" pos:column="9">SetRectangularRange</name><argument_list pos:line="825" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="826" pos:column="9">ClaimSelection</name><argument_list pos:line="826" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<if pos:line="828" pos:column="9">if <condition pos:line="828" pos:column="12">(<expr><call><name><name pos:line="828" pos:column="13">highlightDelimiter</name><op:operator pos:line="828" pos:column="31">.</op:operator><name pos:line="828" pos:column="32">NeedsDrawing</name></name><argument_list pos:line="828" pos:column="44">(<argument><expr><name pos:line="828" pos:column="45">currentLine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="828" pos:column="58"> <block pos:line="828" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="829" pos:column="17">RedrawSelMargin</name><argument_list pos:line="829" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="833" pos:column="1">void</name></type> <name><name pos:line="833" pos:column="6">Editor</name><op:operator pos:line="833" pos:column="12">::</op:operator><name pos:line="833" pos:column="14">SetEmptySelection</name></name><parameter_list pos:line="833" pos:column="31">(<param><decl><type><name pos:line="833" pos:column="32">int</name></type> <name pos:line="833" pos:column="36">currentPos_</name></decl></param>)</parameter_list> <block pos:line="833" pos:column="49">{
	<expr_stmt><expr><call><name pos:line="834" pos:column="9">SetEmptySelection</name><argument_list pos:line="834" pos:column="26">(<argument><expr><call><name pos:line="834" pos:column="27">SelectionPosition</name><argument_list pos:line="834" pos:column="44">(<argument><expr><name pos:line="834" pos:column="45">currentPos_</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="837" pos:column="1">bool</name></type> <name><name pos:line="837" pos:column="6">Editor</name><op:operator pos:line="837" pos:column="12">::</op:operator><name pos:line="837" pos:column="14">RangeContainsProtected</name></name><parameter_list pos:line="837" pos:column="36">(<param><decl><type><name pos:line="837" pos:column="37">int</name></type> <name pos:line="837" pos:column="41">start</name></decl></param>, <param><decl><type><name pos:line="837" pos:column="48">int</name></type> <name pos:line="837" pos:column="52">end</name></decl></param>)</parameter_list> <specifier pos:line="837" pos:column="57">const</specifier> <block pos:line="837" pos:column="63">{
	<if pos:line="838" pos:column="9">if <condition pos:line="838" pos:column="12">(<expr><call><name><name pos:line="838" pos:column="13">vs</name><op:operator pos:line="838" pos:column="15">.</op:operator><name pos:line="838" pos:column="16">ProtectionActive</name></name><argument_list pos:line="838" pos:column="32">()</argument_list></call></expr>)</condition><then pos:line="838" pos:column="35"> <block pos:line="838" pos:column="36">{
		<if pos:line="839" pos:column="17">if <condition pos:line="839" pos:column="20">(<expr><name pos:line="839" pos:column="21">start</name> <op:operator pos:line="839" pos:column="27">&gt;</op:operator> <name pos:line="839" pos:column="29">end</name></expr>)</condition><then pos:line="839" pos:column="33"> <block pos:line="839" pos:column="34">{
			<decl_stmt><decl><type><name pos:line="840" pos:column="25">int</name></type> <name pos:line="840" pos:column="29">t</name> <init pos:line="840" pos:column="31">= <expr><name pos:line="840" pos:column="33">start</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="841" pos:column="25">start</name> <op:operator pos:line="841" pos:column="31">=</op:operator> <name pos:line="841" pos:column="33">end</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="842" pos:column="25">end</name> <op:operator pos:line="842" pos:column="29">=</op:operator> <name pos:line="842" pos:column="31">t</name></expr>;</expr_stmt>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="844" pos:column="17">int</name></type> <name pos:line="844" pos:column="21">mask</name> <init pos:line="844" pos:column="26">= <expr><name><name pos:line="844" pos:column="28">pdoc</name><op:operator pos:line="844" pos:column="32">-&gt;</op:operator><name pos:line="844" pos:column="34">stylingBitsMask</name></name></expr></init></decl>;</decl_stmt>
		<for pos:line="845" pos:column="17">for (<init><decl><type><name pos:line="845" pos:column="22">int</name></type> <name pos:line="845" pos:column="26">pos</name> <init pos:line="845" pos:column="30">= <expr><name pos:line="845" pos:column="32">start</name></expr></init></decl>;</init> <condition><expr><name pos:line="845" pos:column="39">pos</name> <op:operator pos:line="845" pos:column="43">&lt;</op:operator> <name pos:line="845" pos:column="45">end</name></expr>;</condition> <incr><expr><name pos:line="845" pos:column="50">pos</name><op:operator pos:line="845" pos:column="53">++</op:operator></expr></incr>) <block pos:line="845" pos:column="57">{
			<if pos:line="846" pos:column="25">if <condition pos:line="846" pos:column="28">(<expr><name><name pos:line="846" pos:column="29">vs</name><op:operator pos:line="846" pos:column="31">.</op:operator><name pos:line="846" pos:column="32">styles</name><index pos:line="846" pos:column="38">[<expr><call><name><name pos:line="846" pos:column="39">pdoc</name><op:operator pos:line="846" pos:column="43">-&gt;</op:operator><name pos:line="846" pos:column="45">StyleAt</name></name><argument_list pos:line="846" pos:column="52">(<argument><expr><name pos:line="846" pos:column="53">pos</name></expr></argument>)</argument_list></call> <op:operator pos:line="846" pos:column="58">&amp;</op:operator> <name pos:line="846" pos:column="60">mask</name></expr>]</index></name><op:operator pos:line="846" pos:column="65">.</op:operator><call><name pos:line="846" pos:column="66">IsProtected</name><argument_list pos:line="846" pos:column="77">()</argument_list></call></expr>)</condition><then pos:line="846" pos:column="80">
				<return pos:line="847" pos:column="33">return <expr><lit:literal type="boolean" pos:line="847" pos:column="40">true</lit:literal></expr>;</return></then></if>
		}</block></for>
	}</block></then></if>
	<return pos:line="850" pos:column="9">return <expr><lit:literal type="boolean" pos:line="850" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="853" pos:column="1">bool</name></type> <name><name pos:line="853" pos:column="6">Editor</name><op:operator pos:line="853" pos:column="12">::</op:operator><name pos:line="853" pos:column="14">SelectionContainsProtected</name></name><parameter_list pos:line="853" pos:column="40">()</parameter_list> <block pos:line="853" pos:column="43">{
	<for pos:line="854" pos:column="9">for (<init><decl><type><name pos:line="854" pos:column="14">size_t</name></type> <name pos:line="854" pos:column="21">r</name><init pos:line="854" pos:column="22">=<expr><lit:literal type="number" pos:line="854" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="854" pos:column="26">r</name><op:operator pos:line="854" pos:column="27">&lt;</op:operator><call><name><name pos:line="854" pos:column="28">sel</name><op:operator pos:line="854" pos:column="31">.</op:operator><name pos:line="854" pos:column="32">Count</name></name><argument_list pos:line="854" pos:column="37">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="854" pos:column="41">r</name><op:operator pos:line="854" pos:column="42">++</op:operator></expr></incr>) <block pos:line="854" pos:column="46">{
		<if pos:line="855" pos:column="17">if <condition pos:line="855" pos:column="20">(<expr><call><name pos:line="855" pos:column="21">RangeContainsProtected</name><argument_list pos:line="855" pos:column="43">(<argument><expr><call><name><name pos:line="855" pos:column="44">sel</name><op:operator pos:line="855" pos:column="47">.</op:operator><name pos:line="855" pos:column="48">Range</name></name><argument_list pos:line="855" pos:column="53">(<argument><expr><name pos:line="855" pos:column="54">r</name></expr></argument>)</argument_list></call><op:operator pos:line="855" pos:column="56">.</op:operator><call><name pos:line="855" pos:column="57">Start</name><argument_list pos:line="855" pos:column="62">()</argument_list></call><op:operator pos:line="855" pos:column="64">.</op:operator><call><name pos:line="855" pos:column="65">Position</name><argument_list pos:line="855" pos:column="73">()</argument_list></call></expr></argument>,
			<argument><expr><call><name><name pos:line="856" pos:column="25">sel</name><op:operator pos:line="856" pos:column="28">.</op:operator><name pos:line="856" pos:column="29">Range</name></name><argument_list pos:line="856" pos:column="34">(<argument><expr><name pos:line="856" pos:column="35">r</name></expr></argument>)</argument_list></call><op:operator pos:line="856" pos:column="37">.</op:operator><call><name pos:line="856" pos:column="38">End</name><argument_list pos:line="856" pos:column="41">()</argument_list></call><op:operator pos:line="856" pos:column="43">.</op:operator><call><name pos:line="856" pos:column="44">Position</name><argument_list pos:line="856" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="856" pos:column="56"> <block pos:line="856" pos:column="57">{
			<return pos:line="857" pos:column="25">return <expr><lit:literal type="boolean" pos:line="857" pos:column="32">true</lit:literal></expr>;</return>
		}</block></then></if>
	}</block></for>
	<return pos:line="860" pos:column="9">return <expr><lit:literal type="boolean" pos:line="860" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="863" pos:column="1">/**
 * Asks document to find a good position and then moves out of any invisible positions.
 */</comment>
<function><type><name pos:line="866" pos:column="1">int</name></type> <name><name pos:line="866" pos:column="5">Editor</name><op:operator pos:line="866" pos:column="11">::</op:operator><name pos:line="866" pos:column="13">MovePositionOutsideChar</name></name><parameter_list pos:line="866" pos:column="36">(<param><decl><type><name pos:line="866" pos:column="37">int</name></type> <name pos:line="866" pos:column="41">pos</name></decl></param>, <param><decl><type><name pos:line="866" pos:column="46">int</name></type> <name pos:line="866" pos:column="50">moveDir</name></decl></param>, <param><decl><type><name pos:line="866" pos:column="59">bool</name></type> <name pos:line="866" pos:column="64">checkLineEnd</name></decl></param>)</parameter_list> <specifier pos:line="866" pos:column="78">const</specifier> <block pos:line="866" pos:column="84">{
	<return pos:line="867" pos:column="9">return <expr><call><name pos:line="867" pos:column="16">MovePositionOutsideChar</name><argument_list pos:line="867" pos:column="39">(<argument><expr><call><name pos:line="867" pos:column="40">SelectionPosition</name><argument_list pos:line="867" pos:column="57">(<argument><expr><name pos:line="867" pos:column="58">pos</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="867" pos:column="64">moveDir</name></expr></argument>, <argument><expr><name pos:line="867" pos:column="73">checkLineEnd</name></expr></argument>)</argument_list></call><op:operator pos:line="867" pos:column="86">.</op:operator><call><name pos:line="867" pos:column="87">Position</name><argument_list pos:line="867" pos:column="95">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="870" pos:column="1">SelectionPosition</name></type> <name><name pos:line="870" pos:column="19">Editor</name><op:operator pos:line="870" pos:column="25">::</op:operator><name pos:line="870" pos:column="27">MovePositionOutsideChar</name></name><parameter_list pos:line="870" pos:column="50">(<param><decl><type><name pos:line="870" pos:column="51">SelectionPosition</name></type> <name pos:line="870" pos:column="69">pos</name></decl></param>, <param><decl><type><name pos:line="870" pos:column="74">int</name></type> <name pos:line="870" pos:column="78">moveDir</name></decl></param>, <param><decl><type><name pos:line="870" pos:column="87">bool</name></type> <name pos:line="870" pos:column="92">checkLineEnd</name></decl></param>)</parameter_list> <specifier pos:line="870" pos:column="106">const</specifier> <block pos:line="870" pos:column="112">{
	<decl_stmt><decl><type><name pos:line="871" pos:column="9">int</name></type> <name pos:line="871" pos:column="13">posMoved</name> <init pos:line="871" pos:column="22">= <expr><call><name><name pos:line="871" pos:column="24">pdoc</name><op:operator pos:line="871" pos:column="28">-&gt;</op:operator><name pos:line="871" pos:column="30">MovePositionOutsideChar</name></name><argument_list pos:line="871" pos:column="53">(<argument><expr><call><name><name pos:line="871" pos:column="54">pos</name><op:operator pos:line="871" pos:column="57">.</op:operator><name pos:line="871" pos:column="58">Position</name></name><argument_list pos:line="871" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="871" pos:column="70">moveDir</name></expr></argument>, <argument><expr><name pos:line="871" pos:column="79">checkLineEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="872" pos:column="9">if <condition pos:line="872" pos:column="12">(<expr><name pos:line="872" pos:column="13">posMoved</name> <op:operator pos:line="872" pos:column="22">!=</op:operator> <call><name><name pos:line="872" pos:column="25">pos</name><op:operator pos:line="872" pos:column="28">.</op:operator><name pos:line="872" pos:column="29">Position</name></name><argument_list pos:line="872" pos:column="37">()</argument_list></call></expr>)</condition><then pos:line="872" pos:column="40">
		<expr_stmt><expr><call><name><name pos:line="873" pos:column="17">pos</name><op:operator pos:line="873" pos:column="20">.</op:operator><name pos:line="873" pos:column="21">SetPosition</name></name><argument_list pos:line="873" pos:column="32">(<argument><expr><name pos:line="873" pos:column="33">posMoved</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="874" pos:column="9">if <condition pos:line="874" pos:column="12">(<expr><call><name><name pos:line="874" pos:column="13">vs</name><op:operator pos:line="874" pos:column="15">.</op:operator><name pos:line="874" pos:column="16">ProtectionActive</name></name><argument_list pos:line="874" pos:column="32">()</argument_list></call></expr>)</condition><then pos:line="874" pos:column="35"> <block pos:line="874" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="875" pos:column="17">int</name></type> <name pos:line="875" pos:column="21">mask</name> <init pos:line="875" pos:column="26">= <expr><name><name pos:line="875" pos:column="28">pdoc</name><op:operator pos:line="875" pos:column="32">-&gt;</op:operator><name pos:line="875" pos:column="34">stylingBitsMask</name></name></expr></init></decl>;</decl_stmt>
		<if pos:line="876" pos:column="17">if <condition pos:line="876" pos:column="20">(<expr><name pos:line="876" pos:column="21">moveDir</name> <op:operator pos:line="876" pos:column="29">&gt;</op:operator> <lit:literal type="number" pos:line="876" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="876" pos:column="33"> <block pos:line="876" pos:column="34">{
			<if pos:line="877" pos:column="25">if <condition pos:line="877" pos:column="28">(<expr><op:operator pos:line="877" pos:column="29">(</op:operator><call><name><name pos:line="877" pos:column="30">pos</name><op:operator pos:line="877" pos:column="33">.</op:operator><name pos:line="877" pos:column="34">Position</name></name><argument_list pos:line="877" pos:column="42">()</argument_list></call> <op:operator pos:line="877" pos:column="45">&gt;</op:operator> <lit:literal type="number" pos:line="877" pos:column="47">0</lit:literal><op:operator pos:line="877" pos:column="48">)</op:operator> <op:operator pos:line="877" pos:column="50">&amp;&amp;</op:operator> <name><name pos:line="877" pos:column="53">vs</name><op:operator pos:line="877" pos:column="55">.</op:operator><name pos:line="877" pos:column="56">styles</name><index pos:line="877" pos:column="62">[<expr><call><name><name pos:line="877" pos:column="63">pdoc</name><op:operator pos:line="877" pos:column="67">-&gt;</op:operator><name pos:line="877" pos:column="69">StyleAt</name></name><argument_list pos:line="877" pos:column="76">(<argument><expr><call><name><name pos:line="877" pos:column="77">pos</name><op:operator pos:line="877" pos:column="80">.</op:operator><name pos:line="877" pos:column="81">Position</name></name><argument_list pos:line="877" pos:column="89">()</argument_list></call> <op:operator pos:line="877" pos:column="92">-</op:operator> <lit:literal type="number" pos:line="877" pos:column="94">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="877" pos:column="97">&amp;</op:operator> <name pos:line="877" pos:column="99">mask</name></expr>]</index></name><op:operator pos:line="877" pos:column="104">.</op:operator><call><name pos:line="877" pos:column="105">IsProtected</name><argument_list pos:line="877" pos:column="116">()</argument_list></call></expr>)</condition><then pos:line="877" pos:column="119"> <block pos:line="877" pos:column="120">{
				<while pos:line="878" pos:column="33">while <condition pos:line="878" pos:column="39">(<expr><op:operator pos:line="878" pos:column="40">(</op:operator><call><name><name pos:line="878" pos:column="41">pos</name><op:operator pos:line="878" pos:column="44">.</op:operator><name pos:line="878" pos:column="45">Position</name></name><argument_list pos:line="878" pos:column="53">()</argument_list></call> <op:operator pos:line="878" pos:column="56">&lt;</op:operator> <call><name><name pos:line="878" pos:column="58">pdoc</name><op:operator pos:line="878" pos:column="62">-&gt;</op:operator><name pos:line="878" pos:column="64">Length</name></name><argument_list pos:line="878" pos:column="70">()</argument_list></call><op:operator pos:line="878" pos:column="72">)</op:operator> <op:operator pos:line="878" pos:column="74">&amp;&amp;</op:operator>
				        <op:operator pos:line="879" pos:column="41">(</op:operator><name><name pos:line="879" pos:column="42">vs</name><op:operator pos:line="879" pos:column="44">.</op:operator><name pos:line="879" pos:column="45">styles</name><index pos:line="879" pos:column="51">[<expr><call><name><name pos:line="879" pos:column="52">pdoc</name><op:operator pos:line="879" pos:column="56">-&gt;</op:operator><name pos:line="879" pos:column="58">StyleAt</name></name><argument_list pos:line="879" pos:column="65">(<argument><expr><call><name><name pos:line="879" pos:column="66">pos</name><op:operator pos:line="879" pos:column="69">.</op:operator><name pos:line="879" pos:column="70">Position</name></name><argument_list pos:line="879" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="879" pos:column="82">&amp;</op:operator> <name pos:line="879" pos:column="84">mask</name></expr>]</index></name><op:operator pos:line="879" pos:column="89">.</op:operator><call><name pos:line="879" pos:column="90">IsProtected</name><argument_list pos:line="879" pos:column="101">()</argument_list></call><op:operator pos:line="879" pos:column="103">)</op:operator></expr>)</condition>
					<expr_stmt><expr><call><name><name pos:line="880" pos:column="41">pos</name><op:operator pos:line="880" pos:column="44">.</op:operator><name pos:line="880" pos:column="45">Add</name></name><argument_list pos:line="880" pos:column="48">(<argument><expr><lit:literal type="number" pos:line="880" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></while>
			}</block></then></if>
		}</block></then> <else pos:line="882" pos:column="19">else <if pos:line="882" pos:column="24">if <condition pos:line="882" pos:column="27">(<expr><name pos:line="882" pos:column="28">moveDir</name> <op:operator pos:line="882" pos:column="36">&lt;</op:operator> <lit:literal type="number" pos:line="882" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="882" pos:column="40"> <block pos:line="882" pos:column="41">{
			<if pos:line="883" pos:column="25">if <condition pos:line="883" pos:column="28">(<expr><name><name pos:line="883" pos:column="29">vs</name><op:operator pos:line="883" pos:column="31">.</op:operator><name pos:line="883" pos:column="32">styles</name><index pos:line="883" pos:column="38">[<expr><call><name><name pos:line="883" pos:column="39">pdoc</name><op:operator pos:line="883" pos:column="43">-&gt;</op:operator><name pos:line="883" pos:column="45">StyleAt</name></name><argument_list pos:line="883" pos:column="52">(<argument><expr><call><name><name pos:line="883" pos:column="53">pos</name><op:operator pos:line="883" pos:column="56">.</op:operator><name pos:line="883" pos:column="57">Position</name></name><argument_list pos:line="883" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="883" pos:column="69">&amp;</op:operator> <name pos:line="883" pos:column="71">mask</name></expr>]</index></name><op:operator pos:line="883" pos:column="76">.</op:operator><call><name pos:line="883" pos:column="77">IsProtected</name><argument_list pos:line="883" pos:column="88">()</argument_list></call></expr>)</condition><then pos:line="883" pos:column="91"> <block pos:line="883" pos:column="92">{
				<while pos:line="884" pos:column="33">while <condition pos:line="884" pos:column="39">(<expr><op:operator pos:line="884" pos:column="40">(</op:operator><call><name><name pos:line="884" pos:column="41">pos</name><op:operator pos:line="884" pos:column="44">.</op:operator><name pos:line="884" pos:column="45">Position</name></name><argument_list pos:line="884" pos:column="53">()</argument_list></call> <op:operator pos:line="884" pos:column="56">&gt;</op:operator> <lit:literal type="number" pos:line="884" pos:column="58">0</lit:literal><op:operator pos:line="884" pos:column="59">)</op:operator> <op:operator pos:line="884" pos:column="61">&amp;&amp;</op:operator>
				        <op:operator pos:line="885" pos:column="41">(</op:operator><name><name pos:line="885" pos:column="42">vs</name><op:operator pos:line="885" pos:column="44">.</op:operator><name pos:line="885" pos:column="45">styles</name><index pos:line="885" pos:column="51">[<expr><call><name><name pos:line="885" pos:column="52">pdoc</name><op:operator pos:line="885" pos:column="56">-&gt;</op:operator><name pos:line="885" pos:column="58">StyleAt</name></name><argument_list pos:line="885" pos:column="65">(<argument><expr><call><name><name pos:line="885" pos:column="66">pos</name><op:operator pos:line="885" pos:column="69">.</op:operator><name pos:line="885" pos:column="70">Position</name></name><argument_list pos:line="885" pos:column="78">()</argument_list></call> <op:operator pos:line="885" pos:column="81">-</op:operator> <lit:literal type="number" pos:line="885" pos:column="83">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="885" pos:column="86">&amp;</op:operator> <name pos:line="885" pos:column="88">mask</name></expr>]</index></name><op:operator pos:line="885" pos:column="93">.</op:operator><call><name pos:line="885" pos:column="94">IsProtected</name><argument_list pos:line="885" pos:column="105">()</argument_list></call><op:operator pos:line="885" pos:column="107">)</op:operator></expr>)</condition>
					<expr_stmt><expr><call><name><name pos:line="886" pos:column="41">pos</name><op:operator pos:line="886" pos:column="44">.</op:operator><name pos:line="886" pos:column="45">Add</name></name><argument_list pos:line="886" pos:column="48">(<argument><expr><op:operator pos:line="886" pos:column="49">-</op:operator><lit:literal type="number" pos:line="886" pos:column="50">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></while>
			}</block></then></if>
		}</block></then></if></else></if>
	}</block></then></if>
	<return pos:line="890" pos:column="9">return <expr><name pos:line="890" pos:column="16">pos</name></expr>;</return>
}</block></function>

<function><type><name pos:line="893" pos:column="1">int</name></type> <name><name pos:line="893" pos:column="5">Editor</name><op:operator pos:line="893" pos:column="11">::</op:operator><name pos:line="893" pos:column="13">MovePositionTo</name></name><parameter_list pos:line="893" pos:column="27">(<param><decl><type><name pos:line="893" pos:column="28">SelectionPosition</name></type> <name pos:line="893" pos:column="46">newPos</name></decl></param>, <param><decl><type><name><name pos:line="893" pos:column="54">Selection</name><op:operator pos:line="893" pos:column="63">::</op:operator><name pos:line="893" pos:column="65">selTypes</name></name></type> <name pos:line="893" pos:column="74">selt</name></decl></param>, <param><decl><type><name pos:line="893" pos:column="80">bool</name></type> <name pos:line="893" pos:column="85">ensureVisible</name></decl></param>)</parameter_list> <block pos:line="893" pos:column="100">{
	<decl_stmt><decl><type><name pos:line="894" pos:column="9">bool</name></type> <name pos:line="894" pos:column="14">simpleCaret</name> <init pos:line="894" pos:column="26">= <expr><op:operator pos:line="894" pos:column="28">(</op:operator><call><name><name pos:line="894" pos:column="29">sel</name><op:operator pos:line="894" pos:column="32">.</op:operator><name pos:line="894" pos:column="33">Count</name></name><argument_list pos:line="894" pos:column="38">()</argument_list></call> <op:operator pos:line="894" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="894" pos:column="44">1</lit:literal><op:operator pos:line="894" pos:column="45">)</op:operator> <op:operator pos:line="894" pos:column="47">&amp;&amp;</op:operator> <call><name><name pos:line="894" pos:column="50">sel</name><op:operator pos:line="894" pos:column="53">.</op:operator><name pos:line="894" pos:column="54">Empty</name></name><argument_list pos:line="894" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="895" pos:column="9">SelectionPosition</name></type> <name pos:line="895" pos:column="27">spCaret</name> <init pos:line="895" pos:column="35">= <expr><call><name><name pos:line="895" pos:column="37">sel</name><op:operator pos:line="895" pos:column="40">.</op:operator><name pos:line="895" pos:column="41">Last</name></name><argument_list pos:line="895" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="897" pos:column="9">int</name></type> <name pos:line="897" pos:column="13">delta</name> <init pos:line="897" pos:column="19">= <expr><call><name><name pos:line="897" pos:column="21">newPos</name><op:operator pos:line="897" pos:column="27">.</op:operator><name pos:line="897" pos:column="28">Position</name></name><argument_list pos:line="897" pos:column="36">()</argument_list></call> <op:operator pos:line="897" pos:column="39">-</op:operator> <call><name><name pos:line="897" pos:column="41">sel</name><op:operator pos:line="897" pos:column="44">.</op:operator><name pos:line="897" pos:column="45">MainCaret</name></name><argument_list pos:line="897" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="898" pos:column="9">newPos</name> <op:operator pos:line="898" pos:column="16">=</op:operator> <call><name pos:line="898" pos:column="18">ClampPositionIntoDocument</name><argument_list pos:line="898" pos:column="43">(<argument><expr><name pos:line="898" pos:column="44">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="899" pos:column="9">newPos</name> <op:operator pos:line="899" pos:column="16">=</op:operator> <call><name pos:line="899" pos:column="18">MovePositionOutsideChar</name><argument_list pos:line="899" pos:column="41">(<argument><expr><name pos:line="899" pos:column="42">newPos</name></expr></argument>, <argument><expr><name pos:line="899" pos:column="50">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="900" pos:column="9">if <condition pos:line="900" pos:column="12">(<expr><op:operator pos:line="900" pos:column="13">!</op:operator><name pos:line="900" pos:column="14">multipleSelection</name> <op:operator pos:line="900" pos:column="32">&amp;&amp;</op:operator> <call><name><name pos:line="900" pos:column="35">sel</name><op:operator pos:line="900" pos:column="38">.</op:operator><name pos:line="900" pos:column="39">IsRectangular</name></name><argument_list pos:line="900" pos:column="52">()</argument_list></call> <op:operator pos:line="900" pos:column="55">&amp;&amp;</op:operator> <op:operator pos:line="900" pos:column="58">(</op:operator><name pos:line="900" pos:column="59">selt</name> <op:operator pos:line="900" pos:column="64">==</op:operator> <name><name pos:line="900" pos:column="67">Selection</name><op:operator pos:line="900" pos:column="76">::</op:operator><name pos:line="900" pos:column="78">selStream</name></name><op:operator pos:line="900" pos:column="87">)</op:operator></expr>)</condition><then pos:line="900" pos:column="89"> <block pos:line="900" pos:column="90">{
		<comment type="line" pos:line="901" pos:column="17">// Can't turn into multiple selection so clear additional selections</comment>
		<expr_stmt><expr><call><name pos:line="902" pos:column="17">InvalidateSelection</name><argument_list pos:line="902" pos:column="36">(<argument><expr><call><name pos:line="902" pos:column="37">SelectionRange</name><argument_list pos:line="902" pos:column="51">(<argument><expr><name pos:line="902" pos:column="52">newPos</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="902" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="903" pos:column="17">SelectionRange</name></type> <name pos:line="903" pos:column="32">rangeMain</name> <init pos:line="903" pos:column="42">= <expr><call><name><name pos:line="903" pos:column="44">sel</name><op:operator pos:line="903" pos:column="47">.</op:operator><name pos:line="903" pos:column="48">RangeMain</name></name><argument_list pos:line="903" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="904" pos:column="17">sel</name><op:operator pos:line="904" pos:column="20">.</op:operator><name pos:line="904" pos:column="21">SetSelection</name></name><argument_list pos:line="904" pos:column="33">(<argument><expr><name pos:line="904" pos:column="34">rangeMain</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="906" pos:column="9">if <condition pos:line="906" pos:column="12">(<expr><op:operator pos:line="906" pos:column="13">!</op:operator><call><name><name pos:line="906" pos:column="14">sel</name><op:operator pos:line="906" pos:column="17">.</op:operator><name pos:line="906" pos:column="18">IsRectangular</name></name><argument_list pos:line="906" pos:column="31">()</argument_list></call> <op:operator pos:line="906" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="906" pos:column="37">(</op:operator><name pos:line="906" pos:column="38">selt</name> <op:operator pos:line="906" pos:column="43">==</op:operator> <name><name pos:line="906" pos:column="46">Selection</name><op:operator pos:line="906" pos:column="55">::</op:operator><name pos:line="906" pos:column="57">selRectangle</name></name><op:operator pos:line="906" pos:column="69">)</op:operator></expr>)</condition><then pos:line="906" pos:column="71"> <block pos:line="906" pos:column="72">{
		<comment type="line" pos:line="907" pos:column="17">// Switching to rectangular</comment>
		<decl_stmt><decl><type><name pos:line="908" pos:column="17">SelectionRange</name></type> <name pos:line="908" pos:column="32">rangeMain</name> <init pos:line="908" pos:column="42">= <expr><call><name><name pos:line="908" pos:column="44">sel</name><op:operator pos:line="908" pos:column="47">.</op:operator><name pos:line="908" pos:column="48">RangeMain</name></name><argument_list pos:line="908" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="909" pos:column="17">sel</name><op:operator pos:line="909" pos:column="20">.</op:operator><name pos:line="909" pos:column="21">Clear</name></name><argument_list pos:line="909" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="910" pos:column="17">sel</name><op:operator pos:line="910" pos:column="20">.</op:operator><name pos:line="910" pos:column="21">Rectangular</name></name><argument_list pos:line="910" pos:column="32">()</argument_list></call> <op:operator pos:line="910" pos:column="35">=</op:operator> <name pos:line="910" pos:column="37">rangeMain</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="912" pos:column="9">if <condition pos:line="912" pos:column="12">(<expr><name pos:line="912" pos:column="13">selt</name> <op:operator pos:line="912" pos:column="18">!=</op:operator> <name><name pos:line="912" pos:column="21">Selection</name><op:operator pos:line="912" pos:column="30">::</op:operator><name pos:line="912" pos:column="32">noSel</name></name></expr>)</condition><then pos:line="912" pos:column="38"> <block pos:line="912" pos:column="39">{
		<expr_stmt><expr><name><name pos:line="913" pos:column="17">sel</name><op:operator pos:line="913" pos:column="20">.</op:operator><name pos:line="913" pos:column="21">selType</name></name> <op:operator pos:line="913" pos:column="29">=</op:operator> <name pos:line="913" pos:column="31">selt</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="915" pos:column="9">if <condition pos:line="915" pos:column="12">(<expr><name pos:line="915" pos:column="13">selt</name> <op:operator pos:line="915" pos:column="18">!=</op:operator> <name><name pos:line="915" pos:column="21">Selection</name><op:operator pos:line="915" pos:column="30">::</op:operator><name pos:line="915" pos:column="32">noSel</name></name> <op:operator pos:line="915" pos:column="38">||</op:operator> <call><name><name pos:line="915" pos:column="41">sel</name><op:operator pos:line="915" pos:column="44">.</op:operator><name pos:line="915" pos:column="45">MoveExtends</name></name><argument_list pos:line="915" pos:column="56">()</argument_list></call></expr>)</condition><then pos:line="915" pos:column="59"> <block pos:line="915" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="916" pos:column="17">SetSelection</name><argument_list pos:line="916" pos:column="29">(<argument><expr><name pos:line="916" pos:column="30">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="917" pos:column="11">else <block pos:line="917" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="918" pos:column="17">SetEmptySelection</name><argument_list pos:line="918" pos:column="34">(<argument><expr><name pos:line="918" pos:column="35">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name pos:line="920" pos:column="9">ShowCaretAtCurrentPosition</name><argument_list pos:line="920" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="921" pos:column="9">if <condition pos:line="921" pos:column="12">(<expr><name pos:line="921" pos:column="13">ensureVisible</name></expr>)</condition><then pos:line="921" pos:column="27"> <block pos:line="921" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="922" pos:column="17">XYScrollPosition</name></type> <name pos:line="922" pos:column="34">newXY</name> <init pos:line="922" pos:column="40">= <expr><call><name pos:line="922" pos:column="42">XYScrollToMakeVisible</name><argument_list pos:line="922" pos:column="63">(<argument><expr><lit:literal type="boolean" pos:line="922" pos:column="64">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="922" pos:column="70">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="922" pos:column="76">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="923" pos:column="17">if <condition pos:line="923" pos:column="20">(<expr><name pos:line="923" pos:column="21">simpleCaret</name> <op:operator pos:line="923" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="923" pos:column="36">(</op:operator><name><name pos:line="923" pos:column="37">newXY</name><op:operator pos:line="923" pos:column="42">.</op:operator><name pos:line="923" pos:column="43">xOffset</name></name> <op:operator pos:line="923" pos:column="51">==</op:operator> <name pos:line="923" pos:column="54">xOffset</name><op:operator pos:line="923" pos:column="61">)</op:operator></expr>)</condition><then pos:line="923" pos:column="63"> <block pos:line="923" pos:column="64">{
			<comment type="line" pos:line="924" pos:column="25">// simple vertical scroll then invalidate</comment>
			<expr_stmt><expr><call><name pos:line="925" pos:column="25">ScrollTo</name><argument_list pos:line="925" pos:column="33">(<argument><expr><name><name pos:line="925" pos:column="34">newXY</name><op:operator pos:line="925" pos:column="39">.</op:operator><name pos:line="925" pos:column="40">topLine</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="926" pos:column="25">InvalidateSelection</name><argument_list pos:line="926" pos:column="44">(<argument><expr><call><name pos:line="926" pos:column="45">SelectionRange</name><argument_list pos:line="926" pos:column="59">(<argument><expr><name pos:line="926" pos:column="60">spCaret</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="926" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="927" pos:column="19">else <block pos:line="927" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="928" pos:column="25">SetXYScroll</name><argument_list pos:line="928" pos:column="36">(<argument><expr><name pos:line="928" pos:column="37">newXY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="932" pos:column="9">int</name></type> <name pos:line="932" pos:column="13">currentLine</name> <init pos:line="932" pos:column="25">= <expr><call><name><name pos:line="932" pos:column="27">pdoc</name><op:operator pos:line="932" pos:column="31">-&gt;</op:operator><name pos:line="932" pos:column="33">LineFromPosition</name></name><argument_list pos:line="932" pos:column="49">(<argument><expr><call><name><name pos:line="932" pos:column="50">newPos</name><op:operator pos:line="932" pos:column="56">.</op:operator><name pos:line="932" pos:column="57">Position</name></name><argument_list pos:line="932" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="934" pos:column="9">if <condition pos:line="934" pos:column="12">(<expr><call><name><name pos:line="934" pos:column="13">highlightDelimiter</name><op:operator pos:line="934" pos:column="31">.</op:operator><name pos:line="934" pos:column="32">NeedsDrawing</name></name><argument_list pos:line="934" pos:column="44">(<argument><expr><name pos:line="934" pos:column="45">currentLine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="934" pos:column="58"> <block pos:line="934" pos:column="59">{
		<expr_stmt><expr><call><name pos:line="935" pos:column="17">RedrawSelMargin</name><argument_list pos:line="935" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="937" pos:column="9">return <expr><lit:literal type="number" pos:line="937" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="940" pos:column="1">int</name></type> <name><name pos:line="940" pos:column="5">Editor</name><op:operator pos:line="940" pos:column="11">::</op:operator><name pos:line="940" pos:column="13">MovePositionTo</name></name><parameter_list pos:line="940" pos:column="27">(<param><decl><type><name pos:line="940" pos:column="28">int</name></type> <name pos:line="940" pos:column="32">newPos</name></decl></param>, <param><decl><type><name><name pos:line="940" pos:column="40">Selection</name><op:operator pos:line="940" pos:column="49">::</op:operator><name pos:line="940" pos:column="51">selTypes</name></name></type> <name pos:line="940" pos:column="60">selt</name></decl></param>, <param><decl><type><name pos:line="940" pos:column="66">bool</name></type> <name pos:line="940" pos:column="71">ensureVisible</name></decl></param>)</parameter_list> <block pos:line="940" pos:column="86">{
	<return pos:line="941" pos:column="9">return <expr><call><name pos:line="941" pos:column="16">MovePositionTo</name><argument_list pos:line="941" pos:column="30">(<argument><expr><call><name pos:line="941" pos:column="31">SelectionPosition</name><argument_list pos:line="941" pos:column="48">(<argument><expr><name pos:line="941" pos:column="49">newPos</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="941" pos:column="58">selt</name></expr></argument>, <argument><expr><name pos:line="941" pos:column="64">ensureVisible</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="944" pos:column="1">SelectionPosition</name></type> <name><name pos:line="944" pos:column="19">Editor</name><op:operator pos:line="944" pos:column="25">::</op:operator><name pos:line="944" pos:column="27">MovePositionSoVisible</name></name><parameter_list pos:line="944" pos:column="48">(<param><decl><type><name pos:line="944" pos:column="49">SelectionPosition</name></type> <name pos:line="944" pos:column="67">pos</name></decl></param>, <param><decl><type><name pos:line="944" pos:column="72">int</name></type> <name pos:line="944" pos:column="76">moveDir</name></decl></param>)</parameter_list> <block pos:line="944" pos:column="85">{
	<expr_stmt><expr><name pos:line="945" pos:column="9">pos</name> <op:operator pos:line="945" pos:column="13">=</op:operator> <call><name pos:line="945" pos:column="15">ClampPositionIntoDocument</name><argument_list pos:line="945" pos:column="40">(<argument><expr><name pos:line="945" pos:column="41">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="946" pos:column="9">pos</name> <op:operator pos:line="946" pos:column="13">=</op:operator> <call><name pos:line="946" pos:column="15">MovePositionOutsideChar</name><argument_list pos:line="946" pos:column="38">(<argument><expr><name pos:line="946" pos:column="39">pos</name></expr></argument>, <argument><expr><name pos:line="946" pos:column="44">moveDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="947" pos:column="9">int</name></type> <name pos:line="947" pos:column="13">lineDoc</name> <init pos:line="947" pos:column="21">= <expr><call><name><name pos:line="947" pos:column="23">pdoc</name><op:operator pos:line="947" pos:column="27">-&gt;</op:operator><name pos:line="947" pos:column="29">LineFromPosition</name></name><argument_list pos:line="947" pos:column="45">(<argument><expr><call><name><name pos:line="947" pos:column="46">pos</name><op:operator pos:line="947" pos:column="49">.</op:operator><name pos:line="947" pos:column="50">Position</name></name><argument_list pos:line="947" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="948" pos:column="9">if <condition pos:line="948" pos:column="12">(<expr><call><name><name pos:line="948" pos:column="13">cs</name><op:operator pos:line="948" pos:column="15">.</op:operator><name pos:line="948" pos:column="16">GetVisible</name></name><argument_list pos:line="948" pos:column="26">(<argument><expr><name pos:line="948" pos:column="27">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="948" pos:column="36"> <block pos:line="948" pos:column="37">{
		<return pos:line="949" pos:column="17">return <expr><name pos:line="949" pos:column="24">pos</name></expr>;</return>
	}</block></then> <else pos:line="950" pos:column="11">else <block pos:line="950" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="951" pos:column="17">int</name></type> <name pos:line="951" pos:column="21">lineDisplay</name> <init pos:line="951" pos:column="33">= <expr><call><name><name pos:line="951" pos:column="35">cs</name><op:operator pos:line="951" pos:column="37">.</op:operator><name pos:line="951" pos:column="38">DisplayFromDoc</name></name><argument_list pos:line="951" pos:column="52">(<argument><expr><name pos:line="951" pos:column="53">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="952" pos:column="17">if <condition pos:line="952" pos:column="20">(<expr><name pos:line="952" pos:column="21">moveDir</name> <op:operator pos:line="952" pos:column="29">&gt;</op:operator> <lit:literal type="number" pos:line="952" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="952" pos:column="33"> <block pos:line="952" pos:column="34">{
			<comment type="line" pos:line="953" pos:column="25">// lineDisplay is already line before fold as lines in fold use display line of line after fold</comment>
			<expr_stmt><expr><name pos:line="954" pos:column="25">lineDisplay</name> <op:operator pos:line="954" pos:column="37">=</op:operator> <call><name><name pos:line="954" pos:column="39">Platform</name><op:operator pos:line="954" pos:column="47">::</op:operator><name pos:line="954" pos:column="49">Clamp</name></name><argument_list pos:line="954" pos:column="54">(<argument><expr><name pos:line="954" pos:column="55">lineDisplay</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="954" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="954" pos:column="71">cs</name><op:operator pos:line="954" pos:column="73">.</op:operator><name pos:line="954" pos:column="74">LinesDisplayed</name></name><argument_list pos:line="954" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="955" pos:column="25">return <expr><call><name pos:line="955" pos:column="32">SelectionPosition</name><argument_list pos:line="955" pos:column="49">(<argument><expr><call><name><name pos:line="955" pos:column="50">pdoc</name><op:operator pos:line="955" pos:column="54">-&gt;</op:operator><name pos:line="955" pos:column="56">LineStart</name></name><argument_list pos:line="955" pos:column="65">(<argument><expr><call><name><name pos:line="955" pos:column="66">cs</name><op:operator pos:line="955" pos:column="68">.</op:operator><name pos:line="955" pos:column="69">DocFromDisplay</name></name><argument_list pos:line="955" pos:column="83">(<argument><expr><name pos:line="955" pos:column="84">lineDisplay</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
		}</block></then> <else pos:line="956" pos:column="19">else <block pos:line="956" pos:column="24">{
			<expr_stmt><expr><name pos:line="957" pos:column="25">lineDisplay</name> <op:operator pos:line="957" pos:column="37">=</op:operator> <call><name><name pos:line="957" pos:column="39">Platform</name><op:operator pos:line="957" pos:column="47">::</op:operator><name pos:line="957" pos:column="49">Clamp</name></name><argument_list pos:line="957" pos:column="54">(<argument><expr><name pos:line="957" pos:column="55">lineDisplay</name> <op:operator pos:line="957" pos:column="67">-</op:operator> <lit:literal type="number" pos:line="957" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="957" pos:column="72">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="957" pos:column="75">cs</name><op:operator pos:line="957" pos:column="77">.</op:operator><name pos:line="957" pos:column="78">LinesDisplayed</name></name><argument_list pos:line="957" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="958" pos:column="25">return <expr><call><name pos:line="958" pos:column="32">SelectionPosition</name><argument_list pos:line="958" pos:column="49">(<argument><expr><call><name><name pos:line="958" pos:column="50">pdoc</name><op:operator pos:line="958" pos:column="54">-&gt;</op:operator><name pos:line="958" pos:column="56">LineEnd</name></name><argument_list pos:line="958" pos:column="63">(<argument><expr><call><name><name pos:line="958" pos:column="64">cs</name><op:operator pos:line="958" pos:column="66">.</op:operator><name pos:line="958" pos:column="67">DocFromDisplay</name></name><argument_list pos:line="958" pos:column="81">(<argument><expr><name pos:line="958" pos:column="82">lineDisplay</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
		}</block></else></if>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="963" pos:column="1">SelectionPosition</name></type> <name><name pos:line="963" pos:column="19">Editor</name><op:operator pos:line="963" pos:column="25">::</op:operator><name pos:line="963" pos:column="27">MovePositionSoVisible</name></name><parameter_list pos:line="963" pos:column="48">(<param><decl><type><name pos:line="963" pos:column="49">int</name></type> <name pos:line="963" pos:column="53">pos</name></decl></param>, <param><decl><type><name pos:line="963" pos:column="58">int</name></type> <name pos:line="963" pos:column="62">moveDir</name></decl></param>)</parameter_list> <block pos:line="963" pos:column="71">{
	<return pos:line="964" pos:column="9">return <expr><call><name pos:line="964" pos:column="16">MovePositionSoVisible</name><argument_list pos:line="964" pos:column="37">(<argument><expr><call><name pos:line="964" pos:column="38">SelectionPosition</name><argument_list pos:line="964" pos:column="55">(<argument><expr><name pos:line="964" pos:column="56">pos</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="964" pos:column="62">moveDir</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="967" pos:column="1">Point</name></type> <name><name pos:line="967" pos:column="7">Editor</name><op:operator pos:line="967" pos:column="13">::</op:operator><name pos:line="967" pos:column="15">PointMainCaret</name></name><parameter_list pos:line="967" pos:column="29">()</parameter_list> <block pos:line="967" pos:column="32">{
	<return pos:line="968" pos:column="9">return <expr><call><name pos:line="968" pos:column="16">LocationFromPosition</name><argument_list pos:line="968" pos:column="36">(<argument><expr><call><name><name pos:line="968" pos:column="37">sel</name><op:operator pos:line="968" pos:column="40">.</op:operator><name pos:line="968" pos:column="41">Range</name></name><argument_list pos:line="968" pos:column="46">(<argument><expr><call><name><name pos:line="968" pos:column="47">sel</name><op:operator pos:line="968" pos:column="50">.</op:operator><name pos:line="968" pos:column="51">Main</name></name><argument_list pos:line="968" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="968" pos:column="58">.</op:operator><name pos:line="968" pos:column="59">caret</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="971" pos:column="1">/**
 * Choose the x position that the caret will try to stick to
 * as it moves up and down.
 */</comment>
<function><type><name pos:line="975" pos:column="1">void</name></type> <name><name pos:line="975" pos:column="6">Editor</name><op:operator pos:line="975" pos:column="12">::</op:operator><name pos:line="975" pos:column="14">SetLastXChosen</name></name><parameter_list pos:line="975" pos:column="28">()</parameter_list> <block pos:line="975" pos:column="31">{
	<decl_stmt><decl><type><name pos:line="976" pos:column="9">Point</name></type> <name pos:line="976" pos:column="15">pt</name> <init pos:line="976" pos:column="18">= <expr><call><name pos:line="976" pos:column="20">PointMainCaret</name><argument_list pos:line="976" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="977" pos:column="9">lastXChosen</name> <op:operator pos:line="977" pos:column="21">=</op:operator> <name><name pos:line="977" pos:column="23">pt</name><op:operator pos:line="977" pos:column="25">.</op:operator><name pos:line="977" pos:column="26">x</name></name> <op:operator pos:line="977" pos:column="28">+</op:operator> <name pos:line="977" pos:column="30">xOffset</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="980" pos:column="1">void</name></type> <name><name pos:line="980" pos:column="6">Editor</name><op:operator pos:line="980" pos:column="12">::</op:operator><name pos:line="980" pos:column="14">ScrollTo</name></name><parameter_list pos:line="980" pos:column="22">(<param><decl><type><name pos:line="980" pos:column="23">int</name></type> <name pos:line="980" pos:column="27">line</name></decl></param>, <param><decl><type><name pos:line="980" pos:column="33">bool</name></type> <name pos:line="980" pos:column="38">moveThumb</name></decl></param>)</parameter_list> <block pos:line="980" pos:column="49">{
	<decl_stmt><decl><type><name pos:line="981" pos:column="9">int</name></type> <name pos:line="981" pos:column="13">topLineNew</name> <init pos:line="981" pos:column="24">= <expr><call><name><name pos:line="981" pos:column="26">Platform</name><op:operator pos:line="981" pos:column="34">::</op:operator><name pos:line="981" pos:column="36">Clamp</name></name><argument_list pos:line="981" pos:column="41">(<argument><expr><name pos:line="981" pos:column="42">line</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="981" pos:column="48">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="981" pos:column="51">MaxScrollPos</name><argument_list pos:line="981" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="982" pos:column="9">if <condition pos:line="982" pos:column="12">(<expr><name pos:line="982" pos:column="13">topLineNew</name> <op:operator pos:line="982" pos:column="24">!=</op:operator> <name pos:line="982" pos:column="27">topLine</name></expr>)</condition><then pos:line="982" pos:column="35"> <block pos:line="982" pos:column="36">{
		<comment type="line" pos:line="983" pos:column="17">// Try to optimise small scrolls</comment>
<cpp:ifndef pos:line="984" pos:column="1">#<cpp:directive pos:line="984" pos:column="2">ifndef</cpp:directive> <name pos:line="984" pos:column="9">UNDER_CE</name></cpp:ifndef>
		<decl_stmt><decl><type><name pos:line="985" pos:column="17">int</name></type> <name pos:line="985" pos:column="21">linesToMove</name> <init pos:line="985" pos:column="33">= <expr><name pos:line="985" pos:column="35">topLine</name> <op:operator pos:line="985" pos:column="43">-</op:operator> <name pos:line="985" pos:column="45">topLineNew</name></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="986" pos:column="1">#<cpp:directive pos:line="986" pos:column="2">endif</cpp:directive></cpp:endif>
		<expr_stmt><expr><call><name pos:line="987" pos:column="17">SetTopLine</name><argument_list pos:line="987" pos:column="27">(<argument><expr><name pos:line="987" pos:column="28">topLineNew</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="988" pos:column="17">// Optimize by styling the view as this will invalidate any needed area</comment>
		<comment type="line" pos:line="989" pos:column="17">// which could abort the initial paint if discovered later.</comment>
		<expr_stmt><expr><call><name pos:line="990" pos:column="17">StyleToPositionInView</name><argument_list pos:line="990" pos:column="38">(<argument><expr><call><name pos:line="990" pos:column="39">PositionAfterArea</name><argument_list pos:line="990" pos:column="56">(<argument><expr><call><name pos:line="990" pos:column="57">GetClientRectangle</name><argument_list pos:line="990" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifndef pos:line="991" pos:column="1">#<cpp:directive pos:line="991" pos:column="2">ifndef</cpp:directive> <name pos:line="991" pos:column="9">UNDER_CE</name></cpp:ifndef>
		<comment type="line" pos:line="992" pos:column="17">// Perform redraw rather than scroll if many lines would be redrawn anyway.</comment>
		<if pos:line="993" pos:column="17">if <condition pos:line="993" pos:column="20">(<expr><op:operator pos:line="993" pos:column="21">(</op:operator><call><name pos:line="993" pos:column="22">abs</name><argument_list pos:line="993" pos:column="25">(<argument><expr><name pos:line="993" pos:column="26">linesToMove</name></expr></argument>)</argument_list></call> <op:operator pos:line="993" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="993" pos:column="42">10</lit:literal><op:operator pos:line="993" pos:column="44">)</op:operator> <op:operator pos:line="993" pos:column="46">&amp;&amp;</op:operator> <op:operator pos:line="993" pos:column="49">(</op:operator><name pos:line="993" pos:column="50">paintState</name> <op:operator pos:line="993" pos:column="61">==</op:operator> <name pos:line="993" pos:column="64">notPainting</name><op:operator pos:line="993" pos:column="75">)</op:operator></expr>)</condition><then pos:line="993" pos:column="77"> <block pos:line="993" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="994" pos:column="25">ScrollText</name><argument_list pos:line="994" pos:column="35">(<argument><expr><name pos:line="994" pos:column="36">linesToMove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="995" pos:column="19">else <block pos:line="995" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="996" pos:column="25">Redraw</name><argument_list pos:line="996" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
<cpp:else pos:line="998" pos:column="1">#<cpp:directive pos:line="998" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name pos:line="999" pos:column="17">Redraw</name><argument_list pos:line="999" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1000" pos:column="1">#<cpp:directive pos:line="1000" pos:column="2">endif</cpp:directive></cpp:endif>
		<if pos:line="1001" pos:column="17">if <condition pos:line="1001" pos:column="20">(<expr><name pos:line="1001" pos:column="21">moveThumb</name></expr>)</condition><then pos:line="1001" pos:column="31"> <block pos:line="1001" pos:column="32">{
			<expr_stmt><expr><call><name pos:line="1002" pos:column="25">SetVerticalScrollPos</name><argument_list pos:line="1002" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="1004" pos:column="17">NotifyScrolled</name><argument_list pos:line="1004" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1008" pos:column="1">void</name></type> <name><name pos:line="1008" pos:column="6">Editor</name><op:operator pos:line="1008" pos:column="12">::</op:operator><name pos:line="1008" pos:column="14">ScrollText</name></name><parameter_list pos:line="1008" pos:column="24">(<param><decl><type><name pos:line="1008" pos:column="25">int</name></type></decl></param> <comment type="block" pos:line="1008" pos:column="29">/* linesToMove */</comment>)</parameter_list> <block pos:line="1008" pos:column="48">{
	<comment type="line" pos:line="1009" pos:column="9">//Platform::DebugPrintf("Editor::ScrollText %d\n", linesToMove);</comment>
	<expr_stmt><expr><call><name pos:line="1010" pos:column="9">Redraw</name><argument_list pos:line="1010" pos:column="15">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1013" pos:column="1">void</name></type> <name><name pos:line="1013" pos:column="6">Editor</name><op:operator pos:line="1013" pos:column="12">::</op:operator><name pos:line="1013" pos:column="14">HorizontalScrollTo</name></name><parameter_list pos:line="1013" pos:column="32">(<param><decl><type><name pos:line="1013" pos:column="33">int</name></type> <name pos:line="1013" pos:column="37">xPos</name></decl></param>)</parameter_list> <block pos:line="1013" pos:column="43">{
	<comment type="line" pos:line="1014" pos:column="9">//Platform::DebugPrintf("HorizontalScroll %d\n", xPos);</comment>
	<if pos:line="1015" pos:column="9">if <condition pos:line="1015" pos:column="12">(<expr><name pos:line="1015" pos:column="13">xPos</name> <op:operator pos:line="1015" pos:column="18">&lt;</op:operator> <lit:literal type="number" pos:line="1015" pos:column="20">0</lit:literal></expr>)</condition><then pos:line="1015" pos:column="22">
		<expr_stmt><expr><name pos:line="1016" pos:column="17">xPos</name> <op:operator pos:line="1016" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="1016" pos:column="24">0</lit:literal></expr>;</expr_stmt></then></if>
	<if pos:line="1017" pos:column="9">if <condition pos:line="1017" pos:column="12">(<expr><op:operator pos:line="1017" pos:column="13">(</op:operator><name pos:line="1017" pos:column="14">wrapState</name> <op:operator pos:line="1017" pos:column="24">==</op:operator> <name pos:line="1017" pos:column="27">eWrapNone</name><op:operator pos:line="1017" pos:column="36">)</op:operator> <op:operator pos:line="1017" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="1017" pos:column="41">(</op:operator><name pos:line="1017" pos:column="42">xOffset</name> <op:operator pos:line="1017" pos:column="50">!=</op:operator> <name pos:line="1017" pos:column="53">xPos</name><op:operator pos:line="1017" pos:column="57">)</op:operator></expr>)</condition><then pos:line="1017" pos:column="59"> <block pos:line="1017" pos:column="60">{
		<expr_stmt><expr><name pos:line="1018" pos:column="17">xOffset</name> <op:operator pos:line="1018" pos:column="25">=</op:operator> <name pos:line="1018" pos:column="27">xPos</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1019" pos:column="17">ContainerNeedsUpdate</name><argument_list pos:line="1019" pos:column="37">(<argument><expr><name pos:line="1019" pos:column="38">SC_UPDATE_H_SCROLL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1020" pos:column="17">SetHorizontalScrollPos</name><argument_list pos:line="1020" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1021" pos:column="17">RedrawRect</name><argument_list pos:line="1021" pos:column="27">(<argument><expr><call><name pos:line="1021" pos:column="28">GetClientRectangle</name><argument_list pos:line="1021" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1025" pos:column="1">void</name></type> <name><name pos:line="1025" pos:column="6">Editor</name><op:operator pos:line="1025" pos:column="12">::</op:operator><name pos:line="1025" pos:column="14">VerticalCentreCaret</name></name><parameter_list pos:line="1025" pos:column="33">()</parameter_list> <block pos:line="1025" pos:column="36">{
	<decl_stmt><decl><type><name pos:line="1026" pos:column="9">int</name></type> <name pos:line="1026" pos:column="13">lineDoc</name> <init pos:line="1026" pos:column="21">= <expr><call><name><name pos:line="1026" pos:column="23">pdoc</name><op:operator pos:line="1026" pos:column="27">-&gt;</op:operator><name pos:line="1026" pos:column="29">LineFromPosition</name></name><argument_list pos:line="1026" pos:column="45">(<argument><expr><call><name><name pos:line="1026" pos:column="46">sel</name><op:operator pos:line="1026" pos:column="49">.</op:operator><name pos:line="1026" pos:column="50">IsRectangular</name></name><argument_list pos:line="1026" pos:column="63">()</argument_list></call> <op:operator pos:line="1026" pos:column="66">?</op:operator> <call><name><name pos:line="1026" pos:column="68">sel</name><op:operator pos:line="1026" pos:column="71">.</op:operator><name pos:line="1026" pos:column="72">Rectangular</name></name><argument_list pos:line="1026" pos:column="83">()</argument_list></call><op:operator pos:line="1026" pos:column="85">.</op:operator><call><name><name pos:line="1026" pos:column="86">caret</name><op:operator pos:line="1026" pos:column="91">.</op:operator><name pos:line="1026" pos:column="92">Position</name></name><argument_list pos:line="1026" pos:column="100">()</argument_list></call> <op:operator pos:line="1026" pos:column="103">:</op:operator> <call><name><name pos:line="1026" pos:column="105">sel</name><op:operator pos:line="1026" pos:column="108">.</op:operator><name pos:line="1026" pos:column="109">MainCaret</name></name><argument_list pos:line="1026" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1027" pos:column="9">int</name></type> <name pos:line="1027" pos:column="13">lineDisplay</name> <init pos:line="1027" pos:column="25">= <expr><call><name><name pos:line="1027" pos:column="27">cs</name><op:operator pos:line="1027" pos:column="29">.</op:operator><name pos:line="1027" pos:column="30">DisplayFromDoc</name></name><argument_list pos:line="1027" pos:column="44">(<argument><expr><name pos:line="1027" pos:column="45">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1028" pos:column="9">int</name></type> <name pos:line="1028" pos:column="13">newTop</name> <init pos:line="1028" pos:column="20">= <expr><name pos:line="1028" pos:column="22">lineDisplay</name> <op:operator pos:line="1028" pos:column="34">-</op:operator> <op:operator pos:line="1028" pos:column="36">(</op:operator><call><name pos:line="1028" pos:column="37">LinesOnScreen</name><argument_list pos:line="1028" pos:column="50">()</argument_list></call> <op:operator pos:line="1028" pos:column="53">/</op:operator> <lit:literal type="number" pos:line="1028" pos:column="55">2</lit:literal><op:operator pos:line="1028" pos:column="56">)</op:operator></expr></init></decl>;</decl_stmt>
	<if pos:line="1029" pos:column="9">if <condition pos:line="1029" pos:column="12">(<expr><name pos:line="1029" pos:column="13">topLine</name> <op:operator pos:line="1029" pos:column="21">!=</op:operator> <name pos:line="1029" pos:column="24">newTop</name></expr>)</condition><then pos:line="1029" pos:column="31"> <block pos:line="1029" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="1030" pos:column="17">SetTopLine</name><argument_list pos:line="1030" pos:column="27">(<argument><expr><name pos:line="1030" pos:column="28">newTop</name> <op:operator pos:line="1030" pos:column="35">&gt;</op:operator> <lit:literal type="number" pos:line="1030" pos:column="37">0</lit:literal> <op:operator pos:line="1030" pos:column="39">?</op:operator> <name pos:line="1030" pos:column="41">newTop</name> <op:operator pos:line="1030" pos:column="48">:</op:operator> <lit:literal type="number" pos:line="1030" pos:column="50">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1031" pos:column="17">RedrawRect</name><argument_list pos:line="1031" pos:column="27">(<argument><expr><call><name pos:line="1031" pos:column="28">GetClientRectangle</name><argument_list pos:line="1031" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1035" pos:column="1">void</name></type> <name><name pos:line="1035" pos:column="6">Editor</name><op:operator pos:line="1035" pos:column="12">::</op:operator><name pos:line="1035" pos:column="14">MoveSelectedLines</name></name><parameter_list pos:line="1035" pos:column="31">(<param><decl><type><name pos:line="1035" pos:column="32">int</name></type> <name pos:line="1035" pos:column="36">lineDelta</name></decl></param>)</parameter_list> <block pos:line="1035" pos:column="47">{

	<comment type="line" pos:line="1037" pos:column="9">// if selection doesn't start at the beginning of the line, set the new start</comment>
	<decl_stmt><decl><type><name pos:line="1038" pos:column="9">int</name></type> <name pos:line="1038" pos:column="13">selectionStart</name> <init pos:line="1038" pos:column="28">= <expr><call><name pos:line="1038" pos:column="30">SelectionStart</name><argument_list pos:line="1038" pos:column="44">()</argument_list></call><op:operator pos:line="1038" pos:column="46">.</op:operator><call><name pos:line="1038" pos:column="47">Position</name><argument_list pos:line="1038" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1039" pos:column="9">int</name></type> <name pos:line="1039" pos:column="13">startLine</name> <init pos:line="1039" pos:column="23">= <expr><call><name><name pos:line="1039" pos:column="25">pdoc</name><op:operator pos:line="1039" pos:column="29">-&gt;</op:operator><name pos:line="1039" pos:column="31">LineFromPosition</name></name><argument_list pos:line="1039" pos:column="47">(<argument><expr><name pos:line="1039" pos:column="48">selectionStart</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1040" pos:column="9">int</name></type> <name pos:line="1040" pos:column="13">beginningOfStartLine</name> <init pos:line="1040" pos:column="34">= <expr><call><name><name pos:line="1040" pos:column="36">pdoc</name><op:operator pos:line="1040" pos:column="40">-&gt;</op:operator><name pos:line="1040" pos:column="42">LineStart</name></name><argument_list pos:line="1040" pos:column="51">(<argument><expr><name pos:line="1040" pos:column="52">startLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1041" pos:column="9">selectionStart</name> <op:operator pos:line="1041" pos:column="24">=</op:operator> <name pos:line="1041" pos:column="26">beginningOfStartLine</name></expr>;</expr_stmt>

	<comment type="line" pos:line="1043" pos:column="9">// if selection doesn't end at the beginning of a line greater than that of the start,</comment>
	<comment type="line" pos:line="1044" pos:column="9">// then set it at the beginning of the next one</comment>
	<decl_stmt><decl><type><name pos:line="1045" pos:column="9">int</name></type> <name pos:line="1045" pos:column="13">selectionEnd</name> <init pos:line="1045" pos:column="26">= <expr><call><name pos:line="1045" pos:column="28">SelectionEnd</name><argument_list pos:line="1045" pos:column="40">()</argument_list></call><op:operator pos:line="1045" pos:column="42">.</op:operator><call><name pos:line="1045" pos:column="43">Position</name><argument_list pos:line="1045" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1046" pos:column="9">int</name></type> <name pos:line="1046" pos:column="13">endLine</name> <init pos:line="1046" pos:column="21">= <expr><call><name><name pos:line="1046" pos:column="23">pdoc</name><op:operator pos:line="1046" pos:column="27">-&gt;</op:operator><name pos:line="1046" pos:column="29">LineFromPosition</name></name><argument_list pos:line="1046" pos:column="45">(<argument><expr><name pos:line="1046" pos:column="46">selectionEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1047" pos:column="9">int</name></type> <name pos:line="1047" pos:column="13">beginningOfEndLine</name> <init pos:line="1047" pos:column="32">= <expr><call><name><name pos:line="1047" pos:column="34">pdoc</name><op:operator pos:line="1047" pos:column="38">-&gt;</op:operator><name pos:line="1047" pos:column="40">LineStart</name></name><argument_list pos:line="1047" pos:column="49">(<argument><expr><name pos:line="1047" pos:column="50">endLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1048" pos:column="9">if <condition pos:line="1048" pos:column="12">(<expr><name pos:line="1048" pos:column="13">selectionEnd</name> <op:operator pos:line="1048" pos:column="26">&gt;</op:operator> <name pos:line="1048" pos:column="28">beginningOfEndLine</name>
		<op:operator pos:line="1049" pos:column="17">||</op:operator> <name pos:line="1049" pos:column="20">selectionStart</name> <op:operator pos:line="1049" pos:column="35">==</op:operator> <name pos:line="1049" pos:column="38">selectionEnd</name></expr>)</condition><then pos:line="1049" pos:column="51"> <block pos:line="1049" pos:column="52">{
		<expr_stmt><expr><name pos:line="1050" pos:column="17">selectionEnd</name> <op:operator pos:line="1050" pos:column="30">=</op:operator> <call><name><name pos:line="1050" pos:column="32">pdoc</name><op:operator pos:line="1050" pos:column="36">-&gt;</op:operator><name pos:line="1050" pos:column="38">LineStart</name></name><argument_list pos:line="1050" pos:column="47">(<argument><expr><name pos:line="1050" pos:column="48">endLine</name> <op:operator pos:line="1050" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="1050" pos:column="58">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="1053" pos:column="9">// if there's nowhere for the selection to move</comment>
	<comment type="line" pos:line="1054" pos:column="9">// (i.e. at the beginning going up or at the end going down),</comment>
	<comment type="line" pos:line="1055" pos:column="9">// stop it right there!</comment>
	<if pos:line="1056" pos:column="9">if <condition pos:line="1056" pos:column="12">(<expr><op:operator pos:line="1056" pos:column="13">(</op:operator><name pos:line="1056" pos:column="14">selectionStart</name> <op:operator pos:line="1056" pos:column="29">==</op:operator> <lit:literal type="number" pos:line="1056" pos:column="32">0</lit:literal> <op:operator pos:line="1056" pos:column="34">&amp;&amp;</op:operator> <name pos:line="1056" pos:column="37">lineDelta</name> <op:operator pos:line="1056" pos:column="47">&lt;</op:operator> <lit:literal type="number" pos:line="1056" pos:column="49">0</lit:literal><op:operator pos:line="1056" pos:column="50">)</op:operator>
		<op:operator pos:line="1057" pos:column="17">||</op:operator> <op:operator pos:line="1057" pos:column="20">(</op:operator><name pos:line="1057" pos:column="21">selectionEnd</name> <op:operator pos:line="1057" pos:column="34">==</op:operator> <call><name><name pos:line="1057" pos:column="37">pdoc</name><op:operator pos:line="1057" pos:column="41">-&gt;</op:operator><name pos:line="1057" pos:column="43">Length</name></name><argument_list pos:line="1057" pos:column="49">()</argument_list></call> <op:operator pos:line="1057" pos:column="52">&amp;&amp;</op:operator> <name pos:line="1057" pos:column="55">lineDelta</name> <op:operator pos:line="1057" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="1057" pos:column="67">0</lit:literal><op:operator pos:line="1057" pos:column="68">)</op:operator>
	        <op:operator pos:line="1058" pos:column="17">||</op:operator> <name pos:line="1058" pos:column="20">selectionStart</name> <op:operator pos:line="1058" pos:column="35">==</op:operator> <name pos:line="1058" pos:column="38">selectionEnd</name></expr>)</condition><then pos:line="1058" pos:column="51"> <block pos:line="1058" pos:column="52">{
		<return pos:line="1059" pos:column="17">return;</return>
	}</block></then></if>

	<function_decl><type><name pos:line="1062" pos:column="9">UndoGroup</name></type> <name pos:line="1062" pos:column="19">ug</name><parameter_list pos:line="1062" pos:column="21">(<param><decl><type><name pos:line="1062" pos:column="22">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>

	<expr_stmt><expr><call><name pos:line="1064" pos:column="9">SetSelection</name><argument_list pos:line="1064" pos:column="21">(<argument><expr><name pos:line="1064" pos:column="22">selectionStart</name></expr></argument>, <argument><expr><name pos:line="1064" pos:column="38">selectionEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1066" pos:column="9">SelectionText</name></type> <name pos:line="1066" pos:column="23">selectedText</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1067" pos:column="9">CopySelectionRange</name><argument_list pos:line="1067" pos:column="27">(<argument><expr><op:operator pos:line="1067" pos:column="28">&amp;</op:operator><name pos:line="1067" pos:column="29">selectedText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1069" pos:column="9">int</name></type> <name pos:line="1069" pos:column="13">selectionLength</name> <init pos:line="1069" pos:column="29">= <expr><call><name pos:line="1069" pos:column="31">SelectionRange</name><argument_list pos:line="1069" pos:column="45">(<argument><expr><name pos:line="1069" pos:column="46">selectionStart</name></expr></argument>, <argument><expr><name pos:line="1069" pos:column="62">selectionEnd</name></expr></argument>)</argument_list></call><op:operator pos:line="1069" pos:column="75">.</op:operator><call><name pos:line="1069" pos:column="76">Length</name><argument_list pos:line="1069" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1070" pos:column="9">ClearSelection</name><argument_list pos:line="1070" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1072" pos:column="9">Point</name></type> <name pos:line="1072" pos:column="15">currentLocation</name> <init pos:line="1072" pos:column="31">= <expr><call><name pos:line="1072" pos:column="33">LocationFromPosition</name><argument_list pos:line="1072" pos:column="53">(<argument><expr><call><name pos:line="1072" pos:column="54">CurrentPosition</name><argument_list pos:line="1072" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1073" pos:column="9">int</name></type> <name pos:line="1073" pos:column="13">currentLine</name> <init pos:line="1073" pos:column="25">= <expr><call><name pos:line="1073" pos:column="27">LineFromLocation</name><argument_list pos:line="1073" pos:column="43">(<argument><expr><name pos:line="1073" pos:column="44">currentLocation</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1074" pos:column="9">GoToLine</name><argument_list pos:line="1074" pos:column="17">(<argument><expr><name pos:line="1074" pos:column="18">currentLine</name> <op:operator pos:line="1074" pos:column="30">+</op:operator> <name pos:line="1074" pos:column="32">lineDelta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="1076" pos:column="9">pdoc</name><op:operator pos:line="1076" pos:column="13">-&gt;</op:operator><name pos:line="1076" pos:column="15">InsertCString</name></name><argument_list pos:line="1076" pos:column="28">(<argument><expr><call><name pos:line="1076" pos:column="29">CurrentPosition</name><argument_list pos:line="1076" pos:column="44">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1076" pos:column="48">selectedText</name><op:operator pos:line="1076" pos:column="60">.</op:operator><name pos:line="1076" pos:column="61">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1077" pos:column="9">SetSelection</name><argument_list pos:line="1077" pos:column="21">(<argument><expr><call><name pos:line="1077" pos:column="22">CurrentPosition</name><argument_list pos:line="1077" pos:column="37">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1077" pos:column="41">CurrentPosition</name><argument_list pos:line="1077" pos:column="56">()</argument_list></call> <op:operator pos:line="1077" pos:column="59">+</op:operator> <name pos:line="1077" pos:column="61">selectionLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1080" pos:column="1">void</name></type> <name><name pos:line="1080" pos:column="6">Editor</name><op:operator pos:line="1080" pos:column="12">::</op:operator><name pos:line="1080" pos:column="14">MoveSelectedLinesUp</name></name><parameter_list pos:line="1080" pos:column="33">()</parameter_list> <block pos:line="1080" pos:column="36">{
	<expr_stmt><expr><call><name pos:line="1081" pos:column="9">MoveSelectedLines</name><argument_list pos:line="1081" pos:column="26">(<argument><expr><op:operator pos:line="1081" pos:column="27">-</op:operator><lit:literal type="number" pos:line="1081" pos:column="28">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1084" pos:column="1">void</name></type> <name><name pos:line="1084" pos:column="6">Editor</name><op:operator pos:line="1084" pos:column="12">::</op:operator><name pos:line="1084" pos:column="14">MoveSelectedLinesDown</name></name><parameter_list pos:line="1084" pos:column="35">()</parameter_list> <block pos:line="1084" pos:column="38">{
	<expr_stmt><expr><call><name pos:line="1085" pos:column="9">MoveSelectedLines</name><argument_list pos:line="1085" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="1085" pos:column="27">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1088" pos:column="1">void</name></type> <name><name pos:line="1088" pos:column="6">Editor</name><op:operator pos:line="1088" pos:column="12">::</op:operator><name pos:line="1088" pos:column="14">MoveCaretInsideView</name></name><parameter_list pos:line="1088" pos:column="33">(<param><decl><type><name pos:line="1088" pos:column="34">bool</name></type> <name pos:line="1088" pos:column="39">ensureVisible</name></decl></param>)</parameter_list> <block pos:line="1088" pos:column="54">{
	<decl_stmt><decl><type><name pos:line="1089" pos:column="9">PRectangle</name></type> <name pos:line="1089" pos:column="20">rcClient</name> <init pos:line="1089" pos:column="29">= <expr><call><name pos:line="1089" pos:column="31">GetTextRectangle</name><argument_list pos:line="1089" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1090" pos:column="9">Point</name></type> <name pos:line="1090" pos:column="15">pt</name> <init pos:line="1090" pos:column="18">= <expr><call><name pos:line="1090" pos:column="20">PointMainCaret</name><argument_list pos:line="1090" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1091" pos:column="9">if <condition pos:line="1091" pos:column="12">(<expr><name><name pos:line="1091" pos:column="13">pt</name><op:operator pos:line="1091" pos:column="15">.</op:operator><name pos:line="1091" pos:column="16">y</name></name> <op:operator pos:line="1091" pos:column="18">&lt;</op:operator> <name><name pos:line="1091" pos:column="20">rcClient</name><op:operator pos:line="1091" pos:column="28">.</op:operator><name pos:line="1091" pos:column="29">top</name></name></expr>)</condition><then pos:line="1091" pos:column="33"> <block pos:line="1091" pos:column="34">{
		<expr_stmt><expr><call><name pos:line="1092" pos:column="17">MovePositionTo</name><argument_list pos:line="1092" pos:column="31">(<argument><expr><call><name pos:line="1092" pos:column="32">SPositionFromLocation</name><argument_list pos:line="1092" pos:column="53">(
		            <argument><expr><call><name pos:line="1093" pos:column="29">Point</name><argument_list pos:line="1093" pos:column="34">(<argument><expr><name pos:line="1093" pos:column="35">lastXChosen</name> <op:operator pos:line="1093" pos:column="47">-</op:operator> <name pos:line="1093" pos:column="49">xOffset</name></expr></argument>, <argument><expr><name><name pos:line="1093" pos:column="58">rcClient</name><op:operator pos:line="1093" pos:column="66">.</op:operator><name pos:line="1093" pos:column="67">top</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><name><name pos:line="1094" pos:column="41">Selection</name><op:operator pos:line="1094" pos:column="50">::</op:operator><name pos:line="1094" pos:column="52">noSel</name></name></expr></argument>, <argument><expr><name pos:line="1094" pos:column="59">ensureVisible</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="1095" pos:column="11">else <if pos:line="1095" pos:column="16">if <condition pos:line="1095" pos:column="19">(<expr><op:operator pos:line="1095" pos:column="20">(</op:operator><name><name pos:line="1095" pos:column="21">pt</name><op:operator pos:line="1095" pos:column="23">.</op:operator><name pos:line="1095" pos:column="24">y</name></name> <op:operator pos:line="1095" pos:column="26">+</op:operator> <name><name pos:line="1095" pos:column="28">vs</name><op:operator pos:line="1095" pos:column="30">.</op:operator><name pos:line="1095" pos:column="31">lineHeight</name></name> <op:operator pos:line="1095" pos:column="42">-</op:operator> <lit:literal type="number" pos:line="1095" pos:column="44">1</lit:literal><op:operator pos:line="1095" pos:column="45">)</op:operator> <op:operator pos:line="1095" pos:column="47">&gt;</op:operator> <name><name pos:line="1095" pos:column="49">rcClient</name><op:operator pos:line="1095" pos:column="57">.</op:operator><name pos:line="1095" pos:column="58">bottom</name></name></expr>)</condition><then pos:line="1095" pos:column="65"> <block pos:line="1095" pos:column="66">{
		<decl_stmt><decl><type><name pos:line="1096" pos:column="17">int</name></type> <name pos:line="1096" pos:column="21">yOfLastLineFullyDisplayed</name> <init pos:line="1096" pos:column="47">= <expr><name><name pos:line="1096" pos:column="49">rcClient</name><op:operator pos:line="1096" pos:column="57">.</op:operator><name pos:line="1096" pos:column="58">top</name></name> <op:operator pos:line="1096" pos:column="62">+</op:operator> <op:operator pos:line="1096" pos:column="64">(</op:operator><call><name pos:line="1096" pos:column="65">LinesOnScreen</name><argument_list pos:line="1096" pos:column="78">()</argument_list></call> <op:operator pos:line="1096" pos:column="81">-</op:operator> <lit:literal type="number" pos:line="1096" pos:column="83">1</lit:literal><op:operator pos:line="1096" pos:column="84">)</op:operator> <op:operator pos:line="1096" pos:column="86">*</op:operator> <name><name pos:line="1096" pos:column="88">vs</name><op:operator pos:line="1096" pos:column="90">.</op:operator><name pos:line="1096" pos:column="91">lineHeight</name></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="1097" pos:column="17">MovePositionTo</name><argument_list pos:line="1097" pos:column="31">(<argument><expr><call><name pos:line="1097" pos:column="32">SPositionFromLocation</name><argument_list pos:line="1097" pos:column="53">(
		            <argument><expr><call><name pos:line="1098" pos:column="29">Point</name><argument_list pos:line="1098" pos:column="34">(<argument><expr><name pos:line="1098" pos:column="35">lastXChosen</name> <op:operator pos:line="1098" pos:column="47">-</op:operator> <name pos:line="1098" pos:column="49">xOffset</name></expr></argument>, <argument><expr><name><name pos:line="1098" pos:column="58">rcClient</name><op:operator pos:line="1098" pos:column="66">.</op:operator><name pos:line="1098" pos:column="67">top</name></name> <op:operator pos:line="1098" pos:column="71">+</op:operator> <name pos:line="1098" pos:column="73">yOfLastLineFullyDisplayed</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
		        <argument><expr><name><name pos:line="1099" pos:column="25">Selection</name><op:operator pos:line="1099" pos:column="34">::</op:operator><name pos:line="1099" pos:column="36">noSel</name></name></expr></argument>, <argument><expr><name pos:line="1099" pos:column="43">ensureVisible</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if></else></if>
}</block></function>

<function><type><name pos:line="1103" pos:column="1">int</name></type> <name><name pos:line="1103" pos:column="5">Editor</name><op:operator pos:line="1103" pos:column="11">::</op:operator><name pos:line="1103" pos:column="13">DisplayFromPosition</name></name><parameter_list pos:line="1103" pos:column="32">(<param><decl><type><name pos:line="1103" pos:column="33">int</name></type> <name pos:line="1103" pos:column="37">pos</name></decl></param>)</parameter_list> <block pos:line="1103" pos:column="42">{
	<decl_stmt><decl><type><name pos:line="1104" pos:column="9">int</name></type> <name pos:line="1104" pos:column="13">lineDoc</name> <init pos:line="1104" pos:column="21">= <expr><call><name><name pos:line="1104" pos:column="23">pdoc</name><op:operator pos:line="1104" pos:column="27">-&gt;</op:operator><name pos:line="1104" pos:column="29">LineFromPosition</name></name><argument_list pos:line="1104" pos:column="45">(<argument><expr><name pos:line="1104" pos:column="46">pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1105" pos:column="9">int</name></type> <name pos:line="1105" pos:column="13">lineDisplay</name> <init pos:line="1105" pos:column="25">= <expr><call><name><name pos:line="1105" pos:column="27">cs</name><op:operator pos:line="1105" pos:column="29">.</op:operator><name pos:line="1105" pos:column="30">DisplayFromDoc</name></name><argument_list pos:line="1105" pos:column="44">(<argument><expr><name pos:line="1105" pos:column="45">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<function_decl><type><name pos:line="1106" pos:column="9">AutoSurface</name></type> <name pos:line="1106" pos:column="21">surface</name><parameter_list pos:line="1106" pos:column="28">(<param><decl><type><name pos:line="1106" pos:column="29">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="1107" pos:column="9">AutoLineLayout</name></type> <name pos:line="1107" pos:column="24">ll</name><argument_list pos:line="1107" pos:column="26">(<argument><expr><name pos:line="1107" pos:column="27">llc</name></expr></argument>, <argument><expr><call><name pos:line="1107" pos:column="32">RetrieveLineLayout</name><argument_list pos:line="1107" pos:column="50">(<argument><expr><name pos:line="1107" pos:column="51">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<if pos:line="1108" pos:column="9">if <condition pos:line="1108" pos:column="12">(<expr><name pos:line="1108" pos:column="13">surface</name> <op:operator pos:line="1108" pos:column="21">&amp;&amp;</op:operator> <name pos:line="1108" pos:column="24">ll</name></expr>)</condition><then pos:line="1108" pos:column="27"> <block pos:line="1108" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="1109" pos:column="17">LayoutLine</name><argument_list pos:line="1109" pos:column="27">(<argument><expr><name pos:line="1109" pos:column="28">lineDoc</name></expr></argument>, <argument><expr><name pos:line="1109" pos:column="37">surface</name></expr></argument>, <argument><expr><name pos:line="1109" pos:column="46">vs</name></expr></argument>, <argument><expr><name pos:line="1109" pos:column="50">ll</name></expr></argument>, <argument><expr><name pos:line="1109" pos:column="54">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1110" pos:column="17">unsigned</name> <name pos:line="1110" pos:column="26">int</name></type> <name pos:line="1110" pos:column="30">posLineStart</name> <init pos:line="1110" pos:column="43">= <expr><call><name><name pos:line="1110" pos:column="45">pdoc</name><op:operator pos:line="1110" pos:column="49">-&gt;</op:operator><name pos:line="1110" pos:column="51">LineStart</name></name><argument_list pos:line="1110" pos:column="60">(<argument><expr><name pos:line="1110" pos:column="61">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1111" pos:column="17">int</name></type> <name pos:line="1111" pos:column="21">posInLine</name> <init pos:line="1111" pos:column="31">= <expr><name pos:line="1111" pos:column="33">pos</name> <op:operator pos:line="1111" pos:column="37">-</op:operator> <name pos:line="1111" pos:column="39">posLineStart</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1112" pos:column="17">lineDisplay</name><op:operator pos:line="1112" pos:column="28">--</op:operator></expr>;</expr_stmt> <comment type="line" pos:line="1112" pos:column="32">// To make up for first increment ahead.</comment>
		<for pos:line="1113" pos:column="17">for (<init><decl><type><name pos:line="1113" pos:column="22">int</name></type> <name pos:line="1113" pos:column="26">subLine</name> <init pos:line="1113" pos:column="34">= <expr><lit:literal type="number" pos:line="1113" pos:column="36">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1113" pos:column="39">subLine</name> <op:operator pos:line="1113" pos:column="47">&lt;</op:operator> <name><name pos:line="1113" pos:column="49">ll</name><op:operator pos:line="1113" pos:column="51">-&gt;</op:operator><name pos:line="1113" pos:column="53">lines</name></name></expr>;</condition> <incr><expr><name pos:line="1113" pos:column="60">subLine</name><op:operator pos:line="1113" pos:column="67">++</op:operator></expr></incr>) <block pos:line="1113" pos:column="71">{
			<if pos:line="1114" pos:column="25">if <condition pos:line="1114" pos:column="28">(<expr><name pos:line="1114" pos:column="29">posInLine</name> <op:operator pos:line="1114" pos:column="39">&gt;=</op:operator> <call><name><name pos:line="1114" pos:column="42">ll</name><op:operator pos:line="1114" pos:column="44">-&gt;</op:operator><name pos:line="1114" pos:column="46">LineStart</name></name><argument_list pos:line="1114" pos:column="55">(<argument><expr><name pos:line="1114" pos:column="56">subLine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1114" pos:column="65"> <block pos:line="1114" pos:column="66">{
				<expr_stmt><expr><name pos:line="1115" pos:column="33">lineDisplay</name><op:operator pos:line="1115" pos:column="44">++</op:operator></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></then></if>
	<return pos:line="1119" pos:column="9">return <expr><name pos:line="1119" pos:column="16">lineDisplay</name></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="1122" pos:column="1">/**
 * Ensure the caret is reasonably visible in context.
 *
Caret policy in SciTE

If slop is set, we can define a slop value.
This value defines an unwanted zone (UZ) where the caret is... unwanted.
This zone is defined as a number of pixels near the vertical margins,
and as a number of lines near the horizontal margins.
By keeping the caret away from the edges, it is seen within its context,
so it is likely that the identifier that the caret is on can be completely seen,
and that the current line is seen with some of the lines following it which are
often dependent on that line.

If strict is set, the policy is enforced... strictly.
The caret is centred on the display if slop is not set,
and cannot go in the UZ if slop is set.

If jumps is set, the display is moved more energetically
so the caret can move in the same direction longer before the policy is applied again.
'3UZ' notation is used to indicate three time the size of the UZ as a distance to the margin.

If even is not set, instead of having symmetrical UZs,
the left and bottom UZs are extended up to right and top UZs respectively.
This way, we favour the displaying of useful information: the begining of lines,
where most code reside, and the lines after the caret, eg. the body of a function.

     |        |       |      |                                            |
slop | strict | jumps | even | Caret can go to the margin                 | When reaching limit (caret going out of
     |        |       |      |                                            | visibility or going into the UZ) display is...
-----+--------+-------+------+--------------------------------------------+--------------------------------------------------------------
  0  |   0    |   0   |   0  | Yes                                        | moved to put caret on top/on right
  0  |   0    |   0   |   1  | Yes                                        | moved by one position
  0  |   0    |   1   |   0  | Yes                                        | moved to put caret on top/on right
  0  |   0    |   1   |   1  | Yes                                        | centred on the caret
  0  |   1    |   -   |   0  | Caret is always on top/on right of display | -
  0  |   1    |   -   |   1  | No, caret is always centred                | -
  1  |   0    |   0   |   0  | Yes                                        | moved to put caret out of the asymmetrical UZ
  1  |   0    |   0   |   1  | Yes                                        | moved to put caret out of the UZ
  1  |   0    |   1   |   0  | Yes                                        | moved to put caret at 3UZ of the top or right margin
  1  |   0    |   1   |   1  | Yes                                        | moved to put caret at 3UZ of the margin
  1  |   1    |   -   |   0  | Caret is always at UZ of top/right margin  | -
  1  |   1    |   0   |   1  | No, kept out of UZ                         | moved by one position
  1  |   1    |   1   |   1  | No, kept out of UZ                         | moved to put caret at 3UZ of the margin
*/</comment>

<function><type><name><name pos:line="1168" pos:column="1">Editor</name><op:operator pos:line="1168" pos:column="7">::</op:operator><name pos:line="1168" pos:column="9">XYScrollPosition</name></name></type> <name><name pos:line="1168" pos:column="26">Editor</name><op:operator pos:line="1168" pos:column="32">::</op:operator><name pos:line="1168" pos:column="34">XYScrollToMakeVisible</name></name><parameter_list pos:line="1168" pos:column="55">(<param><decl><type><specifier pos:line="1168" pos:column="56">const</specifier> <name pos:line="1168" pos:column="62">bool</name></type> <name pos:line="1168" pos:column="67">useMargin</name></decl></param>, <param><decl><type><specifier pos:line="1168" pos:column="78">const</specifier> <name pos:line="1168" pos:column="84">bool</name></type> <name pos:line="1168" pos:column="89">vert</name></decl></param>, <param><decl><type><specifier pos:line="1168" pos:column="95">const</specifier> <name pos:line="1168" pos:column="101">bool</name></type> <name pos:line="1168" pos:column="106">horiz</name></decl></param>)</parameter_list> <block pos:line="1168" pos:column="113">{
	<decl_stmt><decl><type><name pos:line="1169" pos:column="9">PRectangle</name></type> <name pos:line="1169" pos:column="20">rcClient</name> <init pos:line="1169" pos:column="29">= <expr><call><name pos:line="1169" pos:column="31">GetTextRectangle</name><argument_list pos:line="1169" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1170" pos:column="9">const</specifier> <name pos:line="1170" pos:column="15">SelectionPosition</name></type> <name pos:line="1170" pos:column="33">posCaret</name> <init pos:line="1170" pos:column="42">= <expr><call><name><name pos:line="1170" pos:column="44">posDrag</name><op:operator pos:line="1170" pos:column="51">.</op:operator><name pos:line="1170" pos:column="52">IsValid</name></name><argument_list pos:line="1170" pos:column="59">()</argument_list></call> <op:operator pos:line="1170" pos:column="62">?</op:operator> <name pos:line="1170" pos:column="64">posDrag</name> <op:operator pos:line="1170" pos:column="72">:</op:operator> <call><name><name pos:line="1170" pos:column="74">sel</name><op:operator pos:line="1170" pos:column="77">.</op:operator><name pos:line="1170" pos:column="78">RangeMain</name></name><argument_list pos:line="1170" pos:column="87">()</argument_list></call><op:operator pos:line="1170" pos:column="89">.</op:operator><name pos:line="1170" pos:column="90">caret</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1171" pos:column="9">const</specifier> <name pos:line="1171" pos:column="15">Point</name></type> <name pos:line="1171" pos:column="21">pt</name> <init pos:line="1171" pos:column="24">= <expr><call><name pos:line="1171" pos:column="26">LocationFromPosition</name><argument_list pos:line="1171" pos:column="46">(<argument><expr><name pos:line="1171" pos:column="47">posCaret</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1172" pos:column="9">const</specifier> <name pos:line="1172" pos:column="15">Point</name></type> <name pos:line="1172" pos:column="21">ptBottomCaret</name><argument_list pos:line="1172" pos:column="34">(<argument><expr><name><name pos:line="1172" pos:column="35">pt</name><op:operator pos:line="1172" pos:column="37">.</op:operator><name pos:line="1172" pos:column="38">x</name></name></expr></argument>, <argument><expr><name><name pos:line="1172" pos:column="41">pt</name><op:operator pos:line="1172" pos:column="43">.</op:operator><name pos:line="1172" pos:column="44">y</name></name> <op:operator pos:line="1172" pos:column="46">+</op:operator> <name><name pos:line="1172" pos:column="48">vs</name><op:operator pos:line="1172" pos:column="50">.</op:operator><name pos:line="1172" pos:column="51">lineHeight</name></name> <op:operator pos:line="1172" pos:column="62">-</op:operator> <lit:literal type="number" pos:line="1172" pos:column="64">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1173" pos:column="9">const</specifier> <name pos:line="1173" pos:column="15">int</name></type> <name pos:line="1173" pos:column="19">lineCaret</name> <init pos:line="1173" pos:column="29">= <expr><call><name pos:line="1173" pos:column="31">DisplayFromPosition</name><argument_list pos:line="1173" pos:column="50">(<argument><expr><call><name><name pos:line="1173" pos:column="51">posCaret</name><op:operator pos:line="1173" pos:column="59">.</op:operator><name pos:line="1173" pos:column="60">Position</name></name><argument_list pos:line="1173" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<function_decl><type><name pos:line="1175" pos:column="9">XYScrollPosition</name></type> <name pos:line="1175" pos:column="26">newXY</name><parameter_list pos:line="1175" pos:column="31">(<param><decl><type><name pos:line="1175" pos:column="32">xOffset</name></type></decl></param>, <param><decl><type><name pos:line="1175" pos:column="41">topLine</name></type></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="1177" pos:column="9">// Vertical positioning</comment>
	<if pos:line="1178" pos:column="9">if <condition pos:line="1178" pos:column="12">(<expr><name pos:line="1178" pos:column="13">vert</name> <op:operator pos:line="1178" pos:column="18">&amp;&amp;</op:operator> <op:operator pos:line="1178" pos:column="21">(</op:operator><name><name pos:line="1178" pos:column="22">pt</name><op:operator pos:line="1178" pos:column="24">.</op:operator><name><name pos:line="1178" pos:column="25">y</name> <argument_list pos:line="1178" pos:column="27">&lt; <argument><expr><name><name pos:line="1178" pos:column="29">rcClient</name><op:operator pos:line="1178" pos:column="37">.</op:operator><name pos:line="1178" pos:column="38">top</name></name> <op:operator pos:line="1178" pos:column="42">||</op:operator> <name><name pos:line="1178" pos:column="45">ptBottomCaret</name><op:operator pos:line="1178" pos:column="58">.</op:operator><name pos:line="1178" pos:column="59">y</name></name></expr></argument> &gt;</argument_list></name></name><op:operator pos:line="1178" pos:column="62">=</op:operator> <name><name pos:line="1178" pos:column="64">rcClient</name><op:operator pos:line="1178" pos:column="72">.</op:operator><name pos:line="1178" pos:column="73">bottom</name></name> <op:operator pos:line="1178" pos:column="80">||</op:operator> <op:operator pos:line="1178" pos:column="83">(</op:operator><name pos:line="1178" pos:column="84">caretYPolicy</name> <op:operator pos:line="1178" pos:column="97">&amp;</op:operator> <name pos:line="1178" pos:column="99">CARET_STRICT</name><op:operator pos:line="1178" pos:column="111">)</op:operator> <op:operator pos:line="1178" pos:column="113">!=</op:operator> <lit:literal type="number" pos:line="1178" pos:column="116">0</lit:literal><op:operator pos:line="1178" pos:column="117">)</op:operator></expr>)</condition><then pos:line="1178" pos:column="119"> <block pos:line="1178" pos:column="120">{
		<decl_stmt><decl><type><specifier pos:line="1179" pos:column="17">const</specifier> <name pos:line="1179" pos:column="23">int</name></type> <name pos:line="1179" pos:column="27">linesOnScreen</name> <init pos:line="1179" pos:column="41">= <expr><call><name pos:line="1179" pos:column="43">LinesOnScreen</name><argument_list pos:line="1179" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1180" pos:column="17">const</specifier> <name pos:line="1180" pos:column="23">int</name></type> <name pos:line="1180" pos:column="27">halfScreen</name> <init pos:line="1180" pos:column="38">= <expr><call><name><name pos:line="1180" pos:column="40">Platform</name><op:operator pos:line="1180" pos:column="48">::</op:operator><name pos:line="1180" pos:column="50">Maximum</name></name><argument_list pos:line="1180" pos:column="57">(<argument><expr><name pos:line="1180" pos:column="58">linesOnScreen</name> <op:operator pos:line="1180" pos:column="72">-</op:operator> <lit:literal type="number" pos:line="1180" pos:column="74">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1180" pos:column="77">2</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1180" pos:column="80">/</op:operator> <lit:literal type="number" pos:line="1180" pos:column="82">2</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1181" pos:column="17">const</specifier> <name pos:line="1181" pos:column="23">bool</name></type> <name pos:line="1181" pos:column="28">bSlop</name> <init pos:line="1181" pos:column="34">= <expr><op:operator pos:line="1181" pos:column="36">(</op:operator><name pos:line="1181" pos:column="37">caretYPolicy</name> <op:operator pos:line="1181" pos:column="50">&amp;</op:operator> <name pos:line="1181" pos:column="52">CARET_SLOP</name><op:operator pos:line="1181" pos:column="62">)</op:operator> <op:operator pos:line="1181" pos:column="64">!=</op:operator> <lit:literal type="number" pos:line="1181" pos:column="67">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1182" pos:column="17">const</specifier> <name pos:line="1182" pos:column="23">bool</name></type> <name pos:line="1182" pos:column="28">bStrict</name> <init pos:line="1182" pos:column="36">= <expr><op:operator pos:line="1182" pos:column="38">(</op:operator><name pos:line="1182" pos:column="39">caretYPolicy</name> <op:operator pos:line="1182" pos:column="52">&amp;</op:operator> <name pos:line="1182" pos:column="54">CARET_STRICT</name><op:operator pos:line="1182" pos:column="66">)</op:operator> <op:operator pos:line="1182" pos:column="68">!=</op:operator> <lit:literal type="number" pos:line="1182" pos:column="71">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1183" pos:column="17">const</specifier> <name pos:line="1183" pos:column="23">bool</name></type> <name pos:line="1183" pos:column="28">bJump</name> <init pos:line="1183" pos:column="34">= <expr><op:operator pos:line="1183" pos:column="36">(</op:operator><name pos:line="1183" pos:column="37">caretYPolicy</name> <op:operator pos:line="1183" pos:column="50">&amp;</op:operator> <name pos:line="1183" pos:column="52">CARET_JUMPS</name><op:operator pos:line="1183" pos:column="63">)</op:operator> <op:operator pos:line="1183" pos:column="65">!=</op:operator> <lit:literal type="number" pos:line="1183" pos:column="68">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1184" pos:column="17">const</specifier> <name pos:line="1184" pos:column="23">bool</name></type> <name pos:line="1184" pos:column="28">bEven</name> <init pos:line="1184" pos:column="34">= <expr><op:operator pos:line="1184" pos:column="36">(</op:operator><name pos:line="1184" pos:column="37">caretYPolicy</name> <op:operator pos:line="1184" pos:column="50">&amp;</op:operator> <name pos:line="1184" pos:column="52">CARET_EVEN</name><op:operator pos:line="1184" pos:column="62">)</op:operator> <op:operator pos:line="1184" pos:column="64">!=</op:operator> <lit:literal type="number" pos:line="1184" pos:column="67">0</lit:literal></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="1186" pos:column="17">// It should be possible to scroll the window to show the caret,</comment>
		<comment type="line" pos:line="1187" pos:column="17">// but this fails to remove the caret on GTK+</comment>
		<if pos:line="1188" pos:column="17">if <condition pos:line="1188" pos:column="20">(<expr><name pos:line="1188" pos:column="21">bSlop</name></expr>)</condition><then pos:line="1188" pos:column="27"> <block pos:line="1188" pos:column="28">{	<comment type="line" pos:line="1188" pos:column="33">// A margin is defined</comment>
			<decl_stmt><decl><type><name pos:line="1189" pos:column="25">int</name></type> <name pos:line="1189" pos:column="29">yMoveT</name></decl><op:operator pos:line="1189" pos:column="35">,</op:operator> <decl><type ref="prev"/><name pos:line="1189" pos:column="37">yMoveB</name></decl>;</decl_stmt>
			<if pos:line="1190" pos:column="25">if <condition pos:line="1190" pos:column="28">(<expr><name pos:line="1190" pos:column="29">bStrict</name></expr>)</condition><then pos:line="1190" pos:column="37"> <block pos:line="1190" pos:column="38">{
				<decl_stmt><decl><type><name pos:line="1191" pos:column="33">int</name></type> <name pos:line="1191" pos:column="37">yMarginT</name></decl><op:operator pos:line="1191" pos:column="45">,</op:operator> <decl><type ref="prev"/><name pos:line="1191" pos:column="47">yMarginB</name></decl>;</decl_stmt>
				<if pos:line="1192" pos:column="33">if <condition pos:line="1192" pos:column="36">(<expr><op:operator pos:line="1192" pos:column="37">!</op:operator><name pos:line="1192" pos:column="38">useMargin</name></expr>)</condition><then pos:line="1192" pos:column="48"> <block pos:line="1192" pos:column="49">{
					<comment type="line" pos:line="1193" pos:column="41">// In drag mode, avoid moves</comment>
					<comment type="line" pos:line="1194" pos:column="41">// otherwise, a double click will select several lines.</comment>
					<expr_stmt><expr><name pos:line="1195" pos:column="41">yMarginT</name> <op:operator pos:line="1195" pos:column="50">=</op:operator> <name pos:line="1195" pos:column="52">yMarginB</name> <op:operator pos:line="1195" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="1195" pos:column="63">0</lit:literal></expr>;</expr_stmt>
				}</block></then> <else pos:line="1196" pos:column="35">else <block pos:line="1196" pos:column="40">{
					<comment type="line" pos:line="1197" pos:column="41">// yMarginT must equal to caretYSlop, with a minimum of 1 and</comment>
					<comment type="line" pos:line="1198" pos:column="41">// a maximum of slightly less than half the heigth of the text area.</comment>
					<expr_stmt><expr><name pos:line="1199" pos:column="41">yMarginT</name> <op:operator pos:line="1199" pos:column="50">=</op:operator> <call><name><name pos:line="1199" pos:column="52">Platform</name><op:operator pos:line="1199" pos:column="60">::</op:operator><name pos:line="1199" pos:column="62">Clamp</name></name><argument_list pos:line="1199" pos:column="67">(<argument><expr><name pos:line="1199" pos:column="68">caretYSlop</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1199" pos:column="80">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1199" pos:column="83">halfScreen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="1200" pos:column="41">if <condition pos:line="1200" pos:column="44">(<expr><name pos:line="1200" pos:column="45">bEven</name></expr>)</condition><then pos:line="1200" pos:column="51"> <block pos:line="1200" pos:column="52">{
						<expr_stmt><expr><name pos:line="1201" pos:column="49">yMarginB</name> <op:operator pos:line="1201" pos:column="58">=</op:operator> <name pos:line="1201" pos:column="60">yMarginT</name></expr>;</expr_stmt>
					}</block></then> <else pos:line="1202" pos:column="43">else <block pos:line="1202" pos:column="48">{
						<expr_stmt><expr><name pos:line="1203" pos:column="49">yMarginB</name> <op:operator pos:line="1203" pos:column="58">=</op:operator> <name pos:line="1203" pos:column="60">linesOnScreen</name> <op:operator pos:line="1203" pos:column="74">-</op:operator> <name pos:line="1203" pos:column="76">yMarginT</name> <op:operator pos:line="1203" pos:column="85">-</op:operator> <lit:literal type="number" pos:line="1203" pos:column="87">1</lit:literal></expr>;</expr_stmt>
					}</block></else></if>
				}</block></else></if>
				<expr_stmt><expr><name pos:line="1206" pos:column="33">yMoveT</name> <op:operator pos:line="1206" pos:column="40">=</op:operator> <name pos:line="1206" pos:column="42">yMarginT</name></expr>;</expr_stmt>
				<if pos:line="1207" pos:column="33">if <condition pos:line="1207" pos:column="36">(<expr><name pos:line="1207" pos:column="37">bEven</name></expr>)</condition><then pos:line="1207" pos:column="43"> <block pos:line="1207" pos:column="44">{
					<if pos:line="1208" pos:column="41">if <condition pos:line="1208" pos:column="44">(<expr><name pos:line="1208" pos:column="45">bJump</name></expr>)</condition><then pos:line="1208" pos:column="51"> <block pos:line="1208" pos:column="52">{
						<expr_stmt><expr><name pos:line="1209" pos:column="49">yMoveT</name> <op:operator pos:line="1209" pos:column="56">=</op:operator> <call><name><name pos:line="1209" pos:column="58">Platform</name><op:operator pos:line="1209" pos:column="66">::</op:operator><name pos:line="1209" pos:column="68">Clamp</name></name><argument_list pos:line="1209" pos:column="73">(<argument><expr><name pos:line="1209" pos:column="74">caretYSlop</name> <op:operator pos:line="1209" pos:column="85">*</op:operator> <lit:literal type="number" pos:line="1209" pos:column="87">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1209" pos:column="90">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1209" pos:column="93">halfScreen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<expr_stmt><expr><name pos:line="1211" pos:column="41">yMoveB</name> <op:operator pos:line="1211" pos:column="48">=</op:operator> <name pos:line="1211" pos:column="50">yMoveT</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1212" pos:column="35">else <block pos:line="1212" pos:column="40">{
					<expr_stmt><expr><name pos:line="1213" pos:column="41">yMoveB</name> <op:operator pos:line="1213" pos:column="48">=</op:operator> <name pos:line="1213" pos:column="50">linesOnScreen</name> <op:operator pos:line="1213" pos:column="64">-</op:operator> <name pos:line="1213" pos:column="66">yMoveT</name> <op:operator pos:line="1213" pos:column="73">-</op:operator> <lit:literal type="number" pos:line="1213" pos:column="75">1</lit:literal></expr>;</expr_stmt>
				}</block></else></if>
				<if pos:line="1215" pos:column="33">if <condition pos:line="1215" pos:column="36">(<expr><name pos:line="1215" pos:column="37">lineCaret</name> <op:operator pos:line="1215" pos:column="47">&lt;</op:operator> <name pos:line="1215" pos:column="49">topLine</name> <op:operator pos:line="1215" pos:column="57">+</op:operator> <name pos:line="1215" pos:column="59">yMarginT</name></expr>)</condition><then pos:line="1215" pos:column="68"> <block pos:line="1215" pos:column="69">{
					<comment type="line" pos:line="1216" pos:column="41">// Caret goes too high</comment>
					<expr_stmt><expr><name><name pos:line="1217" pos:column="41">newXY</name><op:operator pos:line="1217" pos:column="46">.</op:operator><name pos:line="1217" pos:column="47">topLine</name></name> <op:operator pos:line="1217" pos:column="55">=</op:operator> <name pos:line="1217" pos:column="57">lineCaret</name> <op:operator pos:line="1217" pos:column="67">-</op:operator> <name pos:line="1217" pos:column="69">yMoveT</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1218" pos:column="35">else <if pos:line="1218" pos:column="40">if <condition pos:line="1218" pos:column="43">(<expr><name pos:line="1218" pos:column="44">lineCaret</name> <op:operator pos:line="1218" pos:column="54">&gt;</op:operator> <name pos:line="1218" pos:column="56">topLine</name> <op:operator pos:line="1218" pos:column="64">+</op:operator> <name pos:line="1218" pos:column="66">linesOnScreen</name> <op:operator pos:line="1218" pos:column="80">-</op:operator> <lit:literal type="number" pos:line="1218" pos:column="82">1</lit:literal> <op:operator pos:line="1218" pos:column="84">-</op:operator> <name pos:line="1218" pos:column="86">yMarginB</name></expr>)</condition><then pos:line="1218" pos:column="95"> <block pos:line="1218" pos:column="96">{
					<comment type="line" pos:line="1219" pos:column="41">// Caret goes too low</comment>
					<expr_stmt><expr><name><name pos:line="1220" pos:column="41">newXY</name><op:operator pos:line="1220" pos:column="46">.</op:operator><name pos:line="1220" pos:column="47">topLine</name></name> <op:operator pos:line="1220" pos:column="55">=</op:operator> <name pos:line="1220" pos:column="57">lineCaret</name> <op:operator pos:line="1220" pos:column="67">-</op:operator> <name pos:line="1220" pos:column="69">linesOnScreen</name> <op:operator pos:line="1220" pos:column="83">+</op:operator> <lit:literal type="number" pos:line="1220" pos:column="85">1</lit:literal> <op:operator pos:line="1220" pos:column="87">+</op:operator> <name pos:line="1220" pos:column="89">yMoveB</name></expr>;</expr_stmt>
				}</block></then></if></else></if>
			}</block></then> <else pos:line="1222" pos:column="27">else <block pos:line="1222" pos:column="32">{	<comment type="line" pos:line="1222" pos:column="41">// Not strict</comment>
				<expr_stmt><expr><name pos:line="1223" pos:column="33">yMoveT</name> <op:operator pos:line="1223" pos:column="40">=</op:operator> <name pos:line="1223" pos:column="42">bJump</name> <op:operator pos:line="1223" pos:column="48">?</op:operator> <name pos:line="1223" pos:column="50">caretYSlop</name> <op:operator pos:line="1223" pos:column="61">*</op:operator> <lit:literal type="number" pos:line="1223" pos:column="63">3</lit:literal> <op:operator pos:line="1223" pos:column="65">:</op:operator> <name pos:line="1223" pos:column="67">caretYSlop</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1224" pos:column="33">yMoveT</name> <op:operator pos:line="1224" pos:column="40">=</op:operator> <call><name><name pos:line="1224" pos:column="42">Platform</name><op:operator pos:line="1224" pos:column="50">::</op:operator><name pos:line="1224" pos:column="52">Clamp</name></name><argument_list pos:line="1224" pos:column="57">(<argument><expr><name pos:line="1224" pos:column="58">yMoveT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1224" pos:column="66">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1224" pos:column="69">halfScreen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="1225" pos:column="33">if <condition pos:line="1225" pos:column="36">(<expr><name pos:line="1225" pos:column="37">bEven</name></expr>)</condition><then pos:line="1225" pos:column="43"> <block pos:line="1225" pos:column="44">{
					<expr_stmt><expr><name pos:line="1226" pos:column="41">yMoveB</name> <op:operator pos:line="1226" pos:column="48">=</op:operator> <name pos:line="1226" pos:column="50">yMoveT</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1227" pos:column="35">else <block pos:line="1227" pos:column="40">{
					<expr_stmt><expr><name pos:line="1228" pos:column="41">yMoveB</name> <op:operator pos:line="1228" pos:column="48">=</op:operator> <name pos:line="1228" pos:column="50">linesOnScreen</name> <op:operator pos:line="1228" pos:column="64">-</op:operator> <name pos:line="1228" pos:column="66">yMoveT</name> <op:operator pos:line="1228" pos:column="73">-</op:operator> <lit:literal type="number" pos:line="1228" pos:column="75">1</lit:literal></expr>;</expr_stmt>
				}</block></else></if>
				<if pos:line="1230" pos:column="33">if <condition pos:line="1230" pos:column="36">(<expr><name pos:line="1230" pos:column="37">lineCaret</name> <op:operator pos:line="1230" pos:column="47">&lt;</op:operator> <name pos:line="1230" pos:column="49">topLine</name></expr>)</condition><then pos:line="1230" pos:column="57"> <block pos:line="1230" pos:column="58">{
					<comment type="line" pos:line="1231" pos:column="41">// Caret goes too high</comment>
					<expr_stmt><expr><name><name pos:line="1232" pos:column="41">newXY</name><op:operator pos:line="1232" pos:column="46">.</op:operator><name pos:line="1232" pos:column="47">topLine</name></name> <op:operator pos:line="1232" pos:column="55">=</op:operator> <name pos:line="1232" pos:column="57">lineCaret</name> <op:operator pos:line="1232" pos:column="67">-</op:operator> <name pos:line="1232" pos:column="69">yMoveT</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1233" pos:column="35">else <if pos:line="1233" pos:column="40">if <condition pos:line="1233" pos:column="43">(<expr><name pos:line="1233" pos:column="44">lineCaret</name> <op:operator pos:line="1233" pos:column="54">&gt;</op:operator> <name pos:line="1233" pos:column="56">topLine</name> <op:operator pos:line="1233" pos:column="64">+</op:operator> <name pos:line="1233" pos:column="66">linesOnScreen</name> <op:operator pos:line="1233" pos:column="80">-</op:operator> <lit:literal type="number" pos:line="1233" pos:column="82">1</lit:literal></expr>)</condition><then pos:line="1233" pos:column="84"> <block pos:line="1233" pos:column="85">{
					<comment type="line" pos:line="1234" pos:column="41">// Caret goes too low</comment>
					<expr_stmt><expr><name><name pos:line="1235" pos:column="41">newXY</name><op:operator pos:line="1235" pos:column="46">.</op:operator><name pos:line="1235" pos:column="47">topLine</name></name> <op:operator pos:line="1235" pos:column="55">=</op:operator> <name pos:line="1235" pos:column="57">lineCaret</name> <op:operator pos:line="1235" pos:column="67">-</op:operator> <name pos:line="1235" pos:column="69">linesOnScreen</name> <op:operator pos:line="1235" pos:column="83">+</op:operator> <lit:literal type="number" pos:line="1235" pos:column="85">1</lit:literal> <op:operator pos:line="1235" pos:column="87">+</op:operator> <name pos:line="1235" pos:column="89">yMoveB</name></expr>;</expr_stmt>
				}</block></then></if></else></if>
			}</block></else></if>
		}</block></then> <else pos:line="1238" pos:column="19">else <block pos:line="1238" pos:column="24">{	<comment type="line" pos:line="1238" pos:column="33">// No slop</comment>
			<if pos:line="1239" pos:column="25">if <condition pos:line="1239" pos:column="28">(<expr><op:operator pos:line="1239" pos:column="29">!</op:operator><name pos:line="1239" pos:column="30">bStrict</name> <op:operator pos:line="1239" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="1239" pos:column="41">!</op:operator><name pos:line="1239" pos:column="42">bJump</name></expr>)</condition><then pos:line="1239" pos:column="48"> <block pos:line="1239" pos:column="49">{
				<comment type="line" pos:line="1240" pos:column="33">// Minimal move</comment>
				<if pos:line="1241" pos:column="33">if <condition pos:line="1241" pos:column="36">(<expr><name pos:line="1241" pos:column="37">lineCaret</name> <op:operator pos:line="1241" pos:column="47">&lt;</op:operator> <name pos:line="1241" pos:column="49">topLine</name></expr>)</condition><then pos:line="1241" pos:column="57"> <block pos:line="1241" pos:column="58">{
					<comment type="line" pos:line="1242" pos:column="41">// Caret goes too high</comment>
					<expr_stmt><expr><name><name pos:line="1243" pos:column="41">newXY</name><op:operator pos:line="1243" pos:column="46">.</op:operator><name pos:line="1243" pos:column="47">topLine</name></name> <op:operator pos:line="1243" pos:column="55">=</op:operator> <name pos:line="1243" pos:column="57">lineCaret</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1244" pos:column="35">else <if pos:line="1244" pos:column="40">if <condition pos:line="1244" pos:column="43">(<expr><name pos:line="1244" pos:column="44">lineCaret</name> <op:operator pos:line="1244" pos:column="54">&gt;</op:operator> <name pos:line="1244" pos:column="56">topLine</name> <op:operator pos:line="1244" pos:column="64">+</op:operator> <name pos:line="1244" pos:column="66">linesOnScreen</name> <op:operator pos:line="1244" pos:column="80">-</op:operator> <lit:literal type="number" pos:line="1244" pos:column="82">1</lit:literal></expr>)</condition><then pos:line="1244" pos:column="84"> <block pos:line="1244" pos:column="85">{
					<comment type="line" pos:line="1245" pos:column="41">// Caret goes too low</comment>
					<if pos:line="1246" pos:column="41">if <condition pos:line="1246" pos:column="44">(<expr><name pos:line="1246" pos:column="45">bEven</name></expr>)</condition><then pos:line="1246" pos:column="51"> <block pos:line="1246" pos:column="52">{
						<expr_stmt><expr><name><name pos:line="1247" pos:column="49">newXY</name><op:operator pos:line="1247" pos:column="54">.</op:operator><name pos:line="1247" pos:column="55">topLine</name></name> <op:operator pos:line="1247" pos:column="63">=</op:operator> <name pos:line="1247" pos:column="65">lineCaret</name> <op:operator pos:line="1247" pos:column="75">-</op:operator> <name pos:line="1247" pos:column="77">linesOnScreen</name> <op:operator pos:line="1247" pos:column="91">+</op:operator> <lit:literal type="number" pos:line="1247" pos:column="93">1</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="1248" pos:column="43">else <block pos:line="1248" pos:column="48">{
						<expr_stmt><expr><name><name pos:line="1249" pos:column="49">newXY</name><op:operator pos:line="1249" pos:column="54">.</op:operator><name pos:line="1249" pos:column="55">topLine</name></name> <op:operator pos:line="1249" pos:column="63">=</op:operator> <name pos:line="1249" pos:column="65">lineCaret</name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if></else></if>
			}</block></then> <else pos:line="1252" pos:column="27">else <block pos:line="1252" pos:column="32">{	<comment type="line" pos:line="1252" pos:column="41">// Strict or going out of display</comment>
				<if pos:line="1253" pos:column="33">if <condition pos:line="1253" pos:column="36">(<expr><name pos:line="1253" pos:column="37">bEven</name></expr>)</condition><then pos:line="1253" pos:column="43"> <block pos:line="1253" pos:column="44">{
					<comment type="line" pos:line="1254" pos:column="41">// Always center caret</comment>
					<expr_stmt><expr><name><name pos:line="1255" pos:column="41">newXY</name><op:operator pos:line="1255" pos:column="46">.</op:operator><name pos:line="1255" pos:column="47">topLine</name></name> <op:operator pos:line="1255" pos:column="55">=</op:operator> <name pos:line="1255" pos:column="57">lineCaret</name> <op:operator pos:line="1255" pos:column="67">-</op:operator> <name pos:line="1255" pos:column="69">halfScreen</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1256" pos:column="35">else <block pos:line="1256" pos:column="40">{
					<comment type="line" pos:line="1257" pos:column="41">// Always put caret on top of display</comment>
					<expr_stmt><expr><name><name pos:line="1258" pos:column="41">newXY</name><op:operator pos:line="1258" pos:column="46">.</op:operator><name pos:line="1258" pos:column="47">topLine</name></name> <op:operator pos:line="1258" pos:column="55">=</op:operator> <name pos:line="1258" pos:column="57">lineCaret</name></expr>;</expr_stmt>
				}</block></else></if>
			}</block></else></if>
		}</block></else></if>
		<expr_stmt><expr><name><name pos:line="1262" pos:column="17">newXY</name><op:operator pos:line="1262" pos:column="22">.</op:operator><name pos:line="1262" pos:column="23">topLine</name></name> <op:operator pos:line="1262" pos:column="31">=</op:operator> <call><name><name pos:line="1262" pos:column="33">Platform</name><op:operator pos:line="1262" pos:column="41">::</op:operator><name pos:line="1262" pos:column="43">Clamp</name></name><argument_list pos:line="1262" pos:column="48">(<argument><expr><name><name pos:line="1262" pos:column="49">newXY</name><op:operator pos:line="1262" pos:column="54">.</op:operator><name pos:line="1262" pos:column="55">topLine</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1262" pos:column="64">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="1262" pos:column="67">MaxScrollPos</name><argument_list pos:line="1262" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="1265" pos:column="9">// Horizontal positioning</comment>
	<if pos:line="1266" pos:column="9">if <condition pos:line="1266" pos:column="12">(<expr><name pos:line="1266" pos:column="13">horiz</name> <op:operator pos:line="1266" pos:column="19">&amp;&amp;</op:operator> <op:operator pos:line="1266" pos:column="22">(</op:operator><name pos:line="1266" pos:column="23">wrapState</name> <op:operator pos:line="1266" pos:column="33">==</op:operator> <name pos:line="1266" pos:column="36">eWrapNone</name><op:operator pos:line="1266" pos:column="45">)</op:operator></expr>)</condition><then pos:line="1266" pos:column="47"> <block pos:line="1266" pos:column="48">{
		<decl_stmt><decl><type><specifier pos:line="1267" pos:column="17">const</specifier> <name pos:line="1267" pos:column="23">int</name></type> <name pos:line="1267" pos:column="27">halfScreen</name> <init pos:line="1267" pos:column="38">= <expr><call><name><name pos:line="1267" pos:column="40">Platform</name><op:operator pos:line="1267" pos:column="48">::</op:operator><name pos:line="1267" pos:column="50">Maximum</name></name><argument_list pos:line="1267" pos:column="57">(<argument><expr><call><name><name pos:line="1267" pos:column="58">rcClient</name><op:operator pos:line="1267" pos:column="66">.</op:operator><name pos:line="1267" pos:column="67">Width</name></name><argument_list pos:line="1267" pos:column="72">()</argument_list></call> <op:operator pos:line="1267" pos:column="75">-</op:operator> <lit:literal type="number" pos:line="1267" pos:column="77">4</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1267" pos:column="80">4</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1267" pos:column="83">/</op:operator> <lit:literal type="number" pos:line="1267" pos:column="85">2</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1268" pos:column="17">const</specifier> <name pos:line="1268" pos:column="23">bool</name></type> <name pos:line="1268" pos:column="28">bSlop</name> <init pos:line="1268" pos:column="34">= <expr><op:operator pos:line="1268" pos:column="36">(</op:operator><name pos:line="1268" pos:column="37">caretXPolicy</name> <op:operator pos:line="1268" pos:column="50">&amp;</op:operator> <name pos:line="1268" pos:column="52">CARET_SLOP</name><op:operator pos:line="1268" pos:column="62">)</op:operator> <op:operator pos:line="1268" pos:column="64">!=</op:operator> <lit:literal type="number" pos:line="1268" pos:column="67">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1269" pos:column="17">const</specifier> <name pos:line="1269" pos:column="23">bool</name></type> <name pos:line="1269" pos:column="28">bStrict</name> <init pos:line="1269" pos:column="36">= <expr><op:operator pos:line="1269" pos:column="38">(</op:operator><name pos:line="1269" pos:column="39">caretXPolicy</name> <op:operator pos:line="1269" pos:column="52">&amp;</op:operator> <name pos:line="1269" pos:column="54">CARET_STRICT</name><op:operator pos:line="1269" pos:column="66">)</op:operator> <op:operator pos:line="1269" pos:column="68">!=</op:operator> <lit:literal type="number" pos:line="1269" pos:column="71">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1270" pos:column="17">const</specifier> <name pos:line="1270" pos:column="23">bool</name></type> <name pos:line="1270" pos:column="28">bJump</name> <init pos:line="1270" pos:column="34">= <expr><op:operator pos:line="1270" pos:column="36">(</op:operator><name pos:line="1270" pos:column="37">caretXPolicy</name> <op:operator pos:line="1270" pos:column="50">&amp;</op:operator> <name pos:line="1270" pos:column="52">CARET_JUMPS</name><op:operator pos:line="1270" pos:column="63">)</op:operator> <op:operator pos:line="1270" pos:column="65">!=</op:operator> <lit:literal type="number" pos:line="1270" pos:column="68">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1271" pos:column="17">const</specifier> <name pos:line="1271" pos:column="23">bool</name></type> <name pos:line="1271" pos:column="28">bEven</name> <init pos:line="1271" pos:column="34">= <expr><op:operator pos:line="1271" pos:column="36">(</op:operator><name pos:line="1271" pos:column="37">caretXPolicy</name> <op:operator pos:line="1271" pos:column="50">&amp;</op:operator> <name pos:line="1271" pos:column="52">CARET_EVEN</name><op:operator pos:line="1271" pos:column="62">)</op:operator> <op:operator pos:line="1271" pos:column="64">!=</op:operator> <lit:literal type="number" pos:line="1271" pos:column="67">0</lit:literal></expr></init></decl>;</decl_stmt>

		<if pos:line="1273" pos:column="17">if <condition pos:line="1273" pos:column="20">(<expr><name pos:line="1273" pos:column="21">bSlop</name></expr>)</condition><then pos:line="1273" pos:column="27"> <block pos:line="1273" pos:column="28">{	<comment type="line" pos:line="1273" pos:column="33">// A margin is defined</comment>
			<decl_stmt><decl><type><name pos:line="1274" pos:column="25">int</name></type> <name pos:line="1274" pos:column="29">xMoveL</name></decl><op:operator pos:line="1274" pos:column="35">,</op:operator> <decl><type ref="prev"/><name pos:line="1274" pos:column="37">xMoveR</name></decl>;</decl_stmt>
			<if pos:line="1275" pos:column="25">if <condition pos:line="1275" pos:column="28">(<expr><name pos:line="1275" pos:column="29">bStrict</name></expr>)</condition><then pos:line="1275" pos:column="37"> <block pos:line="1275" pos:column="38">{
				<decl_stmt><decl><type><name pos:line="1276" pos:column="33">int</name></type> <name pos:line="1276" pos:column="37">xMarginL</name></decl><op:operator pos:line="1276" pos:column="45">,</op:operator> <decl><type ref="prev"/><name pos:line="1276" pos:column="47">xMarginR</name></decl>;</decl_stmt>
				<if pos:line="1277" pos:column="33">if <condition pos:line="1277" pos:column="36">(<expr><op:operator pos:line="1277" pos:column="37">!</op:operator><name pos:line="1277" pos:column="38">useMargin</name></expr>)</condition><then pos:line="1277" pos:column="48"> <block pos:line="1277" pos:column="49">{
					<comment type="line" pos:line="1278" pos:column="41">// In drag mode, avoid moves unless very near of the margin</comment>
					<comment type="line" pos:line="1279" pos:column="41">// otherwise, a simple click will select text.</comment>
					<expr_stmt><expr><name pos:line="1280" pos:column="41">xMarginL</name> <op:operator pos:line="1280" pos:column="50">=</op:operator> <name pos:line="1280" pos:column="52">xMarginR</name> <op:operator pos:line="1280" pos:column="61">=</op:operator> <lit:literal type="number" pos:line="1280" pos:column="63">2</lit:literal></expr>;</expr_stmt>
				}</block></then> <else pos:line="1281" pos:column="35">else <block pos:line="1281" pos:column="40">{
					<comment type="line" pos:line="1282" pos:column="41">// xMargin must equal to caretXSlop, with a minimum of 2 and</comment>
					<comment type="line" pos:line="1283" pos:column="41">// a maximum of slightly less than half the width of the text area.</comment>
					<expr_stmt><expr><name pos:line="1284" pos:column="41">xMarginR</name> <op:operator pos:line="1284" pos:column="50">=</op:operator> <call><name><name pos:line="1284" pos:column="52">Platform</name><op:operator pos:line="1284" pos:column="60">::</op:operator><name pos:line="1284" pos:column="62">Clamp</name></name><argument_list pos:line="1284" pos:column="67">(<argument><expr><name pos:line="1284" pos:column="68">caretXSlop</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1284" pos:column="80">2</lit:literal></expr></argument>, <argument><expr><name pos:line="1284" pos:column="83">halfScreen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="1285" pos:column="41">if <condition pos:line="1285" pos:column="44">(<expr><name pos:line="1285" pos:column="45">bEven</name></expr>)</condition><then pos:line="1285" pos:column="51"> <block pos:line="1285" pos:column="52">{
						<expr_stmt><expr><name pos:line="1286" pos:column="49">xMarginL</name> <op:operator pos:line="1286" pos:column="58">=</op:operator> <name pos:line="1286" pos:column="60">xMarginR</name></expr>;</expr_stmt>
					}</block></then> <else pos:line="1287" pos:column="43">else <block pos:line="1287" pos:column="48">{
						<expr_stmt><expr><name pos:line="1288" pos:column="49">xMarginL</name> <op:operator pos:line="1288" pos:column="58">=</op:operator> <call><name><name pos:line="1288" pos:column="60">rcClient</name><op:operator pos:line="1288" pos:column="68">.</op:operator><name pos:line="1288" pos:column="69">Width</name></name><argument_list pos:line="1288" pos:column="74">()</argument_list></call> <op:operator pos:line="1288" pos:column="77">-</op:operator> <name pos:line="1288" pos:column="79">xMarginR</name> <op:operator pos:line="1288" pos:column="88">-</op:operator> <lit:literal type="number" pos:line="1288" pos:column="90">4</lit:literal></expr>;</expr_stmt>
					}</block></else></if>
				}</block></else></if>
				<if pos:line="1291" pos:column="33">if <condition pos:line="1291" pos:column="36">(<expr><name pos:line="1291" pos:column="37">bJump</name> <op:operator pos:line="1291" pos:column="43">&amp;&amp;</op:operator> <name pos:line="1291" pos:column="46">bEven</name></expr>)</condition><then pos:line="1291" pos:column="52"> <block pos:line="1291" pos:column="53">{
					<comment type="line" pos:line="1292" pos:column="41">// Jump is used only in even mode</comment>
					<expr_stmt><expr><name pos:line="1293" pos:column="41">xMoveL</name> <op:operator pos:line="1293" pos:column="48">=</op:operator> <name pos:line="1293" pos:column="50">xMoveR</name> <op:operator pos:line="1293" pos:column="57">=</op:operator> <call><name><name pos:line="1293" pos:column="59">Platform</name><op:operator pos:line="1293" pos:column="67">::</op:operator><name pos:line="1293" pos:column="69">Clamp</name></name><argument_list pos:line="1293" pos:column="74">(<argument><expr><name pos:line="1293" pos:column="75">caretXSlop</name> <op:operator pos:line="1293" pos:column="86">*</op:operator> <lit:literal type="number" pos:line="1293" pos:column="88">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1293" pos:column="91">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1293" pos:column="94">halfScreen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="1294" pos:column="35">else <block pos:line="1294" pos:column="40">{
					<expr_stmt><expr><name pos:line="1295" pos:column="41">xMoveL</name> <op:operator pos:line="1295" pos:column="48">=</op:operator> <name pos:line="1295" pos:column="50">xMoveR</name> <op:operator pos:line="1295" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="1295" pos:column="59">0</lit:literal></expr>;</expr_stmt>	<comment type="line" pos:line="1295" pos:column="65">// Not used, avoid a warning</comment>
				}</block></else></if>
				<if pos:line="1297" pos:column="33">if <condition pos:line="1297" pos:column="36">(<expr><name><name pos:line="1297" pos:column="37">pt</name><op:operator pos:line="1297" pos:column="39">.</op:operator><name pos:line="1297" pos:column="40">x</name></name> <op:operator pos:line="1297" pos:column="42">&lt;</op:operator> <name><name pos:line="1297" pos:column="44">rcClient</name><op:operator pos:line="1297" pos:column="52">.</op:operator><name pos:line="1297" pos:column="53">left</name></name> <op:operator pos:line="1297" pos:column="58">+</op:operator> <name pos:line="1297" pos:column="60">xMarginL</name></expr>)</condition><then pos:line="1297" pos:column="69"> <block pos:line="1297" pos:column="70">{
					<comment type="line" pos:line="1298" pos:column="41">// Caret is on the left of the display</comment>
					<if pos:line="1299" pos:column="41">if <condition pos:line="1299" pos:column="44">(<expr><name pos:line="1299" pos:column="45">bJump</name> <op:operator pos:line="1299" pos:column="51">&amp;&amp;</op:operator> <name pos:line="1299" pos:column="54">bEven</name></expr>)</condition><then pos:line="1299" pos:column="60"> <block pos:line="1299" pos:column="61">{
						<expr_stmt><expr><name><name pos:line="1300" pos:column="49">newXY</name><op:operator pos:line="1300" pos:column="54">.</op:operator><name pos:line="1300" pos:column="55">xOffset</name></name> <op:operator pos:line="1300" pos:column="63">-=</op:operator> <name pos:line="1300" pos:column="66">xMoveL</name></expr>;</expr_stmt>
					}</block></then> <else pos:line="1301" pos:column="43">else <block pos:line="1301" pos:column="48">{
						<comment type="line" pos:line="1302" pos:column="49">// Move just enough to allow to display the caret</comment>
						<expr_stmt><expr><name><name pos:line="1303" pos:column="49">newXY</name><op:operator pos:line="1303" pos:column="54">.</op:operator><name pos:line="1303" pos:column="55">xOffset</name></name> <op:operator pos:line="1303" pos:column="63">-=</op:operator> <op:operator pos:line="1303" pos:column="66">(</op:operator><name><name pos:line="1303" pos:column="67">rcClient</name><op:operator pos:line="1303" pos:column="75">.</op:operator><name pos:line="1303" pos:column="76">left</name></name> <op:operator pos:line="1303" pos:column="81">+</op:operator> <name pos:line="1303" pos:column="83">xMarginL</name><op:operator pos:line="1303" pos:column="91">)</op:operator> <op:operator pos:line="1303" pos:column="93">-</op:operator> <name><name pos:line="1303" pos:column="95">pt</name><op:operator pos:line="1303" pos:column="97">.</op:operator><name pos:line="1303" pos:column="98">x</name></name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then> <else pos:line="1305" pos:column="35">else <if pos:line="1305" pos:column="40">if <condition pos:line="1305" pos:column="43">(<expr><name><name pos:line="1305" pos:column="44">pt</name><op:operator pos:line="1305" pos:column="46">.</op:operator><name pos:line="1305" pos:column="47">x</name></name> <op:operator pos:line="1305" pos:column="49">&gt;=</op:operator> <name><name pos:line="1305" pos:column="52">rcClient</name><op:operator pos:line="1305" pos:column="60">.</op:operator><name pos:line="1305" pos:column="61">right</name></name> <op:operator pos:line="1305" pos:column="67">-</op:operator> <name pos:line="1305" pos:column="69">xMarginR</name></expr>)</condition><then pos:line="1305" pos:column="78"> <block pos:line="1305" pos:column="79">{
					<comment type="line" pos:line="1306" pos:column="41">// Caret is on the right of the display</comment>
					<if pos:line="1307" pos:column="41">if <condition pos:line="1307" pos:column="44">(<expr><name pos:line="1307" pos:column="45">bJump</name> <op:operator pos:line="1307" pos:column="51">&amp;&amp;</op:operator> <name pos:line="1307" pos:column="54">bEven</name></expr>)</condition><then pos:line="1307" pos:column="60"> <block pos:line="1307" pos:column="61">{
						<expr_stmt><expr><name><name pos:line="1308" pos:column="49">newXY</name><op:operator pos:line="1308" pos:column="54">.</op:operator><name pos:line="1308" pos:column="55">xOffset</name></name> <op:operator pos:line="1308" pos:column="63">+=</op:operator> <name pos:line="1308" pos:column="66">xMoveR</name></expr>;</expr_stmt>
					}</block></then> <else pos:line="1309" pos:column="43">else <block pos:line="1309" pos:column="48">{
						<comment type="line" pos:line="1310" pos:column="49">// Move just enough to allow to display the caret</comment>
						<expr_stmt><expr><name><name pos:line="1311" pos:column="49">newXY</name><op:operator pos:line="1311" pos:column="54">.</op:operator><name pos:line="1311" pos:column="55">xOffset</name></name> <op:operator pos:line="1311" pos:column="63">+=</op:operator> <name><name pos:line="1311" pos:column="66">pt</name><op:operator pos:line="1311" pos:column="68">.</op:operator><name pos:line="1311" pos:column="69">x</name></name> <op:operator pos:line="1311" pos:column="71">-</op:operator> <op:operator pos:line="1311" pos:column="73">(</op:operator><name><name pos:line="1311" pos:column="74">rcClient</name><op:operator pos:line="1311" pos:column="82">.</op:operator><name pos:line="1311" pos:column="83">right</name></name> <op:operator pos:line="1311" pos:column="89">-</op:operator> <name pos:line="1311" pos:column="91">xMarginR</name><op:operator pos:line="1311" pos:column="99">)</op:operator> <op:operator pos:line="1311" pos:column="101">+</op:operator> <lit:literal type="number" pos:line="1311" pos:column="103">1</lit:literal></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if></else></if>
			}</block></then> <else pos:line="1314" pos:column="27">else <block pos:line="1314" pos:column="32">{	<comment type="line" pos:line="1314" pos:column="41">// Not strict</comment>
				<expr_stmt><expr><name pos:line="1315" pos:column="33">xMoveR</name> <op:operator pos:line="1315" pos:column="40">=</op:operator> <name pos:line="1315" pos:column="42">bJump</name> <op:operator pos:line="1315" pos:column="48">?</op:operator> <name pos:line="1315" pos:column="50">caretXSlop</name> <op:operator pos:line="1315" pos:column="61">*</op:operator> <lit:literal type="number" pos:line="1315" pos:column="63">3</lit:literal> <op:operator pos:line="1315" pos:column="65">:</op:operator> <name pos:line="1315" pos:column="67">caretXSlop</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1316" pos:column="33">xMoveR</name> <op:operator pos:line="1316" pos:column="40">=</op:operator> <call><name><name pos:line="1316" pos:column="42">Platform</name><op:operator pos:line="1316" pos:column="50">::</op:operator><name pos:line="1316" pos:column="52">Clamp</name></name><argument_list pos:line="1316" pos:column="57">(<argument><expr><name pos:line="1316" pos:column="58">xMoveR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1316" pos:column="66">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1316" pos:column="69">halfScreen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="1317" pos:column="33">if <condition pos:line="1317" pos:column="36">(<expr><name pos:line="1317" pos:column="37">bEven</name></expr>)</condition><then pos:line="1317" pos:column="43"> <block pos:line="1317" pos:column="44">{
					<expr_stmt><expr><name pos:line="1318" pos:column="41">xMoveL</name> <op:operator pos:line="1318" pos:column="48">=</op:operator> <name pos:line="1318" pos:column="50">xMoveR</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1319" pos:column="35">else <block pos:line="1319" pos:column="40">{
					<expr_stmt><expr><name pos:line="1320" pos:column="41">xMoveL</name> <op:operator pos:line="1320" pos:column="48">=</op:operator> <call><name><name pos:line="1320" pos:column="50">rcClient</name><op:operator pos:line="1320" pos:column="58">.</op:operator><name pos:line="1320" pos:column="59">Width</name></name><argument_list pos:line="1320" pos:column="64">()</argument_list></call> <op:operator pos:line="1320" pos:column="67">-</op:operator> <name pos:line="1320" pos:column="69">xMoveR</name> <op:operator pos:line="1320" pos:column="76">-</op:operator> <lit:literal type="number" pos:line="1320" pos:column="78">4</lit:literal></expr>;</expr_stmt>
				}</block></else></if>
				<if pos:line="1322" pos:column="33">if <condition pos:line="1322" pos:column="36">(<expr><name><name pos:line="1322" pos:column="37">pt</name><op:operator pos:line="1322" pos:column="39">.</op:operator><name pos:line="1322" pos:column="40">x</name></name> <op:operator pos:line="1322" pos:column="42">&lt;</op:operator> <name><name pos:line="1322" pos:column="44">rcClient</name><op:operator pos:line="1322" pos:column="52">.</op:operator><name pos:line="1322" pos:column="53">left</name></name></expr>)</condition><then pos:line="1322" pos:column="58"> <block pos:line="1322" pos:column="59">{
					<comment type="line" pos:line="1323" pos:column="41">// Caret is on the left of the display</comment>
					<expr_stmt><expr><name><name pos:line="1324" pos:column="41">newXY</name><op:operator pos:line="1324" pos:column="46">.</op:operator><name pos:line="1324" pos:column="47">xOffset</name></name> <op:operator pos:line="1324" pos:column="55">-=</op:operator> <name pos:line="1324" pos:column="58">xMoveL</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1325" pos:column="35">else <if pos:line="1325" pos:column="40">if <condition pos:line="1325" pos:column="43">(<expr><name><name pos:line="1325" pos:column="44">pt</name><op:operator pos:line="1325" pos:column="46">.</op:operator><name pos:line="1325" pos:column="47">x</name></name> <op:operator pos:line="1325" pos:column="49">&gt;=</op:operator> <name><name pos:line="1325" pos:column="52">rcClient</name><op:operator pos:line="1325" pos:column="60">.</op:operator><name pos:line="1325" pos:column="61">right</name></name></expr>)</condition><then pos:line="1325" pos:column="67"> <block pos:line="1325" pos:column="68">{
					<comment type="line" pos:line="1326" pos:column="41">// Caret is on the right of the display</comment>
					<expr_stmt><expr><name><name pos:line="1327" pos:column="41">newXY</name><op:operator pos:line="1327" pos:column="46">.</op:operator><name pos:line="1327" pos:column="47">xOffset</name></name> <op:operator pos:line="1327" pos:column="55">+=</op:operator> <name pos:line="1327" pos:column="58">xMoveR</name></expr>;</expr_stmt>
				}</block></then></if></else></if>
			}</block></else></if>
		}</block></then> <else pos:line="1330" pos:column="19">else <block pos:line="1330" pos:column="24">{	<comment type="line" pos:line="1330" pos:column="33">// No slop</comment>
			<if pos:line="1331" pos:column="25">if <condition pos:line="1331" pos:column="28">(<expr><name pos:line="1331" pos:column="29">bStrict</name> <op:operator pos:line="1331" pos:column="37">||</op:operator>
			        <op:operator pos:line="1332" pos:column="33">(</op:operator><name pos:line="1332" pos:column="34">bJump</name> <op:operator pos:line="1332" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="1332" pos:column="43">(</op:operator><name><name pos:line="1332" pos:column="44">pt</name><op:operator pos:line="1332" pos:column="46">.</op:operator><name><name pos:line="1332" pos:column="47">x</name> <argument_list pos:line="1332" pos:column="49">&lt; <argument><expr><name><name pos:line="1332" pos:column="51">rcClient</name><op:operator pos:line="1332" pos:column="59">.</op:operator><name pos:line="1332" pos:column="60">left</name></name> <op:operator pos:line="1332" pos:column="65">||</op:operator> <name><name pos:line="1332" pos:column="68">pt</name><op:operator pos:line="1332" pos:column="70">.</op:operator><name pos:line="1332" pos:column="71">x</name></name></expr></argument> &gt;</argument_list></name></name><op:operator pos:line="1332" pos:column="74">=</op:operator> <name><name pos:line="1332" pos:column="76">rcClient</name><op:operator pos:line="1332" pos:column="84">.</op:operator><name pos:line="1332" pos:column="85">right</name></name><op:operator pos:line="1332" pos:column="90">)</op:operator><op:operator pos:line="1332" pos:column="91">)</op:operator></expr>)</condition><then pos:line="1332" pos:column="93"> <block pos:line="1332" pos:column="94">{
				<comment type="line" pos:line="1333" pos:column="33">// Strict or going out of display</comment>
				<if pos:line="1334" pos:column="33">if <condition pos:line="1334" pos:column="36">(<expr><name pos:line="1334" pos:column="37">bEven</name></expr>)</condition><then pos:line="1334" pos:column="43"> <block pos:line="1334" pos:column="44">{
					<comment type="line" pos:line="1335" pos:column="41">// Center caret</comment>
					<expr_stmt><expr><name><name pos:line="1336" pos:column="41">newXY</name><op:operator pos:line="1336" pos:column="46">.</op:operator><name pos:line="1336" pos:column="47">xOffset</name></name> <op:operator pos:line="1336" pos:column="55">+=</op:operator> <name><name pos:line="1336" pos:column="58">pt</name><op:operator pos:line="1336" pos:column="60">.</op:operator><name pos:line="1336" pos:column="61">x</name></name> <op:operator pos:line="1336" pos:column="63">-</op:operator> <name><name pos:line="1336" pos:column="65">rcClient</name><op:operator pos:line="1336" pos:column="73">.</op:operator><name pos:line="1336" pos:column="74">left</name></name> <op:operator pos:line="1336" pos:column="79">-</op:operator> <name pos:line="1336" pos:column="81">halfScreen</name></expr>;</expr_stmt>
				}</block></then> <else pos:line="1337" pos:column="35">else <block pos:line="1337" pos:column="40">{
					<comment type="line" pos:line="1338" pos:column="41">// Put caret on right</comment>
					<expr_stmt><expr><name><name pos:line="1339" pos:column="41">newXY</name><op:operator pos:line="1339" pos:column="46">.</op:operator><name pos:line="1339" pos:column="47">xOffset</name></name> <op:operator pos:line="1339" pos:column="55">+=</op:operator> <name><name pos:line="1339" pos:column="58">pt</name><op:operator pos:line="1339" pos:column="60">.</op:operator><name pos:line="1339" pos:column="61">x</name></name> <op:operator pos:line="1339" pos:column="63">-</op:operator> <name><name pos:line="1339" pos:column="65">rcClient</name><op:operator pos:line="1339" pos:column="73">.</op:operator><name pos:line="1339" pos:column="74">right</name></name> <op:operator pos:line="1339" pos:column="80">+</op:operator> <lit:literal type="number" pos:line="1339" pos:column="82">1</lit:literal></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then> <else pos:line="1341" pos:column="27">else <block pos:line="1341" pos:column="32">{
				<comment type="line" pos:line="1342" pos:column="33">// Move just enough to allow to display the caret</comment>
				<if pos:line="1343" pos:column="33">if <condition pos:line="1343" pos:column="36">(<expr><name><name pos:line="1343" pos:column="37">pt</name><op:operator pos:line="1343" pos:column="39">.</op:operator><name pos:line="1343" pos:column="40">x</name></name> <op:operator pos:line="1343" pos:column="42">&lt;</op:operator> <name><name pos:line="1343" pos:column="44">rcClient</name><op:operator pos:line="1343" pos:column="52">.</op:operator><name pos:line="1343" pos:column="53">left</name></name></expr>)</condition><then pos:line="1343" pos:column="58"> <block pos:line="1343" pos:column="59">{
					<comment type="line" pos:line="1344" pos:column="41">// Caret is on the left of the display</comment>
					<if pos:line="1345" pos:column="41">if <condition pos:line="1345" pos:column="44">(<expr><name pos:line="1345" pos:column="45">bEven</name></expr>)</condition><then pos:line="1345" pos:column="51"> <block pos:line="1345" pos:column="52">{
						<expr_stmt><expr><name><name pos:line="1346" pos:column="49">newXY</name><op:operator pos:line="1346" pos:column="54">.</op:operator><name pos:line="1346" pos:column="55">xOffset</name></name> <op:operator pos:line="1346" pos:column="63">-=</op:operator> <name><name pos:line="1346" pos:column="66">rcClient</name><op:operator pos:line="1346" pos:column="74">.</op:operator><name pos:line="1346" pos:column="75">left</name></name> <op:operator pos:line="1346" pos:column="80">-</op:operator> <name><name pos:line="1346" pos:column="82">pt</name><op:operator pos:line="1346" pos:column="84">.</op:operator><name pos:line="1346" pos:column="85">x</name></name></expr>;</expr_stmt>
					}</block></then> <else pos:line="1347" pos:column="43">else <block pos:line="1347" pos:column="48">{
						<expr_stmt><expr><name><name pos:line="1348" pos:column="49">newXY</name><op:operator pos:line="1348" pos:column="54">.</op:operator><name pos:line="1348" pos:column="55">xOffset</name></name> <op:operator pos:line="1348" pos:column="63">+=</op:operator> <name><name pos:line="1348" pos:column="66">pt</name><op:operator pos:line="1348" pos:column="68">.</op:operator><name pos:line="1348" pos:column="69">x</name></name> <op:operator pos:line="1348" pos:column="71">-</op:operator> <name><name pos:line="1348" pos:column="73">rcClient</name><op:operator pos:line="1348" pos:column="81">.</op:operator><name pos:line="1348" pos:column="82">right</name></name> <op:operator pos:line="1348" pos:column="88">+</op:operator> <lit:literal type="number" pos:line="1348" pos:column="90">1</lit:literal></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then> <else pos:line="1350" pos:column="35">else <if pos:line="1350" pos:column="40">if <condition pos:line="1350" pos:column="43">(<expr><name><name pos:line="1350" pos:column="44">pt</name><op:operator pos:line="1350" pos:column="46">.</op:operator><name pos:line="1350" pos:column="47">x</name></name> <op:operator pos:line="1350" pos:column="49">&gt;=</op:operator> <name><name pos:line="1350" pos:column="52">rcClient</name><op:operator pos:line="1350" pos:column="60">.</op:operator><name pos:line="1350" pos:column="61">right</name></name></expr>)</condition><then pos:line="1350" pos:column="67"> <block pos:line="1350" pos:column="68">{
					<comment type="line" pos:line="1351" pos:column="41">// Caret is on the right of the display</comment>
					<expr_stmt><expr><name><name pos:line="1352" pos:column="41">newXY</name><op:operator pos:line="1352" pos:column="46">.</op:operator><name pos:line="1352" pos:column="47">xOffset</name></name> <op:operator pos:line="1352" pos:column="55">+=</op:operator> <name><name pos:line="1352" pos:column="58">pt</name><op:operator pos:line="1352" pos:column="60">.</op:operator><name pos:line="1352" pos:column="61">x</name></name> <op:operator pos:line="1352" pos:column="63">-</op:operator> <name><name pos:line="1352" pos:column="65">rcClient</name><op:operator pos:line="1352" pos:column="73">.</op:operator><name pos:line="1352" pos:column="74">right</name></name> <op:operator pos:line="1352" pos:column="80">+</op:operator> <lit:literal type="number" pos:line="1352" pos:column="82">1</lit:literal></expr>;</expr_stmt>
				}</block></then></if></else></if>
			}</block></else></if>
		}</block></else></if>
		<comment type="line" pos:line="1356" pos:column="17">// In case of a jump (find result) largely out of display, adjust the offset to display the caret</comment>
		<if pos:line="1357" pos:column="17">if <condition pos:line="1357" pos:column="20">(<expr><name><name pos:line="1357" pos:column="21">pt</name><op:operator pos:line="1357" pos:column="23">.</op:operator><name pos:line="1357" pos:column="24">x</name></name> <op:operator pos:line="1357" pos:column="26">+</op:operator> <name pos:line="1357" pos:column="28">xOffset</name> <op:operator pos:line="1357" pos:column="36">&lt;</op:operator> <name><name pos:line="1357" pos:column="38">rcClient</name><op:operator pos:line="1357" pos:column="46">.</op:operator><name pos:line="1357" pos:column="47">left</name></name> <op:operator pos:line="1357" pos:column="52">+</op:operator> <name><name pos:line="1357" pos:column="54">newXY</name><op:operator pos:line="1357" pos:column="59">.</op:operator><name pos:line="1357" pos:column="60">xOffset</name></name></expr>)</condition><then pos:line="1357" pos:column="68"> <block pos:line="1357" pos:column="69">{
			<expr_stmt><expr><name><name pos:line="1358" pos:column="25">newXY</name><op:operator pos:line="1358" pos:column="30">.</op:operator><name pos:line="1358" pos:column="31">xOffset</name></name> <op:operator pos:line="1358" pos:column="39">=</op:operator> <name><name pos:line="1358" pos:column="41">pt</name><op:operator pos:line="1358" pos:column="43">.</op:operator><name pos:line="1358" pos:column="44">x</name></name> <op:operator pos:line="1358" pos:column="46">+</op:operator> <name pos:line="1358" pos:column="48">xOffset</name> <op:operator pos:line="1358" pos:column="56">-</op:operator> <name><name pos:line="1358" pos:column="58">rcClient</name><op:operator pos:line="1358" pos:column="66">.</op:operator><name pos:line="1358" pos:column="67">left</name></name></expr>;</expr_stmt>
		}</block></then> <else pos:line="1359" pos:column="19">else <if pos:line="1359" pos:column="24">if <condition pos:line="1359" pos:column="27">(<expr><name><name pos:line="1359" pos:column="28">pt</name><op:operator pos:line="1359" pos:column="30">.</op:operator><name pos:line="1359" pos:column="31">x</name></name> <op:operator pos:line="1359" pos:column="33">+</op:operator> <name pos:line="1359" pos:column="35">xOffset</name> <op:operator pos:line="1359" pos:column="43">&gt;=</op:operator> <name><name pos:line="1359" pos:column="46">rcClient</name><op:operator pos:line="1359" pos:column="54">.</op:operator><name pos:line="1359" pos:column="55">right</name></name> <op:operator pos:line="1359" pos:column="61">+</op:operator> <name><name pos:line="1359" pos:column="63">newXY</name><op:operator pos:line="1359" pos:column="68">.</op:operator><name pos:line="1359" pos:column="69">xOffset</name></name></expr>)</condition><then pos:line="1359" pos:column="77"> <block pos:line="1359" pos:column="78">{
			<expr_stmt><expr><name><name pos:line="1360" pos:column="25">newXY</name><op:operator pos:line="1360" pos:column="30">.</op:operator><name pos:line="1360" pos:column="31">xOffset</name></name> <op:operator pos:line="1360" pos:column="39">=</op:operator> <name><name pos:line="1360" pos:column="41">pt</name><op:operator pos:line="1360" pos:column="43">.</op:operator><name pos:line="1360" pos:column="44">x</name></name> <op:operator pos:line="1360" pos:column="46">+</op:operator> <name pos:line="1360" pos:column="48">xOffset</name> <op:operator pos:line="1360" pos:column="56">-</op:operator> <name><name pos:line="1360" pos:column="58">rcClient</name><op:operator pos:line="1360" pos:column="66">.</op:operator><name pos:line="1360" pos:column="67">right</name></name> <op:operator pos:line="1360" pos:column="73">+</op:operator> <lit:literal type="number" pos:line="1360" pos:column="75">1</lit:literal></expr>;</expr_stmt>
			<if pos:line="1361" pos:column="25">if <condition pos:line="1361" pos:column="28">(<expr><name><name pos:line="1361" pos:column="29">vs</name><op:operator pos:line="1361" pos:column="31">.</op:operator><name pos:line="1361" pos:column="32">caretStyle</name></name> <op:operator pos:line="1361" pos:column="43">==</op:operator> <name pos:line="1361" pos:column="46">CARETSTYLE_BLOCK</name></expr>)</condition><then pos:line="1361" pos:column="63"> <block pos:line="1361" pos:column="64">{
				<comment type="line" pos:line="1362" pos:column="33">// Ensure we can see a good portion of the block caret</comment>
				<expr_stmt><expr><name><name pos:line="1363" pos:column="33">newXY</name><op:operator pos:line="1363" pos:column="38">.</op:operator><name pos:line="1363" pos:column="39">xOffset</name></name> <op:operator pos:line="1363" pos:column="47">+=</op:operator> <name><name pos:line="1363" pos:column="50">vs</name><op:operator pos:line="1363" pos:column="52">.</op:operator><name pos:line="1363" pos:column="53">aveCharWidth</name></name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if></else></if>
		<if pos:line="1366" pos:column="17">if <condition pos:line="1366" pos:column="20">(<expr><name><name pos:line="1366" pos:column="21">newXY</name><op:operator pos:line="1366" pos:column="26">.</op:operator><name pos:line="1366" pos:column="27">xOffset</name></name> <op:operator pos:line="1366" pos:column="35">&lt;</op:operator> <lit:literal type="number" pos:line="1366" pos:column="37">0</lit:literal></expr>)</condition><then pos:line="1366" pos:column="39"> <block pos:line="1366" pos:column="40">{
			<expr_stmt><expr><name><name pos:line="1367" pos:column="25">newXY</name><op:operator pos:line="1367" pos:column="30">.</op:operator><name pos:line="1367" pos:column="31">xOffset</name></name> <op:operator pos:line="1367" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="1367" pos:column="41">0</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<return pos:line="1371" pos:column="9">return <expr><name pos:line="1371" pos:column="16">newXY</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1374" pos:column="1">void</name></type> <name><name pos:line="1374" pos:column="6">Editor</name><op:operator pos:line="1374" pos:column="12">::</op:operator><name pos:line="1374" pos:column="14">SetXYScroll</name></name><parameter_list pos:line="1374" pos:column="25">(<param><decl><type><name pos:line="1374" pos:column="26">XYScrollPosition</name></type> <name pos:line="1374" pos:column="43">newXY</name></decl></param>)</parameter_list> <block pos:line="1374" pos:column="50">{
	<if pos:line="1375" pos:column="9">if <condition pos:line="1375" pos:column="12">(<expr><op:operator pos:line="1375" pos:column="13">(</op:operator><name><name pos:line="1375" pos:column="14">newXY</name><op:operator pos:line="1375" pos:column="19">.</op:operator><name pos:line="1375" pos:column="20">topLine</name></name> <op:operator pos:line="1375" pos:column="28">!=</op:operator> <name pos:line="1375" pos:column="31">topLine</name><op:operator pos:line="1375" pos:column="38">)</op:operator> <op:operator pos:line="1375" pos:column="40">||</op:operator> <op:operator pos:line="1375" pos:column="43">(</op:operator><name><name pos:line="1375" pos:column="44">newXY</name><op:operator pos:line="1375" pos:column="49">.</op:operator><name pos:line="1375" pos:column="50">xOffset</name></name> <op:operator pos:line="1375" pos:column="58">!=</op:operator> <name pos:line="1375" pos:column="61">xOffset</name><op:operator pos:line="1375" pos:column="68">)</op:operator></expr>)</condition><then pos:line="1375" pos:column="70"> <block pos:line="1375" pos:column="71">{
		<if pos:line="1376" pos:column="17">if <condition pos:line="1376" pos:column="20">(<expr><name><name pos:line="1376" pos:column="21">newXY</name><op:operator pos:line="1376" pos:column="26">.</op:operator><name pos:line="1376" pos:column="27">topLine</name></name> <op:operator pos:line="1376" pos:column="35">!=</op:operator> <name pos:line="1376" pos:column="38">topLine</name></expr>)</condition><then pos:line="1376" pos:column="46"> <block pos:line="1376" pos:column="47">{
			<expr_stmt><expr><call><name pos:line="1377" pos:column="25">SetTopLine</name><argument_list pos:line="1377" pos:column="35">(<argument><expr><name><name pos:line="1377" pos:column="36">newXY</name><op:operator pos:line="1377" pos:column="41">.</op:operator><name pos:line="1377" pos:column="42">topLine</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1378" pos:column="25">SetVerticalScrollPos</name><argument_list pos:line="1378" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="1380" pos:column="17">if <condition pos:line="1380" pos:column="20">(<expr><name><name pos:line="1380" pos:column="21">newXY</name><op:operator pos:line="1380" pos:column="26">.</op:operator><name pos:line="1380" pos:column="27">xOffset</name></name> <op:operator pos:line="1380" pos:column="35">!=</op:operator> <name pos:line="1380" pos:column="38">xOffset</name></expr>)</condition><then pos:line="1380" pos:column="46"> <block pos:line="1380" pos:column="47">{
			<expr_stmt><expr><name pos:line="1381" pos:column="25">xOffset</name> <op:operator pos:line="1381" pos:column="33">=</op:operator> <name><name pos:line="1381" pos:column="35">newXY</name><op:operator pos:line="1381" pos:column="40">.</op:operator><name pos:line="1381" pos:column="41">xOffset</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1382" pos:column="25">ContainerNeedsUpdate</name><argument_list pos:line="1382" pos:column="45">(<argument><expr><name pos:line="1382" pos:column="46">SC_UPDATE_H_SCROLL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1383" pos:column="25">if <condition pos:line="1383" pos:column="28">(<expr><name><name pos:line="1383" pos:column="29">newXY</name><op:operator pos:line="1383" pos:column="34">.</op:operator><name pos:line="1383" pos:column="35">xOffset</name></name> <op:operator pos:line="1383" pos:column="43">&gt;</op:operator> <lit:literal type="number" pos:line="1383" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="1383" pos:column="47"> <block pos:line="1383" pos:column="48">{
				<decl_stmt><decl><type><name pos:line="1384" pos:column="33">PRectangle</name></type> <name pos:line="1384" pos:column="44">rcText</name> <init pos:line="1384" pos:column="51">= <expr><call><name pos:line="1384" pos:column="53">GetTextRectangle</name><argument_list pos:line="1384" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1385" pos:column="33">if <condition pos:line="1385" pos:column="36">(<expr><name pos:line="1385" pos:column="37">horizontalScrollBarVisible</name> <op:operator pos:line="1385" pos:column="64">&amp;&amp;</op:operator>
					<call><name><name pos:line="1386" pos:column="41">rcText</name><op:operator pos:line="1386" pos:column="47">.</op:operator><name pos:line="1386" pos:column="48">Width</name></name><argument_list pos:line="1386" pos:column="53">()</argument_list></call> <op:operator pos:line="1386" pos:column="56">+</op:operator> <name pos:line="1386" pos:column="58">xOffset</name> <op:operator pos:line="1386" pos:column="66">&gt;</op:operator> <name pos:line="1386" pos:column="68">scrollWidth</name></expr>)</condition><then pos:line="1386" pos:column="80"> <block pos:line="1386" pos:column="81">{
					<expr_stmt><expr><name pos:line="1387" pos:column="41">scrollWidth</name> <op:operator pos:line="1387" pos:column="53">=</op:operator> <name pos:line="1387" pos:column="55">xOffset</name> <op:operator pos:line="1387" pos:column="63">+</op:operator> <call><name><name pos:line="1387" pos:column="65">rcText</name><op:operator pos:line="1387" pos:column="71">.</op:operator><name pos:line="1387" pos:column="72">Width</name></name><argument_list pos:line="1387" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1388" pos:column="41">SetScrollBars</name><argument_list pos:line="1388" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<expr_stmt><expr><call><name pos:line="1391" pos:column="25">SetHorizontalScrollPos</name><argument_list pos:line="1391" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="1393" pos:column="17">Redraw</name><argument_list pos:line="1393" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1394" pos:column="17">UpdateSystemCaret</name><argument_list pos:line="1394" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1398" pos:column="1">void</name></type> <name><name pos:line="1398" pos:column="6">Editor</name><op:operator pos:line="1398" pos:column="12">::</op:operator><name pos:line="1398" pos:column="14">EnsureCaretVisible</name></name><parameter_list pos:line="1398" pos:column="32">(<param><decl><type><name pos:line="1398" pos:column="33">bool</name></type> <name pos:line="1398" pos:column="38">useMargin</name></decl></param>, <param><decl><type><name pos:line="1398" pos:column="49">bool</name></type> <name pos:line="1398" pos:column="54">vert</name></decl></param>, <param><decl><type><name pos:line="1398" pos:column="60">bool</name></type> <name pos:line="1398" pos:column="65">horiz</name></decl></param>)</parameter_list> <block pos:line="1398" pos:column="72">{
	<expr_stmt><expr><call><name pos:line="1399" pos:column="9">SetXYScroll</name><argument_list pos:line="1399" pos:column="20">(<argument><expr><call><name pos:line="1399" pos:column="21">XYScrollToMakeVisible</name><argument_list pos:line="1399" pos:column="42">(<argument><expr><name pos:line="1399" pos:column="43">useMargin</name></expr></argument>, <argument><expr><name pos:line="1399" pos:column="54">vert</name></expr></argument>, <argument><expr><name pos:line="1399" pos:column="60">horiz</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1402" pos:column="1">void</name></type> <name><name pos:line="1402" pos:column="6">Editor</name><op:operator pos:line="1402" pos:column="12">::</op:operator><name pos:line="1402" pos:column="14">ShowCaretAtCurrentPosition</name></name><parameter_list pos:line="1402" pos:column="40">()</parameter_list> <block pos:line="1402" pos:column="43">{
	<if pos:line="1403" pos:column="9">if <condition pos:line="1403" pos:column="12">(<expr><name pos:line="1403" pos:column="13">hasFocus</name></expr>)</condition><then pos:line="1403" pos:column="22"> <block pos:line="1403" pos:column="23">{
		<expr_stmt><expr><name><name pos:line="1404" pos:column="17">caret</name><op:operator pos:line="1404" pos:column="22">.</op:operator><name pos:line="1404" pos:column="23">active</name></name> <op:operator pos:line="1404" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="1404" pos:column="32">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1405" pos:column="17">caret</name><op:operator pos:line="1405" pos:column="22">.</op:operator><name pos:line="1405" pos:column="23">on</name></name> <op:operator pos:line="1405" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="1405" pos:column="28">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1406" pos:column="17">SetTicking</name><argument_list pos:line="1406" pos:column="27">(<argument><expr><lit:literal type="boolean" pos:line="1406" pos:column="28">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="1407" pos:column="11">else <block pos:line="1407" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="1408" pos:column="17">caret</name><op:operator pos:line="1408" pos:column="22">.</op:operator><name pos:line="1408" pos:column="23">active</name></name> <op:operator pos:line="1408" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="1408" pos:column="32">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1409" pos:column="17">caret</name><op:operator pos:line="1409" pos:column="22">.</op:operator><name pos:line="1409" pos:column="23">on</name></name> <op:operator pos:line="1409" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="1409" pos:column="28">false</lit:literal></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name pos:line="1411" pos:column="9">InvalidateCaret</name><argument_list pos:line="1411" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1414" pos:column="1">void</name></type> <name><name pos:line="1414" pos:column="6">Editor</name><op:operator pos:line="1414" pos:column="12">::</op:operator><name pos:line="1414" pos:column="14">DropCaret</name></name><parameter_list pos:line="1414" pos:column="23">()</parameter_list> <block pos:line="1414" pos:column="26">{
	<expr_stmt><expr><name><name pos:line="1415" pos:column="9">caret</name><op:operator pos:line="1415" pos:column="14">.</op:operator><name pos:line="1415" pos:column="15">active</name></name> <op:operator pos:line="1415" pos:column="22">=</op:operator> <lit:literal type="boolean" pos:line="1415" pos:column="24">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1416" pos:column="9">InvalidateCaret</name><argument_list pos:line="1416" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1419" pos:column="1">void</name></type> <name><name pos:line="1419" pos:column="6">Editor</name><op:operator pos:line="1419" pos:column="12">::</op:operator><name pos:line="1419" pos:column="14">InvalidateCaret</name></name><parameter_list pos:line="1419" pos:column="29">()</parameter_list> <block pos:line="1419" pos:column="32">{
	<if pos:line="1420" pos:column="9">if <condition pos:line="1420" pos:column="12">(<expr><call><name><name pos:line="1420" pos:column="13">posDrag</name><op:operator pos:line="1420" pos:column="20">.</op:operator><name pos:line="1420" pos:column="21">IsValid</name></name><argument_list pos:line="1420" pos:column="28">()</argument_list></call></expr>)</condition><then pos:line="1420" pos:column="31"> <block pos:line="1420" pos:column="32">{
		<expr_stmt><expr><call><name pos:line="1421" pos:column="17">InvalidateRange</name><argument_list pos:line="1421" pos:column="32">(<argument><expr><call><name><name pos:line="1421" pos:column="33">posDrag</name><op:operator pos:line="1421" pos:column="40">.</op:operator><name pos:line="1421" pos:column="41">Position</name></name><argument_list pos:line="1421" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1421" pos:column="53">posDrag</name><op:operator pos:line="1421" pos:column="60">.</op:operator><name pos:line="1421" pos:column="61">Position</name></name><argument_list pos:line="1421" pos:column="69">()</argument_list></call> <op:operator pos:line="1421" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="1421" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="1422" pos:column="11">else <block pos:line="1422" pos:column="16">{
		<for pos:line="1423" pos:column="17">for (<init><decl><type><name pos:line="1423" pos:column="22">size_t</name></type> <name pos:line="1423" pos:column="29">r</name><init pos:line="1423" pos:column="30">=<expr><lit:literal type="number" pos:line="1423" pos:column="31">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1423" pos:column="34">r</name><op:operator pos:line="1423" pos:column="35">&lt;</op:operator><call><name><name pos:line="1423" pos:column="36">sel</name><op:operator pos:line="1423" pos:column="39">.</op:operator><name pos:line="1423" pos:column="40">Count</name></name><argument_list pos:line="1423" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="1423" pos:column="49">r</name><op:operator pos:line="1423" pos:column="50">++</op:operator></expr></incr>) <block pos:line="1423" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="1424" pos:column="25">InvalidateRange</name><argument_list pos:line="1424" pos:column="40">(<argument><expr><call><name><name pos:line="1424" pos:column="41">sel</name><op:operator pos:line="1424" pos:column="44">.</op:operator><name pos:line="1424" pos:column="45">Range</name></name><argument_list pos:line="1424" pos:column="50">(<argument><expr><name pos:line="1424" pos:column="51">r</name></expr></argument>)</argument_list></call><op:operator pos:line="1424" pos:column="53">.</op:operator><call><name><name pos:line="1424" pos:column="54">caret</name><op:operator pos:line="1424" pos:column="59">.</op:operator><name pos:line="1424" pos:column="60">Position</name></name><argument_list pos:line="1424" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1424" pos:column="72">sel</name><op:operator pos:line="1424" pos:column="75">.</op:operator><name pos:line="1424" pos:column="76">Range</name></name><argument_list pos:line="1424" pos:column="81">(<argument><expr><name pos:line="1424" pos:column="82">r</name></expr></argument>)</argument_list></call><op:operator pos:line="1424" pos:column="84">.</op:operator><call><name><name pos:line="1424" pos:column="85">caret</name><op:operator pos:line="1424" pos:column="90">.</op:operator><name pos:line="1424" pos:column="91">Position</name></name><argument_list pos:line="1424" pos:column="99">()</argument_list></call> <op:operator pos:line="1424" pos:column="102">+</op:operator> <lit:literal type="number" pos:line="1424" pos:column="104">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></else></if>
	<expr_stmt><expr><call><name pos:line="1427" pos:column="9">UpdateSystemCaret</name><argument_list pos:line="1427" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1430" pos:column="1">void</name></type> <name><name pos:line="1430" pos:column="6">Editor</name><op:operator pos:line="1430" pos:column="12">::</op:operator><name pos:line="1430" pos:column="14">UpdateSystemCaret</name></name><parameter_list pos:line="1430" pos:column="31">()</parameter_list> <block pos:line="1430" pos:column="34">{
}</block></function>

<function><type><name pos:line="1433" pos:column="1">void</name></type> <name><name pos:line="1433" pos:column="6">Editor</name><op:operator pos:line="1433" pos:column="12">::</op:operator><name pos:line="1433" pos:column="14">NeedWrapping</name></name><parameter_list pos:line="1433" pos:column="26">(<param><decl><type><name pos:line="1433" pos:column="27">int</name></type> <name pos:line="1433" pos:column="31">docLineStart</name></decl></param>, <param><decl><type><name pos:line="1433" pos:column="45">int</name></type> <name pos:line="1433" pos:column="49">docLineEnd</name></decl></param>)</parameter_list> <block pos:line="1433" pos:column="61">{
	<expr_stmt><expr><name pos:line="1434" pos:column="9">docLineStart</name> <op:operator pos:line="1434" pos:column="22">=</op:operator> <call><name><name pos:line="1434" pos:column="24">Platform</name><op:operator pos:line="1434" pos:column="32">::</op:operator><name pos:line="1434" pos:column="34">Clamp</name></name><argument_list pos:line="1434" pos:column="39">(<argument><expr><name pos:line="1434" pos:column="40">docLineStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1434" pos:column="54">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1434" pos:column="57">pdoc</name><op:operator pos:line="1434" pos:column="61">-&gt;</op:operator><name pos:line="1434" pos:column="63">LinesTotal</name></name><argument_list pos:line="1434" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1435" pos:column="9">if <condition pos:line="1435" pos:column="12">(<expr><name pos:line="1435" pos:column="13">wrapStart</name> <op:operator pos:line="1435" pos:column="23">&gt;</op:operator> <name pos:line="1435" pos:column="25">docLineStart</name></expr>)</condition><then pos:line="1435" pos:column="38"> <block pos:line="1435" pos:column="39">{
		<expr_stmt><expr><name pos:line="1436" pos:column="17">wrapStart</name> <op:operator pos:line="1436" pos:column="27">=</op:operator> <name pos:line="1436" pos:column="29">docLineStart</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1437" pos:column="17">llc</name><op:operator pos:line="1437" pos:column="20">.</op:operator><name pos:line="1437" pos:column="21">Invalidate</name></name><argument_list pos:line="1437" pos:column="31">(<argument><expr><name><name pos:line="1437" pos:column="32">LineLayout</name><op:operator pos:line="1437" pos:column="42">::</op:operator><name pos:line="1437" pos:column="44">llPositions</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="1439" pos:column="9">if <condition pos:line="1439" pos:column="12">(<expr><name pos:line="1439" pos:column="13">wrapEnd</name> <op:operator pos:line="1439" pos:column="21">&lt;</op:operator> <name pos:line="1439" pos:column="23">docLineEnd</name></expr>)</condition><then pos:line="1439" pos:column="34"> <block pos:line="1439" pos:column="35">{
		<expr_stmt><expr><name pos:line="1440" pos:column="17">wrapEnd</name> <op:operator pos:line="1440" pos:column="25">=</op:operator> <name pos:line="1440" pos:column="27">docLineEnd</name></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name pos:line="1442" pos:column="9">wrapEnd</name> <op:operator pos:line="1442" pos:column="17">=</op:operator> <call><name><name pos:line="1442" pos:column="19">Platform</name><op:operator pos:line="1442" pos:column="27">::</op:operator><name pos:line="1442" pos:column="29">Clamp</name></name><argument_list pos:line="1442" pos:column="34">(<argument><expr><name pos:line="1442" pos:column="35">wrapEnd</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1442" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1442" pos:column="47">pdoc</name><op:operator pos:line="1442" pos:column="51">-&gt;</op:operator><name pos:line="1442" pos:column="53">LinesTotal</name></name><argument_list pos:line="1442" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="1443" pos:column="9">// Wrap lines during idle.</comment>
	<if pos:line="1444" pos:column="9">if <condition pos:line="1444" pos:column="12">(<expr><op:operator pos:line="1444" pos:column="13">(</op:operator><name pos:line="1444" pos:column="14">wrapState</name> <op:operator pos:line="1444" pos:column="24">!=</op:operator> <name pos:line="1444" pos:column="27">eWrapNone</name><op:operator pos:line="1444" pos:column="36">)</op:operator> <op:operator pos:line="1444" pos:column="38">&amp;&amp;</op:operator> <op:operator pos:line="1444" pos:column="41">(</op:operator><name pos:line="1444" pos:column="42">wrapEnd</name> <op:operator pos:line="1444" pos:column="50">!=</op:operator> <name pos:line="1444" pos:column="53">wrapStart</name><op:operator pos:line="1444" pos:column="62">)</op:operator></expr>)</condition><then pos:line="1444" pos:column="64"> <block pos:line="1444" pos:column="65">{
		<expr_stmt><expr><call><name pos:line="1445" pos:column="17">SetIdle</name><argument_list pos:line="1445" pos:column="24">(<argument><expr><lit:literal type="boolean" pos:line="1445" pos:column="25">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1449" pos:column="1">bool</name></type> <name><name pos:line="1449" pos:column="6">Editor</name><op:operator pos:line="1449" pos:column="12">::</op:operator><name pos:line="1449" pos:column="14">WrapOneLine</name></name><parameter_list pos:line="1449" pos:column="25">(<param><decl><type><name pos:line="1449" pos:column="26">Surface</name> <type:modifier pos:line="1449" pos:column="34">*</type:modifier></type><name pos:line="1449" pos:column="35">surface</name></decl></param>, <param><decl><type><name pos:line="1449" pos:column="44">int</name></type> <name pos:line="1449" pos:column="48">lineToWrap</name></decl></param>)</parameter_list> <block pos:line="1449" pos:column="60">{
	<decl_stmt><decl><type><name pos:line="1450" pos:column="9">AutoLineLayout</name></type> <name pos:line="1450" pos:column="24">ll</name><argument_list pos:line="1450" pos:column="26">(<argument><expr><name pos:line="1450" pos:column="27">llc</name></expr></argument>, <argument><expr><call><name pos:line="1450" pos:column="32">RetrieveLineLayout</name><argument_list pos:line="1450" pos:column="50">(<argument><expr><name pos:line="1450" pos:column="51">lineToWrap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1451" pos:column="9">int</name></type> <name pos:line="1451" pos:column="13">linesWrapped</name> <init pos:line="1451" pos:column="26">= <expr><lit:literal type="number" pos:line="1451" pos:column="28">1</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="1452" pos:column="9">if <condition pos:line="1452" pos:column="12">(<expr><name pos:line="1452" pos:column="13">ll</name></expr>)</condition><then pos:line="1452" pos:column="16"> <block pos:line="1452" pos:column="17">{
		<expr_stmt><expr><call><name pos:line="1453" pos:column="17">LayoutLine</name><argument_list pos:line="1453" pos:column="27">(<argument><expr><name pos:line="1453" pos:column="28">lineToWrap</name></expr></argument>, <argument><expr><name pos:line="1453" pos:column="40">surface</name></expr></argument>, <argument><expr><name pos:line="1453" pos:column="49">vs</name></expr></argument>, <argument><expr><name pos:line="1453" pos:column="53">ll</name></expr></argument>, <argument><expr><name pos:line="1453" pos:column="57">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1454" pos:column="17">linesWrapped</name> <op:operator pos:line="1454" pos:column="30">=</op:operator> <name><name pos:line="1454" pos:column="32">ll</name><op:operator pos:line="1454" pos:column="34">-&gt;</op:operator><name pos:line="1454" pos:column="36">lines</name></name></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="1456" pos:column="9">return <expr><call><name><name pos:line="1456" pos:column="16">cs</name><op:operator pos:line="1456" pos:column="18">.</op:operator><name pos:line="1456" pos:column="19">SetHeight</name></name><argument_list pos:line="1456" pos:column="28">(<argument><expr><name pos:line="1456" pos:column="29">lineToWrap</name></expr></argument>, <argument><expr><name pos:line="1456" pos:column="41">linesWrapped</name> <op:operator pos:line="1456" pos:column="54">+</op:operator>
		<op:operator pos:line="1457" pos:column="17">(</op:operator><name><name pos:line="1457" pos:column="18">vs</name><op:operator pos:line="1457" pos:column="20">.</op:operator><name pos:line="1457" pos:column="21">annotationVisible</name></name> <op:operator pos:line="1457" pos:column="39">?</op:operator> <call><name><name pos:line="1457" pos:column="41">pdoc</name><op:operator pos:line="1457" pos:column="45">-&gt;</op:operator><name pos:line="1457" pos:column="47">AnnotationLines</name></name><argument_list pos:line="1457" pos:column="62">(<argument><expr><name pos:line="1457" pos:column="63">lineToWrap</name></expr></argument>)</argument_list></call> <op:operator pos:line="1457" pos:column="75">:</op:operator> <lit:literal type="number" pos:line="1457" pos:column="77">0</lit:literal><op:operator pos:line="1457" pos:column="78">)</op:operator></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<comment type="line" pos:line="1460" pos:column="1">// Check if wrapping needed and perform any needed wrapping.</comment>
<comment type="line" pos:line="1461" pos:column="1">// fullwrap: if true, all lines which need wrapping will be done,</comment>
<comment type="line" pos:line="1462" pos:column="1">//           in this single call.</comment>
<comment type="line" pos:line="1463" pos:column="1">// priorityWrapLineStart: If greater than or equal to zero, all lines starting from</comment>
<comment type="line" pos:line="1464" pos:column="1">//           here to 1 page + 100 lines past will be wrapped (even if there are</comment>
<comment type="line" pos:line="1465" pos:column="1">//           more lines under wrapping process in idle).</comment>
<comment type="line" pos:line="1466" pos:column="1">// If it is neither fullwrap, nor priorityWrap, then 1 page + 100 lines will be</comment>
<comment type="line" pos:line="1467" pos:column="1">// wrapped, if there are any wrapping going on in idle. (Generally this</comment>
<comment type="line" pos:line="1468" pos:column="1">// condition is called only from idler).</comment>
<comment type="line" pos:line="1469" pos:column="1">// Return true if wrapping occurred.</comment>
<function><type><name pos:line="1470" pos:column="1">bool</name></type> <name><name pos:line="1470" pos:column="6">Editor</name><op:operator pos:line="1470" pos:column="12">::</op:operator><name pos:line="1470" pos:column="14">WrapLines</name></name><parameter_list pos:line="1470" pos:column="23">(<param><decl><type><name pos:line="1470" pos:column="24">bool</name></type> <name pos:line="1470" pos:column="29">fullWrap</name></decl></param>, <param><decl><type><name pos:line="1470" pos:column="39">int</name></type> <name pos:line="1470" pos:column="43">priorityWrapLineStart</name></decl></param>)</parameter_list> <block pos:line="1470" pos:column="66">{
	<comment type="line" pos:line="1471" pos:column="9">// If there are any pending wraps, do them during idle if possible.</comment>
	<decl_stmt><decl><type><name pos:line="1472" pos:column="9">int</name></type> <name pos:line="1472" pos:column="13">linesInOneCall</name> <init pos:line="1472" pos:column="28">= <expr><call><name pos:line="1472" pos:column="30">LinesOnScreen</name><argument_list pos:line="1472" pos:column="43">()</argument_list></call> <op:operator pos:line="1472" pos:column="46">+</op:operator> <lit:literal type="number" pos:line="1472" pos:column="48">100</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="1473" pos:column="9">if <condition pos:line="1473" pos:column="12">(<expr><name pos:line="1473" pos:column="13">wrapState</name> <op:operator pos:line="1473" pos:column="23">!=</op:operator> <name pos:line="1473" pos:column="26">eWrapNone</name></expr>)</condition><then pos:line="1473" pos:column="36"> <block pos:line="1473" pos:column="37">{
		<if pos:line="1474" pos:column="17">if <condition pos:line="1474" pos:column="20">(<expr><name pos:line="1474" pos:column="21">wrapStart</name> <op:operator pos:line="1474" pos:column="31">&lt;</op:operator> <name pos:line="1474" pos:column="33">wrapEnd</name></expr>)</condition><then pos:line="1474" pos:column="41"> <block pos:line="1474" pos:column="42">{
			<if pos:line="1475" pos:column="25">if <condition pos:line="1475" pos:column="28">(<expr><op:operator pos:line="1475" pos:column="29">!</op:operator><call><name pos:line="1475" pos:column="30">SetIdle</name><argument_list pos:line="1475" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="1475" pos:column="38">true</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1475" pos:column="44"> <block pos:line="1475" pos:column="45">{
				<comment type="line" pos:line="1476" pos:column="33">// Idle processing not supported so full wrap required.</comment>
				<expr_stmt><expr><name pos:line="1477" pos:column="33">fullWrap</name> <op:operator pos:line="1477" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="1477" pos:column="44">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<if pos:line="1480" pos:column="17">if <condition pos:line="1480" pos:column="20">(<expr><op:operator pos:line="1480" pos:column="21">!</op:operator><name pos:line="1480" pos:column="22">fullWrap</name> <op:operator pos:line="1480" pos:column="31">&amp;&amp;</op:operator> <name pos:line="1480" pos:column="34">priorityWrapLineStart</name> <op:operator pos:line="1480" pos:column="56">&gt;=</op:operator> <lit:literal type="number" pos:line="1480" pos:column="59">0</lit:literal> <op:operator pos:line="1480" pos:column="61">&amp;&amp;</op:operator>
		        <comment type="line" pos:line="1481" pos:column="25">// .. and if the paint window is outside pending wraps</comment>
		        <op:operator pos:line="1482" pos:column="25">(</op:operator><op:operator pos:line="1482" pos:column="26">(</op:operator><op:operator pos:line="1482" pos:column="27">(</op:operator><name pos:line="1482" pos:column="28">priorityWrapLineStart</name> <op:operator pos:line="1482" pos:column="50">+</op:operator> <name pos:line="1482" pos:column="52">linesInOneCall</name><op:operator pos:line="1482" pos:column="66">)</op:operator> <op:operator pos:line="1482" pos:column="68">&lt;</op:operator> <name pos:line="1482" pos:column="70">wrapStart</name><op:operator pos:line="1482" pos:column="79">)</op:operator> <op:operator pos:line="1482" pos:column="81">||</op:operator>
		         <op:operator pos:line="1483" pos:column="26">(</op:operator><name pos:line="1483" pos:column="27">priorityWrapLineStart</name> <op:operator pos:line="1483" pos:column="49">&gt;</op:operator> <name pos:line="1483" pos:column="51">wrapEnd</name><op:operator pos:line="1483" pos:column="58">)</op:operator><op:operator pos:line="1483" pos:column="59">)</op:operator></expr>)</condition><then pos:line="1483" pos:column="61"> <block pos:line="1483" pos:column="62">{
			<comment type="line" pos:line="1484" pos:column="25">// No priority wrap pending</comment>
			<return pos:line="1485" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1485" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="1488" pos:column="9">int</name></type> <name pos:line="1488" pos:column="13">goodTopLine</name> <init pos:line="1488" pos:column="25">= <expr><name pos:line="1488" pos:column="27">topLine</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1489" pos:column="9">bool</name></type> <name pos:line="1489" pos:column="14">wrapOccurred</name> <init pos:line="1489" pos:column="27">= <expr><lit:literal type="boolean" pos:line="1489" pos:column="29">false</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="1490" pos:column="9">if <condition pos:line="1490" pos:column="12">(<expr><name pos:line="1490" pos:column="13">wrapStart</name> <op:operator pos:line="1490" pos:column="23">&lt;=</op:operator> <call><name><name pos:line="1490" pos:column="26">pdoc</name><op:operator pos:line="1490" pos:column="30">-&gt;</op:operator><name pos:line="1490" pos:column="32">LinesTotal</name></name><argument_list pos:line="1490" pos:column="42">()</argument_list></call></expr>)</condition><then pos:line="1490" pos:column="45"> <block pos:line="1490" pos:column="46">{
		<if pos:line="1491" pos:column="17">if <condition pos:line="1491" pos:column="20">(<expr><name pos:line="1491" pos:column="21">wrapState</name> <op:operator pos:line="1491" pos:column="31">==</op:operator> <name pos:line="1491" pos:column="34">eWrapNone</name></expr>)</condition><then pos:line="1491" pos:column="44"> <block pos:line="1491" pos:column="45">{
			<if pos:line="1492" pos:column="25">if <condition pos:line="1492" pos:column="28">(<expr><name pos:line="1492" pos:column="29">wrapWidth</name> <op:operator pos:line="1492" pos:column="39">!=</op:operator> <name><name pos:line="1492" pos:column="42">LineLayout</name><op:operator pos:line="1492" pos:column="52">::</op:operator><name pos:line="1492" pos:column="54">wrapWidthInfinite</name></name></expr>)</condition><then pos:line="1492" pos:column="72"> <block pos:line="1492" pos:column="73">{
				<expr_stmt><expr><name pos:line="1493" pos:column="33">wrapWidth</name> <op:operator pos:line="1493" pos:column="43">=</op:operator> <name><name pos:line="1493" pos:column="45">LineLayout</name><op:operator pos:line="1493" pos:column="55">::</op:operator><name pos:line="1493" pos:column="57">wrapWidthInfinite</name></name></expr>;</expr_stmt>
				<for pos:line="1494" pos:column="33">for (<init><decl><type><name pos:line="1494" pos:column="38">int</name></type> <name pos:line="1494" pos:column="42">lineDoc</name> <init pos:line="1494" pos:column="50">= <expr><lit:literal type="number" pos:line="1494" pos:column="52">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1494" pos:column="55">lineDoc</name> <op:operator pos:line="1494" pos:column="63">&lt;</op:operator> <call><name><name pos:line="1494" pos:column="65">pdoc</name><op:operator pos:line="1494" pos:column="69">-&gt;</op:operator><name pos:line="1494" pos:column="71">LinesTotal</name></name><argument_list pos:line="1494" pos:column="81">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="1494" pos:column="85">lineDoc</name><op:operator pos:line="1494" pos:column="92">++</op:operator></expr></incr>) <block pos:line="1494" pos:column="96">{
					<expr_stmt><expr><call><name><name pos:line="1495" pos:column="41">cs</name><op:operator pos:line="1495" pos:column="43">.</op:operator><name pos:line="1495" pos:column="44">SetHeight</name></name><argument_list pos:line="1495" pos:column="53">(<argument><expr><name pos:line="1495" pos:column="54">lineDoc</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1495" pos:column="63">1</lit:literal> <op:operator pos:line="1495" pos:column="65">+</op:operator>
						<op:operator pos:line="1496" pos:column="49">(</op:operator><name><name pos:line="1496" pos:column="50">vs</name><op:operator pos:line="1496" pos:column="52">.</op:operator><name pos:line="1496" pos:column="53">annotationVisible</name></name> <op:operator pos:line="1496" pos:column="71">?</op:operator> <call><name><name pos:line="1496" pos:column="73">pdoc</name><op:operator pos:line="1496" pos:column="77">-&gt;</op:operator><name pos:line="1496" pos:column="79">AnnotationLines</name></name><argument_list pos:line="1496" pos:column="94">(<argument><expr><name pos:line="1496" pos:column="95">lineDoc</name></expr></argument>)</argument_list></call> <op:operator pos:line="1496" pos:column="104">:</op:operator> <lit:literal type="number" pos:line="1496" pos:column="106">0</lit:literal><op:operator pos:line="1496" pos:column="107">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				<expr_stmt><expr><name pos:line="1498" pos:column="33">wrapOccurred</name> <op:operator pos:line="1498" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="1498" pos:column="48">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="1500" pos:column="25">wrapStart</name> <op:operator pos:line="1500" pos:column="35">=</op:operator> <name pos:line="1500" pos:column="37">wrapLineLarge</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1501" pos:column="25">wrapEnd</name> <op:operator pos:line="1501" pos:column="33">=</op:operator> <name pos:line="1501" pos:column="35">wrapLineLarge</name></expr>;</expr_stmt>
		}</block></then> <else pos:line="1502" pos:column="19">else <block pos:line="1502" pos:column="24">{
			<if pos:line="1503" pos:column="25">if <condition pos:line="1503" pos:column="28">(<expr><name pos:line="1503" pos:column="29">wrapEnd</name> <op:operator pos:line="1503" pos:column="37">&gt;=</op:operator> <call><name><name pos:line="1503" pos:column="40">pdoc</name><op:operator pos:line="1503" pos:column="44">-&gt;</op:operator><name pos:line="1503" pos:column="46">LinesTotal</name></name><argument_list pos:line="1503" pos:column="56">()</argument_list></call></expr>)</condition><then pos:line="1503" pos:column="59">
				<expr_stmt><expr><name pos:line="1504" pos:column="33">wrapEnd</name> <op:operator pos:line="1504" pos:column="41">=</op:operator> <call><name><name pos:line="1504" pos:column="43">pdoc</name><op:operator pos:line="1504" pos:column="47">-&gt;</op:operator><name pos:line="1504" pos:column="49">LinesTotal</name></name><argument_list pos:line="1504" pos:column="59">()</argument_list></call></expr>;</expr_stmt></then></if>
			<comment type="line" pos:line="1505" pos:column="25">//ElapsedTime et;</comment>
			<decl_stmt><decl><type><name pos:line="1506" pos:column="25">int</name></type> <name pos:line="1506" pos:column="29">lineDocTop</name> <init pos:line="1506" pos:column="40">= <expr><call><name><name pos:line="1506" pos:column="42">cs</name><op:operator pos:line="1506" pos:column="44">.</op:operator><name pos:line="1506" pos:column="45">DocFromDisplay</name></name><argument_list pos:line="1506" pos:column="59">(<argument><expr><name pos:line="1506" pos:column="60">topLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1507" pos:column="25">int</name></type> <name pos:line="1507" pos:column="29">subLineTop</name> <init pos:line="1507" pos:column="40">= <expr><name pos:line="1507" pos:column="42">topLine</name> <op:operator pos:line="1507" pos:column="50">-</op:operator> <call><name><name pos:line="1507" pos:column="52">cs</name><op:operator pos:line="1507" pos:column="54">.</op:operator><name pos:line="1507" pos:column="55">DisplayFromDoc</name></name><argument_list pos:line="1507" pos:column="69">(<argument><expr><name pos:line="1507" pos:column="70">lineDocTop</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1508" pos:column="25">PRectangle</name></type> <name pos:line="1508" pos:column="36">rcTextArea</name> <init pos:line="1508" pos:column="47">= <expr><call><name pos:line="1508" pos:column="49">GetClientRectangle</name><argument_list pos:line="1508" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1509" pos:column="25">rcTextArea</name><op:operator pos:line="1509" pos:column="35">.</op:operator><name pos:line="1509" pos:column="36">left</name></name> <op:operator pos:line="1509" pos:column="41">=</op:operator> <name><name pos:line="1509" pos:column="43">vs</name><op:operator pos:line="1509" pos:column="45">.</op:operator><name pos:line="1509" pos:column="46">fixedColumnWidth</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1510" pos:column="25">rcTextArea</name><op:operator pos:line="1510" pos:column="35">.</op:operator><name pos:line="1510" pos:column="36">right</name></name> <op:operator pos:line="1510" pos:column="42">-=</op:operator> <name><name pos:line="1510" pos:column="45">vs</name><op:operator pos:line="1510" pos:column="47">.</op:operator><name pos:line="1510" pos:column="48">rightMarginWidth</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1511" pos:column="25">wrapWidth</name> <op:operator pos:line="1511" pos:column="35">=</op:operator> <call><name><name pos:line="1511" pos:column="37">rcTextArea</name><op:operator pos:line="1511" pos:column="47">.</op:operator><name pos:line="1511" pos:column="48">Width</name></name><argument_list pos:line="1511" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1512" pos:column="25">RefreshStyleData</name><argument_list pos:line="1512" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			<function_decl><type><name pos:line="1513" pos:column="25">AutoSurface</name></type> <name pos:line="1513" pos:column="37">surface</name><parameter_list pos:line="1513" pos:column="44">(<param><decl><type><name pos:line="1513" pos:column="45">this</name></type></decl></param>)</parameter_list>;</function_decl>
			<if pos:line="1514" pos:column="25">if <condition pos:line="1514" pos:column="28">(<expr><name pos:line="1514" pos:column="29">surface</name></expr>)</condition><then pos:line="1514" pos:column="37"> <block pos:line="1514" pos:column="38">{
				<decl_stmt><decl><type><name pos:line="1515" pos:column="33">bool</name></type> <name pos:line="1515" pos:column="38">priorityWrap</name> <init pos:line="1515" pos:column="51">= <expr><lit:literal type="boolean" pos:line="1515" pos:column="53">false</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1516" pos:column="33">int</name></type> <name pos:line="1516" pos:column="37">lastLineToWrap</name> <init pos:line="1516" pos:column="52">= <expr><name pos:line="1516" pos:column="54">wrapEnd</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1517" pos:column="33">int</name></type> <name pos:line="1517" pos:column="37">lineToWrap</name> <init pos:line="1517" pos:column="48">= <expr><name pos:line="1517" pos:column="50">wrapStart</name></expr></init></decl>;</decl_stmt>
				<if pos:line="1518" pos:column="33">if <condition pos:line="1518" pos:column="36">(<expr><op:operator pos:line="1518" pos:column="37">!</op:operator><name pos:line="1518" pos:column="38">fullWrap</name></expr>)</condition><then pos:line="1518" pos:column="47"> <block pos:line="1518" pos:column="48">{
					<if pos:line="1519" pos:column="41">if <condition pos:line="1519" pos:column="44">(<expr><name pos:line="1519" pos:column="45">priorityWrapLineStart</name> <op:operator pos:line="1519" pos:column="67">&gt;=</op:operator> <lit:literal type="number" pos:line="1519" pos:column="70">0</lit:literal></expr>)</condition><then pos:line="1519" pos:column="72"> <block pos:line="1519" pos:column="73">{
						<comment type="line" pos:line="1520" pos:column="49">// This is a priority wrap.</comment>
						<expr_stmt><expr><name pos:line="1521" pos:column="49">lineToWrap</name> <op:operator pos:line="1521" pos:column="60">=</op:operator> <name pos:line="1521" pos:column="62">priorityWrapLineStart</name></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="1522" pos:column="49">lastLineToWrap</name> <op:operator pos:line="1522" pos:column="64">=</op:operator> <name pos:line="1522" pos:column="66">priorityWrapLineStart</name> <op:operator pos:line="1522" pos:column="88">+</op:operator> <name pos:line="1522" pos:column="90">linesInOneCall</name></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="1523" pos:column="49">priorityWrap</name> <op:operator pos:line="1523" pos:column="62">=</op:operator> <lit:literal type="boolean" pos:line="1523" pos:column="64">true</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="1524" pos:column="43">else <block pos:line="1524" pos:column="48">{
						<comment type="line" pos:line="1525" pos:column="49">// This is idle wrap.</comment>
						<expr_stmt><expr><name pos:line="1526" pos:column="49">lastLineToWrap</name> <op:operator pos:line="1526" pos:column="64">=</op:operator> <name pos:line="1526" pos:column="66">wrapStart</name> <op:operator pos:line="1526" pos:column="76">+</op:operator> <name pos:line="1526" pos:column="78">linesInOneCall</name></expr>;</expr_stmt>
					}</block></else></if>
					<if pos:line="1528" pos:column="41">if <condition pos:line="1528" pos:column="44">(<expr><name pos:line="1528" pos:column="45">lastLineToWrap</name> <op:operator pos:line="1528" pos:column="60">&gt;=</op:operator> <name pos:line="1528" pos:column="63">wrapEnd</name></expr>)</condition><then pos:line="1528" pos:column="71">
						<expr_stmt><expr><name pos:line="1529" pos:column="49">lastLineToWrap</name> <op:operator pos:line="1529" pos:column="64">=</op:operator> <name pos:line="1529" pos:column="66">wrapEnd</name></expr>;</expr_stmt></then></if>
				}</block></then></if> <comment type="line" pos:line="1530" pos:column="35">// else do a fullWrap.</comment>

				<comment type="line" pos:line="1532" pos:column="33">// Ensure all lines being wrapped are styled.</comment>
				<expr_stmt><expr><call><name><name pos:line="1533" pos:column="33">pdoc</name><op:operator pos:line="1533" pos:column="37">-&gt;</op:operator><name pos:line="1533" pos:column="39">EnsureStyledTo</name></name><argument_list pos:line="1533" pos:column="53">(<argument><expr><call><name><name pos:line="1533" pos:column="54">pdoc</name><op:operator pos:line="1533" pos:column="58">-&gt;</op:operator><name pos:line="1533" pos:column="60">LineEnd</name></name><argument_list pos:line="1533" pos:column="67">(<argument><expr><name pos:line="1533" pos:column="68">lastLineToWrap</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="1535" pos:column="33">// Platform::DebugPrintf("Wraplines: full = %d, priorityStart = %d (wrapping: %d to %d)\n", fullWrap, priorityWrapLineStart, lineToWrap, lastLineToWrap);</comment>
				<comment type="line" pos:line="1536" pos:column="33">// Platform::DebugPrintf("Pending wraps: %d to %d\n", wrapStart, wrapEnd);</comment>
				<while pos:line="1537" pos:column="33">while <condition pos:line="1537" pos:column="39">(<expr><name pos:line="1537" pos:column="40">lineToWrap</name> <op:operator pos:line="1537" pos:column="51">&lt;</op:operator> <name pos:line="1537" pos:column="53">lastLineToWrap</name></expr>)</condition> <block pos:line="1537" pos:column="69">{
					<if pos:line="1538" pos:column="41">if <condition pos:line="1538" pos:column="44">(<expr><call><name pos:line="1538" pos:column="45">WrapOneLine</name><argument_list pos:line="1538" pos:column="56">(<argument><expr><name pos:line="1538" pos:column="57">surface</name></expr></argument>, <argument><expr><name pos:line="1538" pos:column="66">lineToWrap</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1538" pos:column="78"> <block pos:line="1538" pos:column="79">{
						<expr_stmt><expr><name pos:line="1539" pos:column="49">wrapOccurred</name> <op:operator pos:line="1539" pos:column="62">=</op:operator> <lit:literal type="boolean" pos:line="1539" pos:column="64">true</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
					<expr_stmt><expr><name pos:line="1541" pos:column="41">lineToWrap</name><op:operator pos:line="1541" pos:column="51">++</op:operator></expr>;</expr_stmt>
				}</block></while>
				<if pos:line="1543" pos:column="33">if <condition pos:line="1543" pos:column="36">(<expr><op:operator pos:line="1543" pos:column="37">!</op:operator><name pos:line="1543" pos:column="38">priorityWrap</name></expr>)</condition><then pos:line="1543" pos:column="51">
					<expr_stmt><expr><name pos:line="1544" pos:column="41">wrapStart</name> <op:operator pos:line="1544" pos:column="51">=</op:operator> <name pos:line="1544" pos:column="53">lineToWrap</name></expr>;</expr_stmt></then></if>
				<comment type="line" pos:line="1545" pos:column="33">// If wrapping is done, bring it to resting position</comment>
				<if pos:line="1546" pos:column="33">if <condition pos:line="1546" pos:column="36">(<expr><name pos:line="1546" pos:column="37">wrapStart</name> <op:operator pos:line="1546" pos:column="47">&gt;=</op:operator> <name pos:line="1546" pos:column="50">wrapEnd</name></expr>)</condition><then pos:line="1546" pos:column="58"> <block pos:line="1546" pos:column="59">{
					<expr_stmt><expr><name pos:line="1547" pos:column="41">wrapStart</name> <op:operator pos:line="1547" pos:column="51">=</op:operator> <name pos:line="1547" pos:column="53">wrapLineLarge</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1548" pos:column="41">wrapEnd</name> <op:operator pos:line="1548" pos:column="49">=</op:operator> <name pos:line="1548" pos:column="51">wrapLineLarge</name></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="1551" pos:column="25">goodTopLine</name> <op:operator pos:line="1551" pos:column="37">=</op:operator> <call><name><name pos:line="1551" pos:column="39">cs</name><op:operator pos:line="1551" pos:column="41">.</op:operator><name pos:line="1551" pos:column="42">DisplayFromDoc</name></name><argument_list pos:line="1551" pos:column="56">(<argument><expr><name pos:line="1551" pos:column="57">lineDocTop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1552" pos:column="25">if <condition pos:line="1552" pos:column="28">(<expr><name pos:line="1552" pos:column="29">subLineTop</name> <op:operator pos:line="1552" pos:column="40">&lt;</op:operator> <call><name><name pos:line="1552" pos:column="42">cs</name><op:operator pos:line="1552" pos:column="44">.</op:operator><name pos:line="1552" pos:column="45">GetHeight</name></name><argument_list pos:line="1552" pos:column="54">(<argument><expr><name pos:line="1552" pos:column="55">lineDocTop</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1552" pos:column="67">
				<expr_stmt><expr><name pos:line="1553" pos:column="33">goodTopLine</name> <op:operator pos:line="1553" pos:column="45">+=</op:operator> <name pos:line="1553" pos:column="48">subLineTop</name></expr>;</expr_stmt></then>
			<else pos:line="1554" pos:column="25">else
				<expr_stmt><expr><name pos:line="1555" pos:column="33">goodTopLine</name> <op:operator pos:line="1555" pos:column="45">+=</op:operator> <call><name><name pos:line="1555" pos:column="48">cs</name><op:operator pos:line="1555" pos:column="50">.</op:operator><name pos:line="1555" pos:column="51">GetHeight</name></name><argument_list pos:line="1555" pos:column="60">(<argument><expr><name pos:line="1555" pos:column="61">lineDocTop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			<comment type="line" pos:line="1556" pos:column="25">//double durWrap = et.Duration(true);</comment>
			<comment type="line" pos:line="1557" pos:column="25">//Platform::DebugPrintf("Wrap:%9.6g \n", durWrap);</comment>
		}</block></else></if>
	}</block></then></if>
	<if pos:line="1560" pos:column="9">if <condition pos:line="1560" pos:column="12">(<expr><name pos:line="1560" pos:column="13">wrapOccurred</name></expr>)</condition><then pos:line="1560" pos:column="26"> <block pos:line="1560" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="1561" pos:column="17">SetScrollBars</name><argument_list pos:line="1561" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1562" pos:column="17">SetTopLine</name><argument_list pos:line="1562" pos:column="27">(<argument><expr><call><name><name pos:line="1562" pos:column="28">Platform</name><op:operator pos:line="1562" pos:column="36">::</op:operator><name pos:line="1562" pos:column="38">Clamp</name></name><argument_list pos:line="1562" pos:column="43">(<argument><expr><name pos:line="1562" pos:column="44">goodTopLine</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1562" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="1562" pos:column="60">MaxScrollPos</name><argument_list pos:line="1562" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1563" pos:column="17">SetVerticalScrollPos</name><argument_list pos:line="1563" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="1565" pos:column="9">return <expr><name pos:line="1565" pos:column="16">wrapOccurred</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1568" pos:column="1">void</name></type> <name><name pos:line="1568" pos:column="6">Editor</name><op:operator pos:line="1568" pos:column="12">::</op:operator><name pos:line="1568" pos:column="14">LinesJoin</name></name><parameter_list pos:line="1568" pos:column="23">()</parameter_list> <block pos:line="1568" pos:column="26">{
	<if pos:line="1569" pos:column="9">if <condition pos:line="1569" pos:column="12">(<expr><op:operator pos:line="1569" pos:column="13">!</op:operator><call><name pos:line="1569" pos:column="14">RangeContainsProtected</name><argument_list pos:line="1569" pos:column="36">(<argument><expr><name pos:line="1569" pos:column="37">targetStart</name></expr></argument>, <argument><expr><name pos:line="1569" pos:column="50">targetEnd</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1569" pos:column="61"> <block pos:line="1569" pos:column="62">{
		<function_decl><type><name pos:line="1570" pos:column="17">UndoGroup</name></type> <name pos:line="1570" pos:column="27">ug</name><parameter_list pos:line="1570" pos:column="29">(<param><decl><type><name pos:line="1570" pos:column="30">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
		<decl_stmt><decl><type><name pos:line="1571" pos:column="17">bool</name></type> <name pos:line="1571" pos:column="22">prevNonWS</name> <init pos:line="1571" pos:column="32">= <expr><lit:literal type="boolean" pos:line="1571" pos:column="34">true</lit:literal></expr></init></decl>;</decl_stmt>
		<for pos:line="1572" pos:column="17">for (<init><decl><type><name pos:line="1572" pos:column="22">int</name></type> <name pos:line="1572" pos:column="26">pos</name> <init pos:line="1572" pos:column="30">= <expr><name pos:line="1572" pos:column="32">targetStart</name></expr></init></decl>;</init> <condition><expr><name pos:line="1572" pos:column="45">pos</name> <op:operator pos:line="1572" pos:column="49">&lt;</op:operator> <name pos:line="1572" pos:column="51">targetEnd</name></expr>;</condition> <incr><expr><name pos:line="1572" pos:column="62">pos</name><op:operator pos:line="1572" pos:column="65">++</op:operator></expr></incr>) <block pos:line="1572" pos:column="69">{
			<if pos:line="1573" pos:column="25">if <condition pos:line="1573" pos:column="28">(<expr><call><name pos:line="1573" pos:column="29">IsEOLChar</name><argument_list pos:line="1573" pos:column="38">(<argument><expr><call><name><name pos:line="1573" pos:column="39">pdoc</name><op:operator pos:line="1573" pos:column="43">-&gt;</op:operator><name pos:line="1573" pos:column="45">CharAt</name></name><argument_list pos:line="1573" pos:column="51">(<argument><expr><name pos:line="1573" pos:column="52">pos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1573" pos:column="58"> <block pos:line="1573" pos:column="59">{
				<expr_stmt><expr><name pos:line="1574" pos:column="33">targetEnd</name> <op:operator pos:line="1574" pos:column="43">-=</op:operator> <call><name><name pos:line="1574" pos:column="46">pdoc</name><op:operator pos:line="1574" pos:column="50">-&gt;</op:operator><name pos:line="1574" pos:column="52">LenChar</name></name><argument_list pos:line="1574" pos:column="59">(<argument><expr><name pos:line="1574" pos:column="60">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1575" pos:column="33">pdoc</name><op:operator pos:line="1575" pos:column="37">-&gt;</op:operator><name pos:line="1575" pos:column="39">DelChar</name></name><argument_list pos:line="1575" pos:column="46">(<argument><expr><name pos:line="1575" pos:column="47">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="1576" pos:column="33">if <condition pos:line="1576" pos:column="36">(<expr><name pos:line="1576" pos:column="37">prevNonWS</name></expr>)</condition><then pos:line="1576" pos:column="47"> <block pos:line="1576" pos:column="48">{
					<comment type="line" pos:line="1577" pos:column="41">// Ensure at least one space separating previous lines</comment>
					<expr_stmt><expr><call><name><name pos:line="1578" pos:column="41">pdoc</name><op:operator pos:line="1578" pos:column="45">-&gt;</op:operator><name pos:line="1578" pos:column="47">InsertChar</name></name><argument_list pos:line="1578" pos:column="57">(<argument><expr><name pos:line="1578" pos:column="58">pos</name></expr></argument>, <argument><expr><lit:literal type="char" pos:line="1578" pos:column="63">' '</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1579" pos:column="41">targetEnd</name><op:operator pos:line="1579" pos:column="50">++</op:operator></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then> <else pos:line="1581" pos:column="27">else <block pos:line="1581" pos:column="32">{
				<expr_stmt><expr><name pos:line="1582" pos:column="33">prevNonWS</name> <op:operator pos:line="1582" pos:column="43">=</op:operator> <call><name><name pos:line="1582" pos:column="45">pdoc</name><op:operator pos:line="1582" pos:column="49">-&gt;</op:operator><name pos:line="1582" pos:column="51">CharAt</name></name><argument_list pos:line="1582" pos:column="57">(<argument><expr><name pos:line="1582" pos:column="58">pos</name></expr></argument>)</argument_list></call> <op:operator pos:line="1582" pos:column="63">!=</op:operator> <lit:literal type="char" pos:line="1582" pos:column="66">' '</lit:literal></expr>;</expr_stmt>
			}</block></else></if>
		}</block></for>
	}</block></then></if>
}</block></function>

<function><type><specifier pos:line="1588" pos:column="1">const</specifier> <name pos:line="1588" pos:column="7">char</name> <type:modifier pos:line="1588" pos:column="12">*</type:modifier></type><name><name pos:line="1588" pos:column="13">Editor</name><op:operator pos:line="1588" pos:column="19">::</op:operator><name pos:line="1588" pos:column="21">StringFromEOLMode</name></name><parameter_list pos:line="1588" pos:column="38">(<param><decl><type><name pos:line="1588" pos:column="39">int</name></type> <name pos:line="1588" pos:column="43">eolMode</name></decl></param>)</parameter_list> <block pos:line="1588" pos:column="52">{
	<if pos:line="1589" pos:column="9">if <condition pos:line="1589" pos:column="12">(<expr><name pos:line="1589" pos:column="13">eolMode</name> <op:operator pos:line="1589" pos:column="21">==</op:operator> <name pos:line="1589" pos:column="24">SC_EOL_CRLF</name></expr>)</condition><then pos:line="1589" pos:column="36"> <block pos:line="1589" pos:column="37">{
		<return pos:line="1590" pos:column="17">return <expr><lit:literal type="string" pos:line="1590" pos:column="24">"\r\n"</lit:literal></expr>;</return>
	}</block></then> <else pos:line="1591" pos:column="11">else <if pos:line="1591" pos:column="16">if <condition pos:line="1591" pos:column="19">(<expr><name pos:line="1591" pos:column="20">eolMode</name> <op:operator pos:line="1591" pos:column="28">==</op:operator> <name pos:line="1591" pos:column="31">SC_EOL_CR</name></expr>)</condition><then pos:line="1591" pos:column="41"> <block pos:line="1591" pos:column="42">{
		<return pos:line="1592" pos:column="17">return <expr><lit:literal type="string" pos:line="1592" pos:column="24">"\r"</lit:literal></expr>;</return>
	}</block></then> <else pos:line="1593" pos:column="11">else <block pos:line="1593" pos:column="16">{
		<return pos:line="1594" pos:column="17">return <expr><lit:literal type="string" pos:line="1594" pos:column="24">"\n"</lit:literal></expr>;</return>
	}</block></else></if></else></if>
}</block></function>

<function><type><name pos:line="1598" pos:column="1">void</name></type> <name><name pos:line="1598" pos:column="6">Editor</name><op:operator pos:line="1598" pos:column="12">::</op:operator><name pos:line="1598" pos:column="14">LinesSplit</name></name><parameter_list pos:line="1598" pos:column="24">(<param><decl><type><name pos:line="1598" pos:column="25">int</name></type> <name pos:line="1598" pos:column="29">pixelWidth</name></decl></param>)</parameter_list> <block pos:line="1598" pos:column="41">{
	<if pos:line="1599" pos:column="9">if <condition pos:line="1599" pos:column="12">(<expr><op:operator pos:line="1599" pos:column="13">!</op:operator><call><name pos:line="1599" pos:column="14">RangeContainsProtected</name><argument_list pos:line="1599" pos:column="36">(<argument><expr><name pos:line="1599" pos:column="37">targetStart</name></expr></argument>, <argument><expr><name pos:line="1599" pos:column="50">targetEnd</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1599" pos:column="61"> <block pos:line="1599" pos:column="62">{
		<if pos:line="1600" pos:column="17">if <condition pos:line="1600" pos:column="20">(<expr><name pos:line="1600" pos:column="21">pixelWidth</name> <op:operator pos:line="1600" pos:column="32">==</op:operator> <lit:literal type="number" pos:line="1600" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="1600" pos:column="37"> <block pos:line="1600" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="1601" pos:column="25">PRectangle</name></type> <name pos:line="1601" pos:column="36">rcText</name> <init pos:line="1601" pos:column="43">= <expr><call><name pos:line="1601" pos:column="45">GetTextRectangle</name><argument_list pos:line="1601" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1602" pos:column="25">pixelWidth</name> <op:operator pos:line="1602" pos:column="36">=</op:operator> <call><name><name pos:line="1602" pos:column="38">rcText</name><op:operator pos:line="1602" pos:column="44">.</op:operator><name pos:line="1602" pos:column="45">Width</name></name><argument_list pos:line="1602" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="1604" pos:column="17">int</name></type> <name pos:line="1604" pos:column="21">lineStart</name> <init pos:line="1604" pos:column="31">= <expr><call><name><name pos:line="1604" pos:column="33">pdoc</name><op:operator pos:line="1604" pos:column="37">-&gt;</op:operator><name pos:line="1604" pos:column="39">LineFromPosition</name></name><argument_list pos:line="1604" pos:column="55">(<argument><expr><name pos:line="1604" pos:column="56">targetStart</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1605" pos:column="17">int</name></type> <name pos:line="1605" pos:column="21">lineEnd</name> <init pos:line="1605" pos:column="29">= <expr><call><name><name pos:line="1605" pos:column="31">pdoc</name><op:operator pos:line="1605" pos:column="35">-&gt;</op:operator><name pos:line="1605" pos:column="37">LineFromPosition</name></name><argument_list pos:line="1605" pos:column="53">(<argument><expr><name pos:line="1605" pos:column="54">targetEnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1606" pos:column="17">const</specifier> <name pos:line="1606" pos:column="23">char</name> <type:modifier pos:line="1606" pos:column="28">*</type:modifier></type><name pos:line="1606" pos:column="29">eol</name> <init pos:line="1606" pos:column="33">= <expr><call><name pos:line="1606" pos:column="35">StringFromEOLMode</name><argument_list pos:line="1606" pos:column="52">(<argument><expr><name><name pos:line="1606" pos:column="53">pdoc</name><op:operator pos:line="1606" pos:column="57">-&gt;</op:operator><name pos:line="1606" pos:column="59">eolMode</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<function_decl><type><name pos:line="1607" pos:column="17">UndoGroup</name></type> <name pos:line="1607" pos:column="27">ug</name><parameter_list pos:line="1607" pos:column="29">(<param><decl><type><name pos:line="1607" pos:column="30">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
		<for pos:line="1608" pos:column="17">for (<init><decl><type><name pos:line="1608" pos:column="22">int</name></type> <name pos:line="1608" pos:column="26">line</name> <init pos:line="1608" pos:column="31">= <expr><name pos:line="1608" pos:column="33">lineStart</name></expr></init></decl>;</init> <condition><expr><name pos:line="1608" pos:column="44">line</name> <op:operator pos:line="1608" pos:column="49">&lt;=</op:operator> <name pos:line="1608" pos:column="52">lineEnd</name></expr>;</condition> <incr><expr><name pos:line="1608" pos:column="61">line</name><op:operator pos:line="1608" pos:column="65">++</op:operator></expr></incr>) <block pos:line="1608" pos:column="69">{
			<function_decl><type><name pos:line="1609" pos:column="25">AutoSurface</name></type> <name pos:line="1609" pos:column="37">surface</name><parameter_list pos:line="1609" pos:column="44">(<param><decl><type><name pos:line="1609" pos:column="45">this</name></type></decl></param>)</parameter_list>;</function_decl>
			<decl_stmt><decl><type><name pos:line="1610" pos:column="25">AutoLineLayout</name></type> <name pos:line="1610" pos:column="40">ll</name><argument_list pos:line="1610" pos:column="42">(<argument><expr><name pos:line="1610" pos:column="43">llc</name></expr></argument>, <argument><expr><call><name pos:line="1610" pos:column="48">RetrieveLineLayout</name><argument_list pos:line="1610" pos:column="66">(<argument><expr><name pos:line="1610" pos:column="67">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			<if pos:line="1611" pos:column="25">if <condition pos:line="1611" pos:column="28">(<expr><name pos:line="1611" pos:column="29">surface</name> <op:operator pos:line="1611" pos:column="37">&amp;&amp;</op:operator> <name pos:line="1611" pos:column="40">ll</name></expr>)</condition><then pos:line="1611" pos:column="43"> <block pos:line="1611" pos:column="44">{
				<decl_stmt><decl><type><name pos:line="1612" pos:column="33">unsigned</name> <name pos:line="1612" pos:column="42">int</name></type> <name pos:line="1612" pos:column="46">posLineStart</name> <init pos:line="1612" pos:column="59">= <expr><call><name><name pos:line="1612" pos:column="61">pdoc</name><op:operator pos:line="1612" pos:column="65">-&gt;</op:operator><name pos:line="1612" pos:column="67">LineStart</name></name><argument_list pos:line="1612" pos:column="76">(<argument><expr><name pos:line="1612" pos:column="77">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="1613" pos:column="33">LayoutLine</name><argument_list pos:line="1613" pos:column="43">(<argument><expr><name pos:line="1613" pos:column="44">line</name></expr></argument>, <argument><expr><name pos:line="1613" pos:column="50">surface</name></expr></argument>, <argument><expr><name pos:line="1613" pos:column="59">vs</name></expr></argument>, <argument><expr><name pos:line="1613" pos:column="63">ll</name></expr></argument>, <argument><expr><name pos:line="1613" pos:column="67">pixelWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<for pos:line="1614" pos:column="33">for (<init><decl><type><name pos:line="1614" pos:column="38">int</name></type> <name pos:line="1614" pos:column="42">subLine</name> <init pos:line="1614" pos:column="50">= <expr><lit:literal type="number" pos:line="1614" pos:column="52">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1614" pos:column="55">subLine</name> <op:operator pos:line="1614" pos:column="63">&lt;</op:operator> <name><name pos:line="1614" pos:column="65">ll</name><op:operator pos:line="1614" pos:column="67">-&gt;</op:operator><name pos:line="1614" pos:column="69">lines</name></name></expr>;</condition> <incr><expr><name pos:line="1614" pos:column="76">subLine</name><op:operator pos:line="1614" pos:column="83">++</op:operator></expr></incr>) <block pos:line="1614" pos:column="87">{
					<expr_stmt><expr><call><name><name pos:line="1615" pos:column="41">pdoc</name><op:operator pos:line="1615" pos:column="45">-&gt;</op:operator><name pos:line="1615" pos:column="47">InsertCString</name></name><argument_list pos:line="1615" pos:column="60">(<argument><expr><name pos:line="1615" pos:column="61">posLineStart</name> <op:operator pos:line="1615" pos:column="74">+</op:operator> <op:operator pos:line="1615" pos:column="76">(</op:operator><name pos:line="1615" pos:column="77">subLine</name> <op:operator pos:line="1615" pos:column="85">-</op:operator> <lit:literal type="number" pos:line="1615" pos:column="87">1</lit:literal><op:operator pos:line="1615" pos:column="88">)</op:operator> <op:operator pos:line="1615" pos:column="90">*</op:operator> <call><name pos:line="1615" pos:column="92">strlen</name><argument_list pos:line="1615" pos:column="98">(<argument><expr><name pos:line="1615" pos:column="99">eol</name></expr></argument>)</argument_list></call> <op:operator pos:line="1615" pos:column="104">+</op:operator>
					        <call><name><name pos:line="1616" pos:column="49">ll</name><op:operator pos:line="1616" pos:column="51">-&gt;</op:operator><name pos:line="1616" pos:column="53">LineStart</name></name><argument_list pos:line="1616" pos:column="62">(<argument><expr><name pos:line="1616" pos:column="63">subLine</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1616" pos:column="73">eol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1617" pos:column="41">targetEnd</name> <op:operator pos:line="1617" pos:column="51">+=</op:operator> <call><name><name pos:line="1617" pos:column="54">static_cast</name><argument_list pos:line="1617" pos:column="65">&lt;<argument><expr><name pos:line="1617" pos:column="66">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1617" pos:column="70">(<argument><expr><call><name pos:line="1617" pos:column="71">strlen</name><argument_list pos:line="1617" pos:column="77">(<argument><expr><name pos:line="1617" pos:column="78">eol</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="1620" pos:column="25">lineEnd</name> <op:operator pos:line="1620" pos:column="33">=</op:operator> <call><name><name pos:line="1620" pos:column="35">pdoc</name><op:operator pos:line="1620" pos:column="39">-&gt;</op:operator><name pos:line="1620" pos:column="41">LineFromPosition</name></name><argument_list pos:line="1620" pos:column="57">(<argument><expr><name pos:line="1620" pos:column="58">targetEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1625" pos:column="1">int</name></type> <name><name pos:line="1625" pos:column="5">Editor</name><op:operator pos:line="1625" pos:column="11">::</op:operator><name pos:line="1625" pos:column="13">SubstituteMarkerIfEmpty</name></name><parameter_list pos:line="1625" pos:column="36">(<param><decl><type><name pos:line="1625" pos:column="37">int</name></type> <name pos:line="1625" pos:column="41">markerCheck</name></decl></param>, <param><decl><type><name pos:line="1625" pos:column="54">int</name></type> <name pos:line="1625" pos:column="58">markerDefault</name></decl></param>)</parameter_list> <block pos:line="1625" pos:column="73">{
	<if pos:line="1626" pos:column="9">if <condition pos:line="1626" pos:column="12">(<expr><name><name pos:line="1626" pos:column="13">vs</name><op:operator pos:line="1626" pos:column="15">.</op:operator><name pos:line="1626" pos:column="16">markers</name><index pos:line="1626" pos:column="23">[<expr><name pos:line="1626" pos:column="24">markerCheck</name></expr>]</index></name><op:operator pos:line="1626" pos:column="36">.</op:operator><name pos:line="1626" pos:column="37">markType</name> <op:operator pos:line="1626" pos:column="46">==</op:operator> <name pos:line="1626" pos:column="49">SC_MARK_EMPTY</name></expr>)</condition><then pos:line="1626" pos:column="63">
		<return pos:line="1627" pos:column="17">return <expr><name pos:line="1627" pos:column="24">markerDefault</name></expr>;</return></then></if>
	<return pos:line="1628" pos:column="9">return <expr><name pos:line="1628" pos:column="16">markerCheck</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="1631" pos:column="1">// Avoid 64 bit compiler warnings.</comment>
<comment type="line" pos:line="1632" pos:column="1">// Scintilla does not support text buffers larger than 2**31</comment>
<function><type><specifier pos:line="1633" pos:column="1">static</specifier> <name pos:line="1633" pos:column="8">int</name></type> <name pos:line="1633" pos:column="12">istrlen</name><parameter_list pos:line="1633" pos:column="19">(<param><decl><type><specifier pos:line="1633" pos:column="20">const</specifier> <name pos:line="1633" pos:column="26">char</name> <type:modifier pos:line="1633" pos:column="31">*</type:modifier></type><name pos:line="1633" pos:column="32">s</name></decl></param>)</parameter_list> <block pos:line="1633" pos:column="35">{
	<return pos:line="1634" pos:column="9">return <expr><call><name><name pos:line="1634" pos:column="16">static_cast</name><argument_list pos:line="1634" pos:column="27">&lt;<argument><expr><name pos:line="1634" pos:column="28">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1634" pos:column="32">(<argument><expr><call><name pos:line="1634" pos:column="33">strlen</name><argument_list pos:line="1634" pos:column="39">(<argument><expr><name pos:line="1634" pos:column="40">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1637" pos:column="1">bool</name></type> <name pos:line="1637" pos:column="6">ValidStyledText</name><parameter_list pos:line="1637" pos:column="21">(<param><decl><type><name pos:line="1637" pos:column="22">ViewStyle</name> <type:modifier pos:line="1637" pos:column="32">&amp;</type:modifier></type><name pos:line="1637" pos:column="33">vs</name></decl></param>, <param><decl><type><name pos:line="1637" pos:column="37">size_t</name></type> <name pos:line="1637" pos:column="44">styleOffset</name></decl></param>, <param><decl><type><specifier pos:line="1637" pos:column="57">const</specifier> <name pos:line="1637" pos:column="63">StyledText</name> <type:modifier pos:line="1637" pos:column="74">&amp;</type:modifier></type><name pos:line="1637" pos:column="75">st</name></decl></param>)</parameter_list> <block pos:line="1637" pos:column="79">{
	<if pos:line="1638" pos:column="9">if <condition pos:line="1638" pos:column="12">(<expr><name><name pos:line="1638" pos:column="13">st</name><op:operator pos:line="1638" pos:column="15">.</op:operator><name pos:line="1638" pos:column="16">multipleStyles</name></name></expr>)</condition><then pos:line="1638" pos:column="31"> <block pos:line="1638" pos:column="32">{
		<for pos:line="1639" pos:column="17">for (<init><decl><type><name pos:line="1639" pos:column="22">size_t</name></type> <name pos:line="1639" pos:column="29">iStyle</name><init pos:line="1639" pos:column="35">=<expr><lit:literal type="number" pos:line="1639" pos:column="36">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1639" pos:column="39">iStyle</name><op:operator pos:line="1639" pos:column="45">&lt;</op:operator><name><name pos:line="1639" pos:column="46">st</name><op:operator pos:line="1639" pos:column="48">.</op:operator><name pos:line="1639" pos:column="49">length</name></name></expr>;</condition> <incr><expr><name pos:line="1639" pos:column="57">iStyle</name><op:operator pos:line="1639" pos:column="63">++</op:operator></expr></incr>) <block pos:line="1639" pos:column="67">{
			<if pos:line="1640" pos:column="25">if <condition pos:line="1640" pos:column="28">(<expr><op:operator pos:line="1640" pos:column="29">!</op:operator><call><name><name pos:line="1640" pos:column="30">vs</name><op:operator pos:line="1640" pos:column="32">.</op:operator><name pos:line="1640" pos:column="33">ValidStyle</name></name><argument_list pos:line="1640" pos:column="43">(<argument><expr><name pos:line="1640" pos:column="44">styleOffset</name> <op:operator pos:line="1640" pos:column="56">+</op:operator> <name><name pos:line="1640" pos:column="58">st</name><op:operator pos:line="1640" pos:column="60">.</op:operator><name pos:line="1640" pos:column="61">styles</name><index pos:line="1640" pos:column="67">[<expr><name pos:line="1640" pos:column="68">iStyle</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1640" pos:column="77">
				<return pos:line="1641" pos:column="33">return <expr><lit:literal type="boolean" pos:line="1641" pos:column="40">false</lit:literal></expr>;</return></then></if>
		}</block></for>
	}</block></then> <else pos:line="1643" pos:column="11">else <block pos:line="1643" pos:column="16">{
		<if pos:line="1644" pos:column="17">if <condition pos:line="1644" pos:column="20">(<expr><op:operator pos:line="1644" pos:column="21">!</op:operator><call><name><name pos:line="1644" pos:column="22">vs</name><op:operator pos:line="1644" pos:column="24">.</op:operator><name pos:line="1644" pos:column="25">ValidStyle</name></name><argument_list pos:line="1644" pos:column="35">(<argument><expr><name pos:line="1644" pos:column="36">styleOffset</name> <op:operator pos:line="1644" pos:column="48">+</op:operator> <name><name pos:line="1644" pos:column="50">st</name><op:operator pos:line="1644" pos:column="52">.</op:operator><name pos:line="1644" pos:column="53">style</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1644" pos:column="60">
			<return pos:line="1645" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1645" pos:column="32">false</lit:literal></expr>;</return></then></if>
	}</block></else></if>
	<return pos:line="1647" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1647" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><specifier pos:line="1650" pos:column="1">static</specifier> <name pos:line="1650" pos:column="8">int</name></type> <name pos:line="1650" pos:column="12">WidthStyledText</name><parameter_list pos:line="1650" pos:column="27">(<param><decl><type><name pos:line="1650" pos:column="28">Surface</name> <type:modifier pos:line="1650" pos:column="36">*</type:modifier></type><name pos:line="1650" pos:column="37">surface</name></decl></param>, <param><decl><type><name pos:line="1650" pos:column="46">ViewStyle</name> <type:modifier pos:line="1650" pos:column="56">&amp;</type:modifier></type><name pos:line="1650" pos:column="57">vs</name></decl></param>, <param><decl><type><name pos:line="1650" pos:column="61">int</name></type> <name pos:line="1650" pos:column="65">styleOffset</name></decl></param>,
	<param><decl><type><specifier pos:line="1651" pos:column="9">const</specifier> <name pos:line="1651" pos:column="15">char</name> <type:modifier pos:line="1651" pos:column="20">*</type:modifier></type><name pos:line="1651" pos:column="21">text</name></decl></param>, <param><decl><type><specifier pos:line="1651" pos:column="27">const</specifier> <name pos:line="1651" pos:column="33">unsigned</name> <name pos:line="1651" pos:column="42">char</name> <type:modifier pos:line="1651" pos:column="47">*</type:modifier></type><name pos:line="1651" pos:column="48">styles</name></decl></param>, <param><decl><type><name pos:line="1651" pos:column="56">size_t</name></type> <name pos:line="1651" pos:column="63">len</name></decl></param>)</parameter_list> <block pos:line="1651" pos:column="68">{
	<decl_stmt><decl><type><name pos:line="1652" pos:column="9">int</name></type> <name pos:line="1652" pos:column="13">width</name> <init pos:line="1652" pos:column="19">= <expr><lit:literal type="number" pos:line="1652" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1653" pos:column="9">size_t</name></type> <name pos:line="1653" pos:column="16">start</name> <init pos:line="1653" pos:column="22">= <expr><lit:literal type="number" pos:line="1653" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
	<while pos:line="1654" pos:column="9">while <condition pos:line="1654" pos:column="15">(<expr><name pos:line="1654" pos:column="16">start</name> <op:operator pos:line="1654" pos:column="22">&lt;</op:operator> <name pos:line="1654" pos:column="24">len</name></expr>)</condition> <block pos:line="1654" pos:column="29">{
		<decl_stmt><decl><type><name pos:line="1655" pos:column="17">size_t</name></type> <name pos:line="1655" pos:column="24">style</name> <init pos:line="1655" pos:column="30">= <expr><name><name pos:line="1655" pos:column="32">styles</name><index pos:line="1655" pos:column="38">[<expr><name pos:line="1655" pos:column="39">start</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1656" pos:column="17">size_t</name></type> <name pos:line="1656" pos:column="24">endSegment</name> <init pos:line="1656" pos:column="35">= <expr><name pos:line="1656" pos:column="37">start</name></expr></init></decl>;</decl_stmt>
		<while pos:line="1657" pos:column="17">while <condition pos:line="1657" pos:column="23">(<expr><op:operator pos:line="1657" pos:column="24">(</op:operator><name pos:line="1657" pos:column="25">endSegment</name><op:operator pos:line="1657" pos:column="35">+</op:operator><lit:literal type="number" pos:line="1657" pos:column="36">1</lit:literal> <op:operator pos:line="1657" pos:column="38">&lt;</op:operator> <name pos:line="1657" pos:column="40">len</name><op:operator pos:line="1657" pos:column="43">)</op:operator> <op:operator pos:line="1657" pos:column="45">&amp;&amp;</op:operator> <op:operator pos:line="1657" pos:column="48">(</op:operator><call><name><name pos:line="1657" pos:column="49">static_cast</name><argument_list pos:line="1657" pos:column="60">&lt;<argument><expr><name pos:line="1657" pos:column="61">size_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1657" pos:column="68">(<argument><expr><name><name pos:line="1657" pos:column="69">styles</name><index pos:line="1657" pos:column="75">[<expr><name pos:line="1657" pos:column="76">endSegment</name><op:operator pos:line="1657" pos:column="86">+</op:operator><lit:literal type="number" pos:line="1657" pos:column="87">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call> <op:operator pos:line="1657" pos:column="91">==</op:operator> <name pos:line="1657" pos:column="94">style</name><op:operator pos:line="1657" pos:column="99">)</op:operator></expr>)</condition>
			<expr_stmt><expr><name pos:line="1658" pos:column="25">endSegment</name><op:operator pos:line="1658" pos:column="35">++</op:operator></expr>;</expr_stmt></while>
		<expr_stmt><expr><name pos:line="1659" pos:column="17">width</name> <op:operator pos:line="1659" pos:column="23">+=</op:operator> <call><name><name pos:line="1659" pos:column="26">surface</name><op:operator pos:line="1659" pos:column="33">-&gt;</op:operator><name pos:line="1659" pos:column="35">WidthText</name></name><argument_list pos:line="1659" pos:column="44">(<argument><expr><name><name pos:line="1659" pos:column="45">vs</name><op:operator pos:line="1659" pos:column="47">.</op:operator><name pos:line="1659" pos:column="48">styles</name><index pos:line="1659" pos:column="54">[<expr><name pos:line="1659" pos:column="55">style</name><op:operator pos:line="1659" pos:column="60">+</op:operator><name pos:line="1659" pos:column="61">styleOffset</name></expr>]</index></name><op:operator pos:line="1659" pos:column="73">.</op:operator><name pos:line="1659" pos:column="74">font</name></expr></argument>, <argument><expr><name pos:line="1659" pos:column="80">text</name> <op:operator pos:line="1659" pos:column="85">+</op:operator> <name pos:line="1659" pos:column="87">start</name></expr></argument>, <argument><expr><name pos:line="1659" pos:column="94">endSegment</name> <op:operator pos:line="1659" pos:column="105">-</op:operator> <name pos:line="1659" pos:column="107">start</name> <op:operator pos:line="1659" pos:column="113">+</op:operator> <lit:literal type="number" pos:line="1659" pos:column="115">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1660" pos:column="17">start</name> <op:operator pos:line="1660" pos:column="23">=</op:operator> <name pos:line="1660" pos:column="25">endSegment</name> <op:operator pos:line="1660" pos:column="36">+</op:operator> <lit:literal type="number" pos:line="1660" pos:column="38">1</lit:literal></expr>;</expr_stmt>
	}</block></while>
	<return pos:line="1662" pos:column="9">return <expr><name pos:line="1662" pos:column="16">width</name></expr>;</return>
}</block></function>

<function><type><specifier pos:line="1665" pos:column="1">static</specifier> <name pos:line="1665" pos:column="8">int</name></type> <name pos:line="1665" pos:column="12">WidestLineWidth</name><parameter_list pos:line="1665" pos:column="27">(<param><decl><type><name pos:line="1665" pos:column="28">Surface</name> <type:modifier pos:line="1665" pos:column="36">*</type:modifier></type><name pos:line="1665" pos:column="37">surface</name></decl></param>, <param><decl><type><name pos:line="1665" pos:column="46">ViewStyle</name> <type:modifier pos:line="1665" pos:column="56">&amp;</type:modifier></type><name pos:line="1665" pos:column="57">vs</name></decl></param>, <param><decl><type><name pos:line="1665" pos:column="61">int</name></type> <name pos:line="1665" pos:column="65">styleOffset</name></decl></param>, <param><decl><type><specifier pos:line="1665" pos:column="78">const</specifier> <name pos:line="1665" pos:column="84">StyledText</name> <type:modifier pos:line="1665" pos:column="95">&amp;</type:modifier></type><name pos:line="1665" pos:column="96">st</name></decl></param>)</parameter_list> <block pos:line="1665" pos:column="100">{
	<decl_stmt><decl><type><name pos:line="1666" pos:column="9">int</name></type> <name pos:line="1666" pos:column="13">widthMax</name> <init pos:line="1666" pos:column="22">= <expr><lit:literal type="number" pos:line="1666" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1667" pos:column="9">size_t</name></type> <name pos:line="1667" pos:column="16">start</name> <init pos:line="1667" pos:column="22">= <expr><lit:literal type="number" pos:line="1667" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
	<while pos:line="1668" pos:column="9">while <condition pos:line="1668" pos:column="15">(<expr><name pos:line="1668" pos:column="16">start</name> <op:operator pos:line="1668" pos:column="22">&lt;</op:operator> <name><name pos:line="1668" pos:column="24">st</name><op:operator pos:line="1668" pos:column="26">.</op:operator><name pos:line="1668" pos:column="27">length</name></name></expr>)</condition> <block pos:line="1668" pos:column="35">{
		<decl_stmt><decl><type><name pos:line="1669" pos:column="17">size_t</name></type> <name pos:line="1669" pos:column="24">lenLine</name> <init pos:line="1669" pos:column="32">= <expr><call><name><name pos:line="1669" pos:column="34">st</name><op:operator pos:line="1669" pos:column="36">.</op:operator><name pos:line="1669" pos:column="37">LineLength</name></name><argument_list pos:line="1669" pos:column="47">(<argument><expr><name pos:line="1669" pos:column="48">start</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1670" pos:column="17">int</name></type> <name pos:line="1670" pos:column="21">widthSubLine</name></decl>;</decl_stmt>
		<if pos:line="1671" pos:column="17">if <condition pos:line="1671" pos:column="20">(<expr><name><name pos:line="1671" pos:column="21">st</name><op:operator pos:line="1671" pos:column="23">.</op:operator><name pos:line="1671" pos:column="24">multipleStyles</name></name></expr>)</condition><then pos:line="1671" pos:column="39"> <block pos:line="1671" pos:column="40">{
			<expr_stmt><expr><name pos:line="1672" pos:column="25">widthSubLine</name> <op:operator pos:line="1672" pos:column="38">=</op:operator> <call><name pos:line="1672" pos:column="40">WidthStyledText</name><argument_list pos:line="1672" pos:column="55">(<argument><expr><name pos:line="1672" pos:column="56">surface</name></expr></argument>, <argument><expr><name pos:line="1672" pos:column="65">vs</name></expr></argument>, <argument><expr><name pos:line="1672" pos:column="69">styleOffset</name></expr></argument>, <argument><expr><name><name pos:line="1672" pos:column="82">st</name><op:operator pos:line="1672" pos:column="84">.</op:operator><name pos:line="1672" pos:column="85">text</name></name> <op:operator pos:line="1672" pos:column="90">+</op:operator> <name pos:line="1672" pos:column="92">start</name></expr></argument>, <argument><expr><name><name pos:line="1672" pos:column="99">st</name><op:operator pos:line="1672" pos:column="101">.</op:operator><name pos:line="1672" pos:column="102">styles</name></name> <op:operator pos:line="1672" pos:column="109">+</op:operator> <name pos:line="1672" pos:column="111">start</name></expr></argument>, <argument><expr><name pos:line="1672" pos:column="118">lenLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="1673" pos:column="19">else <block pos:line="1673" pos:column="24">{
			<expr_stmt><expr><name pos:line="1674" pos:column="25">widthSubLine</name> <op:operator pos:line="1674" pos:column="38">=</op:operator> <call><name><name pos:line="1674" pos:column="40">surface</name><op:operator pos:line="1674" pos:column="47">-&gt;</op:operator><name pos:line="1674" pos:column="49">WidthText</name></name><argument_list pos:line="1674" pos:column="58">(<argument><expr><name><name pos:line="1674" pos:column="59">vs</name><op:operator pos:line="1674" pos:column="61">.</op:operator><name pos:line="1674" pos:column="62">styles</name><index pos:line="1674" pos:column="68">[<expr><name pos:line="1674" pos:column="69">styleOffset</name> <op:operator pos:line="1674" pos:column="81">+</op:operator> <name><name pos:line="1674" pos:column="83">st</name><op:operator pos:line="1674" pos:column="85">.</op:operator><name pos:line="1674" pos:column="86">style</name></name></expr>]</index></name><op:operator pos:line="1674" pos:column="92">.</op:operator><name pos:line="1674" pos:column="93">font</name></expr></argument>, <argument><expr><name><name pos:line="1674" pos:column="99">st</name><op:operator pos:line="1674" pos:column="101">.</op:operator><name pos:line="1674" pos:column="102">text</name></name> <op:operator pos:line="1674" pos:column="107">+</op:operator> <name pos:line="1674" pos:column="109">start</name></expr></argument>, <argument><expr><name pos:line="1674" pos:column="116">lenLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<if pos:line="1676" pos:column="17">if <condition pos:line="1676" pos:column="20">(<expr><name pos:line="1676" pos:column="21">widthSubLine</name> <op:operator pos:line="1676" pos:column="34">&gt;</op:operator> <name pos:line="1676" pos:column="36">widthMax</name></expr>)</condition><then pos:line="1676" pos:column="45">
			<expr_stmt><expr><name pos:line="1677" pos:column="25">widthMax</name> <op:operator pos:line="1677" pos:column="34">=</op:operator> <name pos:line="1677" pos:column="36">widthSubLine</name></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="1678" pos:column="17">start</name> <op:operator pos:line="1678" pos:column="23">+=</op:operator> <name pos:line="1678" pos:column="26">lenLine</name> <op:operator pos:line="1678" pos:column="34">+</op:operator> <lit:literal type="number" pos:line="1678" pos:column="36">1</lit:literal></expr>;</expr_stmt>
	}</block></while>
	<return pos:line="1680" pos:column="9">return <expr><name pos:line="1680" pos:column="16">widthMax</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1683" pos:column="1">void</name></type> <name pos:line="1683" pos:column="6">DrawStyledText</name><parameter_list pos:line="1683" pos:column="20">(<param><decl><type><name pos:line="1683" pos:column="21">Surface</name> <type:modifier pos:line="1683" pos:column="29">*</type:modifier></type><name pos:line="1683" pos:column="30">surface</name></decl></param>, <param><decl><type><name pos:line="1683" pos:column="39">ViewStyle</name> <type:modifier pos:line="1683" pos:column="49">&amp;</type:modifier></type><name pos:line="1683" pos:column="50">vs</name></decl></param>, <param><decl><type><name pos:line="1683" pos:column="54">int</name></type> <name pos:line="1683" pos:column="58">styleOffset</name></decl></param>, <param><decl><type><name pos:line="1683" pos:column="71">PRectangle</name></type> <name pos:line="1683" pos:column="82">rcText</name></decl></param>, <param><decl><type><name pos:line="1683" pos:column="90">int</name></type> <name pos:line="1683" pos:column="94">ascent</name></decl></param>,
	<param><decl><type><specifier pos:line="1684" pos:column="9">const</specifier> <name pos:line="1684" pos:column="15">StyledText</name> <type:modifier pos:line="1684" pos:column="26">&amp;</type:modifier></type><name pos:line="1684" pos:column="27">st</name></decl></param>, <param><decl><type><name pos:line="1684" pos:column="31">size_t</name></type> <name pos:line="1684" pos:column="38">start</name></decl></param>, <param><decl><type><name pos:line="1684" pos:column="45">size_t</name></type> <name pos:line="1684" pos:column="52">length</name></decl></param>)</parameter_list> <block pos:line="1684" pos:column="60">{

	<if pos:line="1686" pos:column="9">if <condition pos:line="1686" pos:column="12">(<expr><name><name pos:line="1686" pos:column="13">st</name><op:operator pos:line="1686" pos:column="15">.</op:operator><name pos:line="1686" pos:column="16">multipleStyles</name></name></expr>)</condition><then pos:line="1686" pos:column="31"> <block pos:line="1686" pos:column="32">{
		<decl_stmt><decl><type><name pos:line="1687" pos:column="17">int</name></type> <name pos:line="1687" pos:column="21">x</name> <init pos:line="1687" pos:column="23">= <expr><name><name pos:line="1687" pos:column="25">rcText</name><op:operator pos:line="1687" pos:column="31">.</op:operator><name pos:line="1687" pos:column="32">left</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1688" pos:column="17">size_t</name></type> <name pos:line="1688" pos:column="24">i</name> <init pos:line="1688" pos:column="26">= <expr><lit:literal type="number" pos:line="1688" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
		<while pos:line="1689" pos:column="17">while <condition pos:line="1689" pos:column="23">(<expr><name pos:line="1689" pos:column="24">i</name> <op:operator pos:line="1689" pos:column="26">&lt;</op:operator> <name pos:line="1689" pos:column="28">length</name></expr>)</condition> <block pos:line="1689" pos:column="36">{
			<decl_stmt><decl><type><name pos:line="1690" pos:column="25">size_t</name></type> <name pos:line="1690" pos:column="32">end</name> <init pos:line="1690" pos:column="36">= <expr><name pos:line="1690" pos:column="38">i</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1691" pos:column="25">int</name></type> <name pos:line="1691" pos:column="29">style</name> <init pos:line="1691" pos:column="35">= <expr><name><name pos:line="1691" pos:column="37">st</name><op:operator pos:line="1691" pos:column="39">.</op:operator><name pos:line="1691" pos:column="40">styles</name><index pos:line="1691" pos:column="46">[<expr><name pos:line="1691" pos:column="47">i</name> <op:operator pos:line="1691" pos:column="49">+</op:operator> <name pos:line="1691" pos:column="51">start</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<while pos:line="1692" pos:column="25">while <condition pos:line="1692" pos:column="31">(<expr><name pos:line="1692" pos:column="32">end</name> <op:operator pos:line="1692" pos:column="36">&lt;</op:operator> <name pos:line="1692" pos:column="38">length</name><op:operator pos:line="1692" pos:column="44">-</op:operator><lit:literal type="number" pos:line="1692" pos:column="45">1</lit:literal> <op:operator pos:line="1692" pos:column="47">&amp;&amp;</op:operator> <name><name pos:line="1692" pos:column="50">st</name><op:operator pos:line="1692" pos:column="52">.</op:operator><name pos:line="1692" pos:column="53">styles</name><index pos:line="1692" pos:column="59">[<expr><name pos:line="1692" pos:column="60">start</name><op:operator pos:line="1692" pos:column="65">+</op:operator><name pos:line="1692" pos:column="66">end</name><op:operator pos:line="1692" pos:column="69">+</op:operator><lit:literal type="number" pos:line="1692" pos:column="70">1</lit:literal></expr>]</index></name> <op:operator pos:line="1692" pos:column="73">==</op:operator> <name pos:line="1692" pos:column="76">style</name></expr>)</condition>
				<expr_stmt><expr><name pos:line="1693" pos:column="33">end</name><op:operator pos:line="1693" pos:column="36">++</op:operator></expr>;</expr_stmt></while>
			<expr_stmt><expr><name pos:line="1694" pos:column="25">style</name> <op:operator pos:line="1694" pos:column="31">+=</op:operator> <name pos:line="1694" pos:column="34">styleOffset</name></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1695" pos:column="25">int</name></type> <name pos:line="1695" pos:column="29">width</name> <init pos:line="1695" pos:column="35">= <expr><call><name><name pos:line="1695" pos:column="37">surface</name><op:operator pos:line="1695" pos:column="44">-&gt;</op:operator><name pos:line="1695" pos:column="46">WidthText</name></name><argument_list pos:line="1695" pos:column="55">(<argument><expr><name><name pos:line="1695" pos:column="56">vs</name><op:operator pos:line="1695" pos:column="58">.</op:operator><name pos:line="1695" pos:column="59">styles</name><index pos:line="1695" pos:column="65">[<expr><name pos:line="1695" pos:column="66">style</name></expr>]</index></name><op:operator pos:line="1695" pos:column="72">.</op:operator><name pos:line="1695" pos:column="73">font</name></expr></argument>, <argument><expr><name><name pos:line="1695" pos:column="79">st</name><op:operator pos:line="1695" pos:column="81">.</op:operator><name pos:line="1695" pos:column="82">text</name></name> <op:operator pos:line="1695" pos:column="87">+</op:operator> <name pos:line="1695" pos:column="89">start</name> <op:operator pos:line="1695" pos:column="95">+</op:operator> <name pos:line="1695" pos:column="97">i</name></expr></argument>, <argument><expr><name pos:line="1695" pos:column="100">end</name> <op:operator pos:line="1695" pos:column="104">-</op:operator> <name pos:line="1695" pos:column="106">i</name> <op:operator pos:line="1695" pos:column="108">+</op:operator> <lit:literal type="number" pos:line="1695" pos:column="110">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1696" pos:column="25">PRectangle</name></type> <name pos:line="1696" pos:column="36">rcSegment</name> <init pos:line="1696" pos:column="46">= <expr><name pos:line="1696" pos:column="48">rcText</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1697" pos:column="25">rcSegment</name><op:operator pos:line="1697" pos:column="34">.</op:operator><name pos:line="1697" pos:column="35">left</name></name> <op:operator pos:line="1697" pos:column="40">=</op:operator> <name pos:line="1697" pos:column="42">x</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1698" pos:column="25">rcSegment</name><op:operator pos:line="1698" pos:column="34">.</op:operator><name pos:line="1698" pos:column="35">right</name></name> <op:operator pos:line="1698" pos:column="41">=</op:operator> <name pos:line="1698" pos:column="43">x</name> <op:operator pos:line="1698" pos:column="45">+</op:operator> <name pos:line="1698" pos:column="47">width</name> <op:operator pos:line="1698" pos:column="53">+</op:operator> <lit:literal type="number" pos:line="1698" pos:column="55">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1699" pos:column="25">surface</name><op:operator pos:line="1699" pos:column="32">-&gt;</op:operator><name pos:line="1699" pos:column="34">DrawTextNoClip</name></name><argument_list pos:line="1699" pos:column="48">(<argument><expr><name pos:line="1699" pos:column="49">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="1699" pos:column="60">vs</name><op:operator pos:line="1699" pos:column="62">.</op:operator><name pos:line="1699" pos:column="63">styles</name><index pos:line="1699" pos:column="69">[<expr><name pos:line="1699" pos:column="70">style</name></expr>]</index></name><op:operator pos:line="1699" pos:column="76">.</op:operator><name pos:line="1699" pos:column="77">font</name></expr></argument>,
					<argument><expr><name pos:line="1700" pos:column="41">ascent</name></expr></argument>, <argument><expr><name><name pos:line="1700" pos:column="49">st</name><op:operator pos:line="1700" pos:column="51">.</op:operator><name pos:line="1700" pos:column="52">text</name></name> <op:operator pos:line="1700" pos:column="57">+</op:operator> <name pos:line="1700" pos:column="59">start</name> <op:operator pos:line="1700" pos:column="65">+</op:operator> <name pos:line="1700" pos:column="67">i</name></expr></argument>, <argument><expr><name pos:line="1700" pos:column="70">end</name> <op:operator pos:line="1700" pos:column="74">-</op:operator> <name pos:line="1700" pos:column="76">i</name> <op:operator pos:line="1700" pos:column="78">+</op:operator> <lit:literal type="number" pos:line="1700" pos:column="80">1</lit:literal></expr></argument>,
					<argument><expr><name><name pos:line="1701" pos:column="41">vs</name><op:operator pos:line="1701" pos:column="43">.</op:operator><name pos:line="1701" pos:column="44">styles</name><index pos:line="1701" pos:column="50">[<expr><name pos:line="1701" pos:column="51">style</name></expr>]</index></name><op:operator pos:line="1701" pos:column="57">.</op:operator><name><name pos:line="1701" pos:column="58">fore</name><op:operator pos:line="1701" pos:column="62">.</op:operator><name pos:line="1701" pos:column="63">allocated</name></name></expr></argument>,
					<argument><expr><name><name pos:line="1702" pos:column="41">vs</name><op:operator pos:line="1702" pos:column="43">.</op:operator><name pos:line="1702" pos:column="44">styles</name><index pos:line="1702" pos:column="50">[<expr><name pos:line="1702" pos:column="51">style</name></expr>]</index></name><op:operator pos:line="1702" pos:column="57">.</op:operator><name><name pos:line="1702" pos:column="58">back</name><op:operator pos:line="1702" pos:column="62">.</op:operator><name pos:line="1702" pos:column="63">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1703" pos:column="25">x</name> <op:operator pos:line="1703" pos:column="27">+=</op:operator> <name pos:line="1703" pos:column="30">width</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1704" pos:column="25">i</name> <op:operator pos:line="1704" pos:column="27">=</op:operator> <name pos:line="1704" pos:column="29">end</name> <op:operator pos:line="1704" pos:column="33">+</op:operator> <lit:literal type="number" pos:line="1704" pos:column="35">1</lit:literal></expr>;</expr_stmt>
		}</block></while>
	}</block></then> <else pos:line="1706" pos:column="11">else <block pos:line="1706" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="1707" pos:column="17">int</name></type> <name pos:line="1707" pos:column="21">style</name> <init pos:line="1707" pos:column="27">= <expr><name><name pos:line="1707" pos:column="29">st</name><op:operator pos:line="1707" pos:column="31">.</op:operator><name pos:line="1707" pos:column="32">style</name></name> <op:operator pos:line="1707" pos:column="38">+</op:operator> <name pos:line="1707" pos:column="40">styleOffset</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1708" pos:column="17">surface</name><op:operator pos:line="1708" pos:column="24">-&gt;</op:operator><name pos:line="1708" pos:column="26">DrawTextNoClip</name></name><argument_list pos:line="1708" pos:column="40">(<argument><expr><name pos:line="1708" pos:column="41">rcText</name></expr></argument>, <argument><expr><name><name pos:line="1708" pos:column="49">vs</name><op:operator pos:line="1708" pos:column="51">.</op:operator><name pos:line="1708" pos:column="52">styles</name><index pos:line="1708" pos:column="58">[<expr><name pos:line="1708" pos:column="59">style</name></expr>]</index></name><op:operator pos:line="1708" pos:column="65">.</op:operator><name pos:line="1708" pos:column="66">font</name></expr></argument>,
				<argument><expr><name><name pos:line="1709" pos:column="33">rcText</name><op:operator pos:line="1709" pos:column="39">.</op:operator><name pos:line="1709" pos:column="40">top</name></name> <op:operator pos:line="1709" pos:column="44">+</op:operator> <name><name pos:line="1709" pos:column="46">vs</name><op:operator pos:line="1709" pos:column="48">.</op:operator><name pos:line="1709" pos:column="49">maxAscent</name></name></expr></argument>, <argument><expr><name><name pos:line="1709" pos:column="60">st</name><op:operator pos:line="1709" pos:column="62">.</op:operator><name pos:line="1709" pos:column="63">text</name></name> <op:operator pos:line="1709" pos:column="68">+</op:operator> <name pos:line="1709" pos:column="70">start</name></expr></argument>, <argument><expr><name pos:line="1709" pos:column="77">length</name></expr></argument>,
				<argument><expr><name><name pos:line="1710" pos:column="33">vs</name><op:operator pos:line="1710" pos:column="35">.</op:operator><name pos:line="1710" pos:column="36">styles</name><index pos:line="1710" pos:column="42">[<expr><name pos:line="1710" pos:column="43">style</name></expr>]</index></name><op:operator pos:line="1710" pos:column="49">.</op:operator><name><name pos:line="1710" pos:column="50">fore</name><op:operator pos:line="1710" pos:column="54">.</op:operator><name pos:line="1710" pos:column="55">allocated</name></name></expr></argument>,
				<argument><expr><name><name pos:line="1711" pos:column="33">vs</name><op:operator pos:line="1711" pos:column="35">.</op:operator><name pos:line="1711" pos:column="36">styles</name><index pos:line="1711" pos:column="42">[<expr><name pos:line="1711" pos:column="43">style</name></expr>]</index></name><op:operator pos:line="1711" pos:column="49">.</op:operator><name><name pos:line="1711" pos:column="50">back</name><op:operator pos:line="1711" pos:column="54">.</op:operator><name pos:line="1711" pos:column="55">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="1715" pos:column="1">void</name></type> <name><name pos:line="1715" pos:column="6">Editor</name><op:operator pos:line="1715" pos:column="12">::</op:operator><name pos:line="1715" pos:column="14">PaintSelMargin</name></name><parameter_list pos:line="1715" pos:column="28">(<param><decl><type><name pos:line="1715" pos:column="29">Surface</name> <type:modifier pos:line="1715" pos:column="37">*</type:modifier></type><name pos:line="1715" pos:column="38">surfWindow</name></decl></param>, <param><decl><type><name pos:line="1715" pos:column="50">PRectangle</name> <type:modifier pos:line="1715" pos:column="61">&amp;</type:modifier></type><name pos:line="1715" pos:column="62">rc</name></decl></param>)</parameter_list> <block pos:line="1715" pos:column="66">{
	<if pos:line="1716" pos:column="9">if <condition pos:line="1716" pos:column="12">(<expr><name><name pos:line="1716" pos:column="13">vs</name><op:operator pos:line="1716" pos:column="15">.</op:operator><name pos:line="1716" pos:column="16">fixedColumnWidth</name></name> <op:operator pos:line="1716" pos:column="33">==</op:operator> <lit:literal type="number" pos:line="1716" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="1716" pos:column="38">
		<return pos:line="1717" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1719" pos:column="9">PRectangle</name></type> <name pos:line="1719" pos:column="20">rcMargin</name> <init pos:line="1719" pos:column="29">= <expr><call><name pos:line="1719" pos:column="31">GetClientRectangle</name><argument_list pos:line="1719" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="1720" pos:column="9">rcMargin</name><op:operator pos:line="1720" pos:column="17">.</op:operator><name pos:line="1720" pos:column="18">right</name></name> <op:operator pos:line="1720" pos:column="24">=</op:operator> <name><name pos:line="1720" pos:column="26">vs</name><op:operator pos:line="1720" pos:column="28">.</op:operator><name pos:line="1720" pos:column="29">fixedColumnWidth</name></name></expr>;</expr_stmt>

	<if pos:line="1722" pos:column="9">if <condition pos:line="1722" pos:column="12">(<expr><op:operator pos:line="1722" pos:column="13">!</op:operator><call><name><name pos:line="1722" pos:column="14">rc</name><op:operator pos:line="1722" pos:column="16">.</op:operator><name pos:line="1722" pos:column="17">Intersects</name></name><argument_list pos:line="1722" pos:column="27">(<argument><expr><name pos:line="1722" pos:column="28">rcMargin</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1722" pos:column="38">
		<return pos:line="1723" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1725" pos:column="9">Surface</name> <type:modifier pos:line="1725" pos:column="17">*</type:modifier></type><name pos:line="1725" pos:column="18">surface</name></decl>;</decl_stmt>
	<if pos:line="1726" pos:column="9">if <condition pos:line="1726" pos:column="12">(<expr><name pos:line="1726" pos:column="13">bufferedDraw</name></expr>)</condition><then pos:line="1726" pos:column="26"> <block pos:line="1726" pos:column="27">{
		<expr_stmt><expr><name pos:line="1727" pos:column="17">surface</name> <op:operator pos:line="1727" pos:column="25">=</op:operator> <name pos:line="1727" pos:column="27">pixmapSelMargin</name></expr>;</expr_stmt>
	}</block></then> <else pos:line="1728" pos:column="11">else <block pos:line="1728" pos:column="16">{
		<expr_stmt><expr><name pos:line="1729" pos:column="17">surface</name> <op:operator pos:line="1729" pos:column="25">=</op:operator> <name pos:line="1729" pos:column="27">surfWindow</name></expr>;</expr_stmt>
	}</block></else></if>

	<decl_stmt><decl><type><name pos:line="1732" pos:column="9">PRectangle</name></type> <name pos:line="1732" pos:column="20">rcSelMargin</name> <init pos:line="1732" pos:column="32">= <expr><name pos:line="1732" pos:column="34">rcMargin</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="1733" pos:column="9">rcSelMargin</name><op:operator pos:line="1733" pos:column="20">.</op:operator><name pos:line="1733" pos:column="21">right</name></name> <op:operator pos:line="1733" pos:column="27">=</op:operator> <name><name pos:line="1733" pos:column="29">rcMargin</name><op:operator pos:line="1733" pos:column="37">.</op:operator><name pos:line="1733" pos:column="38">left</name></name></expr>;</expr_stmt>

	<for pos:line="1735" pos:column="9">for (<init><decl><type><name pos:line="1735" pos:column="14">int</name></type> <name pos:line="1735" pos:column="18">margin</name> <init pos:line="1735" pos:column="25">= <expr><lit:literal type="number" pos:line="1735" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1735" pos:column="30">margin</name> <op:operator pos:line="1735" pos:column="37">&lt;</op:operator> <name><name pos:line="1735" pos:column="39">vs</name><op:operator pos:line="1735" pos:column="41">.</op:operator><name pos:line="1735" pos:column="42">margins</name></name></expr>;</condition> <incr><expr><name pos:line="1735" pos:column="51">margin</name><op:operator pos:line="1735" pos:column="57">++</op:operator></expr></incr>) <block pos:line="1735" pos:column="61">{
		<if pos:line="1736" pos:column="17">if <condition pos:line="1736" pos:column="20">(<expr><name><name pos:line="1736" pos:column="21">vs</name><op:operator pos:line="1736" pos:column="23">.</op:operator><name pos:line="1736" pos:column="24">ms</name><index pos:line="1736" pos:column="26">[<expr><name pos:line="1736" pos:column="27">margin</name></expr>]</index></name><op:operator pos:line="1736" pos:column="34">.</op:operator><name pos:line="1736" pos:column="35">width</name> <op:operator pos:line="1736" pos:column="41">&gt;</op:operator> <lit:literal type="number" pos:line="1736" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="1736" pos:column="45"> <block pos:line="1736" pos:column="46">{

			<expr_stmt><expr><name><name pos:line="1738" pos:column="25">rcSelMargin</name><op:operator pos:line="1738" pos:column="36">.</op:operator><name pos:line="1738" pos:column="37">left</name></name> <op:operator pos:line="1738" pos:column="42">=</op:operator> <name><name pos:line="1738" pos:column="44">rcSelMargin</name><op:operator pos:line="1738" pos:column="55">.</op:operator><name pos:line="1738" pos:column="56">right</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1739" pos:column="25">rcSelMargin</name><op:operator pos:line="1739" pos:column="36">.</op:operator><name pos:line="1739" pos:column="37">right</name></name> <op:operator pos:line="1739" pos:column="43">=</op:operator> <name><name pos:line="1739" pos:column="45">rcSelMargin</name><op:operator pos:line="1739" pos:column="56">.</op:operator><name pos:line="1739" pos:column="57">left</name></name> <op:operator pos:line="1739" pos:column="62">+</op:operator> <name><name pos:line="1739" pos:column="64">vs</name><op:operator pos:line="1739" pos:column="66">.</op:operator><name pos:line="1739" pos:column="67">ms</name><index pos:line="1739" pos:column="69">[<expr><name pos:line="1739" pos:column="70">margin</name></expr>]</index></name><op:operator pos:line="1739" pos:column="77">.</op:operator><name pos:line="1739" pos:column="78">width</name></expr>;</expr_stmt>

			<if pos:line="1741" pos:column="25">if <condition pos:line="1741" pos:column="28">(<expr><name><name pos:line="1741" pos:column="29">vs</name><op:operator pos:line="1741" pos:column="31">.</op:operator><name pos:line="1741" pos:column="32">ms</name><index pos:line="1741" pos:column="34">[<expr><name pos:line="1741" pos:column="35">margin</name></expr>]</index></name><op:operator pos:line="1741" pos:column="42">.</op:operator><name pos:line="1741" pos:column="43">style</name> <op:operator pos:line="1741" pos:column="49">!=</op:operator> <name pos:line="1741" pos:column="52">SC_MARGIN_NUMBER</name></expr>)</condition><then pos:line="1741" pos:column="69"> <block pos:line="1741" pos:column="70">{
				<comment type="block" pos:line="1742" pos:column="33">/* alternate scheme:
				if (vs.ms[margin].mask &amp; SC_MASK_FOLDERS)
					surface-&gt;FillRectangle(rcSelMargin, vs.styles[STYLE_DEFAULT].back.allocated);
				else
					// Required because of special way brush is created for selection margin
					surface-&gt;FillRectangle(rcSelMargin, pixmapSelPattern);
				*/</comment>
				<if pos:line="1749" pos:column="33">if <condition pos:line="1749" pos:column="36">(<expr><name><name pos:line="1749" pos:column="37">vs</name><op:operator pos:line="1749" pos:column="39">.</op:operator><name pos:line="1749" pos:column="40">ms</name><index pos:line="1749" pos:column="42">[<expr><name pos:line="1749" pos:column="43">margin</name></expr>]</index></name><op:operator pos:line="1749" pos:column="50">.</op:operator><name pos:line="1749" pos:column="51">mask</name> <op:operator pos:line="1749" pos:column="56">&amp;</op:operator> <name pos:line="1749" pos:column="58">SC_MASK_FOLDERS</name></expr>)</condition><then pos:line="1749" pos:column="74">
					<comment type="line" pos:line="1750" pos:column="41">// Required because of special way brush is created for selection margin</comment>
					<expr_stmt><expr><call><name><name pos:line="1751" pos:column="41">surface</name><op:operator pos:line="1751" pos:column="48">-&gt;</op:operator><name pos:line="1751" pos:column="50">FillRectangle</name></name><argument_list pos:line="1751" pos:column="63">(<argument><expr><name pos:line="1751" pos:column="64">rcSelMargin</name></expr></argument>, <argument><expr><op:operator pos:line="1751" pos:column="77">*</op:operator><name pos:line="1751" pos:column="78">pixmapSelPattern</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="1752" pos:column="33">else <block pos:line="1752" pos:column="38">{
					<decl_stmt><decl><type><name pos:line="1753" pos:column="41">ColourAllocated</name></type> <name pos:line="1753" pos:column="57">colour</name></decl>;</decl_stmt>
					<switch pos:line="1754" pos:column="41">switch <condition pos:line="1754" pos:column="48">(<expr><name><name pos:line="1754" pos:column="49">vs</name><op:operator pos:line="1754" pos:column="51">.</op:operator><name pos:line="1754" pos:column="52">ms</name><index pos:line="1754" pos:column="54">[<expr><name pos:line="1754" pos:column="55">margin</name></expr>]</index></name><op:operator pos:line="1754" pos:column="62">.</op:operator><name pos:line="1754" pos:column="63">style</name></expr>)</condition> <block pos:line="1754" pos:column="70">{
					<case pos:line="1755" pos:column="41">case <expr><name pos:line="1755" pos:column="46">SC_MARGIN_BACK</name></expr>:
						<expr_stmt><expr><name pos:line="1756" pos:column="49">colour</name> <op:operator pos:line="1756" pos:column="56">=</op:operator> <name><name pos:line="1756" pos:column="58">vs</name><op:operator pos:line="1756" pos:column="60">.</op:operator><name pos:line="1756" pos:column="61">styles</name><index pos:line="1756" pos:column="67">[<expr><name pos:line="1756" pos:column="68">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="1756" pos:column="82">.</op:operator><name><name pos:line="1756" pos:column="83">back</name><op:operator pos:line="1756" pos:column="87">.</op:operator><name pos:line="1756" pos:column="88">allocated</name></name></expr>;</expr_stmt>
						<break pos:line="1757" pos:column="49">break;</break>
					</case><case pos:line="1758" pos:column="41">case <expr><name pos:line="1758" pos:column="46">SC_MARGIN_FORE</name></expr>:
						<expr_stmt><expr><name pos:line="1759" pos:column="49">colour</name> <op:operator pos:line="1759" pos:column="56">=</op:operator> <name><name pos:line="1759" pos:column="58">vs</name><op:operator pos:line="1759" pos:column="60">.</op:operator><name pos:line="1759" pos:column="61">styles</name><index pos:line="1759" pos:column="67">[<expr><name pos:line="1759" pos:column="68">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="1759" pos:column="82">.</op:operator><name><name pos:line="1759" pos:column="83">fore</name><op:operator pos:line="1759" pos:column="87">.</op:operator><name pos:line="1759" pos:column="88">allocated</name></name></expr>;</expr_stmt>
						<break pos:line="1760" pos:column="49">break;</break>
					</case><default pos:line="1761" pos:column="41">default:
						<expr_stmt><expr><name pos:line="1762" pos:column="49">colour</name> <op:operator pos:line="1762" pos:column="56">=</op:operator> <name><name pos:line="1762" pos:column="58">vs</name><op:operator pos:line="1762" pos:column="60">.</op:operator><name pos:line="1762" pos:column="61">styles</name><index pos:line="1762" pos:column="67">[<expr><name pos:line="1762" pos:column="68">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="1762" pos:column="85">.</op:operator><name><name pos:line="1762" pos:column="86">back</name><op:operator pos:line="1762" pos:column="90">.</op:operator><name pos:line="1762" pos:column="91">allocated</name></name></expr>;</expr_stmt>
						<break pos:line="1763" pos:column="49">break;</break>
					</default>}</block></switch>
					<expr_stmt><expr><call><name><name pos:line="1765" pos:column="41">surface</name><op:operator pos:line="1765" pos:column="48">-&gt;</op:operator><name pos:line="1765" pos:column="50">FillRectangle</name></name><argument_list pos:line="1765" pos:column="63">(<argument><expr><name pos:line="1765" pos:column="64">rcSelMargin</name></expr></argument>, <argument><expr><name pos:line="1765" pos:column="77">colour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then> <else pos:line="1767" pos:column="27">else <block pos:line="1767" pos:column="32">{
				<expr_stmt><expr><call><name><name pos:line="1768" pos:column="33">surface</name><op:operator pos:line="1768" pos:column="40">-&gt;</op:operator><name pos:line="1768" pos:column="42">FillRectangle</name></name><argument_list pos:line="1768" pos:column="55">(<argument><expr><name pos:line="1768" pos:column="56">rcSelMargin</name></expr></argument>, <argument><expr><name><name pos:line="1768" pos:column="69">vs</name><op:operator pos:line="1768" pos:column="71">.</op:operator><name pos:line="1768" pos:column="72">styles</name><index pos:line="1768" pos:column="78">[<expr><name pos:line="1768" pos:column="79">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="1768" pos:column="96">.</op:operator><name><name pos:line="1768" pos:column="97">back</name><op:operator pos:line="1768" pos:column="101">.</op:operator><name pos:line="1768" pos:column="102">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>

			<decl_stmt><decl><type><name pos:line="1771" pos:column="25">int</name></type> <name pos:line="1771" pos:column="29">visibleLine</name> <init pos:line="1771" pos:column="41">= <expr><name pos:line="1771" pos:column="43">topLine</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1772" pos:column="25">int</name></type> <name pos:line="1772" pos:column="29">yposScreen</name> <init pos:line="1772" pos:column="40">= <expr><lit:literal type="number" pos:line="1772" pos:column="42">0</lit:literal></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="1773" pos:column="25">// Work out whether the top line is whitespace located after a</comment>
			<comment type="line" pos:line="1774" pos:column="25">// lessening of fold level which implies a 'fold tail' but which should not</comment>
			<comment type="line" pos:line="1775" pos:column="25">// be displayed until the last of a sequence of whitespace.</comment>
			<decl_stmt><decl><type><name pos:line="1776" pos:column="25">bool</name></type> <name pos:line="1776" pos:column="30">needWhiteClosure</name> <init pos:line="1776" pos:column="47">= <expr><lit:literal type="boolean" pos:line="1776" pos:column="49">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1777" pos:column="25">int</name></type> <name pos:line="1777" pos:column="29">level</name> <init pos:line="1777" pos:column="35">= <expr><call><name><name pos:line="1777" pos:column="37">pdoc</name><op:operator pos:line="1777" pos:column="41">-&gt;</op:operator><name pos:line="1777" pos:column="43">GetLevel</name></name><argument_list pos:line="1777" pos:column="51">(<argument><expr><call><name><name pos:line="1777" pos:column="52">cs</name><op:operator pos:line="1777" pos:column="54">.</op:operator><name pos:line="1777" pos:column="55">DocFromDisplay</name></name><argument_list pos:line="1777" pos:column="69">(<argument><expr><name pos:line="1777" pos:column="70">topLine</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1778" pos:column="25">if <condition pos:line="1778" pos:column="28">(<expr><name pos:line="1778" pos:column="29">level</name> <op:operator pos:line="1778" pos:column="35">&amp;</op:operator> <name pos:line="1778" pos:column="37">SC_FOLDLEVELWHITEFLAG</name></expr>)</condition><then pos:line="1778" pos:column="59"> <block pos:line="1778" pos:column="60">{
				<decl_stmt><decl><type><name pos:line="1779" pos:column="33">int</name></type> <name pos:line="1779" pos:column="37">lineBack</name> <init pos:line="1779" pos:column="46">= <expr><call><name><name pos:line="1779" pos:column="48">cs</name><op:operator pos:line="1779" pos:column="50">.</op:operator><name pos:line="1779" pos:column="51">DocFromDisplay</name></name><argument_list pos:line="1779" pos:column="65">(<argument><expr><name pos:line="1779" pos:column="66">topLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1780" pos:column="33">int</name></type> <name pos:line="1780" pos:column="37">levelPrev</name> <init pos:line="1780" pos:column="47">= <expr><name pos:line="1780" pos:column="49">level</name></expr></init></decl>;</decl_stmt>
				<while pos:line="1781" pos:column="33">while <condition pos:line="1781" pos:column="39">(<expr><op:operator pos:line="1781" pos:column="40">(</op:operator><name pos:line="1781" pos:column="41">lineBack</name> <op:operator pos:line="1781" pos:column="50">&gt;</op:operator> <lit:literal type="number" pos:line="1781" pos:column="52">0</lit:literal><op:operator pos:line="1781" pos:column="53">)</op:operator> <op:operator pos:line="1781" pos:column="55">&amp;&amp;</op:operator> <op:operator pos:line="1781" pos:column="58">(</op:operator><name pos:line="1781" pos:column="59">levelPrev</name> <op:operator pos:line="1781" pos:column="69">&amp;</op:operator> <name pos:line="1781" pos:column="71">SC_FOLDLEVELWHITEFLAG</name><op:operator pos:line="1781" pos:column="92">)</op:operator></expr>)</condition> <block pos:line="1781" pos:column="95">{
					<expr_stmt><expr><name pos:line="1782" pos:column="41">lineBack</name><op:operator pos:line="1782" pos:column="49">--</op:operator></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1783" pos:column="41">levelPrev</name> <op:operator pos:line="1783" pos:column="51">=</op:operator> <call><name><name pos:line="1783" pos:column="53">pdoc</name><op:operator pos:line="1783" pos:column="57">-&gt;</op:operator><name pos:line="1783" pos:column="59">GetLevel</name></name><argument_list pos:line="1783" pos:column="67">(<argument><expr><name pos:line="1783" pos:column="68">lineBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></while>
				<if pos:line="1785" pos:column="33">if <condition pos:line="1785" pos:column="36">(<expr><op:operator pos:line="1785" pos:column="37">!</op:operator><op:operator pos:line="1785" pos:column="38">(</op:operator><name pos:line="1785" pos:column="39">levelPrev</name> <op:operator pos:line="1785" pos:column="49">&amp;</op:operator> <name pos:line="1785" pos:column="51">SC_FOLDLEVELHEADERFLAG</name><op:operator pos:line="1785" pos:column="73">)</op:operator></expr>)</condition><then pos:line="1785" pos:column="75"> <block pos:line="1785" pos:column="76">{
					<if pos:line="1786" pos:column="41">if <condition pos:line="1786" pos:column="44">(<expr><op:operator pos:line="1786" pos:column="45">(</op:operator><name pos:line="1786" pos:column="46">level</name> <op:operator pos:line="1786" pos:column="52">&amp;</op:operator> <name pos:line="1786" pos:column="54">SC_FOLDLEVELNUMBERMASK</name><op:operator pos:line="1786" pos:column="76">)</op:operator> <op:operator pos:line="1786" pos:column="78">&lt;</op:operator> <op:operator pos:line="1786" pos:column="80">(</op:operator><name pos:line="1786" pos:column="81">levelPrev</name> <op:operator pos:line="1786" pos:column="91">&amp;</op:operator> <name pos:line="1786" pos:column="93">SC_FOLDLEVELNUMBERMASK</name><op:operator pos:line="1786" pos:column="115">)</op:operator></expr>)</condition><then pos:line="1786" pos:column="117">
						<expr_stmt><expr><name pos:line="1787" pos:column="49">needWhiteClosure</name> <op:operator pos:line="1787" pos:column="66">=</op:operator> <lit:literal type="boolean" pos:line="1787" pos:column="68">true</lit:literal></expr>;</expr_stmt></then></if>
				}</block></then></if>
			}</block></then></if>
			<if pos:line="1790" pos:column="25">if <condition pos:line="1790" pos:column="28">(<expr><name><name pos:line="1790" pos:column="29">highlightDelimiter</name><op:operator pos:line="1790" pos:column="47">.</op:operator><name pos:line="1790" pos:column="48">isEnabled</name></name> <op:operator pos:line="1790" pos:column="58">&amp;&amp;</op:operator> <op:operator pos:line="1790" pos:column="61">(</op:operator><name><name pos:line="1790" pos:column="62">vs</name><op:operator pos:line="1790" pos:column="64">.</op:operator><name pos:line="1790" pos:column="65">ms</name><index pos:line="1790" pos:column="67">[<expr><name pos:line="1790" pos:column="68">margin</name></expr>]</index></name><op:operator pos:line="1790" pos:column="75">.</op:operator><name pos:line="1790" pos:column="76">mask</name> <op:operator pos:line="1790" pos:column="81">&amp;</op:operator> <name pos:line="1790" pos:column="83">SC_MASK_FOLDERS</name><op:operator pos:line="1790" pos:column="98">)</op:operator></expr>)</condition><then pos:line="1790" pos:column="100"> <block pos:line="1790" pos:column="101">{
				<decl_stmt><decl><type><name pos:line="1791" pos:column="33">int</name></type> <name pos:line="1791" pos:column="37">lineBack</name> <init pos:line="1791" pos:column="46">= <expr><call><name><name pos:line="1791" pos:column="48">cs</name><op:operator pos:line="1791" pos:column="50">.</op:operator><name pos:line="1791" pos:column="51">DocFromDisplay</name></name><argument_list pos:line="1791" pos:column="65">(<argument><expr><name pos:line="1791" pos:column="66">topLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1792" pos:column="33">int</name></type> <name pos:line="1792" pos:column="37">lineFront</name> <init pos:line="1792" pos:column="47">= <expr><call><name><name pos:line="1792" pos:column="49">cs</name><op:operator pos:line="1792" pos:column="51">.</op:operator><name pos:line="1792" pos:column="52">DocFromDisplay</name></name><argument_list pos:line="1792" pos:column="66">(<argument><expr><op:operator pos:line="1792" pos:column="67">(</op:operator><op:operator pos:line="1792" pos:column="68">(</op:operator><name><name pos:line="1792" pos:column="69">rcMargin</name><op:operator pos:line="1792" pos:column="77">.</op:operator><name pos:line="1792" pos:column="78">bottom</name></name> <op:operator pos:line="1792" pos:column="85">-</op:operator> <name><name pos:line="1792" pos:column="87">rcMargin</name><op:operator pos:line="1792" pos:column="95">.</op:operator><name pos:line="1792" pos:column="96">top</name></name><op:operator pos:line="1792" pos:column="99">)</op:operator> <op:operator pos:line="1792" pos:column="101">/</op:operator> <name><name pos:line="1792" pos:column="103">vs</name><op:operator pos:line="1792" pos:column="105">.</op:operator><name pos:line="1792" pos:column="106">lineHeight</name></name><op:operator pos:line="1792" pos:column="116">)</op:operator> <op:operator pos:line="1792" pos:column="118">+</op:operator> <name pos:line="1792" pos:column="120">topLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="1792" pos:column="129">+</op:operator> <lit:literal type="number" pos:line="1792" pos:column="131">1</lit:literal></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="1793" pos:column="33">pdoc</name><op:operator pos:line="1793" pos:column="37">-&gt;</op:operator><name pos:line="1793" pos:column="39">GetHighlightDelimiters</name></name><argument_list pos:line="1793" pos:column="61">(<argument><expr><name pos:line="1793" pos:column="62">highlightDelimiter</name></expr></argument>, <argument><expr><call><name><name pos:line="1793" pos:column="82">pdoc</name><op:operator pos:line="1793" pos:column="86">-&gt;</op:operator><name pos:line="1793" pos:column="88">LineFromPosition</name></name><argument_list pos:line="1793" pos:column="104">(<argument><expr><call><name pos:line="1793" pos:column="105">CurrentPosition</name><argument_list pos:line="1793" pos:column="120">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1793" pos:column="125">lineBack</name></expr></argument>, <argument><expr><name pos:line="1793" pos:column="135">lineFront</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<comment type="line" pos:line="1796" pos:column="25">// Old code does not know about new markers needed to distinguish all cases</comment>
			<decl_stmt><decl><type><name pos:line="1797" pos:column="25">int</name></type> <name pos:line="1797" pos:column="29">folderOpenMid</name> <init pos:line="1797" pos:column="43">= <expr><call><name pos:line="1797" pos:column="45">SubstituteMarkerIfEmpty</name><argument_list pos:line="1797" pos:column="68">(<argument><expr><name pos:line="1797" pos:column="69">SC_MARKNUM_FOLDEROPENMID</name></expr></argument>,
			        <argument><expr><name pos:line="1798" pos:column="33">SC_MARKNUM_FOLDEROPEN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1799" pos:column="25">int</name></type> <name pos:line="1799" pos:column="29">folderEnd</name> <init pos:line="1799" pos:column="39">= <expr><call><name pos:line="1799" pos:column="41">SubstituteMarkerIfEmpty</name><argument_list pos:line="1799" pos:column="64">(<argument><expr><name pos:line="1799" pos:column="65">SC_MARKNUM_FOLDEREND</name></expr></argument>,
			        <argument><expr><name pos:line="1800" pos:column="33">SC_MARKNUM_FOLDER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<while pos:line="1802" pos:column="25">while <condition pos:line="1802" pos:column="31">(<expr><op:operator pos:line="1802" pos:column="32">(</op:operator><name pos:line="1802" pos:column="33">visibleLine</name> <op:operator pos:line="1802" pos:column="45">&lt;</op:operator> <call><name><name pos:line="1802" pos:column="47">cs</name><op:operator pos:line="1802" pos:column="49">.</op:operator><name pos:line="1802" pos:column="50">LinesDisplayed</name></name><argument_list pos:line="1802" pos:column="64">()</argument_list></call><op:operator pos:line="1802" pos:column="66">)</op:operator> <op:operator pos:line="1802" pos:column="68">&amp;&amp;</op:operator> <name pos:line="1802" pos:column="71">yposScreen</name> <op:operator pos:line="1802" pos:column="82">&lt;</op:operator> <name><name pos:line="1802" pos:column="84">rcMargin</name><op:operator pos:line="1802" pos:column="92">.</op:operator><name pos:line="1802" pos:column="93">bottom</name></name></expr>)</condition> <block pos:line="1802" pos:column="101">{

				<expr_stmt><expr><call><name pos:line="1804" pos:column="33">PLATFORM_ASSERT</name><argument_list pos:line="1804" pos:column="48">(<argument><expr><name pos:line="1804" pos:column="49">visibleLine</name> <op:operator pos:line="1804" pos:column="61">&lt;</op:operator> <call><name><name pos:line="1804" pos:column="63">cs</name><op:operator pos:line="1804" pos:column="65">.</op:operator><name pos:line="1804" pos:column="66">LinesDisplayed</name></name><argument_list pos:line="1804" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1805" pos:column="33">int</name></type> <name pos:line="1805" pos:column="37">lineDoc</name> <init pos:line="1805" pos:column="45">= <expr><call><name><name pos:line="1805" pos:column="47">cs</name><op:operator pos:line="1805" pos:column="49">.</op:operator><name pos:line="1805" pos:column="50">DocFromDisplay</name></name><argument_list pos:line="1805" pos:column="64">(<argument><expr><name pos:line="1805" pos:column="65">visibleLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="1806" pos:column="33">PLATFORM_ASSERT</name><argument_list pos:line="1806" pos:column="48">(<argument><expr><call><name><name pos:line="1806" pos:column="49">cs</name><op:operator pos:line="1806" pos:column="51">.</op:operator><name pos:line="1806" pos:column="52">GetVisible</name></name><argument_list pos:line="1806" pos:column="62">(<argument><expr><name pos:line="1806" pos:column="63">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1807" pos:column="33">bool</name></type> <name pos:line="1807" pos:column="38">firstSubLine</name> <init pos:line="1807" pos:column="51">= <expr><name pos:line="1807" pos:column="53">visibleLine</name> <op:operator pos:line="1807" pos:column="65">==</op:operator> <call><name><name pos:line="1807" pos:column="68">cs</name><op:operator pos:line="1807" pos:column="70">.</op:operator><name pos:line="1807" pos:column="71">DisplayFromDoc</name></name><argument_list pos:line="1807" pos:column="85">(<argument><expr><name pos:line="1807" pos:column="86">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1808" pos:column="33">bool</name></type> <name pos:line="1808" pos:column="38">lastSubLine</name> <init pos:line="1808" pos:column="50">= <expr><name pos:line="1808" pos:column="52">visibleLine</name> <op:operator pos:line="1808" pos:column="64">==</op:operator> <op:operator pos:line="1808" pos:column="67">(</op:operator><call><name><name pos:line="1808" pos:column="68">cs</name><op:operator pos:line="1808" pos:column="70">.</op:operator><name pos:line="1808" pos:column="71">DisplayFromDoc</name></name><argument_list pos:line="1808" pos:column="85">(<argument><expr><name pos:line="1808" pos:column="86">lineDoc</name> <op:operator pos:line="1808" pos:column="94">+</op:operator> <lit:literal type="number" pos:line="1808" pos:column="96">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1808" pos:column="99">-</op:operator> <lit:literal type="number" pos:line="1808" pos:column="101">1</lit:literal><op:operator pos:line="1808" pos:column="102">)</op:operator></expr></init></decl>;</decl_stmt>

				<comment type="line" pos:line="1810" pos:column="33">// Decide which fold indicator should be displayed</comment>
				<expr_stmt><expr><name pos:line="1811" pos:column="33">level</name> <op:operator pos:line="1811" pos:column="39">=</op:operator> <call><name><name pos:line="1811" pos:column="41">pdoc</name><op:operator pos:line="1811" pos:column="45">-&gt;</op:operator><name pos:line="1811" pos:column="47">GetLevel</name></name><argument_list pos:line="1811" pos:column="55">(<argument><expr><name pos:line="1811" pos:column="56">lineDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1812" pos:column="33">int</name></type> <name pos:line="1812" pos:column="37">levelNext</name> <init pos:line="1812" pos:column="47">= <expr><call><name><name pos:line="1812" pos:column="49">pdoc</name><op:operator pos:line="1812" pos:column="53">-&gt;</op:operator><name pos:line="1812" pos:column="55">GetLevel</name></name><argument_list pos:line="1812" pos:column="63">(<argument><expr><name pos:line="1812" pos:column="64">lineDoc</name> <op:operator pos:line="1812" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="1812" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1813" pos:column="33">int</name></type> <name pos:line="1813" pos:column="37">marks</name> <init pos:line="1813" pos:column="43">= <expr><call><name><name pos:line="1813" pos:column="45">pdoc</name><op:operator pos:line="1813" pos:column="49">-&gt;</op:operator><name pos:line="1813" pos:column="51">GetMark</name></name><argument_list pos:line="1813" pos:column="58">(<argument><expr><name pos:line="1813" pos:column="59">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1814" pos:column="33">if <condition pos:line="1814" pos:column="36">(<expr><op:operator pos:line="1814" pos:column="37">!</op:operator><name pos:line="1814" pos:column="38">firstSubLine</name></expr>)</condition><then pos:line="1814" pos:column="51">
					<expr_stmt><expr><name pos:line="1815" pos:column="41">marks</name> <op:operator pos:line="1815" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="1815" pos:column="49">0</lit:literal></expr>;</expr_stmt></then></if>
				<decl_stmt><decl><type><name pos:line="1816" pos:column="33">int</name></type> <name pos:line="1816" pos:column="37">levelNum</name> <init pos:line="1816" pos:column="46">= <expr><name pos:line="1816" pos:column="48">level</name> <op:operator pos:line="1816" pos:column="54">&amp;</op:operator> <name pos:line="1816" pos:column="56">SC_FOLDLEVELNUMBERMASK</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1817" pos:column="33">int</name></type> <name pos:line="1817" pos:column="37">levelNextNum</name> <init pos:line="1817" pos:column="50">= <expr><name pos:line="1817" pos:column="52">levelNext</name> <op:operator pos:line="1817" pos:column="62">&amp;</op:operator> <name pos:line="1817" pos:column="64">SC_FOLDLEVELNUMBERMASK</name></expr></init></decl>;</decl_stmt>
				<if pos:line="1818" pos:column="33">if <condition pos:line="1818" pos:column="36">(<expr><name pos:line="1818" pos:column="37">level</name> <op:operator pos:line="1818" pos:column="43">&amp;</op:operator> <name pos:line="1818" pos:column="45">SC_FOLDLEVELHEADERFLAG</name></expr>)</condition><then pos:line="1818" pos:column="68"> <block pos:line="1818" pos:column="69">{
					<if pos:line="1819" pos:column="41">if <condition pos:line="1819" pos:column="44">(<expr><name pos:line="1819" pos:column="45">firstSubLine</name></expr>)</condition><then pos:line="1819" pos:column="58"> <block pos:line="1819" pos:column="59">{
						<if pos:line="1820" pos:column="49">if <condition pos:line="1820" pos:column="52">(<expr><name pos:line="1820" pos:column="53">levelNum</name> <op:operator pos:line="1820" pos:column="62">&lt;</op:operator> <name pos:line="1820" pos:column="64">levelNextNum</name></expr>)</condition><then pos:line="1820" pos:column="77"> <block pos:line="1820" pos:column="78">{
							<if pos:line="1821" pos:column="57">if <condition pos:line="1821" pos:column="60">(<expr><call><name><name pos:line="1821" pos:column="61">cs</name><op:operator pos:line="1821" pos:column="63">.</op:operator><name pos:line="1821" pos:column="64">GetExpanded</name></name><argument_list pos:line="1821" pos:column="75">(<argument><expr><name pos:line="1821" pos:column="76">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1821" pos:column="85"> <block pos:line="1821" pos:column="86">{
								<if pos:line="1822" pos:column="65">if <condition pos:line="1822" pos:column="68">(<expr><name pos:line="1822" pos:column="69">levelNum</name> <op:operator pos:line="1822" pos:column="78">==</op:operator> <name pos:line="1822" pos:column="81">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1822" pos:column="98">
									<expr_stmt><expr><name pos:line="1823" pos:column="73">marks</name> <op:operator pos:line="1823" pos:column="79">|=</op:operator> <lit:literal type="number" pos:line="1823" pos:column="82">1</lit:literal> <op:operator pos:line="1823" pos:column="84">&lt;&lt;</op:operator> <name pos:line="1823" pos:column="87">SC_MARKNUM_FOLDEROPEN</name></expr>;</expr_stmt></then>
								<else pos:line="1824" pos:column="65">else
									<expr_stmt><expr><name pos:line="1825" pos:column="73">marks</name> <op:operator pos:line="1825" pos:column="79">|=</op:operator> <lit:literal type="number" pos:line="1825" pos:column="82">1</lit:literal> <op:operator pos:line="1825" pos:column="84">&lt;&lt;</op:operator> <name pos:line="1825" pos:column="87">folderOpenMid</name></expr>;</expr_stmt></else></if>
							}</block></then> <else pos:line="1826" pos:column="59">else <block pos:line="1826" pos:column="64">{
								<if pos:line="1827" pos:column="65">if <condition pos:line="1827" pos:column="68">(<expr><name pos:line="1827" pos:column="69">levelNum</name> <op:operator pos:line="1827" pos:column="78">==</op:operator> <name pos:line="1827" pos:column="81">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1827" pos:column="98">
									<expr_stmt><expr><name pos:line="1828" pos:column="73">marks</name> <op:operator pos:line="1828" pos:column="79">|=</op:operator> <lit:literal type="number" pos:line="1828" pos:column="82">1</lit:literal> <op:operator pos:line="1828" pos:column="84">&lt;&lt;</op:operator> <name pos:line="1828" pos:column="87">SC_MARKNUM_FOLDER</name></expr>;</expr_stmt></then>
								<else pos:line="1829" pos:column="65">else
									<expr_stmt><expr><name pos:line="1830" pos:column="73">marks</name> <op:operator pos:line="1830" pos:column="79">|=</op:operator> <lit:literal type="number" pos:line="1830" pos:column="82">1</lit:literal> <op:operator pos:line="1830" pos:column="84">&lt;&lt;</op:operator> <name pos:line="1830" pos:column="87">folderEnd</name></expr>;</expr_stmt></else></if>
							}</block></else></if>
						}</block></then> <else pos:line="1832" pos:column="51">else <if pos:line="1832" pos:column="56">if <condition pos:line="1832" pos:column="59">(<expr><name pos:line="1832" pos:column="60">levelNum</name> <op:operator pos:line="1832" pos:column="69">&gt;</op:operator> <name pos:line="1832" pos:column="71">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1832" pos:column="88"> <block pos:line="1832" pos:column="89">{
							<expr_stmt><expr><name pos:line="1833" pos:column="57">marks</name> <op:operator pos:line="1833" pos:column="63">|=</op:operator> <lit:literal type="number" pos:line="1833" pos:column="66">1</lit:literal> <op:operator pos:line="1833" pos:column="68">&lt;&lt;</op:operator> <name pos:line="1833" pos:column="71">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
 						}</block></then></if></else></if>
					}</block></then> <else pos:line="1835" pos:column="43">else <block pos:line="1835" pos:column="48">{
						<if pos:line="1836" pos:column="49">if <condition pos:line="1836" pos:column="52">(<expr><name pos:line="1836" pos:column="53">levelNum</name> <op:operator pos:line="1836" pos:column="62">&lt;</op:operator> <name pos:line="1836" pos:column="64">levelNextNum</name></expr>)</condition><then pos:line="1836" pos:column="77"> <block pos:line="1836" pos:column="78">{
							<if pos:line="1837" pos:column="57">if <condition pos:line="1837" pos:column="60">(<expr><call><name><name pos:line="1837" pos:column="61">cs</name><op:operator pos:line="1837" pos:column="63">.</op:operator><name pos:line="1837" pos:column="64">GetExpanded</name></name><argument_list pos:line="1837" pos:column="75">(<argument><expr><name pos:line="1837" pos:column="76">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1837" pos:column="85"> <block pos:line="1837" pos:column="86">{
								<expr_stmt><expr><name pos:line="1838" pos:column="65">marks</name> <op:operator pos:line="1838" pos:column="71">|=</op:operator> <lit:literal type="number" pos:line="1838" pos:column="74">1</lit:literal> <op:operator pos:line="1838" pos:column="76">&lt;&lt;</op:operator> <name pos:line="1838" pos:column="79">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
							}</block></then> <else pos:line="1839" pos:column="59">else <if pos:line="1839" pos:column="64">if <condition pos:line="1839" pos:column="67">(<expr><name pos:line="1839" pos:column="68">levelNum</name> <op:operator pos:line="1839" pos:column="77">&gt;</op:operator> <name pos:line="1839" pos:column="79">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1839" pos:column="96"> <block pos:line="1839" pos:column="97">{
								<expr_stmt><expr><name pos:line="1840" pos:column="65">marks</name> <op:operator pos:line="1840" pos:column="71">|=</op:operator> <lit:literal type="number" pos:line="1840" pos:column="74">1</lit:literal> <op:operator pos:line="1840" pos:column="76">&lt;&lt;</op:operator> <name pos:line="1840" pos:column="79">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
							}</block></then></if></else></if>
						}</block></then> <else pos:line="1842" pos:column="51">else <if pos:line="1842" pos:column="56">if <condition pos:line="1842" pos:column="59">(<expr><name pos:line="1842" pos:column="60">levelNum</name> <op:operator pos:line="1842" pos:column="69">&gt;</op:operator> <name pos:line="1842" pos:column="71">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1842" pos:column="88"> <block pos:line="1842" pos:column="89">{
							<expr_stmt><expr><name pos:line="1843" pos:column="57">marks</name> <op:operator pos:line="1843" pos:column="63">|=</op:operator> <lit:literal type="number" pos:line="1843" pos:column="66">1</lit:literal> <op:operator pos:line="1843" pos:column="68">&lt;&lt;</op:operator> <name pos:line="1843" pos:column="71">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
 						}</block></then></if></else></if>
					}</block></else></if>
					<expr_stmt><expr><name pos:line="1846" pos:column="41">needWhiteClosure</name> <op:operator pos:line="1846" pos:column="58">=</op:operator> <lit:literal type="boolean" pos:line="1846" pos:column="60">false</lit:literal></expr>;</expr_stmt>
				}</block></then> <else pos:line="1847" pos:column="35">else <if pos:line="1847" pos:column="40">if <condition pos:line="1847" pos:column="43">(<expr><name pos:line="1847" pos:column="44">level</name> <op:operator pos:line="1847" pos:column="50">&amp;</op:operator> <name pos:line="1847" pos:column="52">SC_FOLDLEVELWHITEFLAG</name></expr>)</condition><then pos:line="1847" pos:column="74"> <block pos:line="1847" pos:column="75">{
					<if pos:line="1848" pos:column="41">if <condition pos:line="1848" pos:column="44">(<expr><name pos:line="1848" pos:column="45">needWhiteClosure</name></expr>)</condition><then pos:line="1848" pos:column="62"> <block pos:line="1848" pos:column="63">{
						<if pos:line="1849" pos:column="49">if <condition pos:line="1849" pos:column="52">(<expr><name pos:line="1849" pos:column="53">levelNext</name> <op:operator pos:line="1849" pos:column="63">&amp;</op:operator> <name pos:line="1849" pos:column="65">SC_FOLDLEVELWHITEFLAG</name></expr>)</condition><then pos:line="1849" pos:column="87"> <block pos:line="1849" pos:column="88">{
							<expr_stmt><expr><name pos:line="1850" pos:column="57">marks</name> <op:operator pos:line="1850" pos:column="63">|=</op:operator> <lit:literal type="number" pos:line="1850" pos:column="66">1</lit:literal> <op:operator pos:line="1850" pos:column="68">&lt;&lt;</op:operator> <name pos:line="1850" pos:column="71">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
						}</block></then> <else pos:line="1851" pos:column="51">else <if pos:line="1851" pos:column="56">if <condition pos:line="1851" pos:column="59">(<expr><name pos:line="1851" pos:column="60">levelNum</name> <op:operator pos:line="1851" pos:column="69">&gt;</op:operator> <name pos:line="1851" pos:column="71">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1851" pos:column="88"> <block pos:line="1851" pos:column="89">{
							<expr_stmt><expr><name pos:line="1852" pos:column="57">marks</name> <op:operator pos:line="1852" pos:column="63">|=</op:operator> <lit:literal type="number" pos:line="1852" pos:column="66">1</lit:literal> <op:operator pos:line="1852" pos:column="68">&lt;&lt;</op:operator> <name pos:line="1852" pos:column="71">SC_MARKNUM_FOLDERMIDTAIL</name></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="1853" pos:column="57">needWhiteClosure</name> <op:operator pos:line="1853" pos:column="74">=</op:operator> <lit:literal type="boolean" pos:line="1853" pos:column="76">false</lit:literal></expr>;</expr_stmt>
						}</block></then> <else pos:line="1854" pos:column="51">else <block pos:line="1854" pos:column="56">{
							<expr_stmt><expr><name pos:line="1855" pos:column="57">marks</name> <op:operator pos:line="1855" pos:column="63">|=</op:operator> <lit:literal type="number" pos:line="1855" pos:column="66">1</lit:literal> <op:operator pos:line="1855" pos:column="68">&lt;&lt;</op:operator> <name pos:line="1855" pos:column="71">SC_MARKNUM_FOLDERTAIL</name></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="1856" pos:column="57">needWhiteClosure</name> <op:operator pos:line="1856" pos:column="74">=</op:operator> <lit:literal type="boolean" pos:line="1856" pos:column="76">false</lit:literal></expr>;</expr_stmt>
						}</block></else></if></else></if>
					}</block></then> <else pos:line="1858" pos:column="43">else <if pos:line="1858" pos:column="48">if <condition pos:line="1858" pos:column="51">(<expr><name pos:line="1858" pos:column="52">levelNum</name> <op:operator pos:line="1858" pos:column="61">&gt;</op:operator> <name pos:line="1858" pos:column="63">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1858" pos:column="80"> <block pos:line="1858" pos:column="81">{
						<if pos:line="1859" pos:column="49">if <condition pos:line="1859" pos:column="52">(<expr><name pos:line="1859" pos:column="53">levelNextNum</name> <op:operator pos:line="1859" pos:column="66">&lt;</op:operator> <name pos:line="1859" pos:column="68">levelNum</name></expr>)</condition><then pos:line="1859" pos:column="77"> <block pos:line="1859" pos:column="78">{
							<if pos:line="1860" pos:column="57">if <condition pos:line="1860" pos:column="60">(<expr><name pos:line="1860" pos:column="61">levelNextNum</name> <op:operator pos:line="1860" pos:column="74">&gt;</op:operator> <name pos:line="1860" pos:column="76">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1860" pos:column="93"> <block pos:line="1860" pos:column="94">{
								<expr_stmt><expr><name pos:line="1861" pos:column="65">marks</name> <op:operator pos:line="1861" pos:column="71">|=</op:operator> <lit:literal type="number" pos:line="1861" pos:column="74">1</lit:literal> <op:operator pos:line="1861" pos:column="76">&lt;&lt;</op:operator> <name pos:line="1861" pos:column="79">SC_MARKNUM_FOLDERMIDTAIL</name></expr>;</expr_stmt>
							}</block></then> <else pos:line="1862" pos:column="59">else <block pos:line="1862" pos:column="64">{
								<expr_stmt><expr><name pos:line="1863" pos:column="65">marks</name> <op:operator pos:line="1863" pos:column="71">|=</op:operator> <lit:literal type="number" pos:line="1863" pos:column="74">1</lit:literal> <op:operator pos:line="1863" pos:column="76">&lt;&lt;</op:operator> <name pos:line="1863" pos:column="79">SC_MARKNUM_FOLDERTAIL</name></expr>;</expr_stmt>
							}</block></else></if>
						}</block></then> <else pos:line="1865" pos:column="51">else <block pos:line="1865" pos:column="56">{
							<expr_stmt><expr><name pos:line="1866" pos:column="57">marks</name> <op:operator pos:line="1866" pos:column="63">|=</op:operator> <lit:literal type="number" pos:line="1866" pos:column="66">1</lit:literal> <op:operator pos:line="1866" pos:column="68">&lt;&lt;</op:operator> <name pos:line="1866" pos:column="71">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
						}</block></else></if>
					}</block></then></if></else></if>
				}</block></then> <else pos:line="1869" pos:column="35">else <if pos:line="1869" pos:column="40">if <condition pos:line="1869" pos:column="43">(<expr><name pos:line="1869" pos:column="44">levelNum</name> <op:operator pos:line="1869" pos:column="53">&gt;</op:operator> <name pos:line="1869" pos:column="55">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1869" pos:column="72"> <block pos:line="1869" pos:column="73">{
					<if pos:line="1870" pos:column="41">if <condition pos:line="1870" pos:column="44">(<expr><name pos:line="1870" pos:column="45">levelNextNum</name> <op:operator pos:line="1870" pos:column="58">&lt;</op:operator> <name pos:line="1870" pos:column="60">levelNum</name></expr>)</condition><then pos:line="1870" pos:column="69"> <block pos:line="1870" pos:column="70">{
						<expr_stmt><expr><name pos:line="1871" pos:column="49">needWhiteClosure</name> <op:operator pos:line="1871" pos:column="66">=</op:operator> <lit:literal type="boolean" pos:line="1871" pos:column="68">false</lit:literal></expr>;</expr_stmt>
						<if pos:line="1872" pos:column="49">if <condition pos:line="1872" pos:column="52">(<expr><name pos:line="1872" pos:column="53">levelNext</name> <op:operator pos:line="1872" pos:column="63">&amp;</op:operator> <name pos:line="1872" pos:column="65">SC_FOLDLEVELWHITEFLAG</name></expr>)</condition><then pos:line="1872" pos:column="87"> <block pos:line="1872" pos:column="88">{
							<expr_stmt><expr><name pos:line="1873" pos:column="57">marks</name> <op:operator pos:line="1873" pos:column="63">|=</op:operator> <lit:literal type="number" pos:line="1873" pos:column="66">1</lit:literal> <op:operator pos:line="1873" pos:column="68">&lt;&lt;</op:operator> <name pos:line="1873" pos:column="71">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="1874" pos:column="57">needWhiteClosure</name> <op:operator pos:line="1874" pos:column="74">=</op:operator> <lit:literal type="boolean" pos:line="1874" pos:column="76">true</lit:literal></expr>;</expr_stmt>
						}</block></then> <else pos:line="1875" pos:column="51">else <if pos:line="1875" pos:column="56">if <condition pos:line="1875" pos:column="59">(<expr><name pos:line="1875" pos:column="60">lastSubLine</name></expr>)</condition><then pos:line="1875" pos:column="72"> <block pos:line="1875" pos:column="73">{
							<if pos:line="1876" pos:column="57">if <condition pos:line="1876" pos:column="60">(<expr><name pos:line="1876" pos:column="61">levelNextNum</name> <op:operator pos:line="1876" pos:column="74">&gt;</op:operator> <name pos:line="1876" pos:column="76">SC_FOLDLEVELBASE</name></expr>)</condition><then pos:line="1876" pos:column="93"> <block pos:line="1876" pos:column="94">{
								<expr_stmt><expr><name pos:line="1877" pos:column="65">marks</name> <op:operator pos:line="1877" pos:column="71">|=</op:operator> <lit:literal type="number" pos:line="1877" pos:column="74">1</lit:literal> <op:operator pos:line="1877" pos:column="76">&lt;&lt;</op:operator> <name pos:line="1877" pos:column="79">SC_MARKNUM_FOLDERMIDTAIL</name></expr>;</expr_stmt>
							}</block></then> <else pos:line="1878" pos:column="59">else <block pos:line="1878" pos:column="64">{
								<expr_stmt><expr><name pos:line="1879" pos:column="65">marks</name> <op:operator pos:line="1879" pos:column="71">|=</op:operator> <lit:literal type="number" pos:line="1879" pos:column="74">1</lit:literal> <op:operator pos:line="1879" pos:column="76">&lt;&lt;</op:operator> <name pos:line="1879" pos:column="79">SC_MARKNUM_FOLDERTAIL</name></expr>;</expr_stmt>
							}</block></else></if>
						}</block></then> <else pos:line="1881" pos:column="51">else <block pos:line="1881" pos:column="56">{
							<expr_stmt><expr><name pos:line="1882" pos:column="57">marks</name> <op:operator pos:line="1882" pos:column="63">|=</op:operator> <lit:literal type="number" pos:line="1882" pos:column="66">1</lit:literal> <op:operator pos:line="1882" pos:column="68">&lt;&lt;</op:operator> <name pos:line="1882" pos:column="71">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
						}</block></else></if></else></if>
					}</block></then> <else pos:line="1884" pos:column="43">else <block pos:line="1884" pos:column="48">{
						<expr_stmt><expr><name pos:line="1885" pos:column="49">marks</name> <op:operator pos:line="1885" pos:column="55">|=</op:operator> <lit:literal type="number" pos:line="1885" pos:column="58">1</lit:literal> <op:operator pos:line="1885" pos:column="60">&lt;&lt;</op:operator> <name pos:line="1885" pos:column="63">SC_MARKNUM_FOLDERSUB</name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if></else></if></else></if>
				<expr_stmt><expr><name pos:line="1888" pos:column="33">marks</name> <op:operator pos:line="1888" pos:column="39">&amp;=</op:operator> <name><name pos:line="1888" pos:column="42">vs</name><op:operator pos:line="1888" pos:column="44">.</op:operator><name pos:line="1888" pos:column="45">ms</name><index pos:line="1888" pos:column="47">[<expr><name pos:line="1888" pos:column="48">margin</name></expr>]</index></name><op:operator pos:line="1888" pos:column="55">.</op:operator><name pos:line="1888" pos:column="56">mask</name></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1889" pos:column="33">PRectangle</name></type> <name pos:line="1889" pos:column="44">rcMarker</name> <init pos:line="1889" pos:column="53">= <expr><name pos:line="1889" pos:column="55">rcSelMargin</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1890" pos:column="33">rcMarker</name><op:operator pos:line="1890" pos:column="41">.</op:operator><name pos:line="1890" pos:column="42">top</name></name> <op:operator pos:line="1890" pos:column="46">=</op:operator> <name pos:line="1890" pos:column="48">yposScreen</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="1891" pos:column="33">rcMarker</name><op:operator pos:line="1891" pos:column="41">.</op:operator><name pos:line="1891" pos:column="42">bottom</name></name> <op:operator pos:line="1891" pos:column="49">=</op:operator> <name pos:line="1891" pos:column="51">yposScreen</name> <op:operator pos:line="1891" pos:column="62">+</op:operator> <name><name pos:line="1891" pos:column="64">vs</name><op:operator pos:line="1891" pos:column="66">.</op:operator><name pos:line="1891" pos:column="67">lineHeight</name></name></expr>;</expr_stmt>
				<if pos:line="1892" pos:column="33">if <condition pos:line="1892" pos:column="36">(<expr><name><name pos:line="1892" pos:column="37">vs</name><op:operator pos:line="1892" pos:column="39">.</op:operator><name pos:line="1892" pos:column="40">ms</name><index pos:line="1892" pos:column="42">[<expr><name pos:line="1892" pos:column="43">margin</name></expr>]</index></name><op:operator pos:line="1892" pos:column="50">.</op:operator><name pos:line="1892" pos:column="51">style</name> <op:operator pos:line="1892" pos:column="57">==</op:operator> <name pos:line="1892" pos:column="60">SC_MARGIN_NUMBER</name></expr>)</condition><then pos:line="1892" pos:column="77"> <block pos:line="1892" pos:column="78">{
					<decl_stmt><decl><type><name pos:line="1893" pos:column="41">char</name></type> <name><name pos:line="1893" pos:column="46">number</name><index pos:line="1893" pos:column="52">[<expr><lit:literal type="number" pos:line="1893" pos:column="53">100</lit:literal></expr>]</index></name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="1894" pos:column="41">number</name><index pos:line="1894" pos:column="47">[<expr><lit:literal type="number" pos:line="1894" pos:column="48">0</lit:literal></expr>]</index></name> <op:operator pos:line="1894" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="1894" pos:column="53">'\0'</lit:literal></expr>;</expr_stmt>
					<if pos:line="1895" pos:column="41">if <condition pos:line="1895" pos:column="44">(<expr><name pos:line="1895" pos:column="45">firstSubLine</name></expr>)</condition><then pos:line="1895" pos:column="58">
						<expr_stmt><expr><call><name pos:line="1896" pos:column="49">sprintf</name><argument_list pos:line="1896" pos:column="56">(<argument><expr><name pos:line="1896" pos:column="57">number</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1896" pos:column="65">"%d"</lit:literal></expr></argument>, <argument><expr><name pos:line="1896" pos:column="71">lineDoc</name> <op:operator pos:line="1896" pos:column="79">+</op:operator> <lit:literal type="number" pos:line="1896" pos:column="81">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					<if pos:line="1897" pos:column="41">if <condition pos:line="1897" pos:column="44">(<expr><name pos:line="1897" pos:column="45">foldFlags</name> <op:operator pos:line="1897" pos:column="55">&amp;</op:operator> <name pos:line="1897" pos:column="57">SC_FOLDFLAG_LEVELNUMBERS</name></expr>)</condition><then pos:line="1897" pos:column="82"> <block pos:line="1897" pos:column="83">{
						<decl_stmt><decl><type><name pos:line="1898" pos:column="49">int</name></type> <name pos:line="1898" pos:column="53">lev</name> <init pos:line="1898" pos:column="57">= <expr><call><name><name pos:line="1898" pos:column="59">pdoc</name><op:operator pos:line="1898" pos:column="63">-&gt;</op:operator><name pos:line="1898" pos:column="65">GetLevel</name></name><argument_list pos:line="1898" pos:column="73">(<argument><expr><name pos:line="1898" pos:column="74">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name pos:line="1899" pos:column="49">sprintf</name><argument_list pos:line="1899" pos:column="56">(<argument><expr><name pos:line="1899" pos:column="57">number</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1899" pos:column="65">"%c%c %03X %03X"</lit:literal></expr></argument>,
						        <argument><expr><op:operator pos:line="1900" pos:column="57">(</op:operator><name pos:line="1900" pos:column="58">lev</name> <op:operator pos:line="1900" pos:column="62">&amp;</op:operator> <name pos:line="1900" pos:column="64">SC_FOLDLEVELHEADERFLAG</name><op:operator pos:line="1900" pos:column="86">)</op:operator> <op:operator pos:line="1900" pos:column="88">?</op:operator> <lit:literal type="char" pos:line="1900" pos:column="90">'H'</lit:literal> <op:operator pos:line="1900" pos:column="94">:</op:operator> <lit:literal type="char" pos:line="1900" pos:column="96">'_'</lit:literal></expr></argument>,
						        <argument><expr><op:operator pos:line="1901" pos:column="57">(</op:operator><name pos:line="1901" pos:column="58">lev</name> <op:operator pos:line="1901" pos:column="62">&amp;</op:operator> <name pos:line="1901" pos:column="64">SC_FOLDLEVELWHITEFLAG</name><op:operator pos:line="1901" pos:column="85">)</op:operator> <op:operator pos:line="1901" pos:column="87">?</op:operator> <lit:literal type="char" pos:line="1901" pos:column="89">'W'</lit:literal> <op:operator pos:line="1901" pos:column="93">:</op:operator> <lit:literal type="char" pos:line="1901" pos:column="95">'_'</lit:literal></expr></argument>,
						        <argument><expr><name pos:line="1902" pos:column="57">lev</name> <op:operator pos:line="1902" pos:column="61">&amp;</op:operator> <name pos:line="1902" pos:column="63">SC_FOLDLEVELNUMBERMASK</name></expr></argument>,
						        <argument><expr><name pos:line="1903" pos:column="57">lev</name> <op:operator pos:line="1903" pos:column="61">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="1903" pos:column="64">16</lit:literal></expr></argument>
						       )</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<decl_stmt><decl><type><name pos:line="1906" pos:column="41">PRectangle</name></type> <name pos:line="1906" pos:column="52">rcNumber</name> <init pos:line="1906" pos:column="61">= <expr><name pos:line="1906" pos:column="63">rcMarker</name></expr></init></decl>;</decl_stmt>
					<comment type="line" pos:line="1907" pos:column="41">// Right justify</comment>
					<decl_stmt><decl><type><name pos:line="1908" pos:column="41">int</name></type> <name pos:line="1908" pos:column="45">width</name> <init pos:line="1908" pos:column="51">= <expr><call><name><name pos:line="1908" pos:column="53">surface</name><op:operator pos:line="1908" pos:column="60">-&gt;</op:operator><name pos:line="1908" pos:column="62">WidthText</name></name><argument_list pos:line="1908" pos:column="71">(<argument><expr><name><name pos:line="1908" pos:column="72">vs</name><op:operator pos:line="1908" pos:column="74">.</op:operator><name pos:line="1908" pos:column="75">styles</name><index pos:line="1908" pos:column="81">[<expr><name pos:line="1908" pos:column="82">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="1908" pos:column="99">.</op:operator><name pos:line="1908" pos:column="100">font</name></expr></argument>, <argument><expr><name pos:line="1908" pos:column="106">number</name></expr></argument>, <argument><expr><call><name pos:line="1908" pos:column="114">istrlen</name><argument_list pos:line="1908" pos:column="121">(<argument><expr><name pos:line="1908" pos:column="122">number</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="1909" pos:column="41">int</name></type> <name pos:line="1909" pos:column="45">xpos</name> <init pos:line="1909" pos:column="50">= <expr><name><name pos:line="1909" pos:column="52">rcNumber</name><op:operator pos:line="1909" pos:column="60">.</op:operator><name pos:line="1909" pos:column="61">right</name></name> <op:operator pos:line="1909" pos:column="67">-</op:operator> <name pos:line="1909" pos:column="69">width</name> <op:operator pos:line="1909" pos:column="75">-</op:operator> <lit:literal type="number" pos:line="1909" pos:column="77">3</lit:literal></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="1910" pos:column="41">rcNumber</name><op:operator pos:line="1910" pos:column="49">.</op:operator><name pos:line="1910" pos:column="50">left</name></name> <op:operator pos:line="1910" pos:column="55">=</op:operator> <name pos:line="1910" pos:column="57">xpos</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="1911" pos:column="41">surface</name><op:operator pos:line="1911" pos:column="48">-&gt;</op:operator><name pos:line="1911" pos:column="50">DrawTextNoClip</name></name><argument_list pos:line="1911" pos:column="64">(<argument><expr><name pos:line="1911" pos:column="65">rcNumber</name></expr></argument>, <argument><expr><name><name pos:line="1911" pos:column="75">vs</name><op:operator pos:line="1911" pos:column="77">.</op:operator><name pos:line="1911" pos:column="78">styles</name><index pos:line="1911" pos:column="84">[<expr><name pos:line="1911" pos:column="85">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="1911" pos:column="102">.</op:operator><name pos:line="1911" pos:column="103">font</name></expr></argument>,
					        <argument><expr><name><name pos:line="1912" pos:column="49">rcNumber</name><op:operator pos:line="1912" pos:column="57">.</op:operator><name pos:line="1912" pos:column="58">top</name></name> <op:operator pos:line="1912" pos:column="62">+</op:operator> <name><name pos:line="1912" pos:column="64">vs</name><op:operator pos:line="1912" pos:column="66">.</op:operator><name pos:line="1912" pos:column="67">maxAscent</name></name></expr></argument>, <argument><expr><name pos:line="1912" pos:column="78">number</name></expr></argument>, <argument><expr><call><name pos:line="1912" pos:column="86">istrlen</name><argument_list pos:line="1912" pos:column="93">(<argument><expr><name pos:line="1912" pos:column="94">number</name></expr></argument>)</argument_list></call></expr></argument>,
					        <argument><expr><name><name pos:line="1913" pos:column="49">vs</name><op:operator pos:line="1913" pos:column="51">.</op:operator><name pos:line="1913" pos:column="52">styles</name><index pos:line="1913" pos:column="58">[<expr><name pos:line="1913" pos:column="59">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="1913" pos:column="76">.</op:operator><name><name pos:line="1913" pos:column="77">fore</name><op:operator pos:line="1913" pos:column="81">.</op:operator><name pos:line="1913" pos:column="82">allocated</name></name></expr></argument>,
					        <argument><expr><name><name pos:line="1914" pos:column="49">vs</name><op:operator pos:line="1914" pos:column="51">.</op:operator><name pos:line="1914" pos:column="52">styles</name><index pos:line="1914" pos:column="58">[<expr><name pos:line="1914" pos:column="59">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="1914" pos:column="76">.</op:operator><name><name pos:line="1914" pos:column="77">back</name><op:operator pos:line="1914" pos:column="81">.</op:operator><name pos:line="1914" pos:column="82">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="1915" pos:column="35">else <if pos:line="1915" pos:column="40">if <condition pos:line="1915" pos:column="43">(<expr><name><name pos:line="1915" pos:column="44">vs</name><op:operator pos:line="1915" pos:column="46">.</op:operator><name pos:line="1915" pos:column="47">ms</name><index pos:line="1915" pos:column="49">[<expr><name pos:line="1915" pos:column="50">margin</name></expr>]</index></name><op:operator pos:line="1915" pos:column="57">.</op:operator><name pos:line="1915" pos:column="58">style</name> <op:operator pos:line="1915" pos:column="64">==</op:operator> <name pos:line="1915" pos:column="67">SC_MARGIN_TEXT</name> <op:operator pos:line="1915" pos:column="82">||</op:operator> <name><name pos:line="1915" pos:column="85">vs</name><op:operator pos:line="1915" pos:column="87">.</op:operator><name pos:line="1915" pos:column="88">ms</name><index pos:line="1915" pos:column="90">[<expr><name pos:line="1915" pos:column="91">margin</name></expr>]</index></name><op:operator pos:line="1915" pos:column="98">.</op:operator><name pos:line="1915" pos:column="99">style</name> <op:operator pos:line="1915" pos:column="105">==</op:operator> <name pos:line="1915" pos:column="108">SC_MARGIN_RTEXT</name></expr>)</condition><then pos:line="1915" pos:column="124"> <block pos:line="1915" pos:column="125">{
					<if pos:line="1916" pos:column="41">if <condition pos:line="1916" pos:column="44">(<expr><name pos:line="1916" pos:column="45">firstSubLine</name></expr>)</condition><then pos:line="1916" pos:column="58"> <block pos:line="1916" pos:column="59">{
						<decl_stmt><decl><type><specifier pos:line="1917" pos:column="49">const</specifier> <name pos:line="1917" pos:column="55">StyledText</name></type> <name pos:line="1917" pos:column="66">stMargin</name>  <init pos:line="1917" pos:column="76">= <expr><call><name><name pos:line="1917" pos:column="78">pdoc</name><op:operator pos:line="1917" pos:column="82">-&gt;</op:operator><name pos:line="1917" pos:column="84">MarginStyledText</name></name><argument_list pos:line="1917" pos:column="100">(<argument><expr><name pos:line="1917" pos:column="101">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="1918" pos:column="49">if <condition pos:line="1918" pos:column="52">(<expr><name><name pos:line="1918" pos:column="53">stMargin</name><op:operator pos:line="1918" pos:column="61">.</op:operator><name pos:line="1918" pos:column="62">text</name></name> <op:operator pos:line="1918" pos:column="67">&amp;&amp;</op:operator> <call><name pos:line="1918" pos:column="70">ValidStyledText</name><argument_list pos:line="1918" pos:column="85">(<argument><expr><name pos:line="1918" pos:column="86">vs</name></expr></argument>, <argument><expr><name><name pos:line="1918" pos:column="90">vs</name><op:operator pos:line="1918" pos:column="92">.</op:operator><name pos:line="1918" pos:column="93">marginStyleOffset</name></name></expr></argument>, <argument><expr><name pos:line="1918" pos:column="112">stMargin</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1918" pos:column="122"> <block pos:line="1918" pos:column="123">{
							<expr_stmt><expr><call><name><name pos:line="1919" pos:column="57">surface</name><op:operator pos:line="1919" pos:column="64">-&gt;</op:operator><name pos:line="1919" pos:column="66">FillRectangle</name></name><argument_list pos:line="1919" pos:column="79">(<argument><expr><name pos:line="1919" pos:column="80">rcMarker</name></expr></argument>,
								<argument><expr><name><name pos:line="1920" pos:column="65">vs</name><op:operator pos:line="1920" pos:column="67">.</op:operator><name pos:line="1920" pos:column="68">styles</name><index pos:line="1920" pos:column="74">[<expr><call><name><name pos:line="1920" pos:column="75">stMargin</name><op:operator pos:line="1920" pos:column="83">.</op:operator><name pos:line="1920" pos:column="84">StyleAt</name></name><argument_list pos:line="1920" pos:column="91">(<argument><expr><lit:literal type="number" pos:line="1920" pos:column="92">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="1920" pos:column="94">+</op:operator><name><name pos:line="1920" pos:column="95">vs</name><op:operator pos:line="1920" pos:column="97">.</op:operator><name pos:line="1920" pos:column="98">marginStyleOffset</name></name></expr>]</index></name><op:operator pos:line="1920" pos:column="116">.</op:operator><name><name pos:line="1920" pos:column="117">back</name><op:operator pos:line="1920" pos:column="121">.</op:operator><name pos:line="1920" pos:column="122">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<if pos:line="1921" pos:column="57">if <condition pos:line="1921" pos:column="60">(<expr><name><name pos:line="1921" pos:column="61">vs</name><op:operator pos:line="1921" pos:column="63">.</op:operator><name pos:line="1921" pos:column="64">ms</name><index pos:line="1921" pos:column="66">[<expr><name pos:line="1921" pos:column="67">margin</name></expr>]</index></name><op:operator pos:line="1921" pos:column="74">.</op:operator><name pos:line="1921" pos:column="75">style</name> <op:operator pos:line="1921" pos:column="81">==</op:operator> <name pos:line="1921" pos:column="84">SC_MARGIN_RTEXT</name></expr>)</condition><then pos:line="1921" pos:column="100"> <block pos:line="1921" pos:column="101">{
								<decl_stmt><decl><type><name pos:line="1922" pos:column="65">int</name></type> <name pos:line="1922" pos:column="69">width</name> <init pos:line="1922" pos:column="75">= <expr><call><name pos:line="1922" pos:column="77">WidestLineWidth</name><argument_list pos:line="1922" pos:column="92">(<argument><expr><name pos:line="1922" pos:column="93">surface</name></expr></argument>, <argument><expr><name pos:line="1922" pos:column="102">vs</name></expr></argument>, <argument><expr><name><name pos:line="1922" pos:column="106">vs</name><op:operator pos:line="1922" pos:column="108">.</op:operator><name pos:line="1922" pos:column="109">marginStyleOffset</name></name></expr></argument>, <argument><expr><name pos:line="1922" pos:column="128">stMargin</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<expr_stmt><expr><name><name pos:line="1923" pos:column="65">rcMarker</name><op:operator pos:line="1923" pos:column="73">.</op:operator><name pos:line="1923" pos:column="74">left</name></name> <op:operator pos:line="1923" pos:column="79">=</op:operator> <name><name pos:line="1923" pos:column="81">rcMarker</name><op:operator pos:line="1923" pos:column="89">.</op:operator><name pos:line="1923" pos:column="90">right</name></name> <op:operator pos:line="1923" pos:column="96">-</op:operator> <name pos:line="1923" pos:column="98">width</name> <op:operator pos:line="1923" pos:column="104">-</op:operator> <lit:literal type="number" pos:line="1923" pos:column="106">3</lit:literal></expr>;</expr_stmt>
							}</block></then></if>
							<expr_stmt><expr><call><name pos:line="1925" pos:column="57">DrawStyledText</name><argument_list pos:line="1925" pos:column="71">(<argument><expr><name pos:line="1925" pos:column="72">surface</name></expr></argument>, <argument><expr><name pos:line="1925" pos:column="81">vs</name></expr></argument>, <argument><expr><name><name pos:line="1925" pos:column="85">vs</name><op:operator pos:line="1925" pos:column="87">.</op:operator><name pos:line="1925" pos:column="88">marginStyleOffset</name></name></expr></argument>, <argument><expr><name pos:line="1925" pos:column="107">rcMarker</name></expr></argument>, <argument><expr><name><name pos:line="1925" pos:column="117">rcMarker</name><op:operator pos:line="1925" pos:column="125">.</op:operator><name pos:line="1925" pos:column="126">top</name></name> <op:operator pos:line="1925" pos:column="130">+</op:operator> <name><name pos:line="1925" pos:column="132">vs</name><op:operator pos:line="1925" pos:column="134">.</op:operator><name pos:line="1925" pos:column="135">maxAscent</name></name></expr></argument>,
								<argument><expr><name pos:line="1926" pos:column="65">stMargin</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1926" pos:column="75">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1926" pos:column="78">stMargin</name><op:operator pos:line="1926" pos:column="86">.</op:operator><name pos:line="1926" pos:column="87">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then></if>
				}</block></then></if></else></if>

				<if pos:line="1931" pos:column="33">if <condition pos:line="1931" pos:column="36">(<expr><name pos:line="1931" pos:column="37">marks</name></expr>)</condition><then pos:line="1931" pos:column="43"> <block pos:line="1931" pos:column="44">{
					<for pos:line="1932" pos:column="41">for (<init><decl><type><name pos:line="1932" pos:column="46">int</name></type> <name pos:line="1932" pos:column="50">markBit</name> <init pos:line="1932" pos:column="58">= <expr><lit:literal type="number" pos:line="1932" pos:column="60">0</lit:literal></expr></init></decl>;</init> <condition><expr><op:operator pos:line="1932" pos:column="63">(</op:operator><name pos:line="1932" pos:column="64">markBit</name> <op:operator pos:line="1932" pos:column="72">&lt;</op:operator> <lit:literal type="number" pos:line="1932" pos:column="74">32</lit:literal><op:operator pos:line="1932" pos:column="76">)</op:operator> <op:operator pos:line="1932" pos:column="78">&amp;&amp;</op:operator> <name pos:line="1932" pos:column="81">marks</name></expr>;</condition> <incr><expr><name pos:line="1932" pos:column="88">markBit</name><op:operator pos:line="1932" pos:column="95">++</op:operator></expr></incr>) <block pos:line="1932" pos:column="99">{
						<if pos:line="1933" pos:column="49">if <condition pos:line="1933" pos:column="52">(<expr><name pos:line="1933" pos:column="53">marks</name> <op:operator pos:line="1933" pos:column="59">&amp;</op:operator> <lit:literal type="number" pos:line="1933" pos:column="61">1</lit:literal></expr>)</condition><then pos:line="1933" pos:column="63"> <block pos:line="1933" pos:column="64">{
							<decl_stmt><decl><type><name><name pos:line="1934" pos:column="57">LineMarker</name><op:operator pos:line="1934" pos:column="67">::</op:operator><name pos:line="1934" pos:column="69">typeOfFold</name></name></type> <name pos:line="1934" pos:column="80">tFold</name></decl>;</decl_stmt>
							<if pos:line="1935" pos:column="57">if <condition pos:line="1935" pos:column="60">(<expr><op:operator pos:line="1935" pos:column="61">!</op:operator><call><name><name pos:line="1935" pos:column="62">highlightDelimiter</name><op:operator pos:line="1935" pos:column="80">.</op:operator><name pos:line="1935" pos:column="81">isCurrentBlockHighlight</name></name><argument_list pos:line="1935" pos:column="104">(<argument><expr><name pos:line="1935" pos:column="105">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1935" pos:column="114"> <block pos:line="1935" pos:column="115">{
								<expr_stmt><expr><name pos:line="1936" pos:column="65">tFold</name> <op:operator pos:line="1936" pos:column="71">=</op:operator> <name><name pos:line="1936" pos:column="73">LineMarker</name><op:operator pos:line="1936" pos:column="83">::</op:operator><name pos:line="1936" pos:column="85">undefined</name></name></expr>;</expr_stmt>
							}</block></then> <else pos:line="1937" pos:column="59">else <if pos:line="1937" pos:column="64">if <condition pos:line="1937" pos:column="67">(<expr><call><name><name pos:line="1937" pos:column="68">highlightDelimiter</name><op:operator pos:line="1937" pos:column="86">.</op:operator><name pos:line="1937" pos:column="87">isBodyBlockFold</name></name><argument_list pos:line="1937" pos:column="102">(<argument><expr><name pos:line="1937" pos:column="103">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1937" pos:column="112"> <block pos:line="1937" pos:column="113">{
								<expr_stmt><expr><name pos:line="1938" pos:column="65">tFold</name> <op:operator pos:line="1938" pos:column="71">=</op:operator> <name><name pos:line="1938" pos:column="73">LineMarker</name><op:operator pos:line="1938" pos:column="83">::</op:operator><name pos:line="1938" pos:column="85">body</name></name></expr>;</expr_stmt>
							}</block></then> <else pos:line="1939" pos:column="59">else <if pos:line="1939" pos:column="64">if <condition pos:line="1939" pos:column="67">(<expr><call><name><name pos:line="1939" pos:column="68">highlightDelimiter</name><op:operator pos:line="1939" pos:column="86">.</op:operator><name pos:line="1939" pos:column="87">isHeadBlockFold</name></name><argument_list pos:line="1939" pos:column="102">(<argument><expr><name pos:line="1939" pos:column="103">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1939" pos:column="112"> <block pos:line="1939" pos:column="113">{
								<expr_stmt><expr><name pos:line="1940" pos:column="65">tFold</name> <op:operator pos:line="1940" pos:column="71">=</op:operator> <name><name pos:line="1940" pos:column="73">LineMarker</name><op:operator pos:line="1940" pos:column="83">::</op:operator><name pos:line="1940" pos:column="85">head</name></name></expr>;</expr_stmt>
							}</block></then> <else pos:line="1941" pos:column="59">else <if pos:line="1941" pos:column="64">if <condition pos:line="1941" pos:column="67">(<expr><call><name><name pos:line="1941" pos:column="68">highlightDelimiter</name><op:operator pos:line="1941" pos:column="86">.</op:operator><name pos:line="1941" pos:column="87">isTailBlockFold</name></name><argument_list pos:line="1941" pos:column="102">(<argument><expr><name pos:line="1941" pos:column="103">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1941" pos:column="112"> <block pos:line="1941" pos:column="113">{
								<expr_stmt><expr><name pos:line="1942" pos:column="65">tFold</name> <op:operator pos:line="1942" pos:column="71">=</op:operator> <name><name pos:line="1942" pos:column="73">LineMarker</name><op:operator pos:line="1942" pos:column="83">::</op:operator><name pos:line="1942" pos:column="85">tail</name></name></expr>;</expr_stmt>
							}</block></then> <else pos:line="1943" pos:column="59">else <block pos:line="1943" pos:column="64">{
								<comment type="line" pos:line="1944" pos:column="65">//Normally, this branch is never used. But I prefer to manage it anyway.</comment>
								<expr_stmt><expr><name pos:line="1945" pos:column="65">tFold</name> <op:operator pos:line="1945" pos:column="71">=</op:operator> <name><name pos:line="1945" pos:column="73">LineMarker</name><op:operator pos:line="1945" pos:column="83">::</op:operator><name pos:line="1945" pos:column="85">undefined</name></name></expr>;</expr_stmt>
							}</block></else></if></else></if></else></if></else></if>
							<expr_stmt><expr><name><name pos:line="1947" pos:column="57">vs</name><op:operator pos:line="1947" pos:column="59">.</op:operator><name pos:line="1947" pos:column="60">markers</name><index pos:line="1947" pos:column="67">[<expr><name pos:line="1947" pos:column="68">markBit</name></expr>]</index></name><op:operator pos:line="1947" pos:column="76">.</op:operator><call><name pos:line="1947" pos:column="77">Draw</name><argument_list pos:line="1947" pos:column="81">(<argument><expr><name pos:line="1947" pos:column="82">surface</name></expr></argument>, <argument><expr><name pos:line="1947" pos:column="91">rcMarker</name></expr></argument>, <argument><expr><name><name pos:line="1947" pos:column="101">vs</name><op:operator pos:line="1947" pos:column="103">.</op:operator><name pos:line="1947" pos:column="104">styles</name><index pos:line="1947" pos:column="110">[<expr><name pos:line="1947" pos:column="111">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="1947" pos:column="128">.</op:operator><name pos:line="1947" pos:column="129">font</name></expr></argument>, <argument><expr><name pos:line="1947" pos:column="135">tFold</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
						<expr_stmt><expr><name pos:line="1949" pos:column="49">marks</name> <op:operator pos:line="1949" pos:column="55">&gt;&gt;=</op:operator> <lit:literal type="number" pos:line="1949" pos:column="59">1</lit:literal></expr>;</expr_stmt>
					}</block></for>
				}</block></then></if>

				<expr_stmt><expr><name pos:line="1953" pos:column="33">visibleLine</name><op:operator pos:line="1953" pos:column="44">++</op:operator></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1954" pos:column="33">yposScreen</name> <op:operator pos:line="1954" pos:column="44">+=</op:operator> <name><name pos:line="1954" pos:column="47">vs</name><op:operator pos:line="1954" pos:column="49">.</op:operator><name pos:line="1954" pos:column="50">lineHeight</name></name></expr>;</expr_stmt>
			}</block></while>
		}</block></then></if>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="1959" pos:column="9">PRectangle</name></type> <name pos:line="1959" pos:column="20">rcBlankMargin</name> <init pos:line="1959" pos:column="34">= <expr><name pos:line="1959" pos:column="36">rcMargin</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="1960" pos:column="9">rcBlankMargin</name><op:operator pos:line="1960" pos:column="22">.</op:operator><name pos:line="1960" pos:column="23">left</name></name> <op:operator pos:line="1960" pos:column="28">=</op:operator> <name><name pos:line="1960" pos:column="30">rcSelMargin</name><op:operator pos:line="1960" pos:column="41">.</op:operator><name pos:line="1960" pos:column="42">right</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1961" pos:column="9">surface</name><op:operator pos:line="1961" pos:column="16">-&gt;</op:operator><name pos:line="1961" pos:column="18">FillRectangle</name></name><argument_list pos:line="1961" pos:column="31">(<argument><expr><name pos:line="1961" pos:column="32">rcBlankMargin</name></expr></argument>, <argument><expr><name><name pos:line="1961" pos:column="47">vs</name><op:operator pos:line="1961" pos:column="49">.</op:operator><name pos:line="1961" pos:column="50">styles</name><index pos:line="1961" pos:column="56">[<expr><name pos:line="1961" pos:column="57">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="1961" pos:column="71">.</op:operator><name><name pos:line="1961" pos:column="72">back</name><op:operator pos:line="1961" pos:column="76">.</op:operator><name pos:line="1961" pos:column="77">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1963" pos:column="9">if <condition pos:line="1963" pos:column="12">(<expr><name pos:line="1963" pos:column="13">bufferedDraw</name></expr>)</condition><then pos:line="1963" pos:column="26"> <block pos:line="1963" pos:column="27">{
		<expr_stmt><expr><call><name><name pos:line="1964" pos:column="17">surfWindow</name><op:operator pos:line="1964" pos:column="27">-&gt;</op:operator><name pos:line="1964" pos:column="29">Copy</name></name><argument_list pos:line="1964" pos:column="33">(<argument><expr><name pos:line="1964" pos:column="34">rcMargin</name></expr></argument>, <argument><expr><call><name pos:line="1964" pos:column="44">Point</name><argument_list pos:line="1964" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1964" pos:column="53">*</op:operator><name pos:line="1964" pos:column="54">pixmapSelMargin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1968" pos:column="1">void</name></type> <name pos:line="1968" pos:column="6">DrawTabArrow</name><parameter_list pos:line="1968" pos:column="18">(<param><decl><type><name pos:line="1968" pos:column="19">Surface</name> <type:modifier pos:line="1968" pos:column="27">*</type:modifier></type><name pos:line="1968" pos:column="28">surface</name></decl></param>, <param><decl><type><name pos:line="1968" pos:column="37">PRectangle</name></type> <name pos:line="1968" pos:column="48">rcTab</name></decl></param>, <param><decl><type><name pos:line="1968" pos:column="55">int</name></type> <name pos:line="1968" pos:column="59">ymid</name></decl></param>)</parameter_list> <block pos:line="1968" pos:column="65">{
	<decl_stmt><decl><type><name pos:line="1969" pos:column="9">int</name></type> <name pos:line="1969" pos:column="13">ydiff</name> <init pos:line="1969" pos:column="19">= <expr><op:operator pos:line="1969" pos:column="21">(</op:operator><name><name pos:line="1969" pos:column="22">rcTab</name><op:operator pos:line="1969" pos:column="27">.</op:operator><name pos:line="1969" pos:column="28">bottom</name></name> <op:operator pos:line="1969" pos:column="35">-</op:operator> <name><name pos:line="1969" pos:column="37">rcTab</name><op:operator pos:line="1969" pos:column="42">.</op:operator><name pos:line="1969" pos:column="43">top</name></name><op:operator pos:line="1969" pos:column="46">)</op:operator> <op:operator pos:line="1969" pos:column="48">/</op:operator> <lit:literal type="number" pos:line="1969" pos:column="50">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1970" pos:column="9">int</name></type> <name pos:line="1970" pos:column="13">xhead</name> <init pos:line="1970" pos:column="19">= <expr><name><name pos:line="1970" pos:column="21">rcTab</name><op:operator pos:line="1970" pos:column="26">.</op:operator><name pos:line="1970" pos:column="27">right</name></name> <op:operator pos:line="1970" pos:column="33">-</op:operator> <lit:literal type="number" pos:line="1970" pos:column="35">1</lit:literal> <op:operator pos:line="1970" pos:column="37">-</op:operator> <name pos:line="1970" pos:column="39">ydiff</name></expr></init></decl>;</decl_stmt>
	<if pos:line="1971" pos:column="9">if <condition pos:line="1971" pos:column="12">(<expr><name pos:line="1971" pos:column="13">xhead</name> <op:operator pos:line="1971" pos:column="19">&lt;=</op:operator> <name><name pos:line="1971" pos:column="22">rcTab</name><op:operator pos:line="1971" pos:column="27">.</op:operator><name pos:line="1971" pos:column="28">left</name></name></expr>)</condition><then pos:line="1971" pos:column="33"> <block pos:line="1971" pos:column="34">{
		<expr_stmt><expr><name pos:line="1972" pos:column="17">ydiff</name> <op:operator pos:line="1972" pos:column="23">-=</op:operator> <name><name pos:line="1972" pos:column="26">rcTab</name><op:operator pos:line="1972" pos:column="31">.</op:operator><name pos:line="1972" pos:column="32">left</name></name> <op:operator pos:line="1972" pos:column="37">-</op:operator> <name pos:line="1972" pos:column="39">xhead</name> <op:operator pos:line="1972" pos:column="45">-</op:operator> <lit:literal type="number" pos:line="1972" pos:column="47">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1973" pos:column="17">xhead</name> <op:operator pos:line="1973" pos:column="23">=</op:operator> <name><name pos:line="1973" pos:column="25">rcTab</name><op:operator pos:line="1973" pos:column="30">.</op:operator><name pos:line="1973" pos:column="31">left</name></name> <op:operator pos:line="1973" pos:column="36">-</op:operator> <lit:literal type="number" pos:line="1973" pos:column="38">1</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="1975" pos:column="9">if <condition pos:line="1975" pos:column="12">(<expr><op:operator pos:line="1975" pos:column="13">(</op:operator><name><name pos:line="1975" pos:column="14">rcTab</name><op:operator pos:line="1975" pos:column="19">.</op:operator><name pos:line="1975" pos:column="20">left</name></name> <op:operator pos:line="1975" pos:column="25">+</op:operator> <lit:literal type="number" pos:line="1975" pos:column="27">2</lit:literal><op:operator pos:line="1975" pos:column="28">)</op:operator> <op:operator pos:line="1975" pos:column="30">&lt;</op:operator> <op:operator pos:line="1975" pos:column="32">(</op:operator><name><name pos:line="1975" pos:column="33">rcTab</name><op:operator pos:line="1975" pos:column="38">.</op:operator><name pos:line="1975" pos:column="39">right</name></name> <op:operator pos:line="1975" pos:column="45">-</op:operator> <lit:literal type="number" pos:line="1975" pos:column="47">1</lit:literal><op:operator pos:line="1975" pos:column="48">)</op:operator></expr>)</condition><then pos:line="1975" pos:column="50">
		<expr_stmt><expr><call><name><name pos:line="1976" pos:column="17">surface</name><op:operator pos:line="1976" pos:column="24">-&gt;</op:operator><name pos:line="1976" pos:column="26">MoveTo</name></name><argument_list pos:line="1976" pos:column="32">(<argument><expr><name><name pos:line="1976" pos:column="33">rcTab</name><op:operator pos:line="1976" pos:column="38">.</op:operator><name pos:line="1976" pos:column="39">left</name></name> <op:operator pos:line="1976" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="1976" pos:column="46">2</lit:literal></expr></argument>, <argument><expr><name pos:line="1976" pos:column="49">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="1977" pos:column="9">else
		<expr_stmt><expr><call><name><name pos:line="1978" pos:column="17">surface</name><op:operator pos:line="1978" pos:column="24">-&gt;</op:operator><name pos:line="1978" pos:column="26">MoveTo</name></name><argument_list pos:line="1978" pos:column="32">(<argument><expr><name><name pos:line="1978" pos:column="33">rcTab</name><op:operator pos:line="1978" pos:column="38">.</op:operator><name pos:line="1978" pos:column="39">right</name></name> <op:operator pos:line="1978" pos:column="45">-</op:operator> <lit:literal type="number" pos:line="1978" pos:column="47">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1978" pos:column="50">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	<expr_stmt><expr><call><name><name pos:line="1979" pos:column="9">surface</name><op:operator pos:line="1979" pos:column="16">-&gt;</op:operator><name pos:line="1979" pos:column="18">LineTo</name></name><argument_list pos:line="1979" pos:column="24">(<argument><expr><name><name pos:line="1979" pos:column="25">rcTab</name><op:operator pos:line="1979" pos:column="30">.</op:operator><name pos:line="1979" pos:column="31">right</name></name> <op:operator pos:line="1979" pos:column="37">-</op:operator> <lit:literal type="number" pos:line="1979" pos:column="39">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1979" pos:column="42">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1980" pos:column="9">surface</name><op:operator pos:line="1980" pos:column="16">-&gt;</op:operator><name pos:line="1980" pos:column="18">LineTo</name></name><argument_list pos:line="1980" pos:column="24">(<argument><expr><name pos:line="1980" pos:column="25">xhead</name></expr></argument>, <argument><expr><name pos:line="1980" pos:column="32">ymid</name> <op:operator pos:line="1980" pos:column="37">-</op:operator> <name pos:line="1980" pos:column="39">ydiff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1981" pos:column="9">surface</name><op:operator pos:line="1981" pos:column="16">-&gt;</op:operator><name pos:line="1981" pos:column="18">MoveTo</name></name><argument_list pos:line="1981" pos:column="24">(<argument><expr><name><name pos:line="1981" pos:column="25">rcTab</name><op:operator pos:line="1981" pos:column="30">.</op:operator><name pos:line="1981" pos:column="31">right</name></name> <op:operator pos:line="1981" pos:column="37">-</op:operator> <lit:literal type="number" pos:line="1981" pos:column="39">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1981" pos:column="42">ymid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1982" pos:column="9">surface</name><op:operator pos:line="1982" pos:column="16">-&gt;</op:operator><name pos:line="1982" pos:column="18">LineTo</name></name><argument_list pos:line="1982" pos:column="24">(<argument><expr><name pos:line="1982" pos:column="25">xhead</name></expr></argument>, <argument><expr><name pos:line="1982" pos:column="32">ymid</name> <op:operator pos:line="1982" pos:column="37">+</op:operator> <name pos:line="1982" pos:column="39">ydiff</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1985" pos:column="1">LineLayout</name> <type:modifier pos:line="1985" pos:column="12">*</type:modifier></type><name><name pos:line="1985" pos:column="13">Editor</name><op:operator pos:line="1985" pos:column="19">::</op:operator><name pos:line="1985" pos:column="21">RetrieveLineLayout</name></name><parameter_list pos:line="1985" pos:column="39">(<param><decl><type><name pos:line="1985" pos:column="40">int</name></type> <name pos:line="1985" pos:column="44">lineNumber</name></decl></param>)</parameter_list> <block pos:line="1985" pos:column="56">{
	<decl_stmt><decl><type><name pos:line="1986" pos:column="9">int</name></type> <name pos:line="1986" pos:column="13">posLineStart</name> <init pos:line="1986" pos:column="26">= <expr><call><name><name pos:line="1986" pos:column="28">pdoc</name><op:operator pos:line="1986" pos:column="32">-&gt;</op:operator><name pos:line="1986" pos:column="34">LineStart</name></name><argument_list pos:line="1986" pos:column="43">(<argument><expr><name pos:line="1986" pos:column="44">lineNumber</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1987" pos:column="9">int</name></type> <name pos:line="1987" pos:column="13">posLineEnd</name> <init pos:line="1987" pos:column="24">= <expr><call><name><name pos:line="1987" pos:column="26">pdoc</name><op:operator pos:line="1987" pos:column="30">-&gt;</op:operator><name pos:line="1987" pos:column="32">LineStart</name></name><argument_list pos:line="1987" pos:column="41">(<argument><expr><name pos:line="1987" pos:column="42">lineNumber</name> <op:operator pos:line="1987" pos:column="53">+</op:operator> <lit:literal type="number" pos:line="1987" pos:column="55">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1988" pos:column="9">PLATFORM_ASSERT</name><argument_list pos:line="1988" pos:column="24">(<argument><expr><name pos:line="1988" pos:column="25">posLineEnd</name> <op:operator pos:line="1988" pos:column="36">&gt;=</op:operator> <name pos:line="1988" pos:column="39">posLineStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1989" pos:column="9">int</name></type> <name pos:line="1989" pos:column="13">lineCaret</name> <init pos:line="1989" pos:column="23">= <expr><call><name><name pos:line="1989" pos:column="25">pdoc</name><op:operator pos:line="1989" pos:column="29">-&gt;</op:operator><name pos:line="1989" pos:column="31">LineFromPosition</name></name><argument_list pos:line="1989" pos:column="47">(<argument><expr><call><name><name pos:line="1989" pos:column="48">sel</name><op:operator pos:line="1989" pos:column="51">.</op:operator><name pos:line="1989" pos:column="52">MainCaret</name></name><argument_list pos:line="1989" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="1990" pos:column="9">return <expr><call><name><name pos:line="1990" pos:column="16">llc</name><op:operator pos:line="1990" pos:column="19">.</op:operator><name pos:line="1990" pos:column="20">Retrieve</name></name><argument_list pos:line="1990" pos:column="28">(<argument><expr><name pos:line="1990" pos:column="29">lineNumber</name></expr></argument>, <argument><expr><name pos:line="1990" pos:column="41">lineCaret</name></expr></argument>,
	        <argument><expr><name pos:line="1991" pos:column="17">posLineEnd</name> <op:operator pos:line="1991" pos:column="28">-</op:operator> <name pos:line="1991" pos:column="30">posLineStart</name></expr></argument>, <argument><expr><call><name><name pos:line="1991" pos:column="44">pdoc</name><op:operator pos:line="1991" pos:column="48">-&gt;</op:operator><name pos:line="1991" pos:column="50">GetStyleClock</name></name><argument_list pos:line="1991" pos:column="63">()</argument_list></call></expr></argument>,
	        <argument><expr><call><name pos:line="1992" pos:column="17">LinesOnScreen</name><argument_list pos:line="1992" pos:column="30">()</argument_list></call> <op:operator pos:line="1992" pos:column="33">+</op:operator> <lit:literal type="number" pos:line="1992" pos:column="35">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1992" pos:column="38">pdoc</name><op:operator pos:line="1992" pos:column="42">-&gt;</op:operator><name pos:line="1992" pos:column="44">LinesTotal</name></name><argument_list pos:line="1992" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><specifier pos:line="1995" pos:column="1">static</specifier> <name pos:line="1995" pos:column="8">bool</name></type> <name pos:line="1995" pos:column="13">GoodTrailByte</name><parameter_list pos:line="1995" pos:column="26">(<param><decl><type><name pos:line="1995" pos:column="27">int</name></type> <name pos:line="1995" pos:column="31">v</name></decl></param>)</parameter_list> <block pos:line="1995" pos:column="34">{
	<return pos:line="1996" pos:column="9">return <expr><op:operator pos:line="1996" pos:column="16">(</op:operator><name pos:line="1996" pos:column="17">v</name> <op:operator pos:line="1996" pos:column="19">&gt;=</op:operator> <lit:literal type="number" pos:line="1996" pos:column="22">0x80</lit:literal><op:operator pos:line="1996" pos:column="26">)</op:operator> <op:operator pos:line="1996" pos:column="28">&amp;&amp;</op:operator> <op:operator pos:line="1996" pos:column="31">(</op:operator><name pos:line="1996" pos:column="32">v</name> <op:operator pos:line="1996" pos:column="34">&lt;</op:operator> <lit:literal type="number" pos:line="1996" pos:column="36">0xc0</lit:literal><op:operator pos:line="1996" pos:column="40">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="1999" pos:column="1">bool</name></type> <name pos:line="1999" pos:column="6">BadUTF</name><parameter_list pos:line="1999" pos:column="12">(<param><decl><type><specifier pos:line="1999" pos:column="13">const</specifier> <name pos:line="1999" pos:column="19">char</name> <type:modifier pos:line="1999" pos:column="24">*</type:modifier></type><name pos:line="1999" pos:column="25">s</name></decl></param>, <param><decl><type><name pos:line="1999" pos:column="28">int</name></type> <name pos:line="1999" pos:column="32">len</name></decl></param>, <param><decl><type><name pos:line="1999" pos:column="37">int</name> <type:modifier pos:line="1999" pos:column="41">&amp;</type:modifier></type><name pos:line="1999" pos:column="42">trailBytes</name></decl></param>)</parameter_list> <block pos:line="1999" pos:column="54">{
	<comment type="line" pos:line="2000" pos:column="9">// For the rules: http://www.cl.cam.ac.uk/~mgk25/unicode.html#utf-8</comment>
	<if pos:line="2001" pos:column="9">if <condition pos:line="2001" pos:column="12">(<expr><name pos:line="2001" pos:column="13">trailBytes</name></expr>)</condition><then pos:line="2001" pos:column="24"> <block pos:line="2001" pos:column="25">{
		<expr_stmt><expr><name pos:line="2002" pos:column="17">trailBytes</name><op:operator pos:line="2002" pos:column="27">--</op:operator></expr>;</expr_stmt>
		<return pos:line="2003" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2003" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if>
	<decl_stmt><decl><type><specifier pos:line="2005" pos:column="9">const</specifier> <name pos:line="2005" pos:column="15">unsigned</name> <name pos:line="2005" pos:column="24">char</name> <type:modifier pos:line="2005" pos:column="29">*</type:modifier></type><name pos:line="2005" pos:column="30">us</name> <init pos:line="2005" pos:column="33">= <expr><call><name><name pos:line="2005" pos:column="35">reinterpret_cast</name><argument_list pos:line="2005" pos:column="51">&lt;<argument><expr><specifier pos:line="2005" pos:column="52">const</specifier> <name pos:line="2005" pos:column="58">unsigned</name> <name pos:line="2005" pos:column="67">char</name> <op:operator pos:line="2005" pos:column="72">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="2005" pos:column="74">(<argument><expr><name pos:line="2005" pos:column="75">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2006" pos:column="9">if <condition pos:line="2006" pos:column="12">(<expr><op:operator pos:line="2006" pos:column="13">*</op:operator><name pos:line="2006" pos:column="14">us</name> <op:operator pos:line="2006" pos:column="17">&lt;</op:operator> <lit:literal type="number" pos:line="2006" pos:column="19">0x80</lit:literal></expr>)</condition><then pos:line="2006" pos:column="24"> <block pos:line="2006" pos:column="25">{
		<comment type="line" pos:line="2007" pos:column="17">// Single bytes easy</comment>
		<return pos:line="2008" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2008" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then> <else pos:line="2009" pos:column="11">else <if pos:line="2009" pos:column="16">if <condition pos:line="2009" pos:column="19">(<expr><op:operator pos:line="2009" pos:column="20">*</op:operator><name pos:line="2009" pos:column="21">us</name> <op:operator pos:line="2009" pos:column="24">&gt;</op:operator> <lit:literal type="number" pos:line="2009" pos:column="26">0xF4</lit:literal></expr>)</condition><then pos:line="2009" pos:column="31"> <block pos:line="2009" pos:column="32">{
		<comment type="line" pos:line="2010" pos:column="17">// Characters longer than 4 bytes not possible in current UTF-8</comment>
		<return pos:line="2011" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2011" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then> <else pos:line="2012" pos:column="11">else <if pos:line="2012" pos:column="16">if <condition pos:line="2012" pos:column="19">(<expr><op:operator pos:line="2012" pos:column="20">*</op:operator><name pos:line="2012" pos:column="21">us</name> <op:operator pos:line="2012" pos:column="24">&gt;=</op:operator> <lit:literal type="number" pos:line="2012" pos:column="27">0xF0</lit:literal></expr>)</condition><then pos:line="2012" pos:column="32"> <block pos:line="2012" pos:column="33">{
		<comment type="line" pos:line="2013" pos:column="17">// 4 bytes</comment>
		<if pos:line="2014" pos:column="17">if <condition pos:line="2014" pos:column="20">(<expr><name pos:line="2014" pos:column="21">len</name> <op:operator pos:line="2014" pos:column="25">&lt;</op:operator> <lit:literal type="number" pos:line="2014" pos:column="27">4</lit:literal></expr>)</condition><then pos:line="2014" pos:column="29">
			<return pos:line="2015" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2015" pos:column="32">true</lit:literal></expr>;</return></then></if>
		<if pos:line="2016" pos:column="17">if <condition pos:line="2016" pos:column="20">(<expr><call><name pos:line="2016" pos:column="21">GoodTrailByte</name><argument_list pos:line="2016" pos:column="34">(<argument><expr><name><name pos:line="2016" pos:column="35">us</name><index pos:line="2016" pos:column="37">[<expr><lit:literal type="number" pos:line="2016" pos:column="38">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call> <op:operator pos:line="2016" pos:column="42">&amp;&amp;</op:operator> <call><name pos:line="2016" pos:column="45">GoodTrailByte</name><argument_list pos:line="2016" pos:column="58">(<argument><expr><name><name pos:line="2016" pos:column="59">us</name><index pos:line="2016" pos:column="61">[<expr><lit:literal type="number" pos:line="2016" pos:column="62">2</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call> <op:operator pos:line="2016" pos:column="66">&amp;&amp;</op:operator> <call><name pos:line="2016" pos:column="69">GoodTrailByte</name><argument_list pos:line="2016" pos:column="82">(<argument><expr><name><name pos:line="2016" pos:column="83">us</name><index pos:line="2016" pos:column="85">[<expr><lit:literal type="number" pos:line="2016" pos:column="86">3</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2016" pos:column="90"> <block pos:line="2016" pos:column="91">{
			<if pos:line="2017" pos:column="25">if <condition pos:line="2017" pos:column="28">(<expr><op:operator pos:line="2017" pos:column="29">*</op:operator><name pos:line="2017" pos:column="30">us</name> <op:operator pos:line="2017" pos:column="33">==</op:operator> <lit:literal type="number" pos:line="2017" pos:column="36">0xf4</lit:literal></expr>)</condition><then pos:line="2017" pos:column="41"> <block pos:line="2017" pos:column="42">{
				<comment type="line" pos:line="2018" pos:column="33">// Check if encoding a value beyond the last Unicode character 10FFFF</comment>
				<if pos:line="2019" pos:column="33">if <condition pos:line="2019" pos:column="36">(<expr><name><name pos:line="2019" pos:column="37">us</name><index pos:line="2019" pos:column="39">[<expr><lit:literal type="number" pos:line="2019" pos:column="40">1</lit:literal></expr>]</index></name> <op:operator pos:line="2019" pos:column="43">&gt;</op:operator> <lit:literal type="number" pos:line="2019" pos:column="45">0x8f</lit:literal></expr>)</condition><then pos:line="2019" pos:column="50"> <block pos:line="2019" pos:column="51">{
					<return pos:line="2020" pos:column="41">return <expr><lit:literal type="boolean" pos:line="2020" pos:column="48">true</lit:literal></expr>;</return>
				}</block></then> <else pos:line="2021" pos:column="35">else <if pos:line="2021" pos:column="40">if <condition pos:line="2021" pos:column="43">(<expr><name><name pos:line="2021" pos:column="44">us</name><index pos:line="2021" pos:column="46">[<expr><lit:literal type="number" pos:line="2021" pos:column="47">1</lit:literal></expr>]</index></name> <op:operator pos:line="2021" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="2021" pos:column="53">0x8f</lit:literal></expr>)</condition><then pos:line="2021" pos:column="58"> <block pos:line="2021" pos:column="59">{
					<if pos:line="2022" pos:column="41">if <condition pos:line="2022" pos:column="44">(<expr><name><name pos:line="2022" pos:column="45">us</name><index pos:line="2022" pos:column="47">[<expr><lit:literal type="number" pos:line="2022" pos:column="48">2</lit:literal></expr>]</index></name> <op:operator pos:line="2022" pos:column="51">&gt;</op:operator> <lit:literal type="number" pos:line="2022" pos:column="53">0xbf</lit:literal></expr>)</condition><then pos:line="2022" pos:column="58"> <block pos:line="2022" pos:column="59">{
						<return pos:line="2023" pos:column="49">return <expr><lit:literal type="boolean" pos:line="2023" pos:column="56">true</lit:literal></expr>;</return>
					}</block></then> <else pos:line="2024" pos:column="43">else <if pos:line="2024" pos:column="48">if <condition pos:line="2024" pos:column="51">(<expr><name><name pos:line="2024" pos:column="52">us</name><index pos:line="2024" pos:column="54">[<expr><lit:literal type="number" pos:line="2024" pos:column="55">2</lit:literal></expr>]</index></name> <op:operator pos:line="2024" pos:column="58">==</op:operator> <lit:literal type="number" pos:line="2024" pos:column="61">0xbf</lit:literal></expr>)</condition><then pos:line="2024" pos:column="66"> <block pos:line="2024" pos:column="67">{
						<if pos:line="2025" pos:column="49">if <condition pos:line="2025" pos:column="52">(<expr><name><name pos:line="2025" pos:column="53">us</name><index pos:line="2025" pos:column="55">[<expr><lit:literal type="number" pos:line="2025" pos:column="56">3</lit:literal></expr>]</index></name> <op:operator pos:line="2025" pos:column="59">&gt;</op:operator> <lit:literal type="number" pos:line="2025" pos:column="61">0xbf</lit:literal></expr>)</condition><then pos:line="2025" pos:column="66"> <block pos:line="2025" pos:column="67">{
							<return pos:line="2026" pos:column="57">return <expr><lit:literal type="boolean" pos:line="2026" pos:column="64">true</lit:literal></expr>;</return>
						}</block></then></if>
					}</block></then></if></else></if>
				}</block></then></if></else></if>
			}</block></then> <else pos:line="2030" pos:column="27">else <if pos:line="2030" pos:column="32">if <condition pos:line="2030" pos:column="35">(<expr><op:operator pos:line="2030" pos:column="36">(</op:operator><op:operator pos:line="2030" pos:column="37">*</op:operator><name pos:line="2030" pos:column="38">us</name> <op:operator pos:line="2030" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="2030" pos:column="44">0xf0</lit:literal><op:operator pos:line="2030" pos:column="48">)</op:operator> <op:operator pos:line="2030" pos:column="50">&amp;&amp;</op:operator> <op:operator pos:line="2030" pos:column="53">(</op:operator><op:operator pos:line="2030" pos:column="54">(</op:operator><name><name pos:line="2030" pos:column="55">us</name><index pos:line="2030" pos:column="57">[<expr><lit:literal type="number" pos:line="2030" pos:column="58">1</lit:literal></expr>]</index></name> <op:operator pos:line="2030" pos:column="61">&amp;</op:operator> <lit:literal type="number" pos:line="2030" pos:column="63">0xf0</lit:literal><op:operator pos:line="2030" pos:column="67">)</op:operator> <op:operator pos:line="2030" pos:column="69">==</op:operator> <lit:literal type="number" pos:line="2030" pos:column="72">0x80</lit:literal><op:operator pos:line="2030" pos:column="76">)</op:operator></expr>)</condition><then pos:line="2030" pos:column="78"> <block pos:line="2030" pos:column="79">{
				<comment type="line" pos:line="2031" pos:column="33">// Overlong</comment>
				<return pos:line="2032" pos:column="33">return <expr><lit:literal type="boolean" pos:line="2032" pos:column="40">true</lit:literal></expr>;</return>
			}</block></then></if></else></if>
			<expr_stmt><expr><name pos:line="2034" pos:column="25">trailBytes</name> <op:operator pos:line="2034" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2034" pos:column="38">3</lit:literal></expr>;</expr_stmt>
			<return pos:line="2035" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2035" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then> <else pos:line="2036" pos:column="19">else <block pos:line="2036" pos:column="24">{
			<return pos:line="2037" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2037" pos:column="32">true</lit:literal></expr>;</return>
		}</block></else></if>
	}</block></then> <else pos:line="2039" pos:column="11">else <if pos:line="2039" pos:column="16">if <condition pos:line="2039" pos:column="19">(<expr><op:operator pos:line="2039" pos:column="20">*</op:operator><name pos:line="2039" pos:column="21">us</name> <op:operator pos:line="2039" pos:column="24">&gt;=</op:operator> <lit:literal type="number" pos:line="2039" pos:column="27">0xE0</lit:literal></expr>)</condition><then pos:line="2039" pos:column="32"> <block pos:line="2039" pos:column="33">{
		<comment type="line" pos:line="2040" pos:column="17">// 3 bytes</comment>
		<if pos:line="2041" pos:column="17">if <condition pos:line="2041" pos:column="20">(<expr><name pos:line="2041" pos:column="21">len</name> <op:operator pos:line="2041" pos:column="25">&lt;</op:operator> <lit:literal type="number" pos:line="2041" pos:column="27">3</lit:literal></expr>)</condition><then pos:line="2041" pos:column="29">
			<return pos:line="2042" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2042" pos:column="32">true</lit:literal></expr>;</return></then></if>
		<if pos:line="2043" pos:column="17">if <condition pos:line="2043" pos:column="20">(<expr><call><name pos:line="2043" pos:column="21">GoodTrailByte</name><argument_list pos:line="2043" pos:column="34">(<argument><expr><name><name pos:line="2043" pos:column="35">us</name><index pos:line="2043" pos:column="37">[<expr><lit:literal type="number" pos:line="2043" pos:column="38">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call> <op:operator pos:line="2043" pos:column="42">&amp;&amp;</op:operator> <call><name pos:line="2043" pos:column="45">GoodTrailByte</name><argument_list pos:line="2043" pos:column="58">(<argument><expr><name><name pos:line="2043" pos:column="59">us</name><index pos:line="2043" pos:column="61">[<expr><lit:literal type="number" pos:line="2043" pos:column="62">2</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2043" pos:column="66"> <block pos:line="2043" pos:column="67">{
			<if pos:line="2044" pos:column="25">if <condition pos:line="2044" pos:column="28">(<expr><op:operator pos:line="2044" pos:column="29">(</op:operator><op:operator pos:line="2044" pos:column="30">*</op:operator><name pos:line="2044" pos:column="31">us</name> <op:operator pos:line="2044" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="2044" pos:column="37">0xe0</lit:literal><op:operator pos:line="2044" pos:column="41">)</op:operator> <op:operator pos:line="2044" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="2044" pos:column="46">(</op:operator><op:operator pos:line="2044" pos:column="47">(</op:operator><name><name pos:line="2044" pos:column="48">us</name><index pos:line="2044" pos:column="50">[<expr><lit:literal type="number" pos:line="2044" pos:column="51">1</lit:literal></expr>]</index></name> <op:operator pos:line="2044" pos:column="54">&amp;</op:operator> <lit:literal type="number" pos:line="2044" pos:column="56">0xe0</lit:literal><op:operator pos:line="2044" pos:column="60">)</op:operator> <op:operator pos:line="2044" pos:column="62">==</op:operator> <lit:literal type="number" pos:line="2044" pos:column="65">0x80</lit:literal><op:operator pos:line="2044" pos:column="69">)</op:operator></expr>)</condition><then pos:line="2044" pos:column="71"> <block pos:line="2044" pos:column="72">{
				<comment type="line" pos:line="2045" pos:column="33">// Overlong</comment>
				<return pos:line="2046" pos:column="33">return <expr><lit:literal type="boolean" pos:line="2046" pos:column="40">true</lit:literal></expr>;</return>
			}</block></then></if>
			<if pos:line="2048" pos:column="25">if <condition pos:line="2048" pos:column="28">(<expr><op:operator pos:line="2048" pos:column="29">(</op:operator><op:operator pos:line="2048" pos:column="30">*</op:operator><name pos:line="2048" pos:column="31">us</name> <op:operator pos:line="2048" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="2048" pos:column="37">0xed</lit:literal><op:operator pos:line="2048" pos:column="41">)</op:operator> <op:operator pos:line="2048" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="2048" pos:column="46">(</op:operator><op:operator pos:line="2048" pos:column="47">(</op:operator><name><name pos:line="2048" pos:column="48">us</name><index pos:line="2048" pos:column="50">[<expr><lit:literal type="number" pos:line="2048" pos:column="51">1</lit:literal></expr>]</index></name> <op:operator pos:line="2048" pos:column="54">&amp;</op:operator> <lit:literal type="number" pos:line="2048" pos:column="56">0xe0</lit:literal><op:operator pos:line="2048" pos:column="60">)</op:operator> <op:operator pos:line="2048" pos:column="62">==</op:operator> <lit:literal type="number" pos:line="2048" pos:column="65">0xa0</lit:literal><op:operator pos:line="2048" pos:column="69">)</op:operator></expr>)</condition><then pos:line="2048" pos:column="71"> <block pos:line="2048" pos:column="72">{
				<comment type="line" pos:line="2049" pos:column="33">// Surrogate</comment>
				<return pos:line="2050" pos:column="33">return <expr><lit:literal type="boolean" pos:line="2050" pos:column="40">true</lit:literal></expr>;</return>
			}</block></then></if>
			<if pos:line="2052" pos:column="25">if <condition pos:line="2052" pos:column="28">(<expr><op:operator pos:line="2052" pos:column="29">(</op:operator><op:operator pos:line="2052" pos:column="30">*</op:operator><name pos:line="2052" pos:column="31">us</name> <op:operator pos:line="2052" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="2052" pos:column="37">0xef</lit:literal><op:operator pos:line="2052" pos:column="41">)</op:operator> <op:operator pos:line="2052" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="2052" pos:column="46">(</op:operator><name><name pos:line="2052" pos:column="47">us</name><index pos:line="2052" pos:column="49">[<expr><lit:literal type="number" pos:line="2052" pos:column="50">1</lit:literal></expr>]</index></name> <op:operator pos:line="2052" pos:column="53">==</op:operator> <lit:literal type="number" pos:line="2052" pos:column="56">0xbf</lit:literal><op:operator pos:line="2052" pos:column="60">)</op:operator> <op:operator pos:line="2052" pos:column="62">&amp;&amp;</op:operator> <op:operator pos:line="2052" pos:column="65">(</op:operator><name><name pos:line="2052" pos:column="66">us</name><index pos:line="2052" pos:column="68">[<expr><lit:literal type="number" pos:line="2052" pos:column="69">2</lit:literal></expr>]</index></name> <op:operator pos:line="2052" pos:column="72">==</op:operator> <lit:literal type="number" pos:line="2052" pos:column="75">0xbe</lit:literal><op:operator pos:line="2052" pos:column="79">)</op:operator></expr>)</condition><then pos:line="2052" pos:column="81"> <block pos:line="2052" pos:column="82">{
				<comment type="line" pos:line="2053" pos:column="33">// U+FFFE</comment>
				<return pos:line="2054" pos:column="33">return <expr><lit:literal type="boolean" pos:line="2054" pos:column="40">true</lit:literal></expr>;</return>
			}</block></then></if>
			<if pos:line="2056" pos:column="25">if <condition pos:line="2056" pos:column="28">(<expr><op:operator pos:line="2056" pos:column="29">(</op:operator><op:operator pos:line="2056" pos:column="30">*</op:operator><name pos:line="2056" pos:column="31">us</name> <op:operator pos:line="2056" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="2056" pos:column="37">0xef</lit:literal><op:operator pos:line="2056" pos:column="41">)</op:operator> <op:operator pos:line="2056" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="2056" pos:column="46">(</op:operator><name><name pos:line="2056" pos:column="47">us</name><index pos:line="2056" pos:column="49">[<expr><lit:literal type="number" pos:line="2056" pos:column="50">1</lit:literal></expr>]</index></name> <op:operator pos:line="2056" pos:column="53">==</op:operator> <lit:literal type="number" pos:line="2056" pos:column="56">0xbf</lit:literal><op:operator pos:line="2056" pos:column="60">)</op:operator> <op:operator pos:line="2056" pos:column="62">&amp;&amp;</op:operator> <op:operator pos:line="2056" pos:column="65">(</op:operator><name><name pos:line="2056" pos:column="66">us</name><index pos:line="2056" pos:column="68">[<expr><lit:literal type="number" pos:line="2056" pos:column="69">2</lit:literal></expr>]</index></name> <op:operator pos:line="2056" pos:column="72">==</op:operator> <lit:literal type="number" pos:line="2056" pos:column="75">0xbf</lit:literal><op:operator pos:line="2056" pos:column="79">)</op:operator></expr>)</condition><then pos:line="2056" pos:column="81"> <block pos:line="2056" pos:column="82">{
				<comment type="line" pos:line="2057" pos:column="33">// U+FFFF</comment>
				<return pos:line="2058" pos:column="33">return <expr><lit:literal type="boolean" pos:line="2058" pos:column="40">true</lit:literal></expr>;</return>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="2060" pos:column="25">trailBytes</name> <op:operator pos:line="2060" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2060" pos:column="38">2</lit:literal></expr>;</expr_stmt>
			<return pos:line="2061" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2061" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then> <else pos:line="2062" pos:column="19">else <block pos:line="2062" pos:column="24">{
			<return pos:line="2063" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2063" pos:column="32">true</lit:literal></expr>;</return>
		}</block></else></if>
	}</block></then> <else pos:line="2065" pos:column="11">else <if pos:line="2065" pos:column="16">if <condition pos:line="2065" pos:column="19">(<expr><op:operator pos:line="2065" pos:column="20">*</op:operator><name pos:line="2065" pos:column="21">us</name> <op:operator pos:line="2065" pos:column="24">&gt;=</op:operator> <lit:literal type="number" pos:line="2065" pos:column="27">0xC2</lit:literal></expr>)</condition><then pos:line="2065" pos:column="32"> <block pos:line="2065" pos:column="33">{
		<comment type="line" pos:line="2066" pos:column="17">// 2 bytes</comment>
		<if pos:line="2067" pos:column="17">if <condition pos:line="2067" pos:column="20">(<expr><name pos:line="2067" pos:column="21">len</name> <op:operator pos:line="2067" pos:column="25">&lt;</op:operator> <lit:literal type="number" pos:line="2067" pos:column="27">2</lit:literal></expr>)</condition><then pos:line="2067" pos:column="29">
			<return pos:line="2068" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2068" pos:column="32">true</lit:literal></expr>;</return></then></if>
		<if pos:line="2069" pos:column="17">if <condition pos:line="2069" pos:column="20">(<expr><call><name pos:line="2069" pos:column="21">GoodTrailByte</name><argument_list pos:line="2069" pos:column="34">(<argument><expr><name><name pos:line="2069" pos:column="35">us</name><index pos:line="2069" pos:column="37">[<expr><lit:literal type="number" pos:line="2069" pos:column="38">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2069" pos:column="42"> <block pos:line="2069" pos:column="43">{
			<expr_stmt><expr><name pos:line="2070" pos:column="25">trailBytes</name> <op:operator pos:line="2070" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="2070" pos:column="38">1</lit:literal></expr>;</expr_stmt>
			<return pos:line="2071" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2071" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then> <else pos:line="2072" pos:column="19">else <block pos:line="2072" pos:column="24">{
			<return pos:line="2073" pos:column="25">return <expr><lit:literal type="boolean" pos:line="2073" pos:column="32">true</lit:literal></expr>;</return>
		}</block></else></if>
	}</block></then> <else pos:line="2075" pos:column="11">else <if pos:line="2075" pos:column="16">if <condition pos:line="2075" pos:column="19">(<expr><op:operator pos:line="2075" pos:column="20">*</op:operator><name pos:line="2075" pos:column="21">us</name> <op:operator pos:line="2075" pos:column="24">&gt;=</op:operator> <lit:literal type="number" pos:line="2075" pos:column="27">0xC0</lit:literal></expr>)</condition><then pos:line="2075" pos:column="32"> <block pos:line="2075" pos:column="33">{
		<comment type="line" pos:line="2076" pos:column="17">// Overlong encoding</comment>
		<return pos:line="2077" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2077" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then> <else pos:line="2078" pos:column="11">else <block pos:line="2078" pos:column="16">{
		<comment type="line" pos:line="2079" pos:column="17">// Trail byte</comment>
		<return pos:line="2080" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2080" pos:column="24">true</lit:literal></expr>;</return>
	}</block></else></if></else></if></else></if></else></if></else></if></else></if>
}</block></function>

<comment type="block" format="doxygen" pos:line="2084" pos:column="1">/**
 * Fill in the LineLayout data for the given line.
 * Copy the given @a line and its styles from the document into local arrays.
 * Also determine the x position at which each character starts.
 */</comment>
<function><type><name pos:line="2089" pos:column="1">void</name></type> <name><name pos:line="2089" pos:column="6">Editor</name><op:operator pos:line="2089" pos:column="12">::</op:operator><name pos:line="2089" pos:column="14">LayoutLine</name></name><parameter_list pos:line="2089" pos:column="24">(<param><decl><type><name pos:line="2089" pos:column="25">int</name></type> <name pos:line="2089" pos:column="29">line</name></decl></param>, <param><decl><type><name pos:line="2089" pos:column="35">Surface</name> <type:modifier pos:line="2089" pos:column="43">*</type:modifier></type><name pos:line="2089" pos:column="44">surface</name></decl></param>, <param><decl><type><name pos:line="2089" pos:column="53">ViewStyle</name> <type:modifier pos:line="2089" pos:column="63">&amp;</type:modifier></type><name pos:line="2089" pos:column="64">vstyle</name></decl></param>, <param><decl><type><name pos:line="2089" pos:column="72">LineLayout</name> <type:modifier pos:line="2089" pos:column="83">*</type:modifier></type><name pos:line="2089" pos:column="84">ll</name></decl></param>, <param><decl><type><name pos:line="2089" pos:column="88">int</name></type> <name pos:line="2089" pos:column="92">width</name></decl></param>)</parameter_list> <block pos:line="2089" pos:column="99">{
	<if pos:line="2090" pos:column="9">if <condition pos:line="2090" pos:column="12">(<expr><op:operator pos:line="2090" pos:column="13">!</op:operator><name pos:line="2090" pos:column="14">ll</name></expr>)</condition><then pos:line="2090" pos:column="17">
		<return pos:line="2091" pos:column="17">return;</return></then></if>

	<expr_stmt><expr><call><name pos:line="2093" pos:column="9">PLATFORM_ASSERT</name><argument_list pos:line="2093" pos:column="24">(<argument><expr><name pos:line="2093" pos:column="25">line</name> <op:operator pos:line="2093" pos:column="30">&lt;</op:operator> <call><name><name pos:line="2093" pos:column="32">pdoc</name><op:operator pos:line="2093" pos:column="36">-&gt;</op:operator><name pos:line="2093" pos:column="38">LinesTotal</name></name><argument_list pos:line="2093" pos:column="48">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2094" pos:column="9">PLATFORM_ASSERT</name><argument_list pos:line="2094" pos:column="24">(<argument><expr><name><name pos:line="2094" pos:column="25">ll</name><op:operator pos:line="2094" pos:column="27">-&gt;</op:operator><name pos:line="2094" pos:column="29">chars</name></name> <op:operator pos:line="2094" pos:column="35">!=</op:operator> <name pos:line="2094" pos:column="38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2095" pos:column="9">int</name></type> <name pos:line="2095" pos:column="13">posLineStart</name> <init pos:line="2095" pos:column="26">= <expr><call><name><name pos:line="2095" pos:column="28">pdoc</name><op:operator pos:line="2095" pos:column="32">-&gt;</op:operator><name pos:line="2095" pos:column="34">LineStart</name></name><argument_list pos:line="2095" pos:column="43">(<argument><expr><name pos:line="2095" pos:column="44">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2096" pos:column="9">int</name></type> <name pos:line="2096" pos:column="13">posLineEnd</name> <init pos:line="2096" pos:column="24">= <expr><call><name><name pos:line="2096" pos:column="26">pdoc</name><op:operator pos:line="2096" pos:column="30">-&gt;</op:operator><name pos:line="2096" pos:column="32">LineStart</name></name><argument_list pos:line="2096" pos:column="41">(<argument><expr><name pos:line="2096" pos:column="42">line</name> <op:operator pos:line="2096" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="2096" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="2097" pos:column="9">// If the line is very long, limit the treatment to a length that should fit in the viewport</comment>
	<if pos:line="2098" pos:column="9">if <condition pos:line="2098" pos:column="12">(<expr><name pos:line="2098" pos:column="13">posLineEnd</name> <op:operator pos:line="2098" pos:column="24">&gt;</op:operator> <op:operator pos:line="2098" pos:column="26">(</op:operator><name pos:line="2098" pos:column="27">posLineStart</name> <op:operator pos:line="2098" pos:column="40">+</op:operator> <name><name pos:line="2098" pos:column="42">ll</name><op:operator pos:line="2098" pos:column="44">-&gt;</op:operator><name pos:line="2098" pos:column="46">maxLineLength</name></name><op:operator pos:line="2098" pos:column="59">)</op:operator></expr>)</condition><then pos:line="2098" pos:column="61"> <block pos:line="2098" pos:column="62">{
		<expr_stmt><expr><name pos:line="2099" pos:column="17">posLineEnd</name> <op:operator pos:line="2099" pos:column="28">=</op:operator> <name pos:line="2099" pos:column="30">posLineStart</name> <op:operator pos:line="2099" pos:column="43">+</op:operator> <name><name pos:line="2099" pos:column="45">ll</name><op:operator pos:line="2099" pos:column="47">-&gt;</op:operator><name pos:line="2099" pos:column="49">maxLineLength</name></name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="2101" pos:column="9">if <condition pos:line="2101" pos:column="12">(<expr><name><name pos:line="2101" pos:column="13">ll</name><op:operator pos:line="2101" pos:column="15">-&gt;</op:operator><name pos:line="2101" pos:column="17">validity</name></name> <op:operator pos:line="2101" pos:column="26">==</op:operator> <name><name pos:line="2101" pos:column="29">LineLayout</name><op:operator pos:line="2101" pos:column="39">::</op:operator><name pos:line="2101" pos:column="41">llCheckTextAndStyle</name></name></expr>)</condition><then pos:line="2101" pos:column="61"> <block pos:line="2101" pos:column="62">{
		<decl_stmt><decl><type><name pos:line="2102" pos:column="17">int</name></type> <name pos:line="2102" pos:column="21">lineLength</name> <init pos:line="2102" pos:column="32">= <expr><name pos:line="2102" pos:column="34">posLineEnd</name> <op:operator pos:line="2102" pos:column="45">-</op:operator> <name pos:line="2102" pos:column="47">posLineStart</name></expr></init></decl>;</decl_stmt>
		<if pos:line="2103" pos:column="17">if <condition pos:line="2103" pos:column="20">(<expr><op:operator pos:line="2103" pos:column="21">!</op:operator><name><name pos:line="2103" pos:column="22">vstyle</name><op:operator pos:line="2103" pos:column="28">.</op:operator><name pos:line="2103" pos:column="29">viewEOL</name></name></expr>)</condition><then pos:line="2103" pos:column="37"> <block pos:line="2103" pos:column="38">{
			<decl_stmt><decl><type><name pos:line="2104" pos:column="25">int</name></type> <name pos:line="2104" pos:column="29">cid</name> <init pos:line="2104" pos:column="33">= <expr><name pos:line="2104" pos:column="35">posLineEnd</name> <op:operator pos:line="2104" pos:column="46">-</op:operator> <lit:literal type="number" pos:line="2104" pos:column="48">1</lit:literal></expr></init></decl>;</decl_stmt>
			<while pos:line="2105" pos:column="25">while <condition pos:line="2105" pos:column="31">(<expr><op:operator pos:line="2105" pos:column="32">(</op:operator><name pos:line="2105" pos:column="33">cid</name> <op:operator pos:line="2105" pos:column="37">&gt;</op:operator> <name pos:line="2105" pos:column="39">posLineStart</name><op:operator pos:line="2105" pos:column="51">)</op:operator> <op:operator pos:line="2105" pos:column="53">&amp;&amp;</op:operator> <call><name pos:line="2105" pos:column="56">IsEOLChar</name><argument_list pos:line="2105" pos:column="65">(<argument><expr><call><name><name pos:line="2105" pos:column="66">pdoc</name><op:operator pos:line="2105" pos:column="70">-&gt;</op:operator><name pos:line="2105" pos:column="72">CharAt</name></name><argument_list pos:line="2105" pos:column="78">(<argument><expr><name pos:line="2105" pos:column="79">cid</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:line="2105" pos:column="86">{
				<expr_stmt><expr><name pos:line="2106" pos:column="33">cid</name><op:operator pos:line="2106" pos:column="36">--</op:operator></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="2107" pos:column="33">lineLength</name><op:operator pos:line="2107" pos:column="43">--</op:operator></expr>;</expr_stmt>
			}</block></while>
		}</block></then></if>
		<if pos:line="2110" pos:column="17">if <condition pos:line="2110" pos:column="20">(<expr><name pos:line="2110" pos:column="21">lineLength</name> <op:operator pos:line="2110" pos:column="32">==</op:operator> <name><name pos:line="2110" pos:column="35">ll</name><op:operator pos:line="2110" pos:column="37">-&gt;</op:operator><name pos:line="2110" pos:column="39">numCharsInLine</name></name></expr>)</condition><then pos:line="2110" pos:column="54"> <block pos:line="2110" pos:column="55">{
			<comment type="line" pos:line="2111" pos:column="25">// See if chars, styles, indicators, are all the same</comment>
			<decl_stmt><decl><type><name pos:line="2112" pos:column="25">bool</name></type> <name pos:line="2112" pos:column="30">allSame</name> <init pos:line="2112" pos:column="38">= <expr><lit:literal type="boolean" pos:line="2112" pos:column="40">true</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="2113" pos:column="25">const</specifier> <name pos:line="2113" pos:column="31">int</name></type> <name pos:line="2113" pos:column="35">styleMask</name> <init pos:line="2113" pos:column="45">= <expr><name><name pos:line="2113" pos:column="47">pdoc</name><op:operator pos:line="2113" pos:column="51">-&gt;</op:operator><name pos:line="2113" pos:column="53">stylingBitsMask</name></name></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="2114" pos:column="25">// Check base line layout</comment>
			<decl_stmt><decl><type><name pos:line="2115" pos:column="25">char</name></type> <name pos:line="2115" pos:column="30">styleByte</name> <init pos:line="2115" pos:column="40">= <expr><lit:literal type="number" pos:line="2115" pos:column="42">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2116" pos:column="25">int</name></type> <name pos:line="2116" pos:column="29">numCharsInLine</name> <init pos:line="2116" pos:column="44">= <expr><lit:literal type="number" pos:line="2116" pos:column="46">0</lit:literal></expr></init></decl>;</decl_stmt>
			<while pos:line="2117" pos:column="25">while <condition pos:line="2117" pos:column="31">(<expr><name pos:line="2117" pos:column="32">numCharsInLine</name> <op:operator pos:line="2117" pos:column="47">&lt;</op:operator> <name pos:line="2117" pos:column="49">lineLength</name></expr>)</condition> <block pos:line="2117" pos:column="61">{
				<decl_stmt><decl><type><name pos:line="2118" pos:column="33">int</name></type> <name pos:line="2118" pos:column="37">charInDoc</name> <init pos:line="2118" pos:column="47">= <expr><name pos:line="2118" pos:column="49">numCharsInLine</name> <op:operator pos:line="2118" pos:column="64">+</op:operator> <name pos:line="2118" pos:column="66">posLineStart</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2119" pos:column="33">char</name></type> <name pos:line="2119" pos:column="38">chDoc</name> <init pos:line="2119" pos:column="44">= <expr><call><name><name pos:line="2119" pos:column="46">pdoc</name><op:operator pos:line="2119" pos:column="50">-&gt;</op:operator><name pos:line="2119" pos:column="52">CharAt</name></name><argument_list pos:line="2119" pos:column="58">(<argument><expr><name pos:line="2119" pos:column="59">charInDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="2120" pos:column="33">styleByte</name> <op:operator pos:line="2120" pos:column="43">=</op:operator> <call><name><name pos:line="2120" pos:column="45">pdoc</name><op:operator pos:line="2120" pos:column="49">-&gt;</op:operator><name pos:line="2120" pos:column="51">StyleAt</name></name><argument_list pos:line="2120" pos:column="58">(<argument><expr><name pos:line="2120" pos:column="59">charInDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="2121" pos:column="33">allSame</name> <op:operator pos:line="2121" pos:column="41">=</op:operator> <name pos:line="2121" pos:column="43">allSame</name> <op:operator pos:line="2121" pos:column="51">&amp;&amp;</op:operator>
				        <op:operator pos:line="2122" pos:column="41">(</op:operator><name><name pos:line="2122" pos:column="42">ll</name><op:operator pos:line="2122" pos:column="44">-&gt;</op:operator><name pos:line="2122" pos:column="46">styles</name><index pos:line="2122" pos:column="52">[<expr><name pos:line="2122" pos:column="53">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2122" pos:column="69">==</op:operator> <call><name><name pos:line="2122" pos:column="72">static_cast</name><argument_list pos:line="2122" pos:column="83">&lt;<argument><expr><name pos:line="2122" pos:column="84">unsigned</name> <name pos:line="2122" pos:column="93">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2122" pos:column="98">(<argument><expr><name pos:line="2122" pos:column="99">styleByte</name> <op:operator pos:line="2122" pos:column="109">&amp;</op:operator> <name pos:line="2122" pos:column="111">styleMask</name></expr></argument>)</argument_list></call><op:operator pos:line="2122" pos:column="121">)</op:operator></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="2123" pos:column="33">allSame</name> <op:operator pos:line="2123" pos:column="41">=</op:operator> <name pos:line="2123" pos:column="43">allSame</name> <op:operator pos:line="2123" pos:column="51">&amp;&amp;</op:operator>
				        <op:operator pos:line="2124" pos:column="41">(</op:operator><name><name pos:line="2124" pos:column="42">ll</name><op:operator pos:line="2124" pos:column="44">-&gt;</op:operator><name pos:line="2124" pos:column="46">indicators</name><index pos:line="2124" pos:column="56">[<expr><name pos:line="2124" pos:column="57">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2124" pos:column="73">==</op:operator> <call><name><name pos:line="2124" pos:column="76">static_cast</name><argument_list pos:line="2124" pos:column="87">&lt;<argument><expr><name pos:line="2124" pos:column="88">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2124" pos:column="93">(<argument><expr><name pos:line="2124" pos:column="94">styleByte</name> <op:operator pos:line="2124" pos:column="104">&amp;</op:operator> <op:operator pos:line="2124" pos:column="106">~</op:operator><name pos:line="2124" pos:column="107">styleMask</name></expr></argument>)</argument_list></call><op:operator pos:line="2124" pos:column="117">)</op:operator></expr>;</expr_stmt>
				<if pos:line="2125" pos:column="33">if <condition pos:line="2125" pos:column="36">(<expr><name><name pos:line="2125" pos:column="37">vstyle</name><op:operator pos:line="2125" pos:column="43">.</op:operator><name pos:line="2125" pos:column="44">styles</name><index pos:line="2125" pos:column="50">[<expr><name><name pos:line="2125" pos:column="51">ll</name><op:operator pos:line="2125" pos:column="53">-&gt;</op:operator><name pos:line="2125" pos:column="55">styles</name><index pos:line="2125" pos:column="61">[<expr><name pos:line="2125" pos:column="62">numCharsInLine</name></expr>]</index></name></expr>]</index></name><op:operator pos:line="2125" pos:column="78">.</op:operator><name pos:line="2125" pos:column="79">caseForce</name> <op:operator pos:line="2125" pos:column="89">==</op:operator> <name><name pos:line="2125" pos:column="92">Style</name><op:operator pos:line="2125" pos:column="97">::</op:operator><name pos:line="2125" pos:column="99">caseMixed</name></name></expr>)</condition><then pos:line="2125" pos:column="109">
					<expr_stmt><expr><name pos:line="2126" pos:column="41">allSame</name> <op:operator pos:line="2126" pos:column="49">=</op:operator> <name pos:line="2126" pos:column="51">allSame</name> <op:operator pos:line="2126" pos:column="59">&amp;&amp;</op:operator>
					        <op:operator pos:line="2127" pos:column="49">(</op:operator><name><name pos:line="2127" pos:column="50">ll</name><op:operator pos:line="2127" pos:column="52">-&gt;</op:operator><name pos:line="2127" pos:column="54">chars</name><index pos:line="2127" pos:column="59">[<expr><name pos:line="2127" pos:column="60">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2127" pos:column="76">==</op:operator> <name pos:line="2127" pos:column="79">chDoc</name><op:operator pos:line="2127" pos:column="84">)</op:operator></expr>;</expr_stmt></then>
				<else pos:line="2128" pos:column="33">else <if pos:line="2128" pos:column="38">if <condition pos:line="2128" pos:column="41">(<expr><name><name pos:line="2128" pos:column="42">vstyle</name><op:operator pos:line="2128" pos:column="48">.</op:operator><name pos:line="2128" pos:column="49">styles</name><index pos:line="2128" pos:column="55">[<expr><name><name pos:line="2128" pos:column="56">ll</name><op:operator pos:line="2128" pos:column="58">-&gt;</op:operator><name pos:line="2128" pos:column="60">styles</name><index pos:line="2128" pos:column="66">[<expr><name pos:line="2128" pos:column="67">numCharsInLine</name></expr>]</index></name></expr>]</index></name><op:operator pos:line="2128" pos:column="83">.</op:operator><name pos:line="2128" pos:column="84">caseForce</name> <op:operator pos:line="2128" pos:column="94">==</op:operator> <name><name pos:line="2128" pos:column="97">Style</name><op:operator pos:line="2128" pos:column="102">::</op:operator><name pos:line="2128" pos:column="104">caseLower</name></name></expr>)</condition><then pos:line="2128" pos:column="114">
					<expr_stmt><expr><name pos:line="2129" pos:column="41">allSame</name> <op:operator pos:line="2129" pos:column="49">=</op:operator> <name pos:line="2129" pos:column="51">allSame</name> <op:operator pos:line="2129" pos:column="59">&amp;&amp;</op:operator>
					        <op:operator pos:line="2130" pos:column="49">(</op:operator><name><name pos:line="2130" pos:column="50">ll</name><op:operator pos:line="2130" pos:column="52">-&gt;</op:operator><name pos:line="2130" pos:column="54">chars</name><index pos:line="2130" pos:column="59">[<expr><name pos:line="2130" pos:column="60">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2130" pos:column="76">==</op:operator> <call><name><name pos:line="2130" pos:column="79">static_cast</name><argument_list pos:line="2130" pos:column="90">&lt;<argument><expr><name pos:line="2130" pos:column="91">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2130" pos:column="96">(<argument><expr><call><name pos:line="2130" pos:column="97">tolower</name><argument_list pos:line="2130" pos:column="104">(<argument><expr><name pos:line="2130" pos:column="105">chDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="2130" pos:column="112">)</op:operator></expr>;</expr_stmt></then>
				<else pos:line="2131" pos:column="33">else	<comment type="line" pos:line="2131" pos:column="41">// Style::caseUpper</comment>
					<expr_stmt><expr><name pos:line="2132" pos:column="41">allSame</name> <op:operator pos:line="2132" pos:column="49">=</op:operator> <name pos:line="2132" pos:column="51">allSame</name> <op:operator pos:line="2132" pos:column="59">&amp;&amp;</op:operator>
					        <op:operator pos:line="2133" pos:column="49">(</op:operator><name><name pos:line="2133" pos:column="50">ll</name><op:operator pos:line="2133" pos:column="52">-&gt;</op:operator><name pos:line="2133" pos:column="54">chars</name><index pos:line="2133" pos:column="59">[<expr><name pos:line="2133" pos:column="60">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2133" pos:column="76">==</op:operator> <call><name><name pos:line="2133" pos:column="79">static_cast</name><argument_list pos:line="2133" pos:column="90">&lt;<argument><expr><name pos:line="2133" pos:column="91">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2133" pos:column="96">(<argument><expr><call><name pos:line="2133" pos:column="97">toupper</name><argument_list pos:line="2133" pos:column="104">(<argument><expr><name pos:line="2133" pos:column="105">chDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="2133" pos:column="112">)</op:operator></expr>;</expr_stmt></else></if></else></if>
				<expr_stmt><expr><name pos:line="2134" pos:column="33">numCharsInLine</name><op:operator pos:line="2134" pos:column="47">++</op:operator></expr>;</expr_stmt>
			}</block></while>
			<expr_stmt><expr><name pos:line="2136" pos:column="25">allSame</name> <op:operator pos:line="2136" pos:column="33">=</op:operator> <name pos:line="2136" pos:column="35">allSame</name> <op:operator pos:line="2136" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="2136" pos:column="46">(</op:operator><name><name pos:line="2136" pos:column="47">ll</name><op:operator pos:line="2136" pos:column="49">-&gt;</op:operator><name pos:line="2136" pos:column="51">styles</name><index pos:line="2136" pos:column="57">[<expr><name pos:line="2136" pos:column="58">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2136" pos:column="74">==</op:operator> <name pos:line="2136" pos:column="77">styleByte</name><op:operator pos:line="2136" pos:column="86">)</op:operator></expr>;</expr_stmt>	<comment type="line" pos:line="2136" pos:column="89">// For eolFilled</comment>
			<if pos:line="2137" pos:column="25">if <condition pos:line="2137" pos:column="28">(<expr><name pos:line="2137" pos:column="29">allSame</name></expr>)</condition><then pos:line="2137" pos:column="37"> <block pos:line="2137" pos:column="38">{
				<expr_stmt><expr><name><name pos:line="2138" pos:column="33">ll</name><op:operator pos:line="2138" pos:column="35">-&gt;</op:operator><name pos:line="2138" pos:column="37">validity</name></name> <op:operator pos:line="2138" pos:column="46">=</op:operator> <name><name pos:line="2138" pos:column="48">LineLayout</name><op:operator pos:line="2138" pos:column="58">::</op:operator><name pos:line="2138" pos:column="60">llPositions</name></name></expr>;</expr_stmt>
			}</block></then> <else pos:line="2139" pos:column="27">else <block pos:line="2139" pos:column="32">{
				<expr_stmt><expr><name><name pos:line="2140" pos:column="33">ll</name><op:operator pos:line="2140" pos:column="35">-&gt;</op:operator><name pos:line="2140" pos:column="37">validity</name></name> <op:operator pos:line="2140" pos:column="46">=</op:operator> <name><name pos:line="2140" pos:column="48">LineLayout</name><op:operator pos:line="2140" pos:column="58">::</op:operator><name pos:line="2140" pos:column="60">llInvalid</name></name></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then> <else pos:line="2142" pos:column="19">else <block pos:line="2142" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="2143" pos:column="25">ll</name><op:operator pos:line="2143" pos:column="27">-&gt;</op:operator><name pos:line="2143" pos:column="29">validity</name></name> <op:operator pos:line="2143" pos:column="38">=</op:operator> <name><name pos:line="2143" pos:column="40">LineLayout</name><op:operator pos:line="2143" pos:column="50">::</op:operator><name pos:line="2143" pos:column="52">llInvalid</name></name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
	<if pos:line="2146" pos:column="9">if <condition pos:line="2146" pos:column="12">(<expr><name><name pos:line="2146" pos:column="13">ll</name><op:operator pos:line="2146" pos:column="15">-&gt;</op:operator><name pos:line="2146" pos:column="17">validity</name></name> <op:operator pos:line="2146" pos:column="26">==</op:operator> <name><name pos:line="2146" pos:column="29">LineLayout</name><op:operator pos:line="2146" pos:column="39">::</op:operator><name pos:line="2146" pos:column="41">llInvalid</name></name></expr>)</condition><then pos:line="2146" pos:column="51"> <block pos:line="2146" pos:column="52">{
		<expr_stmt><expr><name><name pos:line="2147" pos:column="17">ll</name><op:operator pos:line="2147" pos:column="19">-&gt;</op:operator><name pos:line="2147" pos:column="21">widthLine</name></name> <op:operator pos:line="2147" pos:column="31">=</op:operator> <name><name pos:line="2147" pos:column="33">LineLayout</name><op:operator pos:line="2147" pos:column="43">::</op:operator><name pos:line="2147" pos:column="45">wrapWidthInfinite</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2148" pos:column="17">ll</name><op:operator pos:line="2148" pos:column="19">-&gt;</op:operator><name pos:line="2148" pos:column="21">lines</name></name> <op:operator pos:line="2148" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="2148" pos:column="29">1</lit:literal></expr>;</expr_stmt>
		<if pos:line="2149" pos:column="17">if <condition pos:line="2149" pos:column="20">(<expr><name><name pos:line="2149" pos:column="21">vstyle</name><op:operator pos:line="2149" pos:column="27">.</op:operator><name pos:line="2149" pos:column="28">edgeState</name></name> <op:operator pos:line="2149" pos:column="38">==</op:operator> <name pos:line="2149" pos:column="41">EDGE_BACKGROUND</name></expr>)</condition><then pos:line="2149" pos:column="57"> <block pos:line="2149" pos:column="58">{
			<expr_stmt><expr><name><name pos:line="2150" pos:column="25">ll</name><op:operator pos:line="2150" pos:column="27">-&gt;</op:operator><name pos:line="2150" pos:column="29">edgeColumn</name></name> <op:operator pos:line="2150" pos:column="40">=</op:operator> <call><name><name pos:line="2150" pos:column="42">pdoc</name><op:operator pos:line="2150" pos:column="46">-&gt;</op:operator><name pos:line="2150" pos:column="48">FindColumn</name></name><argument_list pos:line="2150" pos:column="58">(<argument><expr><name pos:line="2150" pos:column="59">line</name></expr></argument>, <argument><expr><name pos:line="2150" pos:column="65">theEdge</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2151" pos:column="25">if <condition pos:line="2151" pos:column="28">(<expr><name><name pos:line="2151" pos:column="29">ll</name><op:operator pos:line="2151" pos:column="31">-&gt;</op:operator><name pos:line="2151" pos:column="33">edgeColumn</name></name> <op:operator pos:line="2151" pos:column="44">&gt;=</op:operator> <name pos:line="2151" pos:column="47">posLineStart</name></expr>)</condition><then pos:line="2151" pos:column="60"> <block pos:line="2151" pos:column="61">{
				<expr_stmt><expr><name><name pos:line="2152" pos:column="33">ll</name><op:operator pos:line="2152" pos:column="35">-&gt;</op:operator><name pos:line="2152" pos:column="37">edgeColumn</name></name> <op:operator pos:line="2152" pos:column="48">-=</op:operator> <name pos:line="2152" pos:column="51">posLineStart</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then> <else pos:line="2154" pos:column="19">else <block pos:line="2154" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="2155" pos:column="25">ll</name><op:operator pos:line="2155" pos:column="27">-&gt;</op:operator><name pos:line="2155" pos:column="29">edgeColumn</name></name> <op:operator pos:line="2155" pos:column="40">=</op:operator> <op:operator pos:line="2155" pos:column="42">-</op:operator><lit:literal type="number" pos:line="2155" pos:column="43">1</lit:literal></expr>;</expr_stmt>
		}</block></else></if>

		<decl_stmt><decl><type><name pos:line="2158" pos:column="17">char</name></type> <name pos:line="2158" pos:column="22">styleByte</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2159" pos:column="17">const</specifier> <name pos:line="2159" pos:column="23">int</name></type> <name pos:line="2159" pos:column="27">styleMask</name> <init pos:line="2159" pos:column="37">= <expr><name><name pos:line="2159" pos:column="39">pdoc</name><op:operator pos:line="2159" pos:column="43">-&gt;</op:operator><name pos:line="2159" pos:column="45">stylingBitsMask</name></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="2160" pos:column="17">ll</name><op:operator pos:line="2160" pos:column="19">-&gt;</op:operator><name pos:line="2160" pos:column="21">styleBitsSet</name></name> <op:operator pos:line="2160" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="2160" pos:column="36">0</lit:literal></expr>;</expr_stmt>
		<comment type="line" pos:line="2161" pos:column="17">// Fill base line layout</comment>
		<decl_stmt><decl><type><specifier pos:line="2162" pos:column="17">const</specifier> <name pos:line="2162" pos:column="23">int</name></type> <name pos:line="2162" pos:column="27">lineLength</name> <init pos:line="2162" pos:column="38">= <expr><name pos:line="2162" pos:column="40">posLineEnd</name> <op:operator pos:line="2162" pos:column="51">-</op:operator> <name pos:line="2162" pos:column="53">posLineStart</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="2163" pos:column="17">pdoc</name><op:operator pos:line="2163" pos:column="21">-&gt;</op:operator><name pos:line="2163" pos:column="23">GetCharRange</name></name><argument_list pos:line="2163" pos:column="35">(<argument><expr><name><name pos:line="2163" pos:column="36">ll</name><op:operator pos:line="2163" pos:column="38">-&gt;</op:operator><name pos:line="2163" pos:column="40">chars</name></name></expr></argument>, <argument><expr><name pos:line="2163" pos:column="47">posLineStart</name></expr></argument>, <argument><expr><name pos:line="2163" pos:column="61">lineLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2164" pos:column="17">pdoc</name><op:operator pos:line="2164" pos:column="21">-&gt;</op:operator><name pos:line="2164" pos:column="23">GetStyleRange</name></name><argument_list pos:line="2164" pos:column="36">(<argument><expr><name><name pos:line="2164" pos:column="37">ll</name><op:operator pos:line="2164" pos:column="39">-&gt;</op:operator><name pos:line="2164" pos:column="41">styles</name></name></expr></argument>, <argument><expr><name pos:line="2164" pos:column="49">posLineStart</name></expr></argument>, <argument><expr><name pos:line="2164" pos:column="63">lineLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2165" pos:column="17">int</name></type> <name pos:line="2165" pos:column="21">numCharsBeforeEOL</name> <init pos:line="2165" pos:column="39">= <expr><name pos:line="2165" pos:column="41">lineLength</name></expr></init></decl>;</decl_stmt>
		<while pos:line="2166" pos:column="17">while <condition pos:line="2166" pos:column="23">(<expr><op:operator pos:line="2166" pos:column="24">(</op:operator><name pos:line="2166" pos:column="25">numCharsBeforeEOL</name> <op:operator pos:line="2166" pos:column="43">&gt;</op:operator> <lit:literal type="number" pos:line="2166" pos:column="45">0</lit:literal><op:operator pos:line="2166" pos:column="46">)</op:operator> <op:operator pos:line="2166" pos:column="48">&amp;&amp;</op:operator> <call><name pos:line="2166" pos:column="51">IsEOLChar</name><argument_list pos:line="2166" pos:column="60">(<argument><expr><name><name pos:line="2166" pos:column="61">ll</name><op:operator pos:line="2166" pos:column="63">-&gt;</op:operator><name pos:line="2166" pos:column="65">chars</name><index pos:line="2166" pos:column="70">[<expr><name pos:line="2166" pos:column="71">numCharsBeforeEOL</name><op:operator pos:line="2166" pos:column="88">-</op:operator><lit:literal type="number" pos:line="2166" pos:column="89">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:line="2166" pos:column="94">{
			<expr_stmt><expr><name pos:line="2167" pos:column="25">numCharsBeforeEOL</name><op:operator pos:line="2167" pos:column="42">--</op:operator></expr>;</expr_stmt>
		}</block></while>
		<decl_stmt><decl><type><specifier pos:line="2169" pos:column="17">const</specifier> <name pos:line="2169" pos:column="23">int</name></type> <name pos:line="2169" pos:column="27">numCharsInLine</name> <init pos:line="2169" pos:column="42">= <expr><op:operator pos:line="2169" pos:column="44">(</op:operator><name><name pos:line="2169" pos:column="45">vstyle</name><op:operator pos:line="2169" pos:column="51">.</op:operator><name pos:line="2169" pos:column="52">viewEOL</name></name><op:operator pos:line="2169" pos:column="59">)</op:operator> <op:operator pos:line="2169" pos:column="61">?</op:operator> <name pos:line="2169" pos:column="63">lineLength</name> <op:operator pos:line="2169" pos:column="74">:</op:operator> <name pos:line="2169" pos:column="76">numCharsBeforeEOL</name></expr></init></decl>;</decl_stmt>
		<for pos:line="2170" pos:column="17">for (<init><decl><type><name pos:line="2170" pos:column="22">int</name></type> <name pos:line="2170" pos:column="26">styleInLine</name> <init pos:line="2170" pos:column="38">= <expr><lit:literal type="number" pos:line="2170" pos:column="40">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2170" pos:column="43">styleInLine</name> <op:operator pos:line="2170" pos:column="55">&lt;</op:operator> <name pos:line="2170" pos:column="57">numCharsInLine</name></expr>;</condition> <incr><expr><name pos:line="2170" pos:column="73">styleInLine</name><op:operator pos:line="2170" pos:column="84">++</op:operator></expr></incr>) <block pos:line="2170" pos:column="88">{
			<expr_stmt><expr><name pos:line="2171" pos:column="25">styleByte</name> <op:operator pos:line="2171" pos:column="35">=</op:operator> <name><name pos:line="2171" pos:column="37">ll</name><op:operator pos:line="2171" pos:column="39">-&gt;</op:operator><name pos:line="2171" pos:column="41">styles</name><index pos:line="2171" pos:column="47">[<expr><name pos:line="2171" pos:column="48">styleInLine</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2172" pos:column="25">ll</name><op:operator pos:line="2172" pos:column="27">-&gt;</op:operator><name pos:line="2172" pos:column="29">styleBitsSet</name></name> <op:operator pos:line="2172" pos:column="42">|=</op:operator> <name pos:line="2172" pos:column="45">styleByte</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2173" pos:column="25">ll</name><op:operator pos:line="2173" pos:column="27">-&gt;</op:operator><name pos:line="2173" pos:column="29">styles</name><index pos:line="2173" pos:column="35">[<expr><name pos:line="2173" pos:column="36">styleInLine</name></expr>]</index></name> <op:operator pos:line="2173" pos:column="49">=</op:operator> <call><name><name pos:line="2173" pos:column="51">static_cast</name><argument_list pos:line="2173" pos:column="62">&lt;<argument><expr><name pos:line="2173" pos:column="63">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2173" pos:column="68">(<argument><expr><name pos:line="2173" pos:column="69">styleByte</name> <op:operator pos:line="2173" pos:column="79">&amp;</op:operator> <name pos:line="2173" pos:column="81">styleMask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2174" pos:column="25">ll</name><op:operator pos:line="2174" pos:column="27">-&gt;</op:operator><name pos:line="2174" pos:column="29">indicators</name><index pos:line="2174" pos:column="39">[<expr><name pos:line="2174" pos:column="40">styleInLine</name></expr>]</index></name> <op:operator pos:line="2174" pos:column="53">=</op:operator> <call><name><name pos:line="2174" pos:column="55">static_cast</name><argument_list pos:line="2174" pos:column="66">&lt;<argument><expr><name pos:line="2174" pos:column="67">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2174" pos:column="72">(<argument><expr><name pos:line="2174" pos:column="73">styleByte</name> <op:operator pos:line="2174" pos:column="83">&amp;</op:operator> <op:operator pos:line="2174" pos:column="85">~</op:operator><name pos:line="2174" pos:column="86">styleMask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><name pos:line="2176" pos:column="17">styleByte</name> <op:operator pos:line="2176" pos:column="27">=</op:operator> <call><name><name pos:line="2176" pos:column="29">static_cast</name><argument_list pos:line="2176" pos:column="40">&lt;<argument><expr><name pos:line="2176" pos:column="41">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2176" pos:column="46">(<argument><expr><op:operator pos:line="2176" pos:column="47">(</op:operator><op:operator pos:line="2176" pos:column="48">(</op:operator><name pos:line="2176" pos:column="49">lineLength</name> <op:operator pos:line="2176" pos:column="60">&gt;</op:operator> <lit:literal type="number" pos:line="2176" pos:column="62">0</lit:literal><op:operator pos:line="2176" pos:column="63">)</op:operator> <op:operator pos:line="2176" pos:column="65">?</op:operator> <name><name pos:line="2176" pos:column="67">ll</name><op:operator pos:line="2176" pos:column="69">-&gt;</op:operator><name pos:line="2176" pos:column="71">styles</name><index pos:line="2176" pos:column="77">[<expr><name pos:line="2176" pos:column="78">lineLength</name><op:operator pos:line="2176" pos:column="88">-</op:operator><lit:literal type="number" pos:line="2176" pos:column="89">1</lit:literal></expr>]</index></name> <op:operator pos:line="2176" pos:column="92">:</op:operator> <lit:literal type="number" pos:line="2176" pos:column="94">0</lit:literal><op:operator pos:line="2176" pos:column="95">)</op:operator> <op:operator pos:line="2176" pos:column="97">&amp;</op:operator> <name pos:line="2176" pos:column="99">styleMask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2177" pos:column="17">if <condition pos:line="2177" pos:column="20">(<expr><name><name pos:line="2177" pos:column="21">vstyle</name><op:operator pos:line="2177" pos:column="27">.</op:operator><name pos:line="2177" pos:column="28">someStylesForceCase</name></name></expr>)</condition><then pos:line="2177" pos:column="48"> <block pos:line="2177" pos:column="49">{
			<for pos:line="2178" pos:column="25">for (<init><decl><type><name pos:line="2178" pos:column="30">int</name></type> <name pos:line="2178" pos:column="34">charInLine</name> <init pos:line="2178" pos:column="45">= <expr><lit:literal type="number" pos:line="2178" pos:column="47">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2178" pos:column="50">charInLine</name><op:operator pos:line="2178" pos:column="60">&lt;</op:operator><name pos:line="2178" pos:column="61">lineLength</name></expr>;</condition> <incr><expr><name pos:line="2178" pos:column="73">charInLine</name><op:operator pos:line="2178" pos:column="83">++</op:operator></expr></incr>) <block pos:line="2178" pos:column="87">{
				<decl_stmt><decl><type><name pos:line="2179" pos:column="33">char</name></type> <name pos:line="2179" pos:column="38">chDoc</name> <init pos:line="2179" pos:column="44">= <expr><name><name pos:line="2179" pos:column="46">ll</name><op:operator pos:line="2179" pos:column="48">-&gt;</op:operator><name pos:line="2179" pos:column="50">chars</name><index pos:line="2179" pos:column="55">[<expr><name pos:line="2179" pos:column="56">charInLine</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
				<if pos:line="2180" pos:column="33">if <condition pos:line="2180" pos:column="36">(<expr><name><name pos:line="2180" pos:column="37">vstyle</name><op:operator pos:line="2180" pos:column="43">.</op:operator><name pos:line="2180" pos:column="44">styles</name><index pos:line="2180" pos:column="50">[<expr><name><name pos:line="2180" pos:column="51">ll</name><op:operator pos:line="2180" pos:column="53">-&gt;</op:operator><name pos:line="2180" pos:column="55">styles</name><index pos:line="2180" pos:column="61">[<expr><name pos:line="2180" pos:column="62">charInLine</name></expr>]</index></name></expr>]</index></name><op:operator pos:line="2180" pos:column="74">.</op:operator><name pos:line="2180" pos:column="75">caseForce</name> <op:operator pos:line="2180" pos:column="85">==</op:operator> <name><name pos:line="2180" pos:column="88">Style</name><op:operator pos:line="2180" pos:column="93">::</op:operator><name pos:line="2180" pos:column="95">caseUpper</name></name></expr>)</condition><then pos:line="2180" pos:column="105">
					<expr_stmt><expr><name><name pos:line="2181" pos:column="41">ll</name><op:operator pos:line="2181" pos:column="43">-&gt;</op:operator><name pos:line="2181" pos:column="45">chars</name><index pos:line="2181" pos:column="50">[<expr><name pos:line="2181" pos:column="51">charInLine</name></expr>]</index></name> <op:operator pos:line="2181" pos:column="63">=</op:operator> <call><name><name pos:line="2181" pos:column="65">static_cast</name><argument_list pos:line="2181" pos:column="76">&lt;<argument><expr><name pos:line="2181" pos:column="77">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2181" pos:column="82">(<argument><expr><call><name pos:line="2181" pos:column="83">toupper</name><argument_list pos:line="2181" pos:column="90">(<argument><expr><name pos:line="2181" pos:column="91">chDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="2182" pos:column="33">else <if pos:line="2182" pos:column="38">if <condition pos:line="2182" pos:column="41">(<expr><name><name pos:line="2182" pos:column="42">vstyle</name><op:operator pos:line="2182" pos:column="48">.</op:operator><name pos:line="2182" pos:column="49">styles</name><index pos:line="2182" pos:column="55">[<expr><name><name pos:line="2182" pos:column="56">ll</name><op:operator pos:line="2182" pos:column="58">-&gt;</op:operator><name pos:line="2182" pos:column="60">styles</name><index pos:line="2182" pos:column="66">[<expr><name pos:line="2182" pos:column="67">charInLine</name></expr>]</index></name></expr>]</index></name><op:operator pos:line="2182" pos:column="79">.</op:operator><name pos:line="2182" pos:column="80">caseForce</name> <op:operator pos:line="2182" pos:column="90">==</op:operator> <name><name pos:line="2182" pos:column="93">Style</name><op:operator pos:line="2182" pos:column="98">::</op:operator><name pos:line="2182" pos:column="100">caseLower</name></name></expr>)</condition><then pos:line="2182" pos:column="110">
					<expr_stmt><expr><name><name pos:line="2183" pos:column="41">ll</name><op:operator pos:line="2183" pos:column="43">-&gt;</op:operator><name pos:line="2183" pos:column="45">chars</name><index pos:line="2183" pos:column="50">[<expr><name pos:line="2183" pos:column="51">charInLine</name></expr>]</index></name> <op:operator pos:line="2183" pos:column="63">=</op:operator> <call><name><name pos:line="2183" pos:column="65">static_cast</name><argument_list pos:line="2183" pos:column="76">&lt;<argument><expr><name pos:line="2183" pos:column="77">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2183" pos:column="82">(<argument><expr><call><name pos:line="2183" pos:column="83">tolower</name><argument_list pos:line="2183" pos:column="90">(<argument><expr><name pos:line="2183" pos:column="91">chDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
			}</block></for>
		}</block></then></if>
		<expr_stmt><expr><name><name pos:line="2186" pos:column="17">ll</name><op:operator pos:line="2186" pos:column="19">-&gt;</op:operator><name pos:line="2186" pos:column="21">xHighlightGuide</name></name> <op:operator pos:line="2186" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="2186" pos:column="39">0</lit:literal></expr>;</expr_stmt>
		<comment type="line" pos:line="2187" pos:column="17">// Extra element at the end of the line to hold end x position and act as</comment>
		<expr_stmt><expr><name><name pos:line="2188" pos:column="17">ll</name><op:operator pos:line="2188" pos:column="19">-&gt;</op:operator><name pos:line="2188" pos:column="21">chars</name><index pos:line="2188" pos:column="26">[<expr><name pos:line="2188" pos:column="27">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2188" pos:column="43">=</op:operator> <lit:literal type="number" pos:line="2188" pos:column="45">0</lit:literal></expr>;</expr_stmt>   <comment type="line" pos:line="2188" pos:column="50">// Also triggers processing in the loops as this is a control character</comment>
		<expr_stmt><expr><name><name pos:line="2189" pos:column="17">ll</name><op:operator pos:line="2189" pos:column="19">-&gt;</op:operator><name pos:line="2189" pos:column="21">styles</name><index pos:line="2189" pos:column="27">[<expr><name pos:line="2189" pos:column="28">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2189" pos:column="44">=</op:operator> <name pos:line="2189" pos:column="46">styleByte</name></expr>;</expr_stmt>	<comment type="line" pos:line="2189" pos:column="57">// For eolFilled</comment>
		<expr_stmt><expr><name><name pos:line="2190" pos:column="17">ll</name><op:operator pos:line="2190" pos:column="19">-&gt;</op:operator><name pos:line="2190" pos:column="21">indicators</name><index pos:line="2190" pos:column="31">[<expr><name pos:line="2190" pos:column="32">numCharsInLine</name></expr>]</index></name> <op:operator pos:line="2190" pos:column="48">=</op:operator> <lit:literal type="number" pos:line="2190" pos:column="50">0</lit:literal></expr>;</expr_stmt>

		<comment type="line" pos:line="2192" pos:column="17">// Layout the line, determining the position of each character,</comment>
		<comment type="line" pos:line="2193" pos:column="17">// with an extra element at the end for the end of the line.</comment>
		<decl_stmt><decl><type><name pos:line="2194" pos:column="17">int</name></type> <name pos:line="2194" pos:column="21">startseg</name> <init pos:line="2194" pos:column="30">= <expr><lit:literal type="number" pos:line="2194" pos:column="32">0</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="2194" pos:column="41">// Start of the current segment, in char. number</comment>
		<decl_stmt><decl><type><name pos:line="2195" pos:column="17">int</name></type> <name pos:line="2195" pos:column="21">startsegx</name> <init pos:line="2195" pos:column="31">= <expr><lit:literal type="number" pos:line="2195" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="2195" pos:column="41">// Start of the current segment, in pixels</comment>
		<expr_stmt><expr><name><name pos:line="2196" pos:column="17">ll</name><op:operator pos:line="2196" pos:column="19">-&gt;</op:operator><name pos:line="2196" pos:column="21">positions</name><index pos:line="2196" pos:column="30">[<expr><lit:literal type="number" pos:line="2196" pos:column="31">0</lit:literal></expr>]</index></name> <op:operator pos:line="2196" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="2196" pos:column="36">0</lit:literal></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2197" pos:column="17">unsigned</name> <name pos:line="2197" pos:column="26">int</name></type> <name pos:line="2197" pos:column="30">tabWidth</name> <init pos:line="2197" pos:column="39">= <expr><name><name pos:line="2197" pos:column="41">vstyle</name><op:operator pos:line="2197" pos:column="47">.</op:operator><name pos:line="2197" pos:column="48">spaceWidth</name></name> <op:operator pos:line="2197" pos:column="59">*</op:operator> <name><name pos:line="2197" pos:column="61">pdoc</name><op:operator pos:line="2197" pos:column="65">-&gt;</op:operator><name pos:line="2197" pos:column="67">tabInChars</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2198" pos:column="17">bool</name></type> <name pos:line="2198" pos:column="22">lastSegItalics</name> <init pos:line="2198" pos:column="37">= <expr><lit:literal type="boolean" pos:line="2198" pos:column="39">false</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2199" pos:column="17">Font</name> <type:modifier pos:line="2199" pos:column="22">&amp;</type:modifier></type><name pos:line="2199" pos:column="23">ctrlCharsFont</name> <init pos:line="2199" pos:column="37">= <expr><name><name pos:line="2199" pos:column="39">vstyle</name><op:operator pos:line="2199" pos:column="45">.</op:operator><name pos:line="2199" pos:column="46">styles</name><index pos:line="2199" pos:column="52">[<expr><name pos:line="2199" pos:column="53">STYLE_CONTROLCHAR</name></expr>]</index></name><op:operator pos:line="2199" pos:column="71">.</op:operator><name pos:line="2199" pos:column="72">font</name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="2201" pos:column="17">int</name></type> <name><name pos:line="2201" pos:column="21">ctrlCharWidth</name><index pos:line="2201" pos:column="34">[<expr><lit:literal type="number" pos:line="2201" pos:column="35">32</lit:literal></expr>]</index></name> <init pos:line="2201" pos:column="39">= <expr><block pos:line="2201" pos:column="41">{<expr><lit:literal type="number" pos:line="2201" pos:column="42">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2202" pos:column="17">bool</name></type> <name pos:line="2202" pos:column="22">isControlNext</name> <init pos:line="2202" pos:column="36">= <expr><call><name pos:line="2202" pos:column="38">IsControlCharacter</name><argument_list pos:line="2202" pos:column="56">(<argument><expr><name><name pos:line="2202" pos:column="57">ll</name><op:operator pos:line="2202" pos:column="59">-&gt;</op:operator><name pos:line="2202" pos:column="61">chars</name><index pos:line="2202" pos:column="66">[<expr><lit:literal type="number" pos:line="2202" pos:column="67">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2203" pos:column="17">int</name></type> <name pos:line="2203" pos:column="21">trailBytes</name> <init pos:line="2203" pos:column="32">= <expr><lit:literal type="number" pos:line="2203" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2204" pos:column="17">bool</name></type> <name pos:line="2204" pos:column="22">isBadUTFNext</name> <init pos:line="2204" pos:column="35">= <expr><call><name pos:line="2204" pos:column="37">IsUnicodeMode</name><argument_list pos:line="2204" pos:column="50">()</argument_list></call> <op:operator pos:line="2204" pos:column="53">&amp;&amp;</op:operator> <call><name pos:line="2204" pos:column="56">BadUTF</name><argument_list pos:line="2204" pos:column="62">(<argument><expr><name><name pos:line="2204" pos:column="63">ll</name><op:operator pos:line="2204" pos:column="65">-&gt;</op:operator><name pos:line="2204" pos:column="67">chars</name></name></expr></argument>, <argument><expr><name pos:line="2204" pos:column="74">numCharsInLine</name></expr></argument>, <argument><expr><name pos:line="2204" pos:column="90">trailBytes</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="2205" pos:column="17">for (<init><decl><type><name pos:line="2205" pos:column="22">int</name></type> <name pos:line="2205" pos:column="26">charInLine</name> <init pos:line="2205" pos:column="37">= <expr><lit:literal type="number" pos:line="2205" pos:column="39">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2205" pos:column="42">charInLine</name> <op:operator pos:line="2205" pos:column="53">&lt;</op:operator> <name pos:line="2205" pos:column="55">numCharsInLine</name></expr>;</condition> <incr><expr><name pos:line="2205" pos:column="71">charInLine</name><op:operator pos:line="2205" pos:column="81">++</op:operator></expr></incr>) <block pos:line="2205" pos:column="85">{
			<decl_stmt><decl><type><name pos:line="2206" pos:column="25">bool</name></type> <name pos:line="2206" pos:column="30">isControl</name> <init pos:line="2206" pos:column="40">= <expr><name pos:line="2206" pos:column="42">isControlNext</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2207" pos:column="25">isControlNext</name> <op:operator pos:line="2207" pos:column="39">=</op:operator> <call><name pos:line="2207" pos:column="41">IsControlCharacter</name><argument_list pos:line="2207" pos:column="59">(<argument><expr><name><name pos:line="2207" pos:column="60">ll</name><op:operator pos:line="2207" pos:column="62">-&gt;</op:operator><name pos:line="2207" pos:column="64">chars</name><index pos:line="2207" pos:column="69">[<expr><name pos:line="2207" pos:column="70">charInLine</name> <op:operator pos:line="2207" pos:column="81">+</op:operator> <lit:literal type="number" pos:line="2207" pos:column="83">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2208" pos:column="25">bool</name></type> <name pos:line="2208" pos:column="30">isBadUTF</name> <init pos:line="2208" pos:column="39">= <expr><name pos:line="2208" pos:column="41">isBadUTFNext</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2209" pos:column="25">isBadUTFNext</name> <op:operator pos:line="2209" pos:column="38">=</op:operator> <call><name pos:line="2209" pos:column="40">IsUnicodeMode</name><argument_list pos:line="2209" pos:column="53">()</argument_list></call> <op:operator pos:line="2209" pos:column="56">&amp;&amp;</op:operator> <call><name pos:line="2209" pos:column="59">BadUTF</name><argument_list pos:line="2209" pos:column="65">(<argument><expr><name><name pos:line="2209" pos:column="66">ll</name><op:operator pos:line="2209" pos:column="68">-&gt;</op:operator><name pos:line="2209" pos:column="70">chars</name></name> <op:operator pos:line="2209" pos:column="76">+</op:operator> <name pos:line="2209" pos:column="78">charInLine</name> <op:operator pos:line="2209" pos:column="89">+</op:operator> <lit:literal type="number" pos:line="2209" pos:column="91">1</lit:literal></expr></argument>, <argument><expr><name pos:line="2209" pos:column="94">numCharsInLine</name> <op:operator pos:line="2209" pos:column="109">-</op:operator> <name pos:line="2209" pos:column="111">charInLine</name> <op:operator pos:line="2209" pos:column="122">-</op:operator> <lit:literal type="number" pos:line="2209" pos:column="124">1</lit:literal></expr></argument>, <argument><expr><name pos:line="2209" pos:column="127">trailBytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2210" pos:column="25">if <condition pos:line="2210" pos:column="28">(<expr><op:operator pos:line="2210" pos:column="29">(</op:operator><name><name pos:line="2210" pos:column="30">ll</name><op:operator pos:line="2210" pos:column="32">-&gt;</op:operator><name pos:line="2210" pos:column="34">styles</name><index pos:line="2210" pos:column="40">[<expr><name pos:line="2210" pos:column="41">charInLine</name></expr>]</index></name> <op:operator pos:line="2210" pos:column="53">!=</op:operator> <name><name pos:line="2210" pos:column="56">ll</name><op:operator pos:line="2210" pos:column="58">-&gt;</op:operator><name pos:line="2210" pos:column="60">styles</name><index pos:line="2210" pos:column="66">[<expr><name pos:line="2210" pos:column="67">charInLine</name> <op:operator pos:line="2210" pos:column="78">+</op:operator> <lit:literal type="number" pos:line="2210" pos:column="80">1</lit:literal></expr>]</index></name><op:operator pos:line="2210" pos:column="82">)</op:operator> <op:operator pos:line="2210" pos:column="84">||</op:operator>
			        <name pos:line="2211" pos:column="33">isControl</name> <op:operator pos:line="2211" pos:column="43">||</op:operator> <name pos:line="2211" pos:column="46">isControlNext</name> <op:operator pos:line="2211" pos:column="60">||</op:operator> <name pos:line="2211" pos:column="63">isBadUTF</name> <op:operator pos:line="2211" pos:column="72">||</op:operator> <name pos:line="2211" pos:column="75">isBadUTFNext</name></expr>)</condition><then pos:line="2211" pos:column="88"> <block pos:line="2211" pos:column="89">{
				<expr_stmt><expr><name><name pos:line="2212" pos:column="33">ll</name><op:operator pos:line="2212" pos:column="35">-&gt;</op:operator><name pos:line="2212" pos:column="37">positions</name><index pos:line="2212" pos:column="46">[<expr><name pos:line="2212" pos:column="47">startseg</name></expr>]</index></name> <op:operator pos:line="2212" pos:column="57">=</op:operator> <lit:literal type="number" pos:line="2212" pos:column="59">0</lit:literal></expr>;</expr_stmt>
				<if pos:line="2213" pos:column="33">if <condition pos:line="2213" pos:column="36">(<expr><name><name pos:line="2213" pos:column="37">vstyle</name><op:operator pos:line="2213" pos:column="43">.</op:operator><name pos:line="2213" pos:column="44">styles</name><index pos:line="2213" pos:column="50">[<expr><name><name pos:line="2213" pos:column="51">ll</name><op:operator pos:line="2213" pos:column="53">-&gt;</op:operator><name pos:line="2213" pos:column="55">styles</name><index pos:line="2213" pos:column="61">[<expr><name pos:line="2213" pos:column="62">charInLine</name></expr>]</index></name></expr>]</index></name><op:operator pos:line="2213" pos:column="74">.</op:operator><name pos:line="2213" pos:column="75">visible</name></expr>)</condition><then pos:line="2213" pos:column="83"> <block pos:line="2213" pos:column="84">{
					<if pos:line="2214" pos:column="41">if <condition pos:line="2214" pos:column="44">(<expr><name pos:line="2214" pos:column="45">isControl</name></expr>)</condition><then pos:line="2214" pos:column="55"> <block pos:line="2214" pos:column="56">{
						<if pos:line="2215" pos:column="49">if <condition pos:line="2215" pos:column="52">(<expr><name><name pos:line="2215" pos:column="53">ll</name><op:operator pos:line="2215" pos:column="55">-&gt;</op:operator><name pos:line="2215" pos:column="57">chars</name><index pos:line="2215" pos:column="62">[<expr><name pos:line="2215" pos:column="63">charInLine</name></expr>]</index></name> <op:operator pos:line="2215" pos:column="75">==</op:operator> <lit:literal type="char" pos:line="2215" pos:column="78">'\t'</lit:literal></expr>)</condition><then pos:line="2215" pos:column="83"> <block pos:line="2215" pos:column="84">{
							<expr_stmt><expr><name><name pos:line="2216" pos:column="57">ll</name><op:operator pos:line="2216" pos:column="59">-&gt;</op:operator><name pos:line="2216" pos:column="61">positions</name><index pos:line="2216" pos:column="70">[<expr><name pos:line="2216" pos:column="71">charInLine</name> <op:operator pos:line="2216" pos:column="82">+</op:operator> <lit:literal type="number" pos:line="2216" pos:column="84">1</lit:literal></expr>]</index></name> <op:operator pos:line="2216" pos:column="87">=</op:operator> <op:operator pos:line="2216" pos:column="89">(</op:operator><op:operator pos:line="2216" pos:column="90">(</op:operator><op:operator pos:line="2216" pos:column="91">(</op:operator><op:operator pos:line="2216" pos:column="92">(</op:operator><name pos:line="2216" pos:column="93">startsegx</name> <op:operator pos:line="2216" pos:column="103">+</op:operator> <lit:literal type="number" pos:line="2216" pos:column="105">2</lit:literal><op:operator pos:line="2216" pos:column="106">)</op:operator> <op:operator pos:line="2216" pos:column="108">/</op:operator>
							        <name pos:line="2217" pos:column="65">tabWidth</name><op:operator pos:line="2217" pos:column="73">)</op:operator> <op:operator pos:line="2217" pos:column="75">+</op:operator> <lit:literal type="number" pos:line="2217" pos:column="77">1</lit:literal><op:operator pos:line="2217" pos:column="78">)</op:operator> <op:operator pos:line="2217" pos:column="80">*</op:operator> <name pos:line="2217" pos:column="82">tabWidth</name><op:operator pos:line="2217" pos:column="90">)</op:operator> <op:operator pos:line="2217" pos:column="92">-</op:operator> <name pos:line="2217" pos:column="94">startsegx</name></expr>;</expr_stmt>
						}</block></then> <else pos:line="2218" pos:column="51">else <if pos:line="2218" pos:column="56">if <condition pos:line="2218" pos:column="59">(<expr><name pos:line="2218" pos:column="60">controlCharSymbol</name> <op:operator pos:line="2218" pos:column="78">&lt;</op:operator> <lit:literal type="number" pos:line="2218" pos:column="80">32</lit:literal></expr>)</condition><then pos:line="2218" pos:column="83"> <block pos:line="2218" pos:column="84">{
							<if pos:line="2219" pos:column="57">if <condition pos:line="2219" pos:column="60">(<expr><name><name pos:line="2219" pos:column="61">ctrlCharWidth</name><index pos:line="2219" pos:column="74">[<expr><name><name pos:line="2219" pos:column="75">ll</name><op:operator pos:line="2219" pos:column="77">-&gt;</op:operator><name pos:line="2219" pos:column="79">chars</name><index pos:line="2219" pos:column="84">[<expr><name pos:line="2219" pos:column="85">charInLine</name></expr>]</index></name></expr>]</index></name> <op:operator pos:line="2219" pos:column="98">==</op:operator> <lit:literal type="number" pos:line="2219" pos:column="101">0</lit:literal></expr>)</condition><then pos:line="2219" pos:column="103"> <block pos:line="2219" pos:column="104">{
								<decl_stmt><decl><type><specifier pos:line="2220" pos:column="65">const</specifier> <name pos:line="2220" pos:column="71">char</name> <type:modifier pos:line="2220" pos:column="76">*</type:modifier></type><name pos:line="2220" pos:column="77">ctrlChar</name> <init pos:line="2220" pos:column="86">= <expr><call><name pos:line="2220" pos:column="88">ControlCharacterString</name><argument_list pos:line="2220" pos:column="110">(<argument><expr><name><name pos:line="2220" pos:column="111">ll</name><op:operator pos:line="2220" pos:column="113">-&gt;</op:operator><name pos:line="2220" pos:column="115">chars</name><index pos:line="2220" pos:column="120">[<expr><name pos:line="2220" pos:column="121">charInLine</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<comment type="line" pos:line="2221" pos:column="65">// +3 For a blank on front and rounded edge each side:</comment>
								<expr_stmt><expr><name><name pos:line="2222" pos:column="65">ctrlCharWidth</name><index pos:line="2222" pos:column="78">[<expr><name><name pos:line="2222" pos:column="79">ll</name><op:operator pos:line="2222" pos:column="81">-&gt;</op:operator><name pos:line="2222" pos:column="83">chars</name><index pos:line="2222" pos:column="88">[<expr><name pos:line="2222" pos:column="89">charInLine</name></expr>]</index></name></expr>]</index></name> <op:operator pos:line="2222" pos:column="102">=</op:operator>
								    <call><name><name pos:line="2223" pos:column="69">surface</name><op:operator pos:line="2223" pos:column="76">-&gt;</op:operator><name pos:line="2223" pos:column="78">WidthText</name></name><argument_list pos:line="2223" pos:column="87">(<argument><expr><name pos:line="2223" pos:column="88">ctrlCharsFont</name></expr></argument>, <argument><expr><name pos:line="2223" pos:column="103">ctrlChar</name></expr></argument>, <argument><expr><call><name pos:line="2223" pos:column="113">istrlen</name><argument_list pos:line="2223" pos:column="120">(<argument><expr><name pos:line="2223" pos:column="121">ctrlChar</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="2223" pos:column="132">+</op:operator> <lit:literal type="number" pos:line="2223" pos:column="134">3</lit:literal></expr>;</expr_stmt>
							}</block></then></if>
							<expr_stmt><expr><name><name pos:line="2225" pos:column="57">ll</name><op:operator pos:line="2225" pos:column="59">-&gt;</op:operator><name pos:line="2225" pos:column="61">positions</name><index pos:line="2225" pos:column="70">[<expr><name pos:line="2225" pos:column="71">charInLine</name> <op:operator pos:line="2225" pos:column="82">+</op:operator> <lit:literal type="number" pos:line="2225" pos:column="84">1</lit:literal></expr>]</index></name> <op:operator pos:line="2225" pos:column="87">=</op:operator> <name><name pos:line="2225" pos:column="89">ctrlCharWidth</name><index pos:line="2225" pos:column="102">[<expr><name><name pos:line="2225" pos:column="103">ll</name><op:operator pos:line="2225" pos:column="105">-&gt;</op:operator><name pos:line="2225" pos:column="107">chars</name><index pos:line="2225" pos:column="112">[<expr><name pos:line="2225" pos:column="113">charInLine</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>
						}</block></then> <else pos:line="2226" pos:column="51">else <block pos:line="2226" pos:column="56">{
							<decl_stmt><decl><type><name pos:line="2227" pos:column="57">char</name></type> <name><name pos:line="2227" pos:column="62">cc</name><index pos:line="2227" pos:column="64">[<expr><lit:literal type="number" pos:line="2227" pos:column="65">2</lit:literal></expr>]</index></name> <init pos:line="2227" pos:column="68">= <expr><block pos:line="2227" pos:column="70">{ <expr><call><name><name pos:line="2227" pos:column="72">static_cast</name><argument_list pos:line="2227" pos:column="83">&lt;<argument><expr><name pos:line="2227" pos:column="84">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2227" pos:column="89">(<argument><expr><name pos:line="2227" pos:column="90">controlCharSymbol</name></expr></argument>)</argument_list></call></expr>, <expr><lit:literal type="char" pos:line="2227" pos:column="110">'\0'</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="2228" pos:column="57">surface</name><op:operator pos:line="2228" pos:column="64">-&gt;</op:operator><name pos:line="2228" pos:column="66">MeasureWidths</name></name><argument_list pos:line="2228" pos:column="79">(<argument><expr><name pos:line="2228" pos:column="80">ctrlCharsFont</name></expr></argument>, <argument><expr><name pos:line="2228" pos:column="95">cc</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2228" pos:column="99">1</lit:literal></expr></argument>,
							        <argument><expr><name><name pos:line="2229" pos:column="65">ll</name><op:operator pos:line="2229" pos:column="67">-&gt;</op:operator><name pos:line="2229" pos:column="69">positions</name></name> <op:operator pos:line="2229" pos:column="79">+</op:operator> <name pos:line="2229" pos:column="81">startseg</name> <op:operator pos:line="2229" pos:column="90">+</op:operator> <lit:literal type="number" pos:line="2229" pos:column="92">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></else></if></else></if>
						<expr_stmt><expr><name pos:line="2231" pos:column="49">lastSegItalics</name> <op:operator pos:line="2231" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="2231" pos:column="66">false</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="2232" pos:column="43">else <if pos:line="2232" pos:column="48">if <condition pos:line="2232" pos:column="51">(<expr><name pos:line="2232" pos:column="52">isBadUTF</name></expr>)</condition><then pos:line="2232" pos:column="61"> <block pos:line="2232" pos:column="62">{
						<decl_stmt><decl><type><name pos:line="2233" pos:column="49">char</name></type> <name><name pos:line="2233" pos:column="54">hexits</name><index pos:line="2233" pos:column="60">[<expr><lit:literal type="number" pos:line="2233" pos:column="61">4</lit:literal></expr>]</index></name></decl>;</decl_stmt>
						<expr_stmt><expr><call><name pos:line="2234" pos:column="49">sprintf</name><argument_list pos:line="2234" pos:column="56">(<argument><expr><name pos:line="2234" pos:column="57">hexits</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="2234" pos:column="65">"x%2X"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="2234" pos:column="73">ll</name><op:operator pos:line="2234" pos:column="75">-&gt;</op:operator><name pos:line="2234" pos:column="77">chars</name><index pos:line="2234" pos:column="82">[<expr><name pos:line="2234" pos:column="83">charInLine</name></expr>]</index></name> <op:operator pos:line="2234" pos:column="95">&amp;</op:operator> <lit:literal type="number" pos:line="2234" pos:column="97">0xff</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="2235" pos:column="49">ll</name><op:operator pos:line="2235" pos:column="51">-&gt;</op:operator><name pos:line="2235" pos:column="53">positions</name><index pos:line="2235" pos:column="62">[<expr><name pos:line="2235" pos:column="63">charInLine</name> <op:operator pos:line="2235" pos:column="74">+</op:operator> <lit:literal type="number" pos:line="2235" pos:column="76">1</lit:literal></expr>]</index></name> <op:operator pos:line="2235" pos:column="79">=</op:operator>
						    <call><name><name pos:line="2236" pos:column="53">surface</name><op:operator pos:line="2236" pos:column="60">-&gt;</op:operator><name pos:line="2236" pos:column="62">WidthText</name></name><argument_list pos:line="2236" pos:column="71">(<argument><expr><name pos:line="2236" pos:column="72">ctrlCharsFont</name></expr></argument>, <argument><expr><name pos:line="2236" pos:column="87">hexits</name></expr></argument>, <argument><expr><call><name pos:line="2236" pos:column="95">istrlen</name><argument_list pos:line="2236" pos:column="102">(<argument><expr><name pos:line="2236" pos:column="103">hexits</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="2236" pos:column="112">+</op:operator> <lit:literal type="number" pos:line="2236" pos:column="114">3</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="2237" pos:column="43">else <block pos:line="2237" pos:column="48">{	<comment type="line" pos:line="2237" pos:column="57">// Regular character</comment>
						<decl_stmt><decl><type><name pos:line="2238" pos:column="49">int</name></type> <name pos:line="2238" pos:column="53">lenSeg</name> <init pos:line="2238" pos:column="60">= <expr><name pos:line="2238" pos:column="62">charInLine</name> <op:operator pos:line="2238" pos:column="73">-</op:operator> <name pos:line="2238" pos:column="75">startseg</name> <op:operator pos:line="2238" pos:column="84">+</op:operator> <lit:literal type="number" pos:line="2238" pos:column="86">1</lit:literal></expr></init></decl>;</decl_stmt>
						<if pos:line="2239" pos:column="49">if <condition pos:line="2239" pos:column="52">(<expr><op:operator pos:line="2239" pos:column="53">(</op:operator><name pos:line="2239" pos:column="54">lenSeg</name> <op:operator pos:line="2239" pos:column="61">==</op:operator> <lit:literal type="number" pos:line="2239" pos:column="64">1</lit:literal><op:operator pos:line="2239" pos:column="65">)</op:operator> <op:operator pos:line="2239" pos:column="67">&amp;&amp;</op:operator> <op:operator pos:line="2239" pos:column="70">(</op:operator><lit:literal type="char" pos:line="2239" pos:column="71">' '</lit:literal> <op:operator pos:line="2239" pos:column="75">==</op:operator> <name><name pos:line="2239" pos:column="78">ll</name><op:operator pos:line="2239" pos:column="80">-&gt;</op:operator><name pos:line="2239" pos:column="82">chars</name><index pos:line="2239" pos:column="87">[<expr><name pos:line="2239" pos:column="88">startseg</name></expr>]</index></name><op:operator pos:line="2239" pos:column="97">)</op:operator></expr>)</condition><then pos:line="2239" pos:column="99"> <block pos:line="2239" pos:column="100">{
							<expr_stmt><expr><name pos:line="2240" pos:column="57">lastSegItalics</name> <op:operator pos:line="2240" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="2240" pos:column="74">false</lit:literal></expr>;</expr_stmt>
							<comment type="line" pos:line="2241" pos:column="57">// Over half the segments are single characters and of these about half are space characters.</comment>
							<expr_stmt><expr><name><name pos:line="2242" pos:column="57">ll</name><op:operator pos:line="2242" pos:column="59">-&gt;</op:operator><name pos:line="2242" pos:column="61">positions</name><index pos:line="2242" pos:column="70">[<expr><name pos:line="2242" pos:column="71">charInLine</name> <op:operator pos:line="2242" pos:column="82">+</op:operator> <lit:literal type="number" pos:line="2242" pos:column="84">1</lit:literal></expr>]</index></name> <op:operator pos:line="2242" pos:column="87">=</op:operator> <name><name pos:line="2242" pos:column="89">vstyle</name><op:operator pos:line="2242" pos:column="95">.</op:operator><name pos:line="2242" pos:column="96">styles</name><index pos:line="2242" pos:column="102">[<expr><name><name pos:line="2242" pos:column="103">ll</name><op:operator pos:line="2242" pos:column="105">-&gt;</op:operator><name pos:line="2242" pos:column="107">styles</name><index pos:line="2242" pos:column="113">[<expr><name pos:line="2242" pos:column="114">charInLine</name></expr>]</index></name></expr>]</index></name><op:operator pos:line="2242" pos:column="126">.</op:operator><name pos:line="2242" pos:column="127">spaceWidth</name></expr>;</expr_stmt>
						}</block></then> <else pos:line="2243" pos:column="51">else <block pos:line="2243" pos:column="56">{
							<expr_stmt><expr><name pos:line="2244" pos:column="57">lastSegItalics</name> <op:operator pos:line="2244" pos:column="72">=</op:operator> <name><name pos:line="2244" pos:column="74">vstyle</name><op:operator pos:line="2244" pos:column="80">.</op:operator><name pos:line="2244" pos:column="81">styles</name><index pos:line="2244" pos:column="87">[<expr><name><name pos:line="2244" pos:column="88">ll</name><op:operator pos:line="2244" pos:column="90">-&gt;</op:operator><name pos:line="2244" pos:column="92">styles</name><index pos:line="2244" pos:column="98">[<expr><name pos:line="2244" pos:column="99">charInLine</name></expr>]</index></name></expr>]</index></name><op:operator pos:line="2244" pos:column="111">.</op:operator><name pos:line="2244" pos:column="112">italic</name></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name pos:line="2245" pos:column="57">posCache</name><op:operator pos:line="2245" pos:column="65">.</op:operator><name pos:line="2245" pos:column="66">MeasureWidths</name></name><argument_list pos:line="2245" pos:column="79">(<argument><expr><name pos:line="2245" pos:column="80">surface</name></expr></argument>, <argument><expr><name pos:line="2245" pos:column="89">vstyle</name></expr></argument>, <argument><expr><name><name pos:line="2245" pos:column="97">ll</name><op:operator pos:line="2245" pos:column="99">-&gt;</op:operator><name pos:line="2245" pos:column="101">styles</name><index pos:line="2245" pos:column="107">[<expr><name pos:line="2245" pos:column="108">charInLine</name></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="2245" pos:column="121">ll</name><op:operator pos:line="2245" pos:column="123">-&gt;</op:operator><name pos:line="2245" pos:column="125">chars</name></name> <op:operator pos:line="2245" pos:column="131">+</op:operator> <name pos:line="2245" pos:column="133">startseg</name></expr></argument>,
							        <argument><expr><name pos:line="2246" pos:column="65">lenSeg</name></expr></argument>, <argument><expr><name><name pos:line="2246" pos:column="73">ll</name><op:operator pos:line="2246" pos:column="75">-&gt;</op:operator><name pos:line="2246" pos:column="77">positions</name></name> <op:operator pos:line="2246" pos:column="87">+</op:operator> <name pos:line="2246" pos:column="89">startseg</name> <op:operator pos:line="2246" pos:column="98">+</op:operator> <lit:literal type="number" pos:line="2246" pos:column="100">1</lit:literal></expr></argument>, <argument><expr><name pos:line="2246" pos:column="103">pdoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></else></if>
					}</block></else></if></else></if>
				}</block></then> <else pos:line="2249" pos:column="35">else <block pos:line="2249" pos:column="40">{    <comment type="line" pos:line="2249" pos:column="45">// invisible</comment>
					<for pos:line="2250" pos:column="41">for (<init><decl><type><name pos:line="2250" pos:column="46">int</name></type> <name pos:line="2250" pos:column="50">posToZero</name> <init pos:line="2250" pos:column="60">= <expr><name pos:line="2250" pos:column="62">startseg</name></expr></init></decl>;</init> <condition><expr><name pos:line="2250" pos:column="72">posToZero</name> <op:operator pos:line="2250" pos:column="82">&lt;=</op:operator> <op:operator pos:line="2250" pos:column="85">(</op:operator><name pos:line="2250" pos:column="86">charInLine</name> <op:operator pos:line="2250" pos:column="97">+</op:operator> <lit:literal type="number" pos:line="2250" pos:column="99">1</lit:literal><op:operator pos:line="2250" pos:column="100">)</op:operator></expr>;</condition> <incr><expr><name pos:line="2250" pos:column="103">posToZero</name><op:operator pos:line="2250" pos:column="112">++</op:operator></expr></incr>) <block pos:line="2250" pos:column="116">{
						<expr_stmt><expr><name><name pos:line="2251" pos:column="49">ll</name><op:operator pos:line="2251" pos:column="51">-&gt;</op:operator><name pos:line="2251" pos:column="53">positions</name><index pos:line="2251" pos:column="62">[<expr><name pos:line="2251" pos:column="63">posToZero</name></expr>]</index></name> <op:operator pos:line="2251" pos:column="74">=</op:operator> <lit:literal type="number" pos:line="2251" pos:column="76">0</lit:literal></expr>;</expr_stmt>
					}</block></for>
				}</block></else></if>
				<for pos:line="2254" pos:column="33">for (<init><decl><type><name pos:line="2254" pos:column="38">int</name></type> <name pos:line="2254" pos:column="42">posToIncrease</name> <init pos:line="2254" pos:column="56">= <expr><name pos:line="2254" pos:column="58">startseg</name></expr></init></decl>;</init> <condition><expr><name pos:line="2254" pos:column="68">posToIncrease</name> <op:operator pos:line="2254" pos:column="82">&lt;=</op:operator> <op:operator pos:line="2254" pos:column="85">(</op:operator><name pos:line="2254" pos:column="86">charInLine</name> <op:operator pos:line="2254" pos:column="97">+</op:operator> <lit:literal type="number" pos:line="2254" pos:column="99">1</lit:literal><op:operator pos:line="2254" pos:column="100">)</op:operator></expr>;</condition> <incr><expr><name pos:line="2254" pos:column="103">posToIncrease</name><op:operator pos:line="2254" pos:column="116">++</op:operator></expr></incr>) <block pos:line="2254" pos:column="120">{
					<expr_stmt><expr><name><name pos:line="2255" pos:column="41">ll</name><op:operator pos:line="2255" pos:column="43">-&gt;</op:operator><name pos:line="2255" pos:column="45">positions</name><index pos:line="2255" pos:column="54">[<expr><name pos:line="2255" pos:column="55">posToIncrease</name></expr>]</index></name> <op:operator pos:line="2255" pos:column="70">+=</op:operator> <name pos:line="2255" pos:column="73">startsegx</name></expr>;</expr_stmt>
				}</block></for>
				<expr_stmt><expr><name pos:line="2257" pos:column="33">startsegx</name> <op:operator pos:line="2257" pos:column="43">=</op:operator> <name><name pos:line="2257" pos:column="45">ll</name><op:operator pos:line="2257" pos:column="47">-&gt;</op:operator><name pos:line="2257" pos:column="49">positions</name><index pos:line="2257" pos:column="58">[<expr><name pos:line="2257" pos:column="59">charInLine</name> <op:operator pos:line="2257" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="2257" pos:column="72">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="2258" pos:column="33">startseg</name> <op:operator pos:line="2258" pos:column="42">=</op:operator> <name pos:line="2258" pos:column="44">charInLine</name> <op:operator pos:line="2258" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="2258" pos:column="57">1</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
		<comment type="line" pos:line="2261" pos:column="17">// Small hack to make lines that end with italics not cut off the edge of the last character</comment>
		<if pos:line="2262" pos:column="17">if <condition pos:line="2262" pos:column="20">(<expr><op:operator pos:line="2262" pos:column="21">(</op:operator><name pos:line="2262" pos:column="22">startseg</name> <op:operator pos:line="2262" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="2262" pos:column="33">0</lit:literal><op:operator pos:line="2262" pos:column="34">)</op:operator> <op:operator pos:line="2262" pos:column="36">&amp;&amp;</op:operator> <name pos:line="2262" pos:column="39">lastSegItalics</name></expr>)</condition><then pos:line="2262" pos:column="54"> <block pos:line="2262" pos:column="55">{
			<expr_stmt><expr><name><name pos:line="2263" pos:column="25">ll</name><op:operator pos:line="2263" pos:column="27">-&gt;</op:operator><name pos:line="2263" pos:column="29">positions</name><index pos:line="2263" pos:column="38">[<expr><name pos:line="2263" pos:column="39">startseg</name></expr>]</index></name> <op:operator pos:line="2263" pos:column="49">+=</op:operator> <lit:literal type="number" pos:line="2263" pos:column="52">2</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name><name pos:line="2265" pos:column="17">ll</name><op:operator pos:line="2265" pos:column="19">-&gt;</op:operator><name pos:line="2265" pos:column="21">numCharsInLine</name></name> <op:operator pos:line="2265" pos:column="36">=</op:operator> <name pos:line="2265" pos:column="38">numCharsInLine</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2266" pos:column="17">ll</name><op:operator pos:line="2266" pos:column="19">-&gt;</op:operator><name pos:line="2266" pos:column="21">numCharsBeforeEOL</name></name> <op:operator pos:line="2266" pos:column="39">=</op:operator> <name pos:line="2266" pos:column="41">numCharsBeforeEOL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2267" pos:column="17">ll</name><op:operator pos:line="2267" pos:column="19">-&gt;</op:operator><name pos:line="2267" pos:column="21">validity</name></name> <op:operator pos:line="2267" pos:column="30">=</op:operator> <name><name pos:line="2267" pos:column="32">LineLayout</name><op:operator pos:line="2267" pos:column="42">::</op:operator><name pos:line="2267" pos:column="44">llPositions</name></name></expr>;</expr_stmt>
	}</block></then></if>
	<comment type="line" pos:line="2269" pos:column="9">// Hard to cope when too narrow, so just assume there is space</comment>
	<if pos:line="2270" pos:column="9">if <condition pos:line="2270" pos:column="12">(<expr><name pos:line="2270" pos:column="13">width</name> <op:operator pos:line="2270" pos:column="19">&lt;</op:operator> <lit:literal type="number" pos:line="2270" pos:column="21">20</lit:literal></expr>)</condition><then pos:line="2270" pos:column="24"> <block pos:line="2270" pos:column="25">{
		<expr_stmt><expr><name pos:line="2271" pos:column="17">width</name> <op:operator pos:line="2271" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="2271" pos:column="25">20</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="2273" pos:column="9">if <condition pos:line="2273" pos:column="12">(<expr><op:operator pos:line="2273" pos:column="13">(</op:operator><name><name pos:line="2273" pos:column="14">ll</name><op:operator pos:line="2273" pos:column="16">-&gt;</op:operator><name pos:line="2273" pos:column="18">validity</name></name> <op:operator pos:line="2273" pos:column="27">==</op:operator> <name><name pos:line="2273" pos:column="30">LineLayout</name><op:operator pos:line="2273" pos:column="40">::</op:operator><name pos:line="2273" pos:column="42">llPositions</name></name><op:operator pos:line="2273" pos:column="53">)</op:operator> <op:operator pos:line="2273" pos:column="55">||</op:operator> <op:operator pos:line="2273" pos:column="58">(</op:operator><name><name pos:line="2273" pos:column="59">ll</name><op:operator pos:line="2273" pos:column="61">-&gt;</op:operator><name pos:line="2273" pos:column="63">widthLine</name></name> <op:operator pos:line="2273" pos:column="73">!=</op:operator> <name pos:line="2273" pos:column="76">width</name><op:operator pos:line="2273" pos:column="81">)</op:operator></expr>)</condition><then pos:line="2273" pos:column="83"> <block pos:line="2273" pos:column="84">{
		<expr_stmt><expr><name><name pos:line="2274" pos:column="17">ll</name><op:operator pos:line="2274" pos:column="19">-&gt;</op:operator><name pos:line="2274" pos:column="21">widthLine</name></name> <op:operator pos:line="2274" pos:column="31">=</op:operator> <name pos:line="2274" pos:column="33">width</name></expr>;</expr_stmt>
		<if pos:line="2275" pos:column="17">if <condition pos:line="2275" pos:column="20">(<expr><name pos:line="2275" pos:column="21">width</name> <op:operator pos:line="2275" pos:column="27">==</op:operator> <name><name pos:line="2275" pos:column="30">LineLayout</name><op:operator pos:line="2275" pos:column="40">::</op:operator><name pos:line="2275" pos:column="42">wrapWidthInfinite</name></name></expr>)</condition><then pos:line="2275" pos:column="60"> <block pos:line="2275" pos:column="61">{
			<expr_stmt><expr><name><name pos:line="2276" pos:column="25">ll</name><op:operator pos:line="2276" pos:column="27">-&gt;</op:operator><name pos:line="2276" pos:column="29">lines</name></name> <op:operator pos:line="2276" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="2276" pos:column="37">1</lit:literal></expr>;</expr_stmt>
		}</block></then> <else pos:line="2277" pos:column="19">else <if pos:line="2277" pos:column="24">if <condition pos:line="2277" pos:column="27">(<expr><name pos:line="2277" pos:column="28">width</name> <op:operator pos:line="2277" pos:column="34">&gt;</op:operator> <name><name pos:line="2277" pos:column="36">ll</name><op:operator pos:line="2277" pos:column="38">-&gt;</op:operator><name pos:line="2277" pos:column="40">positions</name><index pos:line="2277" pos:column="49">[<expr><name><name pos:line="2277" pos:column="50">ll</name><op:operator pos:line="2277" pos:column="52">-&gt;</op:operator><name pos:line="2277" pos:column="54">numCharsInLine</name></name></expr>]</index></name></expr>)</condition><then pos:line="2277" pos:column="70"> <block pos:line="2277" pos:column="71">{
			<comment type="line" pos:line="2278" pos:column="25">// Simple common case where line does not need wrapping.</comment>
			<expr_stmt><expr><name><name pos:line="2279" pos:column="25">ll</name><op:operator pos:line="2279" pos:column="27">-&gt;</op:operator><name pos:line="2279" pos:column="29">lines</name></name> <op:operator pos:line="2279" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="2279" pos:column="37">1</lit:literal></expr>;</expr_stmt>
		}</block></then> <else pos:line="2280" pos:column="19">else <block pos:line="2280" pos:column="24">{
			<if pos:line="2281" pos:column="25">if <condition pos:line="2281" pos:column="28">(<expr><name pos:line="2281" pos:column="29">wrapVisualFlags</name> <op:operator pos:line="2281" pos:column="45">&amp;</op:operator> <name pos:line="2281" pos:column="47">SC_WRAPVISUALFLAG_END</name></expr>)</condition><then pos:line="2281" pos:column="69"> <block pos:line="2281" pos:column="70">{
				<expr_stmt><expr><name pos:line="2282" pos:column="33">width</name> <op:operator pos:line="2282" pos:column="39">-=</op:operator> <name><name pos:line="2282" pos:column="42">vstyle</name><op:operator pos:line="2282" pos:column="48">.</op:operator><name pos:line="2282" pos:column="49">aveCharWidth</name></name></expr>;</expr_stmt> <comment type="line" pos:line="2282" pos:column="63">// take into account the space for end wrap mark</comment>
			}</block></then></if>
			<expr_stmt><expr><name><name pos:line="2284" pos:column="25">ll</name><op:operator pos:line="2284" pos:column="27">-&gt;</op:operator><name pos:line="2284" pos:column="29">wrapIndent</name></name> <op:operator pos:line="2284" pos:column="40">=</op:operator> <name pos:line="2284" pos:column="42">wrapAddIndent</name></expr>;</expr_stmt>
			<if pos:line="2285" pos:column="25">if <condition pos:line="2285" pos:column="28">(<expr><name pos:line="2285" pos:column="29">wrapIndentMode</name> <op:operator pos:line="2285" pos:column="44">!=</op:operator> <name pos:line="2285" pos:column="47">SC_WRAPINDENT_FIXED</name></expr>)</condition><then pos:line="2285" pos:column="67">
				<for pos:line="2286" pos:column="33">for (<init><decl><type><name pos:line="2286" pos:column="38">int</name></type> <name pos:line="2286" pos:column="42">i</name> <init pos:line="2286" pos:column="44">= <expr><lit:literal type="number" pos:line="2286" pos:column="46">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2286" pos:column="49">i</name> <op:operator pos:line="2286" pos:column="51">&lt;</op:operator> <name><name pos:line="2286" pos:column="53">ll</name><op:operator pos:line="2286" pos:column="55">-&gt;</op:operator><name pos:line="2286" pos:column="57">numCharsInLine</name></name></expr>;</condition> <incr><expr><name pos:line="2286" pos:column="73">i</name><op:operator pos:line="2286" pos:column="74">++</op:operator></expr></incr>) <block pos:line="2286" pos:column="78">{
					<if pos:line="2287" pos:column="41">if <condition pos:line="2287" pos:column="44">(<expr><op:operator pos:line="2287" pos:column="45">!</op:operator><call><name pos:line="2287" pos:column="46">IsSpaceOrTab</name><argument_list pos:line="2287" pos:column="58">(<argument><expr><name><name pos:line="2287" pos:column="59">ll</name><op:operator pos:line="2287" pos:column="61">-&gt;</op:operator><name pos:line="2287" pos:column="63">chars</name><index pos:line="2287" pos:column="68">[<expr><name pos:line="2287" pos:column="69">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2287" pos:column="73"> <block pos:line="2287" pos:column="74">{
						<expr_stmt><expr><name><name pos:line="2288" pos:column="49">ll</name><op:operator pos:line="2288" pos:column="51">-&gt;</op:operator><name pos:line="2288" pos:column="53">wrapIndent</name></name> <op:operator pos:line="2288" pos:column="64">+=</op:operator> <name><name pos:line="2288" pos:column="67">ll</name><op:operator pos:line="2288" pos:column="69">-&gt;</op:operator><name pos:line="2288" pos:column="71">positions</name><index pos:line="2288" pos:column="80">[<expr><name pos:line="2288" pos:column="81">i</name></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:line="2288" pos:column="85">// Add line indent</comment>
						<break pos:line="2289" pos:column="49">break;</break>
					}</block></then></if>
				}</block></for></then></if>
			<comment type="line" pos:line="2292" pos:column="25">// Check for text width minimum</comment>
			<if pos:line="2293" pos:column="25">if <condition pos:line="2293" pos:column="28">(<expr><name><name pos:line="2293" pos:column="29">ll</name><op:operator pos:line="2293" pos:column="31">-&gt;</op:operator><name pos:line="2293" pos:column="33">wrapIndent</name></name> <op:operator pos:line="2293" pos:column="44">&gt;</op:operator> <name pos:line="2293" pos:column="46">width</name> <op:operator pos:line="2293" pos:column="52">-</op:operator> <call><name><name pos:line="2293" pos:column="54">static_cast</name><argument_list pos:line="2293" pos:column="65">&lt;<argument><expr><name pos:line="2293" pos:column="66">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2293" pos:column="70">(<argument><expr><name><name pos:line="2293" pos:column="71">vstyle</name><op:operator pos:line="2293" pos:column="77">.</op:operator><name pos:line="2293" pos:column="78">aveCharWidth</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="2293" pos:column="92">*</op:operator> <lit:literal type="number" pos:line="2293" pos:column="94">15</lit:literal></expr>)</condition><then pos:line="2293" pos:column="97">
				<expr_stmt><expr><name><name pos:line="2294" pos:column="33">ll</name><op:operator pos:line="2294" pos:column="35">-&gt;</op:operator><name pos:line="2294" pos:column="37">wrapIndent</name></name> <op:operator pos:line="2294" pos:column="48">=</op:operator> <name pos:line="2294" pos:column="50">wrapAddIndent</name></expr>;</expr_stmt></then></if>
			<comment type="line" pos:line="2295" pos:column="25">// Check for wrapIndent minimum</comment>
			<if pos:line="2296" pos:column="25">if <condition pos:line="2296" pos:column="28">(<expr><op:operator pos:line="2296" pos:column="29">(</op:operator><name pos:line="2296" pos:column="30">wrapVisualFlags</name> <op:operator pos:line="2296" pos:column="46">&amp;</op:operator> <name pos:line="2296" pos:column="48">SC_WRAPVISUALFLAG_START</name><op:operator pos:line="2296" pos:column="71">)</op:operator> <op:operator pos:line="2296" pos:column="73">&amp;&amp;</op:operator> <op:operator pos:line="2296" pos:column="76">(</op:operator><name><name pos:line="2296" pos:column="77">ll</name><op:operator pos:line="2296" pos:column="79">-&gt;</op:operator><name pos:line="2296" pos:column="81">wrapIndent</name></name> <op:operator pos:line="2296" pos:column="92">&lt;</op:operator> <call><name><name pos:line="2296" pos:column="94">static_cast</name><argument_list pos:line="2296" pos:column="105">&lt;<argument><expr><name pos:line="2296" pos:column="106">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2296" pos:column="110">(<argument><expr><name><name pos:line="2296" pos:column="111">vstyle</name><op:operator pos:line="2296" pos:column="117">.</op:operator><name pos:line="2296" pos:column="118">aveCharWidth</name></name></expr></argument>)</argument_list></call><op:operator pos:line="2296" pos:column="131">)</op:operator></expr>)</condition><then pos:line="2296" pos:column="133">
				<expr_stmt><expr><name><name pos:line="2297" pos:column="33">ll</name><op:operator pos:line="2297" pos:column="35">-&gt;</op:operator><name pos:line="2297" pos:column="37">wrapIndent</name></name> <op:operator pos:line="2297" pos:column="48">=</op:operator> <name><name pos:line="2297" pos:column="50">vstyle</name><op:operator pos:line="2297" pos:column="56">.</op:operator><name pos:line="2297" pos:column="57">aveCharWidth</name></name></expr>;</expr_stmt></then></if> <comment type="line" pos:line="2297" pos:column="71">// Indent to show start visual</comment>
			<expr_stmt><expr><name><name pos:line="2298" pos:column="25">ll</name><op:operator pos:line="2298" pos:column="27">-&gt;</op:operator><name pos:line="2298" pos:column="29">lines</name></name> <op:operator pos:line="2298" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="2298" pos:column="37">0</lit:literal></expr>;</expr_stmt>
			<comment type="line" pos:line="2299" pos:column="25">// Calculate line start positions based upon width.</comment>
			<decl_stmt><decl><type><name pos:line="2300" pos:column="25">int</name></type> <name pos:line="2300" pos:column="29">lastGoodBreak</name> <init pos:line="2300" pos:column="43">= <expr><lit:literal type="number" pos:line="2300" pos:column="45">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2301" pos:column="25">int</name></type> <name pos:line="2301" pos:column="29">lastLineStart</name> <init pos:line="2301" pos:column="43">= <expr><lit:literal type="number" pos:line="2301" pos:column="45">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2302" pos:column="25">int</name></type> <name pos:line="2302" pos:column="29">startOffset</name> <init pos:line="2302" pos:column="41">= <expr><lit:literal type="number" pos:line="2302" pos:column="43">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2303" pos:column="25">int</name></type> <name pos:line="2303" pos:column="29">p</name> <init pos:line="2303" pos:column="31">= <expr><lit:literal type="number" pos:line="2303" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
			<while pos:line="2304" pos:column="25">while <condition pos:line="2304" pos:column="31">(<expr><name pos:line="2304" pos:column="32">p</name> <op:operator pos:line="2304" pos:column="34">&lt;</op:operator> <name><name pos:line="2304" pos:column="36">ll</name><op:operator pos:line="2304" pos:column="38">-&gt;</op:operator><name pos:line="2304" pos:column="40">numCharsInLine</name></name></expr>)</condition> <block pos:line="2304" pos:column="56">{
				<if pos:line="2305" pos:column="33">if <condition pos:line="2305" pos:column="36">(<expr><op:operator pos:line="2305" pos:column="37">(</op:operator><name><name pos:line="2305" pos:column="38">ll</name><op:operator pos:line="2305" pos:column="40">-&gt;</op:operator><name pos:line="2305" pos:column="42">positions</name><index pos:line="2305" pos:column="51">[<expr><name pos:line="2305" pos:column="52">p</name> <op:operator pos:line="2305" pos:column="54">+</op:operator> <lit:literal type="number" pos:line="2305" pos:column="56">1</lit:literal></expr>]</index></name> <op:operator pos:line="2305" pos:column="59">-</op:operator> <name pos:line="2305" pos:column="61">startOffset</name><op:operator pos:line="2305" pos:column="72">)</op:operator> <op:operator pos:line="2305" pos:column="74">&gt;=</op:operator> <name pos:line="2305" pos:column="77">width</name></expr>)</condition><then pos:line="2305" pos:column="83"> <block pos:line="2305" pos:column="84">{
					<if pos:line="2306" pos:column="41">if <condition pos:line="2306" pos:column="44">(<expr><name pos:line="2306" pos:column="45">lastGoodBreak</name> <op:operator pos:line="2306" pos:column="59">==</op:operator> <name pos:line="2306" pos:column="62">lastLineStart</name></expr>)</condition><then pos:line="2306" pos:column="76"> <block pos:line="2306" pos:column="77">{
						<comment type="line" pos:line="2307" pos:column="49">// Try moving to start of last character</comment>
						<if pos:line="2308" pos:column="49">if <condition pos:line="2308" pos:column="52">(<expr><name pos:line="2308" pos:column="53">p</name> <op:operator pos:line="2308" pos:column="55">&gt;</op:operator> <lit:literal type="number" pos:line="2308" pos:column="57">0</lit:literal></expr>)</condition><then pos:line="2308" pos:column="59"> <block pos:line="2308" pos:column="60">{
							<expr_stmt><expr><name pos:line="2309" pos:column="57">lastGoodBreak</name> <op:operator pos:line="2309" pos:column="71">=</op:operator> <call><name><name pos:line="2309" pos:column="73">pdoc</name><op:operator pos:line="2309" pos:column="77">-&gt;</op:operator><name pos:line="2309" pos:column="79">MovePositionOutsideChar</name></name><argument_list pos:line="2309" pos:column="102">(<argument><expr><name pos:line="2309" pos:column="103">p</name> <op:operator pos:line="2309" pos:column="105">+</op:operator> <name pos:line="2309" pos:column="107">posLineStart</name></expr></argument>, <argument><expr><op:operator pos:line="2309" pos:column="121">-</op:operator><lit:literal type="number" pos:line="2309" pos:column="122">1</lit:literal></expr></argument>)</argument_list></call>
							        <op:operator pos:line="2310" pos:column="65">-</op:operator> <name pos:line="2310" pos:column="67">posLineStart</name></expr>;</expr_stmt>
						}</block></then></if>
						<if pos:line="2312" pos:column="49">if <condition pos:line="2312" pos:column="52">(<expr><name pos:line="2312" pos:column="53">lastGoodBreak</name> <op:operator pos:line="2312" pos:column="67">==</op:operator> <name pos:line="2312" pos:column="70">lastLineStart</name></expr>)</condition><then pos:line="2312" pos:column="84"> <block pos:line="2312" pos:column="85">{
							<comment type="line" pos:line="2313" pos:column="57">// Ensure at least one character on line.</comment>
							<expr_stmt><expr><name pos:line="2314" pos:column="57">lastGoodBreak</name> <op:operator pos:line="2314" pos:column="71">=</op:operator> <call><name><name pos:line="2314" pos:column="73">pdoc</name><op:operator pos:line="2314" pos:column="77">-&gt;</op:operator><name pos:line="2314" pos:column="79">MovePositionOutsideChar</name></name><argument_list pos:line="2314" pos:column="102">(<argument><expr><name pos:line="2314" pos:column="103">lastGoodBreak</name> <op:operator pos:line="2314" pos:column="117">+</op:operator> <name pos:line="2314" pos:column="119">posLineStart</name> <op:operator pos:line="2314" pos:column="132">+</op:operator> <lit:literal type="number" pos:line="2314" pos:column="134">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2314" pos:column="137">1</lit:literal></expr></argument>)</argument_list></call>
							        <op:operator pos:line="2315" pos:column="65">-</op:operator> <name pos:line="2315" pos:column="67">posLineStart</name></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then></if>
					<expr_stmt><expr><name pos:line="2318" pos:column="41">lastLineStart</name> <op:operator pos:line="2318" pos:column="55">=</op:operator> <name pos:line="2318" pos:column="57">lastGoodBreak</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="2319" pos:column="41">ll</name><op:operator pos:line="2319" pos:column="43">-&gt;</op:operator><name pos:line="2319" pos:column="45">lines</name></name><op:operator pos:line="2319" pos:column="50">++</op:operator></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="2320" pos:column="41">ll</name><op:operator pos:line="2320" pos:column="43">-&gt;</op:operator><name pos:line="2320" pos:column="45">SetLineStart</name></name><argument_list pos:line="2320" pos:column="57">(<argument><expr><name><name pos:line="2320" pos:column="58">ll</name><op:operator pos:line="2320" pos:column="60">-&gt;</op:operator><name pos:line="2320" pos:column="62">lines</name></name></expr></argument>, <argument><expr><name pos:line="2320" pos:column="69">lastGoodBreak</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="2321" pos:column="41">startOffset</name> <op:operator pos:line="2321" pos:column="53">=</op:operator> <name><name pos:line="2321" pos:column="55">ll</name><op:operator pos:line="2321" pos:column="57">-&gt;</op:operator><name pos:line="2321" pos:column="59">positions</name><index pos:line="2321" pos:column="68">[<expr><name pos:line="2321" pos:column="69">lastGoodBreak</name></expr>]</index></name></expr>;</expr_stmt>
					<comment type="line" pos:line="2322" pos:column="41">// take into account the space for start wrap mark and indent</comment>
					<expr_stmt><expr><name pos:line="2323" pos:column="41">startOffset</name> <op:operator pos:line="2323" pos:column="53">-=</op:operator> <name><name pos:line="2323" pos:column="56">ll</name><op:operator pos:line="2323" pos:column="58">-&gt;</op:operator><name pos:line="2323" pos:column="60">wrapIndent</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="2324" pos:column="41">p</name> <op:operator pos:line="2324" pos:column="43">=</op:operator> <name pos:line="2324" pos:column="45">lastGoodBreak</name> <op:operator pos:line="2324" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="2324" pos:column="61">1</lit:literal></expr>;</expr_stmt>
					<continue pos:line="2325" pos:column="41">continue;</continue>
				}</block></then></if>
				<if pos:line="2327" pos:column="33">if <condition pos:line="2327" pos:column="36">(<expr><name pos:line="2327" pos:column="37">p</name> <op:operator pos:line="2327" pos:column="39">&gt;</op:operator> <lit:literal type="number" pos:line="2327" pos:column="41">0</lit:literal></expr>)</condition><then pos:line="2327" pos:column="43"> <block pos:line="2327" pos:column="44">{
					<if pos:line="2328" pos:column="41">if <condition pos:line="2328" pos:column="44">(<expr><name pos:line="2328" pos:column="45">wrapState</name> <op:operator pos:line="2328" pos:column="55">==</op:operator> <name pos:line="2328" pos:column="58">eWrapChar</name></expr>)</condition><then pos:line="2328" pos:column="68"> <block pos:line="2328" pos:column="69">{
						<expr_stmt><expr><name pos:line="2329" pos:column="49">lastGoodBreak</name> <op:operator pos:line="2329" pos:column="63">=</op:operator> <call><name><name pos:line="2329" pos:column="65">pdoc</name><op:operator pos:line="2329" pos:column="69">-&gt;</op:operator><name pos:line="2329" pos:column="71">MovePositionOutsideChar</name></name><argument_list pos:line="2329" pos:column="94">(<argument><expr><name pos:line="2329" pos:column="95">p</name> <op:operator pos:line="2329" pos:column="97">+</op:operator> <name pos:line="2329" pos:column="99">posLineStart</name></expr></argument>, <argument><expr><op:operator pos:line="2329" pos:column="113">-</op:operator><lit:literal type="number" pos:line="2329" pos:column="114">1</lit:literal></expr></argument>)</argument_list></call>
						        <op:operator pos:line="2330" pos:column="57">-</op:operator> <name pos:line="2330" pos:column="59">posLineStart</name></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="2331" pos:column="49">p</name> <op:operator pos:line="2331" pos:column="51">=</op:operator> <call><name><name pos:line="2331" pos:column="53">pdoc</name><op:operator pos:line="2331" pos:column="57">-&gt;</op:operator><name pos:line="2331" pos:column="59">MovePositionOutsideChar</name></name><argument_list pos:line="2331" pos:column="82">(<argument><expr><name pos:line="2331" pos:column="83">p</name> <op:operator pos:line="2331" pos:column="85">+</op:operator> <lit:literal type="number" pos:line="2331" pos:column="87">1</lit:literal> <op:operator pos:line="2331" pos:column="89">+</op:operator> <name pos:line="2331" pos:column="91">posLineStart</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2331" pos:column="105">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="2331" pos:column="108">-</op:operator> <name pos:line="2331" pos:column="110">posLineStart</name></expr>;</expr_stmt>
						<continue pos:line="2332" pos:column="49">continue;</continue>
					}</block></then> <else pos:line="2333" pos:column="43">else <if pos:line="2333" pos:column="48">if <condition pos:line="2333" pos:column="51">(<expr><name><name pos:line="2333" pos:column="52">ll</name><op:operator pos:line="2333" pos:column="54">-&gt;</op:operator><name pos:line="2333" pos:column="56">styles</name><index pos:line="2333" pos:column="62">[<expr><name pos:line="2333" pos:column="63">p</name></expr>]</index></name> <op:operator pos:line="2333" pos:column="66">!=</op:operator> <name><name pos:line="2333" pos:column="69">ll</name><op:operator pos:line="2333" pos:column="71">-&gt;</op:operator><name pos:line="2333" pos:column="73">styles</name><index pos:line="2333" pos:column="79">[<expr><name pos:line="2333" pos:column="80">p</name> <op:operator pos:line="2333" pos:column="82">-</op:operator> <lit:literal type="number" pos:line="2333" pos:column="84">1</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="2333" pos:column="87"> <block pos:line="2333" pos:column="88">{
						<expr_stmt><expr><name pos:line="2334" pos:column="49">lastGoodBreak</name> <op:operator pos:line="2334" pos:column="63">=</op:operator> <name pos:line="2334" pos:column="65">p</name></expr>;</expr_stmt>
					}</block></then> <else pos:line="2335" pos:column="43">else <if pos:line="2335" pos:column="48">if <condition pos:line="2335" pos:column="51">(<expr><call><name pos:line="2335" pos:column="52">IsSpaceOrTab</name><argument_list pos:line="2335" pos:column="64">(<argument><expr><name><name pos:line="2335" pos:column="65">ll</name><op:operator pos:line="2335" pos:column="67">-&gt;</op:operator><name pos:line="2335" pos:column="69">chars</name><index pos:line="2335" pos:column="74">[<expr><name pos:line="2335" pos:column="75">p</name> <op:operator pos:line="2335" pos:column="77">-</op:operator> <lit:literal type="number" pos:line="2335" pos:column="79">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call> <op:operator pos:line="2335" pos:column="83">&amp;&amp;</op:operator> <op:operator pos:line="2335" pos:column="86">!</op:operator><call><name pos:line="2335" pos:column="87">IsSpaceOrTab</name><argument_list pos:line="2335" pos:column="99">(<argument><expr><name><name pos:line="2335" pos:column="100">ll</name><op:operator pos:line="2335" pos:column="102">-&gt;</op:operator><name pos:line="2335" pos:column="104">chars</name><index pos:line="2335" pos:column="109">[<expr><name pos:line="2335" pos:column="110">p</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2335" pos:column="114"> <block pos:line="2335" pos:column="115">{
						<expr_stmt><expr><name pos:line="2336" pos:column="49">lastGoodBreak</name> <op:operator pos:line="2336" pos:column="63">=</op:operator> <name pos:line="2336" pos:column="65">p</name></expr>;</expr_stmt>
					}</block></then></if></else></if></else></if>
				}</block></then></if>
				<expr_stmt><expr><name pos:line="2339" pos:column="33">p</name><op:operator pos:line="2339" pos:column="34">++</op:operator></expr>;</expr_stmt>
			}</block></while>
			<expr_stmt><expr><name><name pos:line="2341" pos:column="25">ll</name><op:operator pos:line="2341" pos:column="27">-&gt;</op:operator><name pos:line="2341" pos:column="29">lines</name></name><op:operator pos:line="2341" pos:column="34">++</op:operator></expr>;</expr_stmt>
		}</block></else></if></else></if>
		<expr_stmt><expr><name><name pos:line="2343" pos:column="17">ll</name><op:operator pos:line="2343" pos:column="19">-&gt;</op:operator><name pos:line="2343" pos:column="21">validity</name></name> <op:operator pos:line="2343" pos:column="30">=</op:operator> <name><name pos:line="2343" pos:column="32">LineLayout</name><op:operator pos:line="2343" pos:column="42">::</op:operator><name pos:line="2343" pos:column="44">llLines</name></name></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<decl_stmt><decl><type><name pos:line="2347" pos:column="1">ColourAllocated</name></type> <name><name pos:line="2347" pos:column="17">Editor</name><op:operator pos:line="2347" pos:column="23">::</op:operator><name pos:line="2347" pos:column="25">SelectionBackground</name></name><argument_list pos:line="2347" pos:column="44">(<argument><expr><name pos:line="2347" pos:column="45">ViewStyle</name> <op:operator pos:line="2347" pos:column="55">&amp;</op:operator><name pos:line="2347" pos:column="56">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2347" pos:column="64">bool</name> main</expr></argument>)</argument_list> <argument_list pos:line="2347" pos:column="75">{
	return <argument><expr pos:line="2348" pos:column="16">main <op:operator pos:line="2348" pos:column="21">?</op:operator>
		<op:operator pos:line="2349" pos:column="17">(</op:operator><name pos:line="2349" pos:column="18">primarySelection</name> <op:operator pos:line="2349" pos:column="35">?</op:operator> <name><name pos:line="2349" pos:column="37">vsDraw</name><op:operator pos:line="2349" pos:column="43">.</op:operator><name pos:line="2349" pos:column="44">selbackground</name><op:operator pos:line="2349" pos:column="57">.</op:operator><name pos:line="2349" pos:column="58">allocated</name></name> <op:operator pos:line="2349" pos:column="68">:</op:operator> <name><name pos:line="2349" pos:column="70">vsDraw</name><op:operator pos:line="2349" pos:column="76">.</op:operator><name pos:line="2349" pos:column="77">selbackground2</name><op:operator pos:line="2349" pos:column="91">.</op:operator><name pos:line="2349" pos:column="92">allocated</name></name><op:operator pos:line="2349" pos:column="101">)</op:operator> <op:operator pos:line="2349" pos:column="103">:</op:operator>
		<name><name pos:line="2350" pos:column="17">vsDraw</name><op:operator pos:line="2350" pos:column="23">.</op:operator><name pos:line="2350" pos:column="24">selAdditionalBackground</name><op:operator pos:line="2350" pos:column="47">.</op:operator><name pos:line="2350" pos:column="48">allocated</name></name></expr></argument>;
}</argument_list>

<name pos:line="2353" pos:column="1">ColourAllocated</name> <name><name pos:line="2353" pos:column="17">Editor</name><op:operator pos:line="2353" pos:column="23">::</op:operator><name pos:line="2353" pos:column="25">TextBackground</name></name><argument_list pos:line="2353" pos:column="39">(<argument><expr><name pos:line="2353" pos:column="40">ViewStyle</name> <op:operator pos:line="2353" pos:column="50">&amp;</op:operator><name pos:line="2353" pos:column="51">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2353" pos:column="59">bool</name> <name pos:line="2353" pos:column="64">overrideBackground</name></expr></argument>,
        <argument><expr><name pos:line="2354" pos:column="9">ColourAllocated</name> <name pos:line="2354" pos:column="25">background</name></expr></argument>, <argument><expr><name pos:line="2354" pos:column="37">int</name> <name pos:line="2354" pos:column="41">inSelection</name></expr></argument>, <argument><expr><name pos:line="2354" pos:column="54">bool</name> <name pos:line="2354" pos:column="59">inHotspot</name></expr></argument>, <argument><expr><name pos:line="2354" pos:column="70">int</name> <name pos:line="2354" pos:column="74">styleMain</name></expr></argument>, <argument><expr><name pos:line="2354" pos:column="85">int</name> <name pos:line="2354" pos:column="89">i</name></expr></argument>, <argument><expr><name pos:line="2354" pos:column="92">LineLayout</name> <op:operator pos:line="2354" pos:column="103">*</op:operator><name pos:line="2354" pos:column="104">ll</name></expr></argument>)</argument_list> <argument_list pos:line="2354" pos:column="108">{
	if <argument><expr><op:operator pos:line="2355" pos:column="12">(</op:operator><name pos:line="2355" pos:column="13">inSelection</name> <op:operator pos:line="2355" pos:column="25">==</op:operator> <lit:literal type="number" pos:line="2355" pos:column="28">1</lit:literal><op:operator pos:line="2355" pos:column="29">)</op:operator> <block pos:line="2355" pos:column="31">{
		<if pos:line="2356" pos:column="17">if <condition pos:line="2356" pos:column="20">(<expr><name><name pos:line="2356" pos:column="21">vsDraw</name><op:operator pos:line="2356" pos:column="27">.</op:operator><name pos:line="2356" pos:column="28">selbackset</name></name> <op:operator pos:line="2356" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="2356" pos:column="42">(</op:operator><name><name pos:line="2356" pos:column="43">vsDraw</name><op:operator pos:line="2356" pos:column="49">.</op:operator><name pos:line="2356" pos:column="50">selAlpha</name></name> <op:operator pos:line="2356" pos:column="59">==</op:operator> <name pos:line="2356" pos:column="62">SC_ALPHA_NOALPHA</name><op:operator pos:line="2356" pos:column="78">)</op:operator></expr>)</condition><then pos:line="2356" pos:column="80"> <expr_stmt><expr><block pos:line="2356" pos:column="81">{
			<return pos:line="2357" pos:column="25">return <expr><call><name pos:line="2357" pos:column="32">SelectionBackground</name><argument_list pos:line="2357" pos:column="51">(<argument><expr><name pos:line="2357" pos:column="52">vsDraw</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2357" pos:column="60">true</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
	}</expr></expr_stmt></then> <else pos:line="2359" pos:column="11">else <if pos:line="2359" pos:column="16">if <condition pos:line="2359" pos:column="19">(<expr><name pos:line="2359" pos:column="20">inSelection</name> <op:operator pos:line="2359" pos:column="32">==</op:operator> <lit:literal type="number" pos:line="2359" pos:column="35">2</lit:literal></expr>)</condition><then pos:line="2359" pos:column="37"> <expr_stmt><expr><block pos:line="2359" pos:column="38">{
		<if pos:line="2360" pos:column="17">if <condition pos:line="2360" pos:column="20">(<expr><name><name pos:line="2360" pos:column="21">vsDraw</name><op:operator pos:line="2360" pos:column="27">.</op:operator><name pos:line="2360" pos:column="28">selbackset</name></name> <op:operator pos:line="2360" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="2360" pos:column="42">(</op:operator><name><name pos:line="2360" pos:column="43">vsDraw</name><op:operator pos:line="2360" pos:column="49">.</op:operator><name pos:line="2360" pos:column="50">selAdditionalAlpha</name></name> <op:operator pos:line="2360" pos:column="69">==</op:operator> <name pos:line="2360" pos:column="72">SC_ALPHA_NOALPHA</name><op:operator pos:line="2360" pos:column="88">)</op:operator></expr>)</condition><then pos:line="2360" pos:column="90"> <expr_stmt><expr><block pos:line="2360" pos:column="91">{
			<return pos:line="2361" pos:column="25">return <expr><call><name pos:line="2361" pos:column="32">SelectionBackground</name><argument_list pos:line="2361" pos:column="51">(<argument><expr><name pos:line="2361" pos:column="52">vsDraw</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2361" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
		}</block>
	}</expr></expr_stmt></then> <else pos:line="2363" pos:column="11">else <expr_stmt><expr><block pos:line="2363" pos:column="16">{
		<if pos:line="2364" pos:column="17">if <condition pos:line="2364" pos:column="20">(<expr><op:operator pos:line="2364" pos:column="21">(</op:operator><name><name pos:line="2364" pos:column="22">vsDraw</name><op:operator pos:line="2364" pos:column="28">.</op:operator><name pos:line="2364" pos:column="29">edgeState</name></name> <op:operator pos:line="2364" pos:column="39">==</op:operator> <name pos:line="2364" pos:column="42">EDGE_BACKGROUND</name><op:operator pos:line="2364" pos:column="57">)</op:operator> <op:operator pos:line="2364" pos:column="59">&amp;&amp;</op:operator>
		        <op:operator pos:line="2365" pos:column="25">(</op:operator><name pos:line="2365" pos:column="26">i</name> <op:operator pos:line="2365" pos:column="28">&gt;=</op:operator> <name><name pos:line="2365" pos:column="31">ll</name><op:operator pos:line="2365" pos:column="33">-&gt;</op:operator><name pos:line="2365" pos:column="35">edgeColumn</name></name><op:operator pos:line="2365" pos:column="45">)</op:operator> <op:operator pos:line="2365" pos:column="47">&amp;&amp;</op:operator>
		        <op:operator pos:line="2366" pos:column="25">!</op:operator><call><name pos:line="2366" pos:column="26">IsEOLChar</name><argument_list pos:line="2366" pos:column="35">(<argument><expr><name><name pos:line="2366" pos:column="36">ll</name><op:operator pos:line="2366" pos:column="38">-&gt;</op:operator><name pos:line="2366" pos:column="40">chars</name><index pos:line="2366" pos:column="45">[<expr><name pos:line="2366" pos:column="46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2366" pos:column="50">
			<return pos:line="2367" pos:column="25">return <expr><name><name pos:line="2367" pos:column="32">vsDraw</name><op:operator pos:line="2367" pos:column="38">.</op:operator><name pos:line="2367" pos:column="39">edgecolour</name><op:operator pos:line="2367" pos:column="49">.</op:operator><name pos:line="2367" pos:column="50">allocated</name></name></expr>;</return></then></if></block></expr></expr_stmt></else></if>
		<if pos:line="2368" pos:column="17">if <condition pos:line="2368" pos:column="20">(<expr><name pos:line="2368" pos:column="21">inHotspot</name> <op:operator pos:line="2368" pos:column="31">&amp;&amp;</op:operator> <name><name pos:line="2368" pos:column="34">vsDraw</name><op:operator pos:line="2368" pos:column="40">.</op:operator><name pos:line="2368" pos:column="41">hotspotBackgroundSet</name></name></expr>)</condition><then pos:line="2368" pos:column="62">
			<return pos:line="2369" pos:column="25">return <expr><name><name pos:line="2369" pos:column="32">vsDraw</name><op:operator pos:line="2369" pos:column="38">.</op:operator><name pos:line="2369" pos:column="39">hotspotBackground</name><op:operator pos:line="2369" pos:column="56">.</op:operator><name pos:line="2369" pos:column="57">allocated</name></name></expr>;</return></then></if></block></expr></expr_stmt></then></if></else></if>
		<if pos:line="2370" pos:column="17">if <condition pos:line="2370" pos:column="20">(<expr><name pos:line="2370" pos:column="21">overrideBackground</name> <op:operator pos:line="2370" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="2370" pos:column="43">(</op:operator><op:operator pos:line="2370" pos:column="44">(</op:operator><op:operator pos:line="2370" pos:column="45">(</op:operator><name pos:line="2370" pos:column="46">styleMain</name> <op:operator pos:line="2370" pos:column="56">!=</op:operator> <name pos:line="2370" pos:column="59">STYLE_BRACELIGHT</name><op:operator pos:line="2370" pos:column="75">)</op:operator> <op:operator pos:line="2370" pos:column="77">&amp;&amp;</op:operator> <op:operator pos:line="2370" pos:column="80">(</op:operator><name pos:line="2370" pos:column="81">styleMain</name> <op:operator pos:line="2370" pos:column="91">!=</op:operator> <name pos:line="2370" pos:column="94">STYLE_BRACEBAD</name><op:operator pos:line="2370" pos:column="108">)</op:operator><op:operator pos:line="2370" pos:column="109">)</op:operator> <op:operator pos:line="2370" pos:column="111">||</op:operator>
			<op:operator pos:line="2371" pos:column="25">(</op:operator><name><name pos:line="2371" pos:column="26">vsDraw</name><op:operator pos:line="2371" pos:column="32">.</op:operator><name pos:line="2371" pos:column="33">styles</name><index pos:line="2371" pos:column="39">[<expr><name pos:line="2371" pos:column="40">styleMain</name></expr>]</index></name><op:operator pos:line="2371" pos:column="50">.</op:operator><call><name><name pos:line="2371" pos:column="51">back</name><op:operator pos:line="2371" pos:column="55">.</op:operator><name pos:line="2371" pos:column="56">allocated</name><op:operator pos:line="2371" pos:column="65">.</op:operator><name pos:line="2371" pos:column="66">AsLong</name></name><argument_list pos:line="2371" pos:column="72">()</argument_list></call> <op:operator pos:line="2371" pos:column="75">==</op:operator> <name><name pos:line="2371" pos:column="78">vsDraw</name><op:operator pos:line="2371" pos:column="84">.</op:operator><name pos:line="2371" pos:column="85">styles</name><index pos:line="2371" pos:column="91">[<expr><name><name pos:line="2371" pos:column="92">ll</name><op:operator pos:line="2371" pos:column="94">-&gt;</op:operator><name pos:line="2371" pos:column="96">bracePreviousStyles</name><index pos:line="2371" pos:column="115">[<expr><lit:literal type="number" pos:line="2371" pos:column="116">0</lit:literal></expr>]</index></name></expr>]</index></name><op:operator pos:line="2371" pos:column="119">.</op:operator><call><name><name pos:line="2371" pos:column="120">back</name><op:operator pos:line="2371" pos:column="124">.</op:operator><name pos:line="2371" pos:column="125">allocated</name><op:operator pos:line="2371" pos:column="134">.</op:operator><name pos:line="2371" pos:column="135">AsLong</name></name><argument_list pos:line="2371" pos:column="141">()</argument_list></call><op:operator pos:line="2371" pos:column="143">)</op:operator><op:operator pos:line="2371" pos:column="144">)</op:operator></expr>)</condition><then pos:line="2371" pos:column="146">
			<return pos:line="2372" pos:column="25">return <expr><name pos:line="2372" pos:column="32">background</name></expr>;</return></then></if>
	}</block></expr></argument>
	<return pos:line="2374" pos:column="9">return <expr><name><name pos:line="2374" pos:column="16">vsDraw</name><op:operator pos:line="2374" pos:column="22">.</op:operator><name pos:line="2374" pos:column="23">styles</name><index pos:line="2374" pos:column="29">[<expr><name pos:line="2374" pos:column="30">styleMain</name></expr>]</index></name><op:operator pos:line="2374" pos:column="40">.</op:operator><name><name pos:line="2374" pos:column="41">back</name><op:operator pos:line="2374" pos:column="45">.</op:operator><name pos:line="2374" pos:column="46">allocated</name></name></expr>;</return></argument_list></decl></decl_stmt>
}

void <macro><name pos:line="2377" pos:column="6">Editor</name></macro><expr_stmt><expr><name><op:operator pos:line="2377" pos:column="12">::</op:operator><name pos:line="2377" pos:column="14">DrawIndentGuide</name></name><op:operator pos:line="2377" pos:column="29">(</op:operator><name pos:line="2377" pos:column="30">Surface</name> <op:operator pos:line="2377" pos:column="38">*</op:operator><name pos:line="2377" pos:column="39">surface</name><op:operator pos:line="2377" pos:column="46">,</op:operator> <name pos:line="2377" pos:column="48">int</name> <name pos:line="2377" pos:column="52">lineVisible</name><op:operator pos:line="2377" pos:column="63">,</op:operator> <name pos:line="2377" pos:column="65">int</name> <name pos:line="2377" pos:column="69">lineHeight</name><op:operator pos:line="2377" pos:column="79">,</op:operator> <name pos:line="2377" pos:column="81">int</name> <name pos:line="2377" pos:column="85">start</name><op:operator pos:line="2377" pos:column="90">,</op:operator> <name pos:line="2377" pos:column="92">PRectangle</name> <name pos:line="2377" pos:column="103">rcSegment</name><op:operator pos:line="2377" pos:column="112">,</op:operator> <name pos:line="2377" pos:column="114">bool</name> <name pos:line="2377" pos:column="119">highlight</name><op:operator pos:line="2377" pos:column="128">)</op:operator> <block pos:line="2377" pos:column="130">{
	<expr><name pos:line="2378" pos:column="9">Point</name> <call><name pos:line="2378" pos:column="15">from</name><argument_list pos:line="2378" pos:column="19">(<argument><expr><lit:literal type="number" pos:line="2378" pos:column="20">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2378" pos:column="23">(</op:operator><op:operator pos:line="2378" pos:column="24">(</op:operator><name pos:line="2378" pos:column="25">lineVisible</name> <op:operator pos:line="2378" pos:column="37">&amp;</op:operator> <lit:literal type="number" pos:line="2378" pos:column="39">1</lit:literal><op:operator pos:line="2378" pos:column="40">)</op:operator> <op:operator pos:line="2378" pos:column="42">&amp;&amp;</op:operator> <op:operator pos:line="2378" pos:column="45">(</op:operator><name pos:line="2378" pos:column="46">lineHeight</name> <op:operator pos:line="2378" pos:column="57">&amp;</op:operator> <lit:literal type="number" pos:line="2378" pos:column="59">1</lit:literal><op:operator pos:line="2378" pos:column="60">)</op:operator><op:operator pos:line="2378" pos:column="61">)</op:operator> <op:operator pos:line="2378" pos:column="63">?</op:operator> <lit:literal type="number" pos:line="2378" pos:column="65">1</lit:literal> <op:operator pos:line="2378" pos:column="67">:</op:operator> <lit:literal type="number" pos:line="2378" pos:column="69">0</lit:literal></expr></argument>)</argument_list></call></expr>;
	<expr><name pos:line="2379" pos:column="9">PRectangle</name> <call><name pos:line="2379" pos:column="20">rcCopyArea</name><argument_list pos:line="2379" pos:column="30">(<argument><expr><name pos:line="2379" pos:column="31">start</name> <op:operator pos:line="2379" pos:column="37">+</op:operator> <lit:literal type="number" pos:line="2379" pos:column="39">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="2379" pos:column="42">rcSegment</name><op:operator pos:line="2379" pos:column="51">.</op:operator><name pos:line="2379" pos:column="52">top</name></name></expr></argument>, <argument><expr><name pos:line="2379" pos:column="57">start</name> <op:operator pos:line="2379" pos:column="63">+</op:operator> <lit:literal type="number" pos:line="2379" pos:column="65">2</lit:literal></expr></argument>, <argument><expr><name><name pos:line="2379" pos:column="68">rcSegment</name><op:operator pos:line="2379" pos:column="77">.</op:operator><name pos:line="2379" pos:column="78">bottom</name></name></expr></argument>)</argument_list></call></expr>;
	<expr><call><name><name pos:line="2380" pos:column="9">surface</name><op:operator pos:line="2380" pos:column="16">-&gt;</op:operator><name pos:line="2380" pos:column="18">Copy</name></name><argument_list pos:line="2380" pos:column="22">(<argument><expr><name pos:line="2380" pos:column="23">rcCopyArea</name></expr></argument>, <argument><expr><name pos:line="2380" pos:column="35">from</name></expr></argument>,
	        <argument><expr><name pos:line="2381" pos:column="17">highlight</name> <op:operator pos:line="2381" pos:column="27">?</op:operator> <op:operator pos:line="2381" pos:column="29">*</op:operator><name pos:line="2381" pos:column="30">pixmapIndentGuideHighlight</name> <op:operator pos:line="2381" pos:column="57">:</op:operator> <op:operator pos:line="2381" pos:column="59">*</op:operator><name pos:line="2381" pos:column="60">pixmapIndentGuide</name></expr></argument>)</argument_list></call></expr>;
}</block>

<name pos:line="2384" pos:column="1">void</name> <macro><name pos:line="2384" pos:column="6">Editor</name></macro><name><op:operator pos:line="2384" pos:column="12">::</op:operator><name pos:line="2384" pos:column="14">DrawWrapMarker</name></name><op:operator pos:line="2384" pos:column="28">(</op:operator><name pos:line="2384" pos:column="29">Surface</name> <op:operator pos:line="2384" pos:column="37">*</op:operator><name pos:line="2384" pos:column="38">surface</name><op:operator pos:line="2384" pos:column="45">,</op:operator> <name pos:line="2384" pos:column="47">PRectangle</name> <name pos:line="2384" pos:column="58">rcPlace</name><op:operator pos:line="2384" pos:column="65">,</op:operator>
        <name pos:line="2385" pos:column="9">bool</name> <name pos:line="2385" pos:column="14">isEndMarker</name><op:operator pos:line="2385" pos:column="25">,</op:operator> <name pos:line="2385" pos:column="27">ColourAllocated</name> <name pos:line="2385" pos:column="43">wrapColour</name><op:operator pos:line="2385" pos:column="53">)</op:operator> <block pos:line="2385" pos:column="55">{
	<expr><call><name><name pos:line="2386" pos:column="9">surface</name><op:operator pos:line="2386" pos:column="16">-&gt;</op:operator><name pos:line="2386" pos:column="18">PenColour</name></name><argument_list pos:line="2386" pos:column="27">(<argument><expr><name pos:line="2386" pos:column="28">wrapColour</name></expr></argument>)</argument_list></call></expr>;

	enum <expr><block pos:line="2388" pos:column="14">{ <expr><name pos:line="2388" pos:column="16">xa</name> <op:operator pos:line="2388" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="2388" pos:column="21">1</lit:literal></expr> }</block></expr>; <comment type="line" pos:line="2388" pos:column="26">// gap before start</comment>
	<expr><name pos:line="2389" pos:column="9">int</name> <name pos:line="2389" pos:column="13">w</name> <op:operator pos:line="2389" pos:column="15">=</op:operator> <name><name pos:line="2389" pos:column="17">rcPlace</name><op:operator pos:line="2389" pos:column="24">.</op:operator><name pos:line="2389" pos:column="25">right</name></name> <op:operator pos:line="2389" pos:column="31">-</op:operator> <name><name pos:line="2389" pos:column="33">rcPlace</name><op:operator pos:line="2389" pos:column="40">.</op:operator><name pos:line="2389" pos:column="41">left</name></name> <op:operator pos:line="2389" pos:column="46">-</op:operator> <name pos:line="2389" pos:column="48">xa</name> <op:operator pos:line="2389" pos:column="51">-</op:operator> <lit:literal type="number" pos:line="2389" pos:column="53">1</lit:literal></expr>;

	<expr><name pos:line="2391" pos:column="9">bool</name> <name pos:line="2391" pos:column="14">xStraight</name> <op:operator pos:line="2391" pos:column="24">=</op:operator> <name pos:line="2391" pos:column="26">isEndMarker</name></expr>;  <comment type="line" pos:line="2391" pos:column="40">// x-mirrored symbol for start marker</comment>
	<expr><name pos:line="2392" pos:column="9">bool</name> <name pos:line="2392" pos:column="14">yStraight</name> <op:operator pos:line="2392" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="2392" pos:column="26">true</lit:literal></expr>;
	<comment type="line" pos:line="2393" pos:column="9">//bool yStraight= isEndMarker; // comment in for start marker y-mirrowed</comment>

	<expr><name pos:line="2395" pos:column="9">int</name> <name pos:line="2395" pos:column="13">x0</name> <op:operator pos:line="2395" pos:column="16">=</op:operator> <name pos:line="2395" pos:column="18">xStraight</name> <op:operator pos:line="2395" pos:column="28">?</op:operator> <name><name pos:line="2395" pos:column="30">rcPlace</name><op:operator pos:line="2395" pos:column="37">.</op:operator><name pos:line="2395" pos:column="38">left</name></name> <op:operator pos:line="2395" pos:column="43">:</op:operator> <name><name pos:line="2395" pos:column="45">rcPlace</name><op:operator pos:line="2395" pos:column="52">.</op:operator><name pos:line="2395" pos:column="53">right</name></name> <op:operator pos:line="2395" pos:column="59">-</op:operator> <lit:literal type="number" pos:line="2395" pos:column="61">1</lit:literal></expr>;
	<expr><name pos:line="2396" pos:column="9">int</name> <name pos:line="2396" pos:column="13">y0</name> <op:operator pos:line="2396" pos:column="16">=</op:operator> <name pos:line="2396" pos:column="18">yStraight</name> <op:operator pos:line="2396" pos:column="28">?</op:operator> <name><name pos:line="2396" pos:column="30">rcPlace</name><op:operator pos:line="2396" pos:column="37">.</op:operator><name pos:line="2396" pos:column="38">top</name></name> <op:operator pos:line="2396" pos:column="42">:</op:operator> <name><name pos:line="2396" pos:column="44">rcPlace</name><op:operator pos:line="2396" pos:column="51">.</op:operator><name pos:line="2396" pos:column="52">bottom</name></name> <op:operator pos:line="2396" pos:column="59">-</op:operator> <lit:literal type="number" pos:line="2396" pos:column="61">1</lit:literal></expr>;

	<expr><name pos:line="2398" pos:column="9">int</name> <name pos:line="2398" pos:column="13">dy</name> <op:operator pos:line="2398" pos:column="16">=</op:operator> <op:operator pos:line="2398" pos:column="18">(</op:operator><name><name pos:line="2398" pos:column="19">rcPlace</name><op:operator pos:line="2398" pos:column="26">.</op:operator><name pos:line="2398" pos:column="27">bottom</name></name> <op:operator pos:line="2398" pos:column="34">-</op:operator> <name><name pos:line="2398" pos:column="36">rcPlace</name><op:operator pos:line="2398" pos:column="43">.</op:operator><name pos:line="2398" pos:column="44">top</name></name><op:operator pos:line="2398" pos:column="47">)</op:operator> <op:operator pos:line="2398" pos:column="49">/</op:operator> <lit:literal type="number" pos:line="2398" pos:column="51">5</lit:literal></expr>;
	<expr><name pos:line="2399" pos:column="9">int</name> <name pos:line="2399" pos:column="13">y</name> <op:operator pos:line="2399" pos:column="15">=</op:operator> <op:operator pos:line="2399" pos:column="17">(</op:operator><name><name pos:line="2399" pos:column="18">rcPlace</name><op:operator pos:line="2399" pos:column="25">.</op:operator><name pos:line="2399" pos:column="26">bottom</name></name> <op:operator pos:line="2399" pos:column="33">-</op:operator> <name><name pos:line="2399" pos:column="35">rcPlace</name><op:operator pos:line="2399" pos:column="42">.</op:operator><name pos:line="2399" pos:column="43">top</name></name><op:operator pos:line="2399" pos:column="46">)</op:operator> <op:operator pos:line="2399" pos:column="48">/</op:operator> <lit:literal type="number" pos:line="2399" pos:column="50">2</lit:literal> <op:operator pos:line="2399" pos:column="52">+</op:operator> <name pos:line="2399" pos:column="54">dy</name></expr>;

	struct <expr><name pos:line="2401" pos:column="16">Relative</name> <block pos:line="2401" pos:column="25">{
		<expr><name pos:line="2402" pos:column="17">Surface</name> <op:operator pos:line="2402" pos:column="25">*</op:operator><name pos:line="2402" pos:column="26">surface</name></expr>;
		<expr><name pos:line="2403" pos:column="17">int</name> <name pos:line="2403" pos:column="21">xBase</name></expr>;
		<expr><name pos:line="2404" pos:column="17">int</name> <name pos:line="2404" pos:column="21">xDir</name></expr>;
		<expr><name pos:line="2405" pos:column="17">int</name> <name pos:line="2405" pos:column="21">yBase</name></expr>;
		<expr><name pos:line="2406" pos:column="17">int</name> <name pos:line="2406" pos:column="21">yDir</name></expr>;
		<expr><name pos:line="2407" pos:column="17">void</name> <macro><name pos:line="2407" pos:column="22">MoveTo</name><argument_list pos:line="2407" pos:column="28">(<argument pos:line="2407" pos:column="29">int xRelative</argument>, <argument pos:line="2407" pos:column="44">int yRelative</argument>)</argument_list></macro> <block pos:line="2407" pos:column="59">{
			<expr><call><name><name pos:line="2408" pos:column="25">surface</name><op:operator pos:line="2408" pos:column="32">-&gt;</op:operator><name pos:line="2408" pos:column="34">MoveTo</name></name><argument_list pos:line="2408" pos:column="40">(<argument><expr><name pos:line="2408" pos:column="41">xBase</name> <op:operator pos:line="2408" pos:column="47">+</op:operator> <name pos:line="2408" pos:column="49">xDir</name> <op:operator pos:line="2408" pos:column="54">*</op:operator> <name pos:line="2408" pos:column="56">xRelative</name></expr></argument>, <argument><expr><name pos:line="2408" pos:column="67">yBase</name> <op:operator pos:line="2408" pos:column="73">+</op:operator> <name pos:line="2408" pos:column="75">yDir</name> <op:operator pos:line="2408" pos:column="80">*</op:operator> <name pos:line="2408" pos:column="82">yRelative</name></expr></argument>)</argument_list></call></expr>;
		}</block>
		<name pos:line="2410" pos:column="17">void</name> <macro><name pos:line="2410" pos:column="22">LineTo</name><argument_list pos:line="2410" pos:column="28">(<argument pos:line="2410" pos:column="29">int xRelative</argument>, <argument pos:line="2410" pos:column="44">int yRelative</argument>)</argument_list></macro> <block pos:line="2410" pos:column="59">{
			<expr><call><name><name pos:line="2411" pos:column="25">surface</name><op:operator pos:line="2411" pos:column="32">-&gt;</op:operator><name pos:line="2411" pos:column="34">LineTo</name></name><argument_list pos:line="2411" pos:column="40">(<argument><expr><name pos:line="2411" pos:column="41">xBase</name> <op:operator pos:line="2411" pos:column="47">+</op:operator> <name pos:line="2411" pos:column="49">xDir</name> <op:operator pos:line="2411" pos:column="54">*</op:operator> <name pos:line="2411" pos:column="56">xRelative</name></expr></argument>, <argument><expr><name pos:line="2411" pos:column="67">yBase</name> <op:operator pos:line="2411" pos:column="73">+</op:operator> <name pos:line="2411" pos:column="75">yDir</name> <op:operator pos:line="2411" pos:column="80">*</op:operator> <name pos:line="2411" pos:column="82">yRelative</name></expr></argument>)</argument_list></call></expr>;
		}</block></expr>
	}</block></expr>;
	<expr><name pos:line="2414" pos:column="9">Relative</name> <name pos:line="2414" pos:column="18">rel</name> <op:operator pos:line="2414" pos:column="22">=</op:operator> <block pos:line="2414" pos:column="24">{<expr><name pos:line="2414" pos:column="25">surface</name></expr><op:operator pos:line="2414" pos:column="32">,</op:operator> <expr><name pos:line="2414" pos:column="34">x0</name></expr><op:operator pos:line="2414" pos:column="36">,</op:operator> <expr><name pos:line="2414" pos:column="38">xStraight</name> <op:operator pos:line="2414" pos:column="48">?</op:operator> <lit:literal type="number" pos:line="2414" pos:column="50">1</lit:literal> <op:operator pos:line="2414" pos:column="52">:</op:operator> <op:operator pos:line="2414" pos:column="54">-</op:operator><lit:literal type="number" pos:line="2414" pos:column="55">1</lit:literal></expr><op:operator pos:line="2414" pos:column="56">,</op:operator> <expr><name pos:line="2414" pos:column="58">y0</name></expr><op:operator pos:line="2414" pos:column="60">,</op:operator> <expr><name pos:line="2414" pos:column="62">yStraight</name> <op:operator pos:line="2414" pos:column="72">?</op:operator> <lit:literal type="number" pos:line="2414" pos:column="74">1</lit:literal> <op:operator pos:line="2414" pos:column="76">:</op:operator> <op:operator pos:line="2414" pos:column="78">-</op:operator><lit:literal type="number" pos:line="2414" pos:column="79">1</lit:literal></expr>}</block></expr>;

	<comment type="line" pos:line="2416" pos:column="9">// arrow head</comment>
	<expr><call><name><name pos:line="2417" pos:column="9">rel</name><op:operator pos:line="2417" pos:column="12">.</op:operator><name pos:line="2417" pos:column="13">MoveTo</name></name><argument_list pos:line="2417" pos:column="19">(<argument><expr><name pos:line="2417" pos:column="20">xa</name></expr></argument>, <argument><expr><name pos:line="2417" pos:column="24">y</name></expr></argument>)</argument_list></call></expr>;
	<expr><call><name><name pos:line="2418" pos:column="9">rel</name><op:operator pos:line="2418" pos:column="12">.</op:operator><name pos:line="2418" pos:column="13">LineTo</name></name><argument_list pos:line="2418" pos:column="19">(<argument><expr><name pos:line="2418" pos:column="20">xa</name> <op:operator pos:line="2418" pos:column="23">+</op:operator> <lit:literal type="number" pos:line="2418" pos:column="25">2</lit:literal><op:operator pos:line="2418" pos:column="26">*</op:operator><name pos:line="2418" pos:column="27">w</name> <op:operator pos:line="2418" pos:column="29">/</op:operator> <lit:literal type="number" pos:line="2418" pos:column="31">3</lit:literal></expr></argument>, <argument><expr><name pos:line="2418" pos:column="34">y</name> <op:operator pos:line="2418" pos:column="36">-</op:operator> <name pos:line="2418" pos:column="38">dy</name></expr></argument>)</argument_list></call></expr>;
	<expr><call><name><name pos:line="2419" pos:column="9">rel</name><op:operator pos:line="2419" pos:column="12">.</op:operator><name pos:line="2419" pos:column="13">MoveTo</name></name><argument_list pos:line="2419" pos:column="19">(<argument><expr><name pos:line="2419" pos:column="20">xa</name></expr></argument>, <argument><expr><name pos:line="2419" pos:column="24">y</name></expr></argument>)</argument_list></call></expr>;
	<expr><call><name><name pos:line="2420" pos:column="9">rel</name><op:operator pos:line="2420" pos:column="12">.</op:operator><name pos:line="2420" pos:column="13">LineTo</name></name><argument_list pos:line="2420" pos:column="19">(<argument><expr><name pos:line="2420" pos:column="20">xa</name> <op:operator pos:line="2420" pos:column="23">+</op:operator> <lit:literal type="number" pos:line="2420" pos:column="25">2</lit:literal><op:operator pos:line="2420" pos:column="26">*</op:operator><name pos:line="2420" pos:column="27">w</name> <op:operator pos:line="2420" pos:column="29">/</op:operator> <lit:literal type="number" pos:line="2420" pos:column="31">3</lit:literal></expr></argument>, <argument><expr><name pos:line="2420" pos:column="34">y</name> <op:operator pos:line="2420" pos:column="36">+</op:operator> <name pos:line="2420" pos:column="38">dy</name></expr></argument>)</argument_list></call></expr>;

	<comment type="line" pos:line="2422" pos:column="9">// arrow body</comment>
	<expr><call><name><name pos:line="2423" pos:column="9">rel</name><op:operator pos:line="2423" pos:column="12">.</op:operator><name pos:line="2423" pos:column="13">MoveTo</name></name><argument_list pos:line="2423" pos:column="19">(<argument><expr><name pos:line="2423" pos:column="20">xa</name></expr></argument>, <argument><expr><name pos:line="2423" pos:column="24">y</name></expr></argument>)</argument_list></call></expr>;
	<expr><call><name><name pos:line="2424" pos:column="9">rel</name><op:operator pos:line="2424" pos:column="12">.</op:operator><name pos:line="2424" pos:column="13">LineTo</name></name><argument_list pos:line="2424" pos:column="19">(<argument><expr><name pos:line="2424" pos:column="20">xa</name> <op:operator pos:line="2424" pos:column="23">+</op:operator> <name pos:line="2424" pos:column="25">w</name></expr></argument>, <argument><expr><name pos:line="2424" pos:column="28">y</name></expr></argument>)</argument_list></call></expr>;
	<expr><call><name><name pos:line="2425" pos:column="9">rel</name><op:operator pos:line="2425" pos:column="12">.</op:operator><name pos:line="2425" pos:column="13">LineTo</name></name><argument_list pos:line="2425" pos:column="19">(<argument><expr><name pos:line="2425" pos:column="20">xa</name> <op:operator pos:line="2425" pos:column="23">+</op:operator> <name pos:line="2425" pos:column="25">w</name></expr></argument>, <argument><expr><name pos:line="2425" pos:column="28">y</name> <op:operator pos:line="2425" pos:column="30">-</op:operator> <lit:literal type="number" pos:line="2425" pos:column="32">2</lit:literal> <op:operator pos:line="2425" pos:column="34">*</op:operator> <name pos:line="2425" pos:column="36">dy</name></expr></argument>)</argument_list></call></expr>;
	<expr><call><name><name pos:line="2426" pos:column="9">rel</name><op:operator pos:line="2426" pos:column="12">.</op:operator><name pos:line="2426" pos:column="13">LineTo</name></name><argument_list pos:line="2426" pos:column="19">(<argument><expr><name pos:line="2426" pos:column="20">xa</name> <op:operator pos:line="2426" pos:column="23">-</op:operator> <lit:literal type="number" pos:line="2426" pos:column="25">1</lit:literal></expr></argument>,   <comment type="line" pos:line="2426" pos:column="30">// on windows lineto is exclusive endpoint, perhaps GTK not...</comment>
	        <argument><expr><name pos:line="2427" pos:column="17">y</name> <op:operator pos:line="2427" pos:column="19">-</op:operator> <lit:literal type="number" pos:line="2427" pos:column="21">2</lit:literal> <op:operator pos:line="2427" pos:column="23">*</op:operator> <name pos:line="2427" pos:column="25">dy</name></expr></argument>)</argument_list></call></expr>;
}</block>

static <name pos:line="2430" pos:column="8">void</name> <macro><name pos:line="2430" pos:column="13">SimpleAlphaRectangle</name><argument_list pos:line="2430" pos:column="33">(<argument pos:line="2430" pos:column="34">Surface *surface</argument>, <argument pos:line="2430" pos:column="52">PRectangle rc</argument>, <argument pos:line="2430" pos:column="67">ColourAllocated fill</argument>, <argument pos:line="2430" pos:column="89">int alpha</argument>)</argument_list></macro> <block pos:line="2430" pos:column="100">{
	<if pos:line="2431" pos:column="9">if <condition pos:line="2431" pos:column="12">(<expr><name pos:line="2431" pos:column="13">alpha</name> <op:operator pos:line="2431" pos:column="19">!=</op:operator> <name pos:line="2431" pos:column="22">SC_ALPHA_NOALPHA</name></expr>)</condition><then pos:line="2431" pos:column="39"> <block pos:line="2431" pos:column="40">{
		<expr_stmt><expr><call><name><name pos:line="2432" pos:column="17">surface</name><op:operator pos:line="2432" pos:column="24">-&gt;</op:operator><name pos:line="2432" pos:column="26">AlphaRectangle</name></name><argument_list pos:line="2432" pos:column="40">(<argument><expr><name pos:line="2432" pos:column="41">rc</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2432" pos:column="45">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2432" pos:column="48">fill</name></expr></argument>, <argument><expr><name pos:line="2432" pos:column="54">alpha</name></expr></argument>, <argument><expr><name pos:line="2432" pos:column="61">fill</name></expr></argument>, <argument><expr><name pos:line="2432" pos:column="67">alpha</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2432" pos:column="74">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt/></block></then></if>}</block></expr></expr_stmt>
}

void <macro><name pos:line="2436" pos:column="6">DrawTextBlob</name><argument_list pos:line="2436" pos:column="18">(<argument pos:line="2436" pos:column="19">Surface *surface</argument>, <argument pos:line="2436" pos:column="37">ViewStyle &amp;vsDraw</argument>, <argument pos:line="2436" pos:column="56">PRectangle rcSegment</argument>,
				  <argument pos:line="2437" pos:column="35">const char *s</argument>, <argument pos:line="2437" pos:column="50">ColourAllocated textBack</argument>, <argument pos:line="2437" pos:column="76">ColourAllocated textFore</argument>, <argument pos:line="2437" pos:column="102">bool twoPhaseDraw</argument>)</argument_list></macro> <block pos:line="2437" pos:column="121">{
	<if pos:line="2438" pos:column="9">if <condition pos:line="2438" pos:column="12">(<expr><op:operator pos:line="2438" pos:column="13">!</op:operator><name pos:line="2438" pos:column="14">twoPhaseDraw</name></expr>)</condition><then pos:line="2438" pos:column="27"> <block pos:line="2438" pos:column="28">{
		<expr_stmt><expr><call><name><name pos:line="2439" pos:column="17">surface</name><op:operator pos:line="2439" pos:column="24">-&gt;</op:operator><name pos:line="2439" pos:column="26">FillRectangle</name></name><argument_list pos:line="2439" pos:column="39">(<argument><expr><name pos:line="2439" pos:column="40">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2439" pos:column="51">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="2441" pos:column="9">Font</name> <type:modifier pos:line="2441" pos:column="14">&amp;</type:modifier></type><name pos:line="2441" pos:column="15">ctrlCharsFont</name> <init pos:line="2441" pos:column="29">= <expr><name><name pos:line="2441" pos:column="31">vsDraw</name><op:operator pos:line="2441" pos:column="37">.</op:operator><name pos:line="2441" pos:column="38">styles</name><index pos:line="2441" pos:column="44">[<expr><name pos:line="2441" pos:column="45">STYLE_CONTROLCHAR</name></expr>]</index></name><op:operator pos:line="2441" pos:column="63">.</op:operator><name pos:line="2441" pos:column="64">font</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2442" pos:column="9">int</name></type> <name pos:line="2442" pos:column="13">normalCharHeight</name> <init pos:line="2442" pos:column="30">= <expr><call><name><name pos:line="2442" pos:column="32">surface</name><op:operator pos:line="2442" pos:column="39">-&gt;</op:operator><name pos:line="2442" pos:column="41">Ascent</name></name><argument_list pos:line="2442" pos:column="47">(<argument><expr><name pos:line="2442" pos:column="48">ctrlCharsFont</name></expr></argument>)</argument_list></call> <op:operator pos:line="2442" pos:column="63">-</op:operator>
	        <call><name><name pos:line="2443" pos:column="17">surface</name><op:operator pos:line="2443" pos:column="24">-&gt;</op:operator><name pos:line="2443" pos:column="26">InternalLeading</name></name><argument_list pos:line="2443" pos:column="41">(<argument><expr><name pos:line="2443" pos:column="42">ctrlCharsFont</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2444" pos:column="9">PRectangle</name></type> <name pos:line="2444" pos:column="20">rcCChar</name> <init pos:line="2444" pos:column="28">= <expr><name pos:line="2444" pos:column="30">rcSegment</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="2445" pos:column="9">rcCChar</name><op:operator pos:line="2445" pos:column="16">.</op:operator><name pos:line="2445" pos:column="17">left</name></name> <op:operator pos:line="2445" pos:column="22">=</op:operator> <name><name pos:line="2445" pos:column="24">rcCChar</name><op:operator pos:line="2445" pos:column="31">.</op:operator><name pos:line="2445" pos:column="32">left</name></name> <op:operator pos:line="2445" pos:column="37">+</op:operator> <lit:literal type="number" pos:line="2445" pos:column="39">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2446" pos:column="9">rcCChar</name><op:operator pos:line="2446" pos:column="16">.</op:operator><name pos:line="2446" pos:column="17">top</name></name> <op:operator pos:line="2446" pos:column="21">=</op:operator> <name><name pos:line="2446" pos:column="23">rcSegment</name><op:operator pos:line="2446" pos:column="32">.</op:operator><name pos:line="2446" pos:column="33">top</name></name> <op:operator pos:line="2446" pos:column="37">+</op:operator> <name><name pos:line="2446" pos:column="39">vsDraw</name><op:operator pos:line="2446" pos:column="45">.</op:operator><name pos:line="2446" pos:column="46">maxAscent</name></name> <op:operator pos:line="2446" pos:column="56">-</op:operator> <name pos:line="2446" pos:column="58">normalCharHeight</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2447" pos:column="9">rcCChar</name><op:operator pos:line="2447" pos:column="16">.</op:operator><name pos:line="2447" pos:column="17">bottom</name></name> <op:operator pos:line="2447" pos:column="24">=</op:operator> <name><name pos:line="2447" pos:column="26">rcSegment</name><op:operator pos:line="2447" pos:column="35">.</op:operator><name pos:line="2447" pos:column="36">top</name></name> <op:operator pos:line="2447" pos:column="40">+</op:operator> <name><name pos:line="2447" pos:column="42">vsDraw</name><op:operator pos:line="2447" pos:column="48">.</op:operator><name pos:line="2447" pos:column="49">maxAscent</name></name> <op:operator pos:line="2447" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="2447" pos:column="61">1</lit:literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2448" pos:column="9">PRectangle</name></type> <name pos:line="2448" pos:column="20">rcCentral</name> <init pos:line="2448" pos:column="30">= <expr><name pos:line="2448" pos:column="32">rcCChar</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="2449" pos:column="9">rcCentral</name><op:operator pos:line="2449" pos:column="18">.</op:operator><name pos:line="2449" pos:column="19">top</name></name><op:operator pos:line="2449" pos:column="22">++</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2450" pos:column="9">rcCentral</name><op:operator pos:line="2450" pos:column="18">.</op:operator><name pos:line="2450" pos:column="19">bottom</name></name><op:operator pos:line="2450" pos:column="25">--</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2451" pos:column="9">surface</name><op:operator pos:line="2451" pos:column="16">-&gt;</op:operator><name pos:line="2451" pos:column="18">FillRectangle</name></name><argument_list pos:line="2451" pos:column="31">(<argument><expr><name pos:line="2451" pos:column="32">rcCentral</name></expr></argument>, <argument><expr><name pos:line="2451" pos:column="43">textFore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2452" pos:column="9">PRectangle</name></type> <name pos:line="2452" pos:column="20">rcChar</name> <init pos:line="2452" pos:column="27">= <expr><name pos:line="2452" pos:column="29">rcCChar</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="2453" pos:column="9">rcChar</name><op:operator pos:line="2453" pos:column="15">.</op:operator><name pos:line="2453" pos:column="16">left</name></name><op:operator pos:line="2453" pos:column="20">++</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2454" pos:column="9">rcChar</name><op:operator pos:line="2454" pos:column="15">.</op:operator><name pos:line="2454" pos:column="16">right</name></name><op:operator pos:line="2454" pos:column="21">--</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2455" pos:column="9">surface</name><op:operator pos:line="2455" pos:column="16">-&gt;</op:operator><name pos:line="2455" pos:column="18">DrawTextClipped</name></name><argument_list pos:line="2455" pos:column="33">(<argument><expr><name pos:line="2455" pos:column="34">rcChar</name></expr></argument>, <argument><expr><name pos:line="2455" pos:column="42">ctrlCharsFont</name></expr></argument>,
	        <argument><expr><name><name pos:line="2456" pos:column="17">rcSegment</name><op:operator pos:line="2456" pos:column="26">.</op:operator><name pos:line="2456" pos:column="27">top</name></name> <op:operator pos:line="2456" pos:column="31">+</op:operator> <name><name pos:line="2456" pos:column="33">vsDraw</name><op:operator pos:line="2456" pos:column="39">.</op:operator><name pos:line="2456" pos:column="40">maxAscent</name></name></expr></argument>, <argument><expr><name pos:line="2456" pos:column="51">s</name></expr></argument>, <argument><expr><call><name pos:line="2456" pos:column="54">istrlen</name><argument_list pos:line="2456" pos:column="61">(<argument><expr><name pos:line="2456" pos:column="62">s</name></expr></argument>)</argument_list></call></expr></argument>,
	        <argument><expr><name pos:line="2457" pos:column="17">textBack</name></expr></argument>, <argument><expr><name pos:line="2457" pos:column="27">textFore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block>

<function><type><name pos:line="2460" pos:column="1">void</name></type> <name><name pos:line="2460" pos:column="6">Editor</name><op:operator pos:line="2460" pos:column="12">::</op:operator><name pos:line="2460" pos:column="14">DrawEOL</name></name><parameter_list pos:line="2460" pos:column="21">(<param><decl><type><name pos:line="2460" pos:column="22">Surface</name> <type:modifier pos:line="2460" pos:column="30">*</type:modifier></type><name pos:line="2460" pos:column="31">surface</name></decl></param>, <param><decl><type><name pos:line="2460" pos:column="40">ViewStyle</name> <type:modifier pos:line="2460" pos:column="50">&amp;</type:modifier></type><name pos:line="2460" pos:column="51">vsDraw</name></decl></param>, <param><decl><type><name pos:line="2460" pos:column="59">PRectangle</name></type> <name pos:line="2460" pos:column="70">rcLine</name></decl></param>, <param><decl><type><name pos:line="2460" pos:column="78">LineLayout</name> <type:modifier pos:line="2460" pos:column="89">*</type:modifier></type><name pos:line="2460" pos:column="90">ll</name></decl></param>,
        <param><decl><type><name pos:line="2461" pos:column="9">int</name></type> <name pos:line="2461" pos:column="13">line</name></decl></param>, <param><decl><type><name pos:line="2461" pos:column="19">int</name></type> <name pos:line="2461" pos:column="23">lineEnd</name></decl></param>, <param><decl><type><name pos:line="2461" pos:column="32">int</name></type> <name pos:line="2461" pos:column="36">xStart</name></decl></param>, <param><decl><type><name pos:line="2461" pos:column="44">int</name></type> <name pos:line="2461" pos:column="48">subLine</name></decl></param>, <param><decl><type><name pos:line="2461" pos:column="57">int</name></type> <name pos:line="2461" pos:column="61">subLineStart</name></decl></param>,
        <param><decl><type><name pos:line="2462" pos:column="9">bool</name></type> <name pos:line="2462" pos:column="14">overrideBackground</name></decl></param>, <param><decl><type><name pos:line="2462" pos:column="34">ColourAllocated</name></type> <name pos:line="2462" pos:column="50">background</name></decl></param>,
        <param><decl><type><name pos:line="2463" pos:column="9">bool</name></type> <name pos:line="2463" pos:column="14">drawWrapMarkEnd</name></decl></param>, <param><decl><type><name pos:line="2463" pos:column="31">ColourAllocated</name></type> <name pos:line="2463" pos:column="47">wrapColour</name></decl></param>)</parameter_list> <block pos:line="2463" pos:column="59">{

	<decl_stmt><decl><type><specifier pos:line="2465" pos:column="9">const</specifier> <name pos:line="2465" pos:column="15">int</name></type> <name pos:line="2465" pos:column="19">posLineStart</name> <init pos:line="2465" pos:column="32">= <expr><call><name><name pos:line="2465" pos:column="34">pdoc</name><op:operator pos:line="2465" pos:column="38">-&gt;</op:operator><name pos:line="2465" pos:column="40">LineStart</name></name><argument_list pos:line="2465" pos:column="49">(<argument><expr><name pos:line="2465" pos:column="50">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2466" pos:column="9">const</specifier> <name pos:line="2466" pos:column="15">int</name></type> <name pos:line="2466" pos:column="19">styleMask</name> <init pos:line="2466" pos:column="29">= <expr><name><name pos:line="2466" pos:column="31">pdoc</name><op:operator pos:line="2466" pos:column="35">-&gt;</op:operator><name pos:line="2466" pos:column="37">stylingBitsMask</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2467" pos:column="9">PRectangle</name></type> <name pos:line="2467" pos:column="20">rcSegment</name> <init pos:line="2467" pos:column="30">= <expr><name pos:line="2467" pos:column="32">rcLine</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="2469" pos:column="9">const</specifier> <name pos:line="2469" pos:column="15">bool</name></type> <name pos:line="2469" pos:column="20">lastSubLine</name> <init pos:line="2469" pos:column="32">= <expr><name pos:line="2469" pos:column="34">subLine</name> <op:operator pos:line="2469" pos:column="42">==</op:operator> <op:operator pos:line="2469" pos:column="45">(</op:operator><name><name pos:line="2469" pos:column="46">ll</name><op:operator pos:line="2469" pos:column="48">-&gt;</op:operator><name pos:line="2469" pos:column="50">lines</name></name> <op:operator pos:line="2469" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="2469" pos:column="58">1</lit:literal><op:operator pos:line="2469" pos:column="59">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2470" pos:column="9">int</name></type> <name pos:line="2470" pos:column="13">virtualSpace</name> <init pos:line="2470" pos:column="26">= <expr><lit:literal type="number" pos:line="2470" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="2471" pos:column="9">if <condition pos:line="2471" pos:column="12">(<expr><name pos:line="2471" pos:column="13">lastSubLine</name></expr>)</condition><then pos:line="2471" pos:column="25"> <block pos:line="2471" pos:column="26">{
		<decl_stmt><decl><type><specifier pos:line="2472" pos:column="17">const</specifier> <name pos:line="2472" pos:column="23">int</name></type> <name pos:line="2472" pos:column="27">spaceWidth</name> <init pos:line="2472" pos:column="38">= <expr><call><name><name pos:line="2472" pos:column="40">static_cast</name><argument_list pos:line="2472" pos:column="51">&lt;<argument><expr><name pos:line="2472" pos:column="52">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2472" pos:column="56">(<argument><expr><name><name pos:line="2472" pos:column="57">vsDraw</name><op:operator pos:line="2472" pos:column="63">.</op:operator><name pos:line="2472" pos:column="64">styles</name><index pos:line="2472" pos:column="70">[<expr><call><name><name pos:line="2472" pos:column="71">ll</name><op:operator pos:line="2472" pos:column="73">-&gt;</op:operator><name pos:line="2472" pos:column="75">EndLineStyle</name></name><argument_list pos:line="2472" pos:column="87">()</argument_list></call></expr>]</index></name><op:operator pos:line="2472" pos:column="90">.</op:operator><name pos:line="2472" pos:column="91">spaceWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="2473" pos:column="17">virtualSpace</name> <op:operator pos:line="2473" pos:column="30">=</op:operator> <call><name><name pos:line="2473" pos:column="32">sel</name><op:operator pos:line="2473" pos:column="35">.</op:operator><name pos:line="2473" pos:column="36">VirtualSpaceFor</name></name><argument_list pos:line="2473" pos:column="51">(<argument><expr><call><name><name pos:line="2473" pos:column="52">pdoc</name><op:operator pos:line="2473" pos:column="56">-&gt;</op:operator><name pos:line="2473" pos:column="58">LineEnd</name></name><argument_list pos:line="2473" pos:column="65">(<argument><expr><name pos:line="2473" pos:column="66">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="2473" pos:column="73">*</op:operator> <name pos:line="2473" pos:column="75">spaceWidth</name></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="2476" pos:column="9">// Fill in a PRectangle representing the end of line characters</comment>

	<decl_stmt><decl><type><name pos:line="2478" pos:column="9">int</name></type> <name pos:line="2478" pos:column="13">xEol</name> <init pos:line="2478" pos:column="18">= <expr><name><name pos:line="2478" pos:column="20">ll</name><op:operator pos:line="2478" pos:column="22">-&gt;</op:operator><name pos:line="2478" pos:column="24">positions</name><index pos:line="2478" pos:column="33">[<expr><name pos:line="2478" pos:column="34">lineEnd</name></expr>]</index></name> <op:operator pos:line="2478" pos:column="43">-</op:operator> <name pos:line="2478" pos:column="45">subLineStart</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2480" pos:column="9">// Fill the virtual space and show selections within it</comment>
	<if pos:line="2481" pos:column="9">if <condition pos:line="2481" pos:column="12">(<expr><name pos:line="2481" pos:column="13">virtualSpace</name></expr>)</condition><then pos:line="2481" pos:column="26"> <block pos:line="2481" pos:column="27">{
		<expr_stmt><expr><name><name pos:line="2482" pos:column="17">rcSegment</name><op:operator pos:line="2482" pos:column="26">.</op:operator><name pos:line="2482" pos:column="27">left</name></name> <op:operator pos:line="2482" pos:column="32">=</op:operator> <name pos:line="2482" pos:column="34">xEol</name> <op:operator pos:line="2482" pos:column="39">+</op:operator> <name pos:line="2482" pos:column="41">xStart</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2483" pos:column="17">rcSegment</name><op:operator pos:line="2483" pos:column="26">.</op:operator><name pos:line="2483" pos:column="27">right</name></name> <op:operator pos:line="2483" pos:column="33">=</op:operator> <name pos:line="2483" pos:column="35">xEol</name> <op:operator pos:line="2483" pos:column="40">+</op:operator> <name pos:line="2483" pos:column="42">xStart</name> <op:operator pos:line="2483" pos:column="49">+</op:operator> <name pos:line="2483" pos:column="51">virtualSpace</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2484" pos:column="17">surface</name><op:operator pos:line="2484" pos:column="24">-&gt;</op:operator><name pos:line="2484" pos:column="26">FillRectangle</name></name><argument_list pos:line="2484" pos:column="39">(<argument><expr><name pos:line="2484" pos:column="40">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2484" pos:column="51">overrideBackground</name> <op:operator pos:line="2484" pos:column="70">?</op:operator> <name pos:line="2484" pos:column="72">background</name> <op:operator pos:line="2484" pos:column="83">:</op:operator> <name><name pos:line="2484" pos:column="85">vsDraw</name><op:operator pos:line="2484" pos:column="91">.</op:operator><name pos:line="2484" pos:column="92">styles</name><index pos:line="2484" pos:column="98">[<expr><name><name pos:line="2484" pos:column="99">ll</name><op:operator pos:line="2484" pos:column="101">-&gt;</op:operator><name pos:line="2484" pos:column="103">styles</name><index pos:line="2484" pos:column="109">[<expr><name><name pos:line="2484" pos:column="110">ll</name><op:operator pos:line="2484" pos:column="112">-&gt;</op:operator><name pos:line="2484" pos:column="114">numCharsInLine</name></name></expr>]</index></name> <op:operator pos:line="2484" pos:column="130">&amp;</op:operator> <name pos:line="2484" pos:column="132">styleMask</name></expr>]</index></name><op:operator pos:line="2484" pos:column="142">.</op:operator><name><name pos:line="2484" pos:column="143">back</name><op:operator pos:line="2484" pos:column="147">.</op:operator><name pos:line="2484" pos:column="148">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2485" pos:column="17">if <condition pos:line="2485" pos:column="20">(<expr><op:operator pos:line="2485" pos:column="21">!</op:operator><name pos:line="2485" pos:column="22">hideSelection</name> <op:operator pos:line="2485" pos:column="36">&amp;&amp;</op:operator> <op:operator pos:line="2485" pos:column="39">(</op:operator><op:operator pos:line="2485" pos:column="40">(</op:operator><name><name pos:line="2485" pos:column="41">vsDraw</name><op:operator pos:line="2485" pos:column="47">.</op:operator><name pos:line="2485" pos:column="48">selAlpha</name></name> <op:operator pos:line="2485" pos:column="57">==</op:operator> <name pos:line="2485" pos:column="60">SC_ALPHA_NOALPHA</name><op:operator pos:line="2485" pos:column="76">)</op:operator> <op:operator pos:line="2485" pos:column="78">||</op:operator> <op:operator pos:line="2485" pos:column="81">(</op:operator><name><name pos:line="2485" pos:column="82">vsDraw</name><op:operator pos:line="2485" pos:column="88">.</op:operator><name pos:line="2485" pos:column="89">selAdditionalAlpha</name></name> <op:operator pos:line="2485" pos:column="108">==</op:operator> <name pos:line="2485" pos:column="111">SC_ALPHA_NOALPHA</name><op:operator pos:line="2485" pos:column="127">)</op:operator><op:operator pos:line="2485" pos:column="128">)</op:operator></expr>)</condition><then pos:line="2485" pos:column="130"> <block pos:line="2485" pos:column="131">{
			<decl_stmt><decl><type><name pos:line="2486" pos:column="25">SelectionSegment</name></type> <name pos:line="2486" pos:column="42">virtualSpaceRange</name><argument_list pos:line="2486" pos:column="59">(<argument><expr><call><name pos:line="2486" pos:column="60">SelectionPosition</name><argument_list pos:line="2486" pos:column="77">(<argument><expr><call><name><name pos:line="2486" pos:column="78">pdoc</name><op:operator pos:line="2486" pos:column="82">-&gt;</op:operator><name pos:line="2486" pos:column="84">LineEnd</name></name><argument_list pos:line="2486" pos:column="91">(<argument><expr><name pos:line="2486" pos:column="92">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2486" pos:column="100">SelectionPosition</name><argument_list pos:line="2486" pos:column="117">(<argument><expr><call><name><name pos:line="2486" pos:column="118">pdoc</name><op:operator pos:line="2486" pos:column="122">-&gt;</op:operator><name pos:line="2486" pos:column="124">LineEnd</name></name><argument_list pos:line="2486" pos:column="131">(<argument><expr><name pos:line="2486" pos:column="132">line</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2486" pos:column="139">sel</name><op:operator pos:line="2486" pos:column="142">.</op:operator><name pos:line="2486" pos:column="143">VirtualSpaceFor</name></name><argument_list pos:line="2486" pos:column="158">(<argument><expr><call><name><name pos:line="2486" pos:column="159">pdoc</name><op:operator pos:line="2486" pos:column="163">-&gt;</op:operator><name pos:line="2486" pos:column="165">LineEnd</name></name><argument_list pos:line="2486" pos:column="172">(<argument><expr><name pos:line="2486" pos:column="173">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			<for pos:line="2487" pos:column="25">for (<init><decl><type><name pos:line="2487" pos:column="30">size_t</name></type> <name pos:line="2487" pos:column="37">r</name><init pos:line="2487" pos:column="38">=<expr><lit:literal type="number" pos:line="2487" pos:column="39">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2487" pos:column="42">r</name><op:operator pos:line="2487" pos:column="43">&lt;</op:operator><call><name><name pos:line="2487" pos:column="44">sel</name><op:operator pos:line="2487" pos:column="47">.</op:operator><name pos:line="2487" pos:column="48">Count</name></name><argument_list pos:line="2487" pos:column="53">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="2487" pos:column="57">r</name><op:operator pos:line="2487" pos:column="58">++</op:operator></expr></incr>) <block pos:line="2487" pos:column="62">{
				<decl_stmt><decl><type><name pos:line="2488" pos:column="33">int</name></type> <name pos:line="2488" pos:column="37">alpha</name> <init pos:line="2488" pos:column="43">= <expr><op:operator pos:line="2488" pos:column="45">(</op:operator><name pos:line="2488" pos:column="46">r</name> <op:operator pos:line="2488" pos:column="48">==</op:operator> <call><name><name pos:line="2488" pos:column="51">sel</name><op:operator pos:line="2488" pos:column="54">.</op:operator><name pos:line="2488" pos:column="55">Main</name></name><argument_list pos:line="2488" pos:column="59">()</argument_list></call><op:operator pos:line="2488" pos:column="61">)</op:operator> <op:operator pos:line="2488" pos:column="63">?</op:operator> <name><name pos:line="2488" pos:column="65">vsDraw</name><op:operator pos:line="2488" pos:column="71">.</op:operator><name pos:line="2488" pos:column="72">selAlpha</name></name> <op:operator pos:line="2488" pos:column="81">:</op:operator> <name><name pos:line="2488" pos:column="83">vsDraw</name><op:operator pos:line="2488" pos:column="89">.</op:operator><name pos:line="2488" pos:column="90">selAdditionalAlpha</name></name></expr></init></decl>;</decl_stmt>
				<if pos:line="2489" pos:column="33">if <condition pos:line="2489" pos:column="36">(<expr><name pos:line="2489" pos:column="37">alpha</name> <op:operator pos:line="2489" pos:column="43">==</op:operator> <name pos:line="2489" pos:column="46">SC_ALPHA_NOALPHA</name></expr>)</condition><then pos:line="2489" pos:column="63"> <block pos:line="2489" pos:column="64">{
					<decl_stmt><decl><type><name pos:line="2490" pos:column="41">SelectionSegment</name></type> <name pos:line="2490" pos:column="58">portion</name> <init pos:line="2490" pos:column="66">= <expr><call><name><name pos:line="2490" pos:column="68">sel</name><op:operator pos:line="2490" pos:column="71">.</op:operator><name pos:line="2490" pos:column="72">Range</name></name><argument_list pos:line="2490" pos:column="77">(<argument><expr><name pos:line="2490" pos:column="78">r</name></expr></argument>)</argument_list></call><op:operator pos:line="2490" pos:column="80">.</op:operator><call><name pos:line="2490" pos:column="81">Intersect</name><argument_list pos:line="2490" pos:column="90">(<argument><expr><name pos:line="2490" pos:column="91">virtualSpaceRange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="2491" pos:column="41">if <condition pos:line="2491" pos:column="44">(<expr><op:operator pos:line="2491" pos:column="45">!</op:operator><call><name><name pos:line="2491" pos:column="46">portion</name><op:operator pos:line="2491" pos:column="53">.</op:operator><name pos:line="2491" pos:column="54">Empty</name></name><argument_list pos:line="2491" pos:column="59">()</argument_list></call></expr>)</condition><then pos:line="2491" pos:column="62"> <block pos:line="2491" pos:column="63">{
						<decl_stmt><decl><type><specifier pos:line="2492" pos:column="49">const</specifier> <name pos:line="2492" pos:column="55">int</name></type> <name pos:line="2492" pos:column="59">spaceWidth</name> <init pos:line="2492" pos:column="70">= <expr><call><name><name pos:line="2492" pos:column="72">static_cast</name><argument_list pos:line="2492" pos:column="83">&lt;<argument><expr><name pos:line="2492" pos:column="84">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2492" pos:column="88">(<argument><expr><name><name pos:line="2492" pos:column="89">vsDraw</name><op:operator pos:line="2492" pos:column="95">.</op:operator><name pos:line="2492" pos:column="96">styles</name><index pos:line="2492" pos:column="102">[<expr><call><name><name pos:line="2492" pos:column="103">ll</name><op:operator pos:line="2492" pos:column="105">-&gt;</op:operator><name pos:line="2492" pos:column="107">EndLineStyle</name></name><argument_list pos:line="2492" pos:column="119">()</argument_list></call></expr>]</index></name><op:operator pos:line="2492" pos:column="122">.</op:operator><name pos:line="2492" pos:column="123">spaceWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="2493" pos:column="49">rcSegment</name><op:operator pos:line="2493" pos:column="58">.</op:operator><name pos:line="2493" pos:column="59">left</name></name> <op:operator pos:line="2493" pos:column="64">=</op:operator> <name pos:line="2493" pos:column="66">xStart</name> <op:operator pos:line="2493" pos:column="73">+</op:operator> <name><name pos:line="2493" pos:column="75">ll</name><op:operator pos:line="2493" pos:column="77">-&gt;</op:operator><name pos:line="2493" pos:column="79">positions</name><index pos:line="2493" pos:column="88">[<expr><call><name><name pos:line="2493" pos:column="89">portion</name><op:operator pos:line="2493" pos:column="96">.</op:operator><name pos:line="2493" pos:column="97">start</name><op:operator pos:line="2493" pos:column="102">.</op:operator><name pos:line="2493" pos:column="103">Position</name></name><argument_list pos:line="2493" pos:column="111">()</argument_list></call> <op:operator pos:line="2493" pos:column="114">-</op:operator> <name pos:line="2493" pos:column="116">posLineStart</name></expr>]</index></name> <op:operator pos:line="2493" pos:column="130">-</op:operator> <name pos:line="2493" pos:column="132">subLineStart</name> <op:operator pos:line="2493" pos:column="145">+</op:operator> <call><name><name pos:line="2493" pos:column="147">portion</name><op:operator pos:line="2493" pos:column="154">.</op:operator><name pos:line="2493" pos:column="155">start</name><op:operator pos:line="2493" pos:column="160">.</op:operator><name pos:line="2493" pos:column="161">VirtualSpace</name></name><argument_list pos:line="2493" pos:column="173">()</argument_list></call> <op:operator pos:line="2493" pos:column="176">*</op:operator> <name pos:line="2493" pos:column="178">spaceWidth</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="2494" pos:column="49">rcSegment</name><op:operator pos:line="2494" pos:column="58">.</op:operator><name pos:line="2494" pos:column="59">right</name></name> <op:operator pos:line="2494" pos:column="65">=</op:operator> <name pos:line="2494" pos:column="67">xStart</name> <op:operator pos:line="2494" pos:column="74">+</op:operator> <name><name pos:line="2494" pos:column="76">ll</name><op:operator pos:line="2494" pos:column="78">-&gt;</op:operator><name pos:line="2494" pos:column="80">positions</name><index pos:line="2494" pos:column="89">[<expr><call><name><name pos:line="2494" pos:column="90">portion</name><op:operator pos:line="2494" pos:column="97">.</op:operator><name pos:line="2494" pos:column="98">end</name><op:operator pos:line="2494" pos:column="101">.</op:operator><name pos:line="2494" pos:column="102">Position</name></name><argument_list pos:line="2494" pos:column="110">()</argument_list></call> <op:operator pos:line="2494" pos:column="113">-</op:operator> <name pos:line="2494" pos:column="115">posLineStart</name></expr>]</index></name> <op:operator pos:line="2494" pos:column="129">-</op:operator> <name pos:line="2494" pos:column="131">subLineStart</name> <op:operator pos:line="2494" pos:column="144">+</op:operator> <call><name><name pos:line="2494" pos:column="146">portion</name><op:operator pos:line="2494" pos:column="153">.</op:operator><name pos:line="2494" pos:column="154">end</name><op:operator pos:line="2494" pos:column="157">.</op:operator><name pos:line="2494" pos:column="158">VirtualSpace</name></name><argument_list pos:line="2494" pos:column="170">()</argument_list></call> <op:operator pos:line="2494" pos:column="173">*</op:operator> <name pos:line="2494" pos:column="175">spaceWidth</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="2495" pos:column="49">rcSegment</name><op:operator pos:line="2495" pos:column="58">.</op:operator><name pos:line="2495" pos:column="59">left</name></name> <op:operator pos:line="2495" pos:column="64">=</op:operator> <call><name><name pos:line="2495" pos:column="66">Platform</name><op:operator pos:line="2495" pos:column="74">::</op:operator><name pos:line="2495" pos:column="76">Maximum</name></name><argument_list pos:line="2495" pos:column="83">(<argument><expr><name><name pos:line="2495" pos:column="84">rcSegment</name><op:operator pos:line="2495" pos:column="93">.</op:operator><name pos:line="2495" pos:column="94">left</name></name></expr></argument>, <argument><expr><name><name pos:line="2495" pos:column="100">rcLine</name><op:operator pos:line="2495" pos:column="106">.</op:operator><name pos:line="2495" pos:column="107">left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="2496" pos:column="49">rcSegment</name><op:operator pos:line="2496" pos:column="58">.</op:operator><name pos:line="2496" pos:column="59">right</name></name> <op:operator pos:line="2496" pos:column="65">=</op:operator> <call><name><name pos:line="2496" pos:column="67">Platform</name><op:operator pos:line="2496" pos:column="75">::</op:operator><name pos:line="2496" pos:column="77">Minimum</name></name><argument_list pos:line="2496" pos:column="84">(<argument><expr><name><name pos:line="2496" pos:column="85">rcSegment</name><op:operator pos:line="2496" pos:column="94">.</op:operator><name pos:line="2496" pos:column="95">right</name></name></expr></argument>, <argument><expr><name><name pos:line="2496" pos:column="102">rcLine</name><op:operator pos:line="2496" pos:column="108">.</op:operator><name pos:line="2496" pos:column="109">right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="2497" pos:column="49">surface</name><op:operator pos:line="2497" pos:column="56">-&gt;</op:operator><name pos:line="2497" pos:column="58">FillRectangle</name></name><argument_list pos:line="2497" pos:column="71">(<argument><expr><name pos:line="2497" pos:column="72">rcSegment</name></expr></argument>, <argument><expr><call><name pos:line="2497" pos:column="83">SelectionBackground</name><argument_list pos:line="2497" pos:column="102">(<argument><expr><name pos:line="2497" pos:column="103">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2497" pos:column="111">r</name> <op:operator pos:line="2497" pos:column="113">==</op:operator> <call><name><name pos:line="2497" pos:column="116">sel</name><op:operator pos:line="2497" pos:column="119">.</op:operator><name pos:line="2497" pos:column="120">Main</name></name><argument_list pos:line="2497" pos:column="124">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then></if>
			}</block></for>
		}</block></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="2504" pos:column="9">int</name></type> <name pos:line="2504" pos:column="13">posAfterLineEnd</name> <init pos:line="2504" pos:column="29">= <expr><call><name><name pos:line="2504" pos:column="31">pdoc</name><op:operator pos:line="2504" pos:column="35">-&gt;</op:operator><name pos:line="2504" pos:column="37">LineStart</name></name><argument_list pos:line="2504" pos:column="46">(<argument><expr><name pos:line="2504" pos:column="47">line</name> <op:operator pos:line="2504" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="2504" pos:column="54">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2505" pos:column="9">int</name></type> <name pos:line="2505" pos:column="13">eolInSelection</name> <init pos:line="2505" pos:column="28">= <expr><op:operator pos:line="2505" pos:column="30">(</op:operator><name pos:line="2505" pos:column="31">subLine</name> <op:operator pos:line="2505" pos:column="39">==</op:operator> <op:operator pos:line="2505" pos:column="42">(</op:operator><name><name pos:line="2505" pos:column="43">ll</name><op:operator pos:line="2505" pos:column="45">-&gt;</op:operator><name pos:line="2505" pos:column="47">lines</name></name> <op:operator pos:line="2505" pos:column="53">-</op:operator> <lit:literal type="number" pos:line="2505" pos:column="55">1</lit:literal><op:operator pos:line="2505" pos:column="56">)</op:operator><op:operator pos:line="2505" pos:column="57">)</op:operator> <op:operator pos:line="2505" pos:column="59">?</op:operator> <call><name><name pos:line="2505" pos:column="61">sel</name><op:operator pos:line="2505" pos:column="64">.</op:operator><name pos:line="2505" pos:column="65">InSelectionForEOL</name></name><argument_list pos:line="2505" pos:column="82">(<argument><expr><name pos:line="2505" pos:column="83">posAfterLineEnd</name></expr></argument>)</argument_list></call> <op:operator pos:line="2505" pos:column="100">:</op:operator> <lit:literal type="number" pos:line="2505" pos:column="102">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2506" pos:column="9">int</name></type> <name pos:line="2506" pos:column="13">alpha</name> <init pos:line="2506" pos:column="19">= <expr><op:operator pos:line="2506" pos:column="21">(</op:operator><name pos:line="2506" pos:column="22">eolInSelection</name> <op:operator pos:line="2506" pos:column="37">==</op:operator> <lit:literal type="number" pos:line="2506" pos:column="40">1</lit:literal><op:operator pos:line="2506" pos:column="41">)</op:operator> <op:operator pos:line="2506" pos:column="43">?</op:operator> <name><name pos:line="2506" pos:column="45">vsDraw</name><op:operator pos:line="2506" pos:column="51">.</op:operator><name pos:line="2506" pos:column="52">selAlpha</name></name> <op:operator pos:line="2506" pos:column="61">:</op:operator> <name><name pos:line="2506" pos:column="63">vsDraw</name><op:operator pos:line="2506" pos:column="69">.</op:operator><name pos:line="2506" pos:column="70">selAdditionalAlpha</name></name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2508" pos:column="9">// Draw the [CR], [LF], or [CR][LF] blobs if visible line ends are on</comment>
	<decl_stmt><decl><type><name pos:line="2509" pos:column="9">int</name></type> <name pos:line="2509" pos:column="13">blobsWidth</name> <init pos:line="2509" pos:column="24">= <expr><lit:literal type="number" pos:line="2509" pos:column="26">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="2510" pos:column="9">if <condition pos:line="2510" pos:column="12">(<expr><name pos:line="2510" pos:column="13">lastSubLine</name></expr>)</condition><then pos:line="2510" pos:column="25"> <block pos:line="2510" pos:column="26">{
		<for pos:line="2511" pos:column="17">for (<init><decl><type><name pos:line="2511" pos:column="22">int</name></type> <name pos:line="2511" pos:column="26">eolPos</name><init pos:line="2511" pos:column="32">=<expr><name><name pos:line="2511" pos:column="33">ll</name><op:operator pos:line="2511" pos:column="35">-&gt;</op:operator><name pos:line="2511" pos:column="37">numCharsBeforeEOL</name></name></expr></init></decl>;</init> <condition><expr><name pos:line="2511" pos:column="56">eolPos</name><op:operator pos:line="2511" pos:column="62">&lt;</op:operator><name><name pos:line="2511" pos:column="63">ll</name><op:operator pos:line="2511" pos:column="65">-&gt;</op:operator><name pos:line="2511" pos:column="67">numCharsInLine</name></name></expr>;</condition> <incr><expr><name pos:line="2511" pos:column="83">eolPos</name><op:operator pos:line="2511" pos:column="89">++</op:operator></expr></incr>) <block pos:line="2511" pos:column="93">{
			<expr_stmt><expr><name><name pos:line="2512" pos:column="25">rcSegment</name><op:operator pos:line="2512" pos:column="34">.</op:operator><name pos:line="2512" pos:column="35">left</name></name> <op:operator pos:line="2512" pos:column="40">=</op:operator> <name pos:line="2512" pos:column="42">xStart</name> <op:operator pos:line="2512" pos:column="49">+</op:operator> <name><name pos:line="2512" pos:column="51">ll</name><op:operator pos:line="2512" pos:column="53">-&gt;</op:operator><name pos:line="2512" pos:column="55">positions</name><index pos:line="2512" pos:column="64">[<expr><name pos:line="2512" pos:column="65">eolPos</name></expr>]</index></name> <op:operator pos:line="2512" pos:column="73">-</op:operator> <name pos:line="2512" pos:column="75">subLineStart</name> <op:operator pos:line="2512" pos:column="88">+</op:operator> <name pos:line="2512" pos:column="90">virtualSpace</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2513" pos:column="25">rcSegment</name><op:operator pos:line="2513" pos:column="34">.</op:operator><name pos:line="2513" pos:column="35">right</name></name> <op:operator pos:line="2513" pos:column="41">=</op:operator> <name pos:line="2513" pos:column="43">xStart</name> <op:operator pos:line="2513" pos:column="50">+</op:operator> <name><name pos:line="2513" pos:column="52">ll</name><op:operator pos:line="2513" pos:column="54">-&gt;</op:operator><name pos:line="2513" pos:column="56">positions</name><index pos:line="2513" pos:column="65">[<expr><name pos:line="2513" pos:column="66">eolPos</name><op:operator pos:line="2513" pos:column="72">+</op:operator><lit:literal type="number" pos:line="2513" pos:column="73">1</lit:literal></expr>]</index></name> <op:operator pos:line="2513" pos:column="76">-</op:operator> <name pos:line="2513" pos:column="78">subLineStart</name> <op:operator pos:line="2513" pos:column="91">+</op:operator> <name pos:line="2513" pos:column="93">virtualSpace</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2514" pos:column="25">blobsWidth</name> <op:operator pos:line="2514" pos:column="36">+=</op:operator> <call><name><name pos:line="2514" pos:column="39">rcSegment</name><op:operator pos:line="2514" pos:column="48">.</op:operator><name pos:line="2514" pos:column="49">Width</name></name><argument_list pos:line="2514" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="2515" pos:column="25">const</specifier> <name pos:line="2515" pos:column="31">char</name> <type:modifier pos:line="2515" pos:column="36">*</type:modifier></type><name pos:line="2515" pos:column="37">ctrlChar</name> <init pos:line="2515" pos:column="46">= <expr><call><name pos:line="2515" pos:column="48">ControlCharacterString</name><argument_list pos:line="2515" pos:column="70">(<argument><expr><name><name pos:line="2515" pos:column="71">ll</name><op:operator pos:line="2515" pos:column="73">-&gt;</op:operator><name pos:line="2515" pos:column="75">chars</name><index pos:line="2515" pos:column="80">[<expr><name pos:line="2515" pos:column="81">eolPos</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2516" pos:column="25">int</name></type> <name pos:line="2516" pos:column="29">inSelection</name> <init pos:line="2516" pos:column="41">= <expr><lit:literal type="number" pos:line="2516" pos:column="43">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2517" pos:column="25">bool</name></type> <name pos:line="2517" pos:column="30">inHotspot</name> <init pos:line="2517" pos:column="40">= <expr><lit:literal type="boolean" pos:line="2517" pos:column="42">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2518" pos:column="25">int</name></type> <name pos:line="2518" pos:column="29">styleMain</name> <init pos:line="2518" pos:column="39">= <expr><name><name pos:line="2518" pos:column="41">ll</name><op:operator pos:line="2518" pos:column="43">-&gt;</op:operator><name pos:line="2518" pos:column="45">styles</name><index pos:line="2518" pos:column="51">[<expr><name pos:line="2518" pos:column="52">eolPos</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2519" pos:column="25">ColourAllocated</name></type> <name pos:line="2519" pos:column="41">textBack</name> <init pos:line="2519" pos:column="50">= <expr><call><name pos:line="2519" pos:column="52">TextBackground</name><argument_list pos:line="2519" pos:column="66">(<argument><expr><name pos:line="2519" pos:column="67">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2519" pos:column="75">overrideBackground</name></expr></argument>, <argument><expr><name pos:line="2519" pos:column="95">background</name></expr></argument>, <argument><expr><name pos:line="2519" pos:column="107">inSelection</name></expr></argument>, <argument><expr><name pos:line="2519" pos:column="120">inHotspot</name></expr></argument>, <argument><expr><name pos:line="2519" pos:column="131">styleMain</name></expr></argument>, <argument><expr><name pos:line="2519" pos:column="142">eolPos</name></expr></argument>, <argument><expr><name pos:line="2519" pos:column="150">ll</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2520" pos:column="25">ColourAllocated</name></type> <name pos:line="2520" pos:column="41">textFore</name> <init pos:line="2520" pos:column="50">= <expr><name><name pos:line="2520" pos:column="52">vsDraw</name><op:operator pos:line="2520" pos:column="58">.</op:operator><name pos:line="2520" pos:column="59">styles</name><index pos:line="2520" pos:column="65">[<expr><name pos:line="2520" pos:column="66">styleMain</name></expr>]</index></name><op:operator pos:line="2520" pos:column="76">.</op:operator><name><name pos:line="2520" pos:column="77">fore</name><op:operator pos:line="2520" pos:column="81">.</op:operator><name pos:line="2520" pos:column="82">allocated</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="2521" pos:column="25">if <condition pos:line="2521" pos:column="28">(<expr><op:operator pos:line="2521" pos:column="29">!</op:operator><name pos:line="2521" pos:column="30">hideSelection</name> <op:operator pos:line="2521" pos:column="44">&amp;&amp;</op:operator> <name pos:line="2521" pos:column="47">eolInSelection</name> <op:operator pos:line="2521" pos:column="62">&amp;&amp;</op:operator> <name><name pos:line="2521" pos:column="65">vsDraw</name><op:operator pos:line="2521" pos:column="71">.</op:operator><name pos:line="2521" pos:column="72">selbackset</name></name> <op:operator pos:line="2521" pos:column="83">&amp;&amp;</op:operator> <op:operator pos:line="2521" pos:column="86">(</op:operator><name pos:line="2521" pos:column="87">line</name> <op:operator pos:line="2521" pos:column="92">&lt;</op:operator> <call><name><name pos:line="2521" pos:column="94">pdoc</name><op:operator pos:line="2521" pos:column="98">-&gt;</op:operator><name pos:line="2521" pos:column="100">LinesTotal</name></name><argument_list pos:line="2521" pos:column="110">()</argument_list></call> <op:operator pos:line="2521" pos:column="113">-</op:operator> <lit:literal type="number" pos:line="2521" pos:column="115">1</lit:literal><op:operator pos:line="2521" pos:column="116">)</op:operator></expr>)</condition><then pos:line="2521" pos:column="118"> <block pos:line="2521" pos:column="119">{
				<if pos:line="2522" pos:column="33">if <condition pos:line="2522" pos:column="36">(<expr><name pos:line="2522" pos:column="37">alpha</name> <op:operator pos:line="2522" pos:column="43">==</op:operator> <name pos:line="2522" pos:column="46">SC_ALPHA_NOALPHA</name></expr>)</condition><then pos:line="2522" pos:column="63"> <block pos:line="2522" pos:column="64">{
					<expr_stmt><expr><call><name><name pos:line="2523" pos:column="41">surface</name><op:operator pos:line="2523" pos:column="48">-&gt;</op:operator><name pos:line="2523" pos:column="50">FillRectangle</name></name><argument_list pos:line="2523" pos:column="63">(<argument><expr><name pos:line="2523" pos:column="64">rcSegment</name></expr></argument>, <argument><expr><call><name pos:line="2523" pos:column="75">SelectionBackground</name><argument_list pos:line="2523" pos:column="94">(<argument><expr><name pos:line="2523" pos:column="95">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2523" pos:column="103">eolInSelection</name> <op:operator pos:line="2523" pos:column="118">==</op:operator> <lit:literal type="number" pos:line="2523" pos:column="121">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="2524" pos:column="35">else <block pos:line="2524" pos:column="40">{
					<expr_stmt><expr><call><name><name pos:line="2525" pos:column="41">surface</name><op:operator pos:line="2525" pos:column="48">-&gt;</op:operator><name pos:line="2525" pos:column="50">FillRectangle</name></name><argument_list pos:line="2525" pos:column="63">(<argument><expr><name pos:line="2525" pos:column="64">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2525" pos:column="75">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="2526" pos:column="41">SimpleAlphaRectangle</name><argument_list pos:line="2526" pos:column="61">(<argument><expr><name pos:line="2526" pos:column="62">surface</name></expr></argument>, <argument><expr><name pos:line="2526" pos:column="71">rcSegment</name></expr></argument>, <argument><expr><call><name pos:line="2526" pos:column="82">SelectionBackground</name><argument_list pos:line="2526" pos:column="101">(<argument><expr><name pos:line="2526" pos:column="102">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2526" pos:column="110">eolInSelection</name> <op:operator pos:line="2526" pos:column="125">==</op:operator> <lit:literal type="number" pos:line="2526" pos:column="128">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2526" pos:column="132">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then> <else pos:line="2528" pos:column="27">else <block pos:line="2528" pos:column="32">{
				<expr_stmt><expr><call><name><name pos:line="2529" pos:column="33">surface</name><op:operator pos:line="2529" pos:column="40">-&gt;</op:operator><name pos:line="2529" pos:column="42">FillRectangle</name></name><argument_list pos:line="2529" pos:column="55">(<argument><expr><name pos:line="2529" pos:column="56">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2529" pos:column="67">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
			<expr_stmt><expr><call><name pos:line="2531" pos:column="25">DrawTextBlob</name><argument_list pos:line="2531" pos:column="37">(<argument><expr><name pos:line="2531" pos:column="38">surface</name></expr></argument>, <argument><expr><name pos:line="2531" pos:column="47">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2531" pos:column="55">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2531" pos:column="66">ctrlChar</name></expr></argument>, <argument><expr><name pos:line="2531" pos:column="76">textBack</name></expr></argument>, <argument><expr><name pos:line="2531" pos:column="86">textFore</name></expr></argument>, <argument><expr><name pos:line="2531" pos:column="96">twoPhaseDraw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>

	<comment type="line" pos:line="2535" pos:column="9">// Draw the eol-is-selected rectangle</comment>
	<expr_stmt><expr><name><name pos:line="2536" pos:column="9">rcSegment</name><op:operator pos:line="2536" pos:column="18">.</op:operator><name pos:line="2536" pos:column="19">left</name></name> <op:operator pos:line="2536" pos:column="24">=</op:operator> <name pos:line="2536" pos:column="26">xEol</name> <op:operator pos:line="2536" pos:column="31">+</op:operator> <name pos:line="2536" pos:column="33">xStart</name> <op:operator pos:line="2536" pos:column="40">+</op:operator> <name pos:line="2536" pos:column="42">virtualSpace</name> <op:operator pos:line="2536" pos:column="55">+</op:operator> <name pos:line="2536" pos:column="57">blobsWidth</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2537" pos:column="9">rcSegment</name><op:operator pos:line="2537" pos:column="18">.</op:operator><name pos:line="2537" pos:column="19">right</name></name> <op:operator pos:line="2537" pos:column="25">=</op:operator> <name pos:line="2537" pos:column="27">xEol</name> <op:operator pos:line="2537" pos:column="32">+</op:operator> <name pos:line="2537" pos:column="34">xStart</name> <op:operator pos:line="2537" pos:column="41">+</op:operator> <name pos:line="2537" pos:column="43">virtualSpace</name> <op:operator pos:line="2537" pos:column="56">+</op:operator> <name pos:line="2537" pos:column="58">blobsWidth</name> <op:operator pos:line="2537" pos:column="69">+</op:operator> <name><name pos:line="2537" pos:column="71">vsDraw</name><op:operator pos:line="2537" pos:column="77">.</op:operator><name pos:line="2537" pos:column="78">aveCharWidth</name></name></expr>;</expr_stmt>

	<if pos:line="2539" pos:column="9">if <condition pos:line="2539" pos:column="12">(<expr><op:operator pos:line="2539" pos:column="13">!</op:operator><name pos:line="2539" pos:column="14">hideSelection</name> <op:operator pos:line="2539" pos:column="28">&amp;&amp;</op:operator> <name pos:line="2539" pos:column="31">eolInSelection</name> <op:operator pos:line="2539" pos:column="46">&amp;&amp;</op:operator> <name><name pos:line="2539" pos:column="49">vsDraw</name><op:operator pos:line="2539" pos:column="55">.</op:operator><name pos:line="2539" pos:column="56">selbackset</name></name> <op:operator pos:line="2539" pos:column="67">&amp;&amp;</op:operator> <op:operator pos:line="2539" pos:column="70">(</op:operator><name pos:line="2539" pos:column="71">line</name> <op:operator pos:line="2539" pos:column="76">&lt;</op:operator> <call><name><name pos:line="2539" pos:column="78">pdoc</name><op:operator pos:line="2539" pos:column="82">-&gt;</op:operator><name pos:line="2539" pos:column="84">LinesTotal</name></name><argument_list pos:line="2539" pos:column="94">()</argument_list></call> <op:operator pos:line="2539" pos:column="97">-</op:operator> <lit:literal type="number" pos:line="2539" pos:column="99">1</lit:literal><op:operator pos:line="2539" pos:column="100">)</op:operator> <op:operator pos:line="2539" pos:column="102">&amp;&amp;</op:operator> <op:operator pos:line="2539" pos:column="105">(</op:operator><name pos:line="2539" pos:column="106">alpha</name> <op:operator pos:line="2539" pos:column="112">==</op:operator> <name pos:line="2539" pos:column="115">SC_ALPHA_NOALPHA</name><op:operator pos:line="2539" pos:column="131">)</op:operator></expr>)</condition><then pos:line="2539" pos:column="133"> <block pos:line="2539" pos:column="134">{
		<expr_stmt><expr><call><name><name pos:line="2540" pos:column="17">surface</name><op:operator pos:line="2540" pos:column="24">-&gt;</op:operator><name pos:line="2540" pos:column="26">FillRectangle</name></name><argument_list pos:line="2540" pos:column="39">(<argument><expr><name pos:line="2540" pos:column="40">rcSegment</name></expr></argument>, <argument><expr><call><name pos:line="2540" pos:column="51">SelectionBackground</name><argument_list pos:line="2540" pos:column="70">(<argument><expr><name pos:line="2540" pos:column="71">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2540" pos:column="79">eolInSelection</name> <op:operator pos:line="2540" pos:column="94">==</op:operator> <lit:literal type="number" pos:line="2540" pos:column="97">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="2541" pos:column="11">else <block pos:line="2541" pos:column="16">{
		<if pos:line="2542" pos:column="17">if <condition pos:line="2542" pos:column="20">(<expr><name pos:line="2542" pos:column="21">overrideBackground</name></expr>)</condition><then pos:line="2542" pos:column="40"> <block pos:line="2542" pos:column="41">{
			<expr_stmt><expr><call><name><name pos:line="2543" pos:column="25">surface</name><op:operator pos:line="2543" pos:column="32">-&gt;</op:operator><name pos:line="2543" pos:column="34">FillRectangle</name></name><argument_list pos:line="2543" pos:column="47">(<argument><expr><name pos:line="2543" pos:column="48">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2543" pos:column="59">background</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2544" pos:column="19">else <if pos:line="2544" pos:column="24">if <condition pos:line="2544" pos:column="27">(<expr><name pos:line="2544" pos:column="28">line</name> <op:operator pos:line="2544" pos:column="33">&lt;</op:operator> <call><name><name pos:line="2544" pos:column="35">pdoc</name><op:operator pos:line="2544" pos:column="39">-&gt;</op:operator><name pos:line="2544" pos:column="41">LinesTotal</name></name><argument_list pos:line="2544" pos:column="51">()</argument_list></call> <op:operator pos:line="2544" pos:column="54">-</op:operator> <lit:literal type="number" pos:line="2544" pos:column="56">1</lit:literal></expr>)</condition><then pos:line="2544" pos:column="58"> <block pos:line="2544" pos:column="59">{
			<expr_stmt><expr><call><name><name pos:line="2545" pos:column="25">surface</name><op:operator pos:line="2545" pos:column="32">-&gt;</op:operator><name pos:line="2545" pos:column="34">FillRectangle</name></name><argument_list pos:line="2545" pos:column="47">(<argument><expr><name pos:line="2545" pos:column="48">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="2545" pos:column="59">vsDraw</name><op:operator pos:line="2545" pos:column="65">.</op:operator><name pos:line="2545" pos:column="66">styles</name><index pos:line="2545" pos:column="72">[<expr><name><name pos:line="2545" pos:column="73">ll</name><op:operator pos:line="2545" pos:column="75">-&gt;</op:operator><name pos:line="2545" pos:column="77">styles</name><index pos:line="2545" pos:column="83">[<expr><name><name pos:line="2545" pos:column="84">ll</name><op:operator pos:line="2545" pos:column="86">-&gt;</op:operator><name pos:line="2545" pos:column="88">numCharsInLine</name></name></expr>]</index></name> <op:operator pos:line="2545" pos:column="104">&amp;</op:operator> <name pos:line="2545" pos:column="106">styleMask</name></expr>]</index></name><op:operator pos:line="2545" pos:column="116">.</op:operator><name><name pos:line="2545" pos:column="117">back</name><op:operator pos:line="2545" pos:column="121">.</op:operator><name pos:line="2545" pos:column="122">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2546" pos:column="19">else <if pos:line="2546" pos:column="24">if <condition pos:line="2546" pos:column="27">(<expr><name><name pos:line="2546" pos:column="28">vsDraw</name><op:operator pos:line="2546" pos:column="34">.</op:operator><name pos:line="2546" pos:column="35">styles</name><index pos:line="2546" pos:column="41">[<expr><name><name pos:line="2546" pos:column="42">ll</name><op:operator pos:line="2546" pos:column="44">-&gt;</op:operator><name pos:line="2546" pos:column="46">styles</name><index pos:line="2546" pos:column="52">[<expr><name><name pos:line="2546" pos:column="53">ll</name><op:operator pos:line="2546" pos:column="55">-&gt;</op:operator><name pos:line="2546" pos:column="57">numCharsInLine</name></name></expr>]</index></name> <op:operator pos:line="2546" pos:column="73">&amp;</op:operator> <name pos:line="2546" pos:column="75">styleMask</name></expr>]</index></name><op:operator pos:line="2546" pos:column="85">.</op:operator><name pos:line="2546" pos:column="86">eolFilled</name></expr>)</condition><then pos:line="2546" pos:column="96"> <block pos:line="2546" pos:column="97">{
			<expr_stmt><expr><call><name><name pos:line="2547" pos:column="25">surface</name><op:operator pos:line="2547" pos:column="32">-&gt;</op:operator><name pos:line="2547" pos:column="34">FillRectangle</name></name><argument_list pos:line="2547" pos:column="47">(<argument><expr><name pos:line="2547" pos:column="48">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="2547" pos:column="59">vsDraw</name><op:operator pos:line="2547" pos:column="65">.</op:operator><name pos:line="2547" pos:column="66">styles</name><index pos:line="2547" pos:column="72">[<expr><name><name pos:line="2547" pos:column="73">ll</name><op:operator pos:line="2547" pos:column="75">-&gt;</op:operator><name pos:line="2547" pos:column="77">styles</name><index pos:line="2547" pos:column="83">[<expr><name><name pos:line="2547" pos:column="84">ll</name><op:operator pos:line="2547" pos:column="86">-&gt;</op:operator><name pos:line="2547" pos:column="88">numCharsInLine</name></name></expr>]</index></name> <op:operator pos:line="2547" pos:column="104">&amp;</op:operator> <name pos:line="2547" pos:column="106">styleMask</name></expr>]</index></name><op:operator pos:line="2547" pos:column="116">.</op:operator><name><name pos:line="2547" pos:column="117">back</name><op:operator pos:line="2547" pos:column="121">.</op:operator><name pos:line="2547" pos:column="122">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2548" pos:column="19">else <block pos:line="2548" pos:column="24">{
			<expr_stmt><expr><call><name><name pos:line="2549" pos:column="25">surface</name><op:operator pos:line="2549" pos:column="32">-&gt;</op:operator><name pos:line="2549" pos:column="34">FillRectangle</name></name><argument_list pos:line="2549" pos:column="47">(<argument><expr><name pos:line="2549" pos:column="48">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="2549" pos:column="59">vsDraw</name><op:operator pos:line="2549" pos:column="65">.</op:operator><name pos:line="2549" pos:column="66">styles</name><index pos:line="2549" pos:column="72">[<expr><name pos:line="2549" pos:column="73">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="2549" pos:column="87">.</op:operator><name><name pos:line="2549" pos:column="88">back</name><op:operator pos:line="2549" pos:column="92">.</op:operator><name pos:line="2549" pos:column="93">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if></else></if></else></if>
		<if pos:line="2551" pos:column="17">if <condition pos:line="2551" pos:column="20">(<expr><op:operator pos:line="2551" pos:column="21">!</op:operator><name pos:line="2551" pos:column="22">hideSelection</name> <op:operator pos:line="2551" pos:column="36">&amp;&amp;</op:operator> <name pos:line="2551" pos:column="39">eolInSelection</name> <op:operator pos:line="2551" pos:column="54">&amp;&amp;</op:operator> <name><name pos:line="2551" pos:column="57">vsDraw</name><op:operator pos:line="2551" pos:column="63">.</op:operator><name pos:line="2551" pos:column="64">selbackset</name></name> <op:operator pos:line="2551" pos:column="75">&amp;&amp;</op:operator> <op:operator pos:line="2551" pos:column="78">(</op:operator><name pos:line="2551" pos:column="79">line</name> <op:operator pos:line="2551" pos:column="84">&lt;</op:operator> <call><name><name pos:line="2551" pos:column="86">pdoc</name><op:operator pos:line="2551" pos:column="90">-&gt;</op:operator><name pos:line="2551" pos:column="92">LinesTotal</name></name><argument_list pos:line="2551" pos:column="102">()</argument_list></call> <op:operator pos:line="2551" pos:column="105">-</op:operator> <lit:literal type="number" pos:line="2551" pos:column="107">1</lit:literal><op:operator pos:line="2551" pos:column="108">)</op:operator> <op:operator pos:line="2551" pos:column="110">&amp;&amp;</op:operator> <op:operator pos:line="2551" pos:column="113">(</op:operator><name pos:line="2551" pos:column="114">alpha</name> <op:operator pos:line="2551" pos:column="120">!=</op:operator> <name pos:line="2551" pos:column="123">SC_ALPHA_NOALPHA</name><op:operator pos:line="2551" pos:column="139">)</op:operator></expr>)</condition><then pos:line="2551" pos:column="141"> <block pos:line="2551" pos:column="142">{
			<expr_stmt><expr><call><name pos:line="2552" pos:column="25">SimpleAlphaRectangle</name><argument_list pos:line="2552" pos:column="45">(<argument><expr><name pos:line="2552" pos:column="46">surface</name></expr></argument>, <argument><expr><name pos:line="2552" pos:column="55">rcSegment</name></expr></argument>, <argument><expr><call><name pos:line="2552" pos:column="66">SelectionBackground</name><argument_list pos:line="2552" pos:column="85">(<argument><expr><name pos:line="2552" pos:column="86">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2552" pos:column="94">eolInSelection</name> <op:operator pos:line="2552" pos:column="109">==</op:operator> <lit:literal type="number" pos:line="2552" pos:column="112">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2552" pos:column="116">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></else></if>

	<comment type="line" pos:line="2556" pos:column="9">// Fill the remainder of the line</comment>
	<expr_stmt><expr><name><name pos:line="2557" pos:column="9">rcSegment</name><op:operator pos:line="2557" pos:column="18">.</op:operator><name pos:line="2557" pos:column="19">left</name></name> <op:operator pos:line="2557" pos:column="24">=</op:operator> <name pos:line="2557" pos:column="26">xEol</name> <op:operator pos:line="2557" pos:column="31">+</op:operator> <name pos:line="2557" pos:column="33">xStart</name> <op:operator pos:line="2557" pos:column="40">+</op:operator> <name pos:line="2557" pos:column="42">virtualSpace</name> <op:operator pos:line="2557" pos:column="55">+</op:operator> <name pos:line="2557" pos:column="57">blobsWidth</name> <op:operator pos:line="2557" pos:column="68">+</op:operator> <name><name pos:line="2557" pos:column="70">vsDraw</name><op:operator pos:line="2557" pos:column="76">.</op:operator><name pos:line="2557" pos:column="77">aveCharWidth</name></name></expr>;</expr_stmt>
	<if pos:line="2558" pos:column="9">if <condition pos:line="2558" pos:column="12">(<expr><name><name pos:line="2558" pos:column="13">rcSegment</name><op:operator pos:line="2558" pos:column="22">.</op:operator><name pos:line="2558" pos:column="23">left</name></name> <op:operator pos:line="2558" pos:column="28">&lt;</op:operator> <name><name pos:line="2558" pos:column="30">rcLine</name><op:operator pos:line="2558" pos:column="36">.</op:operator><name pos:line="2558" pos:column="37">left</name></name></expr>)</condition><then pos:line="2558" pos:column="42">
		<expr_stmt><expr><name><name pos:line="2559" pos:column="17">rcSegment</name><op:operator pos:line="2559" pos:column="26">.</op:operator><name pos:line="2559" pos:column="27">left</name></name> <op:operator pos:line="2559" pos:column="32">=</op:operator> <name><name pos:line="2559" pos:column="34">rcLine</name><op:operator pos:line="2559" pos:column="40">.</op:operator><name pos:line="2559" pos:column="41">left</name></name></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><name><name pos:line="2560" pos:column="9">rcSegment</name><op:operator pos:line="2560" pos:column="18">.</op:operator><name pos:line="2560" pos:column="19">right</name></name> <op:operator pos:line="2560" pos:column="25">=</op:operator> <name><name pos:line="2560" pos:column="27">rcLine</name><op:operator pos:line="2560" pos:column="33">.</op:operator><name pos:line="2560" pos:column="34">right</name></name></expr>;</expr_stmt>

	<if pos:line="2562" pos:column="9">if <condition pos:line="2562" pos:column="12">(<expr><op:operator pos:line="2562" pos:column="13">!</op:operator><name pos:line="2562" pos:column="14">hideSelection</name> <op:operator pos:line="2562" pos:column="28">&amp;&amp;</op:operator> <name><name pos:line="2562" pos:column="31">vsDraw</name><op:operator pos:line="2562" pos:column="37">.</op:operator><name pos:line="2562" pos:column="38">selEOLFilled</name></name> <op:operator pos:line="2562" pos:column="51">&amp;&amp;</op:operator> <name pos:line="2562" pos:column="54">eolInSelection</name> <op:operator pos:line="2562" pos:column="69">&amp;&amp;</op:operator> <name><name pos:line="2562" pos:column="72">vsDraw</name><op:operator pos:line="2562" pos:column="78">.</op:operator><name pos:line="2562" pos:column="79">selbackset</name></name> <op:operator pos:line="2562" pos:column="90">&amp;&amp;</op:operator> <op:operator pos:line="2562" pos:column="93">(</op:operator><name pos:line="2562" pos:column="94">line</name> <op:operator pos:line="2562" pos:column="99">&lt;</op:operator> <call><name><name pos:line="2562" pos:column="101">pdoc</name><op:operator pos:line="2562" pos:column="105">-&gt;</op:operator><name pos:line="2562" pos:column="107">LinesTotal</name></name><argument_list pos:line="2562" pos:column="117">()</argument_list></call> <op:operator pos:line="2562" pos:column="120">-</op:operator> <lit:literal type="number" pos:line="2562" pos:column="122">1</lit:literal><op:operator pos:line="2562" pos:column="123">)</op:operator> <op:operator pos:line="2562" pos:column="125">&amp;&amp;</op:operator> <op:operator pos:line="2562" pos:column="128">(</op:operator><name pos:line="2562" pos:column="129">alpha</name> <op:operator pos:line="2562" pos:column="135">==</op:operator> <name pos:line="2562" pos:column="138">SC_ALPHA_NOALPHA</name><op:operator pos:line="2562" pos:column="154">)</op:operator></expr>)</condition><then pos:line="2562" pos:column="156"> <block pos:line="2562" pos:column="157">{
		<expr_stmt><expr><call><name><name pos:line="2563" pos:column="17">surface</name><op:operator pos:line="2563" pos:column="24">-&gt;</op:operator><name pos:line="2563" pos:column="26">FillRectangle</name></name><argument_list pos:line="2563" pos:column="39">(<argument><expr><name pos:line="2563" pos:column="40">rcSegment</name></expr></argument>, <argument><expr><call><name pos:line="2563" pos:column="51">SelectionBackground</name><argument_list pos:line="2563" pos:column="70">(<argument><expr><name pos:line="2563" pos:column="71">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2563" pos:column="79">eolInSelection</name> <op:operator pos:line="2563" pos:column="94">==</op:operator> <lit:literal type="number" pos:line="2563" pos:column="97">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="2564" pos:column="11">else <block pos:line="2564" pos:column="16">{
		<if pos:line="2565" pos:column="17">if <condition pos:line="2565" pos:column="20">(<expr><name pos:line="2565" pos:column="21">overrideBackground</name></expr>)</condition><then pos:line="2565" pos:column="40"> <block pos:line="2565" pos:column="41">{
			<expr_stmt><expr><call><name><name pos:line="2566" pos:column="25">surface</name><op:operator pos:line="2566" pos:column="32">-&gt;</op:operator><name pos:line="2566" pos:column="34">FillRectangle</name></name><argument_list pos:line="2566" pos:column="47">(<argument><expr><name pos:line="2566" pos:column="48">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2566" pos:column="59">background</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2567" pos:column="19">else <if pos:line="2567" pos:column="24">if <condition pos:line="2567" pos:column="27">(<expr><name><name pos:line="2567" pos:column="28">vsDraw</name><op:operator pos:line="2567" pos:column="34">.</op:operator><name pos:line="2567" pos:column="35">styles</name><index pos:line="2567" pos:column="41">[<expr><name><name pos:line="2567" pos:column="42">ll</name><op:operator pos:line="2567" pos:column="44">-&gt;</op:operator><name pos:line="2567" pos:column="46">styles</name><index pos:line="2567" pos:column="52">[<expr><name><name pos:line="2567" pos:column="53">ll</name><op:operator pos:line="2567" pos:column="55">-&gt;</op:operator><name pos:line="2567" pos:column="57">numCharsInLine</name></name></expr>]</index></name> <op:operator pos:line="2567" pos:column="73">&amp;</op:operator> <name pos:line="2567" pos:column="75">styleMask</name></expr>]</index></name><op:operator pos:line="2567" pos:column="85">.</op:operator><name pos:line="2567" pos:column="86">eolFilled</name></expr>)</condition><then pos:line="2567" pos:column="96"> <block pos:line="2567" pos:column="97">{
			<expr_stmt><expr><call><name><name pos:line="2568" pos:column="25">surface</name><op:operator pos:line="2568" pos:column="32">-&gt;</op:operator><name pos:line="2568" pos:column="34">FillRectangle</name></name><argument_list pos:line="2568" pos:column="47">(<argument><expr><name pos:line="2568" pos:column="48">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="2568" pos:column="59">vsDraw</name><op:operator pos:line="2568" pos:column="65">.</op:operator><name pos:line="2568" pos:column="66">styles</name><index pos:line="2568" pos:column="72">[<expr><name><name pos:line="2568" pos:column="73">ll</name><op:operator pos:line="2568" pos:column="75">-&gt;</op:operator><name pos:line="2568" pos:column="77">styles</name><index pos:line="2568" pos:column="83">[<expr><name><name pos:line="2568" pos:column="84">ll</name><op:operator pos:line="2568" pos:column="86">-&gt;</op:operator><name pos:line="2568" pos:column="88">numCharsInLine</name></name></expr>]</index></name> <op:operator pos:line="2568" pos:column="104">&amp;</op:operator> <name pos:line="2568" pos:column="106">styleMask</name></expr>]</index></name><op:operator pos:line="2568" pos:column="116">.</op:operator><name><name pos:line="2568" pos:column="117">back</name><op:operator pos:line="2568" pos:column="121">.</op:operator><name pos:line="2568" pos:column="122">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2569" pos:column="19">else <block pos:line="2569" pos:column="24">{
			<expr_stmt><expr><call><name><name pos:line="2570" pos:column="25">surface</name><op:operator pos:line="2570" pos:column="32">-&gt;</op:operator><name pos:line="2570" pos:column="34">FillRectangle</name></name><argument_list pos:line="2570" pos:column="47">(<argument><expr><name pos:line="2570" pos:column="48">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="2570" pos:column="59">vsDraw</name><op:operator pos:line="2570" pos:column="65">.</op:operator><name pos:line="2570" pos:column="66">styles</name><index pos:line="2570" pos:column="72">[<expr><name pos:line="2570" pos:column="73">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="2570" pos:column="87">.</op:operator><name><name pos:line="2570" pos:column="88">back</name><op:operator pos:line="2570" pos:column="92">.</op:operator><name pos:line="2570" pos:column="93">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if></else></if>
		<if pos:line="2572" pos:column="17">if <condition pos:line="2572" pos:column="20">(<expr><op:operator pos:line="2572" pos:column="21">!</op:operator><name pos:line="2572" pos:column="22">hideSelection</name> <op:operator pos:line="2572" pos:column="36">&amp;&amp;</op:operator> <name><name pos:line="2572" pos:column="39">vsDraw</name><op:operator pos:line="2572" pos:column="45">.</op:operator><name pos:line="2572" pos:column="46">selEOLFilled</name></name> <op:operator pos:line="2572" pos:column="59">&amp;&amp;</op:operator> <name pos:line="2572" pos:column="62">eolInSelection</name> <op:operator pos:line="2572" pos:column="77">&amp;&amp;</op:operator> <name><name pos:line="2572" pos:column="80">vsDraw</name><op:operator pos:line="2572" pos:column="86">.</op:operator><name pos:line="2572" pos:column="87">selbackset</name></name> <op:operator pos:line="2572" pos:column="98">&amp;&amp;</op:operator> <op:operator pos:line="2572" pos:column="101">(</op:operator><name pos:line="2572" pos:column="102">line</name> <op:operator pos:line="2572" pos:column="107">&lt;</op:operator> <call><name><name pos:line="2572" pos:column="109">pdoc</name><op:operator pos:line="2572" pos:column="113">-&gt;</op:operator><name pos:line="2572" pos:column="115">LinesTotal</name></name><argument_list pos:line="2572" pos:column="125">()</argument_list></call> <op:operator pos:line="2572" pos:column="128">-</op:operator> <lit:literal type="number" pos:line="2572" pos:column="130">1</lit:literal><op:operator pos:line="2572" pos:column="131">)</op:operator> <op:operator pos:line="2572" pos:column="133">&amp;&amp;</op:operator> <op:operator pos:line="2572" pos:column="136">(</op:operator><name pos:line="2572" pos:column="137">alpha</name> <op:operator pos:line="2572" pos:column="143">!=</op:operator> <name pos:line="2572" pos:column="146">SC_ALPHA_NOALPHA</name><op:operator pos:line="2572" pos:column="162">)</op:operator></expr>)</condition><then pos:line="2572" pos:column="164"> <block pos:line="2572" pos:column="165">{
			<expr_stmt><expr><call><name pos:line="2573" pos:column="25">SimpleAlphaRectangle</name><argument_list pos:line="2573" pos:column="45">(<argument><expr><name pos:line="2573" pos:column="46">surface</name></expr></argument>, <argument><expr><name pos:line="2573" pos:column="55">rcSegment</name></expr></argument>, <argument><expr><call><name pos:line="2573" pos:column="66">SelectionBackground</name><argument_list pos:line="2573" pos:column="85">(<argument><expr><name pos:line="2573" pos:column="86">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2573" pos:column="94">eolInSelection</name> <op:operator pos:line="2573" pos:column="109">==</op:operator> <lit:literal type="number" pos:line="2573" pos:column="112">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2573" pos:column="116">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></else></if>

	<if pos:line="2577" pos:column="9">if <condition pos:line="2577" pos:column="12">(<expr><name pos:line="2577" pos:column="13">drawWrapMarkEnd</name></expr>)</condition><then pos:line="2577" pos:column="29"> <block pos:line="2577" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="2578" pos:column="17">PRectangle</name></type> <name pos:line="2578" pos:column="28">rcPlace</name> <init pos:line="2578" pos:column="36">= <expr><name pos:line="2578" pos:column="38">rcSegment</name></expr></init></decl>;</decl_stmt>

		<if pos:line="2580" pos:column="17">if <condition pos:line="2580" pos:column="20">(<expr><name pos:line="2580" pos:column="21">wrapVisualFlagsLocation</name> <op:operator pos:line="2580" pos:column="45">&amp;</op:operator> <name pos:line="2580" pos:column="47">SC_WRAPVISUALFLAGLOC_END_BY_TEXT</name></expr>)</condition><then pos:line="2580" pos:column="80"> <block pos:line="2580" pos:column="81">{
			<expr_stmt><expr><name><name pos:line="2581" pos:column="25">rcPlace</name><op:operator pos:line="2581" pos:column="32">.</op:operator><name pos:line="2581" pos:column="33">left</name></name> <op:operator pos:line="2581" pos:column="38">=</op:operator> <name pos:line="2581" pos:column="40">xEol</name> <op:operator pos:line="2581" pos:column="45">+</op:operator> <name pos:line="2581" pos:column="47">xStart</name> <op:operator pos:line="2581" pos:column="54">+</op:operator> <name pos:line="2581" pos:column="56">virtualSpace</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2582" pos:column="25">rcPlace</name><op:operator pos:line="2582" pos:column="32">.</op:operator><name pos:line="2582" pos:column="33">right</name></name> <op:operator pos:line="2582" pos:column="39">=</op:operator> <name><name pos:line="2582" pos:column="41">rcPlace</name><op:operator pos:line="2582" pos:column="48">.</op:operator><name pos:line="2582" pos:column="49">left</name></name> <op:operator pos:line="2582" pos:column="54">+</op:operator> <name><name pos:line="2582" pos:column="56">vsDraw</name><op:operator pos:line="2582" pos:column="62">.</op:operator><name pos:line="2582" pos:column="63">aveCharWidth</name></name></expr>;</expr_stmt>
		}</block></then> <else pos:line="2583" pos:column="19">else <block pos:line="2583" pos:column="24">{
			<comment type="line" pos:line="2584" pos:column="25">// draw left of the right text margin, to avoid clipping by the current clip rect</comment>
			<expr_stmt><expr><name><name pos:line="2585" pos:column="25">rcPlace</name><op:operator pos:line="2585" pos:column="32">.</op:operator><name pos:line="2585" pos:column="33">right</name></name> <op:operator pos:line="2585" pos:column="39">=</op:operator> <name><name pos:line="2585" pos:column="41">rcLine</name><op:operator pos:line="2585" pos:column="47">.</op:operator><name pos:line="2585" pos:column="48">right</name></name> <op:operator pos:line="2585" pos:column="54">-</op:operator> <name><name pos:line="2585" pos:column="56">vs</name><op:operator pos:line="2585" pos:column="58">.</op:operator><name pos:line="2585" pos:column="59">rightMarginWidth</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2586" pos:column="25">rcPlace</name><op:operator pos:line="2586" pos:column="32">.</op:operator><name pos:line="2586" pos:column="33">left</name></name> <op:operator pos:line="2586" pos:column="38">=</op:operator> <name><name pos:line="2586" pos:column="40">rcPlace</name><op:operator pos:line="2586" pos:column="47">.</op:operator><name pos:line="2586" pos:column="48">right</name></name> <op:operator pos:line="2586" pos:column="54">-</op:operator> <name><name pos:line="2586" pos:column="56">vsDraw</name><op:operator pos:line="2586" pos:column="62">.</op:operator><name pos:line="2586" pos:column="63">aveCharWidth</name></name></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="2588" pos:column="17">DrawWrapMarker</name><argument_list pos:line="2588" pos:column="31">(<argument><expr><name pos:line="2588" pos:column="32">surface</name></expr></argument>, <argument><expr><name pos:line="2588" pos:column="41">rcPlace</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2588" pos:column="50">true</lit:literal></expr></argument>, <argument><expr><name pos:line="2588" pos:column="56">wrapColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2592" pos:column="1">void</name></type> <name><name pos:line="2592" pos:column="6">Editor</name><op:operator pos:line="2592" pos:column="12">::</op:operator><name pos:line="2592" pos:column="14">DrawIndicator</name></name><parameter_list pos:line="2592" pos:column="27">(<param><decl><type><name pos:line="2592" pos:column="28">int</name></type> <name pos:line="2592" pos:column="32">indicNum</name></decl></param>, <param><decl><type><name pos:line="2592" pos:column="42">int</name></type> <name pos:line="2592" pos:column="46">startPos</name></decl></param>, <param><decl><type><name pos:line="2592" pos:column="56">int</name></type> <name pos:line="2592" pos:column="60">endPos</name></decl></param>, <param><decl><type><name pos:line="2592" pos:column="68">Surface</name> <type:modifier pos:line="2592" pos:column="76">*</type:modifier></type><name pos:line="2592" pos:column="77">surface</name></decl></param>, <param><decl><type><name pos:line="2592" pos:column="86">ViewStyle</name> <type:modifier pos:line="2592" pos:column="96">&amp;</type:modifier></type><name pos:line="2592" pos:column="97">vsDraw</name></decl></param>,
		<param><decl><type><name pos:line="2593" pos:column="17">int</name></type> <name pos:line="2593" pos:column="21">xStart</name></decl></param>, <param><decl><type><name pos:line="2593" pos:column="29">PRectangle</name></type> <name pos:line="2593" pos:column="40">rcLine</name></decl></param>, <param><decl><type><name pos:line="2593" pos:column="48">LineLayout</name> <type:modifier pos:line="2593" pos:column="59">*</type:modifier></type><name pos:line="2593" pos:column="60">ll</name></decl></param>, <param><decl><type><name pos:line="2593" pos:column="64">int</name></type> <name pos:line="2593" pos:column="68">subLine</name></decl></param>)</parameter_list> <block pos:line="2593" pos:column="77">{
	<decl_stmt><decl><type><specifier pos:line="2594" pos:column="9">const</specifier> <name pos:line="2594" pos:column="15">int</name></type> <name pos:line="2594" pos:column="19">subLineStart</name> <init pos:line="2594" pos:column="32">= <expr><name><name pos:line="2594" pos:column="34">ll</name><op:operator pos:line="2594" pos:column="36">-&gt;</op:operator><name pos:line="2594" pos:column="38">positions</name><index pos:line="2594" pos:column="47">[<expr><call><name><name pos:line="2594" pos:column="48">ll</name><op:operator pos:line="2594" pos:column="50">-&gt;</op:operator><name pos:line="2594" pos:column="52">LineStart</name></name><argument_list pos:line="2594" pos:column="61">(<argument><expr><name pos:line="2594" pos:column="62">subLine</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2595" pos:column="9">PRectangle</name></type> <name pos:line="2595" pos:column="20">rcIndic</name><argument_list pos:line="2595" pos:column="27">(
		<argument><expr><name><name pos:line="2596" pos:column="17">ll</name><op:operator pos:line="2596" pos:column="19">-&gt;</op:operator><name pos:line="2596" pos:column="21">positions</name><index pos:line="2596" pos:column="30">[<expr><name pos:line="2596" pos:column="31">startPos</name></expr>]</index></name> <op:operator pos:line="2596" pos:column="41">+</op:operator> <name pos:line="2596" pos:column="43">xStart</name> <op:operator pos:line="2596" pos:column="50">-</op:operator> <name pos:line="2596" pos:column="52">subLineStart</name></expr></argument>,
		<argument><expr><name><name pos:line="2597" pos:column="17">rcLine</name><op:operator pos:line="2597" pos:column="23">.</op:operator><name pos:line="2597" pos:column="24">top</name></name> <op:operator pos:line="2597" pos:column="28">+</op:operator> <name><name pos:line="2597" pos:column="30">vsDraw</name><op:operator pos:line="2597" pos:column="36">.</op:operator><name pos:line="2597" pos:column="37">maxAscent</name></name></expr></argument>,
		<argument><expr><name><name pos:line="2598" pos:column="17">ll</name><op:operator pos:line="2598" pos:column="19">-&gt;</op:operator><name pos:line="2598" pos:column="21">positions</name><index pos:line="2598" pos:column="30">[<expr><name pos:line="2598" pos:column="31">endPos</name></expr>]</index></name> <op:operator pos:line="2598" pos:column="39">+</op:operator> <name pos:line="2598" pos:column="41">xStart</name> <op:operator pos:line="2598" pos:column="48">-</op:operator> <name pos:line="2598" pos:column="50">subLineStart</name></expr></argument>,
		<argument><expr><name><name pos:line="2599" pos:column="17">rcLine</name><op:operator pos:line="2599" pos:column="23">.</op:operator><name pos:line="2599" pos:column="24">top</name></name> <op:operator pos:line="2599" pos:column="28">+</op:operator> <name><name pos:line="2599" pos:column="30">vsDraw</name><op:operator pos:line="2599" pos:column="36">.</op:operator><name pos:line="2599" pos:column="37">maxAscent</name></name> <op:operator pos:line="2599" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="2599" pos:column="49">3</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="2600" pos:column="9">vsDraw</name><op:operator pos:line="2600" pos:column="15">.</op:operator><name pos:line="2600" pos:column="16">indicators</name><index pos:line="2600" pos:column="26">[<expr><name pos:line="2600" pos:column="27">indicNum</name></expr>]</index></name><op:operator pos:line="2600" pos:column="36">.</op:operator><call><name pos:line="2600" pos:column="37">Draw</name><argument_list pos:line="2600" pos:column="41">(<argument><expr><name pos:line="2600" pos:column="42">surface</name></expr></argument>, <argument><expr><name pos:line="2600" pos:column="51">rcIndic</name></expr></argument>, <argument><expr><name pos:line="2600" pos:column="60">rcLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2603" pos:column="1">void</name></type> <name><name pos:line="2603" pos:column="6">Editor</name><op:operator pos:line="2603" pos:column="12">::</op:operator><name pos:line="2603" pos:column="14">DrawIndicators</name></name><parameter_list pos:line="2603" pos:column="28">(<param><decl><type><name pos:line="2603" pos:column="29">Surface</name> <type:modifier pos:line="2603" pos:column="37">*</type:modifier></type><name pos:line="2603" pos:column="38">surface</name></decl></param>, <param><decl><type><name pos:line="2603" pos:column="47">ViewStyle</name> <type:modifier pos:line="2603" pos:column="57">&amp;</type:modifier></type><name pos:line="2603" pos:column="58">vsDraw</name></decl></param>, <param><decl><type><name pos:line="2603" pos:column="66">int</name></type> <name pos:line="2603" pos:column="70">line</name></decl></param>, <param><decl><type><name pos:line="2603" pos:column="76">int</name></type> <name pos:line="2603" pos:column="80">xStart</name></decl></param>,
        <param><decl><type><name pos:line="2604" pos:column="9">PRectangle</name></type> <name pos:line="2604" pos:column="20">rcLine</name></decl></param>, <param><decl><type><name pos:line="2604" pos:column="28">LineLayout</name> <type:modifier pos:line="2604" pos:column="39">*</type:modifier></type><name pos:line="2604" pos:column="40">ll</name></decl></param>, <param><decl><type><name pos:line="2604" pos:column="44">int</name></type> <name pos:line="2604" pos:column="48">subLine</name></decl></param>, <param><decl><type><name pos:line="2604" pos:column="57">int</name></type> <name pos:line="2604" pos:column="61">lineEnd</name></decl></param>, <param><decl><type><name pos:line="2604" pos:column="70">bool</name></type> <name pos:line="2604" pos:column="75">under</name></decl></param>)</parameter_list> <block pos:line="2604" pos:column="82">{
	<comment type="line" pos:line="2605" pos:column="9">// Draw decorators</comment>
	<decl_stmt><decl><type><specifier pos:line="2606" pos:column="9">const</specifier> <name pos:line="2606" pos:column="15">int</name></type> <name pos:line="2606" pos:column="19">posLineStart</name> <init pos:line="2606" pos:column="32">= <expr><call><name><name pos:line="2606" pos:column="34">pdoc</name><op:operator pos:line="2606" pos:column="38">-&gt;</op:operator><name pos:line="2606" pos:column="40">LineStart</name></name><argument_list pos:line="2606" pos:column="49">(<argument><expr><name pos:line="2606" pos:column="50">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2607" pos:column="9">const</specifier> <name pos:line="2607" pos:column="15">int</name></type> <name pos:line="2607" pos:column="19">lineStart</name> <init pos:line="2607" pos:column="29">= <expr><call><name><name pos:line="2607" pos:column="31">ll</name><op:operator pos:line="2607" pos:column="33">-&gt;</op:operator><name pos:line="2607" pos:column="35">LineStart</name></name><argument_list pos:line="2607" pos:column="44">(<argument><expr><name pos:line="2607" pos:column="45">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2608" pos:column="9">const</specifier> <name pos:line="2608" pos:column="15">int</name></type> <name pos:line="2608" pos:column="19">posLineEnd</name> <init pos:line="2608" pos:column="30">= <expr><name pos:line="2608" pos:column="32">posLineStart</name> <op:operator pos:line="2608" pos:column="45">+</op:operator> <name pos:line="2608" pos:column="47">lineEnd</name></expr></init></decl>;</decl_stmt>

	<if pos:line="2610" pos:column="9">if <condition pos:line="2610" pos:column="12">(<expr><op:operator pos:line="2610" pos:column="13">!</op:operator><name pos:line="2610" pos:column="14">under</name></expr>)</condition><then pos:line="2610" pos:column="20"> <block pos:line="2610" pos:column="21">{
		<comment type="line" pos:line="2611" pos:column="17">// Draw indicators</comment>
		<comment type="line" pos:line="2612" pos:column="17">// foreach indicator...</comment>
		<for pos:line="2613" pos:column="17">for (<init><decl><type><name pos:line="2613" pos:column="22">int</name></type> <name pos:line="2613" pos:column="26">indicnum</name> <init pos:line="2613" pos:column="35">= <expr><lit:literal type="number" pos:line="2613" pos:column="37">0</lit:literal></expr></init><op:operator pos:line="2613" pos:column="38">,</op:operator> <name pos:line="2613" pos:column="40">mask</name> <init pos:line="2613" pos:column="45">= <expr><lit:literal type="number" pos:line="2613" pos:column="47">1</lit:literal> <op:operator pos:line="2613" pos:column="49">&lt;&lt;</op:operator> <name><name pos:line="2613" pos:column="52">pdoc</name><op:operator pos:line="2613" pos:column="56">-&gt;</op:operator><name pos:line="2613" pos:column="58">stylingBits</name></name></expr></init></decl>;</init> <condition><expr><name pos:line="2613" pos:column="71">mask</name> <op:operator pos:line="2613" pos:column="76">&lt;</op:operator> <lit:literal type="number" pos:line="2613" pos:column="78">0x100</lit:literal></expr>;</condition> <incr><expr><name pos:line="2613" pos:column="85">indicnum</name><op:operator pos:line="2613" pos:column="93">++</op:operator></expr></incr>) <block pos:line="2613" pos:column="97">{
			<if pos:line="2614" pos:column="25">if <condition pos:line="2614" pos:column="28">(<expr><op:operator pos:line="2614" pos:column="29">!</op:operator><op:operator pos:line="2614" pos:column="30">(</op:operator><name pos:line="2614" pos:column="31">mask</name> <op:operator pos:line="2614" pos:column="36">&amp;</op:operator> <name><name pos:line="2614" pos:column="38">ll</name><op:operator pos:line="2614" pos:column="40">-&gt;</op:operator><name pos:line="2614" pos:column="42">styleBitsSet</name></name><op:operator pos:line="2614" pos:column="54">)</op:operator></expr>)</condition><then pos:line="2614" pos:column="56"> <block pos:line="2614" pos:column="57">{
				<expr_stmt><expr><name pos:line="2615" pos:column="33">mask</name> <op:operator pos:line="2615" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="2615" pos:column="42">1</lit:literal></expr>;</expr_stmt>
				<continue pos:line="2616" pos:column="33">continue;</continue>
			}</block></then></if>
			<decl_stmt><decl><type><name pos:line="2618" pos:column="25">int</name></type> <name pos:line="2618" pos:column="29">startPos</name> <init pos:line="2618" pos:column="38">= <expr><op:operator pos:line="2618" pos:column="40">-</op:operator><lit:literal type="number" pos:line="2618" pos:column="41">1</lit:literal></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="2619" pos:column="25">// foreach style pos in line...</comment>
			<for pos:line="2620" pos:column="25">for (<init><decl><type><name pos:line="2620" pos:column="30">int</name></type> <name pos:line="2620" pos:column="34">indicPos</name> <init pos:line="2620" pos:column="43">= <expr><name pos:line="2620" pos:column="45">lineStart</name></expr></init></decl>;</init> <condition><expr><name pos:line="2620" pos:column="56">indicPos</name> <op:operator pos:line="2620" pos:column="65">&lt;=</op:operator> <name pos:line="2620" pos:column="68">lineEnd</name></expr>;</condition> <incr><expr><name pos:line="2620" pos:column="77">indicPos</name><op:operator pos:line="2620" pos:column="85">++</op:operator></expr></incr>) <block pos:line="2620" pos:column="89">{
				<comment type="line" pos:line="2621" pos:column="33">// look for starts...</comment>
				<if pos:line="2622" pos:column="33">if <condition pos:line="2622" pos:column="36">(<expr><name pos:line="2622" pos:column="37">startPos</name> <op:operator pos:line="2622" pos:column="46">&lt;</op:operator> <lit:literal type="number" pos:line="2622" pos:column="48">0</lit:literal></expr>)</condition><then pos:line="2622" pos:column="50"> <block pos:line="2622" pos:column="51">{
					<comment type="line" pos:line="2623" pos:column="41">// NOT in indicator run, looking for START</comment>
					<if pos:line="2624" pos:column="41">if <condition pos:line="2624" pos:column="44">(<expr><name pos:line="2624" pos:column="45">indicPos</name> <op:operator pos:line="2624" pos:column="54">&lt;</op:operator> <name pos:line="2624" pos:column="56">lineEnd</name> <op:operator pos:line="2624" pos:column="64">&amp;&amp;</op:operator> <op:operator pos:line="2624" pos:column="67">(</op:operator><name><name pos:line="2624" pos:column="68">ll</name><op:operator pos:line="2624" pos:column="70">-&gt;</op:operator><name pos:line="2624" pos:column="72">indicators</name><index pos:line="2624" pos:column="82">[<expr><name pos:line="2624" pos:column="83">indicPos</name></expr>]</index></name> <op:operator pos:line="2624" pos:column="93">&amp;</op:operator> <name pos:line="2624" pos:column="95">mask</name><op:operator pos:line="2624" pos:column="99">)</op:operator></expr>)</condition><then pos:line="2624" pos:column="101">
						<expr_stmt><expr><name pos:line="2625" pos:column="49">startPos</name> <op:operator pos:line="2625" pos:column="58">=</op:operator> <name pos:line="2625" pos:column="60">indicPos</name></expr>;</expr_stmt></then></if>
				}</block></then></if>
				<comment type="line" pos:line="2627" pos:column="33">// ... or ends</comment>
				<if pos:line="2628" pos:column="33">if <condition pos:line="2628" pos:column="36">(<expr><name pos:line="2628" pos:column="37">startPos</name> <op:operator pos:line="2628" pos:column="46">&gt;=</op:operator> <lit:literal type="number" pos:line="2628" pos:column="49">0</lit:literal></expr>)</condition><then pos:line="2628" pos:column="51"> <block pos:line="2628" pos:column="52">{
					<comment type="line" pos:line="2629" pos:column="41">// IN indicator run, looking for END</comment>
					<if pos:line="2630" pos:column="41">if <condition pos:line="2630" pos:column="44">(<expr><name pos:line="2630" pos:column="45">indicPos</name> <op:operator pos:line="2630" pos:column="54">&gt;=</op:operator> <name pos:line="2630" pos:column="57">lineEnd</name> <op:operator pos:line="2630" pos:column="65">||</op:operator> <op:operator pos:line="2630" pos:column="68">!</op:operator><op:operator pos:line="2630" pos:column="69">(</op:operator><name><name pos:line="2630" pos:column="70">ll</name><op:operator pos:line="2630" pos:column="72">-&gt;</op:operator><name pos:line="2630" pos:column="74">indicators</name><index pos:line="2630" pos:column="84">[<expr><name pos:line="2630" pos:column="85">indicPos</name></expr>]</index></name> <op:operator pos:line="2630" pos:column="95">&amp;</op:operator> <name pos:line="2630" pos:column="97">mask</name><op:operator pos:line="2630" pos:column="101">)</op:operator></expr>)</condition><then pos:line="2630" pos:column="103"> <block pos:line="2630" pos:column="104">{
						<comment type="line" pos:line="2631" pos:column="49">// AT end of indicator run, DRAW it!</comment>
						<expr_stmt><expr><call><name pos:line="2632" pos:column="49">DrawIndicator</name><argument_list pos:line="2632" pos:column="62">(<argument><expr><name pos:line="2632" pos:column="63">indicnum</name></expr></argument>, <argument><expr><name pos:line="2632" pos:column="73">startPos</name></expr></argument>, <argument><expr><name pos:line="2632" pos:column="83">indicPos</name></expr></argument>, <argument><expr><name pos:line="2632" pos:column="93">surface</name></expr></argument>, <argument><expr><name pos:line="2632" pos:column="102">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2632" pos:column="110">xStart</name></expr></argument>, <argument><expr><name pos:line="2632" pos:column="118">rcLine</name></expr></argument>, <argument><expr><name pos:line="2632" pos:column="126">ll</name></expr></argument>, <argument><expr><name pos:line="2632" pos:column="130">subLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="2633" pos:column="49">// RESET control var</comment>
						<expr_stmt><expr><name pos:line="2634" pos:column="49">startPos</name> <op:operator pos:line="2634" pos:column="58">=</op:operator> <op:operator pos:line="2634" pos:column="60">-</op:operator><lit:literal type="number" pos:line="2634" pos:column="61">1</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then></if>
			}</block></for>
			<expr_stmt><expr><name pos:line="2638" pos:column="25">mask</name> <op:operator pos:line="2638" pos:column="30">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="2638" pos:column="34">1</lit:literal></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>

	<for pos:line="2642" pos:column="9">for (<init><decl><type><name pos:line="2642" pos:column="14">Decoration</name> <type:modifier pos:line="2642" pos:column="25">*</type:modifier></type><name pos:line="2642" pos:column="26">deco</name> <init pos:line="2642" pos:column="31">= <expr><name><name pos:line="2642" pos:column="33">pdoc</name><op:operator pos:line="2642" pos:column="37">-&gt;</op:operator><name pos:line="2642" pos:column="39">decorations</name><op:operator pos:line="2642" pos:column="50">.</op:operator><name pos:line="2642" pos:column="51">root</name></name></expr></init></decl>;</init> <condition><expr><name pos:line="2642" pos:column="57">deco</name></expr>;</condition> <incr><expr><name pos:line="2642" pos:column="63">deco</name> <op:operator pos:line="2642" pos:column="68">=</op:operator> <name><name pos:line="2642" pos:column="70">deco</name><op:operator pos:line="2642" pos:column="74">-&gt;</op:operator><name pos:line="2642" pos:column="76">next</name></name></expr></incr>) <block pos:line="2642" pos:column="82">{
		<if pos:line="2643" pos:column="17">if <condition pos:line="2643" pos:column="20">(<expr><name pos:line="2643" pos:column="21">under</name> <op:operator pos:line="2643" pos:column="27">==</op:operator> <name><name pos:line="2643" pos:column="30">vsDraw</name><op:operator pos:line="2643" pos:column="36">.</op:operator><name pos:line="2643" pos:column="37">indicators</name><index pos:line="2643" pos:column="47">[<expr><name><name pos:line="2643" pos:column="48">deco</name><op:operator pos:line="2643" pos:column="52">-&gt;</op:operator><name pos:line="2643" pos:column="54">indicator</name></name></expr>]</index></name><op:operator pos:line="2643" pos:column="64">.</op:operator><name pos:line="2643" pos:column="65">under</name></expr>)</condition><then pos:line="2643" pos:column="71"> <block pos:line="2643" pos:column="72">{
			<decl_stmt><decl><type><name pos:line="2644" pos:column="25">int</name></type> <name pos:line="2644" pos:column="29">startPos</name> <init pos:line="2644" pos:column="38">= <expr><name pos:line="2644" pos:column="40">posLineStart</name> <op:operator pos:line="2644" pos:column="53">+</op:operator> <name pos:line="2644" pos:column="55">lineStart</name></expr></init></decl>;</decl_stmt>
			<if pos:line="2645" pos:column="25">if <condition pos:line="2645" pos:column="28">(<expr><op:operator pos:line="2645" pos:column="29">!</op:operator><call><name><name pos:line="2645" pos:column="30">deco</name><op:operator pos:line="2645" pos:column="34">-&gt;</op:operator><name pos:line="2645" pos:column="36">rs</name><op:operator pos:line="2645" pos:column="38">.</op:operator><name pos:line="2645" pos:column="39">ValueAt</name></name><argument_list pos:line="2645" pos:column="46">(<argument><expr><name pos:line="2645" pos:column="47">startPos</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2645" pos:column="57"> <block pos:line="2645" pos:column="58">{
				<expr_stmt><expr><name pos:line="2646" pos:column="33">startPos</name> <op:operator pos:line="2646" pos:column="42">=</op:operator> <call><name><name pos:line="2646" pos:column="44">deco</name><op:operator pos:line="2646" pos:column="48">-&gt;</op:operator><name pos:line="2646" pos:column="50">rs</name><op:operator pos:line="2646" pos:column="52">.</op:operator><name pos:line="2646" pos:column="53">EndRun</name></name><argument_list pos:line="2646" pos:column="59">(<argument><expr><name pos:line="2646" pos:column="60">startPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<while pos:line="2648" pos:column="25">while <condition pos:line="2648" pos:column="31">(<expr><op:operator pos:line="2648" pos:column="32">(</op:operator><name pos:line="2648" pos:column="33">startPos</name> <op:operator pos:line="2648" pos:column="42">&lt;</op:operator> <name pos:line="2648" pos:column="44">posLineEnd</name><op:operator pos:line="2648" pos:column="54">)</op:operator> <op:operator pos:line="2648" pos:column="56">&amp;&amp;</op:operator> <op:operator pos:line="2648" pos:column="59">(</op:operator><call><name><name pos:line="2648" pos:column="60">deco</name><op:operator pos:line="2648" pos:column="64">-&gt;</op:operator><name pos:line="2648" pos:column="66">rs</name><op:operator pos:line="2648" pos:column="68">.</op:operator><name pos:line="2648" pos:column="69">ValueAt</name></name><argument_list pos:line="2648" pos:column="76">(<argument><expr><name pos:line="2648" pos:column="77">startPos</name></expr></argument>)</argument_list></call><op:operator pos:line="2648" pos:column="86">)</op:operator></expr>)</condition> <block pos:line="2648" pos:column="89">{
				<decl_stmt><decl><type><name pos:line="2649" pos:column="33">int</name></type> <name pos:line="2649" pos:column="37">endPos</name> <init pos:line="2649" pos:column="44">= <expr><call><name><name pos:line="2649" pos:column="46">deco</name><op:operator pos:line="2649" pos:column="50">-&gt;</op:operator><name pos:line="2649" pos:column="52">rs</name><op:operator pos:line="2649" pos:column="54">.</op:operator><name pos:line="2649" pos:column="55">EndRun</name></name><argument_list pos:line="2649" pos:column="61">(<argument><expr><name pos:line="2649" pos:column="62">startPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="2650" pos:column="33">if <condition pos:line="2650" pos:column="36">(<expr><name pos:line="2650" pos:column="37">endPos</name> <op:operator pos:line="2650" pos:column="44">&gt;</op:operator> <name pos:line="2650" pos:column="46">posLineEnd</name></expr>)</condition><then pos:line="2650" pos:column="57">
					<expr_stmt><expr><name pos:line="2651" pos:column="41">endPos</name> <op:operator pos:line="2651" pos:column="48">=</op:operator> <name pos:line="2651" pos:column="50">posLineEnd</name></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><call><name pos:line="2652" pos:column="33">DrawIndicator</name><argument_list pos:line="2652" pos:column="46">(<argument><expr><name><name pos:line="2652" pos:column="47">deco</name><op:operator pos:line="2652" pos:column="51">-&gt;</op:operator><name pos:line="2652" pos:column="53">indicator</name></name></expr></argument>, <argument><expr><name pos:line="2652" pos:column="64">startPos</name> <op:operator pos:line="2652" pos:column="73">-</op:operator> <name pos:line="2652" pos:column="75">posLineStart</name></expr></argument>, <argument><expr><name pos:line="2652" pos:column="89">endPos</name> <op:operator pos:line="2652" pos:column="96">-</op:operator> <name pos:line="2652" pos:column="98">posLineStart</name></expr></argument>,
					<argument><expr><name pos:line="2653" pos:column="41">surface</name></expr></argument>, <argument><expr><name pos:line="2653" pos:column="50">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2653" pos:column="58">xStart</name></expr></argument>, <argument><expr><name pos:line="2653" pos:column="66">rcLine</name></expr></argument>, <argument><expr><name pos:line="2653" pos:column="74">ll</name></expr></argument>, <argument><expr><name pos:line="2653" pos:column="78">subLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="2654" pos:column="33">startPos</name> <op:operator pos:line="2654" pos:column="42">=</op:operator> <call><name><name pos:line="2654" pos:column="44">deco</name><op:operator pos:line="2654" pos:column="48">-&gt;</op:operator><name pos:line="2654" pos:column="50">rs</name><op:operator pos:line="2654" pos:column="52">.</op:operator><name pos:line="2654" pos:column="53">EndRun</name></name><argument_list pos:line="2654" pos:column="59">(<argument><expr><name pos:line="2654" pos:column="60">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></while>
		}</block></then></if>
	}</block></for>

	<comment type="line" pos:line="2659" pos:column="9">// Use indicators to highlight matching braces</comment>
	<if pos:line="2660" pos:column="9">if <condition pos:line="2660" pos:column="12">(<expr><op:operator pos:line="2660" pos:column="13">(</op:operator><name><name pos:line="2660" pos:column="14">vs</name><op:operator pos:line="2660" pos:column="16">.</op:operator><name pos:line="2660" pos:column="17">braceHighlightIndicatorSet</name></name> <op:operator pos:line="2660" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="2660" pos:column="47">(</op:operator><name pos:line="2660" pos:column="48">bracesMatchStyle</name> <op:operator pos:line="2660" pos:column="65">==</op:operator> <name pos:line="2660" pos:column="68">STYLE_BRACELIGHT</name><op:operator pos:line="2660" pos:column="84">)</op:operator><op:operator pos:line="2660" pos:column="85">)</op:operator> <op:operator pos:line="2660" pos:column="87">||</op:operator>
		<op:operator pos:line="2661" pos:column="17">(</op:operator><name><name pos:line="2661" pos:column="18">vs</name><op:operator pos:line="2661" pos:column="20">.</op:operator><name pos:line="2661" pos:column="21">braceBadLightIndicatorSet</name></name> <op:operator pos:line="2661" pos:column="47">&amp;&amp;</op:operator> <op:operator pos:line="2661" pos:column="50">(</op:operator><name pos:line="2661" pos:column="51">bracesMatchStyle</name> <op:operator pos:line="2661" pos:column="68">==</op:operator> <name pos:line="2661" pos:column="71">STYLE_BRACEBAD</name><op:operator pos:line="2661" pos:column="85">)</op:operator><op:operator pos:line="2661" pos:column="86">)</op:operator></expr>)</condition><then pos:line="2661" pos:column="88"> <block pos:line="2661" pos:column="89">{
		<decl_stmt><decl><type><name pos:line="2662" pos:column="17">int</name></type> <name pos:line="2662" pos:column="21">braceIndicator</name> <init pos:line="2662" pos:column="36">= <expr><op:operator pos:line="2662" pos:column="38">(</op:operator><name pos:line="2662" pos:column="39">bracesMatchStyle</name> <op:operator pos:line="2662" pos:column="56">==</op:operator> <name pos:line="2662" pos:column="59">STYLE_BRACELIGHT</name><op:operator pos:line="2662" pos:column="75">)</op:operator> <op:operator pos:line="2662" pos:column="77">?</op:operator> <name><name pos:line="2662" pos:column="79">vs</name><op:operator pos:line="2662" pos:column="81">.</op:operator><name pos:line="2662" pos:column="82">braceHighlightIndicator</name></name> <op:operator pos:line="2662" pos:column="106">:</op:operator> <name><name pos:line="2662" pos:column="108">vs</name><op:operator pos:line="2662" pos:column="110">.</op:operator><name pos:line="2662" pos:column="111">braceBadLightIndicator</name></name></expr></init></decl>;</decl_stmt>
		<if pos:line="2663" pos:column="17">if <condition pos:line="2663" pos:column="20">(<expr><name pos:line="2663" pos:column="21">under</name> <op:operator pos:line="2663" pos:column="27">==</op:operator> <name><name pos:line="2663" pos:column="30">vsDraw</name><op:operator pos:line="2663" pos:column="36">.</op:operator><name pos:line="2663" pos:column="37">indicators</name><index pos:line="2663" pos:column="47">[<expr><name pos:line="2663" pos:column="48">braceIndicator</name></expr>]</index></name><op:operator pos:line="2663" pos:column="63">.</op:operator><name pos:line="2663" pos:column="64">under</name></expr>)</condition><then pos:line="2663" pos:column="70"> <block pos:line="2663" pos:column="71">{
			<decl_stmt><decl><type><name pos:line="2664" pos:column="25">Range</name></type> <name pos:line="2664" pos:column="31">rangeLine</name><argument_list pos:line="2664" pos:column="40">(<argument><expr><name pos:line="2664" pos:column="41">posLineStart</name> <op:operator pos:line="2664" pos:column="54">+</op:operator> <name pos:line="2664" pos:column="56">lineStart</name></expr></argument>, <argument><expr><name pos:line="2664" pos:column="67">posLineEnd</name></expr></argument>)</argument_list></decl>;</decl_stmt>
			<if pos:line="2665" pos:column="25">if <condition pos:line="2665" pos:column="28">(<expr><call><name><name pos:line="2665" pos:column="29">rangeLine</name><op:operator pos:line="2665" pos:column="38">.</op:operator><name pos:line="2665" pos:column="39">ContainsCharacter</name></name><argument_list pos:line="2665" pos:column="56">(<argument><expr><name><name pos:line="2665" pos:column="57">braces</name><index pos:line="2665" pos:column="63">[<expr><lit:literal type="number" pos:line="2665" pos:column="64">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2665" pos:column="68"> <block pos:line="2665" pos:column="69">{
				<decl_stmt><decl><type><name pos:line="2666" pos:column="33">int</name></type> <name pos:line="2666" pos:column="37">braceOffset</name> <init pos:line="2666" pos:column="49">= <expr><name><name pos:line="2666" pos:column="51">braces</name><index pos:line="2666" pos:column="57">[<expr><lit:literal type="number" pos:line="2666" pos:column="58">0</lit:literal></expr>]</index></name> <op:operator pos:line="2666" pos:column="61">-</op:operator> <name pos:line="2666" pos:column="63">posLineStart</name></expr></init></decl>;</decl_stmt>
				<if pos:line="2667" pos:column="33">if <condition pos:line="2667" pos:column="36">(<expr><name pos:line="2667" pos:column="37">braceOffset</name> <op:operator pos:line="2667" pos:column="49">&lt;</op:operator> <name><name pos:line="2667" pos:column="51">ll</name><op:operator pos:line="2667" pos:column="53">-&gt;</op:operator><name pos:line="2667" pos:column="55">numCharsInLine</name></name></expr>)</condition><then pos:line="2667" pos:column="70"> <block pos:line="2667" pos:column="71">{
					<expr_stmt><expr><call><name pos:line="2668" pos:column="41">DrawIndicator</name><argument_list pos:line="2668" pos:column="54">(<argument><expr><name pos:line="2668" pos:column="55">braceIndicator</name></expr></argument>, <argument><expr><name pos:line="2668" pos:column="71">braceOffset</name></expr></argument>, <argument><expr><name pos:line="2668" pos:column="84">braceOffset</name> <op:operator pos:line="2668" pos:column="96">+</op:operator> <lit:literal type="number" pos:line="2668" pos:column="98">1</lit:literal></expr></argument>, <argument><expr><name pos:line="2668" pos:column="101">surface</name></expr></argument>, <argument><expr><name pos:line="2668" pos:column="110">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2668" pos:column="118">xStart</name></expr></argument>, <argument><expr><name pos:line="2668" pos:column="126">rcLine</name></expr></argument>, <argument><expr><name pos:line="2668" pos:column="134">ll</name></expr></argument>, <argument><expr><name pos:line="2668" pos:column="138">subLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<if pos:line="2671" pos:column="25">if <condition pos:line="2671" pos:column="28">(<expr><call><name><name pos:line="2671" pos:column="29">rangeLine</name><op:operator pos:line="2671" pos:column="38">.</op:operator><name pos:line="2671" pos:column="39">ContainsCharacter</name></name><argument_list pos:line="2671" pos:column="56">(<argument><expr><name><name pos:line="2671" pos:column="57">braces</name><index pos:line="2671" pos:column="63">[<expr><lit:literal type="number" pos:line="2671" pos:column="64">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2671" pos:column="68"> <block pos:line="2671" pos:column="69">{
				<decl_stmt><decl><type><name pos:line="2672" pos:column="33">int</name></type> <name pos:line="2672" pos:column="37">braceOffset</name> <init pos:line="2672" pos:column="49">= <expr><name><name pos:line="2672" pos:column="51">braces</name><index pos:line="2672" pos:column="57">[<expr><lit:literal type="number" pos:line="2672" pos:column="58">1</lit:literal></expr>]</index></name> <op:operator pos:line="2672" pos:column="61">-</op:operator> <name pos:line="2672" pos:column="63">posLineStart</name></expr></init></decl>;</decl_stmt>
				<if pos:line="2673" pos:column="33">if <condition pos:line="2673" pos:column="36">(<expr><name pos:line="2673" pos:column="37">braceOffset</name> <op:operator pos:line="2673" pos:column="49">&lt;</op:operator> <name><name pos:line="2673" pos:column="51">ll</name><op:operator pos:line="2673" pos:column="53">-&gt;</op:operator><name pos:line="2673" pos:column="55">numCharsInLine</name></name></expr>)</condition><then pos:line="2673" pos:column="70"> <block pos:line="2673" pos:column="71">{
					<expr_stmt><expr><call><name pos:line="2674" pos:column="41">DrawIndicator</name><argument_list pos:line="2674" pos:column="54">(<argument><expr><name pos:line="2674" pos:column="55">braceIndicator</name></expr></argument>, <argument><expr><name pos:line="2674" pos:column="71">braceOffset</name></expr></argument>, <argument><expr><name pos:line="2674" pos:column="84">braceOffset</name> <op:operator pos:line="2674" pos:column="96">+</op:operator> <lit:literal type="number" pos:line="2674" pos:column="98">1</lit:literal></expr></argument>, <argument><expr><name pos:line="2674" pos:column="101">surface</name></expr></argument>, <argument><expr><name pos:line="2674" pos:column="110">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2674" pos:column="118">xStart</name></expr></argument>, <argument><expr><name pos:line="2674" pos:column="126">rcLine</name></expr></argument>, <argument><expr><name pos:line="2674" pos:column="134">ll</name></expr></argument>, <argument><expr><name pos:line="2674" pos:column="138">subLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2681" pos:column="1">void</name></type> <name><name pos:line="2681" pos:column="6">Editor</name><op:operator pos:line="2681" pos:column="12">::</op:operator><name pos:line="2681" pos:column="14">DrawAnnotation</name></name><parameter_list pos:line="2681" pos:column="28">(<param><decl><type><name pos:line="2681" pos:column="29">Surface</name> <type:modifier pos:line="2681" pos:column="37">*</type:modifier></type><name pos:line="2681" pos:column="38">surface</name></decl></param>, <param><decl><type><name pos:line="2681" pos:column="47">ViewStyle</name> <type:modifier pos:line="2681" pos:column="57">&amp;</type:modifier></type><name pos:line="2681" pos:column="58">vsDraw</name></decl></param>, <param><decl><type><name pos:line="2681" pos:column="66">int</name></type> <name pos:line="2681" pos:column="70">line</name></decl></param>, <param><decl><type><name pos:line="2681" pos:column="76">int</name></type> <name pos:line="2681" pos:column="80">xStart</name></decl></param>,
    <param><decl><type><name pos:line="2682" pos:column="5">PRectangle</name></type> <name pos:line="2682" pos:column="16">rcLine</name></decl></param>, <param><decl><type><name pos:line="2682" pos:column="24">LineLayout</name> <type:modifier pos:line="2682" pos:column="35">*</type:modifier></type><name pos:line="2682" pos:column="36">ll</name></decl></param>, <param><decl><type><name pos:line="2682" pos:column="40">int</name></type> <name pos:line="2682" pos:column="44">subLine</name></decl></param>)</parameter_list> <block pos:line="2682" pos:column="53">{
	<decl_stmt><decl><type><name pos:line="2683" pos:column="9">int</name></type> <name pos:line="2683" pos:column="13">indent</name> <init pos:line="2683" pos:column="20">= <expr><call><name><name pos:line="2683" pos:column="22">pdoc</name><op:operator pos:line="2683" pos:column="26">-&gt;</op:operator><name pos:line="2683" pos:column="28">GetLineIndentation</name></name><argument_list pos:line="2683" pos:column="46">(<argument><expr><name pos:line="2683" pos:column="47">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="2683" pos:column="53">*</op:operator> <name><name pos:line="2683" pos:column="55">vsDraw</name><op:operator pos:line="2683" pos:column="61">.</op:operator><name pos:line="2683" pos:column="62">spaceWidth</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2684" pos:column="9">PRectangle</name></type> <name pos:line="2684" pos:column="20">rcSegment</name> <init pos:line="2684" pos:column="30">= <expr><name pos:line="2684" pos:column="32">rcLine</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2685" pos:column="9">int</name></type> <name pos:line="2685" pos:column="13">annotationLine</name> <init pos:line="2685" pos:column="28">= <expr><name pos:line="2685" pos:column="30">subLine</name> <op:operator pos:line="2685" pos:column="38">-</op:operator> <name><name pos:line="2685" pos:column="40">ll</name><op:operator pos:line="2685" pos:column="42">-&gt;</op:operator><name pos:line="2685" pos:column="44">lines</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2686" pos:column="9">const</specifier> <name pos:line="2686" pos:column="15">StyledText</name></type> <name pos:line="2686" pos:column="26">stAnnotation</name>  <init pos:line="2686" pos:column="40">= <expr><call><name><name pos:line="2686" pos:column="42">pdoc</name><op:operator pos:line="2686" pos:column="46">-&gt;</op:operator><name pos:line="2686" pos:column="48">AnnotationStyledText</name></name><argument_list pos:line="2686" pos:column="68">(<argument><expr><name pos:line="2686" pos:column="69">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2687" pos:column="9">if <condition pos:line="2687" pos:column="12">(<expr><name><name pos:line="2687" pos:column="13">stAnnotation</name><op:operator pos:line="2687" pos:column="25">.</op:operator><name pos:line="2687" pos:column="26">text</name></name> <op:operator pos:line="2687" pos:column="31">&amp;&amp;</op:operator> <call><name pos:line="2687" pos:column="34">ValidStyledText</name><argument_list pos:line="2687" pos:column="49">(<argument><expr><name pos:line="2687" pos:column="50">vsDraw</name></expr></argument>, <argument><expr><name><name pos:line="2687" pos:column="58">vsDraw</name><op:operator pos:line="2687" pos:column="64">.</op:operator><name pos:line="2687" pos:column="65">annotationStyleOffset</name></name></expr></argument>, <argument><expr><name pos:line="2687" pos:column="88">stAnnotation</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2687" pos:column="102"> <block pos:line="2687" pos:column="103">{
		<expr_stmt><expr><call><name><name pos:line="2688" pos:column="17">surface</name><op:operator pos:line="2688" pos:column="24">-&gt;</op:operator><name pos:line="2688" pos:column="26">FillRectangle</name></name><argument_list pos:line="2688" pos:column="39">(<argument><expr><name pos:line="2688" pos:column="40">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="2688" pos:column="51">vsDraw</name><op:operator pos:line="2688" pos:column="57">.</op:operator><name pos:line="2688" pos:column="58">styles</name><index pos:line="2688" pos:column="64">[<expr><lit:literal type="number" pos:line="2688" pos:column="65">0</lit:literal></expr>]</index></name><op:operator pos:line="2688" pos:column="67">.</op:operator><name><name pos:line="2688" pos:column="68">back</name><op:operator pos:line="2688" pos:column="72">.</op:operator><name pos:line="2688" pos:column="73">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2689" pos:column="17">if <condition pos:line="2689" pos:column="20">(<expr><name><name pos:line="2689" pos:column="21">vs</name><op:operator pos:line="2689" pos:column="23">.</op:operator><name pos:line="2689" pos:column="24">annotationVisible</name></name> <op:operator pos:line="2689" pos:column="42">==</op:operator> <name pos:line="2689" pos:column="45">ANNOTATION_BOXED</name></expr>)</condition><then pos:line="2689" pos:column="62"> <block pos:line="2689" pos:column="63">{
			<comment type="line" pos:line="2690" pos:column="25">// Only care about calculating width if need to draw box</comment>
			<decl_stmt><decl><type><name pos:line="2691" pos:column="25">int</name></type> <name pos:line="2691" pos:column="29">widthAnnotation</name> <init pos:line="2691" pos:column="45">= <expr><call><name pos:line="2691" pos:column="47">WidestLineWidth</name><argument_list pos:line="2691" pos:column="62">(<argument><expr><name pos:line="2691" pos:column="63">surface</name></expr></argument>, <argument><expr><name pos:line="2691" pos:column="72">vsDraw</name></expr></argument>, <argument><expr><name><name pos:line="2691" pos:column="80">vsDraw</name><op:operator pos:line="2691" pos:column="86">.</op:operator><name pos:line="2691" pos:column="87">annotationStyleOffset</name></name></expr></argument>, <argument><expr><name pos:line="2691" pos:column="110">stAnnotation</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2692" pos:column="25">widthAnnotation</name> <op:operator pos:line="2692" pos:column="41">+=</op:operator> <name><name pos:line="2692" pos:column="44">vsDraw</name><op:operator pos:line="2692" pos:column="50">.</op:operator><name pos:line="2692" pos:column="51">spaceWidth</name></name> <op:operator pos:line="2692" pos:column="62">*</op:operator> <lit:literal type="number" pos:line="2692" pos:column="64">2</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="2692" pos:column="67">// Margins</comment>
			<expr_stmt><expr><name><name pos:line="2693" pos:column="25">rcSegment</name><op:operator pos:line="2693" pos:column="34">.</op:operator><name pos:line="2693" pos:column="35">left</name></name> <op:operator pos:line="2693" pos:column="40">=</op:operator> <name pos:line="2693" pos:column="42">xStart</name> <op:operator pos:line="2693" pos:column="49">+</op:operator> <name pos:line="2693" pos:column="51">indent</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2694" pos:column="25">rcSegment</name><op:operator pos:line="2694" pos:column="34">.</op:operator><name pos:line="2694" pos:column="35">right</name></name> <op:operator pos:line="2694" pos:column="41">=</op:operator> <name><name pos:line="2694" pos:column="43">rcSegment</name><op:operator pos:line="2694" pos:column="52">.</op:operator><name pos:line="2694" pos:column="53">left</name></name> <op:operator pos:line="2694" pos:column="58">+</op:operator> <name pos:line="2694" pos:column="60">widthAnnotation</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2695" pos:column="25">surface</name><op:operator pos:line="2695" pos:column="32">-&gt;</op:operator><name pos:line="2695" pos:column="34">PenColour</name></name><argument_list pos:line="2695" pos:column="43">(<argument><expr><name><name pos:line="2695" pos:column="44">vsDraw</name><op:operator pos:line="2695" pos:column="50">.</op:operator><name pos:line="2695" pos:column="51">styles</name><index pos:line="2695" pos:column="57">[<expr><name><name pos:line="2695" pos:column="58">vsDraw</name><op:operator pos:line="2695" pos:column="64">.</op:operator><name pos:line="2695" pos:column="65">annotationStyleOffset</name></name></expr>]</index></name><op:operator pos:line="2695" pos:column="87">.</op:operator><name><name pos:line="2695" pos:column="88">fore</name><op:operator pos:line="2695" pos:column="92">.</op:operator><name pos:line="2695" pos:column="93">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="2696" pos:column="19">else <block pos:line="2696" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="2697" pos:column="25">rcSegment</name><op:operator pos:line="2697" pos:column="34">.</op:operator><name pos:line="2697" pos:column="35">left</name></name> <op:operator pos:line="2697" pos:column="40">=</op:operator> <name pos:line="2697" pos:column="42">xStart</name></expr>;</expr_stmt>
		}</block></else></if>
		<decl_stmt><decl><type><specifier pos:line="2699" pos:column="17">const</specifier> <name pos:line="2699" pos:column="23">int</name></type> <name pos:line="2699" pos:column="27">annotationLines</name> <init pos:line="2699" pos:column="43">= <expr><call><name><name pos:line="2699" pos:column="45">pdoc</name><op:operator pos:line="2699" pos:column="49">-&gt;</op:operator><name pos:line="2699" pos:column="51">AnnotationLines</name></name><argument_list pos:line="2699" pos:column="66">(<argument><expr><name pos:line="2699" pos:column="67">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2700" pos:column="17">size_t</name></type> <name pos:line="2700" pos:column="24">start</name> <init pos:line="2700" pos:column="30">= <expr><lit:literal type="number" pos:line="2700" pos:column="32">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2701" pos:column="17">size_t</name></type> <name pos:line="2701" pos:column="24">lengthAnnotation</name> <init pos:line="2701" pos:column="41">= <expr><call><name><name pos:line="2701" pos:column="43">stAnnotation</name><op:operator pos:line="2701" pos:column="55">.</op:operator><name pos:line="2701" pos:column="56">LineLength</name></name><argument_list pos:line="2701" pos:column="66">(<argument><expr><name pos:line="2701" pos:column="67">start</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2702" pos:column="17">int</name></type> <name pos:line="2702" pos:column="21">lineInAnnotation</name> <init pos:line="2702" pos:column="38">= <expr><lit:literal type="number" pos:line="2702" pos:column="40">0</lit:literal></expr></init></decl>;</decl_stmt>
		<while pos:line="2703" pos:column="17">while <condition pos:line="2703" pos:column="23">(<expr><op:operator pos:line="2703" pos:column="24">(</op:operator><name pos:line="2703" pos:column="25">lineInAnnotation</name> <op:operator pos:line="2703" pos:column="42">&lt;</op:operator> <name pos:line="2703" pos:column="44">annotationLine</name><op:operator pos:line="2703" pos:column="58">)</op:operator> <op:operator pos:line="2703" pos:column="60">&amp;&amp;</op:operator> <op:operator pos:line="2703" pos:column="63">(</op:operator><name pos:line="2703" pos:column="64">start</name> <op:operator pos:line="2703" pos:column="70">&lt;</op:operator> <name><name pos:line="2703" pos:column="72">stAnnotation</name><op:operator pos:line="2703" pos:column="84">.</op:operator><name pos:line="2703" pos:column="85">length</name></name><op:operator pos:line="2703" pos:column="91">)</op:operator></expr>)</condition> <block pos:line="2703" pos:column="94">{
			<expr_stmt><expr><name pos:line="2704" pos:column="25">start</name> <op:operator pos:line="2704" pos:column="31">+=</op:operator> <name pos:line="2704" pos:column="34">lengthAnnotation</name> <op:operator pos:line="2704" pos:column="51">+</op:operator> <lit:literal type="number" pos:line="2704" pos:column="53">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2705" pos:column="25">lengthAnnotation</name> <op:operator pos:line="2705" pos:column="42">=</op:operator> <call><name><name pos:line="2705" pos:column="44">stAnnotation</name><op:operator pos:line="2705" pos:column="56">.</op:operator><name pos:line="2705" pos:column="57">LineLength</name></name><argument_list pos:line="2705" pos:column="67">(<argument><expr><name pos:line="2705" pos:column="68">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2706" pos:column="25">lineInAnnotation</name><op:operator pos:line="2706" pos:column="41">++</op:operator></expr>;</expr_stmt>
		}</block></while>
		<decl_stmt><decl><type><name pos:line="2708" pos:column="17">PRectangle</name></type> <name pos:line="2708" pos:column="28">rcText</name> <init pos:line="2708" pos:column="35">= <expr><name pos:line="2708" pos:column="37">rcSegment</name></expr></init></decl>;</decl_stmt>
		<if pos:line="2709" pos:column="17">if <condition pos:line="2709" pos:column="20">(<expr><name><name pos:line="2709" pos:column="21">vs</name><op:operator pos:line="2709" pos:column="23">.</op:operator><name pos:line="2709" pos:column="24">annotationVisible</name></name> <op:operator pos:line="2709" pos:column="42">==</op:operator> <name pos:line="2709" pos:column="45">ANNOTATION_BOXED</name></expr>)</condition><then pos:line="2709" pos:column="62"> <block pos:line="2709" pos:column="63">{
			<expr_stmt><expr><call><name><name pos:line="2710" pos:column="25">surface</name><op:operator pos:line="2710" pos:column="32">-&gt;</op:operator><name pos:line="2710" pos:column="34">FillRectangle</name></name><argument_list pos:line="2710" pos:column="47">(<argument><expr><name pos:line="2710" pos:column="48">rcText</name></expr></argument>,
				<argument><expr><name><name pos:line="2711" pos:column="33">vsDraw</name><op:operator pos:line="2711" pos:column="39">.</op:operator><name pos:line="2711" pos:column="40">styles</name><index pos:line="2711" pos:column="46">[<expr><call><name><name pos:line="2711" pos:column="47">stAnnotation</name><op:operator pos:line="2711" pos:column="59">.</op:operator><name pos:line="2711" pos:column="60">StyleAt</name></name><argument_list pos:line="2711" pos:column="67">(<argument><expr><name pos:line="2711" pos:column="68">start</name></expr></argument>)</argument_list></call> <op:operator pos:line="2711" pos:column="75">+</op:operator> <name><name pos:line="2711" pos:column="77">vsDraw</name><op:operator pos:line="2711" pos:column="83">.</op:operator><name pos:line="2711" pos:column="84">annotationStyleOffset</name></name></expr>]</index></name><op:operator pos:line="2711" pos:column="106">.</op:operator><name><name pos:line="2711" pos:column="107">back</name><op:operator pos:line="2711" pos:column="111">.</op:operator><name pos:line="2711" pos:column="112">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2712" pos:column="25">rcText</name><op:operator pos:line="2712" pos:column="31">.</op:operator><name pos:line="2712" pos:column="32">left</name></name> <op:operator pos:line="2712" pos:column="37">+=</op:operator> <name><name pos:line="2712" pos:column="40">vsDraw</name><op:operator pos:line="2712" pos:column="46">.</op:operator><name pos:line="2712" pos:column="47">spaceWidth</name></name></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="2714" pos:column="17">DrawStyledText</name><argument_list pos:line="2714" pos:column="31">(<argument><expr><name pos:line="2714" pos:column="32">surface</name></expr></argument>, <argument><expr><name pos:line="2714" pos:column="41">vsDraw</name></expr></argument>, <argument><expr><name><name pos:line="2714" pos:column="49">vsDraw</name><op:operator pos:line="2714" pos:column="55">.</op:operator><name pos:line="2714" pos:column="56">annotationStyleOffset</name></name></expr></argument>, <argument><expr><name pos:line="2714" pos:column="79">rcText</name></expr></argument>, <argument><expr><name><name pos:line="2714" pos:column="87">rcText</name><op:operator pos:line="2714" pos:column="93">.</op:operator><name pos:line="2714" pos:column="94">top</name></name> <op:operator pos:line="2714" pos:column="98">+</op:operator> <name><name pos:line="2714" pos:column="100">vsDraw</name><op:operator pos:line="2714" pos:column="106">.</op:operator><name pos:line="2714" pos:column="107">maxAscent</name></name></expr></argument>,
			<argument><expr><name pos:line="2715" pos:column="25">stAnnotation</name></expr></argument>, <argument><expr><name pos:line="2715" pos:column="39">start</name></expr></argument>, <argument><expr><name pos:line="2715" pos:column="46">lengthAnnotation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2716" pos:column="17">if <condition pos:line="2716" pos:column="20">(<expr><name><name pos:line="2716" pos:column="21">vs</name><op:operator pos:line="2716" pos:column="23">.</op:operator><name pos:line="2716" pos:column="24">annotationVisible</name></name> <op:operator pos:line="2716" pos:column="42">==</op:operator> <name pos:line="2716" pos:column="45">ANNOTATION_BOXED</name></expr>)</condition><then pos:line="2716" pos:column="62"> <block pos:line="2716" pos:column="63">{
			<expr_stmt><expr><call><name><name pos:line="2717" pos:column="25">surface</name><op:operator pos:line="2717" pos:column="32">-&gt;</op:operator><name pos:line="2717" pos:column="34">MoveTo</name></name><argument_list pos:line="2717" pos:column="40">(<argument><expr><name><name pos:line="2717" pos:column="41">rcSegment</name><op:operator pos:line="2717" pos:column="50">.</op:operator><name pos:line="2717" pos:column="51">left</name></name></expr></argument>, <argument><expr><name><name pos:line="2717" pos:column="57">rcSegment</name><op:operator pos:line="2717" pos:column="66">.</op:operator><name pos:line="2717" pos:column="67">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2718" pos:column="25">surface</name><op:operator pos:line="2718" pos:column="32">-&gt;</op:operator><name pos:line="2718" pos:column="34">LineTo</name></name><argument_list pos:line="2718" pos:column="40">(<argument><expr><name><name pos:line="2718" pos:column="41">rcSegment</name><op:operator pos:line="2718" pos:column="50">.</op:operator><name pos:line="2718" pos:column="51">left</name></name></expr></argument>, <argument><expr><name><name pos:line="2718" pos:column="57">rcSegment</name><op:operator pos:line="2718" pos:column="66">.</op:operator><name pos:line="2718" pos:column="67">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2719" pos:column="25">surface</name><op:operator pos:line="2719" pos:column="32">-&gt;</op:operator><name pos:line="2719" pos:column="34">MoveTo</name></name><argument_list pos:line="2719" pos:column="40">(<argument><expr><name><name pos:line="2719" pos:column="41">rcSegment</name><op:operator pos:line="2719" pos:column="50">.</op:operator><name pos:line="2719" pos:column="51">right</name></name></expr></argument>, <argument><expr><name><name pos:line="2719" pos:column="58">rcSegment</name><op:operator pos:line="2719" pos:column="67">.</op:operator><name pos:line="2719" pos:column="68">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2720" pos:column="25">surface</name><op:operator pos:line="2720" pos:column="32">-&gt;</op:operator><name pos:line="2720" pos:column="34">LineTo</name></name><argument_list pos:line="2720" pos:column="40">(<argument><expr><name><name pos:line="2720" pos:column="41">rcSegment</name><op:operator pos:line="2720" pos:column="50">.</op:operator><name pos:line="2720" pos:column="51">right</name></name></expr></argument>, <argument><expr><name><name pos:line="2720" pos:column="58">rcSegment</name><op:operator pos:line="2720" pos:column="67">.</op:operator><name pos:line="2720" pos:column="68">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2721" pos:column="25">if <condition pos:line="2721" pos:column="28">(<expr><name pos:line="2721" pos:column="29">subLine</name> <op:operator pos:line="2721" pos:column="37">==</op:operator> <name><name pos:line="2721" pos:column="40">ll</name><op:operator pos:line="2721" pos:column="42">-&gt;</op:operator><name pos:line="2721" pos:column="44">lines</name></name></expr>)</condition><then pos:line="2721" pos:column="50"> <block pos:line="2721" pos:column="51">{
				<expr_stmt><expr><call><name><name pos:line="2722" pos:column="33">surface</name><op:operator pos:line="2722" pos:column="40">-&gt;</op:operator><name pos:line="2722" pos:column="42">MoveTo</name></name><argument_list pos:line="2722" pos:column="48">(<argument><expr><name><name pos:line="2722" pos:column="49">rcSegment</name><op:operator pos:line="2722" pos:column="58">.</op:operator><name pos:line="2722" pos:column="59">left</name></name></expr></argument>, <argument><expr><name><name pos:line="2722" pos:column="65">rcSegment</name><op:operator pos:line="2722" pos:column="74">.</op:operator><name pos:line="2722" pos:column="75">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2723" pos:column="33">surface</name><op:operator pos:line="2723" pos:column="40">-&gt;</op:operator><name pos:line="2723" pos:column="42">LineTo</name></name><argument_list pos:line="2723" pos:column="48">(<argument><expr><name><name pos:line="2723" pos:column="49">rcSegment</name><op:operator pos:line="2723" pos:column="58">.</op:operator><name pos:line="2723" pos:column="59">right</name></name></expr></argument>, <argument><expr><name><name pos:line="2723" pos:column="66">rcSegment</name><op:operator pos:line="2723" pos:column="75">.</op:operator><name pos:line="2723" pos:column="76">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="2725" pos:column="25">if <condition pos:line="2725" pos:column="28">(<expr><name pos:line="2725" pos:column="29">subLine</name> <op:operator pos:line="2725" pos:column="37">==</op:operator> <name><name pos:line="2725" pos:column="40">ll</name><op:operator pos:line="2725" pos:column="42">-&gt;</op:operator><name pos:line="2725" pos:column="44">lines</name></name><op:operator pos:line="2725" pos:column="49">+</op:operator><name pos:line="2725" pos:column="50">annotationLines</name><op:operator pos:line="2725" pos:column="65">-</op:operator><lit:literal type="number" pos:line="2725" pos:column="66">1</lit:literal></expr>)</condition><then pos:line="2725" pos:column="68"> <block pos:line="2725" pos:column="69">{
				<expr_stmt><expr><call><name><name pos:line="2726" pos:column="33">surface</name><op:operator pos:line="2726" pos:column="40">-&gt;</op:operator><name pos:line="2726" pos:column="42">MoveTo</name></name><argument_list pos:line="2726" pos:column="48">(<argument><expr><name><name pos:line="2726" pos:column="49">rcSegment</name><op:operator pos:line="2726" pos:column="58">.</op:operator><name pos:line="2726" pos:column="59">left</name></name></expr></argument>, <argument><expr><name><name pos:line="2726" pos:column="65">rcSegment</name><op:operator pos:line="2726" pos:column="74">.</op:operator><name pos:line="2726" pos:column="75">bottom</name></name> <op:operator pos:line="2726" pos:column="82">-</op:operator> <lit:literal type="number" pos:line="2726" pos:column="84">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2727" pos:column="33">surface</name><op:operator pos:line="2727" pos:column="40">-&gt;</op:operator><name pos:line="2727" pos:column="42">LineTo</name></name><argument_list pos:line="2727" pos:column="48">(<argument><expr><name><name pos:line="2727" pos:column="49">rcSegment</name><op:operator pos:line="2727" pos:column="58">.</op:operator><name pos:line="2727" pos:column="59">right</name></name></expr></argument>, <argument><expr><name><name pos:line="2727" pos:column="66">rcSegment</name><op:operator pos:line="2727" pos:column="75">.</op:operator><name pos:line="2727" pos:column="76">bottom</name></name> <op:operator pos:line="2727" pos:column="83">-</op:operator> <lit:literal type="number" pos:line="2727" pos:column="85">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2733" pos:column="1">void</name></type> <name><name pos:line="2733" pos:column="6">Editor</name><op:operator pos:line="2733" pos:column="12">::</op:operator><name pos:line="2733" pos:column="14">DrawLine</name></name><parameter_list pos:line="2733" pos:column="22">(<param><decl><type><name pos:line="2733" pos:column="23">Surface</name> <type:modifier pos:line="2733" pos:column="31">*</type:modifier></type><name pos:line="2733" pos:column="32">surface</name></decl></param>, <param><decl><type><name pos:line="2733" pos:column="41">ViewStyle</name> <type:modifier pos:line="2733" pos:column="51">&amp;</type:modifier></type><name pos:line="2733" pos:column="52">vsDraw</name></decl></param>, <param><decl><type><name pos:line="2733" pos:column="60">int</name></type> <name pos:line="2733" pos:column="64">line</name></decl></param>, <param><decl><type><name pos:line="2733" pos:column="70">int</name></type> <name pos:line="2733" pos:column="74">lineVisible</name></decl></param>, <param><decl><type><name pos:line="2733" pos:column="87">int</name></type> <name pos:line="2733" pos:column="91">xStart</name></decl></param>,
        <param><decl><type><name pos:line="2734" pos:column="9">PRectangle</name></type> <name pos:line="2734" pos:column="20">rcLine</name></decl></param>, <param><decl><type><name pos:line="2734" pos:column="28">LineLayout</name> <type:modifier pos:line="2734" pos:column="39">*</type:modifier></type><name pos:line="2734" pos:column="40">ll</name></decl></param>, <param><decl><type><name pos:line="2734" pos:column="44">int</name></type> <name pos:line="2734" pos:column="48">subLine</name></decl></param>)</parameter_list> <block pos:line="2734" pos:column="57">{

	<decl_stmt><decl><type><name pos:line="2736" pos:column="9">PRectangle</name></type> <name pos:line="2736" pos:column="20">rcSegment</name> <init pos:line="2736" pos:column="30">= <expr><name pos:line="2736" pos:column="32">rcLine</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2738" pos:column="9">// Using one font for all control characters so it can be controlled independently to ensure</comment>
	<comment type="line" pos:line="2739" pos:column="9">// the box goes around the characters tightly. Seems to be no way to work out what height</comment>
	<comment type="line" pos:line="2740" pos:column="9">// is taken by an individual character - internal leading gives varying results.</comment>
	<decl_stmt><decl><type><name pos:line="2741" pos:column="9">Font</name> <type:modifier pos:line="2741" pos:column="14">&amp;</type:modifier></type><name pos:line="2741" pos:column="15">ctrlCharsFont</name> <init pos:line="2741" pos:column="29">= <expr><name><name pos:line="2741" pos:column="31">vsDraw</name><op:operator pos:line="2741" pos:column="37">.</op:operator><name pos:line="2741" pos:column="38">styles</name><index pos:line="2741" pos:column="44">[<expr><name pos:line="2741" pos:column="45">STYLE_CONTROLCHAR</name></expr>]</index></name><op:operator pos:line="2741" pos:column="63">.</op:operator><name pos:line="2741" pos:column="64">font</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2743" pos:column="9">// See if something overrides the line background color:  Either if caret is on the line</comment>
	<comment type="line" pos:line="2744" pos:column="9">// and background color is set for that, or if a marker is defined that forces its background</comment>
	<comment type="line" pos:line="2745" pos:column="9">// color onto the line, or if a marker is defined but has no selection margin in which to</comment>
	<comment type="line" pos:line="2746" pos:column="9">// display itself (as long as it's not an SC_MARK_EMPTY marker).  These are checked in order</comment>
	<comment type="line" pos:line="2747" pos:column="9">// with the earlier taking precedence.  When multiple markers cause background override,</comment>
	<comment type="line" pos:line="2748" pos:column="9">// the color for the highest numbered one is used.</comment>
	<decl_stmt><decl><type><name pos:line="2749" pos:column="9">bool</name></type> <name pos:line="2749" pos:column="14">overrideBackground</name> <init pos:line="2749" pos:column="33">= <expr><lit:literal type="boolean" pos:line="2749" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2750" pos:column="9">ColourAllocated</name></type> <name pos:line="2750" pos:column="25">background</name></decl>;</decl_stmt>
	<if pos:line="2751" pos:column="9">if <condition pos:line="2751" pos:column="12">(<expr><op:operator pos:line="2751" pos:column="13">(</op:operator><name><name pos:line="2751" pos:column="14">caret</name><op:operator pos:line="2751" pos:column="19">.</op:operator><name pos:line="2751" pos:column="20">active</name></name> <op:operator pos:line="2751" pos:column="27">||</op:operator> <name><name pos:line="2751" pos:column="30">vsDraw</name><op:operator pos:line="2751" pos:column="36">.</op:operator><name pos:line="2751" pos:column="37">showCaretLineBackgroundAlways</name></name><op:operator pos:line="2751" pos:column="66">)</op:operator> <op:operator pos:line="2751" pos:column="68">&amp;&amp;</op:operator> <name><name pos:line="2751" pos:column="71">vsDraw</name><op:operator pos:line="2751" pos:column="77">.</op:operator><name pos:line="2751" pos:column="78">showCaretLineBackground</name></name> <op:operator pos:line="2751" pos:column="102">&amp;&amp;</op:operator> <op:operator pos:line="2751" pos:column="105">(</op:operator><name><name pos:line="2751" pos:column="106">vsDraw</name><op:operator pos:line="2751" pos:column="112">.</op:operator><name pos:line="2751" pos:column="113">caretLineAlpha</name></name> <op:operator pos:line="2751" pos:column="128">==</op:operator> <name pos:line="2751" pos:column="131">SC_ALPHA_NOALPHA</name><op:operator pos:line="2751" pos:column="147">)</op:operator> <op:operator pos:line="2751" pos:column="149">&amp;&amp;</op:operator> <name><name pos:line="2751" pos:column="152">ll</name><op:operator pos:line="2751" pos:column="154">-&gt;</op:operator><name pos:line="2751" pos:column="156">containsCaret</name></name></expr>)</condition><then pos:line="2751" pos:column="170"> <block pos:line="2751" pos:column="171">{
		<expr_stmt><expr><name pos:line="2752" pos:column="17">overrideBackground</name> <op:operator pos:line="2752" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="2752" pos:column="38">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2753" pos:column="17">background</name> <op:operator pos:line="2753" pos:column="28">=</op:operator> <name><name pos:line="2753" pos:column="30">vsDraw</name><op:operator pos:line="2753" pos:column="36">.</op:operator><name pos:line="2753" pos:column="37">caretLineBackground</name><op:operator pos:line="2753" pos:column="56">.</op:operator><name pos:line="2753" pos:column="57">allocated</name></name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="2755" pos:column="9">if <condition pos:line="2755" pos:column="12">(<expr><op:operator pos:line="2755" pos:column="13">!</op:operator><name pos:line="2755" pos:column="14">overrideBackground</name></expr>)</condition><then pos:line="2755" pos:column="33"> <block pos:line="2755" pos:column="34">{
		<decl_stmt><decl><type><name pos:line="2756" pos:column="17">int</name></type> <name pos:line="2756" pos:column="21">marks</name> <init pos:line="2756" pos:column="27">= <expr><call><name><name pos:line="2756" pos:column="29">pdoc</name><op:operator pos:line="2756" pos:column="33">-&gt;</op:operator><name pos:line="2756" pos:column="35">GetMark</name></name><argument_list pos:line="2756" pos:column="42">(<argument><expr><name pos:line="2756" pos:column="43">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="2757" pos:column="17">for (<init><decl><type><name pos:line="2757" pos:column="22">int</name></type> <name pos:line="2757" pos:column="26">markBit</name> <init pos:line="2757" pos:column="34">= <expr><lit:literal type="number" pos:line="2757" pos:column="36">0</lit:literal></expr></init></decl>;</init> <condition><expr><op:operator pos:line="2757" pos:column="39">(</op:operator><name pos:line="2757" pos:column="40">markBit</name> <op:operator pos:line="2757" pos:column="48">&lt;</op:operator> <lit:literal type="number" pos:line="2757" pos:column="50">32</lit:literal><op:operator pos:line="2757" pos:column="52">)</op:operator> <op:operator pos:line="2757" pos:column="54">&amp;&amp;</op:operator> <name pos:line="2757" pos:column="57">marks</name></expr>;</condition> <incr><expr><name pos:line="2757" pos:column="64">markBit</name><op:operator pos:line="2757" pos:column="71">++</op:operator></expr></incr>) <block pos:line="2757" pos:column="75">{
			<if pos:line="2758" pos:column="25">if <condition pos:line="2758" pos:column="28">(<expr><op:operator pos:line="2758" pos:column="29">(</op:operator><name pos:line="2758" pos:column="30">marks</name> <op:operator pos:line="2758" pos:column="36">&amp;</op:operator> <lit:literal type="number" pos:line="2758" pos:column="38">1</lit:literal><op:operator pos:line="2758" pos:column="39">)</op:operator> <op:operator pos:line="2758" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="2758" pos:column="44">(</op:operator><name><name pos:line="2758" pos:column="45">vsDraw</name><op:operator pos:line="2758" pos:column="51">.</op:operator><name pos:line="2758" pos:column="52">markers</name><index pos:line="2758" pos:column="59">[<expr><name pos:line="2758" pos:column="60">markBit</name></expr>]</index></name><op:operator pos:line="2758" pos:column="68">.</op:operator><name pos:line="2758" pos:column="69">markType</name> <op:operator pos:line="2758" pos:column="78">==</op:operator> <name pos:line="2758" pos:column="81">SC_MARK_BACKGROUND</name><op:operator pos:line="2758" pos:column="99">)</op:operator> <op:operator pos:line="2758" pos:column="101">&amp;&amp;</op:operator>
			        <op:operator pos:line="2759" pos:column="33">(</op:operator><name><name pos:line="2759" pos:column="34">vsDraw</name><op:operator pos:line="2759" pos:column="40">.</op:operator><name pos:line="2759" pos:column="41">markers</name><index pos:line="2759" pos:column="48">[<expr><name pos:line="2759" pos:column="49">markBit</name></expr>]</index></name><op:operator pos:line="2759" pos:column="57">.</op:operator><name pos:line="2759" pos:column="58">alpha</name> <op:operator pos:line="2759" pos:column="64">==</op:operator> <name pos:line="2759" pos:column="67">SC_ALPHA_NOALPHA</name><op:operator pos:line="2759" pos:column="83">)</op:operator></expr>)</condition><then pos:line="2759" pos:column="85"> <block pos:line="2759" pos:column="86">{
				<expr_stmt><expr><name pos:line="2760" pos:column="33">background</name> <op:operator pos:line="2760" pos:column="44">=</op:operator> <name><name pos:line="2760" pos:column="46">vsDraw</name><op:operator pos:line="2760" pos:column="52">.</op:operator><name pos:line="2760" pos:column="53">markers</name><index pos:line="2760" pos:column="60">[<expr><name pos:line="2760" pos:column="61">markBit</name></expr>]</index></name><op:operator pos:line="2760" pos:column="69">.</op:operator><name><name pos:line="2760" pos:column="70">back</name><op:operator pos:line="2760" pos:column="74">.</op:operator><name pos:line="2760" pos:column="75">allocated</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="2761" pos:column="33">overrideBackground</name> <op:operator pos:line="2761" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="2761" pos:column="54">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="2763" pos:column="25">marks</name> <op:operator pos:line="2763" pos:column="31">&gt;&gt;=</op:operator> <lit:literal type="number" pos:line="2763" pos:column="35">1</lit:literal></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>
	<if pos:line="2766" pos:column="9">if <condition pos:line="2766" pos:column="12">(<expr><op:operator pos:line="2766" pos:column="13">!</op:operator><name pos:line="2766" pos:column="14">overrideBackground</name></expr>)</condition><then pos:line="2766" pos:column="33"> <block pos:line="2766" pos:column="34">{
		<if pos:line="2767" pos:column="17">if <condition pos:line="2767" pos:column="20">(<expr><name><name pos:line="2767" pos:column="21">vsDraw</name><op:operator pos:line="2767" pos:column="27">.</op:operator><name pos:line="2767" pos:column="28">maskInLine</name></name></expr>)</condition><then pos:line="2767" pos:column="39"> <block pos:line="2767" pos:column="40">{
			<decl_stmt><decl><type><name pos:line="2768" pos:column="25">int</name></type> <name pos:line="2768" pos:column="29">marksMasked</name> <init pos:line="2768" pos:column="41">= <expr><call><name><name pos:line="2768" pos:column="43">pdoc</name><op:operator pos:line="2768" pos:column="47">-&gt;</op:operator><name pos:line="2768" pos:column="49">GetMark</name></name><argument_list pos:line="2768" pos:column="56">(<argument><expr><name pos:line="2768" pos:column="57">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="2768" pos:column="63">&amp;</op:operator> <name><name pos:line="2768" pos:column="65">vsDraw</name><op:operator pos:line="2768" pos:column="71">.</op:operator><name pos:line="2768" pos:column="72">maskInLine</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="2769" pos:column="25">if <condition pos:line="2769" pos:column="28">(<expr><name pos:line="2769" pos:column="29">marksMasked</name></expr>)</condition><then pos:line="2769" pos:column="41"> <block pos:line="2769" pos:column="42">{
				<for pos:line="2770" pos:column="33">for (<init><decl><type><name pos:line="2770" pos:column="38">int</name></type> <name pos:line="2770" pos:column="42">markBit</name> <init pos:line="2770" pos:column="50">= <expr><lit:literal type="number" pos:line="2770" pos:column="52">0</lit:literal></expr></init></decl>;</init> <condition><expr><op:operator pos:line="2770" pos:column="55">(</op:operator><name pos:line="2770" pos:column="56">markBit</name> <op:operator pos:line="2770" pos:column="64">&lt;</op:operator> <lit:literal type="number" pos:line="2770" pos:column="66">32</lit:literal><op:operator pos:line="2770" pos:column="68">)</op:operator> <op:operator pos:line="2770" pos:column="70">&amp;&amp;</op:operator> <name pos:line="2770" pos:column="73">marksMasked</name></expr>;</condition> <incr><expr><name pos:line="2770" pos:column="86">markBit</name><op:operator pos:line="2770" pos:column="93">++</op:operator></expr></incr>) <block pos:line="2770" pos:column="97">{
					<if pos:line="2771" pos:column="41">if <condition pos:line="2771" pos:column="44">(<expr><op:operator pos:line="2771" pos:column="45">(</op:operator><name pos:line="2771" pos:column="46">marksMasked</name> <op:operator pos:line="2771" pos:column="58">&amp;</op:operator> <lit:literal type="number" pos:line="2771" pos:column="60">1</lit:literal><op:operator pos:line="2771" pos:column="61">)</op:operator> <op:operator pos:line="2771" pos:column="63">&amp;&amp;</op:operator> <op:operator pos:line="2771" pos:column="66">(</op:operator><name><name pos:line="2771" pos:column="67">vsDraw</name><op:operator pos:line="2771" pos:column="73">.</op:operator><name pos:line="2771" pos:column="74">markers</name><index pos:line="2771" pos:column="81">[<expr><name pos:line="2771" pos:column="82">markBit</name></expr>]</index></name><op:operator pos:line="2771" pos:column="90">.</op:operator><name pos:line="2771" pos:column="91">markType</name> <op:operator pos:line="2771" pos:column="100">!=</op:operator> <name pos:line="2771" pos:column="103">SC_MARK_EMPTY</name><op:operator pos:line="2771" pos:column="116">)</op:operator> <op:operator pos:line="2771" pos:column="118">&amp;&amp;</op:operator>
					        <op:operator pos:line="2772" pos:column="49">(</op:operator><name><name pos:line="2772" pos:column="50">vsDraw</name><op:operator pos:line="2772" pos:column="56">.</op:operator><name pos:line="2772" pos:column="57">markers</name><index pos:line="2772" pos:column="64">[<expr><name pos:line="2772" pos:column="65">markBit</name></expr>]</index></name><op:operator pos:line="2772" pos:column="73">.</op:operator><name pos:line="2772" pos:column="74">alpha</name> <op:operator pos:line="2772" pos:column="80">==</op:operator> <name pos:line="2772" pos:column="83">SC_ALPHA_NOALPHA</name><op:operator pos:line="2772" pos:column="99">)</op:operator></expr>)</condition><then pos:line="2772" pos:column="101"> <block pos:line="2772" pos:column="102">{
						<expr_stmt><expr><name pos:line="2773" pos:column="49">overrideBackground</name> <op:operator pos:line="2773" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="2773" pos:column="70">true</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name pos:line="2774" pos:column="49">background</name> <op:operator pos:line="2774" pos:column="60">=</op:operator> <name><name pos:line="2774" pos:column="62">vsDraw</name><op:operator pos:line="2774" pos:column="68">.</op:operator><name pos:line="2774" pos:column="69">markers</name><index pos:line="2774" pos:column="76">[<expr><name pos:line="2774" pos:column="77">markBit</name></expr>]</index></name><op:operator pos:line="2774" pos:column="85">.</op:operator><name><name pos:line="2774" pos:column="86">back</name><op:operator pos:line="2774" pos:column="90">.</op:operator><name pos:line="2774" pos:column="91">allocated</name></name></expr>;</expr_stmt>
					}</block></then></if>
					<expr_stmt><expr><name pos:line="2776" pos:column="41">marksMasked</name> <op:operator pos:line="2776" pos:column="53">&gt;&gt;=</op:operator> <lit:literal type="number" pos:line="2776" pos:column="57">1</lit:literal></expr>;</expr_stmt>
				}</block></for>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="2782" pos:column="9">bool</name></type> <name pos:line="2782" pos:column="14">drawWhitespaceBackground</name> <init pos:line="2782" pos:column="39">= <expr><op:operator pos:line="2782" pos:column="41">(</op:operator><name><name pos:line="2782" pos:column="42">vsDraw</name><op:operator pos:line="2782" pos:column="48">.</op:operator><name pos:line="2782" pos:column="49">viewWhitespace</name></name> <op:operator pos:line="2782" pos:column="64">!=</op:operator> <name pos:line="2782" pos:column="67">wsInvisible</name><op:operator pos:line="2782" pos:column="78">)</op:operator> <op:operator pos:line="2782" pos:column="80">&amp;&amp;</op:operator>
	        <op:operator pos:line="2783" pos:column="17">(</op:operator><op:operator pos:line="2783" pos:column="18">!</op:operator><name pos:line="2783" pos:column="19">overrideBackground</name><op:operator pos:line="2783" pos:column="37">)</op:operator> <op:operator pos:line="2783" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="2783" pos:column="42">(</op:operator><name><name pos:line="2783" pos:column="43">vsDraw</name><op:operator pos:line="2783" pos:column="49">.</op:operator><name pos:line="2783" pos:column="50">whitespaceBackgroundSet</name></name><op:operator pos:line="2783" pos:column="73">)</op:operator></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="2785" pos:column="9">bool</name></type> <name pos:line="2785" pos:column="14">inIndentation</name> <init pos:line="2785" pos:column="28">= <expr><name pos:line="2785" pos:column="30">subLine</name> <op:operator pos:line="2785" pos:column="38">==</op:operator> <lit:literal type="number" pos:line="2785" pos:column="41">0</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="2785" pos:column="49">// Do not handle indentation except on first subline.</comment>
	<decl_stmt><decl><type><name pos:line="2786" pos:column="9">int</name></type> <name pos:line="2786" pos:column="13">indentWidth</name> <init pos:line="2786" pos:column="25">= <expr><call><name><name pos:line="2786" pos:column="27">pdoc</name><op:operator pos:line="2786" pos:column="31">-&gt;</op:operator><name pos:line="2786" pos:column="33">IndentSize</name></name><argument_list pos:line="2786" pos:column="43">()</argument_list></call> <op:operator pos:line="2786" pos:column="46">*</op:operator> <name><name pos:line="2786" pos:column="48">vsDraw</name><op:operator pos:line="2786" pos:column="54">.</op:operator><name pos:line="2786" pos:column="55">spaceWidth</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="2788" pos:column="9">int</name></type> <name pos:line="2788" pos:column="13">posLineStart</name> <init pos:line="2788" pos:column="26">= <expr><call><name><name pos:line="2788" pos:column="28">pdoc</name><op:operator pos:line="2788" pos:column="32">-&gt;</op:operator><name pos:line="2788" pos:column="34">LineStart</name></name><argument_list pos:line="2788" pos:column="43">(<argument><expr><name pos:line="2788" pos:column="44">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="2790" pos:column="9">int</name></type> <name pos:line="2790" pos:column="13">startseg</name> <init pos:line="2790" pos:column="22">= <expr><call><name><name pos:line="2790" pos:column="24">ll</name><op:operator pos:line="2790" pos:column="26">-&gt;</op:operator><name pos:line="2790" pos:column="28">LineStart</name></name><argument_list pos:line="2790" pos:column="37">(<argument><expr><name pos:line="2790" pos:column="38">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2791" pos:column="9">int</name></type> <name pos:line="2791" pos:column="13">subLineStart</name> <init pos:line="2791" pos:column="26">= <expr><name><name pos:line="2791" pos:column="28">ll</name><op:operator pos:line="2791" pos:column="30">-&gt;</op:operator><name pos:line="2791" pos:column="32">positions</name><index pos:line="2791" pos:column="41">[<expr><name pos:line="2791" pos:column="42">startseg</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<if pos:line="2792" pos:column="9">if <condition pos:line="2792" pos:column="12">(<expr><name pos:line="2792" pos:column="13">subLine</name> <op:operator pos:line="2792" pos:column="21">&gt;=</op:operator> <name><name pos:line="2792" pos:column="24">ll</name><op:operator pos:line="2792" pos:column="26">-&gt;</op:operator><name pos:line="2792" pos:column="28">lines</name></name></expr>)</condition><then pos:line="2792" pos:column="34"> <block pos:line="2792" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="2793" pos:column="17">DrawAnnotation</name><argument_list pos:line="2793" pos:column="31">(<argument><expr><name pos:line="2793" pos:column="32">surface</name></expr></argument>, <argument><expr><name pos:line="2793" pos:column="41">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2793" pos:column="49">line</name></expr></argument>, <argument><expr><name pos:line="2793" pos:column="55">xStart</name></expr></argument>, <argument><expr><name pos:line="2793" pos:column="63">rcLine</name></expr></argument>, <argument><expr><name pos:line="2793" pos:column="71">ll</name></expr></argument>, <argument><expr><name pos:line="2793" pos:column="75">subLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="2794" pos:column="17">return;</return> <comment type="line" pos:line="2794" pos:column="25">// No further drawing</comment>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="2796" pos:column="9">int</name></type> <name pos:line="2796" pos:column="13">lineStart</name> <init pos:line="2796" pos:column="23">= <expr><lit:literal type="number" pos:line="2796" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2797" pos:column="9">int</name></type> <name pos:line="2797" pos:column="13">lineEnd</name> <init pos:line="2797" pos:column="21">= <expr><lit:literal type="number" pos:line="2797" pos:column="23">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="2798" pos:column="9">if <condition pos:line="2798" pos:column="12">(<expr><name pos:line="2798" pos:column="13">subLine</name> <op:operator pos:line="2798" pos:column="21">&lt;</op:operator> <name><name pos:line="2798" pos:column="23">ll</name><op:operator pos:line="2798" pos:column="25">-&gt;</op:operator><name pos:line="2798" pos:column="27">lines</name></name></expr>)</condition><then pos:line="2798" pos:column="33"> <block pos:line="2798" pos:column="34">{
		<expr_stmt><expr><name pos:line="2799" pos:column="17">lineStart</name> <op:operator pos:line="2799" pos:column="27">=</op:operator> <call><name><name pos:line="2799" pos:column="29">ll</name><op:operator pos:line="2799" pos:column="31">-&gt;</op:operator><name pos:line="2799" pos:column="33">LineStart</name></name><argument_list pos:line="2799" pos:column="42">(<argument><expr><name pos:line="2799" pos:column="43">subLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2800" pos:column="17">lineEnd</name> <op:operator pos:line="2800" pos:column="25">=</op:operator> <call><name><name pos:line="2800" pos:column="27">ll</name><op:operator pos:line="2800" pos:column="29">-&gt;</op:operator><name pos:line="2800" pos:column="31">LineStart</name></name><argument_list pos:line="2800" pos:column="40">(<argument><expr><name pos:line="2800" pos:column="41">subLine</name> <op:operator pos:line="2800" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="2800" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2801" pos:column="17">if <condition pos:line="2801" pos:column="20">(<expr><name pos:line="2801" pos:column="21">subLine</name> <op:operator pos:line="2801" pos:column="29">==</op:operator> <name><name pos:line="2801" pos:column="32">ll</name><op:operator pos:line="2801" pos:column="34">-&gt;</op:operator><name pos:line="2801" pos:column="36">lines</name></name> <op:operator pos:line="2801" pos:column="42">-</op:operator> <lit:literal type="number" pos:line="2801" pos:column="44">1</lit:literal></expr>)</condition><then pos:line="2801" pos:column="46"> <block pos:line="2801" pos:column="47">{
			<expr_stmt><expr><name pos:line="2802" pos:column="25">lineEnd</name> <op:operator pos:line="2802" pos:column="33">=</op:operator> <name><name pos:line="2802" pos:column="35">ll</name><op:operator pos:line="2802" pos:column="37">-&gt;</op:operator><name pos:line="2802" pos:column="39">numCharsBeforeEOL</name></name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="2806" pos:column="9">ColourAllocated</name></type> <name pos:line="2806" pos:column="25">wrapColour</name> <init pos:line="2806" pos:column="36">= <expr><name><name pos:line="2806" pos:column="38">vsDraw</name><op:operator pos:line="2806" pos:column="44">.</op:operator><name pos:line="2806" pos:column="45">styles</name><index pos:line="2806" pos:column="51">[<expr><name pos:line="2806" pos:column="52">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="2806" pos:column="66">.</op:operator><name><name pos:line="2806" pos:column="67">fore</name><op:operator pos:line="2806" pos:column="71">.</op:operator><name pos:line="2806" pos:column="72">allocated</name></name></expr></init></decl>;</decl_stmt>
	<if pos:line="2807" pos:column="9">if <condition pos:line="2807" pos:column="12">(<expr><name><name pos:line="2807" pos:column="13">vsDraw</name><op:operator pos:line="2807" pos:column="19">.</op:operator><name pos:line="2807" pos:column="20">whitespaceForegroundSet</name></name></expr>)</condition><then pos:line="2807" pos:column="44">
		<expr_stmt><expr><name pos:line="2808" pos:column="17">wrapColour</name> <op:operator pos:line="2808" pos:column="28">=</op:operator> <name><name pos:line="2808" pos:column="30">vsDraw</name><op:operator pos:line="2808" pos:column="36">.</op:operator><name pos:line="2808" pos:column="37">whitespaceForeground</name><op:operator pos:line="2808" pos:column="57">.</op:operator><name pos:line="2808" pos:column="58">allocated</name></name></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="2810" pos:column="9">bool</name></type> <name pos:line="2810" pos:column="14">drawWrapMarkEnd</name> <init pos:line="2810" pos:column="30">= <expr><lit:literal type="boolean" pos:line="2810" pos:column="32">false</lit:literal></expr></init></decl>;</decl_stmt>

	<if pos:line="2812" pos:column="9">if <condition pos:line="2812" pos:column="12">(<expr><name pos:line="2812" pos:column="13">wrapVisualFlags</name> <op:operator pos:line="2812" pos:column="29">&amp;</op:operator> <name pos:line="2812" pos:column="31">SC_WRAPVISUALFLAG_END</name></expr>)</condition><then pos:line="2812" pos:column="53"> <block pos:line="2812" pos:column="54">{
		<if pos:line="2813" pos:column="17">if <condition pos:line="2813" pos:column="20">(<expr><name pos:line="2813" pos:column="21">subLine</name> <op:operator pos:line="2813" pos:column="29">+</op:operator> <lit:literal type="number" pos:line="2813" pos:column="31">1</lit:literal> <op:operator pos:line="2813" pos:column="33">&lt;</op:operator> <name><name pos:line="2813" pos:column="35">ll</name><op:operator pos:line="2813" pos:column="37">-&gt;</op:operator><name pos:line="2813" pos:column="39">lines</name></name></expr>)</condition><then pos:line="2813" pos:column="45"> <block pos:line="2813" pos:column="46">{
			<expr_stmt><expr><name pos:line="2814" pos:column="25">drawWrapMarkEnd</name> <op:operator pos:line="2814" pos:column="41">=</op:operator> <call><name><name pos:line="2814" pos:column="43">ll</name><op:operator pos:line="2814" pos:column="45">-&gt;</op:operator><name pos:line="2814" pos:column="47">LineStart</name></name><argument_list pos:line="2814" pos:column="56">(<argument><expr><name pos:line="2814" pos:column="57">subLine</name> <op:operator pos:line="2814" pos:column="65">+</op:operator> <lit:literal type="number" pos:line="2814" pos:column="67">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="2814" pos:column="70">!=</op:operator> <lit:literal type="number" pos:line="2814" pos:column="73">0</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<if pos:line="2818" pos:column="9">if <condition pos:line="2818" pos:column="12">(<expr><name><name pos:line="2818" pos:column="13">ll</name><op:operator pos:line="2818" pos:column="15">-&gt;</op:operator><name pos:line="2818" pos:column="17">wrapIndent</name></name> <op:operator pos:line="2818" pos:column="28">!=</op:operator> <lit:literal type="number" pos:line="2818" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="2818" pos:column="33"> <block pos:line="2818" pos:column="34">{

		<decl_stmt><decl><type><name pos:line="2820" pos:column="17">bool</name></type> <name pos:line="2820" pos:column="22">continuedWrapLine</name> <init pos:line="2820" pos:column="40">= <expr><lit:literal type="boolean" pos:line="2820" pos:column="42">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="2821" pos:column="17">if <condition pos:line="2821" pos:column="20">(<expr><name pos:line="2821" pos:column="21">subLine</name> <op:operator pos:line="2821" pos:column="29">&lt;</op:operator> <name><name pos:line="2821" pos:column="31">ll</name><op:operator pos:line="2821" pos:column="33">-&gt;</op:operator><name pos:line="2821" pos:column="35">lines</name></name></expr>)</condition><then pos:line="2821" pos:column="41"> <block pos:line="2821" pos:column="42">{
			<expr_stmt><expr><name pos:line="2822" pos:column="25">continuedWrapLine</name> <op:operator pos:line="2822" pos:column="43">=</op:operator> <call><name><name pos:line="2822" pos:column="45">ll</name><op:operator pos:line="2822" pos:column="47">-&gt;</op:operator><name pos:line="2822" pos:column="49">LineStart</name></name><argument_list pos:line="2822" pos:column="58">(<argument><expr><name pos:line="2822" pos:column="59">subLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="2822" pos:column="68">!=</op:operator> <lit:literal type="number" pos:line="2822" pos:column="71">0</lit:literal></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="2825" pos:column="17">if <condition pos:line="2825" pos:column="20">(<expr><name pos:line="2825" pos:column="21">continuedWrapLine</name></expr>)</condition><then pos:line="2825" pos:column="39"> <block pos:line="2825" pos:column="40">{
			<comment type="line" pos:line="2826" pos:column="25">// draw continuation rect</comment>
			<decl_stmt><decl><type><name pos:line="2827" pos:column="25">PRectangle</name></type> <name pos:line="2827" pos:column="36">rcPlace</name> <init pos:line="2827" pos:column="44">= <expr><name pos:line="2827" pos:column="46">rcSegment</name></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><name><name pos:line="2829" pos:column="25">rcPlace</name><op:operator pos:line="2829" pos:column="32">.</op:operator><name pos:line="2829" pos:column="33">left</name></name> <op:operator pos:line="2829" pos:column="38">=</op:operator> <name><name pos:line="2829" pos:column="40">ll</name><op:operator pos:line="2829" pos:column="42">-&gt;</op:operator><name pos:line="2829" pos:column="44">positions</name><index pos:line="2829" pos:column="53">[<expr><name pos:line="2829" pos:column="54">startseg</name></expr>]</index></name> <op:operator pos:line="2829" pos:column="64">+</op:operator> <name pos:line="2829" pos:column="66">xStart</name> <op:operator pos:line="2829" pos:column="73">-</op:operator> <name pos:line="2829" pos:column="75">subLineStart</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2830" pos:column="25">rcPlace</name><op:operator pos:line="2830" pos:column="32">.</op:operator><name pos:line="2830" pos:column="33">right</name></name> <op:operator pos:line="2830" pos:column="39">=</op:operator> <name><name pos:line="2830" pos:column="41">rcPlace</name><op:operator pos:line="2830" pos:column="48">.</op:operator><name pos:line="2830" pos:column="49">left</name></name> <op:operator pos:line="2830" pos:column="54">+</op:operator> <name><name pos:line="2830" pos:column="56">ll</name><op:operator pos:line="2830" pos:column="58">-&gt;</op:operator><name pos:line="2830" pos:column="60">wrapIndent</name></name></expr>;</expr_stmt>

			<comment type="line" pos:line="2832" pos:column="25">// default bgnd here..</comment>
			<expr_stmt><expr><call><name><name pos:line="2833" pos:column="25">surface</name><op:operator pos:line="2833" pos:column="32">-&gt;</op:operator><name pos:line="2833" pos:column="34">FillRectangle</name></name><argument_list pos:line="2833" pos:column="47">(<argument><expr><name pos:line="2833" pos:column="48">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2833" pos:column="59">overrideBackground</name> <op:operator pos:line="2833" pos:column="78">?</op:operator> <name pos:line="2833" pos:column="80">background</name> <op:operator pos:line="2833" pos:column="91">:</op:operator>
			        <name><name pos:line="2834" pos:column="33">vsDraw</name><op:operator pos:line="2834" pos:column="39">.</op:operator><name pos:line="2834" pos:column="40">styles</name><index pos:line="2834" pos:column="46">[<expr><name pos:line="2834" pos:column="47">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="2834" pos:column="61">.</op:operator><name><name pos:line="2834" pos:column="62">back</name><op:operator pos:line="2834" pos:column="66">.</op:operator><name pos:line="2834" pos:column="67">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="2836" pos:column="25">// main line style would be below but this would be inconsistent with end markers</comment>
			<comment type="line" pos:line="2837" pos:column="25">// also would possibly not be the style at wrap point</comment>
			<comment type="line" pos:line="2838" pos:column="25">//int styleMain = ll-&gt;styles[lineStart];</comment>
			<comment type="line" pos:line="2839" pos:column="25">//surface-&gt;FillRectangle(rcPlace, vsDraw.styles[styleMain].back.allocated);</comment>

			<if pos:line="2841" pos:column="25">if <condition pos:line="2841" pos:column="28">(<expr><name pos:line="2841" pos:column="29">wrapVisualFlags</name> <op:operator pos:line="2841" pos:column="45">&amp;</op:operator> <name pos:line="2841" pos:column="47">SC_WRAPVISUALFLAG_START</name></expr>)</condition><then pos:line="2841" pos:column="71"> <block pos:line="2841" pos:column="72">{

				<if pos:line="2843" pos:column="33">if <condition pos:line="2843" pos:column="36">(<expr><name pos:line="2843" pos:column="37">wrapVisualFlagsLocation</name> <op:operator pos:line="2843" pos:column="61">&amp;</op:operator> <name pos:line="2843" pos:column="63">SC_WRAPVISUALFLAGLOC_START_BY_TEXT</name></expr>)</condition><then pos:line="2843" pos:column="98">
					<expr_stmt><expr><name><name pos:line="2844" pos:column="41">rcPlace</name><op:operator pos:line="2844" pos:column="48">.</op:operator><name pos:line="2844" pos:column="49">left</name></name> <op:operator pos:line="2844" pos:column="54">=</op:operator> <name><name pos:line="2844" pos:column="56">rcPlace</name><op:operator pos:line="2844" pos:column="63">.</op:operator><name pos:line="2844" pos:column="64">right</name></name> <op:operator pos:line="2844" pos:column="70">-</op:operator> <name><name pos:line="2844" pos:column="72">vsDraw</name><op:operator pos:line="2844" pos:column="78">.</op:operator><name pos:line="2844" pos:column="79">aveCharWidth</name></name></expr>;</expr_stmt></then>
				<else pos:line="2845" pos:column="33">else
					<expr_stmt><expr><name><name pos:line="2846" pos:column="41">rcPlace</name><op:operator pos:line="2846" pos:column="48">.</op:operator><name pos:line="2846" pos:column="49">right</name></name> <op:operator pos:line="2846" pos:column="55">=</op:operator> <name><name pos:line="2846" pos:column="57">rcPlace</name><op:operator pos:line="2846" pos:column="64">.</op:operator><name pos:line="2846" pos:column="65">left</name></name> <op:operator pos:line="2846" pos:column="70">+</op:operator> <name><name pos:line="2846" pos:column="72">vsDraw</name><op:operator pos:line="2846" pos:column="78">.</op:operator><name pos:line="2846" pos:column="79">aveCharWidth</name></name></expr>;</expr_stmt></else></if>

				<expr_stmt><expr><call><name pos:line="2848" pos:column="33">DrawWrapMarker</name><argument_list pos:line="2848" pos:column="47">(<argument><expr><name pos:line="2848" pos:column="48">surface</name></expr></argument>, <argument><expr><name pos:line="2848" pos:column="57">rcPlace</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2848" pos:column="66">false</lit:literal></expr></argument>, <argument><expr><name pos:line="2848" pos:column="73">wrapColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="2851" pos:column="25">xStart</name> <op:operator pos:line="2851" pos:column="32">+=</op:operator> <name><name pos:line="2851" pos:column="35">ll</name><op:operator pos:line="2851" pos:column="37">-&gt;</op:operator><name pos:line="2851" pos:column="39">wrapIndent</name></name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="2855" pos:column="9">bool</name></type> <name pos:line="2855" pos:column="14">selBackDrawn</name> <init pos:line="2855" pos:column="27">= <expr><name><name pos:line="2855" pos:column="29">vsDraw</name><op:operator pos:line="2855" pos:column="35">.</op:operator><name pos:line="2855" pos:column="36">selbackset</name></name> <op:operator pos:line="2855" pos:column="47">&amp;&amp;</op:operator>
		<op:operator pos:line="2856" pos:column="17">(</op:operator><op:operator pos:line="2856" pos:column="18">(</op:operator><name><name pos:line="2856" pos:column="19">vsDraw</name><op:operator pos:line="2856" pos:column="25">.</op:operator><name pos:line="2856" pos:column="26">selAlpha</name></name> <op:operator pos:line="2856" pos:column="35">==</op:operator> <name pos:line="2856" pos:column="38">SC_ALPHA_NOALPHA</name><op:operator pos:line="2856" pos:column="54">)</op:operator> <op:operator pos:line="2856" pos:column="56">||</op:operator> <op:operator pos:line="2856" pos:column="59">(</op:operator><name><name pos:line="2856" pos:column="60">vsDraw</name><op:operator pos:line="2856" pos:column="66">.</op:operator><name pos:line="2856" pos:column="67">selAdditionalAlpha</name></name> <op:operator pos:line="2856" pos:column="86">==</op:operator> <name pos:line="2856" pos:column="89">SC_ALPHA_NOALPHA</name><op:operator pos:line="2856" pos:column="105">)</op:operator><op:operator pos:line="2856" pos:column="106">)</op:operator></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2858" pos:column="9">// Does not take margin into account but not significant</comment>
	<decl_stmt><decl><type><name pos:line="2859" pos:column="9">int</name></type> <name pos:line="2859" pos:column="13">xStartVisible</name> <init pos:line="2859" pos:column="27">= <expr><name pos:line="2859" pos:column="29">subLineStart</name> <op:operator pos:line="2859" pos:column="42">-</op:operator> <name pos:line="2859" pos:column="44">xStart</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="2861" pos:column="9">ll</name><op:operator pos:line="2861" pos:column="11">-&gt;</op:operator><name pos:line="2861" pos:column="13">psel</name></name> <op:operator pos:line="2861" pos:column="18">=</op:operator> <op:operator pos:line="2861" pos:column="20">&amp;</op:operator><name pos:line="2861" pos:column="21">sel</name></expr>;</expr_stmt>

	<function_decl><type><name pos:line="2863" pos:column="9">BreakFinder</name></type> <name pos:line="2863" pos:column="21">bfBack</name><parameter_list pos:line="2863" pos:column="27">(<param><decl><type><name pos:line="2863" pos:column="28">ll</name></type></decl></param>, <param><decl><type><name pos:line="2863" pos:column="32">lineStart</name></type></decl></param>, <param><decl><type><name pos:line="2863" pos:column="43">lineEnd</name></type></decl></param>, <param><decl><type><name pos:line="2863" pos:column="52">posLineStart</name></type></decl></param>, <param><decl><type><name pos:line="2863" pos:column="66">xStartVisible</name></type></decl></param>, <param><decl><type><name pos:line="2863" pos:column="81">selBackDrawn</name></type></decl></param>, <param><decl><type><name pos:line="2863" pos:column="95">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="2864" pos:column="9">int</name></type> <name pos:line="2864" pos:column="13">next</name> <init pos:line="2864" pos:column="18">= <expr><call><name><name pos:line="2864" pos:column="20">bfBack</name><op:operator pos:line="2864" pos:column="26">.</op:operator><name pos:line="2864" pos:column="27">First</name></name><argument_list pos:line="2864" pos:column="32">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2866" pos:column="9">// Background drawing loop</comment>
	<while pos:line="2867" pos:column="9">while <condition pos:line="2867" pos:column="15">(<expr><name pos:line="2867" pos:column="16">twoPhaseDraw</name> <op:operator pos:line="2867" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="2867" pos:column="32">(</op:operator><name pos:line="2867" pos:column="33">next</name> <op:operator pos:line="2867" pos:column="38">&lt;</op:operator> <name pos:line="2867" pos:column="40">lineEnd</name><op:operator pos:line="2867" pos:column="47">)</op:operator></expr>)</condition> <block pos:line="2867" pos:column="50">{

		<expr_stmt><expr><name pos:line="2869" pos:column="17">startseg</name> <op:operator pos:line="2869" pos:column="26">=</op:operator> <name pos:line="2869" pos:column="28">next</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2870" pos:column="17">next</name> <op:operator pos:line="2870" pos:column="22">=</op:operator> <call><name><name pos:line="2870" pos:column="24">bfBack</name><op:operator pos:line="2870" pos:column="30">.</op:operator><name pos:line="2870" pos:column="31">Next</name></name><argument_list pos:line="2870" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2871" pos:column="17">int</name></type> <name pos:line="2871" pos:column="21">i</name> <init pos:line="2871" pos:column="23">= <expr><name pos:line="2871" pos:column="25">next</name> <op:operator pos:line="2871" pos:column="30">-</op:operator> <lit:literal type="number" pos:line="2871" pos:column="32">1</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2872" pos:column="17">int</name></type> <name pos:line="2872" pos:column="21">iDoc</name> <init pos:line="2872" pos:column="26">= <expr><name pos:line="2872" pos:column="28">i</name> <op:operator pos:line="2872" pos:column="30">+</op:operator> <name pos:line="2872" pos:column="32">posLineStart</name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name><name pos:line="2874" pos:column="17">rcSegment</name><op:operator pos:line="2874" pos:column="26">.</op:operator><name pos:line="2874" pos:column="27">left</name></name> <op:operator pos:line="2874" pos:column="32">=</op:operator> <name><name pos:line="2874" pos:column="34">ll</name><op:operator pos:line="2874" pos:column="36">-&gt;</op:operator><name pos:line="2874" pos:column="38">positions</name><index pos:line="2874" pos:column="47">[<expr><name pos:line="2874" pos:column="48">startseg</name></expr>]</index></name> <op:operator pos:line="2874" pos:column="58">+</op:operator> <name pos:line="2874" pos:column="60">xStart</name> <op:operator pos:line="2874" pos:column="67">-</op:operator> <name pos:line="2874" pos:column="69">subLineStart</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2875" pos:column="17">rcSegment</name><op:operator pos:line="2875" pos:column="26">.</op:operator><name pos:line="2875" pos:column="27">right</name></name> <op:operator pos:line="2875" pos:column="33">=</op:operator> <name><name pos:line="2875" pos:column="35">ll</name><op:operator pos:line="2875" pos:column="37">-&gt;</op:operator><name pos:line="2875" pos:column="39">positions</name><index pos:line="2875" pos:column="48">[<expr><name pos:line="2875" pos:column="49">i</name> <op:operator pos:line="2875" pos:column="51">+</op:operator> <lit:literal type="number" pos:line="2875" pos:column="53">1</lit:literal></expr>]</index></name> <op:operator pos:line="2875" pos:column="56">+</op:operator> <name pos:line="2875" pos:column="58">xStart</name> <op:operator pos:line="2875" pos:column="65">-</op:operator> <name pos:line="2875" pos:column="67">subLineStart</name></expr>;</expr_stmt>
		<comment type="line" pos:line="2876" pos:column="17">// Only try to draw if really visible - enhances performance by not calling environment to</comment>
		<comment type="line" pos:line="2877" pos:column="17">// draw strings that are completely past the right side of the window.</comment>
		<if pos:line="2878" pos:column="17">if <condition pos:line="2878" pos:column="20">(<expr><op:operator pos:line="2878" pos:column="21">(</op:operator><name><name pos:line="2878" pos:column="22">rcSegment</name><op:operator pos:line="2878" pos:column="31">.</op:operator><name pos:line="2878" pos:column="32">left</name></name> <op:operator pos:line="2878" pos:column="37">&lt;=</op:operator> <name><name pos:line="2878" pos:column="40">rcLine</name><op:operator pos:line="2878" pos:column="46">.</op:operator><name pos:line="2878" pos:column="47">right</name></name><op:operator pos:line="2878" pos:column="52">)</op:operator> <op:operator pos:line="2878" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="2878" pos:column="57">(</op:operator><name><name pos:line="2878" pos:column="58">rcSegment</name><op:operator pos:line="2878" pos:column="67">.</op:operator><name pos:line="2878" pos:column="68">right</name></name> <op:operator pos:line="2878" pos:column="74">&gt;=</op:operator> <name><name pos:line="2878" pos:column="77">rcLine</name><op:operator pos:line="2878" pos:column="83">.</op:operator><name pos:line="2878" pos:column="84">left</name></name><op:operator pos:line="2878" pos:column="88">)</op:operator></expr>)</condition><then pos:line="2878" pos:column="90"> <block pos:line="2878" pos:column="91">{
			<comment type="line" pos:line="2879" pos:column="25">// Clip to line rectangle, since may have a huge position which will not work with some platforms</comment>
			<expr_stmt><expr><name><name pos:line="2880" pos:column="25">rcSegment</name><op:operator pos:line="2880" pos:column="34">.</op:operator><name pos:line="2880" pos:column="35">left</name></name> <op:operator pos:line="2880" pos:column="40">=</op:operator> <call><name><name pos:line="2880" pos:column="42">Platform</name><op:operator pos:line="2880" pos:column="50">::</op:operator><name pos:line="2880" pos:column="52">Maximum</name></name><argument_list pos:line="2880" pos:column="59">(<argument><expr><name><name pos:line="2880" pos:column="60">rcSegment</name><op:operator pos:line="2880" pos:column="69">.</op:operator><name pos:line="2880" pos:column="70">left</name></name></expr></argument>, <argument><expr><name><name pos:line="2880" pos:column="76">rcLine</name><op:operator pos:line="2880" pos:column="82">.</op:operator><name pos:line="2880" pos:column="83">left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="2881" pos:column="25">rcSegment</name><op:operator pos:line="2881" pos:column="34">.</op:operator><name pos:line="2881" pos:column="35">right</name></name> <op:operator pos:line="2881" pos:column="41">=</op:operator> <call><name><name pos:line="2881" pos:column="43">Platform</name><op:operator pos:line="2881" pos:column="51">::</op:operator><name pos:line="2881" pos:column="53">Minimum</name></name><argument_list pos:line="2881" pos:column="60">(<argument><expr><name><name pos:line="2881" pos:column="61">rcSegment</name><op:operator pos:line="2881" pos:column="70">.</op:operator><name pos:line="2881" pos:column="71">right</name></name></expr></argument>, <argument><expr><name><name pos:line="2881" pos:column="78">rcLine</name><op:operator pos:line="2881" pos:column="84">.</op:operator><name pos:line="2881" pos:column="85">right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2883" pos:column="25">int</name></type> <name pos:line="2883" pos:column="29">styleMain</name> <init pos:line="2883" pos:column="39">= <expr><name><name pos:line="2883" pos:column="41">ll</name><op:operator pos:line="2883" pos:column="43">-&gt;</op:operator><name pos:line="2883" pos:column="45">styles</name><index pos:line="2883" pos:column="51">[<expr><name pos:line="2883" pos:column="52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="2884" pos:column="25">const</specifier> <name pos:line="2884" pos:column="31">int</name></type> <name pos:line="2884" pos:column="35">inSelection</name> <init pos:line="2884" pos:column="47">= <expr><name pos:line="2884" pos:column="49">hideSelection</name> <op:operator pos:line="2884" pos:column="63">?</op:operator> <lit:literal type="number" pos:line="2884" pos:column="65">0</lit:literal> <op:operator pos:line="2884" pos:column="67">:</op:operator> <call><name><name pos:line="2884" pos:column="69">sel</name><op:operator pos:line="2884" pos:column="72">.</op:operator><name pos:line="2884" pos:column="73">CharacterInSelection</name></name><argument_list pos:line="2884" pos:column="93">(<argument><expr><name pos:line="2884" pos:column="94">iDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2885" pos:column="25">bool</name></type> <name pos:line="2885" pos:column="30">inHotspot</name> <init pos:line="2885" pos:column="40">= <expr><op:operator pos:line="2885" pos:column="42">(</op:operator><name><name pos:line="2885" pos:column="43">ll</name><op:operator pos:line="2885" pos:column="45">-&gt;</op:operator><name pos:line="2885" pos:column="47">hsStart</name></name> <op:operator pos:line="2885" pos:column="55">!=</op:operator> <op:operator pos:line="2885" pos:column="58">-</op:operator><lit:literal type="number" pos:line="2885" pos:column="59">1</lit:literal><op:operator pos:line="2885" pos:column="60">)</op:operator> <op:operator pos:line="2885" pos:column="62">&amp;&amp;</op:operator> <op:operator pos:line="2885" pos:column="65">(</op:operator><name pos:line="2885" pos:column="66">iDoc</name> <op:operator pos:line="2885" pos:column="71">&gt;=</op:operator> <name><name pos:line="2885" pos:column="74">ll</name><op:operator pos:line="2885" pos:column="76">-&gt;</op:operator><name pos:line="2885" pos:column="78">hsStart</name></name><op:operator pos:line="2885" pos:column="85">)</op:operator> <op:operator pos:line="2885" pos:column="87">&amp;&amp;</op:operator> <op:operator pos:line="2885" pos:column="90">(</op:operator><name pos:line="2885" pos:column="91">iDoc</name> <op:operator pos:line="2885" pos:column="96">&lt;</op:operator> <name><name pos:line="2885" pos:column="98">ll</name><op:operator pos:line="2885" pos:column="100">-&gt;</op:operator><name pos:line="2885" pos:column="102">hsEnd</name></name><op:operator pos:line="2885" pos:column="107">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2886" pos:column="25">ColourAllocated</name></type> <name pos:line="2886" pos:column="41">textBack</name> <init pos:line="2886" pos:column="50">= <expr><call><name pos:line="2886" pos:column="52">TextBackground</name><argument_list pos:line="2886" pos:column="66">(<argument><expr><name pos:line="2886" pos:column="67">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2886" pos:column="75">overrideBackground</name></expr></argument>, <argument><expr><name pos:line="2886" pos:column="95">background</name></expr></argument>, <argument><expr><name pos:line="2886" pos:column="107">inSelection</name></expr></argument>, <argument><expr><name pos:line="2886" pos:column="120">inHotspot</name></expr></argument>, <argument><expr><name pos:line="2886" pos:column="131">styleMain</name></expr></argument>, <argument><expr><name pos:line="2886" pos:column="142">i</name></expr></argument>, <argument><expr><name pos:line="2886" pos:column="145">ll</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2887" pos:column="25">if <condition pos:line="2887" pos:column="28">(<expr><name><name pos:line="2887" pos:column="29">ll</name><op:operator pos:line="2887" pos:column="31">-&gt;</op:operator><name pos:line="2887" pos:column="33">chars</name><index pos:line="2887" pos:column="38">[<expr><name pos:line="2887" pos:column="39">i</name></expr>]</index></name> <op:operator pos:line="2887" pos:column="42">==</op:operator> <lit:literal type="char" pos:line="2887" pos:column="45">'\t'</lit:literal></expr>)</condition><then pos:line="2887" pos:column="50"> <block pos:line="2887" pos:column="51">{
				<comment type="line" pos:line="2888" pos:column="33">// Tab display</comment>
				<if pos:line="2889" pos:column="33">if <condition pos:line="2889" pos:column="36">(<expr><name pos:line="2889" pos:column="37">drawWhitespaceBackground</name> <op:operator pos:line="2889" pos:column="62">&amp;&amp;</op:operator>
				        <op:operator pos:line="2890" pos:column="41">(</op:operator><op:operator pos:line="2890" pos:column="42">!</op:operator><name pos:line="2890" pos:column="43">inIndentation</name> <op:operator pos:line="2890" pos:column="57">||</op:operator> <name><name pos:line="2890" pos:column="60">vsDraw</name><op:operator pos:line="2890" pos:column="66">.</op:operator><name pos:line="2890" pos:column="67">viewWhitespace</name></name> <op:operator pos:line="2890" pos:column="82">==</op:operator> <name pos:line="2890" pos:column="85">wsVisibleAlways</name><op:operator pos:line="2890" pos:column="100">)</op:operator></expr>)</condition><then pos:line="2890" pos:column="102">
					<expr_stmt><expr><name pos:line="2891" pos:column="41">textBack</name> <op:operator pos:line="2891" pos:column="50">=</op:operator> <name><name pos:line="2891" pos:column="52">vsDraw</name><op:operator pos:line="2891" pos:column="58">.</op:operator><name pos:line="2891" pos:column="59">whitespaceBackground</name><op:operator pos:line="2891" pos:column="79">.</op:operator><name pos:line="2891" pos:column="80">allocated</name></name></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><call><name><name pos:line="2892" pos:column="33">surface</name><op:operator pos:line="2892" pos:column="40">-&gt;</op:operator><name pos:line="2892" pos:column="42">FillRectangle</name></name><argument_list pos:line="2892" pos:column="55">(<argument><expr><name pos:line="2892" pos:column="56">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2892" pos:column="67">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="2893" pos:column="27">else <if pos:line="2893" pos:column="32">if <condition pos:line="2893" pos:column="35">(<expr><call><name pos:line="2893" pos:column="36">IsControlCharacter</name><argument_list pos:line="2893" pos:column="54">(<argument><expr><name><name pos:line="2893" pos:column="55">ll</name><op:operator pos:line="2893" pos:column="57">-&gt;</op:operator><name pos:line="2893" pos:column="59">chars</name><index pos:line="2893" pos:column="64">[<expr><name pos:line="2893" pos:column="65">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2893" pos:column="69"> <block pos:line="2893" pos:column="70">{
				<comment type="line" pos:line="2894" pos:column="33">// Control character display</comment>
				<expr_stmt><expr><name pos:line="2895" pos:column="33">inIndentation</name> <op:operator pos:line="2895" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="2895" pos:column="49">false</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2896" pos:column="33">surface</name><op:operator pos:line="2896" pos:column="40">-&gt;</op:operator><name pos:line="2896" pos:column="42">FillRectangle</name></name><argument_list pos:line="2896" pos:column="55">(<argument><expr><name pos:line="2896" pos:column="56">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2896" pos:column="67">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="2897" pos:column="27">else <block pos:line="2897" pos:column="32">{
				<comment type="line" pos:line="2898" pos:column="33">// Normal text display</comment>
				<expr_stmt><expr><call><name><name pos:line="2899" pos:column="33">surface</name><op:operator pos:line="2899" pos:column="40">-&gt;</op:operator><name pos:line="2899" pos:column="42">FillRectangle</name></name><argument_list pos:line="2899" pos:column="55">(<argument><expr><name pos:line="2899" pos:column="56">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2899" pos:column="67">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="2900" pos:column="33">if <condition pos:line="2900" pos:column="36">(<expr><name><name pos:line="2900" pos:column="37">vsDraw</name><op:operator pos:line="2900" pos:column="43">.</op:operator><name pos:line="2900" pos:column="44">viewWhitespace</name></name> <op:operator pos:line="2900" pos:column="59">!=</op:operator> <name pos:line="2900" pos:column="62">wsInvisible</name> <op:operator pos:line="2900" pos:column="74">||</op:operator>
				        <op:operator pos:line="2901" pos:column="41">(</op:operator><name pos:line="2901" pos:column="42">inIndentation</name> <op:operator pos:line="2901" pos:column="56">&amp;&amp;</op:operator> <name><name pos:line="2901" pos:column="59">vsDraw</name><op:operator pos:line="2901" pos:column="65">.</op:operator><name pos:line="2901" pos:column="66">viewIndentationGuides</name></name> <op:operator pos:line="2901" pos:column="88">==</op:operator> <name pos:line="2901" pos:column="91">ivReal</name><op:operator pos:line="2901" pos:column="97">)</op:operator></expr>)</condition><then pos:line="2901" pos:column="99"> <block pos:line="2901" pos:column="100">{
					<for pos:line="2902" pos:column="41">for (<init><decl><type><name pos:line="2902" pos:column="46">int</name></type> <name pos:line="2902" pos:column="50">cpos</name> <init pos:line="2902" pos:column="55">= <expr><lit:literal type="number" pos:line="2902" pos:column="57">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2902" pos:column="60">cpos</name> <op:operator pos:line="2902" pos:column="65">&lt;=</op:operator> <name pos:line="2902" pos:column="68">i</name> <op:operator pos:line="2902" pos:column="70">-</op:operator> <name pos:line="2902" pos:column="72">startseg</name></expr>;</condition> <incr><expr><name pos:line="2902" pos:column="82">cpos</name><op:operator pos:line="2902" pos:column="86">++</op:operator></expr></incr>) <block pos:line="2902" pos:column="90">{
						<if pos:line="2903" pos:column="49">if <condition pos:line="2903" pos:column="52">(<expr><name><name pos:line="2903" pos:column="53">ll</name><op:operator pos:line="2903" pos:column="55">-&gt;</op:operator><name pos:line="2903" pos:column="57">chars</name><index pos:line="2903" pos:column="62">[<expr><name pos:line="2903" pos:column="63">cpos</name> <op:operator pos:line="2903" pos:column="68">+</op:operator> <name pos:line="2903" pos:column="70">startseg</name></expr>]</index></name> <op:operator pos:line="2903" pos:column="80">==</op:operator> <lit:literal type="char" pos:line="2903" pos:column="83">' '</lit:literal></expr>)</condition><then pos:line="2903" pos:column="87"> <block pos:line="2903" pos:column="88">{
							<if pos:line="2904" pos:column="57">if <condition pos:line="2904" pos:column="60">(<expr><name pos:line="2904" pos:column="61">drawWhitespaceBackground</name> <op:operator pos:line="2904" pos:column="86">&amp;&amp;</op:operator>
							        <op:operator pos:line="2905" pos:column="65">(</op:operator><op:operator pos:line="2905" pos:column="66">!</op:operator><name pos:line="2905" pos:column="67">inIndentation</name> <op:operator pos:line="2905" pos:column="81">||</op:operator> <name><name pos:line="2905" pos:column="84">vsDraw</name><op:operator pos:line="2905" pos:column="90">.</op:operator><name pos:line="2905" pos:column="91">viewWhitespace</name></name> <op:operator pos:line="2905" pos:column="106">==</op:operator> <name pos:line="2905" pos:column="109">wsVisibleAlways</name><op:operator pos:line="2905" pos:column="124">)</op:operator></expr>)</condition><then pos:line="2905" pos:column="126"> <block pos:line="2905" pos:column="127">{
								<decl_stmt><decl><type><name pos:line="2906" pos:column="65">PRectangle</name></type> <name pos:line="2906" pos:column="76">rcSpace</name><argument_list pos:line="2906" pos:column="83">(<argument><expr><name><name pos:line="2906" pos:column="84">ll</name><op:operator pos:line="2906" pos:column="86">-&gt;</op:operator><name pos:line="2906" pos:column="88">positions</name><index pos:line="2906" pos:column="97">[<expr><name pos:line="2906" pos:column="98">cpos</name> <op:operator pos:line="2906" pos:column="103">+</op:operator> <name pos:line="2906" pos:column="105">startseg</name></expr>]</index></name> <op:operator pos:line="2906" pos:column="115">+</op:operator> <name pos:line="2906" pos:column="117">xStart</name> <op:operator pos:line="2906" pos:column="124">-</op:operator> <name pos:line="2906" pos:column="126">subLineStart</name></expr></argument>,
									<argument><expr><name><name pos:line="2907" pos:column="73">rcSegment</name><op:operator pos:line="2907" pos:column="82">.</op:operator><name pos:line="2907" pos:column="83">top</name></name></expr></argument>,
									<argument><expr><name><name pos:line="2908" pos:column="73">ll</name><op:operator pos:line="2908" pos:column="75">-&gt;</op:operator><name pos:line="2908" pos:column="77">positions</name><index pos:line="2908" pos:column="86">[<expr><name pos:line="2908" pos:column="87">cpos</name> <op:operator pos:line="2908" pos:column="92">+</op:operator> <name pos:line="2908" pos:column="94">startseg</name> <op:operator pos:line="2908" pos:column="103">+</op:operator> <lit:literal type="number" pos:line="2908" pos:column="105">1</lit:literal></expr>]</index></name> <op:operator pos:line="2908" pos:column="108">+</op:operator> <name pos:line="2908" pos:column="110">xStart</name> <op:operator pos:line="2908" pos:column="117">-</op:operator> <name pos:line="2908" pos:column="119">subLineStart</name></expr></argument>,
									<argument><expr><name><name pos:line="2909" pos:column="73">rcSegment</name><op:operator pos:line="2909" pos:column="82">.</op:operator><name pos:line="2909" pos:column="83">bottom</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
								<expr_stmt><expr><call><name><name pos:line="2910" pos:column="65">surface</name><op:operator pos:line="2910" pos:column="72">-&gt;</op:operator><name pos:line="2910" pos:column="74">FillRectangle</name></name><argument_list pos:line="2910" pos:column="87">(<argument><expr><name pos:line="2910" pos:column="88">rcSpace</name></expr></argument>, <argument><expr><name><name pos:line="2910" pos:column="97">vsDraw</name><op:operator pos:line="2910" pos:column="103">.</op:operator><name pos:line="2910" pos:column="104">whitespaceBackground</name><op:operator pos:line="2910" pos:column="124">.</op:operator><name pos:line="2910" pos:column="125">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then></if>
						}</block></then> <else pos:line="2912" pos:column="51">else <block pos:line="2912" pos:column="56">{
							<expr_stmt><expr><name pos:line="2913" pos:column="57">inIndentation</name> <op:operator pos:line="2913" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="2913" pos:column="73">false</lit:literal></expr>;</expr_stmt>
						}</block></else></if>
					}</block></for>
				}</block></then></if>
			}</block></else></if></else></if>
		}</block></then> <else pos:line="2918" pos:column="19">else <if pos:line="2918" pos:column="24">if <condition pos:line="2918" pos:column="27">(<expr><name><name pos:line="2918" pos:column="28">rcSegment</name><op:operator pos:line="2918" pos:column="37">.</op:operator><name pos:line="2918" pos:column="38">left</name></name> <op:operator pos:line="2918" pos:column="43">&gt;</op:operator> <name><name pos:line="2918" pos:column="45">rcLine</name><op:operator pos:line="2918" pos:column="51">.</op:operator><name pos:line="2918" pos:column="52">right</name></name></expr>)</condition><then pos:line="2918" pos:column="58"> <block pos:line="2918" pos:column="59">{
			<break pos:line="2919" pos:column="25">break;</break>
		}</block></then></if></else></if>
	}</block></while>

	<if pos:line="2923" pos:column="9">if <condition pos:line="2923" pos:column="12">(<expr><name pos:line="2923" pos:column="13">twoPhaseDraw</name></expr>)</condition><then pos:line="2923" pos:column="26"> <block pos:line="2923" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="2924" pos:column="17">DrawEOL</name><argument_list pos:line="2924" pos:column="24">(<argument><expr><name pos:line="2924" pos:column="25">surface</name></expr></argument>, <argument><expr><name pos:line="2924" pos:column="34">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2924" pos:column="42">rcLine</name></expr></argument>, <argument><expr><name pos:line="2924" pos:column="50">ll</name></expr></argument>, <argument><expr><name pos:line="2924" pos:column="54">line</name></expr></argument>, <argument><expr><name pos:line="2924" pos:column="60">lineEnd</name></expr></argument>,
		        <argument><expr><name pos:line="2925" pos:column="25">xStart</name></expr></argument>, <argument><expr><name pos:line="2925" pos:column="33">subLine</name></expr></argument>, <argument><expr><name pos:line="2925" pos:column="42">subLineStart</name></expr></argument>, <argument><expr><name pos:line="2925" pos:column="56">overrideBackground</name></expr></argument>, <argument><expr><name pos:line="2925" pos:column="76">background</name></expr></argument>,
		        <argument><expr><name pos:line="2926" pos:column="25">drawWrapMarkEnd</name></expr></argument>, <argument><expr><name pos:line="2926" pos:column="42">wrapColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="2929" pos:column="9">DrawIndicators</name><argument_list pos:line="2929" pos:column="23">(<argument><expr><name pos:line="2929" pos:column="24">surface</name></expr></argument>, <argument><expr><name pos:line="2929" pos:column="33">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2929" pos:column="41">line</name></expr></argument>, <argument><expr><name pos:line="2929" pos:column="47">xStart</name></expr></argument>, <argument><expr><name pos:line="2929" pos:column="55">rcLine</name></expr></argument>, <argument><expr><name pos:line="2929" pos:column="63">ll</name></expr></argument>, <argument><expr><name pos:line="2929" pos:column="67">subLine</name></expr></argument>, <argument><expr><name pos:line="2929" pos:column="76">lineEnd</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2929" pos:column="85">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="2931" pos:column="9">if <condition pos:line="2931" pos:column="12">(<expr><name><name pos:line="2931" pos:column="13">vsDraw</name><op:operator pos:line="2931" pos:column="19">.</op:operator><name pos:line="2931" pos:column="20">edgeState</name></name> <op:operator pos:line="2931" pos:column="30">==</op:operator> <name pos:line="2931" pos:column="33">EDGE_LINE</name></expr>)</condition><then pos:line="2931" pos:column="43"> <block pos:line="2931" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="2932" pos:column="17">int</name></type> <name pos:line="2932" pos:column="21">edgeX</name> <init pos:line="2932" pos:column="27">= <expr><name pos:line="2932" pos:column="29">theEdge</name> <op:operator pos:line="2932" pos:column="37">*</op:operator> <name><name pos:line="2932" pos:column="39">vsDraw</name><op:operator pos:line="2932" pos:column="45">.</op:operator><name pos:line="2932" pos:column="46">spaceWidth</name></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="2933" pos:column="17">rcSegment</name><op:operator pos:line="2933" pos:column="26">.</op:operator><name pos:line="2933" pos:column="27">left</name></name> <op:operator pos:line="2933" pos:column="32">=</op:operator> <name pos:line="2933" pos:column="34">edgeX</name> <op:operator pos:line="2933" pos:column="40">+</op:operator> <name pos:line="2933" pos:column="42">xStart</name></expr>;</expr_stmt>
		<if pos:line="2934" pos:column="17">if <condition pos:line="2934" pos:column="20">(<expr><op:operator pos:line="2934" pos:column="21">(</op:operator><name><name pos:line="2934" pos:column="22">ll</name><op:operator pos:line="2934" pos:column="24">-&gt;</op:operator><name pos:line="2934" pos:column="26">wrapIndent</name></name> <op:operator pos:line="2934" pos:column="37">!=</op:operator> <lit:literal type="number" pos:line="2934" pos:column="40">0</lit:literal><op:operator pos:line="2934" pos:column="41">)</op:operator> <op:operator pos:line="2934" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="2934" pos:column="46">(</op:operator><name pos:line="2934" pos:column="47">lineStart</name> <op:operator pos:line="2934" pos:column="57">!=</op:operator> <lit:literal type="number" pos:line="2934" pos:column="60">0</lit:literal><op:operator pos:line="2934" pos:column="61">)</op:operator></expr>)</condition><then pos:line="2934" pos:column="63">
			<expr_stmt><expr><name><name pos:line="2935" pos:column="25">rcSegment</name><op:operator pos:line="2935" pos:column="34">.</op:operator><name pos:line="2935" pos:column="35">left</name></name> <op:operator pos:line="2935" pos:column="40">-=</op:operator> <name><name pos:line="2935" pos:column="43">ll</name><op:operator pos:line="2935" pos:column="45">-&gt;</op:operator><name pos:line="2935" pos:column="47">wrapIndent</name></name></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name><name pos:line="2936" pos:column="17">rcSegment</name><op:operator pos:line="2936" pos:column="26">.</op:operator><name pos:line="2936" pos:column="27">right</name></name> <op:operator pos:line="2936" pos:column="33">=</op:operator> <name><name pos:line="2936" pos:column="35">rcSegment</name><op:operator pos:line="2936" pos:column="44">.</op:operator><name pos:line="2936" pos:column="45">left</name></name> <op:operator pos:line="2936" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="2936" pos:column="52">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2937" pos:column="17">surface</name><op:operator pos:line="2937" pos:column="24">-&gt;</op:operator><name pos:line="2937" pos:column="26">FillRectangle</name></name><argument_list pos:line="2937" pos:column="39">(<argument><expr><name pos:line="2937" pos:column="40">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="2937" pos:column="51">vsDraw</name><op:operator pos:line="2937" pos:column="57">.</op:operator><name pos:line="2937" pos:column="58">edgecolour</name><op:operator pos:line="2937" pos:column="68">.</op:operator><name pos:line="2937" pos:column="69">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="2940" pos:column="9">// Draw underline mark as part of background if not transparent</comment>
	<decl_stmt><decl><type><name pos:line="2941" pos:column="9">int</name></type> <name pos:line="2941" pos:column="13">marks</name> <init pos:line="2941" pos:column="19">= <expr><call><name><name pos:line="2941" pos:column="21">pdoc</name><op:operator pos:line="2941" pos:column="25">-&gt;</op:operator><name pos:line="2941" pos:column="27">GetMark</name></name><argument_list pos:line="2941" pos:column="34">(<argument><expr><name pos:line="2941" pos:column="35">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2942" pos:column="9">int</name></type> <name pos:line="2942" pos:column="13">markBit</name></decl>;</decl_stmt>
	<for pos:line="2943" pos:column="9">for (<init><expr><name pos:line="2943" pos:column="14">markBit</name> <op:operator pos:line="2943" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="2943" pos:column="24">0</lit:literal></expr>;</init> <condition><expr><op:operator pos:line="2943" pos:column="27">(</op:operator><name pos:line="2943" pos:column="28">markBit</name> <op:operator pos:line="2943" pos:column="36">&lt;</op:operator> <lit:literal type="number" pos:line="2943" pos:column="38">32</lit:literal><op:operator pos:line="2943" pos:column="40">)</op:operator> <op:operator pos:line="2943" pos:column="42">&amp;&amp;</op:operator> <name pos:line="2943" pos:column="45">marks</name></expr>;</condition> <incr><expr><name pos:line="2943" pos:column="52">markBit</name><op:operator pos:line="2943" pos:column="59">++</op:operator></expr></incr>) <block pos:line="2943" pos:column="63">{
		<if pos:line="2944" pos:column="17">if <condition pos:line="2944" pos:column="20">(<expr><op:operator pos:line="2944" pos:column="21">(</op:operator><name pos:line="2944" pos:column="22">marks</name> <op:operator pos:line="2944" pos:column="28">&amp;</op:operator> <lit:literal type="number" pos:line="2944" pos:column="30">1</lit:literal><op:operator pos:line="2944" pos:column="31">)</op:operator> <op:operator pos:line="2944" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="2944" pos:column="36">(</op:operator><name><name pos:line="2944" pos:column="37">vsDraw</name><op:operator pos:line="2944" pos:column="43">.</op:operator><name pos:line="2944" pos:column="44">markers</name><index pos:line="2944" pos:column="51">[<expr><name pos:line="2944" pos:column="52">markBit</name></expr>]</index></name><op:operator pos:line="2944" pos:column="60">.</op:operator><name pos:line="2944" pos:column="61">markType</name> <op:operator pos:line="2944" pos:column="70">==</op:operator> <name pos:line="2944" pos:column="73">SC_MARK_UNDERLINE</name><op:operator pos:line="2944" pos:column="90">)</op:operator> <op:operator pos:line="2944" pos:column="92">&amp;&amp;</op:operator>
		    <op:operator pos:line="2945" pos:column="21">(</op:operator><name><name pos:line="2945" pos:column="22">vsDraw</name><op:operator pos:line="2945" pos:column="28">.</op:operator><name pos:line="2945" pos:column="29">markers</name><index pos:line="2945" pos:column="36">[<expr><name pos:line="2945" pos:column="37">markBit</name></expr>]</index></name><op:operator pos:line="2945" pos:column="45">.</op:operator><name pos:line="2945" pos:column="46">alpha</name> <op:operator pos:line="2945" pos:column="52">==</op:operator> <name pos:line="2945" pos:column="55">SC_ALPHA_NOALPHA</name><op:operator pos:line="2945" pos:column="71">)</op:operator></expr>)</condition><then pos:line="2945" pos:column="73"> <block pos:line="2945" pos:column="74">{
			<decl_stmt><decl><type><name pos:line="2946" pos:column="25">PRectangle</name></type> <name pos:line="2946" pos:column="36">rcUnderline</name> <init pos:line="2946" pos:column="48">= <expr><name pos:line="2946" pos:column="50">rcLine</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="2947" pos:column="25">rcUnderline</name><op:operator pos:line="2947" pos:column="36">.</op:operator><name pos:line="2947" pos:column="37">top</name></name> <op:operator pos:line="2947" pos:column="41">=</op:operator> <name><name pos:line="2947" pos:column="43">rcUnderline</name><op:operator pos:line="2947" pos:column="54">.</op:operator><name pos:line="2947" pos:column="55">bottom</name></name> <op:operator pos:line="2947" pos:column="62">-</op:operator> <lit:literal type="number" pos:line="2947" pos:column="64">2</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2948" pos:column="25">surface</name><op:operator pos:line="2948" pos:column="32">-&gt;</op:operator><name pos:line="2948" pos:column="34">FillRectangle</name></name><argument_list pos:line="2948" pos:column="47">(<argument><expr><name pos:line="2948" pos:column="48">rcUnderline</name></expr></argument>, <argument><expr><name><name pos:line="2948" pos:column="61">vsDraw</name><op:operator pos:line="2948" pos:column="67">.</op:operator><name pos:line="2948" pos:column="68">markers</name><index pos:line="2948" pos:column="75">[<expr><name pos:line="2948" pos:column="76">markBit</name></expr>]</index></name><op:operator pos:line="2948" pos:column="84">.</op:operator><name><name pos:line="2948" pos:column="85">back</name><op:operator pos:line="2948" pos:column="89">.</op:operator><name pos:line="2948" pos:column="90">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="2950" pos:column="17">marks</name> <op:operator pos:line="2950" pos:column="23">&gt;&gt;=</op:operator> <lit:literal type="number" pos:line="2950" pos:column="27">1</lit:literal></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><name pos:line="2953" pos:column="9">inIndentation</name> <op:operator pos:line="2953" pos:column="23">=</op:operator> <name pos:line="2953" pos:column="25">subLine</name> <op:operator pos:line="2953" pos:column="33">==</op:operator> <lit:literal type="number" pos:line="2953" pos:column="36">0</lit:literal></expr>;</expr_stmt>	<comment type="line" pos:line="2953" pos:column="41">// Do not handle indentation except on first subline.</comment>
	<comment type="line" pos:line="2954" pos:column="9">// Foreground drawing loop</comment>
	<decl_stmt><decl><type><name pos:line="2955" pos:column="9">BreakFinder</name></type> <name pos:line="2955" pos:column="21">bfFore</name><argument_list pos:line="2955" pos:column="27">(<argument><expr><name pos:line="2955" pos:column="28">ll</name></expr></argument>, <argument><expr><name pos:line="2955" pos:column="32">lineStart</name></expr></argument>, <argument><expr><name pos:line="2955" pos:column="43">lineEnd</name></expr></argument>, <argument><expr><name pos:line="2955" pos:column="52">posLineStart</name></expr></argument>, <argument><expr><name pos:line="2955" pos:column="66">xStartVisible</name></expr></argument>,
		<argument><expr><op:operator pos:line="2956" pos:column="17">(</op:operator><op:operator pos:line="2956" pos:column="18">(</op:operator><op:operator pos:line="2956" pos:column="19">!</op:operator><name pos:line="2956" pos:column="20">twoPhaseDraw</name> <op:operator pos:line="2956" pos:column="33">&amp;&amp;</op:operator> <name pos:line="2956" pos:column="36">selBackDrawn</name><op:operator pos:line="2956" pos:column="48">)</op:operator> <op:operator pos:line="2956" pos:column="50">||</op:operator> <name><name pos:line="2956" pos:column="53">vsDraw</name><op:operator pos:line="2956" pos:column="59">.</op:operator><name pos:line="2956" pos:column="60">selforeset</name></name><op:operator pos:line="2956" pos:column="70">)</op:operator></expr></argument>, <argument><expr><name pos:line="2956" pos:column="73">pdoc</name></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="2957" pos:column="9">next</name> <op:operator pos:line="2957" pos:column="14">=</op:operator> <call><name><name pos:line="2957" pos:column="16">bfFore</name><op:operator pos:line="2957" pos:column="22">.</op:operator><name pos:line="2957" pos:column="23">First</name></name><argument_list pos:line="2957" pos:column="28">()</argument_list></call></expr>;</expr_stmt>

	<while pos:line="2959" pos:column="9">while <condition pos:line="2959" pos:column="15">(<expr><name pos:line="2959" pos:column="16">next</name> <op:operator pos:line="2959" pos:column="21">&lt;</op:operator> <name pos:line="2959" pos:column="23">lineEnd</name></expr>)</condition> <block pos:line="2959" pos:column="32">{

		<expr_stmt><expr><name pos:line="2961" pos:column="17">startseg</name> <op:operator pos:line="2961" pos:column="26">=</op:operator> <name pos:line="2961" pos:column="28">next</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2962" pos:column="17">next</name> <op:operator pos:line="2962" pos:column="22">=</op:operator> <call><name><name pos:line="2962" pos:column="24">bfFore</name><op:operator pos:line="2962" pos:column="30">.</op:operator><name pos:line="2962" pos:column="31">Next</name></name><argument_list pos:line="2962" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="2963" pos:column="17">int</name></type> <name pos:line="2963" pos:column="21">i</name> <init pos:line="2963" pos:column="23">= <expr><name pos:line="2963" pos:column="25">next</name> <op:operator pos:line="2963" pos:column="30">-</op:operator> <lit:literal type="number" pos:line="2963" pos:column="32">1</lit:literal></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="2965" pos:column="17">int</name></type> <name pos:line="2965" pos:column="21">iDoc</name> <init pos:line="2965" pos:column="26">= <expr><name pos:line="2965" pos:column="28">i</name> <op:operator pos:line="2965" pos:column="30">+</op:operator> <name pos:line="2965" pos:column="32">posLineStart</name></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name><name pos:line="2967" pos:column="17">rcSegment</name><op:operator pos:line="2967" pos:column="26">.</op:operator><name pos:line="2967" pos:column="27">left</name></name> <op:operator pos:line="2967" pos:column="32">=</op:operator> <name><name pos:line="2967" pos:column="34">ll</name><op:operator pos:line="2967" pos:column="36">-&gt;</op:operator><name pos:line="2967" pos:column="38">positions</name><index pos:line="2967" pos:column="47">[<expr><name pos:line="2967" pos:column="48">startseg</name></expr>]</index></name> <op:operator pos:line="2967" pos:column="58">+</op:operator> <name pos:line="2967" pos:column="60">xStart</name> <op:operator pos:line="2967" pos:column="67">-</op:operator> <name pos:line="2967" pos:column="69">subLineStart</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2968" pos:column="17">rcSegment</name><op:operator pos:line="2968" pos:column="26">.</op:operator><name pos:line="2968" pos:column="27">right</name></name> <op:operator pos:line="2968" pos:column="33">=</op:operator> <name><name pos:line="2968" pos:column="35">ll</name><op:operator pos:line="2968" pos:column="37">-&gt;</op:operator><name pos:line="2968" pos:column="39">positions</name><index pos:line="2968" pos:column="48">[<expr><name pos:line="2968" pos:column="49">i</name> <op:operator pos:line="2968" pos:column="51">+</op:operator> <lit:literal type="number" pos:line="2968" pos:column="53">1</lit:literal></expr>]</index></name> <op:operator pos:line="2968" pos:column="56">+</op:operator> <name pos:line="2968" pos:column="58">xStart</name> <op:operator pos:line="2968" pos:column="65">-</op:operator> <name pos:line="2968" pos:column="67">subLineStart</name></expr>;</expr_stmt>
		<comment type="line" pos:line="2969" pos:column="17">// Only try to draw if really visible - enhances performance by not calling environment to</comment>
		<comment type="line" pos:line="2970" pos:column="17">// draw strings that are completely past the right side of the window.</comment>
		<if pos:line="2971" pos:column="17">if <condition pos:line="2971" pos:column="20">(<expr><op:operator pos:line="2971" pos:column="21">(</op:operator><name><name pos:line="2971" pos:column="22">rcSegment</name><op:operator pos:line="2971" pos:column="31">.</op:operator><name pos:line="2971" pos:column="32">left</name></name> <op:operator pos:line="2971" pos:column="37">&lt;=</op:operator> <name><name pos:line="2971" pos:column="40">rcLine</name><op:operator pos:line="2971" pos:column="46">.</op:operator><name pos:line="2971" pos:column="47">right</name></name><op:operator pos:line="2971" pos:column="52">)</op:operator> <op:operator pos:line="2971" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="2971" pos:column="57">(</op:operator><name><name pos:line="2971" pos:column="58">rcSegment</name><op:operator pos:line="2971" pos:column="67">.</op:operator><name pos:line="2971" pos:column="68">right</name></name> <op:operator pos:line="2971" pos:column="74">&gt;=</op:operator> <name><name pos:line="2971" pos:column="77">rcLine</name><op:operator pos:line="2971" pos:column="83">.</op:operator><name pos:line="2971" pos:column="84">left</name></name><op:operator pos:line="2971" pos:column="88">)</op:operator></expr>)</condition><then pos:line="2971" pos:column="90"> <block pos:line="2971" pos:column="91">{
			<decl_stmt><decl><type><name pos:line="2972" pos:column="25">int</name></type> <name pos:line="2972" pos:column="29">styleMain</name> <init pos:line="2972" pos:column="39">= <expr><name><name pos:line="2972" pos:column="41">ll</name><op:operator pos:line="2972" pos:column="43">-&gt;</op:operator><name pos:line="2972" pos:column="45">styles</name><index pos:line="2972" pos:column="51">[<expr><name pos:line="2972" pos:column="52">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2973" pos:column="25">ColourAllocated</name></type> <name pos:line="2973" pos:column="41">textFore</name> <init pos:line="2973" pos:column="50">= <expr><name><name pos:line="2973" pos:column="52">vsDraw</name><op:operator pos:line="2973" pos:column="58">.</op:operator><name pos:line="2973" pos:column="59">styles</name><index pos:line="2973" pos:column="65">[<expr><name pos:line="2973" pos:column="66">styleMain</name></expr>]</index></name><op:operator pos:line="2973" pos:column="76">.</op:operator><name><name pos:line="2973" pos:column="77">fore</name><op:operator pos:line="2973" pos:column="81">.</op:operator><name pos:line="2973" pos:column="82">allocated</name></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2974" pos:column="25">Font</name> <type:modifier pos:line="2974" pos:column="30">&amp;</type:modifier></type><name pos:line="2974" pos:column="31">textFont</name> <init pos:line="2974" pos:column="40">= <expr><name><name pos:line="2974" pos:column="42">vsDraw</name><op:operator pos:line="2974" pos:column="48">.</op:operator><name pos:line="2974" pos:column="49">styles</name><index pos:line="2974" pos:column="55">[<expr><name pos:line="2974" pos:column="56">styleMain</name></expr>]</index></name><op:operator pos:line="2974" pos:column="66">.</op:operator><name pos:line="2974" pos:column="67">font</name></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="2975" pos:column="25">//hotspot foreground</comment>
			<if pos:line="2976" pos:column="25">if <condition pos:line="2976" pos:column="28">(<expr><name><name pos:line="2976" pos:column="29">ll</name><op:operator pos:line="2976" pos:column="31">-&gt;</op:operator><name pos:line="2976" pos:column="33">hsStart</name></name> <op:operator pos:line="2976" pos:column="41">!=</op:operator> <op:operator pos:line="2976" pos:column="44">-</op:operator><lit:literal type="number" pos:line="2976" pos:column="45">1</lit:literal> <op:operator pos:line="2976" pos:column="47">&amp;&amp;</op:operator> <name pos:line="2976" pos:column="50">iDoc</name> <op:operator pos:line="2976" pos:column="55">&gt;=</op:operator> <name><name pos:line="2976" pos:column="58">ll</name><op:operator pos:line="2976" pos:column="60">-&gt;</op:operator><name pos:line="2976" pos:column="62">hsStart</name></name> <op:operator pos:line="2976" pos:column="70">&amp;&amp;</op:operator> <name pos:line="2976" pos:column="73">iDoc</name> <op:operator pos:line="2976" pos:column="78">&lt;</op:operator> <name pos:line="2976" pos:column="80">hsEnd</name></expr>)</condition><then pos:line="2976" pos:column="86"> <block pos:line="2976" pos:column="87">{
				<if pos:line="2977" pos:column="33">if <condition pos:line="2977" pos:column="36">(<expr><name><name pos:line="2977" pos:column="37">vsDraw</name><op:operator pos:line="2977" pos:column="43">.</op:operator><name pos:line="2977" pos:column="44">hotspotForegroundSet</name></name></expr>)</condition><then pos:line="2977" pos:column="65">
					<expr_stmt><expr><name pos:line="2978" pos:column="41">textFore</name> <op:operator pos:line="2978" pos:column="50">=</op:operator> <name><name pos:line="2978" pos:column="52">vsDraw</name><op:operator pos:line="2978" pos:column="58">.</op:operator><name pos:line="2978" pos:column="59">hotspotForeground</name><op:operator pos:line="2978" pos:column="76">.</op:operator><name pos:line="2978" pos:column="77">allocated</name></name></expr>;</expr_stmt></then></if>
			}</block></then></if>
			<decl_stmt><decl><type><specifier pos:line="2980" pos:column="25">const</specifier> <name pos:line="2980" pos:column="31">int</name></type> <name pos:line="2980" pos:column="35">inSelection</name> <init pos:line="2980" pos:column="47">= <expr><name pos:line="2980" pos:column="49">hideSelection</name> <op:operator pos:line="2980" pos:column="63">?</op:operator> <lit:literal type="number" pos:line="2980" pos:column="65">0</lit:literal> <op:operator pos:line="2980" pos:column="67">:</op:operator> <call><name><name pos:line="2980" pos:column="69">sel</name><op:operator pos:line="2980" pos:column="72">.</op:operator><name pos:line="2980" pos:column="73">CharacterInSelection</name></name><argument_list pos:line="2980" pos:column="93">(<argument><expr><name pos:line="2980" pos:column="94">iDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2981" pos:column="25">if <condition pos:line="2981" pos:column="28">(<expr><name pos:line="2981" pos:column="29">inSelection</name> <op:operator pos:line="2981" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="2981" pos:column="44">(</op:operator><name><name pos:line="2981" pos:column="45">vsDraw</name><op:operator pos:line="2981" pos:column="51">.</op:operator><name pos:line="2981" pos:column="52">selforeset</name></name><op:operator pos:line="2981" pos:column="62">)</op:operator></expr>)</condition><then pos:line="2981" pos:column="64"> <block pos:line="2981" pos:column="65">{
				<expr_stmt><expr><name pos:line="2982" pos:column="33">textFore</name> <op:operator pos:line="2982" pos:column="42">=</op:operator> <op:operator pos:line="2982" pos:column="44">(</op:operator><name pos:line="2982" pos:column="45">inSelection</name> <op:operator pos:line="2982" pos:column="57">==</op:operator> <lit:literal type="number" pos:line="2982" pos:column="60">1</lit:literal><op:operator pos:line="2982" pos:column="61">)</op:operator> <op:operator pos:line="2982" pos:column="63">?</op:operator> <name><name pos:line="2982" pos:column="65">vsDraw</name><op:operator pos:line="2982" pos:column="71">.</op:operator><name pos:line="2982" pos:column="72">selforeground</name><op:operator pos:line="2982" pos:column="85">.</op:operator><name pos:line="2982" pos:column="86">allocated</name></name> <op:operator pos:line="2982" pos:column="96">:</op:operator> <name><name pos:line="2982" pos:column="98">vsDraw</name><op:operator pos:line="2982" pos:column="104">.</op:operator><name pos:line="2982" pos:column="105">selAdditionalForeground</name><op:operator pos:line="2982" pos:column="128">.</op:operator><name pos:line="2982" pos:column="129">allocated</name></name></expr>;</expr_stmt>
			}</block></then></if>
			<decl_stmt><decl><type><name pos:line="2984" pos:column="25">bool</name></type> <name pos:line="2984" pos:column="30">inHotspot</name> <init pos:line="2984" pos:column="40">= <expr><op:operator pos:line="2984" pos:column="42">(</op:operator><name><name pos:line="2984" pos:column="43">ll</name><op:operator pos:line="2984" pos:column="45">-&gt;</op:operator><name pos:line="2984" pos:column="47">hsStart</name></name> <op:operator pos:line="2984" pos:column="55">!=</op:operator> <op:operator pos:line="2984" pos:column="58">-</op:operator><lit:literal type="number" pos:line="2984" pos:column="59">1</lit:literal><op:operator pos:line="2984" pos:column="60">)</op:operator> <op:operator pos:line="2984" pos:column="62">&amp;&amp;</op:operator> <op:operator pos:line="2984" pos:column="65">(</op:operator><name pos:line="2984" pos:column="66">iDoc</name> <op:operator pos:line="2984" pos:column="71">&gt;=</op:operator> <name><name pos:line="2984" pos:column="74">ll</name><op:operator pos:line="2984" pos:column="76">-&gt;</op:operator><name pos:line="2984" pos:column="78">hsStart</name></name><op:operator pos:line="2984" pos:column="85">)</op:operator> <op:operator pos:line="2984" pos:column="87">&amp;&amp;</op:operator> <op:operator pos:line="2984" pos:column="90">(</op:operator><name pos:line="2984" pos:column="91">iDoc</name> <op:operator pos:line="2984" pos:column="96">&lt;</op:operator> <name><name pos:line="2984" pos:column="98">ll</name><op:operator pos:line="2984" pos:column="100">-&gt;</op:operator><name pos:line="2984" pos:column="102">hsEnd</name></name><op:operator pos:line="2984" pos:column="107">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2985" pos:column="25">ColourAllocated</name></type> <name pos:line="2985" pos:column="41">textBack</name> <init pos:line="2985" pos:column="50">= <expr><call><name pos:line="2985" pos:column="52">TextBackground</name><argument_list pos:line="2985" pos:column="66">(<argument><expr><name pos:line="2985" pos:column="67">vsDraw</name></expr></argument>, <argument><expr><name pos:line="2985" pos:column="75">overrideBackground</name></expr></argument>, <argument><expr><name pos:line="2985" pos:column="95">background</name></expr></argument>, <argument><expr><name pos:line="2985" pos:column="107">inSelection</name></expr></argument>, <argument><expr><name pos:line="2985" pos:column="120">inHotspot</name></expr></argument>, <argument><expr><name pos:line="2985" pos:column="131">styleMain</name></expr></argument>, <argument><expr><name pos:line="2985" pos:column="142">i</name></expr></argument>, <argument><expr><name pos:line="2985" pos:column="145">ll</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2986" pos:column="25">if <condition pos:line="2986" pos:column="28">(<expr><name><name pos:line="2986" pos:column="29">ll</name><op:operator pos:line="2986" pos:column="31">-&gt;</op:operator><name pos:line="2986" pos:column="33">chars</name><index pos:line="2986" pos:column="38">[<expr><name pos:line="2986" pos:column="39">i</name></expr>]</index></name> <op:operator pos:line="2986" pos:column="42">==</op:operator> <lit:literal type="char" pos:line="2986" pos:column="45">'\t'</lit:literal></expr>)</condition><then pos:line="2986" pos:column="50"> <block pos:line="2986" pos:column="51">{
				<comment type="line" pos:line="2987" pos:column="33">// Tab display</comment>
				<if pos:line="2988" pos:column="33">if <condition pos:line="2988" pos:column="36">(<expr><op:operator pos:line="2988" pos:column="37">!</op:operator><name pos:line="2988" pos:column="38">twoPhaseDraw</name></expr>)</condition><then pos:line="2988" pos:column="51"> <block pos:line="2988" pos:column="52">{
					<if pos:line="2989" pos:column="41">if <condition pos:line="2989" pos:column="44">(<expr><name pos:line="2989" pos:column="45">drawWhitespaceBackground</name> <op:operator pos:line="2989" pos:column="70">&amp;&amp;</op:operator>
					        <op:operator pos:line="2990" pos:column="49">(</op:operator><op:operator pos:line="2990" pos:column="50">!</op:operator><name pos:line="2990" pos:column="51">inIndentation</name> <op:operator pos:line="2990" pos:column="65">||</op:operator> <name><name pos:line="2990" pos:column="68">vsDraw</name><op:operator pos:line="2990" pos:column="74">.</op:operator><name pos:line="2990" pos:column="75">viewWhitespace</name></name> <op:operator pos:line="2990" pos:column="90">==</op:operator> <name pos:line="2990" pos:column="93">wsVisibleAlways</name><op:operator pos:line="2990" pos:column="108">)</op:operator></expr>)</condition><then pos:line="2990" pos:column="110">
						<expr_stmt><expr><name pos:line="2991" pos:column="49">textBack</name> <op:operator pos:line="2991" pos:column="58">=</op:operator> <name><name pos:line="2991" pos:column="60">vsDraw</name><op:operator pos:line="2991" pos:column="66">.</op:operator><name pos:line="2991" pos:column="67">whitespaceBackground</name><op:operator pos:line="2991" pos:column="87">.</op:operator><name pos:line="2991" pos:column="88">allocated</name></name></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><call><name><name pos:line="2992" pos:column="41">surface</name><op:operator pos:line="2992" pos:column="48">-&gt;</op:operator><name pos:line="2992" pos:column="50">FillRectangle</name></name><argument_list pos:line="2992" pos:column="63">(<argument><expr><name pos:line="2992" pos:column="64">rcSegment</name></expr></argument>, <argument><expr><name pos:line="2992" pos:column="75">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="2994" pos:column="33">if <condition pos:line="2994" pos:column="36">(<expr><op:operator pos:line="2994" pos:column="37">(</op:operator><name><name pos:line="2994" pos:column="38">vsDraw</name><op:operator pos:line="2994" pos:column="44">.</op:operator><name pos:line="2994" pos:column="45">viewWhitespace</name></name> <op:operator pos:line="2994" pos:column="60">!=</op:operator> <name pos:line="2994" pos:column="63">wsInvisible</name><op:operator pos:line="2994" pos:column="74">)</op:operator> <op:operator pos:line="2994" pos:column="76">||</op:operator>
				        <op:operator pos:line="2995" pos:column="41">(</op:operator><name pos:line="2995" pos:column="42">inIndentation</name> <op:operator pos:line="2995" pos:column="56">&amp;&amp;</op:operator> <name><name pos:line="2995" pos:column="59">vsDraw</name><op:operator pos:line="2995" pos:column="65">.</op:operator><name pos:line="2995" pos:column="66">viewIndentationGuides</name></name> <op:operator pos:line="2995" pos:column="88">!=</op:operator> <name pos:line="2995" pos:column="91">ivNone</name><op:operator pos:line="2995" pos:column="97">)</op:operator></expr>)</condition><then pos:line="2995" pos:column="99"> <block pos:line="2995" pos:column="100">{
					<if pos:line="2996" pos:column="41">if <condition pos:line="2996" pos:column="44">(<expr><name><name pos:line="2996" pos:column="45">vsDraw</name><op:operator pos:line="2996" pos:column="51">.</op:operator><name pos:line="2996" pos:column="52">whitespaceForegroundSet</name></name></expr>)</condition><then pos:line="2996" pos:column="76">
						<expr_stmt><expr><name pos:line="2997" pos:column="49">textFore</name> <op:operator pos:line="2997" pos:column="58">=</op:operator> <name><name pos:line="2997" pos:column="60">vsDraw</name><op:operator pos:line="2997" pos:column="66">.</op:operator><name pos:line="2997" pos:column="67">whitespaceForeground</name><op:operator pos:line="2997" pos:column="87">.</op:operator><name pos:line="2997" pos:column="88">allocated</name></name></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><call><name><name pos:line="2998" pos:column="41">surface</name><op:operator pos:line="2998" pos:column="48">-&gt;</op:operator><name pos:line="2998" pos:column="50">PenColour</name></name><argument_list pos:line="2998" pos:column="59">(<argument><expr><name pos:line="2998" pos:column="60">textFore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="3000" pos:column="33">if <condition pos:line="3000" pos:column="36">(<expr><name pos:line="3000" pos:column="37">inIndentation</name> <op:operator pos:line="3000" pos:column="51">&amp;&amp;</op:operator> <name><name pos:line="3000" pos:column="54">vsDraw</name><op:operator pos:line="3000" pos:column="60">.</op:operator><name pos:line="3000" pos:column="61">viewIndentationGuides</name></name> <op:operator pos:line="3000" pos:column="83">==</op:operator> <name pos:line="3000" pos:column="86">ivReal</name></expr>)</condition><then pos:line="3000" pos:column="93"> <block pos:line="3000" pos:column="94">{
					<for pos:line="3001" pos:column="41">for (<init><decl><type><name pos:line="3001" pos:column="46">int</name></type> <name pos:line="3001" pos:column="50">xIG</name> <init pos:line="3001" pos:column="54">= <expr><name><name pos:line="3001" pos:column="56">ll</name><op:operator pos:line="3001" pos:column="58">-&gt;</op:operator><name pos:line="3001" pos:column="60">positions</name><index pos:line="3001" pos:column="69">[<expr><name pos:line="3001" pos:column="70">i</name></expr>]</index></name> <op:operator pos:line="3001" pos:column="73">/</op:operator> <name pos:line="3001" pos:column="75">indentWidth</name> <op:operator pos:line="3001" pos:column="87">*</op:operator> <name pos:line="3001" pos:column="89">indentWidth</name></expr></init></decl>;</init> <condition><expr><name pos:line="3001" pos:column="102">xIG</name> <op:operator pos:line="3001" pos:column="106">&lt;</op:operator> <name><name pos:line="3001" pos:column="108">ll</name><op:operator pos:line="3001" pos:column="110">-&gt;</op:operator><name pos:line="3001" pos:column="112">positions</name><index pos:line="3001" pos:column="121">[<expr><name pos:line="3001" pos:column="122">i</name> <op:operator pos:line="3001" pos:column="124">+</op:operator> <lit:literal type="number" pos:line="3001" pos:column="126">1</lit:literal></expr>]</index></name></expr>;</condition> <incr><expr><name pos:line="3001" pos:column="130">xIG</name> <op:operator pos:line="3001" pos:column="134">+=</op:operator> <name pos:line="3001" pos:column="137">indentWidth</name></expr></incr>) <block pos:line="3001" pos:column="150">{
						<if pos:line="3002" pos:column="49">if <condition pos:line="3002" pos:column="52">(<expr><name pos:line="3002" pos:column="53">xIG</name> <op:operator pos:line="3002" pos:column="57">&gt;=</op:operator> <name><name pos:line="3002" pos:column="60">ll</name><op:operator pos:line="3002" pos:column="62">-&gt;</op:operator><name pos:line="3002" pos:column="64">positions</name><index pos:line="3002" pos:column="73">[<expr><name pos:line="3002" pos:column="74">i</name></expr>]</index></name> <op:operator pos:line="3002" pos:column="77">&amp;&amp;</op:operator> <name pos:line="3002" pos:column="80">xIG</name> <op:operator pos:line="3002" pos:column="84">&gt;</op:operator> <lit:literal type="number" pos:line="3002" pos:column="86">0</lit:literal></expr>)</condition><then pos:line="3002" pos:column="88"> <block pos:line="3002" pos:column="89">{
							<expr_stmt><expr><call><name pos:line="3003" pos:column="57">DrawIndentGuide</name><argument_list pos:line="3003" pos:column="72">(<argument><expr><name pos:line="3003" pos:column="73">surface</name></expr></argument>, <argument><expr><name pos:line="3003" pos:column="82">lineVisible</name></expr></argument>, <argument><expr><name><name pos:line="3003" pos:column="95">vsDraw</name><op:operator pos:line="3003" pos:column="101">.</op:operator><name pos:line="3003" pos:column="102">lineHeight</name></name></expr></argument>, <argument><expr><name pos:line="3003" pos:column="114">xIG</name> <op:operator pos:line="3003" pos:column="118">+</op:operator> <name pos:line="3003" pos:column="120">xStart</name></expr></argument>, <argument><expr><name pos:line="3003" pos:column="128">rcSegment</name></expr></argument>,
							        <argument><expr><op:operator pos:line="3004" pos:column="65">(</op:operator><name><name pos:line="3004" pos:column="66">ll</name><op:operator pos:line="3004" pos:column="68">-&gt;</op:operator><name pos:line="3004" pos:column="70">xHighlightGuide</name></name> <op:operator pos:line="3004" pos:column="86">==</op:operator> <name pos:line="3004" pos:column="89">xIG</name><op:operator pos:line="3004" pos:column="92">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></for>
				}</block></then></if>
				<if pos:line="3008" pos:column="33">if <condition pos:line="3008" pos:column="36">(<expr><name><name pos:line="3008" pos:column="37">vsDraw</name><op:operator pos:line="3008" pos:column="43">.</op:operator><name pos:line="3008" pos:column="44">viewWhitespace</name></name> <op:operator pos:line="3008" pos:column="59">!=</op:operator> <name pos:line="3008" pos:column="62">wsInvisible</name></expr>)</condition><then pos:line="3008" pos:column="74"> <block pos:line="3008" pos:column="75">{
					<if pos:line="3009" pos:column="41">if <condition pos:line="3009" pos:column="44">(<expr><op:operator pos:line="3009" pos:column="45">!</op:operator><name pos:line="3009" pos:column="46">inIndentation</name> <op:operator pos:line="3009" pos:column="60">||</op:operator> <name><name pos:line="3009" pos:column="63">vsDraw</name><op:operator pos:line="3009" pos:column="69">.</op:operator><name pos:line="3009" pos:column="70">viewWhitespace</name></name> <op:operator pos:line="3009" pos:column="85">==</op:operator> <name pos:line="3009" pos:column="88">wsVisibleAlways</name></expr>)</condition><then pos:line="3009" pos:column="104"> <block pos:line="3009" pos:column="105">{
						<decl_stmt><decl><type><name pos:line="3010" pos:column="49">PRectangle</name></type> <name pos:line="3010" pos:column="60">rcTab</name><argument_list pos:line="3010" pos:column="65">(<argument><expr><name><name pos:line="3010" pos:column="66">rcSegment</name><op:operator pos:line="3010" pos:column="75">.</op:operator><name pos:line="3010" pos:column="76">left</name></name> <op:operator pos:line="3010" pos:column="81">+</op:operator> <lit:literal type="number" pos:line="3010" pos:column="83">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3010" pos:column="86">rcSegment</name><op:operator pos:line="3010" pos:column="95">.</op:operator><name pos:line="3010" pos:column="96">top</name></name> <op:operator pos:line="3010" pos:column="100">+</op:operator> <lit:literal type="number" pos:line="3010" pos:column="102">4</lit:literal></expr></argument>,
						        <argument><expr><name><name pos:line="3011" pos:column="57">rcSegment</name><op:operator pos:line="3011" pos:column="66">.</op:operator><name pos:line="3011" pos:column="67">right</name></name> <op:operator pos:line="3011" pos:column="73">-</op:operator> <lit:literal type="number" pos:line="3011" pos:column="75">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3011" pos:column="78">rcSegment</name><op:operator pos:line="3011" pos:column="87">.</op:operator><name pos:line="3011" pos:column="88">bottom</name></name> <op:operator pos:line="3011" pos:column="95">-</op:operator> <name><name pos:line="3011" pos:column="97">vsDraw</name><op:operator pos:line="3011" pos:column="103">.</op:operator><name pos:line="3011" pos:column="104">maxDescent</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
						<expr_stmt><expr><call><name pos:line="3012" pos:column="49">DrawTabArrow</name><argument_list pos:line="3012" pos:column="61">(<argument><expr><name pos:line="3012" pos:column="62">surface</name></expr></argument>, <argument><expr><name pos:line="3012" pos:column="71">rcTab</name></expr></argument>, <argument><expr><name><name pos:line="3012" pos:column="78">rcSegment</name><op:operator pos:line="3012" pos:column="87">.</op:operator><name pos:line="3012" pos:column="88">top</name></name> <op:operator pos:line="3012" pos:column="92">+</op:operator> <name><name pos:line="3012" pos:column="94">vsDraw</name><op:operator pos:line="3012" pos:column="100">.</op:operator><name pos:line="3012" pos:column="101">lineHeight</name></name> <op:operator pos:line="3012" pos:column="112">/</op:operator> <lit:literal type="number" pos:line="3012" pos:column="114">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then></if>
			}</block></then> <else pos:line="3015" pos:column="27">else <if pos:line="3015" pos:column="32">if <condition pos:line="3015" pos:column="35">(<expr><call><name pos:line="3015" pos:column="36">IsControlCharacter</name><argument_list pos:line="3015" pos:column="54">(<argument><expr><name><name pos:line="3015" pos:column="55">ll</name><op:operator pos:line="3015" pos:column="57">-&gt;</op:operator><name pos:line="3015" pos:column="59">chars</name><index pos:line="3015" pos:column="64">[<expr><name pos:line="3015" pos:column="65">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3015" pos:column="69"> <block pos:line="3015" pos:column="70">{
				<comment type="line" pos:line="3016" pos:column="33">// Control character display</comment>
				<expr_stmt><expr><name pos:line="3017" pos:column="33">inIndentation</name> <op:operator pos:line="3017" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="3017" pos:column="49">false</lit:literal></expr>;</expr_stmt>
				<if pos:line="3018" pos:column="33">if <condition pos:line="3018" pos:column="36">(<expr><name pos:line="3018" pos:column="37">controlCharSymbol</name> <op:operator pos:line="3018" pos:column="55">&lt;</op:operator> <lit:literal type="number" pos:line="3018" pos:column="57">32</lit:literal></expr>)</condition><then pos:line="3018" pos:column="60"> <block pos:line="3018" pos:column="61">{
					<comment type="line" pos:line="3019" pos:column="41">// Draw the character</comment>
					<decl_stmt><decl><type><specifier pos:line="3020" pos:column="41">const</specifier> <name pos:line="3020" pos:column="47">char</name> <type:modifier pos:line="3020" pos:column="52">*</type:modifier></type><name pos:line="3020" pos:column="53">ctrlChar</name> <init pos:line="3020" pos:column="62">= <expr><call><name pos:line="3020" pos:column="64">ControlCharacterString</name><argument_list pos:line="3020" pos:column="86">(<argument><expr><name><name pos:line="3020" pos:column="87">ll</name><op:operator pos:line="3020" pos:column="89">-&gt;</op:operator><name pos:line="3020" pos:column="91">chars</name><index pos:line="3020" pos:column="96">[<expr><name pos:line="3020" pos:column="97">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="3021" pos:column="41">DrawTextBlob</name><argument_list pos:line="3021" pos:column="53">(<argument><expr><name pos:line="3021" pos:column="54">surface</name></expr></argument>, <argument><expr><name pos:line="3021" pos:column="63">vsDraw</name></expr></argument>, <argument><expr><name pos:line="3021" pos:column="71">rcSegment</name></expr></argument>, <argument><expr><name pos:line="3021" pos:column="82">ctrlChar</name></expr></argument>, <argument><expr><name pos:line="3021" pos:column="92">textBack</name></expr></argument>, <argument><expr><name pos:line="3021" pos:column="102">textFore</name></expr></argument>, <argument><expr><name pos:line="3021" pos:column="112">twoPhaseDraw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="3022" pos:column="35">else <block pos:line="3022" pos:column="40">{
					<decl_stmt><decl><type><name pos:line="3023" pos:column="41">char</name></type> <name><name pos:line="3023" pos:column="46">cc</name><index pos:line="3023" pos:column="48">[<expr><lit:literal type="number" pos:line="3023" pos:column="49">2</lit:literal></expr>]</index></name> <init pos:line="3023" pos:column="52">= <expr><block pos:line="3023" pos:column="54">{ <expr><call><name><name pos:line="3023" pos:column="56">static_cast</name><argument_list pos:line="3023" pos:column="67">&lt;<argument><expr><name pos:line="3023" pos:column="68">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="3023" pos:column="73">(<argument><expr><name pos:line="3023" pos:column="74">controlCharSymbol</name></expr></argument>)</argument_list></call></expr>, <expr><lit:literal type="char" pos:line="3023" pos:column="94">'\0'</lit:literal></expr> }</block></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="3024" pos:column="41">surface</name><op:operator pos:line="3024" pos:column="48">-&gt;</op:operator><name pos:line="3024" pos:column="50">DrawTextNoClip</name></name><argument_list pos:line="3024" pos:column="64">(<argument><expr><name pos:line="3024" pos:column="65">rcSegment</name></expr></argument>, <argument><expr><name pos:line="3024" pos:column="76">ctrlCharsFont</name></expr></argument>,
					        <argument><expr><name><name pos:line="3025" pos:column="49">rcSegment</name><op:operator pos:line="3025" pos:column="58">.</op:operator><name pos:line="3025" pos:column="59">top</name></name> <op:operator pos:line="3025" pos:column="63">+</op:operator> <name><name pos:line="3025" pos:column="65">vsDraw</name><op:operator pos:line="3025" pos:column="71">.</op:operator><name pos:line="3025" pos:column="72">maxAscent</name></name></expr></argument>,
					        <argument><expr><name pos:line="3026" pos:column="49">cc</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3026" pos:column="53">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3026" pos:column="56">textBack</name></expr></argument>, <argument><expr><name pos:line="3026" pos:column="66">textFore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then> <else pos:line="3028" pos:column="27">else <if pos:line="3028" pos:column="32">if <condition pos:line="3028" pos:column="35">(<expr><op:operator pos:line="3028" pos:column="36">(</op:operator><name pos:line="3028" pos:column="37">i</name> <op:operator pos:line="3028" pos:column="39">==</op:operator> <name pos:line="3028" pos:column="42">startseg</name><op:operator pos:line="3028" pos:column="50">)</op:operator> <op:operator pos:line="3028" pos:column="52">&amp;&amp;</op:operator> <op:operator pos:line="3028" pos:column="55">(</op:operator><call><name><name pos:line="3028" pos:column="56">static_cast</name><argument_list pos:line="3028" pos:column="67">&lt;<argument><expr><name pos:line="3028" pos:column="68">unsigned</name> <name pos:line="3028" pos:column="77">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="3028" pos:column="82">(<argument><expr><name><name pos:line="3028" pos:column="83">ll</name><op:operator pos:line="3028" pos:column="85">-&gt;</op:operator><name pos:line="3028" pos:column="87">chars</name><index pos:line="3028" pos:column="92">[<expr><name pos:line="3028" pos:column="93">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <op:operator pos:line="3028" pos:column="97">&gt;=</op:operator> <lit:literal type="number" pos:line="3028" pos:column="100">0x80</lit:literal><op:operator pos:line="3028" pos:column="104">)</op:operator> <op:operator pos:line="3028" pos:column="106">&amp;&amp;</op:operator> <call><name pos:line="3028" pos:column="109">IsUnicodeMode</name><argument_list pos:line="3028" pos:column="122">()</argument_list></call></expr>)</condition><then pos:line="3028" pos:column="125"> <block pos:line="3028" pos:column="126">{
				<comment type="line" pos:line="3029" pos:column="33">// A single byte &gt;= 0x80 in UTF-8 is a bad byte and is displayed as its hex value</comment>
				<decl_stmt><decl><type><name pos:line="3030" pos:column="33">char</name></type> <name><name pos:line="3030" pos:column="38">hexits</name><index pos:line="3030" pos:column="44">[<expr><lit:literal type="number" pos:line="3030" pos:column="45">4</lit:literal></expr>]</index></name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="3031" pos:column="33">sprintf</name><argument_list pos:line="3031" pos:column="40">(<argument><expr><name pos:line="3031" pos:column="41">hexits</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="3031" pos:column="49">"x%2X"</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3031" pos:column="57">ll</name><op:operator pos:line="3031" pos:column="59">-&gt;</op:operator><name pos:line="3031" pos:column="61">chars</name><index pos:line="3031" pos:column="66">[<expr><name pos:line="3031" pos:column="67">i</name></expr>]</index></name> <op:operator pos:line="3031" pos:column="70">&amp;</op:operator> <lit:literal type="number" pos:line="3031" pos:column="72">0xff</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="3032" pos:column="33">DrawTextBlob</name><argument_list pos:line="3032" pos:column="45">(<argument><expr><name pos:line="3032" pos:column="46">surface</name></expr></argument>, <argument><expr><name pos:line="3032" pos:column="55">vsDraw</name></expr></argument>, <argument><expr><name pos:line="3032" pos:column="63">rcSegment</name></expr></argument>, <argument><expr><name pos:line="3032" pos:column="74">hexits</name></expr></argument>, <argument><expr><name pos:line="3032" pos:column="82">textBack</name></expr></argument>, <argument><expr><name pos:line="3032" pos:column="92">textFore</name></expr></argument>, <argument><expr><name pos:line="3032" pos:column="102">twoPhaseDraw</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="3033" pos:column="27">else <block pos:line="3033" pos:column="32">{
				<comment type="line" pos:line="3034" pos:column="33">// Normal text display</comment>
				<if pos:line="3035" pos:column="33">if <condition pos:line="3035" pos:column="36">(<expr><name><name pos:line="3035" pos:column="37">vsDraw</name><op:operator pos:line="3035" pos:column="43">.</op:operator><name pos:line="3035" pos:column="44">styles</name><index pos:line="3035" pos:column="50">[<expr><name pos:line="3035" pos:column="51">styleMain</name></expr>]</index></name><op:operator pos:line="3035" pos:column="61">.</op:operator><name pos:line="3035" pos:column="62">visible</name></expr>)</condition><then pos:line="3035" pos:column="70"> <block pos:line="3035" pos:column="71">{
					<if pos:line="3036" pos:column="41">if <condition pos:line="3036" pos:column="44">(<expr><name pos:line="3036" pos:column="45">twoPhaseDraw</name></expr>)</condition><then pos:line="3036" pos:column="58"> <block pos:line="3036" pos:column="59">{
						<expr_stmt><expr><call><name><name pos:line="3037" pos:column="49">surface</name><op:operator pos:line="3037" pos:column="56">-&gt;</op:operator><name pos:line="3037" pos:column="58">DrawTextTransparent</name></name><argument_list pos:line="3037" pos:column="77">(<argument><expr><name pos:line="3037" pos:column="78">rcSegment</name></expr></argument>, <argument><expr><name pos:line="3037" pos:column="89">textFont</name></expr></argument>,
						        <argument><expr><name><name pos:line="3038" pos:column="57">rcSegment</name><op:operator pos:line="3038" pos:column="66">.</op:operator><name pos:line="3038" pos:column="67">top</name></name> <op:operator pos:line="3038" pos:column="71">+</op:operator> <name><name pos:line="3038" pos:column="73">vsDraw</name><op:operator pos:line="3038" pos:column="79">.</op:operator><name pos:line="3038" pos:column="80">maxAscent</name></name></expr></argument>, <argument><expr><name><name pos:line="3038" pos:column="91">ll</name><op:operator pos:line="3038" pos:column="93">-&gt;</op:operator><name pos:line="3038" pos:column="95">chars</name></name> <op:operator pos:line="3038" pos:column="101">+</op:operator> <name pos:line="3038" pos:column="103">startseg</name></expr></argument>,
						        <argument><expr><name pos:line="3039" pos:column="57">i</name> <op:operator pos:line="3039" pos:column="59">-</op:operator> <name pos:line="3039" pos:column="61">startseg</name> <op:operator pos:line="3039" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="3039" pos:column="72">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3039" pos:column="75">textFore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then> <else pos:line="3040" pos:column="43">else <block pos:line="3040" pos:column="48">{
						<expr_stmt><expr><call><name><name pos:line="3041" pos:column="49">surface</name><op:operator pos:line="3041" pos:column="56">-&gt;</op:operator><name pos:line="3041" pos:column="58">DrawTextNoClip</name></name><argument_list pos:line="3041" pos:column="72">(<argument><expr><name pos:line="3041" pos:column="73">rcSegment</name></expr></argument>, <argument><expr><name pos:line="3041" pos:column="84">textFont</name></expr></argument>,
						        <argument><expr><name><name pos:line="3042" pos:column="57">rcSegment</name><op:operator pos:line="3042" pos:column="66">.</op:operator><name pos:line="3042" pos:column="67">top</name></name> <op:operator pos:line="3042" pos:column="71">+</op:operator> <name><name pos:line="3042" pos:column="73">vsDraw</name><op:operator pos:line="3042" pos:column="79">.</op:operator><name pos:line="3042" pos:column="80">maxAscent</name></name></expr></argument>, <argument><expr><name><name pos:line="3042" pos:column="91">ll</name><op:operator pos:line="3042" pos:column="93">-&gt;</op:operator><name pos:line="3042" pos:column="95">chars</name></name> <op:operator pos:line="3042" pos:column="101">+</op:operator> <name pos:line="3042" pos:column="103">startseg</name></expr></argument>,
						        <argument><expr><name pos:line="3043" pos:column="57">i</name> <op:operator pos:line="3043" pos:column="59">-</op:operator> <name pos:line="3043" pos:column="61">startseg</name> <op:operator pos:line="3043" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="3043" pos:column="72">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3043" pos:column="75">textFore</name></expr></argument>, <argument><expr><name pos:line="3043" pos:column="85">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if>
				<if pos:line="3046" pos:column="33">if <condition pos:line="3046" pos:column="36">(<expr><name><name pos:line="3046" pos:column="37">vsDraw</name><op:operator pos:line="3046" pos:column="43">.</op:operator><name pos:line="3046" pos:column="44">viewWhitespace</name></name> <op:operator pos:line="3046" pos:column="59">!=</op:operator> <name pos:line="3046" pos:column="62">wsInvisible</name> <op:operator pos:line="3046" pos:column="74">||</op:operator>
				        <op:operator pos:line="3047" pos:column="41">(</op:operator><name pos:line="3047" pos:column="42">inIndentation</name> <op:operator pos:line="3047" pos:column="56">&amp;&amp;</op:operator> <name><name pos:line="3047" pos:column="59">vsDraw</name><op:operator pos:line="3047" pos:column="65">.</op:operator><name pos:line="3047" pos:column="66">viewIndentationGuides</name></name> <op:operator pos:line="3047" pos:column="88">!=</op:operator> <name pos:line="3047" pos:column="91">ivNone</name><op:operator pos:line="3047" pos:column="97">)</op:operator></expr>)</condition><then pos:line="3047" pos:column="99"> <block pos:line="3047" pos:column="100">{
					<for pos:line="3048" pos:column="41">for (<init><decl><type><name pos:line="3048" pos:column="46">int</name></type> <name pos:line="3048" pos:column="50">cpos</name> <init pos:line="3048" pos:column="55">= <expr><lit:literal type="number" pos:line="3048" pos:column="57">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3048" pos:column="60">cpos</name> <op:operator pos:line="3048" pos:column="65">&lt;=</op:operator> <name pos:line="3048" pos:column="68">i</name> <op:operator pos:line="3048" pos:column="70">-</op:operator> <name pos:line="3048" pos:column="72">startseg</name></expr>;</condition> <incr><expr><name pos:line="3048" pos:column="82">cpos</name><op:operator pos:line="3048" pos:column="86">++</op:operator></expr></incr>) <block pos:line="3048" pos:column="90">{
						<if pos:line="3049" pos:column="49">if <condition pos:line="3049" pos:column="52">(<expr><name><name pos:line="3049" pos:column="53">ll</name><op:operator pos:line="3049" pos:column="55">-&gt;</op:operator><name pos:line="3049" pos:column="57">chars</name><index pos:line="3049" pos:column="62">[<expr><name pos:line="3049" pos:column="63">cpos</name> <op:operator pos:line="3049" pos:column="68">+</op:operator> <name pos:line="3049" pos:column="70">startseg</name></expr>]</index></name> <op:operator pos:line="3049" pos:column="80">==</op:operator> <lit:literal type="char" pos:line="3049" pos:column="83">' '</lit:literal></expr>)</condition><then pos:line="3049" pos:column="87"> <block pos:line="3049" pos:column="88">{
							<if pos:line="3050" pos:column="57">if <condition pos:line="3050" pos:column="60">(<expr><name><name pos:line="3050" pos:column="61">vsDraw</name><op:operator pos:line="3050" pos:column="67">.</op:operator><name pos:line="3050" pos:column="68">viewWhitespace</name></name> <op:operator pos:line="3050" pos:column="83">!=</op:operator> <name pos:line="3050" pos:column="86">wsInvisible</name></expr>)</condition><then pos:line="3050" pos:column="98"> <block pos:line="3050" pos:column="99">{
								<if pos:line="3051" pos:column="65">if <condition pos:line="3051" pos:column="68">(<expr><name><name pos:line="3051" pos:column="69">vsDraw</name><op:operator pos:line="3051" pos:column="75">.</op:operator><name pos:line="3051" pos:column="76">whitespaceForegroundSet</name></name></expr>)</condition><then pos:line="3051" pos:column="100">
									<expr_stmt><expr><name pos:line="3052" pos:column="73">textFore</name> <op:operator pos:line="3052" pos:column="82">=</op:operator> <name><name pos:line="3052" pos:column="84">vsDraw</name><op:operator pos:line="3052" pos:column="90">.</op:operator><name pos:line="3052" pos:column="91">whitespaceForeground</name><op:operator pos:line="3052" pos:column="111">.</op:operator><name pos:line="3052" pos:column="112">allocated</name></name></expr>;</expr_stmt></then></if>
								<if pos:line="3053" pos:column="65">if <condition pos:line="3053" pos:column="68">(<expr><op:operator pos:line="3053" pos:column="69">!</op:operator><name pos:line="3053" pos:column="70">inIndentation</name> <op:operator pos:line="3053" pos:column="84">||</op:operator> <name><name pos:line="3053" pos:column="87">vsDraw</name><op:operator pos:line="3053" pos:column="93">.</op:operator><name pos:line="3053" pos:column="94">viewWhitespace</name></name> <op:operator pos:line="3053" pos:column="109">==</op:operator> <name pos:line="3053" pos:column="112">wsVisibleAlways</name></expr>)</condition><then pos:line="3053" pos:column="128"> <block pos:line="3053" pos:column="129">{
									<decl_stmt><decl><type><name pos:line="3054" pos:column="73">int</name></type> <name pos:line="3054" pos:column="77">xmid</name> <init pos:line="3054" pos:column="82">= <expr><op:operator pos:line="3054" pos:column="84">(</op:operator><name><name pos:line="3054" pos:column="85">ll</name><op:operator pos:line="3054" pos:column="87">-&gt;</op:operator><name pos:line="3054" pos:column="89">positions</name><index pos:line="3054" pos:column="98">[<expr><name pos:line="3054" pos:column="99">cpos</name> <op:operator pos:line="3054" pos:column="104">+</op:operator> <name pos:line="3054" pos:column="106">startseg</name></expr>]</index></name> <op:operator pos:line="3054" pos:column="116">+</op:operator> <name><name pos:line="3054" pos:column="118">ll</name><op:operator pos:line="3054" pos:column="120">-&gt;</op:operator><name pos:line="3054" pos:column="122">positions</name><index pos:line="3054" pos:column="131">[<expr><name pos:line="3054" pos:column="132">cpos</name> <op:operator pos:line="3054" pos:column="137">+</op:operator> <name pos:line="3054" pos:column="139">startseg</name> <op:operator pos:line="3054" pos:column="148">+</op:operator> <lit:literal type="number" pos:line="3054" pos:column="150">1</lit:literal></expr>]</index></name><op:operator pos:line="3054" pos:column="152">)</op:operator> <op:operator pos:line="3054" pos:column="154">/</op:operator> <lit:literal type="number" pos:line="3054" pos:column="156">2</lit:literal></expr></init></decl>;</decl_stmt>
									<if pos:line="3055" pos:column="73">if <condition pos:line="3055" pos:column="76">(<expr><op:operator pos:line="3055" pos:column="77">!</op:operator><name pos:line="3055" pos:column="78">twoPhaseDraw</name> <op:operator pos:line="3055" pos:column="91">&amp;&amp;</op:operator> <name pos:line="3055" pos:column="94">drawWhitespaceBackground</name> <op:operator pos:line="3055" pos:column="119">&amp;&amp;</op:operator>
									        <op:operator pos:line="3056" pos:column="81">(</op:operator><op:operator pos:line="3056" pos:column="82">!</op:operator><name pos:line="3056" pos:column="83">inIndentation</name> <op:operator pos:line="3056" pos:column="97">||</op:operator> <name><name pos:line="3056" pos:column="100">vsDraw</name><op:operator pos:line="3056" pos:column="106">.</op:operator><name pos:line="3056" pos:column="107">viewWhitespace</name></name> <op:operator pos:line="3056" pos:column="122">==</op:operator> <name pos:line="3056" pos:column="125">wsVisibleAlways</name><op:operator pos:line="3056" pos:column="140">)</op:operator></expr>)</condition><then pos:line="3056" pos:column="142"> <block pos:line="3056" pos:column="143">{
										<expr_stmt><expr><name pos:line="3057" pos:column="81">textBack</name> <op:operator pos:line="3057" pos:column="90">=</op:operator> <name><name pos:line="3057" pos:column="92">vsDraw</name><op:operator pos:line="3057" pos:column="98">.</op:operator><name pos:line="3057" pos:column="99">whitespaceBackground</name><op:operator pos:line="3057" pos:column="119">.</op:operator><name pos:line="3057" pos:column="120">allocated</name></name></expr>;</expr_stmt>
										<decl_stmt><decl><type><name pos:line="3058" pos:column="81">PRectangle</name></type> <name pos:line="3058" pos:column="92">rcSpace</name><argument_list pos:line="3058" pos:column="99">(<argument><expr><name><name pos:line="3058" pos:column="100">ll</name><op:operator pos:line="3058" pos:column="102">-&gt;</op:operator><name pos:line="3058" pos:column="104">positions</name><index pos:line="3058" pos:column="113">[<expr><name pos:line="3058" pos:column="114">cpos</name> <op:operator pos:line="3058" pos:column="119">+</op:operator> <name pos:line="3058" pos:column="121">startseg</name></expr>]</index></name> <op:operator pos:line="3058" pos:column="131">+</op:operator> <name pos:line="3058" pos:column="133">xStart</name> <op:operator pos:line="3058" pos:column="140">-</op:operator> <name pos:line="3058" pos:column="142">subLineStart</name></expr></argument>,
											<argument><expr><name><name pos:line="3059" pos:column="89">rcSegment</name><op:operator pos:line="3059" pos:column="98">.</op:operator><name pos:line="3059" pos:column="99">top</name></name></expr></argument>,
											<argument><expr><name><name pos:line="3060" pos:column="89">ll</name><op:operator pos:line="3060" pos:column="91">-&gt;</op:operator><name pos:line="3060" pos:column="93">positions</name><index pos:line="3060" pos:column="102">[<expr><name pos:line="3060" pos:column="103">cpos</name> <op:operator pos:line="3060" pos:column="108">+</op:operator> <name pos:line="3060" pos:column="110">startseg</name> <op:operator pos:line="3060" pos:column="119">+</op:operator> <lit:literal type="number" pos:line="3060" pos:column="121">1</lit:literal></expr>]</index></name> <op:operator pos:line="3060" pos:column="124">+</op:operator> <name pos:line="3060" pos:column="126">xStart</name> <op:operator pos:line="3060" pos:column="133">-</op:operator> <name pos:line="3060" pos:column="135">subLineStart</name></expr></argument>,
											<argument><expr><name><name pos:line="3061" pos:column="89">rcSegment</name><op:operator pos:line="3061" pos:column="98">.</op:operator><name pos:line="3061" pos:column="99">bottom</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
										<expr_stmt><expr><call><name><name pos:line="3062" pos:column="81">surface</name><op:operator pos:line="3062" pos:column="88">-&gt;</op:operator><name pos:line="3062" pos:column="90">FillRectangle</name></name><argument_list pos:line="3062" pos:column="103">(<argument><expr><name pos:line="3062" pos:column="104">rcSpace</name></expr></argument>, <argument><expr><name pos:line="3062" pos:column="113">textBack</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									}</block></then></if>
									<decl_stmt><decl><type><name pos:line="3064" pos:column="73">PRectangle</name></type> <name pos:line="3064" pos:column="84">rcDot</name><argument_list pos:line="3064" pos:column="89">(<argument><expr><name pos:line="3064" pos:column="90">xmid</name> <op:operator pos:line="3064" pos:column="95">+</op:operator> <name pos:line="3064" pos:column="97">xStart</name> <op:operator pos:line="3064" pos:column="104">-</op:operator> <name pos:line="3064" pos:column="106">subLineStart</name></expr></argument>, <argument><expr><name><name pos:line="3064" pos:column="120">rcSegment</name><op:operator pos:line="3064" pos:column="129">.</op:operator><name pos:line="3064" pos:column="130">top</name></name> <op:operator pos:line="3064" pos:column="134">+</op:operator> <name><name pos:line="3064" pos:column="136">vsDraw</name><op:operator pos:line="3064" pos:column="142">.</op:operator><name pos:line="3064" pos:column="143">lineHeight</name></name> <op:operator pos:line="3064" pos:column="154">/</op:operator> <lit:literal type="number" pos:line="3064" pos:column="156">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3064" pos:column="159">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3064" pos:column="162">0</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
									<expr_stmt><expr><name><name pos:line="3065" pos:column="73">rcDot</name><op:operator pos:line="3065" pos:column="78">.</op:operator><name pos:line="3065" pos:column="79">right</name></name> <op:operator pos:line="3065" pos:column="85">=</op:operator> <name><name pos:line="3065" pos:column="87">rcDot</name><op:operator pos:line="3065" pos:column="92">.</op:operator><name pos:line="3065" pos:column="93">left</name></name> <op:operator pos:line="3065" pos:column="98">+</op:operator> <name><name pos:line="3065" pos:column="100">vs</name><op:operator pos:line="3065" pos:column="102">.</op:operator><name pos:line="3065" pos:column="103">whitespaceSize</name></name></expr>;</expr_stmt>
									<expr_stmt><expr><name><name pos:line="3066" pos:column="73">rcDot</name><op:operator pos:line="3066" pos:column="78">.</op:operator><name pos:line="3066" pos:column="79">bottom</name></name> <op:operator pos:line="3066" pos:column="86">=</op:operator> <name><name pos:line="3066" pos:column="88">rcDot</name><op:operator pos:line="3066" pos:column="93">.</op:operator><name pos:line="3066" pos:column="94">top</name></name> <op:operator pos:line="3066" pos:column="98">+</op:operator> <name><name pos:line="3066" pos:column="100">vs</name><op:operator pos:line="3066" pos:column="102">.</op:operator><name pos:line="3066" pos:column="103">whitespaceSize</name></name></expr>;</expr_stmt>
									<expr_stmt><expr><call><name><name pos:line="3067" pos:column="73">surface</name><op:operator pos:line="3067" pos:column="80">-&gt;</op:operator><name pos:line="3067" pos:column="82">FillRectangle</name></name><argument_list pos:line="3067" pos:column="95">(<argument><expr><name pos:line="3067" pos:column="96">rcDot</name></expr></argument>, <argument><expr><name pos:line="3067" pos:column="103">textFore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								}</block></then></if>
							}</block></then></if>
							<if pos:line="3070" pos:column="57">if <condition pos:line="3070" pos:column="60">(<expr><name pos:line="3070" pos:column="61">inIndentation</name> <op:operator pos:line="3070" pos:column="75">&amp;&amp;</op:operator> <name><name pos:line="3070" pos:column="78">vsDraw</name><op:operator pos:line="3070" pos:column="84">.</op:operator><name pos:line="3070" pos:column="85">viewIndentationGuides</name></name> <op:operator pos:line="3070" pos:column="107">==</op:operator> <name pos:line="3070" pos:column="110">ivReal</name></expr>)</condition><then pos:line="3070" pos:column="117"> <block pos:line="3070" pos:column="118">{
								<decl_stmt><decl><type><name pos:line="3071" pos:column="65">int</name></type> <name pos:line="3071" pos:column="69">startSpace</name> <init pos:line="3071" pos:column="80">= <expr><name><name pos:line="3071" pos:column="82">ll</name><op:operator pos:line="3071" pos:column="84">-&gt;</op:operator><name pos:line="3071" pos:column="86">positions</name><index pos:line="3071" pos:column="95">[<expr><name pos:line="3071" pos:column="96">cpos</name> <op:operator pos:line="3071" pos:column="101">+</op:operator> <name pos:line="3071" pos:column="103">startseg</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
								<if pos:line="3072" pos:column="65">if <condition pos:line="3072" pos:column="68">(<expr><name pos:line="3072" pos:column="69">startSpace</name> <op:operator pos:line="3072" pos:column="80">&gt;</op:operator> <lit:literal type="number" pos:line="3072" pos:column="82">0</lit:literal> <op:operator pos:line="3072" pos:column="84">&amp;&amp;</op:operator> <op:operator pos:line="3072" pos:column="87">(</op:operator><name pos:line="3072" pos:column="88">startSpace</name> <op:operator pos:line="3072" pos:column="99">%</op:operator> <name pos:line="3072" pos:column="101">indentWidth</name> <op:operator pos:line="3072" pos:column="113">==</op:operator> <lit:literal type="number" pos:line="3072" pos:column="116">0</lit:literal><op:operator pos:line="3072" pos:column="117">)</op:operator></expr>)</condition><then pos:line="3072" pos:column="119"> <block pos:line="3072" pos:column="120">{
									<expr_stmt><expr><call><name pos:line="3073" pos:column="73">DrawIndentGuide</name><argument_list pos:line="3073" pos:column="88">(<argument><expr><name pos:line="3073" pos:column="89">surface</name></expr></argument>, <argument><expr><name pos:line="3073" pos:column="98">lineVisible</name></expr></argument>, <argument><expr><name><name pos:line="3073" pos:column="111">vsDraw</name><op:operator pos:line="3073" pos:column="117">.</op:operator><name pos:line="3073" pos:column="118">lineHeight</name></name></expr></argument>, <argument><expr><name pos:line="3073" pos:column="130">startSpace</name> <op:operator pos:line="3073" pos:column="141">+</op:operator> <name pos:line="3073" pos:column="143">xStart</name></expr></argument>, <argument><expr><name pos:line="3073" pos:column="151">rcSegment</name></expr></argument>,
									        <argument><expr><op:operator pos:line="3074" pos:column="81">(</op:operator><name><name pos:line="3074" pos:column="82">ll</name><op:operator pos:line="3074" pos:column="84">-&gt;</op:operator><name pos:line="3074" pos:column="86">xHighlightGuide</name></name> <op:operator pos:line="3074" pos:column="102">==</op:operator> <name><name pos:line="3074" pos:column="105">ll</name><op:operator pos:line="3074" pos:column="107">-&gt;</op:operator><name pos:line="3074" pos:column="109">positions</name><index pos:line="3074" pos:column="118">[<expr><name pos:line="3074" pos:column="119">cpos</name> <op:operator pos:line="3074" pos:column="124">+</op:operator> <name pos:line="3074" pos:column="126">startseg</name></expr>]</index></name><op:operator pos:line="3074" pos:column="135">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								}</block></then></if>
							}</block></then></if>
						}</block></then> <else pos:line="3077" pos:column="51">else <block pos:line="3077" pos:column="56">{
							<expr_stmt><expr><name pos:line="3078" pos:column="57">inIndentation</name> <op:operator pos:line="3078" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="3078" pos:column="73">false</lit:literal></expr>;</expr_stmt>
						}</block></else></if>
					}</block></for>
				}</block></then></if>
			}</block></else></if></else></if></else></if>
			<if pos:line="3083" pos:column="25">if <condition pos:line="3083" pos:column="28">(<expr><name><name pos:line="3083" pos:column="29">ll</name><op:operator pos:line="3083" pos:column="31">-&gt;</op:operator><name pos:line="3083" pos:column="33">hsStart</name></name> <op:operator pos:line="3083" pos:column="41">!=</op:operator> <op:operator pos:line="3083" pos:column="44">-</op:operator><lit:literal type="number" pos:line="3083" pos:column="45">1</lit:literal> <op:operator pos:line="3083" pos:column="47">&amp;&amp;</op:operator> <name><name pos:line="3083" pos:column="50">vsDraw</name><op:operator pos:line="3083" pos:column="56">.</op:operator><name pos:line="3083" pos:column="57">hotspotUnderline</name></name> <op:operator pos:line="3083" pos:column="74">&amp;&amp;</op:operator> <name pos:line="3083" pos:column="77">iDoc</name> <op:operator pos:line="3083" pos:column="82">&gt;=</op:operator> <name><name pos:line="3083" pos:column="85">ll</name><op:operator pos:line="3083" pos:column="87">-&gt;</op:operator><name pos:line="3083" pos:column="89">hsStart</name></name> <op:operator pos:line="3083" pos:column="97">&amp;&amp;</op:operator> <name pos:line="3083" pos:column="100">iDoc</name> <op:operator pos:line="3083" pos:column="105">&lt;</op:operator> <name><name pos:line="3083" pos:column="107">ll</name><op:operator pos:line="3083" pos:column="109">-&gt;</op:operator><name pos:line="3083" pos:column="111">hsEnd</name></name></expr>)</condition><then pos:line="3083" pos:column="117"> <block pos:line="3083" pos:column="118">{
				<decl_stmt><decl><type><name pos:line="3084" pos:column="33">PRectangle</name></type> <name pos:line="3084" pos:column="44">rcUL</name> <init pos:line="3084" pos:column="49">= <expr><name pos:line="3084" pos:column="51">rcSegment</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="3085" pos:column="33">rcUL</name><op:operator pos:line="3085" pos:column="37">.</op:operator><name pos:line="3085" pos:column="38">top</name></name> <op:operator pos:line="3085" pos:column="42">=</op:operator> <name><name pos:line="3085" pos:column="44">rcUL</name><op:operator pos:line="3085" pos:column="48">.</op:operator><name pos:line="3085" pos:column="49">top</name></name> <op:operator pos:line="3085" pos:column="53">+</op:operator> <name><name pos:line="3085" pos:column="55">vsDraw</name><op:operator pos:line="3085" pos:column="61">.</op:operator><name pos:line="3085" pos:column="62">maxAscent</name></name> <op:operator pos:line="3085" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="3085" pos:column="74">1</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3086" pos:column="33">rcUL</name><op:operator pos:line="3086" pos:column="37">.</op:operator><name pos:line="3086" pos:column="38">bottom</name></name> <op:operator pos:line="3086" pos:column="45">=</op:operator> <name><name pos:line="3086" pos:column="47">rcUL</name><op:operator pos:line="3086" pos:column="51">.</op:operator><name pos:line="3086" pos:column="52">top</name></name> <op:operator pos:line="3086" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="3086" pos:column="58">1</lit:literal></expr>;</expr_stmt>
				<if pos:line="3087" pos:column="33">if <condition pos:line="3087" pos:column="36">(<expr><name><name pos:line="3087" pos:column="37">vsDraw</name><op:operator pos:line="3087" pos:column="43">.</op:operator><name pos:line="3087" pos:column="44">hotspotForegroundSet</name></name></expr>)</condition><then pos:line="3087" pos:column="65">
					<expr_stmt><expr><call><name><name pos:line="3088" pos:column="41">surface</name><op:operator pos:line="3088" pos:column="48">-&gt;</op:operator><name pos:line="3088" pos:column="50">FillRectangle</name></name><argument_list pos:line="3088" pos:column="63">(<argument><expr><name pos:line="3088" pos:column="64">rcUL</name></expr></argument>, <argument><expr><name><name pos:line="3088" pos:column="70">vsDraw</name><op:operator pos:line="3088" pos:column="76">.</op:operator><name pos:line="3088" pos:column="77">hotspotForeground</name><op:operator pos:line="3088" pos:column="94">.</op:operator><name pos:line="3088" pos:column="95">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="3089" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="3090" pos:column="41">surface</name><op:operator pos:line="3090" pos:column="48">-&gt;</op:operator><name pos:line="3090" pos:column="50">FillRectangle</name></name><argument_list pos:line="3090" pos:column="63">(<argument><expr><name pos:line="3090" pos:column="64">rcUL</name></expr></argument>, <argument><expr><name pos:line="3090" pos:column="70">textFore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then> <else pos:line="3091" pos:column="27">else <if pos:line="3091" pos:column="32">if <condition pos:line="3091" pos:column="35">(<expr><name><name pos:line="3091" pos:column="36">vsDraw</name><op:operator pos:line="3091" pos:column="42">.</op:operator><name pos:line="3091" pos:column="43">styles</name><index pos:line="3091" pos:column="49">[<expr><name pos:line="3091" pos:column="50">styleMain</name></expr>]</index></name><op:operator pos:line="3091" pos:column="60">.</op:operator><name pos:line="3091" pos:column="61">underline</name></expr>)</condition><then pos:line="3091" pos:column="71"> <block pos:line="3091" pos:column="72">{
				<decl_stmt><decl><type><name pos:line="3092" pos:column="33">PRectangle</name></type> <name pos:line="3092" pos:column="44">rcUL</name> <init pos:line="3092" pos:column="49">= <expr><name pos:line="3092" pos:column="51">rcSegment</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="3093" pos:column="33">rcUL</name><op:operator pos:line="3093" pos:column="37">.</op:operator><name pos:line="3093" pos:column="38">top</name></name> <op:operator pos:line="3093" pos:column="42">=</op:operator> <name><name pos:line="3093" pos:column="44">rcUL</name><op:operator pos:line="3093" pos:column="48">.</op:operator><name pos:line="3093" pos:column="49">top</name></name> <op:operator pos:line="3093" pos:column="53">+</op:operator> <name><name pos:line="3093" pos:column="55">vsDraw</name><op:operator pos:line="3093" pos:column="61">.</op:operator><name pos:line="3093" pos:column="62">maxAscent</name></name> <op:operator pos:line="3093" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="3093" pos:column="74">1</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3094" pos:column="33">rcUL</name><op:operator pos:line="3094" pos:column="37">.</op:operator><name pos:line="3094" pos:column="38">bottom</name></name> <op:operator pos:line="3094" pos:column="45">=</op:operator> <name><name pos:line="3094" pos:column="47">rcUL</name><op:operator pos:line="3094" pos:column="51">.</op:operator><name pos:line="3094" pos:column="52">top</name></name> <op:operator pos:line="3094" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="3094" pos:column="58">1</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="3095" pos:column="33">surface</name><op:operator pos:line="3095" pos:column="40">-&gt;</op:operator><name pos:line="3095" pos:column="42">FillRectangle</name></name><argument_list pos:line="3095" pos:column="55">(<argument><expr><name pos:line="3095" pos:column="56">rcUL</name></expr></argument>, <argument><expr><name pos:line="3095" pos:column="62">textFore</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if></else></if>
		}</block></then> <else pos:line="3097" pos:column="19">else <if pos:line="3097" pos:column="24">if <condition pos:line="3097" pos:column="27">(<expr><name><name pos:line="3097" pos:column="28">rcSegment</name><op:operator pos:line="3097" pos:column="37">.</op:operator><name pos:line="3097" pos:column="38">left</name></name> <op:operator pos:line="3097" pos:column="43">&gt;</op:operator> <name><name pos:line="3097" pos:column="45">rcLine</name><op:operator pos:line="3097" pos:column="51">.</op:operator><name pos:line="3097" pos:column="52">right</name></name></expr>)</condition><then pos:line="3097" pos:column="58"> <block pos:line="3097" pos:column="59">{
			<break pos:line="3098" pos:column="25">break;</break>
		}</block></then></if></else></if>
	}</block></while>
	<if pos:line="3101" pos:column="9">if <condition pos:line="3101" pos:column="12">(<expr><op:operator pos:line="3101" pos:column="13">(</op:operator><name><name pos:line="3101" pos:column="14">vsDraw</name><op:operator pos:line="3101" pos:column="20">.</op:operator><name pos:line="3101" pos:column="21">viewIndentationGuides</name></name> <op:operator pos:line="3101" pos:column="43">==</op:operator> <name pos:line="3101" pos:column="46">ivLookForward</name> <op:operator pos:line="3101" pos:column="60">||</op:operator> <name><name pos:line="3101" pos:column="63">vsDraw</name><op:operator pos:line="3101" pos:column="69">.</op:operator><name pos:line="3101" pos:column="70">viewIndentationGuides</name></name> <op:operator pos:line="3101" pos:column="92">==</op:operator> <name pos:line="3101" pos:column="95">ivLookBoth</name><op:operator pos:line="3101" pos:column="105">)</op:operator>
	        <op:operator pos:line="3102" pos:column="17">&amp;&amp;</op:operator> <op:operator pos:line="3102" pos:column="20">(</op:operator><name pos:line="3102" pos:column="21">subLine</name> <op:operator pos:line="3102" pos:column="29">==</op:operator> <lit:literal type="number" pos:line="3102" pos:column="32">0</lit:literal><op:operator pos:line="3102" pos:column="33">)</op:operator></expr>)</condition><then pos:line="3102" pos:column="35"> <block pos:line="3102" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="3103" pos:column="17">int</name></type> <name pos:line="3103" pos:column="21">indentSpace</name> <init pos:line="3103" pos:column="33">= <expr><call><name><name pos:line="3103" pos:column="35">pdoc</name><op:operator pos:line="3103" pos:column="39">-&gt;</op:operator><name pos:line="3103" pos:column="41">GetLineIndentation</name></name><argument_list pos:line="3103" pos:column="59">(<argument><expr><name pos:line="3103" pos:column="60">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="3104" pos:column="17">int</name></type> <name pos:line="3104" pos:column="21">xStartText</name> <init pos:line="3104" pos:column="32">= <expr><name><name pos:line="3104" pos:column="34">ll</name><op:operator pos:line="3104" pos:column="36">-&gt;</op:operator><name pos:line="3104" pos:column="38">positions</name><index pos:line="3104" pos:column="47">[<expr><call><name><name pos:line="3104" pos:column="48">pdoc</name><op:operator pos:line="3104" pos:column="52">-&gt;</op:operator><name pos:line="3104" pos:column="54">GetLineIndentPosition</name></name><argument_list pos:line="3104" pos:column="75">(<argument><expr><name pos:line="3104" pos:column="76">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="3104" pos:column="82">-</op:operator> <name pos:line="3104" pos:column="84">posLineStart</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="3106" pos:column="17">// Find the most recent line with some text</comment>

		<decl_stmt><decl><type><name pos:line="3108" pos:column="17">int</name></type> <name pos:line="3108" pos:column="21">lineLastWithText</name> <init pos:line="3108" pos:column="38">= <expr><name pos:line="3108" pos:column="40">line</name></expr></init></decl>;</decl_stmt>
		<while pos:line="3109" pos:column="17">while <condition pos:line="3109" pos:column="23">(<expr><name pos:line="3109" pos:column="24">lineLastWithText</name> <op:operator pos:line="3109" pos:column="41">&gt;</op:operator> <call><name><name pos:line="3109" pos:column="43">Platform</name><op:operator pos:line="3109" pos:column="51">::</op:operator><name pos:line="3109" pos:column="53">Maximum</name></name><argument_list pos:line="3109" pos:column="60">(<argument><expr><name pos:line="3109" pos:column="61">line</name><op:operator pos:line="3109" pos:column="65">-</op:operator><lit:literal type="number" pos:line="3109" pos:column="66">20</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3109" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="3109" pos:column="73">&amp;&amp;</op:operator> <call><name><name pos:line="3109" pos:column="76">pdoc</name><op:operator pos:line="3109" pos:column="80">-&gt;</op:operator><name pos:line="3109" pos:column="82">IsWhiteLine</name></name><argument_list pos:line="3109" pos:column="93">(<argument><expr><name pos:line="3109" pos:column="94">lineLastWithText</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:line="3109" pos:column="113">{
			<expr_stmt><expr><name pos:line="3110" pos:column="25">lineLastWithText</name><op:operator pos:line="3110" pos:column="41">--</op:operator></expr>;</expr_stmt>
		}</block></while>
		<if pos:line="3112" pos:column="17">if <condition pos:line="3112" pos:column="20">(<expr><name pos:line="3112" pos:column="21">lineLastWithText</name> <op:operator pos:line="3112" pos:column="38">&lt;</op:operator> <name pos:line="3112" pos:column="40">line</name></expr>)</condition><then pos:line="3112" pos:column="45"> <block pos:line="3112" pos:column="46">{
			<expr_stmt><expr><name pos:line="3113" pos:column="25">xStartText</name> <op:operator pos:line="3113" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="3113" pos:column="38">100000</lit:literal></expr>;</expr_stmt>	<comment type="line" pos:line="3113" pos:column="49">// Don't limit to visible indentation on empty line</comment>
			<comment type="line" pos:line="3114" pos:column="25">// This line is empty, so use indentation of last line with text</comment>
			<decl_stmt><decl><type><name pos:line="3115" pos:column="25">int</name></type> <name pos:line="3115" pos:column="29">indentLastWithText</name> <init pos:line="3115" pos:column="48">= <expr><call><name><name pos:line="3115" pos:column="50">pdoc</name><op:operator pos:line="3115" pos:column="54">-&gt;</op:operator><name pos:line="3115" pos:column="56">GetLineIndentation</name></name><argument_list pos:line="3115" pos:column="74">(<argument><expr><name pos:line="3115" pos:column="75">lineLastWithText</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="3116" pos:column="25">int</name></type> <name pos:line="3116" pos:column="29">isFoldHeader</name> <init pos:line="3116" pos:column="42">= <expr><call><name><name pos:line="3116" pos:column="44">pdoc</name><op:operator pos:line="3116" pos:column="48">-&gt;</op:operator><name pos:line="3116" pos:column="50">GetLevel</name></name><argument_list pos:line="3116" pos:column="58">(<argument><expr><name pos:line="3116" pos:column="59">lineLastWithText</name></expr></argument>)</argument_list></call> <op:operator pos:line="3116" pos:column="77">&amp;</op:operator> <name pos:line="3116" pos:column="79">SC_FOLDLEVELHEADERFLAG</name></expr></init></decl>;</decl_stmt>
			<if pos:line="3117" pos:column="25">if <condition pos:line="3117" pos:column="28">(<expr><name pos:line="3117" pos:column="29">isFoldHeader</name></expr>)</condition><then pos:line="3117" pos:column="42"> <block pos:line="3117" pos:column="43">{
				<comment type="line" pos:line="3118" pos:column="33">// Level is one more level than parent</comment>
				<expr_stmt><expr><name pos:line="3119" pos:column="33">indentLastWithText</name> <op:operator pos:line="3119" pos:column="52">+=</op:operator> <call><name><name pos:line="3119" pos:column="55">pdoc</name><op:operator pos:line="3119" pos:column="59">-&gt;</op:operator><name pos:line="3119" pos:column="61">IndentSize</name></name><argument_list pos:line="3119" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="3121" pos:column="25">if <condition pos:line="3121" pos:column="28">(<expr><name><name pos:line="3121" pos:column="29">vsDraw</name><op:operator pos:line="3121" pos:column="35">.</op:operator><name pos:line="3121" pos:column="36">viewIndentationGuides</name></name> <op:operator pos:line="3121" pos:column="58">==</op:operator> <name pos:line="3121" pos:column="61">ivLookForward</name></expr>)</condition><then pos:line="3121" pos:column="75"> <block pos:line="3121" pos:column="76">{
				<comment type="line" pos:line="3122" pos:column="33">// In viLookForward mode, previous line only used if it is a fold header</comment>
				<if pos:line="3123" pos:column="33">if <condition pos:line="3123" pos:column="36">(<expr><name pos:line="3123" pos:column="37">isFoldHeader</name></expr>)</condition><then pos:line="3123" pos:column="50"> <block pos:line="3123" pos:column="51">{
					<expr_stmt><expr><name pos:line="3124" pos:column="41">indentSpace</name> <op:operator pos:line="3124" pos:column="53">=</op:operator> <call><name><name pos:line="3124" pos:column="55">Platform</name><op:operator pos:line="3124" pos:column="63">::</op:operator><name pos:line="3124" pos:column="65">Maximum</name></name><argument_list pos:line="3124" pos:column="72">(<argument><expr><name pos:line="3124" pos:column="73">indentSpace</name></expr></argument>, <argument><expr><name pos:line="3124" pos:column="86">indentLastWithText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then> <else pos:line="3126" pos:column="27">else <block pos:line="3126" pos:column="32">{	<comment type="line" pos:line="3126" pos:column="41">// viLookBoth</comment>
				<expr_stmt><expr><name pos:line="3127" pos:column="33">indentSpace</name> <op:operator pos:line="3127" pos:column="45">=</op:operator> <call><name><name pos:line="3127" pos:column="47">Platform</name><op:operator pos:line="3127" pos:column="55">::</op:operator><name pos:line="3127" pos:column="57">Maximum</name></name><argument_list pos:line="3127" pos:column="64">(<argument><expr><name pos:line="3127" pos:column="65">indentSpace</name></expr></argument>, <argument><expr><name pos:line="3127" pos:column="78">indentLastWithText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="3131" pos:column="17">int</name></type> <name pos:line="3131" pos:column="21">lineNextWithText</name> <init pos:line="3131" pos:column="38">= <expr><name pos:line="3131" pos:column="40">line</name></expr></init></decl>;</decl_stmt>
		<while pos:line="3132" pos:column="17">while <condition pos:line="3132" pos:column="23">(<expr><name pos:line="3132" pos:column="24">lineNextWithText</name> <op:operator pos:line="3132" pos:column="41">&lt;</op:operator> <call><name><name pos:line="3132" pos:column="43">Platform</name><op:operator pos:line="3132" pos:column="51">::</op:operator><name pos:line="3132" pos:column="53">Minimum</name></name><argument_list pos:line="3132" pos:column="60">(<argument><expr><name pos:line="3132" pos:column="61">line</name><op:operator pos:line="3132" pos:column="65">+</op:operator><lit:literal type="number" pos:line="3132" pos:column="66">20</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="3132" pos:column="70">pdoc</name><op:operator pos:line="3132" pos:column="74">-&gt;</op:operator><name pos:line="3132" pos:column="76">LinesTotal</name></name><argument_list pos:line="3132" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="3132" pos:column="90">&amp;&amp;</op:operator> <call><name><name pos:line="3132" pos:column="93">pdoc</name><op:operator pos:line="3132" pos:column="97">-&gt;</op:operator><name pos:line="3132" pos:column="99">IsWhiteLine</name></name><argument_list pos:line="3132" pos:column="110">(<argument><expr><name pos:line="3132" pos:column="111">lineNextWithText</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:line="3132" pos:column="130">{
			<expr_stmt><expr><name pos:line="3133" pos:column="25">lineNextWithText</name><op:operator pos:line="3133" pos:column="41">++</op:operator></expr>;</expr_stmt>
		}</block></while>
		<if pos:line="3135" pos:column="17">if <condition pos:line="3135" pos:column="20">(<expr><name pos:line="3135" pos:column="21">lineNextWithText</name> <op:operator pos:line="3135" pos:column="38">&gt;</op:operator> <name pos:line="3135" pos:column="40">line</name></expr>)</condition><then pos:line="3135" pos:column="45"> <block pos:line="3135" pos:column="46">{
			<expr_stmt><expr><name pos:line="3136" pos:column="25">xStartText</name> <op:operator pos:line="3136" pos:column="36">=</op:operator> <lit:literal type="number" pos:line="3136" pos:column="38">100000</lit:literal></expr>;</expr_stmt>	<comment type="line" pos:line="3136" pos:column="49">// Don't limit to visible indentation on empty line</comment>
			<comment type="line" pos:line="3137" pos:column="25">// This line is empty, so use indentation of first next line with text</comment>
			<expr_stmt><expr><name pos:line="3138" pos:column="25">indentSpace</name> <op:operator pos:line="3138" pos:column="37">=</op:operator> <call><name><name pos:line="3138" pos:column="39">Platform</name><op:operator pos:line="3138" pos:column="47">::</op:operator><name pos:line="3138" pos:column="49">Maximum</name></name><argument_list pos:line="3138" pos:column="56">(<argument><expr><name pos:line="3138" pos:column="57">indentSpace</name></expr></argument>,
			        <argument><expr><call><name><name pos:line="3139" pos:column="33">pdoc</name><op:operator pos:line="3139" pos:column="37">-&gt;</op:operator><name pos:line="3139" pos:column="39">GetLineIndentation</name></name><argument_list pos:line="3139" pos:column="57">(<argument><expr><name pos:line="3139" pos:column="58">lineNextWithText</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<for pos:line="3142" pos:column="17">for (<init><decl><type><name pos:line="3142" pos:column="22">int</name></type> <name pos:line="3142" pos:column="26">indentPos</name> <init pos:line="3142" pos:column="36">= <expr><call><name><name pos:line="3142" pos:column="38">pdoc</name><op:operator pos:line="3142" pos:column="42">-&gt;</op:operator><name pos:line="3142" pos:column="44">IndentSize</name></name><argument_list pos:line="3142" pos:column="54">()</argument_list></call></expr></init></decl>;</init> <condition><expr><name pos:line="3142" pos:column="58">indentPos</name> <op:operator pos:line="3142" pos:column="68">&lt;</op:operator> <name pos:line="3142" pos:column="70">indentSpace</name></expr>;</condition> <incr><expr><name pos:line="3142" pos:column="83">indentPos</name> <op:operator pos:line="3142" pos:column="93">+=</op:operator> <call><name><name pos:line="3142" pos:column="96">pdoc</name><op:operator pos:line="3142" pos:column="100">-&gt;</op:operator><name pos:line="3142" pos:column="102">IndentSize</name></name><argument_list pos:line="3142" pos:column="112">()</argument_list></call></expr></incr>) <block pos:line="3142" pos:column="116">{
			<decl_stmt><decl><type><name pos:line="3143" pos:column="25">int</name></type> <name pos:line="3143" pos:column="29">xIndent</name> <init pos:line="3143" pos:column="37">= <expr><name pos:line="3143" pos:column="39">indentPos</name> <op:operator pos:line="3143" pos:column="49">*</op:operator> <name><name pos:line="3143" pos:column="51">vsDraw</name><op:operator pos:line="3143" pos:column="57">.</op:operator><name pos:line="3143" pos:column="58">spaceWidth</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="3144" pos:column="25">if <condition pos:line="3144" pos:column="28">(<expr><name pos:line="3144" pos:column="29">xIndent</name> <op:operator pos:line="3144" pos:column="37">&lt;</op:operator> <name pos:line="3144" pos:column="39">xStartText</name></expr>)</condition><then pos:line="3144" pos:column="50"> <block pos:line="3144" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="3145" pos:column="33">DrawIndentGuide</name><argument_list pos:line="3145" pos:column="48">(<argument><expr><name pos:line="3145" pos:column="49">surface</name></expr></argument>, <argument><expr><name pos:line="3145" pos:column="58">lineVisible</name></expr></argument>, <argument><expr><name><name pos:line="3145" pos:column="71">vsDraw</name><op:operator pos:line="3145" pos:column="77">.</op:operator><name pos:line="3145" pos:column="78">lineHeight</name></name></expr></argument>, <argument><expr><name pos:line="3145" pos:column="90">xIndent</name> <op:operator pos:line="3145" pos:column="98">+</op:operator> <name pos:line="3145" pos:column="100">xStart</name></expr></argument>, <argument><expr><name pos:line="3145" pos:column="108">rcSegment</name></expr></argument>,
					<argument><expr><op:operator pos:line="3146" pos:column="41">(</op:operator><name><name pos:line="3146" pos:column="42">ll</name><op:operator pos:line="3146" pos:column="44">-&gt;</op:operator><name pos:line="3146" pos:column="46">xHighlightGuide</name></name> <op:operator pos:line="3146" pos:column="62">==</op:operator> <name pos:line="3146" pos:column="65">xIndent</name><op:operator pos:line="3146" pos:column="72">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="3151" pos:column="9">DrawIndicators</name><argument_list pos:line="3151" pos:column="23">(<argument><expr><name pos:line="3151" pos:column="24">surface</name></expr></argument>, <argument><expr><name pos:line="3151" pos:column="33">vsDraw</name></expr></argument>, <argument><expr><name pos:line="3151" pos:column="41">line</name></expr></argument>, <argument><expr><name pos:line="3151" pos:column="47">xStart</name></expr></argument>, <argument><expr><name pos:line="3151" pos:column="55">rcLine</name></expr></argument>, <argument><expr><name pos:line="3151" pos:column="63">ll</name></expr></argument>, <argument><expr><name pos:line="3151" pos:column="67">subLine</name></expr></argument>, <argument><expr><name pos:line="3151" pos:column="76">lineEnd</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="3151" pos:column="85">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="3153" pos:column="9">// End of the drawing of the current line</comment>
	<if pos:line="3154" pos:column="9">if <condition pos:line="3154" pos:column="12">(<expr><op:operator pos:line="3154" pos:column="13">!</op:operator><name pos:line="3154" pos:column="14">twoPhaseDraw</name></expr>)</condition><then pos:line="3154" pos:column="27"> <block pos:line="3154" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="3155" pos:column="17">DrawEOL</name><argument_list pos:line="3155" pos:column="24">(<argument><expr><name pos:line="3155" pos:column="25">surface</name></expr></argument>, <argument><expr><name pos:line="3155" pos:column="34">vsDraw</name></expr></argument>, <argument><expr><name pos:line="3155" pos:column="42">rcLine</name></expr></argument>, <argument><expr><name pos:line="3155" pos:column="50">ll</name></expr></argument>, <argument><expr><name pos:line="3155" pos:column="54">line</name></expr></argument>, <argument><expr><name pos:line="3155" pos:column="60">lineEnd</name></expr></argument>,
		        <argument><expr><name pos:line="3156" pos:column="25">xStart</name></expr></argument>, <argument><expr><name pos:line="3156" pos:column="33">subLine</name></expr></argument>, <argument><expr><name pos:line="3156" pos:column="42">subLineStart</name></expr></argument>, <argument><expr><name pos:line="3156" pos:column="56">overrideBackground</name></expr></argument>, <argument><expr><name pos:line="3156" pos:column="76">background</name></expr></argument>,
		        <argument><expr><name pos:line="3157" pos:column="25">drawWrapMarkEnd</name></expr></argument>, <argument><expr><name pos:line="3157" pos:column="42">wrapColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="3159" pos:column="9">if <condition pos:line="3159" pos:column="12">(<expr><op:operator pos:line="3159" pos:column="13">!</op:operator><name pos:line="3159" pos:column="14">hideSelection</name> <op:operator pos:line="3159" pos:column="28">&amp;&amp;</op:operator> <op:operator pos:line="3159" pos:column="31">(</op:operator><op:operator pos:line="3159" pos:column="32">(</op:operator><name><name pos:line="3159" pos:column="33">vsDraw</name><op:operator pos:line="3159" pos:column="39">.</op:operator><name pos:line="3159" pos:column="40">selAlpha</name></name> <op:operator pos:line="3159" pos:column="49">!=</op:operator> <name pos:line="3159" pos:column="52">SC_ALPHA_NOALPHA</name><op:operator pos:line="3159" pos:column="68">)</op:operator> <op:operator pos:line="3159" pos:column="70">||</op:operator> <op:operator pos:line="3159" pos:column="73">(</op:operator><name><name pos:line="3159" pos:column="74">vsDraw</name><op:operator pos:line="3159" pos:column="80">.</op:operator><name pos:line="3159" pos:column="81">selAdditionalAlpha</name></name> <op:operator pos:line="3159" pos:column="100">!=</op:operator> <name pos:line="3159" pos:column="103">SC_ALPHA_NOALPHA</name><op:operator pos:line="3159" pos:column="119">)</op:operator><op:operator pos:line="3159" pos:column="120">)</op:operator></expr>)</condition><then pos:line="3159" pos:column="122"> <block pos:line="3159" pos:column="123">{
		<comment type="line" pos:line="3160" pos:column="17">// For each selection draw</comment>
		<decl_stmt><decl><type><name pos:line="3161" pos:column="17">int</name></type> <name pos:line="3161" pos:column="21">virtualSpaces</name> <init pos:line="3161" pos:column="35">= <expr><lit:literal type="number" pos:line="3161" pos:column="37">0</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="3162" pos:column="17">if <condition pos:line="3162" pos:column="20">(<expr><name pos:line="3162" pos:column="21">subLine</name> <op:operator pos:line="3162" pos:column="29">==</op:operator> <op:operator pos:line="3162" pos:column="32">(</op:operator><name><name pos:line="3162" pos:column="33">ll</name><op:operator pos:line="3162" pos:column="35">-&gt;</op:operator><name pos:line="3162" pos:column="37">lines</name></name> <op:operator pos:line="3162" pos:column="43">-</op:operator> <lit:literal type="number" pos:line="3162" pos:column="45">1</lit:literal><op:operator pos:line="3162" pos:column="46">)</op:operator></expr>)</condition><then pos:line="3162" pos:column="48"> <block pos:line="3162" pos:column="49">{
			<expr_stmt><expr><name pos:line="3163" pos:column="25">virtualSpaces</name> <op:operator pos:line="3163" pos:column="39">=</op:operator> <call><name><name pos:line="3163" pos:column="41">sel</name><op:operator pos:line="3163" pos:column="44">.</op:operator><name pos:line="3163" pos:column="45">VirtualSpaceFor</name></name><argument_list pos:line="3163" pos:column="60">(<argument><expr><call><name><name pos:line="3163" pos:column="61">pdoc</name><op:operator pos:line="3163" pos:column="65">-&gt;</op:operator><name pos:line="3163" pos:column="67">LineEnd</name></name><argument_list pos:line="3163" pos:column="74">(<argument><expr><name pos:line="3163" pos:column="75">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<function_decl><type><name pos:line="3165" pos:column="17">SelectionPosition</name></type> <name pos:line="3165" pos:column="35">posStart</name><parameter_list pos:line="3165" pos:column="43">(<param><decl><type><name pos:line="3165" pos:column="44">posLineStart</name></type></decl></param>)</parameter_list>;</function_decl>
		<decl_stmt><decl><type><name pos:line="3166" pos:column="17">SelectionPosition</name></type> <name pos:line="3166" pos:column="35">posEnd</name><argument_list pos:line="3166" pos:column="41">(<argument><expr><name pos:line="3166" pos:column="42">posLineStart</name> <op:operator pos:line="3166" pos:column="55">+</op:operator> <name pos:line="3166" pos:column="57">lineEnd</name></expr></argument>, <argument><expr><name pos:line="3166" pos:column="66">virtualSpaces</name></expr></argument>)</argument_list></decl>;</decl_stmt>
		<function_decl><type><name pos:line="3167" pos:column="17">SelectionSegment</name></type> <name pos:line="3167" pos:column="34">virtualSpaceRange</name><parameter_list pos:line="3167" pos:column="51">(<param><decl><type><name pos:line="3167" pos:column="52">posStart</name></type></decl></param>, <param><decl><type><name pos:line="3167" pos:column="62">posEnd</name></type></decl></param>)</parameter_list>;</function_decl>
		<for pos:line="3168" pos:column="17">for (<init><decl><type><name pos:line="3168" pos:column="22">size_t</name></type> <name pos:line="3168" pos:column="29">r</name><init pos:line="3168" pos:column="30">=<expr><lit:literal type="number" pos:line="3168" pos:column="31">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3168" pos:column="34">r</name><op:operator pos:line="3168" pos:column="35">&lt;</op:operator><call><name><name pos:line="3168" pos:column="36">sel</name><op:operator pos:line="3168" pos:column="39">.</op:operator><name pos:line="3168" pos:column="40">Count</name></name><argument_list pos:line="3168" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="3168" pos:column="49">r</name><op:operator pos:line="3168" pos:column="50">++</op:operator></expr></incr>) <block pos:line="3168" pos:column="54">{
			<decl_stmt><decl><type><name pos:line="3169" pos:column="25">int</name></type> <name pos:line="3169" pos:column="29">alpha</name> <init pos:line="3169" pos:column="35">= <expr><op:operator pos:line="3169" pos:column="37">(</op:operator><name pos:line="3169" pos:column="38">r</name> <op:operator pos:line="3169" pos:column="40">==</op:operator> <call><name><name pos:line="3169" pos:column="43">sel</name><op:operator pos:line="3169" pos:column="46">.</op:operator><name pos:line="3169" pos:column="47">Main</name></name><argument_list pos:line="3169" pos:column="51">()</argument_list></call><op:operator pos:line="3169" pos:column="53">)</op:operator> <op:operator pos:line="3169" pos:column="55">?</op:operator> <name><name pos:line="3169" pos:column="57">vsDraw</name><op:operator pos:line="3169" pos:column="63">.</op:operator><name pos:line="3169" pos:column="64">selAlpha</name></name> <op:operator pos:line="3169" pos:column="73">:</op:operator> <name><name pos:line="3169" pos:column="75">vsDraw</name><op:operator pos:line="3169" pos:column="81">.</op:operator><name pos:line="3169" pos:column="82">selAdditionalAlpha</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="3170" pos:column="25">if <condition pos:line="3170" pos:column="28">(<expr><name pos:line="3170" pos:column="29">alpha</name> <op:operator pos:line="3170" pos:column="35">!=</op:operator> <name pos:line="3170" pos:column="38">SC_ALPHA_NOALPHA</name></expr>)</condition><then pos:line="3170" pos:column="55"> <block pos:line="3170" pos:column="56">{
				<decl_stmt><decl><type><name pos:line="3171" pos:column="33">SelectionSegment</name></type> <name pos:line="3171" pos:column="50">portion</name> <init pos:line="3171" pos:column="58">= <expr><call><name><name pos:line="3171" pos:column="60">sel</name><op:operator pos:line="3171" pos:column="63">.</op:operator><name pos:line="3171" pos:column="64">Range</name></name><argument_list pos:line="3171" pos:column="69">(<argument><expr><name pos:line="3171" pos:column="70">r</name></expr></argument>)</argument_list></call><op:operator pos:line="3171" pos:column="72">.</op:operator><call><name pos:line="3171" pos:column="73">Intersect</name><argument_list pos:line="3171" pos:column="82">(<argument><expr><name pos:line="3171" pos:column="83">virtualSpaceRange</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="3172" pos:column="33">if <condition pos:line="3172" pos:column="36">(<expr><op:operator pos:line="3172" pos:column="37">!</op:operator><call><name><name pos:line="3172" pos:column="38">portion</name><op:operator pos:line="3172" pos:column="45">.</op:operator><name pos:line="3172" pos:column="46">Empty</name></name><argument_list pos:line="3172" pos:column="51">()</argument_list></call></expr>)</condition><then pos:line="3172" pos:column="54"> <block pos:line="3172" pos:column="55">{
					<decl_stmt><decl><type><specifier pos:line="3173" pos:column="41">const</specifier> <name pos:line="3173" pos:column="47">int</name></type> <name pos:line="3173" pos:column="51">spaceWidth</name> <init pos:line="3173" pos:column="62">= <expr><call><name><name pos:line="3173" pos:column="64">static_cast</name><argument_list pos:line="3173" pos:column="75">&lt;<argument><expr><name pos:line="3173" pos:column="76">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="3173" pos:column="80">(<argument><expr><name><name pos:line="3173" pos:column="81">vsDraw</name><op:operator pos:line="3173" pos:column="87">.</op:operator><name pos:line="3173" pos:column="88">styles</name><index pos:line="3173" pos:column="94">[<expr><call><name><name pos:line="3173" pos:column="95">ll</name><op:operator pos:line="3173" pos:column="97">-&gt;</op:operator><name pos:line="3173" pos:column="99">EndLineStyle</name></name><argument_list pos:line="3173" pos:column="111">()</argument_list></call></expr>]</index></name><op:operator pos:line="3173" pos:column="114">.</op:operator><name pos:line="3173" pos:column="115">spaceWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="3174" pos:column="41">rcSegment</name><op:operator pos:line="3174" pos:column="50">.</op:operator><name pos:line="3174" pos:column="51">left</name></name> <op:operator pos:line="3174" pos:column="56">=</op:operator> <name pos:line="3174" pos:column="58">xStart</name> <op:operator pos:line="3174" pos:column="65">+</op:operator> <name><name pos:line="3174" pos:column="67">ll</name><op:operator pos:line="3174" pos:column="69">-&gt;</op:operator><name pos:line="3174" pos:column="71">positions</name><index pos:line="3174" pos:column="80">[<expr><call><name><name pos:line="3174" pos:column="81">portion</name><op:operator pos:line="3174" pos:column="88">.</op:operator><name pos:line="3174" pos:column="89">start</name><op:operator pos:line="3174" pos:column="94">.</op:operator><name pos:line="3174" pos:column="95">Position</name></name><argument_list pos:line="3174" pos:column="103">()</argument_list></call> <op:operator pos:line="3174" pos:column="106">-</op:operator> <name pos:line="3174" pos:column="108">posLineStart</name></expr>]</index></name> <op:operator pos:line="3174" pos:column="122">-</op:operator> <name pos:line="3174" pos:column="124">subLineStart</name> <op:operator pos:line="3174" pos:column="137">+</op:operator> <call><name><name pos:line="3174" pos:column="139">portion</name><op:operator pos:line="3174" pos:column="146">.</op:operator><name pos:line="3174" pos:column="147">start</name><op:operator pos:line="3174" pos:column="152">.</op:operator><name pos:line="3174" pos:column="153">VirtualSpace</name></name><argument_list pos:line="3174" pos:column="165">()</argument_list></call> <op:operator pos:line="3174" pos:column="168">*</op:operator> <name pos:line="3174" pos:column="170">spaceWidth</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="3175" pos:column="41">rcSegment</name><op:operator pos:line="3175" pos:column="50">.</op:operator><name pos:line="3175" pos:column="51">right</name></name> <op:operator pos:line="3175" pos:column="57">=</op:operator> <name pos:line="3175" pos:column="59">xStart</name> <op:operator pos:line="3175" pos:column="66">+</op:operator> <name><name pos:line="3175" pos:column="68">ll</name><op:operator pos:line="3175" pos:column="70">-&gt;</op:operator><name pos:line="3175" pos:column="72">positions</name><index pos:line="3175" pos:column="81">[<expr><call><name><name pos:line="3175" pos:column="82">portion</name><op:operator pos:line="3175" pos:column="89">.</op:operator><name pos:line="3175" pos:column="90">end</name><op:operator pos:line="3175" pos:column="93">.</op:operator><name pos:line="3175" pos:column="94">Position</name></name><argument_list pos:line="3175" pos:column="102">()</argument_list></call> <op:operator pos:line="3175" pos:column="105">-</op:operator> <name pos:line="3175" pos:column="107">posLineStart</name></expr>]</index></name> <op:operator pos:line="3175" pos:column="121">-</op:operator> <name pos:line="3175" pos:column="123">subLineStart</name> <op:operator pos:line="3175" pos:column="136">+</op:operator> <call><name><name pos:line="3175" pos:column="138">portion</name><op:operator pos:line="3175" pos:column="145">.</op:operator><name pos:line="3175" pos:column="146">end</name><op:operator pos:line="3175" pos:column="149">.</op:operator><name pos:line="3175" pos:column="150">VirtualSpace</name></name><argument_list pos:line="3175" pos:column="162">()</argument_list></call> <op:operator pos:line="3175" pos:column="165">*</op:operator> <name pos:line="3175" pos:column="167">spaceWidth</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="3176" pos:column="41">rcSegment</name><op:operator pos:line="3176" pos:column="50">.</op:operator><name pos:line="3176" pos:column="51">left</name></name> <op:operator pos:line="3176" pos:column="56">=</op:operator> <call><name><name pos:line="3176" pos:column="58">Platform</name><op:operator pos:line="3176" pos:column="66">::</op:operator><name pos:line="3176" pos:column="68">Maximum</name></name><argument_list pos:line="3176" pos:column="75">(<argument><expr><name><name pos:line="3176" pos:column="76">rcSegment</name><op:operator pos:line="3176" pos:column="85">.</op:operator><name pos:line="3176" pos:column="86">left</name></name></expr></argument>, <argument><expr><name><name pos:line="3176" pos:column="92">rcLine</name><op:operator pos:line="3176" pos:column="98">.</op:operator><name pos:line="3176" pos:column="99">left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="3177" pos:column="41">rcSegment</name><op:operator pos:line="3177" pos:column="50">.</op:operator><name pos:line="3177" pos:column="51">right</name></name> <op:operator pos:line="3177" pos:column="57">=</op:operator> <call><name><name pos:line="3177" pos:column="59">Platform</name><op:operator pos:line="3177" pos:column="67">::</op:operator><name pos:line="3177" pos:column="69">Minimum</name></name><argument_list pos:line="3177" pos:column="76">(<argument><expr><name><name pos:line="3177" pos:column="77">rcSegment</name><op:operator pos:line="3177" pos:column="86">.</op:operator><name pos:line="3177" pos:column="87">right</name></name></expr></argument>, <argument><expr><name><name pos:line="3177" pos:column="94">rcLine</name><op:operator pos:line="3177" pos:column="100">.</op:operator><name pos:line="3177" pos:column="101">right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="3178" pos:column="41">SimpleAlphaRectangle</name><argument_list pos:line="3178" pos:column="61">(<argument><expr><name pos:line="3178" pos:column="62">surface</name></expr></argument>, <argument><expr><name pos:line="3178" pos:column="71">rcSegment</name></expr></argument>, <argument><expr><call><name pos:line="3178" pos:column="82">SelectionBackground</name><argument_list pos:line="3178" pos:column="101">(<argument><expr><name pos:line="3178" pos:column="102">vsDraw</name></expr></argument>, <argument><expr><name pos:line="3178" pos:column="110">r</name> <op:operator pos:line="3178" pos:column="112">==</op:operator> <call><name><name pos:line="3178" pos:column="115">sel</name><op:operator pos:line="3178" pos:column="118">.</op:operator><name pos:line="3178" pos:column="119">Main</name></name><argument_list pos:line="3178" pos:column="123">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="3178" pos:column="128">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></for>
	}</block></then></if>

	<comment type="line" pos:line="3184" pos:column="9">// Draw any translucent whole line states</comment>
	<expr_stmt><expr><name><name pos:line="3185" pos:column="9">rcSegment</name><op:operator pos:line="3185" pos:column="18">.</op:operator><name pos:line="3185" pos:column="19">left</name></name> <op:operator pos:line="3185" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="3185" pos:column="26">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3186" pos:column="9">rcSegment</name><op:operator pos:line="3186" pos:column="18">.</op:operator><name pos:line="3186" pos:column="19">right</name></name> <op:operator pos:line="3186" pos:column="25">=</op:operator> <name><name pos:line="3186" pos:column="27">rcLine</name><op:operator pos:line="3186" pos:column="33">.</op:operator><name pos:line="3186" pos:column="34">right</name></name> <op:operator pos:line="3186" pos:column="40">-</op:operator> <lit:literal type="number" pos:line="3186" pos:column="42">1</lit:literal></expr>;</expr_stmt>
	<if pos:line="3187" pos:column="9">if <condition pos:line="3187" pos:column="12">(<expr><op:operator pos:line="3187" pos:column="13">(</op:operator><name><name pos:line="3187" pos:column="14">caret</name><op:operator pos:line="3187" pos:column="19">.</op:operator><name pos:line="3187" pos:column="20">active</name></name> <op:operator pos:line="3187" pos:column="27">||</op:operator> <name><name pos:line="3187" pos:column="30">vsDraw</name><op:operator pos:line="3187" pos:column="36">.</op:operator><name pos:line="3187" pos:column="37">showCaretLineBackgroundAlways</name></name><op:operator pos:line="3187" pos:column="66">)</op:operator> <op:operator pos:line="3187" pos:column="68">&amp;&amp;</op:operator> <name><name pos:line="3187" pos:column="71">vsDraw</name><op:operator pos:line="3187" pos:column="77">.</op:operator><name pos:line="3187" pos:column="78">showCaretLineBackground</name></name> <op:operator pos:line="3187" pos:column="102">&amp;&amp;</op:operator> <name><name pos:line="3187" pos:column="105">ll</name><op:operator pos:line="3187" pos:column="107">-&gt;</op:operator><name pos:line="3187" pos:column="109">containsCaret</name></name></expr>)</condition><then pos:line="3187" pos:column="123"> <block pos:line="3187" pos:column="124">{
		<expr_stmt><expr><call><name pos:line="3188" pos:column="17">SimpleAlphaRectangle</name><argument_list pos:line="3188" pos:column="37">(<argument><expr><name pos:line="3188" pos:column="38">surface</name></expr></argument>, <argument><expr><name pos:line="3188" pos:column="47">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="3188" pos:column="58">vsDraw</name><op:operator pos:line="3188" pos:column="64">.</op:operator><name pos:line="3188" pos:column="65">caretLineBackground</name><op:operator pos:line="3188" pos:column="84">.</op:operator><name pos:line="3188" pos:column="85">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="3188" pos:column="96">vsDraw</name><op:operator pos:line="3188" pos:column="102">.</op:operator><name pos:line="3188" pos:column="103">caretLineAlpha</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name pos:line="3190" pos:column="9">marks</name> <op:operator pos:line="3190" pos:column="15">=</op:operator> <call><name><name pos:line="3190" pos:column="17">pdoc</name><op:operator pos:line="3190" pos:column="21">-&gt;</op:operator><name pos:line="3190" pos:column="23">GetMark</name></name><argument_list pos:line="3190" pos:column="30">(<argument><expr><name pos:line="3190" pos:column="31">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="3191" pos:column="9">for (<init><expr><name pos:line="3191" pos:column="14">markBit</name> <op:operator pos:line="3191" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="3191" pos:column="24">0</lit:literal></expr>;</init> <condition><expr><op:operator pos:line="3191" pos:column="27">(</op:operator><name pos:line="3191" pos:column="28">markBit</name> <op:operator pos:line="3191" pos:column="36">&lt;</op:operator> <lit:literal type="number" pos:line="3191" pos:column="38">32</lit:literal><op:operator pos:line="3191" pos:column="40">)</op:operator> <op:operator pos:line="3191" pos:column="42">&amp;&amp;</op:operator> <name pos:line="3191" pos:column="45">marks</name></expr>;</condition> <incr><expr><name pos:line="3191" pos:column="52">markBit</name><op:operator pos:line="3191" pos:column="59">++</op:operator></expr></incr>) <block pos:line="3191" pos:column="63">{
		<if pos:line="3192" pos:column="17">if <condition pos:line="3192" pos:column="20">(<expr><op:operator pos:line="3192" pos:column="21">(</op:operator><name pos:line="3192" pos:column="22">marks</name> <op:operator pos:line="3192" pos:column="28">&amp;</op:operator> <lit:literal type="number" pos:line="3192" pos:column="30">1</lit:literal><op:operator pos:line="3192" pos:column="31">)</op:operator> <op:operator pos:line="3192" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="3192" pos:column="36">(</op:operator><name><name pos:line="3192" pos:column="37">vsDraw</name><op:operator pos:line="3192" pos:column="43">.</op:operator><name pos:line="3192" pos:column="44">markers</name><index pos:line="3192" pos:column="51">[<expr><name pos:line="3192" pos:column="52">markBit</name></expr>]</index></name><op:operator pos:line="3192" pos:column="60">.</op:operator><name pos:line="3192" pos:column="61">markType</name> <op:operator pos:line="3192" pos:column="70">==</op:operator> <name pos:line="3192" pos:column="73">SC_MARK_BACKGROUND</name><op:operator pos:line="3192" pos:column="91">)</op:operator></expr>)</condition><then pos:line="3192" pos:column="93"> <block pos:line="3192" pos:column="94">{
			<expr_stmt><expr><call><name pos:line="3193" pos:column="25">SimpleAlphaRectangle</name><argument_list pos:line="3193" pos:column="45">(<argument><expr><name pos:line="3193" pos:column="46">surface</name></expr></argument>, <argument><expr><name pos:line="3193" pos:column="55">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="3193" pos:column="66">vsDraw</name><op:operator pos:line="3193" pos:column="72">.</op:operator><name pos:line="3193" pos:column="73">markers</name><index pos:line="3193" pos:column="80">[<expr><name pos:line="3193" pos:column="81">markBit</name></expr>]</index></name><op:operator pos:line="3193" pos:column="89">.</op:operator><name><name pos:line="3193" pos:column="90">back</name><op:operator pos:line="3193" pos:column="94">.</op:operator><name pos:line="3193" pos:column="95">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="3193" pos:column="106">vsDraw</name><op:operator pos:line="3193" pos:column="112">.</op:operator><name pos:line="3193" pos:column="113">markers</name><index pos:line="3193" pos:column="120">[<expr><name pos:line="3193" pos:column="121">markBit</name></expr>]</index></name><op:operator pos:line="3193" pos:column="129">.</op:operator><name pos:line="3193" pos:column="130">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="3194" pos:column="19">else <if pos:line="3194" pos:column="24">if <condition pos:line="3194" pos:column="27">(<expr><op:operator pos:line="3194" pos:column="28">(</op:operator><name pos:line="3194" pos:column="29">marks</name> <op:operator pos:line="3194" pos:column="35">&amp;</op:operator> <lit:literal type="number" pos:line="3194" pos:column="37">1</lit:literal><op:operator pos:line="3194" pos:column="38">)</op:operator> <op:operator pos:line="3194" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="3194" pos:column="43">(</op:operator><name><name pos:line="3194" pos:column="44">vsDraw</name><op:operator pos:line="3194" pos:column="50">.</op:operator><name pos:line="3194" pos:column="51">markers</name><index pos:line="3194" pos:column="58">[<expr><name pos:line="3194" pos:column="59">markBit</name></expr>]</index></name><op:operator pos:line="3194" pos:column="67">.</op:operator><name pos:line="3194" pos:column="68">markType</name> <op:operator pos:line="3194" pos:column="77">==</op:operator> <name pos:line="3194" pos:column="80">SC_MARK_UNDERLINE</name><op:operator pos:line="3194" pos:column="97">)</op:operator></expr>)</condition><then pos:line="3194" pos:column="99"> <block pos:line="3194" pos:column="100">{
			<decl_stmt><decl><type><name pos:line="3195" pos:column="25">PRectangle</name></type> <name pos:line="3195" pos:column="36">rcUnderline</name> <init pos:line="3195" pos:column="48">= <expr><name pos:line="3195" pos:column="50">rcSegment</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="3196" pos:column="25">rcUnderline</name><op:operator pos:line="3196" pos:column="36">.</op:operator><name pos:line="3196" pos:column="37">top</name></name> <op:operator pos:line="3196" pos:column="41">=</op:operator> <name><name pos:line="3196" pos:column="43">rcUnderline</name><op:operator pos:line="3196" pos:column="54">.</op:operator><name pos:line="3196" pos:column="55">bottom</name></name> <op:operator pos:line="3196" pos:column="62">-</op:operator> <lit:literal type="number" pos:line="3196" pos:column="64">2</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="3197" pos:column="25">SimpleAlphaRectangle</name><argument_list pos:line="3197" pos:column="45">(<argument><expr><name pos:line="3197" pos:column="46">surface</name></expr></argument>, <argument><expr><name pos:line="3197" pos:column="55">rcUnderline</name></expr></argument>, <argument><expr><name><name pos:line="3197" pos:column="68">vsDraw</name><op:operator pos:line="3197" pos:column="74">.</op:operator><name pos:line="3197" pos:column="75">markers</name><index pos:line="3197" pos:column="82">[<expr><name pos:line="3197" pos:column="83">markBit</name></expr>]</index></name><op:operator pos:line="3197" pos:column="91">.</op:operator><name><name pos:line="3197" pos:column="92">back</name><op:operator pos:line="3197" pos:column="96">.</op:operator><name pos:line="3197" pos:column="97">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="3197" pos:column="108">vsDraw</name><op:operator pos:line="3197" pos:column="114">.</op:operator><name pos:line="3197" pos:column="115">markers</name><index pos:line="3197" pos:column="122">[<expr><name pos:line="3197" pos:column="123">markBit</name></expr>]</index></name><op:operator pos:line="3197" pos:column="131">.</op:operator><name pos:line="3197" pos:column="132">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if></else></if>
		<expr_stmt><expr><name pos:line="3199" pos:column="17">marks</name> <op:operator pos:line="3199" pos:column="23">&gt;&gt;=</op:operator> <lit:literal type="number" pos:line="3199" pos:column="27">1</lit:literal></expr>;</expr_stmt>
	}</block></for>
	<if pos:line="3201" pos:column="9">if <condition pos:line="3201" pos:column="12">(<expr><name><name pos:line="3201" pos:column="13">vsDraw</name><op:operator pos:line="3201" pos:column="19">.</op:operator><name pos:line="3201" pos:column="20">maskInLine</name></name></expr>)</condition><then pos:line="3201" pos:column="31"> <block pos:line="3201" pos:column="32">{
		<decl_stmt><decl><type><name pos:line="3202" pos:column="17">int</name></type> <name pos:line="3202" pos:column="21">marksMasked</name> <init pos:line="3202" pos:column="33">= <expr><call><name><name pos:line="3202" pos:column="35">pdoc</name><op:operator pos:line="3202" pos:column="39">-&gt;</op:operator><name pos:line="3202" pos:column="41">GetMark</name></name><argument_list pos:line="3202" pos:column="48">(<argument><expr><name pos:line="3202" pos:column="49">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="3202" pos:column="55">&amp;</op:operator> <name><name pos:line="3202" pos:column="57">vsDraw</name><op:operator pos:line="3202" pos:column="63">.</op:operator><name pos:line="3202" pos:column="64">maskInLine</name></name></expr></init></decl>;</decl_stmt>
		<if pos:line="3203" pos:column="17">if <condition pos:line="3203" pos:column="20">(<expr><name pos:line="3203" pos:column="21">marksMasked</name></expr>)</condition><then pos:line="3203" pos:column="33"> <block pos:line="3203" pos:column="34">{
			<for pos:line="3204" pos:column="25">for (<init><expr><name pos:line="3204" pos:column="30">markBit</name> <op:operator pos:line="3204" pos:column="38">=</op:operator> <lit:literal type="number" pos:line="3204" pos:column="40">0</lit:literal></expr>;</init> <condition><expr><op:operator pos:line="3204" pos:column="43">(</op:operator><name pos:line="3204" pos:column="44">markBit</name> <op:operator pos:line="3204" pos:column="52">&lt;</op:operator> <lit:literal type="number" pos:line="3204" pos:column="54">32</lit:literal><op:operator pos:line="3204" pos:column="56">)</op:operator> <op:operator pos:line="3204" pos:column="58">&amp;&amp;</op:operator> <name pos:line="3204" pos:column="61">marksMasked</name></expr>;</condition> <incr><expr><name pos:line="3204" pos:column="74">markBit</name><op:operator pos:line="3204" pos:column="81">++</op:operator></expr></incr>) <block pos:line="3204" pos:column="85">{
				<if pos:line="3205" pos:column="33">if <condition pos:line="3205" pos:column="36">(<expr><op:operator pos:line="3205" pos:column="37">(</op:operator><name pos:line="3205" pos:column="38">marksMasked</name> <op:operator pos:line="3205" pos:column="50">&amp;</op:operator> <lit:literal type="number" pos:line="3205" pos:column="52">1</lit:literal><op:operator pos:line="3205" pos:column="53">)</op:operator> <op:operator pos:line="3205" pos:column="55">&amp;&amp;</op:operator> <op:operator pos:line="3205" pos:column="58">(</op:operator><name><name pos:line="3205" pos:column="59">vsDraw</name><op:operator pos:line="3205" pos:column="65">.</op:operator><name pos:line="3205" pos:column="66">markers</name><index pos:line="3205" pos:column="73">[<expr><name pos:line="3205" pos:column="74">markBit</name></expr>]</index></name><op:operator pos:line="3205" pos:column="82">.</op:operator><name pos:line="3205" pos:column="83">markType</name> <op:operator pos:line="3205" pos:column="92">!=</op:operator> <name pos:line="3205" pos:column="95">SC_MARK_EMPTY</name><op:operator pos:line="3205" pos:column="108">)</op:operator></expr>)</condition><then pos:line="3205" pos:column="110"> <block pos:line="3205" pos:column="111">{
					<expr_stmt><expr><call><name pos:line="3206" pos:column="41">SimpleAlphaRectangle</name><argument_list pos:line="3206" pos:column="61">(<argument><expr><name pos:line="3206" pos:column="62">surface</name></expr></argument>, <argument><expr><name pos:line="3206" pos:column="71">rcSegment</name></expr></argument>, <argument><expr><name><name pos:line="3206" pos:column="82">vsDraw</name><op:operator pos:line="3206" pos:column="88">.</op:operator><name pos:line="3206" pos:column="89">markers</name><index pos:line="3206" pos:column="96">[<expr><name pos:line="3206" pos:column="97">markBit</name></expr>]</index></name><op:operator pos:line="3206" pos:column="105">.</op:operator><name><name pos:line="3206" pos:column="106">back</name><op:operator pos:line="3206" pos:column="110">.</op:operator><name pos:line="3206" pos:column="111">allocated</name></name></expr></argument>, <argument><expr><name><name pos:line="3206" pos:column="122">vsDraw</name><op:operator pos:line="3206" pos:column="128">.</op:operator><name pos:line="3206" pos:column="129">markers</name><index pos:line="3206" pos:column="136">[<expr><name pos:line="3206" pos:column="137">markBit</name></expr>]</index></name><op:operator pos:line="3206" pos:column="145">.</op:operator><name pos:line="3206" pos:column="146">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><name pos:line="3208" pos:column="33">marksMasked</name> <op:operator pos:line="3208" pos:column="45">&gt;&gt;=</op:operator> <lit:literal type="number" pos:line="3208" pos:column="49">1</lit:literal></expr>;</expr_stmt>
			}</block></for>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="3214" pos:column="1">void</name></type> <name><name pos:line="3214" pos:column="6">Editor</name><op:operator pos:line="3214" pos:column="12">::</op:operator><name pos:line="3214" pos:column="14">DrawBlockCaret</name></name><parameter_list pos:line="3214" pos:column="28">(<param><decl><type><name pos:line="3214" pos:column="29">Surface</name> <type:modifier pos:line="3214" pos:column="37">*</type:modifier></type><name pos:line="3214" pos:column="38">surface</name></decl></param>, <param><decl><type><name pos:line="3214" pos:column="47">ViewStyle</name> <type:modifier pos:line="3214" pos:column="57">&amp;</type:modifier></type><name pos:line="3214" pos:column="58">vsDraw</name></decl></param>, <param><decl><type><name pos:line="3214" pos:column="66">LineLayout</name> <type:modifier pos:line="3214" pos:column="77">*</type:modifier></type><name pos:line="3214" pos:column="78">ll</name></decl></param>, <param><decl><type><name pos:line="3214" pos:column="82">int</name></type> <name pos:line="3214" pos:column="86">subLine</name></decl></param>,
							<param><decl><type><name pos:line="3215" pos:column="57">int</name></type> <name pos:line="3215" pos:column="61">xStart</name></decl></param>, <param><decl><type><name pos:line="3215" pos:column="69">int</name></type> <name pos:line="3215" pos:column="73">offset</name></decl></param>, <param><decl><type><name pos:line="3215" pos:column="81">int</name></type> <name pos:line="3215" pos:column="85">posCaret</name></decl></param>, <param><decl><type><name pos:line="3215" pos:column="95">PRectangle</name></type> <name pos:line="3215" pos:column="106">rcCaret</name></decl></param>, <param><decl><type><name pos:line="3215" pos:column="115">ColourAllocated</name></type> <name pos:line="3215" pos:column="131">caretColour</name></decl></param>)</parameter_list> <block pos:line="3215" pos:column="144">{

	<decl_stmt><decl><type><name pos:line="3217" pos:column="9">int</name></type> <name pos:line="3217" pos:column="13">lineStart</name> <init pos:line="3217" pos:column="23">= <expr><call><name><name pos:line="3217" pos:column="25">ll</name><op:operator pos:line="3217" pos:column="27">-&gt;</op:operator><name pos:line="3217" pos:column="29">LineStart</name></name><argument_list pos:line="3217" pos:column="38">(<argument><expr><name pos:line="3217" pos:column="39">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3218" pos:column="9">int</name></type> <name pos:line="3218" pos:column="13">posBefore</name> <init pos:line="3218" pos:column="23">= <expr><name pos:line="3218" pos:column="25">posCaret</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3219" pos:column="9">int</name></type> <name pos:line="3219" pos:column="13">posAfter</name> <init pos:line="3219" pos:column="22">= <expr><call><name pos:line="3219" pos:column="24">MovePositionOutsideChar</name><argument_list pos:line="3219" pos:column="47">(<argument><expr><name pos:line="3219" pos:column="48">posCaret</name> <op:operator pos:line="3219" pos:column="57">+</op:operator> <lit:literal type="number" pos:line="3219" pos:column="59">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3219" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3220" pos:column="9">int</name></type> <name pos:line="3220" pos:column="13">numCharsToDraw</name> <init pos:line="3220" pos:column="28">= <expr><name pos:line="3220" pos:column="30">posAfter</name> <op:operator pos:line="3220" pos:column="39">-</op:operator> <name pos:line="3220" pos:column="41">posCaret</name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="3222" pos:column="9">// Work out where the starting and ending offsets are. We need to</comment>
	<comment type="line" pos:line="3223" pos:column="9">// see if the previous character shares horizontal space, such as a</comment>
	<comment type="line" pos:line="3224" pos:column="9">// glyph / combining character. If so we'll need to draw that too.</comment>
	<decl_stmt><decl><type><name pos:line="3225" pos:column="9">int</name></type> <name pos:line="3225" pos:column="13">offsetFirstChar</name> <init pos:line="3225" pos:column="29">= <expr><name pos:line="3225" pos:column="31">offset</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3226" pos:column="9">int</name></type> <name pos:line="3226" pos:column="13">offsetLastChar</name> <init pos:line="3226" pos:column="28">= <expr><name pos:line="3226" pos:column="30">offset</name> <op:operator pos:line="3226" pos:column="37">+</op:operator> <op:operator pos:line="3226" pos:column="39">(</op:operator><name pos:line="3226" pos:column="40">posAfter</name> <op:operator pos:line="3226" pos:column="49">-</op:operator> <name pos:line="3226" pos:column="51">posCaret</name><op:operator pos:line="3226" pos:column="59">)</op:operator></expr></init></decl>;</decl_stmt>
	<while pos:line="3227" pos:column="9">while <condition pos:line="3227" pos:column="15">(<expr><op:operator pos:line="3227" pos:column="16">(</op:operator><name pos:line="3227" pos:column="17">offsetLastChar</name> <op:operator pos:line="3227" pos:column="32">-</op:operator> <name pos:line="3227" pos:column="34">numCharsToDraw</name><op:operator pos:line="3227" pos:column="48">)</op:operator> <op:operator pos:line="3227" pos:column="50">&gt;=</op:operator> <name pos:line="3227" pos:column="53">lineStart</name></expr>)</condition> <block pos:line="3227" pos:column="64">{
		<if pos:line="3228" pos:column="17">if <condition pos:line="3228" pos:column="20">(<expr><op:operator pos:line="3228" pos:column="21">(</op:operator><name><name pos:line="3228" pos:column="22">ll</name><op:operator pos:line="3228" pos:column="24">-&gt;</op:operator><name pos:line="3228" pos:column="26">positions</name><index pos:line="3228" pos:column="35">[<expr><name pos:line="3228" pos:column="36">offsetLastChar</name></expr>]</index></name> <op:operator pos:line="3228" pos:column="52">-</op:operator> <name><name pos:line="3228" pos:column="54">ll</name><op:operator pos:line="3228" pos:column="56">-&gt;</op:operator><name pos:line="3228" pos:column="58">positions</name><index pos:line="3228" pos:column="67">[<expr><name pos:line="3228" pos:column="68">offsetLastChar</name> <op:operator pos:line="3228" pos:column="83">-</op:operator> <name pos:line="3228" pos:column="85">numCharsToDraw</name></expr>]</index></name><op:operator pos:line="3228" pos:column="100">)</op:operator> <op:operator pos:line="3228" pos:column="102">&gt;</op:operator> <lit:literal type="number" pos:line="3228" pos:column="104">0</lit:literal></expr>)</condition><then pos:line="3228" pos:column="106"> <block pos:line="3228" pos:column="107">{
			<comment type="line" pos:line="3229" pos:column="25">// The char does not share horizontal space</comment>
			<break pos:line="3230" pos:column="25">break;</break>
		}</block></then></if>
		<comment type="line" pos:line="3232" pos:column="17">// Char shares horizontal space, update the numChars to draw</comment>
		<comment type="line" pos:line="3233" pos:column="17">// Update posBefore to point to the prev char</comment>
		<expr_stmt><expr><name pos:line="3234" pos:column="17">posBefore</name> <op:operator pos:line="3234" pos:column="27">=</op:operator> <call><name pos:line="3234" pos:column="29">MovePositionOutsideChar</name><argument_list pos:line="3234" pos:column="52">(<argument><expr><name pos:line="3234" pos:column="53">posBefore</name> <op:operator pos:line="3234" pos:column="63">-</op:operator> <lit:literal type="number" pos:line="3234" pos:column="65">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="3234" pos:column="68">-</op:operator><lit:literal type="number" pos:line="3234" pos:column="69">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3235" pos:column="17">numCharsToDraw</name> <op:operator pos:line="3235" pos:column="32">=</op:operator> <name pos:line="3235" pos:column="34">posAfter</name> <op:operator pos:line="3235" pos:column="43">-</op:operator> <name pos:line="3235" pos:column="45">posBefore</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3236" pos:column="17">offsetFirstChar</name> <op:operator pos:line="3236" pos:column="33">=</op:operator> <name pos:line="3236" pos:column="35">offset</name> <op:operator pos:line="3236" pos:column="42">-</op:operator> <op:operator pos:line="3236" pos:column="44">(</op:operator><name pos:line="3236" pos:column="45">posCaret</name> <op:operator pos:line="3236" pos:column="54">-</op:operator> <name pos:line="3236" pos:column="56">posBefore</name><op:operator pos:line="3236" pos:column="65">)</op:operator></expr>;</expr_stmt>
	}</block></while>

	<comment type="line" pos:line="3239" pos:column="9">// See if the next character shares horizontal space, if so we'll</comment>
	<comment type="line" pos:line="3240" pos:column="9">// need to draw that too.</comment>
	<expr_stmt><expr><name pos:line="3241" pos:column="9">numCharsToDraw</name> <op:operator pos:line="3241" pos:column="24">=</op:operator> <name pos:line="3241" pos:column="26">offsetLastChar</name> <op:operator pos:line="3241" pos:column="41">-</op:operator> <name pos:line="3241" pos:column="43">offsetFirstChar</name></expr>;</expr_stmt>
	<while pos:line="3242" pos:column="9">while <condition pos:line="3242" pos:column="15">(<expr><op:operator pos:line="3242" pos:column="16">(</op:operator><name pos:line="3242" pos:column="17">offsetLastChar</name> <op:operator pos:line="3242" pos:column="32">&lt;</op:operator> <call><name><name pos:line="3242" pos:column="34">ll</name><op:operator pos:line="3242" pos:column="36">-&gt;</op:operator><name pos:line="3242" pos:column="38">LineStart</name></name><argument_list pos:line="3242" pos:column="47">(<argument><expr><name pos:line="3242" pos:column="48">subLine</name> <op:operator pos:line="3242" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="3242" pos:column="58">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="3242" pos:column="60">)</op:operator> <op:operator pos:line="3242" pos:column="62">&amp;&amp;</op:operator> <op:operator pos:line="3242" pos:column="65">(</op:operator><name pos:line="3242" pos:column="66">offsetLastChar</name> <op:operator pos:line="3242" pos:column="81">&lt;=</op:operator> <name><name pos:line="3242" pos:column="84">ll</name><op:operator pos:line="3242" pos:column="86">-&gt;</op:operator><name pos:line="3242" pos:column="88">numCharsInLine</name></name><op:operator pos:line="3242" pos:column="102">)</op:operator></expr>)</condition> <block pos:line="3242" pos:column="105">{
		<comment type="line" pos:line="3243" pos:column="17">// Update posAfter to point to the 2nd next char, this is where</comment>
		<comment type="line" pos:line="3244" pos:column="17">// the next character ends, and 2nd next begins. We'll need</comment>
		<comment type="line" pos:line="3245" pos:column="17">// to compare these two</comment>
		<expr_stmt><expr><name pos:line="3246" pos:column="17">posBefore</name> <op:operator pos:line="3246" pos:column="27">=</op:operator> <name pos:line="3246" pos:column="29">posAfter</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3247" pos:column="17">posAfter</name> <op:operator pos:line="3247" pos:column="26">=</op:operator> <call><name pos:line="3247" pos:column="28">MovePositionOutsideChar</name><argument_list pos:line="3247" pos:column="51">(<argument><expr><name pos:line="3247" pos:column="52">posAfter</name> <op:operator pos:line="3247" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="3247" pos:column="63">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3247" pos:column="66">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3248" pos:column="17">offsetLastChar</name> <op:operator pos:line="3248" pos:column="32">=</op:operator> <name pos:line="3248" pos:column="34">offset</name> <op:operator pos:line="3248" pos:column="41">+</op:operator> <op:operator pos:line="3248" pos:column="43">(</op:operator><name pos:line="3248" pos:column="44">posAfter</name> <op:operator pos:line="3248" pos:column="53">-</op:operator> <name pos:line="3248" pos:column="55">posCaret</name><op:operator pos:line="3248" pos:column="63">)</op:operator></expr>;</expr_stmt>
		<if pos:line="3249" pos:column="17">if <condition pos:line="3249" pos:column="20">(<expr><op:operator pos:line="3249" pos:column="21">(</op:operator><name><name pos:line="3249" pos:column="22">ll</name><op:operator pos:line="3249" pos:column="24">-&gt;</op:operator><name pos:line="3249" pos:column="26">positions</name><index pos:line="3249" pos:column="35">[<expr><name pos:line="3249" pos:column="36">offsetLastChar</name></expr>]</index></name> <op:operator pos:line="3249" pos:column="52">-</op:operator> <name><name pos:line="3249" pos:column="54">ll</name><op:operator pos:line="3249" pos:column="56">-&gt;</op:operator><name pos:line="3249" pos:column="58">positions</name><index pos:line="3249" pos:column="67">[<expr><name pos:line="3249" pos:column="68">offsetLastChar</name> <op:operator pos:line="3249" pos:column="83">-</op:operator> <op:operator pos:line="3249" pos:column="85">(</op:operator><name pos:line="3249" pos:column="86">posAfter</name> <op:operator pos:line="3249" pos:column="95">-</op:operator> <name pos:line="3249" pos:column="97">posBefore</name><op:operator pos:line="3249" pos:column="106">)</op:operator></expr>]</index></name><op:operator pos:line="3249" pos:column="108">)</op:operator> <op:operator pos:line="3249" pos:column="110">&gt;</op:operator> <lit:literal type="number" pos:line="3249" pos:column="112">0</lit:literal></expr>)</condition><then pos:line="3249" pos:column="114"> <block pos:line="3249" pos:column="115">{
			<comment type="line" pos:line="3250" pos:column="25">// The char does not share horizontal space</comment>
			<break pos:line="3251" pos:column="25">break;</break>
		}</block></then></if>
		<comment type="line" pos:line="3253" pos:column="17">// Char shares horizontal space, update the numChars to draw</comment>
		<expr_stmt><expr><name pos:line="3254" pos:column="17">numCharsToDraw</name> <op:operator pos:line="3254" pos:column="32">=</op:operator> <name pos:line="3254" pos:column="34">offsetLastChar</name> <op:operator pos:line="3254" pos:column="49">-</op:operator> <name pos:line="3254" pos:column="51">offsetFirstChar</name></expr>;</expr_stmt>
	}</block></while>

	<comment type="line" pos:line="3257" pos:column="9">// We now know what to draw, update the caret drawing rectangle</comment>
	<expr_stmt><expr><name><name pos:line="3258" pos:column="9">rcCaret</name><op:operator pos:line="3258" pos:column="16">.</op:operator><name pos:line="3258" pos:column="17">left</name></name> <op:operator pos:line="3258" pos:column="22">=</op:operator> <name><name pos:line="3258" pos:column="24">ll</name><op:operator pos:line="3258" pos:column="26">-&gt;</op:operator><name pos:line="3258" pos:column="28">positions</name><index pos:line="3258" pos:column="37">[<expr><name pos:line="3258" pos:column="38">offsetFirstChar</name></expr>]</index></name> <op:operator pos:line="3258" pos:column="55">-</op:operator> <name><name pos:line="3258" pos:column="57">ll</name><op:operator pos:line="3258" pos:column="59">-&gt;</op:operator><name pos:line="3258" pos:column="61">positions</name><index pos:line="3258" pos:column="70">[<expr><name pos:line="3258" pos:column="71">lineStart</name></expr>]</index></name> <op:operator pos:line="3258" pos:column="82">+</op:operator> <name pos:line="3258" pos:column="84">xStart</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3259" pos:column="9">rcCaret</name><op:operator pos:line="3259" pos:column="16">.</op:operator><name pos:line="3259" pos:column="17">right</name></name> <op:operator pos:line="3259" pos:column="23">=</op:operator> <name><name pos:line="3259" pos:column="25">ll</name><op:operator pos:line="3259" pos:column="27">-&gt;</op:operator><name pos:line="3259" pos:column="29">positions</name><index pos:line="3259" pos:column="38">[<expr><name pos:line="3259" pos:column="39">offsetFirstChar</name><op:operator pos:line="3259" pos:column="54">+</op:operator><name pos:line="3259" pos:column="55">numCharsToDraw</name></expr>]</index></name> <op:operator pos:line="3259" pos:column="71">-</op:operator> <name><name pos:line="3259" pos:column="73">ll</name><op:operator pos:line="3259" pos:column="75">-&gt;</op:operator><name pos:line="3259" pos:column="77">positions</name><index pos:line="3259" pos:column="86">[<expr><name pos:line="3259" pos:column="87">lineStart</name></expr>]</index></name> <op:operator pos:line="3259" pos:column="98">+</op:operator> <name pos:line="3259" pos:column="100">xStart</name></expr>;</expr_stmt>

	<comment type="line" pos:line="3261" pos:column="9">// Adjust caret position to take into account any word wrapping symbols.</comment>
	<if pos:line="3262" pos:column="9">if <condition pos:line="3262" pos:column="12">(<expr><op:operator pos:line="3262" pos:column="13">(</op:operator><name><name pos:line="3262" pos:column="14">ll</name><op:operator pos:line="3262" pos:column="16">-&gt;</op:operator><name pos:line="3262" pos:column="18">wrapIndent</name></name> <op:operator pos:line="3262" pos:column="29">!=</op:operator> <lit:literal type="number" pos:line="3262" pos:column="32">0</lit:literal><op:operator pos:line="3262" pos:column="33">)</op:operator> <op:operator pos:line="3262" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="3262" pos:column="38">(</op:operator><name pos:line="3262" pos:column="39">lineStart</name> <op:operator pos:line="3262" pos:column="49">!=</op:operator> <lit:literal type="number" pos:line="3262" pos:column="52">0</lit:literal><op:operator pos:line="3262" pos:column="53">)</op:operator></expr>)</condition><then pos:line="3262" pos:column="55"> <block pos:line="3262" pos:column="56">{
		<decl_stmt><decl><type><name pos:line="3263" pos:column="17">int</name></type> <name pos:line="3263" pos:column="21">wordWrapCharWidth</name> <init pos:line="3263" pos:column="39">= <expr><name><name pos:line="3263" pos:column="41">ll</name><op:operator pos:line="3263" pos:column="43">-&gt;</op:operator><name pos:line="3263" pos:column="45">wrapIndent</name></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="3264" pos:column="17">rcCaret</name><op:operator pos:line="3264" pos:column="24">.</op:operator><name pos:line="3264" pos:column="25">left</name></name> <op:operator pos:line="3264" pos:column="30">+=</op:operator> <name pos:line="3264" pos:column="33">wordWrapCharWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3265" pos:column="17">rcCaret</name><op:operator pos:line="3265" pos:column="24">.</op:operator><name pos:line="3265" pos:column="25">right</name></name> <op:operator pos:line="3265" pos:column="31">+=</op:operator> <name pos:line="3265" pos:column="34">wordWrapCharWidth</name></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="3268" pos:column="9">// This character is where the caret block is, we override the colours</comment>
	<comment type="line" pos:line="3269" pos:column="9">// (inversed) for drawing the caret here.</comment>
	<decl_stmt><decl><type><name pos:line="3270" pos:column="9">int</name></type> <name pos:line="3270" pos:column="13">styleMain</name> <init pos:line="3270" pos:column="23">= <expr><name><name pos:line="3270" pos:column="25">ll</name><op:operator pos:line="3270" pos:column="27">-&gt;</op:operator><name pos:line="3270" pos:column="29">styles</name><index pos:line="3270" pos:column="35">[<expr><name pos:line="3270" pos:column="36">offsetFirstChar</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="3271" pos:column="9">surface</name><op:operator pos:line="3271" pos:column="16">-&gt;</op:operator><name pos:line="3271" pos:column="18">DrawTextClipped</name></name><argument_list pos:line="3271" pos:column="33">(<argument><expr><name pos:line="3271" pos:column="34">rcCaret</name></expr></argument>, <argument><expr><name><name pos:line="3271" pos:column="43">vsDraw</name><op:operator pos:line="3271" pos:column="49">.</op:operator><name pos:line="3271" pos:column="50">styles</name><index pos:line="3271" pos:column="56">[<expr><name pos:line="3271" pos:column="57">styleMain</name></expr>]</index></name><op:operator pos:line="3271" pos:column="67">.</op:operator><name pos:line="3271" pos:column="68">font</name></expr></argument>,
	        <argument><expr><name><name pos:line="3272" pos:column="17">rcCaret</name><op:operator pos:line="3272" pos:column="24">.</op:operator><name pos:line="3272" pos:column="25">top</name></name> <op:operator pos:line="3272" pos:column="29">+</op:operator> <name><name pos:line="3272" pos:column="31">vsDraw</name><op:operator pos:line="3272" pos:column="37">.</op:operator><name pos:line="3272" pos:column="38">maxAscent</name></name></expr></argument>, <argument><expr><name><name pos:line="3272" pos:column="49">ll</name><op:operator pos:line="3272" pos:column="51">-&gt;</op:operator><name pos:line="3272" pos:column="53">chars</name></name> <op:operator pos:line="3272" pos:column="59">+</op:operator> <name pos:line="3272" pos:column="61">offsetFirstChar</name></expr></argument>,
	        <argument><expr><name pos:line="3273" pos:column="17">numCharsToDraw</name></expr></argument>, <argument><expr><name><name pos:line="3273" pos:column="33">vsDraw</name><op:operator pos:line="3273" pos:column="39">.</op:operator><name pos:line="3273" pos:column="40">styles</name><index pos:line="3273" pos:column="46">[<expr><name pos:line="3273" pos:column="47">styleMain</name></expr>]</index></name><op:operator pos:line="3273" pos:column="57">.</op:operator><name><name pos:line="3273" pos:column="58">back</name><op:operator pos:line="3273" pos:column="62">.</op:operator><name pos:line="3273" pos:column="63">allocated</name></name></expr></argument>,
	        <argument><expr><name pos:line="3274" pos:column="17">caretColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3277" pos:column="1">void</name></type> <name><name pos:line="3277" pos:column="6">Editor</name><op:operator pos:line="3277" pos:column="12">::</op:operator><name pos:line="3277" pos:column="14">RefreshPixMaps</name></name><parameter_list pos:line="3277" pos:column="28">(<param><decl><type><name pos:line="3277" pos:column="29">Surface</name> <type:modifier pos:line="3277" pos:column="37">*</type:modifier></type><name pos:line="3277" pos:column="38">surfaceWindow</name></decl></param>)</parameter_list> <block pos:line="3277" pos:column="53">{
	<if pos:line="3278" pos:column="9">if <condition pos:line="3278" pos:column="12">(<expr><op:operator pos:line="3278" pos:column="13">!</op:operator><call><name><name pos:line="3278" pos:column="14">pixmapSelPattern</name><op:operator pos:line="3278" pos:column="30">-&gt;</op:operator><name pos:line="3278" pos:column="32">Initialised</name></name><argument_list pos:line="3278" pos:column="43">()</argument_list></call></expr>)</condition><then pos:line="3278" pos:column="46"> <block pos:line="3278" pos:column="47">{
		<decl_stmt><decl><type><specifier pos:line="3279" pos:column="17">const</specifier> <name pos:line="3279" pos:column="23">int</name></type> <name pos:line="3279" pos:column="27">patternSize</name> <init pos:line="3279" pos:column="39">= <expr><lit:literal type="number" pos:line="3279" pos:column="41">8</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="3280" pos:column="17">pixmapSelPattern</name><op:operator pos:line="3280" pos:column="33">-&gt;</op:operator><name pos:line="3280" pos:column="35">InitPixMap</name></name><argument_list pos:line="3280" pos:column="45">(<argument><expr><name pos:line="3280" pos:column="46">patternSize</name></expr></argument>, <argument><expr><name pos:line="3280" pos:column="59">patternSize</name></expr></argument>, <argument><expr><name pos:line="3280" pos:column="72">surfaceWindow</name></expr></argument>, <argument><expr><call><name><name pos:line="3280" pos:column="87">wMain</name><op:operator pos:line="3280" pos:column="92">.</op:operator><name pos:line="3280" pos:column="93">GetID</name></name><argument_list pos:line="3280" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="3281" pos:column="17">// This complex procedure is to reproduce the checkerboard dithered pattern used by windows</comment>
		<comment type="line" pos:line="3282" pos:column="17">// for scroll bars and Visual Studio for its selection margin. The colour of this pattern is half</comment>
		<comment type="line" pos:line="3283" pos:column="17">// way between the chrome colour and the chrome highlight colour making a nice transition</comment>
		<comment type="line" pos:line="3284" pos:column="17">// between the window chrome and the content area. And it works in low colour depths.</comment>
		<decl_stmt><decl><type><name pos:line="3285" pos:column="17">PRectangle</name></type> <name pos:line="3285" pos:column="28">rcPattern</name><argument_list pos:line="3285" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="3285" pos:column="38">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3285" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><name pos:line="3285" pos:column="44">patternSize</name></expr></argument>, <argument><expr><name pos:line="3285" pos:column="57">patternSize</name></expr></argument>)</argument_list></decl>;</decl_stmt>

		<comment type="line" pos:line="3287" pos:column="17">// Initialize default colours based on the chrome colour scheme.  Typically the highlight is white.</comment>
		<decl_stmt><decl><type><name pos:line="3288" pos:column="17">ColourAllocated</name></type> <name pos:line="3288" pos:column="33">colourFMFill</name> <init pos:line="3288" pos:column="46">= <expr><name><name pos:line="3288" pos:column="48">vs</name><op:operator pos:line="3288" pos:column="50">.</op:operator><name pos:line="3288" pos:column="51">selbar</name><op:operator pos:line="3288" pos:column="57">.</op:operator><name pos:line="3288" pos:column="58">allocated</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="3289" pos:column="17">ColourAllocated</name></type> <name pos:line="3289" pos:column="33">colourFMStripes</name> <init pos:line="3289" pos:column="49">= <expr><name><name pos:line="3289" pos:column="51">vs</name><op:operator pos:line="3289" pos:column="53">.</op:operator><name pos:line="3289" pos:column="54">selbarlight</name><op:operator pos:line="3289" pos:column="65">.</op:operator><name pos:line="3289" pos:column="66">allocated</name></name></expr></init></decl>;</decl_stmt>

		<if pos:line="3291" pos:column="17">if <condition pos:line="3291" pos:column="20">(<expr><op:operator pos:line="3291" pos:column="21">!</op:operator><op:operator pos:line="3291" pos:column="22">(</op:operator><name><name pos:line="3291" pos:column="23">vs</name><op:operator pos:line="3291" pos:column="25">.</op:operator><name pos:line="3291" pos:column="26">selbarlight</name><op:operator pos:line="3291" pos:column="37">.</op:operator><name pos:line="3291" pos:column="38">desired</name></name> <op:operator pos:line="3291" pos:column="46">==</op:operator> <call><name pos:line="3291" pos:column="49">ColourDesired</name><argument_list pos:line="3291" pos:column="62">(<argument><expr><lit:literal type="number" pos:line="3291" pos:column="63">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3291" pos:column="69">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3291" pos:column="75">0xff</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="3291" pos:column="80">)</op:operator></expr>)</condition><then pos:line="3291" pos:column="82"> <block pos:line="3291" pos:column="83">{
			<comment type="line" pos:line="3292" pos:column="25">// User has chosen an unusual chrome colour scheme so just use the highlight edge colour.</comment>
			<comment type="line" pos:line="3293" pos:column="25">// (Typically, the highlight colour is white.)</comment>
			<expr_stmt><expr><name pos:line="3294" pos:column="25">colourFMFill</name> <op:operator pos:line="3294" pos:column="38">=</op:operator> <name><name pos:line="3294" pos:column="40">vs</name><op:operator pos:line="3294" pos:column="42">.</op:operator><name pos:line="3294" pos:column="43">selbarlight</name><op:operator pos:line="3294" pos:column="54">.</op:operator><name pos:line="3294" pos:column="55">allocated</name></name></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="3297" pos:column="17">if <condition pos:line="3297" pos:column="20">(<expr><name><name pos:line="3297" pos:column="21">vs</name><op:operator pos:line="3297" pos:column="23">.</op:operator><name pos:line="3297" pos:column="24">foldmarginColourSet</name></name></expr>)</condition><then pos:line="3297" pos:column="44"> <block pos:line="3297" pos:column="45">{
			<comment type="line" pos:line="3298" pos:column="25">// override default fold margin colour</comment>
			<expr_stmt><expr><name pos:line="3299" pos:column="25">colourFMFill</name> <op:operator pos:line="3299" pos:column="38">=</op:operator> <name><name pos:line="3299" pos:column="40">vs</name><op:operator pos:line="3299" pos:column="42">.</op:operator><name pos:line="3299" pos:column="43">foldmarginColour</name><op:operator pos:line="3299" pos:column="59">.</op:operator><name pos:line="3299" pos:column="60">allocated</name></name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="3301" pos:column="17">if <condition pos:line="3301" pos:column="20">(<expr><name><name pos:line="3301" pos:column="21">vs</name><op:operator pos:line="3301" pos:column="23">.</op:operator><name pos:line="3301" pos:column="24">foldmarginHighlightColourSet</name></name></expr>)</condition><then pos:line="3301" pos:column="53"> <block pos:line="3301" pos:column="54">{
			<comment type="line" pos:line="3302" pos:column="25">// override default fold margin highlight colour</comment>
			<expr_stmt><expr><name pos:line="3303" pos:column="25">colourFMStripes</name> <op:operator pos:line="3303" pos:column="41">=</op:operator> <name><name pos:line="3303" pos:column="43">vs</name><op:operator pos:line="3303" pos:column="45">.</op:operator><name pos:line="3303" pos:column="46">foldmarginHighlightColour</name><op:operator pos:line="3303" pos:column="71">.</op:operator><name pos:line="3303" pos:column="72">allocated</name></name></expr>;</expr_stmt>
		}</block></then></if>

		<expr_stmt><expr><call><name><name pos:line="3306" pos:column="17">pixmapSelPattern</name><op:operator pos:line="3306" pos:column="33">-&gt;</op:operator><name pos:line="3306" pos:column="35">FillRectangle</name></name><argument_list pos:line="3306" pos:column="48">(<argument><expr><name pos:line="3306" pos:column="49">rcPattern</name></expr></argument>, <argument><expr><name pos:line="3306" pos:column="60">colourFMFill</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="3307" pos:column="17">for (<init><decl><type><name pos:line="3307" pos:column="22">int</name></type> <name pos:line="3307" pos:column="26">y</name> <init pos:line="3307" pos:column="28">= <expr><lit:literal type="number" pos:line="3307" pos:column="30">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3307" pos:column="33">y</name> <op:operator pos:line="3307" pos:column="35">&lt;</op:operator> <name pos:line="3307" pos:column="37">patternSize</name></expr>;</condition> <incr><expr><name pos:line="3307" pos:column="50">y</name><op:operator pos:line="3307" pos:column="51">++</op:operator></expr></incr>) <block pos:line="3307" pos:column="55">{
			<for pos:line="3308" pos:column="25">for (<init><decl><type><name pos:line="3308" pos:column="30">int</name></type> <name pos:line="3308" pos:column="34">x</name> <init pos:line="3308" pos:column="36">= <expr><name pos:line="3308" pos:column="38">y</name> <op:operator pos:line="3308" pos:column="40">%</op:operator> <lit:literal type="number" pos:line="3308" pos:column="42">2</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3308" pos:column="45">x</name> <op:operator pos:line="3308" pos:column="47">&lt;</op:operator> <name pos:line="3308" pos:column="49">patternSize</name></expr>;</condition> <incr><expr><name pos:line="3308" pos:column="62">x</name><op:operator pos:line="3308" pos:column="63">+=</op:operator><lit:literal type="number" pos:line="3308" pos:column="65">2</lit:literal></expr></incr>) <block pos:line="3308" pos:column="68">{
				<decl_stmt><decl><type><name pos:line="3309" pos:column="33">PRectangle</name></type> <name pos:line="3309" pos:column="44">rcPixel</name><argument_list pos:line="3309" pos:column="51">(<argument><expr><name pos:line="3309" pos:column="52">x</name></expr></argument>, <argument><expr><name pos:line="3309" pos:column="55">y</name></expr></argument>, <argument><expr><name pos:line="3309" pos:column="58">x</name><op:operator pos:line="3309" pos:column="59">+</op:operator><lit:literal type="number" pos:line="3309" pos:column="60">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3309" pos:column="63">y</name><op:operator pos:line="3309" pos:column="64">+</op:operator><lit:literal type="number" pos:line="3309" pos:column="65">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="3310" pos:column="33">pixmapSelPattern</name><op:operator pos:line="3310" pos:column="49">-&gt;</op:operator><name pos:line="3310" pos:column="51">FillRectangle</name></name><argument_list pos:line="3310" pos:column="64">(<argument><expr><name pos:line="3310" pos:column="65">rcPixel</name></expr></argument>, <argument><expr><name pos:line="3310" pos:column="74">colourFMStripes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
		}</block></for>
	}</block></then></if>

	<if pos:line="3315" pos:column="9">if <condition pos:line="3315" pos:column="12">(<expr><op:operator pos:line="3315" pos:column="13">!</op:operator><call><name><name pos:line="3315" pos:column="14">pixmapIndentGuide</name><op:operator pos:line="3315" pos:column="31">-&gt;</op:operator><name pos:line="3315" pos:column="33">Initialised</name></name><argument_list pos:line="3315" pos:column="44">()</argument_list></call></expr>)</condition><then pos:line="3315" pos:column="47"> <block pos:line="3315" pos:column="48">{
		<comment type="line" pos:line="3316" pos:column="17">// 1 extra pixel in height so can handle odd/even positions and so produce a continuous line</comment>
		<expr_stmt><expr><call><name><name pos:line="3317" pos:column="17">pixmapIndentGuide</name><op:operator pos:line="3317" pos:column="34">-&gt;</op:operator><name pos:line="3317" pos:column="36">InitPixMap</name></name><argument_list pos:line="3317" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="3317" pos:column="47">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3317" pos:column="50">vs</name><op:operator pos:line="3317" pos:column="52">.</op:operator><name pos:line="3317" pos:column="53">lineHeight</name></name> <op:operator pos:line="3317" pos:column="64">+</op:operator> <lit:literal type="number" pos:line="3317" pos:column="66">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3317" pos:column="69">surfaceWindow</name></expr></argument>, <argument><expr><call><name><name pos:line="3317" pos:column="84">wMain</name><op:operator pos:line="3317" pos:column="89">.</op:operator><name pos:line="3317" pos:column="90">GetID</name></name><argument_list pos:line="3317" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3318" pos:column="17">pixmapIndentGuideHighlight</name><op:operator pos:line="3318" pos:column="43">-&gt;</op:operator><name pos:line="3318" pos:column="45">InitPixMap</name></name><argument_list pos:line="3318" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="3318" pos:column="56">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3318" pos:column="59">vs</name><op:operator pos:line="3318" pos:column="61">.</op:operator><name pos:line="3318" pos:column="62">lineHeight</name></name> <op:operator pos:line="3318" pos:column="73">+</op:operator> <lit:literal type="number" pos:line="3318" pos:column="75">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3318" pos:column="78">surfaceWindow</name></expr></argument>, <argument><expr><call><name><name pos:line="3318" pos:column="93">wMain</name><op:operator pos:line="3318" pos:column="98">.</op:operator><name pos:line="3318" pos:column="99">GetID</name></name><argument_list pos:line="3318" pos:column="104">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="3319" pos:column="17">PRectangle</name></type> <name pos:line="3319" pos:column="28">rcIG</name><argument_list pos:line="3319" pos:column="32">(<argument><expr><lit:literal type="number" pos:line="3319" pos:column="33">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3319" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3319" pos:column="39">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="3319" pos:column="42">vs</name><op:operator pos:line="3319" pos:column="44">.</op:operator><name pos:line="3319" pos:column="45">lineHeight</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="3320" pos:column="17">pixmapIndentGuide</name><op:operator pos:line="3320" pos:column="34">-&gt;</op:operator><name pos:line="3320" pos:column="36">FillRectangle</name></name><argument_list pos:line="3320" pos:column="49">(<argument><expr><name pos:line="3320" pos:column="50">rcIG</name></expr></argument>, <argument><expr><name><name pos:line="3320" pos:column="56">vs</name><op:operator pos:line="3320" pos:column="58">.</op:operator><name pos:line="3320" pos:column="59">styles</name><index pos:line="3320" pos:column="65">[<expr><name pos:line="3320" pos:column="66">STYLE_INDENTGUIDE</name></expr>]</index></name><op:operator pos:line="3320" pos:column="84">.</op:operator><name><name pos:line="3320" pos:column="85">back</name><op:operator pos:line="3320" pos:column="89">.</op:operator><name pos:line="3320" pos:column="90">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3321" pos:column="17">pixmapIndentGuide</name><op:operator pos:line="3321" pos:column="34">-&gt;</op:operator><name pos:line="3321" pos:column="36">PenColour</name></name><argument_list pos:line="3321" pos:column="45">(<argument><expr><name><name pos:line="3321" pos:column="46">vs</name><op:operator pos:line="3321" pos:column="48">.</op:operator><name pos:line="3321" pos:column="49">styles</name><index pos:line="3321" pos:column="55">[<expr><name pos:line="3321" pos:column="56">STYLE_INDENTGUIDE</name></expr>]</index></name><op:operator pos:line="3321" pos:column="74">.</op:operator><name><name pos:line="3321" pos:column="75">fore</name><op:operator pos:line="3321" pos:column="79">.</op:operator><name pos:line="3321" pos:column="80">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3322" pos:column="17">pixmapIndentGuideHighlight</name><op:operator pos:line="3322" pos:column="43">-&gt;</op:operator><name pos:line="3322" pos:column="45">FillRectangle</name></name><argument_list pos:line="3322" pos:column="58">(<argument><expr><name pos:line="3322" pos:column="59">rcIG</name></expr></argument>, <argument><expr><name><name pos:line="3322" pos:column="65">vs</name><op:operator pos:line="3322" pos:column="67">.</op:operator><name pos:line="3322" pos:column="68">styles</name><index pos:line="3322" pos:column="74">[<expr><name pos:line="3322" pos:column="75">STYLE_BRACELIGHT</name></expr>]</index></name><op:operator pos:line="3322" pos:column="92">.</op:operator><name><name pos:line="3322" pos:column="93">back</name><op:operator pos:line="3322" pos:column="97">.</op:operator><name pos:line="3322" pos:column="98">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3323" pos:column="17">pixmapIndentGuideHighlight</name><op:operator pos:line="3323" pos:column="43">-&gt;</op:operator><name pos:line="3323" pos:column="45">PenColour</name></name><argument_list pos:line="3323" pos:column="54">(<argument><expr><name><name pos:line="3323" pos:column="55">vs</name><op:operator pos:line="3323" pos:column="57">.</op:operator><name pos:line="3323" pos:column="58">styles</name><index pos:line="3323" pos:column="64">[<expr><name pos:line="3323" pos:column="65">STYLE_BRACELIGHT</name></expr>]</index></name><op:operator pos:line="3323" pos:column="82">.</op:operator><name><name pos:line="3323" pos:column="83">fore</name><op:operator pos:line="3323" pos:column="87">.</op:operator><name pos:line="3323" pos:column="88">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="3324" pos:column="17">for (<init><decl><type><name pos:line="3324" pos:column="22">int</name></type> <name pos:line="3324" pos:column="26">stripe</name> <init pos:line="3324" pos:column="33">= <expr><lit:literal type="number" pos:line="3324" pos:column="35">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3324" pos:column="38">stripe</name> <op:operator pos:line="3324" pos:column="45">&lt;</op:operator> <name><name pos:line="3324" pos:column="47">vs</name><op:operator pos:line="3324" pos:column="49">.</op:operator><name pos:line="3324" pos:column="50">lineHeight</name></name> <op:operator pos:line="3324" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="3324" pos:column="63">1</lit:literal></expr>;</condition> <incr><expr><name pos:line="3324" pos:column="66">stripe</name> <op:operator pos:line="3324" pos:column="73">+=</op:operator> <lit:literal type="number" pos:line="3324" pos:column="76">2</lit:literal></expr></incr>) <block pos:line="3324" pos:column="79">{
			<decl_stmt><decl><type><name pos:line="3325" pos:column="25">PRectangle</name></type> <name pos:line="3325" pos:column="36">rcPixel</name><argument_list pos:line="3325" pos:column="43">(<argument><expr><lit:literal type="number" pos:line="3325" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><name pos:line="3325" pos:column="47">stripe</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3325" pos:column="55">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3325" pos:column="58">stripe</name><op:operator pos:line="3325" pos:column="64">+</op:operator><lit:literal type="number" pos:line="3325" pos:column="65">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="3326" pos:column="25">pixmapIndentGuide</name><op:operator pos:line="3326" pos:column="42">-&gt;</op:operator><name pos:line="3326" pos:column="44">FillRectangle</name></name><argument_list pos:line="3326" pos:column="57">(<argument><expr><name pos:line="3326" pos:column="58">rcPixel</name></expr></argument>, <argument><expr><name><name pos:line="3326" pos:column="67">vs</name><op:operator pos:line="3326" pos:column="69">.</op:operator><name pos:line="3326" pos:column="70">styles</name><index pos:line="3326" pos:column="76">[<expr><name pos:line="3326" pos:column="77">STYLE_INDENTGUIDE</name></expr>]</index></name><op:operator pos:line="3326" pos:column="95">.</op:operator><name><name pos:line="3326" pos:column="96">fore</name><op:operator pos:line="3326" pos:column="100">.</op:operator><name pos:line="3326" pos:column="101">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="3327" pos:column="25">pixmapIndentGuideHighlight</name><op:operator pos:line="3327" pos:column="51">-&gt;</op:operator><name pos:line="3327" pos:column="53">FillRectangle</name></name><argument_list pos:line="3327" pos:column="66">(<argument><expr><name pos:line="3327" pos:column="67">rcPixel</name></expr></argument>, <argument><expr><name><name pos:line="3327" pos:column="76">vs</name><op:operator pos:line="3327" pos:column="78">.</op:operator><name pos:line="3327" pos:column="79">styles</name><index pos:line="3327" pos:column="85">[<expr><name pos:line="3327" pos:column="86">STYLE_BRACELIGHT</name></expr>]</index></name><op:operator pos:line="3327" pos:column="103">.</op:operator><name><name pos:line="3327" pos:column="104">fore</name><op:operator pos:line="3327" pos:column="108">.</op:operator><name pos:line="3327" pos:column="109">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>

	<if pos:line="3331" pos:column="9">if <condition pos:line="3331" pos:column="12">(<expr><name pos:line="3331" pos:column="13">bufferedDraw</name></expr>)</condition><then pos:line="3331" pos:column="26"> <block pos:line="3331" pos:column="27">{
		<if pos:line="3332" pos:column="17">if <condition pos:line="3332" pos:column="20">(<expr><op:operator pos:line="3332" pos:column="21">!</op:operator><call><name><name pos:line="3332" pos:column="22">pixmapLine</name><op:operator pos:line="3332" pos:column="32">-&gt;</op:operator><name pos:line="3332" pos:column="34">Initialised</name></name><argument_list pos:line="3332" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="3332" pos:column="48"> <block pos:line="3332" pos:column="49">{
			<decl_stmt><decl><type><name pos:line="3333" pos:column="25">PRectangle</name></type> <name pos:line="3333" pos:column="36">rcClient</name> <init pos:line="3333" pos:column="45">= <expr><call><name pos:line="3333" pos:column="47">GetClientRectangle</name><argument_list pos:line="3333" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="3334" pos:column="25">pixmapLine</name><op:operator pos:line="3334" pos:column="35">-&gt;</op:operator><name pos:line="3334" pos:column="37">InitPixMap</name></name><argument_list pos:line="3334" pos:column="47">(<argument><expr><call><name><name pos:line="3334" pos:column="48">rcClient</name><op:operator pos:line="3334" pos:column="56">.</op:operator><name pos:line="3334" pos:column="57">Width</name></name><argument_list pos:line="3334" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="3334" pos:column="66">vs</name><op:operator pos:line="3334" pos:column="68">.</op:operator><name pos:line="3334" pos:column="69">lineHeight</name></name></expr></argument>,
			        <argument><expr><name pos:line="3335" pos:column="33">surfaceWindow</name></expr></argument>, <argument><expr><call><name><name pos:line="3335" pos:column="48">wMain</name><op:operator pos:line="3335" pos:column="53">.</op:operator><name pos:line="3335" pos:column="54">GetID</name></name><argument_list pos:line="3335" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="3336" pos:column="25">pixmapSelMargin</name><op:operator pos:line="3336" pos:column="40">-&gt;</op:operator><name pos:line="3336" pos:column="42">InitPixMap</name></name><argument_list pos:line="3336" pos:column="52">(<argument><expr><name><name pos:line="3336" pos:column="53">vs</name><op:operator pos:line="3336" pos:column="55">.</op:operator><name pos:line="3336" pos:column="56">fixedColumnWidth</name></name></expr></argument>,
			        <argument><expr><call><name><name pos:line="3337" pos:column="33">rcClient</name><op:operator pos:line="3337" pos:column="41">.</op:operator><name pos:line="3337" pos:column="42">Height</name></name><argument_list pos:line="3337" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3337" pos:column="52">surfaceWindow</name></expr></argument>, <argument><expr><call><name><name pos:line="3337" pos:column="67">wMain</name><op:operator pos:line="3337" pos:column="72">.</op:operator><name pos:line="3337" pos:column="73">GetID</name></name><argument_list pos:line="3337" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="3342" pos:column="1">void</name></type> <name><name pos:line="3342" pos:column="6">Editor</name><op:operator pos:line="3342" pos:column="12">::</op:operator><name pos:line="3342" pos:column="14">DrawCarets</name></name><parameter_list pos:line="3342" pos:column="24">(<param><decl><type><name pos:line="3342" pos:column="25">Surface</name> <type:modifier pos:line="3342" pos:column="33">*</type:modifier></type><name pos:line="3342" pos:column="34">surface</name></decl></param>, <param><decl><type><name pos:line="3342" pos:column="43">ViewStyle</name> <type:modifier pos:line="3342" pos:column="53">&amp;</type:modifier></type><name pos:line="3342" pos:column="54">vsDraw</name></decl></param>, <param><decl><type><name pos:line="3342" pos:column="62">int</name></type> <name pos:line="3342" pos:column="66">lineDoc</name></decl></param>, <param><decl><type><name pos:line="3342" pos:column="75">int</name></type> <name pos:line="3342" pos:column="79">xStart</name></decl></param>,
        <param><decl><type><name pos:line="3343" pos:column="9">PRectangle</name></type> <name pos:line="3343" pos:column="20">rcLine</name></decl></param>, <param><decl><type><name pos:line="3343" pos:column="28">LineLayout</name> <type:modifier pos:line="3343" pos:column="39">*</type:modifier></type><name pos:line="3343" pos:column="40">ll</name></decl></param>, <param><decl><type><name pos:line="3343" pos:column="44">int</name></type> <name pos:line="3343" pos:column="48">subLine</name></decl></param>)</parameter_list> <block pos:line="3343" pos:column="57">{
	<comment type="line" pos:line="3344" pos:column="9">// When drag is active it is the only caret drawn</comment>
	<decl_stmt><decl><type><name pos:line="3345" pos:column="9">bool</name></type> <name pos:line="3345" pos:column="14">drawDrag</name> <init pos:line="3345" pos:column="23">= <expr><call><name><name pos:line="3345" pos:column="25">posDrag</name><op:operator pos:line="3345" pos:column="32">.</op:operator><name pos:line="3345" pos:column="33">IsValid</name></name><argument_list pos:line="3345" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3346" pos:column="9">if <condition pos:line="3346" pos:column="12">(<expr><name pos:line="3346" pos:column="13">hideSelection</name> <op:operator pos:line="3346" pos:column="27">&amp;&amp;</op:operator> <op:operator pos:line="3346" pos:column="30">!</op:operator><name pos:line="3346" pos:column="31">drawDrag</name></expr>)</condition><then pos:line="3346" pos:column="40">
		<return pos:line="3347" pos:column="17">return;</return></then></if>
	<decl_stmt><decl><type><specifier pos:line="3348" pos:column="9">const</specifier> <name pos:line="3348" pos:column="15">int</name></type> <name pos:line="3348" pos:column="19">posLineStart</name> <init pos:line="3348" pos:column="32">= <expr><call><name><name pos:line="3348" pos:column="34">pdoc</name><op:operator pos:line="3348" pos:column="38">-&gt;</op:operator><name pos:line="3348" pos:column="40">LineStart</name></name><argument_list pos:line="3348" pos:column="49">(<argument><expr><name pos:line="3348" pos:column="50">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="3349" pos:column="9">// For each selection draw</comment>
	<for pos:line="3350" pos:column="9">for (<init><decl><type><name pos:line="3350" pos:column="14">size_t</name></type> <name pos:line="3350" pos:column="21">r</name><init pos:line="3350" pos:column="22">=<expr><lit:literal type="number" pos:line="3350" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><op:operator pos:line="3350" pos:column="26">(</op:operator><name pos:line="3350" pos:column="27">r</name><op:operator pos:line="3350" pos:column="28">&lt;</op:operator><call><name><name pos:line="3350" pos:column="29">sel</name><op:operator pos:line="3350" pos:column="32">.</op:operator><name pos:line="3350" pos:column="33">Count</name></name><argument_list pos:line="3350" pos:column="38">()</argument_list></call><op:operator pos:line="3350" pos:column="40">)</op:operator> <op:operator pos:line="3350" pos:column="42">||</op:operator> <name pos:line="3350" pos:column="45">drawDrag</name></expr>;</condition> <incr><expr><name pos:line="3350" pos:column="55">r</name><op:operator pos:line="3350" pos:column="56">++</op:operator></expr></incr>) <block pos:line="3350" pos:column="60">{
		<decl_stmt><decl><type><specifier pos:line="3351" pos:column="17">const</specifier> <name pos:line="3351" pos:column="23">bool</name></type> <name pos:line="3351" pos:column="28">mainCaret</name> <init pos:line="3351" pos:column="38">= <expr><name pos:line="3351" pos:column="40">r</name> <op:operator pos:line="3351" pos:column="42">==</op:operator> <call><name><name pos:line="3351" pos:column="45">sel</name><op:operator pos:line="3351" pos:column="48">.</op:operator><name pos:line="3351" pos:column="49">Main</name></name><argument_list pos:line="3351" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="3352" pos:column="17">const</specifier> <name pos:line="3352" pos:column="23">SelectionPosition</name></type> <name pos:line="3352" pos:column="41">posCaret</name> <init pos:line="3352" pos:column="50">= <expr><op:operator pos:line="3352" pos:column="52">(</op:operator><name pos:line="3352" pos:column="53">drawDrag</name> <op:operator pos:line="3352" pos:column="62">?</op:operator> <name pos:line="3352" pos:column="64">posDrag</name> <op:operator pos:line="3352" pos:column="72">:</op:operator> <call><name><name pos:line="3352" pos:column="74">sel</name><op:operator pos:line="3352" pos:column="77">.</op:operator><name pos:line="3352" pos:column="78">Range</name></name><argument_list pos:line="3352" pos:column="83">(<argument><expr><name pos:line="3352" pos:column="84">r</name></expr></argument>)</argument_list></call><op:operator pos:line="3352" pos:column="86">.</op:operator><name pos:line="3352" pos:column="87">caret</name><op:operator pos:line="3352" pos:column="92">)</op:operator></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="3353" pos:column="17">const</specifier> <name pos:line="3353" pos:column="23">int</name></type> <name pos:line="3353" pos:column="27">offset</name> <init pos:line="3353" pos:column="34">= <expr><call><name><name pos:line="3353" pos:column="36">posCaret</name><op:operator pos:line="3353" pos:column="44">.</op:operator><name pos:line="3353" pos:column="45">Position</name></name><argument_list pos:line="3353" pos:column="53">()</argument_list></call> <op:operator pos:line="3353" pos:column="56">-</op:operator> <name pos:line="3353" pos:column="58">posLineStart</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="3354" pos:column="17">const</specifier> <name pos:line="3354" pos:column="23">int</name></type> <name pos:line="3354" pos:column="27">spaceWidth</name> <init pos:line="3354" pos:column="38">= <expr><call><name><name pos:line="3354" pos:column="40">static_cast</name><argument_list pos:line="3354" pos:column="51">&lt;<argument><expr><name pos:line="3354" pos:column="52">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="3354" pos:column="56">(<argument><expr><name><name pos:line="3354" pos:column="57">vsDraw</name><op:operator pos:line="3354" pos:column="63">.</op:operator><name pos:line="3354" pos:column="64">styles</name><index pos:line="3354" pos:column="70">[<expr><call><name><name pos:line="3354" pos:column="71">ll</name><op:operator pos:line="3354" pos:column="73">-&gt;</op:operator><name pos:line="3354" pos:column="75">EndLineStyle</name></name><argument_list pos:line="3354" pos:column="87">()</argument_list></call></expr>]</index></name><op:operator pos:line="3354" pos:column="90">.</op:operator><name pos:line="3354" pos:column="91">spaceWidth</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="3355" pos:column="17">const</specifier> <name pos:line="3355" pos:column="23">int</name></type> <name pos:line="3355" pos:column="27">virtualOffset</name> <init pos:line="3355" pos:column="41">= <expr><call><name><name pos:line="3355" pos:column="43">posCaret</name><op:operator pos:line="3355" pos:column="51">.</op:operator><name pos:line="3355" pos:column="52">VirtualSpace</name></name><argument_list pos:line="3355" pos:column="64">()</argument_list></call> <op:operator pos:line="3355" pos:column="67">*</op:operator> <name pos:line="3355" pos:column="69">spaceWidth</name></expr></init></decl>;</decl_stmt>
		<if pos:line="3356" pos:column="17">if <condition pos:line="3356" pos:column="20">(<expr><call><name><name pos:line="3356" pos:column="21">ll</name><op:operator pos:line="3356" pos:column="23">-&gt;</op:operator><name pos:line="3356" pos:column="25">InLine</name></name><argument_list pos:line="3356" pos:column="31">(<argument><expr><name pos:line="3356" pos:column="32">offset</name></expr></argument>, <argument><expr><name pos:line="3356" pos:column="40">subLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="3356" pos:column="49">&amp;&amp;</op:operator> <name pos:line="3356" pos:column="52">offset</name> <op:operator pos:line="3356" pos:column="59">&lt;=</op:operator> <name><name pos:line="3356" pos:column="62">ll</name><op:operator pos:line="3356" pos:column="64">-&gt;</op:operator><name pos:line="3356" pos:column="66">numCharsBeforeEOL</name></name></expr>)</condition><then pos:line="3356" pos:column="84"> <block pos:line="3356" pos:column="85">{
			<decl_stmt><decl><type><name pos:line="3357" pos:column="25">int</name></type> <name pos:line="3357" pos:column="29">xposCaret</name> <init pos:line="3357" pos:column="39">= <expr><name><name pos:line="3357" pos:column="41">ll</name><op:operator pos:line="3357" pos:column="43">-&gt;</op:operator><name pos:line="3357" pos:column="45">positions</name><index pos:line="3357" pos:column="54">[<expr><name pos:line="3357" pos:column="55">offset</name></expr>]</index></name> <op:operator pos:line="3357" pos:column="63">+</op:operator> <name pos:line="3357" pos:column="65">virtualOffset</name> <op:operator pos:line="3357" pos:column="79">-</op:operator> <name><name pos:line="3357" pos:column="81">ll</name><op:operator pos:line="3357" pos:column="83">-&gt;</op:operator><name pos:line="3357" pos:column="85">positions</name><index pos:line="3357" pos:column="94">[<expr><call><name><name pos:line="3357" pos:column="95">ll</name><op:operator pos:line="3357" pos:column="97">-&gt;</op:operator><name pos:line="3357" pos:column="99">LineStart</name></name><argument_list pos:line="3357" pos:column="108">(<argument><expr><name pos:line="3357" pos:column="109">subLine</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<if pos:line="3358" pos:column="25">if <condition pos:line="3358" pos:column="28">(<expr><name><name pos:line="3358" pos:column="29">ll</name><op:operator pos:line="3358" pos:column="31">-&gt;</op:operator><name pos:line="3358" pos:column="33">wrapIndent</name></name> <op:operator pos:line="3358" pos:column="44">!=</op:operator> <lit:literal type="number" pos:line="3358" pos:column="47">0</lit:literal></expr>)</condition><then pos:line="3358" pos:column="49"> <block pos:line="3358" pos:column="50">{
				<decl_stmt><decl><type><name pos:line="3359" pos:column="33">int</name></type> <name pos:line="3359" pos:column="37">lineStart</name> <init pos:line="3359" pos:column="47">= <expr><call><name><name pos:line="3359" pos:column="49">ll</name><op:operator pos:line="3359" pos:column="51">-&gt;</op:operator><name pos:line="3359" pos:column="53">LineStart</name></name><argument_list pos:line="3359" pos:column="62">(<argument><expr><name pos:line="3359" pos:column="63">subLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="3360" pos:column="33">if <condition pos:line="3360" pos:column="36">(<expr><name pos:line="3360" pos:column="37">lineStart</name> <op:operator pos:line="3360" pos:column="47">!=</op:operator> <lit:literal type="number" pos:line="3360" pos:column="50">0</lit:literal></expr>)</condition><then pos:line="3360" pos:column="52">	<comment type="line" pos:line="3360" pos:column="57">// Wrapped</comment>
					<expr_stmt><expr><name pos:line="3361" pos:column="41">xposCaret</name> <op:operator pos:line="3361" pos:column="51">+=</op:operator> <name><name pos:line="3361" pos:column="54">ll</name><op:operator pos:line="3361" pos:column="56">-&gt;</op:operator><name pos:line="3361" pos:column="58">wrapIndent</name></name></expr>;</expr_stmt></then></if>
			}</block></then></if>
			<decl_stmt><decl><type><name pos:line="3363" pos:column="25">bool</name></type> <name pos:line="3363" pos:column="30">caretBlinkState</name> <init pos:line="3363" pos:column="46">= <expr><op:operator pos:line="3363" pos:column="48">(</op:operator><name><name pos:line="3363" pos:column="49">caret</name><op:operator pos:line="3363" pos:column="54">.</op:operator><name pos:line="3363" pos:column="55">active</name></name> <op:operator pos:line="3363" pos:column="62">&amp;&amp;</op:operator> <name><name pos:line="3363" pos:column="65">caret</name><op:operator pos:line="3363" pos:column="70">.</op:operator><name pos:line="3363" pos:column="71">on</name></name><op:operator pos:line="3363" pos:column="73">)</op:operator> <op:operator pos:line="3363" pos:column="75">||</op:operator> <op:operator pos:line="3363" pos:column="78">(</op:operator><op:operator pos:line="3363" pos:column="79">!</op:operator><name pos:line="3363" pos:column="80">additionalCaretsBlink</name> <op:operator pos:line="3363" pos:column="102">&amp;&amp;</op:operator> <op:operator pos:line="3363" pos:column="105">!</op:operator><name pos:line="3363" pos:column="106">mainCaret</name><op:operator pos:line="3363" pos:column="115">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="3364" pos:column="25">bool</name></type> <name pos:line="3364" pos:column="30">caretVisibleState</name> <init pos:line="3364" pos:column="48">= <expr><name pos:line="3364" pos:column="50">additionalCaretsVisible</name> <op:operator pos:line="3364" pos:column="74">||</op:operator> <name pos:line="3364" pos:column="77">mainCaret</name></expr></init></decl>;</decl_stmt>
			<if pos:line="3365" pos:column="25">if <condition pos:line="3365" pos:column="28">(<expr><op:operator pos:line="3365" pos:column="29">(</op:operator><name pos:line="3365" pos:column="30">xposCaret</name> <op:operator pos:line="3365" pos:column="40">&gt;=</op:operator> <lit:literal type="number" pos:line="3365" pos:column="43">0</lit:literal><op:operator pos:line="3365" pos:column="44">)</op:operator> <op:operator pos:line="3365" pos:column="46">&amp;&amp;</op:operator> <op:operator pos:line="3365" pos:column="49">(</op:operator><name><name pos:line="3365" pos:column="50">vsDraw</name><op:operator pos:line="3365" pos:column="56">.</op:operator><name pos:line="3365" pos:column="57">caretWidth</name></name> <op:operator pos:line="3365" pos:column="68">&gt;</op:operator> <lit:literal type="number" pos:line="3365" pos:column="70">0</lit:literal><op:operator pos:line="3365" pos:column="71">)</op:operator> <op:operator pos:line="3365" pos:column="73">&amp;&amp;</op:operator> <op:operator pos:line="3365" pos:column="76">(</op:operator><name><name pos:line="3365" pos:column="77">vsDraw</name><op:operator pos:line="3365" pos:column="83">.</op:operator><name pos:line="3365" pos:column="84">caretStyle</name></name> <op:operator pos:line="3365" pos:column="95">!=</op:operator> <name pos:line="3365" pos:column="98">CARETSTYLE_INVISIBLE</name><op:operator pos:line="3365" pos:column="118">)</op:operator> <op:operator pos:line="3365" pos:column="120">&amp;&amp;</op:operator>
			        <op:operator pos:line="3366" pos:column="33">(</op:operator><op:operator pos:line="3366" pos:column="34">(</op:operator><call><name><name pos:line="3366" pos:column="35">posDrag</name><op:operator pos:line="3366" pos:column="42">.</op:operator><name pos:line="3366" pos:column="43">IsValid</name></name><argument_list pos:line="3366" pos:column="50">()</argument_list></call><op:operator pos:line="3366" pos:column="52">)</op:operator> <op:operator pos:line="3366" pos:column="54">||</op:operator> <op:operator pos:line="3366" pos:column="57">(</op:operator><name pos:line="3366" pos:column="58">caretBlinkState</name> <op:operator pos:line="3366" pos:column="74">&amp;&amp;</op:operator> <name pos:line="3366" pos:column="77">caretVisibleState</name><op:operator pos:line="3366" pos:column="94">)</op:operator><op:operator pos:line="3366" pos:column="95">)</op:operator></expr>)</condition><then pos:line="3366" pos:column="97"> <block pos:line="3366" pos:column="98">{
				<decl_stmt><decl><type><name pos:line="3367" pos:column="33">bool</name></type> <name pos:line="3367" pos:column="38">caretAtEOF</name> <init pos:line="3367" pos:column="49">= <expr><lit:literal type="boolean" pos:line="3367" pos:column="51">false</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="3368" pos:column="33">bool</name></type> <name pos:line="3368" pos:column="38">caretAtEOL</name> <init pos:line="3368" pos:column="49">= <expr><lit:literal type="boolean" pos:line="3368" pos:column="51">false</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="3369" pos:column="33">bool</name></type> <name pos:line="3369" pos:column="38">drawBlockCaret</name> <init pos:line="3369" pos:column="53">= <expr><lit:literal type="boolean" pos:line="3369" pos:column="55">false</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="3370" pos:column="33">int</name></type> <name pos:line="3370" pos:column="37">widthOverstrikeCaret</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="3371" pos:column="33">int</name></type> <name pos:line="3371" pos:column="37">caretWidthOffset</name> <init pos:line="3371" pos:column="54">= <expr><lit:literal type="number" pos:line="3371" pos:column="56">0</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="3372" pos:column="33">PRectangle</name></type> <name pos:line="3372" pos:column="44">rcCaret</name> <init pos:line="3372" pos:column="52">= <expr><name pos:line="3372" pos:column="54">rcLine</name></expr></init></decl>;</decl_stmt>

				<if pos:line="3374" pos:column="33">if <condition pos:line="3374" pos:column="36">(<expr><call><name><name pos:line="3374" pos:column="37">posCaret</name><op:operator pos:line="3374" pos:column="45">.</op:operator><name pos:line="3374" pos:column="46">Position</name></name><argument_list pos:line="3374" pos:column="54">()</argument_list></call> <op:operator pos:line="3374" pos:column="57">==</op:operator> <call><name><name pos:line="3374" pos:column="60">pdoc</name><op:operator pos:line="3374" pos:column="64">-&gt;</op:operator><name pos:line="3374" pos:column="66">Length</name></name><argument_list pos:line="3374" pos:column="72">()</argument_list></call></expr>)</condition><then pos:line="3374" pos:column="75">	<block pos:line="3374" pos:column="81">{   <comment type="line" pos:line="3374" pos:column="85">// At end of document</comment>
					<expr_stmt><expr><name pos:line="3375" pos:column="41">caretAtEOF</name> <op:operator pos:line="3375" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="3375" pos:column="54">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="3376" pos:column="41">widthOverstrikeCaret</name> <op:operator pos:line="3376" pos:column="62">=</op:operator> <name><name pos:line="3376" pos:column="64">vsDraw</name><op:operator pos:line="3376" pos:column="70">.</op:operator><name pos:line="3376" pos:column="71">aveCharWidth</name></name></expr>;</expr_stmt>
				}</block></then> <else pos:line="3377" pos:column="35">else <if pos:line="3377" pos:column="40">if <condition pos:line="3377" pos:column="43">(<expr><op:operator pos:line="3377" pos:column="44">(</op:operator><call><name><name pos:line="3377" pos:column="45">posCaret</name><op:operator pos:line="3377" pos:column="53">.</op:operator><name pos:line="3377" pos:column="54">Position</name></name><argument_list pos:line="3377" pos:column="62">()</argument_list></call> <op:operator pos:line="3377" pos:column="65">-</op:operator> <name pos:line="3377" pos:column="67">posLineStart</name><op:operator pos:line="3377" pos:column="79">)</op:operator> <op:operator pos:line="3377" pos:column="81">&gt;=</op:operator> <name><name pos:line="3377" pos:column="84">ll</name><op:operator pos:line="3377" pos:column="86">-&gt;</op:operator><name pos:line="3377" pos:column="88">numCharsInLine</name></name></expr>)</condition><then pos:line="3377" pos:column="103"> <block pos:line="3377" pos:column="104">{	<comment type="line" pos:line="3377" pos:column="113">// At end of line</comment>
					<expr_stmt><expr><name pos:line="3378" pos:column="41">caretAtEOL</name> <op:operator pos:line="3378" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="3378" pos:column="54">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="3379" pos:column="41">widthOverstrikeCaret</name> <op:operator pos:line="3379" pos:column="62">=</op:operator> <name><name pos:line="3379" pos:column="64">vsDraw</name><op:operator pos:line="3379" pos:column="70">.</op:operator><name pos:line="3379" pos:column="71">aveCharWidth</name></name></expr>;</expr_stmt>
				}</block></then> <else pos:line="3380" pos:column="35">else <block pos:line="3380" pos:column="40">{
					<expr_stmt><expr><name pos:line="3381" pos:column="41">widthOverstrikeCaret</name> <op:operator pos:line="3381" pos:column="62">=</op:operator> <name><name pos:line="3381" pos:column="64">ll</name><op:operator pos:line="3381" pos:column="66">-&gt;</op:operator><name pos:line="3381" pos:column="68">positions</name><index pos:line="3381" pos:column="77">[<expr><name pos:line="3381" pos:column="78">offset</name> <op:operator pos:line="3381" pos:column="85">+</op:operator> <lit:literal type="number" pos:line="3381" pos:column="87">1</lit:literal></expr>]</index></name> <op:operator pos:line="3381" pos:column="90">-</op:operator> <name><name pos:line="3381" pos:column="92">ll</name><op:operator pos:line="3381" pos:column="94">-&gt;</op:operator><name pos:line="3381" pos:column="96">positions</name><index pos:line="3381" pos:column="105">[<expr><name pos:line="3381" pos:column="106">offset</name></expr>]</index></name></expr>;</expr_stmt>
				}</block></else></if></else></if>
				<if pos:line="3383" pos:column="33">if <condition pos:line="3383" pos:column="36">(<expr><name pos:line="3383" pos:column="37">widthOverstrikeCaret</name> <op:operator pos:line="3383" pos:column="58">&lt;</op:operator> <lit:literal type="number" pos:line="3383" pos:column="60">3</lit:literal></expr>)</condition><then pos:line="3383" pos:column="62">	<comment type="line" pos:line="3383" pos:column="65">// Make sure its visible</comment>
					<expr_stmt><expr><name pos:line="3384" pos:column="41">widthOverstrikeCaret</name> <op:operator pos:line="3384" pos:column="62">=</op:operator> <lit:literal type="number" pos:line="3384" pos:column="64">3</lit:literal></expr>;</expr_stmt></then></if>

				<if pos:line="3386" pos:column="33">if <condition pos:line="3386" pos:column="36">(<expr><name pos:line="3386" pos:column="37">xposCaret</name> <op:operator pos:line="3386" pos:column="47">&gt;</op:operator> <lit:literal type="number" pos:line="3386" pos:column="49">0</lit:literal></expr>)</condition><then pos:line="3386" pos:column="51">
					<expr_stmt><expr><name pos:line="3387" pos:column="41">caretWidthOffset</name> <op:operator pos:line="3387" pos:column="58">=</op:operator> <lit:literal type="number" pos:line="3387" pos:column="60">1</lit:literal></expr>;</expr_stmt></then></if>	<comment type="line" pos:line="3387" pos:column="65">// Move back so overlaps both character cells.</comment>
				<expr_stmt><expr><name pos:line="3388" pos:column="33">xposCaret</name> <op:operator pos:line="3388" pos:column="43">+=</op:operator> <name pos:line="3388" pos:column="46">xStart</name></expr>;</expr_stmt>
				<if pos:line="3389" pos:column="33">if <condition pos:line="3389" pos:column="36">(<expr><call><name><name pos:line="3389" pos:column="37">posDrag</name><op:operator pos:line="3389" pos:column="44">.</op:operator><name pos:line="3389" pos:column="45">IsValid</name></name><argument_list pos:line="3389" pos:column="52">()</argument_list></call></expr>)</condition><then pos:line="3389" pos:column="55"> <block pos:line="3389" pos:column="56">{
					<comment type="block" pos:line="3390" pos:column="41">/* Dragging text, use a line caret */</comment>
					<expr_stmt><expr><name><name pos:line="3391" pos:column="41">rcCaret</name><op:operator pos:line="3391" pos:column="48">.</op:operator><name pos:line="3391" pos:column="49">left</name></name> <op:operator pos:line="3391" pos:column="54">=</op:operator> <name pos:line="3391" pos:column="56">xposCaret</name> <op:operator pos:line="3391" pos:column="66">-</op:operator> <name pos:line="3391" pos:column="68">caretWidthOffset</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="3392" pos:column="41">rcCaret</name><op:operator pos:line="3392" pos:column="48">.</op:operator><name pos:line="3392" pos:column="49">right</name></name> <op:operator pos:line="3392" pos:column="55">=</op:operator> <name><name pos:line="3392" pos:column="57">rcCaret</name><op:operator pos:line="3392" pos:column="64">.</op:operator><name pos:line="3392" pos:column="65">left</name></name> <op:operator pos:line="3392" pos:column="70">+</op:operator> <name><name pos:line="3392" pos:column="72">vsDraw</name><op:operator pos:line="3392" pos:column="78">.</op:operator><name pos:line="3392" pos:column="79">caretWidth</name></name></expr>;</expr_stmt>
				}</block></then> <else pos:line="3393" pos:column="35">else <if pos:line="3393" pos:column="40">if <condition pos:line="3393" pos:column="43">(<expr><name pos:line="3393" pos:column="44">inOverstrike</name></expr>)</condition><then pos:line="3393" pos:column="57"> <block pos:line="3393" pos:column="58">{
					<comment type="block" pos:line="3394" pos:column="41">/* Overstrike (insert mode), use a modified bar caret */</comment>
					<expr_stmt><expr><name><name pos:line="3395" pos:column="41">rcCaret</name><op:operator pos:line="3395" pos:column="48">.</op:operator><name pos:line="3395" pos:column="49">top</name></name> <op:operator pos:line="3395" pos:column="53">=</op:operator> <name><name pos:line="3395" pos:column="55">rcCaret</name><op:operator pos:line="3395" pos:column="62">.</op:operator><name pos:line="3395" pos:column="63">bottom</name></name> <op:operator pos:line="3395" pos:column="70">-</op:operator> <lit:literal type="number" pos:line="3395" pos:column="72">2</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="3396" pos:column="41">rcCaret</name><op:operator pos:line="3396" pos:column="48">.</op:operator><name pos:line="3396" pos:column="49">left</name></name> <op:operator pos:line="3396" pos:column="54">=</op:operator> <name pos:line="3396" pos:column="56">xposCaret</name> <op:operator pos:line="3396" pos:column="66">+</op:operator> <lit:literal type="number" pos:line="3396" pos:column="68">1</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="3397" pos:column="41">rcCaret</name><op:operator pos:line="3397" pos:column="48">.</op:operator><name pos:line="3397" pos:column="49">right</name></name> <op:operator pos:line="3397" pos:column="55">=</op:operator> <name><name pos:line="3397" pos:column="57">rcCaret</name><op:operator pos:line="3397" pos:column="64">.</op:operator><name pos:line="3397" pos:column="65">left</name></name> <op:operator pos:line="3397" pos:column="70">+</op:operator> <name pos:line="3397" pos:column="72">widthOverstrikeCaret</name> <op:operator pos:line="3397" pos:column="93">-</op:operator> <lit:literal type="number" pos:line="3397" pos:column="95">1</lit:literal></expr>;</expr_stmt>
				}</block></then> <else pos:line="3398" pos:column="35">else <if pos:line="3398" pos:column="40">if <condition pos:line="3398" pos:column="43">(<expr><name><name pos:line="3398" pos:column="44">vsDraw</name><op:operator pos:line="3398" pos:column="50">.</op:operator><name pos:line="3398" pos:column="51">caretStyle</name></name> <op:operator pos:line="3398" pos:column="62">==</op:operator> <name pos:line="3398" pos:column="65">CARETSTYLE_BLOCK</name></expr>)</condition><then pos:line="3398" pos:column="82"> <block pos:line="3398" pos:column="83">{
					<comment type="block" pos:line="3399" pos:column="41">/* Block caret */</comment>
					<expr_stmt><expr><name><name pos:line="3400" pos:column="41">rcCaret</name><op:operator pos:line="3400" pos:column="48">.</op:operator><name pos:line="3400" pos:column="49">left</name></name> <op:operator pos:line="3400" pos:column="54">=</op:operator> <name pos:line="3400" pos:column="56">xposCaret</name></expr>;</expr_stmt>
					<if pos:line="3401" pos:column="41">if <condition pos:line="3401" pos:column="44">(<expr><op:operator pos:line="3401" pos:column="45">!</op:operator><name pos:line="3401" pos:column="46">caretAtEOL</name> <op:operator pos:line="3401" pos:column="57">&amp;&amp;</op:operator> <op:operator pos:line="3401" pos:column="60">!</op:operator><name pos:line="3401" pos:column="61">caretAtEOF</name> <op:operator pos:line="3401" pos:column="72">&amp;&amp;</op:operator> <op:operator pos:line="3401" pos:column="75">(</op:operator><name><name pos:line="3401" pos:column="76">ll</name><op:operator pos:line="3401" pos:column="78">-&gt;</op:operator><name pos:line="3401" pos:column="80">chars</name><index pos:line="3401" pos:column="85">[<expr><name pos:line="3401" pos:column="86">offset</name></expr>]</index></name> <op:operator pos:line="3401" pos:column="94">!=</op:operator> <lit:literal type="char" pos:line="3401" pos:column="97">'\t'</lit:literal><op:operator pos:line="3401" pos:column="101">)</op:operator> <op:operator pos:line="3401" pos:column="103">&amp;&amp;</op:operator> <op:operator pos:line="3401" pos:column="106">!</op:operator><op:operator pos:line="3401" pos:column="107">(</op:operator><call><name pos:line="3401" pos:column="108">IsControlCharacter</name><argument_list pos:line="3401" pos:column="126">(<argument><expr><name><name pos:line="3401" pos:column="127">ll</name><op:operator pos:line="3401" pos:column="129">-&gt;</op:operator><name pos:line="3401" pos:column="131">chars</name><index pos:line="3401" pos:column="136">[<expr><name pos:line="3401" pos:column="137">offset</name></expr>]</index></name></expr></argument>)</argument_list></call><op:operator pos:line="3401" pos:column="145">)</op:operator></expr>)</condition><then pos:line="3401" pos:column="147"> <block pos:line="3401" pos:column="148">{
						<expr_stmt><expr><name pos:line="3402" pos:column="49">drawBlockCaret</name> <op:operator pos:line="3402" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="3402" pos:column="66">true</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="3403" pos:column="49">rcCaret</name><op:operator pos:line="3403" pos:column="56">.</op:operator><name pos:line="3403" pos:column="57">right</name></name> <op:operator pos:line="3403" pos:column="63">=</op:operator> <name pos:line="3403" pos:column="65">xposCaret</name> <op:operator pos:line="3403" pos:column="75">+</op:operator> <name pos:line="3403" pos:column="77">widthOverstrikeCaret</name></expr>;</expr_stmt>
					}</block></then> <else pos:line="3404" pos:column="43">else <block pos:line="3404" pos:column="48">{
						<expr_stmt><expr><name><name pos:line="3405" pos:column="49">rcCaret</name><op:operator pos:line="3405" pos:column="56">.</op:operator><name pos:line="3405" pos:column="57">right</name></name> <op:operator pos:line="3405" pos:column="63">=</op:operator> <name pos:line="3405" pos:column="65">xposCaret</name> <op:operator pos:line="3405" pos:column="75">+</op:operator> <name><name pos:line="3405" pos:column="77">vsDraw</name><op:operator pos:line="3405" pos:column="83">.</op:operator><name pos:line="3405" pos:column="84">aveCharWidth</name></name></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then> <else pos:line="3407" pos:column="35">else <block pos:line="3407" pos:column="40">{
					<comment type="block" pos:line="3408" pos:column="41">/* Line caret */</comment>
					<expr_stmt><expr><name><name pos:line="3409" pos:column="41">rcCaret</name><op:operator pos:line="3409" pos:column="48">.</op:operator><name pos:line="3409" pos:column="49">left</name></name> <op:operator pos:line="3409" pos:column="54">=</op:operator> <name pos:line="3409" pos:column="56">xposCaret</name> <op:operator pos:line="3409" pos:column="66">-</op:operator> <name pos:line="3409" pos:column="68">caretWidthOffset</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="3410" pos:column="41">rcCaret</name><op:operator pos:line="3410" pos:column="48">.</op:operator><name pos:line="3410" pos:column="49">right</name></name> <op:operator pos:line="3410" pos:column="55">=</op:operator> <name><name pos:line="3410" pos:column="57">rcCaret</name><op:operator pos:line="3410" pos:column="64">.</op:operator><name pos:line="3410" pos:column="65">left</name></name> <op:operator pos:line="3410" pos:column="70">+</op:operator> <name><name pos:line="3410" pos:column="72">vsDraw</name><op:operator pos:line="3410" pos:column="78">.</op:operator><name pos:line="3410" pos:column="79">caretWidth</name></name></expr>;</expr_stmt>
				}</block></else></if></else></if></else></if>
				<decl_stmt><decl><type><name pos:line="3412" pos:column="33">ColourAllocated</name></type> <name pos:line="3412" pos:column="49">caretColour</name> <init pos:line="3412" pos:column="61">= <expr><name pos:line="3412" pos:column="63">mainCaret</name> <op:operator pos:line="3412" pos:column="73">?</op:operator> <name><name pos:line="3412" pos:column="75">vsDraw</name><op:operator pos:line="3412" pos:column="81">.</op:operator><name pos:line="3412" pos:column="82">caretcolour</name><op:operator pos:line="3412" pos:column="93">.</op:operator><name pos:line="3412" pos:column="94">allocated</name></name> <op:operator pos:line="3412" pos:column="104">:</op:operator> <name><name pos:line="3412" pos:column="106">vsDraw</name><op:operator pos:line="3412" pos:column="112">.</op:operator><name pos:line="3412" pos:column="113">additionalCaretColour</name><op:operator pos:line="3412" pos:column="134">.</op:operator><name pos:line="3412" pos:column="135">allocated</name></name></expr></init></decl>;</decl_stmt>
				<if pos:line="3413" pos:column="33">if <condition pos:line="3413" pos:column="36">(<expr><name pos:line="3413" pos:column="37">drawBlockCaret</name></expr>)</condition><then pos:line="3413" pos:column="52"> <block pos:line="3413" pos:column="53">{
					<expr_stmt><expr><call><name pos:line="3414" pos:column="41">DrawBlockCaret</name><argument_list pos:line="3414" pos:column="55">(<argument><expr><name pos:line="3414" pos:column="56">surface</name></expr></argument>, <argument><expr><name pos:line="3414" pos:column="65">vsDraw</name></expr></argument>, <argument><expr><name pos:line="3414" pos:column="73">ll</name></expr></argument>, <argument><expr><name pos:line="3414" pos:column="77">subLine</name></expr></argument>, <argument><expr><name pos:line="3414" pos:column="86">xStart</name></expr></argument>, <argument><expr><name pos:line="3414" pos:column="94">offset</name></expr></argument>, <argument><expr><call><name><name pos:line="3414" pos:column="102">posCaret</name><op:operator pos:line="3414" pos:column="110">.</op:operator><name pos:line="3414" pos:column="111">Position</name></name><argument_list pos:line="3414" pos:column="119">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3414" pos:column="123">rcCaret</name></expr></argument>, <argument><expr><name pos:line="3414" pos:column="132">caretColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="3415" pos:column="35">else <block pos:line="3415" pos:column="40">{
					<expr_stmt><expr><call><name><name pos:line="3416" pos:column="41">surface</name><op:operator pos:line="3416" pos:column="48">-&gt;</op:operator><name pos:line="3416" pos:column="50">FillRectangle</name></name><argument_list pos:line="3416" pos:column="63">(<argument><expr><name pos:line="3416" pos:column="64">rcCaret</name></expr></argument>, <argument><expr><name pos:line="3416" pos:column="73">caretColour</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
		}</block></then></if>
		<if pos:line="3420" pos:column="17">if <condition pos:line="3420" pos:column="20">(<expr><name pos:line="3420" pos:column="21">drawDrag</name></expr>)</condition><then pos:line="3420" pos:column="30">
			<break pos:line="3421" pos:column="25">break;</break></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="3425" pos:column="1">void</name></type> <name><name pos:line="3425" pos:column="6">Editor</name><op:operator pos:line="3425" pos:column="12">::</op:operator><name pos:line="3425" pos:column="14">Paint</name></name><parameter_list pos:line="3425" pos:column="19">(<param><decl><type><name pos:line="3425" pos:column="20">Surface</name> <type:modifier pos:line="3425" pos:column="28">*</type:modifier></type><name pos:line="3425" pos:column="29">surfaceWindow</name></decl></param>, <param><decl><type><name pos:line="3425" pos:column="44">PRectangle</name></type> <name pos:line="3425" pos:column="55">rcArea</name></decl></param>)</parameter_list> <block pos:line="3425" pos:column="63">{
	<comment type="line" pos:line="3426" pos:column="9">//Platform::DebugPrintf("Paint:%1d (%3d,%3d) ... (%3d,%3d)\n",</comment>
	<comment type="line" pos:line="3427" pos:column="9">//	paintingAllText, rcArea.left, rcArea.top, rcArea.right, rcArea.bottom);</comment>

	<expr_stmt><expr><call><name pos:line="3429" pos:column="9">StyleToPositionInView</name><argument_list pos:line="3429" pos:column="30">(<argument><expr><call><name pos:line="3429" pos:column="31">PositionAfterArea</name><argument_list pos:line="3429" pos:column="48">(<argument><expr><name pos:line="3429" pos:column="49">rcArea</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="3431" pos:column="9">pixmapLine</name><op:operator pos:line="3431" pos:column="19">-&gt;</op:operator><name pos:line="3431" pos:column="21">Release</name></name><argument_list pos:line="3431" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3432" pos:column="9">RefreshStyleData</name><argument_list pos:line="3432" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3433" pos:column="9">RefreshPixMaps</name><argument_list pos:line="3433" pos:column="23">(<argument><expr><name pos:line="3433" pos:column="24">surfaceWindow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="3435" pos:column="9">PRectangle</name></type> <name pos:line="3435" pos:column="20">rcClient</name> <init pos:line="3435" pos:column="29">= <expr><call><name pos:line="3435" pos:column="31">GetClientRectangle</name><argument_list pos:line="3435" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="3436" pos:column="9">//Platform::DebugPrintf("Client: (%3d,%3d) ... (%3d,%3d)   %d\n",</comment>
	<comment type="line" pos:line="3437" pos:column="9">//	rcClient.left, rcClient.top, rcClient.right, rcClient.bottom);</comment>

	<expr_stmt><expr><call><name><name pos:line="3439" pos:column="9">surfaceWindow</name><op:operator pos:line="3439" pos:column="22">-&gt;</op:operator><name pos:line="3439" pos:column="24">SetPalette</name></name><argument_list pos:line="3439" pos:column="34">(<argument><expr><op:operator pos:line="3439" pos:column="35">&amp;</op:operator><name pos:line="3439" pos:column="36">palette</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="3439" pos:column="45">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="3440" pos:column="9">pixmapLine</name><op:operator pos:line="3440" pos:column="19">-&gt;</op:operator><name pos:line="3440" pos:column="21">SetPalette</name></name><argument_list pos:line="3440" pos:column="31">(<argument><expr><op:operator pos:line="3440" pos:column="32">&amp;</op:operator><name pos:line="3440" pos:column="33">palette</name></expr></argument>, <argument><expr><op:operator pos:line="3440" pos:column="42">!</op:operator><name pos:line="3440" pos:column="43">hasFocus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="3442" pos:column="9">int</name></type> <name pos:line="3442" pos:column="13">screenLinePaintFirst</name> <init pos:line="3442" pos:column="34">= <expr><name><name pos:line="3442" pos:column="36">rcArea</name><op:operator pos:line="3442" pos:column="42">.</op:operator><name pos:line="3442" pos:column="43">top</name></name> <op:operator pos:line="3442" pos:column="47">/</op:operator> <name><name pos:line="3442" pos:column="49">vs</name><op:operator pos:line="3442" pos:column="51">.</op:operator><name pos:line="3442" pos:column="52">lineHeight</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3444" pos:column="9">int</name></type> <name pos:line="3444" pos:column="13">xStart</name> <init pos:line="3444" pos:column="20">= <expr><name><name pos:line="3444" pos:column="22">vs</name><op:operator pos:line="3444" pos:column="24">.</op:operator><name pos:line="3444" pos:column="25">fixedColumnWidth</name></name> <op:operator pos:line="3444" pos:column="42">-</op:operator> <name pos:line="3444" pos:column="44">xOffset</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3445" pos:column="9">int</name></type> <name pos:line="3445" pos:column="13">ypos</name> <init pos:line="3445" pos:column="18">= <expr><lit:literal type="number" pos:line="3445" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="3446" pos:column="9">if <condition pos:line="3446" pos:column="12">(<expr><op:operator pos:line="3446" pos:column="13">!</op:operator><name pos:line="3446" pos:column="14">bufferedDraw</name></expr>)</condition><then pos:line="3446" pos:column="27">
		<expr_stmt><expr><name pos:line="3447" pos:column="17">ypos</name> <op:operator pos:line="3447" pos:column="22">+=</op:operator> <name pos:line="3447" pos:column="25">screenLinePaintFirst</name> <op:operator pos:line="3447" pos:column="46">*</op:operator> <name><name pos:line="3447" pos:column="48">vs</name><op:operator pos:line="3447" pos:column="50">.</op:operator><name pos:line="3447" pos:column="51">lineHeight</name></name></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="3448" pos:column="9">int</name></type> <name pos:line="3448" pos:column="13">yposScreen</name> <init pos:line="3448" pos:column="24">= <expr><name pos:line="3448" pos:column="26">screenLinePaintFirst</name> <op:operator pos:line="3448" pos:column="47">*</op:operator> <name><name pos:line="3448" pos:column="49">vs</name><op:operator pos:line="3448" pos:column="51">.</op:operator><name pos:line="3448" pos:column="52">lineHeight</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3450" pos:column="9">bool</name></type> <name pos:line="3450" pos:column="14">paintAbandonedByStyling</name> <init pos:line="3450" pos:column="38">= <expr><name pos:line="3450" pos:column="40">paintState</name> <op:operator pos:line="3450" pos:column="51">==</op:operator> <name pos:line="3450" pos:column="54">paintAbandoned</name></expr></init></decl>;</decl_stmt>
	<if pos:line="3451" pos:column="9">if <condition pos:line="3451" pos:column="12">(<expr><name pos:line="3451" pos:column="13">needUpdateUI</name></expr>)</condition><then pos:line="3451" pos:column="26"> <block pos:line="3451" pos:column="27">{
		<comment type="line" pos:line="3452" pos:column="17">// Deselect palette by selecting a temporary palette</comment>
		<decl_stmt><decl><type><name pos:line="3453" pos:column="17">Palette</name></type> <name pos:line="3453" pos:column="25">palTemp</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="3454" pos:column="17">surfaceWindow</name><op:operator pos:line="3454" pos:column="30">-&gt;</op:operator><name pos:line="3454" pos:column="32">SetPalette</name></name><argument_list pos:line="3454" pos:column="42">(<argument><expr><op:operator pos:line="3454" pos:column="43">&amp;</op:operator><name pos:line="3454" pos:column="44">palTemp</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="3454" pos:column="53">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="3456" pos:column="17">NotifyUpdateUI</name><argument_list pos:line="3456" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3457" pos:column="17">needUpdateUI</name> <op:operator pos:line="3457" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="3457" pos:column="32">0</lit:literal></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="3459" pos:column="17">RefreshStyleData</name><argument_list pos:line="3459" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="3460" pos:column="17">RefreshPixMaps</name><argument_list pos:line="3460" pos:column="31">(<argument><expr><name pos:line="3460" pos:column="32">surfaceWindow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3461" pos:column="17">surfaceWindow</name><op:operator pos:line="3461" pos:column="30">-&gt;</op:operator><name pos:line="3461" pos:column="32">SetPalette</name></name><argument_list pos:line="3461" pos:column="42">(<argument><expr><op:operator pos:line="3461" pos:column="43">&amp;</op:operator><name pos:line="3461" pos:column="44">palette</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="3461" pos:column="53">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3462" pos:column="17">pixmapLine</name><op:operator pos:line="3462" pos:column="27">-&gt;</op:operator><name pos:line="3462" pos:column="29">SetPalette</name></name><argument_list pos:line="3462" pos:column="39">(<argument><expr><op:operator pos:line="3462" pos:column="40">&amp;</op:operator><name pos:line="3462" pos:column="41">palette</name></expr></argument>, <argument><expr><op:operator pos:line="3462" pos:column="50">!</op:operator><name pos:line="3462" pos:column="51">hasFocus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="3465" pos:column="9">// Call priority lines wrap on a window of lines which are likely</comment>
	<comment type="line" pos:line="3466" pos:column="9">// to rendered with the following paint (that is wrap the visible</comment>
	<comment type="line" pos:line="3467" pos:column="9">// 	lines first).</comment>
	<decl_stmt><decl><type><name pos:line="3468" pos:column="9">int</name></type> <name pos:line="3468" pos:column="13">startLineToWrap</name> <init pos:line="3468" pos:column="29">= <expr><call><name><name pos:line="3468" pos:column="31">cs</name><op:operator pos:line="3468" pos:column="33">.</op:operator><name pos:line="3468" pos:column="34">DocFromDisplay</name></name><argument_list pos:line="3468" pos:column="48">(<argument><expr><name pos:line="3468" pos:column="49">topLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="3468" pos:column="58">-</op:operator> <lit:literal type="number" pos:line="3468" pos:column="60">5</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="3469" pos:column="9">if <condition pos:line="3469" pos:column="12">(<expr><name pos:line="3469" pos:column="13">startLineToWrap</name> <op:operator pos:line="3469" pos:column="29">&lt;</op:operator> <lit:literal type="number" pos:line="3469" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="3469" pos:column="33">
		<expr_stmt><expr><name pos:line="3470" pos:column="17">startLineToWrap</name> <op:operator pos:line="3470" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="3470" pos:column="35">0</lit:literal></expr>;</expr_stmt></then></if>
	<if pos:line="3471" pos:column="9">if <condition pos:line="3471" pos:column="12">(<expr><call><name pos:line="3471" pos:column="13">WrapLines</name><argument_list pos:line="3471" pos:column="22">(<argument><expr><lit:literal type="boolean" pos:line="3471" pos:column="23">false</lit:literal></expr></argument>, <argument><expr><name pos:line="3471" pos:column="30">startLineToWrap</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3471" pos:column="47"> <block pos:line="3471" pos:column="48">{
		<comment type="line" pos:line="3472" pos:column="17">// The wrapping process has changed the height of some lines so</comment>
		<comment type="line" pos:line="3473" pos:column="17">// abandon this paint for a complete repaint.</comment>
		<if pos:line="3474" pos:column="17">if <condition pos:line="3474" pos:column="20">(<expr><call><name pos:line="3474" pos:column="21">AbandonPaint</name><argument_list pos:line="3474" pos:column="33">()</argument_list></call></expr>)</condition><then pos:line="3474" pos:column="36"> <block pos:line="3474" pos:column="37">{
			<return pos:line="3475" pos:column="25">return;</return>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="3477" pos:column="17">RefreshPixMaps</name><argument_list pos:line="3477" pos:column="31">(<argument><expr><name pos:line="3477" pos:column="32">surfaceWindow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3477" pos:column="49">// In case pixmaps invalidated by scrollbar change</comment>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="3479" pos:column="9">PLATFORM_ASSERT</name><argument_list pos:line="3479" pos:column="24">(<argument><expr><call><name><name pos:line="3479" pos:column="25">pixmapSelPattern</name><op:operator pos:line="3479" pos:column="41">-&gt;</op:operator><name pos:line="3479" pos:column="43">Initialised</name></name><argument_list pos:line="3479" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="3481" pos:column="9">if <condition pos:line="3481" pos:column="12">(<expr><name pos:line="3481" pos:column="13">paintState</name> <op:operator pos:line="3481" pos:column="24">!=</op:operator> <name pos:line="3481" pos:column="27">paintAbandoned</name></expr>)</condition><then pos:line="3481" pos:column="42"> <block pos:line="3481" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="3482" pos:column="17">PaintSelMargin</name><argument_list pos:line="3482" pos:column="31">(<argument><expr><name pos:line="3482" pos:column="32">surfaceWindow</name></expr></argument>, <argument><expr><name pos:line="3482" pos:column="47">rcArea</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="3484" pos:column="17">PRectangle</name></type> <name pos:line="3484" pos:column="28">rcRightMargin</name> <init pos:line="3484" pos:column="42">= <expr><name pos:line="3484" pos:column="44">rcClient</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="3485" pos:column="17">rcRightMargin</name><op:operator pos:line="3485" pos:column="30">.</op:operator><name pos:line="3485" pos:column="31">left</name></name> <op:operator pos:line="3485" pos:column="36">=</op:operator> <name><name pos:line="3485" pos:column="38">rcRightMargin</name><op:operator pos:line="3485" pos:column="51">.</op:operator><name pos:line="3485" pos:column="52">right</name></name> <op:operator pos:line="3485" pos:column="58">-</op:operator> <name><name pos:line="3485" pos:column="60">vs</name><op:operator pos:line="3485" pos:column="62">.</op:operator><name pos:line="3485" pos:column="63">rightMarginWidth</name></name></expr>;</expr_stmt>
		<if pos:line="3486" pos:column="17">if <condition pos:line="3486" pos:column="20">(<expr><call><name><name pos:line="3486" pos:column="21">rcArea</name><op:operator pos:line="3486" pos:column="27">.</op:operator><name pos:line="3486" pos:column="28">Intersects</name></name><argument_list pos:line="3486" pos:column="38">(<argument><expr><name pos:line="3486" pos:column="39">rcRightMargin</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3486" pos:column="54"> <block pos:line="3486" pos:column="55">{
			<expr_stmt><expr><call><name><name pos:line="3487" pos:column="25">surfaceWindow</name><op:operator pos:line="3487" pos:column="38">-&gt;</op:operator><name pos:line="3487" pos:column="40">FillRectangle</name></name><argument_list pos:line="3487" pos:column="53">(<argument><expr><name pos:line="3487" pos:column="54">rcRightMargin</name></expr></argument>, <argument><expr><name><name pos:line="3487" pos:column="69">vs</name><op:operator pos:line="3487" pos:column="71">.</op:operator><name pos:line="3487" pos:column="72">styles</name><index pos:line="3487" pos:column="78">[<expr><name pos:line="3487" pos:column="79">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="3487" pos:column="93">.</op:operator><name><name pos:line="3487" pos:column="94">back</name><op:operator pos:line="3487" pos:column="98">.</op:operator><name pos:line="3487" pos:column="99">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<if pos:line="3491" pos:column="9">if <condition pos:line="3491" pos:column="12">(<expr><name pos:line="3491" pos:column="13">paintState</name> <op:operator pos:line="3491" pos:column="24">==</op:operator> <name pos:line="3491" pos:column="27">paintAbandoned</name></expr>)</condition><then pos:line="3491" pos:column="42"> <block pos:line="3491" pos:column="43">{
		<comment type="line" pos:line="3492" pos:column="17">// Either styling or NotifyUpdateUI noticed that painting is needed</comment>
		<comment type="line" pos:line="3493" pos:column="17">// outside the current painting rectangle</comment>
		<comment type="line" pos:line="3494" pos:column="17">//Platform::DebugPrintf("Abandoning paint\n");</comment>
		<if pos:line="3495" pos:column="17">if <condition pos:line="3495" pos:column="20">(<expr><name pos:line="3495" pos:column="21">wrapState</name> <op:operator pos:line="3495" pos:column="31">!=</op:operator> <name pos:line="3495" pos:column="34">eWrapNone</name></expr>)</condition><then pos:line="3495" pos:column="44"> <block pos:line="3495" pos:column="45">{
			<if pos:line="3496" pos:column="25">if <condition pos:line="3496" pos:column="28">(<expr><name pos:line="3496" pos:column="29">paintAbandonedByStyling</name></expr>)</condition><then pos:line="3496" pos:column="53"> <block pos:line="3496" pos:column="54">{
				<comment type="line" pos:line="3497" pos:column="33">// Styling has spilled over a line end, such as occurs by starting a multiline</comment>
				<comment type="line" pos:line="3498" pos:column="33">// comment. The width of subsequent text may have changed, so rewrap.</comment>
				<expr_stmt><expr><call><name pos:line="3499" pos:column="33">NeedWrapping</name><argument_list pos:line="3499" pos:column="45">(<argument><expr><call><name><name pos:line="3499" pos:column="46">cs</name><op:operator pos:line="3499" pos:column="48">.</op:operator><name pos:line="3499" pos:column="49">DocFromDisplay</name></name><argument_list pos:line="3499" pos:column="63">(<argument><expr><name pos:line="3499" pos:column="64">topLine</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<return pos:line="3502" pos:column="17">return;</return>
	}</block></then></if>
	<comment type="line" pos:line="3504" pos:column="9">//Platform::DebugPrintf("start display %d, offset = %d\n", pdoc-&gt;Length(), xOffset);</comment>

	<comment type="line" pos:line="3506" pos:column="9">// Do the painting</comment>
	<if pos:line="3507" pos:column="9">if <condition pos:line="3507" pos:column="12">(<expr><name><name pos:line="3507" pos:column="13">rcArea</name><op:operator pos:line="3507" pos:column="19">.</op:operator><name pos:line="3507" pos:column="20">right</name></name> <op:operator pos:line="3507" pos:column="26">&gt;</op:operator> <name><name pos:line="3507" pos:column="28">vs</name><op:operator pos:line="3507" pos:column="30">.</op:operator><name pos:line="3507" pos:column="31">fixedColumnWidth</name></name></expr>)</condition><then pos:line="3507" pos:column="48"> <block pos:line="3507" pos:column="49">{

		<decl_stmt><decl><type><name pos:line="3509" pos:column="17">Surface</name> <type:modifier pos:line="3509" pos:column="25">*</type:modifier></type><name pos:line="3509" pos:column="26">surface</name> <init pos:line="3509" pos:column="34">= <expr><name pos:line="3509" pos:column="36">surfaceWindow</name></expr></init></decl>;</decl_stmt>
		<if pos:line="3510" pos:column="17">if <condition pos:line="3510" pos:column="20">(<expr><name pos:line="3510" pos:column="21">bufferedDraw</name></expr>)</condition><then pos:line="3510" pos:column="34"> <block pos:line="3510" pos:column="35">{
			<expr_stmt><expr><name pos:line="3511" pos:column="25">surface</name> <op:operator pos:line="3511" pos:column="33">=</op:operator> <name pos:line="3511" pos:column="35">pixmapLine</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="3512" pos:column="25">PLATFORM_ASSERT</name><argument_list pos:line="3512" pos:column="40">(<argument><expr><call><name><name pos:line="3512" pos:column="41">pixmapLine</name><op:operator pos:line="3512" pos:column="51">-&gt;</op:operator><name pos:line="3512" pos:column="53">Initialised</name></name><argument_list pos:line="3512" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><name pos:line="3514" pos:column="17">surface</name><op:operator pos:line="3514" pos:column="24">-&gt;</op:operator><name pos:line="3514" pos:column="26">SetUnicodeMode</name></name><argument_list pos:line="3514" pos:column="40">(<argument><expr><call><name pos:line="3514" pos:column="41">IsUnicodeMode</name><argument_list pos:line="3514" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3515" pos:column="17">surface</name><op:operator pos:line="3515" pos:column="24">-&gt;</op:operator><name pos:line="3515" pos:column="26">SetDBCSMode</name></name><argument_list pos:line="3515" pos:column="37">(<argument><expr><call><name pos:line="3515" pos:column="38">CodePage</name><argument_list pos:line="3515" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="3517" pos:column="17">int</name></type> <name pos:line="3517" pos:column="21">visibleLine</name> <init pos:line="3517" pos:column="33">= <expr><name pos:line="3517" pos:column="35">topLine</name> <op:operator pos:line="3517" pos:column="43">+</op:operator> <name pos:line="3517" pos:column="45">screenLinePaintFirst</name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="3519" pos:column="17">SelectionPosition</name></type> <name pos:line="3519" pos:column="35">posCaret</name> <init pos:line="3519" pos:column="44">= <expr><call><name><name pos:line="3519" pos:column="46">sel</name><op:operator pos:line="3519" pos:column="49">.</op:operator><name pos:line="3519" pos:column="50">RangeMain</name></name><argument_list pos:line="3519" pos:column="59">()</argument_list></call><op:operator pos:line="3519" pos:column="61">.</op:operator><name pos:line="3519" pos:column="62">caret</name></expr></init></decl>;</decl_stmt>
		<if pos:line="3520" pos:column="17">if <condition pos:line="3520" pos:column="20">(<expr><call><name><name pos:line="3520" pos:column="21">posDrag</name><op:operator pos:line="3520" pos:column="28">.</op:operator><name pos:line="3520" pos:column="29">IsValid</name></name><argument_list pos:line="3520" pos:column="36">()</argument_list></call></expr>)</condition><then pos:line="3520" pos:column="39">
			<expr_stmt><expr><name pos:line="3521" pos:column="25">posCaret</name> <op:operator pos:line="3521" pos:column="34">=</op:operator> <name pos:line="3521" pos:column="36">posDrag</name></expr>;</expr_stmt></then></if>
		<decl_stmt><decl><type><name pos:line="3522" pos:column="17">int</name></type> <name pos:line="3522" pos:column="21">lineCaret</name> <init pos:line="3522" pos:column="31">= <expr><call><name><name pos:line="3522" pos:column="33">pdoc</name><op:operator pos:line="3522" pos:column="37">-&gt;</op:operator><name pos:line="3522" pos:column="39">LineFromPosition</name></name><argument_list pos:line="3522" pos:column="55">(<argument><expr><call><name><name pos:line="3522" pos:column="56">posCaret</name><op:operator pos:line="3522" pos:column="64">.</op:operator><name pos:line="3522" pos:column="65">Position</name></name><argument_list pos:line="3522" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="3524" pos:column="17">// Remove selection margin from drawing area so text will not be drawn</comment>
		<comment type="line" pos:line="3525" pos:column="17">// on it in unbuffered mode.</comment>
		<decl_stmt><decl><type><name pos:line="3526" pos:column="17">PRectangle</name></type> <name pos:line="3526" pos:column="28">rcTextArea</name> <init pos:line="3526" pos:column="39">= <expr><name pos:line="3526" pos:column="41">rcClient</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="3527" pos:column="17">rcTextArea</name><op:operator pos:line="3527" pos:column="27">.</op:operator><name pos:line="3527" pos:column="28">left</name></name> <op:operator pos:line="3527" pos:column="33">=</op:operator> <name><name pos:line="3527" pos:column="35">vs</name><op:operator pos:line="3527" pos:column="37">.</op:operator><name pos:line="3527" pos:column="38">fixedColumnWidth</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3528" pos:column="17">rcTextArea</name><op:operator pos:line="3528" pos:column="27">.</op:operator><name pos:line="3528" pos:column="28">right</name></name> <op:operator pos:line="3528" pos:column="34">-=</op:operator> <name><name pos:line="3528" pos:column="37">vs</name><op:operator pos:line="3528" pos:column="39">.</op:operator><name pos:line="3528" pos:column="40">rightMarginWidth</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3529" pos:column="17">surfaceWindow</name><op:operator pos:line="3529" pos:column="30">-&gt;</op:operator><name pos:line="3529" pos:column="32">SetClip</name></name><argument_list pos:line="3529" pos:column="39">(<argument><expr><name pos:line="3529" pos:column="40">rcTextArea</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="3531" pos:column="17">// Loop on visible lines</comment>
		<comment type="line" pos:line="3532" pos:column="17">//double durLayout = 0.0;</comment>
		<comment type="line" pos:line="3533" pos:column="17">//double durPaint = 0.0;</comment>
		<comment type="line" pos:line="3534" pos:column="17">//double durCopy = 0.0;</comment>
		<comment type="line" pos:line="3535" pos:column="17">//ElapsedTime etWhole;</comment>
		<decl_stmt><decl><type><name pos:line="3536" pos:column="17">int</name></type> <name pos:line="3536" pos:column="21">lineDocPrevious</name> <init pos:line="3536" pos:column="37">= <expr><op:operator pos:line="3536" pos:column="39">-</op:operator><lit:literal type="number" pos:line="3536" pos:column="40">1</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="3536" pos:column="49">// Used to avoid laying out one document line multiple times</comment>
		<decl_stmt><decl><type><name pos:line="3537" pos:column="17">AutoLineLayout</name></type> <name pos:line="3537" pos:column="32">ll</name><argument_list pos:line="3537" pos:column="34">(<argument><expr><name pos:line="3537" pos:column="35">llc</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3537" pos:column="40">0</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
		<while pos:line="3538" pos:column="17">while <condition pos:line="3538" pos:column="23">(<expr><name pos:line="3538" pos:column="24">visibleLine</name> <op:operator pos:line="3538" pos:column="36">&lt;</op:operator> <call><name><name pos:line="3538" pos:column="38">cs</name><op:operator pos:line="3538" pos:column="40">.</op:operator><name pos:line="3538" pos:column="41">LinesDisplayed</name></name><argument_list pos:line="3538" pos:column="55">()</argument_list></call> <op:operator pos:line="3538" pos:column="58">&amp;&amp;</op:operator> <name pos:line="3538" pos:column="61">yposScreen</name> <op:operator pos:line="3538" pos:column="72">&lt;</op:operator> <name><name pos:line="3538" pos:column="74">rcArea</name><op:operator pos:line="3538" pos:column="80">.</op:operator><name pos:line="3538" pos:column="81">bottom</name></name></expr>)</condition> <block pos:line="3538" pos:column="89">{

			<decl_stmt><decl><type><name pos:line="3540" pos:column="25">int</name></type> <name pos:line="3540" pos:column="29">lineDoc</name> <init pos:line="3540" pos:column="37">= <expr><call><name><name pos:line="3540" pos:column="39">cs</name><op:operator pos:line="3540" pos:column="41">.</op:operator><name pos:line="3540" pos:column="42">DocFromDisplay</name></name><argument_list pos:line="3540" pos:column="56">(<argument><expr><name pos:line="3540" pos:column="57">visibleLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="3541" pos:column="25">// Only visible lines should be handled by the code within the loop</comment>
			<expr_stmt><expr><call><name pos:line="3542" pos:column="25">PLATFORM_ASSERT</name><argument_list pos:line="3542" pos:column="40">(<argument><expr><call><name><name pos:line="3542" pos:column="41">cs</name><op:operator pos:line="3542" pos:column="43">.</op:operator><name pos:line="3542" pos:column="44">GetVisible</name></name><argument_list pos:line="3542" pos:column="54">(<argument><expr><name pos:line="3542" pos:column="55">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="3543" pos:column="25">int</name></type> <name pos:line="3543" pos:column="29">lineStartSet</name> <init pos:line="3543" pos:column="42">= <expr><call><name><name pos:line="3543" pos:column="44">cs</name><op:operator pos:line="3543" pos:column="46">.</op:operator><name pos:line="3543" pos:column="47">DisplayFromDoc</name></name><argument_list pos:line="3543" pos:column="61">(<argument><expr><name pos:line="3543" pos:column="62">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="3544" pos:column="25">int</name></type> <name pos:line="3544" pos:column="29">subLine</name> <init pos:line="3544" pos:column="37">= <expr><name pos:line="3544" pos:column="39">visibleLine</name> <op:operator pos:line="3544" pos:column="51">-</op:operator> <name pos:line="3544" pos:column="53">lineStartSet</name></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="3546" pos:column="25">// Copy this line and its styles from the document into local arrays</comment>
			<comment type="line" pos:line="3547" pos:column="25">// and determine the x position at which each character starts.</comment>
			<comment type="line" pos:line="3548" pos:column="25">//ElapsedTime et;</comment>
			<if pos:line="3549" pos:column="25">if <condition pos:line="3549" pos:column="28">(<expr><name pos:line="3549" pos:column="29">lineDoc</name> <op:operator pos:line="3549" pos:column="37">!=</op:operator> <name pos:line="3549" pos:column="40">lineDocPrevious</name></expr>)</condition><then pos:line="3549" pos:column="56"> <block pos:line="3549" pos:column="57">{
				<expr_stmt><expr><call><name><name pos:line="3550" pos:column="33">ll</name><op:operator pos:line="3550" pos:column="35">.</op:operator><name pos:line="3550" pos:column="36">Set</name></name><argument_list pos:line="3550" pos:column="39">(<argument><expr><lit:literal type="number" pos:line="3550" pos:column="40">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="3551" pos:column="33">ll</name><op:operator pos:line="3551" pos:column="35">.</op:operator><name pos:line="3551" pos:column="36">Set</name></name><argument_list pos:line="3551" pos:column="39">(<argument><expr><call><name pos:line="3551" pos:column="40">RetrieveLineLayout</name><argument_list pos:line="3551" pos:column="58">(<argument><expr><name pos:line="3551" pos:column="59">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="3552" pos:column="33">LayoutLine</name><argument_list pos:line="3552" pos:column="43">(<argument><expr><name pos:line="3552" pos:column="44">lineDoc</name></expr></argument>, <argument><expr><name pos:line="3552" pos:column="53">surface</name></expr></argument>, <argument><expr><name pos:line="3552" pos:column="62">vs</name></expr></argument>, <argument><expr><name pos:line="3552" pos:column="66">ll</name></expr></argument>, <argument><expr><name pos:line="3552" pos:column="70">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="3553" pos:column="33">lineDocPrevious</name> <op:operator pos:line="3553" pos:column="49">=</op:operator> <name pos:line="3553" pos:column="51">lineDoc</name></expr>;</expr_stmt>
			}</block></then></if>
			<comment type="line" pos:line="3555" pos:column="25">//durLayout += et.Duration(true);</comment>

			<if pos:line="3557" pos:column="25">if <condition pos:line="3557" pos:column="28">(<expr><name pos:line="3557" pos:column="29">ll</name></expr>)</condition><then pos:line="3557" pos:column="32"> <block pos:line="3557" pos:column="33">{
				<expr_stmt><expr><name><name pos:line="3558" pos:column="33">ll</name><op:operator pos:line="3558" pos:column="35">-&gt;</op:operator><name pos:line="3558" pos:column="37">containsCaret</name></name> <op:operator pos:line="3558" pos:column="51">=</op:operator> <name pos:line="3558" pos:column="53">lineDoc</name> <op:operator pos:line="3558" pos:column="61">==</op:operator> <name pos:line="3558" pos:column="64">lineCaret</name></expr>;</expr_stmt>
				<if pos:line="3559" pos:column="33">if <condition pos:line="3559" pos:column="36">(<expr><name pos:line="3559" pos:column="37">hideSelection</name></expr>)</condition><then pos:line="3559" pos:column="51"> <block pos:line="3559" pos:column="52">{
					<expr_stmt><expr><name><name pos:line="3560" pos:column="41">ll</name><op:operator pos:line="3560" pos:column="43">-&gt;</op:operator><name pos:line="3560" pos:column="45">containsCaret</name></name> <op:operator pos:line="3560" pos:column="59">=</op:operator> <lit:literal type="boolean" pos:line="3560" pos:column="61">false</lit:literal></expr>;</expr_stmt>
				}</block></then></if>

				<expr_stmt><expr><call><name pos:line="3563" pos:column="33">GetHotSpotRange</name><argument_list pos:line="3563" pos:column="48">(<argument><expr><name><name pos:line="3563" pos:column="49">ll</name><op:operator pos:line="3563" pos:column="51">-&gt;</op:operator><name pos:line="3563" pos:column="53">hsStart</name></name></expr></argument>, <argument><expr><name><name pos:line="3563" pos:column="62">ll</name><op:operator pos:line="3563" pos:column="64">-&gt;</op:operator><name pos:line="3563" pos:column="66">hsEnd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="3565" pos:column="33">PRectangle</name></type> <name pos:line="3565" pos:column="44">rcLine</name> <init pos:line="3565" pos:column="51">= <expr><name pos:line="3565" pos:column="53">rcClient</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="3566" pos:column="33">rcLine</name><op:operator pos:line="3566" pos:column="39">.</op:operator><name pos:line="3566" pos:column="40">top</name></name> <op:operator pos:line="3566" pos:column="44">=</op:operator> <name pos:line="3566" pos:column="46">ypos</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3567" pos:column="33">rcLine</name><op:operator pos:line="3567" pos:column="39">.</op:operator><name pos:line="3567" pos:column="40">bottom</name></name> <op:operator pos:line="3567" pos:column="47">=</op:operator> <name pos:line="3567" pos:column="49">ypos</name> <op:operator pos:line="3567" pos:column="54">+</op:operator> <name><name pos:line="3567" pos:column="56">vs</name><op:operator pos:line="3567" pos:column="58">.</op:operator><name pos:line="3567" pos:column="59">lineHeight</name></name></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="3569" pos:column="33">bool</name></type> <name pos:line="3569" pos:column="38">bracesIgnoreStyle</name> <init pos:line="3569" pos:column="56">= <expr><lit:literal type="boolean" pos:line="3569" pos:column="58">false</lit:literal></expr></init></decl>;</decl_stmt>
				<if pos:line="3570" pos:column="33">if <condition pos:line="3570" pos:column="36">(<expr><op:operator pos:line="3570" pos:column="37">(</op:operator><name><name pos:line="3570" pos:column="38">vs</name><op:operator pos:line="3570" pos:column="40">.</op:operator><name pos:line="3570" pos:column="41">braceHighlightIndicatorSet</name></name> <op:operator pos:line="3570" pos:column="68">&amp;&amp;</op:operator> <op:operator pos:line="3570" pos:column="71">(</op:operator><name pos:line="3570" pos:column="72">bracesMatchStyle</name> <op:operator pos:line="3570" pos:column="89">==</op:operator> <name pos:line="3570" pos:column="92">STYLE_BRACELIGHT</name><op:operator pos:line="3570" pos:column="108">)</op:operator><op:operator pos:line="3570" pos:column="109">)</op:operator> <op:operator pos:line="3570" pos:column="111">||</op:operator>
					<op:operator pos:line="3571" pos:column="41">(</op:operator><name><name pos:line="3571" pos:column="42">vs</name><op:operator pos:line="3571" pos:column="44">.</op:operator><name pos:line="3571" pos:column="45">braceBadLightIndicatorSet</name></name> <op:operator pos:line="3571" pos:column="71">&amp;&amp;</op:operator> <op:operator pos:line="3571" pos:column="74">(</op:operator><name pos:line="3571" pos:column="75">bracesMatchStyle</name> <op:operator pos:line="3571" pos:column="92">==</op:operator> <name pos:line="3571" pos:column="95">STYLE_BRACEBAD</name><op:operator pos:line="3571" pos:column="109">)</op:operator><op:operator pos:line="3571" pos:column="110">)</op:operator></expr>)</condition><then pos:line="3571" pos:column="112"> <block pos:line="3571" pos:column="113">{
					<expr_stmt><expr><name pos:line="3572" pos:column="41">bracesIgnoreStyle</name> <op:operator pos:line="3572" pos:column="59">=</op:operator> <lit:literal type="boolean" pos:line="3572" pos:column="61">true</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
				<decl_stmt><decl><type><name pos:line="3574" pos:column="33">Range</name></type> <name pos:line="3574" pos:column="39">rangeLine</name><argument_list pos:line="3574" pos:column="48">(<argument><expr><call><name><name pos:line="3574" pos:column="49">pdoc</name><op:operator pos:line="3574" pos:column="53">-&gt;</op:operator><name pos:line="3574" pos:column="55">LineStart</name></name><argument_list pos:line="3574" pos:column="64">(<argument><expr><name pos:line="3574" pos:column="65">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3574" pos:column="75">pdoc</name><op:operator pos:line="3574" pos:column="79">-&gt;</op:operator><name pos:line="3574" pos:column="81">LineStart</name></name><argument_list pos:line="3574" pos:column="90">(<argument><expr><name pos:line="3574" pos:column="91">lineDoc</name> <op:operator pos:line="3574" pos:column="99">+</op:operator> <lit:literal type="number" pos:line="3574" pos:column="101">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
				<comment type="line" pos:line="3575" pos:column="33">// Highlight the current braces if any</comment>
				<expr_stmt><expr><call><name><name pos:line="3576" pos:column="33">ll</name><op:operator pos:line="3576" pos:column="35">-&gt;</op:operator><name pos:line="3576" pos:column="37">SetBracesHighlight</name></name><argument_list pos:line="3576" pos:column="55">(<argument><expr><name pos:line="3576" pos:column="56">rangeLine</name></expr></argument>, <argument><expr><name pos:line="3576" pos:column="67">braces</name></expr></argument>, <argument><expr><call><name><name pos:line="3576" pos:column="75">static_cast</name><argument_list pos:line="3576" pos:column="86">&lt;<argument><expr><name pos:line="3576" pos:column="87">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="3576" pos:column="92">(<argument><expr><name pos:line="3576" pos:column="93">bracesMatchStyle</name></expr></argument>)</argument_list></call></expr></argument>,
				        <argument><expr><name pos:line="3577" pos:column="41">highlightGuideColumn</name> <op:operator pos:line="3577" pos:column="62">*</op:operator> <name><name pos:line="3577" pos:column="64">vs</name><op:operator pos:line="3577" pos:column="66">.</op:operator><name pos:line="3577" pos:column="67">spaceWidth</name></name></expr></argument>, <argument><expr><name pos:line="3577" pos:column="79">bracesIgnoreStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="3579" pos:column="33">// Draw the line</comment>
				<expr_stmt><expr><call><name pos:line="3580" pos:column="33">DrawLine</name><argument_list pos:line="3580" pos:column="41">(<argument><expr><name pos:line="3580" pos:column="42">surface</name></expr></argument>, <argument><expr><name pos:line="3580" pos:column="51">vs</name></expr></argument>, <argument><expr><name pos:line="3580" pos:column="55">lineDoc</name></expr></argument>, <argument><expr><name pos:line="3580" pos:column="64">visibleLine</name></expr></argument>, <argument><expr><name pos:line="3580" pos:column="77">xStart</name></expr></argument>, <argument><expr><name pos:line="3580" pos:column="85">rcLine</name></expr></argument>, <argument><expr><name pos:line="3580" pos:column="93">ll</name></expr></argument>, <argument><expr><name pos:line="3580" pos:column="97">subLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="3581" pos:column="33">//durPaint += et.Duration(true);</comment>

				<comment type="line" pos:line="3583" pos:column="33">// Restore the previous styles for the brace highlights in case layout is in cache.</comment>
				<expr_stmt><expr><call><name><name pos:line="3584" pos:column="33">ll</name><op:operator pos:line="3584" pos:column="35">-&gt;</op:operator><name pos:line="3584" pos:column="37">RestoreBracesHighlight</name></name><argument_list pos:line="3584" pos:column="59">(<argument><expr><name pos:line="3584" pos:column="60">rangeLine</name></expr></argument>, <argument><expr><name pos:line="3584" pos:column="71">braces</name></expr></argument>, <argument><expr><name pos:line="3584" pos:column="79">bracesIgnoreStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="3586" pos:column="33">bool</name></type> <name pos:line="3586" pos:column="38">expanded</name> <init pos:line="3586" pos:column="47">= <expr><call><name><name pos:line="3586" pos:column="49">cs</name><op:operator pos:line="3586" pos:column="51">.</op:operator><name pos:line="3586" pos:column="52">GetExpanded</name></name><argument_list pos:line="3586" pos:column="63">(<argument><expr><name pos:line="3586" pos:column="64">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="3587" pos:column="33">const</specifier> <name pos:line="3587" pos:column="39">int</name></type> <name pos:line="3587" pos:column="43">level</name> <init pos:line="3587" pos:column="49">= <expr><call><name><name pos:line="3587" pos:column="51">pdoc</name><op:operator pos:line="3587" pos:column="55">-&gt;</op:operator><name pos:line="3587" pos:column="57">GetLevel</name></name><argument_list pos:line="3587" pos:column="65">(<argument><expr><name pos:line="3587" pos:column="66">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="3588" pos:column="33">const</specifier> <name pos:line="3588" pos:column="39">int</name></type> <name pos:line="3588" pos:column="43">levelNext</name> <init pos:line="3588" pos:column="53">= <expr><call><name><name pos:line="3588" pos:column="55">pdoc</name><op:operator pos:line="3588" pos:column="59">-&gt;</op:operator><name pos:line="3588" pos:column="61">GetLevel</name></name><argument_list pos:line="3588" pos:column="69">(<argument><expr><name pos:line="3588" pos:column="70">lineDoc</name> <op:operator pos:line="3588" pos:column="78">+</op:operator> <lit:literal type="number" pos:line="3588" pos:column="80">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="3589" pos:column="33">if <condition pos:line="3589" pos:column="36">(<expr><op:operator pos:line="3589" pos:column="37">(</op:operator><name pos:line="3589" pos:column="38">level</name> <op:operator pos:line="3589" pos:column="44">&amp;</op:operator> <name pos:line="3589" pos:column="46">SC_FOLDLEVELHEADERFLAG</name><op:operator pos:line="3589" pos:column="68">)</op:operator> <op:operator pos:line="3589" pos:column="70">&amp;&amp;</op:operator>
					<op:operator pos:line="3590" pos:column="41">(</op:operator><op:operator pos:line="3590" pos:column="42">(</op:operator><name pos:line="3590" pos:column="43">level</name> <op:operator pos:line="3590" pos:column="49">&amp;</op:operator> <name pos:line="3590" pos:column="51">SC_FOLDLEVELNUMBERMASK</name><op:operator pos:line="3590" pos:column="73">)</op:operator> <op:operator pos:line="3590" pos:column="75">&lt;</op:operator> <op:operator pos:line="3590" pos:column="77">(</op:operator><name pos:line="3590" pos:column="78">levelNext</name> <op:operator pos:line="3590" pos:column="88">&amp;</op:operator> <name pos:line="3590" pos:column="90">SC_FOLDLEVELNUMBERMASK</name><op:operator pos:line="3590" pos:column="112">)</op:operator><op:operator pos:line="3590" pos:column="113">)</op:operator></expr>)</condition><then pos:line="3590" pos:column="115"> <block pos:line="3590" pos:column="116">{
					<comment type="line" pos:line="3591" pos:column="41">// Paint the line above the fold</comment>
					<if pos:line="3592" pos:column="41">if <condition pos:line="3592" pos:column="44">(<expr><op:operator pos:line="3592" pos:column="45">(</op:operator><name pos:line="3592" pos:column="46">expanded</name> <op:operator pos:line="3592" pos:column="55">&amp;&amp;</op:operator> <op:operator pos:line="3592" pos:column="58">(</op:operator><name pos:line="3592" pos:column="59">foldFlags</name> <op:operator pos:line="3592" pos:column="69">&amp;</op:operator> <name pos:line="3592" pos:column="71">SC_FOLDFLAG_LINEBEFORE_EXPANDED</name><op:operator pos:line="3592" pos:column="102">)</op:operator><op:operator pos:line="3592" pos:column="103">)</op:operator>
						<op:operator pos:line="3593" pos:column="49">||</op:operator>
						<op:operator pos:line="3594" pos:column="49">(</op:operator><op:operator pos:line="3594" pos:column="50">!</op:operator><name pos:line="3594" pos:column="51">expanded</name> <op:operator pos:line="3594" pos:column="60">&amp;&amp;</op:operator> <op:operator pos:line="3594" pos:column="63">(</op:operator><name pos:line="3594" pos:column="64">foldFlags</name> <op:operator pos:line="3594" pos:column="74">&amp;</op:operator> <name pos:line="3594" pos:column="76">SC_FOLDFLAG_LINEBEFORE_CONTRACTED</name><op:operator pos:line="3594" pos:column="109">)</op:operator><op:operator pos:line="3594" pos:column="110">)</op:operator></expr>)</condition><then pos:line="3594" pos:column="112"> <block pos:line="3594" pos:column="113">{
						<decl_stmt><decl><type><name pos:line="3595" pos:column="49">PRectangle</name></type> <name pos:line="3595" pos:column="60">rcFoldLine</name> <init pos:line="3595" pos:column="71">= <expr><name pos:line="3595" pos:column="73">rcLine</name></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="3596" pos:column="49">rcFoldLine</name><op:operator pos:line="3596" pos:column="59">.</op:operator><name pos:line="3596" pos:column="60">bottom</name></name> <op:operator pos:line="3596" pos:column="67">=</op:operator> <name><name pos:line="3596" pos:column="69">rcFoldLine</name><op:operator pos:line="3596" pos:column="79">.</op:operator><name pos:line="3596" pos:column="80">top</name></name> <op:operator pos:line="3596" pos:column="84">+</op:operator> <lit:literal type="number" pos:line="3596" pos:column="86">1</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="3597" pos:column="49">surface</name><op:operator pos:line="3597" pos:column="56">-&gt;</op:operator><name pos:line="3597" pos:column="58">FillRectangle</name></name><argument_list pos:line="3597" pos:column="71">(<argument><expr><name pos:line="3597" pos:column="72">rcFoldLine</name></expr></argument>, <argument><expr><name><name pos:line="3597" pos:column="84">vs</name><op:operator pos:line="3597" pos:column="86">.</op:operator><name pos:line="3597" pos:column="87">styles</name><index pos:line="3597" pos:column="93">[<expr><name pos:line="3597" pos:column="94">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="3597" pos:column="108">.</op:operator><name><name pos:line="3597" pos:column="109">fore</name><op:operator pos:line="3597" pos:column="113">.</op:operator><name pos:line="3597" pos:column="114">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<comment type="line" pos:line="3599" pos:column="41">// Paint the line below the fold</comment>
					<if pos:line="3600" pos:column="41">if <condition pos:line="3600" pos:column="44">(<expr><op:operator pos:line="3600" pos:column="45">(</op:operator><name pos:line="3600" pos:column="46">expanded</name> <op:operator pos:line="3600" pos:column="55">&amp;&amp;</op:operator> <op:operator pos:line="3600" pos:column="58">(</op:operator><name pos:line="3600" pos:column="59">foldFlags</name> <op:operator pos:line="3600" pos:column="69">&amp;</op:operator> <name pos:line="3600" pos:column="71">SC_FOLDFLAG_LINEAFTER_EXPANDED</name><op:operator pos:line="3600" pos:column="101">)</op:operator><op:operator pos:line="3600" pos:column="102">)</op:operator>
						<op:operator pos:line="3601" pos:column="49">||</op:operator>
						<op:operator pos:line="3602" pos:column="49">(</op:operator><op:operator pos:line="3602" pos:column="50">!</op:operator><name pos:line="3602" pos:column="51">expanded</name> <op:operator pos:line="3602" pos:column="60">&amp;&amp;</op:operator> <op:operator pos:line="3602" pos:column="63">(</op:operator><name pos:line="3602" pos:column="64">foldFlags</name> <op:operator pos:line="3602" pos:column="74">&amp;</op:operator> <name pos:line="3602" pos:column="76">SC_FOLDFLAG_LINEAFTER_CONTRACTED</name><op:operator pos:line="3602" pos:column="108">)</op:operator><op:operator pos:line="3602" pos:column="109">)</op:operator></expr>)</condition><then pos:line="3602" pos:column="111"> <block pos:line="3602" pos:column="112">{
						<decl_stmt><decl><type><name pos:line="3603" pos:column="49">PRectangle</name></type> <name pos:line="3603" pos:column="60">rcFoldLine</name> <init pos:line="3603" pos:column="71">= <expr><name pos:line="3603" pos:column="73">rcLine</name></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="3604" pos:column="49">rcFoldLine</name><op:operator pos:line="3604" pos:column="59">.</op:operator><name pos:line="3604" pos:column="60">top</name></name> <op:operator pos:line="3604" pos:column="64">=</op:operator> <name><name pos:line="3604" pos:column="66">rcFoldLine</name><op:operator pos:line="3604" pos:column="76">.</op:operator><name pos:line="3604" pos:column="77">bottom</name></name> <op:operator pos:line="3604" pos:column="84">-</op:operator> <lit:literal type="number" pos:line="3604" pos:column="86">1</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="3605" pos:column="49">surface</name><op:operator pos:line="3605" pos:column="56">-&gt;</op:operator><name pos:line="3605" pos:column="58">FillRectangle</name></name><argument_list pos:line="3605" pos:column="71">(<argument><expr><name pos:line="3605" pos:column="72">rcFoldLine</name></expr></argument>, <argument><expr><name><name pos:line="3605" pos:column="84">vs</name><op:operator pos:line="3605" pos:column="86">.</op:operator><name pos:line="3605" pos:column="87">styles</name><index pos:line="3605" pos:column="93">[<expr><name pos:line="3605" pos:column="94">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="3605" pos:column="108">.</op:operator><name><name pos:line="3605" pos:column="109">fore</name><op:operator pos:line="3605" pos:column="113">.</op:operator><name pos:line="3605" pos:column="114">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then></if>

				<expr_stmt><expr><call><name pos:line="3609" pos:column="33">DrawCarets</name><argument_list pos:line="3609" pos:column="43">(<argument><expr><name pos:line="3609" pos:column="44">surface</name></expr></argument>, <argument><expr><name pos:line="3609" pos:column="53">vs</name></expr></argument>, <argument><expr><name pos:line="3609" pos:column="57">lineDoc</name></expr></argument>, <argument><expr><name pos:line="3609" pos:column="66">xStart</name></expr></argument>, <argument><expr><name pos:line="3609" pos:column="74">rcLine</name></expr></argument>, <argument><expr><name pos:line="3609" pos:column="82">ll</name></expr></argument>, <argument><expr><name pos:line="3609" pos:column="86">subLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<if pos:line="3611" pos:column="33">if <condition pos:line="3611" pos:column="36">(<expr><name pos:line="3611" pos:column="37">bufferedDraw</name></expr>)</condition><then pos:line="3611" pos:column="50"> <block pos:line="3611" pos:column="51">{
					<decl_stmt><decl><type><name pos:line="3612" pos:column="41">Point</name></type> <name pos:line="3612" pos:column="47">from</name><argument_list pos:line="3612" pos:column="51">(<argument><expr><name><name pos:line="3612" pos:column="52">vs</name><op:operator pos:line="3612" pos:column="54">.</op:operator><name pos:line="3612" pos:column="55">fixedColumnWidth</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3612" pos:column="73">0</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="3613" pos:column="41">PRectangle</name></type> <name pos:line="3613" pos:column="52">rcCopyArea</name><argument_list pos:line="3613" pos:column="62">(<argument><expr><name><name pos:line="3613" pos:column="63">vs</name><op:operator pos:line="3613" pos:column="65">.</op:operator><name pos:line="3613" pos:column="66">fixedColumnWidth</name></name></expr></argument>, <argument><expr><name pos:line="3613" pos:column="84">yposScreen</name></expr></argument>,
					        <argument><expr><name><name pos:line="3614" pos:column="49">rcClient</name><op:operator pos:line="3614" pos:column="57">.</op:operator><name pos:line="3614" pos:column="58">right</name></name></expr></argument>, <argument><expr><name pos:line="3614" pos:column="65">yposScreen</name> <op:operator pos:line="3614" pos:column="76">+</op:operator> <name><name pos:line="3614" pos:column="78">vs</name><op:operator pos:line="3614" pos:column="80">.</op:operator><name pos:line="3614" pos:column="81">lineHeight</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="3615" pos:column="41">surfaceWindow</name><op:operator pos:line="3615" pos:column="54">-&gt;</op:operator><name pos:line="3615" pos:column="56">Copy</name></name><argument_list pos:line="3615" pos:column="60">(<argument><expr><name pos:line="3615" pos:column="61">rcCopyArea</name></expr></argument>, <argument><expr><name pos:line="3615" pos:column="73">from</name></expr></argument>, <argument><expr><op:operator pos:line="3615" pos:column="79">*</op:operator><name pos:line="3615" pos:column="80">pixmapLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>

				<expr_stmt><expr><name pos:line="3618" pos:column="33">lineWidthMaxSeen</name> <op:operator pos:line="3618" pos:column="50">=</op:operator> <call><name><name pos:line="3618" pos:column="52">Platform</name><op:operator pos:line="3618" pos:column="60">::</op:operator><name pos:line="3618" pos:column="62">Maximum</name></name><argument_list pos:line="3618" pos:column="69">(
					    <argument><expr><name pos:line="3619" pos:column="45">lineWidthMaxSeen</name></expr></argument>, <argument><expr><name><name pos:line="3619" pos:column="63">ll</name><op:operator pos:line="3619" pos:column="65">-&gt;</op:operator><name pos:line="3619" pos:column="67">positions</name><index pos:line="3619" pos:column="76">[<expr><name><name pos:line="3619" pos:column="77">ll</name><op:operator pos:line="3619" pos:column="79">-&gt;</op:operator><name pos:line="3619" pos:column="81">numCharsInLine</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="3620" pos:column="33">//durCopy += et.Duration(true);</comment>
			}</block></then></if>

			<if pos:line="3623" pos:column="25">if <condition pos:line="3623" pos:column="28">(<expr><op:operator pos:line="3623" pos:column="29">!</op:operator><name pos:line="3623" pos:column="30">bufferedDraw</name></expr>)</condition><then pos:line="3623" pos:column="43"> <block pos:line="3623" pos:column="44">{
				<expr_stmt><expr><name pos:line="3624" pos:column="33">ypos</name> <op:operator pos:line="3624" pos:column="38">+=</op:operator> <name><name pos:line="3624" pos:column="41">vs</name><op:operator pos:line="3624" pos:column="43">.</op:operator><name pos:line="3624" pos:column="44">lineHeight</name></name></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3627" pos:column="25">yposScreen</name> <op:operator pos:line="3627" pos:column="36">+=</op:operator> <name><name pos:line="3627" pos:column="39">vs</name><op:operator pos:line="3627" pos:column="41">.</op:operator><name pos:line="3627" pos:column="42">lineHeight</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="3628" pos:column="25">visibleLine</name><op:operator pos:line="3628" pos:column="36">++</op:operator></expr>;</expr_stmt>

			<comment type="line" pos:line="3630" pos:column="25">//gdk_flush();</comment>
		}</block></while>
		<expr_stmt><expr><call><name><name pos:line="3632" pos:column="17">ll</name><op:operator pos:line="3632" pos:column="19">.</op:operator><name pos:line="3632" pos:column="20">Set</name></name><argument_list pos:line="3632" pos:column="23">(<argument><expr><lit:literal type="number" pos:line="3632" pos:column="24">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="3633" pos:column="17">//if (durPaint &lt; 0.00000001)</comment>
		<comment type="line" pos:line="3634" pos:column="17">//	durPaint = 0.00000001;</comment>

		<comment type="line" pos:line="3636" pos:column="17">// Right column limit indicator</comment>
		<decl_stmt><decl><type><name pos:line="3637" pos:column="17">PRectangle</name></type> <name pos:line="3637" pos:column="28">rcBeyondEOF</name> <init pos:line="3637" pos:column="40">= <expr><name pos:line="3637" pos:column="42">rcClient</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="3638" pos:column="17">rcBeyondEOF</name><op:operator pos:line="3638" pos:column="28">.</op:operator><name pos:line="3638" pos:column="29">left</name></name> <op:operator pos:line="3638" pos:column="34">=</op:operator> <name><name pos:line="3638" pos:column="36">vs</name><op:operator pos:line="3638" pos:column="38">.</op:operator><name pos:line="3638" pos:column="39">fixedColumnWidth</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3639" pos:column="17">rcBeyondEOF</name><op:operator pos:line="3639" pos:column="28">.</op:operator><name pos:line="3639" pos:column="29">right</name></name> <op:operator pos:line="3639" pos:column="35">=</op:operator> <name><name pos:line="3639" pos:column="37">rcBeyondEOF</name><op:operator pos:line="3639" pos:column="48">.</op:operator><name pos:line="3639" pos:column="49">right</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3640" pos:column="17">rcBeyondEOF</name><op:operator pos:line="3640" pos:column="28">.</op:operator><name pos:line="3640" pos:column="29">top</name></name> <op:operator pos:line="3640" pos:column="33">=</op:operator> <op:operator pos:line="3640" pos:column="35">(</op:operator><call><name><name pos:line="3640" pos:column="36">cs</name><op:operator pos:line="3640" pos:column="38">.</op:operator><name pos:line="3640" pos:column="39">LinesDisplayed</name></name><argument_list pos:line="3640" pos:column="53">()</argument_list></call> <op:operator pos:line="3640" pos:column="56">-</op:operator> <name pos:line="3640" pos:column="58">topLine</name><op:operator pos:line="3640" pos:column="65">)</op:operator> <op:operator pos:line="3640" pos:column="67">*</op:operator> <name><name pos:line="3640" pos:column="69">vs</name><op:operator pos:line="3640" pos:column="71">.</op:operator><name pos:line="3640" pos:column="72">lineHeight</name></name></expr>;</expr_stmt>
		<if pos:line="3641" pos:column="17">if <condition pos:line="3641" pos:column="20">(<expr><name><name pos:line="3641" pos:column="21">rcBeyondEOF</name><op:operator pos:line="3641" pos:column="32">.</op:operator><name pos:line="3641" pos:column="33">top</name></name> <op:operator pos:line="3641" pos:column="37">&lt;</op:operator> <name><name pos:line="3641" pos:column="39">rcBeyondEOF</name><op:operator pos:line="3641" pos:column="50">.</op:operator><name pos:line="3641" pos:column="51">bottom</name></name></expr>)</condition><then pos:line="3641" pos:column="58"> <block pos:line="3641" pos:column="59">{
			<expr_stmt><expr><call><name><name pos:line="3642" pos:column="25">surfaceWindow</name><op:operator pos:line="3642" pos:column="38">-&gt;</op:operator><name pos:line="3642" pos:column="40">FillRectangle</name></name><argument_list pos:line="3642" pos:column="53">(<argument><expr><name pos:line="3642" pos:column="54">rcBeyondEOF</name></expr></argument>, <argument><expr><name><name pos:line="3642" pos:column="67">vs</name><op:operator pos:line="3642" pos:column="69">.</op:operator><name pos:line="3642" pos:column="70">styles</name><index pos:line="3642" pos:column="76">[<expr><name pos:line="3642" pos:column="77">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="3642" pos:column="91">.</op:operator><name><name pos:line="3642" pos:column="92">back</name><op:operator pos:line="3642" pos:column="96">.</op:operator><name pos:line="3642" pos:column="97">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3643" pos:column="25">if <condition pos:line="3643" pos:column="28">(<expr><name><name pos:line="3643" pos:column="29">vs</name><op:operator pos:line="3643" pos:column="31">.</op:operator><name pos:line="3643" pos:column="32">edgeState</name></name> <op:operator pos:line="3643" pos:column="42">==</op:operator> <name pos:line="3643" pos:column="45">EDGE_LINE</name></expr>)</condition><then pos:line="3643" pos:column="55"> <block pos:line="3643" pos:column="56">{
				<decl_stmt><decl><type><name pos:line="3644" pos:column="33">int</name></type> <name pos:line="3644" pos:column="37">edgeX</name> <init pos:line="3644" pos:column="43">= <expr><name pos:line="3644" pos:column="45">theEdge</name> <op:operator pos:line="3644" pos:column="53">*</op:operator> <name><name pos:line="3644" pos:column="55">vs</name><op:operator pos:line="3644" pos:column="57">.</op:operator><name pos:line="3644" pos:column="58">spaceWidth</name></name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="3645" pos:column="33">rcBeyondEOF</name><op:operator pos:line="3645" pos:column="44">.</op:operator><name pos:line="3645" pos:column="45">left</name></name> <op:operator pos:line="3645" pos:column="50">=</op:operator> <name pos:line="3645" pos:column="52">edgeX</name> <op:operator pos:line="3645" pos:column="58">+</op:operator> <name pos:line="3645" pos:column="60">xStart</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3646" pos:column="33">rcBeyondEOF</name><op:operator pos:line="3646" pos:column="44">.</op:operator><name pos:line="3646" pos:column="45">right</name></name> <op:operator pos:line="3646" pos:column="51">=</op:operator> <name><name pos:line="3646" pos:column="53">rcBeyondEOF</name><op:operator pos:line="3646" pos:column="64">.</op:operator><name pos:line="3646" pos:column="65">left</name></name> <op:operator pos:line="3646" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="3646" pos:column="72">1</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="3647" pos:column="33">surfaceWindow</name><op:operator pos:line="3647" pos:column="46">-&gt;</op:operator><name pos:line="3647" pos:column="48">FillRectangle</name></name><argument_list pos:line="3647" pos:column="61">(<argument><expr><name pos:line="3647" pos:column="62">rcBeyondEOF</name></expr></argument>, <argument><expr><name><name pos:line="3647" pos:column="75">vs</name><op:operator pos:line="3647" pos:column="77">.</op:operator><name pos:line="3647" pos:column="78">edgecolour</name><op:operator pos:line="3647" pos:column="88">.</op:operator><name pos:line="3647" pos:column="89">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<comment type="line" pos:line="3650" pos:column="17">//Platform::DebugPrintf(</comment>
		<comment type="line" pos:line="3651" pos:column="17">//"Layout:%9.6g    Paint:%9.6g    Ratio:%9.6g   Copy:%9.6g   Total:%9.6g\n",</comment>
		<comment type="line" pos:line="3652" pos:column="17">//durLayout, durPaint, durLayout / durPaint, durCopy, etWhole.Duration());</comment>
		<expr_stmt><expr><call><name pos:line="3653" pos:column="17">NotifyPainted</name><argument_list pos:line="3653" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<comment type="line" pos:line="3657" pos:column="1">// Space (3 space characters) between line numbers and text when printing.</comment>
<cpp:define pos:line="3658" pos:column="1">#<cpp:directive pos:line="3658" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="3658" pos:column="9">lineNumberPrintSpace</name></cpp:macro> <cpp:value pos:line="3658" pos:column="30">"   "</cpp:value></cpp:define>

<function><type><name pos:line="3660" pos:column="1">ColourDesired</name></type> <name pos:line="3660" pos:column="15">InvertedLight</name><parameter_list pos:line="3660" pos:column="28">(<param><decl><type><name pos:line="3660" pos:column="29">ColourDesired</name></type> <name pos:line="3660" pos:column="43">orig</name></decl></param>)</parameter_list> <block pos:line="3660" pos:column="49">{
	<decl_stmt><decl><type><name pos:line="3661" pos:column="9">unsigned</name> <name pos:line="3661" pos:column="18">int</name></type> <name pos:line="3661" pos:column="22">r</name> <init pos:line="3661" pos:column="24">= <expr><call><name><name pos:line="3661" pos:column="26">orig</name><op:operator pos:line="3661" pos:column="30">.</op:operator><name pos:line="3661" pos:column="31">GetRed</name></name><argument_list pos:line="3661" pos:column="37">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3662" pos:column="9">unsigned</name> <name pos:line="3662" pos:column="18">int</name></type> <name pos:line="3662" pos:column="22">g</name> <init pos:line="3662" pos:column="24">= <expr><call><name><name pos:line="3662" pos:column="26">orig</name><op:operator pos:line="3662" pos:column="30">.</op:operator><name pos:line="3662" pos:column="31">GetGreen</name></name><argument_list pos:line="3662" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3663" pos:column="9">unsigned</name> <name pos:line="3663" pos:column="18">int</name></type> <name pos:line="3663" pos:column="22">b</name> <init pos:line="3663" pos:column="24">= <expr><call><name><name pos:line="3663" pos:column="26">orig</name><op:operator pos:line="3663" pos:column="30">.</op:operator><name pos:line="3663" pos:column="31">GetBlue</name></name><argument_list pos:line="3663" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3664" pos:column="9">unsigned</name> <name pos:line="3664" pos:column="18">int</name></type> <name pos:line="3664" pos:column="22">l</name> <init pos:line="3664" pos:column="24">= <expr><op:operator pos:line="3664" pos:column="26">(</op:operator><name pos:line="3664" pos:column="27">r</name> <op:operator pos:line="3664" pos:column="29">+</op:operator> <name pos:line="3664" pos:column="31">g</name> <op:operator pos:line="3664" pos:column="33">+</op:operator> <name pos:line="3664" pos:column="35">b</name><op:operator pos:line="3664" pos:column="36">)</op:operator> <op:operator pos:line="3664" pos:column="38">/</op:operator> <lit:literal type="number" pos:line="3664" pos:column="40">3</lit:literal></expr></init></decl>;</decl_stmt> 	<comment type="line" pos:line="3664" pos:column="49">// There is a better calculation for this that matches human eye</comment>
	<decl_stmt><decl><type><name pos:line="3665" pos:column="9">unsigned</name> <name pos:line="3665" pos:column="18">int</name></type> <name pos:line="3665" pos:column="22">il</name> <init pos:line="3665" pos:column="25">= <expr><lit:literal type="number" pos:line="3665" pos:column="27">0xff</lit:literal> <op:operator pos:line="3665" pos:column="32">-</op:operator> <name pos:line="3665" pos:column="34">l</name></expr></init></decl>;</decl_stmt>
	<if pos:line="3666" pos:column="9">if <condition pos:line="3666" pos:column="12">(<expr><name pos:line="3666" pos:column="13">l</name> <op:operator pos:line="3666" pos:column="15">==</op:operator> <lit:literal type="number" pos:line="3666" pos:column="18">0</lit:literal></expr>)</condition><then pos:line="3666" pos:column="20">
		<return pos:line="3667" pos:column="17">return <expr><call><name pos:line="3667" pos:column="24">ColourDesired</name><argument_list pos:line="3667" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="3667" pos:column="38">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3667" pos:column="44">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3667" pos:column="50">0xff</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="3668" pos:column="9">r</name> <op:operator pos:line="3668" pos:column="11">=</op:operator> <name pos:line="3668" pos:column="13">r</name> <op:operator pos:line="3668" pos:column="15">*</op:operator> <name pos:line="3668" pos:column="17">il</name> <op:operator pos:line="3668" pos:column="20">/</op:operator> <name pos:line="3668" pos:column="22">l</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3669" pos:column="9">g</name> <op:operator pos:line="3669" pos:column="11">=</op:operator> <name pos:line="3669" pos:column="13">g</name> <op:operator pos:line="3669" pos:column="15">*</op:operator> <name pos:line="3669" pos:column="17">il</name> <op:operator pos:line="3669" pos:column="20">/</op:operator> <name pos:line="3669" pos:column="22">l</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="3670" pos:column="9">b</name> <op:operator pos:line="3670" pos:column="11">=</op:operator> <name pos:line="3670" pos:column="13">b</name> <op:operator pos:line="3670" pos:column="15">*</op:operator> <name pos:line="3670" pos:column="17">il</name> <op:operator pos:line="3670" pos:column="20">/</op:operator> <name pos:line="3670" pos:column="22">l</name></expr>;</expr_stmt>
	<return pos:line="3671" pos:column="9">return <expr><call><name pos:line="3671" pos:column="16">ColourDesired</name><argument_list pos:line="3671" pos:column="29">(<argument><expr><call><name><name pos:line="3671" pos:column="30">Platform</name><op:operator pos:line="3671" pos:column="38">::</op:operator><name pos:line="3671" pos:column="40">Minimum</name></name><argument_list pos:line="3671" pos:column="47">(<argument><expr><name pos:line="3671" pos:column="48">r</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3671" pos:column="51">0xff</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3671" pos:column="58">Platform</name><op:operator pos:line="3671" pos:column="66">::</op:operator><name pos:line="3671" pos:column="68">Minimum</name></name><argument_list pos:line="3671" pos:column="75">(<argument><expr><name pos:line="3671" pos:column="76">g</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3671" pos:column="79">0xff</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3671" pos:column="86">Platform</name><op:operator pos:line="3671" pos:column="94">::</op:operator><name pos:line="3671" pos:column="96">Minimum</name></name><argument_list pos:line="3671" pos:column="103">(<argument><expr><name pos:line="3671" pos:column="104">b</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3671" pos:column="107">0xff</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<comment type="line" pos:line="3674" pos:column="1">// This is mostly copied from the Paint method but with some things omitted</comment>
<comment type="line" pos:line="3675" pos:column="1">// such as the margin markers, line numbers, selection and caret</comment>
<comment type="line" pos:line="3676" pos:column="1">// Should be merged back into a combined Draw method.</comment>
<function><type><name pos:line="3677" pos:column="1">long</name></type> <name><name pos:line="3677" pos:column="6">Editor</name><op:operator pos:line="3677" pos:column="12">::</op:operator><name pos:line="3677" pos:column="14">FormatRange</name></name><parameter_list pos:line="3677" pos:column="25">(<param><decl><type><name pos:line="3677" pos:column="26">bool</name></type> <name pos:line="3677" pos:column="31">draw</name></decl></param>, <param><decl><type><name pos:line="3677" pos:column="37">Sci_RangeToFormat</name> <type:modifier pos:line="3677" pos:column="55">*</type:modifier></type><name pos:line="3677" pos:column="56">pfr</name></decl></param>)</parameter_list> <block pos:line="3677" pos:column="61">{
	<if pos:line="3678" pos:column="9">if <condition pos:line="3678" pos:column="12">(<expr><op:operator pos:line="3678" pos:column="13">!</op:operator><name pos:line="3678" pos:column="14">pfr</name></expr>)</condition><then pos:line="3678" pos:column="18">
		<return pos:line="3679" pos:column="17">return <expr><lit:literal type="number" pos:line="3679" pos:column="24">0</lit:literal></expr>;</return></then></if>

	<function_decl><type><name pos:line="3681" pos:column="9">AutoSurface</name></type> <name pos:line="3681" pos:column="21">surface</name><parameter_list pos:line="3681" pos:column="28">(<param><decl><type><name><name pos:line="3681" pos:column="29">pfr</name><op:operator pos:line="3681" pos:column="32">-&gt;</op:operator><name pos:line="3681" pos:column="34">hdc</name></name></type></decl></param>, <param><decl><type><name pos:line="3681" pos:column="39">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<if pos:line="3682" pos:column="9">if <condition pos:line="3682" pos:column="12">(<expr><op:operator pos:line="3682" pos:column="13">!</op:operator><name pos:line="3682" pos:column="14">surface</name></expr>)</condition><then pos:line="3682" pos:column="22">
		<return pos:line="3683" pos:column="17">return <expr><lit:literal type="number" pos:line="3683" pos:column="24">0</lit:literal></expr>;</return></then></if>
	<function_decl><type><name pos:line="3684" pos:column="9">AutoSurface</name></type> <name pos:line="3684" pos:column="21">surfaceMeasure</name><parameter_list pos:line="3684" pos:column="35">(<param><decl><type><name><name pos:line="3684" pos:column="36">pfr</name><op:operator pos:line="3684" pos:column="39">-&gt;</op:operator><name pos:line="3684" pos:column="41">hdcTarget</name></name></type></decl></param>, <param><decl><type><name pos:line="3684" pos:column="52">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<if pos:line="3685" pos:column="9">if <condition pos:line="3685" pos:column="12">(<expr><op:operator pos:line="3685" pos:column="13">!</op:operator><name pos:line="3685" pos:column="14">surfaceMeasure</name></expr>)</condition><then pos:line="3685" pos:column="29"> <block pos:line="3685" pos:column="30">{
		<return pos:line="3686" pos:column="17">return <expr><lit:literal type="number" pos:line="3686" pos:column="24">0</lit:literal></expr>;</return>
	}</block></then></if>

	<comment type="line" pos:line="3689" pos:column="9">// Can't use measurements cached for screen</comment>
	<expr_stmt><expr><call><name><name pos:line="3690" pos:column="9">posCache</name><op:operator pos:line="3690" pos:column="17">.</op:operator><name pos:line="3690" pos:column="18">Clear</name></name><argument_list pos:line="3690" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<function_decl><type><name pos:line="3692" pos:column="9">ViewStyle</name></type> <name pos:line="3692" pos:column="19">vsPrint</name><parameter_list pos:line="3692" pos:column="26">(<param><decl><type><name pos:line="3692" pos:column="27">vs</name></type></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" pos:line="3694" pos:column="9">// Modify the view style for printing as do not normally want any of the transient features to be printed</comment>
	<comment type="line" pos:line="3695" pos:column="9">// Printing supports only the line number margin.</comment>
	<decl_stmt><decl><type><name pos:line="3696" pos:column="9">int</name></type> <name pos:line="3696" pos:column="13">lineNumberIndex</name> <init pos:line="3696" pos:column="29">= <expr><op:operator pos:line="3696" pos:column="31">-</op:operator><lit:literal type="number" pos:line="3696" pos:column="32">1</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="3697" pos:column="9">for (<init><decl><type><name pos:line="3697" pos:column="14">int</name></type> <name pos:line="3697" pos:column="18">margin</name> <init pos:line="3697" pos:column="25">= <expr><lit:literal type="number" pos:line="3697" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3697" pos:column="30">margin</name> <op:operator pos:line="3697" pos:column="37">&lt;</op:operator> <name><name pos:line="3697" pos:column="39">ViewStyle</name><op:operator pos:line="3697" pos:column="48">::</op:operator><name pos:line="3697" pos:column="50">margins</name></name></expr>;</condition> <incr><expr><name pos:line="3697" pos:column="59">margin</name><op:operator pos:line="3697" pos:column="65">++</op:operator></expr></incr>) <block pos:line="3697" pos:column="69">{
		<if pos:line="3698" pos:column="17">if <condition pos:line="3698" pos:column="20">(<expr><op:operator pos:line="3698" pos:column="21">(</op:operator><name><name pos:line="3698" pos:column="22">vsPrint</name><op:operator pos:line="3698" pos:column="29">.</op:operator><name pos:line="3698" pos:column="30">ms</name><index pos:line="3698" pos:column="32">[<expr><name pos:line="3698" pos:column="33">margin</name></expr>]</index></name><op:operator pos:line="3698" pos:column="40">.</op:operator><name pos:line="3698" pos:column="41">style</name> <op:operator pos:line="3698" pos:column="47">==</op:operator> <name pos:line="3698" pos:column="50">SC_MARGIN_NUMBER</name><op:operator pos:line="3698" pos:column="66">)</op:operator> <op:operator pos:line="3698" pos:column="68">&amp;&amp;</op:operator> <op:operator pos:line="3698" pos:column="71">(</op:operator><name><name pos:line="3698" pos:column="72">vsPrint</name><op:operator pos:line="3698" pos:column="79">.</op:operator><name pos:line="3698" pos:column="80">ms</name><index pos:line="3698" pos:column="82">[<expr><name pos:line="3698" pos:column="83">margin</name></expr>]</index></name><op:operator pos:line="3698" pos:column="90">.</op:operator><name pos:line="3698" pos:column="91">width</name> <op:operator pos:line="3698" pos:column="97">&gt;</op:operator> <lit:literal type="number" pos:line="3698" pos:column="99">0</lit:literal><op:operator pos:line="3698" pos:column="100">)</op:operator></expr>)</condition><then pos:line="3698" pos:column="102"> <block pos:line="3698" pos:column="103">{
			<expr_stmt><expr><name pos:line="3699" pos:column="25">lineNumberIndex</name> <op:operator pos:line="3699" pos:column="41">=</op:operator> <name pos:line="3699" pos:column="43">margin</name></expr>;</expr_stmt>
		}</block></then> <else pos:line="3700" pos:column="19">else <block pos:line="3700" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="3701" pos:column="25">vsPrint</name><op:operator pos:line="3701" pos:column="32">.</op:operator><name pos:line="3701" pos:column="33">ms</name><index pos:line="3701" pos:column="35">[<expr><name pos:line="3701" pos:column="36">margin</name></expr>]</index></name><op:operator pos:line="3701" pos:column="43">.</op:operator><name pos:line="3701" pos:column="44">width</name> <op:operator pos:line="3701" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="3701" pos:column="52">0</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<expr_stmt><expr><name><name pos:line="3704" pos:column="9">vsPrint</name><op:operator pos:line="3704" pos:column="16">.</op:operator><name pos:line="3704" pos:column="17">showMarkedLines</name></name> <op:operator pos:line="3704" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="3704" pos:column="35">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3705" pos:column="9">vsPrint</name><op:operator pos:line="3705" pos:column="16">.</op:operator><name pos:line="3705" pos:column="17">fixedColumnWidth</name></name> <op:operator pos:line="3705" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="3705" pos:column="36">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3706" pos:column="9">vsPrint</name><op:operator pos:line="3706" pos:column="16">.</op:operator><name pos:line="3706" pos:column="17">zoomLevel</name></name> <op:operator pos:line="3706" pos:column="27">=</op:operator> <name pos:line="3706" pos:column="29">printMagnification</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3707" pos:column="9">vsPrint</name><op:operator pos:line="3707" pos:column="16">.</op:operator><name pos:line="3707" pos:column="17">viewIndentationGuides</name></name> <op:operator pos:line="3707" pos:column="39">=</op:operator> <name pos:line="3707" pos:column="41">ivNone</name></expr>;</expr_stmt>
	<comment type="line" pos:line="3708" pos:column="9">// Don't show the selection when printing</comment>
	<expr_stmt><expr><name><name pos:line="3709" pos:column="9">vsPrint</name><op:operator pos:line="3709" pos:column="16">.</op:operator><name pos:line="3709" pos:column="17">selbackset</name></name> <op:operator pos:line="3709" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="3709" pos:column="30">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3710" pos:column="9">vsPrint</name><op:operator pos:line="3710" pos:column="16">.</op:operator><name pos:line="3710" pos:column="17">selforeset</name></name> <op:operator pos:line="3710" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="3710" pos:column="30">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3711" pos:column="9">vsPrint</name><op:operator pos:line="3711" pos:column="16">.</op:operator><name pos:line="3711" pos:column="17">selAlpha</name></name> <op:operator pos:line="3711" pos:column="26">=</op:operator> <name pos:line="3711" pos:column="28">SC_ALPHA_NOALPHA</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3712" pos:column="9">vsPrint</name><op:operator pos:line="3712" pos:column="16">.</op:operator><name pos:line="3712" pos:column="17">selAdditionalAlpha</name></name> <op:operator pos:line="3712" pos:column="36">=</op:operator> <name pos:line="3712" pos:column="38">SC_ALPHA_NOALPHA</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3713" pos:column="9">vsPrint</name><op:operator pos:line="3713" pos:column="16">.</op:operator><name pos:line="3713" pos:column="17">whitespaceBackgroundSet</name></name> <op:operator pos:line="3713" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="3713" pos:column="43">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3714" pos:column="9">vsPrint</name><op:operator pos:line="3714" pos:column="16">.</op:operator><name pos:line="3714" pos:column="17">whitespaceForegroundSet</name></name> <op:operator pos:line="3714" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="3714" pos:column="43">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3715" pos:column="9">vsPrint</name><op:operator pos:line="3715" pos:column="16">.</op:operator><name pos:line="3715" pos:column="17">showCaretLineBackground</name></name> <op:operator pos:line="3715" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="3715" pos:column="43">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3716" pos:column="9">vsPrint</name><op:operator pos:line="3716" pos:column="16">.</op:operator><name pos:line="3716" pos:column="17">showCaretLineBackgroundAlways</name></name> <op:operator pos:line="3716" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="3716" pos:column="49">false</lit:literal></expr>;</expr_stmt>
	
	<comment type="line" pos:line="3718" pos:column="9">// Don't highlight matching braces using indicators</comment>
	<expr_stmt><expr><name><name pos:line="3719" pos:column="9">vsPrint</name><op:operator pos:line="3719" pos:column="16">.</op:operator><name pos:line="3719" pos:column="17">braceHighlightIndicatorSet</name></name> <op:operator pos:line="3719" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="3719" pos:column="46">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3720" pos:column="9">vsPrint</name><op:operator pos:line="3720" pos:column="16">.</op:operator><name pos:line="3720" pos:column="17">braceBadLightIndicatorSet</name></name> <op:operator pos:line="3720" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="3720" pos:column="45">false</lit:literal></expr>;</expr_stmt>

	<comment type="line" pos:line="3722" pos:column="9">// Set colours for printing according to users settings</comment>
	<for pos:line="3723" pos:column="9">for (<init><decl><type><name pos:line="3723" pos:column="14">size_t</name></type> <name pos:line="3723" pos:column="21">sty</name> <init pos:line="3723" pos:column="25">= <expr><lit:literal type="number" pos:line="3723" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3723" pos:column="30">sty</name> <op:operator pos:line="3723" pos:column="34">&lt;</op:operator> <name><name pos:line="3723" pos:column="36">vsPrint</name><op:operator pos:line="3723" pos:column="43">.</op:operator><name pos:line="3723" pos:column="44">stylesSize</name></name></expr>;</condition> <incr><expr><name pos:line="3723" pos:column="56">sty</name><op:operator pos:line="3723" pos:column="59">++</op:operator></expr></incr>) <block pos:line="3723" pos:column="63">{
		<if pos:line="3724" pos:column="17">if <condition pos:line="3724" pos:column="20">(<expr><name pos:line="3724" pos:column="21">printColourMode</name> <op:operator pos:line="3724" pos:column="37">==</op:operator> <name pos:line="3724" pos:column="40">SC_PRINT_INVERTLIGHT</name></expr>)</condition><then pos:line="3724" pos:column="61"> <block pos:line="3724" pos:column="62">{
			<expr_stmt><expr><name><name pos:line="3725" pos:column="25">vsPrint</name><op:operator pos:line="3725" pos:column="32">.</op:operator><name pos:line="3725" pos:column="33">styles</name><index pos:line="3725" pos:column="39">[<expr><name pos:line="3725" pos:column="40">sty</name></expr>]</index></name><op:operator pos:line="3725" pos:column="44">.</op:operator><name><name pos:line="3725" pos:column="45">fore</name><op:operator pos:line="3725" pos:column="49">.</op:operator><name pos:line="3725" pos:column="50">desired</name></name> <op:operator pos:line="3725" pos:column="58">=</op:operator> <call><name pos:line="3725" pos:column="60">InvertedLight</name><argument_list pos:line="3725" pos:column="73">(<argument><expr><name><name pos:line="3725" pos:column="74">vsPrint</name><op:operator pos:line="3725" pos:column="81">.</op:operator><name pos:line="3725" pos:column="82">styles</name><index pos:line="3725" pos:column="88">[<expr><name pos:line="3725" pos:column="89">sty</name></expr>]</index></name><op:operator pos:line="3725" pos:column="93">.</op:operator><name><name pos:line="3725" pos:column="94">fore</name><op:operator pos:line="3725" pos:column="98">.</op:operator><name pos:line="3725" pos:column="99">desired</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="3726" pos:column="25">vsPrint</name><op:operator pos:line="3726" pos:column="32">.</op:operator><name pos:line="3726" pos:column="33">styles</name><index pos:line="3726" pos:column="39">[<expr><name pos:line="3726" pos:column="40">sty</name></expr>]</index></name><op:operator pos:line="3726" pos:column="44">.</op:operator><name><name pos:line="3726" pos:column="45">back</name><op:operator pos:line="3726" pos:column="49">.</op:operator><name pos:line="3726" pos:column="50">desired</name></name> <op:operator pos:line="3726" pos:column="58">=</op:operator> <call><name pos:line="3726" pos:column="60">InvertedLight</name><argument_list pos:line="3726" pos:column="73">(<argument><expr><name><name pos:line="3726" pos:column="74">vsPrint</name><op:operator pos:line="3726" pos:column="81">.</op:operator><name pos:line="3726" pos:column="82">styles</name><index pos:line="3726" pos:column="88">[<expr><name pos:line="3726" pos:column="89">sty</name></expr>]</index></name><op:operator pos:line="3726" pos:column="93">.</op:operator><name><name pos:line="3726" pos:column="94">back</name><op:operator pos:line="3726" pos:column="98">.</op:operator><name pos:line="3726" pos:column="99">desired</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="3727" pos:column="19">else <if pos:line="3727" pos:column="24">if <condition pos:line="3727" pos:column="27">(<expr><name pos:line="3727" pos:column="28">printColourMode</name> <op:operator pos:line="3727" pos:column="44">==</op:operator> <name pos:line="3727" pos:column="47">SC_PRINT_BLACKONWHITE</name></expr>)</condition><then pos:line="3727" pos:column="69"> <block pos:line="3727" pos:column="70">{
			<expr_stmt><expr><name><name pos:line="3728" pos:column="25">vsPrint</name><op:operator pos:line="3728" pos:column="32">.</op:operator><name pos:line="3728" pos:column="33">styles</name><index pos:line="3728" pos:column="39">[<expr><name pos:line="3728" pos:column="40">sty</name></expr>]</index></name><op:operator pos:line="3728" pos:column="44">.</op:operator><name><name pos:line="3728" pos:column="45">fore</name><op:operator pos:line="3728" pos:column="49">.</op:operator><name pos:line="3728" pos:column="50">desired</name></name> <op:operator pos:line="3728" pos:column="58">=</op:operator> <call><name pos:line="3728" pos:column="60">ColourDesired</name><argument_list pos:line="3728" pos:column="73">(<argument><expr><lit:literal type="number" pos:line="3728" pos:column="74">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3728" pos:column="77">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3728" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="3729" pos:column="25">vsPrint</name><op:operator pos:line="3729" pos:column="32">.</op:operator><name pos:line="3729" pos:column="33">styles</name><index pos:line="3729" pos:column="39">[<expr><name pos:line="3729" pos:column="40">sty</name></expr>]</index></name><op:operator pos:line="3729" pos:column="44">.</op:operator><name><name pos:line="3729" pos:column="45">back</name><op:operator pos:line="3729" pos:column="49">.</op:operator><name pos:line="3729" pos:column="50">desired</name></name> <op:operator pos:line="3729" pos:column="58">=</op:operator> <call><name pos:line="3729" pos:column="60">ColourDesired</name><argument_list pos:line="3729" pos:column="73">(<argument><expr><lit:literal type="number" pos:line="3729" pos:column="74">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3729" pos:column="80">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3729" pos:column="86">0xff</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="3730" pos:column="19">else <if pos:line="3730" pos:column="24">if <condition pos:line="3730" pos:column="27">(<expr><name pos:line="3730" pos:column="28">printColourMode</name> <op:operator pos:line="3730" pos:column="44">==</op:operator> <name pos:line="3730" pos:column="47">SC_PRINT_COLOURONWHITE</name></expr>)</condition><then pos:line="3730" pos:column="70"> <block pos:line="3730" pos:column="71">{
			<expr_stmt><expr><name><name pos:line="3731" pos:column="25">vsPrint</name><op:operator pos:line="3731" pos:column="32">.</op:operator><name pos:line="3731" pos:column="33">styles</name><index pos:line="3731" pos:column="39">[<expr><name pos:line="3731" pos:column="40">sty</name></expr>]</index></name><op:operator pos:line="3731" pos:column="44">.</op:operator><name><name pos:line="3731" pos:column="45">back</name><op:operator pos:line="3731" pos:column="49">.</op:operator><name pos:line="3731" pos:column="50">desired</name></name> <op:operator pos:line="3731" pos:column="58">=</op:operator> <call><name pos:line="3731" pos:column="60">ColourDesired</name><argument_list pos:line="3731" pos:column="73">(<argument><expr><lit:literal type="number" pos:line="3731" pos:column="74">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3731" pos:column="80">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3731" pos:column="86">0xff</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="3732" pos:column="19">else <if pos:line="3732" pos:column="24">if <condition pos:line="3732" pos:column="27">(<expr><name pos:line="3732" pos:column="28">printColourMode</name> <op:operator pos:line="3732" pos:column="44">==</op:operator> <name pos:line="3732" pos:column="47">SC_PRINT_COLOURONWHITEDEFAULTBG</name></expr>)</condition><then pos:line="3732" pos:column="79"> <block pos:line="3732" pos:column="80">{
			<if pos:line="3733" pos:column="25">if <condition pos:line="3733" pos:column="28">(<expr><name pos:line="3733" pos:column="29">sty</name> <op:operator pos:line="3733" pos:column="33">&lt;=</op:operator> <name pos:line="3733" pos:column="36">STYLE_DEFAULT</name></expr>)</condition><then pos:line="3733" pos:column="50"> <block pos:line="3733" pos:column="51">{
				<expr_stmt><expr><name><name pos:line="3734" pos:column="33">vsPrint</name><op:operator pos:line="3734" pos:column="40">.</op:operator><name pos:line="3734" pos:column="41">styles</name><index pos:line="3734" pos:column="47">[<expr><name pos:line="3734" pos:column="48">sty</name></expr>]</index></name><op:operator pos:line="3734" pos:column="52">.</op:operator><name><name pos:line="3734" pos:column="53">back</name><op:operator pos:line="3734" pos:column="57">.</op:operator><name pos:line="3734" pos:column="58">desired</name></name> <op:operator pos:line="3734" pos:column="66">=</op:operator> <call><name pos:line="3734" pos:column="68">ColourDesired</name><argument_list pos:line="3734" pos:column="81">(<argument><expr><lit:literal type="number" pos:line="3734" pos:column="82">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3734" pos:column="88">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3734" pos:column="94">0xff</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if></else></if></else></if></else></if>
	}</block></for>
	<comment type="line" pos:line="3738" pos:column="9">// White background for the line numbers</comment>
	<expr_stmt><expr><name><name pos:line="3739" pos:column="9">vsPrint</name><op:operator pos:line="3739" pos:column="16">.</op:operator><name pos:line="3739" pos:column="17">styles</name><index pos:line="3739" pos:column="23">[<expr><name pos:line="3739" pos:column="24">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="3739" pos:column="41">.</op:operator><name><name pos:line="3739" pos:column="42">back</name><op:operator pos:line="3739" pos:column="46">.</op:operator><name pos:line="3739" pos:column="47">desired</name></name> <op:operator pos:line="3739" pos:column="55">=</op:operator> <call><name pos:line="3739" pos:column="57">ColourDesired</name><argument_list pos:line="3739" pos:column="70">(<argument><expr><lit:literal type="number" pos:line="3739" pos:column="71">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3739" pos:column="77">0xff</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3739" pos:column="83">0xff</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="3741" pos:column="9">vsPrint</name><op:operator pos:line="3741" pos:column="16">.</op:operator><name pos:line="3741" pos:column="17">Refresh</name></name><argument_list pos:line="3741" pos:column="24">(<argument><expr><op:operator pos:line="3741" pos:column="25">*</op:operator><name pos:line="3741" pos:column="26">surfaceMeasure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="3742" pos:column="9">// Determining width must hapen after fonts have been realised in Refresh</comment>
	<decl_stmt><decl><type><name pos:line="3743" pos:column="9">int</name></type> <name pos:line="3743" pos:column="13">lineNumberWidth</name> <init pos:line="3743" pos:column="29">= <expr><lit:literal type="number" pos:line="3743" pos:column="31">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="3744" pos:column="9">if <condition pos:line="3744" pos:column="12">(<expr><name pos:line="3744" pos:column="13">lineNumberIndex</name> <op:operator pos:line="3744" pos:column="29">&gt;=</op:operator> <lit:literal type="number" pos:line="3744" pos:column="32">0</lit:literal></expr>)</condition><then pos:line="3744" pos:column="34"> <block pos:line="3744" pos:column="35">{
		<expr_stmt><expr><name pos:line="3745" pos:column="17">lineNumberWidth</name> <op:operator pos:line="3745" pos:column="33">=</op:operator> <call><name><name pos:line="3745" pos:column="35">surfaceMeasure</name><op:operator pos:line="3745" pos:column="49">-&gt;</op:operator><name pos:line="3745" pos:column="51">WidthText</name></name><argument_list pos:line="3745" pos:column="60">(<argument><expr><name><name pos:line="3745" pos:column="61">vsPrint</name><op:operator pos:line="3745" pos:column="68">.</op:operator><name pos:line="3745" pos:column="69">styles</name><index pos:line="3745" pos:column="75">[<expr><name pos:line="3745" pos:column="76">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="3745" pos:column="93">.</op:operator><name pos:line="3745" pos:column="94">font</name></expr></argument>,
		        <argument><expr><lit:literal type="string" pos:line="3746" pos:column="25">"99999"</lit:literal> <name pos:line="3746" pos:column="33">lineNumberPrintSpace</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3746" pos:column="55">5</lit:literal> <op:operator pos:line="3746" pos:column="57">+</op:operator> <call><name pos:line="3746" pos:column="59">istrlen</name><argument_list pos:line="3746" pos:column="66">(<argument><expr><name pos:line="3746" pos:column="67">lineNumberPrintSpace</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3747" pos:column="17">vsPrint</name><op:operator pos:line="3747" pos:column="24">.</op:operator><name pos:line="3747" pos:column="25">ms</name><index pos:line="3747" pos:column="27">[<expr><name pos:line="3747" pos:column="28">lineNumberIndex</name></expr>]</index></name><op:operator pos:line="3747" pos:column="44">.</op:operator><name pos:line="3747" pos:column="45">width</name> <op:operator pos:line="3747" pos:column="51">=</op:operator> <name pos:line="3747" pos:column="53">lineNumberWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3748" pos:column="17">vsPrint</name><op:operator pos:line="3748" pos:column="24">.</op:operator><name pos:line="3748" pos:column="25">Refresh</name></name><argument_list pos:line="3748" pos:column="32">(<argument><expr><op:operator pos:line="3748" pos:column="33">*</op:operator><name pos:line="3748" pos:column="34">surfaceMeasure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="3748" pos:column="57">// Recalculate fixedColumnWidth</comment>
	}</block></then></if>
	<comment type="line" pos:line="3750" pos:column="9">// Ensure colours are set up</comment>
	<expr_stmt><expr><call><name><name pos:line="3751" pos:column="9">vsPrint</name><op:operator pos:line="3751" pos:column="16">.</op:operator><name pos:line="3751" pos:column="17">RefreshColourPalette</name></name><argument_list pos:line="3751" pos:column="37">(<argument><expr><name pos:line="3751" pos:column="38">palette</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="3751" pos:column="47">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="3752" pos:column="9">vsPrint</name><op:operator pos:line="3752" pos:column="16">.</op:operator><name pos:line="3752" pos:column="17">RefreshColourPalette</name></name><argument_list pos:line="3752" pos:column="37">(<argument><expr><name pos:line="3752" pos:column="38">palette</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="3752" pos:column="47">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="3754" pos:column="9">int</name></type> <name pos:line="3754" pos:column="13">linePrintStart</name> <init pos:line="3754" pos:column="28">= <expr><call><name><name pos:line="3754" pos:column="30">pdoc</name><op:operator pos:line="3754" pos:column="34">-&gt;</op:operator><name pos:line="3754" pos:column="36">LineFromPosition</name></name><argument_list pos:line="3754" pos:column="52">(<argument><expr><name><name pos:line="3754" pos:column="53">pfr</name><op:operator pos:line="3754" pos:column="56">-&gt;</op:operator><name pos:line="3754" pos:column="58">chrg</name><op:operator pos:line="3754" pos:column="62">.</op:operator><name pos:line="3754" pos:column="63">cpMin</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3755" pos:column="9">int</name></type> <name pos:line="3755" pos:column="13">linePrintLast</name> <init pos:line="3755" pos:column="27">= <expr><name pos:line="3755" pos:column="29">linePrintStart</name> <op:operator pos:line="3755" pos:column="44">+</op:operator> <op:operator pos:line="3755" pos:column="46">(</op:operator><name><name pos:line="3755" pos:column="47">pfr</name><op:operator pos:line="3755" pos:column="50">-&gt;</op:operator><name pos:line="3755" pos:column="52">rc</name><op:operator pos:line="3755" pos:column="54">.</op:operator><name pos:line="3755" pos:column="55">bottom</name></name> <op:operator pos:line="3755" pos:column="62">-</op:operator> <name><name pos:line="3755" pos:column="64">pfr</name><op:operator pos:line="3755" pos:column="67">-&gt;</op:operator><name pos:line="3755" pos:column="69">rc</name><op:operator pos:line="3755" pos:column="71">.</op:operator><name pos:line="3755" pos:column="72">top</name></name><op:operator pos:line="3755" pos:column="75">)</op:operator> <op:operator pos:line="3755" pos:column="77">/</op:operator> <name><name pos:line="3755" pos:column="79">vsPrint</name><op:operator pos:line="3755" pos:column="86">.</op:operator><name pos:line="3755" pos:column="87">lineHeight</name></name> <op:operator pos:line="3755" pos:column="98">-</op:operator> <lit:literal type="number" pos:line="3755" pos:column="100">1</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="3756" pos:column="9">if <condition pos:line="3756" pos:column="12">(<expr><name pos:line="3756" pos:column="13">linePrintLast</name> <op:operator pos:line="3756" pos:column="27">&lt;</op:operator> <name pos:line="3756" pos:column="29">linePrintStart</name></expr>)</condition><then pos:line="3756" pos:column="44">
		<expr_stmt><expr><name pos:line="3757" pos:column="17">linePrintLast</name> <op:operator pos:line="3757" pos:column="31">=</op:operator> <name pos:line="3757" pos:column="33">linePrintStart</name></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="3758" pos:column="9">int</name></type> <name pos:line="3758" pos:column="13">linePrintMax</name> <init pos:line="3758" pos:column="26">= <expr><call><name><name pos:line="3758" pos:column="28">pdoc</name><op:operator pos:line="3758" pos:column="32">-&gt;</op:operator><name pos:line="3758" pos:column="34">LineFromPosition</name></name><argument_list pos:line="3758" pos:column="50">(<argument><expr><name><name pos:line="3758" pos:column="51">pfr</name><op:operator pos:line="3758" pos:column="54">-&gt;</op:operator><name pos:line="3758" pos:column="56">chrg</name><op:operator pos:line="3758" pos:column="60">.</op:operator><name pos:line="3758" pos:column="61">cpMax</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3759" pos:column="9">if <condition pos:line="3759" pos:column="12">(<expr><name pos:line="3759" pos:column="13">linePrintLast</name> <op:operator pos:line="3759" pos:column="27">&gt;</op:operator> <name pos:line="3759" pos:column="29">linePrintMax</name></expr>)</condition><then pos:line="3759" pos:column="42">
		<expr_stmt><expr><name pos:line="3760" pos:column="17">linePrintLast</name> <op:operator pos:line="3760" pos:column="31">=</op:operator> <name pos:line="3760" pos:column="33">linePrintMax</name></expr>;</expr_stmt></then></if>
	<comment type="line" pos:line="3761" pos:column="9">//Platform::DebugPrintf("Formatting lines=[%0d,%0d,%0d] top=%0d bottom=%0d line=%0d %0d\n",</comment>
	<comment type="line" pos:line="3762" pos:column="9">//      linePrintStart, linePrintLast, linePrintMax, pfr-&gt;rc.top, pfr-&gt;rc.bottom, vsPrint.lineHeight,</comment>
	<comment type="line" pos:line="3763" pos:column="9">//      surfaceMeasure-&gt;Height(vsPrint.styles[STYLE_LINENUMBER].font));</comment>
	<decl_stmt><decl><type><name pos:line="3764" pos:column="9">int</name></type> <name pos:line="3764" pos:column="13">endPosPrint</name> <init pos:line="3764" pos:column="25">= <expr><call><name><name pos:line="3764" pos:column="27">pdoc</name><op:operator pos:line="3764" pos:column="31">-&gt;</op:operator><name pos:line="3764" pos:column="33">Length</name></name><argument_list pos:line="3764" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3765" pos:column="9">if <condition pos:line="3765" pos:column="12">(<expr><name pos:line="3765" pos:column="13">linePrintLast</name> <op:operator pos:line="3765" pos:column="27">&lt;</op:operator> <call><name><name pos:line="3765" pos:column="29">pdoc</name><op:operator pos:line="3765" pos:column="33">-&gt;</op:operator><name pos:line="3765" pos:column="35">LinesTotal</name></name><argument_list pos:line="3765" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="3765" pos:column="48">
		<expr_stmt><expr><name pos:line="3766" pos:column="17">endPosPrint</name> <op:operator pos:line="3766" pos:column="29">=</op:operator> <call><name><name pos:line="3766" pos:column="31">pdoc</name><op:operator pos:line="3766" pos:column="35">-&gt;</op:operator><name pos:line="3766" pos:column="37">LineStart</name></name><argument_list pos:line="3766" pos:column="46">(<argument><expr><name pos:line="3766" pos:column="47">linePrintLast</name> <op:operator pos:line="3766" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="3766" pos:column="63">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<comment type="line" pos:line="3768" pos:column="9">// Ensure we are styled to where we are formatting.</comment>
	<expr_stmt><expr><call><name><name pos:line="3769" pos:column="9">pdoc</name><op:operator pos:line="3769" pos:column="13">-&gt;</op:operator><name pos:line="3769" pos:column="15">EnsureStyledTo</name></name><argument_list pos:line="3769" pos:column="29">(<argument><expr><name pos:line="3769" pos:column="30">endPosPrint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="3771" pos:column="9">int</name></type> <name pos:line="3771" pos:column="13">xStart</name> <init pos:line="3771" pos:column="20">= <expr><name><name pos:line="3771" pos:column="22">vsPrint</name><op:operator pos:line="3771" pos:column="29">.</op:operator><name pos:line="3771" pos:column="30">fixedColumnWidth</name></name> <op:operator pos:line="3771" pos:column="47">+</op:operator> <name><name pos:line="3771" pos:column="49">pfr</name><op:operator pos:line="3771" pos:column="52">-&gt;</op:operator><name pos:line="3771" pos:column="54">rc</name><op:operator pos:line="3771" pos:column="56">.</op:operator><name pos:line="3771" pos:column="57">left</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3772" pos:column="9">int</name></type> <name pos:line="3772" pos:column="13">ypos</name> <init pos:line="3772" pos:column="18">= <expr><name><name pos:line="3772" pos:column="20">pfr</name><op:operator pos:line="3772" pos:column="23">-&gt;</op:operator><name pos:line="3772" pos:column="25">rc</name><op:operator pos:line="3772" pos:column="27">.</op:operator><name pos:line="3772" pos:column="28">top</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3774" pos:column="9">int</name></type> <name pos:line="3774" pos:column="13">lineDoc</name> <init pos:line="3774" pos:column="21">= <expr><name pos:line="3774" pos:column="23">linePrintStart</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="3776" pos:column="9">int</name></type> <name pos:line="3776" pos:column="13">nPrintPos</name> <init pos:line="3776" pos:column="23">= <expr><name><name pos:line="3776" pos:column="25">pfr</name><op:operator pos:line="3776" pos:column="28">-&gt;</op:operator><name pos:line="3776" pos:column="30">chrg</name><op:operator pos:line="3776" pos:column="34">.</op:operator><name pos:line="3776" pos:column="35">cpMin</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3777" pos:column="9">int</name></type> <name pos:line="3777" pos:column="13">visibleLine</name> <init pos:line="3777" pos:column="25">= <expr><lit:literal type="number" pos:line="3777" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3778" pos:column="9">int</name></type> <name pos:line="3778" pos:column="13">widthPrint</name> <init pos:line="3778" pos:column="24">= <expr><name><name pos:line="3778" pos:column="26">pfr</name><op:operator pos:line="3778" pos:column="29">-&gt;</op:operator><name pos:line="3778" pos:column="31">rc</name><op:operator pos:line="3778" pos:column="33">.</op:operator><name pos:line="3778" pos:column="34">right</name></name> <op:operator pos:line="3778" pos:column="40">-</op:operator> <name><name pos:line="3778" pos:column="42">pfr</name><op:operator pos:line="3778" pos:column="45">-&gt;</op:operator><name pos:line="3778" pos:column="47">rc</name><op:operator pos:line="3778" pos:column="49">.</op:operator><name pos:line="3778" pos:column="50">left</name></name> <op:operator pos:line="3778" pos:column="55">-</op:operator> <name><name pos:line="3778" pos:column="57">vsPrint</name><op:operator pos:line="3778" pos:column="64">.</op:operator><name pos:line="3778" pos:column="65">fixedColumnWidth</name></name></expr></init></decl>;</decl_stmt>
	<if pos:line="3779" pos:column="9">if <condition pos:line="3779" pos:column="12">(<expr><name pos:line="3779" pos:column="13">printWrapState</name> <op:operator pos:line="3779" pos:column="28">==</op:operator> <name pos:line="3779" pos:column="31">eWrapNone</name></expr>)</condition><then pos:line="3779" pos:column="41">
		<expr_stmt><expr><name pos:line="3780" pos:column="17">widthPrint</name> <op:operator pos:line="3780" pos:column="28">=</op:operator> <name><name pos:line="3780" pos:column="30">LineLayout</name><op:operator pos:line="3780" pos:column="40">::</op:operator><name pos:line="3780" pos:column="42">wrapWidthInfinite</name></name></expr>;</expr_stmt></then></if>

	<while pos:line="3782" pos:column="9">while <condition pos:line="3782" pos:column="15">(<expr><name pos:line="3782" pos:column="16">lineDoc</name> <op:operator pos:line="3782" pos:column="24">&lt;=</op:operator> <name pos:line="3782" pos:column="27">linePrintLast</name> <op:operator pos:line="3782" pos:column="41">&amp;&amp;</op:operator> <name pos:line="3782" pos:column="44">ypos</name> <op:operator pos:line="3782" pos:column="49">&lt;</op:operator> <name><name pos:line="3782" pos:column="51">pfr</name><op:operator pos:line="3782" pos:column="54">-&gt;</op:operator><name pos:line="3782" pos:column="56">rc</name><op:operator pos:line="3782" pos:column="58">.</op:operator><name pos:line="3782" pos:column="59">bottom</name></name></expr>)</condition> <block pos:line="3782" pos:column="67">{

		<comment type="line" pos:line="3784" pos:column="17">// When printing, the hdc and hdcTarget may be the same, so</comment>
		<comment type="line" pos:line="3785" pos:column="17">// changing the state of surfaceMeasure may change the underlying</comment>
		<comment type="line" pos:line="3786" pos:column="17">// state of surface. Therefore, any cached state is discarded before</comment>
		<comment type="line" pos:line="3787" pos:column="17">// using each surface.</comment>
		<expr_stmt><expr><call><name><name pos:line="3788" pos:column="17">surfaceMeasure</name><op:operator pos:line="3788" pos:column="31">-&gt;</op:operator><name pos:line="3788" pos:column="33">FlushCachedState</name></name><argument_list pos:line="3788" pos:column="49">()</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="3790" pos:column="17">// Copy this line and its styles from the document into local arrays</comment>
		<comment type="line" pos:line="3791" pos:column="17">// and determine the x position at which each character starts.</comment>
		<decl_stmt><decl><type><name pos:line="3792" pos:column="17">LineLayout</name></type> <name pos:line="3792" pos:column="28">ll</name><argument_list pos:line="3792" pos:column="30">(<argument><expr><lit:literal type="number" pos:line="3792" pos:column="31">8000</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="3793" pos:column="17">LayoutLine</name><argument_list pos:line="3793" pos:column="27">(<argument><expr><name pos:line="3793" pos:column="28">lineDoc</name></expr></argument>, <argument><expr><name pos:line="3793" pos:column="37">surfaceMeasure</name></expr></argument>, <argument><expr><name pos:line="3793" pos:column="53">vsPrint</name></expr></argument>, <argument><expr><op:operator pos:line="3793" pos:column="62">&amp;</op:operator><name pos:line="3793" pos:column="63">ll</name></expr></argument>, <argument><expr><name pos:line="3793" pos:column="67">widthPrint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="3795" pos:column="17">ll</name><op:operator pos:line="3795" pos:column="19">.</op:operator><name pos:line="3795" pos:column="20">containsCaret</name></name> <op:operator pos:line="3795" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="3795" pos:column="36">false</lit:literal></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="3797" pos:column="17">PRectangle</name></type> <name pos:line="3797" pos:column="28">rcLine</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="3798" pos:column="17">rcLine</name><op:operator pos:line="3798" pos:column="23">.</op:operator><name pos:line="3798" pos:column="24">left</name></name> <op:operator pos:line="3798" pos:column="29">=</op:operator> <name><name pos:line="3798" pos:column="31">pfr</name><op:operator pos:line="3798" pos:column="34">-&gt;</op:operator><name pos:line="3798" pos:column="36">rc</name><op:operator pos:line="3798" pos:column="38">.</op:operator><name pos:line="3798" pos:column="39">left</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3799" pos:column="17">rcLine</name><op:operator pos:line="3799" pos:column="23">.</op:operator><name pos:line="3799" pos:column="24">top</name></name> <op:operator pos:line="3799" pos:column="28">=</op:operator> <name pos:line="3799" pos:column="30">ypos</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3800" pos:column="17">rcLine</name><op:operator pos:line="3800" pos:column="23">.</op:operator><name pos:line="3800" pos:column="24">right</name></name> <op:operator pos:line="3800" pos:column="30">=</op:operator> <name><name pos:line="3800" pos:column="32">pfr</name><op:operator pos:line="3800" pos:column="35">-&gt;</op:operator><name pos:line="3800" pos:column="37">rc</name><op:operator pos:line="3800" pos:column="39">.</op:operator><name pos:line="3800" pos:column="40">right</name></name> <op:operator pos:line="3800" pos:column="46">-</op:operator> <lit:literal type="number" pos:line="3800" pos:column="48">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3801" pos:column="17">rcLine</name><op:operator pos:line="3801" pos:column="23">.</op:operator><name pos:line="3801" pos:column="24">bottom</name></name> <op:operator pos:line="3801" pos:column="31">=</op:operator> <name pos:line="3801" pos:column="33">ypos</name> <op:operator pos:line="3801" pos:column="38">+</op:operator> <name><name pos:line="3801" pos:column="40">vsPrint</name><op:operator pos:line="3801" pos:column="47">.</op:operator><name pos:line="3801" pos:column="48">lineHeight</name></name></expr>;</expr_stmt>

		<comment type="line" pos:line="3803" pos:column="17">// When document line is wrapped over multiple display lines, find where</comment>
		<comment type="line" pos:line="3804" pos:column="17">// to start printing from to ensure a particular position is on the first</comment>
		<comment type="line" pos:line="3805" pos:column="17">// line of the page.</comment>
		<if pos:line="3806" pos:column="17">if <condition pos:line="3806" pos:column="20">(<expr><name pos:line="3806" pos:column="21">visibleLine</name> <op:operator pos:line="3806" pos:column="33">==</op:operator> <lit:literal type="number" pos:line="3806" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="3806" pos:column="38"> <block pos:line="3806" pos:column="39">{
			<decl_stmt><decl><type><name pos:line="3807" pos:column="25">int</name></type> <name pos:line="3807" pos:column="29">startWithinLine</name> <init pos:line="3807" pos:column="45">= <expr><name pos:line="3807" pos:column="47">nPrintPos</name> <op:operator pos:line="3807" pos:column="57">-</op:operator> <call><name><name pos:line="3807" pos:column="59">pdoc</name><op:operator pos:line="3807" pos:column="63">-&gt;</op:operator><name pos:line="3807" pos:column="65">LineStart</name></name><argument_list pos:line="3807" pos:column="74">(<argument><expr><name pos:line="3807" pos:column="75">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="3808" pos:column="25">for (<init><decl><type><name pos:line="3808" pos:column="30">int</name></type> <name pos:line="3808" pos:column="34">iwl</name> <init pos:line="3808" pos:column="38">= <expr><lit:literal type="number" pos:line="3808" pos:column="40">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3808" pos:column="43">iwl</name> <op:operator pos:line="3808" pos:column="47">&lt;</op:operator> <name><name pos:line="3808" pos:column="49">ll</name><op:operator pos:line="3808" pos:column="51">.</op:operator><name pos:line="3808" pos:column="52">lines</name></name> <op:operator pos:line="3808" pos:column="58">-</op:operator> <lit:literal type="number" pos:line="3808" pos:column="60">1</lit:literal></expr>;</condition> <incr><expr><name pos:line="3808" pos:column="63">iwl</name><op:operator pos:line="3808" pos:column="66">++</op:operator></expr></incr>) <block pos:line="3808" pos:column="70">{
				<if pos:line="3809" pos:column="33">if <condition pos:line="3809" pos:column="36">(<expr><call><name><name pos:line="3809" pos:column="37">ll</name><op:operator pos:line="3809" pos:column="39">.</op:operator><name pos:line="3809" pos:column="40">LineStart</name></name><argument_list pos:line="3809" pos:column="49">(<argument><expr><name pos:line="3809" pos:column="50">iwl</name></expr></argument>)</argument_list></call> <op:operator pos:line="3809" pos:column="55">&lt;=</op:operator> <name pos:line="3809" pos:column="58">startWithinLine</name> <op:operator pos:line="3809" pos:column="74">&amp;&amp;</op:operator> <call><name><name pos:line="3809" pos:column="77">ll</name><op:operator pos:line="3809" pos:column="79">.</op:operator><name pos:line="3809" pos:column="80">LineStart</name></name><argument_list pos:line="3809" pos:column="89">(<argument><expr><name pos:line="3809" pos:column="90">iwl</name> <op:operator pos:line="3809" pos:column="94">+</op:operator> <lit:literal type="number" pos:line="3809" pos:column="96">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="3809" pos:column="99">&gt;=</op:operator> <name pos:line="3809" pos:column="102">startWithinLine</name></expr>)</condition><then pos:line="3809" pos:column="118"> <block pos:line="3809" pos:column="119">{
					<expr_stmt><expr><name pos:line="3810" pos:column="41">visibleLine</name> <op:operator pos:line="3810" pos:column="53">=</op:operator> <op:operator pos:line="3810" pos:column="55">-</op:operator><name pos:line="3810" pos:column="56">iwl</name></expr>;</expr_stmt>
				}</block></then></if>
			}</block></for>

			<if pos:line="3814" pos:column="25">if <condition pos:line="3814" pos:column="28">(<expr><name><name pos:line="3814" pos:column="29">ll</name><op:operator pos:line="3814" pos:column="31">.</op:operator><name pos:line="3814" pos:column="32">lines</name></name> <op:operator pos:line="3814" pos:column="38">&gt;</op:operator> <lit:literal type="number" pos:line="3814" pos:column="40">1</lit:literal> <op:operator pos:line="3814" pos:column="42">&amp;&amp;</op:operator> <name pos:line="3814" pos:column="45">startWithinLine</name> <op:operator pos:line="3814" pos:column="61">&gt;=</op:operator> <call><name><name pos:line="3814" pos:column="64">ll</name><op:operator pos:line="3814" pos:column="66">.</op:operator><name pos:line="3814" pos:column="67">LineStart</name></name><argument_list pos:line="3814" pos:column="76">(<argument><expr><name><name pos:line="3814" pos:column="77">ll</name><op:operator pos:line="3814" pos:column="79">.</op:operator><name pos:line="3814" pos:column="80">lines</name></name> <op:operator pos:line="3814" pos:column="86">-</op:operator> <lit:literal type="number" pos:line="3814" pos:column="88">1</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3814" pos:column="91"> <block pos:line="3814" pos:column="92">{
				<expr_stmt><expr><name pos:line="3815" pos:column="33">visibleLine</name> <op:operator pos:line="3815" pos:column="45">=</op:operator> <op:operator pos:line="3815" pos:column="47">-</op:operator><op:operator pos:line="3815" pos:column="48">(</op:operator><name><name pos:line="3815" pos:column="49">ll</name><op:operator pos:line="3815" pos:column="51">.</op:operator><name pos:line="3815" pos:column="52">lines</name></name> <op:operator pos:line="3815" pos:column="58">-</op:operator> <lit:literal type="number" pos:line="3815" pos:column="60">1</lit:literal><op:operator pos:line="3815" pos:column="61">)</op:operator></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>

		<if pos:line="3819" pos:column="17">if <condition pos:line="3819" pos:column="20">(<expr><name pos:line="3819" pos:column="21">draw</name> <op:operator pos:line="3819" pos:column="26">&amp;&amp;</op:operator> <name pos:line="3819" pos:column="29">lineNumberWidth</name> <op:operator pos:line="3819" pos:column="45">&amp;&amp;</op:operator>
		        <op:operator pos:line="3820" pos:column="25">(</op:operator><name pos:line="3820" pos:column="26">ypos</name> <op:operator pos:line="3820" pos:column="31">+</op:operator> <name><name pos:line="3820" pos:column="33">vsPrint</name><op:operator pos:line="3820" pos:column="40">.</op:operator><name pos:line="3820" pos:column="41">lineHeight</name></name> <op:operator pos:line="3820" pos:column="52">&lt;=</op:operator> <name><name pos:line="3820" pos:column="55">pfr</name><op:operator pos:line="3820" pos:column="58">-&gt;</op:operator><name pos:line="3820" pos:column="60">rc</name><op:operator pos:line="3820" pos:column="62">.</op:operator><name pos:line="3820" pos:column="63">bottom</name></name><op:operator pos:line="3820" pos:column="69">)</op:operator> <op:operator pos:line="3820" pos:column="71">&amp;&amp;</op:operator>
		        <op:operator pos:line="3821" pos:column="25">(</op:operator><name pos:line="3821" pos:column="26">visibleLine</name> <op:operator pos:line="3821" pos:column="38">&gt;=</op:operator> <lit:literal type="number" pos:line="3821" pos:column="41">0</lit:literal><op:operator pos:line="3821" pos:column="42">)</op:operator></expr>)</condition><then pos:line="3821" pos:column="44"> <block pos:line="3821" pos:column="45">{
			<decl_stmt><decl><type><name pos:line="3822" pos:column="25">char</name></type> <name><name pos:line="3822" pos:column="30">number</name><index pos:line="3822" pos:column="36">[<expr><lit:literal type="number" pos:line="3822" pos:column="37">100</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="3823" pos:column="25">sprintf</name><argument_list pos:line="3823" pos:column="32">(<argument><expr><name pos:line="3823" pos:column="33">number</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="3823" pos:column="41">"%d"</lit:literal> <name pos:line="3823" pos:column="46">lineNumberPrintSpace</name></expr></argument>, <argument><expr><name pos:line="3823" pos:column="68">lineDoc</name> <op:operator pos:line="3823" pos:column="76">+</op:operator> <lit:literal type="number" pos:line="3823" pos:column="78">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="3824" pos:column="25">PRectangle</name></type> <name pos:line="3824" pos:column="36">rcNumber</name> <init pos:line="3824" pos:column="45">= <expr><name pos:line="3824" pos:column="47">rcLine</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="3825" pos:column="25">rcNumber</name><op:operator pos:line="3825" pos:column="33">.</op:operator><name pos:line="3825" pos:column="34">right</name></name> <op:operator pos:line="3825" pos:column="40">=</op:operator> <name><name pos:line="3825" pos:column="42">rcNumber</name><op:operator pos:line="3825" pos:column="50">.</op:operator><name pos:line="3825" pos:column="51">left</name></name> <op:operator pos:line="3825" pos:column="56">+</op:operator> <name pos:line="3825" pos:column="58">lineNumberWidth</name></expr>;</expr_stmt>
			<comment type="line" pos:line="3826" pos:column="25">// Right justify</comment>
			<expr_stmt><expr><name><name pos:line="3827" pos:column="25">rcNumber</name><op:operator pos:line="3827" pos:column="33">.</op:operator><name pos:line="3827" pos:column="34">left</name></name> <op:operator pos:line="3827" pos:column="39">=</op:operator> <name><name pos:line="3827" pos:column="41">rcNumber</name><op:operator pos:line="3827" pos:column="49">.</op:operator><name pos:line="3827" pos:column="50">right</name></name> <op:operator pos:line="3827" pos:column="56">-</op:operator> <call><name><name pos:line="3827" pos:column="58">surfaceMeasure</name><op:operator pos:line="3827" pos:column="72">-&gt;</op:operator><name pos:line="3827" pos:column="74">WidthText</name></name><argument_list pos:line="3827" pos:column="83">(
			            <argument><expr><name><name pos:line="3828" pos:column="37">vsPrint</name><op:operator pos:line="3828" pos:column="44">.</op:operator><name pos:line="3828" pos:column="45">styles</name><index pos:line="3828" pos:column="51">[<expr><name pos:line="3828" pos:column="52">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="3828" pos:column="69">.</op:operator><name pos:line="3828" pos:column="70">font</name></expr></argument>, <argument><expr><name pos:line="3828" pos:column="76">number</name></expr></argument>, <argument><expr><call><name pos:line="3828" pos:column="84">istrlen</name><argument_list pos:line="3828" pos:column="91">(<argument><expr><name pos:line="3828" pos:column="92">number</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="3829" pos:column="25">surface</name><op:operator pos:line="3829" pos:column="32">-&gt;</op:operator><name pos:line="3829" pos:column="34">FlushCachedState</name></name><argument_list pos:line="3829" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="3830" pos:column="25">surface</name><op:operator pos:line="3830" pos:column="32">-&gt;</op:operator><name pos:line="3830" pos:column="34">DrawTextNoClip</name></name><argument_list pos:line="3830" pos:column="48">(<argument><expr><name pos:line="3830" pos:column="49">rcNumber</name></expr></argument>, <argument><expr><name><name pos:line="3830" pos:column="59">vsPrint</name><op:operator pos:line="3830" pos:column="66">.</op:operator><name pos:line="3830" pos:column="67">styles</name><index pos:line="3830" pos:column="73">[<expr><name pos:line="3830" pos:column="74">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="3830" pos:column="91">.</op:operator><name pos:line="3830" pos:column="92">font</name></expr></argument>,
			        <argument><expr><name pos:line="3831" pos:column="33">ypos</name> <op:operator pos:line="3831" pos:column="38">+</op:operator> <name><name pos:line="3831" pos:column="40">vsPrint</name><op:operator pos:line="3831" pos:column="47">.</op:operator><name pos:line="3831" pos:column="48">maxAscent</name></name></expr></argument>, <argument><expr><name pos:line="3831" pos:column="59">number</name></expr></argument>, <argument><expr><call><name pos:line="3831" pos:column="67">istrlen</name><argument_list pos:line="3831" pos:column="74">(<argument><expr><name pos:line="3831" pos:column="75">number</name></expr></argument>)</argument_list></call></expr></argument>,
			        <argument><expr><name><name pos:line="3832" pos:column="33">vsPrint</name><op:operator pos:line="3832" pos:column="40">.</op:operator><name pos:line="3832" pos:column="41">styles</name><index pos:line="3832" pos:column="47">[<expr><name pos:line="3832" pos:column="48">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="3832" pos:column="65">.</op:operator><name><name pos:line="3832" pos:column="66">fore</name><op:operator pos:line="3832" pos:column="70">.</op:operator><name pos:line="3832" pos:column="71">allocated</name></name></expr></argument>,
			        <argument><expr><name><name pos:line="3833" pos:column="33">vsPrint</name><op:operator pos:line="3833" pos:column="40">.</op:operator><name pos:line="3833" pos:column="41">styles</name><index pos:line="3833" pos:column="47">[<expr><name pos:line="3833" pos:column="48">STYLE_LINENUMBER</name></expr>]</index></name><op:operator pos:line="3833" pos:column="65">.</op:operator><name><name pos:line="3833" pos:column="66">back</name><op:operator pos:line="3833" pos:column="70">.</op:operator><name pos:line="3833" pos:column="71">allocated</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<comment type="line" pos:line="3836" pos:column="17">// Draw the line</comment>
		<expr_stmt><expr><call><name><name pos:line="3837" pos:column="17">surface</name><op:operator pos:line="3837" pos:column="24">-&gt;</op:operator><name pos:line="3837" pos:column="26">FlushCachedState</name></name><argument_list pos:line="3837" pos:column="42">()</argument_list></call></expr>;</expr_stmt>

		<for pos:line="3839" pos:column="17">for (<init><decl><type><name pos:line="3839" pos:column="22">int</name></type> <name pos:line="3839" pos:column="26">iwl</name> <init pos:line="3839" pos:column="30">= <expr><lit:literal type="number" pos:line="3839" pos:column="32">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3839" pos:column="35">iwl</name> <op:operator pos:line="3839" pos:column="39">&lt;</op:operator> <name><name pos:line="3839" pos:column="41">ll</name><op:operator pos:line="3839" pos:column="43">.</op:operator><name pos:line="3839" pos:column="44">lines</name></name></expr>;</condition> <incr><expr><name pos:line="3839" pos:column="51">iwl</name><op:operator pos:line="3839" pos:column="54">++</op:operator></expr></incr>) <block pos:line="3839" pos:column="58">{
			<if pos:line="3840" pos:column="25">if <condition pos:line="3840" pos:column="28">(<expr><name pos:line="3840" pos:column="29">ypos</name> <op:operator pos:line="3840" pos:column="34">+</op:operator> <name><name pos:line="3840" pos:column="36">vsPrint</name><op:operator pos:line="3840" pos:column="43">.</op:operator><name pos:line="3840" pos:column="44">lineHeight</name></name> <op:operator pos:line="3840" pos:column="55">&lt;=</op:operator> <name><name pos:line="3840" pos:column="58">pfr</name><op:operator pos:line="3840" pos:column="61">-&gt;</op:operator><name pos:line="3840" pos:column="63">rc</name><op:operator pos:line="3840" pos:column="65">.</op:operator><name pos:line="3840" pos:column="66">bottom</name></name></expr>)</condition><then pos:line="3840" pos:column="73"> <block pos:line="3840" pos:column="74">{
				<if pos:line="3841" pos:column="33">if <condition pos:line="3841" pos:column="36">(<expr><name pos:line="3841" pos:column="37">visibleLine</name> <op:operator pos:line="3841" pos:column="49">&gt;=</op:operator> <lit:literal type="number" pos:line="3841" pos:column="52">0</lit:literal></expr>)</condition><then pos:line="3841" pos:column="54"> <block pos:line="3841" pos:column="55">{
					<if pos:line="3842" pos:column="41">if <condition pos:line="3842" pos:column="44">(<expr><name pos:line="3842" pos:column="45">draw</name></expr>)</condition><then pos:line="3842" pos:column="50"> <block pos:line="3842" pos:column="51">{
						<expr_stmt><expr><name><name pos:line="3843" pos:column="49">rcLine</name><op:operator pos:line="3843" pos:column="55">.</op:operator><name pos:line="3843" pos:column="56">top</name></name> <op:operator pos:line="3843" pos:column="60">=</op:operator> <name pos:line="3843" pos:column="62">ypos</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="3844" pos:column="49">rcLine</name><op:operator pos:line="3844" pos:column="55">.</op:operator><name pos:line="3844" pos:column="56">bottom</name></name> <op:operator pos:line="3844" pos:column="63">=</op:operator> <name pos:line="3844" pos:column="65">ypos</name> <op:operator pos:line="3844" pos:column="70">+</op:operator> <name><name pos:line="3844" pos:column="72">vsPrint</name><op:operator pos:line="3844" pos:column="79">.</op:operator><name pos:line="3844" pos:column="80">lineHeight</name></name></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="3845" pos:column="49">DrawLine</name><argument_list pos:line="3845" pos:column="57">(<argument><expr><name pos:line="3845" pos:column="58">surface</name></expr></argument>, <argument><expr><name pos:line="3845" pos:column="67">vsPrint</name></expr></argument>, <argument><expr><name pos:line="3845" pos:column="76">lineDoc</name></expr></argument>, <argument><expr><name pos:line="3845" pos:column="85">visibleLine</name></expr></argument>, <argument><expr><name pos:line="3845" pos:column="98">xStart</name></expr></argument>, <argument><expr><name pos:line="3845" pos:column="106">rcLine</name></expr></argument>, <argument><expr><op:operator pos:line="3845" pos:column="114">&amp;</op:operator><name pos:line="3845" pos:column="115">ll</name></expr></argument>, <argument><expr><name pos:line="3845" pos:column="119">iwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<expr_stmt><expr><name pos:line="3847" pos:column="41">ypos</name> <op:operator pos:line="3847" pos:column="46">+=</op:operator> <name><name pos:line="3847" pos:column="49">vsPrint</name><op:operator pos:line="3847" pos:column="56">.</op:operator><name pos:line="3847" pos:column="57">lineHeight</name></name></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><name pos:line="3849" pos:column="33">visibleLine</name><op:operator pos:line="3849" pos:column="44">++</op:operator></expr>;</expr_stmt>
				<if pos:line="3850" pos:column="33">if <condition pos:line="3850" pos:column="36">(<expr><name pos:line="3850" pos:column="37">iwl</name> <op:operator pos:line="3850" pos:column="41">==</op:operator> <name><name pos:line="3850" pos:column="44">ll</name><op:operator pos:line="3850" pos:column="46">.</op:operator><name pos:line="3850" pos:column="47">lines</name></name> <op:operator pos:line="3850" pos:column="53">-</op:operator> <lit:literal type="number" pos:line="3850" pos:column="55">1</lit:literal></expr>)</condition><then pos:line="3850" pos:column="57">
					<expr_stmt><expr><name pos:line="3851" pos:column="41">nPrintPos</name> <op:operator pos:line="3851" pos:column="51">=</op:operator> <call><name><name pos:line="3851" pos:column="53">pdoc</name><op:operator pos:line="3851" pos:column="57">-&gt;</op:operator><name pos:line="3851" pos:column="59">LineStart</name></name><argument_list pos:line="3851" pos:column="68">(<argument><expr><name pos:line="3851" pos:column="69">lineDoc</name> <op:operator pos:line="3851" pos:column="77">+</op:operator> <lit:literal type="number" pos:line="3851" pos:column="79">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="3852" pos:column="33">else
					<expr_stmt><expr><name pos:line="3853" pos:column="41">nPrintPos</name> <op:operator pos:line="3853" pos:column="51">+=</op:operator> <call><name><name pos:line="3853" pos:column="54">ll</name><op:operator pos:line="3853" pos:column="56">.</op:operator><name pos:line="3853" pos:column="57">LineStart</name></name><argument_list pos:line="3853" pos:column="66">(<argument><expr><name pos:line="3853" pos:column="67">iwl</name> <op:operator pos:line="3853" pos:column="71">+</op:operator> <lit:literal type="number" pos:line="3853" pos:column="73">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="3853" pos:column="76">-</op:operator> <call><name><name pos:line="3853" pos:column="78">ll</name><op:operator pos:line="3853" pos:column="80">.</op:operator><name pos:line="3853" pos:column="81">LineStart</name></name><argument_list pos:line="3853" pos:column="90">(<argument><expr><name pos:line="3853" pos:column="91">iwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then></if>
		}</block></for>

		<expr_stmt><expr><op:operator pos:line="3857" pos:column="17">++</op:operator><name pos:line="3857" pos:column="19">lineDoc</name></expr>;</expr_stmt>
	}</block></while>

	<comment type="line" pos:line="3860" pos:column="9">// Clear cache so measurements are not used for screen</comment>
	<expr_stmt><expr><call><name><name pos:line="3861" pos:column="9">posCache</name><op:operator pos:line="3861" pos:column="17">.</op:operator><name pos:line="3861" pos:column="18">Clear</name></name><argument_list pos:line="3861" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<return pos:line="3863" pos:column="9">return <expr><name pos:line="3863" pos:column="16">nPrintPos</name></expr>;</return>
}</block></function>

<function><type><name pos:line="3866" pos:column="1">int</name></type> <name><name pos:line="3866" pos:column="5">Editor</name><op:operator pos:line="3866" pos:column="11">::</op:operator><name pos:line="3866" pos:column="13">TextWidth</name></name><parameter_list pos:line="3866" pos:column="22">(<param><decl><type><name pos:line="3866" pos:column="23">int</name></type> <name pos:line="3866" pos:column="27">style</name></decl></param>, <param><decl><type><specifier pos:line="3866" pos:column="34">const</specifier> <name pos:line="3866" pos:column="40">char</name> <type:modifier pos:line="3866" pos:column="45">*</type:modifier></type><name pos:line="3866" pos:column="46">text</name></decl></param>)</parameter_list> <block pos:line="3866" pos:column="52">{
	<expr_stmt><expr><call><name pos:line="3867" pos:column="9">RefreshStyleData</name><argument_list pos:line="3867" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<function_decl><type><name pos:line="3868" pos:column="9">AutoSurface</name></type> <name pos:line="3868" pos:column="21">surface</name><parameter_list pos:line="3868" pos:column="28">(<param><decl><type><name pos:line="3868" pos:column="29">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<if pos:line="3869" pos:column="9">if <condition pos:line="3869" pos:column="12">(<expr><name pos:line="3869" pos:column="13">surface</name></expr>)</condition><then pos:line="3869" pos:column="21"> <block pos:line="3869" pos:column="22">{
		<return pos:line="3870" pos:column="17">return <expr><call><name><name pos:line="3870" pos:column="24">surface</name><op:operator pos:line="3870" pos:column="31">-&gt;</op:operator><name pos:line="3870" pos:column="33">WidthText</name></name><argument_list pos:line="3870" pos:column="42">(<argument><expr><name><name pos:line="3870" pos:column="43">vs</name><op:operator pos:line="3870" pos:column="45">.</op:operator><name pos:line="3870" pos:column="46">styles</name><index pos:line="3870" pos:column="52">[<expr><name pos:line="3870" pos:column="53">style</name></expr>]</index></name><op:operator pos:line="3870" pos:column="59">.</op:operator><name pos:line="3870" pos:column="60">font</name></expr></argument>, <argument><expr><name pos:line="3870" pos:column="66">text</name></expr></argument>, <argument><expr><call><name pos:line="3870" pos:column="72">istrlen</name><argument_list pos:line="3870" pos:column="79">(<argument><expr><name pos:line="3870" pos:column="80">text</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then> <else pos:line="3871" pos:column="11">else <block pos:line="3871" pos:column="16">{
		<return pos:line="3872" pos:column="17">return <expr><lit:literal type="number" pos:line="3872" pos:column="24">1</lit:literal></expr>;</return>
	}</block></else></if>
}</block></function>

<comment type="line" pos:line="3876" pos:column="1">// Empty method is overridden on GTK+ to show / hide scrollbars</comment>
<function><type><name pos:line="3877" pos:column="1">void</name></type> <name><name pos:line="3877" pos:column="6">Editor</name><op:operator pos:line="3877" pos:column="12">::</op:operator><name pos:line="3877" pos:column="14">ReconfigureScrollBars</name></name><parameter_list pos:line="3877" pos:column="35">()</parameter_list> <block pos:line="3877" pos:column="38">{}</block></function>

<function><type><name pos:line="3879" pos:column="1">void</name></type> <name><name pos:line="3879" pos:column="6">Editor</name><op:operator pos:line="3879" pos:column="12">::</op:operator><name pos:line="3879" pos:column="14">SetScrollBars</name></name><parameter_list pos:line="3879" pos:column="27">()</parameter_list> <block pos:line="3879" pos:column="30">{
	<expr_stmt><expr><call><name pos:line="3880" pos:column="9">RefreshStyleData</name><argument_list pos:line="3880" pos:column="25">()</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="3882" pos:column="9">int</name></type> <name pos:line="3882" pos:column="13">nMax</name> <init pos:line="3882" pos:column="18">= <expr><call><name pos:line="3882" pos:column="20">MaxScrollPos</name><argument_list pos:line="3882" pos:column="32">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3883" pos:column="9">int</name></type> <name pos:line="3883" pos:column="13">nPage</name> <init pos:line="3883" pos:column="19">= <expr><call><name pos:line="3883" pos:column="21">LinesOnScreen</name><argument_list pos:line="3883" pos:column="34">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="3884" pos:column="9">bool</name></type> <name pos:line="3884" pos:column="14">modified</name> <init pos:line="3884" pos:column="23">= <expr><call><name pos:line="3884" pos:column="25">ModifyScrollBars</name><argument_list pos:line="3884" pos:column="41">(<argument><expr><name pos:line="3884" pos:column="42">nMax</name> <op:operator pos:line="3884" pos:column="47">+</op:operator> <name pos:line="3884" pos:column="49">nPage</name> <op:operator pos:line="3884" pos:column="55">-</op:operator> <lit:literal type="number" pos:line="3884" pos:column="57">1</lit:literal></expr></argument>, <argument><expr><name pos:line="3884" pos:column="60">nPage</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3885" pos:column="9">if <condition pos:line="3885" pos:column="12">(<expr><name pos:line="3885" pos:column="13">modified</name></expr>)</condition><then pos:line="3885" pos:column="22"> <block pos:line="3885" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="3886" pos:column="17">DwellEnd</name><argument_list pos:line="3886" pos:column="25">(<argument><expr><lit:literal type="boolean" pos:line="3886" pos:column="26">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="3889" pos:column="9">// TODO: ensure always showing as many lines as possible</comment>
	<comment type="line" pos:line="3890" pos:column="9">// May not be, if, for example, window made larger</comment>
	<if pos:line="3891" pos:column="9">if <condition pos:line="3891" pos:column="12">(<expr><name pos:line="3891" pos:column="13">topLine</name> <op:operator pos:line="3891" pos:column="21">&gt;</op:operator> <call><name pos:line="3891" pos:column="23">MaxScrollPos</name><argument_list pos:line="3891" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="3891" pos:column="38"> <block pos:line="3891" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="3892" pos:column="17">SetTopLine</name><argument_list pos:line="3892" pos:column="27">(<argument><expr><call><name><name pos:line="3892" pos:column="28">Platform</name><op:operator pos:line="3892" pos:column="36">::</op:operator><name pos:line="3892" pos:column="38">Clamp</name></name><argument_list pos:line="3892" pos:column="43">(<argument><expr><name pos:line="3892" pos:column="44">topLine</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3892" pos:column="53">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="3892" pos:column="56">MaxScrollPos</name><argument_list pos:line="3892" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="3893" pos:column="17">SetVerticalScrollPos</name><argument_list pos:line="3893" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="3894" pos:column="17">Redraw</name><argument_list pos:line="3894" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="3896" pos:column="9">if <condition pos:line="3896" pos:column="12">(<expr><name pos:line="3896" pos:column="13">modified</name></expr>)</condition><then pos:line="3896" pos:column="22"> <block pos:line="3896" pos:column="23">{
		<if pos:line="3897" pos:column="17">if <condition pos:line="3897" pos:column="20">(<expr><op:operator pos:line="3897" pos:column="21">!</op:operator><call><name pos:line="3897" pos:column="22">AbandonPaint</name><argument_list pos:line="3897" pos:column="34">()</argument_list></call></expr>)</condition><then pos:line="3897" pos:column="37">
			<expr_stmt><expr><call><name pos:line="3898" pos:column="25">Redraw</name><argument_list pos:line="3898" pos:column="31">()</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>
	<comment type="line" pos:line="3900" pos:column="9">//Platform::DebugPrintf("end max = %d page = %d\n", nMax, nPage);</comment>
}</block></function>

<function><type><name pos:line="3903" pos:column="1">void</name></type> <name><name pos:line="3903" pos:column="6">Editor</name><op:operator pos:line="3903" pos:column="12">::</op:operator><name pos:line="3903" pos:column="14">ChangeSize</name></name><parameter_list pos:line="3903" pos:column="24">()</parameter_list> <block pos:line="3903" pos:column="27">{
	<expr_stmt><expr><call><name pos:line="3904" pos:column="9">DropGraphics</name><argument_list pos:line="3904" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3905" pos:column="9">SetScrollBars</name><argument_list pos:line="3905" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3906" pos:column="9">if <condition pos:line="3906" pos:column="12">(<expr><name pos:line="3906" pos:column="13">wrapState</name> <op:operator pos:line="3906" pos:column="23">!=</op:operator> <name pos:line="3906" pos:column="26">eWrapNone</name></expr>)</condition><then pos:line="3906" pos:column="36"> <block pos:line="3906" pos:column="37">{
		<decl_stmt><decl><type><name pos:line="3907" pos:column="17">PRectangle</name></type> <name pos:line="3907" pos:column="28">rcTextArea</name> <init pos:line="3907" pos:column="39">= <expr><call><name pos:line="3907" pos:column="41">GetClientRectangle</name><argument_list pos:line="3907" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="3908" pos:column="17">rcTextArea</name><op:operator pos:line="3908" pos:column="27">.</op:operator><name pos:line="3908" pos:column="28">left</name></name> <op:operator pos:line="3908" pos:column="33">=</op:operator> <name><name pos:line="3908" pos:column="35">vs</name><op:operator pos:line="3908" pos:column="37">.</op:operator><name pos:line="3908" pos:column="38">fixedColumnWidth</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="3909" pos:column="17">rcTextArea</name><op:operator pos:line="3909" pos:column="27">.</op:operator><name pos:line="3909" pos:column="28">right</name></name> <op:operator pos:line="3909" pos:column="34">-=</op:operator> <name><name pos:line="3909" pos:column="37">vs</name><op:operator pos:line="3909" pos:column="39">.</op:operator><name pos:line="3909" pos:column="40">rightMarginWidth</name></name></expr>;</expr_stmt>
		<if pos:line="3910" pos:column="17">if <condition pos:line="3910" pos:column="20">(<expr><name pos:line="3910" pos:column="21">wrapWidth</name> <op:operator pos:line="3910" pos:column="31">!=</op:operator> <call><name><name pos:line="3910" pos:column="34">rcTextArea</name><op:operator pos:line="3910" pos:column="44">.</op:operator><name pos:line="3910" pos:column="45">Width</name></name><argument_list pos:line="3910" pos:column="50">()</argument_list></call></expr>)</condition><then pos:line="3910" pos:column="53"> <block pos:line="3910" pos:column="54">{
			<expr_stmt><expr><call><name pos:line="3911" pos:column="25">NeedWrapping</name><argument_list pos:line="3911" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="3912" pos:column="25">Redraw</name><argument_list pos:line="3912" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="3917" pos:column="1">int</name></type> <name><name pos:line="3917" pos:column="5">Editor</name><op:operator pos:line="3917" pos:column="11">::</op:operator><name pos:line="3917" pos:column="13">InsertSpace</name></name><parameter_list pos:line="3917" pos:column="24">(<param><decl><type><name pos:line="3917" pos:column="25">int</name></type> <name pos:line="3917" pos:column="29">position</name></decl></param>, <param><decl><type><name pos:line="3917" pos:column="39">unsigned</name> <name pos:line="3917" pos:column="48">int</name></type> <name pos:line="3917" pos:column="52">spaces</name></decl></param>)</parameter_list> <block pos:line="3917" pos:column="60">{
	<if pos:line="3918" pos:column="9">if <condition pos:line="3918" pos:column="12">(<expr><name pos:line="3918" pos:column="13">spaces</name> <op:operator pos:line="3918" pos:column="20">&gt;</op:operator> <lit:literal type="number" pos:line="3918" pos:column="22">0</lit:literal></expr>)</condition><then pos:line="3918" pos:column="24"> <block pos:line="3918" pos:column="25">{
		<decl_stmt><decl><type><name><name pos:line="3919" pos:column="17">std</name><op:operator pos:line="3919" pos:column="20">::</op:operator><name pos:line="3919" pos:column="22">string</name></name></type> <name pos:line="3919" pos:column="29">spaceText</name><argument_list pos:line="3919" pos:column="38">(<argument><expr><name pos:line="3919" pos:column="39">spaces</name></expr></argument>, <argument><expr><lit:literal type="char" pos:line="3919" pos:column="47">' '</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="3920" pos:column="17">pdoc</name><op:operator pos:line="3920" pos:column="21">-&gt;</op:operator><name pos:line="3920" pos:column="23">InsertString</name></name><argument_list pos:line="3920" pos:column="35">(<argument><expr><name pos:line="3920" pos:column="36">position</name></expr></argument>, <argument><expr><call><name><name pos:line="3920" pos:column="46">spaceText</name><op:operator pos:line="3920" pos:column="55">.</op:operator><name pos:line="3920" pos:column="56">c_str</name></name><argument_list pos:line="3920" pos:column="61">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3920" pos:column="65">spaces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="3921" pos:column="17">position</name> <op:operator pos:line="3921" pos:column="26">+=</op:operator> <name pos:line="3921" pos:column="29">spaces</name></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="3923" pos:column="9">return <expr><name pos:line="3923" pos:column="16">position</name></expr>;</return>
}</block></function>

<function><type><name pos:line="3926" pos:column="1">void</name></type> <name><name pos:line="3926" pos:column="6">Editor</name><op:operator pos:line="3926" pos:column="12">::</op:operator><name pos:line="3926" pos:column="14">AddChar</name></name><parameter_list pos:line="3926" pos:column="21">(<param><decl><type><name pos:line="3926" pos:column="22">char</name></type> <name pos:line="3926" pos:column="27">ch</name></decl></param>)</parameter_list> <block pos:line="3926" pos:column="31">{
	<decl_stmt><decl><type><name pos:line="3927" pos:column="9">char</name></type> <name><name pos:line="3927" pos:column="14">s</name><index pos:line="3927" pos:column="15">[<expr><lit:literal type="number" pos:line="3927" pos:column="16">2</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="3928" pos:column="9">s</name><index pos:line="3928" pos:column="10">[<expr><lit:literal type="number" pos:line="3928" pos:column="11">0</lit:literal></expr>]</index></name> <op:operator pos:line="3928" pos:column="14">=</op:operator> <name pos:line="3928" pos:column="16">ch</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="3929" pos:column="9">s</name><index pos:line="3929" pos:column="10">[<expr><lit:literal type="number" pos:line="3929" pos:column="11">1</lit:literal></expr>]</index></name> <op:operator pos:line="3929" pos:column="14">=</op:operator> <lit:literal type="char" pos:line="3929" pos:column="16">'\0'</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="3930" pos:column="9">AddCharUTF</name><argument_list pos:line="3930" pos:column="19">(<argument><expr><name pos:line="3930" pos:column="20">s</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3930" pos:column="23">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="3933" pos:column="1">void</name></type> <name><name pos:line="3933" pos:column="6">Editor</name><op:operator pos:line="3933" pos:column="12">::</op:operator><name pos:line="3933" pos:column="14">FilterSelections</name></name><parameter_list pos:line="3933" pos:column="30">()</parameter_list> <block pos:line="3933" pos:column="33">{
	<if pos:line="3934" pos:column="9">if <condition pos:line="3934" pos:column="12">(<expr><op:operator pos:line="3934" pos:column="13">!</op:operator><name pos:line="3934" pos:column="14">additionalSelectionTyping</name> <op:operator pos:line="3934" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="3934" pos:column="43">(</op:operator><call><name><name pos:line="3934" pos:column="44">sel</name><op:operator pos:line="3934" pos:column="47">.</op:operator><name pos:line="3934" pos:column="48">Count</name></name><argument_list pos:line="3934" pos:column="53">()</argument_list></call> <op:operator pos:line="3934" pos:column="56">&gt;</op:operator> <lit:literal type="number" pos:line="3934" pos:column="58">1</lit:literal><op:operator pos:line="3934" pos:column="59">)</op:operator></expr>)</condition><then pos:line="3934" pos:column="61"> <block pos:line="3934" pos:column="62">{
		<decl_stmt><decl><type><name pos:line="3935" pos:column="17">SelectionRange</name></type> <name pos:line="3935" pos:column="32">rangeOnly</name> <init pos:line="3935" pos:column="42">= <expr><call><name><name pos:line="3935" pos:column="44">sel</name><op:operator pos:line="3935" pos:column="47">.</op:operator><name pos:line="3935" pos:column="48">RangeMain</name></name><argument_list pos:line="3935" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="3936" pos:column="17">InvalidateSelection</name><argument_list pos:line="3936" pos:column="36">(<argument><expr><name pos:line="3936" pos:column="37">rangeOnly</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="3936" pos:column="48">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="3937" pos:column="17">sel</name><op:operator pos:line="3937" pos:column="20">.</op:operator><name pos:line="3937" pos:column="21">SetSelection</name></name><argument_list pos:line="3937" pos:column="33">(<argument><expr><name pos:line="3937" pos:column="34">rangeOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><specifier pos:line="3941" pos:column="1">static</specifier> <name pos:line="3941" pos:column="8">bool</name></type> <name pos:line="3941" pos:column="13">cmpSelPtrs</name><parameter_list pos:line="3941" pos:column="23">(<param><decl><type><specifier pos:line="3941" pos:column="24">const</specifier> <name pos:line="3941" pos:column="30">SelectionRange</name> <type:modifier pos:line="3941" pos:column="45">*</type:modifier></type><name pos:line="3941" pos:column="46">a</name></decl></param>, <param><decl><type><specifier pos:line="3941" pos:column="49">const</specifier> <name pos:line="3941" pos:column="55">SelectionRange</name> <type:modifier pos:line="3941" pos:column="70">*</type:modifier></type><name pos:line="3941" pos:column="71">b</name></decl></param>)</parameter_list> <block pos:line="3941" pos:column="74">{
	<return pos:line="3942" pos:column="9">return <expr><op:operator pos:line="3942" pos:column="16">*</op:operator><name pos:line="3942" pos:column="17">a</name> <op:operator pos:line="3942" pos:column="19">&lt;</op:operator> <op:operator pos:line="3942" pos:column="21">*</op:operator><name pos:line="3942" pos:column="22">b</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="3945" pos:column="1">// AddCharUTF inserts an array of bytes which may or may not be in UTF-8.</comment>
<function><type><name pos:line="3946" pos:column="1">void</name></type> <name><name pos:line="3946" pos:column="6">Editor</name><op:operator pos:line="3946" pos:column="12">::</op:operator><name pos:line="3946" pos:column="14">AddCharUTF</name></name><parameter_list pos:line="3946" pos:column="24">(<param><decl><type><name pos:line="3946" pos:column="25">char</name> <type:modifier pos:line="3946" pos:column="30">*</type:modifier></type><name pos:line="3946" pos:column="31">s</name></decl></param>, <param><decl><type><name pos:line="3946" pos:column="34">unsigned</name> <name pos:line="3946" pos:column="43">int</name></type> <name pos:line="3946" pos:column="47">len</name></decl></param>, <param><decl><type><name pos:line="3946" pos:column="52">bool</name></type> <name pos:line="3946" pos:column="57">treatAsDBCS</name></decl></param>)</parameter_list> <block pos:line="3946" pos:column="70">{
	<expr_stmt><expr><call><name pos:line="3947" pos:column="9">FilterSelections</name><argument_list pos:line="3947" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<block pos:line="3948" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3949" pos:column="17">UndoGroup</name></type> <name pos:line="3949" pos:column="27">ug</name><argument_list pos:line="3949" pos:column="29">(<argument><expr><name pos:line="3949" pos:column="30">pdoc</name></expr></argument>, <argument><expr><op:operator pos:line="3949" pos:column="36">(</op:operator><call><name><name pos:line="3949" pos:column="37">sel</name><op:operator pos:line="3949" pos:column="40">.</op:operator><name pos:line="3949" pos:column="41">Count</name></name><argument_list pos:line="3949" pos:column="46">()</argument_list></call> <op:operator pos:line="3949" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="3949" pos:column="51">1</lit:literal><op:operator pos:line="3949" pos:column="52">)</op:operator> <op:operator pos:line="3949" pos:column="54">||</op:operator> <op:operator pos:line="3949" pos:column="57">!</op:operator><call><name><name pos:line="3949" pos:column="58">sel</name><op:operator pos:line="3949" pos:column="61">.</op:operator><name pos:line="3949" pos:column="62">Empty</name></name><argument_list pos:line="3949" pos:column="67">()</argument_list></call> <op:operator pos:line="3949" pos:column="70">||</op:operator> <name pos:line="3949" pos:column="73">inOverstrike</name></expr></argument>)</argument_list></decl>;</decl_stmt>

		<decl_stmt><decl><type><name><name pos:line="3951" pos:column="17">std</name><op:operator pos:line="3951" pos:column="20">::</op:operator><name><name pos:line="3951" pos:column="22">vector</name><argument_list pos:line="3951" pos:column="28">&lt;<argument><expr><name pos:line="3951" pos:column="29">SelectionRange</name> <type:modifier pos:line="3951" pos:column="44">*</type:modifier></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="3951" pos:column="47">selPtrs</name></decl>;</decl_stmt>
		<for pos:line="3952" pos:column="17">for (<init><decl><type><name pos:line="3952" pos:column="22">size_t</name></type> <name pos:line="3952" pos:column="29">r</name> <init pos:line="3952" pos:column="31">= <expr><lit:literal type="number" pos:line="3952" pos:column="33">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="3952" pos:column="36">r</name> <op:operator pos:line="3952" pos:column="38">&lt;</op:operator> <call><name><name pos:line="3952" pos:column="40">sel</name><op:operator pos:line="3952" pos:column="43">.</op:operator><name pos:line="3952" pos:column="44">Count</name></name><argument_list pos:line="3952" pos:column="49">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="3952" pos:column="53">r</name><op:operator pos:line="3952" pos:column="54">++</op:operator></expr></incr>) <block pos:line="3952" pos:column="58">{
			<expr_stmt><expr><call><name><name pos:line="3953" pos:column="25">selPtrs</name><op:operator pos:line="3953" pos:column="32">.</op:operator><name pos:line="3953" pos:column="33">push_back</name></name><argument_list pos:line="3953" pos:column="42">(<argument><expr><op:operator pos:line="3953" pos:column="43">&amp;</op:operator><call><name><name pos:line="3953" pos:column="44">sel</name><op:operator pos:line="3953" pos:column="47">.</op:operator><name pos:line="3953" pos:column="48">Range</name></name><argument_list pos:line="3953" pos:column="53">(<argument><expr><name pos:line="3953" pos:column="54">r</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="3955" pos:column="17">std</name><op:operator pos:line="3955" pos:column="20">::</op:operator><name pos:line="3955" pos:column="22">sort</name></name><argument_list pos:line="3955" pos:column="26">(<argument><expr><call><name><name pos:line="3955" pos:column="27">selPtrs</name><op:operator pos:line="3955" pos:column="34">.</op:operator><name pos:line="3955" pos:column="35">begin</name></name><argument_list pos:line="3955" pos:column="40">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="3955" pos:column="44">selPtrs</name><op:operator pos:line="3955" pos:column="51">.</op:operator><name pos:line="3955" pos:column="52">end</name></name><argument_list pos:line="3955" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="3955" pos:column="59">cmpSelPtrs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<for pos:line="3957" pos:column="17">for (<init><decl><type><name><name pos:line="3957" pos:column="22">std</name><op:operator pos:line="3957" pos:column="25">::</op:operator><name><name pos:line="3957" pos:column="27">vector</name><argument_list pos:line="3957" pos:column="33">&lt;<argument><expr><name pos:line="3957" pos:column="34">SelectionRange</name> <op:operator pos:line="3957" pos:column="49">*</op:operator></expr></argument>&gt;</argument_list></name><op:operator pos:line="3957" pos:column="51">::</op:operator><name pos:line="3957" pos:column="53">reverse_iterator</name></name></type> <name pos:line="3957" pos:column="70">rit</name> <init pos:line="3957" pos:column="74">= <expr><call><name><name pos:line="3957" pos:column="76">selPtrs</name><op:operator pos:line="3957" pos:column="83">.</op:operator><name pos:line="3957" pos:column="84">rbegin</name></name><argument_list pos:line="3957" pos:column="90">()</argument_list></call></expr></init></decl>;</init>
			<condition><expr><name pos:line="3958" pos:column="25">rit</name> <op:operator pos:line="3958" pos:column="29">!=</op:operator> <call><name><name pos:line="3958" pos:column="32">selPtrs</name><op:operator pos:line="3958" pos:column="39">.</op:operator><name pos:line="3958" pos:column="40">rend</name></name><argument_list pos:line="3958" pos:column="44">()</argument_list></call></expr>;</condition> <incr><expr><op:operator pos:line="3958" pos:column="48">++</op:operator><name pos:line="3958" pos:column="50">rit</name></expr></incr>) <block pos:line="3958" pos:column="55">{
			<decl_stmt><decl><type><name pos:line="3959" pos:column="25">SelectionRange</name> <type:modifier pos:line="3959" pos:column="40">*</type:modifier></type><name pos:line="3959" pos:column="41">currentSel</name> <init pos:line="3959" pos:column="52">= <expr><op:operator pos:line="3959" pos:column="54">*</op:operator><name pos:line="3959" pos:column="55">rit</name></expr></init></decl>;</decl_stmt>
			<if pos:line="3960" pos:column="25">if <condition pos:line="3960" pos:column="28">(<expr><op:operator pos:line="3960" pos:column="29">!</op:operator><call><name pos:line="3960" pos:column="30">RangeContainsProtected</name><argument_list pos:line="3960" pos:column="52">(<argument><expr><call><name><name pos:line="3960" pos:column="53">currentSel</name><op:operator pos:line="3960" pos:column="63">-&gt;</op:operator><name pos:line="3960" pos:column="65">Start</name></name><argument_list pos:line="3960" pos:column="70">()</argument_list></call><op:operator pos:line="3960" pos:column="72">.</op:operator><call><name pos:line="3960" pos:column="73">Position</name><argument_list pos:line="3960" pos:column="81">()</argument_list></call></expr></argument>,
				<argument><expr><call><name><name pos:line="3961" pos:column="33">currentSel</name><op:operator pos:line="3961" pos:column="43">-&gt;</op:operator><name pos:line="3961" pos:column="45">End</name></name><argument_list pos:line="3961" pos:column="48">()</argument_list></call><op:operator pos:line="3961" pos:column="50">.</op:operator><call><name pos:line="3961" pos:column="51">Position</name><argument_list pos:line="3961" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3961" pos:column="63"> <block pos:line="3961" pos:column="64">{
				<decl_stmt><decl><type><name pos:line="3962" pos:column="33">int</name></type> <name pos:line="3962" pos:column="37">positionInsert</name> <init pos:line="3962" pos:column="52">= <expr><call><name><name pos:line="3962" pos:column="54">currentSel</name><op:operator pos:line="3962" pos:column="64">-&gt;</op:operator><name pos:line="3962" pos:column="66">Start</name></name><argument_list pos:line="3962" pos:column="71">()</argument_list></call><op:operator pos:line="3962" pos:column="73">.</op:operator><call><name pos:line="3962" pos:column="74">Position</name><argument_list pos:line="3962" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="3963" pos:column="33">if <condition pos:line="3963" pos:column="36">(<expr><op:operator pos:line="3963" pos:column="37">!</op:operator><call><name><name pos:line="3963" pos:column="38">currentSel</name><op:operator pos:line="3963" pos:column="48">-&gt;</op:operator><name pos:line="3963" pos:column="50">Empty</name></name><argument_list pos:line="3963" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="3963" pos:column="58"> <block pos:line="3963" pos:column="59">{
					<if pos:line="3964" pos:column="41">if <condition pos:line="3964" pos:column="44">(<expr><call><name><name pos:line="3964" pos:column="45">currentSel</name><op:operator pos:line="3964" pos:column="55">-&gt;</op:operator><name pos:line="3964" pos:column="57">Length</name></name><argument_list pos:line="3964" pos:column="63">()</argument_list></call></expr>)</condition><then pos:line="3964" pos:column="66"> <block pos:line="3964" pos:column="67">{
						<expr_stmt><expr><call><name><name pos:line="3965" pos:column="49">pdoc</name><op:operator pos:line="3965" pos:column="53">-&gt;</op:operator><name pos:line="3965" pos:column="55">DeleteChars</name></name><argument_list pos:line="3965" pos:column="66">(<argument><expr><name pos:line="3965" pos:column="67">positionInsert</name></expr></argument>, <argument><expr><call><name><name pos:line="3965" pos:column="83">currentSel</name><op:operator pos:line="3965" pos:column="93">-&gt;</op:operator><name pos:line="3965" pos:column="95">Length</name></name><argument_list pos:line="3965" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="3966" pos:column="49">currentSel</name><op:operator pos:line="3966" pos:column="59">-&gt;</op:operator><name pos:line="3966" pos:column="61">ClearVirtualSpace</name></name><argument_list pos:line="3966" pos:column="78">()</argument_list></call></expr>;</expr_stmt>
					}</block></then> <else pos:line="3967" pos:column="43">else <block pos:line="3967" pos:column="48">{
						<comment type="line" pos:line="3968" pos:column="49">// Range is all virtual so collapse to start of virtual space</comment>
						<expr_stmt><expr><call><name><name pos:line="3969" pos:column="49">currentSel</name><op:operator pos:line="3969" pos:column="59">-&gt;</op:operator><name pos:line="3969" pos:column="61">MinimizeVirtualSpace</name></name><argument_list pos:line="3969" pos:column="81">()</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then> <else pos:line="3971" pos:column="35">else <if pos:line="3971" pos:column="40">if <condition pos:line="3971" pos:column="43">(<expr><name pos:line="3971" pos:column="44">inOverstrike</name></expr>)</condition><then pos:line="3971" pos:column="57"> <block pos:line="3971" pos:column="58">{
					<if pos:line="3972" pos:column="41">if <condition pos:line="3972" pos:column="44">(<expr><name pos:line="3972" pos:column="45">positionInsert</name> <op:operator pos:line="3972" pos:column="60">&lt;</op:operator> <call><name><name pos:line="3972" pos:column="62">pdoc</name><op:operator pos:line="3972" pos:column="66">-&gt;</op:operator><name pos:line="3972" pos:column="68">Length</name></name><argument_list pos:line="3972" pos:column="74">()</argument_list></call></expr>)</condition><then pos:line="3972" pos:column="77"> <block pos:line="3972" pos:column="78">{
						<if pos:line="3973" pos:column="49">if <condition pos:line="3973" pos:column="52">(<expr><op:operator pos:line="3973" pos:column="53">!</op:operator><call><name pos:line="3973" pos:column="54">IsEOLChar</name><argument_list pos:line="3973" pos:column="63">(<argument><expr><call><name><name pos:line="3973" pos:column="64">pdoc</name><op:operator pos:line="3973" pos:column="68">-&gt;</op:operator><name pos:line="3973" pos:column="70">CharAt</name></name><argument_list pos:line="3973" pos:column="76">(<argument><expr><name pos:line="3973" pos:column="77">positionInsert</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3973" pos:column="94"> <block pos:line="3973" pos:column="95">{
							<expr_stmt><expr><call><name><name pos:line="3974" pos:column="57">pdoc</name><op:operator pos:line="3974" pos:column="61">-&gt;</op:operator><name pos:line="3974" pos:column="63">DelChar</name></name><argument_list pos:line="3974" pos:column="70">(<argument><expr><name pos:line="3974" pos:column="71">positionInsert</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name><name pos:line="3975" pos:column="57">currentSel</name><op:operator pos:line="3975" pos:column="67">-&gt;</op:operator><name pos:line="3975" pos:column="69">ClearVirtualSpace</name></name><argument_list pos:line="3975" pos:column="86">()</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then></if>
				}</block></then></if></else></if>
				<expr_stmt><expr><name pos:line="3979" pos:column="33">positionInsert</name> <op:operator pos:line="3979" pos:column="48">=</op:operator> <call><name pos:line="3979" pos:column="50">InsertSpace</name><argument_list pos:line="3979" pos:column="61">(<argument><expr><name pos:line="3979" pos:column="62">positionInsert</name></expr></argument>, <argument><expr><call><name><name pos:line="3979" pos:column="78">currentSel</name><op:operator pos:line="3979" pos:column="88">-&gt;</op:operator><name pos:line="3979" pos:column="90">caret</name><op:operator pos:line="3979" pos:column="95">.</op:operator><name pos:line="3979" pos:column="96">VirtualSpace</name></name><argument_list pos:line="3979" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3980" pos:column="33">if <condition pos:line="3980" pos:column="36">(<expr><call><name><name pos:line="3980" pos:column="37">pdoc</name><op:operator pos:line="3980" pos:column="41">-&gt;</op:operator><name pos:line="3980" pos:column="43">InsertString</name></name><argument_list pos:line="3980" pos:column="55">(<argument><expr><name pos:line="3980" pos:column="56">positionInsert</name></expr></argument>, <argument><expr><name pos:line="3980" pos:column="72">s</name></expr></argument>, <argument><expr><name pos:line="3980" pos:column="75">len</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3980" pos:column="80"> <block pos:line="3980" pos:column="81">{
					<expr_stmt><expr><call><name><name pos:line="3981" pos:column="41">currentSel</name><op:operator pos:line="3981" pos:column="51">-&gt;</op:operator><name pos:line="3981" pos:column="53">caret</name><op:operator pos:line="3981" pos:column="58">.</op:operator><name pos:line="3981" pos:column="59">SetPosition</name></name><argument_list pos:line="3981" pos:column="70">(<argument><expr><name pos:line="3981" pos:column="71">positionInsert</name> <op:operator pos:line="3981" pos:column="86">+</op:operator> <name pos:line="3981" pos:column="88">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="3982" pos:column="41">currentSel</name><op:operator pos:line="3982" pos:column="51">-&gt;</op:operator><name pos:line="3982" pos:column="53">anchor</name><op:operator pos:line="3982" pos:column="59">.</op:operator><name pos:line="3982" pos:column="60">SetPosition</name></name><argument_list pos:line="3982" pos:column="71">(<argument><expr><name pos:line="3982" pos:column="72">positionInsert</name> <op:operator pos:line="3982" pos:column="87">+</op:operator> <name pos:line="3982" pos:column="89">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><call><name><name pos:line="3984" pos:column="33">currentSel</name><op:operator pos:line="3984" pos:column="43">-&gt;</op:operator><name pos:line="3984" pos:column="45">ClearVirtualSpace</name></name><argument_list pos:line="3984" pos:column="62">()</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="3985" pos:column="33">// If in wrap mode rewrap current line so EnsureCaretVisible has accurate information</comment>
				<if pos:line="3986" pos:column="33">if <condition pos:line="3986" pos:column="36">(<expr><name pos:line="3986" pos:column="37">wrapState</name> <op:operator pos:line="3986" pos:column="47">!=</op:operator> <name pos:line="3986" pos:column="50">eWrapNone</name></expr>)</condition><then pos:line="3986" pos:column="60"> <block pos:line="3986" pos:column="61">{
					<function_decl><type><name pos:line="3987" pos:column="41">AutoSurface</name></type> <name pos:line="3987" pos:column="53">surface</name><parameter_list pos:line="3987" pos:column="60">(<param><decl><type><name pos:line="3987" pos:column="61">this</name></type></decl></param>)</parameter_list>;</function_decl>
					<if pos:line="3988" pos:column="41">if <condition pos:line="3988" pos:column="44">(<expr><name pos:line="3988" pos:column="45">surface</name></expr>)</condition><then pos:line="3988" pos:column="53"> <block pos:line="3988" pos:column="54">{
						<if pos:line="3989" pos:column="49">if <condition pos:line="3989" pos:column="52">(<expr><call><name pos:line="3989" pos:column="53">WrapOneLine</name><argument_list pos:line="3989" pos:column="64">(<argument><expr><name pos:line="3989" pos:column="65">surface</name></expr></argument>, <argument><expr><call><name><name pos:line="3989" pos:column="74">pdoc</name><op:operator pos:line="3989" pos:column="78">-&gt;</op:operator><name pos:line="3989" pos:column="80">LineFromPosition</name></name><argument_list pos:line="3989" pos:column="96">(<argument><expr><name pos:line="3989" pos:column="97">positionInsert</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3989" pos:column="114"> <block pos:line="3989" pos:column="115">{
							<expr_stmt><expr><call><name pos:line="3990" pos:column="57">SetScrollBars</name><argument_list pos:line="3990" pos:column="70">()</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="3991" pos:column="57">SetVerticalScrollPos</name><argument_list pos:line="3991" pos:column="77">()</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="3992" pos:column="57">Redraw</name><argument_list pos:line="3992" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then></if>
				}</block></then></if>
			}</block></then></if>
		}</block></for>
	}</block>
	<if pos:line="3999" pos:column="9">if <condition pos:line="3999" pos:column="12">(<expr><name pos:line="3999" pos:column="13">wrapState</name> <op:operator pos:line="3999" pos:column="23">!=</op:operator> <name pos:line="3999" pos:column="26">eWrapNone</name></expr>)</condition><then pos:line="3999" pos:column="36"> <block pos:line="3999" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="4000" pos:column="17">SetScrollBars</name><argument_list pos:line="4000" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="4002" pos:column="9">ThinRectangularRange</name><argument_list pos:line="4002" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="4003" pos:column="9">// If in wrap mode rewrap current line so EnsureCaretVisible has accurate information</comment>
	<expr_stmt><expr><call><name pos:line="4004" pos:column="9">EnsureCaretVisible</name><argument_list pos:line="4004" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="4005" pos:column="9">// Avoid blinking during rapid typing:</comment>
	<expr_stmt><expr><call><name pos:line="4006" pos:column="9">ShowCaretAtCurrentPosition</name><argument_list pos:line="4006" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4007" pos:column="9">if <condition pos:line="4007" pos:column="12">(<expr><op:operator pos:line="4007" pos:column="13">(</op:operator><name pos:line="4007" pos:column="14">caretSticky</name> <op:operator pos:line="4007" pos:column="26">==</op:operator> <name pos:line="4007" pos:column="29">SC_CARETSTICKY_OFF</name><op:operator pos:line="4007" pos:column="47">)</op:operator> <op:operator pos:line="4007" pos:column="49">||</op:operator>
		<op:operator pos:line="4008" pos:column="17">(</op:operator><op:operator pos:line="4008" pos:column="18">(</op:operator><name pos:line="4008" pos:column="19">caretSticky</name> <op:operator pos:line="4008" pos:column="31">==</op:operator> <name pos:line="4008" pos:column="34">SC_CARETSTICKY_WHITESPACE</name><op:operator pos:line="4008" pos:column="59">)</op:operator> <op:operator pos:line="4008" pos:column="61">&amp;&amp;</op:operator> <op:operator pos:line="4008" pos:column="64">!</op:operator><call><name pos:line="4008" pos:column="65">IsAllSpacesOrTabs</name><argument_list pos:line="4008" pos:column="82">(<argument><expr><name pos:line="4008" pos:column="83">s</name></expr></argument>, <argument><expr><name pos:line="4008" pos:column="86">len</name></expr></argument>)</argument_list></call><op:operator pos:line="4008" pos:column="90">)</op:operator></expr>)</condition><then pos:line="4008" pos:column="92"> <block pos:line="4008" pos:column="93">{
		<expr_stmt><expr><call><name pos:line="4009" pos:column="17">SetLastXChosen</name><argument_list pos:line="4009" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4012" pos:column="9">if <condition pos:line="4012" pos:column="12">(<expr><name pos:line="4012" pos:column="13">treatAsDBCS</name></expr>)</condition><then pos:line="4012" pos:column="25"> <block pos:line="4012" pos:column="26">{
		<macro><name pos:line="4013" pos:column="17">NotifyChar</name><argument_list pos:line="4013" pos:column="27">(<argument pos:line="4013" pos:column="28">(static_cast&lt;unsigned char&gt;(s[0]) &lt;&lt; 8) |
		        static_cast&lt;unsigned char&gt;(s[1])</argument>)</argument_list></macro><empty_stmt pos:line="4014" pos:column="58">;</empty_stmt>
	}</block></then> <else pos:line="4015" pos:column="11">else <block pos:line="4015" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="4016" pos:column="17">int</name></type> <name pos:line="4016" pos:column="21">byte</name> <init pos:line="4016" pos:column="26">= <expr><call><name><name pos:line="4016" pos:column="28">static_cast</name><argument_list pos:line="4016" pos:column="39">&lt;<argument><expr><name pos:line="4016" pos:column="40">unsigned</name> <name pos:line="4016" pos:column="49">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="4016" pos:column="54">(<argument><expr><name><name pos:line="4016" pos:column="55">s</name><index pos:line="4016" pos:column="56">[<expr><lit:literal type="number" pos:line="4016" pos:column="57">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4017" pos:column="17">if <condition pos:line="4017" pos:column="20">(<expr><op:operator pos:line="4017" pos:column="21">(</op:operator><name pos:line="4017" pos:column="22">byte</name> <op:operator pos:line="4017" pos:column="27">&lt;</op:operator> <lit:literal type="number" pos:line="4017" pos:column="29">0xC0</lit:literal><op:operator pos:line="4017" pos:column="33">)</op:operator> <op:operator pos:line="4017" pos:column="35">||</op:operator> <op:operator pos:line="4017" pos:column="38">(</op:operator><lit:literal type="number" pos:line="4017" pos:column="39">1</lit:literal> <op:operator pos:line="4017" pos:column="41">==</op:operator> <name pos:line="4017" pos:column="44">len</name><op:operator pos:line="4017" pos:column="47">)</op:operator></expr>)</condition><then pos:line="4017" pos:column="49"> <block pos:line="4017" pos:column="50">{
			<comment type="line" pos:line="4018" pos:column="25">// Handles UTF-8 characters between 0x01 and 0x7F and single byte</comment>
			<comment type="line" pos:line="4019" pos:column="25">// characters when not in UTF-8 mode.</comment>
			<comment type="line" pos:line="4020" pos:column="25">// Also treats \0 and naked trail bytes 0x80 to 0xBF as valid</comment>
			<comment type="line" pos:line="4021" pos:column="25">// characters representing themselves.</comment>
		}</block></then> <else pos:line="4022" pos:column="19">else <block pos:line="4022" pos:column="24">{
			<comment type="line" pos:line="4023" pos:column="25">// Unroll 1 to 3 byte UTF-8 sequences.  See reference data at:</comment>
			<comment type="line" pos:line="4024" pos:column="25">// http://www.cl.cam.ac.uk/~mgk25/unicode.html</comment>
			<comment type="line" pos:line="4025" pos:column="25">// http://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-test.txt</comment>
			<if pos:line="4026" pos:column="25">if <condition pos:line="4026" pos:column="28">(<expr><name pos:line="4026" pos:column="29">byte</name> <op:operator pos:line="4026" pos:column="34">&lt;</op:operator> <lit:literal type="number" pos:line="4026" pos:column="36">0xE0</lit:literal></expr>)</condition><then pos:line="4026" pos:column="41"> <block pos:line="4026" pos:column="42">{
				<decl_stmt><decl><type><name pos:line="4027" pos:column="33">int</name></type> <name pos:line="4027" pos:column="37">byte2</name> <init pos:line="4027" pos:column="43">= <expr><call><name><name pos:line="4027" pos:column="45">static_cast</name><argument_list pos:line="4027" pos:column="56">&lt;<argument><expr><name pos:line="4027" pos:column="57">unsigned</name> <name pos:line="4027" pos:column="66">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="4027" pos:column="71">(<argument><expr><name><name pos:line="4027" pos:column="72">s</name><index pos:line="4027" pos:column="73">[<expr><lit:literal type="number" pos:line="4027" pos:column="74">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="4028" pos:column="33">if <condition pos:line="4028" pos:column="36">(<expr><op:operator pos:line="4028" pos:column="37">(</op:operator><name pos:line="4028" pos:column="38">byte2</name> <op:operator pos:line="4028" pos:column="44">&amp;</op:operator> <lit:literal type="number" pos:line="4028" pos:column="46">0xC0</lit:literal><op:operator pos:line="4028" pos:column="50">)</op:operator> <op:operator pos:line="4028" pos:column="52">==</op:operator> <lit:literal type="number" pos:line="4028" pos:column="55">0x80</lit:literal></expr>)</condition><then pos:line="4028" pos:column="60"> <block pos:line="4028" pos:column="61">{
					<comment type="line" pos:line="4029" pos:column="41">// Two-byte-character lead-byte followed by a trail-byte.</comment>
					<expr_stmt><expr><name pos:line="4030" pos:column="41">byte</name> <op:operator pos:line="4030" pos:column="46">=</op:operator> <op:operator pos:line="4030" pos:column="48">(</op:operator><op:operator pos:line="4030" pos:column="49">(</op:operator><op:operator pos:line="4030" pos:column="50">(</op:operator><name pos:line="4030" pos:column="51">byte</name> <op:operator pos:line="4030" pos:column="56">&amp;</op:operator> <lit:literal type="number" pos:line="4030" pos:column="58">0x1F</lit:literal><op:operator pos:line="4030" pos:column="62">)</op:operator> <op:operator pos:line="4030" pos:column="64">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="4030" pos:column="67">6</lit:literal><op:operator pos:line="4030" pos:column="68">)</op:operator> <op:operator pos:line="4030" pos:column="70">|</op:operator> <op:operator pos:line="4030" pos:column="72">(</op:operator><name pos:line="4030" pos:column="73">byte2</name> <op:operator pos:line="4030" pos:column="79">&amp;</op:operator> <lit:literal type="number" pos:line="4030" pos:column="81">0x3F</lit:literal><op:operator pos:line="4030" pos:column="85">)</op:operator><op:operator pos:line="4030" pos:column="86">)</op:operator></expr>;</expr_stmt>
				}</block></then></if>
				<comment type="line" pos:line="4032" pos:column="33">// A two-byte-character lead-byte not followed by trail-byte</comment>
				<comment type="line" pos:line="4033" pos:column="33">// represents itself.</comment>
			}</block></then> <else pos:line="4034" pos:column="27">else <if pos:line="4034" pos:column="32">if <condition pos:line="4034" pos:column="35">(<expr><name pos:line="4034" pos:column="36">byte</name> <op:operator pos:line="4034" pos:column="41">&lt;</op:operator> <lit:literal type="number" pos:line="4034" pos:column="43">0xF0</lit:literal></expr>)</condition><then pos:line="4034" pos:column="48"> <block pos:line="4034" pos:column="49">{
				<decl_stmt><decl><type><name pos:line="4035" pos:column="33">int</name></type> <name pos:line="4035" pos:column="37">byte2</name> <init pos:line="4035" pos:column="43">= <expr><call><name><name pos:line="4035" pos:column="45">static_cast</name><argument_list pos:line="4035" pos:column="56">&lt;<argument><expr><name pos:line="4035" pos:column="57">unsigned</name> <name pos:line="4035" pos:column="66">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="4035" pos:column="71">(<argument><expr><name><name pos:line="4035" pos:column="72">s</name><index pos:line="4035" pos:column="73">[<expr><lit:literal type="number" pos:line="4035" pos:column="74">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="4036" pos:column="33">int</name></type> <name pos:line="4036" pos:column="37">byte3</name> <init pos:line="4036" pos:column="43">= <expr><call><name><name pos:line="4036" pos:column="45">static_cast</name><argument_list pos:line="4036" pos:column="56">&lt;<argument><expr><name pos:line="4036" pos:column="57">unsigned</name> <name pos:line="4036" pos:column="66">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="4036" pos:column="71">(<argument><expr><name><name pos:line="4036" pos:column="72">s</name><index pos:line="4036" pos:column="73">[<expr><lit:literal type="number" pos:line="4036" pos:column="74">2</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="4037" pos:column="33">if <condition pos:line="4037" pos:column="36">(<expr><op:operator pos:line="4037" pos:column="37">(</op:operator><op:operator pos:line="4037" pos:column="38">(</op:operator><name pos:line="4037" pos:column="39">byte2</name> <op:operator pos:line="4037" pos:column="45">&amp;</op:operator> <lit:literal type="number" pos:line="4037" pos:column="47">0xC0</lit:literal><op:operator pos:line="4037" pos:column="51">)</op:operator> <op:operator pos:line="4037" pos:column="53">==</op:operator> <lit:literal type="number" pos:line="4037" pos:column="56">0x80</lit:literal><op:operator pos:line="4037" pos:column="60">)</op:operator> <op:operator pos:line="4037" pos:column="62">&amp;&amp;</op:operator> <op:operator pos:line="4037" pos:column="65">(</op:operator><op:operator pos:line="4037" pos:column="66">(</op:operator><name pos:line="4037" pos:column="67">byte3</name> <op:operator pos:line="4037" pos:column="73">&amp;</op:operator> <lit:literal type="number" pos:line="4037" pos:column="75">0xC0</lit:literal><op:operator pos:line="4037" pos:column="79">)</op:operator> <op:operator pos:line="4037" pos:column="81">==</op:operator> <lit:literal type="number" pos:line="4037" pos:column="84">0x80</lit:literal><op:operator pos:line="4037" pos:column="88">)</op:operator></expr>)</condition><then pos:line="4037" pos:column="90"> <block pos:line="4037" pos:column="91">{
					<comment type="line" pos:line="4038" pos:column="41">// Three-byte-character lead byte followed by two trail bytes.</comment>
					<expr_stmt><expr><name pos:line="4039" pos:column="41">byte</name> <op:operator pos:line="4039" pos:column="46">=</op:operator> <op:operator pos:line="4039" pos:column="48">(</op:operator><op:operator pos:line="4039" pos:column="49">(</op:operator><op:operator pos:line="4039" pos:column="50">(</op:operator><name pos:line="4039" pos:column="51">byte</name> <op:operator pos:line="4039" pos:column="56">&amp;</op:operator> <lit:literal type="number" pos:line="4039" pos:column="58">0x0F</lit:literal><op:operator pos:line="4039" pos:column="62">)</op:operator> <op:operator pos:line="4039" pos:column="64">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="4039" pos:column="67">12</lit:literal><op:operator pos:line="4039" pos:column="69">)</op:operator> <op:operator pos:line="4039" pos:column="71">|</op:operator> <op:operator pos:line="4039" pos:column="73">(</op:operator><op:operator pos:line="4039" pos:column="74">(</op:operator><name pos:line="4039" pos:column="75">byte2</name> <op:operator pos:line="4039" pos:column="81">&amp;</op:operator> <lit:literal type="number" pos:line="4039" pos:column="83">0x3F</lit:literal><op:operator pos:line="4039" pos:column="87">)</op:operator> <op:operator pos:line="4039" pos:column="89">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="4039" pos:column="92">6</lit:literal><op:operator pos:line="4039" pos:column="93">)</op:operator> <op:operator pos:line="4039" pos:column="95">|</op:operator>
					        <op:operator pos:line="4040" pos:column="49">(</op:operator><name pos:line="4040" pos:column="50">byte3</name> <op:operator pos:line="4040" pos:column="56">&amp;</op:operator> <lit:literal type="number" pos:line="4040" pos:column="58">0x3F</lit:literal><op:operator pos:line="4040" pos:column="62">)</op:operator><op:operator pos:line="4040" pos:column="63">)</op:operator></expr>;</expr_stmt>
				}</block></then></if>
				<comment type="line" pos:line="4042" pos:column="33">// A three-byte-character lead-byte not followed by two trail-bytes</comment>
				<comment type="line" pos:line="4043" pos:column="33">// represents itself.</comment>
			}</block></then></if></else></if>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="4046" pos:column="17">NotifyChar</name><argument_list pos:line="4046" pos:column="27">(<argument><expr><name pos:line="4046" pos:column="28">byte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<if pos:line="4049" pos:column="9">if <condition pos:line="4049" pos:column="12">(<expr><name pos:line="4049" pos:column="13">recordingMacro</name></expr>)</condition><then pos:line="4049" pos:column="28"> <block pos:line="4049" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="4050" pos:column="17">NotifyMacroRecord</name><argument_list pos:line="4050" pos:column="34">(<argument><expr><name pos:line="4050" pos:column="35">SCI_REPLACESEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4050" pos:column="51">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4050" pos:column="54">reinterpret_cast</name><argument_list pos:line="4050" pos:column="70">&lt;<argument><expr><name pos:line="4050" pos:column="71">sptr_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="4050" pos:column="78">(<argument><expr><name pos:line="4050" pos:column="79">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4054" pos:column="1">void</name></type> <name><name pos:line="4054" pos:column="6">Editor</name><op:operator pos:line="4054" pos:column="12">::</op:operator><name pos:line="4054" pos:column="14">InsertPaste</name></name><parameter_list pos:line="4054" pos:column="25">(<param><decl><type><name pos:line="4054" pos:column="26">SelectionPosition</name></type> <name pos:line="4054" pos:column="44">selStart</name></decl></param>, <param><decl><type><specifier pos:line="4054" pos:column="54">const</specifier> <name pos:line="4054" pos:column="60">char</name> <type:modifier pos:line="4054" pos:column="65">*</type:modifier></type><name pos:line="4054" pos:column="66">text</name></decl></param>, <param><decl><type><name pos:line="4054" pos:column="72">int</name></type> <name pos:line="4054" pos:column="76">len</name></decl></param>)</parameter_list> <block pos:line="4054" pos:column="81">{
	<if pos:line="4055" pos:column="9">if <condition pos:line="4055" pos:column="12">(<expr><name pos:line="4055" pos:column="13">multiPasteMode</name> <op:operator pos:line="4055" pos:column="28">==</op:operator> <name pos:line="4055" pos:column="31">SC_MULTIPASTE_ONCE</name></expr>)</condition><then pos:line="4055" pos:column="50"> <block pos:line="4055" pos:column="51">{
		<expr_stmt><expr><name pos:line="4056" pos:column="17">selStart</name> <op:operator pos:line="4056" pos:column="26">=</op:operator> <call><name pos:line="4056" pos:column="28">SelectionPosition</name><argument_list pos:line="4056" pos:column="45">(<argument><expr><call><name pos:line="4056" pos:column="46">InsertSpace</name><argument_list pos:line="4056" pos:column="57">(<argument><expr><call><name><name pos:line="4056" pos:column="58">selStart</name><op:operator pos:line="4056" pos:column="66">.</op:operator><name pos:line="4056" pos:column="67">Position</name></name><argument_list pos:line="4056" pos:column="75">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4056" pos:column="79">selStart</name><op:operator pos:line="4056" pos:column="87">.</op:operator><name pos:line="4056" pos:column="88">VirtualSpace</name></name><argument_list pos:line="4056" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="4057" pos:column="17">if <condition pos:line="4057" pos:column="20">(<expr><call><name><name pos:line="4057" pos:column="21">pdoc</name><op:operator pos:line="4057" pos:column="25">-&gt;</op:operator><name pos:line="4057" pos:column="27">InsertString</name></name><argument_list pos:line="4057" pos:column="39">(<argument><expr><call><name><name pos:line="4057" pos:column="40">selStart</name><op:operator pos:line="4057" pos:column="48">.</op:operator><name pos:line="4057" pos:column="49">Position</name></name><argument_list pos:line="4057" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4057" pos:column="61">text</name></expr></argument>, <argument><expr><name pos:line="4057" pos:column="67">len</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4057" pos:column="72"> <block pos:line="4057" pos:column="73">{
			<expr_stmt><expr><call><name pos:line="4058" pos:column="25">SetEmptySelection</name><argument_list pos:line="4058" pos:column="42">(<argument><expr><call><name><name pos:line="4058" pos:column="43">selStart</name><op:operator pos:line="4058" pos:column="51">.</op:operator><name pos:line="4058" pos:column="52">Position</name></name><argument_list pos:line="4058" pos:column="60">()</argument_list></call> <op:operator pos:line="4058" pos:column="63">+</op:operator> <name pos:line="4058" pos:column="65">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="4060" pos:column="11">else <block pos:line="4060" pos:column="16">{
		<comment type="line" pos:line="4061" pos:column="17">// SC_MULTIPASTE_EACH</comment>
		<for pos:line="4062" pos:column="17">for (<init><decl><type><name pos:line="4062" pos:column="22">size_t</name></type> <name pos:line="4062" pos:column="29">r</name><init pos:line="4062" pos:column="30">=<expr><lit:literal type="number" pos:line="4062" pos:column="31">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4062" pos:column="34">r</name><op:operator pos:line="4062" pos:column="35">&lt;</op:operator><call><name><name pos:line="4062" pos:column="36">sel</name><op:operator pos:line="4062" pos:column="39">.</op:operator><name pos:line="4062" pos:column="40">Count</name></name><argument_list pos:line="4062" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4062" pos:column="49">r</name><op:operator pos:line="4062" pos:column="50">++</op:operator></expr></incr>) <block pos:line="4062" pos:column="54">{
			<if pos:line="4063" pos:column="25">if <condition pos:line="4063" pos:column="28">(<expr><op:operator pos:line="4063" pos:column="29">!</op:operator><call><name pos:line="4063" pos:column="30">RangeContainsProtected</name><argument_list pos:line="4063" pos:column="52">(<argument><expr><call><name><name pos:line="4063" pos:column="53">sel</name><op:operator pos:line="4063" pos:column="56">.</op:operator><name pos:line="4063" pos:column="57">Range</name></name><argument_list pos:line="4063" pos:column="62">(<argument><expr><name pos:line="4063" pos:column="63">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4063" pos:column="65">.</op:operator><call><name pos:line="4063" pos:column="66">Start</name><argument_list pos:line="4063" pos:column="71">()</argument_list></call><op:operator pos:line="4063" pos:column="73">.</op:operator><call><name pos:line="4063" pos:column="74">Position</name><argument_list pos:line="4063" pos:column="82">()</argument_list></call></expr></argument>,
				<argument><expr><call><name><name pos:line="4064" pos:column="33">sel</name><op:operator pos:line="4064" pos:column="36">.</op:operator><name pos:line="4064" pos:column="37">Range</name></name><argument_list pos:line="4064" pos:column="42">(<argument><expr><name pos:line="4064" pos:column="43">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4064" pos:column="45">.</op:operator><call><name pos:line="4064" pos:column="46">End</name><argument_list pos:line="4064" pos:column="49">()</argument_list></call><op:operator pos:line="4064" pos:column="51">.</op:operator><call><name pos:line="4064" pos:column="52">Position</name><argument_list pos:line="4064" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4064" pos:column="64"> <block pos:line="4064" pos:column="65">{
				<decl_stmt><decl><type><name pos:line="4065" pos:column="33">int</name></type> <name pos:line="4065" pos:column="37">positionInsert</name> <init pos:line="4065" pos:column="52">= <expr><call><name><name pos:line="4065" pos:column="54">sel</name><op:operator pos:line="4065" pos:column="57">.</op:operator><name pos:line="4065" pos:column="58">Range</name></name><argument_list pos:line="4065" pos:column="63">(<argument><expr><name pos:line="4065" pos:column="64">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4065" pos:column="66">.</op:operator><call><name pos:line="4065" pos:column="67">Start</name><argument_list pos:line="4065" pos:column="72">()</argument_list></call><op:operator pos:line="4065" pos:column="74">.</op:operator><call><name pos:line="4065" pos:column="75">Position</name><argument_list pos:line="4065" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="4066" pos:column="33">if <condition pos:line="4066" pos:column="36">(<expr><op:operator pos:line="4066" pos:column="37">!</op:operator><call><name><name pos:line="4066" pos:column="38">sel</name><op:operator pos:line="4066" pos:column="41">.</op:operator><name pos:line="4066" pos:column="42">Range</name></name><argument_list pos:line="4066" pos:column="47">(<argument><expr><name pos:line="4066" pos:column="48">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4066" pos:column="50">.</op:operator><call><name pos:line="4066" pos:column="51">Empty</name><argument_list pos:line="4066" pos:column="56">()</argument_list></call></expr>)</condition><then pos:line="4066" pos:column="59"> <block pos:line="4066" pos:column="60">{
					<if pos:line="4067" pos:column="41">if <condition pos:line="4067" pos:column="44">(<expr><call><name><name pos:line="4067" pos:column="45">sel</name><op:operator pos:line="4067" pos:column="48">.</op:operator><name pos:line="4067" pos:column="49">Range</name></name><argument_list pos:line="4067" pos:column="54">(<argument><expr><name pos:line="4067" pos:column="55">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4067" pos:column="57">.</op:operator><call><name pos:line="4067" pos:column="58">Length</name><argument_list pos:line="4067" pos:column="64">()</argument_list></call></expr>)</condition><then pos:line="4067" pos:column="67"> <block pos:line="4067" pos:column="68">{
						<expr_stmt><expr><call><name><name pos:line="4068" pos:column="49">pdoc</name><op:operator pos:line="4068" pos:column="53">-&gt;</op:operator><name pos:line="4068" pos:column="55">DeleteChars</name></name><argument_list pos:line="4068" pos:column="66">(<argument><expr><name pos:line="4068" pos:column="67">positionInsert</name></expr></argument>, <argument><expr><call><name><name pos:line="4068" pos:column="83">sel</name><op:operator pos:line="4068" pos:column="86">.</op:operator><name pos:line="4068" pos:column="87">Range</name></name><argument_list pos:line="4068" pos:column="92">(<argument><expr><name pos:line="4068" pos:column="93">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4068" pos:column="95">.</op:operator><call><name pos:line="4068" pos:column="96">Length</name><argument_list pos:line="4068" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="4069" pos:column="49">sel</name><op:operator pos:line="4069" pos:column="52">.</op:operator><name pos:line="4069" pos:column="53">Range</name></name><argument_list pos:line="4069" pos:column="58">(<argument><expr><name pos:line="4069" pos:column="59">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4069" pos:column="61">.</op:operator><call><name pos:line="4069" pos:column="62">ClearVirtualSpace</name><argument_list pos:line="4069" pos:column="79">()</argument_list></call></expr>;</expr_stmt>
					}</block></then> <else pos:line="4070" pos:column="43">else <block pos:line="4070" pos:column="48">{
						<comment type="line" pos:line="4071" pos:column="49">// Range is all virtual so collapse to start of virtual space</comment>
						<expr_stmt><expr><call><name><name pos:line="4072" pos:column="49">sel</name><op:operator pos:line="4072" pos:column="52">.</op:operator><name pos:line="4072" pos:column="53">Range</name></name><argument_list pos:line="4072" pos:column="58">(<argument><expr><name pos:line="4072" pos:column="59">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4072" pos:column="61">.</op:operator><call><name pos:line="4072" pos:column="62">MinimizeVirtualSpace</name><argument_list pos:line="4072" pos:column="82">()</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if>
				<expr_stmt><expr><name pos:line="4075" pos:column="33">positionInsert</name> <op:operator pos:line="4075" pos:column="48">=</op:operator> <call><name pos:line="4075" pos:column="50">InsertSpace</name><argument_list pos:line="4075" pos:column="61">(<argument><expr><name pos:line="4075" pos:column="62">positionInsert</name></expr></argument>, <argument><expr><call><name><name pos:line="4075" pos:column="78">sel</name><op:operator pos:line="4075" pos:column="81">.</op:operator><name pos:line="4075" pos:column="82">Range</name></name><argument_list pos:line="4075" pos:column="87">(<argument><expr><name pos:line="4075" pos:column="88">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4075" pos:column="90">.</op:operator><call><name><name pos:line="4075" pos:column="91">caret</name><op:operator pos:line="4075" pos:column="96">.</op:operator><name pos:line="4075" pos:column="97">VirtualSpace</name></name><argument_list pos:line="4075" pos:column="109">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="4076" pos:column="33">if <condition pos:line="4076" pos:column="36">(<expr><call><name><name pos:line="4076" pos:column="37">pdoc</name><op:operator pos:line="4076" pos:column="41">-&gt;</op:operator><name pos:line="4076" pos:column="43">InsertString</name></name><argument_list pos:line="4076" pos:column="55">(<argument><expr><name pos:line="4076" pos:column="56">positionInsert</name></expr></argument>, <argument><expr><name pos:line="4076" pos:column="72">text</name></expr></argument>, <argument><expr><name pos:line="4076" pos:column="78">len</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4076" pos:column="83"> <block pos:line="4076" pos:column="84">{
					<expr_stmt><expr><call><name><name pos:line="4077" pos:column="41">sel</name><op:operator pos:line="4077" pos:column="44">.</op:operator><name pos:line="4077" pos:column="45">Range</name></name><argument_list pos:line="4077" pos:column="50">(<argument><expr><name pos:line="4077" pos:column="51">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4077" pos:column="53">.</op:operator><call><name><name pos:line="4077" pos:column="54">caret</name><op:operator pos:line="4077" pos:column="59">.</op:operator><name pos:line="4077" pos:column="60">SetPosition</name></name><argument_list pos:line="4077" pos:column="71">(<argument><expr><name pos:line="4077" pos:column="72">positionInsert</name> <op:operator pos:line="4077" pos:column="87">+</op:operator> <name pos:line="4077" pos:column="89">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="4078" pos:column="41">sel</name><op:operator pos:line="4078" pos:column="44">.</op:operator><name pos:line="4078" pos:column="45">Range</name></name><argument_list pos:line="4078" pos:column="50">(<argument><expr><name pos:line="4078" pos:column="51">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4078" pos:column="53">.</op:operator><call><name><name pos:line="4078" pos:column="54">anchor</name><op:operator pos:line="4078" pos:column="60">.</op:operator><name pos:line="4078" pos:column="61">SetPosition</name></name><argument_list pos:line="4078" pos:column="72">(<argument><expr><name pos:line="4078" pos:column="73">positionInsert</name> <op:operator pos:line="4078" pos:column="88">+</op:operator> <name pos:line="4078" pos:column="90">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><call><name><name pos:line="4080" pos:column="33">sel</name><op:operator pos:line="4080" pos:column="36">.</op:operator><name pos:line="4080" pos:column="37">Range</name></name><argument_list pos:line="4080" pos:column="42">(<argument><expr><name pos:line="4080" pos:column="43">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4080" pos:column="45">.</op:operator><call><name pos:line="4080" pos:column="46">ClearVirtualSpace</name><argument_list pos:line="4080" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="4086" pos:column="1">void</name></type> <name><name pos:line="4086" pos:column="6">Editor</name><op:operator pos:line="4086" pos:column="12">::</op:operator><name pos:line="4086" pos:column="14">ClearSelection</name></name><parameter_list pos:line="4086" pos:column="28">(<param><decl><type><name pos:line="4086" pos:column="29">bool</name></type> <name pos:line="4086" pos:column="34">retainMultipleSelections</name></decl></param>)</parameter_list> <block pos:line="4086" pos:column="60">{
	<if pos:line="4087" pos:column="9">if <condition pos:line="4087" pos:column="12">(<expr><op:operator pos:line="4087" pos:column="13">!</op:operator><call><name><name pos:line="4087" pos:column="14">sel</name><op:operator pos:line="4087" pos:column="17">.</op:operator><name pos:line="4087" pos:column="18">IsRectangular</name></name><argument_list pos:line="4087" pos:column="31">()</argument_list></call> <op:operator pos:line="4087" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="4087" pos:column="37">!</op:operator><name pos:line="4087" pos:column="38">retainMultipleSelections</name></expr>)</condition><then pos:line="4087" pos:column="63">
		<expr_stmt><expr><call><name pos:line="4088" pos:column="17">FilterSelections</name><argument_list pos:line="4088" pos:column="33">()</argument_list></call></expr>;</expr_stmt></then></if>
	<function_decl><type><name pos:line="4089" pos:column="9">UndoGroup</name></type> <name pos:line="4089" pos:column="19">ug</name><parameter_list pos:line="4089" pos:column="21">(<param><decl><type><name pos:line="4089" pos:column="22">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
	<for pos:line="4090" pos:column="9">for (<init><decl><type><name pos:line="4090" pos:column="14">size_t</name></type> <name pos:line="4090" pos:column="21">r</name><init pos:line="4090" pos:column="22">=<expr><lit:literal type="number" pos:line="4090" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4090" pos:column="26">r</name><op:operator pos:line="4090" pos:column="27">&lt;</op:operator><call><name><name pos:line="4090" pos:column="28">sel</name><op:operator pos:line="4090" pos:column="31">.</op:operator><name pos:line="4090" pos:column="32">Count</name></name><argument_list pos:line="4090" pos:column="37">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4090" pos:column="41">r</name><op:operator pos:line="4090" pos:column="42">++</op:operator></expr></incr>) <block pos:line="4090" pos:column="46">{
		<if pos:line="4091" pos:column="17">if <condition pos:line="4091" pos:column="20">(<expr><op:operator pos:line="4091" pos:column="21">!</op:operator><call><name><name pos:line="4091" pos:column="22">sel</name><op:operator pos:line="4091" pos:column="25">.</op:operator><name pos:line="4091" pos:column="26">Range</name></name><argument_list pos:line="4091" pos:column="31">(<argument><expr><name pos:line="4091" pos:column="32">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4091" pos:column="34">.</op:operator><call><name pos:line="4091" pos:column="35">Empty</name><argument_list pos:line="4091" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="4091" pos:column="43"> <block pos:line="4091" pos:column="44">{
			<if pos:line="4092" pos:column="25">if <condition pos:line="4092" pos:column="28">(<expr><op:operator pos:line="4092" pos:column="29">!</op:operator><call><name pos:line="4092" pos:column="30">RangeContainsProtected</name><argument_list pos:line="4092" pos:column="52">(<argument><expr><call><name><name pos:line="4092" pos:column="53">sel</name><op:operator pos:line="4092" pos:column="56">.</op:operator><name pos:line="4092" pos:column="57">Range</name></name><argument_list pos:line="4092" pos:column="62">(<argument><expr><name pos:line="4092" pos:column="63">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4092" pos:column="65">.</op:operator><call><name pos:line="4092" pos:column="66">Start</name><argument_list pos:line="4092" pos:column="71">()</argument_list></call><op:operator pos:line="4092" pos:column="73">.</op:operator><call><name pos:line="4092" pos:column="74">Position</name><argument_list pos:line="4092" pos:column="82">()</argument_list></call></expr></argument>,
				<argument><expr><call><name><name pos:line="4093" pos:column="33">sel</name><op:operator pos:line="4093" pos:column="36">.</op:operator><name pos:line="4093" pos:column="37">Range</name></name><argument_list pos:line="4093" pos:column="42">(<argument><expr><name pos:line="4093" pos:column="43">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4093" pos:column="45">.</op:operator><call><name pos:line="4093" pos:column="46">End</name><argument_list pos:line="4093" pos:column="49">()</argument_list></call><op:operator pos:line="4093" pos:column="51">.</op:operator><call><name pos:line="4093" pos:column="52">Position</name><argument_list pos:line="4093" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4093" pos:column="64"> <block pos:line="4093" pos:column="65">{
				<expr_stmt><expr><call><name><name pos:line="4094" pos:column="33">pdoc</name><op:operator pos:line="4094" pos:column="37">-&gt;</op:operator><name pos:line="4094" pos:column="39">DeleteChars</name></name><argument_list pos:line="4094" pos:column="50">(<argument><expr><call><name><name pos:line="4094" pos:column="51">sel</name><op:operator pos:line="4094" pos:column="54">.</op:operator><name pos:line="4094" pos:column="55">Range</name></name><argument_list pos:line="4094" pos:column="60">(<argument><expr><name pos:line="4094" pos:column="61">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4094" pos:column="63">.</op:operator><call><name pos:line="4094" pos:column="64">Start</name><argument_list pos:line="4094" pos:column="69">()</argument_list></call><op:operator pos:line="4094" pos:column="71">.</op:operator><call><name pos:line="4094" pos:column="72">Position</name><argument_list pos:line="4094" pos:column="80">()</argument_list></call></expr></argument>,
					<argument><expr><call><name><name pos:line="4095" pos:column="41">sel</name><op:operator pos:line="4095" pos:column="44">.</op:operator><name pos:line="4095" pos:column="45">Range</name></name><argument_list pos:line="4095" pos:column="50">(<argument><expr><name pos:line="4095" pos:column="51">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4095" pos:column="53">.</op:operator><call><name pos:line="4095" pos:column="54">Length</name><argument_list pos:line="4095" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="4096" pos:column="33">sel</name><op:operator pos:line="4096" pos:column="36">.</op:operator><name pos:line="4096" pos:column="37">Range</name></name><argument_list pos:line="4096" pos:column="42">(<argument><expr><name pos:line="4096" pos:column="43">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="4096" pos:column="46">=</op:operator> <call><name><name pos:line="4096" pos:column="48">sel</name><op:operator pos:line="4096" pos:column="51">.</op:operator><name pos:line="4096" pos:column="52">Range</name></name><argument_list pos:line="4096" pos:column="57">(<argument><expr><name pos:line="4096" pos:column="58">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4096" pos:column="60">.</op:operator><call><name pos:line="4096" pos:column="61">Start</name><argument_list pos:line="4096" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><call><name pos:line="4100" pos:column="9">ThinRectangularRange</name><argument_list pos:line="4100" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4101" pos:column="9">sel</name><op:operator pos:line="4101" pos:column="12">.</op:operator><name pos:line="4101" pos:column="13">RemoveDuplicates</name></name><argument_list pos:line="4101" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4102" pos:column="9">ClaimSelection</name><argument_list pos:line="4102" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4105" pos:column="1">void</name></type> <name><name pos:line="4105" pos:column="6">Editor</name><op:operator pos:line="4105" pos:column="12">::</op:operator><name pos:line="4105" pos:column="14">ClearAll</name></name><parameter_list pos:line="4105" pos:column="22">()</parameter_list> <block pos:line="4105" pos:column="25">{
	<block pos:line="4106" pos:column="9">{
		<function_decl><type><name pos:line="4107" pos:column="17">UndoGroup</name></type> <name pos:line="4107" pos:column="27">ug</name><parameter_list pos:line="4107" pos:column="29">(<param><decl><type><name pos:line="4107" pos:column="30">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
		<if pos:line="4108" pos:column="17">if <condition pos:line="4108" pos:column="20">(<expr><lit:literal type="number" pos:line="4108" pos:column="21">0</lit:literal> <op:operator pos:line="4108" pos:column="23">!=</op:operator> <call><name><name pos:line="4108" pos:column="26">pdoc</name><op:operator pos:line="4108" pos:column="30">-&gt;</op:operator><name pos:line="4108" pos:column="32">Length</name></name><argument_list pos:line="4108" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="4108" pos:column="41"> <block pos:line="4108" pos:column="42">{
			<expr_stmt><expr><call><name><name pos:line="4109" pos:column="25">pdoc</name><op:operator pos:line="4109" pos:column="29">-&gt;</op:operator><name pos:line="4109" pos:column="31">DeleteChars</name></name><argument_list pos:line="4109" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="4109" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4109" pos:column="46">pdoc</name><op:operator pos:line="4109" pos:column="50">-&gt;</op:operator><name pos:line="4109" pos:column="52">Length</name></name><argument_list pos:line="4109" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="4111" pos:column="17">if <condition pos:line="4111" pos:column="20">(<expr><op:operator pos:line="4111" pos:column="21">!</op:operator><call><name><name pos:line="4111" pos:column="22">pdoc</name><op:operator pos:line="4111" pos:column="26">-&gt;</op:operator><name pos:line="4111" pos:column="28">IsReadOnly</name></name><argument_list pos:line="4111" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="4111" pos:column="41"> <block pos:line="4111" pos:column="42">{
			<expr_stmt><expr><call><name><name pos:line="4112" pos:column="25">cs</name><op:operator pos:line="4112" pos:column="27">.</op:operator><name pos:line="4112" pos:column="28">Clear</name></name><argument_list pos:line="4112" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4113" pos:column="25">pdoc</name><op:operator pos:line="4113" pos:column="29">-&gt;</op:operator><name pos:line="4113" pos:column="31">AnnotationClearAll</name></name><argument_list pos:line="4113" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4114" pos:column="25">pdoc</name><op:operator pos:line="4114" pos:column="29">-&gt;</op:operator><name pos:line="4114" pos:column="31">MarginClearAll</name></name><argument_list pos:line="4114" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block>
	<expr_stmt><expr><call><name><name pos:line="4117" pos:column="9">sel</name><op:operator pos:line="4117" pos:column="12">.</op:operator><name pos:line="4117" pos:column="13">Clear</name></name><argument_list pos:line="4117" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4118" pos:column="9">SetTopLine</name><argument_list pos:line="4118" pos:column="19">(<argument><expr><lit:literal type="number" pos:line="4118" pos:column="20">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4119" pos:column="9">SetVerticalScrollPos</name><argument_list pos:line="4119" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4120" pos:column="9">InvalidateStyleRedraw</name><argument_list pos:line="4120" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4123" pos:column="1">void</name></type> <name><name pos:line="4123" pos:column="6">Editor</name><op:operator pos:line="4123" pos:column="12">::</op:operator><name pos:line="4123" pos:column="14">ClearDocumentStyle</name></name><parameter_list pos:line="4123" pos:column="32">()</parameter_list> <block pos:line="4123" pos:column="35">{
	<decl_stmt><decl><type><name pos:line="4124" pos:column="9">Decoration</name> <type:modifier pos:line="4124" pos:column="20">*</type:modifier></type><name pos:line="4124" pos:column="21">deco</name> <init pos:line="4124" pos:column="26">= <expr><name><name pos:line="4124" pos:column="28">pdoc</name><op:operator pos:line="4124" pos:column="32">-&gt;</op:operator><name pos:line="4124" pos:column="34">decorations</name><op:operator pos:line="4124" pos:column="45">.</op:operator><name pos:line="4124" pos:column="46">root</name></name></expr></init></decl>;</decl_stmt>
	<while pos:line="4125" pos:column="9">while <condition pos:line="4125" pos:column="15">(<expr><name pos:line="4125" pos:column="16">deco</name></expr>)</condition> <block pos:line="4125" pos:column="22">{
		<comment type="line" pos:line="4126" pos:column="17">// Save next in case deco deleted</comment>
		<decl_stmt><decl><type><name pos:line="4127" pos:column="17">Decoration</name> <type:modifier pos:line="4127" pos:column="28">*</type:modifier></type><name pos:line="4127" pos:column="29">decoNext</name> <init pos:line="4127" pos:column="38">= <expr><name><name pos:line="4127" pos:column="40">deco</name><op:operator pos:line="4127" pos:column="44">-&gt;</op:operator><name pos:line="4127" pos:column="46">next</name></name></expr></init></decl>;</decl_stmt>
		<if pos:line="4128" pos:column="17">if <condition pos:line="4128" pos:column="20">(<expr><name><name pos:line="4128" pos:column="21">deco</name><op:operator pos:line="4128" pos:column="25">-&gt;</op:operator><name pos:line="4128" pos:column="27">indicator</name></name> <op:operator pos:line="4128" pos:column="37">&lt;</op:operator> <name pos:line="4128" pos:column="39">INDIC_CONTAINER</name></expr>)</condition><then pos:line="4128" pos:column="55"> <block pos:line="4128" pos:column="56">{
			<expr_stmt><expr><call><name><name pos:line="4129" pos:column="25">pdoc</name><op:operator pos:line="4129" pos:column="29">-&gt;</op:operator><name pos:line="4129" pos:column="31">decorations</name><op:operator pos:line="4129" pos:column="42">.</op:operator><name pos:line="4129" pos:column="43">SetCurrentIndicator</name></name><argument_list pos:line="4129" pos:column="62">(<argument><expr><name><name pos:line="4129" pos:column="63">deco</name><op:operator pos:line="4129" pos:column="67">-&gt;</op:operator><name pos:line="4129" pos:column="69">indicator</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4130" pos:column="25">pdoc</name><op:operator pos:line="4130" pos:column="29">-&gt;</op:operator><name pos:line="4130" pos:column="31">DecorationFillRange</name></name><argument_list pos:line="4130" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="4130" pos:column="51">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4130" pos:column="54">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4130" pos:column="57">pdoc</name><op:operator pos:line="4130" pos:column="61">-&gt;</op:operator><name pos:line="4130" pos:column="63">Length</name></name><argument_list pos:line="4130" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="4132" pos:column="17">deco</name> <op:operator pos:line="4132" pos:column="22">=</op:operator> <name pos:line="4132" pos:column="24">decoNext</name></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><call><name><name pos:line="4134" pos:column="9">pdoc</name><op:operator pos:line="4134" pos:column="13">-&gt;</op:operator><name pos:line="4134" pos:column="15">StartStyling</name></name><argument_list pos:line="4134" pos:column="27">(<argument><expr><lit:literal type="number" pos:line="4134" pos:column="28">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="char" pos:line="4134" pos:column="31">'\377'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4135" pos:column="9">pdoc</name><op:operator pos:line="4135" pos:column="13">-&gt;</op:operator><name pos:line="4135" pos:column="15">SetStyleFor</name></name><argument_list pos:line="4135" pos:column="26">(<argument><expr><call><name><name pos:line="4135" pos:column="27">pdoc</name><op:operator pos:line="4135" pos:column="31">-&gt;</op:operator><name pos:line="4135" pos:column="33">Length</name></name><argument_list pos:line="4135" pos:column="39">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4135" pos:column="43">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4136" pos:column="9">cs</name><op:operator pos:line="4136" pos:column="11">.</op:operator><name pos:line="4136" pos:column="12">ShowAll</name></name><argument_list pos:line="4136" pos:column="19">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4137" pos:column="9">pdoc</name><op:operator pos:line="4137" pos:column="13">-&gt;</op:operator><name pos:line="4137" pos:column="15">ClearLevels</name></name><argument_list pos:line="4137" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4140" pos:column="1">void</name></type> <name><name pos:line="4140" pos:column="6">Editor</name><op:operator pos:line="4140" pos:column="12">::</op:operator><name pos:line="4140" pos:column="14">CopyAllowLine</name></name><parameter_list pos:line="4140" pos:column="27">()</parameter_list> <block pos:line="4140" pos:column="30">{
	<decl_stmt><decl><type><name pos:line="4141" pos:column="9">SelectionText</name></type> <name pos:line="4141" pos:column="23">selectedText</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="4142" pos:column="9">CopySelectionRange</name><argument_list pos:line="4142" pos:column="27">(<argument><expr><op:operator pos:line="4142" pos:column="28">&amp;</op:operator><name pos:line="4142" pos:column="29">selectedText</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4142" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4143" pos:column="9">CopyToClipboard</name><argument_list pos:line="4143" pos:column="24">(<argument><expr><name pos:line="4143" pos:column="25">selectedText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4146" pos:column="1">void</name></type> <name><name pos:line="4146" pos:column="6">Editor</name><op:operator pos:line="4146" pos:column="12">::</op:operator><name pos:line="4146" pos:column="14">Cut</name></name><parameter_list pos:line="4146" pos:column="17">()</parameter_list> <block pos:line="4146" pos:column="20">{
	<expr_stmt><expr><call><name><name pos:line="4147" pos:column="9">pdoc</name><op:operator pos:line="4147" pos:column="13">-&gt;</op:operator><name pos:line="4147" pos:column="15">CheckReadOnly</name></name><argument_list pos:line="4147" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4148" pos:column="9">if <condition pos:line="4148" pos:column="12">(<expr><op:operator pos:line="4148" pos:column="13">!</op:operator><call><name><name pos:line="4148" pos:column="14">pdoc</name><op:operator pos:line="4148" pos:column="18">-&gt;</op:operator><name pos:line="4148" pos:column="20">IsReadOnly</name></name><argument_list pos:line="4148" pos:column="30">()</argument_list></call> <op:operator pos:line="4148" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="4148" pos:column="36">!</op:operator><call><name pos:line="4148" pos:column="37">SelectionContainsProtected</name><argument_list pos:line="4148" pos:column="63">()</argument_list></call></expr>)</condition><then pos:line="4148" pos:column="66"> <block pos:line="4148" pos:column="67">{
		<expr_stmt><expr><call><name pos:line="4149" pos:column="17">Copy</name><argument_list pos:line="4149" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4150" pos:column="17">ClearSelection</name><argument_list pos:line="4150" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4154" pos:column="1">void</name></type> <name><name pos:line="4154" pos:column="6">Editor</name><op:operator pos:line="4154" pos:column="12">::</op:operator><name pos:line="4154" pos:column="14">PasteRectangular</name></name><parameter_list pos:line="4154" pos:column="30">(<param><decl><type><name pos:line="4154" pos:column="31">SelectionPosition</name></type> <name pos:line="4154" pos:column="49">pos</name></decl></param>, <param><decl><type><specifier pos:line="4154" pos:column="54">const</specifier> <name pos:line="4154" pos:column="60">char</name> <type:modifier pos:line="4154" pos:column="65">*</type:modifier></type><name pos:line="4154" pos:column="66">ptr</name></decl></param>, <param><decl><type><name pos:line="4154" pos:column="71">int</name></type> <name pos:line="4154" pos:column="75">len</name></decl></param>)</parameter_list> <block pos:line="4154" pos:column="80">{
	<if pos:line="4155" pos:column="9">if <condition pos:line="4155" pos:column="12">(<expr><call><name><name pos:line="4155" pos:column="13">pdoc</name><op:operator pos:line="4155" pos:column="17">-&gt;</op:operator><name pos:line="4155" pos:column="19">IsReadOnly</name></name><argument_list pos:line="4155" pos:column="29">()</argument_list></call> <op:operator pos:line="4155" pos:column="32">||</op:operator> <call><name pos:line="4155" pos:column="35">SelectionContainsProtected</name><argument_list pos:line="4155" pos:column="61">()</argument_list></call></expr>)</condition><then pos:line="4155" pos:column="64"> <block pos:line="4155" pos:column="65">{
		<return pos:line="4156" pos:column="17">return;</return>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="4158" pos:column="9">sel</name><op:operator pos:line="4158" pos:column="12">.</op:operator><name pos:line="4158" pos:column="13">Clear</name></name><argument_list pos:line="4158" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4159" pos:column="9">sel</name><op:operator pos:line="4159" pos:column="12">.</op:operator><name pos:line="4159" pos:column="13">RangeMain</name></name><argument_list pos:line="4159" pos:column="22">()</argument_list></call> <op:operator pos:line="4159" pos:column="25">=</op:operator> <call><name pos:line="4159" pos:column="27">SelectionRange</name><argument_list pos:line="4159" pos:column="41">(<argument><expr><name pos:line="4159" pos:column="42">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="4160" pos:column="9">int</name></type> <name pos:line="4160" pos:column="13">line</name> <init pos:line="4160" pos:column="18">= <expr><call><name><name pos:line="4160" pos:column="20">pdoc</name><op:operator pos:line="4160" pos:column="24">-&gt;</op:operator><name pos:line="4160" pos:column="26">LineFromPosition</name></name><argument_list pos:line="4160" pos:column="42">(<argument><expr><call><name><name pos:line="4160" pos:column="43">sel</name><op:operator pos:line="4160" pos:column="46">.</op:operator><name pos:line="4160" pos:column="47">MainCaret</name></name><argument_list pos:line="4160" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<function_decl><type><name pos:line="4161" pos:column="9">UndoGroup</name></type> <name pos:line="4161" pos:column="19">ug</name><parameter_list pos:line="4161" pos:column="21">(<param><decl><type><name pos:line="4161" pos:column="22">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name><name pos:line="4162" pos:column="9">sel</name><op:operator pos:line="4162" pos:column="12">.</op:operator><name pos:line="4162" pos:column="13">RangeMain</name></name><argument_list pos:line="4162" pos:column="22">()</argument_list></call><op:operator pos:line="4162" pos:column="24">.</op:operator><name pos:line="4162" pos:column="25">caret</name> <op:operator pos:line="4162" pos:column="31">=</op:operator> <call><name pos:line="4162" pos:column="33">SelectionPosition</name><argument_list pos:line="4162" pos:column="50">(
		<argument><expr><call><name pos:line="4163" pos:column="17">InsertSpace</name><argument_list pos:line="4163" pos:column="28">(<argument><expr><call><name><name pos:line="4163" pos:column="29">sel</name><op:operator pos:line="4163" pos:column="32">.</op:operator><name pos:line="4163" pos:column="33">RangeMain</name></name><argument_list pos:line="4163" pos:column="42">()</argument_list></call><op:operator pos:line="4163" pos:column="44">.</op:operator><call><name><name pos:line="4163" pos:column="45">caret</name><op:operator pos:line="4163" pos:column="50">.</op:operator><name pos:line="4163" pos:column="51">Position</name></name><argument_list pos:line="4163" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4163" pos:column="63">sel</name><op:operator pos:line="4163" pos:column="66">.</op:operator><name pos:line="4163" pos:column="67">RangeMain</name></name><argument_list pos:line="4163" pos:column="76">()</argument_list></call><op:operator pos:line="4163" pos:column="78">.</op:operator><call><name><name pos:line="4163" pos:column="79">caret</name><op:operator pos:line="4163" pos:column="84">.</op:operator><name pos:line="4163" pos:column="85">VirtualSpace</name></name><argument_list pos:line="4163" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="4164" pos:column="9">int</name></type> <name pos:line="4164" pos:column="13">xInsert</name> <init pos:line="4164" pos:column="21">= <expr><call><name pos:line="4164" pos:column="23">XFromPosition</name><argument_list pos:line="4164" pos:column="36">(<argument><expr><call><name><name pos:line="4164" pos:column="37">sel</name><op:operator pos:line="4164" pos:column="40">.</op:operator><name pos:line="4164" pos:column="41">RangeMain</name></name><argument_list pos:line="4164" pos:column="50">()</argument_list></call><op:operator pos:line="4164" pos:column="52">.</op:operator><name pos:line="4164" pos:column="53">caret</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4165" pos:column="9">bool</name></type> <name pos:line="4165" pos:column="14">prevCr</name> <init pos:line="4165" pos:column="21">= <expr><lit:literal type="boolean" pos:line="4165" pos:column="23">false</lit:literal></expr></init></decl>;</decl_stmt>
	<while pos:line="4166" pos:column="9">while <condition pos:line="4166" pos:column="15">(<expr><op:operator pos:line="4166" pos:column="16">(</op:operator><name pos:line="4166" pos:column="17">len</name> <op:operator pos:line="4166" pos:column="21">&gt;</op:operator> <lit:literal type="number" pos:line="4166" pos:column="23">0</lit:literal><op:operator pos:line="4166" pos:column="24">)</op:operator> <op:operator pos:line="4166" pos:column="26">&amp;&amp;</op:operator> <call><name pos:line="4166" pos:column="29">IsEOLChar</name><argument_list pos:line="4166" pos:column="38">(<argument><expr><name><name pos:line="4166" pos:column="39">ptr</name><index pos:line="4166" pos:column="42">[<expr><name pos:line="4166" pos:column="43">len</name><op:operator pos:line="4166" pos:column="46">-</op:operator><lit:literal type="number" pos:line="4166" pos:column="47">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition>
		<expr_stmt><expr><name pos:line="4167" pos:column="17">len</name><op:operator pos:line="4167" pos:column="20">--</op:operator></expr>;</expr_stmt></while>
	<for pos:line="4168" pos:column="9">for (<init><decl><type><name pos:line="4168" pos:column="14">int</name></type> <name pos:line="4168" pos:column="18">i</name> <init pos:line="4168" pos:column="20">= <expr><lit:literal type="number" pos:line="4168" pos:column="22">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4168" pos:column="25">i</name> <op:operator pos:line="4168" pos:column="27">&lt;</op:operator> <name pos:line="4168" pos:column="29">len</name></expr>;</condition> <incr><expr><name pos:line="4168" pos:column="34">i</name><op:operator pos:line="4168" pos:column="35">++</op:operator></expr></incr>) <block pos:line="4168" pos:column="39">{
		<if pos:line="4169" pos:column="17">if <condition pos:line="4169" pos:column="20">(<expr><call><name pos:line="4169" pos:column="21">IsEOLChar</name><argument_list pos:line="4169" pos:column="30">(<argument><expr><name><name pos:line="4169" pos:column="31">ptr</name><index pos:line="4169" pos:column="34">[<expr><name pos:line="4169" pos:column="35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4169" pos:column="39"> <block pos:line="4169" pos:column="40">{
			<if pos:line="4170" pos:column="25">if <condition pos:line="4170" pos:column="28">(<expr><op:operator pos:line="4170" pos:column="29">(</op:operator><name><name pos:line="4170" pos:column="30">ptr</name><index pos:line="4170" pos:column="33">[<expr><name pos:line="4170" pos:column="34">i</name></expr>]</index></name> <op:operator pos:line="4170" pos:column="37">==</op:operator> <lit:literal type="char" pos:line="4170" pos:column="40">'\r'</lit:literal><op:operator pos:line="4170" pos:column="44">)</op:operator> <op:operator pos:line="4170" pos:column="46">||</op:operator> <op:operator pos:line="4170" pos:column="49">(</op:operator><op:operator pos:line="4170" pos:column="50">!</op:operator><name pos:line="4170" pos:column="51">prevCr</name><op:operator pos:line="4170" pos:column="57">)</op:operator></expr>)</condition><then pos:line="4170" pos:column="59">
				<expr_stmt><expr><name pos:line="4171" pos:column="33">line</name><op:operator pos:line="4171" pos:column="37">++</op:operator></expr>;</expr_stmt></then></if>
			<if pos:line="4172" pos:column="25">if <condition pos:line="4172" pos:column="28">(<expr><name pos:line="4172" pos:column="29">line</name> <op:operator pos:line="4172" pos:column="34">&gt;=</op:operator> <call><name><name pos:line="4172" pos:column="37">pdoc</name><op:operator pos:line="4172" pos:column="41">-&gt;</op:operator><name pos:line="4172" pos:column="43">LinesTotal</name></name><argument_list pos:line="4172" pos:column="53">()</argument_list></call></expr>)</condition><then pos:line="4172" pos:column="56"> <block pos:line="4172" pos:column="57">{
				<if pos:line="4173" pos:column="33">if <condition pos:line="4173" pos:column="36">(<expr><name><name pos:line="4173" pos:column="37">pdoc</name><op:operator pos:line="4173" pos:column="41">-&gt;</op:operator><name pos:line="4173" pos:column="43">eolMode</name></name> <op:operator pos:line="4173" pos:column="51">!=</op:operator> <name pos:line="4173" pos:column="54">SC_EOL_LF</name></expr>)</condition><then pos:line="4173" pos:column="64">
					<expr_stmt><expr><call><name><name pos:line="4174" pos:column="41">pdoc</name><op:operator pos:line="4174" pos:column="45">-&gt;</op:operator><name pos:line="4174" pos:column="47">InsertChar</name></name><argument_list pos:line="4174" pos:column="57">(<argument><expr><call><name><name pos:line="4174" pos:column="58">pdoc</name><op:operator pos:line="4174" pos:column="62">-&gt;</op:operator><name pos:line="4174" pos:column="64">Length</name></name><argument_list pos:line="4174" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="char" pos:line="4174" pos:column="74">'\r'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<if pos:line="4175" pos:column="33">if <condition pos:line="4175" pos:column="36">(<expr><name><name pos:line="4175" pos:column="37">pdoc</name><op:operator pos:line="4175" pos:column="41">-&gt;</op:operator><name pos:line="4175" pos:column="43">eolMode</name></name> <op:operator pos:line="4175" pos:column="51">!=</op:operator> <name pos:line="4175" pos:column="54">SC_EOL_CR</name></expr>)</condition><then pos:line="4175" pos:column="64">
					<expr_stmt><expr><call><name><name pos:line="4176" pos:column="41">pdoc</name><op:operator pos:line="4176" pos:column="45">-&gt;</op:operator><name pos:line="4176" pos:column="47">InsertChar</name></name><argument_list pos:line="4176" pos:column="57">(<argument><expr><call><name><name pos:line="4176" pos:column="58">pdoc</name><op:operator pos:line="4176" pos:column="62">-&gt;</op:operator><name pos:line="4176" pos:column="64">Length</name></name><argument_list pos:line="4176" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="char" pos:line="4176" pos:column="74">'\n'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></then></if>
			<comment type="line" pos:line="4178" pos:column="25">// Pad the end of lines with spaces if required</comment>
			<expr_stmt><expr><call><name><name pos:line="4179" pos:column="25">sel</name><op:operator pos:line="4179" pos:column="28">.</op:operator><name pos:line="4179" pos:column="29">RangeMain</name></name><argument_list pos:line="4179" pos:column="38">()</argument_list></call><op:operator pos:line="4179" pos:column="40">.</op:operator><call><name><name pos:line="4179" pos:column="41">caret</name><op:operator pos:line="4179" pos:column="46">.</op:operator><name pos:line="4179" pos:column="47">SetPosition</name></name><argument_list pos:line="4179" pos:column="58">(<argument><expr><call><name pos:line="4179" pos:column="59">PositionFromLineX</name><argument_list pos:line="4179" pos:column="76">(<argument><expr><name pos:line="4179" pos:column="77">line</name></expr></argument>, <argument><expr><name pos:line="4179" pos:column="83">xInsert</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="4180" pos:column="25">if <condition pos:line="4180" pos:column="28">(<expr><op:operator pos:line="4180" pos:column="29">(</op:operator><call><name pos:line="4180" pos:column="30">XFromPosition</name><argument_list pos:line="4180" pos:column="43">(<argument><expr><call><name><name pos:line="4180" pos:column="44">sel</name><op:operator pos:line="4180" pos:column="47">.</op:operator><name pos:line="4180" pos:column="48">MainCaret</name></name><argument_list pos:line="4180" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="4180" pos:column="61">&lt;</op:operator> <name pos:line="4180" pos:column="63">xInsert</name><op:operator pos:line="4180" pos:column="70">)</op:operator> <op:operator pos:line="4180" pos:column="72">&amp;&amp;</op:operator> <op:operator pos:line="4180" pos:column="75">(</op:operator><name pos:line="4180" pos:column="76">i</name> <op:operator pos:line="4180" pos:column="78">+</op:operator> <lit:literal type="number" pos:line="4180" pos:column="80">1</lit:literal> <op:operator pos:line="4180" pos:column="82">&lt;</op:operator> <name pos:line="4180" pos:column="84">len</name><op:operator pos:line="4180" pos:column="87">)</op:operator></expr>)</condition><then pos:line="4180" pos:column="89"> <block pos:line="4180" pos:column="90">{
				<while pos:line="4181" pos:column="33">while <condition pos:line="4181" pos:column="39">(<expr><call><name pos:line="4181" pos:column="40">XFromPosition</name><argument_list pos:line="4181" pos:column="53">(<argument><expr><call><name><name pos:line="4181" pos:column="54">sel</name><op:operator pos:line="4181" pos:column="57">.</op:operator><name pos:line="4181" pos:column="58">MainCaret</name></name><argument_list pos:line="4181" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="4181" pos:column="71">&lt;</op:operator> <name pos:line="4181" pos:column="73">xInsert</name></expr>)</condition> <block pos:line="4181" pos:column="82">{
					<expr_stmt><expr><call><name><name pos:line="4182" pos:column="41">pdoc</name><op:operator pos:line="4182" pos:column="45">-&gt;</op:operator><name pos:line="4182" pos:column="47">InsertChar</name></name><argument_list pos:line="4182" pos:column="57">(<argument><expr><call><name><name pos:line="4182" pos:column="58">sel</name><op:operator pos:line="4182" pos:column="61">.</op:operator><name pos:line="4182" pos:column="62">MainCaret</name></name><argument_list pos:line="4182" pos:column="71">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="char" pos:line="4182" pos:column="75">' '</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="4183" pos:column="41">sel</name><op:operator pos:line="4183" pos:column="44">.</op:operator><name pos:line="4183" pos:column="45">RangeMain</name></name><argument_list pos:line="4183" pos:column="54">()</argument_list></call><op:operator pos:line="4183" pos:column="56">.</op:operator><call><name><name pos:line="4183" pos:column="57">caret</name><op:operator pos:line="4183" pos:column="62">.</op:operator><name pos:line="4183" pos:column="63">Add</name></name><argument_list pos:line="4183" pos:column="66">(<argument><expr><lit:literal type="number" pos:line="4183" pos:column="67">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></while>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="4186" pos:column="25">prevCr</name> <op:operator pos:line="4186" pos:column="32">=</op:operator> <name><name pos:line="4186" pos:column="34">ptr</name><index pos:line="4186" pos:column="37">[<expr><name pos:line="4186" pos:column="38">i</name></expr>]</index></name> <op:operator pos:line="4186" pos:column="41">==</op:operator> <lit:literal type="char" pos:line="4186" pos:column="44">'\r'</lit:literal></expr>;</expr_stmt>
		}</block></then> <else pos:line="4187" pos:column="19">else <block pos:line="4187" pos:column="24">{
			<expr_stmt><expr><call><name><name pos:line="4188" pos:column="25">pdoc</name><op:operator pos:line="4188" pos:column="29">-&gt;</op:operator><name pos:line="4188" pos:column="31">InsertString</name></name><argument_list pos:line="4188" pos:column="43">(<argument><expr><call><name><name pos:line="4188" pos:column="44">sel</name><op:operator pos:line="4188" pos:column="47">.</op:operator><name pos:line="4188" pos:column="48">MainCaret</name></name><argument_list pos:line="4188" pos:column="57">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4188" pos:column="61">ptr</name> <op:operator pos:line="4188" pos:column="65">+</op:operator> <name pos:line="4188" pos:column="67">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4188" pos:column="70">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4189" pos:column="25">sel</name><op:operator pos:line="4189" pos:column="28">.</op:operator><name pos:line="4189" pos:column="29">RangeMain</name></name><argument_list pos:line="4189" pos:column="38">()</argument_list></call><op:operator pos:line="4189" pos:column="40">.</op:operator><call><name><name pos:line="4189" pos:column="41">caret</name><op:operator pos:line="4189" pos:column="46">.</op:operator><name pos:line="4189" pos:column="47">Add</name></name><argument_list pos:line="4189" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="4189" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4190" pos:column="25">prevCr</name> <op:operator pos:line="4190" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="4190" pos:column="34">false</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
	<expr_stmt><expr><call><name pos:line="4193" pos:column="9">SetEmptySelection</name><argument_list pos:line="4193" pos:column="26">(<argument><expr><name pos:line="4193" pos:column="27">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4196" pos:column="1">bool</name></type> <name><name pos:line="4196" pos:column="6">Editor</name><op:operator pos:line="4196" pos:column="12">::</op:operator><name pos:line="4196" pos:column="14">CanPaste</name></name><parameter_list pos:line="4196" pos:column="22">()</parameter_list> <block pos:line="4196" pos:column="25">{
	<return pos:line="4197" pos:column="9">return <expr><op:operator pos:line="4197" pos:column="16">!</op:operator><call><name><name pos:line="4197" pos:column="17">pdoc</name><op:operator pos:line="4197" pos:column="21">-&gt;</op:operator><name pos:line="4197" pos:column="23">IsReadOnly</name></name><argument_list pos:line="4197" pos:column="33">()</argument_list></call> <op:operator pos:line="4197" pos:column="36">&amp;&amp;</op:operator> <op:operator pos:line="4197" pos:column="39">!</op:operator><call><name pos:line="4197" pos:column="40">SelectionContainsProtected</name><argument_list pos:line="4197" pos:column="66">()</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="4200" pos:column="1">void</name></type> <name><name pos:line="4200" pos:column="6">Editor</name><op:operator pos:line="4200" pos:column="12">::</op:operator><name pos:line="4200" pos:column="14">Clear</name></name><parameter_list pos:line="4200" pos:column="19">()</parameter_list> <block pos:line="4200" pos:column="22">{
	<comment type="line" pos:line="4201" pos:column="9">// If multiple selections, don't delete EOLS</comment>
	<if pos:line="4202" pos:column="9">if <condition pos:line="4202" pos:column="12">(<expr><call><name><name pos:line="4202" pos:column="13">sel</name><op:operator pos:line="4202" pos:column="16">.</op:operator><name pos:line="4202" pos:column="17">Empty</name></name><argument_list pos:line="4202" pos:column="22">()</argument_list></call></expr>)</condition><then pos:line="4202" pos:column="25"> <block pos:line="4202" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="4203" pos:column="17">bool</name></type> <name pos:line="4203" pos:column="22">singleVirtual</name> <init pos:line="4203" pos:column="36">= <expr><lit:literal type="boolean" pos:line="4203" pos:column="38">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="4204" pos:column="17">if <condition pos:line="4204" pos:column="20">(<expr><op:operator pos:line="4204" pos:column="21">(</op:operator><call><name><name pos:line="4204" pos:column="22">sel</name><op:operator pos:line="4204" pos:column="25">.</op:operator><name pos:line="4204" pos:column="26">Count</name></name><argument_list pos:line="4204" pos:column="31">()</argument_list></call> <op:operator pos:line="4204" pos:column="34">==</op:operator> <lit:literal type="number" pos:line="4204" pos:column="37">1</lit:literal><op:operator pos:line="4204" pos:column="38">)</op:operator> <op:operator pos:line="4204" pos:column="40">&amp;&amp;</op:operator>
			<op:operator pos:line="4205" pos:column="25">!</op:operator><call><name pos:line="4205" pos:column="26">RangeContainsProtected</name><argument_list pos:line="4205" pos:column="48">(<argument><expr><call><name><name pos:line="4205" pos:column="49">sel</name><op:operator pos:line="4205" pos:column="52">.</op:operator><name pos:line="4205" pos:column="53">MainCaret</name></name><argument_list pos:line="4205" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4205" pos:column="66">sel</name><op:operator pos:line="4205" pos:column="69">.</op:operator><name pos:line="4205" pos:column="70">MainCaret</name></name><argument_list pos:line="4205" pos:column="79">()</argument_list></call> <op:operator pos:line="4205" pos:column="82">+</op:operator> <lit:literal type="number" pos:line="4205" pos:column="84">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="4205" pos:column="87">&amp;&amp;</op:operator>
			<call><name><name pos:line="4206" pos:column="25">sel</name><op:operator pos:line="4206" pos:column="28">.</op:operator><name pos:line="4206" pos:column="29">RangeMain</name></name><argument_list pos:line="4206" pos:column="38">()</argument_list></call><op:operator pos:line="4206" pos:column="40">.</op:operator><call><name pos:line="4206" pos:column="41">Start</name><argument_list pos:line="4206" pos:column="46">()</argument_list></call><op:operator pos:line="4206" pos:column="48">.</op:operator><call><name pos:line="4206" pos:column="49">VirtualSpace</name><argument_list pos:line="4206" pos:column="61">()</argument_list></call></expr>)</condition><then pos:line="4206" pos:column="64"> <block pos:line="4206" pos:column="65">{
			<expr_stmt><expr><name pos:line="4207" pos:column="25">singleVirtual</name> <op:operator pos:line="4207" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="4207" pos:column="41">true</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="4209" pos:column="17">UndoGroup</name></type> <name pos:line="4209" pos:column="27">ug</name><argument_list pos:line="4209" pos:column="29">(<argument><expr><name pos:line="4209" pos:column="30">pdoc</name></expr></argument>, <argument><expr><op:operator pos:line="4209" pos:column="36">(</op:operator><call><name><name pos:line="4209" pos:column="37">sel</name><op:operator pos:line="4209" pos:column="40">.</op:operator><name pos:line="4209" pos:column="41">Count</name></name><argument_list pos:line="4209" pos:column="46">()</argument_list></call> <op:operator pos:line="4209" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="4209" pos:column="51">1</lit:literal><op:operator pos:line="4209" pos:column="52">)</op:operator> <op:operator pos:line="4209" pos:column="54">||</op:operator> <name pos:line="4209" pos:column="57">singleVirtual</name></expr></argument>)</argument_list></decl>;</decl_stmt>
		<for pos:line="4210" pos:column="17">for (<init><decl><type><name pos:line="4210" pos:column="22">size_t</name></type> <name pos:line="4210" pos:column="29">r</name><init pos:line="4210" pos:column="30">=<expr><lit:literal type="number" pos:line="4210" pos:column="31">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4210" pos:column="34">r</name><op:operator pos:line="4210" pos:column="35">&lt;</op:operator><call><name><name pos:line="4210" pos:column="36">sel</name><op:operator pos:line="4210" pos:column="39">.</op:operator><name pos:line="4210" pos:column="40">Count</name></name><argument_list pos:line="4210" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4210" pos:column="49">r</name><op:operator pos:line="4210" pos:column="50">++</op:operator></expr></incr>) <block pos:line="4210" pos:column="54">{
			<if pos:line="4211" pos:column="25">if <condition pos:line="4211" pos:column="28">(<expr><op:operator pos:line="4211" pos:column="29">!</op:operator><call><name pos:line="4211" pos:column="30">RangeContainsProtected</name><argument_list pos:line="4211" pos:column="52">(<argument><expr><call><name><name pos:line="4211" pos:column="53">sel</name><op:operator pos:line="4211" pos:column="56">.</op:operator><name pos:line="4211" pos:column="57">Range</name></name><argument_list pos:line="4211" pos:column="62">(<argument><expr><name pos:line="4211" pos:column="63">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4211" pos:column="65">.</op:operator><call><name><name pos:line="4211" pos:column="66">caret</name><op:operator pos:line="4211" pos:column="71">.</op:operator><name pos:line="4211" pos:column="72">Position</name></name><argument_list pos:line="4211" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4211" pos:column="84">sel</name><op:operator pos:line="4211" pos:column="87">.</op:operator><name pos:line="4211" pos:column="88">Range</name></name><argument_list pos:line="4211" pos:column="93">(<argument><expr><name pos:line="4211" pos:column="94">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4211" pos:column="96">.</op:operator><call><name><name pos:line="4211" pos:column="97">caret</name><op:operator pos:line="4211" pos:column="102">.</op:operator><name pos:line="4211" pos:column="103">Position</name></name><argument_list pos:line="4211" pos:column="111">()</argument_list></call> <op:operator pos:line="4211" pos:column="114">+</op:operator> <lit:literal type="number" pos:line="4211" pos:column="116">1</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4211" pos:column="119"> <block pos:line="4211" pos:column="120">{
				<if pos:line="4212" pos:column="33">if <condition pos:line="4212" pos:column="36">(<expr><call><name><name pos:line="4212" pos:column="37">sel</name><op:operator pos:line="4212" pos:column="40">.</op:operator><name pos:line="4212" pos:column="41">Range</name></name><argument_list pos:line="4212" pos:column="46">(<argument><expr><name pos:line="4212" pos:column="47">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4212" pos:column="49">.</op:operator><call><name pos:line="4212" pos:column="50">Start</name><argument_list pos:line="4212" pos:column="55">()</argument_list></call><op:operator pos:line="4212" pos:column="57">.</op:operator><call><name pos:line="4212" pos:column="58">VirtualSpace</name><argument_list pos:line="4212" pos:column="70">()</argument_list></call></expr>)</condition><then pos:line="4212" pos:column="73"> <block pos:line="4212" pos:column="74">{
					<if pos:line="4213" pos:column="41">if <condition pos:line="4213" pos:column="44">(<expr><call><name><name pos:line="4213" pos:column="45">sel</name><op:operator pos:line="4213" pos:column="48">.</op:operator><name pos:line="4213" pos:column="49">Range</name></name><argument_list pos:line="4213" pos:column="54">(<argument><expr><name pos:line="4213" pos:column="55">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4213" pos:column="57">.</op:operator><name pos:line="4213" pos:column="58">anchor</name> <op:operator pos:line="4213" pos:column="65">&lt;</op:operator> <call><name><name pos:line="4213" pos:column="67">sel</name><op:operator pos:line="4213" pos:column="70">.</op:operator><name pos:line="4213" pos:column="71">Range</name></name><argument_list pos:line="4213" pos:column="76">(<argument><expr><name pos:line="4213" pos:column="77">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4213" pos:column="79">.</op:operator><name pos:line="4213" pos:column="80">caret</name></expr>)</condition><then pos:line="4213" pos:column="86">
						<expr_stmt><expr><call><name><name pos:line="4214" pos:column="49">sel</name><op:operator pos:line="4214" pos:column="52">.</op:operator><name pos:line="4214" pos:column="53">Range</name></name><argument_list pos:line="4214" pos:column="58">(<argument><expr><name pos:line="4214" pos:column="59">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="4214" pos:column="62">=</op:operator> <call><name pos:line="4214" pos:column="64">SelectionPosition</name><argument_list pos:line="4214" pos:column="81">(<argument><expr><call><name pos:line="4214" pos:column="82">InsertSpace</name><argument_list pos:line="4214" pos:column="93">(<argument><expr><call><name><name pos:line="4214" pos:column="94">sel</name><op:operator pos:line="4214" pos:column="97">.</op:operator><name pos:line="4214" pos:column="98">Range</name></name><argument_list pos:line="4214" pos:column="103">(<argument><expr><name pos:line="4214" pos:column="104">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4214" pos:column="106">.</op:operator><call><name><name pos:line="4214" pos:column="107">anchor</name><op:operator pos:line="4214" pos:column="113">.</op:operator><name pos:line="4214" pos:column="114">Position</name></name><argument_list pos:line="4214" pos:column="122">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4214" pos:column="126">sel</name><op:operator pos:line="4214" pos:column="129">.</op:operator><name pos:line="4214" pos:column="130">Range</name></name><argument_list pos:line="4214" pos:column="135">(<argument><expr><name pos:line="4214" pos:column="136">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4214" pos:column="138">.</op:operator><call><name><name pos:line="4214" pos:column="139">anchor</name><op:operator pos:line="4214" pos:column="145">.</op:operator><name pos:line="4214" pos:column="146">VirtualSpace</name></name><argument_list pos:line="4214" pos:column="158">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
					<else pos:line="4215" pos:column="41">else
						<expr_stmt><expr><call><name><name pos:line="4216" pos:column="49">sel</name><op:operator pos:line="4216" pos:column="52">.</op:operator><name pos:line="4216" pos:column="53">Range</name></name><argument_list pos:line="4216" pos:column="58">(<argument><expr><name pos:line="4216" pos:column="59">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="4216" pos:column="62">=</op:operator> <call><name pos:line="4216" pos:column="64">SelectionPosition</name><argument_list pos:line="4216" pos:column="81">(<argument><expr><call><name pos:line="4216" pos:column="82">InsertSpace</name><argument_list pos:line="4216" pos:column="93">(<argument><expr><call><name><name pos:line="4216" pos:column="94">sel</name><op:operator pos:line="4216" pos:column="97">.</op:operator><name pos:line="4216" pos:column="98">Range</name></name><argument_list pos:line="4216" pos:column="103">(<argument><expr><name pos:line="4216" pos:column="104">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4216" pos:column="106">.</op:operator><call><name><name pos:line="4216" pos:column="107">caret</name><op:operator pos:line="4216" pos:column="112">.</op:operator><name pos:line="4216" pos:column="113">Position</name></name><argument_list pos:line="4216" pos:column="121">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4216" pos:column="125">sel</name><op:operator pos:line="4216" pos:column="128">.</op:operator><name pos:line="4216" pos:column="129">Range</name></name><argument_list pos:line="4216" pos:column="134">(<argument><expr><name pos:line="4216" pos:column="135">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4216" pos:column="137">.</op:operator><call><name><name pos:line="4216" pos:column="138">caret</name><op:operator pos:line="4216" pos:column="143">.</op:operator><name pos:line="4216" pos:column="144">VirtualSpace</name></name><argument_list pos:line="4216" pos:column="156">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
				}</block></then></if>
				<if pos:line="4218" pos:column="33">if <condition pos:line="4218" pos:column="36">(<expr><op:operator pos:line="4218" pos:column="37">(</op:operator><call><name><name pos:line="4218" pos:column="38">sel</name><op:operator pos:line="4218" pos:column="41">.</op:operator><name pos:line="4218" pos:column="42">Count</name></name><argument_list pos:line="4218" pos:column="47">()</argument_list></call> <op:operator pos:line="4218" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="4218" pos:column="53">1</lit:literal><op:operator pos:line="4218" pos:column="54">)</op:operator> <op:operator pos:line="4218" pos:column="56">||</op:operator> <op:operator pos:line="4218" pos:column="59">!</op:operator><call><name pos:line="4218" pos:column="60">IsEOLChar</name><argument_list pos:line="4218" pos:column="69">(<argument><expr><call><name><name pos:line="4218" pos:column="70">pdoc</name><op:operator pos:line="4218" pos:column="74">-&gt;</op:operator><name pos:line="4218" pos:column="76">CharAt</name></name><argument_list pos:line="4218" pos:column="82">(<argument><expr><call><name><name pos:line="4218" pos:column="83">sel</name><op:operator pos:line="4218" pos:column="86">.</op:operator><name pos:line="4218" pos:column="87">Range</name></name><argument_list pos:line="4218" pos:column="92">(<argument><expr><name pos:line="4218" pos:column="93">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4218" pos:column="95">.</op:operator><call><name><name pos:line="4218" pos:column="96">caret</name><op:operator pos:line="4218" pos:column="101">.</op:operator><name pos:line="4218" pos:column="102">Position</name></name><argument_list pos:line="4218" pos:column="110">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4218" pos:column="115"> <block pos:line="4218" pos:column="116">{
					<expr_stmt><expr><call><name><name pos:line="4219" pos:column="41">pdoc</name><op:operator pos:line="4219" pos:column="45">-&gt;</op:operator><name pos:line="4219" pos:column="47">DelChar</name></name><argument_list pos:line="4219" pos:column="54">(<argument><expr><call><name><name pos:line="4219" pos:column="55">sel</name><op:operator pos:line="4219" pos:column="58">.</op:operator><name pos:line="4219" pos:column="59">Range</name></name><argument_list pos:line="4219" pos:column="64">(<argument><expr><name pos:line="4219" pos:column="65">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4219" pos:column="67">.</op:operator><call><name><name pos:line="4219" pos:column="68">caret</name><op:operator pos:line="4219" pos:column="73">.</op:operator><name pos:line="4219" pos:column="74">Position</name></name><argument_list pos:line="4219" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="4220" pos:column="41">sel</name><op:operator pos:line="4220" pos:column="44">.</op:operator><name pos:line="4220" pos:column="45">Range</name></name><argument_list pos:line="4220" pos:column="50">(<argument><expr><name pos:line="4220" pos:column="51">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4220" pos:column="53">.</op:operator><call><name pos:line="4220" pos:column="54">ClearVirtualSpace</name><argument_list pos:line="4220" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>  <comment type="line" pos:line="4221" pos:column="36">// else multiple selection so don't eat line ends</comment>
			}</block></then> <else pos:line="4222" pos:column="27">else <block pos:line="4222" pos:column="32">{
				<expr_stmt><expr><call><name><name pos:line="4223" pos:column="33">sel</name><op:operator pos:line="4223" pos:column="36">.</op:operator><name pos:line="4223" pos:column="37">Range</name></name><argument_list pos:line="4223" pos:column="42">(<argument><expr><name pos:line="4223" pos:column="43">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4223" pos:column="45">.</op:operator><call><name pos:line="4223" pos:column="46">ClearVirtualSpace</name><argument_list pos:line="4223" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></for>
	}</block></then> <else pos:line="4226" pos:column="11">else <block pos:line="4226" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="4227" pos:column="17">ClearSelection</name><argument_list pos:line="4227" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><name pos:line="4229" pos:column="9">sel</name><op:operator pos:line="4229" pos:column="12">.</op:operator><name pos:line="4229" pos:column="13">RemoveDuplicates</name></name><argument_list pos:line="4229" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4232" pos:column="1">void</name></type> <name><name pos:line="4232" pos:column="6">Editor</name><op:operator pos:line="4232" pos:column="12">::</op:operator><name pos:line="4232" pos:column="14">SelectAll</name></name><parameter_list pos:line="4232" pos:column="23">()</parameter_list> <block pos:line="4232" pos:column="26">{
	<expr_stmt><expr><call><name><name pos:line="4233" pos:column="9">sel</name><op:operator pos:line="4233" pos:column="12">.</op:operator><name pos:line="4233" pos:column="13">Clear</name></name><argument_list pos:line="4233" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4234" pos:column="9">SetSelection</name><argument_list pos:line="4234" pos:column="21">(<argument><expr><lit:literal type="number" pos:line="4234" pos:column="22">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4234" pos:column="25">pdoc</name><op:operator pos:line="4234" pos:column="29">-&gt;</op:operator><name pos:line="4234" pos:column="31">Length</name></name><argument_list pos:line="4234" pos:column="37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4235" pos:column="9">Redraw</name><argument_list pos:line="4235" pos:column="15">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4238" pos:column="1">void</name></type> <name><name pos:line="4238" pos:column="6">Editor</name><op:operator pos:line="4238" pos:column="12">::</op:operator><name pos:line="4238" pos:column="14">Undo</name></name><parameter_list pos:line="4238" pos:column="18">()</parameter_list> <block pos:line="4238" pos:column="21">{
	<if pos:line="4239" pos:column="9">if <condition pos:line="4239" pos:column="12">(<expr><call><name><name pos:line="4239" pos:column="13">pdoc</name><op:operator pos:line="4239" pos:column="17">-&gt;</op:operator><name pos:line="4239" pos:column="19">CanUndo</name></name><argument_list pos:line="4239" pos:column="26">()</argument_list></call></expr>)</condition><then pos:line="4239" pos:column="29"> <block pos:line="4239" pos:column="30">{
		<expr_stmt><expr><call><name pos:line="4240" pos:column="17">InvalidateCaret</name><argument_list pos:line="4240" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="4241" pos:column="17">int</name></type> <name pos:line="4241" pos:column="21">newPos</name> <init pos:line="4241" pos:column="28">= <expr><call><name><name pos:line="4241" pos:column="30">pdoc</name><op:operator pos:line="4241" pos:column="34">-&gt;</op:operator><name pos:line="4241" pos:column="36">Undo</name></name><argument_list pos:line="4241" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4242" pos:column="17">if <condition pos:line="4242" pos:column="20">(<expr><name pos:line="4242" pos:column="21">newPos</name> <op:operator pos:line="4242" pos:column="28">&gt;=</op:operator> <lit:literal type="number" pos:line="4242" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="4242" pos:column="33">
			<expr_stmt><expr><call><name pos:line="4243" pos:column="25">SetEmptySelection</name><argument_list pos:line="4243" pos:column="42">(<argument><expr><name pos:line="4243" pos:column="43">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="4244" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="4244" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4248" pos:column="1">void</name></type> <name><name pos:line="4248" pos:column="6">Editor</name><op:operator pos:line="4248" pos:column="12">::</op:operator><name pos:line="4248" pos:column="14">Redo</name></name><parameter_list pos:line="4248" pos:column="18">()</parameter_list> <block pos:line="4248" pos:column="21">{
	<if pos:line="4249" pos:column="9">if <condition pos:line="4249" pos:column="12">(<expr><call><name><name pos:line="4249" pos:column="13">pdoc</name><op:operator pos:line="4249" pos:column="17">-&gt;</op:operator><name pos:line="4249" pos:column="19">CanRedo</name></name><argument_list pos:line="4249" pos:column="26">()</argument_list></call></expr>)</condition><then pos:line="4249" pos:column="29"> <block pos:line="4249" pos:column="30">{
		<decl_stmt><decl><type><name pos:line="4250" pos:column="17">int</name></type> <name pos:line="4250" pos:column="21">newPos</name> <init pos:line="4250" pos:column="28">= <expr><call><name><name pos:line="4250" pos:column="30">pdoc</name><op:operator pos:line="4250" pos:column="34">-&gt;</op:operator><name pos:line="4250" pos:column="36">Redo</name></name><argument_list pos:line="4250" pos:column="40">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4251" pos:column="17">if <condition pos:line="4251" pos:column="20">(<expr><name pos:line="4251" pos:column="21">newPos</name> <op:operator pos:line="4251" pos:column="28">&gt;=</op:operator> <lit:literal type="number" pos:line="4251" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="4251" pos:column="33">
			<expr_stmt><expr><call><name pos:line="4252" pos:column="25">SetEmptySelection</name><argument_list pos:line="4252" pos:column="42">(<argument><expr><name pos:line="4252" pos:column="43">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="4253" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="4253" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4257" pos:column="1">void</name></type> <name><name pos:line="4257" pos:column="6">Editor</name><op:operator pos:line="4257" pos:column="12">::</op:operator><name pos:line="4257" pos:column="14">DelChar</name></name><parameter_list pos:line="4257" pos:column="21">()</parameter_list> <block pos:line="4257" pos:column="24">{
	<if pos:line="4258" pos:column="9">if <condition pos:line="4258" pos:column="12">(<expr><op:operator pos:line="4258" pos:column="13">!</op:operator><call><name pos:line="4258" pos:column="14">RangeContainsProtected</name><argument_list pos:line="4258" pos:column="36">(<argument><expr><call><name><name pos:line="4258" pos:column="37">sel</name><op:operator pos:line="4258" pos:column="40">.</op:operator><name pos:line="4258" pos:column="41">MainCaret</name></name><argument_list pos:line="4258" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4258" pos:column="54">sel</name><op:operator pos:line="4258" pos:column="57">.</op:operator><name pos:line="4258" pos:column="58">MainCaret</name></name><argument_list pos:line="4258" pos:column="67">()</argument_list></call> <op:operator pos:line="4258" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="4258" pos:column="72">1</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4258" pos:column="75"> <block pos:line="4258" pos:column="76">{
		<expr_stmt><expr><call><name><name pos:line="4259" pos:column="17">pdoc</name><op:operator pos:line="4259" pos:column="21">-&gt;</op:operator><name pos:line="4259" pos:column="23">DelChar</name></name><argument_list pos:line="4259" pos:column="30">(<argument><expr><call><name><name pos:line="4259" pos:column="31">sel</name><op:operator pos:line="4259" pos:column="34">.</op:operator><name pos:line="4259" pos:column="35">MainCaret</name></name><argument_list pos:line="4259" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<comment type="line" pos:line="4261" pos:column="9">// Avoid blinking during rapid typing:</comment>
	<expr_stmt><expr><call><name pos:line="4262" pos:column="9">ShowCaretAtCurrentPosition</name><argument_list pos:line="4262" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4265" pos:column="1">void</name></type> <name><name pos:line="4265" pos:column="6">Editor</name><op:operator pos:line="4265" pos:column="12">::</op:operator><name pos:line="4265" pos:column="14">DelCharBack</name></name><parameter_list pos:line="4265" pos:column="25">(<param><decl><type><name pos:line="4265" pos:column="26">bool</name></type> <name pos:line="4265" pos:column="31">allowLineStartDeletion</name></decl></param>)</parameter_list> <block pos:line="4265" pos:column="55">{
	<if pos:line="4266" pos:column="9">if <condition pos:line="4266" pos:column="12">(<expr><op:operator pos:line="4266" pos:column="13">!</op:operator><call><name><name pos:line="4266" pos:column="14">sel</name><op:operator pos:line="4266" pos:column="17">.</op:operator><name pos:line="4266" pos:column="18">IsRectangular</name></name><argument_list pos:line="4266" pos:column="31">()</argument_list></call></expr>)</condition><then pos:line="4266" pos:column="34">
		<expr_stmt><expr><call><name pos:line="4267" pos:column="17">FilterSelections</name><argument_list pos:line="4267" pos:column="33">()</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="4268" pos:column="9">if <condition pos:line="4268" pos:column="12">(<expr><call><name><name pos:line="4268" pos:column="13">sel</name><op:operator pos:line="4268" pos:column="16">.</op:operator><name pos:line="4268" pos:column="17">IsRectangular</name></name><argument_list pos:line="4268" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="4268" pos:column="33">
		<expr_stmt><expr><name pos:line="4269" pos:column="17">allowLineStartDeletion</name> <op:operator pos:line="4269" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="4269" pos:column="42">false</lit:literal></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="4270" pos:column="9">UndoGroup</name></type> <name pos:line="4270" pos:column="19">ug</name><argument_list pos:line="4270" pos:column="21">(<argument><expr><name pos:line="4270" pos:column="22">pdoc</name></expr></argument>, <argument><expr><op:operator pos:line="4270" pos:column="28">(</op:operator><call><name><name pos:line="4270" pos:column="29">sel</name><op:operator pos:line="4270" pos:column="32">.</op:operator><name pos:line="4270" pos:column="33">Count</name></name><argument_list pos:line="4270" pos:column="38">()</argument_list></call> <op:operator pos:line="4270" pos:column="41">&gt;</op:operator> <lit:literal type="number" pos:line="4270" pos:column="43">1</lit:literal><op:operator pos:line="4270" pos:column="44">)</op:operator> <op:operator pos:line="4270" pos:column="46">||</op:operator> <op:operator pos:line="4270" pos:column="49">!</op:operator><call><name><name pos:line="4270" pos:column="50">sel</name><op:operator pos:line="4270" pos:column="53">.</op:operator><name pos:line="4270" pos:column="54">Empty</name></name><argument_list pos:line="4270" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<if pos:line="4271" pos:column="9">if <condition pos:line="4271" pos:column="12">(<expr><call><name><name pos:line="4271" pos:column="13">sel</name><op:operator pos:line="4271" pos:column="16">.</op:operator><name pos:line="4271" pos:column="17">Empty</name></name><argument_list pos:line="4271" pos:column="22">()</argument_list></call></expr>)</condition><then pos:line="4271" pos:column="25"> <block pos:line="4271" pos:column="26">{
		<for pos:line="4272" pos:column="17">for (<init><decl><type><name pos:line="4272" pos:column="22">size_t</name></type> <name pos:line="4272" pos:column="29">r</name><init pos:line="4272" pos:column="30">=<expr><lit:literal type="number" pos:line="4272" pos:column="31">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4272" pos:column="34">r</name><op:operator pos:line="4272" pos:column="35">&lt;</op:operator><call><name><name pos:line="4272" pos:column="36">sel</name><op:operator pos:line="4272" pos:column="39">.</op:operator><name pos:line="4272" pos:column="40">Count</name></name><argument_list pos:line="4272" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4272" pos:column="49">r</name><op:operator pos:line="4272" pos:column="50">++</op:operator></expr></incr>) <block pos:line="4272" pos:column="54">{
			<if pos:line="4273" pos:column="25">if <condition pos:line="4273" pos:column="28">(<expr><op:operator pos:line="4273" pos:column="29">!</op:operator><call><name pos:line="4273" pos:column="30">RangeContainsProtected</name><argument_list pos:line="4273" pos:column="52">(<argument><expr><call><name><name pos:line="4273" pos:column="53">sel</name><op:operator pos:line="4273" pos:column="56">.</op:operator><name pos:line="4273" pos:column="57">Range</name></name><argument_list pos:line="4273" pos:column="62">(<argument><expr><name pos:line="4273" pos:column="63">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4273" pos:column="65">.</op:operator><call><name><name pos:line="4273" pos:column="66">caret</name><op:operator pos:line="4273" pos:column="71">.</op:operator><name pos:line="4273" pos:column="72">Position</name></name><argument_list pos:line="4273" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4273" pos:column="84">sel</name><op:operator pos:line="4273" pos:column="87">.</op:operator><name pos:line="4273" pos:column="88">Range</name></name><argument_list pos:line="4273" pos:column="93">(<argument><expr><name pos:line="4273" pos:column="94">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4273" pos:column="96">.</op:operator><call><name><name pos:line="4273" pos:column="97">caret</name><op:operator pos:line="4273" pos:column="102">.</op:operator><name pos:line="4273" pos:column="103">Position</name></name><argument_list pos:line="4273" pos:column="111">()</argument_list></call> <op:operator pos:line="4273" pos:column="114">+</op:operator> <lit:literal type="number" pos:line="4273" pos:column="116">1</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4273" pos:column="119"> <block pos:line="4273" pos:column="120">{
				<if pos:line="4274" pos:column="33">if <condition pos:line="4274" pos:column="36">(<expr><call><name><name pos:line="4274" pos:column="37">sel</name><op:operator pos:line="4274" pos:column="40">.</op:operator><name pos:line="4274" pos:column="41">Range</name></name><argument_list pos:line="4274" pos:column="46">(<argument><expr><name pos:line="4274" pos:column="47">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4274" pos:column="49">.</op:operator><call><name><name pos:line="4274" pos:column="50">caret</name><op:operator pos:line="4274" pos:column="55">.</op:operator><name pos:line="4274" pos:column="56">VirtualSpace</name></name><argument_list pos:line="4274" pos:column="68">()</argument_list></call></expr>)</condition><then pos:line="4274" pos:column="71"> <block pos:line="4274" pos:column="72">{
					<expr_stmt><expr><call><name><name pos:line="4275" pos:column="41">sel</name><op:operator pos:line="4275" pos:column="44">.</op:operator><name pos:line="4275" pos:column="45">Range</name></name><argument_list pos:line="4275" pos:column="50">(<argument><expr><name pos:line="4275" pos:column="51">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4275" pos:column="53">.</op:operator><call><name><name pos:line="4275" pos:column="54">caret</name><op:operator pos:line="4275" pos:column="59">.</op:operator><name pos:line="4275" pos:column="60">SetVirtualSpace</name></name><argument_list pos:line="4275" pos:column="75">(<argument><expr><call><name><name pos:line="4275" pos:column="76">sel</name><op:operator pos:line="4275" pos:column="79">.</op:operator><name pos:line="4275" pos:column="80">Range</name></name><argument_list pos:line="4275" pos:column="85">(<argument><expr><name pos:line="4275" pos:column="86">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4275" pos:column="88">.</op:operator><call><name><name pos:line="4275" pos:column="89">caret</name><op:operator pos:line="4275" pos:column="94">.</op:operator><name pos:line="4275" pos:column="95">VirtualSpace</name></name><argument_list pos:line="4275" pos:column="107">()</argument_list></call> <op:operator pos:line="4275" pos:column="110">-</op:operator> <lit:literal type="number" pos:line="4275" pos:column="112">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="4276" pos:column="41">sel</name><op:operator pos:line="4276" pos:column="44">.</op:operator><name pos:line="4276" pos:column="45">Range</name></name><argument_list pos:line="4276" pos:column="50">(<argument><expr><name pos:line="4276" pos:column="51">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4276" pos:column="53">.</op:operator><call><name><name pos:line="4276" pos:column="54">anchor</name><op:operator pos:line="4276" pos:column="60">.</op:operator><name pos:line="4276" pos:column="61">SetVirtualSpace</name></name><argument_list pos:line="4276" pos:column="76">(<argument><expr><call><name><name pos:line="4276" pos:column="77">sel</name><op:operator pos:line="4276" pos:column="80">.</op:operator><name pos:line="4276" pos:column="81">Range</name></name><argument_list pos:line="4276" pos:column="86">(<argument><expr><name pos:line="4276" pos:column="87">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4276" pos:column="89">.</op:operator><call><name><name pos:line="4276" pos:column="90">caret</name><op:operator pos:line="4276" pos:column="95">.</op:operator><name pos:line="4276" pos:column="96">VirtualSpace</name></name><argument_list pos:line="4276" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="4277" pos:column="35">else <block pos:line="4277" pos:column="40">{
					<decl_stmt><decl><type><name pos:line="4278" pos:column="41">int</name></type> <name pos:line="4278" pos:column="45">lineCurrentPos</name> <init pos:line="4278" pos:column="60">= <expr><call><name><name pos:line="4278" pos:column="62">pdoc</name><op:operator pos:line="4278" pos:column="66">-&gt;</op:operator><name pos:line="4278" pos:column="68">LineFromPosition</name></name><argument_list pos:line="4278" pos:column="84">(<argument><expr><call><name><name pos:line="4278" pos:column="85">sel</name><op:operator pos:line="4278" pos:column="88">.</op:operator><name pos:line="4278" pos:column="89">Range</name></name><argument_list pos:line="4278" pos:column="94">(<argument><expr><name pos:line="4278" pos:column="95">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4278" pos:column="97">.</op:operator><call><name><name pos:line="4278" pos:column="98">caret</name><op:operator pos:line="4278" pos:column="103">.</op:operator><name pos:line="4278" pos:column="104">Position</name></name><argument_list pos:line="4278" pos:column="112">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="4279" pos:column="41">if <condition pos:line="4279" pos:column="44">(<expr><name pos:line="4279" pos:column="45">allowLineStartDeletion</name> <op:operator pos:line="4279" pos:column="68">||</op:operator> <op:operator pos:line="4279" pos:column="71">(</op:operator><call><name><name pos:line="4279" pos:column="72">pdoc</name><op:operator pos:line="4279" pos:column="76">-&gt;</op:operator><name pos:line="4279" pos:column="78">LineStart</name></name><argument_list pos:line="4279" pos:column="87">(<argument><expr><name pos:line="4279" pos:column="88">lineCurrentPos</name></expr></argument>)</argument_list></call> <op:operator pos:line="4279" pos:column="104">!=</op:operator> <call><name><name pos:line="4279" pos:column="107">sel</name><op:operator pos:line="4279" pos:column="110">.</op:operator><name pos:line="4279" pos:column="111">Range</name></name><argument_list pos:line="4279" pos:column="116">(<argument><expr><name pos:line="4279" pos:column="117">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4279" pos:column="119">.</op:operator><call><name><name pos:line="4279" pos:column="120">caret</name><op:operator pos:line="4279" pos:column="125">.</op:operator><name pos:line="4279" pos:column="126">Position</name></name><argument_list pos:line="4279" pos:column="134">()</argument_list></call><op:operator pos:line="4279" pos:column="136">)</op:operator></expr>)</condition><then pos:line="4279" pos:column="138"> <block pos:line="4279" pos:column="139">{
						<if pos:line="4280" pos:column="49">if <condition pos:line="4280" pos:column="52">(<expr><call><name><name pos:line="4280" pos:column="53">pdoc</name><op:operator pos:line="4280" pos:column="57">-&gt;</op:operator><name pos:line="4280" pos:column="59">GetColumn</name></name><argument_list pos:line="4280" pos:column="68">(<argument><expr><call><name><name pos:line="4280" pos:column="69">sel</name><op:operator pos:line="4280" pos:column="72">.</op:operator><name pos:line="4280" pos:column="73">Range</name></name><argument_list pos:line="4280" pos:column="78">(<argument><expr><name pos:line="4280" pos:column="79">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4280" pos:column="81">.</op:operator><call><name><name pos:line="4280" pos:column="82">caret</name><op:operator pos:line="4280" pos:column="87">.</op:operator><name pos:line="4280" pos:column="88">Position</name></name><argument_list pos:line="4280" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="4280" pos:column="100">&lt;=</op:operator> <call><name><name pos:line="4280" pos:column="103">pdoc</name><op:operator pos:line="4280" pos:column="107">-&gt;</op:operator><name pos:line="4280" pos:column="109">GetLineIndentation</name></name><argument_list pos:line="4280" pos:column="127">(<argument><expr><name pos:line="4280" pos:column="128">lineCurrentPos</name></expr></argument>)</argument_list></call> <op:operator pos:line="4280" pos:column="144">&amp;&amp;</op:operator>
								<call><name><name pos:line="4281" pos:column="65">pdoc</name><op:operator pos:line="4281" pos:column="69">-&gt;</op:operator><name pos:line="4281" pos:column="71">GetColumn</name></name><argument_list pos:line="4281" pos:column="80">(<argument><expr><call><name><name pos:line="4281" pos:column="81">sel</name><op:operator pos:line="4281" pos:column="84">.</op:operator><name pos:line="4281" pos:column="85">Range</name></name><argument_list pos:line="4281" pos:column="90">(<argument><expr><name pos:line="4281" pos:column="91">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4281" pos:column="93">.</op:operator><call><name><name pos:line="4281" pos:column="94">caret</name><op:operator pos:line="4281" pos:column="99">.</op:operator><name pos:line="4281" pos:column="100">Position</name></name><argument_list pos:line="4281" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="4281" pos:column="112">&gt;</op:operator> <lit:literal type="number" pos:line="4281" pos:column="114">0</lit:literal> <op:operator pos:line="4281" pos:column="116">&amp;&amp;</op:operator> <name><name pos:line="4281" pos:column="119">pdoc</name><op:operator pos:line="4281" pos:column="123">-&gt;</op:operator><name pos:line="4281" pos:column="125">backspaceUnindents</name></name></expr>)</condition><then pos:line="4281" pos:column="144"> <block pos:line="4281" pos:column="145">{
							<decl_stmt><decl><type><name pos:line="4282" pos:column="57">UndoGroup</name></type> <name pos:line="4282" pos:column="67">ugInner</name><argument_list pos:line="4282" pos:column="74">(<argument><expr><name pos:line="4282" pos:column="75">pdoc</name></expr></argument>, <argument><expr><op:operator pos:line="4282" pos:column="81">!</op:operator><call><name><name pos:line="4282" pos:column="82">ug</name><op:operator pos:line="4282" pos:column="84">.</op:operator><name pos:line="4282" pos:column="85">Needed</name></name><argument_list pos:line="4282" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="4283" pos:column="57">int</name></type> <name pos:line="4283" pos:column="61">indentation</name> <init pos:line="4283" pos:column="73">= <expr><call><name><name pos:line="4283" pos:column="75">pdoc</name><op:operator pos:line="4283" pos:column="79">-&gt;</op:operator><name pos:line="4283" pos:column="81">GetLineIndentation</name></name><argument_list pos:line="4283" pos:column="99">(<argument><expr><name pos:line="4283" pos:column="100">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="4284" pos:column="57">int</name></type> <name pos:line="4284" pos:column="61">indentationStep</name> <init pos:line="4284" pos:column="77">= <expr><call><name><name pos:line="4284" pos:column="79">pdoc</name><op:operator pos:line="4284" pos:column="83">-&gt;</op:operator><name pos:line="4284" pos:column="85">IndentSize</name></name><argument_list pos:line="4284" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<if pos:line="4285" pos:column="57">if <condition pos:line="4285" pos:column="60">(<expr><name pos:line="4285" pos:column="61">indentation</name> <op:operator pos:line="4285" pos:column="73">%</op:operator> <name pos:line="4285" pos:column="75">indentationStep</name> <op:operator pos:line="4285" pos:column="91">==</op:operator> <lit:literal type="number" pos:line="4285" pos:column="94">0</lit:literal></expr>)</condition><then pos:line="4285" pos:column="96"> <block pos:line="4285" pos:column="97">{
								<expr_stmt><expr><call><name><name pos:line="4286" pos:column="65">pdoc</name><op:operator pos:line="4286" pos:column="69">-&gt;</op:operator><name pos:line="4286" pos:column="71">SetLineIndentation</name></name><argument_list pos:line="4286" pos:column="89">(<argument><expr><name pos:line="4286" pos:column="90">lineCurrentPos</name></expr></argument>, <argument><expr><name pos:line="4286" pos:column="106">indentation</name> <op:operator pos:line="4286" pos:column="118">-</op:operator> <name pos:line="4286" pos:column="120">indentationStep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></then> <else pos:line="4287" pos:column="59">else <block pos:line="4287" pos:column="64">{
								<expr_stmt><expr><call><name><name pos:line="4288" pos:column="65">pdoc</name><op:operator pos:line="4288" pos:column="69">-&gt;</op:operator><name pos:line="4288" pos:column="71">SetLineIndentation</name></name><argument_list pos:line="4288" pos:column="89">(<argument><expr><name pos:line="4288" pos:column="90">lineCurrentPos</name></expr></argument>, <argument><expr><name pos:line="4288" pos:column="106">indentation</name> <op:operator pos:line="4288" pos:column="118">-</op:operator> <op:operator pos:line="4288" pos:column="120">(</op:operator><name pos:line="4288" pos:column="121">indentation</name> <op:operator pos:line="4288" pos:column="133">%</op:operator> <name pos:line="4288" pos:column="135">indentationStep</name><op:operator pos:line="4288" pos:column="150">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							}</block></else></if>
							<comment type="line" pos:line="4290" pos:column="57">// SetEmptySelection</comment>
							<expr_stmt><expr><call><name><name pos:line="4291" pos:column="57">sel</name><op:operator pos:line="4291" pos:column="60">.</op:operator><name pos:line="4291" pos:column="61">Range</name></name><argument_list pos:line="4291" pos:column="66">(<argument><expr><name pos:line="4291" pos:column="67">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="4291" pos:column="70">=</op:operator> <call><name pos:line="4291" pos:column="72">SelectionRange</name><argument_list pos:line="4291" pos:column="86">(<argument><expr><call><name><name pos:line="4291" pos:column="87">pdoc</name><op:operator pos:line="4291" pos:column="91">-&gt;</op:operator><name pos:line="4291" pos:column="93">GetLineIndentPosition</name></name><argument_list pos:line="4291" pos:column="114">(<argument><expr><name pos:line="4291" pos:column="115">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></argument>,
								<argument><expr><call><name><name pos:line="4292" pos:column="65">pdoc</name><op:operator pos:line="4292" pos:column="69">-&gt;</op:operator><name pos:line="4292" pos:column="71">GetLineIndentPosition</name></name><argument_list pos:line="4292" pos:column="92">(<argument><expr><name pos:line="4292" pos:column="93">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then> <else pos:line="4293" pos:column="51">else <block pos:line="4293" pos:column="56">{
							<expr_stmt><expr><call><name><name pos:line="4294" pos:column="57">pdoc</name><op:operator pos:line="4294" pos:column="61">-&gt;</op:operator><name pos:line="4294" pos:column="63">DelCharBack</name></name><argument_list pos:line="4294" pos:column="74">(<argument><expr><call><name><name pos:line="4294" pos:column="75">sel</name><op:operator pos:line="4294" pos:column="78">.</op:operator><name pos:line="4294" pos:column="79">Range</name></name><argument_list pos:line="4294" pos:column="84">(<argument><expr><name pos:line="4294" pos:column="85">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4294" pos:column="87">.</op:operator><call><name><name pos:line="4294" pos:column="88">caret</name><op:operator pos:line="4294" pos:column="93">.</op:operator><name pos:line="4294" pos:column="94">Position</name></name><argument_list pos:line="4294" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></else></if>
					}</block></then></if>
				}</block></else></if>
			}</block></then> <else pos:line="4298" pos:column="27">else <block pos:line="4298" pos:column="32">{
				<expr_stmt><expr><call><name><name pos:line="4299" pos:column="33">sel</name><op:operator pos:line="4299" pos:column="36">.</op:operator><name pos:line="4299" pos:column="37">Range</name></name><argument_list pos:line="4299" pos:column="42">(<argument><expr><name pos:line="4299" pos:column="43">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4299" pos:column="45">.</op:operator><call><name pos:line="4299" pos:column="46">ClearVirtualSpace</name><argument_list pos:line="4299" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></for>
	}</block></then> <else pos:line="4302" pos:column="11">else <block pos:line="4302" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="4303" pos:column="17">ClearSelection</name><argument_list pos:line="4303" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><name pos:line="4305" pos:column="9">sel</name><op:operator pos:line="4305" pos:column="12">.</op:operator><name pos:line="4305" pos:column="13">RemoveDuplicates</name></name><argument_list pos:line="4305" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="4306" pos:column="9">// Avoid blinking during rapid typing:</comment>
	<expr_stmt><expr><call><name pos:line="4307" pos:column="9">ShowCaretAtCurrentPosition</name><argument_list pos:line="4307" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4310" pos:column="1">void</name></type> <name><name pos:line="4310" pos:column="6">Editor</name><op:operator pos:line="4310" pos:column="12">::</op:operator><name pos:line="4310" pos:column="14">NotifyFocus</name></name><parameter_list pos:line="4310" pos:column="25">(<param><decl><type><name pos:line="4310" pos:column="26">bool</name></type></decl></param>)</parameter_list> <block pos:line="4310" pos:column="32">{}</block></function>

<function><type><name pos:line="4312" pos:column="1">void</name></type> <name><name pos:line="4312" pos:column="6">Editor</name><op:operator pos:line="4312" pos:column="12">::</op:operator><name pos:line="4312" pos:column="14">SetCtrlID</name></name><parameter_list pos:line="4312" pos:column="23">(<param><decl><type><name pos:line="4312" pos:column="24">int</name></type> <name pos:line="4312" pos:column="28">identifier</name></decl></param>)</parameter_list> <block pos:line="4312" pos:column="40">{
	<expr_stmt><expr><name pos:line="4313" pos:column="9">ctrlID</name> <op:operator pos:line="4313" pos:column="16">=</op:operator> <name pos:line="4313" pos:column="18">identifier</name></expr>;</expr_stmt> 
}</block></function>

<function><type><name pos:line="4316" pos:column="1">void</name></type> <name><name pos:line="4316" pos:column="6">Editor</name><op:operator pos:line="4316" pos:column="12">::</op:operator><name pos:line="4316" pos:column="14">NotifyStyleToNeeded</name></name><parameter_list pos:line="4316" pos:column="33">(<param><decl><type><name pos:line="4316" pos:column="34">int</name></type> <name pos:line="4316" pos:column="38">endStyleNeeded</name></decl></param>)</parameter_list> <block pos:line="4316" pos:column="54">{
	<decl_stmt><decl><type><name pos:line="4317" pos:column="9">SCNotification</name></type> <name pos:line="4317" pos:column="24">scn</name> <init pos:line="4317" pos:column="28">= <expr><block pos:line="4317" pos:column="30">{<expr><lit:literal type="number" pos:line="4317" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4318" pos:column="9">scn</name><op:operator pos:line="4318" pos:column="12">.</op:operator><name pos:line="4318" pos:column="13">nmhdr</name><op:operator pos:line="4318" pos:column="18">.</op:operator><name pos:line="4318" pos:column="19">code</name></name> <op:operator pos:line="4318" pos:column="24">=</op:operator> <name pos:line="4318" pos:column="26">SCN_STYLENEEDED</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4319" pos:column="9">scn</name><op:operator pos:line="4319" pos:column="12">.</op:operator><name pos:line="4319" pos:column="13">position</name></name> <op:operator pos:line="4319" pos:column="22">=</op:operator> <name pos:line="4319" pos:column="24">endStyleNeeded</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4320" pos:column="9">NotifyParent</name><argument_list pos:line="4320" pos:column="21">(<argument><expr><name pos:line="4320" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4323" pos:column="1">void</name></type> <name><name pos:line="4323" pos:column="6">Editor</name><op:operator pos:line="4323" pos:column="12">::</op:operator><name pos:line="4323" pos:column="14">NotifyStyleNeeded</name></name><parameter_list pos:line="4323" pos:column="31">(<param><decl><type><name pos:line="4323" pos:column="32">Document</name> <type:modifier pos:line="4323" pos:column="41">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4323" pos:column="44">void</name> <type:modifier pos:line="4323" pos:column="49">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4323" pos:column="52">int</name></type> <name pos:line="4323" pos:column="56">endStyleNeeded</name></decl></param>)</parameter_list> <block pos:line="4323" pos:column="72">{
	<expr_stmt><expr><call><name pos:line="4324" pos:column="9">NotifyStyleToNeeded</name><argument_list pos:line="4324" pos:column="28">(<argument><expr><name pos:line="4324" pos:column="29">endStyleNeeded</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4327" pos:column="1">void</name></type> <name><name pos:line="4327" pos:column="6">Editor</name><op:operator pos:line="4327" pos:column="12">::</op:operator><name pos:line="4327" pos:column="14">NotifyLexerChanged</name></name><parameter_list pos:line="4327" pos:column="32">(<param><decl><type><name pos:line="4327" pos:column="33">Document</name> <type:modifier pos:line="4327" pos:column="42">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4327" pos:column="45">void</name> <type:modifier pos:line="4327" pos:column="50">*</type:modifier></type></decl></param>)</parameter_list> <block pos:line="4327" pos:column="53">{
}</block></function>

<function><type><name pos:line="4330" pos:column="1">void</name></type> <name><name pos:line="4330" pos:column="6">Editor</name><op:operator pos:line="4330" pos:column="12">::</op:operator><name pos:line="4330" pos:column="14">NotifyErrorOccurred</name></name><parameter_list pos:line="4330" pos:column="33">(<param><decl><type><name pos:line="4330" pos:column="34">Document</name> <type:modifier pos:line="4330" pos:column="43">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4330" pos:column="46">void</name> <type:modifier pos:line="4330" pos:column="51">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4330" pos:column="54">int</name></type> <name pos:line="4330" pos:column="58">status</name></decl></param>)</parameter_list> <block pos:line="4330" pos:column="66">{
	<expr_stmt><expr><name pos:line="4331" pos:column="9">errorStatus</name> <op:operator pos:line="4331" pos:column="21">=</op:operator> <name pos:line="4331" pos:column="23">status</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4334" pos:column="1">void</name></type> <name><name pos:line="4334" pos:column="6">Editor</name><op:operator pos:line="4334" pos:column="12">::</op:operator><name pos:line="4334" pos:column="14">NotifyChar</name></name><parameter_list pos:line="4334" pos:column="24">(<param><decl><type><name pos:line="4334" pos:column="25">int</name></type> <name pos:line="4334" pos:column="29">ch</name></decl></param>)</parameter_list> <block pos:line="4334" pos:column="33">{
	<decl_stmt><decl><type><name pos:line="4335" pos:column="9">SCNotification</name></type> <name pos:line="4335" pos:column="24">scn</name> <init pos:line="4335" pos:column="28">= <expr><block pos:line="4335" pos:column="30">{<expr><lit:literal type="number" pos:line="4335" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4336" pos:column="9">scn</name><op:operator pos:line="4336" pos:column="12">.</op:operator><name pos:line="4336" pos:column="13">nmhdr</name><op:operator pos:line="4336" pos:column="18">.</op:operator><name pos:line="4336" pos:column="19">code</name></name> <op:operator pos:line="4336" pos:column="24">=</op:operator> <name pos:line="4336" pos:column="26">SCN_CHARADDED</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4337" pos:column="9">scn</name><op:operator pos:line="4337" pos:column="12">.</op:operator><name pos:line="4337" pos:column="13">ch</name></name> <op:operator pos:line="4337" pos:column="16">=</op:operator> <name pos:line="4337" pos:column="18">ch</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4338" pos:column="9">NotifyParent</name><argument_list pos:line="4338" pos:column="21">(<argument><expr><name pos:line="4338" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4341" pos:column="1">void</name></type> <name><name pos:line="4341" pos:column="6">Editor</name><op:operator pos:line="4341" pos:column="12">::</op:operator><name pos:line="4341" pos:column="14">NotifySavePoint</name></name><parameter_list pos:line="4341" pos:column="29">(<param><decl><type><name pos:line="4341" pos:column="30">bool</name></type> <name pos:line="4341" pos:column="35">isSavePoint</name></decl></param>)</parameter_list> <block pos:line="4341" pos:column="48">{
	<decl_stmt><decl><type><name pos:line="4342" pos:column="9">SCNotification</name></type> <name pos:line="4342" pos:column="24">scn</name> <init pos:line="4342" pos:column="28">= <expr><block pos:line="4342" pos:column="30">{<expr><lit:literal type="number" pos:line="4342" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<if pos:line="4343" pos:column="9">if <condition pos:line="4343" pos:column="12">(<expr><name pos:line="4343" pos:column="13">isSavePoint</name></expr>)</condition><then pos:line="4343" pos:column="25"> <block pos:line="4343" pos:column="26">{
		<expr_stmt><expr><name><name pos:line="4344" pos:column="17">scn</name><op:operator pos:line="4344" pos:column="20">.</op:operator><name pos:line="4344" pos:column="21">nmhdr</name><op:operator pos:line="4344" pos:column="26">.</op:operator><name pos:line="4344" pos:column="27">code</name></name> <op:operator pos:line="4344" pos:column="32">=</op:operator> <name pos:line="4344" pos:column="34">SCN_SAVEPOINTREACHED</name></expr>;</expr_stmt>
	}</block></then> <else pos:line="4345" pos:column="11">else <block pos:line="4345" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="4346" pos:column="17">scn</name><op:operator pos:line="4346" pos:column="20">.</op:operator><name pos:line="4346" pos:column="21">nmhdr</name><op:operator pos:line="4346" pos:column="26">.</op:operator><name pos:line="4346" pos:column="27">code</name></name> <op:operator pos:line="4346" pos:column="32">=</op:operator> <name pos:line="4346" pos:column="34">SCN_SAVEPOINTLEFT</name></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name pos:line="4348" pos:column="9">NotifyParent</name><argument_list pos:line="4348" pos:column="21">(<argument><expr><name pos:line="4348" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4351" pos:column="1">void</name></type> <name><name pos:line="4351" pos:column="6">Editor</name><op:operator pos:line="4351" pos:column="12">::</op:operator><name pos:line="4351" pos:column="14">NotifyModifyAttempt</name></name><parameter_list pos:line="4351" pos:column="33">()</parameter_list> <block pos:line="4351" pos:column="36">{
	<decl_stmt><decl><type><name pos:line="4352" pos:column="9">SCNotification</name></type> <name pos:line="4352" pos:column="24">scn</name> <init pos:line="4352" pos:column="28">= <expr><block pos:line="4352" pos:column="30">{<expr><lit:literal type="number" pos:line="4352" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4353" pos:column="9">scn</name><op:operator pos:line="4353" pos:column="12">.</op:operator><name pos:line="4353" pos:column="13">nmhdr</name><op:operator pos:line="4353" pos:column="18">.</op:operator><name pos:line="4353" pos:column="19">code</name></name> <op:operator pos:line="4353" pos:column="24">=</op:operator> <name pos:line="4353" pos:column="26">SCN_MODIFYATTEMPTRO</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4354" pos:column="9">NotifyParent</name><argument_list pos:line="4354" pos:column="21">(<argument><expr><name pos:line="4354" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4357" pos:column="1">void</name></type> <name><name pos:line="4357" pos:column="6">Editor</name><op:operator pos:line="4357" pos:column="12">::</op:operator><name pos:line="4357" pos:column="14">NotifyDoubleClick</name></name><parameter_list pos:line="4357" pos:column="31">(<param><decl><type><name pos:line="4357" pos:column="32">Point</name></type> <name pos:line="4357" pos:column="38">pt</name></decl></param>, <param><decl><type><name pos:line="4357" pos:column="42">bool</name></type> <name pos:line="4357" pos:column="47">shift</name></decl></param>, <param><decl><type><name pos:line="4357" pos:column="54">bool</name></type> <name pos:line="4357" pos:column="59">ctrl</name></decl></param>, <param><decl><type><name pos:line="4357" pos:column="65">bool</name></type> <name pos:line="4357" pos:column="70">alt</name></decl></param>)</parameter_list> <block pos:line="4357" pos:column="75">{
	<decl_stmt><decl><type><name pos:line="4358" pos:column="9">SCNotification</name></type> <name pos:line="4358" pos:column="24">scn</name> <init pos:line="4358" pos:column="28">= <expr><block pos:line="4358" pos:column="30">{<expr><lit:literal type="number" pos:line="4358" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4359" pos:column="9">scn</name><op:operator pos:line="4359" pos:column="12">.</op:operator><name pos:line="4359" pos:column="13">nmhdr</name><op:operator pos:line="4359" pos:column="18">.</op:operator><name pos:line="4359" pos:column="19">code</name></name> <op:operator pos:line="4359" pos:column="24">=</op:operator> <name pos:line="4359" pos:column="26">SCN_DOUBLECLICK</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4360" pos:column="9">scn</name><op:operator pos:line="4360" pos:column="12">.</op:operator><name pos:line="4360" pos:column="13">line</name></name> <op:operator pos:line="4360" pos:column="18">=</op:operator> <call><name pos:line="4360" pos:column="20">LineFromLocation</name><argument_list pos:line="4360" pos:column="36">(<argument><expr><name pos:line="4360" pos:column="37">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4361" pos:column="9">scn</name><op:operator pos:line="4361" pos:column="12">.</op:operator><name pos:line="4361" pos:column="13">position</name></name> <op:operator pos:line="4361" pos:column="22">=</op:operator> <call><name pos:line="4361" pos:column="24">PositionFromLocation</name><argument_list pos:line="4361" pos:column="44">(<argument><expr><name pos:line="4361" pos:column="45">pt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4361" pos:column="49">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4362" pos:column="9">scn</name><op:operator pos:line="4362" pos:column="12">.</op:operator><name pos:line="4362" pos:column="13">modifiers</name></name> <op:operator pos:line="4362" pos:column="23">=</op:operator> <op:operator pos:line="4362" pos:column="25">(</op:operator><name pos:line="4362" pos:column="26">shift</name> <op:operator pos:line="4362" pos:column="32">?</op:operator> <name pos:line="4362" pos:column="34">SCI_SHIFT</name> <op:operator pos:line="4362" pos:column="44">:</op:operator> <lit:literal type="number" pos:line="4362" pos:column="46">0</lit:literal><op:operator pos:line="4362" pos:column="47">)</op:operator> <op:operator pos:line="4362" pos:column="49">|</op:operator> <op:operator pos:line="4362" pos:column="51">(</op:operator><name pos:line="4362" pos:column="52">ctrl</name> <op:operator pos:line="4362" pos:column="57">?</op:operator> <name pos:line="4362" pos:column="59">SCI_CTRL</name> <op:operator pos:line="4362" pos:column="68">:</op:operator> <lit:literal type="number" pos:line="4362" pos:column="70">0</lit:literal><op:operator pos:line="4362" pos:column="71">)</op:operator> <op:operator pos:line="4362" pos:column="73">|</op:operator>
	        <op:operator pos:line="4363" pos:column="17">(</op:operator><name pos:line="4363" pos:column="18">alt</name> <op:operator pos:line="4363" pos:column="22">?</op:operator> <name pos:line="4363" pos:column="24">SCI_ALT</name> <op:operator pos:line="4363" pos:column="32">:</op:operator> <lit:literal type="number" pos:line="4363" pos:column="34">0</lit:literal><op:operator pos:line="4363" pos:column="35">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4364" pos:column="9">NotifyParent</name><argument_list pos:line="4364" pos:column="21">(<argument><expr><name pos:line="4364" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4367" pos:column="1">void</name></type> <name><name pos:line="4367" pos:column="6">Editor</name><op:operator pos:line="4367" pos:column="12">::</op:operator><name pos:line="4367" pos:column="14">NotifyHotSpotDoubleClicked</name></name><parameter_list pos:line="4367" pos:column="40">(<param><decl><type><name pos:line="4367" pos:column="41">int</name></type> <name pos:line="4367" pos:column="45">position</name></decl></param>, <param><decl><type><name pos:line="4367" pos:column="55">bool</name></type> <name pos:line="4367" pos:column="60">shift</name></decl></param>, <param><decl><type><name pos:line="4367" pos:column="67">bool</name></type> <name pos:line="4367" pos:column="72">ctrl</name></decl></param>, <param><decl><type><name pos:line="4367" pos:column="78">bool</name></type> <name pos:line="4367" pos:column="83">alt</name></decl></param>)</parameter_list> <block pos:line="4367" pos:column="88">{
	<decl_stmt><decl><type><name pos:line="4368" pos:column="9">SCNotification</name></type> <name pos:line="4368" pos:column="24">scn</name> <init pos:line="4368" pos:column="28">= <expr><block pos:line="4368" pos:column="30">{<expr><lit:literal type="number" pos:line="4368" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4369" pos:column="9">scn</name><op:operator pos:line="4369" pos:column="12">.</op:operator><name pos:line="4369" pos:column="13">nmhdr</name><op:operator pos:line="4369" pos:column="18">.</op:operator><name pos:line="4369" pos:column="19">code</name></name> <op:operator pos:line="4369" pos:column="24">=</op:operator> <name pos:line="4369" pos:column="26">SCN_HOTSPOTDOUBLECLICK</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4370" pos:column="9">scn</name><op:operator pos:line="4370" pos:column="12">.</op:operator><name pos:line="4370" pos:column="13">position</name></name> <op:operator pos:line="4370" pos:column="22">=</op:operator> <name pos:line="4370" pos:column="24">position</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4371" pos:column="9">scn</name><op:operator pos:line="4371" pos:column="12">.</op:operator><name pos:line="4371" pos:column="13">modifiers</name></name> <op:operator pos:line="4371" pos:column="23">=</op:operator> <op:operator pos:line="4371" pos:column="25">(</op:operator><name pos:line="4371" pos:column="26">shift</name> <op:operator pos:line="4371" pos:column="32">?</op:operator> <name pos:line="4371" pos:column="34">SCI_SHIFT</name> <op:operator pos:line="4371" pos:column="44">:</op:operator> <lit:literal type="number" pos:line="4371" pos:column="46">0</lit:literal><op:operator pos:line="4371" pos:column="47">)</op:operator> <op:operator pos:line="4371" pos:column="49">|</op:operator> <op:operator pos:line="4371" pos:column="51">(</op:operator><name pos:line="4371" pos:column="52">ctrl</name> <op:operator pos:line="4371" pos:column="57">?</op:operator> <name pos:line="4371" pos:column="59">SCI_CTRL</name> <op:operator pos:line="4371" pos:column="68">:</op:operator> <lit:literal type="number" pos:line="4371" pos:column="70">0</lit:literal><op:operator pos:line="4371" pos:column="71">)</op:operator> <op:operator pos:line="4371" pos:column="73">|</op:operator>
	        <op:operator pos:line="4372" pos:column="17">(</op:operator><name pos:line="4372" pos:column="18">alt</name> <op:operator pos:line="4372" pos:column="22">?</op:operator> <name pos:line="4372" pos:column="24">SCI_ALT</name> <op:operator pos:line="4372" pos:column="32">:</op:operator> <lit:literal type="number" pos:line="4372" pos:column="34">0</lit:literal><op:operator pos:line="4372" pos:column="35">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4373" pos:column="9">NotifyParent</name><argument_list pos:line="4373" pos:column="21">(<argument><expr><name pos:line="4373" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4376" pos:column="1">void</name></type> <name><name pos:line="4376" pos:column="6">Editor</name><op:operator pos:line="4376" pos:column="12">::</op:operator><name pos:line="4376" pos:column="14">NotifyHotSpotClicked</name></name><parameter_list pos:line="4376" pos:column="34">(<param><decl><type><name pos:line="4376" pos:column="35">int</name></type> <name pos:line="4376" pos:column="39">position</name></decl></param>, <param><decl><type><name pos:line="4376" pos:column="49">bool</name></type> <name pos:line="4376" pos:column="54">shift</name></decl></param>, <param><decl><type><name pos:line="4376" pos:column="61">bool</name></type> <name pos:line="4376" pos:column="66">ctrl</name></decl></param>, <param><decl><type><name pos:line="4376" pos:column="72">bool</name></type> <name pos:line="4376" pos:column="77">alt</name></decl></param>)</parameter_list> <block pos:line="4376" pos:column="82">{
	<decl_stmt><decl><type><name pos:line="4377" pos:column="9">SCNotification</name></type> <name pos:line="4377" pos:column="24">scn</name> <init pos:line="4377" pos:column="28">= <expr><block pos:line="4377" pos:column="30">{<expr><lit:literal type="number" pos:line="4377" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4378" pos:column="9">scn</name><op:operator pos:line="4378" pos:column="12">.</op:operator><name pos:line="4378" pos:column="13">nmhdr</name><op:operator pos:line="4378" pos:column="18">.</op:operator><name pos:line="4378" pos:column="19">code</name></name> <op:operator pos:line="4378" pos:column="24">=</op:operator> <name pos:line="4378" pos:column="26">SCN_HOTSPOTCLICK</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4379" pos:column="9">scn</name><op:operator pos:line="4379" pos:column="12">.</op:operator><name pos:line="4379" pos:column="13">position</name></name> <op:operator pos:line="4379" pos:column="22">=</op:operator> <name pos:line="4379" pos:column="24">position</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4380" pos:column="9">scn</name><op:operator pos:line="4380" pos:column="12">.</op:operator><name pos:line="4380" pos:column="13">modifiers</name></name> <op:operator pos:line="4380" pos:column="23">=</op:operator> <op:operator pos:line="4380" pos:column="25">(</op:operator><name pos:line="4380" pos:column="26">shift</name> <op:operator pos:line="4380" pos:column="32">?</op:operator> <name pos:line="4380" pos:column="34">SCI_SHIFT</name> <op:operator pos:line="4380" pos:column="44">:</op:operator> <lit:literal type="number" pos:line="4380" pos:column="46">0</lit:literal><op:operator pos:line="4380" pos:column="47">)</op:operator> <op:operator pos:line="4380" pos:column="49">|</op:operator> <op:operator pos:line="4380" pos:column="51">(</op:operator><name pos:line="4380" pos:column="52">ctrl</name> <op:operator pos:line="4380" pos:column="57">?</op:operator> <name pos:line="4380" pos:column="59">SCI_CTRL</name> <op:operator pos:line="4380" pos:column="68">:</op:operator> <lit:literal type="number" pos:line="4380" pos:column="70">0</lit:literal><op:operator pos:line="4380" pos:column="71">)</op:operator> <op:operator pos:line="4380" pos:column="73">|</op:operator>
	        <op:operator pos:line="4381" pos:column="17">(</op:operator><name pos:line="4381" pos:column="18">alt</name> <op:operator pos:line="4381" pos:column="22">?</op:operator> <name pos:line="4381" pos:column="24">SCI_ALT</name> <op:operator pos:line="4381" pos:column="32">:</op:operator> <lit:literal type="number" pos:line="4381" pos:column="34">0</lit:literal><op:operator pos:line="4381" pos:column="35">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4382" pos:column="9">NotifyParent</name><argument_list pos:line="4382" pos:column="21">(<argument><expr><name pos:line="4382" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4385" pos:column="1">void</name></type> <name><name pos:line="4385" pos:column="6">Editor</name><op:operator pos:line="4385" pos:column="12">::</op:operator><name pos:line="4385" pos:column="14">NotifyHotSpotReleaseClick</name></name><parameter_list pos:line="4385" pos:column="39">(<param><decl><type><name pos:line="4385" pos:column="40">int</name></type> <name pos:line="4385" pos:column="44">position</name></decl></param>, <param><decl><type><name pos:line="4385" pos:column="54">bool</name></type> <name pos:line="4385" pos:column="59">shift</name></decl></param>, <param><decl><type><name pos:line="4385" pos:column="66">bool</name></type> <name pos:line="4385" pos:column="71">ctrl</name></decl></param>, <param><decl><type><name pos:line="4385" pos:column="77">bool</name></type> <name pos:line="4385" pos:column="82">alt</name></decl></param>)</parameter_list> <block pos:line="4385" pos:column="87">{
	<decl_stmt><decl><type><name pos:line="4386" pos:column="9">SCNotification</name></type> <name pos:line="4386" pos:column="24">scn</name> <init pos:line="4386" pos:column="28">= <expr><block pos:line="4386" pos:column="30">{<expr><lit:literal type="number" pos:line="4386" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4387" pos:column="9">scn</name><op:operator pos:line="4387" pos:column="12">.</op:operator><name pos:line="4387" pos:column="13">nmhdr</name><op:operator pos:line="4387" pos:column="18">.</op:operator><name pos:line="4387" pos:column="19">code</name></name> <op:operator pos:line="4387" pos:column="24">=</op:operator> <name pos:line="4387" pos:column="26">SCN_HOTSPOTRELEASECLICK</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4388" pos:column="9">scn</name><op:operator pos:line="4388" pos:column="12">.</op:operator><name pos:line="4388" pos:column="13">position</name></name> <op:operator pos:line="4388" pos:column="22">=</op:operator> <name pos:line="4388" pos:column="24">position</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4389" pos:column="9">scn</name><op:operator pos:line="4389" pos:column="12">.</op:operator><name pos:line="4389" pos:column="13">modifiers</name></name> <op:operator pos:line="4389" pos:column="23">=</op:operator> <op:operator pos:line="4389" pos:column="25">(</op:operator><name pos:line="4389" pos:column="26">shift</name> <op:operator pos:line="4389" pos:column="32">?</op:operator> <name pos:line="4389" pos:column="34">SCI_SHIFT</name> <op:operator pos:line="4389" pos:column="44">:</op:operator> <lit:literal type="number" pos:line="4389" pos:column="46">0</lit:literal><op:operator pos:line="4389" pos:column="47">)</op:operator> <op:operator pos:line="4389" pos:column="49">|</op:operator> <op:operator pos:line="4389" pos:column="51">(</op:operator><name pos:line="4389" pos:column="52">ctrl</name> <op:operator pos:line="4389" pos:column="57">?</op:operator> <name pos:line="4389" pos:column="59">SCI_CTRL</name> <op:operator pos:line="4389" pos:column="68">:</op:operator> <lit:literal type="number" pos:line="4389" pos:column="70">0</lit:literal><op:operator pos:line="4389" pos:column="71">)</op:operator> <op:operator pos:line="4389" pos:column="73">|</op:operator>
	        <op:operator pos:line="4390" pos:column="17">(</op:operator><name pos:line="4390" pos:column="18">alt</name> <op:operator pos:line="4390" pos:column="22">?</op:operator> <name pos:line="4390" pos:column="24">SCI_ALT</name> <op:operator pos:line="4390" pos:column="32">:</op:operator> <lit:literal type="number" pos:line="4390" pos:column="34">0</lit:literal><op:operator pos:line="4390" pos:column="35">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4391" pos:column="9">NotifyParent</name><argument_list pos:line="4391" pos:column="21">(<argument><expr><name pos:line="4391" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4394" pos:column="1">void</name></type> <name><name pos:line="4394" pos:column="6">Editor</name><op:operator pos:line="4394" pos:column="12">::</op:operator><name pos:line="4394" pos:column="14">NotifyUpdateUI</name></name><parameter_list pos:line="4394" pos:column="28">()</parameter_list> <block pos:line="4394" pos:column="31">{
	<decl_stmt><decl><type><name pos:line="4395" pos:column="9">SCNotification</name></type> <name pos:line="4395" pos:column="24">scn</name> <init pos:line="4395" pos:column="28">= <expr><block pos:line="4395" pos:column="30">{<expr><lit:literal type="number" pos:line="4395" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4396" pos:column="9">scn</name><op:operator pos:line="4396" pos:column="12">.</op:operator><name pos:line="4396" pos:column="13">nmhdr</name><op:operator pos:line="4396" pos:column="18">.</op:operator><name pos:line="4396" pos:column="19">code</name></name> <op:operator pos:line="4396" pos:column="24">=</op:operator> <name pos:line="4396" pos:column="26">SCN_UPDATEUI</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4397" pos:column="9">scn</name><op:operator pos:line="4397" pos:column="12">.</op:operator><name pos:line="4397" pos:column="13">updated</name></name> <op:operator pos:line="4397" pos:column="21">=</op:operator> <name pos:line="4397" pos:column="23">needUpdateUI</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4398" pos:column="9">NotifyParent</name><argument_list pos:line="4398" pos:column="21">(<argument><expr><name pos:line="4398" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4401" pos:column="1">void</name></type> <name><name pos:line="4401" pos:column="6">Editor</name><op:operator pos:line="4401" pos:column="12">::</op:operator><name pos:line="4401" pos:column="14">NotifyPainted</name></name><parameter_list pos:line="4401" pos:column="27">()</parameter_list> <block pos:line="4401" pos:column="30">{
	<decl_stmt><decl><type><name pos:line="4402" pos:column="9">SCNotification</name></type> <name pos:line="4402" pos:column="24">scn</name> <init pos:line="4402" pos:column="28">= <expr><block pos:line="4402" pos:column="30">{<expr><lit:literal type="number" pos:line="4402" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4403" pos:column="9">scn</name><op:operator pos:line="4403" pos:column="12">.</op:operator><name pos:line="4403" pos:column="13">nmhdr</name><op:operator pos:line="4403" pos:column="18">.</op:operator><name pos:line="4403" pos:column="19">code</name></name> <op:operator pos:line="4403" pos:column="24">=</op:operator> <name pos:line="4403" pos:column="26">SCN_PAINTED</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4404" pos:column="9">NotifyParent</name><argument_list pos:line="4404" pos:column="21">(<argument><expr><name pos:line="4404" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4407" pos:column="1">void</name></type> <name><name pos:line="4407" pos:column="6">Editor</name><op:operator pos:line="4407" pos:column="12">::</op:operator><name pos:line="4407" pos:column="14">NotifyScrolled</name></name><parameter_list pos:line="4407" pos:column="28">()</parameter_list> <block pos:line="4407" pos:column="31">{
	<decl_stmt><decl><type><name pos:line="4408" pos:column="9">SCNotification</name></type> <name pos:line="4408" pos:column="24">scn</name> <init pos:line="4408" pos:column="28">= <expr><block pos:line="4408" pos:column="30">{<expr><lit:literal type="number" pos:line="4408" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4409" pos:column="9">scn</name><op:operator pos:line="4409" pos:column="12">.</op:operator><name pos:line="4409" pos:column="13">nmhdr</name><op:operator pos:line="4409" pos:column="18">.</op:operator><name pos:line="4409" pos:column="19">code</name></name> <op:operator pos:line="4409" pos:column="24">=</op:operator> <name pos:line="4409" pos:column="26">SCN_SCROLLED</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4410" pos:column="9">NotifyParent</name><argument_list pos:line="4410" pos:column="21">(<argument><expr><name pos:line="4410" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4413" pos:column="1">void</name></type> <name><name pos:line="4413" pos:column="6">Editor</name><op:operator pos:line="4413" pos:column="12">::</op:operator><name pos:line="4413" pos:column="14">NotifyIndicatorClick</name></name><parameter_list pos:line="4413" pos:column="34">(<param><decl><type><name pos:line="4413" pos:column="35">bool</name></type> <name pos:line="4413" pos:column="40">click</name></decl></param>, <param><decl><type><name pos:line="4413" pos:column="47">int</name></type> <name pos:line="4413" pos:column="51">position</name></decl></param>, <param><decl><type><name pos:line="4413" pos:column="61">bool</name></type> <name pos:line="4413" pos:column="66">shift</name></decl></param>, <param><decl><type><name pos:line="4413" pos:column="73">bool</name></type> <name pos:line="4413" pos:column="78">ctrl</name></decl></param>, <param><decl><type><name pos:line="4413" pos:column="84">bool</name></type> <name pos:line="4413" pos:column="89">alt</name></decl></param>)</parameter_list> <block pos:line="4413" pos:column="94">{
	<decl_stmt><decl><type><name pos:line="4414" pos:column="9">int</name></type> <name pos:line="4414" pos:column="13">mask</name> <init pos:line="4414" pos:column="18">= <expr><call><name><name pos:line="4414" pos:column="20">pdoc</name><op:operator pos:line="4414" pos:column="24">-&gt;</op:operator><name pos:line="4414" pos:column="26">decorations</name><op:operator pos:line="4414" pos:column="37">.</op:operator><name pos:line="4414" pos:column="38">AllOnFor</name></name><argument_list pos:line="4414" pos:column="46">(<argument><expr><name pos:line="4414" pos:column="47">position</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4415" pos:column="9">if <condition pos:line="4415" pos:column="12">(<expr><op:operator pos:line="4415" pos:column="13">(</op:operator><name pos:line="4415" pos:column="14">click</name> <op:operator pos:line="4415" pos:column="20">&amp;&amp;</op:operator> <name pos:line="4415" pos:column="23">mask</name><op:operator pos:line="4415" pos:column="27">)</op:operator> <op:operator pos:line="4415" pos:column="29">||</op:operator> <name><name pos:line="4415" pos:column="32">pdoc</name><op:operator pos:line="4415" pos:column="36">-&gt;</op:operator><name pos:line="4415" pos:column="38">decorations</name><op:operator pos:line="4415" pos:column="49">.</op:operator><name pos:line="4415" pos:column="50">clickNotified</name></name></expr>)</condition><then pos:line="4415" pos:column="64"> <block pos:line="4415" pos:column="65">{
		<decl_stmt><decl><type><name pos:line="4416" pos:column="17">SCNotification</name></type> <name pos:line="4416" pos:column="32">scn</name> <init pos:line="4416" pos:column="36">= <expr><block pos:line="4416" pos:column="38">{<expr><lit:literal type="number" pos:line="4416" pos:column="39">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="4417" pos:column="17">pdoc</name><op:operator pos:line="4417" pos:column="21">-&gt;</op:operator><name pos:line="4417" pos:column="23">decorations</name><op:operator pos:line="4417" pos:column="34">.</op:operator><name pos:line="4417" pos:column="35">clickNotified</name></name> <op:operator pos:line="4417" pos:column="49">=</op:operator> <name pos:line="4417" pos:column="51">click</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4418" pos:column="17">scn</name><op:operator pos:line="4418" pos:column="20">.</op:operator><name pos:line="4418" pos:column="21">nmhdr</name><op:operator pos:line="4418" pos:column="26">.</op:operator><name pos:line="4418" pos:column="27">code</name></name> <op:operator pos:line="4418" pos:column="32">=</op:operator> <name pos:line="4418" pos:column="34">click</name> <op:operator pos:line="4418" pos:column="40">?</op:operator> <name pos:line="4418" pos:column="42">SCN_INDICATORCLICK</name> <op:operator pos:line="4418" pos:column="61">:</op:operator> <name pos:line="4418" pos:column="63">SCN_INDICATORRELEASE</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4419" pos:column="17">scn</name><op:operator pos:line="4419" pos:column="20">.</op:operator><name pos:line="4419" pos:column="21">modifiers</name></name> <op:operator pos:line="4419" pos:column="31">=</op:operator> <op:operator pos:line="4419" pos:column="33">(</op:operator><name pos:line="4419" pos:column="34">shift</name> <op:operator pos:line="4419" pos:column="40">?</op:operator> <name pos:line="4419" pos:column="42">SCI_SHIFT</name> <op:operator pos:line="4419" pos:column="52">:</op:operator> <lit:literal type="number" pos:line="4419" pos:column="54">0</lit:literal><op:operator pos:line="4419" pos:column="55">)</op:operator> <op:operator pos:line="4419" pos:column="57">|</op:operator> <op:operator pos:line="4419" pos:column="59">(</op:operator><name pos:line="4419" pos:column="60">ctrl</name> <op:operator pos:line="4419" pos:column="65">?</op:operator> <name pos:line="4419" pos:column="67">SCI_CTRL</name> <op:operator pos:line="4419" pos:column="76">:</op:operator> <lit:literal type="number" pos:line="4419" pos:column="78">0</lit:literal><op:operator pos:line="4419" pos:column="79">)</op:operator> <op:operator pos:line="4419" pos:column="81">|</op:operator> <op:operator pos:line="4419" pos:column="83">(</op:operator><name pos:line="4419" pos:column="84">alt</name> <op:operator pos:line="4419" pos:column="88">?</op:operator> <name pos:line="4419" pos:column="90">SCI_ALT</name> <op:operator pos:line="4419" pos:column="98">:</op:operator> <lit:literal type="number" pos:line="4419" pos:column="100">0</lit:literal><op:operator pos:line="4419" pos:column="101">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4420" pos:column="17">scn</name><op:operator pos:line="4420" pos:column="20">.</op:operator><name pos:line="4420" pos:column="21">position</name></name> <op:operator pos:line="4420" pos:column="30">=</op:operator> <name pos:line="4420" pos:column="32">position</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4421" pos:column="17">NotifyParent</name><argument_list pos:line="4421" pos:column="29">(<argument><expr><name pos:line="4421" pos:column="30">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4425" pos:column="1">bool</name></type> <name><name pos:line="4425" pos:column="6">Editor</name><op:operator pos:line="4425" pos:column="12">::</op:operator><name pos:line="4425" pos:column="14">NotifyMarginClick</name></name><parameter_list pos:line="4425" pos:column="31">(<param><decl><type><name pos:line="4425" pos:column="32">Point</name></type> <name pos:line="4425" pos:column="38">pt</name></decl></param>, <param><decl><type><name pos:line="4425" pos:column="42">bool</name></type> <name pos:line="4425" pos:column="47">shift</name></decl></param>, <param><decl><type><name pos:line="4425" pos:column="54">bool</name></type> <name pos:line="4425" pos:column="59">ctrl</name></decl></param>, <param><decl><type><name pos:line="4425" pos:column="65">bool</name></type> <name pos:line="4425" pos:column="70">alt</name></decl></param>)</parameter_list> <block pos:line="4425" pos:column="75">{
	<decl_stmt><decl><type><name pos:line="4426" pos:column="9">int</name></type> <name pos:line="4426" pos:column="13">marginClicked</name> <init pos:line="4426" pos:column="27">= <expr><op:operator pos:line="4426" pos:column="29">-</op:operator><lit:literal type="number" pos:line="4426" pos:column="30">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4427" pos:column="9">int</name></type> <name pos:line="4427" pos:column="13">x</name> <init pos:line="4427" pos:column="15">= <expr><lit:literal type="number" pos:line="4427" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="4428" pos:column="9">for (<init><decl><type><name pos:line="4428" pos:column="14">int</name></type> <name pos:line="4428" pos:column="18">margin</name> <init pos:line="4428" pos:column="25">= <expr><lit:literal type="number" pos:line="4428" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4428" pos:column="30">margin</name> <op:operator pos:line="4428" pos:column="37">&lt;</op:operator> <name><name pos:line="4428" pos:column="39">ViewStyle</name><op:operator pos:line="4428" pos:column="48">::</op:operator><name pos:line="4428" pos:column="50">margins</name></name></expr>;</condition> <incr><expr><name pos:line="4428" pos:column="59">margin</name><op:operator pos:line="4428" pos:column="65">++</op:operator></expr></incr>) <block pos:line="4428" pos:column="69">{
		<if pos:line="4429" pos:column="17">if <condition pos:line="4429" pos:column="20">(<expr><op:operator pos:line="4429" pos:column="21">(</op:operator><name><name pos:line="4429" pos:column="22">pt</name><op:operator pos:line="4429" pos:column="24">.</op:operator><name pos:line="4429" pos:column="25">x</name></name> <op:operator pos:line="4429" pos:column="27">&gt;</op:operator> <name pos:line="4429" pos:column="29">x</name><op:operator pos:line="4429" pos:column="30">)</op:operator> <op:operator pos:line="4429" pos:column="32">&amp;&amp;</op:operator> <op:operator pos:line="4429" pos:column="35">(</op:operator><name><name pos:line="4429" pos:column="36">pt</name><op:operator pos:line="4429" pos:column="38">.</op:operator><name pos:line="4429" pos:column="39">x</name></name> <op:operator pos:line="4429" pos:column="41">&lt;</op:operator> <name pos:line="4429" pos:column="43">x</name> <op:operator pos:line="4429" pos:column="45">+</op:operator> <name><name pos:line="4429" pos:column="47">vs</name><op:operator pos:line="4429" pos:column="49">.</op:operator><name pos:line="4429" pos:column="50">ms</name><index pos:line="4429" pos:column="52">[<expr><name pos:line="4429" pos:column="53">margin</name></expr>]</index></name><op:operator pos:line="4429" pos:column="60">.</op:operator><name pos:line="4429" pos:column="61">width</name><op:operator pos:line="4429" pos:column="66">)</op:operator></expr>)</condition><then pos:line="4429" pos:column="68">
			<expr_stmt><expr><name pos:line="4430" pos:column="25">marginClicked</name> <op:operator pos:line="4430" pos:column="39">=</op:operator> <name pos:line="4430" pos:column="41">margin</name></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="4431" pos:column="17">x</name> <op:operator pos:line="4431" pos:column="19">+=</op:operator> <name><name pos:line="4431" pos:column="22">vs</name><op:operator pos:line="4431" pos:column="24">.</op:operator><name pos:line="4431" pos:column="25">ms</name><index pos:line="4431" pos:column="27">[<expr><name pos:line="4431" pos:column="28">margin</name></expr>]</index></name><op:operator pos:line="4431" pos:column="35">.</op:operator><name pos:line="4431" pos:column="36">width</name></expr>;</expr_stmt>
	}</block></for>
	<if pos:line="4433" pos:column="9">if <condition pos:line="4433" pos:column="12">(<expr><op:operator pos:line="4433" pos:column="13">(</op:operator><name pos:line="4433" pos:column="14">marginClicked</name> <op:operator pos:line="4433" pos:column="28">&gt;=</op:operator> <lit:literal type="number" pos:line="4433" pos:column="31">0</lit:literal><op:operator pos:line="4433" pos:column="32">)</op:operator> <op:operator pos:line="4433" pos:column="34">&amp;&amp;</op:operator> <name><name pos:line="4433" pos:column="37">vs</name><op:operator pos:line="4433" pos:column="39">.</op:operator><name pos:line="4433" pos:column="40">ms</name><index pos:line="4433" pos:column="42">[<expr><name pos:line="4433" pos:column="43">marginClicked</name></expr>]</index></name><op:operator pos:line="4433" pos:column="57">.</op:operator><name pos:line="4433" pos:column="58">sensitive</name></expr>)</condition><then pos:line="4433" pos:column="68"> <block pos:line="4433" pos:column="69">{
		<decl_stmt><decl><type><name pos:line="4434" pos:column="17">SCNotification</name></type> <name pos:line="4434" pos:column="32">scn</name> <init pos:line="4434" pos:column="36">= <expr><block pos:line="4434" pos:column="38">{<expr><lit:literal type="number" pos:line="4434" pos:column="39">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="4435" pos:column="17">scn</name><op:operator pos:line="4435" pos:column="20">.</op:operator><name pos:line="4435" pos:column="21">nmhdr</name><op:operator pos:line="4435" pos:column="26">.</op:operator><name pos:line="4435" pos:column="27">code</name></name> <op:operator pos:line="4435" pos:column="32">=</op:operator> <name pos:line="4435" pos:column="34">SCN_MARGINCLICK</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4436" pos:column="17">scn</name><op:operator pos:line="4436" pos:column="20">.</op:operator><name pos:line="4436" pos:column="21">modifiers</name></name> <op:operator pos:line="4436" pos:column="31">=</op:operator> <op:operator pos:line="4436" pos:column="33">(</op:operator><name pos:line="4436" pos:column="34">shift</name> <op:operator pos:line="4436" pos:column="40">?</op:operator> <name pos:line="4436" pos:column="42">SCI_SHIFT</name> <op:operator pos:line="4436" pos:column="52">:</op:operator> <lit:literal type="number" pos:line="4436" pos:column="54">0</lit:literal><op:operator pos:line="4436" pos:column="55">)</op:operator> <op:operator pos:line="4436" pos:column="57">|</op:operator> <op:operator pos:line="4436" pos:column="59">(</op:operator><name pos:line="4436" pos:column="60">ctrl</name> <op:operator pos:line="4436" pos:column="65">?</op:operator> <name pos:line="4436" pos:column="67">SCI_CTRL</name> <op:operator pos:line="4436" pos:column="76">:</op:operator> <lit:literal type="number" pos:line="4436" pos:column="78">0</lit:literal><op:operator pos:line="4436" pos:column="79">)</op:operator> <op:operator pos:line="4436" pos:column="81">|</op:operator>
		        <op:operator pos:line="4437" pos:column="25">(</op:operator><name pos:line="4437" pos:column="26">alt</name> <op:operator pos:line="4437" pos:column="30">?</op:operator> <name pos:line="4437" pos:column="32">SCI_ALT</name> <op:operator pos:line="4437" pos:column="40">:</op:operator> <lit:literal type="number" pos:line="4437" pos:column="42">0</lit:literal><op:operator pos:line="4437" pos:column="43">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4438" pos:column="17">scn</name><op:operator pos:line="4438" pos:column="20">.</op:operator><name pos:line="4438" pos:column="21">position</name></name> <op:operator pos:line="4438" pos:column="30">=</op:operator> <call><name><name pos:line="4438" pos:column="32">pdoc</name><op:operator pos:line="4438" pos:column="36">-&gt;</op:operator><name pos:line="4438" pos:column="38">LineStart</name></name><argument_list pos:line="4438" pos:column="47">(<argument><expr><call><name pos:line="4438" pos:column="48">LineFromLocation</name><argument_list pos:line="4438" pos:column="64">(<argument><expr><name pos:line="4438" pos:column="65">pt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4439" pos:column="17">scn</name><op:operator pos:line="4439" pos:column="20">.</op:operator><name pos:line="4439" pos:column="21">margin</name></name> <op:operator pos:line="4439" pos:column="28">=</op:operator> <name pos:line="4439" pos:column="30">marginClicked</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4440" pos:column="17">NotifyParent</name><argument_list pos:line="4440" pos:column="29">(<argument><expr><name pos:line="4440" pos:column="30">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="4441" pos:column="17">return <expr><lit:literal type="boolean" pos:line="4441" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then> <else pos:line="4442" pos:column="11">else <block pos:line="4442" pos:column="16">{
		<return pos:line="4443" pos:column="17">return <expr><lit:literal type="boolean" pos:line="4443" pos:column="24">false</lit:literal></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="4447" pos:column="1">void</name></type> <name><name pos:line="4447" pos:column="6">Editor</name><op:operator pos:line="4447" pos:column="12">::</op:operator><name pos:line="4447" pos:column="14">NotifyNeedShown</name></name><parameter_list pos:line="4447" pos:column="29">(<param><decl><type><name pos:line="4447" pos:column="30">int</name></type> <name pos:line="4447" pos:column="34">pos</name></decl></param>, <param><decl><type><name pos:line="4447" pos:column="39">int</name></type> <name pos:line="4447" pos:column="43">len</name></decl></param>)</parameter_list> <block pos:line="4447" pos:column="48">{
	<decl_stmt><decl><type><name pos:line="4448" pos:column="9">SCNotification</name></type> <name pos:line="4448" pos:column="24">scn</name> <init pos:line="4448" pos:column="28">= <expr><block pos:line="4448" pos:column="30">{<expr><lit:literal type="number" pos:line="4448" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4449" pos:column="9">scn</name><op:operator pos:line="4449" pos:column="12">.</op:operator><name pos:line="4449" pos:column="13">nmhdr</name><op:operator pos:line="4449" pos:column="18">.</op:operator><name pos:line="4449" pos:column="19">code</name></name> <op:operator pos:line="4449" pos:column="24">=</op:operator> <name pos:line="4449" pos:column="26">SCN_NEEDSHOWN</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4450" pos:column="9">scn</name><op:operator pos:line="4450" pos:column="12">.</op:operator><name pos:line="4450" pos:column="13">position</name></name> <op:operator pos:line="4450" pos:column="22">=</op:operator> <name pos:line="4450" pos:column="24">pos</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4451" pos:column="9">scn</name><op:operator pos:line="4451" pos:column="12">.</op:operator><name pos:line="4451" pos:column="13">length</name></name> <op:operator pos:line="4451" pos:column="20">=</op:operator> <name pos:line="4451" pos:column="22">len</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4452" pos:column="9">NotifyParent</name><argument_list pos:line="4452" pos:column="21">(<argument><expr><name pos:line="4452" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4455" pos:column="1">void</name></type> <name><name pos:line="4455" pos:column="6">Editor</name><op:operator pos:line="4455" pos:column="12">::</op:operator><name pos:line="4455" pos:column="14">NotifyDwelling</name></name><parameter_list pos:line="4455" pos:column="28">(<param><decl><type><name pos:line="4455" pos:column="29">Point</name></type> <name pos:line="4455" pos:column="35">pt</name></decl></param>, <param><decl><type><name pos:line="4455" pos:column="39">bool</name></type> <name pos:line="4455" pos:column="44">state</name></decl></param>)</parameter_list> <block pos:line="4455" pos:column="51">{
	<decl_stmt><decl><type><name pos:line="4456" pos:column="9">SCNotification</name></type> <name pos:line="4456" pos:column="24">scn</name> <init pos:line="4456" pos:column="28">= <expr><block pos:line="4456" pos:column="30">{<expr><lit:literal type="number" pos:line="4456" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4457" pos:column="9">scn</name><op:operator pos:line="4457" pos:column="12">.</op:operator><name pos:line="4457" pos:column="13">nmhdr</name><op:operator pos:line="4457" pos:column="18">.</op:operator><name pos:line="4457" pos:column="19">code</name></name> <op:operator pos:line="4457" pos:column="24">=</op:operator> <name pos:line="4457" pos:column="26">state</name> <op:operator pos:line="4457" pos:column="32">?</op:operator> <name pos:line="4457" pos:column="34">SCN_DWELLSTART</name> <op:operator pos:line="4457" pos:column="49">:</op:operator> <name pos:line="4457" pos:column="51">SCN_DWELLEND</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4458" pos:column="9">scn</name><op:operator pos:line="4458" pos:column="12">.</op:operator><name pos:line="4458" pos:column="13">position</name></name> <op:operator pos:line="4458" pos:column="22">=</op:operator> <call><name pos:line="4458" pos:column="24">PositionFromLocation</name><argument_list pos:line="4458" pos:column="44">(<argument><expr><name pos:line="4458" pos:column="45">pt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4458" pos:column="49">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4459" pos:column="9">scn</name><op:operator pos:line="4459" pos:column="12">.</op:operator><name pos:line="4459" pos:column="13">x</name></name> <op:operator pos:line="4459" pos:column="15">=</op:operator> <name><name pos:line="4459" pos:column="17">pt</name><op:operator pos:line="4459" pos:column="19">.</op:operator><name pos:line="4459" pos:column="20">x</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4460" pos:column="9">scn</name><op:operator pos:line="4460" pos:column="12">.</op:operator><name pos:line="4460" pos:column="13">y</name></name> <op:operator pos:line="4460" pos:column="15">=</op:operator> <name><name pos:line="4460" pos:column="17">pt</name><op:operator pos:line="4460" pos:column="19">.</op:operator><name pos:line="4460" pos:column="20">y</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4461" pos:column="9">NotifyParent</name><argument_list pos:line="4461" pos:column="21">(<argument><expr><name pos:line="4461" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4464" pos:column="1">void</name></type> <name><name pos:line="4464" pos:column="6">Editor</name><op:operator pos:line="4464" pos:column="12">::</op:operator><name pos:line="4464" pos:column="14">NotifyZoom</name></name><parameter_list pos:line="4464" pos:column="24">()</parameter_list> <block pos:line="4464" pos:column="27">{
	<decl_stmt><decl><type><name pos:line="4465" pos:column="9">SCNotification</name></type> <name pos:line="4465" pos:column="24">scn</name> <init pos:line="4465" pos:column="28">= <expr><block pos:line="4465" pos:column="30">{<expr><lit:literal type="number" pos:line="4465" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4466" pos:column="9">scn</name><op:operator pos:line="4466" pos:column="12">.</op:operator><name pos:line="4466" pos:column="13">nmhdr</name><op:operator pos:line="4466" pos:column="18">.</op:operator><name pos:line="4466" pos:column="19">code</name></name> <op:operator pos:line="4466" pos:column="24">=</op:operator> <name pos:line="4466" pos:column="26">SCN_ZOOM</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4467" pos:column="9">NotifyParent</name><argument_list pos:line="4467" pos:column="21">(<argument><expr><name pos:line="4467" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" pos:line="4470" pos:column="1">// Notifications from document</comment>
<function><type><name pos:line="4471" pos:column="1">void</name></type> <name><name pos:line="4471" pos:column="6">Editor</name><op:operator pos:line="4471" pos:column="12">::</op:operator><name pos:line="4471" pos:column="14">NotifyModifyAttempt</name></name><parameter_list pos:line="4471" pos:column="33">(<param><decl><type><name pos:line="4471" pos:column="34">Document</name> <type:modifier pos:line="4471" pos:column="43">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4471" pos:column="46">void</name> <type:modifier pos:line="4471" pos:column="51">*</type:modifier></type></decl></param>)</parameter_list> <block pos:line="4471" pos:column="54">{
	<comment type="line" pos:line="4472" pos:column="9">//Platform::DebugPrintf("** Modify Attempt\n");</comment>
	<expr_stmt><expr><call><name pos:line="4473" pos:column="9">NotifyModifyAttempt</name><argument_list pos:line="4473" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4476" pos:column="1">void</name></type> <name><name pos:line="4476" pos:column="6">Editor</name><op:operator pos:line="4476" pos:column="12">::</op:operator><name pos:line="4476" pos:column="14">NotifySavePoint</name></name><parameter_list pos:line="4476" pos:column="29">(<param><decl><type><name pos:line="4476" pos:column="30">Document</name> <type:modifier pos:line="4476" pos:column="39">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4476" pos:column="42">void</name> <type:modifier pos:line="4476" pos:column="47">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4476" pos:column="50">bool</name></type> <name pos:line="4476" pos:column="55">atSavePoint</name></decl></param>)</parameter_list> <block pos:line="4476" pos:column="68">{
	<comment type="line" pos:line="4477" pos:column="9">//Platform::DebugPrintf("** Save Point %s\n", atSavePoint ? "On" : "Off");</comment>
	<expr_stmt><expr><call><name pos:line="4478" pos:column="9">NotifySavePoint</name><argument_list pos:line="4478" pos:column="24">(<argument><expr><name pos:line="4478" pos:column="25">atSavePoint</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4481" pos:column="1">void</name></type> <name><name pos:line="4481" pos:column="6">Editor</name><op:operator pos:line="4481" pos:column="12">::</op:operator><name pos:line="4481" pos:column="14">CheckModificationForWrap</name></name><parameter_list pos:line="4481" pos:column="38">(<param><decl><type><name pos:line="4481" pos:column="39">DocModification</name></type> <name pos:line="4481" pos:column="55">mh</name></decl></param>)</parameter_list> <block pos:line="4481" pos:column="59">{
	<if pos:line="4482" pos:column="9">if <condition pos:line="4482" pos:column="12">(<expr><name><name pos:line="4482" pos:column="13">mh</name><op:operator pos:line="4482" pos:column="15">.</op:operator><name pos:line="4482" pos:column="16">modificationType</name></name> <op:operator pos:line="4482" pos:column="33">&amp;</op:operator> <op:operator pos:line="4482" pos:column="35">(</op:operator><name pos:line="4482" pos:column="36">SC_MOD_INSERTTEXT</name> <op:operator pos:line="4482" pos:column="54">|</op:operator> <name pos:line="4482" pos:column="56">SC_MOD_DELETETEXT</name><op:operator pos:line="4482" pos:column="73">)</op:operator></expr>)</condition><then pos:line="4482" pos:column="75"> <block pos:line="4482" pos:column="76">{
		<expr_stmt><expr><call><name><name pos:line="4483" pos:column="17">llc</name><op:operator pos:line="4483" pos:column="20">.</op:operator><name pos:line="4483" pos:column="21">Invalidate</name></name><argument_list pos:line="4483" pos:column="31">(<argument><expr><name><name pos:line="4483" pos:column="32">LineLayout</name><op:operator pos:line="4483" pos:column="42">::</op:operator><name pos:line="4483" pos:column="44">llCheckTextAndStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="4484" pos:column="17">if <condition pos:line="4484" pos:column="20">(<expr><name pos:line="4484" pos:column="21">wrapState</name> <op:operator pos:line="4484" pos:column="31">!=</op:operator> <name pos:line="4484" pos:column="34">eWrapNone</name></expr>)</condition><then pos:line="4484" pos:column="44"> <block pos:line="4484" pos:column="45">{
			<decl_stmt><decl><type><name pos:line="4485" pos:column="25">int</name></type> <name pos:line="4485" pos:column="29">lineDoc</name> <init pos:line="4485" pos:column="37">= <expr><call><name><name pos:line="4485" pos:column="39">pdoc</name><op:operator pos:line="4485" pos:column="43">-&gt;</op:operator><name pos:line="4485" pos:column="45">LineFromPosition</name></name><argument_list pos:line="4485" pos:column="61">(<argument><expr><name><name pos:line="4485" pos:column="62">mh</name><op:operator pos:line="4485" pos:column="64">.</op:operator><name pos:line="4485" pos:column="65">position</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4486" pos:column="25">int</name></type> <name pos:line="4486" pos:column="29">lines</name> <init pos:line="4486" pos:column="35">= <expr><call><name><name pos:line="4486" pos:column="37">Platform</name><op:operator pos:line="4486" pos:column="45">::</op:operator><name pos:line="4486" pos:column="47">Maximum</name></name><argument_list pos:line="4486" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="4486" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="4486" pos:column="58">mh</name><op:operator pos:line="4486" pos:column="60">.</op:operator><name pos:line="4486" pos:column="61">linesAdded</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="4487" pos:column="25">NeedWrapping</name><argument_list pos:line="4487" pos:column="37">(<argument><expr><name pos:line="4487" pos:column="38">lineDoc</name></expr></argument>, <argument><expr><name pos:line="4487" pos:column="47">lineDoc</name> <op:operator pos:line="4487" pos:column="55">+</op:operator> <name pos:line="4487" pos:column="57">lines</name> <op:operator pos:line="4487" pos:column="63">+</op:operator> <lit:literal type="number" pos:line="4487" pos:column="65">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<comment type="line" pos:line="4489" pos:column="17">// Fix up annotation heights</comment>
		<decl_stmt><decl><type><name pos:line="4490" pos:column="17">int</name></type> <name pos:line="4490" pos:column="21">lineDoc</name> <init pos:line="4490" pos:column="29">= <expr><call><name><name pos:line="4490" pos:column="31">pdoc</name><op:operator pos:line="4490" pos:column="35">-&gt;</op:operator><name pos:line="4490" pos:column="37">LineFromPosition</name></name><argument_list pos:line="4490" pos:column="53">(<argument><expr><name><name pos:line="4490" pos:column="54">mh</name><op:operator pos:line="4490" pos:column="56">.</op:operator><name pos:line="4490" pos:column="57">position</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4491" pos:column="17">int</name></type> <name pos:line="4491" pos:column="21">lines</name> <init pos:line="4491" pos:column="27">= <expr><call><name><name pos:line="4491" pos:column="29">Platform</name><op:operator pos:line="4491" pos:column="37">::</op:operator><name pos:line="4491" pos:column="39">Maximum</name></name><argument_list pos:line="4491" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="4491" pos:column="47">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="4491" pos:column="50">mh</name><op:operator pos:line="4491" pos:column="52">.</op:operator><name pos:line="4491" pos:column="53">linesAdded</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="4492" pos:column="17">SetAnnotationHeights</name><argument_list pos:line="4492" pos:column="37">(<argument><expr><name pos:line="4492" pos:column="38">lineDoc</name></expr></argument>, <argument><expr><name pos:line="4492" pos:column="47">lineDoc</name> <op:operator pos:line="4492" pos:column="55">+</op:operator> <name pos:line="4492" pos:column="57">lines</name> <op:operator pos:line="4492" pos:column="63">+</op:operator> <lit:literal type="number" pos:line="4492" pos:column="65">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<comment type="line" pos:line="4496" pos:column="1">// Move a position so it is still after the same character as before the insertion.</comment>
<function><type><specifier pos:line="4497" pos:column="1">static</specifier> <specifier pos:line="4497" pos:column="8">inline</specifier> <name pos:line="4497" pos:column="15">int</name></type> <name pos:line="4497" pos:column="19">MovePositionForInsertion</name><parameter_list pos:line="4497" pos:column="43">(<param><decl><type><name pos:line="4497" pos:column="44">int</name></type> <name pos:line="4497" pos:column="48">position</name></decl></param>, <param><decl><type><name pos:line="4497" pos:column="58">int</name></type> <name pos:line="4497" pos:column="62">startInsertion</name></decl></param>, <param><decl><type><name pos:line="4497" pos:column="78">int</name></type> <name pos:line="4497" pos:column="82">length</name></decl></param>)</parameter_list> <block pos:line="4497" pos:column="90">{
	<if pos:line="4498" pos:column="9">if <condition pos:line="4498" pos:column="12">(<expr><name pos:line="4498" pos:column="13">position</name> <op:operator pos:line="4498" pos:column="22">&gt;</op:operator> <name pos:line="4498" pos:column="24">startInsertion</name></expr>)</condition><then pos:line="4498" pos:column="39"> <block pos:line="4498" pos:column="40">{
		<return pos:line="4499" pos:column="17">return <expr><name pos:line="4499" pos:column="24">position</name> <op:operator pos:line="4499" pos:column="33">+</op:operator> <name pos:line="4499" pos:column="35">length</name></expr>;</return>
	}</block></then></if>
	<return pos:line="4501" pos:column="9">return <expr><name pos:line="4501" pos:column="16">position</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="4504" pos:column="1">// Move a position so it is still after the same character as before the deletion if that</comment>
<comment type="line" pos:line="4505" pos:column="1">// character is still present else after the previous surviving character.</comment>
<function><type><specifier pos:line="4506" pos:column="1">static</specifier> <specifier pos:line="4506" pos:column="8">inline</specifier> <name pos:line="4506" pos:column="15">int</name></type> <name pos:line="4506" pos:column="19">MovePositionForDeletion</name><parameter_list pos:line="4506" pos:column="42">(<param><decl><type><name pos:line="4506" pos:column="43">int</name></type> <name pos:line="4506" pos:column="47">position</name></decl></param>, <param><decl><type><name pos:line="4506" pos:column="57">int</name></type> <name pos:line="4506" pos:column="61">startDeletion</name></decl></param>, <param><decl><type><name pos:line="4506" pos:column="76">int</name></type> <name pos:line="4506" pos:column="80">length</name></decl></param>)</parameter_list> <block pos:line="4506" pos:column="88">{
	<if pos:line="4507" pos:column="9">if <condition pos:line="4507" pos:column="12">(<expr><name pos:line="4507" pos:column="13">position</name> <op:operator pos:line="4507" pos:column="22">&gt;</op:operator> <name pos:line="4507" pos:column="24">startDeletion</name></expr>)</condition><then pos:line="4507" pos:column="38"> <block pos:line="4507" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="4508" pos:column="17">int</name></type> <name pos:line="4508" pos:column="21">endDeletion</name> <init pos:line="4508" pos:column="33">= <expr><name pos:line="4508" pos:column="35">startDeletion</name> <op:operator pos:line="4508" pos:column="49">+</op:operator> <name pos:line="4508" pos:column="51">length</name></expr></init></decl>;</decl_stmt>
		<if pos:line="4509" pos:column="17">if <condition pos:line="4509" pos:column="20">(<expr><name pos:line="4509" pos:column="21">position</name> <op:operator pos:line="4509" pos:column="30">&gt;</op:operator> <name pos:line="4509" pos:column="32">endDeletion</name></expr>)</condition><then pos:line="4509" pos:column="44"> <block pos:line="4509" pos:column="45">{
			<return pos:line="4510" pos:column="25">return <expr><name pos:line="4510" pos:column="32">position</name> <op:operator pos:line="4510" pos:column="41">-</op:operator> <name pos:line="4510" pos:column="43">length</name></expr>;</return>
		}</block></then> <else pos:line="4511" pos:column="19">else <block pos:line="4511" pos:column="24">{
			<return pos:line="4512" pos:column="25">return <expr><name pos:line="4512" pos:column="32">startDeletion</name></expr>;</return>
		}</block></else></if>
	}</block></then> <else pos:line="4514" pos:column="11">else <block pos:line="4514" pos:column="16">{
		<return pos:line="4515" pos:column="17">return <expr><name pos:line="4515" pos:column="24">position</name></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="4519" pos:column="1">void</name></type> <name><name pos:line="4519" pos:column="6">Editor</name><op:operator pos:line="4519" pos:column="12">::</op:operator><name pos:line="4519" pos:column="14">NotifyModified</name></name><parameter_list pos:line="4519" pos:column="28">(<param><decl><type><name pos:line="4519" pos:column="29">Document</name> <type:modifier pos:line="4519" pos:column="38">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4519" pos:column="41">DocModification</name></type> <name pos:line="4519" pos:column="57">mh</name></decl></param>, <param><decl><type><name pos:line="4519" pos:column="61">void</name> <type:modifier pos:line="4519" pos:column="66">*</type:modifier></type></decl></param>)</parameter_list> <block pos:line="4519" pos:column="69">{
	<expr_stmt><expr><call><name pos:line="4520" pos:column="9">ContainerNeedsUpdate</name><argument_list pos:line="4520" pos:column="29">(<argument><expr><name pos:line="4520" pos:column="30">SC_UPDATE_CONTENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4521" pos:column="9">if <condition pos:line="4521" pos:column="12">(<expr><name pos:line="4521" pos:column="13">paintState</name> <op:operator pos:line="4521" pos:column="24">==</op:operator> <name pos:line="4521" pos:column="27">painting</name></expr>)</condition><then pos:line="4521" pos:column="36"> <block pos:line="4521" pos:column="37">{
		<expr_stmt><expr><call><name pos:line="4522" pos:column="17">CheckForChangeOutsidePaint</name><argument_list pos:line="4522" pos:column="43">(<argument><expr><call><name pos:line="4522" pos:column="44">Range</name><argument_list pos:line="4522" pos:column="49">(<argument><expr><name><name pos:line="4522" pos:column="50">mh</name><op:operator pos:line="4522" pos:column="52">.</op:operator><name pos:line="4522" pos:column="53">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4522" pos:column="63">mh</name><op:operator pos:line="4522" pos:column="65">.</op:operator><name pos:line="4522" pos:column="66">position</name></name> <op:operator pos:line="4522" pos:column="75">+</op:operator> <name><name pos:line="4522" pos:column="77">mh</name><op:operator pos:line="4522" pos:column="79">.</op:operator><name pos:line="4522" pos:column="80">length</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4524" pos:column="9">if <condition pos:line="4524" pos:column="12">(<expr><name><name pos:line="4524" pos:column="13">mh</name><op:operator pos:line="4524" pos:column="15">.</op:operator><name pos:line="4524" pos:column="16">modificationType</name></name> <op:operator pos:line="4524" pos:column="33">&amp;</op:operator> <name pos:line="4524" pos:column="35">SC_MOD_CHANGELINESTATE</name></expr>)</condition><then pos:line="4524" pos:column="58"> <block pos:line="4524" pos:column="59">{
		<if pos:line="4525" pos:column="17">if <condition pos:line="4525" pos:column="20">(<expr><name pos:line="4525" pos:column="21">paintState</name> <op:operator pos:line="4525" pos:column="32">==</op:operator> <name pos:line="4525" pos:column="35">painting</name></expr>)</condition><then pos:line="4525" pos:column="44"> <block pos:line="4525" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="4526" pos:column="25">CheckForChangeOutsidePaint</name><argument_list pos:line="4526" pos:column="51">(
			    <argument><expr><call><name pos:line="4527" pos:column="29">Range</name><argument_list pos:line="4527" pos:column="34">(<argument><expr><call><name><name pos:line="4527" pos:column="35">pdoc</name><op:operator pos:line="4527" pos:column="39">-&gt;</op:operator><name pos:line="4527" pos:column="41">LineStart</name></name><argument_list pos:line="4527" pos:column="50">(<argument><expr><name><name pos:line="4527" pos:column="51">mh</name><op:operator pos:line="4527" pos:column="53">.</op:operator><name pos:line="4527" pos:column="54">line</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4527" pos:column="61">pdoc</name><op:operator pos:line="4527" pos:column="65">-&gt;</op:operator><name pos:line="4527" pos:column="67">LineStart</name></name><argument_list pos:line="4527" pos:column="76">(<argument><expr><name><name pos:line="4527" pos:column="77">mh</name><op:operator pos:line="4527" pos:column="79">.</op:operator><name pos:line="4527" pos:column="80">line</name></name> <op:operator pos:line="4527" pos:column="85">+</op:operator> <lit:literal type="number" pos:line="4527" pos:column="87">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="4528" pos:column="19">else <block pos:line="4528" pos:column="24">{
			<comment type="line" pos:line="4529" pos:column="25">// Could check that change is before last visible line.</comment>
			<expr_stmt><expr><call><name pos:line="4530" pos:column="25">Redraw</name><argument_list pos:line="4530" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
	<if pos:line="4533" pos:column="9">if <condition pos:line="4533" pos:column="12">(<expr><name><name pos:line="4533" pos:column="13">mh</name><op:operator pos:line="4533" pos:column="15">.</op:operator><name pos:line="4533" pos:column="16">modificationType</name></name> <op:operator pos:line="4533" pos:column="33">&amp;</op:operator> <name pos:line="4533" pos:column="35">SC_MOD_LEXERSTATE</name></expr>)</condition><then pos:line="4533" pos:column="53"> <block pos:line="4533" pos:column="54">{
		<if pos:line="4534" pos:column="17">if <condition pos:line="4534" pos:column="20">(<expr><name pos:line="4534" pos:column="21">paintState</name> <op:operator pos:line="4534" pos:column="32">==</op:operator> <name pos:line="4534" pos:column="35">painting</name></expr>)</condition><then pos:line="4534" pos:column="44"> <block pos:line="4534" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="4535" pos:column="25">CheckForChangeOutsidePaint</name><argument_list pos:line="4535" pos:column="51">(
			    <argument><expr><call><name pos:line="4536" pos:column="29">Range</name><argument_list pos:line="4536" pos:column="34">(<argument><expr><name><name pos:line="4536" pos:column="35">mh</name><op:operator pos:line="4536" pos:column="37">.</op:operator><name pos:line="4536" pos:column="38">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4536" pos:column="48">mh</name><op:operator pos:line="4536" pos:column="50">.</op:operator><name pos:line="4536" pos:column="51">position</name></name> <op:operator pos:line="4536" pos:column="60">+</op:operator> <name><name pos:line="4536" pos:column="62">mh</name><op:operator pos:line="4536" pos:column="64">.</op:operator><name pos:line="4536" pos:column="65">length</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="4537" pos:column="19">else <block pos:line="4537" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="4538" pos:column="25">Redraw</name><argument_list pos:line="4538" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
	<if pos:line="4541" pos:column="9">if <condition pos:line="4541" pos:column="12">(<expr><name><name pos:line="4541" pos:column="13">mh</name><op:operator pos:line="4541" pos:column="15">.</op:operator><name pos:line="4541" pos:column="16">modificationType</name></name> <op:operator pos:line="4541" pos:column="33">&amp;</op:operator> <op:operator pos:line="4541" pos:column="35">(</op:operator><name pos:line="4541" pos:column="36">SC_MOD_CHANGESTYLE</name> <op:operator pos:line="4541" pos:column="55">|</op:operator> <name pos:line="4541" pos:column="57">SC_MOD_CHANGEINDICATOR</name><op:operator pos:line="4541" pos:column="79">)</op:operator></expr>)</condition><then pos:line="4541" pos:column="81"> <block pos:line="4541" pos:column="82">{
		<if pos:line="4542" pos:column="17">if <condition pos:line="4542" pos:column="20">(<expr><name><name pos:line="4542" pos:column="21">mh</name><op:operator pos:line="4542" pos:column="23">.</op:operator><name pos:line="4542" pos:column="24">modificationType</name></name> <op:operator pos:line="4542" pos:column="41">&amp;</op:operator> <name pos:line="4542" pos:column="43">SC_MOD_CHANGESTYLE</name></expr>)</condition><then pos:line="4542" pos:column="62"> <block pos:line="4542" pos:column="63">{
			<expr_stmt><expr><call><name><name pos:line="4543" pos:column="25">pdoc</name><op:operator pos:line="4543" pos:column="29">-&gt;</op:operator><name pos:line="4543" pos:column="31">IncrementStyleClock</name></name><argument_list pos:line="4543" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="4545" pos:column="17">if <condition pos:line="4545" pos:column="20">(<expr><name pos:line="4545" pos:column="21">paintState</name> <op:operator pos:line="4545" pos:column="32">==</op:operator> <name pos:line="4545" pos:column="35">notPainting</name></expr>)</condition><then pos:line="4545" pos:column="47"> <block pos:line="4545" pos:column="48">{
			<if pos:line="4546" pos:column="25">if <condition pos:line="4546" pos:column="28">(<expr><name><name pos:line="4546" pos:column="29">mh</name><op:operator pos:line="4546" pos:column="31">.</op:operator><name pos:line="4546" pos:column="32">position</name></name> <op:operator pos:line="4546" pos:column="41">&lt;</op:operator> <call><name><name pos:line="4546" pos:column="43">pdoc</name><op:operator pos:line="4546" pos:column="47">-&gt;</op:operator><name pos:line="4546" pos:column="49">LineStart</name></name><argument_list pos:line="4546" pos:column="58">(<argument><expr><name pos:line="4546" pos:column="59">topLine</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4546" pos:column="68"> <block pos:line="4546" pos:column="69">{
				<comment type="line" pos:line="4547" pos:column="33">// Styling performed before this view</comment>
				<expr_stmt><expr><call><name pos:line="4548" pos:column="33">Redraw</name><argument_list pos:line="4548" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="4549" pos:column="27">else <block pos:line="4549" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="4550" pos:column="33">InvalidateRange</name><argument_list pos:line="4550" pos:column="48">(<argument><expr><name><name pos:line="4550" pos:column="49">mh</name><op:operator pos:line="4550" pos:column="51">.</op:operator><name pos:line="4550" pos:column="52">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4550" pos:column="62">mh</name><op:operator pos:line="4550" pos:column="64">.</op:operator><name pos:line="4550" pos:column="65">position</name></name> <op:operator pos:line="4550" pos:column="74">+</op:operator> <name><name pos:line="4550" pos:column="76">mh</name><op:operator pos:line="4550" pos:column="78">.</op:operator><name pos:line="4550" pos:column="79">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then></if>
		<if pos:line="4553" pos:column="17">if <condition pos:line="4553" pos:column="20">(<expr><name><name pos:line="4553" pos:column="21">mh</name><op:operator pos:line="4553" pos:column="23">.</op:operator><name pos:line="4553" pos:column="24">modificationType</name></name> <op:operator pos:line="4553" pos:column="41">&amp;</op:operator> <name pos:line="4553" pos:column="43">SC_MOD_CHANGESTYLE</name></expr>)</condition><then pos:line="4553" pos:column="62"> <block pos:line="4553" pos:column="63">{
			<expr_stmt><expr><call><name><name pos:line="4554" pos:column="25">llc</name><op:operator pos:line="4554" pos:column="28">.</op:operator><name pos:line="4554" pos:column="29">Invalidate</name></name><argument_list pos:line="4554" pos:column="39">(<argument><expr><name><name pos:line="4554" pos:column="40">LineLayout</name><op:operator pos:line="4554" pos:column="50">::</op:operator><name pos:line="4554" pos:column="52">llCheckTextAndStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="4556" pos:column="11">else <block pos:line="4556" pos:column="16">{
		<comment type="line" pos:line="4557" pos:column="17">// Move selection and brace highlights</comment>
		<if pos:line="4558" pos:column="17">if <condition pos:line="4558" pos:column="20">(<expr><name><name pos:line="4558" pos:column="21">mh</name><op:operator pos:line="4558" pos:column="23">.</op:operator><name pos:line="4558" pos:column="24">modificationType</name></name> <op:operator pos:line="4558" pos:column="41">&amp;</op:operator> <name pos:line="4558" pos:column="43">SC_MOD_INSERTTEXT</name></expr>)</condition><then pos:line="4558" pos:column="61"> <block pos:line="4558" pos:column="62">{
			<expr_stmt><expr><call><name><name pos:line="4559" pos:column="25">sel</name><op:operator pos:line="4559" pos:column="28">.</op:operator><name pos:line="4559" pos:column="29">MovePositions</name></name><argument_list pos:line="4559" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="4559" pos:column="43">true</lit:literal></expr></argument>, <argument><expr><name><name pos:line="4559" pos:column="49">mh</name><op:operator pos:line="4559" pos:column="51">.</op:operator><name pos:line="4559" pos:column="52">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4559" pos:column="62">mh</name><op:operator pos:line="4559" pos:column="64">.</op:operator><name pos:line="4559" pos:column="65">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="4560" pos:column="25">braces</name><index pos:line="4560" pos:column="31">[<expr><lit:literal type="number" pos:line="4560" pos:column="32">0</lit:literal></expr>]</index></name> <op:operator pos:line="4560" pos:column="35">=</op:operator> <call><name pos:line="4560" pos:column="37">MovePositionForInsertion</name><argument_list pos:line="4560" pos:column="61">(<argument><expr><name><name pos:line="4560" pos:column="62">braces</name><index pos:line="4560" pos:column="68">[<expr><lit:literal type="number" pos:line="4560" pos:column="69">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="4560" pos:column="73">mh</name><op:operator pos:line="4560" pos:column="75">.</op:operator><name pos:line="4560" pos:column="76">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4560" pos:column="86">mh</name><op:operator pos:line="4560" pos:column="88">.</op:operator><name pos:line="4560" pos:column="89">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="4561" pos:column="25">braces</name><index pos:line="4561" pos:column="31">[<expr><lit:literal type="number" pos:line="4561" pos:column="32">1</lit:literal></expr>]</index></name> <op:operator pos:line="4561" pos:column="35">=</op:operator> <call><name pos:line="4561" pos:column="37">MovePositionForInsertion</name><argument_list pos:line="4561" pos:column="61">(<argument><expr><name><name pos:line="4561" pos:column="62">braces</name><index pos:line="4561" pos:column="68">[<expr><lit:literal type="number" pos:line="4561" pos:column="69">1</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="4561" pos:column="73">mh</name><op:operator pos:line="4561" pos:column="75">.</op:operator><name pos:line="4561" pos:column="76">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4561" pos:column="86">mh</name><op:operator pos:line="4561" pos:column="88">.</op:operator><name pos:line="4561" pos:column="89">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="4562" pos:column="19">else <if pos:line="4562" pos:column="24">if <condition pos:line="4562" pos:column="27">(<expr><name><name pos:line="4562" pos:column="28">mh</name><op:operator pos:line="4562" pos:column="30">.</op:operator><name pos:line="4562" pos:column="31">modificationType</name></name> <op:operator pos:line="4562" pos:column="48">&amp;</op:operator> <name pos:line="4562" pos:column="50">SC_MOD_DELETETEXT</name></expr>)</condition><then pos:line="4562" pos:column="68"> <block pos:line="4562" pos:column="69">{
			<expr_stmt><expr><call><name><name pos:line="4563" pos:column="25">sel</name><op:operator pos:line="4563" pos:column="28">.</op:operator><name pos:line="4563" pos:column="29">MovePositions</name></name><argument_list pos:line="4563" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="4563" pos:column="43">false</lit:literal></expr></argument>, <argument><expr><name><name pos:line="4563" pos:column="50">mh</name><op:operator pos:line="4563" pos:column="52">.</op:operator><name pos:line="4563" pos:column="53">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4563" pos:column="63">mh</name><op:operator pos:line="4563" pos:column="65">.</op:operator><name pos:line="4563" pos:column="66">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="4564" pos:column="25">braces</name><index pos:line="4564" pos:column="31">[<expr><lit:literal type="number" pos:line="4564" pos:column="32">0</lit:literal></expr>]</index></name> <op:operator pos:line="4564" pos:column="35">=</op:operator> <call><name pos:line="4564" pos:column="37">MovePositionForDeletion</name><argument_list pos:line="4564" pos:column="60">(<argument><expr><name><name pos:line="4564" pos:column="61">braces</name><index pos:line="4564" pos:column="67">[<expr><lit:literal type="number" pos:line="4564" pos:column="68">0</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="4564" pos:column="72">mh</name><op:operator pos:line="4564" pos:column="74">.</op:operator><name pos:line="4564" pos:column="75">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4564" pos:column="85">mh</name><op:operator pos:line="4564" pos:column="87">.</op:operator><name pos:line="4564" pos:column="88">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="4565" pos:column="25">braces</name><index pos:line="4565" pos:column="31">[<expr><lit:literal type="number" pos:line="4565" pos:column="32">1</lit:literal></expr>]</index></name> <op:operator pos:line="4565" pos:column="35">=</op:operator> <call><name pos:line="4565" pos:column="37">MovePositionForDeletion</name><argument_list pos:line="4565" pos:column="60">(<argument><expr><name><name pos:line="4565" pos:column="61">braces</name><index pos:line="4565" pos:column="67">[<expr><lit:literal type="number" pos:line="4565" pos:column="68">1</lit:literal></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="4565" pos:column="72">mh</name><op:operator pos:line="4565" pos:column="74">.</op:operator><name pos:line="4565" pos:column="75">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4565" pos:column="85">mh</name><op:operator pos:line="4565" pos:column="87">.</op:operator><name pos:line="4565" pos:column="88">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if></else></if>
		<if pos:line="4567" pos:column="17">if <condition pos:line="4567" pos:column="20">(<expr><op:operator pos:line="4567" pos:column="21">(</op:operator><name><name pos:line="4567" pos:column="22">mh</name><op:operator pos:line="4567" pos:column="24">.</op:operator><name pos:line="4567" pos:column="25">modificationType</name></name> <op:operator pos:line="4567" pos:column="42">&amp;</op:operator> <op:operator pos:line="4567" pos:column="44">(</op:operator><name pos:line="4567" pos:column="45">SC_MOD_BEFOREINSERT</name> <op:operator pos:line="4567" pos:column="65">|</op:operator> <name pos:line="4567" pos:column="67">SC_MOD_BEFOREDELETE</name><op:operator pos:line="4567" pos:column="86">)</op:operator><op:operator pos:line="4567" pos:column="87">)</op:operator> <op:operator pos:line="4567" pos:column="89">&amp;&amp;</op:operator> <call><name><name pos:line="4567" pos:column="92">cs</name><op:operator pos:line="4567" pos:column="94">.</op:operator><name pos:line="4567" pos:column="95">HiddenLines</name></name><argument_list pos:line="4567" pos:column="106">()</argument_list></call></expr>)</condition><then pos:line="4567" pos:column="109"> <block pos:line="4567" pos:column="110">{
			<comment type="line" pos:line="4568" pos:column="25">// Some lines are hidden so may need shown.</comment>
			<comment type="line" pos:line="4569" pos:column="25">// TODO: check if the modified area is hidden.</comment>
			<if pos:line="4570" pos:column="25">if <condition pos:line="4570" pos:column="28">(<expr><name><name pos:line="4570" pos:column="29">mh</name><op:operator pos:line="4570" pos:column="31">.</op:operator><name pos:line="4570" pos:column="32">modificationType</name></name> <op:operator pos:line="4570" pos:column="49">&amp;</op:operator> <name pos:line="4570" pos:column="51">SC_MOD_BEFOREINSERT</name></expr>)</condition><then pos:line="4570" pos:column="71"> <block pos:line="4570" pos:column="72">{
				<decl_stmt><decl><type><name pos:line="4571" pos:column="33">int</name></type> <name pos:line="4571" pos:column="37">lineOfPos</name> <init pos:line="4571" pos:column="47">= <expr><call><name><name pos:line="4571" pos:column="49">pdoc</name><op:operator pos:line="4571" pos:column="53">-&gt;</op:operator><name pos:line="4571" pos:column="55">LineFromPosition</name></name><argument_list pos:line="4571" pos:column="71">(<argument><expr><name><name pos:line="4571" pos:column="72">mh</name><op:operator pos:line="4571" pos:column="74">.</op:operator><name pos:line="4571" pos:column="75">position</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="4572" pos:column="33">bool</name></type> <name pos:line="4572" pos:column="38">insertingNewLine</name> <init pos:line="4572" pos:column="55">= <expr><lit:literal type="boolean" pos:line="4572" pos:column="57">false</lit:literal></expr></init></decl>;</decl_stmt>
				<for pos:line="4573" pos:column="33">for (<init><decl><type><name pos:line="4573" pos:column="38">int</name></type> <name pos:line="4573" pos:column="42">i</name><init pos:line="4573" pos:column="43">=<expr><lit:literal type="number" pos:line="4573" pos:column="44">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4573" pos:column="47">i</name> <op:operator pos:line="4573" pos:column="49">&lt;</op:operator> <name><name pos:line="4573" pos:column="51">mh</name><op:operator pos:line="4573" pos:column="53">.</op:operator><name pos:line="4573" pos:column="54">length</name></name></expr>;</condition> <incr><expr><name pos:line="4573" pos:column="62">i</name><op:operator pos:line="4573" pos:column="63">++</op:operator></expr></incr>) <block pos:line="4573" pos:column="67">{
					<if pos:line="4574" pos:column="41">if <condition pos:line="4574" pos:column="44">(<expr><op:operator pos:line="4574" pos:column="45">(</op:operator><name><name pos:line="4574" pos:column="46">mh</name><op:operator pos:line="4574" pos:column="48">.</op:operator><name pos:line="4574" pos:column="49">text</name><index pos:line="4574" pos:column="53">[<expr><name pos:line="4574" pos:column="54">i</name></expr>]</index></name> <op:operator pos:line="4574" pos:column="57">==</op:operator> <lit:literal type="char" pos:line="4574" pos:column="60">'\n'</lit:literal><op:operator pos:line="4574" pos:column="64">)</op:operator> <op:operator pos:line="4574" pos:column="66">||</op:operator> <op:operator pos:line="4574" pos:column="69">(</op:operator><name><name pos:line="4574" pos:column="70">mh</name><op:operator pos:line="4574" pos:column="72">.</op:operator><name pos:line="4574" pos:column="73">text</name><index pos:line="4574" pos:column="77">[<expr><name pos:line="4574" pos:column="78">i</name></expr>]</index></name> <op:operator pos:line="4574" pos:column="81">==</op:operator> <lit:literal type="char" pos:line="4574" pos:column="84">'\r'</lit:literal><op:operator pos:line="4574" pos:column="88">)</op:operator></expr>)</condition><then pos:line="4574" pos:column="90">
						<expr_stmt><expr><name pos:line="4575" pos:column="49">insertingNewLine</name> <op:operator pos:line="4575" pos:column="66">=</op:operator> <lit:literal type="boolean" pos:line="4575" pos:column="68">true</lit:literal></expr>;</expr_stmt></then></if>
				}</block></for>
				<if pos:line="4577" pos:column="33">if <condition pos:line="4577" pos:column="36">(<expr><name pos:line="4577" pos:column="37">insertingNewLine</name> <op:operator pos:line="4577" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="4577" pos:column="57">(</op:operator><name><name pos:line="4577" pos:column="58">mh</name><op:operator pos:line="4577" pos:column="60">.</op:operator><name pos:line="4577" pos:column="61">position</name></name> <op:operator pos:line="4577" pos:column="70">!=</op:operator> <call><name><name pos:line="4577" pos:column="73">pdoc</name><op:operator pos:line="4577" pos:column="77">-&gt;</op:operator><name pos:line="4577" pos:column="79">LineStart</name></name><argument_list pos:line="4577" pos:column="88">(<argument><expr><name pos:line="4577" pos:column="89">lineOfPos</name></expr></argument>)</argument_list></call><op:operator pos:line="4577" pos:column="99">)</op:operator></expr>)</condition><then pos:line="4577" pos:column="101">
					<expr_stmt><expr><call><name pos:line="4578" pos:column="41">NotifyNeedShown</name><argument_list pos:line="4578" pos:column="56">(<argument><expr><name><name pos:line="4578" pos:column="57">mh</name><op:operator pos:line="4578" pos:column="59">.</op:operator><name pos:line="4578" pos:column="60">position</name></name></expr></argument>, <argument><expr><call><name><name pos:line="4578" pos:column="70">pdoc</name><op:operator pos:line="4578" pos:column="74">-&gt;</op:operator><name pos:line="4578" pos:column="76">LineStart</name></name><argument_list pos:line="4578" pos:column="85">(<argument><expr><name pos:line="4578" pos:column="86">lineOfPos</name><op:operator pos:line="4578" pos:column="95">+</op:operator><lit:literal type="number" pos:line="4578" pos:column="96">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="4578" pos:column="99">-</op:operator> <name><name pos:line="4578" pos:column="101">mh</name><op:operator pos:line="4578" pos:column="103">.</op:operator><name pos:line="4578" pos:column="104">position</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="4579" pos:column="33">else
					<expr_stmt><expr><call><name pos:line="4580" pos:column="41">NotifyNeedShown</name><argument_list pos:line="4580" pos:column="56">(<argument><expr><name><name pos:line="4580" pos:column="57">mh</name><op:operator pos:line="4580" pos:column="59">.</op:operator><name pos:line="4580" pos:column="60">position</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4580" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then> <else pos:line="4581" pos:column="27">else <if pos:line="4581" pos:column="32">if <condition pos:line="4581" pos:column="35">(<expr><name><name pos:line="4581" pos:column="36">mh</name><op:operator pos:line="4581" pos:column="38">.</op:operator><name pos:line="4581" pos:column="39">modificationType</name></name> <op:operator pos:line="4581" pos:column="56">&amp;</op:operator> <name pos:line="4581" pos:column="58">SC_MOD_BEFOREDELETE</name></expr>)</condition><then pos:line="4581" pos:column="78"> <block pos:line="4581" pos:column="79">{
				<expr_stmt><expr><call><name pos:line="4582" pos:column="33">NotifyNeedShown</name><argument_list pos:line="4582" pos:column="48">(<argument><expr><name><name pos:line="4582" pos:column="49">mh</name><op:operator pos:line="4582" pos:column="51">.</op:operator><name pos:line="4582" pos:column="52">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4582" pos:column="62">mh</name><op:operator pos:line="4582" pos:column="64">.</op:operator><name pos:line="4582" pos:column="65">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if></else></if>
		}</block></then></if>
		<if pos:line="4585" pos:column="17">if <condition pos:line="4585" pos:column="20">(<expr><name><name pos:line="4585" pos:column="21">mh</name><op:operator pos:line="4585" pos:column="23">.</op:operator><name pos:line="4585" pos:column="24">linesAdded</name></name> <op:operator pos:line="4585" pos:column="35">!=</op:operator> <lit:literal type="number" pos:line="4585" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="4585" pos:column="40"> <block pos:line="4585" pos:column="41">{
			<comment type="line" pos:line="4586" pos:column="25">// Update contraction state for inserted and removed lines</comment>
			<comment type="line" pos:line="4587" pos:column="25">// lineOfPos should be calculated in context of state before modification, shouldn't it</comment>
			<decl_stmt><decl><type><name pos:line="4588" pos:column="25">int</name></type> <name pos:line="4588" pos:column="29">lineOfPos</name> <init pos:line="4588" pos:column="39">= <expr><call><name><name pos:line="4588" pos:column="41">pdoc</name><op:operator pos:line="4588" pos:column="45">-&gt;</op:operator><name pos:line="4588" pos:column="47">LineFromPosition</name></name><argument_list pos:line="4588" pos:column="63">(<argument><expr><name><name pos:line="4588" pos:column="64">mh</name><op:operator pos:line="4588" pos:column="66">.</op:operator><name pos:line="4588" pos:column="67">position</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4589" pos:column="25">if <condition pos:line="4589" pos:column="28">(<expr><name><name pos:line="4589" pos:column="29">mh</name><op:operator pos:line="4589" pos:column="31">.</op:operator><name pos:line="4589" pos:column="32">linesAdded</name></name> <op:operator pos:line="4589" pos:column="43">&gt;</op:operator> <lit:literal type="number" pos:line="4589" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="4589" pos:column="47"> <block pos:line="4589" pos:column="48">{
				<expr_stmt><expr><call><name><name pos:line="4590" pos:column="33">cs</name><op:operator pos:line="4590" pos:column="35">.</op:operator><name pos:line="4590" pos:column="36">InsertLines</name></name><argument_list pos:line="4590" pos:column="47">(<argument><expr><name pos:line="4590" pos:column="48">lineOfPos</name></expr></argument>, <argument><expr><name><name pos:line="4590" pos:column="59">mh</name><op:operator pos:line="4590" pos:column="61">.</op:operator><name pos:line="4590" pos:column="62">linesAdded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="4591" pos:column="27">else <block pos:line="4591" pos:column="32">{
				<expr_stmt><expr><call><name><name pos:line="4592" pos:column="33">cs</name><op:operator pos:line="4592" pos:column="35">.</op:operator><name pos:line="4592" pos:column="36">DeleteLines</name></name><argument_list pos:line="4592" pos:column="47">(<argument><expr><name pos:line="4592" pos:column="48">lineOfPos</name></expr></argument>, <argument><expr><op:operator pos:line="4592" pos:column="59">-</op:operator><name><name pos:line="4592" pos:column="60">mh</name><op:operator pos:line="4592" pos:column="62">.</op:operator><name pos:line="4592" pos:column="63">linesAdded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then></if>
		<if pos:line="4595" pos:column="17">if <condition pos:line="4595" pos:column="20">(<expr><name><name pos:line="4595" pos:column="21">mh</name><op:operator pos:line="4595" pos:column="23">.</op:operator><name pos:line="4595" pos:column="24">modificationType</name></name> <op:operator pos:line="4595" pos:column="41">&amp;</op:operator> <name pos:line="4595" pos:column="43">SC_MOD_CHANGEANNOTATION</name></expr>)</condition><then pos:line="4595" pos:column="67"> <block pos:line="4595" pos:column="68">{
			<decl_stmt><decl><type><name pos:line="4596" pos:column="25">int</name></type> <name pos:line="4596" pos:column="29">lineDoc</name> <init pos:line="4596" pos:column="37">= <expr><call><name><name pos:line="4596" pos:column="39">pdoc</name><op:operator pos:line="4596" pos:column="43">-&gt;</op:operator><name pos:line="4596" pos:column="45">LineFromPosition</name></name><argument_list pos:line="4596" pos:column="61">(<argument><expr><name><name pos:line="4596" pos:column="62">mh</name><op:operator pos:line="4596" pos:column="64">.</op:operator><name pos:line="4596" pos:column="65">position</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4597" pos:column="25">if <condition pos:line="4597" pos:column="28">(<expr><name><name pos:line="4597" pos:column="29">vs</name><op:operator pos:line="4597" pos:column="31">.</op:operator><name pos:line="4597" pos:column="32">annotationVisible</name></name></expr>)</condition><then pos:line="4597" pos:column="50"> <block pos:line="4597" pos:column="51">{
				<expr_stmt><expr><call><name><name pos:line="4598" pos:column="33">cs</name><op:operator pos:line="4598" pos:column="35">.</op:operator><name pos:line="4598" pos:column="36">SetHeight</name></name><argument_list pos:line="4598" pos:column="45">(<argument><expr><name pos:line="4598" pos:column="46">lineDoc</name></expr></argument>, <argument><expr><call><name><name pos:line="4598" pos:column="55">cs</name><op:operator pos:line="4598" pos:column="57">.</op:operator><name pos:line="4598" pos:column="58">GetHeight</name></name><argument_list pos:line="4598" pos:column="67">(<argument><expr><name pos:line="4598" pos:column="68">lineDoc</name></expr></argument>)</argument_list></call> <op:operator pos:line="4598" pos:column="77">+</op:operator> <name><name pos:line="4598" pos:column="79">mh</name><op:operator pos:line="4598" pos:column="81">.</op:operator><name pos:line="4598" pos:column="82">annotationLinesAdded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="4599" pos:column="33">Redraw</name><argument_list pos:line="4599" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="4602" pos:column="17">CheckModificationForWrap</name><argument_list pos:line="4602" pos:column="41">(<argument><expr><name pos:line="4602" pos:column="42">mh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="4603" pos:column="17">if <condition pos:line="4603" pos:column="20">(<expr><name><name pos:line="4603" pos:column="21">mh</name><op:operator pos:line="4603" pos:column="23">.</op:operator><name pos:line="4603" pos:column="24">linesAdded</name></name> <op:operator pos:line="4603" pos:column="35">!=</op:operator> <lit:literal type="number" pos:line="4603" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="4603" pos:column="40"> <block pos:line="4603" pos:column="41">{
			<comment type="line" pos:line="4604" pos:column="25">// Avoid scrolling of display if change before current display</comment>
			<if pos:line="4605" pos:column="25">if <condition pos:line="4605" pos:column="28">(<expr><name><name pos:line="4605" pos:column="29">mh</name><op:operator pos:line="4605" pos:column="31">.</op:operator><name pos:line="4605" pos:column="32">position</name></name> <op:operator pos:line="4605" pos:column="41">&lt;</op:operator> <name pos:line="4605" pos:column="43">posTopLine</name> <op:operator pos:line="4605" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="4605" pos:column="57">!</op:operator><call><name pos:line="4605" pos:column="58">CanDeferToLastStep</name><argument_list pos:line="4605" pos:column="76">(<argument><expr><name pos:line="4605" pos:column="77">mh</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4605" pos:column="81"> <block pos:line="4605" pos:column="82">{
				<decl_stmt><decl><type><name pos:line="4606" pos:column="33">int</name></type> <name pos:line="4606" pos:column="37">newTop</name> <init pos:line="4606" pos:column="44">= <expr><call><name><name pos:line="4606" pos:column="46">Platform</name><op:operator pos:line="4606" pos:column="54">::</op:operator><name pos:line="4606" pos:column="56">Clamp</name></name><argument_list pos:line="4606" pos:column="61">(<argument><expr><name pos:line="4606" pos:column="62">topLine</name> <op:operator pos:line="4606" pos:column="70">+</op:operator> <name><name pos:line="4606" pos:column="72">mh</name><op:operator pos:line="4606" pos:column="74">.</op:operator><name pos:line="4606" pos:column="75">linesAdded</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4606" pos:column="87">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="4606" pos:column="90">MaxScrollPos</name><argument_list pos:line="4606" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="4607" pos:column="33">if <condition pos:line="4607" pos:column="36">(<expr><name pos:line="4607" pos:column="37">newTop</name> <op:operator pos:line="4607" pos:column="44">!=</op:operator> <name pos:line="4607" pos:column="47">topLine</name></expr>)</condition><then pos:line="4607" pos:column="55"> <block pos:line="4607" pos:column="56">{
					<expr_stmt><expr><call><name pos:line="4608" pos:column="41">SetTopLine</name><argument_list pos:line="4608" pos:column="51">(<argument><expr><name pos:line="4608" pos:column="52">newTop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="4609" pos:column="41">SetVerticalScrollPos</name><argument_list pos:line="4609" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>

			<comment type="line" pos:line="4613" pos:column="25">//Platform::DebugPrintf("** %x Doc Changed\n", this);</comment>
			<comment type="line" pos:line="4614" pos:column="25">// TODO: could invalidate from mh.startModification to end of screen</comment>
			<comment type="line" pos:line="4615" pos:column="25">//InvalidateRange(mh.position, mh.position + mh.length);</comment>
			<if pos:line="4616" pos:column="25">if <condition pos:line="4616" pos:column="28">(<expr><name pos:line="4616" pos:column="29">paintState</name> <op:operator pos:line="4616" pos:column="40">==</op:operator> <name pos:line="4616" pos:column="43">notPainting</name> <op:operator pos:line="4616" pos:column="55">&amp;&amp;</op:operator> <op:operator pos:line="4616" pos:column="58">!</op:operator><call><name pos:line="4616" pos:column="59">CanDeferToLastStep</name><argument_list pos:line="4616" pos:column="77">(<argument><expr><name pos:line="4616" pos:column="78">mh</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4616" pos:column="82"> <block pos:line="4616" pos:column="83">{
				<expr_stmt><expr><call><name pos:line="4617" pos:column="33">QueueStyling</name><argument_list pos:line="4617" pos:column="45">(<argument><expr><call><name><name pos:line="4617" pos:column="46">pdoc</name><op:operator pos:line="4617" pos:column="50">-&gt;</op:operator><name pos:line="4617" pos:column="52">Length</name></name><argument_list pos:line="4617" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="4618" pos:column="33">Redraw</name><argument_list pos:line="4618" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then> <else pos:line="4620" pos:column="19">else <block pos:line="4620" pos:column="24">{
			<comment type="line" pos:line="4621" pos:column="25">//Platform::DebugPrintf("** %x Line Changed %d .. %d\n", this,</comment>
			<comment type="line" pos:line="4622" pos:column="25">//	mh.position, mh.position + mh.length);</comment>
			<if pos:line="4623" pos:column="25">if <condition pos:line="4623" pos:column="28">(<expr><name pos:line="4623" pos:column="29">paintState</name> <op:operator pos:line="4623" pos:column="40">==</op:operator> <name pos:line="4623" pos:column="43">notPainting</name> <op:operator pos:line="4623" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="4623" pos:column="58">mh</name><op:operator pos:line="4623" pos:column="60">.</op:operator><name pos:line="4623" pos:column="61">length</name></name> <op:operator pos:line="4623" pos:column="68">&amp;&amp;</op:operator> <op:operator pos:line="4623" pos:column="71">!</op:operator><call><name pos:line="4623" pos:column="72">CanEliminate</name><argument_list pos:line="4623" pos:column="84">(<argument><expr><name pos:line="4623" pos:column="85">mh</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4623" pos:column="89"> <block pos:line="4623" pos:column="90">{
				<expr_stmt><expr><call><name pos:line="4624" pos:column="33">QueueStyling</name><argument_list pos:line="4624" pos:column="45">(<argument><expr><name><name pos:line="4624" pos:column="46">mh</name><op:operator pos:line="4624" pos:column="48">.</op:operator><name pos:line="4624" pos:column="49">position</name></name> <op:operator pos:line="4624" pos:column="58">+</op:operator> <name><name pos:line="4624" pos:column="60">mh</name><op:operator pos:line="4624" pos:column="62">.</op:operator><name pos:line="4624" pos:column="63">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="4625" pos:column="33">InvalidateRange</name><argument_list pos:line="4625" pos:column="48">(<argument><expr><name><name pos:line="4625" pos:column="49">mh</name><op:operator pos:line="4625" pos:column="51">.</op:operator><name pos:line="4625" pos:column="52">position</name></name></expr></argument>, <argument><expr><name><name pos:line="4625" pos:column="62">mh</name><op:operator pos:line="4625" pos:column="64">.</op:operator><name pos:line="4625" pos:column="65">position</name></name> <op:operator pos:line="4625" pos:column="74">+</op:operator> <name><name pos:line="4625" pos:column="76">mh</name><op:operator pos:line="4625" pos:column="78">.</op:operator><name pos:line="4625" pos:column="79">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
	}</block></else></if>

	<if pos:line="4630" pos:column="9">if <condition pos:line="4630" pos:column="12">(<expr><name><name pos:line="4630" pos:column="13">mh</name><op:operator pos:line="4630" pos:column="15">.</op:operator><name pos:line="4630" pos:column="16">linesAdded</name></name> <op:operator pos:line="4630" pos:column="27">!=</op:operator> <lit:literal type="number" pos:line="4630" pos:column="30">0</lit:literal> <op:operator pos:line="4630" pos:column="32">&amp;&amp;</op:operator> <op:operator pos:line="4630" pos:column="35">!</op:operator><call><name pos:line="4630" pos:column="36">CanDeferToLastStep</name><argument_list pos:line="4630" pos:column="54">(<argument><expr><name pos:line="4630" pos:column="55">mh</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4630" pos:column="59"> <block pos:line="4630" pos:column="60">{
		<expr_stmt><expr><call><name pos:line="4631" pos:column="17">SetScrollBars</name><argument_list pos:line="4631" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4634" pos:column="9">if <condition pos:line="4634" pos:column="12">(<expr><op:operator pos:line="4634" pos:column="13">(</op:operator><name><name pos:line="4634" pos:column="14">mh</name><op:operator pos:line="4634" pos:column="16">.</op:operator><name pos:line="4634" pos:column="17">modificationType</name></name> <op:operator pos:line="4634" pos:column="34">&amp;</op:operator> <name pos:line="4634" pos:column="36">SC_MOD_CHANGEMARKER</name><op:operator pos:line="4634" pos:column="55">)</op:operator> <op:operator pos:line="4634" pos:column="57">||</op:operator> <op:operator pos:line="4634" pos:column="60">(</op:operator><name><name pos:line="4634" pos:column="61">mh</name><op:operator pos:line="4634" pos:column="63">.</op:operator><name pos:line="4634" pos:column="64">modificationType</name></name> <op:operator pos:line="4634" pos:column="81">&amp;</op:operator> <name pos:line="4634" pos:column="83">SC_MOD_CHANGEMARGIN</name><op:operator pos:line="4634" pos:column="102">)</op:operator></expr>)</condition><then pos:line="4634" pos:column="104"> <block pos:line="4634" pos:column="105">{
		<if pos:line="4635" pos:column="17">if <condition pos:line="4635" pos:column="20">(<expr><op:operator pos:line="4635" pos:column="21">(</op:operator><name pos:line="4635" pos:column="22">paintState</name> <op:operator pos:line="4635" pos:column="33">==</op:operator> <name pos:line="4635" pos:column="36">notPainting</name><op:operator pos:line="4635" pos:column="47">)</op:operator> <op:operator pos:line="4635" pos:column="49">||</op:operator> <op:operator pos:line="4635" pos:column="52">!</op:operator><call><name pos:line="4635" pos:column="53">PaintContainsMargin</name><argument_list pos:line="4635" pos:column="72">()</argument_list></call></expr>)</condition><then pos:line="4635" pos:column="75"> <block pos:line="4635" pos:column="76">{
			<if pos:line="4636" pos:column="25">if <condition pos:line="4636" pos:column="28">(<expr><name><name pos:line="4636" pos:column="29">mh</name><op:operator pos:line="4636" pos:column="31">.</op:operator><name pos:line="4636" pos:column="32">modificationType</name></name> <op:operator pos:line="4636" pos:column="49">&amp;</op:operator> <name pos:line="4636" pos:column="51">SC_MOD_CHANGEFOLD</name></expr>)</condition><then pos:line="4636" pos:column="69"> <block pos:line="4636" pos:column="70">{
				<comment type="line" pos:line="4637" pos:column="33">// Fold changes can affect the drawing of following lines so redraw whole margin</comment>
				<expr_stmt><expr><call><name pos:line="4638" pos:column="33">RedrawSelMargin</name><argument_list pos:line="4638" pos:column="48">(<argument><expr><name><name pos:line="4638" pos:column="49">mh</name><op:operator pos:line="4638" pos:column="51">.</op:operator><name pos:line="4638" pos:column="52">line</name></name><op:operator pos:line="4638" pos:column="56">-</op:operator><lit:literal type="number" pos:line="4638" pos:column="57">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4638" pos:column="60">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="4639" pos:column="27">else <block pos:line="4639" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="4640" pos:column="33">RedrawSelMargin</name><argument_list pos:line="4640" pos:column="48">(<argument><expr><name><name pos:line="4640" pos:column="49">mh</name><op:operator pos:line="4640" pos:column="51">.</op:operator><name pos:line="4640" pos:column="52">line</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then></if>
	}</block></then></if>

	<comment type="line" pos:line="4645" pos:column="9">// NOW pay the piper WRT "deferred" visual updates</comment>
	<if pos:line="4646" pos:column="9">if <condition pos:line="4646" pos:column="12">(<expr><call><name pos:line="4646" pos:column="13">IsLastStep</name><argument_list pos:line="4646" pos:column="23">(<argument><expr><name pos:line="4646" pos:column="24">mh</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4646" pos:column="28"> <block pos:line="4646" pos:column="29">{
		<expr_stmt><expr><call><name pos:line="4647" pos:column="17">SetScrollBars</name><argument_list pos:line="4647" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4648" pos:column="17">Redraw</name><argument_list pos:line="4648" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="4651" pos:column="9">// If client wants to see this modification</comment>
	<if pos:line="4652" pos:column="9">if <condition pos:line="4652" pos:column="12">(<expr><name><name pos:line="4652" pos:column="13">mh</name><op:operator pos:line="4652" pos:column="15">.</op:operator><name pos:line="4652" pos:column="16">modificationType</name></name> <op:operator pos:line="4652" pos:column="33">&amp;</op:operator> <name pos:line="4652" pos:column="35">modEventMask</name></expr>)</condition><then pos:line="4652" pos:column="48"> <block pos:line="4652" pos:column="49">{
		<if pos:line="4653" pos:column="17">if <condition pos:line="4653" pos:column="20">(<expr><op:operator pos:line="4653" pos:column="21">(</op:operator><name><name pos:line="4653" pos:column="22">mh</name><op:operator pos:line="4653" pos:column="24">.</op:operator><name pos:line="4653" pos:column="25">modificationType</name></name> <op:operator pos:line="4653" pos:column="42">&amp;</op:operator> <op:operator pos:line="4653" pos:column="44">(</op:operator><name pos:line="4653" pos:column="45">SC_MOD_CHANGESTYLE</name> <op:operator pos:line="4653" pos:column="64">|</op:operator> <name pos:line="4653" pos:column="66">SC_MOD_CHANGEINDICATOR</name><op:operator pos:line="4653" pos:column="88">)</op:operator><op:operator pos:line="4653" pos:column="89">)</op:operator> <op:operator pos:line="4653" pos:column="91">==</op:operator> <lit:literal type="number" pos:line="4653" pos:column="94">0</lit:literal></expr>)</condition><then pos:line="4653" pos:column="96"> <block pos:line="4653" pos:column="97">{
			<comment type="line" pos:line="4654" pos:column="25">// Real modification made to text of document.</comment>
			<expr_stmt><expr><call><name pos:line="4655" pos:column="25">NotifyChange</name><argument_list pos:line="4655" pos:column="37">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="4655" pos:column="41">// Send EN_CHANGE</comment>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="4658" pos:column="17">SCNotification</name></type> <name pos:line="4658" pos:column="32">scn</name> <init pos:line="4658" pos:column="36">= <expr><block pos:line="4658" pos:column="38">{<expr><lit:literal type="number" pos:line="4658" pos:column="39">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="4659" pos:column="17">scn</name><op:operator pos:line="4659" pos:column="20">.</op:operator><name pos:line="4659" pos:column="21">nmhdr</name><op:operator pos:line="4659" pos:column="26">.</op:operator><name pos:line="4659" pos:column="27">code</name></name> <op:operator pos:line="4659" pos:column="32">=</op:operator> <name pos:line="4659" pos:column="34">SCN_MODIFIED</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4660" pos:column="17">scn</name><op:operator pos:line="4660" pos:column="20">.</op:operator><name pos:line="4660" pos:column="21">position</name></name> <op:operator pos:line="4660" pos:column="30">=</op:operator> <name><name pos:line="4660" pos:column="32">mh</name><op:operator pos:line="4660" pos:column="34">.</op:operator><name pos:line="4660" pos:column="35">position</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4661" pos:column="17">scn</name><op:operator pos:line="4661" pos:column="20">.</op:operator><name pos:line="4661" pos:column="21">modificationType</name></name> <op:operator pos:line="4661" pos:column="38">=</op:operator> <name><name pos:line="4661" pos:column="40">mh</name><op:operator pos:line="4661" pos:column="42">.</op:operator><name pos:line="4661" pos:column="43">modificationType</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4662" pos:column="17">scn</name><op:operator pos:line="4662" pos:column="20">.</op:operator><name pos:line="4662" pos:column="21">text</name></name> <op:operator pos:line="4662" pos:column="26">=</op:operator> <name><name pos:line="4662" pos:column="28">mh</name><op:operator pos:line="4662" pos:column="30">.</op:operator><name pos:line="4662" pos:column="31">text</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4663" pos:column="17">scn</name><op:operator pos:line="4663" pos:column="20">.</op:operator><name pos:line="4663" pos:column="21">length</name></name> <op:operator pos:line="4663" pos:column="28">=</op:operator> <name><name pos:line="4663" pos:column="30">mh</name><op:operator pos:line="4663" pos:column="32">.</op:operator><name pos:line="4663" pos:column="33">length</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4664" pos:column="17">scn</name><op:operator pos:line="4664" pos:column="20">.</op:operator><name pos:line="4664" pos:column="21">linesAdded</name></name> <op:operator pos:line="4664" pos:column="32">=</op:operator> <name><name pos:line="4664" pos:column="34">mh</name><op:operator pos:line="4664" pos:column="36">.</op:operator><name pos:line="4664" pos:column="37">linesAdded</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4665" pos:column="17">scn</name><op:operator pos:line="4665" pos:column="20">.</op:operator><name pos:line="4665" pos:column="21">line</name></name> <op:operator pos:line="4665" pos:column="26">=</op:operator> <name><name pos:line="4665" pos:column="28">mh</name><op:operator pos:line="4665" pos:column="30">.</op:operator><name pos:line="4665" pos:column="31">line</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4666" pos:column="17">scn</name><op:operator pos:line="4666" pos:column="20">.</op:operator><name pos:line="4666" pos:column="21">foldLevelNow</name></name> <op:operator pos:line="4666" pos:column="34">=</op:operator> <name><name pos:line="4666" pos:column="36">mh</name><op:operator pos:line="4666" pos:column="38">.</op:operator><name pos:line="4666" pos:column="39">foldLevelNow</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4667" pos:column="17">scn</name><op:operator pos:line="4667" pos:column="20">.</op:operator><name pos:line="4667" pos:column="21">foldLevelPrev</name></name> <op:operator pos:line="4667" pos:column="35">=</op:operator> <name><name pos:line="4667" pos:column="37">mh</name><op:operator pos:line="4667" pos:column="39">.</op:operator><name pos:line="4667" pos:column="40">foldLevelPrev</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4668" pos:column="17">scn</name><op:operator pos:line="4668" pos:column="20">.</op:operator><name pos:line="4668" pos:column="21">token</name></name> <op:operator pos:line="4668" pos:column="27">=</op:operator> <name><name pos:line="4668" pos:column="29">mh</name><op:operator pos:line="4668" pos:column="31">.</op:operator><name pos:line="4668" pos:column="32">token</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="4669" pos:column="17">scn</name><op:operator pos:line="4669" pos:column="20">.</op:operator><name pos:line="4669" pos:column="21">annotationLinesAdded</name></name> <op:operator pos:line="4669" pos:column="42">=</op:operator> <name><name pos:line="4669" pos:column="44">mh</name><op:operator pos:line="4669" pos:column="46">.</op:operator><name pos:line="4669" pos:column="47">annotationLinesAdded</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4670" pos:column="17">NotifyParent</name><argument_list pos:line="4670" pos:column="29">(<argument><expr><name pos:line="4670" pos:column="30">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4674" pos:column="1">void</name></type> <name><name pos:line="4674" pos:column="6">Editor</name><op:operator pos:line="4674" pos:column="12">::</op:operator><name pos:line="4674" pos:column="14">NotifyDeleted</name></name><parameter_list pos:line="4674" pos:column="27">(<param><decl><type><name pos:line="4674" pos:column="28">Document</name> <type:modifier pos:line="4674" pos:column="37">*</type:modifier></type></decl></param>, <param><decl><type><name pos:line="4674" pos:column="40">void</name> <type:modifier pos:line="4674" pos:column="45">*</type:modifier></type></decl></param>)</parameter_list> <block pos:line="4674" pos:column="48">{
	<comment type="block" pos:line="4675" pos:column="9">/* Do nothing */</comment>
}</block></function>

<function><type><name pos:line="4678" pos:column="1">void</name></type> <name><name pos:line="4678" pos:column="6">Editor</name><op:operator pos:line="4678" pos:column="12">::</op:operator><name pos:line="4678" pos:column="14">NotifyMacroRecord</name></name><parameter_list pos:line="4678" pos:column="31">(<param><decl><type><name pos:line="4678" pos:column="32">unsigned</name> <name pos:line="4678" pos:column="41">int</name></type> <name pos:line="4678" pos:column="45">iMessage</name></decl></param>, <param><decl><type><name pos:line="4678" pos:column="55">uptr_t</name></type> <name pos:line="4678" pos:column="62">wParam</name></decl></param>, <param><decl><type><name pos:line="4678" pos:column="70">sptr_t</name></type> <name pos:line="4678" pos:column="77">lParam</name></decl></param>)</parameter_list> <block pos:line="4678" pos:column="85">{

	<comment type="line" pos:line="4680" pos:column="9">// Enumerates all macroable messages</comment>
	<switch pos:line="4681" pos:column="9">switch <condition pos:line="4681" pos:column="16">(<expr><name pos:line="4681" pos:column="17">iMessage</name></expr>)</condition> <block pos:line="4681" pos:column="27">{
	<case pos:line="4682" pos:column="9">case <expr><name pos:line="4682" pos:column="14">SCI_CUT</name></expr>:
	</case><case pos:line="4683" pos:column="9">case <expr><name pos:line="4683" pos:column="14">SCI_COPY</name></expr>:
	</case><case pos:line="4684" pos:column="9">case <expr><name pos:line="4684" pos:column="14">SCI_PASTE</name></expr>:
	</case><case pos:line="4685" pos:column="9">case <expr><name pos:line="4685" pos:column="14">SCI_CLEAR</name></expr>:
	</case><case pos:line="4686" pos:column="9">case <expr><name pos:line="4686" pos:column="14">SCI_REPLACESEL</name></expr>:
	</case><case pos:line="4687" pos:column="9">case <expr><name pos:line="4687" pos:column="14">SCI_ADDTEXT</name></expr>:
	</case><case pos:line="4688" pos:column="9">case <expr><name pos:line="4688" pos:column="14">SCI_INSERTTEXT</name></expr>:
	</case><case pos:line="4689" pos:column="9">case <expr><name pos:line="4689" pos:column="14">SCI_APPENDTEXT</name></expr>:
	</case><case pos:line="4690" pos:column="9">case <expr><name pos:line="4690" pos:column="14">SCI_CLEARALL</name></expr>:
	</case><case pos:line="4691" pos:column="9">case <expr><name pos:line="4691" pos:column="14">SCI_SELECTALL</name></expr>:
	</case><case pos:line="4692" pos:column="9">case <expr><name pos:line="4692" pos:column="14">SCI_GOTOLINE</name></expr>:
	</case><case pos:line="4693" pos:column="9">case <expr><name pos:line="4693" pos:column="14">SCI_GOTOPOS</name></expr>:
	</case><case pos:line="4694" pos:column="9">case <expr><name pos:line="4694" pos:column="14">SCI_SEARCHANCHOR</name></expr>:
	</case><case pos:line="4695" pos:column="9">case <expr><name pos:line="4695" pos:column="14">SCI_SEARCHNEXT</name></expr>:
	</case><case pos:line="4696" pos:column="9">case <expr><name pos:line="4696" pos:column="14">SCI_SEARCHPREV</name></expr>:
	</case><case pos:line="4697" pos:column="9">case <expr><name pos:line="4697" pos:column="14">SCI_LINEDOWN</name></expr>:
	</case><case pos:line="4698" pos:column="9">case <expr><name pos:line="4698" pos:column="14">SCI_LINEDOWNEXTEND</name></expr>:
	</case><case pos:line="4699" pos:column="9">case <expr><name pos:line="4699" pos:column="14">SCI_PARADOWN</name></expr>:
	</case><case pos:line="4700" pos:column="9">case <expr><name pos:line="4700" pos:column="14">SCI_PARADOWNEXTEND</name></expr>:
	</case><case pos:line="4701" pos:column="9">case <expr><name pos:line="4701" pos:column="14">SCI_LINEUP</name></expr>:
	</case><case pos:line="4702" pos:column="9">case <expr><name pos:line="4702" pos:column="14">SCI_LINEUPEXTEND</name></expr>:
	</case><case pos:line="4703" pos:column="9">case <expr><name pos:line="4703" pos:column="14">SCI_PARAUP</name></expr>:
	</case><case pos:line="4704" pos:column="9">case <expr><name pos:line="4704" pos:column="14">SCI_PARAUPEXTEND</name></expr>:
	</case><case pos:line="4705" pos:column="9">case <expr><name pos:line="4705" pos:column="14">SCI_CHARLEFT</name></expr>:
	</case><case pos:line="4706" pos:column="9">case <expr><name pos:line="4706" pos:column="14">SCI_CHARLEFTEXTEND</name></expr>:
	</case><case pos:line="4707" pos:column="9">case <expr><name pos:line="4707" pos:column="14">SCI_CHARRIGHT</name></expr>:
	</case><case pos:line="4708" pos:column="9">case <expr><name pos:line="4708" pos:column="14">SCI_CHARRIGHTEXTEND</name></expr>:
	</case><case pos:line="4709" pos:column="9">case <expr><name pos:line="4709" pos:column="14">SCI_WORDLEFT</name></expr>:
	</case><case pos:line="4710" pos:column="9">case <expr><name pos:line="4710" pos:column="14">SCI_WORDLEFTEXTEND</name></expr>:
	</case><case pos:line="4711" pos:column="9">case <expr><name pos:line="4711" pos:column="14">SCI_WORDRIGHT</name></expr>:
	</case><case pos:line="4712" pos:column="9">case <expr><name pos:line="4712" pos:column="14">SCI_WORDRIGHTEXTEND</name></expr>:
	</case><case pos:line="4713" pos:column="9">case <expr><name pos:line="4713" pos:column="14">SCI_WORDPARTLEFT</name></expr>:
	</case><case pos:line="4714" pos:column="9">case <expr><name pos:line="4714" pos:column="14">SCI_WORDPARTLEFTEXTEND</name></expr>:
	</case><case pos:line="4715" pos:column="9">case <expr><name pos:line="4715" pos:column="14">SCI_WORDPARTRIGHT</name></expr>:
	</case><case pos:line="4716" pos:column="9">case <expr><name pos:line="4716" pos:column="14">SCI_WORDPARTRIGHTEXTEND</name></expr>:
	</case><case pos:line="4717" pos:column="9">case <expr><name pos:line="4717" pos:column="14">SCI_WORDLEFTEND</name></expr>:
	</case><case pos:line="4718" pos:column="9">case <expr><name pos:line="4718" pos:column="14">SCI_WORDLEFTENDEXTEND</name></expr>:
	</case><case pos:line="4719" pos:column="9">case <expr><name pos:line="4719" pos:column="14">SCI_WORDRIGHTEND</name></expr>:
	</case><case pos:line="4720" pos:column="9">case <expr><name pos:line="4720" pos:column="14">SCI_WORDRIGHTENDEXTEND</name></expr>:
	</case><case pos:line="4721" pos:column="9">case <expr><name pos:line="4721" pos:column="14">SCI_HOME</name></expr>:
	</case><case pos:line="4722" pos:column="9">case <expr><name pos:line="4722" pos:column="14">SCI_HOMEEXTEND</name></expr>:
	</case><case pos:line="4723" pos:column="9">case <expr><name pos:line="4723" pos:column="14">SCI_LINEEND</name></expr>:
	</case><case pos:line="4724" pos:column="9">case <expr><name pos:line="4724" pos:column="14">SCI_LINEENDEXTEND</name></expr>:
	</case><case pos:line="4725" pos:column="9">case <expr><name pos:line="4725" pos:column="14">SCI_HOMEWRAP</name></expr>:
	</case><case pos:line="4726" pos:column="9">case <expr><name pos:line="4726" pos:column="14">SCI_HOMEWRAPEXTEND</name></expr>:
	</case><case pos:line="4727" pos:column="9">case <expr><name pos:line="4727" pos:column="14">SCI_LINEENDWRAP</name></expr>:
	</case><case pos:line="4728" pos:column="9">case <expr><name pos:line="4728" pos:column="14">SCI_LINEENDWRAPEXTEND</name></expr>:
	</case><case pos:line="4729" pos:column="9">case <expr><name pos:line="4729" pos:column="14">SCI_DOCUMENTSTART</name></expr>:
	</case><case pos:line="4730" pos:column="9">case <expr><name pos:line="4730" pos:column="14">SCI_DOCUMENTSTARTEXTEND</name></expr>:
	</case><case pos:line="4731" pos:column="9">case <expr><name pos:line="4731" pos:column="14">SCI_DOCUMENTEND</name></expr>:
	</case><case pos:line="4732" pos:column="9">case <expr><name pos:line="4732" pos:column="14">SCI_DOCUMENTENDEXTEND</name></expr>:
	</case><case pos:line="4733" pos:column="9">case <expr><name pos:line="4733" pos:column="14">SCI_STUTTEREDPAGEUP</name></expr>:
	</case><case pos:line="4734" pos:column="9">case <expr><name pos:line="4734" pos:column="14">SCI_STUTTEREDPAGEUPEXTEND</name></expr>:
	</case><case pos:line="4735" pos:column="9">case <expr><name pos:line="4735" pos:column="14">SCI_STUTTEREDPAGEDOWN</name></expr>:
	</case><case pos:line="4736" pos:column="9">case <expr><name pos:line="4736" pos:column="14">SCI_STUTTEREDPAGEDOWNEXTEND</name></expr>:
	</case><case pos:line="4737" pos:column="9">case <expr><name pos:line="4737" pos:column="14">SCI_PAGEUP</name></expr>:
	</case><case pos:line="4738" pos:column="9">case <expr><name pos:line="4738" pos:column="14">SCI_PAGEUPEXTEND</name></expr>:
	</case><case pos:line="4739" pos:column="9">case <expr><name pos:line="4739" pos:column="14">SCI_PAGEDOWN</name></expr>:
	</case><case pos:line="4740" pos:column="9">case <expr><name pos:line="4740" pos:column="14">SCI_PAGEDOWNEXTEND</name></expr>:
	</case><case pos:line="4741" pos:column="9">case <expr><name pos:line="4741" pos:column="14">SCI_EDITTOGGLEOVERTYPE</name></expr>:
	</case><case pos:line="4742" pos:column="9">case <expr><name pos:line="4742" pos:column="14">SCI_CANCEL</name></expr>:
	</case><case pos:line="4743" pos:column="9">case <expr><name pos:line="4743" pos:column="14">SCI_DELETEBACK</name></expr>:
	</case><case pos:line="4744" pos:column="9">case <expr><name pos:line="4744" pos:column="14">SCI_TAB</name></expr>:
	</case><case pos:line="4745" pos:column="9">case <expr><name pos:line="4745" pos:column="14">SCI_BACKTAB</name></expr>:
	</case><case pos:line="4746" pos:column="9">case <expr><name pos:line="4746" pos:column="14">SCI_FORMFEED</name></expr>:
	</case><case pos:line="4747" pos:column="9">case <expr><name pos:line="4747" pos:column="14">SCI_VCHOME</name></expr>:
	</case><case pos:line="4748" pos:column="9">case <expr><name pos:line="4748" pos:column="14">SCI_VCHOMEEXTEND</name></expr>:
	</case><case pos:line="4749" pos:column="9">case <expr><name pos:line="4749" pos:column="14">SCI_VCHOMEWRAP</name></expr>:
	</case><case pos:line="4750" pos:column="9">case <expr><name pos:line="4750" pos:column="14">SCI_VCHOMEWRAPEXTEND</name></expr>:
	</case><case pos:line="4751" pos:column="9">case <expr><name pos:line="4751" pos:column="14">SCI_DELWORDLEFT</name></expr>:
	</case><case pos:line="4752" pos:column="9">case <expr><name pos:line="4752" pos:column="14">SCI_DELWORDRIGHT</name></expr>:
	</case><case pos:line="4753" pos:column="9">case <expr><name pos:line="4753" pos:column="14">SCI_DELWORDRIGHTEND</name></expr>:
	</case><case pos:line="4754" pos:column="9">case <expr><name pos:line="4754" pos:column="14">SCI_DELLINELEFT</name></expr>:
	</case><case pos:line="4755" pos:column="9">case <expr><name pos:line="4755" pos:column="14">SCI_DELLINERIGHT</name></expr>:
	</case><case pos:line="4756" pos:column="9">case <expr><name pos:line="4756" pos:column="14">SCI_LINECOPY</name></expr>:
	</case><case pos:line="4757" pos:column="9">case <expr><name pos:line="4757" pos:column="14">SCI_LINECUT</name></expr>:
	</case><case pos:line="4758" pos:column="9">case <expr><name pos:line="4758" pos:column="14">SCI_LINEDELETE</name></expr>:
	</case><case pos:line="4759" pos:column="9">case <expr><name pos:line="4759" pos:column="14">SCI_LINETRANSPOSE</name></expr>:
	</case><case pos:line="4760" pos:column="9">case <expr><name pos:line="4760" pos:column="14">SCI_LINEDUPLICATE</name></expr>:
	</case><case pos:line="4761" pos:column="9">case <expr><name pos:line="4761" pos:column="14">SCI_LOWERCASE</name></expr>:
	</case><case pos:line="4762" pos:column="9">case <expr><name pos:line="4762" pos:column="14">SCI_UPPERCASE</name></expr>:
	</case><case pos:line="4763" pos:column="9">case <expr><name pos:line="4763" pos:column="14">SCI_LINESCROLLDOWN</name></expr>:
	</case><case pos:line="4764" pos:column="9">case <expr><name pos:line="4764" pos:column="14">SCI_LINESCROLLUP</name></expr>:
	</case><case pos:line="4765" pos:column="9">case <expr><name pos:line="4765" pos:column="14">SCI_DELETEBACKNOTLINE</name></expr>:
	</case><case pos:line="4766" pos:column="9">case <expr><name pos:line="4766" pos:column="14">SCI_HOMEDISPLAY</name></expr>:
	</case><case pos:line="4767" pos:column="9">case <expr><name pos:line="4767" pos:column="14">SCI_HOMEDISPLAYEXTEND</name></expr>:
	</case><case pos:line="4768" pos:column="9">case <expr><name pos:line="4768" pos:column="14">SCI_LINEENDDISPLAY</name></expr>:
	</case><case pos:line="4769" pos:column="9">case <expr><name pos:line="4769" pos:column="14">SCI_LINEENDDISPLAYEXTEND</name></expr>:
	</case><case pos:line="4770" pos:column="9">case <expr><name pos:line="4770" pos:column="14">SCI_SETSELECTIONMODE</name></expr>:
	</case><case pos:line="4771" pos:column="9">case <expr><name pos:line="4771" pos:column="14">SCI_LINEDOWNRECTEXTEND</name></expr>:
	</case><case pos:line="4772" pos:column="9">case <expr><name pos:line="4772" pos:column="14">SCI_LINEUPRECTEXTEND</name></expr>:
	</case><case pos:line="4773" pos:column="9">case <expr><name pos:line="4773" pos:column="14">SCI_CHARLEFTRECTEXTEND</name></expr>:
	</case><case pos:line="4774" pos:column="9">case <expr><name pos:line="4774" pos:column="14">SCI_CHARRIGHTRECTEXTEND</name></expr>:
	</case><case pos:line="4775" pos:column="9">case <expr><name pos:line="4775" pos:column="14">SCI_HOMERECTEXTEND</name></expr>:
	</case><case pos:line="4776" pos:column="9">case <expr><name pos:line="4776" pos:column="14">SCI_VCHOMERECTEXTEND</name></expr>:
	</case><case pos:line="4777" pos:column="9">case <expr><name pos:line="4777" pos:column="14">SCI_LINEENDRECTEXTEND</name></expr>:
	</case><case pos:line="4778" pos:column="9">case <expr><name pos:line="4778" pos:column="14">SCI_PAGEUPRECTEXTEND</name></expr>:
	</case><case pos:line="4779" pos:column="9">case <expr><name pos:line="4779" pos:column="14">SCI_PAGEDOWNRECTEXTEND</name></expr>:
	</case><case pos:line="4780" pos:column="9">case <expr><name pos:line="4780" pos:column="14">SCI_SELECTIONDUPLICATE</name></expr>:
	</case><case pos:line="4781" pos:column="9">case <expr><name pos:line="4781" pos:column="14">SCI_COPYALLOWLINE</name></expr>:
	</case><case pos:line="4782" pos:column="9">case <expr><name pos:line="4782" pos:column="14">SCI_VERTICALCENTRECARET</name></expr>:
	</case><case pos:line="4783" pos:column="9">case <expr><name pos:line="4783" pos:column="14">SCI_MOVESELECTEDLINESUP</name></expr>:
	</case><case pos:line="4784" pos:column="9">case <expr><name pos:line="4784" pos:column="14">SCI_MOVESELECTEDLINESDOWN</name></expr>:
		<break pos:line="4785" pos:column="17">break;</break>

		<comment type="line" pos:line="4787" pos:column="17">// Filter out all others like display changes. Also, newlines are redundant</comment>
		<comment type="line" pos:line="4788" pos:column="17">// with char insert messages.</comment>
	</case><case pos:line="4789" pos:column="9">case <expr><name pos:line="4789" pos:column="14">SCI_NEWLINE</name></expr>:
	</case><default pos:line="4790" pos:column="9">default:
		<comment type="line" pos:line="4791" pos:column="17">//		printf("Filtered out %ld of macro recording\n", iMessage);</comment>
		<return pos:line="4792" pos:column="17">return ;</return>
	</default>}</block></switch>

	<comment type="line" pos:line="4795" pos:column="9">// Send notification</comment>
	<decl_stmt><decl><type><name pos:line="4796" pos:column="9">SCNotification</name></type> <name pos:line="4796" pos:column="24">scn</name> <init pos:line="4796" pos:column="28">= <expr><block pos:line="4796" pos:column="30">{<expr><lit:literal type="number" pos:line="4796" pos:column="31">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="4797" pos:column="9">scn</name><op:operator pos:line="4797" pos:column="12">.</op:operator><name pos:line="4797" pos:column="13">nmhdr</name><op:operator pos:line="4797" pos:column="18">.</op:operator><name pos:line="4797" pos:column="19">code</name></name> <op:operator pos:line="4797" pos:column="24">=</op:operator> <name pos:line="4797" pos:column="26">SCN_MACRORECORD</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4798" pos:column="9">scn</name><op:operator pos:line="4798" pos:column="12">.</op:operator><name pos:line="4798" pos:column="13">message</name></name> <op:operator pos:line="4798" pos:column="21">=</op:operator> <name pos:line="4798" pos:column="23">iMessage</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4799" pos:column="9">scn</name><op:operator pos:line="4799" pos:column="12">.</op:operator><name pos:line="4799" pos:column="13">wParam</name></name> <op:operator pos:line="4799" pos:column="20">=</op:operator> <name pos:line="4799" pos:column="22">wParam</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="4800" pos:column="9">scn</name><op:operator pos:line="4800" pos:column="12">.</op:operator><name pos:line="4800" pos:column="13">lParam</name></name> <op:operator pos:line="4800" pos:column="20">=</op:operator> <name pos:line="4800" pos:column="22">lParam</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4801" pos:column="9">NotifyParent</name><argument_list pos:line="4801" pos:column="21">(<argument><expr><name pos:line="4801" pos:column="22">scn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" pos:line="4804" pos:column="1">// Something has changed that the container should know about</comment>
<function><type><name pos:line="4805" pos:column="1">void</name></type> <name><name pos:line="4805" pos:column="6">Editor</name><op:operator pos:line="4805" pos:column="12">::</op:operator><name pos:line="4805" pos:column="14">ContainerNeedsUpdate</name></name><parameter_list pos:line="4805" pos:column="34">(<param><decl><type><name pos:line="4805" pos:column="35">int</name></type> <name pos:line="4805" pos:column="39">flags</name></decl></param>)</parameter_list> <block pos:line="4805" pos:column="46">{
	<expr_stmt><expr><name pos:line="4806" pos:column="9">needUpdateUI</name> <op:operator pos:line="4806" pos:column="22">|=</op:operator> <name pos:line="4806" pos:column="25">flags</name></expr>;</expr_stmt>
}</block></function>

<comment type="block" format="doxygen" pos:line="4809" pos:column="1">/**
 * Force scroll and keep position relative to top of window.
 *
 * If stuttered = true and not already at first/last row, move to first/last row of window.
 * If stuttered = true and already at first/last row, scroll as normal.
 */</comment>
<function><type><name pos:line="4815" pos:column="1">void</name></type> <name><name pos:line="4815" pos:column="6">Editor</name><op:operator pos:line="4815" pos:column="12">::</op:operator><name pos:line="4815" pos:column="14">PageMove</name></name><parameter_list pos:line="4815" pos:column="22">(<param><decl><type><name pos:line="4815" pos:column="23">int</name></type> <name pos:line="4815" pos:column="27">direction</name></decl></param>, <param><decl><type><name><name pos:line="4815" pos:column="38">Selection</name><op:operator pos:line="4815" pos:column="47">::</op:operator><name pos:line="4815" pos:column="49">selTypes</name></name></type> <name pos:line="4815" pos:column="58">selt</name></decl></param>, <param><decl><type><name pos:line="4815" pos:column="64">bool</name></type> <name pos:line="4815" pos:column="69">stuttered</name></decl></param>)</parameter_list> <block pos:line="4815" pos:column="80">{
	<decl_stmt><decl><type><name pos:line="4816" pos:column="9">int</name></type> <name pos:line="4816" pos:column="13">topLineNew</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4817" pos:column="9">SelectionPosition</name></type> <name pos:line="4817" pos:column="27">newPos</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="4819" pos:column="9">int</name></type> <name pos:line="4819" pos:column="13">currentLine</name> <init pos:line="4819" pos:column="25">= <expr><call><name><name pos:line="4819" pos:column="27">pdoc</name><op:operator pos:line="4819" pos:column="31">-&gt;</op:operator><name pos:line="4819" pos:column="33">LineFromPosition</name></name><argument_list pos:line="4819" pos:column="49">(<argument><expr><call><name><name pos:line="4819" pos:column="50">sel</name><op:operator pos:line="4819" pos:column="53">.</op:operator><name pos:line="4819" pos:column="54">MainCaret</name></name><argument_list pos:line="4819" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4820" pos:column="9">int</name></type> <name pos:line="4820" pos:column="13">topStutterLine</name> <init pos:line="4820" pos:column="28">= <expr><name pos:line="4820" pos:column="30">topLine</name> <op:operator pos:line="4820" pos:column="38">+</op:operator> <name pos:line="4820" pos:column="40">caretYSlop</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4821" pos:column="9">int</name></type> <name pos:line="4821" pos:column="13">bottomStutterLine</name> <init pos:line="4821" pos:column="31">=
	    <expr><call><name><name pos:line="4822" pos:column="13">pdoc</name><op:operator pos:line="4822" pos:column="17">-&gt;</op:operator><name pos:line="4822" pos:column="19">LineFromPosition</name></name><argument_list pos:line="4822" pos:column="35">(<argument><expr><call><name pos:line="4822" pos:column="36">PositionFromLocation</name><argument_list pos:line="4822" pos:column="56">(
	                <argument><expr><call><name pos:line="4823" pos:column="25">Point</name><argument_list pos:line="4823" pos:column="30">(<argument><expr><name pos:line="4823" pos:column="31">lastXChosen</name> <op:operator pos:line="4823" pos:column="43">-</op:operator> <name pos:line="4823" pos:column="45">xOffset</name></expr></argument>, <argument><expr><name pos:line="4823" pos:column="54">direction</name> <op:operator pos:line="4823" pos:column="64">*</op:operator> <name><name pos:line="4823" pos:column="66">vs</name><op:operator pos:line="4823" pos:column="68">.</op:operator><name pos:line="4823" pos:column="69">lineHeight</name></name> <op:operator pos:line="4823" pos:column="80">*</op:operator> <call><name pos:line="4823" pos:column="82">LinesToScroll</name><argument_list pos:line="4823" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>
	    <op:operator pos:line="4824" pos:column="13">-</op:operator> <name pos:line="4824" pos:column="15">caretYSlop</name> <op:operator pos:line="4824" pos:column="26">-</op:operator> <lit:literal type="number" pos:line="4824" pos:column="28">1</lit:literal></expr></init></decl>;</decl_stmt>

	<if pos:line="4826" pos:column="9">if <condition pos:line="4826" pos:column="12">(<expr><name pos:line="4826" pos:column="13">stuttered</name> <op:operator pos:line="4826" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="4826" pos:column="26">(</op:operator><name><name pos:line="4826" pos:column="27">direction</name> <argument_list pos:line="4826" pos:column="37">&lt; <argument><expr><lit:literal type="number" pos:line="4826" pos:column="39">0</lit:literal> <op:operator pos:line="4826" pos:column="41">&amp;&amp;</op:operator> <name pos:line="4826" pos:column="44">currentLine</name></expr></argument> &gt;</argument_list></name> <name pos:line="4826" pos:column="58">topStutterLine</name><op:operator pos:line="4826" pos:column="72">)</op:operator></expr>)</condition><then pos:line="4826" pos:column="74"> <block pos:line="4826" pos:column="75">{
		<expr_stmt><expr><name pos:line="4827" pos:column="17">topLineNew</name> <op:operator pos:line="4827" pos:column="28">=</op:operator> <name pos:line="4827" pos:column="30">topLine</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="4828" pos:column="17">newPos</name> <op:operator pos:line="4828" pos:column="24">=</op:operator> <call><name pos:line="4828" pos:column="26">SPositionFromLocation</name><argument_list pos:line="4828" pos:column="47">(<argument><expr><call><name pos:line="4828" pos:column="48">Point</name><argument_list pos:line="4828" pos:column="53">(<argument><expr><name pos:line="4828" pos:column="54">lastXChosen</name> <op:operator pos:line="4828" pos:column="66">-</op:operator> <name pos:line="4828" pos:column="68">xOffset</name></expr></argument>, <argument><expr><name><name pos:line="4828" pos:column="77">vs</name><op:operator pos:line="4828" pos:column="79">.</op:operator><name pos:line="4828" pos:column="80">lineHeight</name></name> <op:operator pos:line="4828" pos:column="91">*</op:operator> <name pos:line="4828" pos:column="93">caretYSlop</name></expr></argument>)</argument_list></call></expr></argument>,
			<argument><expr><lit:literal type="boolean" pos:line="4829" pos:column="25">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4829" pos:column="32">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="4829" pos:column="39">UserVirtualSpace</name><argument_list pos:line="4829" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="4831" pos:column="11">else <if pos:line="4831" pos:column="16">if <condition pos:line="4831" pos:column="19">(<expr><name pos:line="4831" pos:column="20">stuttered</name> <op:operator pos:line="4831" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="4831" pos:column="33">(</op:operator><name pos:line="4831" pos:column="34">direction</name> <op:operator pos:line="4831" pos:column="44">&gt;</op:operator> <lit:literal type="number" pos:line="4831" pos:column="46">0</lit:literal> <op:operator pos:line="4831" pos:column="48">&amp;&amp;</op:operator> <name pos:line="4831" pos:column="51">currentLine</name> <op:operator pos:line="4831" pos:column="63">&lt;</op:operator> <name pos:line="4831" pos:column="65">bottomStutterLine</name><op:operator pos:line="4831" pos:column="82">)</op:operator></expr>)</condition><then pos:line="4831" pos:column="84"> <block pos:line="4831" pos:column="85">{
		<expr_stmt><expr><name pos:line="4832" pos:column="17">topLineNew</name> <op:operator pos:line="4832" pos:column="28">=</op:operator> <name pos:line="4832" pos:column="30">topLine</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="4833" pos:column="17">newPos</name> <op:operator pos:line="4833" pos:column="24">=</op:operator> <call><name pos:line="4833" pos:column="26">SPositionFromLocation</name><argument_list pos:line="4833" pos:column="47">(<argument><expr><call><name pos:line="4833" pos:column="48">Point</name><argument_list pos:line="4833" pos:column="53">(<argument><expr><name pos:line="4833" pos:column="54">lastXChosen</name> <op:operator pos:line="4833" pos:column="66">-</op:operator> <name pos:line="4833" pos:column="68">xOffset</name></expr></argument>, <argument><expr><name><name pos:line="4833" pos:column="77">vs</name><op:operator pos:line="4833" pos:column="79">.</op:operator><name pos:line="4833" pos:column="80">lineHeight</name></name> <op:operator pos:line="4833" pos:column="91">*</op:operator> <op:operator pos:line="4833" pos:column="93">(</op:operator><call><name pos:line="4833" pos:column="94">LinesToScroll</name><argument_list pos:line="4833" pos:column="107">()</argument_list></call> <op:operator pos:line="4833" pos:column="110">-</op:operator> <name pos:line="4833" pos:column="112">caretYSlop</name><op:operator pos:line="4833" pos:column="122">)</op:operator></expr></argument>)</argument_list></call></expr></argument>,
			<argument><expr><lit:literal type="boolean" pos:line="4834" pos:column="25">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4834" pos:column="32">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="4834" pos:column="39">UserVirtualSpace</name><argument_list pos:line="4834" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	}</block></then> <else pos:line="4836" pos:column="11">else <block pos:line="4836" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="4837" pos:column="17">Point</name></type> <name pos:line="4837" pos:column="23">pt</name> <init pos:line="4837" pos:column="26">= <expr><call><name pos:line="4837" pos:column="28">LocationFromPosition</name><argument_list pos:line="4837" pos:column="48">(<argument><expr><call><name><name pos:line="4837" pos:column="49">sel</name><op:operator pos:line="4837" pos:column="52">.</op:operator><name pos:line="4837" pos:column="53">MainCaret</name></name><argument_list pos:line="4837" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name pos:line="4839" pos:column="17">topLineNew</name> <op:operator pos:line="4839" pos:column="28">=</op:operator> <call><name><name pos:line="4839" pos:column="30">Platform</name><op:operator pos:line="4839" pos:column="38">::</op:operator><name pos:line="4839" pos:column="40">Clamp</name></name><argument_list pos:line="4839" pos:column="45">(
		            <argument><expr><name pos:line="4840" pos:column="29">topLine</name> <op:operator pos:line="4840" pos:column="37">+</op:operator> <name pos:line="4840" pos:column="39">direction</name> <op:operator pos:line="4840" pos:column="49">*</op:operator> <call><name pos:line="4840" pos:column="51">LinesToScroll</name><argument_list pos:line="4840" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4840" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="4840" pos:column="71">MaxScrollPos</name><argument_list pos:line="4840" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="4841" pos:column="17">newPos</name> <op:operator pos:line="4841" pos:column="24">=</op:operator> <call><name pos:line="4841" pos:column="26">SPositionFromLocation</name><argument_list pos:line="4841" pos:column="47">(
			<argument><expr><call><name pos:line="4842" pos:column="25">Point</name><argument_list pos:line="4842" pos:column="30">(<argument><expr><name pos:line="4842" pos:column="31">lastXChosen</name> <op:operator pos:line="4842" pos:column="43">-</op:operator> <name pos:line="4842" pos:column="45">xOffset</name></expr></argument>, <argument><expr><name><name pos:line="4842" pos:column="54">pt</name><op:operator pos:line="4842" pos:column="56">.</op:operator><name pos:line="4842" pos:column="57">y</name></name> <op:operator pos:line="4842" pos:column="59">+</op:operator> <name pos:line="4842" pos:column="61">direction</name> <op:operator pos:line="4842" pos:column="71">*</op:operator> <op:operator pos:line="4842" pos:column="73">(</op:operator><name><name pos:line="4842" pos:column="74">vs</name><op:operator pos:line="4842" pos:column="76">.</op:operator><name pos:line="4842" pos:column="77">lineHeight</name></name> <op:operator pos:line="4842" pos:column="88">*</op:operator> <call><name pos:line="4842" pos:column="90">LinesToScroll</name><argument_list pos:line="4842" pos:column="103">()</argument_list></call><op:operator pos:line="4842" pos:column="105">)</op:operator></expr></argument>)</argument_list></call></expr></argument>,
			<argument><expr><lit:literal type="boolean" pos:line="4843" pos:column="25">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4843" pos:column="32">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="4843" pos:column="39">UserVirtualSpace</name><argument_list pos:line="4843" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if></else></if>

	<if pos:line="4846" pos:column="9">if <condition pos:line="4846" pos:column="12">(<expr><name pos:line="4846" pos:column="13">topLineNew</name> <op:operator pos:line="4846" pos:column="24">!=</op:operator> <name pos:line="4846" pos:column="27">topLine</name></expr>)</condition><then pos:line="4846" pos:column="35"> <block pos:line="4846" pos:column="36">{
		<expr_stmt><expr><call><name pos:line="4847" pos:column="17">SetTopLine</name><argument_list pos:line="4847" pos:column="27">(<argument><expr><name pos:line="4847" pos:column="28">topLineNew</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4848" pos:column="17">MovePositionTo</name><argument_list pos:line="4848" pos:column="31">(<argument><expr><name pos:line="4848" pos:column="32">newPos</name></expr></argument>, <argument><expr><name pos:line="4848" pos:column="40">selt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4849" pos:column="17">Redraw</name><argument_list pos:line="4849" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4850" pos:column="17">SetVerticalScrollPos</name><argument_list pos:line="4850" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="4851" pos:column="11">else <block pos:line="4851" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="4852" pos:column="17">MovePositionTo</name><argument_list pos:line="4852" pos:column="31">(<argument><expr><name pos:line="4852" pos:column="32">newPos</name></expr></argument>, <argument><expr><name pos:line="4852" pos:column="40">selt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="4856" pos:column="1">void</name></type> <name><name pos:line="4856" pos:column="6">Editor</name><op:operator pos:line="4856" pos:column="12">::</op:operator><name pos:line="4856" pos:column="14">ChangeCaseOfSelection</name></name><parameter_list pos:line="4856" pos:column="35">(<param><decl><type><name pos:line="4856" pos:column="36">int</name></type> <name pos:line="4856" pos:column="40">caseMapping</name></decl></param>)</parameter_list> <block pos:line="4856" pos:column="53">{
	<function_decl><type><name pos:line="4857" pos:column="9">UndoGroup</name></type> <name pos:line="4857" pos:column="19">ug</name><parameter_list pos:line="4857" pos:column="21">(<param><decl><type><name pos:line="4857" pos:column="22">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
	<for pos:line="4858" pos:column="9">for (<init><decl><type><name pos:line="4858" pos:column="14">size_t</name></type> <name pos:line="4858" pos:column="21">r</name><init pos:line="4858" pos:column="22">=<expr><lit:literal type="number" pos:line="4858" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4858" pos:column="26">r</name><op:operator pos:line="4858" pos:column="27">&lt;</op:operator><call><name><name pos:line="4858" pos:column="28">sel</name><op:operator pos:line="4858" pos:column="31">.</op:operator><name pos:line="4858" pos:column="32">Count</name></name><argument_list pos:line="4858" pos:column="37">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4858" pos:column="41">r</name><op:operator pos:line="4858" pos:column="42">++</op:operator></expr></incr>) <block pos:line="4858" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="4859" pos:column="17">SelectionRange</name></type> <name pos:line="4859" pos:column="32">current</name> <init pos:line="4859" pos:column="40">= <expr><call><name><name pos:line="4859" pos:column="42">sel</name><op:operator pos:line="4859" pos:column="45">.</op:operator><name pos:line="4859" pos:column="46">Range</name></name><argument_list pos:line="4859" pos:column="51">(<argument><expr><name pos:line="4859" pos:column="52">r</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4860" pos:column="17">SelectionRange</name></type> <name pos:line="4860" pos:column="32">currentNoVS</name> <init pos:line="4860" pos:column="44">= <expr><name pos:line="4860" pos:column="46">current</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4861" pos:column="17">currentNoVS</name><op:operator pos:line="4861" pos:column="28">.</op:operator><name pos:line="4861" pos:column="29">ClearVirtualSpace</name></name><argument_list pos:line="4861" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="4862" pos:column="17">char</name> <type:modifier pos:line="4862" pos:column="22">*</type:modifier></type><name pos:line="4862" pos:column="23">text</name> <init pos:line="4862" pos:column="28">= <expr><call><name pos:line="4862" pos:column="30">CopyRange</name><argument_list pos:line="4862" pos:column="39">(<argument><expr><call><name><name pos:line="4862" pos:column="40">currentNoVS</name><op:operator pos:line="4862" pos:column="51">.</op:operator><name pos:line="4862" pos:column="52">Start</name></name><argument_list pos:line="4862" pos:column="57">()</argument_list></call><op:operator pos:line="4862" pos:column="59">.</op:operator><call><name pos:line="4862" pos:column="60">Position</name><argument_list pos:line="4862" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4862" pos:column="72">currentNoVS</name><op:operator pos:line="4862" pos:column="83">.</op:operator><name pos:line="4862" pos:column="84">End</name></name><argument_list pos:line="4862" pos:column="87">()</argument_list></call><op:operator pos:line="4862" pos:column="89">.</op:operator><call><name pos:line="4862" pos:column="90">Position</name><argument_list pos:line="4862" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4863" pos:column="17">size_t</name></type> <name pos:line="4863" pos:column="24">rangeBytes</name> <init pos:line="4863" pos:column="35">= <expr><call><name><name pos:line="4863" pos:column="37">currentNoVS</name><op:operator pos:line="4863" pos:column="48">.</op:operator><name pos:line="4863" pos:column="49">Length</name></name><argument_list pos:line="4863" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4864" pos:column="17">if <condition pos:line="4864" pos:column="20">(<expr><name pos:line="4864" pos:column="21">rangeBytes</name> <op:operator pos:line="4864" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="4864" pos:column="34">0</lit:literal></expr>)</condition><then pos:line="4864" pos:column="36"> <block pos:line="4864" pos:column="37">{
			<function_decl><type><name><name pos:line="4865" pos:column="25">std</name><op:operator pos:line="4865" pos:column="28">::</op:operator><name pos:line="4865" pos:column="30">string</name></name></type> <name pos:line="4865" pos:column="37">sText</name><parameter_list pos:line="4865" pos:column="42">(<param><decl><type><name pos:line="4865" pos:column="43">text</name></type></decl></param>, <param><decl><type><name pos:line="4865" pos:column="49">rangeBytes</name></type></decl></param>)</parameter_list>;</function_decl>

			<decl_stmt><decl><type><name><name pos:line="4867" pos:column="25">std</name><op:operator pos:line="4867" pos:column="28">::</op:operator><name pos:line="4867" pos:column="30">string</name></name></type> <name pos:line="4867" pos:column="37">sMapped</name> <init pos:line="4867" pos:column="45">= <expr><call><name pos:line="4867" pos:column="47">CaseMapString</name><argument_list pos:line="4867" pos:column="60">(<argument><expr><name pos:line="4867" pos:column="61">sText</name></expr></argument>, <argument><expr><name pos:line="4867" pos:column="68">caseMapping</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="4869" pos:column="25">if <condition pos:line="4869" pos:column="28">(<expr><name pos:line="4869" pos:column="29">sMapped</name> <op:operator pos:line="4869" pos:column="37">!=</op:operator> <name pos:line="4869" pos:column="40">sText</name></expr>)</condition><then pos:line="4869" pos:column="46"> <block pos:line="4869" pos:column="47">{
				<decl_stmt><decl><type><name pos:line="4870" pos:column="33">size_t</name></type> <name pos:line="4870" pos:column="40">firstDifference</name> <init pos:line="4870" pos:column="56">= <expr><lit:literal type="number" pos:line="4870" pos:column="58">0</lit:literal></expr></init></decl>;</decl_stmt>
				<while pos:line="4871" pos:column="33">while <condition pos:line="4871" pos:column="39">(<expr><name><name pos:line="4871" pos:column="40">sMapped</name><index pos:line="4871" pos:column="47">[<expr><name pos:line="4871" pos:column="48">firstDifference</name></expr>]</index></name> <op:operator pos:line="4871" pos:column="65">==</op:operator> <name><name pos:line="4871" pos:column="68">sText</name><index pos:line="4871" pos:column="73">[<expr><name pos:line="4871" pos:column="74">firstDifference</name></expr>]</index></name></expr>)</condition>
					<expr_stmt><expr><name pos:line="4872" pos:column="41">firstDifference</name><op:operator pos:line="4872" pos:column="56">++</op:operator></expr>;</expr_stmt></while>
				<decl_stmt><decl><type><name pos:line="4873" pos:column="33">size_t</name></type> <name pos:line="4873" pos:column="40">lastDifference</name> <init pos:line="4873" pos:column="55">= <expr><call><name><name pos:line="4873" pos:column="57">sMapped</name><op:operator pos:line="4873" pos:column="64">.</op:operator><name pos:line="4873" pos:column="65">size</name></name><argument_list pos:line="4873" pos:column="69">()</argument_list></call> <op:operator pos:line="4873" pos:column="72">-</op:operator> <lit:literal type="number" pos:line="4873" pos:column="74">1</lit:literal></expr></init></decl>;</decl_stmt>
				<while pos:line="4874" pos:column="33">while <condition pos:line="4874" pos:column="39">(<expr><name><name pos:line="4874" pos:column="40">sMapped</name><index pos:line="4874" pos:column="47">[<expr><name pos:line="4874" pos:column="48">lastDifference</name></expr>]</index></name> <op:operator pos:line="4874" pos:column="64">==</op:operator> <name><name pos:line="4874" pos:column="67">sText</name><index pos:line="4874" pos:column="72">[<expr><name pos:line="4874" pos:column="73">lastDifference</name></expr>]</index></name></expr>)</condition>
					<expr_stmt><expr><name pos:line="4875" pos:column="41">lastDifference</name><op:operator pos:line="4875" pos:column="55">--</op:operator></expr>;</expr_stmt></while>
				<decl_stmt><decl><type><name pos:line="4876" pos:column="33">size_t</name></type> <name pos:line="4876" pos:column="40">endSame</name> <init pos:line="4876" pos:column="48">= <expr><call><name><name pos:line="4876" pos:column="50">sMapped</name><op:operator pos:line="4876" pos:column="57">.</op:operator><name pos:line="4876" pos:column="58">size</name></name><argument_list pos:line="4876" pos:column="62">()</argument_list></call> <op:operator pos:line="4876" pos:column="65">-</op:operator> <lit:literal type="number" pos:line="4876" pos:column="67">1</lit:literal> <op:operator pos:line="4876" pos:column="69">-</op:operator> <name pos:line="4876" pos:column="71">lastDifference</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="4877" pos:column="33">pdoc</name><op:operator pos:line="4877" pos:column="37">-&gt;</op:operator><name pos:line="4877" pos:column="39">DeleteChars</name></name><argument_list pos:line="4877" pos:column="50">(<argument><expr><call><name><name pos:line="4877" pos:column="51">currentNoVS</name><op:operator pos:line="4877" pos:column="62">.</op:operator><name pos:line="4877" pos:column="63">Start</name></name><argument_list pos:line="4877" pos:column="68">()</argument_list></call><op:operator pos:line="4877" pos:column="70">.</op:operator><call><name pos:line="4877" pos:column="71">Position</name><argument_list pos:line="4877" pos:column="79">()</argument_list></call> <op:operator pos:line="4877" pos:column="82">+</op:operator> <name pos:line="4877" pos:column="84">firstDifference</name></expr></argument>,
					<argument><expr><name pos:line="4878" pos:column="41">rangeBytes</name> <op:operator pos:line="4878" pos:column="52">-</op:operator> <name pos:line="4878" pos:column="54">firstDifference</name> <op:operator pos:line="4878" pos:column="70">-</op:operator> <name pos:line="4878" pos:column="72">endSame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="4879" pos:column="33">pdoc</name><op:operator pos:line="4879" pos:column="37">-&gt;</op:operator><name pos:line="4879" pos:column="39">InsertString</name></name><argument_list pos:line="4879" pos:column="51">(<argument><expr><call><name><name pos:line="4879" pos:column="52">currentNoVS</name><op:operator pos:line="4879" pos:column="63">.</op:operator><name pos:line="4879" pos:column="64">Start</name></name><argument_list pos:line="4879" pos:column="69">()</argument_list></call><op:operator pos:line="4879" pos:column="71">.</op:operator><call><name pos:line="4879" pos:column="72">Position</name><argument_list pos:line="4879" pos:column="80">()</argument_list></call> <op:operator pos:line="4879" pos:column="83">+</op:operator> <name pos:line="4879" pos:column="85">firstDifference</name></expr></argument>,
					<argument><expr><call><name><name pos:line="4880" pos:column="41">sMapped</name><op:operator pos:line="4880" pos:column="48">.</op:operator><name pos:line="4880" pos:column="49">c_str</name></name><argument_list pos:line="4880" pos:column="54">()</argument_list></call> <op:operator pos:line="4880" pos:column="57">+</op:operator> <name pos:line="4880" pos:column="59">firstDifference</name></expr></argument>, <argument><expr><name pos:line="4880" pos:column="76">lastDifference</name> <op:operator pos:line="4880" pos:column="91">-</op:operator> <name pos:line="4880" pos:column="93">firstDifference</name> <op:operator pos:line="4880" pos:column="109">+</op:operator> <lit:literal type="number" pos:line="4880" pos:column="111">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="4881" pos:column="33">// Automatic movement changes selection so reset to exactly the same as it was.</comment>
				<expr_stmt><expr><call><name><name pos:line="4882" pos:column="33">sel</name><op:operator pos:line="4882" pos:column="36">.</op:operator><name pos:line="4882" pos:column="37">Range</name></name><argument_list pos:line="4882" pos:column="42">(<argument><expr><name pos:line="4882" pos:column="43">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="4882" pos:column="46">=</op:operator> <name pos:line="4882" pos:column="48">current</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<expr_stmt><expr><op:operator pos:line="4885" pos:column="17">delete</op:operator> <index pos:line="4885" pos:column="24">[]</index><name pos:line="4885" pos:column="26">text</name></expr>;</expr_stmt>
	}</block></for>
}</block></function>

<function><type><name pos:line="4889" pos:column="1">void</name></type> <name><name pos:line="4889" pos:column="6">Editor</name><op:operator pos:line="4889" pos:column="12">::</op:operator><name pos:line="4889" pos:column="14">LineTranspose</name></name><parameter_list pos:line="4889" pos:column="27">()</parameter_list> <block pos:line="4889" pos:column="30">{
	<decl_stmt><decl><type><name pos:line="4890" pos:column="9">int</name></type> <name pos:line="4890" pos:column="13">line</name> <init pos:line="4890" pos:column="18">= <expr><call><name><name pos:line="4890" pos:column="20">pdoc</name><op:operator pos:line="4890" pos:column="24">-&gt;</op:operator><name pos:line="4890" pos:column="26">LineFromPosition</name></name><argument_list pos:line="4890" pos:column="42">(<argument><expr><call><name><name pos:line="4890" pos:column="43">sel</name><op:operator pos:line="4890" pos:column="46">.</op:operator><name pos:line="4890" pos:column="47">MainCaret</name></name><argument_list pos:line="4890" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4891" pos:column="9">if <condition pos:line="4891" pos:column="12">(<expr><name pos:line="4891" pos:column="13">line</name> <op:operator pos:line="4891" pos:column="18">&gt;</op:operator> <lit:literal type="number" pos:line="4891" pos:column="20">0</lit:literal></expr>)</condition><then pos:line="4891" pos:column="22"> <block pos:line="4891" pos:column="23">{
		<function_decl><type><name pos:line="4892" pos:column="17">UndoGroup</name></type> <name pos:line="4892" pos:column="27">ug</name><parameter_list pos:line="4892" pos:column="29">(<param><decl><type><name pos:line="4892" pos:column="30">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
		<decl_stmt><decl><type><name pos:line="4893" pos:column="17">int</name></type> <name pos:line="4893" pos:column="21">startPrev</name> <init pos:line="4893" pos:column="31">= <expr><call><name><name pos:line="4893" pos:column="33">pdoc</name><op:operator pos:line="4893" pos:column="37">-&gt;</op:operator><name pos:line="4893" pos:column="39">LineStart</name></name><argument_list pos:line="4893" pos:column="48">(<argument><expr><name pos:line="4893" pos:column="49">line</name> <op:operator pos:line="4893" pos:column="54">-</op:operator> <lit:literal type="number" pos:line="4893" pos:column="56">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4894" pos:column="17">int</name></type> <name pos:line="4894" pos:column="21">endPrev</name> <init pos:line="4894" pos:column="29">= <expr><call><name><name pos:line="4894" pos:column="31">pdoc</name><op:operator pos:line="4894" pos:column="35">-&gt;</op:operator><name pos:line="4894" pos:column="37">LineEnd</name></name><argument_list pos:line="4894" pos:column="44">(<argument><expr><name pos:line="4894" pos:column="45">line</name> <op:operator pos:line="4894" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="4894" pos:column="52">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4895" pos:column="17">int</name></type> <name pos:line="4895" pos:column="21">start</name> <init pos:line="4895" pos:column="27">= <expr><call><name><name pos:line="4895" pos:column="29">pdoc</name><op:operator pos:line="4895" pos:column="33">-&gt;</op:operator><name pos:line="4895" pos:column="35">LineStart</name></name><argument_list pos:line="4895" pos:column="44">(<argument><expr><name pos:line="4895" pos:column="45">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4896" pos:column="17">int</name></type> <name pos:line="4896" pos:column="21">end</name> <init pos:line="4896" pos:column="25">= <expr><call><name><name pos:line="4896" pos:column="27">pdoc</name><op:operator pos:line="4896" pos:column="31">-&gt;</op:operator><name pos:line="4896" pos:column="33">LineEnd</name></name><argument_list pos:line="4896" pos:column="40">(<argument><expr><name pos:line="4896" pos:column="41">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4897" pos:column="17">char</name> <type:modifier pos:line="4897" pos:column="22">*</type:modifier></type><name pos:line="4897" pos:column="23">line1</name> <init pos:line="4897" pos:column="29">= <expr><call><name pos:line="4897" pos:column="31">CopyRange</name><argument_list pos:line="4897" pos:column="40">(<argument><expr><name pos:line="4897" pos:column="41">startPrev</name></expr></argument>, <argument><expr><name pos:line="4897" pos:column="52">endPrev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4898" pos:column="17">int</name></type> <name pos:line="4898" pos:column="21">len1</name> <init pos:line="4898" pos:column="26">= <expr><name pos:line="4898" pos:column="28">endPrev</name> <op:operator pos:line="4898" pos:column="36">-</op:operator> <name pos:line="4898" pos:column="38">startPrev</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4899" pos:column="17">char</name> <type:modifier pos:line="4899" pos:column="22">*</type:modifier></type><name pos:line="4899" pos:column="23">line2</name> <init pos:line="4899" pos:column="29">= <expr><call><name pos:line="4899" pos:column="31">CopyRange</name><argument_list pos:line="4899" pos:column="40">(<argument><expr><name pos:line="4899" pos:column="41">start</name></expr></argument>, <argument><expr><name pos:line="4899" pos:column="48">end</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4900" pos:column="17">int</name></type> <name pos:line="4900" pos:column="21">len2</name> <init pos:line="4900" pos:column="26">= <expr><name pos:line="4900" pos:column="28">end</name> <op:operator pos:line="4900" pos:column="32">-</op:operator> <name pos:line="4900" pos:column="34">start</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4901" pos:column="17">pdoc</name><op:operator pos:line="4901" pos:column="21">-&gt;</op:operator><name pos:line="4901" pos:column="23">DeleteChars</name></name><argument_list pos:line="4901" pos:column="34">(<argument><expr><name pos:line="4901" pos:column="35">start</name></expr></argument>, <argument><expr><name pos:line="4901" pos:column="42">len2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4902" pos:column="17">pdoc</name><op:operator pos:line="4902" pos:column="21">-&gt;</op:operator><name pos:line="4902" pos:column="23">DeleteChars</name></name><argument_list pos:line="4902" pos:column="34">(<argument><expr><name pos:line="4902" pos:column="35">startPrev</name></expr></argument>, <argument><expr><name pos:line="4902" pos:column="46">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4903" pos:column="17">pdoc</name><op:operator pos:line="4903" pos:column="21">-&gt;</op:operator><name pos:line="4903" pos:column="23">InsertString</name></name><argument_list pos:line="4903" pos:column="35">(<argument><expr><name pos:line="4903" pos:column="36">startPrev</name></expr></argument>, <argument><expr><name pos:line="4903" pos:column="47">line2</name></expr></argument>, <argument><expr><name pos:line="4903" pos:column="54">len2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4904" pos:column="17">pdoc</name><op:operator pos:line="4904" pos:column="21">-&gt;</op:operator><name pos:line="4904" pos:column="23">InsertString</name></name><argument_list pos:line="4904" pos:column="35">(<argument><expr><name pos:line="4904" pos:column="36">start</name> <op:operator pos:line="4904" pos:column="42">-</op:operator> <name pos:line="4904" pos:column="44">len1</name> <op:operator pos:line="4904" pos:column="49">+</op:operator> <name pos:line="4904" pos:column="51">len2</name></expr></argument>, <argument><expr><name pos:line="4904" pos:column="57">line1</name></expr></argument>, <argument><expr><name pos:line="4904" pos:column="64">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4905" pos:column="17">MovePositionTo</name><argument_list pos:line="4905" pos:column="31">(<argument><expr><call><name pos:line="4905" pos:column="32">SelectionPosition</name><argument_list pos:line="4905" pos:column="49">(<argument><expr><name pos:line="4905" pos:column="50">start</name> <op:operator pos:line="4905" pos:column="56">-</op:operator> <name pos:line="4905" pos:column="58">len1</name> <op:operator pos:line="4905" pos:column="63">+</op:operator> <name pos:line="4905" pos:column="65">len2</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="4906" pos:column="17">delete</op:operator> <index pos:line="4906" pos:column="24">[]</index><name pos:line="4906" pos:column="26">line1</name></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="4907" pos:column="17">delete</op:operator> <index pos:line="4907" pos:column="24">[]</index><name pos:line="4907" pos:column="26">line2</name></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4911" pos:column="1">void</name></type> <name><name pos:line="4911" pos:column="6">Editor</name><op:operator pos:line="4911" pos:column="12">::</op:operator><name pos:line="4911" pos:column="14">Duplicate</name></name><parameter_list pos:line="4911" pos:column="23">(<param><decl><type><name pos:line="4911" pos:column="24">bool</name></type> <name pos:line="4911" pos:column="29">forLine</name></decl></param>)</parameter_list> <block pos:line="4911" pos:column="38">{
	<if pos:line="4912" pos:column="9">if <condition pos:line="4912" pos:column="12">(<expr><call><name><name pos:line="4912" pos:column="13">sel</name><op:operator pos:line="4912" pos:column="16">.</op:operator><name pos:line="4912" pos:column="17">Empty</name></name><argument_list pos:line="4912" pos:column="22">()</argument_list></call></expr>)</condition><then pos:line="4912" pos:column="25"> <block pos:line="4912" pos:column="26">{
		<expr_stmt><expr><name pos:line="4913" pos:column="17">forLine</name> <op:operator pos:line="4913" pos:column="25">=</op:operator> <lit:literal type="boolean" pos:line="4913" pos:column="27">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="4915" pos:column="9">UndoGroup</name></type> <name pos:line="4915" pos:column="19">ug</name><argument_list pos:line="4915" pos:column="21">(<argument><expr><name pos:line="4915" pos:column="22">pdoc</name></expr></argument>, <argument><expr><call><name><name pos:line="4915" pos:column="28">sel</name><op:operator pos:line="4915" pos:column="31">.</op:operator><name pos:line="4915" pos:column="32">Count</name></name><argument_list pos:line="4915" pos:column="37">()</argument_list></call> <op:operator pos:line="4915" pos:column="40">&gt;</op:operator> <lit:literal type="number" pos:line="4915" pos:column="42">1</lit:literal></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="4916" pos:column="9">const</specifier> <name pos:line="4916" pos:column="15">char</name> <type:modifier pos:line="4916" pos:column="20">*</type:modifier></type><name pos:line="4916" pos:column="21">eol</name> <init pos:line="4916" pos:column="25">= <expr><lit:literal type="string" pos:line="4916" pos:column="27">""</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4917" pos:column="9">int</name></type> <name pos:line="4917" pos:column="13">eolLen</name> <init pos:line="4917" pos:column="20">= <expr><lit:literal type="number" pos:line="4917" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="4918" pos:column="9">if <condition pos:line="4918" pos:column="12">(<expr><name pos:line="4918" pos:column="13">forLine</name></expr>)</condition><then pos:line="4918" pos:column="21"> <block pos:line="4918" pos:column="22">{
		<expr_stmt><expr><name pos:line="4919" pos:column="17">eol</name> <op:operator pos:line="4919" pos:column="21">=</op:operator> <call><name pos:line="4919" pos:column="23">StringFromEOLMode</name><argument_list pos:line="4919" pos:column="40">(<argument><expr><name><name pos:line="4919" pos:column="41">pdoc</name><op:operator pos:line="4919" pos:column="45">-&gt;</op:operator><name pos:line="4919" pos:column="47">eolMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="4920" pos:column="17">eolLen</name> <op:operator pos:line="4920" pos:column="24">=</op:operator> <call><name pos:line="4920" pos:column="26">istrlen</name><argument_list pos:line="4920" pos:column="33">(<argument><expr><name pos:line="4920" pos:column="34">eol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<for pos:line="4922" pos:column="9">for (<init><decl><type><name pos:line="4922" pos:column="14">size_t</name></type> <name pos:line="4922" pos:column="21">r</name><init pos:line="4922" pos:column="22">=<expr><lit:literal type="number" pos:line="4922" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4922" pos:column="26">r</name><op:operator pos:line="4922" pos:column="27">&lt;</op:operator><call><name><name pos:line="4922" pos:column="28">sel</name><op:operator pos:line="4922" pos:column="31">.</op:operator><name pos:line="4922" pos:column="32">Count</name></name><argument_list pos:line="4922" pos:column="37">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4922" pos:column="41">r</name><op:operator pos:line="4922" pos:column="42">++</op:operator></expr></incr>) <block pos:line="4922" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="4923" pos:column="17">SelectionPosition</name></type> <name pos:line="4923" pos:column="35">start</name> <init pos:line="4923" pos:column="41">= <expr><call><name><name pos:line="4923" pos:column="43">sel</name><op:operator pos:line="4923" pos:column="46">.</op:operator><name pos:line="4923" pos:column="47">Range</name></name><argument_list pos:line="4923" pos:column="52">(<argument><expr><name pos:line="4923" pos:column="53">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4923" pos:column="55">.</op:operator><call><name pos:line="4923" pos:column="56">Start</name><argument_list pos:line="4923" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4924" pos:column="17">SelectionPosition</name></type> <name pos:line="4924" pos:column="35">end</name> <init pos:line="4924" pos:column="39">= <expr><call><name><name pos:line="4924" pos:column="41">sel</name><op:operator pos:line="4924" pos:column="44">.</op:operator><name pos:line="4924" pos:column="45">Range</name></name><argument_list pos:line="4924" pos:column="50">(<argument><expr><name pos:line="4924" pos:column="51">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4924" pos:column="53">.</op:operator><call><name pos:line="4924" pos:column="54">End</name><argument_list pos:line="4924" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4925" pos:column="17">if <condition pos:line="4925" pos:column="20">(<expr><name pos:line="4925" pos:column="21">forLine</name></expr>)</condition><then pos:line="4925" pos:column="29"> <block pos:line="4925" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="4926" pos:column="25">int</name></type> <name pos:line="4926" pos:column="29">line</name> <init pos:line="4926" pos:column="34">= <expr><call><name><name pos:line="4926" pos:column="36">pdoc</name><op:operator pos:line="4926" pos:column="40">-&gt;</op:operator><name pos:line="4926" pos:column="42">LineFromPosition</name></name><argument_list pos:line="4926" pos:column="58">(<argument><expr><call><name><name pos:line="4926" pos:column="59">sel</name><op:operator pos:line="4926" pos:column="62">.</op:operator><name pos:line="4926" pos:column="63">Range</name></name><argument_list pos:line="4926" pos:column="68">(<argument><expr><name pos:line="4926" pos:column="69">r</name></expr></argument>)</argument_list></call><op:operator pos:line="4926" pos:column="71">.</op:operator><call><name><name pos:line="4926" pos:column="72">caret</name><op:operator pos:line="4926" pos:column="77">.</op:operator><name pos:line="4926" pos:column="78">Position</name></name><argument_list pos:line="4926" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="4927" pos:column="25">start</name> <op:operator pos:line="4927" pos:column="31">=</op:operator> <call><name pos:line="4927" pos:column="33">SelectionPosition</name><argument_list pos:line="4927" pos:column="50">(<argument><expr><call><name><name pos:line="4927" pos:column="51">pdoc</name><op:operator pos:line="4927" pos:column="55">-&gt;</op:operator><name pos:line="4927" pos:column="57">LineStart</name></name><argument_list pos:line="4927" pos:column="66">(<argument><expr><name pos:line="4927" pos:column="67">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4928" pos:column="25">end</name> <op:operator pos:line="4928" pos:column="29">=</op:operator> <call><name pos:line="4928" pos:column="31">SelectionPosition</name><argument_list pos:line="4928" pos:column="48">(<argument><expr><call><name><name pos:line="4928" pos:column="49">pdoc</name><op:operator pos:line="4928" pos:column="53">-&gt;</op:operator><name pos:line="4928" pos:column="55">LineEnd</name></name><argument_list pos:line="4928" pos:column="62">(<argument><expr><name pos:line="4928" pos:column="63">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="4930" pos:column="17">char</name> <type:modifier pos:line="4930" pos:column="22">*</type:modifier></type><name pos:line="4930" pos:column="23">text</name> <init pos:line="4930" pos:column="28">= <expr><call><name pos:line="4930" pos:column="30">CopyRange</name><argument_list pos:line="4930" pos:column="39">(<argument><expr><call><name><name pos:line="4930" pos:column="40">start</name><op:operator pos:line="4930" pos:column="45">.</op:operator><name pos:line="4930" pos:column="46">Position</name></name><argument_list pos:line="4930" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4930" pos:column="58">end</name><op:operator pos:line="4930" pos:column="61">.</op:operator><name pos:line="4930" pos:column="62">Position</name></name><argument_list pos:line="4930" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4931" pos:column="17">if <condition pos:line="4931" pos:column="20">(<expr><name pos:line="4931" pos:column="21">forLine</name></expr>)</condition><then pos:line="4931" pos:column="29">
			<expr_stmt><expr><call><name><name pos:line="4932" pos:column="25">pdoc</name><op:operator pos:line="4932" pos:column="29">-&gt;</op:operator><name pos:line="4932" pos:column="31">InsertString</name></name><argument_list pos:line="4932" pos:column="43">(<argument><expr><call><name><name pos:line="4932" pos:column="44">end</name><op:operator pos:line="4932" pos:column="47">.</op:operator><name pos:line="4932" pos:column="48">Position</name></name><argument_list pos:line="4932" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4932" pos:column="60">eol</name></expr></argument>, <argument><expr><name pos:line="4932" pos:column="65">eolLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name><name pos:line="4933" pos:column="17">pdoc</name><op:operator pos:line="4933" pos:column="21">-&gt;</op:operator><name pos:line="4933" pos:column="23">InsertString</name></name><argument_list pos:line="4933" pos:column="35">(<argument><expr><call><name><name pos:line="4933" pos:column="36">end</name><op:operator pos:line="4933" pos:column="39">.</op:operator><name pos:line="4933" pos:column="40">Position</name></name><argument_list pos:line="4933" pos:column="48">()</argument_list></call> <op:operator pos:line="4933" pos:column="51">+</op:operator> <name pos:line="4933" pos:column="53">eolLen</name></expr></argument>, <argument><expr><name pos:line="4933" pos:column="61">text</name></expr></argument>, <argument><expr><call><name pos:line="4933" pos:column="67">SelectionRange</name><argument_list pos:line="4933" pos:column="81">(<argument><expr><name pos:line="4933" pos:column="82">end</name></expr></argument>, <argument><expr><name pos:line="4933" pos:column="87">start</name></expr></argument>)</argument_list></call><op:operator pos:line="4933" pos:column="93">.</op:operator><call><name pos:line="4933" pos:column="94">Length</name><argument_list pos:line="4933" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="4934" pos:column="17">delete</op:operator> <index pos:line="4934" pos:column="24">[]</index><name pos:line="4934" pos:column="26">text</name></expr>;</expr_stmt>
	}</block></for>
	<if pos:line="4936" pos:column="9">if <condition pos:line="4936" pos:column="12">(<expr><call><name><name pos:line="4936" pos:column="13">sel</name><op:operator pos:line="4936" pos:column="16">.</op:operator><name pos:line="4936" pos:column="17">Count</name></name><argument_list pos:line="4936" pos:column="22">()</argument_list></call> <op:operator pos:line="4936" pos:column="25">&amp;&amp;</op:operator> <call><name><name pos:line="4936" pos:column="28">sel</name><op:operator pos:line="4936" pos:column="31">.</op:operator><name pos:line="4936" pos:column="32">IsRectangular</name></name><argument_list pos:line="4936" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="4936" pos:column="48"> <block pos:line="4936" pos:column="49">{
		<decl_stmt><decl><type><name pos:line="4937" pos:column="17">SelectionPosition</name></type> <name pos:line="4937" pos:column="35">last</name> <init pos:line="4937" pos:column="40">= <expr><call><name><name pos:line="4937" pos:column="42">sel</name><op:operator pos:line="4937" pos:column="45">.</op:operator><name pos:line="4937" pos:column="46">Last</name></name><argument_list pos:line="4937" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4938" pos:column="17">if <condition pos:line="4938" pos:column="20">(<expr><name pos:line="4938" pos:column="21">forLine</name></expr>)</condition><then pos:line="4938" pos:column="29"> <block pos:line="4938" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="4939" pos:column="25">int</name></type> <name pos:line="4939" pos:column="29">line</name> <init pos:line="4939" pos:column="34">= <expr><call><name><name pos:line="4939" pos:column="36">pdoc</name><op:operator pos:line="4939" pos:column="40">-&gt;</op:operator><name pos:line="4939" pos:column="42">LineFromPosition</name></name><argument_list pos:line="4939" pos:column="58">(<argument><expr><call><name><name pos:line="4939" pos:column="59">last</name><op:operator pos:line="4939" pos:column="63">.</op:operator><name pos:line="4939" pos:column="64">Position</name></name><argument_list pos:line="4939" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="4940" pos:column="25">last</name> <op:operator pos:line="4940" pos:column="30">=</op:operator> <call><name pos:line="4940" pos:column="32">SelectionPosition</name><argument_list pos:line="4940" pos:column="49">(<argument><expr><call><name><name pos:line="4940" pos:column="50">last</name><op:operator pos:line="4940" pos:column="54">.</op:operator><name pos:line="4940" pos:column="55">Position</name></name><argument_list pos:line="4940" pos:column="63">()</argument_list></call> <op:operator pos:line="4940" pos:column="66">+</op:operator> <call><name><name pos:line="4940" pos:column="68">pdoc</name><op:operator pos:line="4940" pos:column="72">-&gt;</op:operator><name pos:line="4940" pos:column="74">LineStart</name></name><argument_list pos:line="4940" pos:column="83">(<argument><expr><name pos:line="4940" pos:column="84">line</name><op:operator pos:line="4940" pos:column="88">+</op:operator><lit:literal type="number" pos:line="4940" pos:column="89">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="4940" pos:column="92">-</op:operator> <call><name><name pos:line="4940" pos:column="94">pdoc</name><op:operator pos:line="4940" pos:column="98">-&gt;</op:operator><name pos:line="4940" pos:column="100">LineStart</name></name><argument_list pos:line="4940" pos:column="109">(<argument><expr><name pos:line="4940" pos:column="110">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="4942" pos:column="17">if <condition pos:line="4942" pos:column="20">(<expr><call><name><name pos:line="4942" pos:column="21">sel</name><op:operator pos:line="4942" pos:column="24">.</op:operator><name pos:line="4942" pos:column="25">Rectangular</name></name><argument_list pos:line="4942" pos:column="36">()</argument_list></call><op:operator pos:line="4942" pos:column="38">.</op:operator><name pos:line="4942" pos:column="39">anchor</name> <op:operator pos:line="4942" pos:column="46">&gt;</op:operator> <call><name><name pos:line="4942" pos:column="48">sel</name><op:operator pos:line="4942" pos:column="51">.</op:operator><name pos:line="4942" pos:column="52">Rectangular</name></name><argument_list pos:line="4942" pos:column="63">()</argument_list></call><op:operator pos:line="4942" pos:column="65">.</op:operator><name pos:line="4942" pos:column="66">caret</name></expr>)</condition><then pos:line="4942" pos:column="72">
			<expr_stmt><expr><call><name><name pos:line="4943" pos:column="25">sel</name><op:operator pos:line="4943" pos:column="28">.</op:operator><name pos:line="4943" pos:column="29">Rectangular</name></name><argument_list pos:line="4943" pos:column="40">()</argument_list></call><op:operator pos:line="4943" pos:column="42">.</op:operator><name pos:line="4943" pos:column="43">anchor</name> <op:operator pos:line="4943" pos:column="50">=</op:operator> <name pos:line="4943" pos:column="52">last</name></expr>;</expr_stmt></then>
		<else pos:line="4944" pos:column="17">else
			<expr_stmt><expr><call><name><name pos:line="4945" pos:column="25">sel</name><op:operator pos:line="4945" pos:column="28">.</op:operator><name pos:line="4945" pos:column="29">Rectangular</name></name><argument_list pos:line="4945" pos:column="40">()</argument_list></call><op:operator pos:line="4945" pos:column="42">.</op:operator><name pos:line="4945" pos:column="43">caret</name> <op:operator pos:line="4945" pos:column="49">=</op:operator> <name pos:line="4945" pos:column="51">last</name></expr>;</expr_stmt></else></if>
		<expr_stmt><expr><call><name pos:line="4946" pos:column="17">SetRectangularRange</name><argument_list pos:line="4946" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="4950" pos:column="1">void</name></type> <name><name pos:line="4950" pos:column="6">Editor</name><op:operator pos:line="4950" pos:column="12">::</op:operator><name pos:line="4950" pos:column="14">CancelModes</name></name><parameter_list pos:line="4950" pos:column="25">()</parameter_list> <block pos:line="4950" pos:column="28">{
	<expr_stmt><expr><call><name><name pos:line="4951" pos:column="9">sel</name><op:operator pos:line="4951" pos:column="12">.</op:operator><name pos:line="4951" pos:column="13">SetMoveExtends</name></name><argument_list pos:line="4951" pos:column="27">(<argument><expr><lit:literal type="boolean" pos:line="4951" pos:column="28">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4954" pos:column="1">void</name></type> <name><name pos:line="4954" pos:column="6">Editor</name><op:operator pos:line="4954" pos:column="12">::</op:operator><name pos:line="4954" pos:column="14">NewLine</name></name><parameter_list pos:line="4954" pos:column="21">()</parameter_list> <block pos:line="4954" pos:column="24">{
	<expr_stmt><expr><call><name pos:line="4955" pos:column="9">ClearSelection</name><argument_list pos:line="4955" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><specifier pos:line="4956" pos:column="9">const</specifier> <name pos:line="4956" pos:column="15">char</name> <type:modifier pos:line="4956" pos:column="20">*</type:modifier></type><name pos:line="4956" pos:column="21">eol</name> <init pos:line="4956" pos:column="25">= <expr><lit:literal type="string" pos:line="4956" pos:column="27">"\n"</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="4957" pos:column="9">if <condition pos:line="4957" pos:column="12">(<expr><name><name pos:line="4957" pos:column="13">pdoc</name><op:operator pos:line="4957" pos:column="17">-&gt;</op:operator><name pos:line="4957" pos:column="19">eolMode</name></name> <op:operator pos:line="4957" pos:column="27">==</op:operator> <name pos:line="4957" pos:column="30">SC_EOL_CRLF</name></expr>)</condition><then pos:line="4957" pos:column="42"> <block pos:line="4957" pos:column="43">{
		<expr_stmt><expr><name pos:line="4958" pos:column="17">eol</name> <op:operator pos:line="4958" pos:column="21">=</op:operator> <lit:literal type="string" pos:line="4958" pos:column="23">"\r\n"</lit:literal></expr>;</expr_stmt>
	}</block></then> <else pos:line="4959" pos:column="11">else <if pos:line="4959" pos:column="16">if <condition pos:line="4959" pos:column="19">(<expr><name><name pos:line="4959" pos:column="20">pdoc</name><op:operator pos:line="4959" pos:column="24">-&gt;</op:operator><name pos:line="4959" pos:column="26">eolMode</name></name> <op:operator pos:line="4959" pos:column="34">==</op:operator> <name pos:line="4959" pos:column="37">SC_EOL_CR</name></expr>)</condition><then pos:line="4959" pos:column="47"> <block pos:line="4959" pos:column="48">{
		<expr_stmt><expr><name pos:line="4960" pos:column="17">eol</name> <op:operator pos:line="4960" pos:column="21">=</op:operator> <lit:literal type="string" pos:line="4960" pos:column="23">"\r"</lit:literal></expr>;</expr_stmt>
	}</block></then></if></else></if> <comment type="line" pos:line="4961" pos:column="11">// else SC_EOL_LF -&gt; "\n" already set</comment>
	<if pos:line="4962" pos:column="9">if <condition pos:line="4962" pos:column="12">(<expr><call><name><name pos:line="4962" pos:column="13">pdoc</name><op:operator pos:line="4962" pos:column="17">-&gt;</op:operator><name pos:line="4962" pos:column="19">InsertCString</name></name><argument_list pos:line="4962" pos:column="32">(<argument><expr><call><name><name pos:line="4962" pos:column="33">sel</name><op:operator pos:line="4962" pos:column="36">.</op:operator><name pos:line="4962" pos:column="37">MainCaret</name></name><argument_list pos:line="4962" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="4962" pos:column="50">eol</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4962" pos:column="55"> <block pos:line="4962" pos:column="56">{
		<expr_stmt><expr><call><name pos:line="4963" pos:column="17">SetEmptySelection</name><argument_list pos:line="4963" pos:column="34">(<argument><expr><call><name><name pos:line="4963" pos:column="35">sel</name><op:operator pos:line="4963" pos:column="38">.</op:operator><name pos:line="4963" pos:column="39">MainCaret</name></name><argument_list pos:line="4963" pos:column="48">()</argument_list></call> <op:operator pos:line="4963" pos:column="51">+</op:operator> <call><name pos:line="4963" pos:column="53">istrlen</name><argument_list pos:line="4963" pos:column="60">(<argument><expr><name pos:line="4963" pos:column="61">eol</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<while pos:line="4964" pos:column="17">while <condition pos:line="4964" pos:column="23">(<expr><op:operator pos:line="4964" pos:column="24">*</op:operator><name pos:line="4964" pos:column="25">eol</name></expr>)</condition> <block pos:line="4964" pos:column="30">{
			<expr_stmt><expr><call><name pos:line="4965" pos:column="25">NotifyChar</name><argument_list pos:line="4965" pos:column="35">(<argument><expr><op:operator pos:line="4965" pos:column="36">*</op:operator><name pos:line="4965" pos:column="37">eol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="4966" pos:column="25">if <condition pos:line="4966" pos:column="28">(<expr><name pos:line="4966" pos:column="29">recordingMacro</name></expr>)</condition><then pos:line="4966" pos:column="44"> <block pos:line="4966" pos:column="45">{
				<decl_stmt><decl><type><name pos:line="4967" pos:column="33">char</name></type> <name><name pos:line="4967" pos:column="38">txt</name><index pos:line="4967" pos:column="41">[<expr><lit:literal type="number" pos:line="4967" pos:column="42">2</lit:literal></expr>]</index></name></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="4968" pos:column="33">txt</name><index pos:line="4968" pos:column="36">[<expr><lit:literal type="number" pos:line="4968" pos:column="37">0</lit:literal></expr>]</index></name> <op:operator pos:line="4968" pos:column="40">=</op:operator> <op:operator pos:line="4968" pos:column="42">*</op:operator><name pos:line="4968" pos:column="43">eol</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="4969" pos:column="33">txt</name><index pos:line="4969" pos:column="36">[<expr><lit:literal type="number" pos:line="4969" pos:column="37">1</lit:literal></expr>]</index></name> <op:operator pos:line="4969" pos:column="40">=</op:operator> <lit:literal type="char" pos:line="4969" pos:column="42">'\0'</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="4970" pos:column="33">NotifyMacroRecord</name><argument_list pos:line="4970" pos:column="50">(<argument><expr><name pos:line="4970" pos:column="51">SCI_REPLACESEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="4970" pos:column="67">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="4970" pos:column="70">reinterpret_cast</name><argument_list pos:line="4970" pos:column="86">&lt;<argument><expr><name pos:line="4970" pos:column="87">sptr_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="4970" pos:column="94">(<argument><expr><name pos:line="4970" pos:column="95">txt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="4972" pos:column="25">eol</name><op:operator pos:line="4972" pos:column="28">++</op:operator></expr>;</expr_stmt>
		}</block></while>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="4975" pos:column="9">SetLastXChosen</name><argument_list pos:line="4975" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4976" pos:column="9">SetScrollBars</name><argument_list pos:line="4976" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="4977" pos:column="9">EnsureCaretVisible</name><argument_list pos:line="4977" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="4978" pos:column="9">// Avoid blinking during rapid typing:</comment>
	<expr_stmt><expr><call><name pos:line="4979" pos:column="9">ShowCaretAtCurrentPosition</name><argument_list pos:line="4979" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4982" pos:column="1">void</name></type> <name><name pos:line="4982" pos:column="6">Editor</name><op:operator pos:line="4982" pos:column="12">::</op:operator><name pos:line="4982" pos:column="14">CursorUpOrDown</name></name><parameter_list pos:line="4982" pos:column="28">(<param><decl><type><name pos:line="4982" pos:column="29">int</name></type> <name pos:line="4982" pos:column="33">direction</name></decl></param>, <param><decl><type><name><name pos:line="4982" pos:column="44">Selection</name><op:operator pos:line="4982" pos:column="53">::</op:operator><name pos:line="4982" pos:column="55">selTypes</name></name></type> <name pos:line="4982" pos:column="64">selt</name></decl></param>)</parameter_list> <block pos:line="4982" pos:column="70">{
	<decl_stmt><decl><type><name pos:line="4983" pos:column="9">SelectionPosition</name></type> <name pos:line="4983" pos:column="27">caretToUse</name> <init pos:line="4983" pos:column="38">= <expr><call><name><name pos:line="4983" pos:column="40">sel</name><op:operator pos:line="4983" pos:column="43">.</op:operator><name pos:line="4983" pos:column="44">Range</name></name><argument_list pos:line="4983" pos:column="49">(<argument><expr><call><name><name pos:line="4983" pos:column="50">sel</name><op:operator pos:line="4983" pos:column="53">.</op:operator><name pos:line="4983" pos:column="54">Main</name></name><argument_list pos:line="4983" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4983" pos:column="61">.</op:operator><name pos:line="4983" pos:column="62">caret</name></expr></init></decl>;</decl_stmt>
	<if pos:line="4984" pos:column="9">if <condition pos:line="4984" pos:column="12">(<expr><call><name><name pos:line="4984" pos:column="13">sel</name><op:operator pos:line="4984" pos:column="16">.</op:operator><name pos:line="4984" pos:column="17">IsRectangular</name></name><argument_list pos:line="4984" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="4984" pos:column="33"> <block pos:line="4984" pos:column="34">{
		<if pos:line="4985" pos:column="17">if <condition pos:line="4985" pos:column="20">(<expr><name pos:line="4985" pos:column="21">selt</name> <op:operator pos:line="4985" pos:column="26">==</op:operator>  <name><name pos:line="4985" pos:column="30">Selection</name><op:operator pos:line="4985" pos:column="39">::</op:operator><name pos:line="4985" pos:column="41">noSel</name></name></expr>)</condition><then pos:line="4985" pos:column="47"> <block pos:line="4985" pos:column="48">{
			<expr_stmt><expr><name pos:line="4986" pos:column="25">caretToUse</name> <op:operator pos:line="4986" pos:column="36">=</op:operator> <op:operator pos:line="4986" pos:column="38">(</op:operator><name pos:line="4986" pos:column="39">direction</name> <op:operator pos:line="4986" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="4986" pos:column="51">0</lit:literal><op:operator pos:line="4986" pos:column="52">)</op:operator> <op:operator pos:line="4986" pos:column="54">?</op:operator> <call><name><name pos:line="4986" pos:column="56">sel</name><op:operator pos:line="4986" pos:column="59">.</op:operator><name pos:line="4986" pos:column="60">Limits</name></name><argument_list pos:line="4986" pos:column="66">()</argument_list></call><op:operator pos:line="4986" pos:column="68">.</op:operator><name pos:line="4986" pos:column="69">end</name> <op:operator pos:line="4986" pos:column="73">:</op:operator> <call><name><name pos:line="4986" pos:column="75">sel</name><op:operator pos:line="4986" pos:column="78">.</op:operator><name pos:line="4986" pos:column="79">Limits</name></name><argument_list pos:line="4986" pos:column="85">()</argument_list></call><op:operator pos:line="4986" pos:column="87">.</op:operator><name pos:line="4986" pos:column="88">start</name></expr>;</expr_stmt>
		}</block></then> <else pos:line="4987" pos:column="19">else <block pos:line="4987" pos:column="24">{
			<expr_stmt><expr><name pos:line="4988" pos:column="25">caretToUse</name> <op:operator pos:line="4988" pos:column="36">=</op:operator> <call><name><name pos:line="4988" pos:column="38">sel</name><op:operator pos:line="4988" pos:column="41">.</op:operator><name pos:line="4988" pos:column="42">Rectangular</name></name><argument_list pos:line="4988" pos:column="53">()</argument_list></call><op:operator pos:line="4988" pos:column="55">.</op:operator><name pos:line="4988" pos:column="56">caret</name></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="4991" pos:column="9">Point</name></type> <name pos:line="4991" pos:column="15">pt</name> <init pos:line="4991" pos:column="18">= <expr><call><name pos:line="4991" pos:column="20">LocationFromPosition</name><argument_list pos:line="4991" pos:column="40">(<argument><expr><name pos:line="4991" pos:column="41">caretToUse</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4992" pos:column="9">int</name></type> <name pos:line="4992" pos:column="13">lineDoc</name> <init pos:line="4992" pos:column="21">= <expr><call><name><name pos:line="4992" pos:column="23">pdoc</name><op:operator pos:line="4992" pos:column="27">-&gt;</op:operator><name pos:line="4992" pos:column="29">LineFromPosition</name></name><argument_list pos:line="4992" pos:column="45">(<argument><expr><call><name><name pos:line="4992" pos:column="46">caretToUse</name><op:operator pos:line="4992" pos:column="56">.</op:operator><name pos:line="4992" pos:column="57">Position</name></name><argument_list pos:line="4992" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4993" pos:column="9">Point</name></type> <name pos:line="4993" pos:column="15">ptStartLine</name> <init pos:line="4993" pos:column="27">= <expr><call><name pos:line="4993" pos:column="29">LocationFromPosition</name><argument_list pos:line="4993" pos:column="49">(<argument><expr><call><name><name pos:line="4993" pos:column="50">pdoc</name><op:operator pos:line="4993" pos:column="54">-&gt;</op:operator><name pos:line="4993" pos:column="56">LineStart</name></name><argument_list pos:line="4993" pos:column="65">(<argument><expr><name pos:line="4993" pos:column="66">lineDoc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4994" pos:column="9">int</name></type> <name pos:line="4994" pos:column="13">subLine</name> <init pos:line="4994" pos:column="21">= <expr><op:operator pos:line="4994" pos:column="23">(</op:operator><name><name pos:line="4994" pos:column="24">pt</name><op:operator pos:line="4994" pos:column="26">.</op:operator><name pos:line="4994" pos:column="27">y</name></name> <op:operator pos:line="4994" pos:column="29">-</op:operator> <name><name pos:line="4994" pos:column="31">ptStartLine</name><op:operator pos:line="4994" pos:column="42">.</op:operator><name pos:line="4994" pos:column="43">y</name></name><op:operator pos:line="4994" pos:column="44">)</op:operator> <op:operator pos:line="4994" pos:column="46">/</op:operator> <name><name pos:line="4994" pos:column="48">vs</name><op:operator pos:line="4994" pos:column="50">.</op:operator><name pos:line="4994" pos:column="51">lineHeight</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4995" pos:column="9">int</name></type> <name pos:line="4995" pos:column="13">commentLines</name> <init pos:line="4995" pos:column="26">= <expr><name><name pos:line="4995" pos:column="28">vs</name><op:operator pos:line="4995" pos:column="30">.</op:operator><name pos:line="4995" pos:column="31">annotationVisible</name></name> <op:operator pos:line="4995" pos:column="49">?</op:operator> <call><name><name pos:line="4995" pos:column="51">pdoc</name><op:operator pos:line="4995" pos:column="55">-&gt;</op:operator><name pos:line="4995" pos:column="57">AnnotationLines</name></name><argument_list pos:line="4995" pos:column="72">(<argument><expr><name pos:line="4995" pos:column="73">lineDoc</name></expr></argument>)</argument_list></call> <op:operator pos:line="4995" pos:column="82">:</op:operator> <lit:literal type="number" pos:line="4995" pos:column="84">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4996" pos:column="9">SelectionPosition</name></type> <name pos:line="4996" pos:column="27">posNew</name> <init pos:line="4996" pos:column="34">= <expr><call><name pos:line="4996" pos:column="36">SPositionFromLocation</name><argument_list pos:line="4996" pos:column="57">(
	            <argument><expr><call><name pos:line="4997" pos:column="21">Point</name><argument_list pos:line="4997" pos:column="26">(<argument><expr><name pos:line="4997" pos:column="27">lastXChosen</name> <op:operator pos:line="4997" pos:column="39">-</op:operator> <name pos:line="4997" pos:column="41">xOffset</name></expr></argument>, <argument><expr><name><name pos:line="4997" pos:column="50">pt</name><op:operator pos:line="4997" pos:column="52">.</op:operator><name pos:line="4997" pos:column="53">y</name></name> <op:operator pos:line="4997" pos:column="55">+</op:operator> <name pos:line="4997" pos:column="57">direction</name> <op:operator pos:line="4997" pos:column="67">*</op:operator> <name><name pos:line="4997" pos:column="69">vs</name><op:operator pos:line="4997" pos:column="71">.</op:operator><name pos:line="4997" pos:column="72">lineHeight</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4997" pos:column="85">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="4997" pos:column="92">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="4997" pos:column="99">UserVirtualSpace</name><argument_list pos:line="4997" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4998" pos:column="9">if <condition pos:line="4998" pos:column="12">(<expr><op:operator pos:line="4998" pos:column="13">(</op:operator><name pos:line="4998" pos:column="14">direction</name> <op:operator pos:line="4998" pos:column="24">&gt;</op:operator> <lit:literal type="number" pos:line="4998" pos:column="26">0</lit:literal><op:operator pos:line="4998" pos:column="27">)</op:operator> <op:operator pos:line="4998" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="4998" pos:column="32">(</op:operator><name pos:line="4998" pos:column="33">subLine</name> <op:operator pos:line="4998" pos:column="41">&gt;=</op:operator> <op:operator pos:line="4998" pos:column="44">(</op:operator><call><name><name pos:line="4998" pos:column="45">cs</name><op:operator pos:line="4998" pos:column="47">.</op:operator><name pos:line="4998" pos:column="48">GetHeight</name></name><argument_list pos:line="4998" pos:column="57">(<argument><expr><name pos:line="4998" pos:column="58">lineDoc</name></expr></argument>)</argument_list></call> <op:operator pos:line="4998" pos:column="67">-</op:operator> <lit:literal type="number" pos:line="4998" pos:column="69">1</lit:literal> <op:operator pos:line="4998" pos:column="71">-</op:operator> <name pos:line="4998" pos:column="73">commentLines</name><op:operator pos:line="4998" pos:column="85">)</op:operator><op:operator pos:line="4998" pos:column="86">)</op:operator></expr>)</condition><then pos:line="4998" pos:column="88"> <block pos:line="4998" pos:column="89">{
		<expr_stmt><expr><name pos:line="4999" pos:column="17">posNew</name> <op:operator pos:line="4999" pos:column="24">=</op:operator> <call><name pos:line="4999" pos:column="26">SPositionFromLocation</name><argument_list pos:line="4999" pos:column="47">(
	            <argument><expr><call><name pos:line="5000" pos:column="21">Point</name><argument_list pos:line="5000" pos:column="26">(<argument><expr><name pos:line="5000" pos:column="27">lastXChosen</name> <op:operator pos:line="5000" pos:column="39">-</op:operator> <name pos:line="5000" pos:column="41">xOffset</name></expr></argument>, <argument><expr><name><name pos:line="5000" pos:column="50">pt</name><op:operator pos:line="5000" pos:column="52">.</op:operator><name pos:line="5000" pos:column="53">y</name></name> <op:operator pos:line="5000" pos:column="55">+</op:operator> <op:operator pos:line="5000" pos:column="57">(</op:operator><name pos:line="5000" pos:column="58">commentLines</name> <op:operator pos:line="5000" pos:column="71">+</op:operator> <lit:literal type="number" pos:line="5000" pos:column="73">1</lit:literal><op:operator pos:line="5000" pos:column="74">)</op:operator> <op:operator pos:line="5000" pos:column="76">*</op:operator> <name><name pos:line="5000" pos:column="78">vs</name><op:operator pos:line="5000" pos:column="80">.</op:operator><name pos:line="5000" pos:column="81">lineHeight</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5000" pos:column="94">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5000" pos:column="101">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="5000" pos:column="108">UserVirtualSpace</name><argument_list pos:line="5000" pos:column="124">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="5002" pos:column="9">if <condition pos:line="5002" pos:column="12">(<expr><name pos:line="5002" pos:column="13">direction</name> <op:operator pos:line="5002" pos:column="23">&lt;</op:operator> <lit:literal type="number" pos:line="5002" pos:column="25">0</lit:literal></expr>)</condition><then pos:line="5002" pos:column="27"> <block pos:line="5002" pos:column="28">{
		<comment type="line" pos:line="5003" pos:column="17">// Line wrapping may lead to a location on the same line, so</comment>
		<comment type="line" pos:line="5004" pos:column="17">// seek back if that is the case.</comment>
		<comment type="line" pos:line="5005" pos:column="17">// There is an equivalent case when moving down which skips</comment>
		<comment type="line" pos:line="5006" pos:column="17">// over a line but as that does not trap the user it is fine.</comment>
		<decl_stmt><decl><type><name pos:line="5007" pos:column="17">Point</name></type> <name pos:line="5007" pos:column="23">ptNew</name> <init pos:line="5007" pos:column="29">= <expr><call><name pos:line="5007" pos:column="31">LocationFromPosition</name><argument_list pos:line="5007" pos:column="51">(<argument><expr><call><name><name pos:line="5007" pos:column="52">posNew</name><op:operator pos:line="5007" pos:column="58">.</op:operator><name pos:line="5007" pos:column="59">Position</name></name><argument_list pos:line="5007" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<while pos:line="5008" pos:column="17">while <condition pos:line="5008" pos:column="23">(<expr><op:operator pos:line="5008" pos:column="24">(</op:operator><call><name><name pos:line="5008" pos:column="25">posNew</name><op:operator pos:line="5008" pos:column="31">.</op:operator><name pos:line="5008" pos:column="32">Position</name></name><argument_list pos:line="5008" pos:column="40">()</argument_list></call> <op:operator pos:line="5008" pos:column="43">&gt;</op:operator> <lit:literal type="number" pos:line="5008" pos:column="45">0</lit:literal><op:operator pos:line="5008" pos:column="46">)</op:operator> <op:operator pos:line="5008" pos:column="48">&amp;&amp;</op:operator> <op:operator pos:line="5008" pos:column="51">(</op:operator><name><name pos:line="5008" pos:column="52">pt</name><op:operator pos:line="5008" pos:column="54">.</op:operator><name pos:line="5008" pos:column="55">y</name></name> <op:operator pos:line="5008" pos:column="57">==</op:operator> <name><name pos:line="5008" pos:column="60">ptNew</name><op:operator pos:line="5008" pos:column="65">.</op:operator><name pos:line="5008" pos:column="66">y</name></name><op:operator pos:line="5008" pos:column="67">)</op:operator></expr>)</condition> <block pos:line="5008" pos:column="70">{
			<expr_stmt><expr><call><name><name pos:line="5009" pos:column="25">posNew</name><op:operator pos:line="5009" pos:column="31">.</op:operator><name pos:line="5009" pos:column="32">Add</name></name><argument_list pos:line="5009" pos:column="35">(<argument><expr><op:operator pos:line="5009" pos:column="36">-</op:operator> <lit:literal type="number" pos:line="5009" pos:column="38">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="5010" pos:column="25">posNew</name><op:operator pos:line="5010" pos:column="31">.</op:operator><name pos:line="5010" pos:column="32">SetVirtualSpace</name></name><argument_list pos:line="5010" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="5010" pos:column="48">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="5011" pos:column="25">ptNew</name> <op:operator pos:line="5011" pos:column="31">=</op:operator> <call><name pos:line="5011" pos:column="33">LocationFromPosition</name><argument_list pos:line="5011" pos:column="53">(<argument><expr><call><name><name pos:line="5011" pos:column="54">posNew</name><op:operator pos:line="5011" pos:column="60">.</op:operator><name pos:line="5011" pos:column="61">Position</name></name><argument_list pos:line="5011" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></while>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="5014" pos:column="9">MovePositionTo</name><argument_list pos:line="5014" pos:column="23">(<argument><expr><name pos:line="5014" pos:column="24">posNew</name></expr></argument>, <argument><expr><name pos:line="5014" pos:column="32">selt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="5017" pos:column="1">void</name></type> <name><name pos:line="5017" pos:column="6">Editor</name><op:operator pos:line="5017" pos:column="12">::</op:operator><name pos:line="5017" pos:column="14">ParaUpOrDown</name></name><parameter_list pos:line="5017" pos:column="26">(<param><decl><type><name pos:line="5017" pos:column="27">int</name></type> <name pos:line="5017" pos:column="31">direction</name></decl></param>, <param><decl><type><name><name pos:line="5017" pos:column="42">Selection</name><op:operator pos:line="5017" pos:column="51">::</op:operator><name pos:line="5017" pos:column="53">selTypes</name></name></type> <name pos:line="5017" pos:column="62">selt</name></decl></param>)</parameter_list> <block pos:line="5017" pos:column="68">{
	<decl_stmt><decl><type><name pos:line="5018" pos:column="9">int</name></type> <name pos:line="5018" pos:column="13">lineDoc</name></decl><op:operator pos:line="5018" pos:column="20">,</op:operator> <decl><type ref="prev"/><name pos:line="5018" pos:column="22">savedPos</name> <init pos:line="5018" pos:column="31">= <expr><call><name><name pos:line="5018" pos:column="33">sel</name><op:operator pos:line="5018" pos:column="36">.</op:operator><name pos:line="5018" pos:column="37">MainCaret</name></name><argument_list pos:line="5018" pos:column="46">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<do pos:line="5019" pos:column="9">do <block pos:line="5019" pos:column="12">{
		<expr_stmt><expr><call><name pos:line="5020" pos:column="17">MovePositionTo</name><argument_list pos:line="5020" pos:column="31">(<argument><expr><call><name pos:line="5020" pos:column="32">SelectionPosition</name><argument_list pos:line="5020" pos:column="49">(<argument><expr><name pos:line="5020" pos:column="50">direction</name> <op:operator pos:line="5020" pos:column="60">&gt;</op:operator> <lit:literal type="number" pos:line="5020" pos:column="62">0</lit:literal> <op:operator pos:line="5020" pos:column="64">?</op:operator> <call><name><name pos:line="5020" pos:column="66">pdoc</name><op:operator pos:line="5020" pos:column="70">-&gt;</op:operator><name pos:line="5020" pos:column="72">ParaDown</name></name><argument_list pos:line="5020" pos:column="80">(<argument><expr><call><name><name pos:line="5020" pos:column="81">sel</name><op:operator pos:line="5020" pos:column="84">.</op:operator><name pos:line="5020" pos:column="85">MainCaret</name></name><argument_list pos:line="5020" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5020" pos:column="98">:</op:operator> <call><name><name pos:line="5020" pos:column="100">pdoc</name><op:operator pos:line="5020" pos:column="104">-&gt;</op:operator><name pos:line="5020" pos:column="106">ParaUp</name></name><argument_list pos:line="5020" pos:column="112">(<argument><expr><call><name><name pos:line="5020" pos:column="113">sel</name><op:operator pos:line="5020" pos:column="116">.</op:operator><name pos:line="5020" pos:column="117">MainCaret</name></name><argument_list pos:line="5020" pos:column="126">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5020" pos:column="132">selt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5021" pos:column="17">lineDoc</name> <op:operator pos:line="5021" pos:column="25">=</op:operator> <call><name><name pos:line="5021" pos:column="27">pdoc</name><op:operator pos:line="5021" pos:column="31">-&gt;</op:operator><name pos:line="5021" pos:column="33">LineFromPosition</name></name><argument_list pos:line="5021" pos:column="49">(<argument><expr><call><name><name pos:line="5021" pos:column="50">sel</name><op:operator pos:line="5021" pos:column="53">.</op:operator><name pos:line="5021" pos:column="54">MainCaret</name></name><argument_list pos:line="5021" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="5022" pos:column="17">if <condition pos:line="5022" pos:column="20">(<expr><name pos:line="5022" pos:column="21">direction</name> <op:operator pos:line="5022" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="5022" pos:column="33">0</lit:literal></expr>)</condition><then pos:line="5022" pos:column="35"> <block pos:line="5022" pos:column="36">{
			<if pos:line="5023" pos:column="25">if <condition pos:line="5023" pos:column="28">(<expr><call><name><name pos:line="5023" pos:column="29">sel</name><op:operator pos:line="5023" pos:column="32">.</op:operator><name pos:line="5023" pos:column="33">MainCaret</name></name><argument_list pos:line="5023" pos:column="42">()</argument_list></call> <op:operator pos:line="5023" pos:column="45">&gt;=</op:operator> <call><name><name pos:line="5023" pos:column="48">pdoc</name><op:operator pos:line="5023" pos:column="52">-&gt;</op:operator><name pos:line="5023" pos:column="54">Length</name></name><argument_list pos:line="5023" pos:column="60">()</argument_list></call> <op:operator pos:line="5023" pos:column="63">&amp;&amp;</op:operator> <op:operator pos:line="5023" pos:column="66">!</op:operator><call><name><name pos:line="5023" pos:column="67">cs</name><op:operator pos:line="5023" pos:column="69">.</op:operator><name pos:line="5023" pos:column="70">GetVisible</name></name><argument_list pos:line="5023" pos:column="80">(<argument><expr><name pos:line="5023" pos:column="81">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5023" pos:column="90"> <block pos:line="5023" pos:column="91">{
				<if pos:line="5024" pos:column="33">if <condition pos:line="5024" pos:column="36">(<expr><name pos:line="5024" pos:column="37">selt</name> <op:operator pos:line="5024" pos:column="42">==</op:operator> <name><name pos:line="5024" pos:column="45">Selection</name><op:operator pos:line="5024" pos:column="54">::</op:operator><name pos:line="5024" pos:column="56">noSel</name></name></expr>)</condition><then pos:line="5024" pos:column="62"> <block pos:line="5024" pos:column="63">{
					<expr_stmt><expr><call><name pos:line="5025" pos:column="41">MovePositionTo</name><argument_list pos:line="5025" pos:column="55">(<argument><expr><call><name pos:line="5025" pos:column="56">SelectionPosition</name><argument_list pos:line="5025" pos:column="73">(<argument><expr><call><name><name pos:line="5025" pos:column="74">pdoc</name><op:operator pos:line="5025" pos:column="78">-&gt;</op:operator><name pos:line="5025" pos:column="80">LineEndPosition</name></name><argument_list pos:line="5025" pos:column="95">(<argument><expr><name pos:line="5025" pos:column="96">savedPos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<break pos:line="5027" pos:column="33">break;</break>
			}</block></then></if>
		}</block></then></if>
	}</block> while <condition pos:line="5030" pos:column="17">(<expr><op:operator pos:line="5030" pos:column="18">!</op:operator><call><name><name pos:line="5030" pos:column="19">cs</name><op:operator pos:line="5030" pos:column="21">.</op:operator><name pos:line="5030" pos:column="22">GetVisible</name></name><argument_list pos:line="5030" pos:column="32">(<argument><expr><name pos:line="5030" pos:column="33">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>
}</block></function>

<function><type><name pos:line="5033" pos:column="1">int</name></type> <name><name pos:line="5033" pos:column="5">Editor</name><op:operator pos:line="5033" pos:column="11">::</op:operator><name pos:line="5033" pos:column="13">StartEndDisplayLine</name></name><parameter_list pos:line="5033" pos:column="32">(<param><decl><type><name pos:line="5033" pos:column="33">int</name></type> <name pos:line="5033" pos:column="37">pos</name></decl></param>, <param><decl><type><name pos:line="5033" pos:column="42">bool</name></type> <name pos:line="5033" pos:column="47">start</name></decl></param>)</parameter_list> <block pos:line="5033" pos:column="54">{
	<expr_stmt><expr><call><name pos:line="5034" pos:column="9">RefreshStyleData</name><argument_list pos:line="5034" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="5035" pos:column="9">int</name></type> <name pos:line="5035" pos:column="13">line</name> <init pos:line="5035" pos:column="18">= <expr><call><name><name pos:line="5035" pos:column="20">pdoc</name><op:operator pos:line="5035" pos:column="24">-&gt;</op:operator><name pos:line="5035" pos:column="26">LineFromPosition</name></name><argument_list pos:line="5035" pos:column="42">(<argument><expr><name pos:line="5035" pos:column="43">pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<function_decl><type><name pos:line="5036" pos:column="9">AutoSurface</name></type> <name pos:line="5036" pos:column="21">surface</name><parameter_list pos:line="5036" pos:column="28">(<param><decl><type><name pos:line="5036" pos:column="29">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="5037" pos:column="9">AutoLineLayout</name></type> <name pos:line="5037" pos:column="24">ll</name><argument_list pos:line="5037" pos:column="26">(<argument><expr><name pos:line="5037" pos:column="27">llc</name></expr></argument>, <argument><expr><call><name pos:line="5037" pos:column="32">RetrieveLineLayout</name><argument_list pos:line="5037" pos:column="50">(<argument><expr><name pos:line="5037" pos:column="51">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5038" pos:column="9">int</name></type> <name pos:line="5038" pos:column="13">posRet</name> <init pos:line="5038" pos:column="20">= <expr><name pos:line="5038" pos:column="22">INVALID_POSITION</name></expr></init></decl>;</decl_stmt>
	<if pos:line="5039" pos:column="9">if <condition pos:line="5039" pos:column="12">(<expr><name pos:line="5039" pos:column="13">surface</name> <op:operator pos:line="5039" pos:column="21">&amp;&amp;</op:operator> <name pos:line="5039" pos:column="24">ll</name></expr>)</condition><then pos:line="5039" pos:column="27"> <block pos:line="5039" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="5040" pos:column="17">unsigned</name> <name pos:line="5040" pos:column="26">int</name></type> <name pos:line="5040" pos:column="30">posLineStart</name> <init pos:line="5040" pos:column="43">= <expr><call><name><name pos:line="5040" pos:column="45">pdoc</name><op:operator pos:line="5040" pos:column="49">-&gt;</op:operator><name pos:line="5040" pos:column="51">LineStart</name></name><argument_list pos:line="5040" pos:column="60">(<argument><expr><name pos:line="5040" pos:column="61">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="5041" pos:column="17">LayoutLine</name><argument_list pos:line="5041" pos:column="27">(<argument><expr><name pos:line="5041" pos:column="28">line</name></expr></argument>, <argument><expr><name pos:line="5041" pos:column="34">surface</name></expr></argument>, <argument><expr><name pos:line="5041" pos:column="43">vs</name></expr></argument>, <argument><expr><name pos:line="5041" pos:column="47">ll</name></expr></argument>, <argument><expr><name pos:line="5041" pos:column="51">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="5042" pos:column="17">int</name></type> <name pos:line="5042" pos:column="21">posInLine</name> <init pos:line="5042" pos:column="31">= <expr><name pos:line="5042" pos:column="33">pos</name> <op:operator pos:line="5042" pos:column="37">-</op:operator> <name pos:line="5042" pos:column="39">posLineStart</name></expr></init></decl>;</decl_stmt>
		<if pos:line="5043" pos:column="17">if <condition pos:line="5043" pos:column="20">(<expr><name pos:line="5043" pos:column="21">posInLine</name> <op:operator pos:line="5043" pos:column="31">&lt;=</op:operator> <name><name pos:line="5043" pos:column="34">ll</name><op:operator pos:line="5043" pos:column="36">-&gt;</op:operator><name pos:line="5043" pos:column="38">maxLineLength</name></name></expr>)</condition><then pos:line="5043" pos:column="52"> <block pos:line="5043" pos:column="53">{
			<for pos:line="5044" pos:column="25">for (<init><decl><type><name pos:line="5044" pos:column="30">int</name></type> <name pos:line="5044" pos:column="34">subLine</name> <init pos:line="5044" pos:column="42">= <expr><lit:literal type="number" pos:line="5044" pos:column="44">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5044" pos:column="47">subLine</name> <op:operator pos:line="5044" pos:column="55">&lt;</op:operator> <name><name pos:line="5044" pos:column="57">ll</name><op:operator pos:line="5044" pos:column="59">-&gt;</op:operator><name pos:line="5044" pos:column="61">lines</name></name></expr>;</condition> <incr><expr><name pos:line="5044" pos:column="68">subLine</name><op:operator pos:line="5044" pos:column="75">++</op:operator></expr></incr>) <block pos:line="5044" pos:column="79">{
				<if pos:line="5045" pos:column="33">if <condition pos:line="5045" pos:column="36">(<expr><op:operator pos:line="5045" pos:column="37">(</op:operator><name pos:line="5045" pos:column="38">posInLine</name> <op:operator pos:line="5045" pos:column="48">&gt;=</op:operator> <call><name><name pos:line="5045" pos:column="51">ll</name><op:operator pos:line="5045" pos:column="53">-&gt;</op:operator><name pos:line="5045" pos:column="55">LineStart</name></name><argument_list pos:line="5045" pos:column="64">(<argument><expr><name pos:line="5045" pos:column="65">subLine</name></expr></argument>)</argument_list></call><op:operator pos:line="5045" pos:column="73">)</op:operator> <op:operator pos:line="5045" pos:column="75">&amp;&amp;</op:operator> <op:operator pos:line="5045" pos:column="78">(</op:operator><name pos:line="5045" pos:column="79">posInLine</name> <op:operator pos:line="5045" pos:column="89">&lt;=</op:operator> <call><name><name pos:line="5045" pos:column="92">ll</name><op:operator pos:line="5045" pos:column="94">-&gt;</op:operator><name pos:line="5045" pos:column="96">LineStart</name></name><argument_list pos:line="5045" pos:column="105">(<argument><expr><name pos:line="5045" pos:column="106">subLine</name> <op:operator pos:line="5045" pos:column="114">+</op:operator> <lit:literal type="number" pos:line="5045" pos:column="116">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="5045" pos:column="118">)</op:operator></expr>)</condition><then pos:line="5045" pos:column="120"> <block pos:line="5045" pos:column="121">{
					<if pos:line="5046" pos:column="41">if <condition pos:line="5046" pos:column="44">(<expr><name pos:line="5046" pos:column="45">start</name></expr>)</condition><then pos:line="5046" pos:column="51"> <block pos:line="5046" pos:column="52">{
						<expr_stmt><expr><name pos:line="5047" pos:column="49">posRet</name> <op:operator pos:line="5047" pos:column="56">=</op:operator> <call><name><name pos:line="5047" pos:column="58">ll</name><op:operator pos:line="5047" pos:column="60">-&gt;</op:operator><name pos:line="5047" pos:column="62">LineStart</name></name><argument_list pos:line="5047" pos:column="71">(<argument><expr><name pos:line="5047" pos:column="72">subLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="5047" pos:column="81">+</op:operator> <name pos:line="5047" pos:column="83">posLineStart</name></expr>;</expr_stmt>
					}</block></then> <else pos:line="5048" pos:column="43">else <block pos:line="5048" pos:column="48">{
						<if pos:line="5049" pos:column="49">if <condition pos:line="5049" pos:column="52">(<expr><name pos:line="5049" pos:column="53">subLine</name> <op:operator pos:line="5049" pos:column="61">==</op:operator> <name><name pos:line="5049" pos:column="64">ll</name><op:operator pos:line="5049" pos:column="66">-&gt;</op:operator><name pos:line="5049" pos:column="68">lines</name></name> <op:operator pos:line="5049" pos:column="74">-</op:operator> <lit:literal type="number" pos:line="5049" pos:column="76">1</lit:literal></expr>)</condition><then pos:line="5049" pos:column="78">
							<expr_stmt><expr><name pos:line="5050" pos:column="57">posRet</name> <op:operator pos:line="5050" pos:column="64">=</op:operator> <call><name><name pos:line="5050" pos:column="66">ll</name><op:operator pos:line="5050" pos:column="68">-&gt;</op:operator><name pos:line="5050" pos:column="70">LineStart</name></name><argument_list pos:line="5050" pos:column="79">(<argument><expr><name pos:line="5050" pos:column="80">subLine</name> <op:operator pos:line="5050" pos:column="88">+</op:operator> <lit:literal type="number" pos:line="5050" pos:column="90">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="5050" pos:column="93">+</op:operator> <name pos:line="5050" pos:column="95">posLineStart</name></expr>;</expr_stmt></then>
						<else pos:line="5051" pos:column="49">else
							<expr_stmt><expr><name pos:line="5052" pos:column="57">posRet</name> <op:operator pos:line="5052" pos:column="64">=</op:operator> <call><name><name pos:line="5052" pos:column="66">ll</name><op:operator pos:line="5052" pos:column="68">-&gt;</op:operator><name pos:line="5052" pos:column="70">LineStart</name></name><argument_list pos:line="5052" pos:column="79">(<argument><expr><name pos:line="5052" pos:column="80">subLine</name> <op:operator pos:line="5052" pos:column="88">+</op:operator> <lit:literal type="number" pos:line="5052" pos:column="90">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="5052" pos:column="93">+</op:operator> <name pos:line="5052" pos:column="95">posLineStart</name> <op:operator pos:line="5052" pos:column="108">-</op:operator> <lit:literal type="number" pos:line="5052" pos:column="110">1</lit:literal></expr>;</expr_stmt></else></if>
					}</block></else></if>
				}</block></then></if>
			}</block></for>
		}</block></then></if>
	}</block></then></if>
	<if pos:line="5058" pos:column="9">if <condition pos:line="5058" pos:column="12">(<expr><name pos:line="5058" pos:column="13">posRet</name> <op:operator pos:line="5058" pos:column="20">==</op:operator> <name pos:line="5058" pos:column="23">INVALID_POSITION</name></expr>)</condition><then pos:line="5058" pos:column="40"> <block pos:line="5058" pos:column="41">{
		<return pos:line="5059" pos:column="17">return <expr><name pos:line="5059" pos:column="24">pos</name></expr>;</return>
	}</block></then> <else pos:line="5060" pos:column="11">else <block pos:line="5060" pos:column="16">{
		<return pos:line="5061" pos:column="17">return <expr><name pos:line="5061" pos:column="24">posRet</name></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="5065" pos:column="1">int</name></type> <name><name pos:line="5065" pos:column="5">Editor</name><op:operator pos:line="5065" pos:column="11">::</op:operator><name pos:line="5065" pos:column="13">KeyCommand</name></name><parameter_list pos:line="5065" pos:column="23">(<param><decl><type><name pos:line="5065" pos:column="24">unsigned</name> <name pos:line="5065" pos:column="33">int</name></type> <name pos:line="5065" pos:column="37">iMessage</name></decl></param>)</parameter_list> <block pos:line="5065" pos:column="47">{
	<switch pos:line="5066" pos:column="9">switch <condition pos:line="5066" pos:column="16">(<expr><name pos:line="5066" pos:column="17">iMessage</name></expr>)</condition> <block pos:line="5066" pos:column="27">{
	<case pos:line="5067" pos:column="9">case <expr><name pos:line="5067" pos:column="14">SCI_LINEDOWN</name></expr>:
		<expr_stmt><expr><call><name pos:line="5068" pos:column="17">CursorUpOrDown</name><argument_list pos:line="5068" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="5068" pos:column="32">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5069" pos:column="17">break;</break>
	</case><case pos:line="5070" pos:column="9">case <expr><name pos:line="5070" pos:column="14">SCI_LINEDOWNEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5071" pos:column="17">CursorUpOrDown</name><argument_list pos:line="5071" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="5071" pos:column="32">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5071" pos:column="35">Selection</name><op:operator pos:line="5071" pos:column="44">::</op:operator><name pos:line="5071" pos:column="46">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5072" pos:column="17">break;</break>
	</case><case pos:line="5073" pos:column="9">case <expr><name pos:line="5073" pos:column="14">SCI_LINEDOWNRECTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5074" pos:column="17">CursorUpOrDown</name><argument_list pos:line="5074" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="5074" pos:column="32">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5074" pos:column="35">Selection</name><op:operator pos:line="5074" pos:column="44">::</op:operator><name pos:line="5074" pos:column="46">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5075" pos:column="17">break;</break>
	</case><case pos:line="5076" pos:column="9">case <expr><name pos:line="5076" pos:column="14">SCI_PARADOWN</name></expr>:
		<expr_stmt><expr><call><name pos:line="5077" pos:column="17">ParaUpOrDown</name><argument_list pos:line="5077" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="5077" pos:column="30">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5078" pos:column="17">break;</break>
	</case><case pos:line="5079" pos:column="9">case <expr><name pos:line="5079" pos:column="14">SCI_PARADOWNEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5080" pos:column="17">ParaUpOrDown</name><argument_list pos:line="5080" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="5080" pos:column="30">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5080" pos:column="33">Selection</name><op:operator pos:line="5080" pos:column="42">::</op:operator><name pos:line="5080" pos:column="44">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5081" pos:column="17">break;</break>
	</case><case pos:line="5082" pos:column="9">case <expr><name pos:line="5082" pos:column="14">SCI_LINESCROLLDOWN</name></expr>:
		<expr_stmt><expr><call><name pos:line="5083" pos:column="17">ScrollTo</name><argument_list pos:line="5083" pos:column="25">(<argument><expr><name pos:line="5083" pos:column="26">topLine</name> <op:operator pos:line="5083" pos:column="34">+</op:operator> <lit:literal type="number" pos:line="5083" pos:column="36">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5084" pos:column="17">MoveCaretInsideView</name><argument_list pos:line="5084" pos:column="36">(<argument><expr><lit:literal type="boolean" pos:line="5084" pos:column="37">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5085" pos:column="17">break;</break>
	</case><case pos:line="5086" pos:column="9">case <expr><name pos:line="5086" pos:column="14">SCI_LINEUP</name></expr>:
		<expr_stmt><expr><call><name pos:line="5087" pos:column="17">CursorUpOrDown</name><argument_list pos:line="5087" pos:column="31">(<argument><expr><op:operator pos:line="5087" pos:column="32">-</op:operator><lit:literal type="number" pos:line="5087" pos:column="33">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5088" pos:column="17">break;</break>
	</case><case pos:line="5089" pos:column="9">case <expr><name pos:line="5089" pos:column="14">SCI_LINEUPEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5090" pos:column="17">CursorUpOrDown</name><argument_list pos:line="5090" pos:column="31">(<argument><expr><op:operator pos:line="5090" pos:column="32">-</op:operator><lit:literal type="number" pos:line="5090" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5090" pos:column="36">Selection</name><op:operator pos:line="5090" pos:column="45">::</op:operator><name pos:line="5090" pos:column="47">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5091" pos:column="17">break;</break>
	</case><case pos:line="5092" pos:column="9">case <expr><name pos:line="5092" pos:column="14">SCI_LINEUPRECTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5093" pos:column="17">CursorUpOrDown</name><argument_list pos:line="5093" pos:column="31">(<argument><expr><op:operator pos:line="5093" pos:column="32">-</op:operator><lit:literal type="number" pos:line="5093" pos:column="33">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5093" pos:column="36">Selection</name><op:operator pos:line="5093" pos:column="45">::</op:operator><name pos:line="5093" pos:column="47">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5094" pos:column="17">break;</break>
	</case><case pos:line="5095" pos:column="9">case <expr><name pos:line="5095" pos:column="14">SCI_PARAUP</name></expr>:
		<expr_stmt><expr><call><name pos:line="5096" pos:column="17">ParaUpOrDown</name><argument_list pos:line="5096" pos:column="29">(<argument><expr><op:operator pos:line="5096" pos:column="30">-</op:operator><lit:literal type="number" pos:line="5096" pos:column="31">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5097" pos:column="17">break;</break>
	</case><case pos:line="5098" pos:column="9">case <expr><name pos:line="5098" pos:column="14">SCI_PARAUPEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5099" pos:column="17">ParaUpOrDown</name><argument_list pos:line="5099" pos:column="29">(<argument><expr><op:operator pos:line="5099" pos:column="30">-</op:operator><lit:literal type="number" pos:line="5099" pos:column="31">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5099" pos:column="34">Selection</name><op:operator pos:line="5099" pos:column="43">::</op:operator><name pos:line="5099" pos:column="45">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5100" pos:column="17">break;</break>
	</case><case pos:line="5101" pos:column="9">case <expr><name pos:line="5101" pos:column="14">SCI_LINESCROLLUP</name></expr>:
		<expr_stmt><expr><call><name pos:line="5102" pos:column="17">ScrollTo</name><argument_list pos:line="5102" pos:column="25">(<argument><expr><name pos:line="5102" pos:column="26">topLine</name> <op:operator pos:line="5102" pos:column="34">-</op:operator> <lit:literal type="number" pos:line="5102" pos:column="36">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5103" pos:column="17">MoveCaretInsideView</name><argument_list pos:line="5103" pos:column="36">(<argument><expr><lit:literal type="boolean" pos:line="5103" pos:column="37">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5104" pos:column="17">break;</break>
	</case><case pos:line="5105" pos:column="9">case <expr><name pos:line="5105" pos:column="14">SCI_CHARLEFT</name></expr>:
		<if pos:line="5106" pos:column="17">if <condition pos:line="5106" pos:column="20">(<expr><call><name pos:line="5106" pos:column="21">SelectionEmpty</name><argument_list pos:line="5106" pos:column="35">()</argument_list></call> <op:operator pos:line="5106" pos:column="38">||</op:operator> <call><name><name pos:line="5106" pos:column="41">sel</name><op:operator pos:line="5106" pos:column="44">.</op:operator><name pos:line="5106" pos:column="45">MoveExtends</name></name><argument_list pos:line="5106" pos:column="56">()</argument_list></call></expr>)</condition><then pos:line="5106" pos:column="59"> <block pos:line="5106" pos:column="60">{
			<if pos:line="5107" pos:column="25">if <condition pos:line="5107" pos:column="28">(<expr><op:operator pos:line="5107" pos:column="29">(</op:operator><call><name><name pos:line="5107" pos:column="30">sel</name><op:operator pos:line="5107" pos:column="33">.</op:operator><name pos:line="5107" pos:column="34">Count</name></name><argument_list pos:line="5107" pos:column="39">()</argument_list></call> <op:operator pos:line="5107" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="5107" pos:column="45">1</lit:literal><op:operator pos:line="5107" pos:column="46">)</op:operator> <op:operator pos:line="5107" pos:column="48">&amp;&amp;</op:operator> <call><name><name pos:line="5107" pos:column="51">pdoc</name><op:operator pos:line="5107" pos:column="55">-&gt;</op:operator><name pos:line="5107" pos:column="57">IsLineEndPosition</name></name><argument_list pos:line="5107" pos:column="74">(<argument><expr><call><name><name pos:line="5107" pos:column="75">sel</name><op:operator pos:line="5107" pos:column="78">.</op:operator><name pos:line="5107" pos:column="79">MainCaret</name></name><argument_list pos:line="5107" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5107" pos:column="92">&amp;&amp;</op:operator> <call><name><name pos:line="5107" pos:column="95">sel</name><op:operator pos:line="5107" pos:column="98">.</op:operator><name pos:line="5107" pos:column="99">RangeMain</name></name><argument_list pos:line="5107" pos:column="108">()</argument_list></call><op:operator pos:line="5107" pos:column="110">.</op:operator><call><name><name pos:line="5107" pos:column="111">caret</name><op:operator pos:line="5107" pos:column="116">.</op:operator><name pos:line="5107" pos:column="117">VirtualSpace</name></name><argument_list pos:line="5107" pos:column="129">()</argument_list></call></expr>)</condition><then pos:line="5107" pos:column="132"> <block pos:line="5107" pos:column="133">{
				<decl_stmt><decl><type><name pos:line="5108" pos:column="33">SelectionPosition</name></type> <name pos:line="5108" pos:column="51">spCaret</name> <init pos:line="5108" pos:column="59">= <expr><call><name><name pos:line="5108" pos:column="61">sel</name><op:operator pos:line="5108" pos:column="64">.</op:operator><name pos:line="5108" pos:column="65">RangeMain</name></name><argument_list pos:line="5108" pos:column="74">()</argument_list></call><op:operator pos:line="5108" pos:column="76">.</op:operator><name pos:line="5108" pos:column="77">caret</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="5109" pos:column="33">spCaret</name><op:operator pos:line="5109" pos:column="40">.</op:operator><name pos:line="5109" pos:column="41">SetVirtualSpace</name></name><argument_list pos:line="5109" pos:column="56">(<argument><expr><call><name><name pos:line="5109" pos:column="57">spCaret</name><op:operator pos:line="5109" pos:column="64">.</op:operator><name pos:line="5109" pos:column="65">VirtualSpace</name></name><argument_list pos:line="5109" pos:column="77">()</argument_list></call> <op:operator pos:line="5109" pos:column="80">-</op:operator> <lit:literal type="number" pos:line="5109" pos:column="82">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="5110" pos:column="33">MovePositionTo</name><argument_list pos:line="5110" pos:column="47">(<argument><expr><name pos:line="5110" pos:column="48">spCaret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="5111" pos:column="27">else <block pos:line="5111" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="5112" pos:column="33">MovePositionTo</name><argument_list pos:line="5112" pos:column="47">(<argument><expr><call><name pos:line="5112" pos:column="48">MovePositionSoVisible</name><argument_list pos:line="5112" pos:column="69">(
					<argument><expr><call><name pos:line="5113" pos:column="41">SelectionPosition</name><argument_list pos:line="5113" pos:column="58">(<argument><expr><op:operator pos:line="5113" pos:column="59">(</op:operator><call><name><name pos:line="5113" pos:column="60">sel</name><op:operator pos:line="5113" pos:column="63">.</op:operator><name pos:line="5113" pos:column="64">LimitsForRectangularElseMain</name></name><argument_list pos:line="5113" pos:column="92">()</argument_list></call><op:operator pos:line="5113" pos:column="94">.</op:operator><name pos:line="5113" pos:column="95">start</name><op:operator pos:line="5113" pos:column="100">)</op:operator><op:operator pos:line="5113" pos:column="101">.</op:operator><call><name pos:line="5113" pos:column="102">Position</name><argument_list pos:line="5113" pos:column="110">()</argument_list></call> <op:operator pos:line="5113" pos:column="113">-</op:operator> <lit:literal type="number" pos:line="5113" pos:column="115">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5113" pos:column="119">-</op:operator><lit:literal type="number" pos:line="5113" pos:column="120">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then> <else pos:line="5115" pos:column="19">else <block pos:line="5115" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="5116" pos:column="25">MovePositionTo</name><argument_list pos:line="5116" pos:column="39">(<argument><expr><call><name><name pos:line="5116" pos:column="40">sel</name><op:operator pos:line="5116" pos:column="43">.</op:operator><name pos:line="5116" pos:column="44">LimitsForRectangularElseMain</name></name><argument_list pos:line="5116" pos:column="72">()</argument_list></call><op:operator pos:line="5116" pos:column="74">.</op:operator><name pos:line="5116" pos:column="75">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="5118" pos:column="17">SetLastXChosen</name><argument_list pos:line="5118" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5119" pos:column="17">break;</break>
	</case><case pos:line="5120" pos:column="9">case <expr><name pos:line="5120" pos:column="14">SCI_CHARLEFTEXTEND</name></expr>:
		<if pos:line="5121" pos:column="17">if <condition pos:line="5121" pos:column="20">(<expr><call><name><name pos:line="5121" pos:column="21">pdoc</name><op:operator pos:line="5121" pos:column="25">-&gt;</op:operator><name pos:line="5121" pos:column="27">IsLineEndPosition</name></name><argument_list pos:line="5121" pos:column="44">(<argument><expr><call><name><name pos:line="5121" pos:column="45">sel</name><op:operator pos:line="5121" pos:column="48">.</op:operator><name pos:line="5121" pos:column="49">MainCaret</name></name><argument_list pos:line="5121" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5121" pos:column="62">&amp;&amp;</op:operator> <call><name><name pos:line="5121" pos:column="65">sel</name><op:operator pos:line="5121" pos:column="68">.</op:operator><name pos:line="5121" pos:column="69">RangeMain</name></name><argument_list pos:line="5121" pos:column="78">()</argument_list></call><op:operator pos:line="5121" pos:column="80">.</op:operator><call><name><name pos:line="5121" pos:column="81">caret</name><op:operator pos:line="5121" pos:column="86">.</op:operator><name pos:line="5121" pos:column="87">VirtualSpace</name></name><argument_list pos:line="5121" pos:column="99">()</argument_list></call></expr>)</condition><then pos:line="5121" pos:column="102"> <block pos:line="5121" pos:column="103">{
			<decl_stmt><decl><type><name pos:line="5122" pos:column="25">SelectionPosition</name></type> <name pos:line="5122" pos:column="43">spCaret</name> <init pos:line="5122" pos:column="51">= <expr><call><name><name pos:line="5122" pos:column="53">sel</name><op:operator pos:line="5122" pos:column="56">.</op:operator><name pos:line="5122" pos:column="57">RangeMain</name></name><argument_list pos:line="5122" pos:column="66">()</argument_list></call><op:operator pos:line="5122" pos:column="68">.</op:operator><name pos:line="5122" pos:column="69">caret</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5123" pos:column="25">spCaret</name><op:operator pos:line="5123" pos:column="32">.</op:operator><name pos:line="5123" pos:column="33">SetVirtualSpace</name></name><argument_list pos:line="5123" pos:column="48">(<argument><expr><call><name><name pos:line="5123" pos:column="49">spCaret</name><op:operator pos:line="5123" pos:column="56">.</op:operator><name pos:line="5123" pos:column="57">VirtualSpace</name></name><argument_list pos:line="5123" pos:column="69">()</argument_list></call> <op:operator pos:line="5123" pos:column="72">-</op:operator> <lit:literal type="number" pos:line="5123" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5124" pos:column="25">MovePositionTo</name><argument_list pos:line="5124" pos:column="39">(<argument><expr><name pos:line="5124" pos:column="40">spCaret</name></expr></argument>, <argument><expr><name><name pos:line="5124" pos:column="49">Selection</name><op:operator pos:line="5124" pos:column="58">::</op:operator><name pos:line="5124" pos:column="60">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="5125" pos:column="19">else <block pos:line="5125" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="5126" pos:column="25">MovePositionTo</name><argument_list pos:line="5126" pos:column="39">(<argument><expr><call><name pos:line="5126" pos:column="40">MovePositionSoVisible</name><argument_list pos:line="5126" pos:column="61">(<argument><expr><call><name pos:line="5126" pos:column="62">SelectionPosition</name><argument_list pos:line="5126" pos:column="79">(<argument><expr><call><name><name pos:line="5126" pos:column="80">sel</name><op:operator pos:line="5126" pos:column="83">.</op:operator><name pos:line="5126" pos:column="84">MainCaret</name></name><argument_list pos:line="5126" pos:column="93">()</argument_list></call> <op:operator pos:line="5126" pos:column="96">-</op:operator> <lit:literal type="number" pos:line="5126" pos:column="98">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5126" pos:column="102">-</op:operator><lit:literal type="number" pos:line="5126" pos:column="103">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5126" pos:column="107">Selection</name><op:operator pos:line="5126" pos:column="116">::</op:operator><name pos:line="5126" pos:column="118">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="5128" pos:column="17">SetLastXChosen</name><argument_list pos:line="5128" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5129" pos:column="17">break;</break>
	</case><case pos:line="5130" pos:column="9">case <expr><name pos:line="5130" pos:column="14">SCI_CHARLEFTRECTEXTEND</name></expr>:
		<if pos:line="5131" pos:column="17">if <condition pos:line="5131" pos:column="20">(<expr><call><name><name pos:line="5131" pos:column="21">pdoc</name><op:operator pos:line="5131" pos:column="25">-&gt;</op:operator><name pos:line="5131" pos:column="27">IsLineEndPosition</name></name><argument_list pos:line="5131" pos:column="44">(<argument><expr><call><name><name pos:line="5131" pos:column="45">sel</name><op:operator pos:line="5131" pos:column="48">.</op:operator><name pos:line="5131" pos:column="49">MainCaret</name></name><argument_list pos:line="5131" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5131" pos:column="62">&amp;&amp;</op:operator> <call><name><name pos:line="5131" pos:column="65">sel</name><op:operator pos:line="5131" pos:column="68">.</op:operator><name pos:line="5131" pos:column="69">RangeMain</name></name><argument_list pos:line="5131" pos:column="78">()</argument_list></call><op:operator pos:line="5131" pos:column="80">.</op:operator><call><name><name pos:line="5131" pos:column="81">caret</name><op:operator pos:line="5131" pos:column="86">.</op:operator><name pos:line="5131" pos:column="87">VirtualSpace</name></name><argument_list pos:line="5131" pos:column="99">()</argument_list></call></expr>)</condition><then pos:line="5131" pos:column="102"> <block pos:line="5131" pos:column="103">{
			<decl_stmt><decl><type><name pos:line="5132" pos:column="25">SelectionPosition</name></type> <name pos:line="5132" pos:column="43">spCaret</name> <init pos:line="5132" pos:column="51">= <expr><call><name><name pos:line="5132" pos:column="53">sel</name><op:operator pos:line="5132" pos:column="56">.</op:operator><name pos:line="5132" pos:column="57">RangeMain</name></name><argument_list pos:line="5132" pos:column="66">()</argument_list></call><op:operator pos:line="5132" pos:column="68">.</op:operator><name pos:line="5132" pos:column="69">caret</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5133" pos:column="25">spCaret</name><op:operator pos:line="5133" pos:column="32">.</op:operator><name pos:line="5133" pos:column="33">SetVirtualSpace</name></name><argument_list pos:line="5133" pos:column="48">(<argument><expr><call><name><name pos:line="5133" pos:column="49">spCaret</name><op:operator pos:line="5133" pos:column="56">.</op:operator><name pos:line="5133" pos:column="57">VirtualSpace</name></name><argument_list pos:line="5133" pos:column="69">()</argument_list></call> <op:operator pos:line="5133" pos:column="72">-</op:operator> <lit:literal type="number" pos:line="5133" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5134" pos:column="25">MovePositionTo</name><argument_list pos:line="5134" pos:column="39">(<argument><expr><name pos:line="5134" pos:column="40">spCaret</name></expr></argument>, <argument><expr><name><name pos:line="5134" pos:column="49">Selection</name><op:operator pos:line="5134" pos:column="58">::</op:operator><name pos:line="5134" pos:column="60">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="5135" pos:column="19">else <block pos:line="5135" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="5136" pos:column="25">MovePositionTo</name><argument_list pos:line="5136" pos:column="39">(<argument><expr><call><name pos:line="5136" pos:column="40">MovePositionSoVisible</name><argument_list pos:line="5136" pos:column="61">(<argument><expr><call><name pos:line="5136" pos:column="62">SelectionPosition</name><argument_list pos:line="5136" pos:column="79">(<argument><expr><call><name><name pos:line="5136" pos:column="80">sel</name><op:operator pos:line="5136" pos:column="83">.</op:operator><name pos:line="5136" pos:column="84">MainCaret</name></name><argument_list pos:line="5136" pos:column="93">()</argument_list></call> <op:operator pos:line="5136" pos:column="96">-</op:operator> <lit:literal type="number" pos:line="5136" pos:column="98">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5136" pos:column="102">-</op:operator><lit:literal type="number" pos:line="5136" pos:column="103">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5136" pos:column="107">Selection</name><op:operator pos:line="5136" pos:column="116">::</op:operator><name pos:line="5136" pos:column="118">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="5138" pos:column="17">SetLastXChosen</name><argument_list pos:line="5138" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5139" pos:column="17">break;</break>
	</case><case pos:line="5140" pos:column="9">case <expr><name pos:line="5140" pos:column="14">SCI_CHARRIGHT</name></expr>:
		<if pos:line="5141" pos:column="17">if <condition pos:line="5141" pos:column="20">(<expr><call><name pos:line="5141" pos:column="21">SelectionEmpty</name><argument_list pos:line="5141" pos:column="35">()</argument_list></call> <op:operator pos:line="5141" pos:column="38">||</op:operator> <call><name><name pos:line="5141" pos:column="41">sel</name><op:operator pos:line="5141" pos:column="44">.</op:operator><name pos:line="5141" pos:column="45">MoveExtends</name></name><argument_list pos:line="5141" pos:column="56">()</argument_list></call></expr>)</condition><then pos:line="5141" pos:column="59"> <block pos:line="5141" pos:column="60">{
			<if pos:line="5142" pos:column="25">if <condition pos:line="5142" pos:column="28">(<expr><op:operator pos:line="5142" pos:column="29">(</op:operator><name pos:line="5142" pos:column="30">virtualSpaceOptions</name> <op:operator pos:line="5142" pos:column="50">&amp;</op:operator> <name pos:line="5142" pos:column="52">SCVS_USERACCESSIBLE</name><op:operator pos:line="5142" pos:column="71">)</op:operator> <op:operator pos:line="5142" pos:column="73">&amp;&amp;</op:operator> <call><name><name pos:line="5142" pos:column="76">pdoc</name><op:operator pos:line="5142" pos:column="80">-&gt;</op:operator><name pos:line="5142" pos:column="82">IsLineEndPosition</name></name><argument_list pos:line="5142" pos:column="99">(<argument><expr><call><name><name pos:line="5142" pos:column="100">sel</name><op:operator pos:line="5142" pos:column="103">.</op:operator><name pos:line="5142" pos:column="104">MainCaret</name></name><argument_list pos:line="5142" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5142" pos:column="117"> <block pos:line="5142" pos:column="118">{
				<decl_stmt><decl><type><name pos:line="5143" pos:column="33">SelectionPosition</name></type> <name pos:line="5143" pos:column="51">spCaret</name> <init pos:line="5143" pos:column="59">= <expr><call><name><name pos:line="5143" pos:column="61">sel</name><op:operator pos:line="5143" pos:column="64">.</op:operator><name pos:line="5143" pos:column="65">RangeMain</name></name><argument_list pos:line="5143" pos:column="74">()</argument_list></call><op:operator pos:line="5143" pos:column="76">.</op:operator><name pos:line="5143" pos:column="77">caret</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="5144" pos:column="33">spCaret</name><op:operator pos:line="5144" pos:column="40">.</op:operator><name pos:line="5144" pos:column="41">SetVirtualSpace</name></name><argument_list pos:line="5144" pos:column="56">(<argument><expr><call><name><name pos:line="5144" pos:column="57">spCaret</name><op:operator pos:line="5144" pos:column="64">.</op:operator><name pos:line="5144" pos:column="65">VirtualSpace</name></name><argument_list pos:line="5144" pos:column="77">()</argument_list></call> <op:operator pos:line="5144" pos:column="80">+</op:operator> <lit:literal type="number" pos:line="5144" pos:column="82">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="5145" pos:column="33">MovePositionTo</name><argument_list pos:line="5145" pos:column="47">(<argument><expr><name pos:line="5145" pos:column="48">spCaret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="5146" pos:column="27">else <block pos:line="5146" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="5147" pos:column="33">MovePositionTo</name><argument_list pos:line="5147" pos:column="47">(<argument><expr><call><name pos:line="5147" pos:column="48">MovePositionSoVisible</name><argument_list pos:line="5147" pos:column="69">(
					<argument><expr><call><name pos:line="5148" pos:column="41">SelectionPosition</name><argument_list pos:line="5148" pos:column="58">(<argument><expr><op:operator pos:line="5148" pos:column="59">(</op:operator><call><name><name pos:line="5148" pos:column="60">sel</name><op:operator pos:line="5148" pos:column="63">.</op:operator><name pos:line="5148" pos:column="64">LimitsForRectangularElseMain</name></name><argument_list pos:line="5148" pos:column="92">()</argument_list></call><op:operator pos:line="5148" pos:column="94">.</op:operator><name pos:line="5148" pos:column="95">end</name><op:operator pos:line="5148" pos:column="98">)</op:operator><op:operator pos:line="5148" pos:column="99">.</op:operator><call><name pos:line="5148" pos:column="100">Position</name><argument_list pos:line="5148" pos:column="108">()</argument_list></call> <op:operator pos:line="5148" pos:column="111">+</op:operator> <lit:literal type="number" pos:line="5148" pos:column="113">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5148" pos:column="117">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then> <else pos:line="5150" pos:column="19">else <block pos:line="5150" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="5151" pos:column="25">MovePositionTo</name><argument_list pos:line="5151" pos:column="39">(<argument><expr><call><name><name pos:line="5151" pos:column="40">sel</name><op:operator pos:line="5151" pos:column="43">.</op:operator><name pos:line="5151" pos:column="44">LimitsForRectangularElseMain</name></name><argument_list pos:line="5151" pos:column="72">()</argument_list></call><op:operator pos:line="5151" pos:column="74">.</op:operator><name pos:line="5151" pos:column="75">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="5153" pos:column="17">SetLastXChosen</name><argument_list pos:line="5153" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5154" pos:column="17">break;</break>
	</case><case pos:line="5155" pos:column="9">case <expr><name pos:line="5155" pos:column="14">SCI_CHARRIGHTEXTEND</name></expr>:
		<if pos:line="5156" pos:column="17">if <condition pos:line="5156" pos:column="20">(<expr><op:operator pos:line="5156" pos:column="21">(</op:operator><name pos:line="5156" pos:column="22">virtualSpaceOptions</name> <op:operator pos:line="5156" pos:column="42">&amp;</op:operator> <name pos:line="5156" pos:column="44">SCVS_USERACCESSIBLE</name><op:operator pos:line="5156" pos:column="63">)</op:operator> <op:operator pos:line="5156" pos:column="65">&amp;&amp;</op:operator> <call><name><name pos:line="5156" pos:column="68">pdoc</name><op:operator pos:line="5156" pos:column="72">-&gt;</op:operator><name pos:line="5156" pos:column="74">IsLineEndPosition</name></name><argument_list pos:line="5156" pos:column="91">(<argument><expr><call><name><name pos:line="5156" pos:column="92">sel</name><op:operator pos:line="5156" pos:column="95">.</op:operator><name pos:line="5156" pos:column="96">MainCaret</name></name><argument_list pos:line="5156" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5156" pos:column="109"> <block pos:line="5156" pos:column="110">{
			<decl_stmt><decl><type><name pos:line="5157" pos:column="25">SelectionPosition</name></type> <name pos:line="5157" pos:column="43">spCaret</name> <init pos:line="5157" pos:column="51">= <expr><call><name><name pos:line="5157" pos:column="53">sel</name><op:operator pos:line="5157" pos:column="56">.</op:operator><name pos:line="5157" pos:column="57">RangeMain</name></name><argument_list pos:line="5157" pos:column="66">()</argument_list></call><op:operator pos:line="5157" pos:column="68">.</op:operator><name pos:line="5157" pos:column="69">caret</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5158" pos:column="25">spCaret</name><op:operator pos:line="5158" pos:column="32">.</op:operator><name pos:line="5158" pos:column="33">SetVirtualSpace</name></name><argument_list pos:line="5158" pos:column="48">(<argument><expr><call><name><name pos:line="5158" pos:column="49">spCaret</name><op:operator pos:line="5158" pos:column="56">.</op:operator><name pos:line="5158" pos:column="57">VirtualSpace</name></name><argument_list pos:line="5158" pos:column="69">()</argument_list></call> <op:operator pos:line="5158" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="5158" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5159" pos:column="25">MovePositionTo</name><argument_list pos:line="5159" pos:column="39">(<argument><expr><name pos:line="5159" pos:column="40">spCaret</name></expr></argument>, <argument><expr><name><name pos:line="5159" pos:column="49">Selection</name><op:operator pos:line="5159" pos:column="58">::</op:operator><name pos:line="5159" pos:column="60">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="5160" pos:column="19">else <block pos:line="5160" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="5161" pos:column="25">MovePositionTo</name><argument_list pos:line="5161" pos:column="39">(<argument><expr><call><name pos:line="5161" pos:column="40">MovePositionSoVisible</name><argument_list pos:line="5161" pos:column="61">(<argument><expr><call><name pos:line="5161" pos:column="62">SelectionPosition</name><argument_list pos:line="5161" pos:column="79">(<argument><expr><call><name><name pos:line="5161" pos:column="80">sel</name><op:operator pos:line="5161" pos:column="83">.</op:operator><name pos:line="5161" pos:column="84">MainCaret</name></name><argument_list pos:line="5161" pos:column="93">()</argument_list></call> <op:operator pos:line="5161" pos:column="96">+</op:operator> <lit:literal type="number" pos:line="5161" pos:column="98">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5161" pos:column="102">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5161" pos:column="106">Selection</name><op:operator pos:line="5161" pos:column="115">::</op:operator><name pos:line="5161" pos:column="117">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="5163" pos:column="17">SetLastXChosen</name><argument_list pos:line="5163" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5164" pos:column="17">break;</break>
	</case><case pos:line="5165" pos:column="9">case <expr><name pos:line="5165" pos:column="14">SCI_CHARRIGHTRECTEXTEND</name></expr>:
		<if pos:line="5166" pos:column="17">if <condition pos:line="5166" pos:column="20">(<expr><op:operator pos:line="5166" pos:column="21">(</op:operator><name pos:line="5166" pos:column="22">virtualSpaceOptions</name> <op:operator pos:line="5166" pos:column="42">&amp;</op:operator> <name pos:line="5166" pos:column="44">SCVS_RECTANGULARSELECTION</name><op:operator pos:line="5166" pos:column="69">)</op:operator> <op:operator pos:line="5166" pos:column="71">&amp;&amp;</op:operator> <call><name><name pos:line="5166" pos:column="74">pdoc</name><op:operator pos:line="5166" pos:column="78">-&gt;</op:operator><name pos:line="5166" pos:column="80">IsLineEndPosition</name></name><argument_list pos:line="5166" pos:column="97">(<argument><expr><call><name><name pos:line="5166" pos:column="98">sel</name><op:operator pos:line="5166" pos:column="101">.</op:operator><name pos:line="5166" pos:column="102">MainCaret</name></name><argument_list pos:line="5166" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5166" pos:column="115"> <block pos:line="5166" pos:column="116">{
			<decl_stmt><decl><type><name pos:line="5167" pos:column="25">SelectionPosition</name></type> <name pos:line="5167" pos:column="43">spCaret</name> <init pos:line="5167" pos:column="51">= <expr><call><name><name pos:line="5167" pos:column="53">sel</name><op:operator pos:line="5167" pos:column="56">.</op:operator><name pos:line="5167" pos:column="57">RangeMain</name></name><argument_list pos:line="5167" pos:column="66">()</argument_list></call><op:operator pos:line="5167" pos:column="68">.</op:operator><name pos:line="5167" pos:column="69">caret</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5168" pos:column="25">spCaret</name><op:operator pos:line="5168" pos:column="32">.</op:operator><name pos:line="5168" pos:column="33">SetVirtualSpace</name></name><argument_list pos:line="5168" pos:column="48">(<argument><expr><call><name><name pos:line="5168" pos:column="49">spCaret</name><op:operator pos:line="5168" pos:column="56">.</op:operator><name pos:line="5168" pos:column="57">VirtualSpace</name></name><argument_list pos:line="5168" pos:column="69">()</argument_list></call> <op:operator pos:line="5168" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="5168" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5169" pos:column="25">MovePositionTo</name><argument_list pos:line="5169" pos:column="39">(<argument><expr><name pos:line="5169" pos:column="40">spCaret</name></expr></argument>, <argument><expr><name><name pos:line="5169" pos:column="49">Selection</name><op:operator pos:line="5169" pos:column="58">::</op:operator><name pos:line="5169" pos:column="60">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="5170" pos:column="19">else <block pos:line="5170" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="5171" pos:column="25">MovePositionTo</name><argument_list pos:line="5171" pos:column="39">(<argument><expr><call><name pos:line="5171" pos:column="40">MovePositionSoVisible</name><argument_list pos:line="5171" pos:column="61">(<argument><expr><call><name pos:line="5171" pos:column="62">SelectionPosition</name><argument_list pos:line="5171" pos:column="79">(<argument><expr><call><name><name pos:line="5171" pos:column="80">sel</name><op:operator pos:line="5171" pos:column="83">.</op:operator><name pos:line="5171" pos:column="84">MainCaret</name></name><argument_list pos:line="5171" pos:column="93">()</argument_list></call> <op:operator pos:line="5171" pos:column="96">+</op:operator> <lit:literal type="number" pos:line="5171" pos:column="98">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5171" pos:column="102">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5171" pos:column="106">Selection</name><op:operator pos:line="5171" pos:column="115">::</op:operator><name pos:line="5171" pos:column="117">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="5173" pos:column="17">SetLastXChosen</name><argument_list pos:line="5173" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5174" pos:column="17">break;</break>
	</case><case pos:line="5175" pos:column="9">case <expr><name pos:line="5175" pos:column="14">SCI_WORDLEFT</name></expr>:
		<expr_stmt><expr><call><name pos:line="5176" pos:column="17">MovePositionTo</name><argument_list pos:line="5176" pos:column="31">(<argument><expr><call><name pos:line="5176" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5176" pos:column="53">(<argument><expr><call><name><name pos:line="5176" pos:column="54">pdoc</name><op:operator pos:line="5176" pos:column="58">-&gt;</op:operator><name pos:line="5176" pos:column="60">NextWordStart</name></name><argument_list pos:line="5176" pos:column="73">(<argument><expr><call><name><name pos:line="5176" pos:column="74">sel</name><op:operator pos:line="5176" pos:column="77">.</op:operator><name pos:line="5176" pos:column="78">MainCaret</name></name><argument_list pos:line="5176" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5176" pos:column="91">-</op:operator><lit:literal type="number" pos:line="5176" pos:column="92">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5176" pos:column="96">-</op:operator><lit:literal type="number" pos:line="5176" pos:column="97">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5177" pos:column="17">SetLastXChosen</name><argument_list pos:line="5177" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5178" pos:column="17">break;</break>
	</case><case pos:line="5179" pos:column="9">case <expr><name pos:line="5179" pos:column="14">SCI_WORDLEFTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5180" pos:column="17">MovePositionTo</name><argument_list pos:line="5180" pos:column="31">(<argument><expr><call><name pos:line="5180" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5180" pos:column="53">(<argument><expr><call><name><name pos:line="5180" pos:column="54">pdoc</name><op:operator pos:line="5180" pos:column="58">-&gt;</op:operator><name pos:line="5180" pos:column="60">NextWordStart</name></name><argument_list pos:line="5180" pos:column="73">(<argument><expr><call><name><name pos:line="5180" pos:column="74">sel</name><op:operator pos:line="5180" pos:column="77">.</op:operator><name pos:line="5180" pos:column="78">MainCaret</name></name><argument_list pos:line="5180" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5180" pos:column="91">-</op:operator><lit:literal type="number" pos:line="5180" pos:column="92">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5180" pos:column="96">-</op:operator><lit:literal type="number" pos:line="5180" pos:column="97">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5180" pos:column="101">Selection</name><op:operator pos:line="5180" pos:column="110">::</op:operator><name pos:line="5180" pos:column="112">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5181" pos:column="17">SetLastXChosen</name><argument_list pos:line="5181" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5182" pos:column="17">break;</break>
	</case><case pos:line="5183" pos:column="9">case <expr><name pos:line="5183" pos:column="14">SCI_WORDRIGHT</name></expr>:
		<expr_stmt><expr><call><name pos:line="5184" pos:column="17">MovePositionTo</name><argument_list pos:line="5184" pos:column="31">(<argument><expr><call><name pos:line="5184" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5184" pos:column="53">(<argument><expr><call><name><name pos:line="5184" pos:column="54">pdoc</name><op:operator pos:line="5184" pos:column="58">-&gt;</op:operator><name pos:line="5184" pos:column="60">NextWordStart</name></name><argument_list pos:line="5184" pos:column="73">(<argument><expr><call><name><name pos:line="5184" pos:column="74">sel</name><op:operator pos:line="5184" pos:column="77">.</op:operator><name pos:line="5184" pos:column="78">MainCaret</name></name><argument_list pos:line="5184" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5184" pos:column="91">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5184" pos:column="95">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5185" pos:column="17">SetLastXChosen</name><argument_list pos:line="5185" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5186" pos:column="17">break;</break>
	</case><case pos:line="5187" pos:column="9">case <expr><name pos:line="5187" pos:column="14">SCI_WORDRIGHTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5188" pos:column="17">MovePositionTo</name><argument_list pos:line="5188" pos:column="31">(<argument><expr><call><name pos:line="5188" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5188" pos:column="53">(<argument><expr><call><name><name pos:line="5188" pos:column="54">pdoc</name><op:operator pos:line="5188" pos:column="58">-&gt;</op:operator><name pos:line="5188" pos:column="60">NextWordStart</name></name><argument_list pos:line="5188" pos:column="73">(<argument><expr><call><name><name pos:line="5188" pos:column="74">sel</name><op:operator pos:line="5188" pos:column="77">.</op:operator><name pos:line="5188" pos:column="78">MainCaret</name></name><argument_list pos:line="5188" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5188" pos:column="91">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5188" pos:column="95">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5188" pos:column="99">Selection</name><op:operator pos:line="5188" pos:column="108">::</op:operator><name pos:line="5188" pos:column="110">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5189" pos:column="17">SetLastXChosen</name><argument_list pos:line="5189" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5190" pos:column="17">break;</break>

	</case><case pos:line="5192" pos:column="9">case <expr><name pos:line="5192" pos:column="14">SCI_WORDLEFTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5193" pos:column="17">MovePositionTo</name><argument_list pos:line="5193" pos:column="31">(<argument><expr><call><name pos:line="5193" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5193" pos:column="53">(<argument><expr><call><name><name pos:line="5193" pos:column="54">pdoc</name><op:operator pos:line="5193" pos:column="58">-&gt;</op:operator><name pos:line="5193" pos:column="60">NextWordEnd</name></name><argument_list pos:line="5193" pos:column="71">(<argument><expr><call><name><name pos:line="5193" pos:column="72">sel</name><op:operator pos:line="5193" pos:column="75">.</op:operator><name pos:line="5193" pos:column="76">MainCaret</name></name><argument_list pos:line="5193" pos:column="85">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5193" pos:column="89">-</op:operator><lit:literal type="number" pos:line="5193" pos:column="90">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5193" pos:column="94">-</op:operator><lit:literal type="number" pos:line="5193" pos:column="95">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5194" pos:column="17">SetLastXChosen</name><argument_list pos:line="5194" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5195" pos:column="17">break;</break>
	</case><case pos:line="5196" pos:column="9">case <expr><name pos:line="5196" pos:column="14">SCI_WORDLEFTENDEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5197" pos:column="17">MovePositionTo</name><argument_list pos:line="5197" pos:column="31">(<argument><expr><call><name pos:line="5197" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5197" pos:column="53">(<argument><expr><call><name><name pos:line="5197" pos:column="54">pdoc</name><op:operator pos:line="5197" pos:column="58">-&gt;</op:operator><name pos:line="5197" pos:column="60">NextWordEnd</name></name><argument_list pos:line="5197" pos:column="71">(<argument><expr><call><name><name pos:line="5197" pos:column="72">sel</name><op:operator pos:line="5197" pos:column="75">.</op:operator><name pos:line="5197" pos:column="76">MainCaret</name></name><argument_list pos:line="5197" pos:column="85">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5197" pos:column="89">-</op:operator><lit:literal type="number" pos:line="5197" pos:column="90">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5197" pos:column="94">-</op:operator><lit:literal type="number" pos:line="5197" pos:column="95">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5197" pos:column="99">Selection</name><op:operator pos:line="5197" pos:column="108">::</op:operator><name pos:line="5197" pos:column="110">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5198" pos:column="17">SetLastXChosen</name><argument_list pos:line="5198" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5199" pos:column="17">break;</break>
	</case><case pos:line="5200" pos:column="9">case <expr><name pos:line="5200" pos:column="14">SCI_WORDRIGHTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5201" pos:column="17">MovePositionTo</name><argument_list pos:line="5201" pos:column="31">(<argument><expr><call><name pos:line="5201" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5201" pos:column="53">(<argument><expr><call><name><name pos:line="5201" pos:column="54">pdoc</name><op:operator pos:line="5201" pos:column="58">-&gt;</op:operator><name pos:line="5201" pos:column="60">NextWordEnd</name></name><argument_list pos:line="5201" pos:column="71">(<argument><expr><call><name><name pos:line="5201" pos:column="72">sel</name><op:operator pos:line="5201" pos:column="75">.</op:operator><name pos:line="5201" pos:column="76">MainCaret</name></name><argument_list pos:line="5201" pos:column="85">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5201" pos:column="89">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5201" pos:column="93">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5202" pos:column="17">SetLastXChosen</name><argument_list pos:line="5202" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5203" pos:column="17">break;</break>
	</case><case pos:line="5204" pos:column="9">case <expr><name pos:line="5204" pos:column="14">SCI_WORDRIGHTENDEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5205" pos:column="17">MovePositionTo</name><argument_list pos:line="5205" pos:column="31">(<argument><expr><call><name pos:line="5205" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5205" pos:column="53">(<argument><expr><call><name><name pos:line="5205" pos:column="54">pdoc</name><op:operator pos:line="5205" pos:column="58">-&gt;</op:operator><name pos:line="5205" pos:column="60">NextWordEnd</name></name><argument_list pos:line="5205" pos:column="71">(<argument><expr><call><name><name pos:line="5205" pos:column="72">sel</name><op:operator pos:line="5205" pos:column="75">.</op:operator><name pos:line="5205" pos:column="76">MainCaret</name></name><argument_list pos:line="5205" pos:column="85">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5205" pos:column="89">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5205" pos:column="93">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5205" pos:column="97">Selection</name><op:operator pos:line="5205" pos:column="106">::</op:operator><name pos:line="5205" pos:column="108">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5206" pos:column="17">SetLastXChosen</name><argument_list pos:line="5206" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5207" pos:column="17">break;</break>

	</case><case pos:line="5209" pos:column="9">case <expr><name pos:line="5209" pos:column="14">SCI_HOME</name></expr>:
		<expr_stmt><expr><call><name pos:line="5210" pos:column="17">MovePositionTo</name><argument_list pos:line="5210" pos:column="31">(<argument><expr><call><name><name pos:line="5210" pos:column="32">pdoc</name><op:operator pos:line="5210" pos:column="36">-&gt;</op:operator><name pos:line="5210" pos:column="38">LineStart</name></name><argument_list pos:line="5210" pos:column="47">(<argument><expr><call><name><name pos:line="5210" pos:column="48">pdoc</name><op:operator pos:line="5210" pos:column="52">-&gt;</op:operator><name pos:line="5210" pos:column="54">LineFromPosition</name></name><argument_list pos:line="5210" pos:column="70">(<argument><expr><call><name><name pos:line="5210" pos:column="71">sel</name><op:operator pos:line="5210" pos:column="74">.</op:operator><name pos:line="5210" pos:column="75">MainCaret</name></name><argument_list pos:line="5210" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5211" pos:column="17">SetLastXChosen</name><argument_list pos:line="5211" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5212" pos:column="17">break;</break>
	</case><case pos:line="5213" pos:column="9">case <expr><name pos:line="5213" pos:column="14">SCI_HOMEEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5214" pos:column="17">MovePositionTo</name><argument_list pos:line="5214" pos:column="31">(<argument><expr><call><name><name pos:line="5214" pos:column="32">pdoc</name><op:operator pos:line="5214" pos:column="36">-&gt;</op:operator><name pos:line="5214" pos:column="38">LineStart</name></name><argument_list pos:line="5214" pos:column="47">(<argument><expr><call><name><name pos:line="5214" pos:column="48">pdoc</name><op:operator pos:line="5214" pos:column="52">-&gt;</op:operator><name pos:line="5214" pos:column="54">LineFromPosition</name></name><argument_list pos:line="5214" pos:column="70">(<argument><expr><call><name><name pos:line="5214" pos:column="71">sel</name><op:operator pos:line="5214" pos:column="74">.</op:operator><name pos:line="5214" pos:column="75">MainCaret</name></name><argument_list pos:line="5214" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5214" pos:column="90">Selection</name><op:operator pos:line="5214" pos:column="99">::</op:operator><name pos:line="5214" pos:column="101">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5215" pos:column="17">SetLastXChosen</name><argument_list pos:line="5215" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5216" pos:column="17">break;</break>
	</case><case pos:line="5217" pos:column="9">case <expr><name pos:line="5217" pos:column="14">SCI_HOMERECTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5218" pos:column="17">MovePositionTo</name><argument_list pos:line="5218" pos:column="31">(<argument><expr><call><name><name pos:line="5218" pos:column="32">pdoc</name><op:operator pos:line="5218" pos:column="36">-&gt;</op:operator><name pos:line="5218" pos:column="38">LineStart</name></name><argument_list pos:line="5218" pos:column="47">(<argument><expr><call><name><name pos:line="5218" pos:column="48">pdoc</name><op:operator pos:line="5218" pos:column="52">-&gt;</op:operator><name pos:line="5218" pos:column="54">LineFromPosition</name></name><argument_list pos:line="5218" pos:column="70">(<argument><expr><call><name><name pos:line="5218" pos:column="71">sel</name><op:operator pos:line="5218" pos:column="74">.</op:operator><name pos:line="5218" pos:column="75">MainCaret</name></name><argument_list pos:line="5218" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5218" pos:column="90">Selection</name><op:operator pos:line="5218" pos:column="99">::</op:operator><name pos:line="5218" pos:column="101">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5219" pos:column="17">SetLastXChosen</name><argument_list pos:line="5219" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5220" pos:column="17">break;</break>
	</case><case pos:line="5221" pos:column="9">case <expr><name pos:line="5221" pos:column="14">SCI_LINEEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5222" pos:column="17">MovePositionTo</name><argument_list pos:line="5222" pos:column="31">(<argument><expr><call><name><name pos:line="5222" pos:column="32">pdoc</name><op:operator pos:line="5222" pos:column="36">-&gt;</op:operator><name pos:line="5222" pos:column="38">LineEndPosition</name></name><argument_list pos:line="5222" pos:column="53">(<argument><expr><call><name><name pos:line="5222" pos:column="54">sel</name><op:operator pos:line="5222" pos:column="57">.</op:operator><name pos:line="5222" pos:column="58">MainCaret</name></name><argument_list pos:line="5222" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5223" pos:column="17">SetLastXChosen</name><argument_list pos:line="5223" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5224" pos:column="17">break;</break>
	</case><case pos:line="5225" pos:column="9">case <expr><name pos:line="5225" pos:column="14">SCI_LINEENDEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5226" pos:column="17">MovePositionTo</name><argument_list pos:line="5226" pos:column="31">(<argument><expr><call><name><name pos:line="5226" pos:column="32">pdoc</name><op:operator pos:line="5226" pos:column="36">-&gt;</op:operator><name pos:line="5226" pos:column="38">LineEndPosition</name></name><argument_list pos:line="5226" pos:column="53">(<argument><expr><call><name><name pos:line="5226" pos:column="54">sel</name><op:operator pos:line="5226" pos:column="57">.</op:operator><name pos:line="5226" pos:column="58">MainCaret</name></name><argument_list pos:line="5226" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5226" pos:column="72">Selection</name><op:operator pos:line="5226" pos:column="81">::</op:operator><name pos:line="5226" pos:column="83">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5227" pos:column="17">SetLastXChosen</name><argument_list pos:line="5227" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5228" pos:column="17">break;</break>
	</case><case pos:line="5229" pos:column="9">case <expr><name pos:line="5229" pos:column="14">SCI_LINEENDRECTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5230" pos:column="17">MovePositionTo</name><argument_list pos:line="5230" pos:column="31">(<argument><expr><call><name><name pos:line="5230" pos:column="32">pdoc</name><op:operator pos:line="5230" pos:column="36">-&gt;</op:operator><name pos:line="5230" pos:column="38">LineEndPosition</name></name><argument_list pos:line="5230" pos:column="53">(<argument><expr><call><name><name pos:line="5230" pos:column="54">sel</name><op:operator pos:line="5230" pos:column="57">.</op:operator><name pos:line="5230" pos:column="58">MainCaret</name></name><argument_list pos:line="5230" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5230" pos:column="72">Selection</name><op:operator pos:line="5230" pos:column="81">::</op:operator><name pos:line="5230" pos:column="83">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5231" pos:column="17">SetLastXChosen</name><argument_list pos:line="5231" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5232" pos:column="17">break;</break>
	</case><case pos:line="5233" pos:column="9">case <expr><name pos:line="5233" pos:column="14">SCI_HOMEWRAP</name></expr>: <block pos:line="5233" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="5234" pos:column="25">SelectionPosition</name></type> <name pos:line="5234" pos:column="43">homePos</name> <init pos:line="5234" pos:column="51">= <expr><call><name pos:line="5234" pos:column="53">MovePositionSoVisible</name><argument_list pos:line="5234" pos:column="74">(<argument><expr><call><name pos:line="5234" pos:column="75">StartEndDisplayLine</name><argument_list pos:line="5234" pos:column="94">(<argument><expr><call><name><name pos:line="5234" pos:column="95">sel</name><op:operator pos:line="5234" pos:column="98">.</op:operator><name pos:line="5234" pos:column="99">MainCaret</name></name><argument_list pos:line="5234" pos:column="108">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5234" pos:column="112">true</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5234" pos:column="119">-</op:operator><lit:literal type="number" pos:line="5234" pos:column="120">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="5235" pos:column="25">if <condition pos:line="5235" pos:column="28">(<expr><call><name><name pos:line="5235" pos:column="29">sel</name><op:operator pos:line="5235" pos:column="32">.</op:operator><name pos:line="5235" pos:column="33">RangeMain</name></name><argument_list pos:line="5235" pos:column="42">()</argument_list></call><op:operator pos:line="5235" pos:column="44">.</op:operator><name pos:line="5235" pos:column="45">caret</name> <op:operator pos:line="5235" pos:column="51">&lt;=</op:operator> <name pos:line="5235" pos:column="54">homePos</name></expr>)</condition><then pos:line="5235" pos:column="62">
				<expr_stmt><expr><name pos:line="5236" pos:column="33">homePos</name> <op:operator pos:line="5236" pos:column="41">=</op:operator> <call><name pos:line="5236" pos:column="43">SelectionPosition</name><argument_list pos:line="5236" pos:column="60">(<argument><expr><call><name><name pos:line="5236" pos:column="61">pdoc</name><op:operator pos:line="5236" pos:column="65">-&gt;</op:operator><name pos:line="5236" pos:column="67">LineStart</name></name><argument_list pos:line="5236" pos:column="76">(<argument><expr><call><name><name pos:line="5236" pos:column="77">pdoc</name><op:operator pos:line="5236" pos:column="81">-&gt;</op:operator><name pos:line="5236" pos:column="83">LineFromPosition</name></name><argument_list pos:line="5236" pos:column="99">(<argument><expr><call><name><name pos:line="5236" pos:column="100">sel</name><op:operator pos:line="5236" pos:column="103">.</op:operator><name pos:line="5236" pos:column="104">MainCaret</name></name><argument_list pos:line="5236" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name pos:line="5237" pos:column="25">MovePositionTo</name><argument_list pos:line="5237" pos:column="39">(<argument><expr><name pos:line="5237" pos:column="40">homePos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5238" pos:column="25">SetLastXChosen</name><argument_list pos:line="5238" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5240" pos:column="17">break;</break>
	</case><case pos:line="5241" pos:column="9">case <expr><name pos:line="5241" pos:column="14">SCI_HOMEWRAPEXTEND</name></expr>: <block pos:line="5241" pos:column="34">{
			<decl_stmt><decl><type><name pos:line="5242" pos:column="25">SelectionPosition</name></type> <name pos:line="5242" pos:column="43">homePos</name> <init pos:line="5242" pos:column="51">= <expr><call><name pos:line="5242" pos:column="53">MovePositionSoVisible</name><argument_list pos:line="5242" pos:column="74">(<argument><expr><call><name pos:line="5242" pos:column="75">StartEndDisplayLine</name><argument_list pos:line="5242" pos:column="94">(<argument><expr><call><name><name pos:line="5242" pos:column="95">sel</name><op:operator pos:line="5242" pos:column="98">.</op:operator><name pos:line="5242" pos:column="99">MainCaret</name></name><argument_list pos:line="5242" pos:column="108">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5242" pos:column="112">true</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5242" pos:column="119">-</op:operator><lit:literal type="number" pos:line="5242" pos:column="120">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="5243" pos:column="25">if <condition pos:line="5243" pos:column="28">(<expr><call><name><name pos:line="5243" pos:column="29">sel</name><op:operator pos:line="5243" pos:column="32">.</op:operator><name pos:line="5243" pos:column="33">RangeMain</name></name><argument_list pos:line="5243" pos:column="42">()</argument_list></call><op:operator pos:line="5243" pos:column="44">.</op:operator><name pos:line="5243" pos:column="45">caret</name> <op:operator pos:line="5243" pos:column="51">&lt;=</op:operator> <name pos:line="5243" pos:column="54">homePos</name></expr>)</condition><then pos:line="5243" pos:column="62">
				<expr_stmt><expr><name pos:line="5244" pos:column="33">homePos</name> <op:operator pos:line="5244" pos:column="41">=</op:operator> <call><name pos:line="5244" pos:column="43">SelectionPosition</name><argument_list pos:line="5244" pos:column="60">(<argument><expr><call><name><name pos:line="5244" pos:column="61">pdoc</name><op:operator pos:line="5244" pos:column="65">-&gt;</op:operator><name pos:line="5244" pos:column="67">LineStart</name></name><argument_list pos:line="5244" pos:column="76">(<argument><expr><call><name><name pos:line="5244" pos:column="77">pdoc</name><op:operator pos:line="5244" pos:column="81">-&gt;</op:operator><name pos:line="5244" pos:column="83">LineFromPosition</name></name><argument_list pos:line="5244" pos:column="99">(<argument><expr><call><name><name pos:line="5244" pos:column="100">sel</name><op:operator pos:line="5244" pos:column="103">.</op:operator><name pos:line="5244" pos:column="104">MainCaret</name></name><argument_list pos:line="5244" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name pos:line="5245" pos:column="25">MovePositionTo</name><argument_list pos:line="5245" pos:column="39">(<argument><expr><name pos:line="5245" pos:column="40">homePos</name></expr></argument>, <argument><expr><name><name pos:line="5245" pos:column="49">Selection</name><op:operator pos:line="5245" pos:column="58">::</op:operator><name pos:line="5245" pos:column="60">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5246" pos:column="25">SetLastXChosen</name><argument_list pos:line="5246" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5248" pos:column="17">break;</break>
	</case><case pos:line="5249" pos:column="9">case <expr><name pos:line="5249" pos:column="14">SCI_LINEENDWRAP</name></expr>: <block pos:line="5249" pos:column="31">{
			<decl_stmt><decl><type><name pos:line="5250" pos:column="25">SelectionPosition</name></type> <name pos:line="5250" pos:column="43">endPos</name> <init pos:line="5250" pos:column="50">= <expr><call><name pos:line="5250" pos:column="52">MovePositionSoVisible</name><argument_list pos:line="5250" pos:column="73">(<argument><expr><call><name pos:line="5250" pos:column="74">StartEndDisplayLine</name><argument_list pos:line="5250" pos:column="93">(<argument><expr><call><name><name pos:line="5250" pos:column="94">sel</name><op:operator pos:line="5250" pos:column="97">.</op:operator><name pos:line="5250" pos:column="98">MainCaret</name></name><argument_list pos:line="5250" pos:column="107">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5250" pos:column="111">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5250" pos:column="119">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5251" pos:column="25">SelectionPosition</name></type> <name pos:line="5251" pos:column="43">realEndPos</name> <init pos:line="5251" pos:column="54">= <expr><call><name pos:line="5251" pos:column="56">SelectionPosition</name><argument_list pos:line="5251" pos:column="73">(<argument><expr><call><name><name pos:line="5251" pos:column="74">pdoc</name><op:operator pos:line="5251" pos:column="78">-&gt;</op:operator><name pos:line="5251" pos:column="80">LineEndPosition</name></name><argument_list pos:line="5251" pos:column="95">(<argument><expr><call><name><name pos:line="5251" pos:column="96">sel</name><op:operator pos:line="5251" pos:column="99">.</op:operator><name pos:line="5251" pos:column="100">MainCaret</name></name><argument_list pos:line="5251" pos:column="109">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="5252" pos:column="25">if <condition pos:line="5252" pos:column="28">(<expr><name pos:line="5252" pos:column="29">endPos</name> <op:operator pos:line="5252" pos:column="36">&gt;</op:operator> <name pos:line="5252" pos:column="38">realEndPos</name>      <comment type="line" pos:line="5252" pos:column="54">// if moved past visible EOLs</comment>
			        <op:operator pos:line="5253" pos:column="33">||</op:operator> <call><name><name pos:line="5253" pos:column="36">sel</name><op:operator pos:line="5253" pos:column="39">.</op:operator><name pos:line="5253" pos:column="40">RangeMain</name></name><argument_list pos:line="5253" pos:column="49">()</argument_list></call><op:operator pos:line="5253" pos:column="51">.</op:operator><name pos:line="5253" pos:column="52">caret</name> <op:operator pos:line="5253" pos:column="58">&gt;=</op:operator> <name pos:line="5253" pos:column="61">endPos</name></expr>)</condition><then pos:line="5253" pos:column="68"> <comment type="line" pos:line="5253" pos:column="69">// if at end of display line already</comment>
				<expr_stmt><expr><name pos:line="5254" pos:column="33">endPos</name> <op:operator pos:line="5254" pos:column="40">=</op:operator> <name pos:line="5254" pos:column="42">realEndPos</name></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name pos:line="5255" pos:column="25">MovePositionTo</name><argument_list pos:line="5255" pos:column="39">(<argument><expr><name pos:line="5255" pos:column="40">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5256" pos:column="25">SetLastXChosen</name><argument_list pos:line="5256" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5258" pos:column="17">break;</break>
	</case><case pos:line="5259" pos:column="9">case <expr><name pos:line="5259" pos:column="14">SCI_LINEENDWRAPEXTEND</name></expr>: <block pos:line="5259" pos:column="37">{
			<decl_stmt><decl><type><name pos:line="5260" pos:column="25">SelectionPosition</name></type> <name pos:line="5260" pos:column="43">endPos</name> <init pos:line="5260" pos:column="50">= <expr><call><name pos:line="5260" pos:column="52">MovePositionSoVisible</name><argument_list pos:line="5260" pos:column="73">(<argument><expr><call><name pos:line="5260" pos:column="74">StartEndDisplayLine</name><argument_list pos:line="5260" pos:column="93">(<argument><expr><call><name><name pos:line="5260" pos:column="94">sel</name><op:operator pos:line="5260" pos:column="97">.</op:operator><name pos:line="5260" pos:column="98">MainCaret</name></name><argument_list pos:line="5260" pos:column="107">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5260" pos:column="111">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5260" pos:column="119">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5261" pos:column="25">SelectionPosition</name></type> <name pos:line="5261" pos:column="43">realEndPos</name> <init pos:line="5261" pos:column="54">= <expr><call><name pos:line="5261" pos:column="56">SelectionPosition</name><argument_list pos:line="5261" pos:column="73">(<argument><expr><call><name><name pos:line="5261" pos:column="74">pdoc</name><op:operator pos:line="5261" pos:column="78">-&gt;</op:operator><name pos:line="5261" pos:column="80">LineEndPosition</name></name><argument_list pos:line="5261" pos:column="95">(<argument><expr><call><name><name pos:line="5261" pos:column="96">sel</name><op:operator pos:line="5261" pos:column="99">.</op:operator><name pos:line="5261" pos:column="100">MainCaret</name></name><argument_list pos:line="5261" pos:column="109">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="5262" pos:column="25">if <condition pos:line="5262" pos:column="28">(<expr><name pos:line="5262" pos:column="29">endPos</name> <op:operator pos:line="5262" pos:column="36">&gt;</op:operator> <name pos:line="5262" pos:column="38">realEndPos</name>      <comment type="line" pos:line="5262" pos:column="54">// if moved past visible EOLs</comment>
			        <op:operator pos:line="5263" pos:column="33">||</op:operator> <call><name><name pos:line="5263" pos:column="36">sel</name><op:operator pos:line="5263" pos:column="39">.</op:operator><name pos:line="5263" pos:column="40">RangeMain</name></name><argument_list pos:line="5263" pos:column="49">()</argument_list></call><op:operator pos:line="5263" pos:column="51">.</op:operator><name pos:line="5263" pos:column="52">caret</name> <op:operator pos:line="5263" pos:column="58">&gt;=</op:operator> <name pos:line="5263" pos:column="61">endPos</name></expr>)</condition><then pos:line="5263" pos:column="68"> <comment type="line" pos:line="5263" pos:column="69">// if at end of display line already</comment>
				<expr_stmt><expr><name pos:line="5264" pos:column="33">endPos</name> <op:operator pos:line="5264" pos:column="40">=</op:operator> <name pos:line="5264" pos:column="42">realEndPos</name></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name pos:line="5265" pos:column="25">MovePositionTo</name><argument_list pos:line="5265" pos:column="39">(<argument><expr><name pos:line="5265" pos:column="40">endPos</name></expr></argument>, <argument><expr><name><name pos:line="5265" pos:column="48">Selection</name><op:operator pos:line="5265" pos:column="57">::</op:operator><name pos:line="5265" pos:column="59">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5266" pos:column="25">SetLastXChosen</name><argument_list pos:line="5266" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5268" pos:column="17">break;</break>
	</case><case pos:line="5269" pos:column="9">case <expr><name pos:line="5269" pos:column="14">SCI_DOCUMENTSTART</name></expr>:
		<expr_stmt><expr><call><name pos:line="5270" pos:column="17">MovePositionTo</name><argument_list pos:line="5270" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="5270" pos:column="32">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5271" pos:column="17">SetLastXChosen</name><argument_list pos:line="5271" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5272" pos:column="17">break;</break>
	</case><case pos:line="5273" pos:column="9">case <expr><name pos:line="5273" pos:column="14">SCI_DOCUMENTSTARTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5274" pos:column="17">MovePositionTo</name><argument_list pos:line="5274" pos:column="31">(<argument><expr><lit:literal type="number" pos:line="5274" pos:column="32">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5274" pos:column="35">Selection</name><op:operator pos:line="5274" pos:column="44">::</op:operator><name pos:line="5274" pos:column="46">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5275" pos:column="17">SetLastXChosen</name><argument_list pos:line="5275" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5276" pos:column="17">break;</break>
	</case><case pos:line="5277" pos:column="9">case <expr><name pos:line="5277" pos:column="14">SCI_DOCUMENTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5278" pos:column="17">MovePositionTo</name><argument_list pos:line="5278" pos:column="31">(<argument><expr><call><name><name pos:line="5278" pos:column="32">pdoc</name><op:operator pos:line="5278" pos:column="36">-&gt;</op:operator><name pos:line="5278" pos:column="38">Length</name></name><argument_list pos:line="5278" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5279" pos:column="17">SetLastXChosen</name><argument_list pos:line="5279" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5280" pos:column="17">break;</break>
	</case><case pos:line="5281" pos:column="9">case <expr><name pos:line="5281" pos:column="14">SCI_DOCUMENTENDEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5282" pos:column="17">MovePositionTo</name><argument_list pos:line="5282" pos:column="31">(<argument><expr><call><name><name pos:line="5282" pos:column="32">pdoc</name><op:operator pos:line="5282" pos:column="36">-&gt;</op:operator><name pos:line="5282" pos:column="38">Length</name></name><argument_list pos:line="5282" pos:column="44">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5282" pos:column="48">Selection</name><op:operator pos:line="5282" pos:column="57">::</op:operator><name pos:line="5282" pos:column="59">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5283" pos:column="17">SetLastXChosen</name><argument_list pos:line="5283" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5284" pos:column="17">break;</break>
	</case><case pos:line="5285" pos:column="9">case <expr><name pos:line="5285" pos:column="14">SCI_STUTTEREDPAGEUP</name></expr>:
		<expr_stmt><expr><call><name pos:line="5286" pos:column="17">PageMove</name><argument_list pos:line="5286" pos:column="25">(<argument><expr><op:operator pos:line="5286" pos:column="26">-</op:operator><lit:literal type="number" pos:line="5286" pos:column="27">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5286" pos:column="30">Selection</name><op:operator pos:line="5286" pos:column="39">::</op:operator><name pos:line="5286" pos:column="41">noSel</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5286" pos:column="48">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5287" pos:column="17">break;</break>
	</case><case pos:line="5288" pos:column="9">case <expr><name pos:line="5288" pos:column="14">SCI_STUTTEREDPAGEUPEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5289" pos:column="17">PageMove</name><argument_list pos:line="5289" pos:column="25">(<argument><expr><op:operator pos:line="5289" pos:column="26">-</op:operator><lit:literal type="number" pos:line="5289" pos:column="27">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5289" pos:column="30">Selection</name><op:operator pos:line="5289" pos:column="39">::</op:operator><name pos:line="5289" pos:column="41">selStream</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5289" pos:column="52">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5290" pos:column="17">break;</break>
	</case><case pos:line="5291" pos:column="9">case <expr><name pos:line="5291" pos:column="14">SCI_STUTTEREDPAGEDOWN</name></expr>:
		<expr_stmt><expr><call><name pos:line="5292" pos:column="17">PageMove</name><argument_list pos:line="5292" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="5292" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5292" pos:column="29">Selection</name><op:operator pos:line="5292" pos:column="38">::</op:operator><name pos:line="5292" pos:column="40">noSel</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5292" pos:column="47">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5293" pos:column="17">break;</break>
	</case><case pos:line="5294" pos:column="9">case <expr><name pos:line="5294" pos:column="14">SCI_STUTTEREDPAGEDOWNEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5295" pos:column="17">PageMove</name><argument_list pos:line="5295" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="5295" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5295" pos:column="29">Selection</name><op:operator pos:line="5295" pos:column="38">::</op:operator><name pos:line="5295" pos:column="40">selStream</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5295" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5296" pos:column="17">break;</break>
	</case><case pos:line="5297" pos:column="9">case <expr><name pos:line="5297" pos:column="14">SCI_PAGEUP</name></expr>:
		<expr_stmt><expr><call><name pos:line="5298" pos:column="17">PageMove</name><argument_list pos:line="5298" pos:column="25">(<argument><expr><op:operator pos:line="5298" pos:column="26">-</op:operator><lit:literal type="number" pos:line="5298" pos:column="27">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5299" pos:column="17">break;</break>
	</case><case pos:line="5300" pos:column="9">case <expr><name pos:line="5300" pos:column="14">SCI_PAGEUPEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5301" pos:column="17">PageMove</name><argument_list pos:line="5301" pos:column="25">(<argument><expr><op:operator pos:line="5301" pos:column="26">-</op:operator><lit:literal type="number" pos:line="5301" pos:column="27">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5301" pos:column="30">Selection</name><op:operator pos:line="5301" pos:column="39">::</op:operator><name pos:line="5301" pos:column="41">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5302" pos:column="17">break;</break>
	</case><case pos:line="5303" pos:column="9">case <expr><name pos:line="5303" pos:column="14">SCI_PAGEUPRECTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5304" pos:column="17">PageMove</name><argument_list pos:line="5304" pos:column="25">(<argument><expr><op:operator pos:line="5304" pos:column="26">-</op:operator><lit:literal type="number" pos:line="5304" pos:column="27">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5304" pos:column="30">Selection</name><op:operator pos:line="5304" pos:column="39">::</op:operator><name pos:line="5304" pos:column="41">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5305" pos:column="17">break;</break>
	</case><case pos:line="5306" pos:column="9">case <expr><name pos:line="5306" pos:column="14">SCI_PAGEDOWN</name></expr>:
		<expr_stmt><expr><call><name pos:line="5307" pos:column="17">PageMove</name><argument_list pos:line="5307" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="5307" pos:column="26">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5308" pos:column="17">break;</break>
	</case><case pos:line="5309" pos:column="9">case <expr><name pos:line="5309" pos:column="14">SCI_PAGEDOWNEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5310" pos:column="17">PageMove</name><argument_list pos:line="5310" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="5310" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5310" pos:column="29">Selection</name><op:operator pos:line="5310" pos:column="38">::</op:operator><name pos:line="5310" pos:column="40">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5311" pos:column="17">break;</break>
	</case><case pos:line="5312" pos:column="9">case <expr><name pos:line="5312" pos:column="14">SCI_PAGEDOWNRECTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5313" pos:column="17">PageMove</name><argument_list pos:line="5313" pos:column="25">(<argument><expr><lit:literal type="number" pos:line="5313" pos:column="26">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5313" pos:column="29">Selection</name><op:operator pos:line="5313" pos:column="38">::</op:operator><name pos:line="5313" pos:column="40">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5314" pos:column="17">break;</break>
	</case><case pos:line="5315" pos:column="9">case <expr><name pos:line="5315" pos:column="14">SCI_EDITTOGGLEOVERTYPE</name></expr>:
		<expr_stmt><expr><name pos:line="5316" pos:column="17">inOverstrike</name> <op:operator pos:line="5316" pos:column="30">=</op:operator> <op:operator pos:line="5316" pos:column="32">!</op:operator><name pos:line="5316" pos:column="33">inOverstrike</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5317" pos:column="17">DropCaret</name><argument_list pos:line="5317" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5318" pos:column="17">ShowCaretAtCurrentPosition</name><argument_list pos:line="5318" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5319" pos:column="17">ContainerNeedsUpdate</name><argument_list pos:line="5319" pos:column="37">(<argument><expr><name pos:line="5319" pos:column="38">SC_UPDATE_CONTENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5320" pos:column="17">NotifyUpdateUI</name><argument_list pos:line="5320" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5321" pos:column="17">break;</break>
	</case><case pos:line="5322" pos:column="9">case <expr><name pos:line="5322" pos:column="14">SCI_CANCEL</name></expr>:            	<comment type="line" pos:line="5322" pos:column="41">// Cancel any modes - handled in subclass</comment>
		<comment type="line" pos:line="5323" pos:column="17">// Also unselect text</comment>
		<expr_stmt><expr><call><name pos:line="5324" pos:column="17">CancelModes</name><argument_list pos:line="5324" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5325" pos:column="17">break;</break>
	</case><case pos:line="5326" pos:column="9">case <expr><name pos:line="5326" pos:column="14">SCI_DELETEBACK</name></expr>:
		<expr_stmt><expr><call><name pos:line="5327" pos:column="17">DelCharBack</name><argument_list pos:line="5327" pos:column="28">(<argument><expr><lit:literal type="boolean" pos:line="5327" pos:column="29">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="5328" pos:column="17">if <condition pos:line="5328" pos:column="20">(<expr><op:operator pos:line="5328" pos:column="21">(</op:operator><name pos:line="5328" pos:column="22">caretSticky</name> <op:operator pos:line="5328" pos:column="34">==</op:operator> <name pos:line="5328" pos:column="37">SC_CARETSTICKY_OFF</name><op:operator pos:line="5328" pos:column="55">)</op:operator> <op:operator pos:line="5328" pos:column="57">||</op:operator> <op:operator pos:line="5328" pos:column="60">(</op:operator><name pos:line="5328" pos:column="61">caretSticky</name> <op:operator pos:line="5328" pos:column="73">==</op:operator> <name pos:line="5328" pos:column="76">SC_CARETSTICKY_WHITESPACE</name><op:operator pos:line="5328" pos:column="101">)</op:operator></expr>)</condition><then pos:line="5328" pos:column="103"> <block pos:line="5328" pos:column="104">{
			<expr_stmt><expr><call><name pos:line="5329" pos:column="25">SetLastXChosen</name><argument_list pos:line="5329" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="5331" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="5331" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5332" pos:column="17">break;</break>
	</case><case pos:line="5333" pos:column="9">case <expr><name pos:line="5333" pos:column="14">SCI_DELETEBACKNOTLINE</name></expr>:
		<expr_stmt><expr><call><name pos:line="5334" pos:column="17">DelCharBack</name><argument_list pos:line="5334" pos:column="28">(<argument><expr><lit:literal type="boolean" pos:line="5334" pos:column="29">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="5335" pos:column="17">if <condition pos:line="5335" pos:column="20">(<expr><op:operator pos:line="5335" pos:column="21">(</op:operator><name pos:line="5335" pos:column="22">caretSticky</name> <op:operator pos:line="5335" pos:column="34">==</op:operator> <name pos:line="5335" pos:column="37">SC_CARETSTICKY_OFF</name><op:operator pos:line="5335" pos:column="55">)</op:operator> <op:operator pos:line="5335" pos:column="57">||</op:operator> <op:operator pos:line="5335" pos:column="60">(</op:operator><name pos:line="5335" pos:column="61">caretSticky</name> <op:operator pos:line="5335" pos:column="73">==</op:operator> <name pos:line="5335" pos:column="76">SC_CARETSTICKY_WHITESPACE</name><op:operator pos:line="5335" pos:column="101">)</op:operator></expr>)</condition><then pos:line="5335" pos:column="103"> <block pos:line="5335" pos:column="104">{
			<expr_stmt><expr><call><name pos:line="5336" pos:column="25">SetLastXChosen</name><argument_list pos:line="5336" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="5338" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="5338" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5339" pos:column="17">break;</break>
	</case><case pos:line="5340" pos:column="9">case <expr><name pos:line="5340" pos:column="14">SCI_TAB</name></expr>:
		<expr_stmt><expr><call><name pos:line="5341" pos:column="17">Indent</name><argument_list pos:line="5341" pos:column="23">(<argument><expr><lit:literal type="boolean" pos:line="5341" pos:column="24">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="5342" pos:column="17">if <condition pos:line="5342" pos:column="20">(<expr><name pos:line="5342" pos:column="21">caretSticky</name> <op:operator pos:line="5342" pos:column="33">==</op:operator> <name pos:line="5342" pos:column="36">SC_CARETSTICKY_OFF</name></expr>)</condition><then pos:line="5342" pos:column="55"> <block pos:line="5342" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="5343" pos:column="25">SetLastXChosen</name><argument_list pos:line="5343" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="5345" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="5345" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5346" pos:column="17">ShowCaretAtCurrentPosition</name><argument_list pos:line="5346" pos:column="43">()</argument_list></call></expr>;</expr_stmt>		<comment type="line" pos:line="5346" pos:column="57">// Avoid blinking</comment>
		<break pos:line="5347" pos:column="17">break;</break>
	</case><case pos:line="5348" pos:column="9">case <expr><name pos:line="5348" pos:column="14">SCI_BACKTAB</name></expr>:
		<expr_stmt><expr><call><name pos:line="5349" pos:column="17">Indent</name><argument_list pos:line="5349" pos:column="23">(<argument><expr><lit:literal type="boolean" pos:line="5349" pos:column="24">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="5350" pos:column="17">if <condition pos:line="5350" pos:column="20">(<expr><op:operator pos:line="5350" pos:column="21">(</op:operator><name pos:line="5350" pos:column="22">caretSticky</name> <op:operator pos:line="5350" pos:column="34">==</op:operator> <name pos:line="5350" pos:column="37">SC_CARETSTICKY_OFF</name><op:operator pos:line="5350" pos:column="55">)</op:operator> <op:operator pos:line="5350" pos:column="57">||</op:operator> <op:operator pos:line="5350" pos:column="60">(</op:operator><name pos:line="5350" pos:column="61">caretSticky</name> <op:operator pos:line="5350" pos:column="73">==</op:operator> <name pos:line="5350" pos:column="76">SC_CARETSTICKY_WHITESPACE</name><op:operator pos:line="5350" pos:column="101">)</op:operator></expr>)</condition><then pos:line="5350" pos:column="103"> <block pos:line="5350" pos:column="104">{
			<expr_stmt><expr><call><name pos:line="5351" pos:column="25">SetLastXChosen</name><argument_list pos:line="5351" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="5353" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="5353" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5354" pos:column="17">ShowCaretAtCurrentPosition</name><argument_list pos:line="5354" pos:column="43">()</argument_list></call></expr>;</expr_stmt>		<comment type="line" pos:line="5354" pos:column="57">// Avoid blinking</comment>
		<break pos:line="5355" pos:column="17">break;</break>
	</case><case pos:line="5356" pos:column="9">case <expr><name pos:line="5356" pos:column="14">SCI_NEWLINE</name></expr>:
		<expr_stmt><expr><call><name pos:line="5357" pos:column="17">NewLine</name><argument_list pos:line="5357" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5358" pos:column="17">break;</break>
	</case><case pos:line="5359" pos:column="9">case <expr><name pos:line="5359" pos:column="14">SCI_FORMFEED</name></expr>:
		<expr_stmt><expr><call><name pos:line="5360" pos:column="17">AddChar</name><argument_list pos:line="5360" pos:column="24">(<argument><expr><lit:literal type="char" pos:line="5360" pos:column="25">'\f'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5361" pos:column="17">break;</break>
	</case><case pos:line="5362" pos:column="9">case <expr><name pos:line="5362" pos:column="14">SCI_VCHOME</name></expr>:
		<expr_stmt><expr><call><name pos:line="5363" pos:column="17">MovePositionTo</name><argument_list pos:line="5363" pos:column="31">(<argument><expr><call><name><name pos:line="5363" pos:column="32">pdoc</name><op:operator pos:line="5363" pos:column="36">-&gt;</op:operator><name pos:line="5363" pos:column="38">VCHomePosition</name></name><argument_list pos:line="5363" pos:column="52">(<argument><expr><call><name><name pos:line="5363" pos:column="53">sel</name><op:operator pos:line="5363" pos:column="56">.</op:operator><name pos:line="5363" pos:column="57">MainCaret</name></name><argument_list pos:line="5363" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5364" pos:column="17">SetLastXChosen</name><argument_list pos:line="5364" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5365" pos:column="17">break;</break>
	</case><case pos:line="5366" pos:column="9">case <expr><name pos:line="5366" pos:column="14">SCI_VCHOMEEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5367" pos:column="17">MovePositionTo</name><argument_list pos:line="5367" pos:column="31">(<argument><expr><call><name><name pos:line="5367" pos:column="32">pdoc</name><op:operator pos:line="5367" pos:column="36">-&gt;</op:operator><name pos:line="5367" pos:column="38">VCHomePosition</name></name><argument_list pos:line="5367" pos:column="52">(<argument><expr><call><name><name pos:line="5367" pos:column="53">sel</name><op:operator pos:line="5367" pos:column="56">.</op:operator><name pos:line="5367" pos:column="57">MainCaret</name></name><argument_list pos:line="5367" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5367" pos:column="71">Selection</name><op:operator pos:line="5367" pos:column="80">::</op:operator><name pos:line="5367" pos:column="82">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5368" pos:column="17">SetLastXChosen</name><argument_list pos:line="5368" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5369" pos:column="17">break;</break>
	</case><case pos:line="5370" pos:column="9">case <expr><name pos:line="5370" pos:column="14">SCI_VCHOMERECTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5371" pos:column="17">MovePositionTo</name><argument_list pos:line="5371" pos:column="31">(<argument><expr><call><name><name pos:line="5371" pos:column="32">pdoc</name><op:operator pos:line="5371" pos:column="36">-&gt;</op:operator><name pos:line="5371" pos:column="38">VCHomePosition</name></name><argument_list pos:line="5371" pos:column="52">(<argument><expr><call><name><name pos:line="5371" pos:column="53">sel</name><op:operator pos:line="5371" pos:column="56">.</op:operator><name pos:line="5371" pos:column="57">MainCaret</name></name><argument_list pos:line="5371" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5371" pos:column="71">Selection</name><op:operator pos:line="5371" pos:column="80">::</op:operator><name pos:line="5371" pos:column="82">selRectangle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5372" pos:column="17">SetLastXChosen</name><argument_list pos:line="5372" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5373" pos:column="17">break;</break>
	</case><case pos:line="5374" pos:column="9">case <expr><name pos:line="5374" pos:column="14">SCI_VCHOMEWRAP</name></expr>: <block pos:line="5374" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="5375" pos:column="25">SelectionPosition</name></type> <name pos:line="5375" pos:column="43">homePos</name> <init pos:line="5375" pos:column="51">= <expr><call><name pos:line="5375" pos:column="53">SelectionPosition</name><argument_list pos:line="5375" pos:column="70">(<argument><expr><call><name><name pos:line="5375" pos:column="71">pdoc</name><op:operator pos:line="5375" pos:column="75">-&gt;</op:operator><name pos:line="5375" pos:column="77">VCHomePosition</name></name><argument_list pos:line="5375" pos:column="91">(<argument><expr><call><name><name pos:line="5375" pos:column="92">sel</name><op:operator pos:line="5375" pos:column="95">.</op:operator><name pos:line="5375" pos:column="96">MainCaret</name></name><argument_list pos:line="5375" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5376" pos:column="25">SelectionPosition</name></type> <name pos:line="5376" pos:column="43">viewLineStart</name> <init pos:line="5376" pos:column="57">= <expr><call><name pos:line="5376" pos:column="59">MovePositionSoVisible</name><argument_list pos:line="5376" pos:column="80">(<argument><expr><call><name pos:line="5376" pos:column="81">StartEndDisplayLine</name><argument_list pos:line="5376" pos:column="100">(<argument><expr><call><name><name pos:line="5376" pos:column="101">sel</name><op:operator pos:line="5376" pos:column="104">.</op:operator><name pos:line="5376" pos:column="105">MainCaret</name></name><argument_list pos:line="5376" pos:column="114">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5376" pos:column="118">true</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5376" pos:column="125">-</op:operator><lit:literal type="number" pos:line="5376" pos:column="126">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="5377" pos:column="25">if <condition pos:line="5377" pos:column="28">(<expr><op:operator pos:line="5377" pos:column="29">(</op:operator><name pos:line="5377" pos:column="30">viewLineStart</name> <op:operator pos:line="5377" pos:column="44">&lt;</op:operator> <call><name><name pos:line="5377" pos:column="46">sel</name><op:operator pos:line="5377" pos:column="49">.</op:operator><name pos:line="5377" pos:column="50">RangeMain</name></name><argument_list pos:line="5377" pos:column="59">()</argument_list></call><op:operator pos:line="5377" pos:column="61">.</op:operator><name pos:line="5377" pos:column="62">caret</name><op:operator pos:line="5377" pos:column="67">)</op:operator> <op:operator pos:line="5377" pos:column="69">&amp;&amp;</op:operator> <op:operator pos:line="5377" pos:column="72">(</op:operator><name pos:line="5377" pos:column="73">viewLineStart</name> <op:operator pos:line="5377" pos:column="87">&gt;</op:operator> <name pos:line="5377" pos:column="89">homePos</name><op:operator pos:line="5377" pos:column="96">)</op:operator></expr>)</condition><then pos:line="5377" pos:column="98">
				<expr_stmt><expr><name pos:line="5378" pos:column="33">homePos</name> <op:operator pos:line="5378" pos:column="41">=</op:operator> <name pos:line="5378" pos:column="43">viewLineStart</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name pos:line="5380" pos:column="25">MovePositionTo</name><argument_list pos:line="5380" pos:column="39">(<argument><expr><name pos:line="5380" pos:column="40">homePos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5381" pos:column="25">SetLastXChosen</name><argument_list pos:line="5381" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5383" pos:column="17">break;</break>
	</case><case pos:line="5384" pos:column="9">case <expr><name pos:line="5384" pos:column="14">SCI_VCHOMEWRAPEXTEND</name></expr>: <block pos:line="5384" pos:column="36">{
			<decl_stmt><decl><type><name pos:line="5385" pos:column="25">SelectionPosition</name></type> <name pos:line="5385" pos:column="43">homePos</name> <init pos:line="5385" pos:column="51">= <expr><call><name pos:line="5385" pos:column="53">SelectionPosition</name><argument_list pos:line="5385" pos:column="70">(<argument><expr><call><name><name pos:line="5385" pos:column="71">pdoc</name><op:operator pos:line="5385" pos:column="75">-&gt;</op:operator><name pos:line="5385" pos:column="77">VCHomePosition</name></name><argument_list pos:line="5385" pos:column="91">(<argument><expr><call><name><name pos:line="5385" pos:column="92">sel</name><op:operator pos:line="5385" pos:column="95">.</op:operator><name pos:line="5385" pos:column="96">MainCaret</name></name><argument_list pos:line="5385" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5386" pos:column="25">SelectionPosition</name></type> <name pos:line="5386" pos:column="43">viewLineStart</name> <init pos:line="5386" pos:column="57">= <expr><call><name pos:line="5386" pos:column="59">MovePositionSoVisible</name><argument_list pos:line="5386" pos:column="80">(<argument><expr><call><name pos:line="5386" pos:column="81">StartEndDisplayLine</name><argument_list pos:line="5386" pos:column="100">(<argument><expr><call><name><name pos:line="5386" pos:column="101">sel</name><op:operator pos:line="5386" pos:column="104">.</op:operator><name pos:line="5386" pos:column="105">MainCaret</name></name><argument_list pos:line="5386" pos:column="114">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5386" pos:column="118">true</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5386" pos:column="125">-</op:operator><lit:literal type="number" pos:line="5386" pos:column="126">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="5387" pos:column="25">if <condition pos:line="5387" pos:column="28">(<expr><op:operator pos:line="5387" pos:column="29">(</op:operator><name pos:line="5387" pos:column="30">viewLineStart</name> <op:operator pos:line="5387" pos:column="44">&lt;</op:operator> <call><name><name pos:line="5387" pos:column="46">sel</name><op:operator pos:line="5387" pos:column="49">.</op:operator><name pos:line="5387" pos:column="50">RangeMain</name></name><argument_list pos:line="5387" pos:column="59">()</argument_list></call><op:operator pos:line="5387" pos:column="61">.</op:operator><name pos:line="5387" pos:column="62">caret</name><op:operator pos:line="5387" pos:column="67">)</op:operator> <op:operator pos:line="5387" pos:column="69">&amp;&amp;</op:operator> <op:operator pos:line="5387" pos:column="72">(</op:operator><name pos:line="5387" pos:column="73">viewLineStart</name> <op:operator pos:line="5387" pos:column="87">&gt;</op:operator> <name pos:line="5387" pos:column="89">homePos</name><op:operator pos:line="5387" pos:column="96">)</op:operator></expr>)</condition><then pos:line="5387" pos:column="98">
				<expr_stmt><expr><name pos:line="5388" pos:column="33">homePos</name> <op:operator pos:line="5388" pos:column="41">=</op:operator> <name pos:line="5388" pos:column="43">viewLineStart</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name pos:line="5390" pos:column="25">MovePositionTo</name><argument_list pos:line="5390" pos:column="39">(<argument><expr><name pos:line="5390" pos:column="40">homePos</name></expr></argument>, <argument><expr><name><name pos:line="5390" pos:column="49">Selection</name><op:operator pos:line="5390" pos:column="58">::</op:operator><name pos:line="5390" pos:column="60">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5391" pos:column="25">SetLastXChosen</name><argument_list pos:line="5391" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5393" pos:column="17">break;</break>
	</case><case pos:line="5394" pos:column="9">case <expr><name pos:line="5394" pos:column="14">SCI_ZOOMIN</name></expr>:
		<if pos:line="5395" pos:column="17">if <condition pos:line="5395" pos:column="20">(<expr><name><name pos:line="5395" pos:column="21">vs</name><op:operator pos:line="5395" pos:column="23">.</op:operator><name pos:line="5395" pos:column="24">zoomLevel</name></name> <op:operator pos:line="5395" pos:column="34">&lt;</op:operator> <lit:literal type="number" pos:line="5395" pos:column="36">20</lit:literal></expr>)</condition><then pos:line="5395" pos:column="39"> <block pos:line="5395" pos:column="40">{
			<expr_stmt><expr><name><name pos:line="5396" pos:column="25">vs</name><op:operator pos:line="5396" pos:column="27">.</op:operator><name pos:line="5396" pos:column="28">zoomLevel</name></name><op:operator pos:line="5396" pos:column="37">++</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5397" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="5397" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5398" pos:column="25">NotifyZoom</name><argument_list pos:line="5398" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="5400" pos:column="17">break;</break>
	</case><case pos:line="5401" pos:column="9">case <expr><name pos:line="5401" pos:column="14">SCI_ZOOMOUT</name></expr>:
		<if pos:line="5402" pos:column="17">if <condition pos:line="5402" pos:column="20">(<expr><name><name pos:line="5402" pos:column="21">vs</name><op:operator pos:line="5402" pos:column="23">.</op:operator><name pos:line="5402" pos:column="24">zoomLevel</name></name> <op:operator pos:line="5402" pos:column="34">&gt;</op:operator> <op:operator pos:line="5402" pos:column="36">-</op:operator><lit:literal type="number" pos:line="5402" pos:column="37">10</lit:literal></expr>)</condition><then pos:line="5402" pos:column="40"> <block pos:line="5402" pos:column="41">{
			<expr_stmt><expr><name><name pos:line="5403" pos:column="25">vs</name><op:operator pos:line="5403" pos:column="27">.</op:operator><name pos:line="5403" pos:column="28">zoomLevel</name></name><op:operator pos:line="5403" pos:column="37">--</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5404" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="5404" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5405" pos:column="25">NotifyZoom</name><argument_list pos:line="5405" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="5407" pos:column="17">break;</break>
	</case><case pos:line="5408" pos:column="9">case <expr><name pos:line="5408" pos:column="14">SCI_DELWORDLEFT</name></expr>: <block pos:line="5408" pos:column="31">{
			<decl_stmt><decl><type><name pos:line="5409" pos:column="25">int</name></type> <name pos:line="5409" pos:column="29">startWord</name> <init pos:line="5409" pos:column="39">= <expr><call><name><name pos:line="5409" pos:column="41">pdoc</name><op:operator pos:line="5409" pos:column="45">-&gt;</op:operator><name pos:line="5409" pos:column="47">NextWordStart</name></name><argument_list pos:line="5409" pos:column="60">(<argument><expr><call><name><name pos:line="5409" pos:column="61">sel</name><op:operator pos:line="5409" pos:column="64">.</op:operator><name pos:line="5409" pos:column="65">MainCaret</name></name><argument_list pos:line="5409" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5409" pos:column="78">-</op:operator><lit:literal type="number" pos:line="5409" pos:column="79">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5410" pos:column="25">pdoc</name><op:operator pos:line="5410" pos:column="29">-&gt;</op:operator><name pos:line="5410" pos:column="31">DeleteChars</name></name><argument_list pos:line="5410" pos:column="42">(<argument><expr><name pos:line="5410" pos:column="43">startWord</name></expr></argument>, <argument><expr><call><name><name pos:line="5410" pos:column="54">sel</name><op:operator pos:line="5410" pos:column="57">.</op:operator><name pos:line="5410" pos:column="58">MainCaret</name></name><argument_list pos:line="5410" pos:column="67">()</argument_list></call> <op:operator pos:line="5410" pos:column="70">-</op:operator> <name pos:line="5410" pos:column="72">startWord</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="5411" pos:column="25">sel</name><op:operator pos:line="5411" pos:column="28">.</op:operator><name pos:line="5411" pos:column="29">RangeMain</name></name><argument_list pos:line="5411" pos:column="38">()</argument_list></call><op:operator pos:line="5411" pos:column="40">.</op:operator><call><name pos:line="5411" pos:column="41">ClearVirtualSpace</name><argument_list pos:line="5411" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5412" pos:column="25">SetLastXChosen</name><argument_list pos:line="5412" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5414" pos:column="17">break;</break>
	</case><case pos:line="5415" pos:column="9">case <expr><name pos:line="5415" pos:column="14">SCI_DELWORDRIGHT</name></expr>: <block pos:line="5415" pos:column="32">{
			<function_decl><type><name pos:line="5416" pos:column="25">UndoGroup</name></type> <name pos:line="5416" pos:column="35">ug</name><parameter_list pos:line="5416" pos:column="37">(<param><decl><type><name pos:line="5416" pos:column="38">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
			<expr_stmt><expr><call><name><name pos:line="5417" pos:column="25">sel</name><op:operator pos:line="5417" pos:column="28">.</op:operator><name pos:line="5417" pos:column="29">RangeMain</name></name><argument_list pos:line="5417" pos:column="38">()</argument_list></call><op:operator pos:line="5417" pos:column="40">.</op:operator><name pos:line="5417" pos:column="41">caret</name> <op:operator pos:line="5417" pos:column="47">=</op:operator> <call><name pos:line="5417" pos:column="49">SelectionPosition</name><argument_list pos:line="5417" pos:column="66">(
				<argument><expr><call><name pos:line="5418" pos:column="33">InsertSpace</name><argument_list pos:line="5418" pos:column="44">(<argument><expr><call><name><name pos:line="5418" pos:column="45">sel</name><op:operator pos:line="5418" pos:column="48">.</op:operator><name pos:line="5418" pos:column="49">RangeMain</name></name><argument_list pos:line="5418" pos:column="58">()</argument_list></call><op:operator pos:line="5418" pos:column="60">.</op:operator><call><name><name pos:line="5418" pos:column="61">caret</name><op:operator pos:line="5418" pos:column="66">.</op:operator><name pos:line="5418" pos:column="67">Position</name></name><argument_list pos:line="5418" pos:column="75">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5418" pos:column="79">sel</name><op:operator pos:line="5418" pos:column="82">.</op:operator><name pos:line="5418" pos:column="83">RangeMain</name></name><argument_list pos:line="5418" pos:column="92">()</argument_list></call><op:operator pos:line="5418" pos:column="94">.</op:operator><call><name><name pos:line="5418" pos:column="95">caret</name><op:operator pos:line="5418" pos:column="100">.</op:operator><name pos:line="5418" pos:column="101">VirtualSpace</name></name><argument_list pos:line="5418" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="5419" pos:column="25">sel</name><op:operator pos:line="5419" pos:column="28">.</op:operator><name pos:line="5419" pos:column="29">RangeMain</name></name><argument_list pos:line="5419" pos:column="38">()</argument_list></call><op:operator pos:line="5419" pos:column="40">.</op:operator><name pos:line="5419" pos:column="41">anchor</name> <op:operator pos:line="5419" pos:column="48">=</op:operator> <call><name><name pos:line="5419" pos:column="50">sel</name><op:operator pos:line="5419" pos:column="53">.</op:operator><name pos:line="5419" pos:column="54">RangeMain</name></name><argument_list pos:line="5419" pos:column="63">()</argument_list></call><op:operator pos:line="5419" pos:column="65">.</op:operator><name pos:line="5419" pos:column="66">caret</name></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="5420" pos:column="25">int</name></type> <name pos:line="5420" pos:column="29">endWord</name> <init pos:line="5420" pos:column="37">= <expr><call><name><name pos:line="5420" pos:column="39">pdoc</name><op:operator pos:line="5420" pos:column="43">-&gt;</op:operator><name pos:line="5420" pos:column="45">NextWordStart</name></name><argument_list pos:line="5420" pos:column="58">(<argument><expr><call><name><name pos:line="5420" pos:column="59">sel</name><op:operator pos:line="5420" pos:column="62">.</op:operator><name pos:line="5420" pos:column="63">MainCaret</name></name><argument_list pos:line="5420" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5420" pos:column="76">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5421" pos:column="25">pdoc</name><op:operator pos:line="5421" pos:column="29">-&gt;</op:operator><name pos:line="5421" pos:column="31">DeleteChars</name></name><argument_list pos:line="5421" pos:column="42">(<argument><expr><call><name><name pos:line="5421" pos:column="43">sel</name><op:operator pos:line="5421" pos:column="46">.</op:operator><name pos:line="5421" pos:column="47">MainCaret</name></name><argument_list pos:line="5421" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5421" pos:column="60">endWord</name> <op:operator pos:line="5421" pos:column="68">-</op:operator> <call><name><name pos:line="5421" pos:column="70">sel</name><op:operator pos:line="5421" pos:column="73">.</op:operator><name pos:line="5421" pos:column="74">MainCaret</name></name><argument_list pos:line="5421" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5423" pos:column="17">break;</break>
	</case><case pos:line="5424" pos:column="9">case <expr><name pos:line="5424" pos:column="14">SCI_DELWORDRIGHTEND</name></expr>: <block pos:line="5424" pos:column="35">{
			<function_decl><type><name pos:line="5425" pos:column="25">UndoGroup</name></type> <name pos:line="5425" pos:column="35">ug</name><parameter_list pos:line="5425" pos:column="37">(<param><decl><type><name pos:line="5425" pos:column="38">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
			<expr_stmt><expr><call><name><name pos:line="5426" pos:column="25">sel</name><op:operator pos:line="5426" pos:column="28">.</op:operator><name pos:line="5426" pos:column="29">RangeMain</name></name><argument_list pos:line="5426" pos:column="38">()</argument_list></call><op:operator pos:line="5426" pos:column="40">.</op:operator><name pos:line="5426" pos:column="41">caret</name> <op:operator pos:line="5426" pos:column="47">=</op:operator> <call><name pos:line="5426" pos:column="49">SelectionPosition</name><argument_list pos:line="5426" pos:column="66">(
				<argument><expr><call><name pos:line="5427" pos:column="33">InsertSpace</name><argument_list pos:line="5427" pos:column="44">(<argument><expr><call><name><name pos:line="5427" pos:column="45">sel</name><op:operator pos:line="5427" pos:column="48">.</op:operator><name pos:line="5427" pos:column="49">RangeMain</name></name><argument_list pos:line="5427" pos:column="58">()</argument_list></call><op:operator pos:line="5427" pos:column="60">.</op:operator><call><name><name pos:line="5427" pos:column="61">caret</name><op:operator pos:line="5427" pos:column="66">.</op:operator><name pos:line="5427" pos:column="67">Position</name></name><argument_list pos:line="5427" pos:column="75">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5427" pos:column="79">sel</name><op:operator pos:line="5427" pos:column="82">.</op:operator><name pos:line="5427" pos:column="83">RangeMain</name></name><argument_list pos:line="5427" pos:column="92">()</argument_list></call><op:operator pos:line="5427" pos:column="94">.</op:operator><call><name><name pos:line="5427" pos:column="95">caret</name><op:operator pos:line="5427" pos:column="100">.</op:operator><name pos:line="5427" pos:column="101">VirtualSpace</name></name><argument_list pos:line="5427" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="5428" pos:column="25">int</name></type> <name pos:line="5428" pos:column="29">endWord</name> <init pos:line="5428" pos:column="37">= <expr><call><name><name pos:line="5428" pos:column="39">pdoc</name><op:operator pos:line="5428" pos:column="43">-&gt;</op:operator><name pos:line="5428" pos:column="45">NextWordEnd</name></name><argument_list pos:line="5428" pos:column="56">(<argument><expr><call><name><name pos:line="5428" pos:column="57">sel</name><op:operator pos:line="5428" pos:column="60">.</op:operator><name pos:line="5428" pos:column="61">MainCaret</name></name><argument_list pos:line="5428" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5428" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5429" pos:column="25">pdoc</name><op:operator pos:line="5429" pos:column="29">-&gt;</op:operator><name pos:line="5429" pos:column="31">DeleteChars</name></name><argument_list pos:line="5429" pos:column="42">(<argument><expr><call><name><name pos:line="5429" pos:column="43">sel</name><op:operator pos:line="5429" pos:column="46">.</op:operator><name pos:line="5429" pos:column="47">MainCaret</name></name><argument_list pos:line="5429" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5429" pos:column="60">endWord</name> <op:operator pos:line="5429" pos:column="68">-</op:operator> <call><name><name pos:line="5429" pos:column="70">sel</name><op:operator pos:line="5429" pos:column="73">.</op:operator><name pos:line="5429" pos:column="74">MainCaret</name></name><argument_list pos:line="5429" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5431" pos:column="17">break;</break>
	</case><case pos:line="5432" pos:column="9">case <expr><name pos:line="5432" pos:column="14">SCI_DELLINELEFT</name></expr>: <block pos:line="5432" pos:column="31">{
			<decl_stmt><decl><type><name pos:line="5433" pos:column="25">int</name></type> <name pos:line="5433" pos:column="29">line</name> <init pos:line="5433" pos:column="34">= <expr><call><name><name pos:line="5433" pos:column="36">pdoc</name><op:operator pos:line="5433" pos:column="40">-&gt;</op:operator><name pos:line="5433" pos:column="42">LineFromPosition</name></name><argument_list pos:line="5433" pos:column="58">(<argument><expr><call><name><name pos:line="5433" pos:column="59">sel</name><op:operator pos:line="5433" pos:column="62">.</op:operator><name pos:line="5433" pos:column="63">MainCaret</name></name><argument_list pos:line="5433" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5434" pos:column="25">int</name></type> <name pos:line="5434" pos:column="29">start</name> <init pos:line="5434" pos:column="35">= <expr><call><name><name pos:line="5434" pos:column="37">pdoc</name><op:operator pos:line="5434" pos:column="41">-&gt;</op:operator><name pos:line="5434" pos:column="43">LineStart</name></name><argument_list pos:line="5434" pos:column="52">(<argument><expr><name pos:line="5434" pos:column="53">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5435" pos:column="25">pdoc</name><op:operator pos:line="5435" pos:column="29">-&gt;</op:operator><name pos:line="5435" pos:column="31">DeleteChars</name></name><argument_list pos:line="5435" pos:column="42">(<argument><expr><name pos:line="5435" pos:column="43">start</name></expr></argument>, <argument><expr><call><name><name pos:line="5435" pos:column="50">sel</name><op:operator pos:line="5435" pos:column="53">.</op:operator><name pos:line="5435" pos:column="54">MainCaret</name></name><argument_list pos:line="5435" pos:column="63">()</argument_list></call> <op:operator pos:line="5435" pos:column="66">-</op:operator> <name pos:line="5435" pos:column="68">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="5436" pos:column="25">sel</name><op:operator pos:line="5436" pos:column="28">.</op:operator><name pos:line="5436" pos:column="29">RangeMain</name></name><argument_list pos:line="5436" pos:column="38">()</argument_list></call><op:operator pos:line="5436" pos:column="40">.</op:operator><call><name pos:line="5436" pos:column="41">ClearVirtualSpace</name><argument_list pos:line="5436" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5437" pos:column="25">SetLastXChosen</name><argument_list pos:line="5437" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5439" pos:column="17">break;</break>
	</case><case pos:line="5440" pos:column="9">case <expr><name pos:line="5440" pos:column="14">SCI_DELLINERIGHT</name></expr>: <block pos:line="5440" pos:column="32">{
			<decl_stmt><decl><type><name pos:line="5441" pos:column="25">int</name></type> <name pos:line="5441" pos:column="29">line</name> <init pos:line="5441" pos:column="34">= <expr><call><name><name pos:line="5441" pos:column="36">pdoc</name><op:operator pos:line="5441" pos:column="40">-&gt;</op:operator><name pos:line="5441" pos:column="42">LineFromPosition</name></name><argument_list pos:line="5441" pos:column="58">(<argument><expr><call><name><name pos:line="5441" pos:column="59">sel</name><op:operator pos:line="5441" pos:column="62">.</op:operator><name pos:line="5441" pos:column="63">MainCaret</name></name><argument_list pos:line="5441" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5442" pos:column="25">int</name></type> <name pos:line="5442" pos:column="29">end</name> <init pos:line="5442" pos:column="33">= <expr><call><name><name pos:line="5442" pos:column="35">pdoc</name><op:operator pos:line="5442" pos:column="39">-&gt;</op:operator><name pos:line="5442" pos:column="41">LineEnd</name></name><argument_list pos:line="5442" pos:column="48">(<argument><expr><name pos:line="5442" pos:column="49">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5443" pos:column="25">pdoc</name><op:operator pos:line="5443" pos:column="29">-&gt;</op:operator><name pos:line="5443" pos:column="31">DeleteChars</name></name><argument_list pos:line="5443" pos:column="42">(<argument><expr><call><name><name pos:line="5443" pos:column="43">sel</name><op:operator pos:line="5443" pos:column="46">.</op:operator><name pos:line="5443" pos:column="47">MainCaret</name></name><argument_list pos:line="5443" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5443" pos:column="60">end</name> <op:operator pos:line="5443" pos:column="64">-</op:operator> <call><name><name pos:line="5443" pos:column="66">sel</name><op:operator pos:line="5443" pos:column="69">.</op:operator><name pos:line="5443" pos:column="70">MainCaret</name></name><argument_list pos:line="5443" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5445" pos:column="17">break;</break>
	</case><case pos:line="5446" pos:column="9">case <expr><name pos:line="5446" pos:column="14">SCI_LINECOPY</name></expr>: <block pos:line="5446" pos:column="28">{
			<decl_stmt><decl><type><name pos:line="5447" pos:column="25">int</name></type> <name pos:line="5447" pos:column="29">lineStart</name> <init pos:line="5447" pos:column="39">= <expr><call><name><name pos:line="5447" pos:column="41">pdoc</name><op:operator pos:line="5447" pos:column="45">-&gt;</op:operator><name pos:line="5447" pos:column="47">LineFromPosition</name></name><argument_list pos:line="5447" pos:column="63">(<argument><expr><call><name pos:line="5447" pos:column="64">SelectionStart</name><argument_list pos:line="5447" pos:column="78">()</argument_list></call><op:operator pos:line="5447" pos:column="80">.</op:operator><call><name pos:line="5447" pos:column="81">Position</name><argument_list pos:line="5447" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5448" pos:column="25">int</name></type> <name pos:line="5448" pos:column="29">lineEnd</name> <init pos:line="5448" pos:column="37">= <expr><call><name><name pos:line="5448" pos:column="39">pdoc</name><op:operator pos:line="5448" pos:column="43">-&gt;</op:operator><name pos:line="5448" pos:column="45">LineFromPosition</name></name><argument_list pos:line="5448" pos:column="61">(<argument><expr><call><name pos:line="5448" pos:column="62">SelectionEnd</name><argument_list pos:line="5448" pos:column="74">()</argument_list></call><op:operator pos:line="5448" pos:column="76">.</op:operator><call><name pos:line="5448" pos:column="77">Position</name><argument_list pos:line="5448" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="5449" pos:column="25">CopyRangeToClipboard</name><argument_list pos:line="5449" pos:column="45">(<argument><expr><call><name><name pos:line="5449" pos:column="46">pdoc</name><op:operator pos:line="5449" pos:column="50">-&gt;</op:operator><name pos:line="5449" pos:column="52">LineStart</name></name><argument_list pos:line="5449" pos:column="61">(<argument><expr><name pos:line="5449" pos:column="62">lineStart</name></expr></argument>)</argument_list></call></expr></argument>,
			        <argument><expr><call><name><name pos:line="5450" pos:column="33">pdoc</name><op:operator pos:line="5450" pos:column="37">-&gt;</op:operator><name pos:line="5450" pos:column="39">LineStart</name></name><argument_list pos:line="5450" pos:column="48">(<argument><expr><name pos:line="5450" pos:column="49">lineEnd</name> <op:operator pos:line="5450" pos:column="57">+</op:operator> <lit:literal type="number" pos:line="5450" pos:column="59">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5452" pos:column="17">break;</break>
	</case><case pos:line="5453" pos:column="9">case <expr><name pos:line="5453" pos:column="14">SCI_LINECUT</name></expr>: <block pos:line="5453" pos:column="27">{
			<decl_stmt><decl><type><name pos:line="5454" pos:column="25">int</name></type> <name pos:line="5454" pos:column="29">lineStart</name> <init pos:line="5454" pos:column="39">= <expr><call><name><name pos:line="5454" pos:column="41">pdoc</name><op:operator pos:line="5454" pos:column="45">-&gt;</op:operator><name pos:line="5454" pos:column="47">LineFromPosition</name></name><argument_list pos:line="5454" pos:column="63">(<argument><expr><call><name pos:line="5454" pos:column="64">SelectionStart</name><argument_list pos:line="5454" pos:column="78">()</argument_list></call><op:operator pos:line="5454" pos:column="80">.</op:operator><call><name pos:line="5454" pos:column="81">Position</name><argument_list pos:line="5454" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5455" pos:column="25">int</name></type> <name pos:line="5455" pos:column="29">lineEnd</name> <init pos:line="5455" pos:column="37">= <expr><call><name><name pos:line="5455" pos:column="39">pdoc</name><op:operator pos:line="5455" pos:column="43">-&gt;</op:operator><name pos:line="5455" pos:column="45">LineFromPosition</name></name><argument_list pos:line="5455" pos:column="61">(<argument><expr><call><name pos:line="5455" pos:column="62">SelectionEnd</name><argument_list pos:line="5455" pos:column="74">()</argument_list></call><op:operator pos:line="5455" pos:column="76">.</op:operator><call><name pos:line="5455" pos:column="77">Position</name><argument_list pos:line="5455" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5456" pos:column="25">int</name></type> <name pos:line="5456" pos:column="29">start</name> <init pos:line="5456" pos:column="35">= <expr><call><name><name pos:line="5456" pos:column="37">pdoc</name><op:operator pos:line="5456" pos:column="41">-&gt;</op:operator><name pos:line="5456" pos:column="43">LineStart</name></name><argument_list pos:line="5456" pos:column="52">(<argument><expr><name pos:line="5456" pos:column="53">lineStart</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5457" pos:column="25">int</name></type> <name pos:line="5457" pos:column="29">end</name> <init pos:line="5457" pos:column="33">= <expr><call><name><name pos:line="5457" pos:column="35">pdoc</name><op:operator pos:line="5457" pos:column="39">-&gt;</op:operator><name pos:line="5457" pos:column="41">LineStart</name></name><argument_list pos:line="5457" pos:column="50">(<argument><expr><name pos:line="5457" pos:column="51">lineEnd</name> <op:operator pos:line="5457" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="5457" pos:column="61">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="5458" pos:column="25">SetSelection</name><argument_list pos:line="5458" pos:column="37">(<argument><expr><name pos:line="5458" pos:column="38">start</name></expr></argument>, <argument><expr><name pos:line="5458" pos:column="45">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5459" pos:column="25">Cut</name><argument_list pos:line="5459" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="5460" pos:column="25">SetLastXChosen</name><argument_list pos:line="5460" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5462" pos:column="17">break;</break>
	</case><case pos:line="5463" pos:column="9">case <expr><name pos:line="5463" pos:column="14">SCI_LINEDELETE</name></expr>: <block pos:line="5463" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="5464" pos:column="25">int</name></type> <name pos:line="5464" pos:column="29">line</name> <init pos:line="5464" pos:column="34">= <expr><call><name><name pos:line="5464" pos:column="36">pdoc</name><op:operator pos:line="5464" pos:column="40">-&gt;</op:operator><name pos:line="5464" pos:column="42">LineFromPosition</name></name><argument_list pos:line="5464" pos:column="58">(<argument><expr><call><name><name pos:line="5464" pos:column="59">sel</name><op:operator pos:line="5464" pos:column="62">.</op:operator><name pos:line="5464" pos:column="63">MainCaret</name></name><argument_list pos:line="5464" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5465" pos:column="25">int</name></type> <name pos:line="5465" pos:column="29">start</name> <init pos:line="5465" pos:column="35">= <expr><call><name><name pos:line="5465" pos:column="37">pdoc</name><op:operator pos:line="5465" pos:column="41">-&gt;</op:operator><name pos:line="5465" pos:column="43">LineStart</name></name><argument_list pos:line="5465" pos:column="52">(<argument><expr><name pos:line="5465" pos:column="53">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5466" pos:column="25">int</name></type> <name pos:line="5466" pos:column="29">end</name> <init pos:line="5466" pos:column="33">= <expr><call><name><name pos:line="5466" pos:column="35">pdoc</name><op:operator pos:line="5466" pos:column="39">-&gt;</op:operator><name pos:line="5466" pos:column="41">LineStart</name></name><argument_list pos:line="5466" pos:column="50">(<argument><expr><name pos:line="5466" pos:column="51">line</name> <op:operator pos:line="5466" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="5466" pos:column="58">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5467" pos:column="25">pdoc</name><op:operator pos:line="5467" pos:column="29">-&gt;</op:operator><name pos:line="5467" pos:column="31">DeleteChars</name></name><argument_list pos:line="5467" pos:column="42">(<argument><expr><name pos:line="5467" pos:column="43">start</name></expr></argument>, <argument><expr><name pos:line="5467" pos:column="50">end</name> <op:operator pos:line="5467" pos:column="54">-</op:operator> <name pos:line="5467" pos:column="56">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="5469" pos:column="17">break;</break>
	</case><case pos:line="5470" pos:column="9">case <expr><name pos:line="5470" pos:column="14">SCI_LINETRANSPOSE</name></expr>:
		<expr_stmt><expr><call><name pos:line="5471" pos:column="17">LineTranspose</name><argument_list pos:line="5471" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5472" pos:column="17">break;</break>
	</case><case pos:line="5473" pos:column="9">case <expr><name pos:line="5473" pos:column="14">SCI_LINEDUPLICATE</name></expr>:
		<expr_stmt><expr><call><name pos:line="5474" pos:column="17">Duplicate</name><argument_list pos:line="5474" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="5474" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5475" pos:column="17">break;</break>
	</case><case pos:line="5476" pos:column="9">case <expr><name pos:line="5476" pos:column="14">SCI_SELECTIONDUPLICATE</name></expr>:
		<expr_stmt><expr><call><name pos:line="5477" pos:column="17">Duplicate</name><argument_list pos:line="5477" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="5477" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5478" pos:column="17">break;</break>
	</case><case pos:line="5479" pos:column="9">case <expr><name pos:line="5479" pos:column="14">SCI_LOWERCASE</name></expr>:
		<expr_stmt><expr><call><name pos:line="5480" pos:column="17">ChangeCaseOfSelection</name><argument_list pos:line="5480" pos:column="38">(<argument><expr><name pos:line="5480" pos:column="39">cmLower</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5481" pos:column="17">break;</break>
	</case><case pos:line="5482" pos:column="9">case <expr><name pos:line="5482" pos:column="14">SCI_UPPERCASE</name></expr>:
		<expr_stmt><expr><call><name pos:line="5483" pos:column="17">ChangeCaseOfSelection</name><argument_list pos:line="5483" pos:column="38">(<argument><expr><name pos:line="5483" pos:column="39">cmUpper</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5484" pos:column="17">break;</break>
	</case><case pos:line="5485" pos:column="9">case <expr><name pos:line="5485" pos:column="14">SCI_WORDPARTLEFT</name></expr>:
		<expr_stmt><expr><call><name pos:line="5486" pos:column="17">MovePositionTo</name><argument_list pos:line="5486" pos:column="31">(<argument><expr><call><name pos:line="5486" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5486" pos:column="53">(<argument><expr><call><name><name pos:line="5486" pos:column="54">pdoc</name><op:operator pos:line="5486" pos:column="58">-&gt;</op:operator><name pos:line="5486" pos:column="60">WordPartLeft</name></name><argument_list pos:line="5486" pos:column="72">(<argument><expr><call><name><name pos:line="5486" pos:column="73">sel</name><op:operator pos:line="5486" pos:column="76">.</op:operator><name pos:line="5486" pos:column="77">MainCaret</name></name><argument_list pos:line="5486" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5486" pos:column="91">-</op:operator><lit:literal type="number" pos:line="5486" pos:column="92">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5487" pos:column="17">SetLastXChosen</name><argument_list pos:line="5487" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5488" pos:column="17">break;</break>
	</case><case pos:line="5489" pos:column="9">case <expr><name pos:line="5489" pos:column="14">SCI_WORDPARTLEFTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5490" pos:column="17">MovePositionTo</name><argument_list pos:line="5490" pos:column="31">(<argument><expr><call><name pos:line="5490" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5490" pos:column="53">(<argument><expr><call><name><name pos:line="5490" pos:column="54">pdoc</name><op:operator pos:line="5490" pos:column="58">-&gt;</op:operator><name pos:line="5490" pos:column="60">WordPartLeft</name></name><argument_list pos:line="5490" pos:column="72">(<argument><expr><call><name><name pos:line="5490" pos:column="73">sel</name><op:operator pos:line="5490" pos:column="76">.</op:operator><name pos:line="5490" pos:column="77">MainCaret</name></name><argument_list pos:line="5490" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5490" pos:column="91">-</op:operator><lit:literal type="number" pos:line="5490" pos:column="92">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5490" pos:column="96">Selection</name><op:operator pos:line="5490" pos:column="105">::</op:operator><name pos:line="5490" pos:column="107">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5491" pos:column="17">SetLastXChosen</name><argument_list pos:line="5491" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5492" pos:column="17">break;</break>
	</case><case pos:line="5493" pos:column="9">case <expr><name pos:line="5493" pos:column="14">SCI_WORDPARTRIGHT</name></expr>:
		<expr_stmt><expr><call><name pos:line="5494" pos:column="17">MovePositionTo</name><argument_list pos:line="5494" pos:column="31">(<argument><expr><call><name pos:line="5494" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5494" pos:column="53">(<argument><expr><call><name><name pos:line="5494" pos:column="54">pdoc</name><op:operator pos:line="5494" pos:column="58">-&gt;</op:operator><name pos:line="5494" pos:column="60">WordPartRight</name></name><argument_list pos:line="5494" pos:column="73">(<argument><expr><call><name><name pos:line="5494" pos:column="74">sel</name><op:operator pos:line="5494" pos:column="77">.</op:operator><name pos:line="5494" pos:column="78">MainCaret</name></name><argument_list pos:line="5494" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5494" pos:column="92">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5495" pos:column="17">SetLastXChosen</name><argument_list pos:line="5495" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5496" pos:column="17">break;</break>
	</case><case pos:line="5497" pos:column="9">case <expr><name pos:line="5497" pos:column="14">SCI_WORDPARTRIGHTEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5498" pos:column="17">MovePositionTo</name><argument_list pos:line="5498" pos:column="31">(<argument><expr><call><name pos:line="5498" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5498" pos:column="53">(<argument><expr><call><name><name pos:line="5498" pos:column="54">pdoc</name><op:operator pos:line="5498" pos:column="58">-&gt;</op:operator><name pos:line="5498" pos:column="60">WordPartRight</name></name><argument_list pos:line="5498" pos:column="73">(<argument><expr><call><name><name pos:line="5498" pos:column="74">sel</name><op:operator pos:line="5498" pos:column="77">.</op:operator><name pos:line="5498" pos:column="78">MainCaret</name></name><argument_list pos:line="5498" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5498" pos:column="92">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5498" pos:column="96">Selection</name><op:operator pos:line="5498" pos:column="105">::</op:operator><name pos:line="5498" pos:column="107">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5499" pos:column="17">SetLastXChosen</name><argument_list pos:line="5499" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5500" pos:column="17">break;</break>
	</case><case pos:line="5501" pos:column="9">case <expr><name pos:line="5501" pos:column="14">SCI_HOMEDISPLAY</name></expr>:
		<expr_stmt><expr><call><name pos:line="5502" pos:column="17">MovePositionTo</name><argument_list pos:line="5502" pos:column="31">(<argument><expr><call><name pos:line="5502" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5502" pos:column="53">(
		            <argument><expr><call><name pos:line="5503" pos:column="29">StartEndDisplayLine</name><argument_list pos:line="5503" pos:column="48">(<argument><expr><call><name><name pos:line="5503" pos:column="49">sel</name><op:operator pos:line="5503" pos:column="52">.</op:operator><name pos:line="5503" pos:column="53">MainCaret</name></name><argument_list pos:line="5503" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5503" pos:column="66">true</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5503" pos:column="73">-</op:operator><lit:literal type="number" pos:line="5503" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5504" pos:column="17">SetLastXChosen</name><argument_list pos:line="5504" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5505" pos:column="17">break;</break>
	</case><case pos:line="5506" pos:column="9">case <expr><name pos:line="5506" pos:column="14">SCI_HOMEDISPLAYEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5507" pos:column="17">MovePositionTo</name><argument_list pos:line="5507" pos:column="31">(<argument><expr><call><name pos:line="5507" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5507" pos:column="53">(
		            <argument><expr><call><name pos:line="5508" pos:column="29">StartEndDisplayLine</name><argument_list pos:line="5508" pos:column="48">(<argument><expr><call><name><name pos:line="5508" pos:column="49">sel</name><op:operator pos:line="5508" pos:column="52">.</op:operator><name pos:line="5508" pos:column="53">MainCaret</name></name><argument_list pos:line="5508" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5508" pos:column="66">true</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="5508" pos:column="73">-</op:operator><lit:literal type="number" pos:line="5508" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5508" pos:column="78">Selection</name><op:operator pos:line="5508" pos:column="87">::</op:operator><name pos:line="5508" pos:column="89">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5509" pos:column="17">SetLastXChosen</name><argument_list pos:line="5509" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5510" pos:column="17">break;</break>
	</case><case pos:line="5511" pos:column="9">case <expr><name pos:line="5511" pos:column="14">SCI_LINEENDDISPLAY</name></expr>:
		<expr_stmt><expr><call><name pos:line="5512" pos:column="17">MovePositionTo</name><argument_list pos:line="5512" pos:column="31">(<argument><expr><call><name pos:line="5512" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5512" pos:column="53">(
		            <argument><expr><call><name pos:line="5513" pos:column="29">StartEndDisplayLine</name><argument_list pos:line="5513" pos:column="48">(<argument><expr><call><name><name pos:line="5513" pos:column="49">sel</name><op:operator pos:line="5513" pos:column="52">.</op:operator><name pos:line="5513" pos:column="53">MainCaret</name></name><argument_list pos:line="5513" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5513" pos:column="66">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5513" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5514" pos:column="17">SetLastXChosen</name><argument_list pos:line="5514" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5515" pos:column="17">break;</break>
	</case><case pos:line="5516" pos:column="9">case <expr><name pos:line="5516" pos:column="14">SCI_LINEENDDISPLAYEXTEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="5517" pos:column="17">MovePositionTo</name><argument_list pos:line="5517" pos:column="31">(<argument><expr><call><name pos:line="5517" pos:column="32">MovePositionSoVisible</name><argument_list pos:line="5517" pos:column="53">(
		            <argument><expr><call><name pos:line="5518" pos:column="29">StartEndDisplayLine</name><argument_list pos:line="5518" pos:column="48">(<argument><expr><call><name><name pos:line="5518" pos:column="49">sel</name><op:operator pos:line="5518" pos:column="52">.</op:operator><name pos:line="5518" pos:column="53">MainCaret</name></name><argument_list pos:line="5518" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5518" pos:column="66">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5518" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5518" pos:column="78">Selection</name><op:operator pos:line="5518" pos:column="87">::</op:operator><name pos:line="5518" pos:column="89">selStream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5519" pos:column="17">SetLastXChosen</name><argument_list pos:line="5519" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="5520" pos:column="17">break;</break>
	</case>}</block></switch>
	<return pos:line="5522" pos:column="9">return <expr><lit:literal type="number" pos:line="5522" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5525" pos:column="1">int</name></type> <name><name pos:line="5525" pos:column="5">Editor</name><op:operator pos:line="5525" pos:column="11">::</op:operator><name pos:line="5525" pos:column="13">KeyDefault</name></name><parameter_list pos:line="5525" pos:column="23">(<param><decl><type><name pos:line="5525" pos:column="24">int</name></type></decl></param>, <param><decl><type><name pos:line="5525" pos:column="29">int</name></type></decl></param>)</parameter_list> <block pos:line="5525" pos:column="34">{
	<return pos:line="5526" pos:column="9">return <expr><lit:literal type="number" pos:line="5526" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5529" pos:column="1">int</name></type> <name><name pos:line="5529" pos:column="5">Editor</name><op:operator pos:line="5529" pos:column="11">::</op:operator><name pos:line="5529" pos:column="13">KeyDownWithModifiers</name></name><parameter_list pos:line="5529" pos:column="33">(<param><decl><type><name pos:line="5529" pos:column="34">int</name></type> <name pos:line="5529" pos:column="38">key</name></decl></param>, <param><decl><type><name pos:line="5529" pos:column="43">int</name></type> <name pos:line="5529" pos:column="47">modifiers</name></decl></param>, <param><decl><type><name pos:line="5529" pos:column="58">bool</name> <type:modifier pos:line="5529" pos:column="63">*</type:modifier></type><name pos:line="5529" pos:column="64">consumed</name></decl></param>)</parameter_list> <block pos:line="5529" pos:column="74">{
	<expr_stmt><expr><call><name pos:line="5530" pos:column="9">DwellEnd</name><argument_list pos:line="5530" pos:column="17">(<argument><expr><lit:literal type="boolean" pos:line="5530" pos:column="18">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="5531" pos:column="9">int</name></type> <name pos:line="5531" pos:column="13">msg</name> <init pos:line="5531" pos:column="17">= <expr><call><name><name pos:line="5531" pos:column="19">kmap</name><op:operator pos:line="5531" pos:column="23">.</op:operator><name pos:line="5531" pos:column="24">Find</name></name><argument_list pos:line="5531" pos:column="28">(<argument><expr><name pos:line="5531" pos:column="29">key</name></expr></argument>, <argument><expr><name pos:line="5531" pos:column="34">modifiers</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="5532" pos:column="9">if <condition pos:line="5532" pos:column="12">(<expr><name pos:line="5532" pos:column="13">msg</name></expr>)</condition><then pos:line="5532" pos:column="17"> <block pos:line="5532" pos:column="18">{
		<if pos:line="5533" pos:column="17">if <condition pos:line="5533" pos:column="20">(<expr><name pos:line="5533" pos:column="21">consumed</name></expr>)</condition><then pos:line="5533" pos:column="30">
			<expr_stmt><expr><op:operator pos:line="5534" pos:column="25">*</op:operator><name pos:line="5534" pos:column="26">consumed</name> <op:operator pos:line="5534" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="5534" pos:column="37">true</lit:literal></expr>;</expr_stmt></then></if>
		<return pos:line="5535" pos:column="17">return <expr><call><name pos:line="5535" pos:column="24">WndProc</name><argument_list pos:line="5535" pos:column="31">(<argument><expr><name pos:line="5535" pos:column="32">msg</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5535" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5535" pos:column="40">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then> <else pos:line="5536" pos:column="11">else <block pos:line="5536" pos:column="16">{
		<if pos:line="5537" pos:column="17">if <condition pos:line="5537" pos:column="20">(<expr><name pos:line="5537" pos:column="21">consumed</name></expr>)</condition><then pos:line="5537" pos:column="30">
			<expr_stmt><expr><op:operator pos:line="5538" pos:column="25">*</op:operator><name pos:line="5538" pos:column="26">consumed</name> <op:operator pos:line="5538" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="5538" pos:column="37">false</lit:literal></expr>;</expr_stmt></then></if>
		<return pos:line="5539" pos:column="17">return <expr><call><name pos:line="5539" pos:column="24">KeyDefault</name><argument_list pos:line="5539" pos:column="34">(<argument><expr><name pos:line="5539" pos:column="35">key</name></expr></argument>, <argument><expr><name pos:line="5539" pos:column="40">modifiers</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="5543" pos:column="1">int</name></type> <name><name pos:line="5543" pos:column="5">Editor</name><op:operator pos:line="5543" pos:column="11">::</op:operator><name pos:line="5543" pos:column="13">KeyDown</name></name><parameter_list pos:line="5543" pos:column="20">(<param><decl><type><name pos:line="5543" pos:column="21">int</name></type> <name pos:line="5543" pos:column="25">key</name></decl></param>, <param><decl><type><name pos:line="5543" pos:column="30">bool</name></type> <name pos:line="5543" pos:column="35">shift</name></decl></param>, <param><decl><type><name pos:line="5543" pos:column="42">bool</name></type> <name pos:line="5543" pos:column="47">ctrl</name></decl></param>, <param><decl><type><name pos:line="5543" pos:column="53">bool</name></type> <name pos:line="5543" pos:column="58">alt</name></decl></param>, <param><decl><type><name pos:line="5543" pos:column="63">bool</name> <type:modifier pos:line="5543" pos:column="68">*</type:modifier></type><name pos:line="5543" pos:column="69">consumed</name></decl></param>)</parameter_list> <block pos:line="5543" pos:column="79">{
	<decl_stmt><decl><type><name pos:line="5544" pos:column="9">int</name></type> <name pos:line="5544" pos:column="13">modifiers</name> <init pos:line="5544" pos:column="23">= <expr><op:operator pos:line="5544" pos:column="25">(</op:operator><name pos:line="5544" pos:column="26">shift</name> <op:operator pos:line="5544" pos:column="32">?</op:operator> <name pos:line="5544" pos:column="34">SCI_SHIFT</name> <op:operator pos:line="5544" pos:column="44">:</op:operator> <lit:literal type="number" pos:line="5544" pos:column="46">0</lit:literal><op:operator pos:line="5544" pos:column="47">)</op:operator> <op:operator pos:line="5544" pos:column="49">|</op:operator> <op:operator pos:line="5544" pos:column="51">(</op:operator><name pos:line="5544" pos:column="52">ctrl</name> <op:operator pos:line="5544" pos:column="57">?</op:operator> <name pos:line="5544" pos:column="59">SCI_CTRL</name> <op:operator pos:line="5544" pos:column="68">:</op:operator> <lit:literal type="number" pos:line="5544" pos:column="70">0</lit:literal><op:operator pos:line="5544" pos:column="71">)</op:operator> <op:operator pos:line="5544" pos:column="73">|</op:operator>
	        <op:operator pos:line="5545" pos:column="17">(</op:operator><name pos:line="5545" pos:column="18">alt</name> <op:operator pos:line="5545" pos:column="22">?</op:operator> <name pos:line="5545" pos:column="24">SCI_ALT</name> <op:operator pos:line="5545" pos:column="32">:</op:operator> <lit:literal type="number" pos:line="5545" pos:column="34">0</lit:literal><op:operator pos:line="5545" pos:column="35">)</op:operator></expr></init></decl>;</decl_stmt>
	<return pos:line="5546" pos:column="9">return <expr><call><name pos:line="5546" pos:column="16">KeyDownWithModifiers</name><argument_list pos:line="5546" pos:column="36">(<argument><expr><name pos:line="5546" pos:column="37">key</name></expr></argument>, <argument><expr><name pos:line="5546" pos:column="42">modifiers</name></expr></argument>, <argument><expr><name pos:line="5546" pos:column="53">consumed</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="5549" pos:column="1">void</name></type> <name><name pos:line="5549" pos:column="6">Editor</name><op:operator pos:line="5549" pos:column="12">::</op:operator><name pos:line="5549" pos:column="14">SetWhitespaceVisible</name></name><parameter_list pos:line="5549" pos:column="34">(<param><decl><type><name pos:line="5549" pos:column="35">int</name></type> <name pos:line="5549" pos:column="39">view</name></decl></param>)</parameter_list> <block pos:line="5549" pos:column="45">{
	<expr_stmt><expr><name><name pos:line="5550" pos:column="9">vs</name><op:operator pos:line="5550" pos:column="11">.</op:operator><name pos:line="5550" pos:column="12">viewWhitespace</name></name> <op:operator pos:line="5550" pos:column="27">=</op:operator> <call><name><name pos:line="5550" pos:column="29">static_cast</name><argument_list pos:line="5550" pos:column="40">&lt;<argument><expr><name pos:line="5550" pos:column="41">WhiteSpaceVisibility</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="5550" pos:column="62">(<argument><expr><name pos:line="5550" pos:column="63">view</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="5553" pos:column="1">int</name></type> <name><name pos:line="5553" pos:column="5">Editor</name><op:operator pos:line="5553" pos:column="11">::</op:operator><name pos:line="5553" pos:column="13">GetWhitespaceVisible</name></name><parameter_list pos:line="5553" pos:column="33">()</parameter_list> <block pos:line="5553" pos:column="36">{
	<return pos:line="5554" pos:column="9">return <expr><name><name pos:line="5554" pos:column="16">vs</name><op:operator pos:line="5554" pos:column="18">.</op:operator><name pos:line="5554" pos:column="19">viewWhitespace</name></name></expr>;</return>
}</block></function>

<function><type><name pos:line="5557" pos:column="1">void</name></type> <name><name pos:line="5557" pos:column="6">Editor</name><op:operator pos:line="5557" pos:column="12">::</op:operator><name pos:line="5557" pos:column="14">Indent</name></name><parameter_list pos:line="5557" pos:column="20">(<param><decl><type><name pos:line="5557" pos:column="21">bool</name></type> <name pos:line="5557" pos:column="26">forwards</name></decl></param>)</parameter_list> <block pos:line="5557" pos:column="36">{
	<for pos:line="5558" pos:column="9">for (<init><decl><type><name pos:line="5558" pos:column="14">size_t</name></type> <name pos:line="5558" pos:column="21">r</name><init pos:line="5558" pos:column="22">=<expr><lit:literal type="number" pos:line="5558" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5558" pos:column="26">r</name><op:operator pos:line="5558" pos:column="27">&lt;</op:operator><call><name><name pos:line="5558" pos:column="28">sel</name><op:operator pos:line="5558" pos:column="31">.</op:operator><name pos:line="5558" pos:column="32">Count</name></name><argument_list pos:line="5558" pos:column="37">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5558" pos:column="41">r</name><op:operator pos:line="5558" pos:column="42">++</op:operator></expr></incr>) <block pos:line="5558" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="5559" pos:column="17">int</name></type> <name pos:line="5559" pos:column="21">lineOfAnchor</name> <init pos:line="5559" pos:column="34">= <expr><call><name><name pos:line="5559" pos:column="36">pdoc</name><op:operator pos:line="5559" pos:column="40">-&gt;</op:operator><name pos:line="5559" pos:column="42">LineFromPosition</name></name><argument_list pos:line="5559" pos:column="58">(<argument><expr><call><name><name pos:line="5559" pos:column="59">sel</name><op:operator pos:line="5559" pos:column="62">.</op:operator><name pos:line="5559" pos:column="63">Range</name></name><argument_list pos:line="5559" pos:column="68">(<argument><expr><name pos:line="5559" pos:column="69">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5559" pos:column="71">.</op:operator><call><name><name pos:line="5559" pos:column="72">anchor</name><op:operator pos:line="5559" pos:column="78">.</op:operator><name pos:line="5559" pos:column="79">Position</name></name><argument_list pos:line="5559" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5560" pos:column="17">int</name></type> <name pos:line="5560" pos:column="21">caretPosition</name> <init pos:line="5560" pos:column="35">= <expr><call><name><name pos:line="5560" pos:column="37">sel</name><op:operator pos:line="5560" pos:column="40">.</op:operator><name pos:line="5560" pos:column="41">Range</name></name><argument_list pos:line="5560" pos:column="46">(<argument><expr><name pos:line="5560" pos:column="47">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5560" pos:column="49">.</op:operator><call><name><name pos:line="5560" pos:column="50">caret</name><op:operator pos:line="5560" pos:column="55">.</op:operator><name pos:line="5560" pos:column="56">Position</name></name><argument_list pos:line="5560" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5561" pos:column="17">int</name></type> <name pos:line="5561" pos:column="21">lineCurrentPos</name> <init pos:line="5561" pos:column="36">= <expr><call><name><name pos:line="5561" pos:column="38">pdoc</name><op:operator pos:line="5561" pos:column="42">-&gt;</op:operator><name pos:line="5561" pos:column="44">LineFromPosition</name></name><argument_list pos:line="5561" pos:column="60">(<argument><expr><name pos:line="5561" pos:column="61">caretPosition</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="5562" pos:column="17">if <condition pos:line="5562" pos:column="20">(<expr><name pos:line="5562" pos:column="21">lineOfAnchor</name> <op:operator pos:line="5562" pos:column="34">==</op:operator> <name pos:line="5562" pos:column="37">lineCurrentPos</name></expr>)</condition><then pos:line="5562" pos:column="52"> <block pos:line="5562" pos:column="53">{
			<if pos:line="5563" pos:column="25">if <condition pos:line="5563" pos:column="28">(<expr><name pos:line="5563" pos:column="29">forwards</name></expr>)</condition><then pos:line="5563" pos:column="38"> <block pos:line="5563" pos:column="39">{
				<function_decl><type><name pos:line="5564" pos:column="33">UndoGroup</name></type> <name pos:line="5564" pos:column="43">ug</name><parameter_list pos:line="5564" pos:column="45">(<param><decl><type><name pos:line="5564" pos:column="46">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
				<expr_stmt><expr><call><name><name pos:line="5565" pos:column="33">pdoc</name><op:operator pos:line="5565" pos:column="37">-&gt;</op:operator><name pos:line="5565" pos:column="39">DeleteChars</name></name><argument_list pos:line="5565" pos:column="50">(<argument><expr><call><name><name pos:line="5565" pos:column="51">sel</name><op:operator pos:line="5565" pos:column="54">.</op:operator><name pos:line="5565" pos:column="55">Range</name></name><argument_list pos:line="5565" pos:column="60">(<argument><expr><name pos:line="5565" pos:column="61">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5565" pos:column="63">.</op:operator><call><name pos:line="5565" pos:column="64">Start</name><argument_list pos:line="5565" pos:column="69">()</argument_list></call><op:operator pos:line="5565" pos:column="71">.</op:operator><call><name pos:line="5565" pos:column="72">Position</name><argument_list pos:line="5565" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5565" pos:column="84">sel</name><op:operator pos:line="5565" pos:column="87">.</op:operator><name pos:line="5565" pos:column="88">Range</name></name><argument_list pos:line="5565" pos:column="93">(<argument><expr><name pos:line="5565" pos:column="94">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5565" pos:column="96">.</op:operator><call><name pos:line="5565" pos:column="97">Length</name><argument_list pos:line="5565" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="5566" pos:column="33">caretPosition</name> <op:operator pos:line="5566" pos:column="47">=</op:operator> <call><name><name pos:line="5566" pos:column="49">sel</name><op:operator pos:line="5566" pos:column="52">.</op:operator><name pos:line="5566" pos:column="53">Range</name></name><argument_list pos:line="5566" pos:column="58">(<argument><expr><name pos:line="5566" pos:column="59">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5566" pos:column="61">.</op:operator><call><name><name pos:line="5566" pos:column="62">caret</name><op:operator pos:line="5566" pos:column="67">.</op:operator><name pos:line="5566" pos:column="68">Position</name></name><argument_list pos:line="5566" pos:column="76">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="5567" pos:column="33">if <condition pos:line="5567" pos:column="36">(<expr><call><name><name pos:line="5567" pos:column="37">pdoc</name><op:operator pos:line="5567" pos:column="41">-&gt;</op:operator><name pos:line="5567" pos:column="43">GetColumn</name></name><argument_list pos:line="5567" pos:column="52">(<argument><expr><name pos:line="5567" pos:column="53">caretPosition</name></expr></argument>)</argument_list></call> <op:operator pos:line="5567" pos:column="68">&lt;=</op:operator> <call><name><name pos:line="5567" pos:column="71">pdoc</name><op:operator pos:line="5567" pos:column="75">-&gt;</op:operator><name pos:line="5567" pos:column="77">GetColumn</name></name><argument_list pos:line="5567" pos:column="86">(<argument><expr><call><name><name pos:line="5567" pos:column="87">pdoc</name><op:operator pos:line="5567" pos:column="91">-&gt;</op:operator><name pos:line="5567" pos:column="93">GetLineIndentPosition</name></name><argument_list pos:line="5567" pos:column="114">(<argument><expr><name pos:line="5567" pos:column="115">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5567" pos:column="132">&amp;&amp;</op:operator>
						<name><name pos:line="5568" pos:column="49">pdoc</name><op:operator pos:line="5568" pos:column="53">-&gt;</op:operator><name pos:line="5568" pos:column="55">tabIndents</name></name></expr>)</condition><then pos:line="5568" pos:column="66"> <block pos:line="5568" pos:column="67">{
					<decl_stmt><decl><type><name pos:line="5569" pos:column="41">int</name></type> <name pos:line="5569" pos:column="45">indentation</name> <init pos:line="5569" pos:column="57">= <expr><call><name><name pos:line="5569" pos:column="59">pdoc</name><op:operator pos:line="5569" pos:column="63">-&gt;</op:operator><name pos:line="5569" pos:column="65">GetLineIndentation</name></name><argument_list pos:line="5569" pos:column="83">(<argument><expr><name pos:line="5569" pos:column="84">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="5570" pos:column="41">int</name></type> <name pos:line="5570" pos:column="45">indentationStep</name> <init pos:line="5570" pos:column="61">= <expr><call><name><name pos:line="5570" pos:column="63">pdoc</name><op:operator pos:line="5570" pos:column="67">-&gt;</op:operator><name pos:line="5570" pos:column="69">IndentSize</name></name><argument_list pos:line="5570" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="5571" pos:column="41">pdoc</name><op:operator pos:line="5571" pos:column="45">-&gt;</op:operator><name pos:line="5571" pos:column="47">SetLineIndentation</name></name><argument_list pos:line="5571" pos:column="65">(<argument><expr><name pos:line="5571" pos:column="66">lineCurrentPos</name></expr></argument>, <argument><expr><name pos:line="5571" pos:column="82">indentation</name> <op:operator pos:line="5571" pos:column="94">+</op:operator> <name pos:line="5571" pos:column="96">indentationStep</name> <op:operator pos:line="5571" pos:column="112">-</op:operator> <name pos:line="5571" pos:column="114">indentation</name> <op:operator pos:line="5571" pos:column="126">%</op:operator> <name pos:line="5571" pos:column="128">indentationStep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="5572" pos:column="41">sel</name><op:operator pos:line="5572" pos:column="44">.</op:operator><name pos:line="5572" pos:column="45">Range</name></name><argument_list pos:line="5572" pos:column="50">(<argument><expr><name pos:line="5572" pos:column="51">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5572" pos:column="54">=</op:operator> <call><name pos:line="5572" pos:column="56">SelectionRange</name><argument_list pos:line="5572" pos:column="70">(<argument><expr><call><name><name pos:line="5572" pos:column="71">pdoc</name><op:operator pos:line="5572" pos:column="75">-&gt;</op:operator><name pos:line="5572" pos:column="77">GetLineIndentPosition</name></name><argument_list pos:line="5572" pos:column="98">(<argument><expr><name pos:line="5572" pos:column="99">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="5573" pos:column="35">else <block pos:line="5573" pos:column="40">{
					<if pos:line="5574" pos:column="41">if <condition pos:line="5574" pos:column="44">(<expr><name><name pos:line="5574" pos:column="45">pdoc</name><op:operator pos:line="5574" pos:column="49">-&gt;</op:operator><name pos:line="5574" pos:column="51">useTabs</name></name></expr>)</condition><then pos:line="5574" pos:column="59"> <block pos:line="5574" pos:column="60">{
						<expr_stmt><expr><call><name><name pos:line="5575" pos:column="49">pdoc</name><op:operator pos:line="5575" pos:column="53">-&gt;</op:operator><name pos:line="5575" pos:column="55">InsertChar</name></name><argument_list pos:line="5575" pos:column="65">(<argument><expr><name pos:line="5575" pos:column="66">caretPosition</name></expr></argument>, <argument><expr><lit:literal type="char" pos:line="5575" pos:column="81">'\t'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="5576" pos:column="49">sel</name><op:operator pos:line="5576" pos:column="52">.</op:operator><name pos:line="5576" pos:column="53">Range</name></name><argument_list pos:line="5576" pos:column="58">(<argument><expr><name pos:line="5576" pos:column="59">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5576" pos:column="62">=</op:operator> <call><name pos:line="5576" pos:column="64">SelectionRange</name><argument_list pos:line="5576" pos:column="78">(<argument><expr><name pos:line="5576" pos:column="79">caretPosition</name><op:operator pos:line="5576" pos:column="92">+</op:operator><lit:literal type="number" pos:line="5576" pos:column="93">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then> <else pos:line="5577" pos:column="43">else <block pos:line="5577" pos:column="48">{
						<decl_stmt><decl><type><name pos:line="5578" pos:column="49">int</name></type> <name pos:line="5578" pos:column="53">numSpaces</name> <init pos:line="5578" pos:column="63">= <expr><op:operator pos:line="5578" pos:column="65">(</op:operator><name><name pos:line="5578" pos:column="66">pdoc</name><op:operator pos:line="5578" pos:column="70">-&gt;</op:operator><name pos:line="5578" pos:column="72">tabInChars</name></name><op:operator pos:line="5578" pos:column="82">)</op:operator> <op:operator pos:line="5578" pos:column="84">-</op:operator>
								<op:operator pos:line="5579" pos:column="65">(</op:operator><call><name><name pos:line="5579" pos:column="66">pdoc</name><op:operator pos:line="5579" pos:column="70">-&gt;</op:operator><name pos:line="5579" pos:column="72">GetColumn</name></name><argument_list pos:line="5579" pos:column="81">(<argument><expr><name pos:line="5579" pos:column="82">caretPosition</name></expr></argument>)</argument_list></call> <op:operator pos:line="5579" pos:column="97">%</op:operator> <op:operator pos:line="5579" pos:column="99">(</op:operator><name><name pos:line="5579" pos:column="100">pdoc</name><op:operator pos:line="5579" pos:column="104">-&gt;</op:operator><name pos:line="5579" pos:column="106">tabInChars</name></name><op:operator pos:line="5579" pos:column="116">)</op:operator><op:operator pos:line="5579" pos:column="117">)</op:operator></expr></init></decl>;</decl_stmt>
						<if pos:line="5580" pos:column="49">if <condition pos:line="5580" pos:column="52">(<expr><name pos:line="5580" pos:column="53">numSpaces</name> <op:operator pos:line="5580" pos:column="63">&lt;</op:operator> <lit:literal type="number" pos:line="5580" pos:column="65">1</lit:literal></expr>)</condition><then pos:line="5580" pos:column="67">
							<expr_stmt><expr><name pos:line="5581" pos:column="57">numSpaces</name> <op:operator pos:line="5581" pos:column="67">=</op:operator> <name><name pos:line="5581" pos:column="69">pdoc</name><op:operator pos:line="5581" pos:column="73">-&gt;</op:operator><name pos:line="5581" pos:column="75">tabInChars</name></name></expr>;</expr_stmt></then></if>
						<for pos:line="5582" pos:column="49">for (<init><decl><type><name pos:line="5582" pos:column="54">int</name></type> <name pos:line="5582" pos:column="58">i</name> <init pos:line="5582" pos:column="60">= <expr><lit:literal type="number" pos:line="5582" pos:column="62">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5582" pos:column="65">i</name> <op:operator pos:line="5582" pos:column="67">&lt;</op:operator> <name pos:line="5582" pos:column="69">numSpaces</name></expr>;</condition> <incr><expr><name pos:line="5582" pos:column="80">i</name><op:operator pos:line="5582" pos:column="81">++</op:operator></expr></incr>) <block pos:line="5582" pos:column="85">{
							<expr_stmt><expr><call><name><name pos:line="5583" pos:column="57">pdoc</name><op:operator pos:line="5583" pos:column="61">-&gt;</op:operator><name pos:line="5583" pos:column="63">InsertChar</name></name><argument_list pos:line="5583" pos:column="73">(<argument><expr><name pos:line="5583" pos:column="74">caretPosition</name> <op:operator pos:line="5583" pos:column="88">+</op:operator> <name pos:line="5583" pos:column="90">i</name></expr></argument>, <argument><expr><lit:literal type="char" pos:line="5583" pos:column="93">' '</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></for>
						<expr_stmt><expr><call><name><name pos:line="5585" pos:column="49">sel</name><op:operator pos:line="5585" pos:column="52">.</op:operator><name pos:line="5585" pos:column="53">Range</name></name><argument_list pos:line="5585" pos:column="58">(<argument><expr><name pos:line="5585" pos:column="59">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5585" pos:column="62">=</op:operator> <call><name pos:line="5585" pos:column="64">SelectionRange</name><argument_list pos:line="5585" pos:column="78">(<argument><expr><name pos:line="5585" pos:column="79">caretPosition</name><op:operator pos:line="5585" pos:column="92">+</op:operator><name pos:line="5585" pos:column="93">numSpaces</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				}</block></else></if>
			}</block></then> <else pos:line="5588" pos:column="27">else <block pos:line="5588" pos:column="32">{
				<if pos:line="5589" pos:column="33">if <condition pos:line="5589" pos:column="36">(<expr><call><name><name pos:line="5589" pos:column="37">pdoc</name><op:operator pos:line="5589" pos:column="41">-&gt;</op:operator><name pos:line="5589" pos:column="43">GetColumn</name></name><argument_list pos:line="5589" pos:column="52">(<argument><expr><name pos:line="5589" pos:column="53">caretPosition</name></expr></argument>)</argument_list></call> <op:operator pos:line="5589" pos:column="68">&lt;=</op:operator> <call><name><name pos:line="5589" pos:column="71">pdoc</name><op:operator pos:line="5589" pos:column="75">-&gt;</op:operator><name pos:line="5589" pos:column="77">GetLineIndentation</name></name><argument_list pos:line="5589" pos:column="95">(<argument><expr><name pos:line="5589" pos:column="96">lineCurrentPos</name></expr></argument>)</argument_list></call> <op:operator pos:line="5589" pos:column="112">&amp;&amp;</op:operator>
						<name><name pos:line="5590" pos:column="49">pdoc</name><op:operator pos:line="5590" pos:column="53">-&gt;</op:operator><name pos:line="5590" pos:column="55">tabIndents</name></name></expr>)</condition><then pos:line="5590" pos:column="66"> <block pos:line="5590" pos:column="67">{
					<function_decl><type><name pos:line="5591" pos:column="41">UndoGroup</name></type> <name pos:line="5591" pos:column="51">ug</name><parameter_list pos:line="5591" pos:column="53">(<param><decl><type><name pos:line="5591" pos:column="54">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
					<decl_stmt><decl><type><name pos:line="5592" pos:column="41">int</name></type> <name pos:line="5592" pos:column="45">indentation</name> <init pos:line="5592" pos:column="57">= <expr><call><name><name pos:line="5592" pos:column="59">pdoc</name><op:operator pos:line="5592" pos:column="63">-&gt;</op:operator><name pos:line="5592" pos:column="65">GetLineIndentation</name></name><argument_list pos:line="5592" pos:column="83">(<argument><expr><name pos:line="5592" pos:column="84">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="5593" pos:column="41">int</name></type> <name pos:line="5593" pos:column="45">indentationStep</name> <init pos:line="5593" pos:column="61">= <expr><call><name><name pos:line="5593" pos:column="63">pdoc</name><op:operator pos:line="5593" pos:column="67">-&gt;</op:operator><name pos:line="5593" pos:column="69">IndentSize</name></name><argument_list pos:line="5593" pos:column="79">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="5594" pos:column="41">pdoc</name><op:operator pos:line="5594" pos:column="45">-&gt;</op:operator><name pos:line="5594" pos:column="47">SetLineIndentation</name></name><argument_list pos:line="5594" pos:column="65">(<argument><expr><name pos:line="5594" pos:column="66">lineCurrentPos</name></expr></argument>, <argument><expr><name pos:line="5594" pos:column="82">indentation</name> <op:operator pos:line="5594" pos:column="94">-</op:operator> <name pos:line="5594" pos:column="96">indentationStep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="5595" pos:column="41">sel</name><op:operator pos:line="5595" pos:column="44">.</op:operator><name pos:line="5595" pos:column="45">Range</name></name><argument_list pos:line="5595" pos:column="50">(<argument><expr><name pos:line="5595" pos:column="51">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5595" pos:column="54">=</op:operator> <call><name pos:line="5595" pos:column="56">SelectionRange</name><argument_list pos:line="5595" pos:column="70">(<argument><expr><call><name><name pos:line="5595" pos:column="71">pdoc</name><op:operator pos:line="5595" pos:column="75">-&gt;</op:operator><name pos:line="5595" pos:column="77">GetLineIndentPosition</name></name><argument_list pos:line="5595" pos:column="98">(<argument><expr><name pos:line="5595" pos:column="99">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="5596" pos:column="35">else <block pos:line="5596" pos:column="40">{
					<decl_stmt><decl><type><name pos:line="5597" pos:column="41">int</name></type> <name pos:line="5597" pos:column="45">newColumn</name> <init pos:line="5597" pos:column="55">= <expr><op:operator pos:line="5597" pos:column="57">(</op:operator><op:operator pos:line="5597" pos:column="58">(</op:operator><call><name><name pos:line="5597" pos:column="59">pdoc</name><op:operator pos:line="5597" pos:column="63">-&gt;</op:operator><name pos:line="5597" pos:column="65">GetColumn</name></name><argument_list pos:line="5597" pos:column="74">(<argument><expr><name pos:line="5597" pos:column="75">caretPosition</name></expr></argument>)</argument_list></call> <op:operator pos:line="5597" pos:column="90">-</op:operator> <lit:literal type="number" pos:line="5597" pos:column="92">1</lit:literal><op:operator pos:line="5597" pos:column="93">)</op:operator> <op:operator pos:line="5597" pos:column="95">/</op:operator> <name><name pos:line="5597" pos:column="97">pdoc</name><op:operator pos:line="5597" pos:column="101">-&gt;</op:operator><name pos:line="5597" pos:column="103">tabInChars</name></name><op:operator pos:line="5597" pos:column="113">)</op:operator> <op:operator pos:line="5597" pos:column="115">*</op:operator>
							<name><name pos:line="5598" pos:column="57">pdoc</name><op:operator pos:line="5598" pos:column="61">-&gt;</op:operator><name pos:line="5598" pos:column="63">tabInChars</name></name></expr></init></decl>;</decl_stmt>
					<if pos:line="5599" pos:column="41">if <condition pos:line="5599" pos:column="44">(<expr><name pos:line="5599" pos:column="45">newColumn</name> <op:operator pos:line="5599" pos:column="55">&lt;</op:operator> <lit:literal type="number" pos:line="5599" pos:column="57">0</lit:literal></expr>)</condition><then pos:line="5599" pos:column="59">
						<expr_stmt><expr><name pos:line="5600" pos:column="49">newColumn</name> <op:operator pos:line="5600" pos:column="59">=</op:operator> <lit:literal type="number" pos:line="5600" pos:column="61">0</lit:literal></expr>;</expr_stmt></then></if>
					<decl_stmt><decl><type><name pos:line="5601" pos:column="41">int</name></type> <name pos:line="5601" pos:column="45">newPos</name> <init pos:line="5601" pos:column="52">= <expr><name pos:line="5601" pos:column="54">caretPosition</name></expr></init></decl>;</decl_stmt>
					<while pos:line="5602" pos:column="41">while <condition pos:line="5602" pos:column="47">(<expr><call><name><name pos:line="5602" pos:column="48">pdoc</name><op:operator pos:line="5602" pos:column="52">-&gt;</op:operator><name pos:line="5602" pos:column="54">GetColumn</name></name><argument_list pos:line="5602" pos:column="63">(<argument><expr><name pos:line="5602" pos:column="64">newPos</name></expr></argument>)</argument_list></call> <op:operator pos:line="5602" pos:column="72">&gt;</op:operator> <name pos:line="5602" pos:column="74">newColumn</name></expr>)</condition>
						<expr_stmt><expr><name pos:line="5603" pos:column="49">newPos</name><op:operator pos:line="5603" pos:column="55">--</op:operator></expr>;</expr_stmt></while>
					<expr_stmt><expr><call><name><name pos:line="5604" pos:column="41">sel</name><op:operator pos:line="5604" pos:column="44">.</op:operator><name pos:line="5604" pos:column="45">Range</name></name><argument_list pos:line="5604" pos:column="50">(<argument><expr><name pos:line="5604" pos:column="51">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5604" pos:column="54">=</op:operator> <call><name pos:line="5604" pos:column="56">SelectionRange</name><argument_list pos:line="5604" pos:column="70">(<argument><expr><name pos:line="5604" pos:column="71">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></else></if>
		}</block></then> <else pos:line="5607" pos:column="19">else <block pos:line="5607" pos:column="24">{	<comment type="line" pos:line="5607" pos:column="33">// Multiline</comment>
			<decl_stmt><decl><type><name pos:line="5608" pos:column="25">int</name></type> <name pos:line="5608" pos:column="29">anchorPosOnLine</name> <init pos:line="5608" pos:column="45">= <expr><call><name><name pos:line="5608" pos:column="47">sel</name><op:operator pos:line="5608" pos:column="50">.</op:operator><name pos:line="5608" pos:column="51">Range</name></name><argument_list pos:line="5608" pos:column="56">(<argument><expr><name pos:line="5608" pos:column="57">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5608" pos:column="59">.</op:operator><call><name><name pos:line="5608" pos:column="60">anchor</name><op:operator pos:line="5608" pos:column="66">.</op:operator><name pos:line="5608" pos:column="67">Position</name></name><argument_list pos:line="5608" pos:column="75">()</argument_list></call> <op:operator pos:line="5608" pos:column="78">-</op:operator> <call><name><name pos:line="5608" pos:column="80">pdoc</name><op:operator pos:line="5608" pos:column="84">-&gt;</op:operator><name pos:line="5608" pos:column="86">LineStart</name></name><argument_list pos:line="5608" pos:column="95">(<argument><expr><name pos:line="5608" pos:column="96">lineOfAnchor</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5609" pos:column="25">int</name></type> <name pos:line="5609" pos:column="29">currentPosPosOnLine</name> <init pos:line="5609" pos:column="49">= <expr><name pos:line="5609" pos:column="51">caretPosition</name> <op:operator pos:line="5609" pos:column="65">-</op:operator> <call><name><name pos:line="5609" pos:column="67">pdoc</name><op:operator pos:line="5609" pos:column="71">-&gt;</op:operator><name pos:line="5609" pos:column="73">LineStart</name></name><argument_list pos:line="5609" pos:column="82">(<argument><expr><name pos:line="5609" pos:column="83">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="5610" pos:column="25">// Multiple lines selected so indent / dedent</comment>
			<decl_stmt><decl><type><name pos:line="5611" pos:column="25">int</name></type> <name pos:line="5611" pos:column="29">lineTopSel</name> <init pos:line="5611" pos:column="40">= <expr><call><name><name pos:line="5611" pos:column="42">Platform</name><op:operator pos:line="5611" pos:column="50">::</op:operator><name pos:line="5611" pos:column="52">Minimum</name></name><argument_list pos:line="5611" pos:column="59">(<argument><expr><name pos:line="5611" pos:column="60">lineOfAnchor</name></expr></argument>, <argument><expr><name pos:line="5611" pos:column="74">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5612" pos:column="25">int</name></type> <name pos:line="5612" pos:column="29">lineBottomSel</name> <init pos:line="5612" pos:column="43">= <expr><call><name><name pos:line="5612" pos:column="45">Platform</name><op:operator pos:line="5612" pos:column="53">::</op:operator><name pos:line="5612" pos:column="55">Maximum</name></name><argument_list pos:line="5612" pos:column="62">(<argument><expr><name pos:line="5612" pos:column="63">lineOfAnchor</name></expr></argument>, <argument><expr><name pos:line="5612" pos:column="77">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="5613" pos:column="25">if <condition pos:line="5613" pos:column="28">(<expr><call><name><name pos:line="5613" pos:column="29">pdoc</name><op:operator pos:line="5613" pos:column="33">-&gt;</op:operator><name pos:line="5613" pos:column="35">LineStart</name></name><argument_list pos:line="5613" pos:column="44">(<argument><expr><name pos:line="5613" pos:column="45">lineBottomSel</name></expr></argument>)</argument_list></call> <op:operator pos:line="5613" pos:column="60">==</op:operator> <call><name><name pos:line="5613" pos:column="63">sel</name><op:operator pos:line="5613" pos:column="66">.</op:operator><name pos:line="5613" pos:column="67">Range</name></name><argument_list pos:line="5613" pos:column="72">(<argument><expr><name pos:line="5613" pos:column="73">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5613" pos:column="75">.</op:operator><call><name><name pos:line="5613" pos:column="76">anchor</name><op:operator pos:line="5613" pos:column="82">.</op:operator><name pos:line="5613" pos:column="83">Position</name></name><argument_list pos:line="5613" pos:column="91">()</argument_list></call> <op:operator pos:line="5613" pos:column="94">||</op:operator> <call><name><name pos:line="5613" pos:column="97">pdoc</name><op:operator pos:line="5613" pos:column="101">-&gt;</op:operator><name pos:line="5613" pos:column="103">LineStart</name></name><argument_list pos:line="5613" pos:column="112">(<argument><expr><name pos:line="5613" pos:column="113">lineBottomSel</name></expr></argument>)</argument_list></call> <op:operator pos:line="5613" pos:column="128">==</op:operator> <name pos:line="5613" pos:column="131">caretPosition</name></expr>)</condition><then pos:line="5613" pos:column="145">
				<expr_stmt><expr><name pos:line="5614" pos:column="33">lineBottomSel</name><op:operator pos:line="5614" pos:column="46">--</op:operator></expr>;</expr_stmt></then></if>  	<comment type="line" pos:line="5614" pos:column="57">// If not selecting any characters on a line, do not indent</comment>
			<block pos:line="5615" pos:column="25">{
				<function_decl><type><name pos:line="5616" pos:column="33">UndoGroup</name></type> <name pos:line="5616" pos:column="43">ug</name><parameter_list pos:line="5616" pos:column="45">(<param><decl><type><name pos:line="5616" pos:column="46">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
				<expr_stmt><expr><call><name><name pos:line="5617" pos:column="33">pdoc</name><op:operator pos:line="5617" pos:column="37">-&gt;</op:operator><name pos:line="5617" pos:column="39">Indent</name></name><argument_list pos:line="5617" pos:column="45">(<argument><expr><name pos:line="5617" pos:column="46">forwards</name></expr></argument>, <argument><expr><name pos:line="5617" pos:column="56">lineBottomSel</name></expr></argument>, <argument><expr><name pos:line="5617" pos:column="71">lineTopSel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
			<if pos:line="5619" pos:column="25">if <condition pos:line="5619" pos:column="28">(<expr><name pos:line="5619" pos:column="29">lineOfAnchor</name> <op:operator pos:line="5619" pos:column="42">&lt;</op:operator> <name pos:line="5619" pos:column="44">lineCurrentPos</name></expr>)</condition><then pos:line="5619" pos:column="59"> <block pos:line="5619" pos:column="60">{
				<if pos:line="5620" pos:column="33">if <condition pos:line="5620" pos:column="36">(<expr><name pos:line="5620" pos:column="37">currentPosPosOnLine</name> <op:operator pos:line="5620" pos:column="57">==</op:operator> <lit:literal type="number" pos:line="5620" pos:column="60">0</lit:literal></expr>)</condition><then pos:line="5620" pos:column="62">
					<expr_stmt><expr><call><name><name pos:line="5621" pos:column="41">sel</name><op:operator pos:line="5621" pos:column="44">.</op:operator><name pos:line="5621" pos:column="45">Range</name></name><argument_list pos:line="5621" pos:column="50">(<argument><expr><name pos:line="5621" pos:column="51">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5621" pos:column="54">=</op:operator> <call><name pos:line="5621" pos:column="56">SelectionRange</name><argument_list pos:line="5621" pos:column="70">(<argument><expr><call><name><name pos:line="5621" pos:column="71">pdoc</name><op:operator pos:line="5621" pos:column="75">-&gt;</op:operator><name pos:line="5621" pos:column="77">LineStart</name></name><argument_list pos:line="5621" pos:column="86">(<argument><expr><name pos:line="5621" pos:column="87">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5621" pos:column="104">pdoc</name><op:operator pos:line="5621" pos:column="108">-&gt;</op:operator><name pos:line="5621" pos:column="110">LineStart</name></name><argument_list pos:line="5621" pos:column="119">(<argument><expr><name pos:line="5621" pos:column="120">lineOfAnchor</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="5622" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="5623" pos:column="41">sel</name><op:operator pos:line="5623" pos:column="44">.</op:operator><name pos:line="5623" pos:column="45">Range</name></name><argument_list pos:line="5623" pos:column="50">(<argument><expr><name pos:line="5623" pos:column="51">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5623" pos:column="54">=</op:operator> <call><name pos:line="5623" pos:column="56">SelectionRange</name><argument_list pos:line="5623" pos:column="70">(<argument><expr><call><name><name pos:line="5623" pos:column="71">pdoc</name><op:operator pos:line="5623" pos:column="75">-&gt;</op:operator><name pos:line="5623" pos:column="77">LineStart</name></name><argument_list pos:line="5623" pos:column="86">(<argument><expr><name pos:line="5623" pos:column="87">lineCurrentPos</name> <op:operator pos:line="5623" pos:column="102">+</op:operator> <lit:literal type="number" pos:line="5623" pos:column="104">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5623" pos:column="108">pdoc</name><op:operator pos:line="5623" pos:column="112">-&gt;</op:operator><name pos:line="5623" pos:column="114">LineStart</name></name><argument_list pos:line="5623" pos:column="123">(<argument><expr><name pos:line="5623" pos:column="124">lineOfAnchor</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then> <else pos:line="5624" pos:column="27">else <block pos:line="5624" pos:column="32">{
				<if pos:line="5625" pos:column="33">if <condition pos:line="5625" pos:column="36">(<expr><name pos:line="5625" pos:column="37">anchorPosOnLine</name> <op:operator pos:line="5625" pos:column="53">==</op:operator> <lit:literal type="number" pos:line="5625" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="5625" pos:column="58">
					<expr_stmt><expr><call><name><name pos:line="5626" pos:column="41">sel</name><op:operator pos:line="5626" pos:column="44">.</op:operator><name pos:line="5626" pos:column="45">Range</name></name><argument_list pos:line="5626" pos:column="50">(<argument><expr><name pos:line="5626" pos:column="51">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5626" pos:column="54">=</op:operator> <call><name pos:line="5626" pos:column="56">SelectionRange</name><argument_list pos:line="5626" pos:column="70">(<argument><expr><call><name><name pos:line="5626" pos:column="71">pdoc</name><op:operator pos:line="5626" pos:column="75">-&gt;</op:operator><name pos:line="5626" pos:column="77">LineStart</name></name><argument_list pos:line="5626" pos:column="86">(<argument><expr><name pos:line="5626" pos:column="87">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5626" pos:column="104">pdoc</name><op:operator pos:line="5626" pos:column="108">-&gt;</op:operator><name pos:line="5626" pos:column="110">LineStart</name></name><argument_list pos:line="5626" pos:column="119">(<argument><expr><name pos:line="5626" pos:column="120">lineOfAnchor</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="5627" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="5628" pos:column="41">sel</name><op:operator pos:line="5628" pos:column="44">.</op:operator><name pos:line="5628" pos:column="45">Range</name></name><argument_list pos:line="5628" pos:column="50">(<argument><expr><name pos:line="5628" pos:column="51">r</name></expr></argument>)</argument_list></call> <op:operator pos:line="5628" pos:column="54">=</op:operator> <call><name pos:line="5628" pos:column="56">SelectionRange</name><argument_list pos:line="5628" pos:column="70">(<argument><expr><call><name><name pos:line="5628" pos:column="71">pdoc</name><op:operator pos:line="5628" pos:column="75">-&gt;</op:operator><name pos:line="5628" pos:column="77">LineStart</name></name><argument_list pos:line="5628" pos:column="86">(<argument><expr><name pos:line="5628" pos:column="87">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5628" pos:column="104">pdoc</name><op:operator pos:line="5628" pos:column="108">-&gt;</op:operator><name pos:line="5628" pos:column="110">LineStart</name></name><argument_list pos:line="5628" pos:column="119">(<argument><expr><name pos:line="5628" pos:column="120">lineOfAnchor</name> <op:operator pos:line="5628" pos:column="133">+</op:operator> <lit:literal type="number" pos:line="5628" pos:column="135">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></else></if>
		}</block></else></if>
	}</block></for>
}</block></function>

<class pos:line="5634" pos:column="1">class <name pos:line="5634" pos:column="7">CaseFolderASCII</name> <super pos:line="5634" pos:column="23">: <specifier pos:line="5634" pos:column="25">public</specifier> <name pos:line="5634" pos:column="32">CaseFolderTable</name></super> <block pos:line="5634" pos:column="48">{<private type="default" pos:line="5634" pos:column="49">
</private><public pos:line="5635" pos:column="1">public:
	<constructor><name pos:line="5636" pos:column="9">CaseFolderASCII</name><parameter_list pos:line="5636" pos:column="24">()</parameter_list> <block pos:line="5636" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="5637" pos:column="17">StandardASCII</name><argument_list pos:line="5637" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	}</block></constructor>
	<destructor><name pos:line="5639" pos:column="9">~<name pos:line="5639" pos:column="10">CaseFolderASCII</name></name><parameter_list pos:line="5639" pos:column="25">()</parameter_list> <block pos:line="5639" pos:column="28">{
	}</block></destructor>
	<function><type><specifier pos:line="5641" pos:column="9">virtual</specifier> <name pos:line="5641" pos:column="17">size_t</name></type> <name pos:line="5641" pos:column="24">Fold</name><parameter_list pos:line="5641" pos:column="28">(<param><decl><type><name pos:line="5641" pos:column="29">char</name> <type:modifier pos:line="5641" pos:column="34">*</type:modifier></type><name pos:line="5641" pos:column="35">folded</name></decl></param>, <param><decl><type><name pos:line="5641" pos:column="43">size_t</name></type> <name pos:line="5641" pos:column="50">sizeFolded</name></decl></param>, <param><decl><type><specifier pos:line="5641" pos:column="62">const</specifier> <name pos:line="5641" pos:column="68">char</name> <type:modifier pos:line="5641" pos:column="73">*</type:modifier></type><name pos:line="5641" pos:column="74">mixed</name></decl></param>, <param><decl><type><name pos:line="5641" pos:column="81">size_t</name></type> <name pos:line="5641" pos:column="88">lenMixed</name></decl></param>)</parameter_list> <block pos:line="5641" pos:column="98">{
		<if pos:line="5642" pos:column="17">if <condition pos:line="5642" pos:column="20">(<expr><name pos:line="5642" pos:column="21">lenMixed</name> <op:operator pos:line="5642" pos:column="30">&gt;</op:operator> <name pos:line="5642" pos:column="32">sizeFolded</name></expr>)</condition><then pos:line="5642" pos:column="43"> <block pos:line="5642" pos:column="44">{
			<return pos:line="5643" pos:column="25">return <expr><lit:literal type="number" pos:line="5643" pos:column="32">0</lit:literal></expr>;</return>
		}</block></then> <else pos:line="5644" pos:column="19">else <block pos:line="5644" pos:column="24">{
			<for pos:line="5645" pos:column="25">for (<init><decl><type><name pos:line="5645" pos:column="30">size_t</name></type> <name pos:line="5645" pos:column="37">i</name><init pos:line="5645" pos:column="38">=<expr><lit:literal type="number" pos:line="5645" pos:column="39">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5645" pos:column="42">i</name><op:operator pos:line="5645" pos:column="43">&lt;</op:operator><name pos:line="5645" pos:column="44">lenMixed</name></expr>;</condition> <incr><expr><name pos:line="5645" pos:column="54">i</name><op:operator pos:line="5645" pos:column="55">++</op:operator></expr></incr>) <block pos:line="5645" pos:column="59">{
				<expr_stmt><expr><name><name pos:line="5646" pos:column="33">folded</name><index pos:line="5646" pos:column="39">[<expr><name pos:line="5646" pos:column="40">i</name></expr>]</index></name> <op:operator pos:line="5646" pos:column="43">=</op:operator> <name><name pos:line="5646" pos:column="45">mapping</name><index pos:line="5646" pos:column="52">[<expr><call><name><name pos:line="5646" pos:column="53">static_cast</name><argument_list pos:line="5646" pos:column="64">&lt;<argument><expr><name pos:line="5646" pos:column="65">unsigned</name> <name pos:line="5646" pos:column="74">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="5646" pos:column="79">(<argument><expr><name><name pos:line="5646" pos:column="80">mixed</name><index pos:line="5646" pos:column="85">[<expr><name pos:line="5646" pos:column="86">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>
			}</block></for>
			<return pos:line="5648" pos:column="25">return <expr><name pos:line="5648" pos:column="32">lenMixed</name></expr>;</return>
		}</block></else></if>
	}</block></function>
</public>}</block>;</class>


<function><type><name pos:line="5654" pos:column="1">CaseFolder</name> <type:modifier pos:line="5654" pos:column="12">*</type:modifier></type><name><name pos:line="5654" pos:column="13">Editor</name><op:operator pos:line="5654" pos:column="19">::</op:operator><name pos:line="5654" pos:column="21">CaseFolderForEncoding</name></name><parameter_list pos:line="5654" pos:column="42">()</parameter_list> <block pos:line="5654" pos:column="45">{
	<comment type="line" pos:line="5655" pos:column="9">// Simple default that only maps ASCII upper case to lower case.</comment>
	<return pos:line="5656" pos:column="9">return <expr><op:operator pos:line="5656" pos:column="16">new</op:operator> <call><name pos:line="5656" pos:column="20">CaseFolderASCII</name><argument_list pos:line="5656" pos:column="35">()</argument_list></call></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="5659" pos:column="1">/**
 * Search of a text in the document, in the given range.
 * @return The position of the found text, -1 if not found.
 */</comment>
<function><type><name pos:line="5663" pos:column="1">long</name></type> <name><name pos:line="5663" pos:column="6">Editor</name><op:operator pos:line="5663" pos:column="12">::</op:operator><name pos:line="5663" pos:column="14">FindText</name></name><parameter_list pos:line="5663" pos:column="22">(
    <param><decl><type><name pos:line="5664" pos:column="5">uptr_t</name></type> <name pos:line="5664" pos:column="12">wParam</name></decl></param>,		<comment type="line" format="doxygen" pos:line="5664" pos:column="33">///&lt; Search modes : @c SCFIND_MATCHCASE, @c SCFIND_WHOLEWORD,</comment>
    <comment type="line" format="doxygen" pos:line="5665" pos:column="5">///&lt; @c SCFIND_WORDSTART, @c SCFIND_REGEXP or @c SCFIND_POSIX.</comment>
    <param><decl><type><name pos:line="5666" pos:column="5">sptr_t</name></type> <name pos:line="5666" pos:column="12">lParam</name></decl></param>)</parameter_list> <block pos:line="5666" pos:column="20">{	<comment type="line" format="doxygen" pos:line="5666" pos:column="25">///&lt; @c TextToFind structure: The text to search for in the given range.</comment>

	<decl_stmt><decl><type><name pos:line="5668" pos:column="9">Sci_TextToFind</name> <type:modifier pos:line="5668" pos:column="24">*</type:modifier></type><name pos:line="5668" pos:column="25">ft</name> <init pos:line="5668" pos:column="28">= <expr><call><name><name pos:line="5668" pos:column="30">reinterpret_cast</name><argument_list pos:line="5668" pos:column="46">&lt;<argument><expr><name pos:line="5668" pos:column="47">Sci_TextToFind</name> <op:operator pos:line="5668" pos:column="62">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="5668" pos:column="64">(<argument><expr><name pos:line="5668" pos:column="65">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5669" pos:column="9">int</name></type> <name pos:line="5669" pos:column="13">lengthFound</name> <init pos:line="5669" pos:column="25">= <expr><call><name pos:line="5669" pos:column="27">istrlen</name><argument_list pos:line="5669" pos:column="34">(<argument><expr><name><name pos:line="5669" pos:column="35">ft</name><op:operator pos:line="5669" pos:column="37">-&gt;</op:operator><name pos:line="5669" pos:column="39">lpstrText</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5670" pos:column="9">std</name><op:operator pos:line="5670" pos:column="12">::</op:operator><name><name pos:line="5670" pos:column="14">auto_ptr</name><argument_list pos:line="5670" pos:column="22">&lt;<argument><expr><name pos:line="5670" pos:column="23">CaseFolder</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="5670" pos:column="35">pcf</name><argument_list pos:line="5670" pos:column="38">(<argument><expr><call><name pos:line="5670" pos:column="39">CaseFolderForEncoding</name><argument_list pos:line="5670" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5671" pos:column="9">int</name></type> <name pos:line="5671" pos:column="13">pos</name> <init pos:line="5671" pos:column="17">= <expr><call><name><name pos:line="5671" pos:column="19">pdoc</name><op:operator pos:line="5671" pos:column="23">-&gt;</op:operator><name pos:line="5671" pos:column="25">FindText</name></name><argument_list pos:line="5671" pos:column="33">(<argument><expr><name><name pos:line="5671" pos:column="34">ft</name><op:operator pos:line="5671" pos:column="36">-&gt;</op:operator><name pos:line="5671" pos:column="38">chrg</name><op:operator pos:line="5671" pos:column="42">.</op:operator><name pos:line="5671" pos:column="43">cpMin</name></name></expr></argument>, <argument><expr><name><name pos:line="5671" pos:column="50">ft</name><op:operator pos:line="5671" pos:column="52">-&gt;</op:operator><name pos:line="5671" pos:column="54">chrg</name><op:operator pos:line="5671" pos:column="58">.</op:operator><name pos:line="5671" pos:column="59">cpMax</name></name></expr></argument>, <argument><expr><name><name pos:line="5671" pos:column="66">ft</name><op:operator pos:line="5671" pos:column="68">-&gt;</op:operator><name pos:line="5671" pos:column="70">lpstrText</name></name></expr></argument>,
	        <argument><expr><op:operator pos:line="5672" pos:column="17">(</op:operator><name pos:line="5672" pos:column="18">wParam</name> <op:operator pos:line="5672" pos:column="25">&amp;</op:operator> <name pos:line="5672" pos:column="27">SCFIND_MATCHCASE</name><op:operator pos:line="5672" pos:column="43">)</op:operator> <op:operator pos:line="5672" pos:column="45">!=</op:operator> <lit:literal type="number" pos:line="5672" pos:column="48">0</lit:literal></expr></argument>,
	        <argument><expr><op:operator pos:line="5673" pos:column="17">(</op:operator><name pos:line="5673" pos:column="18">wParam</name> <op:operator pos:line="5673" pos:column="25">&amp;</op:operator> <name pos:line="5673" pos:column="27">SCFIND_WHOLEWORD</name><op:operator pos:line="5673" pos:column="43">)</op:operator> <op:operator pos:line="5673" pos:column="45">!=</op:operator> <lit:literal type="number" pos:line="5673" pos:column="48">0</lit:literal></expr></argument>,
	        <argument><expr><op:operator pos:line="5674" pos:column="17">(</op:operator><name pos:line="5674" pos:column="18">wParam</name> <op:operator pos:line="5674" pos:column="25">&amp;</op:operator> <name pos:line="5674" pos:column="27">SCFIND_WORDSTART</name><op:operator pos:line="5674" pos:column="43">)</op:operator> <op:operator pos:line="5674" pos:column="45">!=</op:operator> <lit:literal type="number" pos:line="5674" pos:column="48">0</lit:literal></expr></argument>,
	        <argument><expr><op:operator pos:line="5675" pos:column="17">(</op:operator><name pos:line="5675" pos:column="18">wParam</name> <op:operator pos:line="5675" pos:column="25">&amp;</op:operator> <name pos:line="5675" pos:column="27">SCFIND_REGEXP</name><op:operator pos:line="5675" pos:column="40">)</op:operator> <op:operator pos:line="5675" pos:column="42">!=</op:operator> <lit:literal type="number" pos:line="5675" pos:column="45">0</lit:literal></expr></argument>,
	        <argument><expr><name pos:line="5676" pos:column="17">wParam</name></expr></argument>,
	        <argument><expr><op:operator pos:line="5677" pos:column="17">&amp;</op:operator><name pos:line="5677" pos:column="18">lengthFound</name></expr></argument>,
			<argument><expr><call><name><name pos:line="5678" pos:column="25">pcf</name><op:operator pos:line="5678" pos:column="28">.</op:operator><name pos:line="5678" pos:column="29">get</name></name><argument_list pos:line="5678" pos:column="32">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="5679" pos:column="9">if <condition pos:line="5679" pos:column="12">(<expr><name pos:line="5679" pos:column="13">pos</name> <op:operator pos:line="5679" pos:column="17">!=</op:operator> <op:operator pos:line="5679" pos:column="20">-</op:operator><lit:literal type="number" pos:line="5679" pos:column="21">1</lit:literal></expr>)</condition><then pos:line="5679" pos:column="23"> <block pos:line="5679" pos:column="24">{
		<expr_stmt><expr><name><name pos:line="5680" pos:column="17">ft</name><op:operator pos:line="5680" pos:column="19">-&gt;</op:operator><name pos:line="5680" pos:column="21">chrgText</name><op:operator pos:line="5680" pos:column="29">.</op:operator><name pos:line="5680" pos:column="30">cpMin</name></name> <op:operator pos:line="5680" pos:column="36">=</op:operator> <name pos:line="5680" pos:column="38">pos</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="5681" pos:column="17">ft</name><op:operator pos:line="5681" pos:column="19">-&gt;</op:operator><name pos:line="5681" pos:column="21">chrgText</name><op:operator pos:line="5681" pos:column="29">.</op:operator><name pos:line="5681" pos:column="30">cpMax</name></name> <op:operator pos:line="5681" pos:column="36">=</op:operator> <name pos:line="5681" pos:column="38">pos</name> <op:operator pos:line="5681" pos:column="42">+</op:operator> <name pos:line="5681" pos:column="44">lengthFound</name></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="5683" pos:column="9">return <expr><name pos:line="5683" pos:column="16">pos</name></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="5686" pos:column="1">/**
 * Relocatable search support : Searches relative to current selection
 * point and sets the selection to the found text range with
 * each search.
 */</comment>
<comment type="block" format="doxygen" pos:line="5691" pos:column="1">/**
 * Anchor following searches at current selection start: This allows
 * multiple incremental interactive searches to be macro recorded
 * while still setting the selection to found text so the find/select
 * operation is self-contained.
 */</comment>
<function><type><name pos:line="5697" pos:column="1">void</name></type> <name><name pos:line="5697" pos:column="6">Editor</name><op:operator pos:line="5697" pos:column="12">::</op:operator><name pos:line="5697" pos:column="14">SearchAnchor</name></name><parameter_list pos:line="5697" pos:column="26">()</parameter_list> <block pos:line="5697" pos:column="29">{
	<expr_stmt><expr><name pos:line="5698" pos:column="9">searchAnchor</name> <op:operator pos:line="5698" pos:column="22">=</op:operator> <call><name pos:line="5698" pos:column="24">SelectionStart</name><argument_list pos:line="5698" pos:column="38">()</argument_list></call><op:operator pos:line="5698" pos:column="40">.</op:operator><call><name pos:line="5698" pos:column="41">Position</name><argument_list pos:line="5698" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="block" format="doxygen" pos:line="5701" pos:column="1">/**
 * Find text from current search anchor: Must call @c SearchAnchor first.
 * Used for next text and previous text requests.
 * @return The position of the found text, -1 if not found.
 */</comment>
<function><type><name pos:line="5706" pos:column="1">long</name></type> <name><name pos:line="5706" pos:column="6">Editor</name><op:operator pos:line="5706" pos:column="12">::</op:operator><name pos:line="5706" pos:column="14">SearchText</name></name><parameter_list pos:line="5706" pos:column="24">(
    <param><decl><type><name pos:line="5707" pos:column="5">unsigned</name> <name pos:line="5707" pos:column="14">int</name></type> <name pos:line="5707" pos:column="18">iMessage</name></decl></param>,		<comment type="line" format="doxygen" pos:line="5707" pos:column="41">///&lt; Accepts both @c SCI_SEARCHNEXT and @c SCI_SEARCHPREV.</comment>
    <param><decl><type><name pos:line="5708" pos:column="5">uptr_t</name></type> <name pos:line="5708" pos:column="12">wParam</name></decl></param>,				<comment type="line" format="doxygen" pos:line="5708" pos:column="49">///&lt; Search modes : @c SCFIND_MATCHCASE, @c SCFIND_WHOLEWORD,</comment>
    <comment type="line" format="doxygen" pos:line="5709" pos:column="5">///&lt; @c SCFIND_WORDSTART, @c SCFIND_REGEXP or @c SCFIND_POSIX.</comment>
    <param><decl><type><name pos:line="5710" pos:column="5">sptr_t</name></type> <name pos:line="5710" pos:column="12">lParam</name></decl></param>)</parameter_list> <block pos:line="5710" pos:column="20">{			<comment type="line" format="doxygen" pos:line="5710" pos:column="41">///&lt; The text to search for.</comment>

	<decl_stmt><decl><type><specifier pos:line="5712" pos:column="9">const</specifier> <name pos:line="5712" pos:column="15">char</name> <type:modifier pos:line="5712" pos:column="20">*</type:modifier></type><name pos:line="5712" pos:column="21">txt</name> <init pos:line="5712" pos:column="25">= <expr><call><name><name pos:line="5712" pos:column="27">reinterpret_cast</name><argument_list pos:line="5712" pos:column="43">&lt;<argument><expr><name pos:line="5712" pos:column="44">char</name> <op:operator pos:line="5712" pos:column="49">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="5712" pos:column="51">(<argument><expr><name pos:line="5712" pos:column="52">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5713" pos:column="9">int</name></type> <name pos:line="5713" pos:column="13">pos</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5714" pos:column="9">int</name></type> <name pos:line="5714" pos:column="13">lengthFound</name> <init pos:line="5714" pos:column="25">= <expr><call><name pos:line="5714" pos:column="27">istrlen</name><argument_list pos:line="5714" pos:column="34">(<argument><expr><name pos:line="5714" pos:column="35">txt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="5715" pos:column="9">std</name><op:operator pos:line="5715" pos:column="12">::</op:operator><name><name pos:line="5715" pos:column="14">auto_ptr</name><argument_list pos:line="5715" pos:column="22">&lt;<argument><expr><name pos:line="5715" pos:column="23">CaseFolder</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="5715" pos:column="35">pcf</name><argument_list pos:line="5715" pos:column="38">(<argument><expr><call><name pos:line="5715" pos:column="39">CaseFolderForEncoding</name><argument_list pos:line="5715" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<if pos:line="5716" pos:column="9">if <condition pos:line="5716" pos:column="12">(<expr><name pos:line="5716" pos:column="13">iMessage</name> <op:operator pos:line="5716" pos:column="22">==</op:operator> <name pos:line="5716" pos:column="25">SCI_SEARCHNEXT</name></expr>)</condition><then pos:line="5716" pos:column="40"> <block pos:line="5716" pos:column="41">{
		<expr_stmt><expr><name pos:line="5717" pos:column="17">pos</name> <op:operator pos:line="5717" pos:column="21">=</op:operator> <call><name><name pos:line="5717" pos:column="23">pdoc</name><op:operator pos:line="5717" pos:column="27">-&gt;</op:operator><name pos:line="5717" pos:column="29">FindText</name></name><argument_list pos:line="5717" pos:column="37">(<argument><expr><name pos:line="5717" pos:column="38">searchAnchor</name></expr></argument>, <argument><expr><call><name><name pos:line="5717" pos:column="52">pdoc</name><op:operator pos:line="5717" pos:column="56">-&gt;</op:operator><name pos:line="5717" pos:column="58">Length</name></name><argument_list pos:line="5717" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5717" pos:column="68">txt</name></expr></argument>,
		        <argument><expr><op:operator pos:line="5718" pos:column="25">(</op:operator><name pos:line="5718" pos:column="26">wParam</name> <op:operator pos:line="5718" pos:column="33">&amp;</op:operator> <name pos:line="5718" pos:column="35">SCFIND_MATCHCASE</name><op:operator pos:line="5718" pos:column="51">)</op:operator> <op:operator pos:line="5718" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="5718" pos:column="56">0</lit:literal></expr></argument>,
		        <argument><expr><op:operator pos:line="5719" pos:column="25">(</op:operator><name pos:line="5719" pos:column="26">wParam</name> <op:operator pos:line="5719" pos:column="33">&amp;</op:operator> <name pos:line="5719" pos:column="35">SCFIND_WHOLEWORD</name><op:operator pos:line="5719" pos:column="51">)</op:operator> <op:operator pos:line="5719" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="5719" pos:column="56">0</lit:literal></expr></argument>,
		        <argument><expr><op:operator pos:line="5720" pos:column="25">(</op:operator><name pos:line="5720" pos:column="26">wParam</name> <op:operator pos:line="5720" pos:column="33">&amp;</op:operator> <name pos:line="5720" pos:column="35">SCFIND_WORDSTART</name><op:operator pos:line="5720" pos:column="51">)</op:operator> <op:operator pos:line="5720" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="5720" pos:column="56">0</lit:literal></expr></argument>,
		        <argument><expr><op:operator pos:line="5721" pos:column="25">(</op:operator><name pos:line="5721" pos:column="26">wParam</name> <op:operator pos:line="5721" pos:column="33">&amp;</op:operator> <name pos:line="5721" pos:column="35">SCFIND_REGEXP</name><op:operator pos:line="5721" pos:column="48">)</op:operator> <op:operator pos:line="5721" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="5721" pos:column="53">0</lit:literal></expr></argument>,
		        <argument><expr><name pos:line="5722" pos:column="25">wParam</name></expr></argument>,
		        <argument><expr><op:operator pos:line="5723" pos:column="25">&amp;</op:operator><name pos:line="5723" pos:column="26">lengthFound</name></expr></argument>,
				<argument><expr><call><name><name pos:line="5724" pos:column="33">pcf</name><op:operator pos:line="5724" pos:column="36">.</op:operator><name pos:line="5724" pos:column="37">get</name></name><argument_list pos:line="5724" pos:column="40">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="5725" pos:column="11">else <block pos:line="5725" pos:column="16">{
		<expr_stmt><expr><name pos:line="5726" pos:column="17">pos</name> <op:operator pos:line="5726" pos:column="21">=</op:operator> <call><name><name pos:line="5726" pos:column="23">pdoc</name><op:operator pos:line="5726" pos:column="27">-&gt;</op:operator><name pos:line="5726" pos:column="29">FindText</name></name><argument_list pos:line="5726" pos:column="37">(<argument><expr><name pos:line="5726" pos:column="38">searchAnchor</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5726" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><name pos:line="5726" pos:column="55">txt</name></expr></argument>,
		        <argument><expr><op:operator pos:line="5727" pos:column="25">(</op:operator><name pos:line="5727" pos:column="26">wParam</name> <op:operator pos:line="5727" pos:column="33">&amp;</op:operator> <name pos:line="5727" pos:column="35">SCFIND_MATCHCASE</name><op:operator pos:line="5727" pos:column="51">)</op:operator> <op:operator pos:line="5727" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="5727" pos:column="56">0</lit:literal></expr></argument>,
		        <argument><expr><op:operator pos:line="5728" pos:column="25">(</op:operator><name pos:line="5728" pos:column="26">wParam</name> <op:operator pos:line="5728" pos:column="33">&amp;</op:operator> <name pos:line="5728" pos:column="35">SCFIND_WHOLEWORD</name><op:operator pos:line="5728" pos:column="51">)</op:operator> <op:operator pos:line="5728" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="5728" pos:column="56">0</lit:literal></expr></argument>,
		        <argument><expr><op:operator pos:line="5729" pos:column="25">(</op:operator><name pos:line="5729" pos:column="26">wParam</name> <op:operator pos:line="5729" pos:column="33">&amp;</op:operator> <name pos:line="5729" pos:column="35">SCFIND_WORDSTART</name><op:operator pos:line="5729" pos:column="51">)</op:operator> <op:operator pos:line="5729" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="5729" pos:column="56">0</lit:literal></expr></argument>,
		        <argument><expr><op:operator pos:line="5730" pos:column="25">(</op:operator><name pos:line="5730" pos:column="26">wParam</name> <op:operator pos:line="5730" pos:column="33">&amp;</op:operator> <name pos:line="5730" pos:column="35">SCFIND_REGEXP</name><op:operator pos:line="5730" pos:column="48">)</op:operator> <op:operator pos:line="5730" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="5730" pos:column="53">0</lit:literal></expr></argument>,
		        <argument><expr><name pos:line="5731" pos:column="25">wParam</name></expr></argument>,
		        <argument><expr><op:operator pos:line="5732" pos:column="25">&amp;</op:operator><name pos:line="5732" pos:column="26">lengthFound</name></expr></argument>,
				<argument><expr><call><name><name pos:line="5733" pos:column="33">pcf</name><op:operator pos:line="5733" pos:column="36">.</op:operator><name pos:line="5733" pos:column="37">get</name></name><argument_list pos:line="5733" pos:column="40">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<if pos:line="5735" pos:column="9">if <condition pos:line="5735" pos:column="12">(<expr><name pos:line="5735" pos:column="13">pos</name> <op:operator pos:line="5735" pos:column="17">!=</op:operator> <op:operator pos:line="5735" pos:column="20">-</op:operator><lit:literal type="number" pos:line="5735" pos:column="21">1</lit:literal></expr>)</condition><then pos:line="5735" pos:column="23"> <block pos:line="5735" pos:column="24">{
		<expr_stmt><expr><call><name pos:line="5736" pos:column="17">SetSelection</name><argument_list pos:line="5736" pos:column="29">(<argument><expr><name pos:line="5736" pos:column="30">pos</name></expr></argument>, <argument><expr><name pos:line="5736" pos:column="35">pos</name> <op:operator pos:line="5736" pos:column="39">+</op:operator> <name pos:line="5736" pos:column="41">lengthFound</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<return pos:line="5739" pos:column="9">return <expr><name pos:line="5739" pos:column="16">pos</name></expr>;</return>
}</block></function>

<function><type><name><name pos:line="5742" pos:column="1">std</name><op:operator pos:line="5742" pos:column="4">::</op:operator><name pos:line="5742" pos:column="6">string</name></name></type> <name><name pos:line="5742" pos:column="13">Editor</name><op:operator pos:line="5742" pos:column="19">::</op:operator><name pos:line="5742" pos:column="21">CaseMapString</name></name><parameter_list pos:line="5742" pos:column="34">(<param><decl><type><specifier pos:line="5742" pos:column="35">const</specifier> <name><name pos:line="5742" pos:column="41">std</name><op:operator pos:line="5742" pos:column="44">::</op:operator><name pos:line="5742" pos:column="46">string</name></name> <type:modifier pos:line="5742" pos:column="53">&amp;</type:modifier></type><name pos:line="5742" pos:column="54">s</name></decl></param>, <param><decl><type><name pos:line="5742" pos:column="57">int</name></type> <name pos:line="5742" pos:column="61">caseMapping</name></decl></param>)</parameter_list> <block pos:line="5742" pos:column="74">{
	<function_decl><type><name><name pos:line="5743" pos:column="9">std</name><op:operator pos:line="5743" pos:column="12">::</op:operator><name pos:line="5743" pos:column="14">string</name></name></type> <name pos:line="5743" pos:column="21">ret</name><parameter_list pos:line="5743" pos:column="24">(<param><decl><type><name pos:line="5743" pos:column="25">s</name></type></decl></param>)</parameter_list>;</function_decl>
	<for pos:line="5744" pos:column="9">for (<init><decl><type><name pos:line="5744" pos:column="14">size_t</name></type> <name pos:line="5744" pos:column="21">i</name><init pos:line="5744" pos:column="22">=<expr><lit:literal type="number" pos:line="5744" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5744" pos:column="26">i</name><op:operator pos:line="5744" pos:column="27">&lt;</op:operator><call><name><name pos:line="5744" pos:column="28">ret</name><op:operator pos:line="5744" pos:column="31">.</op:operator><name pos:line="5744" pos:column="32">size</name></name><argument_list pos:line="5744" pos:column="36">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5744" pos:column="40">i</name><op:operator pos:line="5744" pos:column="41">++</op:operator></expr></incr>) <block pos:line="5744" pos:column="45">{
		<switch pos:line="5745" pos:column="17">switch <condition pos:line="5745" pos:column="24">(<expr><name pos:line="5745" pos:column="25">caseMapping</name></expr>)</condition> <block pos:line="5745" pos:column="38">{
			<case pos:line="5746" pos:column="25">case <expr><name pos:line="5746" pos:column="30">cmUpper</name></expr>:
				<if pos:line="5747" pos:column="33">if <condition pos:line="5747" pos:column="36">(<expr><name><name pos:line="5747" pos:column="37">ret</name><index pos:line="5747" pos:column="40">[<expr><name pos:line="5747" pos:column="41">i</name></expr>]</index></name> <op:operator pos:line="5747" pos:column="44">&gt;=</op:operator> <lit:literal type="char" pos:line="5747" pos:column="47">'a'</lit:literal> <op:operator pos:line="5747" pos:column="51">&amp;&amp;</op:operator> <name><name pos:line="5747" pos:column="54">ret</name><index pos:line="5747" pos:column="57">[<expr><name pos:line="5747" pos:column="58">i</name></expr>]</index></name> <op:operator pos:line="5747" pos:column="61">&lt;=</op:operator> <lit:literal type="char" pos:line="5747" pos:column="64">'z'</lit:literal></expr>)</condition><then pos:line="5747" pos:column="68">
					<expr_stmt><expr><name><name pos:line="5748" pos:column="41">ret</name><index pos:line="5748" pos:column="44">[<expr><name pos:line="5748" pos:column="45">i</name></expr>]</index></name> <op:operator pos:line="5748" pos:column="48">=</op:operator> <call><name><name pos:line="5748" pos:column="50">static_cast</name><argument_list pos:line="5748" pos:column="61">&lt;<argument><expr><name pos:line="5748" pos:column="62">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="5748" pos:column="67">(<argument><expr><name><name pos:line="5748" pos:column="68">ret</name><index pos:line="5748" pos:column="71">[<expr><name pos:line="5748" pos:column="72">i</name></expr>]</index></name> <op:operator pos:line="5748" pos:column="75">-</op:operator> <lit:literal type="char" pos:line="5748" pos:column="77">'a'</lit:literal> <op:operator pos:line="5748" pos:column="81">+</op:operator> <lit:literal type="char" pos:line="5748" pos:column="83">'A'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="5749" pos:column="33">break;</break>
			</case><case pos:line="5750" pos:column="25">case <expr><name pos:line="5750" pos:column="30">cmLower</name></expr>:
				<if pos:line="5751" pos:column="33">if <condition pos:line="5751" pos:column="36">(<expr><name><name pos:line="5751" pos:column="37">ret</name><index pos:line="5751" pos:column="40">[<expr><name pos:line="5751" pos:column="41">i</name></expr>]</index></name> <op:operator pos:line="5751" pos:column="44">&gt;=</op:operator> <lit:literal type="char" pos:line="5751" pos:column="47">'A'</lit:literal> <op:operator pos:line="5751" pos:column="51">&amp;&amp;</op:operator> <name><name pos:line="5751" pos:column="54">ret</name><index pos:line="5751" pos:column="57">[<expr><name pos:line="5751" pos:column="58">i</name></expr>]</index></name> <op:operator pos:line="5751" pos:column="61">&lt;=</op:operator> <lit:literal type="char" pos:line="5751" pos:column="64">'Z'</lit:literal></expr>)</condition><then pos:line="5751" pos:column="68">
					<expr_stmt><expr><name><name pos:line="5752" pos:column="41">ret</name><index pos:line="5752" pos:column="44">[<expr><name pos:line="5752" pos:column="45">i</name></expr>]</index></name> <op:operator pos:line="5752" pos:column="48">=</op:operator> <call><name><name pos:line="5752" pos:column="50">static_cast</name><argument_list pos:line="5752" pos:column="61">&lt;<argument><expr><name pos:line="5752" pos:column="62">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="5752" pos:column="67">(<argument><expr><name><name pos:line="5752" pos:column="68">ret</name><index pos:line="5752" pos:column="71">[<expr><name pos:line="5752" pos:column="72">i</name></expr>]</index></name> <op:operator pos:line="5752" pos:column="75">-</op:operator> <lit:literal type="char" pos:line="5752" pos:column="77">'A'</lit:literal> <op:operator pos:line="5752" pos:column="81">+</op:operator> <lit:literal type="char" pos:line="5752" pos:column="83">'a'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<break pos:line="5753" pos:column="33">break;</break>
		</case>}</block></switch>
	}</block></for>
	<return pos:line="5756" pos:column="9">return <expr><name pos:line="5756" pos:column="16">ret</name></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="5759" pos:column="1">/**
 * Search for text in the target range of the document.
 * @return The position of the found text, -1 if not found.
 */</comment>
<function><type><name pos:line="5763" pos:column="1">long</name></type> <name><name pos:line="5763" pos:column="6">Editor</name><op:operator pos:line="5763" pos:column="12">::</op:operator><name pos:line="5763" pos:column="14">SearchInTarget</name></name><parameter_list pos:line="5763" pos:column="28">(<param><decl><type><specifier pos:line="5763" pos:column="29">const</specifier> <name pos:line="5763" pos:column="35">char</name> <type:modifier pos:line="5763" pos:column="40">*</type:modifier></type><name pos:line="5763" pos:column="41">text</name></decl></param>, <param><decl><type><name pos:line="5763" pos:column="47">int</name></type> <name pos:line="5763" pos:column="51">length</name></decl></param>)</parameter_list> <block pos:line="5763" pos:column="59">{
	<decl_stmt><decl><type><name pos:line="5764" pos:column="9">int</name></type> <name pos:line="5764" pos:column="13">lengthFound</name> <init pos:line="5764" pos:column="25">= <expr><name pos:line="5764" pos:column="27">length</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name><name pos:line="5766" pos:column="9">std</name><op:operator pos:line="5766" pos:column="12">::</op:operator><name><name pos:line="5766" pos:column="14">auto_ptr</name><argument_list pos:line="5766" pos:column="22">&lt;<argument><expr><name pos:line="5766" pos:column="23">CaseFolder</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="5766" pos:column="35">pcf</name><argument_list pos:line="5766" pos:column="38">(<argument><expr><call><name pos:line="5766" pos:column="39">CaseFolderForEncoding</name><argument_list pos:line="5766" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5767" pos:column="9">int</name></type> <name pos:line="5767" pos:column="13">pos</name> <init pos:line="5767" pos:column="17">= <expr><call><name><name pos:line="5767" pos:column="19">pdoc</name><op:operator pos:line="5767" pos:column="23">-&gt;</op:operator><name pos:line="5767" pos:column="25">FindText</name></name><argument_list pos:line="5767" pos:column="33">(<argument><expr><name pos:line="5767" pos:column="34">targetStart</name></expr></argument>, <argument><expr><name pos:line="5767" pos:column="47">targetEnd</name></expr></argument>, <argument><expr><name pos:line="5767" pos:column="58">text</name></expr></argument>,
	        <argument><expr><op:operator pos:line="5768" pos:column="17">(</op:operator><name pos:line="5768" pos:column="18">searchFlags</name> <op:operator pos:line="5768" pos:column="30">&amp;</op:operator> <name pos:line="5768" pos:column="32">SCFIND_MATCHCASE</name><op:operator pos:line="5768" pos:column="48">)</op:operator> <op:operator pos:line="5768" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="5768" pos:column="53">0</lit:literal></expr></argument>,
	        <argument><expr><op:operator pos:line="5769" pos:column="17">(</op:operator><name pos:line="5769" pos:column="18">searchFlags</name> <op:operator pos:line="5769" pos:column="30">&amp;</op:operator> <name pos:line="5769" pos:column="32">SCFIND_WHOLEWORD</name><op:operator pos:line="5769" pos:column="48">)</op:operator> <op:operator pos:line="5769" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="5769" pos:column="53">0</lit:literal></expr></argument>,
	        <argument><expr><op:operator pos:line="5770" pos:column="17">(</op:operator><name pos:line="5770" pos:column="18">searchFlags</name> <op:operator pos:line="5770" pos:column="30">&amp;</op:operator> <name pos:line="5770" pos:column="32">SCFIND_WORDSTART</name><op:operator pos:line="5770" pos:column="48">)</op:operator> <op:operator pos:line="5770" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="5770" pos:column="53">0</lit:literal></expr></argument>,
	        <argument><expr><op:operator pos:line="5771" pos:column="17">(</op:operator><name pos:line="5771" pos:column="18">searchFlags</name> <op:operator pos:line="5771" pos:column="30">&amp;</op:operator> <name pos:line="5771" pos:column="32">SCFIND_REGEXP</name><op:operator pos:line="5771" pos:column="45">)</op:operator> <op:operator pos:line="5771" pos:column="47">!=</op:operator> <lit:literal type="number" pos:line="5771" pos:column="50">0</lit:literal></expr></argument>,
	        <argument><expr><name pos:line="5772" pos:column="17">searchFlags</name></expr></argument>,
	        <argument><expr><op:operator pos:line="5773" pos:column="17">&amp;</op:operator><name pos:line="5773" pos:column="18">lengthFound</name></expr></argument>,
			<argument><expr><call><name><name pos:line="5774" pos:column="25">pcf</name><op:operator pos:line="5774" pos:column="28">.</op:operator><name pos:line="5774" pos:column="29">get</name></name><argument_list pos:line="5774" pos:column="32">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="5775" pos:column="9">if <condition pos:line="5775" pos:column="12">(<expr><name pos:line="5775" pos:column="13">pos</name> <op:operator pos:line="5775" pos:column="17">!=</op:operator> <op:operator pos:line="5775" pos:column="20">-</op:operator><lit:literal type="number" pos:line="5775" pos:column="21">1</lit:literal></expr>)</condition><then pos:line="5775" pos:column="23"> <block pos:line="5775" pos:column="24">{
		<expr_stmt><expr><name pos:line="5776" pos:column="17">targetStart</name> <op:operator pos:line="5776" pos:column="29">=</op:operator> <name pos:line="5776" pos:column="31">pos</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5777" pos:column="17">targetEnd</name> <op:operator pos:line="5777" pos:column="27">=</op:operator> <name pos:line="5777" pos:column="29">pos</name> <op:operator pos:line="5777" pos:column="33">+</op:operator> <name pos:line="5777" pos:column="35">lengthFound</name></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="5779" pos:column="9">return <expr><name pos:line="5779" pos:column="16">pos</name></expr>;</return>
}</block></function>

<function><type><name pos:line="5782" pos:column="1">void</name></type> <name><name pos:line="5782" pos:column="6">Editor</name><op:operator pos:line="5782" pos:column="12">::</op:operator><name pos:line="5782" pos:column="14">GoToLine</name></name><parameter_list pos:line="5782" pos:column="22">(<param><decl><type><name pos:line="5782" pos:column="23">int</name></type> <name pos:line="5782" pos:column="27">lineNo</name></decl></param>)</parameter_list> <block pos:line="5782" pos:column="35">{
	<if pos:line="5783" pos:column="9">if <condition pos:line="5783" pos:column="12">(<expr><name pos:line="5783" pos:column="13">lineNo</name> <op:operator pos:line="5783" pos:column="20">&gt;</op:operator> <call><name><name pos:line="5783" pos:column="22">pdoc</name><op:operator pos:line="5783" pos:column="26">-&gt;</op:operator><name pos:line="5783" pos:column="28">LinesTotal</name></name><argument_list pos:line="5783" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="5783" pos:column="41">
		<expr_stmt><expr><name pos:line="5784" pos:column="17">lineNo</name> <op:operator pos:line="5784" pos:column="24">=</op:operator> <call><name><name pos:line="5784" pos:column="26">pdoc</name><op:operator pos:line="5784" pos:column="30">-&gt;</op:operator><name pos:line="5784" pos:column="32">LinesTotal</name></name><argument_list pos:line="5784" pos:column="42">()</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="5785" pos:column="9">if <condition pos:line="5785" pos:column="12">(<expr><name pos:line="5785" pos:column="13">lineNo</name> <op:operator pos:line="5785" pos:column="20">&lt;</op:operator> <lit:literal type="number" pos:line="5785" pos:column="22">0</lit:literal></expr>)</condition><then pos:line="5785" pos:column="24">
		<expr_stmt><expr><name pos:line="5786" pos:column="17">lineNo</name> <op:operator pos:line="5786" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="5786" pos:column="26">0</lit:literal></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name pos:line="5787" pos:column="9">SetEmptySelection</name><argument_list pos:line="5787" pos:column="26">(<argument><expr><call><name><name pos:line="5787" pos:column="27">pdoc</name><op:operator pos:line="5787" pos:column="31">-&gt;</op:operator><name pos:line="5787" pos:column="33">LineStart</name></name><argument_list pos:line="5787" pos:column="42">(<argument><expr><name pos:line="5787" pos:column="43">lineNo</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="5788" pos:column="9">ShowCaretAtCurrentPosition</name><argument_list pos:line="5788" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="5789" pos:column="9">EnsureCaretVisible</name><argument_list pos:line="5789" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="5792" pos:column="1">static</specifier> <name pos:line="5792" pos:column="8">bool</name></type> <name pos:line="5792" pos:column="13">Close</name><parameter_list pos:line="5792" pos:column="18">(<param><decl><type><name pos:line="5792" pos:column="19">Point</name></type> <name pos:line="5792" pos:column="25">pt1</name></decl></param>, <param><decl><type><name pos:line="5792" pos:column="30">Point</name></type> <name pos:line="5792" pos:column="36">pt2</name></decl></param>)</parameter_list> <block pos:line="5792" pos:column="41">{
	<if pos:line="5793" pos:column="9">if <condition pos:line="5793" pos:column="12">(<expr><call><name pos:line="5793" pos:column="13">abs</name><argument_list pos:line="5793" pos:column="16">(<argument><expr><name><name pos:line="5793" pos:column="17">pt1</name><op:operator pos:line="5793" pos:column="20">.</op:operator><name pos:line="5793" pos:column="21">x</name></name> <op:operator pos:line="5793" pos:column="23">-</op:operator> <name><name pos:line="5793" pos:column="25">pt2</name><op:operator pos:line="5793" pos:column="28">.</op:operator><name pos:line="5793" pos:column="29">x</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="5793" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="5793" pos:column="34">3</lit:literal></expr>)</condition><then pos:line="5793" pos:column="36">
		<return pos:line="5794" pos:column="17">return <expr><lit:literal type="boolean" pos:line="5794" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<if pos:line="5795" pos:column="9">if <condition pos:line="5795" pos:column="12">(<expr><call><name pos:line="5795" pos:column="13">abs</name><argument_list pos:line="5795" pos:column="16">(<argument><expr><name><name pos:line="5795" pos:column="17">pt1</name><op:operator pos:line="5795" pos:column="20">.</op:operator><name pos:line="5795" pos:column="21">y</name></name> <op:operator pos:line="5795" pos:column="23">-</op:operator> <name><name pos:line="5795" pos:column="25">pt2</name><op:operator pos:line="5795" pos:column="28">.</op:operator><name pos:line="5795" pos:column="29">y</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="5795" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="5795" pos:column="34">3</lit:literal></expr>)</condition><then pos:line="5795" pos:column="36">
		<return pos:line="5796" pos:column="17">return <expr><lit:literal type="boolean" pos:line="5796" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<return pos:line="5797" pos:column="9">return <expr><lit:literal type="boolean" pos:line="5797" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5800" pos:column="1">char</name> <type:modifier pos:line="5800" pos:column="6">*</type:modifier></type><name><name pos:line="5800" pos:column="7">Editor</name><op:operator pos:line="5800" pos:column="13">::</op:operator><name pos:line="5800" pos:column="15">CopyRange</name></name><parameter_list pos:line="5800" pos:column="24">(<param><decl><type><name pos:line="5800" pos:column="25">int</name></type> <name pos:line="5800" pos:column="29">start</name></decl></param>, <param><decl><type><name pos:line="5800" pos:column="36">int</name></type> <name pos:line="5800" pos:column="40">end</name></decl></param>)</parameter_list> <block pos:line="5800" pos:column="45">{
	<decl_stmt><decl><type><name pos:line="5801" pos:column="9">char</name> <type:modifier pos:line="5801" pos:column="14">*</type:modifier></type><name pos:line="5801" pos:column="15">text</name> <init pos:line="5801" pos:column="20">= <expr><lit:literal type="number" pos:line="5801" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="5802" pos:column="9">if <condition pos:line="5802" pos:column="12">(<expr><name pos:line="5802" pos:column="13">start</name> <op:operator pos:line="5802" pos:column="19">&lt;</op:operator> <name pos:line="5802" pos:column="21">end</name></expr>)</condition><then pos:line="5802" pos:column="25"> <block pos:line="5802" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="5803" pos:column="17">int</name></type> <name pos:line="5803" pos:column="21">len</name> <init pos:line="5803" pos:column="25">= <expr><name pos:line="5803" pos:column="27">end</name> <op:operator pos:line="5803" pos:column="31">-</op:operator> <name pos:line="5803" pos:column="33">start</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="5804" pos:column="17">text</name> <op:operator pos:line="5804" pos:column="22">=</op:operator> <op:operator pos:line="5804" pos:column="24">new</op:operator> <name><name pos:line="5804" pos:column="28">char</name><index pos:line="5804" pos:column="32">[<expr><name pos:line="5804" pos:column="33">len</name> <op:operator pos:line="5804" pos:column="37">+</op:operator> <lit:literal type="number" pos:line="5804" pos:column="39">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
		<for pos:line="5805" pos:column="17">for (<init><decl><type><name pos:line="5805" pos:column="22">int</name></type> <name pos:line="5805" pos:column="26">i</name> <init pos:line="5805" pos:column="28">= <expr><lit:literal type="number" pos:line="5805" pos:column="30">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5805" pos:column="33">i</name> <op:operator pos:line="5805" pos:column="35">&lt;</op:operator> <name pos:line="5805" pos:column="37">len</name></expr>;</condition> <incr><expr><name pos:line="5805" pos:column="42">i</name><op:operator pos:line="5805" pos:column="43">++</op:operator></expr></incr>) <block pos:line="5805" pos:column="47">{
			<expr_stmt><expr><name><name pos:line="5806" pos:column="25">text</name><index pos:line="5806" pos:column="29">[<expr><name pos:line="5806" pos:column="30">i</name></expr>]</index></name> <op:operator pos:line="5806" pos:column="33">=</op:operator> <call><name><name pos:line="5806" pos:column="35">pdoc</name><op:operator pos:line="5806" pos:column="39">-&gt;</op:operator><name pos:line="5806" pos:column="41">CharAt</name></name><argument_list pos:line="5806" pos:column="47">(<argument><expr><name pos:line="5806" pos:column="48">start</name> <op:operator pos:line="5806" pos:column="54">+</op:operator> <name pos:line="5806" pos:column="56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><name><name pos:line="5808" pos:column="17">text</name><index pos:line="5808" pos:column="21">[<expr><name pos:line="5808" pos:column="22">len</name></expr>]</index></name> <op:operator pos:line="5808" pos:column="27">=</op:operator> <lit:literal type="char" pos:line="5808" pos:column="29">'\0'</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="5810" pos:column="9">return <expr><name pos:line="5810" pos:column="16">text</name></expr>;</return>
}</block></function>

<function><type><name pos:line="5813" pos:column="1">void</name></type> <name><name pos:line="5813" pos:column="6">Editor</name><op:operator pos:line="5813" pos:column="12">::</op:operator><name pos:line="5813" pos:column="14">CopySelectionRange</name></name><parameter_list pos:line="5813" pos:column="32">(<param><decl><type><name pos:line="5813" pos:column="33">SelectionText</name> <type:modifier pos:line="5813" pos:column="47">*</type:modifier></type><name pos:line="5813" pos:column="48">ss</name></decl></param>, <param><decl><type><name pos:line="5813" pos:column="52">bool</name></type> <name pos:line="5813" pos:column="57">allowLineCopy</name></decl></param>)</parameter_list> <block pos:line="5813" pos:column="72">{
	<if pos:line="5814" pos:column="9">if <condition pos:line="5814" pos:column="12">(<expr><call><name><name pos:line="5814" pos:column="13">sel</name><op:operator pos:line="5814" pos:column="16">.</op:operator><name pos:line="5814" pos:column="17">Empty</name></name><argument_list pos:line="5814" pos:column="22">()</argument_list></call></expr>)</condition><then pos:line="5814" pos:column="25"> <block pos:line="5814" pos:column="26">{
		<if pos:line="5815" pos:column="17">if <condition pos:line="5815" pos:column="20">(<expr><name pos:line="5815" pos:column="21">allowLineCopy</name></expr>)</condition><then pos:line="5815" pos:column="35"> <block pos:line="5815" pos:column="36">{
			<decl_stmt><decl><type><name pos:line="5816" pos:column="25">int</name></type> <name pos:line="5816" pos:column="29">currentLine</name> <init pos:line="5816" pos:column="41">= <expr><call><name><name pos:line="5816" pos:column="43">pdoc</name><op:operator pos:line="5816" pos:column="47">-&gt;</op:operator><name pos:line="5816" pos:column="49">LineFromPosition</name></name><argument_list pos:line="5816" pos:column="65">(<argument><expr><call><name><name pos:line="5816" pos:column="66">sel</name><op:operator pos:line="5816" pos:column="69">.</op:operator><name pos:line="5816" pos:column="70">MainCaret</name></name><argument_list pos:line="5816" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5817" pos:column="25">int</name></type> <name pos:line="5817" pos:column="29">start</name> <init pos:line="5817" pos:column="35">= <expr><call><name><name pos:line="5817" pos:column="37">pdoc</name><op:operator pos:line="5817" pos:column="41">-&gt;</op:operator><name pos:line="5817" pos:column="43">LineStart</name></name><argument_list pos:line="5817" pos:column="52">(<argument><expr><name pos:line="5817" pos:column="53">currentLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5818" pos:column="25">int</name></type> <name pos:line="5818" pos:column="29">end</name> <init pos:line="5818" pos:column="33">= <expr><call><name><name pos:line="5818" pos:column="35">pdoc</name><op:operator pos:line="5818" pos:column="39">-&gt;</op:operator><name pos:line="5818" pos:column="41">LineEnd</name></name><argument_list pos:line="5818" pos:column="48">(<argument><expr><name pos:line="5818" pos:column="49">currentLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="5820" pos:column="25">char</name> <type:modifier pos:line="5820" pos:column="30">*</type:modifier></type><name pos:line="5820" pos:column="31">text</name> <init pos:line="5820" pos:column="36">= <expr><call><name pos:line="5820" pos:column="38">CopyRange</name><argument_list pos:line="5820" pos:column="47">(<argument><expr><name pos:line="5820" pos:column="48">start</name></expr></argument>, <argument><expr><name pos:line="5820" pos:column="55">end</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5821" pos:column="25">int</name></type> <name pos:line="5821" pos:column="29">textLen</name> <init pos:line="5821" pos:column="37">= <expr><name pos:line="5821" pos:column="39">text</name> <op:operator pos:line="5821" pos:column="44">?</op:operator> <call><name pos:line="5821" pos:column="46">strlen</name><argument_list pos:line="5821" pos:column="52">(<argument><expr><name pos:line="5821" pos:column="53">text</name></expr></argument>)</argument_list></call> <op:operator pos:line="5821" pos:column="59">:</op:operator> <lit:literal type="number" pos:line="5821" pos:column="61">0</lit:literal></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="5822" pos:column="25">// include room for \r\n\0</comment>
			<expr_stmt><expr><name pos:line="5823" pos:column="25">textLen</name> <op:operator pos:line="5823" pos:column="33">+=</op:operator> <lit:literal type="number" pos:line="5823" pos:column="36">3</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="5824" pos:column="25">char</name> <type:modifier pos:line="5824" pos:column="30">*</type:modifier></type><name pos:line="5824" pos:column="31">textWithEndl</name> <init pos:line="5824" pos:column="44">= <expr><op:operator pos:line="5824" pos:column="46">new</op:operator> <name><name pos:line="5824" pos:column="50">char</name><index pos:line="5824" pos:column="54">[<expr><name pos:line="5824" pos:column="55">textLen</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="5825" pos:column="25">textWithEndl</name><index pos:line="5825" pos:column="37">[<expr><lit:literal type="number" pos:line="5825" pos:column="38">0</lit:literal></expr>]</index></name> <op:operator pos:line="5825" pos:column="41">=</op:operator> <lit:literal type="char" pos:line="5825" pos:column="43">'\0'</lit:literal></expr>;</expr_stmt>
			<if pos:line="5826" pos:column="25">if <condition pos:line="5826" pos:column="28">(<expr><name pos:line="5826" pos:column="29">text</name></expr>)</condition><then pos:line="5826" pos:column="34">
				<expr_stmt><expr><call><name pos:line="5827" pos:column="33">strncat</name><argument_list pos:line="5827" pos:column="40">(<argument><expr><name pos:line="5827" pos:column="41">textWithEndl</name></expr></argument>, <argument><expr><name pos:line="5827" pos:column="55">text</name></expr></argument>, <argument><expr><name pos:line="5827" pos:column="61">textLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="5828" pos:column="25">if <condition pos:line="5828" pos:column="28">(<expr><name><name pos:line="5828" pos:column="29">pdoc</name><op:operator pos:line="5828" pos:column="33">-&gt;</op:operator><name pos:line="5828" pos:column="35">eolMode</name></name> <op:operator pos:line="5828" pos:column="43">!=</op:operator> <name pos:line="5828" pos:column="46">SC_EOL_LF</name></expr>)</condition><then pos:line="5828" pos:column="56">
				<expr_stmt><expr><call><name pos:line="5829" pos:column="33">strncat</name><argument_list pos:line="5829" pos:column="40">(<argument><expr><name pos:line="5829" pos:column="41">textWithEndl</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="5829" pos:column="55">"\r"</lit:literal></expr></argument>, <argument><expr><name pos:line="5829" pos:column="61">textLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="5830" pos:column="25">if <condition pos:line="5830" pos:column="28">(<expr><name><name pos:line="5830" pos:column="29">pdoc</name><op:operator pos:line="5830" pos:column="33">-&gt;</op:operator><name pos:line="5830" pos:column="35">eolMode</name></name> <op:operator pos:line="5830" pos:column="43">!=</op:operator> <name pos:line="5830" pos:column="46">SC_EOL_CR</name></expr>)</condition><then pos:line="5830" pos:column="56">
				<expr_stmt><expr><call><name pos:line="5831" pos:column="33">strncat</name><argument_list pos:line="5831" pos:column="40">(<argument><expr><name pos:line="5831" pos:column="41">textWithEndl</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="5831" pos:column="55">"\n"</lit:literal></expr></argument>, <argument><expr><name pos:line="5831" pos:column="61">textLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name><name pos:line="5832" pos:column="25">ss</name><op:operator pos:line="5832" pos:column="27">-&gt;</op:operator><name pos:line="5832" pos:column="29">Set</name></name><argument_list pos:line="5832" pos:column="32">(<argument><expr><name pos:line="5832" pos:column="33">textWithEndl</name></expr></argument>, <argument><expr><call><name pos:line="5832" pos:column="47">strlen</name><argument_list pos:line="5832" pos:column="53">(<argument><expr><name pos:line="5832" pos:column="54">textWithEndl</name></expr></argument>)</argument_list></call> <op:operator pos:line="5832" pos:column="68">+</op:operator> <lit:literal type="number" pos:line="5832" pos:column="70">1</lit:literal></expr></argument>,
				<argument><expr><name><name pos:line="5833" pos:column="33">pdoc</name><op:operator pos:line="5833" pos:column="37">-&gt;</op:operator><name pos:line="5833" pos:column="39">dbcsCodePage</name></name></expr></argument>, <argument><expr><name><name pos:line="5833" pos:column="53">vs</name><op:operator pos:line="5833" pos:column="55">.</op:operator><name pos:line="5833" pos:column="56">styles</name><index pos:line="5833" pos:column="62">[<expr><name pos:line="5833" pos:column="63">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="5833" pos:column="77">.</op:operator><name pos:line="5833" pos:column="78">characterSet</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5833" pos:column="92">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5833" pos:column="99">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="5834" pos:column="25">delete</op:operator> <index pos:line="5834" pos:column="32">[]</index><name pos:line="5834" pos:column="34">text</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="5836" pos:column="11">else <block pos:line="5836" pos:column="16">{
		<decl_stmt><decl><type><name pos:line="5837" pos:column="17">int</name></type> <name pos:line="5837" pos:column="21">delimiterLength</name> <init pos:line="5837" pos:column="37">= <expr><lit:literal type="number" pos:line="5837" pos:column="39">0</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="5838" pos:column="17">if <condition pos:line="5838" pos:column="20">(<expr><name><name pos:line="5838" pos:column="21">sel</name><op:operator pos:line="5838" pos:column="24">.</op:operator><name pos:line="5838" pos:column="25">selType</name></name> <op:operator pos:line="5838" pos:column="33">==</op:operator> <name><name pos:line="5838" pos:column="36">Selection</name><op:operator pos:line="5838" pos:column="45">::</op:operator><name pos:line="5838" pos:column="47">selRectangle</name></name></expr>)</condition><then pos:line="5838" pos:column="60"> <block pos:line="5838" pos:column="61">{
			<if pos:line="5839" pos:column="25">if <condition pos:line="5839" pos:column="28">(<expr><name><name pos:line="5839" pos:column="29">pdoc</name><op:operator pos:line="5839" pos:column="33">-&gt;</op:operator><name pos:line="5839" pos:column="35">eolMode</name></name> <op:operator pos:line="5839" pos:column="43">==</op:operator> <name pos:line="5839" pos:column="46">SC_EOL_CRLF</name></expr>)</condition><then pos:line="5839" pos:column="58"> <block pos:line="5839" pos:column="59">{
				<expr_stmt><expr><name pos:line="5840" pos:column="33">delimiterLength</name> <op:operator pos:line="5840" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="5840" pos:column="51">2</lit:literal></expr>;</expr_stmt>
			}</block></then> <else pos:line="5841" pos:column="27">else <block pos:line="5841" pos:column="32">{
				<expr_stmt><expr><name pos:line="5842" pos:column="33">delimiterLength</name> <op:operator pos:line="5842" pos:column="49">=</op:operator> <lit:literal type="number" pos:line="5842" pos:column="51">1</lit:literal></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="5845" pos:column="17">int</name></type> <name pos:line="5845" pos:column="21">size</name> <init pos:line="5845" pos:column="26">= <expr><call><name><name pos:line="5845" pos:column="28">sel</name><op:operator pos:line="5845" pos:column="31">.</op:operator><name pos:line="5845" pos:column="32">Length</name></name><argument_list pos:line="5845" pos:column="38">()</argument_list></call> <op:operator pos:line="5845" pos:column="41">+</op:operator> <name pos:line="5845" pos:column="43">delimiterLength</name> <op:operator pos:line="5845" pos:column="59">*</op:operator> <call><name><name pos:line="5845" pos:column="61">sel</name><op:operator pos:line="5845" pos:column="64">.</op:operator><name pos:line="5845" pos:column="65">Count</name></name><argument_list pos:line="5845" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5846" pos:column="17">char</name> <type:modifier pos:line="5846" pos:column="22">*</type:modifier></type><name pos:line="5846" pos:column="23">text</name> <init pos:line="5846" pos:column="28">= <expr><op:operator pos:line="5846" pos:column="30">new</op:operator> <name><name pos:line="5846" pos:column="34">char</name><index pos:line="5846" pos:column="38">[<expr><name pos:line="5846" pos:column="39">size</name> <op:operator pos:line="5846" pos:column="44">+</op:operator> <lit:literal type="number" pos:line="5846" pos:column="46">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5847" pos:column="17">int</name></type> <name pos:line="5847" pos:column="21">j</name> <init pos:line="5847" pos:column="23">= <expr><lit:literal type="number" pos:line="5847" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name><name pos:line="5848" pos:column="17">std</name><op:operator pos:line="5848" pos:column="20">::</op:operator><name><name pos:line="5848" pos:column="22">vector</name><argument_list pos:line="5848" pos:column="28">&lt;<argument><expr><name pos:line="5848" pos:column="29">SelectionRange</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="5848" pos:column="45">rangesInOrder</name> <init pos:line="5848" pos:column="59">= <expr><call><name><name pos:line="5848" pos:column="61">sel</name><op:operator pos:line="5848" pos:column="64">.</op:operator><name pos:line="5848" pos:column="65">RangesCopy</name></name><argument_list pos:line="5848" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="5849" pos:column="17">if <condition pos:line="5849" pos:column="20">(<expr><name><name pos:line="5849" pos:column="21">sel</name><op:operator pos:line="5849" pos:column="24">.</op:operator><name pos:line="5849" pos:column="25">selType</name></name> <op:operator pos:line="5849" pos:column="33">==</op:operator> <name><name pos:line="5849" pos:column="36">Selection</name><op:operator pos:line="5849" pos:column="45">::</op:operator><name pos:line="5849" pos:column="47">selRectangle</name></name></expr>)</condition><then pos:line="5849" pos:column="60">
			<expr_stmt><expr><call><name><name pos:line="5850" pos:column="25">std</name><op:operator pos:line="5850" pos:column="28">::</op:operator><name pos:line="5850" pos:column="30">sort</name></name><argument_list pos:line="5850" pos:column="34">(<argument><expr><call><name><name pos:line="5850" pos:column="35">rangesInOrder</name><op:operator pos:line="5850" pos:column="48">.</op:operator><name pos:line="5850" pos:column="49">begin</name></name><argument_list pos:line="5850" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5850" pos:column="58">rangesInOrder</name><op:operator pos:line="5850" pos:column="71">.</op:operator><name pos:line="5850" pos:column="72">end</name></name><argument_list pos:line="5850" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<for pos:line="5851" pos:column="17">for (<init><decl><type><name pos:line="5851" pos:column="22">size_t</name></type> <name pos:line="5851" pos:column="29">r</name><init pos:line="5851" pos:column="30">=<expr><lit:literal type="number" pos:line="5851" pos:column="31">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5851" pos:column="34">r</name><op:operator pos:line="5851" pos:column="35">&lt;</op:operator><call><name><name pos:line="5851" pos:column="36">rangesInOrder</name><op:operator pos:line="5851" pos:column="49">.</op:operator><name pos:line="5851" pos:column="50">size</name></name><argument_list pos:line="5851" pos:column="54">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5851" pos:column="58">r</name><op:operator pos:line="5851" pos:column="59">++</op:operator></expr></incr>) <block pos:line="5851" pos:column="63">{
			<decl_stmt><decl><type><name pos:line="5852" pos:column="25">SelectionRange</name></type> <name pos:line="5852" pos:column="40">current</name> <init pos:line="5852" pos:column="48">= <expr><name><name pos:line="5852" pos:column="50">rangesInOrder</name><index pos:line="5852" pos:column="63">[<expr><name pos:line="5852" pos:column="64">r</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<for pos:line="5853" pos:column="25">for (<init><decl><type><name pos:line="5853" pos:column="30">int</name></type> <name pos:line="5853" pos:column="34">i</name> <init pos:line="5853" pos:column="36">= <expr><call><name><name pos:line="5853" pos:column="38">current</name><op:operator pos:line="5853" pos:column="45">.</op:operator><name pos:line="5853" pos:column="46">Start</name></name><argument_list pos:line="5853" pos:column="51">()</argument_list></call><op:operator pos:line="5853" pos:column="53">.</op:operator><call><name pos:line="5853" pos:column="54">Position</name><argument_list pos:line="5853" pos:column="62">()</argument_list></call></expr></init></decl>;</init>
			        <condition><expr><name pos:line="5854" pos:column="33">i</name> <op:operator pos:line="5854" pos:column="35">&lt;</op:operator> <call><name><name pos:line="5854" pos:column="37">current</name><op:operator pos:line="5854" pos:column="44">.</op:operator><name pos:line="5854" pos:column="45">End</name></name><argument_list pos:line="5854" pos:column="48">()</argument_list></call><op:operator pos:line="5854" pos:column="50">.</op:operator><call><name pos:line="5854" pos:column="51">Position</name><argument_list pos:line="5854" pos:column="59">()</argument_list></call></expr>;</condition>
			        <incr><expr><name pos:line="5855" pos:column="33">i</name><op:operator pos:line="5855" pos:column="34">++</op:operator></expr></incr>) <block pos:line="5855" pos:column="38">{
				<expr_stmt><expr><name><name pos:line="5856" pos:column="33">text</name><index pos:line="5856" pos:column="37">[<expr><name pos:line="5856" pos:column="38">j</name><op:operator pos:line="5856" pos:column="39">++</op:operator></expr>]</index></name> <op:operator pos:line="5856" pos:column="43">=</op:operator> <call><name><name pos:line="5856" pos:column="45">pdoc</name><op:operator pos:line="5856" pos:column="49">-&gt;</op:operator><name pos:line="5856" pos:column="51">CharAt</name></name><argument_list pos:line="5856" pos:column="57">(<argument><expr><name pos:line="5856" pos:column="58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<if pos:line="5858" pos:column="25">if <condition pos:line="5858" pos:column="28">(<expr><name><name pos:line="5858" pos:column="29">sel</name><op:operator pos:line="5858" pos:column="32">.</op:operator><name pos:line="5858" pos:column="33">selType</name></name> <op:operator pos:line="5858" pos:column="41">==</op:operator> <name><name pos:line="5858" pos:column="44">Selection</name><op:operator pos:line="5858" pos:column="53">::</op:operator><name pos:line="5858" pos:column="55">selRectangle</name></name></expr>)</condition><then pos:line="5858" pos:column="68"> <block pos:line="5858" pos:column="69">{
				<if pos:line="5859" pos:column="33">if <condition pos:line="5859" pos:column="36">(<expr><name><name pos:line="5859" pos:column="37">pdoc</name><op:operator pos:line="5859" pos:column="41">-&gt;</op:operator><name pos:line="5859" pos:column="43">eolMode</name></name> <op:operator pos:line="5859" pos:column="51">!=</op:operator> <name pos:line="5859" pos:column="54">SC_EOL_LF</name></expr>)</condition><then pos:line="5859" pos:column="64"> <block pos:line="5859" pos:column="65">{
					<expr_stmt><expr><name><name pos:line="5860" pos:column="41">text</name><index pos:line="5860" pos:column="45">[<expr><name pos:line="5860" pos:column="46">j</name><op:operator pos:line="5860" pos:column="47">++</op:operator></expr>]</index></name> <op:operator pos:line="5860" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="5860" pos:column="53">'\r'</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="5862" pos:column="33">if <condition pos:line="5862" pos:column="36">(<expr><name><name pos:line="5862" pos:column="37">pdoc</name><op:operator pos:line="5862" pos:column="41">-&gt;</op:operator><name pos:line="5862" pos:column="43">eolMode</name></name> <op:operator pos:line="5862" pos:column="51">!=</op:operator> <name pos:line="5862" pos:column="54">SC_EOL_CR</name></expr>)</condition><then pos:line="5862" pos:column="64"> <block pos:line="5862" pos:column="65">{
					<expr_stmt><expr><name><name pos:line="5863" pos:column="41">text</name><index pos:line="5863" pos:column="45">[<expr><name pos:line="5863" pos:column="46">j</name><op:operator pos:line="5863" pos:column="47">++</op:operator></expr>]</index></name> <op:operator pos:line="5863" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="5863" pos:column="53">'\n'</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></for>
		<expr_stmt><expr><name><name pos:line="5867" pos:column="17">text</name><index pos:line="5867" pos:column="21">[<expr><name pos:line="5867" pos:column="22">size</name></expr>]</index></name> <op:operator pos:line="5867" pos:column="28">=</op:operator> <lit:literal type="char" pos:line="5867" pos:column="30">'\0'</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5868" pos:column="17">ss</name><op:operator pos:line="5868" pos:column="19">-&gt;</op:operator><name pos:line="5868" pos:column="21">Set</name></name><argument_list pos:line="5868" pos:column="24">(<argument><expr><name pos:line="5868" pos:column="25">text</name></expr></argument>, <argument><expr><name pos:line="5868" pos:column="31">size</name> <op:operator pos:line="5868" pos:column="36">+</op:operator> <lit:literal type="number" pos:line="5868" pos:column="38">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="5868" pos:column="41">pdoc</name><op:operator pos:line="5868" pos:column="45">-&gt;</op:operator><name pos:line="5868" pos:column="47">dbcsCodePage</name></name></expr></argument>,
			<argument><expr><name><name pos:line="5869" pos:column="25">vs</name><op:operator pos:line="5869" pos:column="27">.</op:operator><name pos:line="5869" pos:column="28">styles</name><index pos:line="5869" pos:column="34">[<expr><name pos:line="5869" pos:column="35">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="5869" pos:column="49">.</op:operator><name pos:line="5869" pos:column="50">characterSet</name></expr></argument>, <argument><expr><call><name><name pos:line="5869" pos:column="64">sel</name><op:operator pos:line="5869" pos:column="67">.</op:operator><name pos:line="5869" pos:column="68">IsRectangular</name></name><argument_list pos:line="5869" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5869" pos:column="85">sel</name><op:operator pos:line="5869" pos:column="88">.</op:operator><name pos:line="5869" pos:column="89">selType</name></name> <op:operator pos:line="5869" pos:column="97">==</op:operator> <name><name pos:line="5869" pos:column="100">Selection</name><op:operator pos:line="5869" pos:column="109">::</op:operator><name pos:line="5869" pos:column="111">selLines</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="5873" pos:column="1">void</name></type> <name><name pos:line="5873" pos:column="6">Editor</name><op:operator pos:line="5873" pos:column="12">::</op:operator><name pos:line="5873" pos:column="14">CopyRangeToClipboard</name></name><parameter_list pos:line="5873" pos:column="34">(<param><decl><type><name pos:line="5873" pos:column="35">int</name></type> <name pos:line="5873" pos:column="39">start</name></decl></param>, <param><decl><type><name pos:line="5873" pos:column="46">int</name></type> <name pos:line="5873" pos:column="50">end</name></decl></param>)</parameter_list> <block pos:line="5873" pos:column="55">{
	<expr_stmt><expr><name pos:line="5874" pos:column="9">start</name> <op:operator pos:line="5874" pos:column="15">=</op:operator> <call><name><name pos:line="5874" pos:column="17">pdoc</name><op:operator pos:line="5874" pos:column="21">-&gt;</op:operator><name pos:line="5874" pos:column="23">ClampPositionIntoDocument</name></name><argument_list pos:line="5874" pos:column="48">(<argument><expr><name pos:line="5874" pos:column="49">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="5875" pos:column="9">end</name> <op:operator pos:line="5875" pos:column="13">=</op:operator> <call><name><name pos:line="5875" pos:column="15">pdoc</name><op:operator pos:line="5875" pos:column="19">-&gt;</op:operator><name pos:line="5875" pos:column="21">ClampPositionIntoDocument</name></name><argument_list pos:line="5875" pos:column="46">(<argument><expr><name pos:line="5875" pos:column="47">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="5876" pos:column="9">SelectionText</name></type> <name pos:line="5876" pos:column="23">selectedText</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="5877" pos:column="9">selectedText</name><op:operator pos:line="5877" pos:column="21">.</op:operator><name pos:line="5877" pos:column="22">Set</name></name><argument_list pos:line="5877" pos:column="25">(<argument><expr><call><name pos:line="5877" pos:column="26">CopyRange</name><argument_list pos:line="5877" pos:column="35">(<argument><expr><name pos:line="5877" pos:column="36">start</name></expr></argument>, <argument><expr><name pos:line="5877" pos:column="43">end</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5877" pos:column="49">end</name> <op:operator pos:line="5877" pos:column="53">-</op:operator> <name pos:line="5877" pos:column="55">start</name> <op:operator pos:line="5877" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="5877" pos:column="63">1</lit:literal></expr></argument>,
		<argument><expr><name><name pos:line="5878" pos:column="17">pdoc</name><op:operator pos:line="5878" pos:column="21">-&gt;</op:operator><name pos:line="5878" pos:column="23">dbcsCodePage</name></name></expr></argument>, <argument><expr><name><name pos:line="5878" pos:column="37">vs</name><op:operator pos:line="5878" pos:column="39">.</op:operator><name pos:line="5878" pos:column="40">styles</name><index pos:line="5878" pos:column="46">[<expr><name pos:line="5878" pos:column="47">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="5878" pos:column="61">.</op:operator><name pos:line="5878" pos:column="62">characterSet</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5878" pos:column="76">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5878" pos:column="83">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="5879" pos:column="9">CopyToClipboard</name><argument_list pos:line="5879" pos:column="24">(<argument><expr><name pos:line="5879" pos:column="25">selectedText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="5882" pos:column="1">void</name></type> <name><name pos:line="5882" pos:column="6">Editor</name><op:operator pos:line="5882" pos:column="12">::</op:operator><name pos:line="5882" pos:column="14">CopyText</name></name><parameter_list pos:line="5882" pos:column="22">(<param><decl><type><name pos:line="5882" pos:column="23">int</name></type> <name pos:line="5882" pos:column="27">length</name></decl></param>, <param><decl><type><specifier pos:line="5882" pos:column="35">const</specifier> <name pos:line="5882" pos:column="41">char</name> <type:modifier pos:line="5882" pos:column="46">*</type:modifier></type><name pos:line="5882" pos:column="47">text</name></decl></param>)</parameter_list> <block pos:line="5882" pos:column="53">{
	<decl_stmt><decl><type><name pos:line="5883" pos:column="9">SelectionText</name></type> <name pos:line="5883" pos:column="23">selectedText</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="5884" pos:column="9">selectedText</name><op:operator pos:line="5884" pos:column="21">.</op:operator><name pos:line="5884" pos:column="22">Copy</name></name><argument_list pos:line="5884" pos:column="26">(<argument><expr><name pos:line="5884" pos:column="27">text</name></expr></argument>, <argument><expr><name pos:line="5884" pos:column="33">length</name> <op:operator pos:line="5884" pos:column="40">+</op:operator> <lit:literal type="number" pos:line="5884" pos:column="42">1</lit:literal></expr></argument>,
		<argument><expr><name><name pos:line="5885" pos:column="17">pdoc</name><op:operator pos:line="5885" pos:column="21">-&gt;</op:operator><name pos:line="5885" pos:column="23">dbcsCodePage</name></name></expr></argument>, <argument><expr><name><name pos:line="5885" pos:column="37">vs</name><op:operator pos:line="5885" pos:column="39">.</op:operator><name pos:line="5885" pos:column="40">styles</name><index pos:line="5885" pos:column="46">[<expr><name pos:line="5885" pos:column="47">STYLE_DEFAULT</name></expr>]</index></name><op:operator pos:line="5885" pos:column="61">.</op:operator><name pos:line="5885" pos:column="62">characterSet</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5885" pos:column="76">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="5885" pos:column="83">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="5886" pos:column="9">CopyToClipboard</name><argument_list pos:line="5886" pos:column="24">(<argument><expr><name pos:line="5886" pos:column="25">selectedText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="5889" pos:column="1">void</name></type> <name><name pos:line="5889" pos:column="6">Editor</name><op:operator pos:line="5889" pos:column="12">::</op:operator><name pos:line="5889" pos:column="14">SetDragPosition</name></name><parameter_list pos:line="5889" pos:column="29">(<param><decl><type><name pos:line="5889" pos:column="30">SelectionPosition</name></type> <name pos:line="5889" pos:column="48">newPos</name></decl></param>)</parameter_list> <block pos:line="5889" pos:column="56">{
	<if pos:line="5890" pos:column="9">if <condition pos:line="5890" pos:column="12">(<expr><call><name><name pos:line="5890" pos:column="13">newPos</name><op:operator pos:line="5890" pos:column="19">.</op:operator><name pos:line="5890" pos:column="20">Position</name></name><argument_list pos:line="5890" pos:column="28">()</argument_list></call> <op:operator pos:line="5890" pos:column="31">&gt;=</op:operator> <lit:literal type="number" pos:line="5890" pos:column="34">0</lit:literal></expr>)</condition><then pos:line="5890" pos:column="36"> <block pos:line="5890" pos:column="37">{
		<expr_stmt><expr><name pos:line="5891" pos:column="17">newPos</name> <op:operator pos:line="5891" pos:column="24">=</op:operator> <call><name pos:line="5891" pos:column="26">MovePositionOutsideChar</name><argument_list pos:line="5891" pos:column="49">(<argument><expr><name pos:line="5891" pos:column="50">newPos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="5891" pos:column="58">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5892" pos:column="17">posDrop</name> <op:operator pos:line="5892" pos:column="25">=</op:operator> <name pos:line="5892" pos:column="27">newPos</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="5894" pos:column="9">if <condition pos:line="5894" pos:column="12">(<expr><op:operator pos:line="5894" pos:column="13">!</op:operator><op:operator pos:line="5894" pos:column="14">(</op:operator><name pos:line="5894" pos:column="15">posDrag</name> <op:operator pos:line="5894" pos:column="23">==</op:operator> <name pos:line="5894" pos:column="26">newPos</name><op:operator pos:line="5894" pos:column="32">)</op:operator></expr>)</condition><then pos:line="5894" pos:column="34"> <block pos:line="5894" pos:column="35">{
		<expr_stmt><expr><name><name pos:line="5895" pos:column="17">caret</name><op:operator pos:line="5895" pos:column="22">.</op:operator><name pos:line="5895" pos:column="23">on</name></name> <op:operator pos:line="5895" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="5895" pos:column="28">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5896" pos:column="17">SetTicking</name><argument_list pos:line="5896" pos:column="27">(<argument><expr><lit:literal type="boolean" pos:line="5896" pos:column="28">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5897" pos:column="17">InvalidateCaret</name><argument_list pos:line="5897" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="5898" pos:column="17">posDrag</name> <op:operator pos:line="5898" pos:column="25">=</op:operator> <name pos:line="5898" pos:column="27">newPos</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="5899" pos:column="17">InvalidateCaret</name><argument_list pos:line="5899" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="5903" pos:column="1">void</name></type> <name><name pos:line="5903" pos:column="6">Editor</name><op:operator pos:line="5903" pos:column="12">::</op:operator><name pos:line="5903" pos:column="14">DisplayCursor</name></name><parameter_list pos:line="5903" pos:column="27">(<param><decl><type><name><name pos:line="5903" pos:column="28">Window</name><op:operator pos:line="5903" pos:column="34">::</op:operator><name pos:line="5903" pos:column="36">Cursor</name></name></type> <name pos:line="5903" pos:column="43">c</name></decl></param>)</parameter_list> <block pos:line="5903" pos:column="46">{
	<if pos:line="5904" pos:column="9">if <condition pos:line="5904" pos:column="12">(<expr><name pos:line="5904" pos:column="13">cursorMode</name> <op:operator pos:line="5904" pos:column="24">==</op:operator> <name pos:line="5904" pos:column="27">SC_CURSORNORMAL</name></expr>)</condition><then pos:line="5904" pos:column="43">
		<expr_stmt><expr><call><name><name pos:line="5905" pos:column="17">wMain</name><op:operator pos:line="5905" pos:column="22">.</op:operator><name pos:line="5905" pos:column="23">SetCursor</name></name><argument_list pos:line="5905" pos:column="32">(<argument><expr><name pos:line="5905" pos:column="33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="5906" pos:column="9">else
		<expr_stmt><expr><call><name><name pos:line="5907" pos:column="17">wMain</name><op:operator pos:line="5907" pos:column="22">.</op:operator><name pos:line="5907" pos:column="23">SetCursor</name></name><argument_list pos:line="5907" pos:column="32">(<argument><expr><call><name><name pos:line="5907" pos:column="33">static_cast</name><argument_list pos:line="5907" pos:column="44">&lt;<argument><expr><name><name pos:line="5907" pos:column="45">Window</name><op:operator pos:line="5907" pos:column="51">::</op:operator><name pos:line="5907" pos:column="53">Cursor</name></name></expr></argument>&gt;</argument_list></name><argument_list pos:line="5907" pos:column="60">(<argument><expr><name pos:line="5907" pos:column="61">cursorMode</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
}</block></function>

<function><type><name pos:line="5910" pos:column="1">bool</name></type> <name><name pos:line="5910" pos:column="6">Editor</name><op:operator pos:line="5910" pos:column="12">::</op:operator><name pos:line="5910" pos:column="14">DragThreshold</name></name><parameter_list pos:line="5910" pos:column="27">(<param><decl><type><name pos:line="5910" pos:column="28">Point</name></type> <name pos:line="5910" pos:column="34">ptStart</name></decl></param>, <param><decl><type><name pos:line="5910" pos:column="43">Point</name></type> <name pos:line="5910" pos:column="49">ptNow</name></decl></param>)</parameter_list> <block pos:line="5910" pos:column="56">{
	<decl_stmt><decl><type><name pos:line="5911" pos:column="9">int</name></type> <name pos:line="5911" pos:column="13">xMove</name> <init pos:line="5911" pos:column="19">= <expr><name><name pos:line="5911" pos:column="21">ptStart</name><op:operator pos:line="5911" pos:column="28">.</op:operator><name pos:line="5911" pos:column="29">x</name></name> <op:operator pos:line="5911" pos:column="31">-</op:operator> <name><name pos:line="5911" pos:column="33">ptNow</name><op:operator pos:line="5911" pos:column="38">.</op:operator><name pos:line="5911" pos:column="39">x</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5912" pos:column="9">int</name></type> <name pos:line="5912" pos:column="13">yMove</name> <init pos:line="5912" pos:column="19">= <expr><name><name pos:line="5912" pos:column="21">ptStart</name><op:operator pos:line="5912" pos:column="28">.</op:operator><name pos:line="5912" pos:column="29">y</name></name> <op:operator pos:line="5912" pos:column="31">-</op:operator> <name><name pos:line="5912" pos:column="33">ptNow</name><op:operator pos:line="5912" pos:column="38">.</op:operator><name pos:line="5912" pos:column="39">y</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5913" pos:column="9">int</name></type> <name pos:line="5913" pos:column="13">distanceSquared</name> <init pos:line="5913" pos:column="29">= <expr><name pos:line="5913" pos:column="31">xMove</name> <op:operator pos:line="5913" pos:column="37">*</op:operator> <name pos:line="5913" pos:column="39">xMove</name> <op:operator pos:line="5913" pos:column="45">+</op:operator> <name pos:line="5913" pos:column="47">yMove</name> <op:operator pos:line="5913" pos:column="53">*</op:operator> <name pos:line="5913" pos:column="55">yMove</name></expr></init></decl>;</decl_stmt>
	<return pos:line="5914" pos:column="9">return <expr><name pos:line="5914" pos:column="16">distanceSquared</name> <op:operator pos:line="5914" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="5914" pos:column="34">16</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5917" pos:column="1">void</name></type> <name><name pos:line="5917" pos:column="6">Editor</name><op:operator pos:line="5917" pos:column="12">::</op:operator><name pos:line="5917" pos:column="14">StartDrag</name></name><parameter_list pos:line="5917" pos:column="23">()</parameter_list> <block pos:line="5917" pos:column="26">{
	<comment type="line" pos:line="5918" pos:column="9">// Always handled by subclasses</comment>
	<comment type="line" pos:line="5919" pos:column="9">//SetMouseCapture(true);</comment>
	<comment type="line" pos:line="5920" pos:column="9">//DisplayCursor(Window::cursorArrow);</comment>
}</block></function>

<function><type><name pos:line="5923" pos:column="1">void</name></type> <name><name pos:line="5923" pos:column="6">Editor</name><op:operator pos:line="5923" pos:column="12">::</op:operator><name pos:line="5923" pos:column="14">DropAt</name></name><parameter_list pos:line="5923" pos:column="20">(<param><decl><type><name pos:line="5923" pos:column="21">SelectionPosition</name></type> <name pos:line="5923" pos:column="39">position</name></decl></param>, <param><decl><type><specifier pos:line="5923" pos:column="49">const</specifier> <name pos:line="5923" pos:column="55">char</name> <type:modifier pos:line="5923" pos:column="60">*</type:modifier></type><name pos:line="5923" pos:column="61">value</name></decl></param>, <param><decl><type><name pos:line="5923" pos:column="68">bool</name></type> <name pos:line="5923" pos:column="73">moving</name></decl></param>, <param><decl><type><name pos:line="5923" pos:column="81">bool</name></type> <name pos:line="5923" pos:column="86">rectangular</name></decl></param>)</parameter_list> <block pos:line="5923" pos:column="99">{
	<comment type="line" pos:line="5924" pos:column="9">//Platform::DebugPrintf("DropAt %d %d\n", inDragDrop, position);</comment>
	<if pos:line="5925" pos:column="9">if <condition pos:line="5925" pos:column="12">(<expr><name pos:line="5925" pos:column="13">inDragDrop</name> <op:operator pos:line="5925" pos:column="24">==</op:operator> <name pos:line="5925" pos:column="27">ddDragging</name></expr>)</condition><then pos:line="5925" pos:column="38">
		<expr_stmt><expr><name pos:line="5926" pos:column="17">dropWentOutside</name> <op:operator pos:line="5926" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="5926" pos:column="35">false</lit:literal></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="5928" pos:column="9">bool</name></type> <name pos:line="5928" pos:column="14">positionWasInSelection</name> <init pos:line="5928" pos:column="37">= <expr><call><name pos:line="5928" pos:column="39">PositionInSelection</name><argument_list pos:line="5928" pos:column="58">(<argument><expr><call><name><name pos:line="5928" pos:column="59">position</name><op:operator pos:line="5928" pos:column="67">.</op:operator><name pos:line="5928" pos:column="68">Position</name></name><argument_list pos:line="5928" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="5930" pos:column="9">bool</name></type> <name pos:line="5930" pos:column="14">positionOnEdgeOfSelection</name> <init pos:line="5930" pos:column="40">=
	    <expr><op:operator pos:line="5931" pos:column="13">(</op:operator><name pos:line="5931" pos:column="14">position</name> <op:operator pos:line="5931" pos:column="23">==</op:operator> <call><name pos:line="5931" pos:column="26">SelectionStart</name><argument_list pos:line="5931" pos:column="40">()</argument_list></call><op:operator pos:line="5931" pos:column="42">)</op:operator> <op:operator pos:line="5931" pos:column="44">||</op:operator> <op:operator pos:line="5931" pos:column="47">(</op:operator><name pos:line="5931" pos:column="48">position</name> <op:operator pos:line="5931" pos:column="57">==</op:operator> <call><name pos:line="5931" pos:column="60">SelectionEnd</name><argument_list pos:line="5931" pos:column="72">()</argument_list></call><op:operator pos:line="5931" pos:column="74">)</op:operator></expr></init></decl>;</decl_stmt>

	<if pos:line="5933" pos:column="9">if <condition pos:line="5933" pos:column="12">(<expr><op:operator pos:line="5933" pos:column="13">(</op:operator><name pos:line="5933" pos:column="14">inDragDrop</name> <op:operator pos:line="5933" pos:column="25">!=</op:operator> <name pos:line="5933" pos:column="28">ddDragging</name><op:operator pos:line="5933" pos:column="38">)</op:operator> <op:operator pos:line="5933" pos:column="40">||</op:operator> <op:operator pos:line="5933" pos:column="43">!</op:operator><op:operator pos:line="5933" pos:column="44">(</op:operator><name pos:line="5933" pos:column="45">positionWasInSelection</name><op:operator pos:line="5933" pos:column="67">)</op:operator> <op:operator pos:line="5933" pos:column="69">||</op:operator>
	        <op:operator pos:line="5934" pos:column="17">(</op:operator><name pos:line="5934" pos:column="18">positionOnEdgeOfSelection</name> <op:operator pos:line="5934" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="5934" pos:column="47">!</op:operator><name pos:line="5934" pos:column="48">moving</name><op:operator pos:line="5934" pos:column="54">)</op:operator></expr>)</condition><then pos:line="5934" pos:column="56"> <block pos:line="5934" pos:column="57">{

		<decl_stmt><decl><type><name pos:line="5936" pos:column="17">SelectionPosition</name></type> <name pos:line="5936" pos:column="35">selStart</name> <init pos:line="5936" pos:column="44">= <expr><call><name pos:line="5936" pos:column="46">SelectionStart</name><argument_list pos:line="5936" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5937" pos:column="17">SelectionPosition</name></type> <name pos:line="5937" pos:column="35">selEnd</name> <init pos:line="5937" pos:column="42">= <expr><call><name pos:line="5937" pos:column="44">SelectionEnd</name><argument_list pos:line="5937" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<function_decl><type><name pos:line="5939" pos:column="17">UndoGroup</name></type> <name pos:line="5939" pos:column="27">ug</name><parameter_list pos:line="5939" pos:column="29">(<param><decl><type><name pos:line="5939" pos:column="30">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>

		<decl_stmt><decl><type><name pos:line="5941" pos:column="17">SelectionPosition</name></type> <name pos:line="5941" pos:column="35">positionAfterDeletion</name> <init pos:line="5941" pos:column="57">= <expr><name pos:line="5941" pos:column="59">position</name></expr></init></decl>;</decl_stmt>
		<if pos:line="5942" pos:column="17">if <condition pos:line="5942" pos:column="20">(<expr><op:operator pos:line="5942" pos:column="21">(</op:operator><name pos:line="5942" pos:column="22">inDragDrop</name> <op:operator pos:line="5942" pos:column="33">==</op:operator> <name pos:line="5942" pos:column="36">ddDragging</name><op:operator pos:line="5942" pos:column="46">)</op:operator> <op:operator pos:line="5942" pos:column="48">&amp;&amp;</op:operator> <name pos:line="5942" pos:column="51">moving</name></expr>)</condition><then pos:line="5942" pos:column="58"> <block pos:line="5942" pos:column="59">{
			<comment type="line" pos:line="5943" pos:column="25">// Remove dragged out text</comment>
			<if pos:line="5944" pos:column="25">if <condition pos:line="5944" pos:column="28">(<expr><name pos:line="5944" pos:column="29">rectangular</name> <op:operator pos:line="5944" pos:column="41">||</op:operator> <name><name pos:line="5944" pos:column="44">sel</name><op:operator pos:line="5944" pos:column="47">.</op:operator><name pos:line="5944" pos:column="48">selType</name></name> <op:operator pos:line="5944" pos:column="56">==</op:operator> <name><name pos:line="5944" pos:column="59">Selection</name><op:operator pos:line="5944" pos:column="68">::</op:operator><name pos:line="5944" pos:column="70">selLines</name></name></expr>)</condition><then pos:line="5944" pos:column="79"> <block pos:line="5944" pos:column="80">{
				<for pos:line="5945" pos:column="33">for (<init><decl><type><name pos:line="5945" pos:column="38">size_t</name></type> <name pos:line="5945" pos:column="45">r</name><init pos:line="5945" pos:column="46">=<expr><lit:literal type="number" pos:line="5945" pos:column="47">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5945" pos:column="50">r</name><op:operator pos:line="5945" pos:column="51">&lt;</op:operator><call><name><name pos:line="5945" pos:column="52">sel</name><op:operator pos:line="5945" pos:column="55">.</op:operator><name pos:line="5945" pos:column="56">Count</name></name><argument_list pos:line="5945" pos:column="61">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5945" pos:column="65">r</name><op:operator pos:line="5945" pos:column="66">++</op:operator></expr></incr>) <block pos:line="5945" pos:column="70">{
					<if pos:line="5946" pos:column="41">if <condition pos:line="5946" pos:column="44">(<expr><name pos:line="5946" pos:column="45">position</name> <op:operator pos:line="5946" pos:column="54">&gt;=</op:operator> <call><name><name pos:line="5946" pos:column="57">sel</name><op:operator pos:line="5946" pos:column="60">.</op:operator><name pos:line="5946" pos:column="61">Range</name></name><argument_list pos:line="5946" pos:column="66">(<argument><expr><name pos:line="5946" pos:column="67">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5946" pos:column="69">.</op:operator><call><name pos:line="5946" pos:column="70">Start</name><argument_list pos:line="5946" pos:column="75">()</argument_list></call></expr>)</condition><then pos:line="5946" pos:column="78"> <block pos:line="5946" pos:column="79">{
						<if pos:line="5947" pos:column="49">if <condition pos:line="5947" pos:column="52">(<expr><name pos:line="5947" pos:column="53">position</name> <op:operator pos:line="5947" pos:column="62">&gt;</op:operator> <call><name><name pos:line="5947" pos:column="64">sel</name><op:operator pos:line="5947" pos:column="67">.</op:operator><name pos:line="5947" pos:column="68">Range</name></name><argument_list pos:line="5947" pos:column="73">(<argument><expr><name pos:line="5947" pos:column="74">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5947" pos:column="76">.</op:operator><call><name pos:line="5947" pos:column="77">End</name><argument_list pos:line="5947" pos:column="80">()</argument_list></call></expr>)</condition><then pos:line="5947" pos:column="83"> <block pos:line="5947" pos:column="84">{
							<expr_stmt><expr><call><name><name pos:line="5948" pos:column="57">positionAfterDeletion</name><op:operator pos:line="5948" pos:column="78">.</op:operator><name pos:line="5948" pos:column="79">Add</name></name><argument_list pos:line="5948" pos:column="82">(<argument><expr><op:operator pos:line="5948" pos:column="83">-</op:operator><call><name><name pos:line="5948" pos:column="84">sel</name><op:operator pos:line="5948" pos:column="87">.</op:operator><name pos:line="5948" pos:column="88">Range</name></name><argument_list pos:line="5948" pos:column="93">(<argument><expr><name pos:line="5948" pos:column="94">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5948" pos:column="96">.</op:operator><call><name pos:line="5948" pos:column="97">Length</name><argument_list pos:line="5948" pos:column="103">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then> <else pos:line="5949" pos:column="51">else <block pos:line="5949" pos:column="56">{
							<expr_stmt><expr><call><name><name pos:line="5950" pos:column="57">positionAfterDeletion</name><op:operator pos:line="5950" pos:column="78">.</op:operator><name pos:line="5950" pos:column="79">Add</name></name><argument_list pos:line="5950" pos:column="82">(<argument><expr><op:operator pos:line="5950" pos:column="83">-</op:operator><call><name pos:line="5950" pos:column="84">SelectionRange</name><argument_list pos:line="5950" pos:column="98">(<argument><expr><name pos:line="5950" pos:column="99">position</name></expr></argument>, <argument><expr><call><name><name pos:line="5950" pos:column="109">sel</name><op:operator pos:line="5950" pos:column="112">.</op:operator><name pos:line="5950" pos:column="113">Range</name></name><argument_list pos:line="5950" pos:column="118">(<argument><expr><name pos:line="5950" pos:column="119">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5950" pos:column="121">.</op:operator><call><name pos:line="5950" pos:column="122">Start</name><argument_list pos:line="5950" pos:column="127">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5950" pos:column="130">.</op:operator><call><name pos:line="5950" pos:column="131">Length</name><argument_list pos:line="5950" pos:column="137">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></else></if>
					}</block></then></if>
				}</block></for>
			}</block></then> <else pos:line="5954" pos:column="27">else <block pos:line="5954" pos:column="32">{
				<if pos:line="5955" pos:column="33">if <condition pos:line="5955" pos:column="36">(<expr><name pos:line="5955" pos:column="37">position</name> <op:operator pos:line="5955" pos:column="46">&gt;</op:operator> <name pos:line="5955" pos:column="48">selStart</name></expr>)</condition><then pos:line="5955" pos:column="57"> <block pos:line="5955" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="5956" pos:column="41">positionAfterDeletion</name><op:operator pos:line="5956" pos:column="62">.</op:operator><name pos:line="5956" pos:column="63">Add</name></name><argument_list pos:line="5956" pos:column="66">(<argument><expr><op:operator pos:line="5956" pos:column="67">-</op:operator><call><name pos:line="5956" pos:column="68">SelectionRange</name><argument_list pos:line="5956" pos:column="82">(<argument><expr><name pos:line="5956" pos:column="83">selEnd</name></expr></argument>, <argument><expr><name pos:line="5956" pos:column="91">selStart</name></expr></argument>)</argument_list></call><op:operator pos:line="5956" pos:column="100">.</op:operator><call><name pos:line="5956" pos:column="101">Length</name><argument_list pos:line="5956" pos:column="107">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></else></if>
			<expr_stmt><expr><call><name pos:line="5959" pos:column="25">ClearSelection</name><argument_list pos:line="5959" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="5961" pos:column="17">position</name> <op:operator pos:line="5961" pos:column="26">=</op:operator> <name pos:line="5961" pos:column="28">positionAfterDeletion</name></expr>;</expr_stmt>

		<if pos:line="5963" pos:column="17">if <condition pos:line="5963" pos:column="20">(<expr><name pos:line="5963" pos:column="21">rectangular</name></expr>)</condition><then pos:line="5963" pos:column="33"> <block pos:line="5963" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="5964" pos:column="25">PasteRectangular</name><argument_list pos:line="5964" pos:column="41">(<argument><expr><name pos:line="5964" pos:column="42">position</name></expr></argument>, <argument><expr><name pos:line="5964" pos:column="52">value</name></expr></argument>, <argument><expr><call><name pos:line="5964" pos:column="59">istrlen</name><argument_list pos:line="5964" pos:column="66">(<argument><expr><name pos:line="5964" pos:column="67">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="5965" pos:column="25">// Should try to select new rectangle but it may not be a rectangle now so just select the drop position</comment>
			<expr_stmt><expr><call><name pos:line="5966" pos:column="25">SetEmptySelection</name><argument_list pos:line="5966" pos:column="42">(<argument><expr><name pos:line="5966" pos:column="43">position</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="5967" pos:column="19">else <block pos:line="5967" pos:column="24">{
			<expr_stmt><expr><name pos:line="5968" pos:column="25">position</name> <op:operator pos:line="5968" pos:column="34">=</op:operator> <call><name pos:line="5968" pos:column="36">MovePositionOutsideChar</name><argument_list pos:line="5968" pos:column="59">(<argument><expr><name pos:line="5968" pos:column="60">position</name></expr></argument>, <argument><expr><call><name><name pos:line="5968" pos:column="70">sel</name><op:operator pos:line="5968" pos:column="73">.</op:operator><name pos:line="5968" pos:column="74">MainCaret</name></name><argument_list pos:line="5968" pos:column="83">()</argument_list></call> <op:operator pos:line="5968" pos:column="86">-</op:operator> <call><name><name pos:line="5968" pos:column="88">position</name><op:operator pos:line="5968" pos:column="96">.</op:operator><name pos:line="5968" pos:column="97">Position</name></name><argument_list pos:line="5968" pos:column="105">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="5969" pos:column="25">position</name> <op:operator pos:line="5969" pos:column="34">=</op:operator> <call><name pos:line="5969" pos:column="36">SelectionPosition</name><argument_list pos:line="5969" pos:column="53">(<argument><expr><call><name pos:line="5969" pos:column="54">InsertSpace</name><argument_list pos:line="5969" pos:column="65">(<argument><expr><call><name><name pos:line="5969" pos:column="66">position</name><op:operator pos:line="5969" pos:column="74">.</op:operator><name pos:line="5969" pos:column="75">Position</name></name><argument_list pos:line="5969" pos:column="83">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="5969" pos:column="87">position</name><op:operator pos:line="5969" pos:column="95">.</op:operator><name pos:line="5969" pos:column="96">VirtualSpace</name></name><argument_list pos:line="5969" pos:column="108">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="5970" pos:column="25">if <condition pos:line="5970" pos:column="28">(<expr><call><name><name pos:line="5970" pos:column="29">pdoc</name><op:operator pos:line="5970" pos:column="33">-&gt;</op:operator><name pos:line="5970" pos:column="35">InsertCString</name></name><argument_list pos:line="5970" pos:column="48">(<argument><expr><call><name><name pos:line="5970" pos:column="49">position</name><op:operator pos:line="5970" pos:column="57">.</op:operator><name pos:line="5970" pos:column="58">Position</name></name><argument_list pos:line="5970" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="5970" pos:column="70">value</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5970" pos:column="77"> <block pos:line="5970" pos:column="78">{
				<decl_stmt><decl><type><name pos:line="5971" pos:column="33">SelectionPosition</name></type> <name pos:line="5971" pos:column="51">posAfterInsertion</name> <init pos:line="5971" pos:column="69">= <expr><name pos:line="5971" pos:column="71">position</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="5972" pos:column="33">posAfterInsertion</name><op:operator pos:line="5972" pos:column="50">.</op:operator><name pos:line="5972" pos:column="51">Add</name></name><argument_list pos:line="5972" pos:column="54">(<argument><expr><call><name pos:line="5972" pos:column="55">istrlen</name><argument_list pos:line="5972" pos:column="62">(<argument><expr><name pos:line="5972" pos:column="63">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="5973" pos:column="33">SetSelection</name><argument_list pos:line="5973" pos:column="45">(<argument><expr><name pos:line="5973" pos:column="46">posAfterInsertion</name></expr></argument>, <argument><expr><name pos:line="5973" pos:column="65">position</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
	}</block></then> <else pos:line="5976" pos:column="11">else <if pos:line="5976" pos:column="16">if <condition pos:line="5976" pos:column="19">(<expr><name pos:line="5976" pos:column="20">inDragDrop</name> <op:operator pos:line="5976" pos:column="31">==</op:operator> <name pos:line="5976" pos:column="34">ddDragging</name></expr>)</condition><then pos:line="5976" pos:column="45"> <block pos:line="5976" pos:column="46">{
		<expr_stmt><expr><call><name pos:line="5977" pos:column="17">SetEmptySelection</name><argument_list pos:line="5977" pos:column="34">(<argument><expr><name pos:line="5977" pos:column="35">position</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if></else></if>
}</block></function>

<comment type="block" format="doxygen" pos:line="5981" pos:column="1">/**
 * @return true if given position is inside the selection,
 */</comment>
<function><type><name pos:line="5984" pos:column="1">bool</name></type> <name><name pos:line="5984" pos:column="6">Editor</name><op:operator pos:line="5984" pos:column="12">::</op:operator><name pos:line="5984" pos:column="14">PositionInSelection</name></name><parameter_list pos:line="5984" pos:column="33">(<param><decl><type><name pos:line="5984" pos:column="34">int</name></type> <name pos:line="5984" pos:column="38">pos</name></decl></param>)</parameter_list> <block pos:line="5984" pos:column="43">{
	<expr_stmt><expr><name pos:line="5985" pos:column="9">pos</name> <op:operator pos:line="5985" pos:column="13">=</op:operator> <call><name pos:line="5985" pos:column="15">MovePositionOutsideChar</name><argument_list pos:line="5985" pos:column="38">(<argument><expr><name pos:line="5985" pos:column="39">pos</name></expr></argument>, <argument><expr><call><name><name pos:line="5985" pos:column="44">sel</name><op:operator pos:line="5985" pos:column="47">.</op:operator><name pos:line="5985" pos:column="48">MainCaret</name></name><argument_list pos:line="5985" pos:column="57">()</argument_list></call> <op:operator pos:line="5985" pos:column="60">-</op:operator> <name pos:line="5985" pos:column="62">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="5986" pos:column="9">for (<init><decl><type><name pos:line="5986" pos:column="14">size_t</name></type> <name pos:line="5986" pos:column="21">r</name><init pos:line="5986" pos:column="22">=<expr><lit:literal type="number" pos:line="5986" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5986" pos:column="26">r</name><op:operator pos:line="5986" pos:column="27">&lt;</op:operator><call><name><name pos:line="5986" pos:column="28">sel</name><op:operator pos:line="5986" pos:column="31">.</op:operator><name pos:line="5986" pos:column="32">Count</name></name><argument_list pos:line="5986" pos:column="37">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5986" pos:column="41">r</name><op:operator pos:line="5986" pos:column="42">++</op:operator></expr></incr>) <block pos:line="5986" pos:column="46">{
		<if pos:line="5987" pos:column="17">if <condition pos:line="5987" pos:column="20">(<expr><call><name><name pos:line="5987" pos:column="21">sel</name><op:operator pos:line="5987" pos:column="24">.</op:operator><name pos:line="5987" pos:column="25">Range</name></name><argument_list pos:line="5987" pos:column="30">(<argument><expr><name pos:line="5987" pos:column="31">r</name></expr></argument>)</argument_list></call><op:operator pos:line="5987" pos:column="33">.</op:operator><call><name pos:line="5987" pos:column="34">Contains</name><argument_list pos:line="5987" pos:column="42">(<argument><expr><name pos:line="5987" pos:column="43">pos</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5987" pos:column="48">
			<return pos:line="5988" pos:column="25">return <expr><lit:literal type="boolean" pos:line="5988" pos:column="32">true</lit:literal></expr>;</return></then></if>
	}</block></for>
	<return pos:line="5990" pos:column="9">return <expr><lit:literal type="boolean" pos:line="5990" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5993" pos:column="1">bool</name></type> <name><name pos:line="5993" pos:column="6">Editor</name><op:operator pos:line="5993" pos:column="12">::</op:operator><name pos:line="5993" pos:column="14">PointInSelection</name></name><parameter_list pos:line="5993" pos:column="30">(<param><decl><type><name pos:line="5993" pos:column="31">Point</name></type> <name pos:line="5993" pos:column="37">pt</name></decl></param>)</parameter_list> <block pos:line="5993" pos:column="41">{
	<decl_stmt><decl><type><name pos:line="5994" pos:column="9">SelectionPosition</name></type> <name pos:line="5994" pos:column="27">pos</name> <init pos:line="5994" pos:column="31">= <expr><call><name pos:line="5994" pos:column="33">SPositionFromLocation</name><argument_list pos:line="5994" pos:column="54">(<argument><expr><name pos:line="5994" pos:column="55">pt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5995" pos:column="9">int</name></type> <name pos:line="5995" pos:column="13">xPos</name> <init pos:line="5995" pos:column="18">= <expr><call><name pos:line="5995" pos:column="20">XFromPosition</name><argument_list pos:line="5995" pos:column="33">(<argument><expr><name pos:line="5995" pos:column="34">pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="5996" pos:column="9">for (<init><decl><type><name pos:line="5996" pos:column="14">size_t</name></type> <name pos:line="5996" pos:column="21">r</name><init pos:line="5996" pos:column="22">=<expr><lit:literal type="number" pos:line="5996" pos:column="23">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5996" pos:column="26">r</name><op:operator pos:line="5996" pos:column="27">&lt;</op:operator><call><name><name pos:line="5996" pos:column="28">sel</name><op:operator pos:line="5996" pos:column="31">.</op:operator><name pos:line="5996" pos:column="32">Count</name></name><argument_list pos:line="5996" pos:column="37">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5996" pos:column="41">r</name><op:operator pos:line="5996" pos:column="42">++</op:operator></expr></incr>) <block pos:line="5996" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="5997" pos:column="17">SelectionRange</name></type> <name pos:line="5997" pos:column="32">range</name> <init pos:line="5997" pos:column="38">= <expr><call><name><name pos:line="5997" pos:column="40">sel</name><op:operator pos:line="5997" pos:column="43">.</op:operator><name pos:line="5997" pos:column="44">Range</name></name><argument_list pos:line="5997" pos:column="49">(<argument><expr><name pos:line="5997" pos:column="50">r</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="5998" pos:column="17">if <condition pos:line="5998" pos:column="20">(<expr><call><name><name pos:line="5998" pos:column="21">range</name><op:operator pos:line="5998" pos:column="26">.</op:operator><name pos:line="5998" pos:column="27">Contains</name></name><argument_list pos:line="5998" pos:column="35">(<argument><expr><name pos:line="5998" pos:column="36">pos</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5998" pos:column="41"> <block pos:line="5998" pos:column="42">{
			<decl_stmt><decl><type><name pos:line="5999" pos:column="25">bool</name></type> <name pos:line="5999" pos:column="30">hit</name> <init pos:line="5999" pos:column="34">= <expr><lit:literal type="boolean" pos:line="5999" pos:column="36">true</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="6000" pos:column="25">if <condition pos:line="6000" pos:column="28">(<expr><name pos:line="6000" pos:column="29">pos</name> <op:operator pos:line="6000" pos:column="33">==</op:operator> <call><name><name pos:line="6000" pos:column="36">range</name><op:operator pos:line="6000" pos:column="41">.</op:operator><name pos:line="6000" pos:column="42">Start</name></name><argument_list pos:line="6000" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="6000" pos:column="50"> <block pos:line="6000" pos:column="51">{
				<comment type="line" pos:line="6001" pos:column="33">// see if just before selection</comment>
				<if pos:line="6002" pos:column="33">if <condition pos:line="6002" pos:column="36">(<expr><name><name pos:line="6002" pos:column="37">pt</name><op:operator pos:line="6002" pos:column="39">.</op:operator><name pos:line="6002" pos:column="40">x</name></name> <op:operator pos:line="6002" pos:column="42">&lt;</op:operator> <name pos:line="6002" pos:column="44">xPos</name></expr>)</condition><then pos:line="6002" pos:column="49"> <block pos:line="6002" pos:column="50">{
					<expr_stmt><expr><name pos:line="6003" pos:column="41">hit</name> <op:operator pos:line="6003" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="6003" pos:column="47">false</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<if pos:line="6006" pos:column="25">if <condition pos:line="6006" pos:column="28">(<expr><name pos:line="6006" pos:column="29">pos</name> <op:operator pos:line="6006" pos:column="33">==</op:operator> <call><name><name pos:line="6006" pos:column="36">range</name><op:operator pos:line="6006" pos:column="41">.</op:operator><name pos:line="6006" pos:column="42">End</name></name><argument_list pos:line="6006" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="6006" pos:column="48"> <block pos:line="6006" pos:column="49">{
				<comment type="line" pos:line="6007" pos:column="33">// see if just after selection</comment>
				<if pos:line="6008" pos:column="33">if <condition pos:line="6008" pos:column="36">(<expr><name><name pos:line="6008" pos:column="37">pt</name><op:operator pos:line="6008" pos:column="39">.</op:operator><name pos:line="6008" pos:column="40">x</name></name> <op:operator pos:line="6008" pos:column="42">&gt;</op:operator> <name pos:line="6008" pos:column="44">xPos</name></expr>)</condition><then pos:line="6008" pos:column="49"> <block pos:line="6008" pos:column="50">{
					<expr_stmt><expr><name pos:line="6009" pos:column="41">hit</name> <op:operator pos:line="6009" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="6009" pos:column="47">false</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<if pos:line="6012" pos:column="25">if <condition pos:line="6012" pos:column="28">(<expr><name pos:line="6012" pos:column="29">hit</name></expr>)</condition><then pos:line="6012" pos:column="33">
				<return pos:line="6013" pos:column="33">return <expr><lit:literal type="boolean" pos:line="6013" pos:column="40">true</lit:literal></expr>;</return></then></if>
		}</block></then></if>
	}</block></for>
	<return pos:line="6016" pos:column="9">return <expr><lit:literal type="boolean" pos:line="6016" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="6019" pos:column="1">bool</name></type> <name><name pos:line="6019" pos:column="6">Editor</name><op:operator pos:line="6019" pos:column="12">::</op:operator><name pos:line="6019" pos:column="14">PointInSelMargin</name></name><parameter_list pos:line="6019" pos:column="30">(<param><decl><type><name pos:line="6019" pos:column="31">Point</name></type> <name pos:line="6019" pos:column="37">pt</name></decl></param>)</parameter_list> <block pos:line="6019" pos:column="41">{
	<comment type="line" pos:line="6020" pos:column="9">// Really means: "Point in a margin"</comment>
	<if pos:line="6021" pos:column="9">if <condition pos:line="6021" pos:column="12">(<expr><name><name pos:line="6021" pos:column="13">vs</name><op:operator pos:line="6021" pos:column="15">.</op:operator><name pos:line="6021" pos:column="16">fixedColumnWidth</name></name> <op:operator pos:line="6021" pos:column="33">&gt;</op:operator> <lit:literal type="number" pos:line="6021" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="6021" pos:column="37"> <block pos:line="6021" pos:column="38">{	<comment type="line" pos:line="6021" pos:column="41">// There is a margin</comment>
		<decl_stmt><decl><type><name pos:line="6022" pos:column="17">PRectangle</name></type> <name pos:line="6022" pos:column="28">rcSelMargin</name> <init pos:line="6022" pos:column="40">= <expr><call><name pos:line="6022" pos:column="42">GetClientRectangle</name><argument_list pos:line="6022" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="6023" pos:column="17">rcSelMargin</name><op:operator pos:line="6023" pos:column="28">.</op:operator><name pos:line="6023" pos:column="29">right</name></name> <op:operator pos:line="6023" pos:column="35">=</op:operator> <name><name pos:line="6023" pos:column="37">vs</name><op:operator pos:line="6023" pos:column="39">.</op:operator><name pos:line="6023" pos:column="40">fixedColumnWidth</name></name> <op:operator pos:line="6023" pos:column="57">-</op:operator> <name><name pos:line="6023" pos:column="59">vs</name><op:operator pos:line="6023" pos:column="61">.</op:operator><name pos:line="6023" pos:column="62">leftMarginWidth</name></name></expr>;</expr_stmt>
		<return pos:line="6024" pos:column="17">return <expr><call><name><name pos:line="6024" pos:column="24">rcSelMargin</name><op:operator pos:line="6024" pos:column="35">.</op:operator><name pos:line="6024" pos:column="36">Contains</name></name><argument_list pos:line="6024" pos:column="44">(<argument><expr><name pos:line="6024" pos:column="45">pt</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then> <else pos:line="6025" pos:column="11">else <block pos:line="6025" pos:column="16">{
		<return pos:line="6026" pos:column="17">return <expr><lit:literal type="boolean" pos:line="6026" pos:column="24">false</lit:literal></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name><name pos:line="6030" pos:column="1">Window</name><op:operator pos:line="6030" pos:column="7">::</op:operator><name pos:line="6030" pos:column="9">Cursor</name></name></type> <name><name pos:line="6030" pos:column="16">Editor</name><op:operator pos:line="6030" pos:column="22">::</op:operator><name pos:line="6030" pos:column="24">GetMarginCursor</name></name><parameter_list pos:line="6030" pos:column="39">(<param><decl><type><name pos:line="6030" pos:column="40">Point</name></type> <name pos:line="6030" pos:column="46">pt</name></decl></param>)</parameter_list> <block pos:line="6030" pos:column="50">{
	<decl_stmt><decl><type><name pos:line="6031" pos:column="9">int</name></type> <name pos:line="6031" pos:column="13">x</name> <init pos:line="6031" pos:column="15">= <expr><lit:literal type="number" pos:line="6031" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="6032" pos:column="9">for (<init><decl><type><name pos:line="6032" pos:column="14">int</name></type> <name pos:line="6032" pos:column="18">margin</name> <init pos:line="6032" pos:column="25">= <expr><lit:literal type="number" pos:line="6032" pos:column="27">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="6032" pos:column="30">margin</name> <op:operator pos:line="6032" pos:column="37">&lt;</op:operator> <name><name pos:line="6032" pos:column="39">ViewStyle</name><op:operator pos:line="6032" pos:column="48">::</op:operator><name pos:line="6032" pos:column="50">margins</name></name></expr>;</condition> <incr><expr><name pos:line="6032" pos:column="59">margin</name><op:operator pos:line="6032" pos:column="65">++</op:operator></expr></incr>) <block pos:line="6032" pos:column="69">{
		<if pos:line="6033" pos:column="17">if <condition pos:line="6033" pos:column="20">(<expr><op:operator pos:line="6033" pos:column="21">(</op:operator><name><name pos:line="6033" pos:column="22">pt</name><op:operator pos:line="6033" pos:column="24">.</op:operator><name pos:line="6033" pos:column="25">x</name></name> <op:operator pos:line="6033" pos:column="27">&gt;=</op:operator> <name pos:line="6033" pos:column="30">x</name><op:operator pos:line="6033" pos:column="31">)</op:operator> <op:operator pos:line="6033" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="6033" pos:column="36">(</op:operator><name><name pos:line="6033" pos:column="37">pt</name><op:operator pos:line="6033" pos:column="39">.</op:operator><name pos:line="6033" pos:column="40">x</name></name> <op:operator pos:line="6033" pos:column="42">&lt;</op:operator> <name pos:line="6033" pos:column="44">x</name> <op:operator pos:line="6033" pos:column="46">+</op:operator> <name><name pos:line="6033" pos:column="48">vs</name><op:operator pos:line="6033" pos:column="50">.</op:operator><name pos:line="6033" pos:column="51">ms</name><index pos:line="6033" pos:column="53">[<expr><name pos:line="6033" pos:column="54">margin</name></expr>]</index></name><op:operator pos:line="6033" pos:column="61">.</op:operator><name pos:line="6033" pos:column="62">width</name><op:operator pos:line="6033" pos:column="67">)</op:operator></expr>)</condition><then pos:line="6033" pos:column="69">
			<return pos:line="6034" pos:column="25">return <expr><call><name><name pos:line="6034" pos:column="32">static_cast</name><argument_list pos:line="6034" pos:column="43">&lt;<argument><expr><name><name pos:line="6034" pos:column="44">Window</name><op:operator pos:line="6034" pos:column="50">::</op:operator><name pos:line="6034" pos:column="52">Cursor</name></name></expr></argument>&gt;</argument_list></name><argument_list pos:line="6034" pos:column="59">(<argument><expr><name><name pos:line="6034" pos:column="60">vs</name><op:operator pos:line="6034" pos:column="62">.</op:operator><name pos:line="6034" pos:column="63">ms</name><index pos:line="6034" pos:column="65">[<expr><name pos:line="6034" pos:column="66">margin</name></expr>]</index></name><op:operator pos:line="6034" pos:column="73">.</op:operator><name pos:line="6034" pos:column="74">cursor</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
		<expr_stmt><expr><name pos:line="6035" pos:column="17">x</name> <op:operator pos:line="6035" pos:column="19">+=</op:operator> <name><name pos:line="6035" pos:column="22">vs</name><op:operator pos:line="6035" pos:column="24">.</op:operator><name pos:line="6035" pos:column="25">ms</name><index pos:line="6035" pos:column="27">[<expr><name pos:line="6035" pos:column="28">margin</name></expr>]</index></name><op:operator pos:line="6035" pos:column="35">.</op:operator><name pos:line="6035" pos:column="36">width</name></expr>;</expr_stmt>
	}</block></for>
	<return pos:line="6037" pos:column="9">return <expr><name><name pos:line="6037" pos:column="16">Window</name><op:operator pos:line="6037" pos:column="22">::</op:operator><name pos:line="6037" pos:column="24">cursorReverseArrow</name></name></expr>;</return>
}</block></function>

<function><type><name pos:line="6040" pos:column="1">void</name></type> <name><name pos:line="6040" pos:column="6">Editor</name><op:operator pos:line="6040" pos:column="12">::</op:operator><name pos:line="6040" pos:column="14">LineSelection</name></name><parameter_list pos:line="6040" pos:column="27">(<param><decl><type><name pos:line="6040" pos:column="28">int</name></type> <name pos:line="6040" pos:column="32">lineCurrentPos_</name></decl></param>, <param><decl><type><name pos:line="6040" pos:column="49">int</name></type> <name pos:line="6040" pos:column="53">lineAnchorPos_</name></decl></param>, <param><decl><type><name pos:line="6040" pos:column="69">bool</name></type> <name pos:line="6040" pos:column="74">wholeLine</name></decl></param>)</parameter_list> <block pos:line="6040" pos:column="85">{
	<decl_stmt><decl><type><name pos:line="6041" pos:column="9">int</name></type> <name pos:line="6041" pos:column="13">selCurrentPos</name></decl><op:operator pos:line="6041" pos:column="26">,</op:operator> <decl><type ref="prev"/><name pos:line="6041" pos:column="28">selAnchorPos</name></decl>;</decl_stmt>
	<if pos:line="6042" pos:column="9">if <condition pos:line="6042" pos:column="12">(<expr><name pos:line="6042" pos:column="13">wholeLine</name></expr>)</condition><then pos:line="6042" pos:column="23"> <block pos:line="6042" pos:column="24">{
		<decl_stmt><decl><type><name pos:line="6043" pos:column="17">int</name></type> <name pos:line="6043" pos:column="21">lineCurrent_</name> <init pos:line="6043" pos:column="34">= <expr><call><name><name pos:line="6043" pos:column="36">pdoc</name><op:operator pos:line="6043" pos:column="40">-&gt;</op:operator><name pos:line="6043" pos:column="42">LineFromPosition</name></name><argument_list pos:line="6043" pos:column="58">(<argument><expr><name pos:line="6043" pos:column="59">lineCurrentPos_</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="6044" pos:column="17">int</name></type> <name pos:line="6044" pos:column="21">lineAnchor_</name> <init pos:line="6044" pos:column="33">= <expr><call><name><name pos:line="6044" pos:column="35">pdoc</name><op:operator pos:line="6044" pos:column="39">-&gt;</op:operator><name pos:line="6044" pos:column="41">LineFromPosition</name></name><argument_list pos:line="6044" pos:column="57">(<argument><expr><name pos:line="6044" pos:column="58">lineAnchorPos_</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="6045" pos:column="17">if <condition pos:line="6045" pos:column="20">(<expr><name pos:line="6045" pos:column="21">lineAnchorPos_</name> <op:operator pos:line="6045" pos:column="36">&lt;</op:operator> <name pos:line="6045" pos:column="38">lineCurrentPos_</name></expr>)</condition><then pos:line="6045" pos:column="54"> <block pos:line="6045" pos:column="55">{
			<expr_stmt><expr><name pos:line="6046" pos:column="25">selCurrentPos</name> <op:operator pos:line="6046" pos:column="39">=</op:operator> <call><name><name pos:line="6046" pos:column="41">pdoc</name><op:operator pos:line="6046" pos:column="45">-&gt;</op:operator><name pos:line="6046" pos:column="47">LineStart</name></name><argument_list pos:line="6046" pos:column="56">(<argument><expr><name pos:line="6046" pos:column="57">lineCurrent_</name> <op:operator pos:line="6046" pos:column="70">+</op:operator> <lit:literal type="number" pos:line="6046" pos:column="72">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6047" pos:column="25">selAnchorPos</name> <op:operator pos:line="6047" pos:column="38">=</op:operator> <call><name><name pos:line="6047" pos:column="40">pdoc</name><op:operator pos:line="6047" pos:column="44">-&gt;</op:operator><name pos:line="6047" pos:column="46">LineStart</name></name><argument_list pos:line="6047" pos:column="55">(<argument><expr><name pos:line="6047" pos:column="56">lineAnchor_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6048" pos:column="19">else <if pos:line="6048" pos:column="24">if <condition pos:line="6048" pos:column="27">(<expr><name pos:line="6048" pos:column="28">lineAnchorPos_</name> <op:operator pos:line="6048" pos:column="43">&gt;</op:operator> <name pos:line="6048" pos:column="45">lineCurrentPos_</name></expr>)</condition><then pos:line="6048" pos:column="61"> <block pos:line="6048" pos:column="62">{
			<expr_stmt><expr><name pos:line="6049" pos:column="25">selCurrentPos</name> <op:operator pos:line="6049" pos:column="39">=</op:operator> <call><name><name pos:line="6049" pos:column="41">pdoc</name><op:operator pos:line="6049" pos:column="45">-&gt;</op:operator><name pos:line="6049" pos:column="47">LineStart</name></name><argument_list pos:line="6049" pos:column="56">(<argument><expr><name pos:line="6049" pos:column="57">lineCurrent_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6050" pos:column="25">selAnchorPos</name> <op:operator pos:line="6050" pos:column="38">=</op:operator> <call><name><name pos:line="6050" pos:column="40">pdoc</name><op:operator pos:line="6050" pos:column="44">-&gt;</op:operator><name pos:line="6050" pos:column="46">LineStart</name></name><argument_list pos:line="6050" pos:column="55">(<argument><expr><name pos:line="6050" pos:column="56">lineAnchor_</name> <op:operator pos:line="6050" pos:column="68">+</op:operator> <lit:literal type="number" pos:line="6050" pos:column="70">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6051" pos:column="19">else <block pos:line="6051" pos:column="24">{ <comment type="line" pos:line="6051" pos:column="26">// Same line, select it</comment>
			<expr_stmt><expr><name pos:line="6052" pos:column="25">selCurrentPos</name> <op:operator pos:line="6052" pos:column="39">=</op:operator> <call><name><name pos:line="6052" pos:column="41">pdoc</name><op:operator pos:line="6052" pos:column="45">-&gt;</op:operator><name pos:line="6052" pos:column="47">LineStart</name></name><argument_list pos:line="6052" pos:column="56">(<argument><expr><name pos:line="6052" pos:column="57">lineAnchor_</name> <op:operator pos:line="6052" pos:column="69">+</op:operator> <lit:literal type="number" pos:line="6052" pos:column="71">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6053" pos:column="25">selAnchorPos</name> <op:operator pos:line="6053" pos:column="38">=</op:operator> <call><name><name pos:line="6053" pos:column="40">pdoc</name><op:operator pos:line="6053" pos:column="44">-&gt;</op:operator><name pos:line="6053" pos:column="46">LineStart</name></name><argument_list pos:line="6053" pos:column="55">(<argument><expr><name pos:line="6053" pos:column="56">lineAnchor_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if></else></if>
	}</block></then> <else pos:line="6055" pos:column="11">else <block pos:line="6055" pos:column="16">{
		<if pos:line="6056" pos:column="17">if <condition pos:line="6056" pos:column="20">(<expr><name pos:line="6056" pos:column="21">lineAnchorPos_</name> <op:operator pos:line="6056" pos:column="36">&lt;</op:operator> <name pos:line="6056" pos:column="38">lineCurrentPos_</name></expr>)</condition><then pos:line="6056" pos:column="54"> <block pos:line="6056" pos:column="55">{
			<expr_stmt><expr><name pos:line="6057" pos:column="25">selCurrentPos</name> <op:operator pos:line="6057" pos:column="39">=</op:operator> <call><name pos:line="6057" pos:column="41">StartEndDisplayLine</name><argument_list pos:line="6057" pos:column="60">(<argument><expr><name pos:line="6057" pos:column="61">lineCurrentPos_</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6057" pos:column="78">false</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="6057" pos:column="85">+</op:operator> <lit:literal type="number" pos:line="6057" pos:column="87">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6058" pos:column="25">selCurrentPos</name> <op:operator pos:line="6058" pos:column="39">=</op:operator> <call><name><name pos:line="6058" pos:column="41">pdoc</name><op:operator pos:line="6058" pos:column="45">-&gt;</op:operator><name pos:line="6058" pos:column="47">MovePositionOutsideChar</name></name><argument_list pos:line="6058" pos:column="70">(<argument><expr><name pos:line="6058" pos:column="71">selCurrentPos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6058" pos:column="86">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6059" pos:column="25">selAnchorPos</name> <op:operator pos:line="6059" pos:column="38">=</op:operator> <call><name pos:line="6059" pos:column="40">StartEndDisplayLine</name><argument_list pos:line="6059" pos:column="59">(<argument><expr><name pos:line="6059" pos:column="60">lineAnchorPos_</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6059" pos:column="76">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6060" pos:column="19">else <if pos:line="6060" pos:column="24">if <condition pos:line="6060" pos:column="27">(<expr><name pos:line="6060" pos:column="28">lineAnchorPos_</name> <op:operator pos:line="6060" pos:column="43">&gt;</op:operator> <name pos:line="6060" pos:column="45">lineCurrentPos_</name></expr>)</condition><then pos:line="6060" pos:column="61"> <block pos:line="6060" pos:column="62">{
			<expr_stmt><expr><name pos:line="6061" pos:column="25">selCurrentPos</name> <op:operator pos:line="6061" pos:column="39">=</op:operator> <call><name pos:line="6061" pos:column="41">StartEndDisplayLine</name><argument_list pos:line="6061" pos:column="60">(<argument><expr><name pos:line="6061" pos:column="61">lineCurrentPos_</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6061" pos:column="78">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6062" pos:column="25">selAnchorPos</name> <op:operator pos:line="6062" pos:column="38">=</op:operator> <call><name pos:line="6062" pos:column="40">StartEndDisplayLine</name><argument_list pos:line="6062" pos:column="59">(<argument><expr><name pos:line="6062" pos:column="60">lineAnchorPos_</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6062" pos:column="76">false</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="6062" pos:column="83">+</op:operator> <lit:literal type="number" pos:line="6062" pos:column="85">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6063" pos:column="25">selAnchorPos</name> <op:operator pos:line="6063" pos:column="38">=</op:operator> <call><name><name pos:line="6063" pos:column="40">pdoc</name><op:operator pos:line="6063" pos:column="44">-&gt;</op:operator><name pos:line="6063" pos:column="46">MovePositionOutsideChar</name></name><argument_list pos:line="6063" pos:column="69">(<argument><expr><name pos:line="6063" pos:column="70">selAnchorPos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6063" pos:column="84">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6064" pos:column="19">else <block pos:line="6064" pos:column="24">{ <comment type="line" pos:line="6064" pos:column="26">// Same line, select it</comment>
			<expr_stmt><expr><name pos:line="6065" pos:column="25">selCurrentPos</name> <op:operator pos:line="6065" pos:column="39">=</op:operator> <call><name pos:line="6065" pos:column="41">StartEndDisplayLine</name><argument_list pos:line="6065" pos:column="60">(<argument><expr><name pos:line="6065" pos:column="61">lineAnchorPos_</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6065" pos:column="77">false</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="6065" pos:column="84">+</op:operator> <lit:literal type="number" pos:line="6065" pos:column="86">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6066" pos:column="25">selCurrentPos</name> <op:operator pos:line="6066" pos:column="39">=</op:operator> <call><name><name pos:line="6066" pos:column="41">pdoc</name><op:operator pos:line="6066" pos:column="45">-&gt;</op:operator><name pos:line="6066" pos:column="47">MovePositionOutsideChar</name></name><argument_list pos:line="6066" pos:column="70">(<argument><expr><name pos:line="6066" pos:column="71">selCurrentPos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6066" pos:column="86">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6067" pos:column="25">selAnchorPos</name> <op:operator pos:line="6067" pos:column="38">=</op:operator> <call><name pos:line="6067" pos:column="40">StartEndDisplayLine</name><argument_list pos:line="6067" pos:column="59">(<argument><expr><name pos:line="6067" pos:column="60">lineAnchorPos_</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6067" pos:column="76">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if></else></if>
	}</block></else></if>
	<expr_stmt><expr><call><name pos:line="6070" pos:column="9">SetSelection</name><argument_list pos:line="6070" pos:column="21">(<argument><expr><name pos:line="6070" pos:column="22">selCurrentPos</name></expr></argument>, <argument><expr><name pos:line="6070" pos:column="37">selAnchorPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="6073" pos:column="1">void</name></type> <name><name pos:line="6073" pos:column="6">Editor</name><op:operator pos:line="6073" pos:column="12">::</op:operator><name pos:line="6073" pos:column="14">WordSelection</name></name><parameter_list pos:line="6073" pos:column="27">(<param><decl><type><name pos:line="6073" pos:column="28">int</name></type> <name pos:line="6073" pos:column="32">pos</name></decl></param>)</parameter_list> <block pos:line="6073" pos:column="37">{
	<if pos:line="6074" pos:column="9">if <condition pos:line="6074" pos:column="12">(<expr><name pos:line="6074" pos:column="13">pos</name> <op:operator pos:line="6074" pos:column="17">&lt;</op:operator> <name pos:line="6074" pos:column="19">wordSelectAnchorStartPos</name></expr>)</condition><then pos:line="6074" pos:column="44"> <block pos:line="6074" pos:column="45">{
		<comment type="line" pos:line="6075" pos:column="17">// Extend backward to the word containing pos.</comment>
		<comment type="line" pos:line="6076" pos:column="17">// Skip ExtendWordSelect if the line is empty or if pos is after the last character.</comment>
		<comment type="line" pos:line="6077" pos:column="17">// This ensures that a series of empty lines isn't counted as a single "word".</comment>
		<if pos:line="6078" pos:column="17">if <condition pos:line="6078" pos:column="20">(<expr><op:operator pos:line="6078" pos:column="21">!</op:operator><call><name><name pos:line="6078" pos:column="22">pdoc</name><op:operator pos:line="6078" pos:column="26">-&gt;</op:operator><name pos:line="6078" pos:column="28">IsLineEndPosition</name></name><argument_list pos:line="6078" pos:column="45">(<argument><expr><name pos:line="6078" pos:column="46">pos</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6078" pos:column="51">
			<expr_stmt><expr><name pos:line="6079" pos:column="25">pos</name> <op:operator pos:line="6079" pos:column="29">=</op:operator> <call><name><name pos:line="6079" pos:column="31">pdoc</name><op:operator pos:line="6079" pos:column="35">-&gt;</op:operator><name pos:line="6079" pos:column="37">ExtendWordSelect</name></name><argument_list pos:line="6079" pos:column="53">(<argument><expr><call><name><name pos:line="6079" pos:column="54">pdoc</name><op:operator pos:line="6079" pos:column="58">-&gt;</op:operator><name pos:line="6079" pos:column="60">MovePositionOutsideChar</name></name><argument_list pos:line="6079" pos:column="83">(<argument><expr><name pos:line="6079" pos:column="84">pos</name> <op:operator pos:line="6079" pos:column="88">+</op:operator> <lit:literal type="number" pos:line="6079" pos:column="90">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6079" pos:column="93">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="6079" pos:column="97">-</op:operator><lit:literal type="number" pos:line="6079" pos:column="98">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="6080" pos:column="17">SetSelection</name><argument_list pos:line="6080" pos:column="29">(<argument><expr><name pos:line="6080" pos:column="30">pos</name></expr></argument>, <argument><expr><name pos:line="6080" pos:column="35">wordSelectAnchorEndPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="6081" pos:column="11">else <if pos:line="6081" pos:column="16">if <condition pos:line="6081" pos:column="19">(<expr><name pos:line="6081" pos:column="20">pos</name> <op:operator pos:line="6081" pos:column="24">&gt;</op:operator> <name pos:line="6081" pos:column="26">wordSelectAnchorEndPos</name></expr>)</condition><then pos:line="6081" pos:column="49"> <block pos:line="6081" pos:column="50">{
		<comment type="line" pos:line="6082" pos:column="17">// Extend forward to the word containing the character to the left of pos.</comment>
		<comment type="line" pos:line="6083" pos:column="17">// Skip ExtendWordSelect if the line is empty or if pos is the first position on the line.</comment>
		<comment type="line" pos:line="6084" pos:column="17">// This ensures that a series of empty lines isn't counted as a single "word".</comment>
		<if pos:line="6085" pos:column="17">if <condition pos:line="6085" pos:column="20">(<expr><name pos:line="6085" pos:column="21">pos</name> <op:operator pos:line="6085" pos:column="25">&gt;</op:operator> <call><name><name pos:line="6085" pos:column="27">pdoc</name><op:operator pos:line="6085" pos:column="31">-&gt;</op:operator><name pos:line="6085" pos:column="33">LineStart</name></name><argument_list pos:line="6085" pos:column="42">(<argument><expr><call><name><name pos:line="6085" pos:column="43">pdoc</name><op:operator pos:line="6085" pos:column="47">-&gt;</op:operator><name pos:line="6085" pos:column="49">LineFromPosition</name></name><argument_list pos:line="6085" pos:column="65">(<argument><expr><name pos:line="6085" pos:column="66">pos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6085" pos:column="72">
			<expr_stmt><expr><name pos:line="6086" pos:column="25">pos</name> <op:operator pos:line="6086" pos:column="29">=</op:operator> <call><name><name pos:line="6086" pos:column="31">pdoc</name><op:operator pos:line="6086" pos:column="35">-&gt;</op:operator><name pos:line="6086" pos:column="37">ExtendWordSelect</name></name><argument_list pos:line="6086" pos:column="53">(<argument><expr><call><name><name pos:line="6086" pos:column="54">pdoc</name><op:operator pos:line="6086" pos:column="58">-&gt;</op:operator><name pos:line="6086" pos:column="60">MovePositionOutsideChar</name></name><argument_list pos:line="6086" pos:column="83">(<argument><expr><name pos:line="6086" pos:column="84">pos</name> <op:operator pos:line="6086" pos:column="88">-</op:operator> <lit:literal type="number" pos:line="6086" pos:column="90">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="6086" pos:column="93">-</op:operator><lit:literal type="number" pos:line="6086" pos:column="94">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6086" pos:column="98">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="6087" pos:column="17">SetSelection</name><argument_list pos:line="6087" pos:column="29">(<argument><expr><name pos:line="6087" pos:column="30">pos</name></expr></argument>, <argument><expr><name pos:line="6087" pos:column="35">wordSelectAnchorStartPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="6088" pos:column="11">else <block pos:line="6088" pos:column="16">{
		<comment type="line" pos:line="6089" pos:column="17">// Select only the anchored word</comment>
		<if pos:line="6090" pos:column="17">if <condition pos:line="6090" pos:column="20">(<expr><name pos:line="6090" pos:column="21">pos</name> <op:operator pos:line="6090" pos:column="25">&gt;=</op:operator> <name pos:line="6090" pos:column="28">originalAnchorPos</name></expr>)</condition><then pos:line="6090" pos:column="46">
			<expr_stmt><expr><call><name pos:line="6091" pos:column="25">SetSelection</name><argument_list pos:line="6091" pos:column="37">(<argument><expr><name pos:line="6091" pos:column="38">wordSelectAnchorEndPos</name></expr></argument>, <argument><expr><name pos:line="6091" pos:column="62">wordSelectAnchorStartPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="6092" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="6093" pos:column="25">SetSelection</name><argument_list pos:line="6093" pos:column="37">(<argument><expr><name pos:line="6093" pos:column="38">wordSelectAnchorStartPos</name></expr></argument>, <argument><expr><name pos:line="6093" pos:column="64">wordSelectAnchorEndPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></else></if></else></if>
}</block></function>

<function><type><name pos:line="6097" pos:column="1">void</name></type> <name><name pos:line="6097" pos:column="6">Editor</name><op:operator pos:line="6097" pos:column="12">::</op:operator><name pos:line="6097" pos:column="14">DwellEnd</name></name><parameter_list pos:line="6097" pos:column="22">(<param><decl><type><name pos:line="6097" pos:column="23">bool</name></type> <name pos:line="6097" pos:column="28">mouseMoved</name></decl></param>)</parameter_list> <block pos:line="6097" pos:column="40">{
	<if pos:line="6098" pos:column="9">if <condition pos:line="6098" pos:column="12">(<expr><name pos:line="6098" pos:column="13">mouseMoved</name></expr>)</condition><then pos:line="6098" pos:column="24">
		<expr_stmt><expr><name pos:line="6099" pos:column="17">ticksToDwell</name> <op:operator pos:line="6099" pos:column="30">=</op:operator> <name pos:line="6099" pos:column="32">dwellDelay</name></expr>;</expr_stmt></then>
	<else pos:line="6100" pos:column="9">else
		<expr_stmt><expr><name pos:line="6101" pos:column="17">ticksToDwell</name> <op:operator pos:line="6101" pos:column="30">=</op:operator> <name pos:line="6101" pos:column="32">SC_TIME_FOREVER</name></expr>;</expr_stmt></else></if>
	<if pos:line="6102" pos:column="9">if <condition pos:line="6102" pos:column="12">(<expr><name pos:line="6102" pos:column="13">dwelling</name> <op:operator pos:line="6102" pos:column="22">&amp;&amp;</op:operator> <op:operator pos:line="6102" pos:column="25">(</op:operator><name pos:line="6102" pos:column="26">dwellDelay</name> <op:operator pos:line="6102" pos:column="37">&lt;</op:operator> <name pos:line="6102" pos:column="39">SC_TIME_FOREVER</name><op:operator pos:line="6102" pos:column="54">)</op:operator></expr>)</condition><then pos:line="6102" pos:column="56"> <block pos:line="6102" pos:column="57">{
		<expr_stmt><expr><name pos:line="6103" pos:column="17">dwelling</name> <op:operator pos:line="6103" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="6103" pos:column="28">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6104" pos:column="17">NotifyDwelling</name><argument_list pos:line="6104" pos:column="31">(<argument><expr><name pos:line="6104" pos:column="32">ptMouseLast</name></expr></argument>, <argument><expr><name pos:line="6104" pos:column="45">dwelling</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="6108" pos:column="1">void</name></type> <name><name pos:line="6108" pos:column="6">Editor</name><op:operator pos:line="6108" pos:column="12">::</op:operator><name pos:line="6108" pos:column="14">MouseLeave</name></name><parameter_list pos:line="6108" pos:column="24">()</parameter_list> <block pos:line="6108" pos:column="27">{
	<expr_stmt><expr><call><name pos:line="6109" pos:column="9">SetHotSpotRange</name><argument_list pos:line="6109" pos:column="24">(<argument><expr><name pos:line="6109" pos:column="25">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="6110" pos:column="9">if <condition pos:line="6110" pos:column="12">(<expr><op:operator pos:line="6110" pos:column="13">!</op:operator><call><name pos:line="6110" pos:column="14">HaveMouseCapture</name><argument_list pos:line="6110" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="6110" pos:column="33"> <block pos:line="6110" pos:column="34">{
		<expr_stmt><expr><name pos:line="6111" pos:column="17">ptMouseLast</name> <op:operator pos:line="6111" pos:column="29">=</op:operator> <call><name pos:line="6111" pos:column="31">Point</name><argument_list pos:line="6111" pos:column="36">(<argument><expr><op:operator pos:line="6111" pos:column="37">-</op:operator><lit:literal type="number" pos:line="6111" pos:column="38">1</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="6111" pos:column="40">-</op:operator><lit:literal type="number" pos:line="6111" pos:column="41">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6112" pos:column="17">DwellEnd</name><argument_list pos:line="6112" pos:column="25">(<argument><expr><lit:literal type="boolean" pos:line="6112" pos:column="26">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><specifier pos:line="6116" pos:column="1">static</specifier> <name pos:line="6116" pos:column="8">bool</name></type> <name pos:line="6116" pos:column="13">AllowVirtualSpace</name><parameter_list pos:line="6116" pos:column="30">(<param><decl><type><name pos:line="6116" pos:column="31">int</name></type> <name pos:line="6116" pos:column="35">virtualSpaceOptions</name></decl></param>, <param><decl><type><name pos:line="6116" pos:column="56">bool</name></type> <name pos:line="6116" pos:column="61">rectangular</name></decl></param>)</parameter_list> <block pos:line="6116" pos:column="74">{
	<return pos:line="6117" pos:column="9">return <expr><op:operator pos:line="6117" pos:column="16">(</op:operator><op:operator pos:line="6117" pos:column="17">(</op:operator><name pos:line="6117" pos:column="18">virtualSpaceOptions</name> <op:operator pos:line="6117" pos:column="38">&amp;</op:operator> <name pos:line="6117" pos:column="40">SCVS_USERACCESSIBLE</name><op:operator pos:line="6117" pos:column="59">)</op:operator> <op:operator pos:line="6117" pos:column="61">!=</op:operator> <lit:literal type="number" pos:line="6117" pos:column="64">0</lit:literal><op:operator pos:line="6117" pos:column="65">)</op:operator>
		<op:operator pos:line="6118" pos:column="17">||</op:operator> <op:operator pos:line="6118" pos:column="20">(</op:operator><name pos:line="6118" pos:column="21">rectangular</name> <op:operator pos:line="6118" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="6118" pos:column="36">(</op:operator><op:operator pos:line="6118" pos:column="37">(</op:operator><name pos:line="6118" pos:column="38">virtualSpaceOptions</name> <op:operator pos:line="6118" pos:column="58">&amp;</op:operator> <name pos:line="6118" pos:column="60">SCVS_RECTANGULARSELECTION</name><op:operator pos:line="6118" pos:column="85">)</op:operator> <op:operator pos:line="6118" pos:column="87">!=</op:operator> <lit:literal type="number" pos:line="6118" pos:column="90">0</lit:literal><op:operator pos:line="6118" pos:column="91">)</op:operator><op:operator pos:line="6118" pos:column="92">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="6121" pos:column="1">void</name></type> <name><name pos:line="6121" pos:column="6">Editor</name><op:operator pos:line="6121" pos:column="12">::</op:operator><name pos:line="6121" pos:column="14">ButtonDown</name></name><parameter_list pos:line="6121" pos:column="24">(<param><decl><type><name pos:line="6121" pos:column="25">Point</name></type> <name pos:line="6121" pos:column="31">pt</name></decl></param>, <param><decl><type><name pos:line="6121" pos:column="35">unsigned</name> <name pos:line="6121" pos:column="44">int</name></type> <name pos:line="6121" pos:column="48">curTime</name></decl></param>, <param><decl><type><name pos:line="6121" pos:column="57">bool</name></type> <name pos:line="6121" pos:column="62">shift</name></decl></param>, <param><decl><type><name pos:line="6121" pos:column="69">bool</name></type> <name pos:line="6121" pos:column="74">ctrl</name></decl></param>, <param><decl><type><name pos:line="6121" pos:column="80">bool</name></type> <name pos:line="6121" pos:column="85">alt</name></decl></param>)</parameter_list> <block pos:line="6121" pos:column="90">{
	<comment type="line" pos:line="6122" pos:column="9">//Platform::DebugPrintf("ButtonDown %d %d = %d alt=%d %d\n", curTime, lastClickTime, curTime - lastClickTime, alt, inDragDrop);</comment>
	<expr_stmt><expr><name pos:line="6123" pos:column="9">ptMouseLast</name> <op:operator pos:line="6123" pos:column="21">=</op:operator> <name pos:line="6123" pos:column="23">pt</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="6124" pos:column="9">SelectionPosition</name></type> <name pos:line="6124" pos:column="27">newPos</name> <init pos:line="6124" pos:column="34">= <expr><call><name pos:line="6124" pos:column="36">SPositionFromLocation</name><argument_list pos:line="6124" pos:column="57">(<argument><expr><name pos:line="6124" pos:column="58">pt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6124" pos:column="62">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6124" pos:column="69">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="6124" pos:column="76">AllowVirtualSpace</name><argument_list pos:line="6124" pos:column="93">(<argument><expr><name pos:line="6124" pos:column="94">virtualSpaceOptions</name></expr></argument>, <argument><expr><name pos:line="6124" pos:column="115">alt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="6125" pos:column="9">newPos</name> <op:operator pos:line="6125" pos:column="16">=</op:operator> <call><name pos:line="6125" pos:column="18">MovePositionOutsideChar</name><argument_list pos:line="6125" pos:column="41">(<argument><expr><name pos:line="6125" pos:column="42">newPos</name></expr></argument>, <argument><expr><call><name><name pos:line="6125" pos:column="50">sel</name><op:operator pos:line="6125" pos:column="53">.</op:operator><name pos:line="6125" pos:column="54">MainCaret</name></name><argument_list pos:line="6125" pos:column="63">()</argument_list></call> <op:operator pos:line="6125" pos:column="66">-</op:operator> <call><name><name pos:line="6125" pos:column="68">newPos</name><op:operator pos:line="6125" pos:column="74">.</op:operator><name pos:line="6125" pos:column="75">Position</name></name><argument_list pos:line="6125" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="6126" pos:column="9">inDragDrop</name> <op:operator pos:line="6126" pos:column="20">=</op:operator> <name pos:line="6126" pos:column="22">ddNone</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="6127" pos:column="9">sel</name><op:operator pos:line="6127" pos:column="12">.</op:operator><name pos:line="6127" pos:column="13">SetMoveExtends</name></name><argument_list pos:line="6127" pos:column="27">(<argument><expr><lit:literal type="boolean" pos:line="6127" pos:column="28">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="6129" pos:column="9">bool</name></type> <name pos:line="6129" pos:column="14">processed</name> <init pos:line="6129" pos:column="24">= <expr><call><name pos:line="6129" pos:column="26">NotifyMarginClick</name><argument_list pos:line="6129" pos:column="43">(<argument><expr><name pos:line="6129" pos:column="44">pt</name></expr></argument>, <argument><expr><name pos:line="6129" pos:column="48">shift</name></expr></argument>, <argument><expr><name pos:line="6129" pos:column="55">ctrl</name></expr></argument>, <argument><expr><name pos:line="6129" pos:column="61">alt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="6130" pos:column="9">if <condition pos:line="6130" pos:column="12">(<expr><name pos:line="6130" pos:column="13">processed</name></expr>)</condition><then pos:line="6130" pos:column="23">
		<return pos:line="6131" pos:column="17">return;</return></then></if>

	<expr_stmt><expr><call><name pos:line="6133" pos:column="9">NotifyIndicatorClick</name><argument_list pos:line="6133" pos:column="29">(<argument><expr><lit:literal type="boolean" pos:line="6133" pos:column="30">true</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="6133" pos:column="36">newPos</name><op:operator pos:line="6133" pos:column="42">.</op:operator><name pos:line="6133" pos:column="43">Position</name></name><argument_list pos:line="6133" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="6133" pos:column="55">shift</name></expr></argument>, <argument><expr><name pos:line="6133" pos:column="62">ctrl</name></expr></argument>, <argument><expr><name pos:line="6133" pos:column="68">alt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="6135" pos:column="9">bool</name></type> <name pos:line="6135" pos:column="14">inSelMargin</name> <init pos:line="6135" pos:column="26">= <expr><call><name pos:line="6135" pos:column="28">PointInSelMargin</name><argument_list pos:line="6135" pos:column="44">(<argument><expr><name pos:line="6135" pos:column="45">pt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="6136" pos:column="9">if <condition pos:line="6136" pos:column="12">(<expr><name pos:line="6136" pos:column="13">shift</name> <op:operator pos:line="6136" pos:column="19">&amp;</op:operator> <op:operator pos:line="6136" pos:column="21">!</op:operator><name pos:line="6136" pos:column="22">inSelMargin</name></expr>)</condition><then pos:line="6136" pos:column="34"> <block pos:line="6136" pos:column="35">{
		<expr_stmt><expr><call><name pos:line="6137" pos:column="17">SetSelection</name><argument_list pos:line="6137" pos:column="29">(<argument><expr><call><name><name pos:line="6137" pos:column="30">newPos</name><op:operator pos:line="6137" pos:column="36">.</op:operator><name pos:line="6137" pos:column="37">Position</name></name><argument_list pos:line="6137" pos:column="45">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="6139" pos:column="9">if <condition pos:line="6139" pos:column="12">(<expr><op:operator pos:line="6139" pos:column="13">(</op:operator><op:operator pos:line="6139" pos:column="14">(</op:operator><name pos:line="6139" pos:column="15">curTime</name> <op:operator pos:line="6139" pos:column="23">-</op:operator> <name pos:line="6139" pos:column="25">lastClickTime</name><op:operator pos:line="6139" pos:column="38">)</op:operator> <op:operator pos:line="6139" pos:column="40">&lt;</op:operator> <call><name><name pos:line="6139" pos:column="42">Platform</name><op:operator pos:line="6139" pos:column="50">::</op:operator><name pos:line="6139" pos:column="52">DoubleClickTime</name></name><argument_list pos:line="6139" pos:column="67">()</argument_list></call><op:operator pos:line="6139" pos:column="69">)</op:operator> <op:operator pos:line="6139" pos:column="71">&amp;&amp;</op:operator> <call><name pos:line="6139" pos:column="74">Close</name><argument_list pos:line="6139" pos:column="79">(<argument><expr><name pos:line="6139" pos:column="80">pt</name></expr></argument>, <argument><expr><name pos:line="6139" pos:column="84">lastClick</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6139" pos:column="95"> <block pos:line="6139" pos:column="96">{
		<comment type="line" pos:line="6140" pos:column="17">//Platform::DebugPrintf("Double click %d %d = %d\n", curTime, lastClickTime, curTime - lastClickTime);</comment>
		<expr_stmt><expr><call><name pos:line="6141" pos:column="17">SetMouseCapture</name><argument_list pos:line="6141" pos:column="32">(<argument><expr><lit:literal type="boolean" pos:line="6141" pos:column="33">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6142" pos:column="17">SetEmptySelection</name><argument_list pos:line="6142" pos:column="34">(<argument><expr><call><name><name pos:line="6142" pos:column="35">newPos</name><op:operator pos:line="6142" pos:column="41">.</op:operator><name pos:line="6142" pos:column="42">Position</name></name><argument_list pos:line="6142" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="6143" pos:column="17">bool</name></type> <name pos:line="6143" pos:column="22">doubleClick</name> <init pos:line="6143" pos:column="34">= <expr><lit:literal type="boolean" pos:line="6143" pos:column="36">false</lit:literal></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="6144" pos:column="17">// Stop mouse button bounce changing selection type</comment>
		<if pos:line="6145" pos:column="17">if <condition pos:line="6145" pos:column="20">(<expr><op:operator pos:line="6145" pos:column="21">!</op:operator><call><name><name pos:line="6145" pos:column="22">Platform</name><op:operator pos:line="6145" pos:column="30">::</op:operator><name pos:line="6145" pos:column="32">MouseButtonBounce</name></name><argument_list pos:line="6145" pos:column="49">()</argument_list></call> <op:operator pos:line="6145" pos:column="52">||</op:operator> <name pos:line="6145" pos:column="55">curTime</name> <op:operator pos:line="6145" pos:column="63">!=</op:operator> <name pos:line="6145" pos:column="66">lastClickTime</name></expr>)</condition><then pos:line="6145" pos:column="80"> <block pos:line="6145" pos:column="81">{
			<if pos:line="6146" pos:column="25">if <condition pos:line="6146" pos:column="28">(<expr><name pos:line="6146" pos:column="29">selectionType</name> <op:operator pos:line="6146" pos:column="43">==</op:operator> <name pos:line="6146" pos:column="46">selChar</name></expr>)</condition><then pos:line="6146" pos:column="54"> <block pos:line="6146" pos:column="55">{
				<expr_stmt><expr><name pos:line="6147" pos:column="33">selectionType</name> <op:operator pos:line="6147" pos:column="47">=</op:operator> <name pos:line="6147" pos:column="49">selWord</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="6148" pos:column="33">doubleClick</name> <op:operator pos:line="6148" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="6148" pos:column="47">true</lit:literal></expr>;</expr_stmt>
			}</block></then> <else pos:line="6149" pos:column="27">else <if pos:line="6149" pos:column="32">if <condition pos:line="6149" pos:column="35">(<expr><name pos:line="6149" pos:column="36">selectionType</name> <op:operator pos:line="6149" pos:column="50">==</op:operator> <name pos:line="6149" pos:column="53">selWord</name></expr>)</condition><then pos:line="6149" pos:column="61"> <block pos:line="6149" pos:column="62">{
				<comment type="line" pos:line="6150" pos:column="33">// Since we ended up here, we're inside a *triple* click, which should always select </comment>
				<comment type="line" pos:line="6151" pos:column="33">// whole line irregardless of word wrap being enabled or not.</comment>
				<expr_stmt><expr><name pos:line="6152" pos:column="33">selectionType</name> <op:operator pos:line="6152" pos:column="47">=</op:operator> <name pos:line="6152" pos:column="49">selWholeLine</name></expr>;</expr_stmt>
			}</block></then> <else pos:line="6153" pos:column="27">else <block pos:line="6153" pos:column="32">{
				<if pos:line="6154" pos:column="33">if <condition pos:line="6154" pos:column="36">(<expr><name pos:line="6154" pos:column="37">inSelMargin</name></expr>)</condition><then pos:line="6154" pos:column="49"> <block pos:line="6154" pos:column="50">{
					<comment type="line" pos:line="6155" pos:column="41">// Selection type is either selSubLine or selWholeLine here and we're inside margin.</comment>
					<comment type="line" pos:line="6156" pos:column="41">// If it is selSubLine, we're inside a *double* click and word wrap is enabled, </comment>
					<comment type="line" pos:line="6157" pos:column="41">// so we switch to selWholeLine in order to select whole line.</comment>
					<if pos:line="6158" pos:column="41">if <condition pos:line="6158" pos:column="44">(<expr><name pos:line="6158" pos:column="45">selectionType</name> <op:operator pos:line="6158" pos:column="59">==</op:operator> <name pos:line="6158" pos:column="62">selSubLine</name></expr>)</condition><then pos:line="6158" pos:column="73">
						<expr_stmt><expr><name pos:line="6159" pos:column="49">selectionType</name> <op:operator pos:line="6159" pos:column="63">=</op:operator> <name pos:line="6159" pos:column="65">selWholeLine</name></expr>;</expr_stmt></then></if>
				}</block></then> <else pos:line="6160" pos:column="35">else <block pos:line="6160" pos:column="40">{
					<expr_stmt><expr><name pos:line="6161" pos:column="41">selectionType</name> <op:operator pos:line="6161" pos:column="55">=</op:operator> <name pos:line="6161" pos:column="57">selChar</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="6162" pos:column="41">originalAnchorPos</name> <op:operator pos:line="6162" pos:column="59">=</op:operator> <call><name><name pos:line="6162" pos:column="61">sel</name><op:operator pos:line="6162" pos:column="64">.</op:operator><name pos:line="6162" pos:column="65">MainCaret</name></name><argument_list pos:line="6162" pos:column="74">()</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></else></if></else></if>
		}</block></then></if>

		<if pos:line="6167" pos:column="17">if <condition pos:line="6167" pos:column="20">(<expr><name pos:line="6167" pos:column="21">selectionType</name> <op:operator pos:line="6167" pos:column="35">==</op:operator> <name pos:line="6167" pos:column="38">selWord</name></expr>)</condition><then pos:line="6167" pos:column="46"> <block pos:line="6167" pos:column="47">{
			<decl_stmt><decl><type><name pos:line="6168" pos:column="25">int</name></type> <name pos:line="6168" pos:column="29">charPos</name> <init pos:line="6168" pos:column="37">= <expr><name pos:line="6168" pos:column="39">originalAnchorPos</name></expr></init></decl>;</decl_stmt>
			<if pos:line="6169" pos:column="25">if <condition pos:line="6169" pos:column="28">(<expr><call><name><name pos:line="6169" pos:column="29">sel</name><op:operator pos:line="6169" pos:column="32">.</op:operator><name pos:line="6169" pos:column="33">MainCaret</name></name><argument_list pos:line="6169" pos:column="42">()</argument_list></call> <op:operator pos:line="6169" pos:column="45">==</op:operator> <name pos:line="6169" pos:column="48">originalAnchorPos</name></expr>)</condition><then pos:line="6169" pos:column="66"> <block pos:line="6169" pos:column="67">{
				<expr_stmt><expr><name pos:line="6170" pos:column="33">charPos</name> <op:operator pos:line="6170" pos:column="41">=</op:operator> <call><name pos:line="6170" pos:column="43">PositionFromLocation</name><argument_list pos:line="6170" pos:column="63">(<argument><expr><name pos:line="6170" pos:column="64">pt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6170" pos:column="68">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6170" pos:column="75">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="6171" pos:column="33">charPos</name> <op:operator pos:line="6171" pos:column="41">=</op:operator> <call><name pos:line="6171" pos:column="43">MovePositionOutsideChar</name><argument_list pos:line="6171" pos:column="66">(<argument><expr><name pos:line="6171" pos:column="67">charPos</name></expr></argument>, <argument><expr><op:operator pos:line="6171" pos:column="76">-</op:operator><lit:literal type="number" pos:line="6171" pos:column="77">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<decl_stmt><decl><type><name pos:line="6174" pos:column="25">int</name></type> <name pos:line="6174" pos:column="29">startWord</name></decl><op:operator pos:line="6174" pos:column="38">,</op:operator> <decl><type ref="prev"/><name pos:line="6174" pos:column="40">endWord</name></decl>;</decl_stmt>
			<if pos:line="6175" pos:column="25">if <condition pos:line="6175" pos:column="28">(<expr><op:operator pos:line="6175" pos:column="29">(</op:operator><call><name><name pos:line="6175" pos:column="30">sel</name><op:operator pos:line="6175" pos:column="33">.</op:operator><name pos:line="6175" pos:column="34">MainCaret</name></name><argument_list pos:line="6175" pos:column="43">()</argument_list></call> <op:operator pos:line="6175" pos:column="46">&gt;=</op:operator> <name pos:line="6175" pos:column="49">originalAnchorPos</name><op:operator pos:line="6175" pos:column="66">)</op:operator> <op:operator pos:line="6175" pos:column="68">&amp;&amp;</op:operator> <op:operator pos:line="6175" pos:column="71">!</op:operator><call><name><name pos:line="6175" pos:column="72">pdoc</name><op:operator pos:line="6175" pos:column="76">-&gt;</op:operator><name pos:line="6175" pos:column="78">IsLineEndPosition</name></name><argument_list pos:line="6175" pos:column="95">(<argument><expr><name pos:line="6175" pos:column="96">charPos</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6175" pos:column="105"> <block pos:line="6175" pos:column="106">{
				<expr_stmt><expr><name pos:line="6176" pos:column="33">startWord</name> <op:operator pos:line="6176" pos:column="43">=</op:operator> <call><name><name pos:line="6176" pos:column="45">pdoc</name><op:operator pos:line="6176" pos:column="49">-&gt;</op:operator><name pos:line="6176" pos:column="51">ExtendWordSelect</name></name><argument_list pos:line="6176" pos:column="67">(<argument><expr><call><name><name pos:line="6176" pos:column="68">pdoc</name><op:operator pos:line="6176" pos:column="72">-&gt;</op:operator><name pos:line="6176" pos:column="74">MovePositionOutsideChar</name></name><argument_list pos:line="6176" pos:column="97">(<argument><expr><name pos:line="6176" pos:column="98">charPos</name> <op:operator pos:line="6176" pos:column="106">+</op:operator> <lit:literal type="number" pos:line="6176" pos:column="108">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6176" pos:column="111">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="6176" pos:column="115">-</op:operator><lit:literal type="number" pos:line="6176" pos:column="116">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="6177" pos:column="33">endWord</name> <op:operator pos:line="6177" pos:column="41">=</op:operator> <call><name><name pos:line="6177" pos:column="43">pdoc</name><op:operator pos:line="6177" pos:column="47">-&gt;</op:operator><name pos:line="6177" pos:column="49">ExtendWordSelect</name></name><argument_list pos:line="6177" pos:column="65">(<argument><expr><name pos:line="6177" pos:column="66">charPos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6177" pos:column="75">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="6178" pos:column="27">else <block pos:line="6178" pos:column="32">{
				<comment type="line" pos:line="6179" pos:column="33">// Selecting backwards, or anchor beyond last character on line. In these cases,</comment>
				<comment type="line" pos:line="6180" pos:column="33">// we select the word containing the character to the *left* of the anchor.</comment>
				<if pos:line="6181" pos:column="33">if <condition pos:line="6181" pos:column="36">(<expr><name pos:line="6181" pos:column="37">charPos</name> <op:operator pos:line="6181" pos:column="45">&gt;</op:operator> <call><name><name pos:line="6181" pos:column="47">pdoc</name><op:operator pos:line="6181" pos:column="51">-&gt;</op:operator><name pos:line="6181" pos:column="53">LineStart</name></name><argument_list pos:line="6181" pos:column="62">(<argument><expr><call><name><name pos:line="6181" pos:column="63">pdoc</name><op:operator pos:line="6181" pos:column="67">-&gt;</op:operator><name pos:line="6181" pos:column="69">LineFromPosition</name></name><argument_list pos:line="6181" pos:column="85">(<argument><expr><name pos:line="6181" pos:column="86">charPos</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6181" pos:column="96"> <block pos:line="6181" pos:column="97">{
					<expr_stmt><expr><name pos:line="6182" pos:column="41">startWord</name> <op:operator pos:line="6182" pos:column="51">=</op:operator> <call><name><name pos:line="6182" pos:column="53">pdoc</name><op:operator pos:line="6182" pos:column="57">-&gt;</op:operator><name pos:line="6182" pos:column="59">ExtendWordSelect</name></name><argument_list pos:line="6182" pos:column="75">(<argument><expr><name pos:line="6182" pos:column="76">charPos</name></expr></argument>, <argument><expr><op:operator pos:line="6182" pos:column="85">-</op:operator><lit:literal type="number" pos:line="6182" pos:column="86">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="6183" pos:column="41">endWord</name> <op:operator pos:line="6183" pos:column="49">=</op:operator> <call><name><name pos:line="6183" pos:column="51">pdoc</name><op:operator pos:line="6183" pos:column="55">-&gt;</op:operator><name pos:line="6183" pos:column="57">ExtendWordSelect</name></name><argument_list pos:line="6183" pos:column="73">(<argument><expr><name pos:line="6183" pos:column="74">startWord</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6183" pos:column="85">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="6184" pos:column="35">else <block pos:line="6184" pos:column="40">{
					<comment type="line" pos:line="6185" pos:column="41">// Anchor at start of line; select nothing to begin with.</comment>
					<expr_stmt><expr><name pos:line="6186" pos:column="41">startWord</name> <op:operator pos:line="6186" pos:column="51">=</op:operator> <name pos:line="6186" pos:column="53">charPos</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="6187" pos:column="41">endWord</name> <op:operator pos:line="6187" pos:column="49">=</op:operator> <name pos:line="6187" pos:column="51">charPos</name></expr>;</expr_stmt>
				}</block></else></if>
			}</block></else></if>

			<expr_stmt><expr><name pos:line="6191" pos:column="25">wordSelectAnchorStartPos</name> <op:operator pos:line="6191" pos:column="50">=</op:operator> <name pos:line="6191" pos:column="52">startWord</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6192" pos:column="25">wordSelectAnchorEndPos</name> <op:operator pos:line="6192" pos:column="48">=</op:operator> <name pos:line="6192" pos:column="50">endWord</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6193" pos:column="25">wordSelectInitialCaretPos</name> <op:operator pos:line="6193" pos:column="51">=</op:operator> <call><name><name pos:line="6193" pos:column="53">sel</name><op:operator pos:line="6193" pos:column="56">.</op:operator><name pos:line="6193" pos:column="57">MainCaret</name></name><argument_list pos:line="6193" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6194" pos:column="25">WordSelection</name><argument_list pos:line="6194" pos:column="38">(<argument><expr><name pos:line="6194" pos:column="39">wordSelectInitialCaretPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6195" pos:column="19">else <if pos:line="6195" pos:column="24">if <condition pos:line="6195" pos:column="27">(<expr><name pos:line="6195" pos:column="28">selectionType</name> <op:operator pos:line="6195" pos:column="42">==</op:operator> <name pos:line="6195" pos:column="45">selSubLine</name> <op:operator pos:line="6195" pos:column="56">||</op:operator> <name pos:line="6195" pos:column="59">selectionType</name> <op:operator pos:line="6195" pos:column="73">==</op:operator> <name pos:line="6195" pos:column="76">selWholeLine</name></expr>)</condition><then pos:line="6195" pos:column="89"> <block pos:line="6195" pos:column="90">{
			<expr_stmt><expr><name pos:line="6196" pos:column="25">lineAnchorPos</name> <op:operator pos:line="6196" pos:column="39">=</op:operator> <call><name><name pos:line="6196" pos:column="41">newPos</name><op:operator pos:line="6196" pos:column="47">.</op:operator><name pos:line="6196" pos:column="48">Position</name></name><argument_list pos:line="6196" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6197" pos:column="25">LineSelection</name><argument_list pos:line="6197" pos:column="38">(<argument><expr><name pos:line="6197" pos:column="39">lineAnchorPos</name></expr></argument>, <argument><expr><name pos:line="6197" pos:column="54">lineAnchorPos</name></expr></argument>, <argument><expr><name pos:line="6197" pos:column="69">selectionType</name> <op:operator pos:line="6197" pos:column="83">==</op:operator> <name pos:line="6197" pos:column="86">selWholeLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="6198" pos:column="25">//Platform::DebugPrintf("Triple click: %d - %d\n", anchor, currentPos);</comment>
		}</block></then> <else pos:line="6199" pos:column="19">else <block pos:line="6199" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="6200" pos:column="25">SetEmptySelection</name><argument_list pos:line="6200" pos:column="42">(<argument><expr><call><name><name pos:line="6200" pos:column="43">sel</name><op:operator pos:line="6200" pos:column="46">.</op:operator><name pos:line="6200" pos:column="47">MainCaret</name></name><argument_list pos:line="6200" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if></else></if>
		<comment type="line" pos:line="6202" pos:column="17">//Platform::DebugPrintf("Double click: %d - %d\n", anchor, currentPos);</comment>
		<if pos:line="6203" pos:column="17">if <condition pos:line="6203" pos:column="20">(<expr><name pos:line="6203" pos:column="21">doubleClick</name></expr>)</condition><then pos:line="6203" pos:column="33"> <block pos:line="6203" pos:column="34">{
			<expr_stmt><expr><call><name pos:line="6204" pos:column="25">NotifyDoubleClick</name><argument_list pos:line="6204" pos:column="42">(<argument><expr><name pos:line="6204" pos:column="43">pt</name></expr></argument>, <argument><expr><name pos:line="6204" pos:column="47">shift</name></expr></argument>, <argument><expr><name pos:line="6204" pos:column="54">ctrl</name></expr></argument>, <argument><expr><name pos:line="6204" pos:column="60">alt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="6205" pos:column="25">if <condition pos:line="6205" pos:column="28">(<expr><call><name pos:line="6205" pos:column="29">PositionIsHotspot</name><argument_list pos:line="6205" pos:column="46">(<argument><expr><call><name><name pos:line="6205" pos:column="47">newPos</name><op:operator pos:line="6205" pos:column="53">.</op:operator><name pos:line="6205" pos:column="54">Position</name></name><argument_list pos:line="6205" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6205" pos:column="66">
				<expr_stmt><expr><call><name pos:line="6206" pos:column="33">NotifyHotSpotDoubleClicked</name><argument_list pos:line="6206" pos:column="59">(<argument><expr><call><name><name pos:line="6206" pos:column="60">newPos</name><op:operator pos:line="6206" pos:column="66">.</op:operator><name pos:line="6206" pos:column="67">Position</name></name><argument_list pos:line="6206" pos:column="75">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="6206" pos:column="79">shift</name></expr></argument>, <argument><expr><name pos:line="6206" pos:column="86">ctrl</name></expr></argument>, <argument><expr><name pos:line="6206" pos:column="92">alt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
	}</block></then> <else pos:line="6208" pos:column="11">else <block pos:line="6208" pos:column="16">{	<comment type="line" pos:line="6208" pos:column="25">// Single click</comment>
		<if pos:line="6209" pos:column="17">if <condition pos:line="6209" pos:column="20">(<expr><name pos:line="6209" pos:column="21">inSelMargin</name></expr>)</condition><then pos:line="6209" pos:column="33"> <block pos:line="6209" pos:column="34">{
			<expr_stmt><expr><name><name pos:line="6210" pos:column="25">sel</name><op:operator pos:line="6210" pos:column="28">.</op:operator><name pos:line="6210" pos:column="29">selType</name></name> <op:operator pos:line="6210" pos:column="37">=</op:operator> <name><name pos:line="6210" pos:column="39">Selection</name><op:operator pos:line="6210" pos:column="48">::</op:operator><name pos:line="6210" pos:column="50">selStream</name></name></expr>;</expr_stmt>
			<if pos:line="6211" pos:column="25">if <condition pos:line="6211" pos:column="28">(<expr><name pos:line="6211" pos:column="29">ctrl</name></expr>)</condition><then pos:line="6211" pos:column="34"> <block pos:line="6211" pos:column="35">{
				<expr_stmt><expr><call><name pos:line="6212" pos:column="33">SelectAll</name><argument_list pos:line="6212" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="6213" pos:column="33">lastClickTime</name> <op:operator pos:line="6213" pos:column="47">=</op:operator> <name pos:line="6213" pos:column="49">curTime</name></expr>;</expr_stmt>
				<return pos:line="6214" pos:column="33">return;</return>
			}</block></then></if>
			<if pos:line="6216" pos:column="25">if <condition pos:line="6216" pos:column="28">(<expr><op:operator pos:line="6216" pos:column="29">!</op:operator><name pos:line="6216" pos:column="30">shift</name></expr>)</condition><then pos:line="6216" pos:column="36"> <block pos:line="6216" pos:column="37">{
				<comment type="line" pos:line="6217" pos:column="33">// Single click in margin: select whole line or only subline if word wrap is enabled</comment>
				<expr_stmt><expr><name pos:line="6218" pos:column="33">lineAnchorPos</name> <op:operator pos:line="6218" pos:column="47">=</op:operator> <call><name><name pos:line="6218" pos:column="49">newPos</name><op:operator pos:line="6218" pos:column="55">.</op:operator><name pos:line="6218" pos:column="56">Position</name></name><argument_list pos:line="6218" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="6219" pos:column="33">selectionType</name> <op:operator pos:line="6219" pos:column="47">=</op:operator> <op:operator pos:line="6219" pos:column="49">(</op:operator><op:operator pos:line="6219" pos:column="50">(</op:operator><name pos:line="6219" pos:column="51">wrapState</name> <op:operator pos:line="6219" pos:column="61">!=</op:operator> <name pos:line="6219" pos:column="64">eWrapNone</name><op:operator pos:line="6219" pos:column="73">)</op:operator> <op:operator pos:line="6219" pos:column="75">&amp;&amp;</op:operator> <op:operator pos:line="6219" pos:column="78">(</op:operator><name pos:line="6219" pos:column="79">marginOptions</name> <op:operator pos:line="6219" pos:column="93">&amp;</op:operator> <name pos:line="6219" pos:column="95">SC_MARGINOPTION_SUBLINESELECT</name><op:operator pos:line="6219" pos:column="124">)</op:operator><op:operator pos:line="6219" pos:column="125">)</op:operator> <op:operator pos:line="6219" pos:column="127">?</op:operator> <name pos:line="6219" pos:column="129">selSubLine</name> <op:operator pos:line="6219" pos:column="140">:</op:operator> <name pos:line="6219" pos:column="142">selWholeLine</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6220" pos:column="33">LineSelection</name><argument_list pos:line="6220" pos:column="46">(<argument><expr><name pos:line="6220" pos:column="47">lineAnchorPos</name></expr></argument>, <argument><expr><name pos:line="6220" pos:column="62">lineAnchorPos</name></expr></argument>, <argument><expr><name pos:line="6220" pos:column="77">selectionType</name> <op:operator pos:line="6220" pos:column="91">==</op:operator> <name pos:line="6220" pos:column="94">selWholeLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="6221" pos:column="27">else <block pos:line="6221" pos:column="32">{
				<comment type="line" pos:line="6222" pos:column="33">// Single shift+click in margin: select from line anchor to clicked line</comment>
				<if pos:line="6223" pos:column="33">if <condition pos:line="6223" pos:column="36">(<expr><call><name><name pos:line="6223" pos:column="37">sel</name><op:operator pos:line="6223" pos:column="40">.</op:operator><name pos:line="6223" pos:column="41">MainAnchor</name></name><argument_list pos:line="6223" pos:column="51">()</argument_list></call> <op:operator pos:line="6223" pos:column="54">&gt;</op:operator> <call><name><name pos:line="6223" pos:column="56">sel</name><op:operator pos:line="6223" pos:column="59">.</op:operator><name pos:line="6223" pos:column="60">MainCaret</name></name><argument_list pos:line="6223" pos:column="69">()</argument_list></call></expr>)</condition><then pos:line="6223" pos:column="72">
					<expr_stmt><expr><name pos:line="6224" pos:column="41">lineAnchorPos</name> <op:operator pos:line="6224" pos:column="55">=</op:operator> <call><name><name pos:line="6224" pos:column="57">sel</name><op:operator pos:line="6224" pos:column="60">.</op:operator><name pos:line="6224" pos:column="61">MainAnchor</name></name><argument_list pos:line="6224" pos:column="71">()</argument_list></call> <op:operator pos:line="6224" pos:column="74">-</op:operator> <lit:literal type="number" pos:line="6224" pos:column="76">1</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="6225" pos:column="33">else
					<expr_stmt><expr><name pos:line="6226" pos:column="41">lineAnchorPos</name> <op:operator pos:line="6226" pos:column="55">=</op:operator> <call><name><name pos:line="6226" pos:column="57">sel</name><op:operator pos:line="6226" pos:column="60">.</op:operator><name pos:line="6226" pos:column="61">MainAnchor</name></name><argument_list pos:line="6226" pos:column="71">()</argument_list></call></expr>;</expr_stmt></else></if>
				<comment type="line" pos:line="6227" pos:column="33">// Reset selection type if there is an empty selection. </comment>
				<comment type="line" pos:line="6228" pos:column="33">// This ensures that we don't end up stuck in previous selection mode, which is no longer valid.</comment>
				<comment type="line" pos:line="6229" pos:column="33">// Otherwise, if there's a non empty selection, reset selection type only if it differs from selSubLine and selWholeLine.</comment>
				<comment type="line" pos:line="6230" pos:column="33">// This ensures that we continue selecting in the same selection mode.</comment>
				<if pos:line="6231" pos:column="33">if <condition pos:line="6231" pos:column="36">(<expr><call><name><name pos:line="6231" pos:column="37">sel</name><op:operator pos:line="6231" pos:column="40">.</op:operator><name pos:line="6231" pos:column="41">Empty</name></name><argument_list pos:line="6231" pos:column="46">()</argument_list></call>	<op:operator pos:line="6231" pos:column="49">||</op:operator> <op:operator pos:line="6231" pos:column="52">(</op:operator><name pos:line="6231" pos:column="53">selectionType</name> <op:operator pos:line="6231" pos:column="67">!=</op:operator> <name pos:line="6231" pos:column="70">selSubLine</name> <op:operator pos:line="6231" pos:column="81">&amp;&amp;</op:operator> <name pos:line="6231" pos:column="84">selectionType</name> <op:operator pos:line="6231" pos:column="98">!=</op:operator> <name pos:line="6231" pos:column="101">selWholeLine</name><op:operator pos:line="6231" pos:column="113">)</op:operator></expr>)</condition><then pos:line="6231" pos:column="115">
					<expr_stmt><expr><name pos:line="6232" pos:column="41">selectionType</name> <op:operator pos:line="6232" pos:column="55">=</op:operator> <op:operator pos:line="6232" pos:column="57">(</op:operator><op:operator pos:line="6232" pos:column="58">(</op:operator><name pos:line="6232" pos:column="59">wrapState</name> <op:operator pos:line="6232" pos:column="69">!=</op:operator> <name pos:line="6232" pos:column="72">eWrapNone</name><op:operator pos:line="6232" pos:column="81">)</op:operator> <op:operator pos:line="6232" pos:column="83">&amp;&amp;</op:operator> <op:operator pos:line="6232" pos:column="86">(</op:operator><name pos:line="6232" pos:column="87">marginOptions</name> <op:operator pos:line="6232" pos:column="101">&amp;</op:operator> <name pos:line="6232" pos:column="103">SC_MARGINOPTION_SUBLINESELECT</name><op:operator pos:line="6232" pos:column="132">)</op:operator><op:operator pos:line="6232" pos:column="133">)</op:operator> <op:operator pos:line="6232" pos:column="135">?</op:operator> <name pos:line="6232" pos:column="137">selSubLine</name> <op:operator pos:line="6232" pos:column="148">:</op:operator> <name pos:line="6232" pos:column="150">selWholeLine</name></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><call><name pos:line="6233" pos:column="33">LineSelection</name><argument_list pos:line="6233" pos:column="46">(<argument><expr><call><name><name pos:line="6233" pos:column="47">newPos</name><op:operator pos:line="6233" pos:column="53">.</op:operator><name pos:line="6233" pos:column="54">Position</name></name><argument_list pos:line="6233" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="6233" pos:column="66">lineAnchorPos</name></expr></argument>, <argument><expr><name pos:line="6233" pos:column="81">selectionType</name> <op:operator pos:line="6233" pos:column="95">==</op:operator> <name pos:line="6233" pos:column="98">selWholeLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>

			<expr_stmt><expr><call><name pos:line="6236" pos:column="25">SetDragPosition</name><argument_list pos:line="6236" pos:column="40">(<argument><expr><call><name pos:line="6236" pos:column="41">SelectionPosition</name><argument_list pos:line="6236" pos:column="58">(<argument><expr><name pos:line="6236" pos:column="59">invalidPosition</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6237" pos:column="25">SetMouseCapture</name><argument_list pos:line="6237" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="6237" pos:column="41">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6238" pos:column="19">else <block pos:line="6238" pos:column="24">{
			<if pos:line="6239" pos:column="25">if <condition pos:line="6239" pos:column="28">(<expr><call><name pos:line="6239" pos:column="29">PointIsHotspot</name><argument_list pos:line="6239" pos:column="43">(<argument><expr><name pos:line="6239" pos:column="44">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6239" pos:column="48"> <block pos:line="6239" pos:column="49">{
				<expr_stmt><expr><call><name pos:line="6240" pos:column="33">NotifyHotSpotClicked</name><argument_list pos:line="6240" pos:column="53">(<argument><expr><call><name><name pos:line="6240" pos:column="54">newPos</name><op:operator pos:line="6240" pos:column="60">.</op:operator><name pos:line="6240" pos:column="61">Position</name></name><argument_list pos:line="6240" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="6240" pos:column="73">shift</name></expr></argument>, <argument><expr><name pos:line="6240" pos:column="80">ctrl</name></expr></argument>, <argument><expr><name pos:line="6240" pos:column="86">alt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="6241" pos:column="33">hotSpotClickPos</name> <op:operator pos:line="6241" pos:column="49">=</op:operator> <call><name pos:line="6241" pos:column="51">PositionFromLocation</name><argument_list pos:line="6241" pos:column="71">(<argument><expr><name pos:line="6241" pos:column="72">pt</name></expr></argument>,<argument><expr><lit:literal type="boolean" pos:line="6241" pos:column="75">true</lit:literal></expr></argument>,<argument><expr><lit:literal type="boolean" pos:line="6241" pos:column="80">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<if pos:line="6243" pos:column="25">if <condition pos:line="6243" pos:column="28">(<expr><op:operator pos:line="6243" pos:column="29">!</op:operator><name pos:line="6243" pos:column="30">shift</name></expr>)</condition><then pos:line="6243" pos:column="36"> <block pos:line="6243" pos:column="37">{
				<if pos:line="6244" pos:column="33">if <condition pos:line="6244" pos:column="36">(<expr><call><name pos:line="6244" pos:column="37">PointInSelection</name><argument_list pos:line="6244" pos:column="53">(<argument><expr><name pos:line="6244" pos:column="54">pt</name></expr></argument>)</argument_list></call> <op:operator pos:line="6244" pos:column="58">&amp;&amp;</op:operator> <op:operator pos:line="6244" pos:column="61">!</op:operator><call><name pos:line="6244" pos:column="62">SelectionEmpty</name><argument_list pos:line="6244" pos:column="76">()</argument_list></call></expr>)</condition><then pos:line="6244" pos:column="79">
					<expr_stmt><expr><name pos:line="6245" pos:column="41">inDragDrop</name> <op:operator pos:line="6245" pos:column="52">=</op:operator> <name pos:line="6245" pos:column="54">ddInitial</name></expr>;</expr_stmt></then>
				<else pos:line="6246" pos:column="33">else
					<expr_stmt><expr><name pos:line="6247" pos:column="41">inDragDrop</name> <op:operator pos:line="6247" pos:column="52">=</op:operator> <name pos:line="6247" pos:column="54">ddNone</name></expr>;</expr_stmt></else></if>
			}</block></then></if>
			<expr_stmt><expr><call><name pos:line="6249" pos:column="25">SetMouseCapture</name><argument_list pos:line="6249" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="6249" pos:column="41">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="6250" pos:column="25">if <condition pos:line="6250" pos:column="28">(<expr><name pos:line="6250" pos:column="29">inDragDrop</name> <op:operator pos:line="6250" pos:column="40">!=</op:operator> <name pos:line="6250" pos:column="43">ddInitial</name></expr>)</condition><then pos:line="6250" pos:column="53"> <block pos:line="6250" pos:column="54">{
				<expr_stmt><expr><call><name pos:line="6251" pos:column="33">SetDragPosition</name><argument_list pos:line="6251" pos:column="48">(<argument><expr><call><name pos:line="6251" pos:column="49">SelectionPosition</name><argument_list pos:line="6251" pos:column="66">(<argument><expr><name pos:line="6251" pos:column="67">invalidPosition</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="6252" pos:column="33">if <condition pos:line="6252" pos:column="36">(<expr><op:operator pos:line="6252" pos:column="37">!</op:operator><name pos:line="6252" pos:column="38">shift</name></expr>)</condition><then pos:line="6252" pos:column="44"> <block pos:line="6252" pos:column="45">{
					<if pos:line="6253" pos:column="41">if <condition pos:line="6253" pos:column="44">(<expr><name pos:line="6253" pos:column="45">ctrl</name> <op:operator pos:line="6253" pos:column="50">&amp;&amp;</op:operator> <name pos:line="6253" pos:column="53">multipleSelection</name></expr>)</condition><then pos:line="6253" pos:column="71"> <block pos:line="6253" pos:column="72">{
						<function_decl><type><name pos:line="6254" pos:column="49">SelectionRange</name></type> <name pos:line="6254" pos:column="64">range</name><parameter_list pos:line="6254" pos:column="69">(<param><decl><type><name pos:line="6254" pos:column="70">newPos</name></type></decl></param>)</parameter_list>;</function_decl>
						<expr_stmt><expr><call><name><name pos:line="6255" pos:column="49">sel</name><op:operator pos:line="6255" pos:column="52">.</op:operator><name pos:line="6255" pos:column="53">TentativeSelection</name></name><argument_list pos:line="6255" pos:column="71">(<argument><expr><name pos:line="6255" pos:column="72">range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="6256" pos:column="49">InvalidateSelection</name><argument_list pos:line="6256" pos:column="68">(<argument><expr><name pos:line="6256" pos:column="69">range</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6256" pos:column="76">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then> <else pos:line="6257" pos:column="43">else <block pos:line="6257" pos:column="48">{
						<expr_stmt><expr><call><name pos:line="6258" pos:column="49">InvalidateSelection</name><argument_list pos:line="6258" pos:column="68">(<argument><expr><call><name pos:line="6258" pos:column="69">SelectionRange</name><argument_list pos:line="6258" pos:column="83">(<argument><expr><name pos:line="6258" pos:column="84">newPos</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6258" pos:column="93">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="6259" pos:column="49">if <condition pos:line="6259" pos:column="52">(<expr><call><name><name pos:line="6259" pos:column="53">sel</name><op:operator pos:line="6259" pos:column="56">.</op:operator><name pos:line="6259" pos:column="57">Count</name></name><argument_list pos:line="6259" pos:column="62">()</argument_list></call> <op:operator pos:line="6259" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="6259" pos:column="67">1</lit:literal></expr>)</condition><then pos:line="6259" pos:column="69">
							<expr_stmt><expr><call><name pos:line="6260" pos:column="57">Redraw</name><argument_list pos:line="6260" pos:column="63">()</argument_list></call></expr>;</expr_stmt></then></if>
						<if pos:line="6261" pos:column="49">if <condition pos:line="6261" pos:column="52">(<expr><op:operator pos:line="6261" pos:column="53">(</op:operator><call><name><name pos:line="6261" pos:column="54">sel</name><op:operator pos:line="6261" pos:column="57">.</op:operator><name pos:line="6261" pos:column="58">Count</name></name><argument_list pos:line="6261" pos:column="63">()</argument_list></call> <op:operator pos:line="6261" pos:column="66">&gt;</op:operator> <lit:literal type="number" pos:line="6261" pos:column="68">1</lit:literal><op:operator pos:line="6261" pos:column="69">)</op:operator> <op:operator pos:line="6261" pos:column="71">||</op:operator> <op:operator pos:line="6261" pos:column="74">(</op:operator><name><name pos:line="6261" pos:column="75">sel</name><op:operator pos:line="6261" pos:column="78">.</op:operator><name pos:line="6261" pos:column="79">selType</name></name> <op:operator pos:line="6261" pos:column="87">!=</op:operator> <name><name pos:line="6261" pos:column="90">Selection</name><op:operator pos:line="6261" pos:column="99">::</op:operator><name pos:line="6261" pos:column="101">selStream</name></name><op:operator pos:line="6261" pos:column="110">)</op:operator></expr>)</condition><then pos:line="6261" pos:column="112">
							<expr_stmt><expr><call><name><name pos:line="6262" pos:column="57">sel</name><op:operator pos:line="6262" pos:column="60">.</op:operator><name pos:line="6262" pos:column="61">Clear</name></name><argument_list pos:line="6262" pos:column="66">()</argument_list></call></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><name><name pos:line="6263" pos:column="49">sel</name><op:operator pos:line="6263" pos:column="52">.</op:operator><name pos:line="6263" pos:column="53">selType</name></name> <op:operator pos:line="6263" pos:column="61">=</op:operator> <name pos:line="6263" pos:column="63">alt</name> <op:operator pos:line="6263" pos:column="67">?</op:operator> <name><name pos:line="6263" pos:column="69">Selection</name><op:operator pos:line="6263" pos:column="78">::</op:operator><name pos:line="6263" pos:column="80">selRectangle</name></name> <op:operator pos:line="6263" pos:column="93">:</op:operator> <name><name pos:line="6263" pos:column="95">Selection</name><op:operator pos:line="6263" pos:column="104">::</op:operator><name pos:line="6263" pos:column="106">selStream</name></name></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="6264" pos:column="49">SetSelection</name><argument_list pos:line="6264" pos:column="61">(<argument><expr><name pos:line="6264" pos:column="62">newPos</name></expr></argument>, <argument><expr><name pos:line="6264" pos:column="70">newPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if>
				<decl_stmt><decl><type><name pos:line="6267" pos:column="33">SelectionPosition</name></type> <name pos:line="6267" pos:column="51">anchorCurrent</name> <init pos:line="6267" pos:column="65">= <expr><name pos:line="6267" pos:column="67">newPos</name></expr></init></decl>;</decl_stmt>
				<if pos:line="6268" pos:column="33">if <condition pos:line="6268" pos:column="36">(<expr><name pos:line="6268" pos:column="37">shift</name></expr>)</condition><then pos:line="6268" pos:column="43">
					<expr_stmt><expr><name pos:line="6269" pos:column="41">anchorCurrent</name> <op:operator pos:line="6269" pos:column="55">=</op:operator> <call><name><name pos:line="6269" pos:column="57">sel</name><op:operator pos:line="6269" pos:column="60">.</op:operator><name pos:line="6269" pos:column="61">IsRectangular</name></name><argument_list pos:line="6269" pos:column="74">()</argument_list></call> <op:operator pos:line="6269" pos:column="77">?</op:operator>
						<call><name><name pos:line="6270" pos:column="49">sel</name><op:operator pos:line="6270" pos:column="52">.</op:operator><name pos:line="6270" pos:column="53">Rectangular</name></name><argument_list pos:line="6270" pos:column="64">()</argument_list></call><op:operator pos:line="6270" pos:column="66">.</op:operator><name pos:line="6270" pos:column="67">anchor</name> <op:operator pos:line="6270" pos:column="74">:</op:operator> <call><name><name pos:line="6270" pos:column="76">sel</name><op:operator pos:line="6270" pos:column="79">.</op:operator><name pos:line="6270" pos:column="80">RangeMain</name></name><argument_list pos:line="6270" pos:column="89">()</argument_list></call><op:operator pos:line="6270" pos:column="91">.</op:operator><name pos:line="6270" pos:column="92">anchor</name></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name><name pos:line="6271" pos:column="33">sel</name><op:operator pos:line="6271" pos:column="36">.</op:operator><name pos:line="6271" pos:column="37">selType</name></name> <op:operator pos:line="6271" pos:column="45">=</op:operator> <name pos:line="6271" pos:column="47">alt</name> <op:operator pos:line="6271" pos:column="51">?</op:operator> <name><name pos:line="6271" pos:column="53">Selection</name><op:operator pos:line="6271" pos:column="62">::</op:operator><name pos:line="6271" pos:column="64">selRectangle</name></name> <op:operator pos:line="6271" pos:column="77">:</op:operator> <name><name pos:line="6271" pos:column="79">Selection</name><op:operator pos:line="6271" pos:column="88">::</op:operator><name pos:line="6271" pos:column="90">selStream</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="6272" pos:column="33">selectionType</name> <op:operator pos:line="6272" pos:column="47">=</op:operator> <name pos:line="6272" pos:column="49">selChar</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="6273" pos:column="33">originalAnchorPos</name> <op:operator pos:line="6273" pos:column="51">=</op:operator> <call><name><name pos:line="6273" pos:column="53">sel</name><op:operator pos:line="6273" pos:column="56">.</op:operator><name pos:line="6273" pos:column="57">MainCaret</name></name><argument_list pos:line="6273" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="6274" pos:column="33">sel</name><op:operator pos:line="6274" pos:column="36">.</op:operator><name pos:line="6274" pos:column="37">Rectangular</name></name><argument_list pos:line="6274" pos:column="48">()</argument_list></call> <op:operator pos:line="6274" pos:column="51">=</op:operator> <call><name pos:line="6274" pos:column="53">SelectionRange</name><argument_list pos:line="6274" pos:column="67">(<argument><expr><name pos:line="6274" pos:column="68">newPos</name></expr></argument>, <argument><expr><name pos:line="6274" pos:column="76">anchorCurrent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6275" pos:column="33">SetRectangularRange</name><argument_list pos:line="6275" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
	}</block></else></if>
	<expr_stmt><expr><name pos:line="6279" pos:column="9">lastClickTime</name> <op:operator pos:line="6279" pos:column="23">=</op:operator> <name pos:line="6279" pos:column="25">curTime</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="6280" pos:column="9">lastXChosen</name> <op:operator pos:line="6280" pos:column="21">=</op:operator> <name><name pos:line="6280" pos:column="23">pt</name><op:operator pos:line="6280" pos:column="25">.</op:operator><name pos:line="6280" pos:column="26">x</name></name> <op:operator pos:line="6280" pos:column="28">+</op:operator> <name pos:line="6280" pos:column="30">xOffset</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="6281" pos:column="9">ShowCaretAtCurrentPosition</name><argument_list pos:line="6281" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="6284" pos:column="1">bool</name></type> <name><name pos:line="6284" pos:column="6">Editor</name><op:operator pos:line="6284" pos:column="12">::</op:operator><name pos:line="6284" pos:column="14">PositionIsHotspot</name></name><parameter_list pos:line="6284" pos:column="31">(<param><decl><type><name pos:line="6284" pos:column="32">int</name></type> <name pos:line="6284" pos:column="36">position</name></decl></param>)</parameter_list> <block pos:line="6284" pos:column="46">{
	<return pos:line="6285" pos:column="9">return <expr><name><name pos:line="6285" pos:column="16">vs</name><op:operator pos:line="6285" pos:column="18">.</op:operator><name pos:line="6285" pos:column="19">styles</name><index pos:line="6285" pos:column="25">[<expr><call><name><name pos:line="6285" pos:column="26">pdoc</name><op:operator pos:line="6285" pos:column="30">-&gt;</op:operator><name pos:line="6285" pos:column="32">StyleAt</name></name><argument_list pos:line="6285" pos:column="39">(<argument><expr><name pos:line="6285" pos:column="40">position</name></expr></argument>)</argument_list></call> <op:operator pos:line="6285" pos:column="50">&amp;</op:operator> <name><name pos:line="6285" pos:column="52">pdoc</name><op:operator pos:line="6285" pos:column="56">-&gt;</op:operator><name pos:line="6285" pos:column="58">stylingBitsMask</name></name></expr>]</index></name><op:operator pos:line="6285" pos:column="74">.</op:operator><name pos:line="6285" pos:column="75">hotspot</name></expr>;</return>
}</block></function>

<function><type><name pos:line="6288" pos:column="1">bool</name></type> <name><name pos:line="6288" pos:column="6">Editor</name><op:operator pos:line="6288" pos:column="12">::</op:operator><name pos:line="6288" pos:column="14">PointIsHotspot</name></name><parameter_list pos:line="6288" pos:column="28">(<param><decl><type><name pos:line="6288" pos:column="29">Point</name></type> <name pos:line="6288" pos:column="35">pt</name></decl></param>)</parameter_list> <block pos:line="6288" pos:column="39">{
	<decl_stmt><decl><type><name pos:line="6289" pos:column="9">int</name></type> <name pos:line="6289" pos:column="13">pos</name> <init pos:line="6289" pos:column="17">= <expr><call><name pos:line="6289" pos:column="19">PositionFromLocation</name><argument_list pos:line="6289" pos:column="39">(<argument><expr><name pos:line="6289" pos:column="40">pt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6289" pos:column="44">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="6290" pos:column="9">if <condition pos:line="6290" pos:column="12">(<expr><name pos:line="6290" pos:column="13">pos</name> <op:operator pos:line="6290" pos:column="17">==</op:operator> <name pos:line="6290" pos:column="20">INVALID_POSITION</name></expr>)</condition><then pos:line="6290" pos:column="37">
		<return pos:line="6291" pos:column="17">return <expr><lit:literal type="boolean" pos:line="6291" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<return pos:line="6292" pos:column="9">return <expr><call><name pos:line="6292" pos:column="16">PositionIsHotspot</name><argument_list pos:line="6292" pos:column="33">(<argument><expr><name pos:line="6292" pos:column="34">pos</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="6295" pos:column="1">void</name></type> <name><name pos:line="6295" pos:column="6">Editor</name><op:operator pos:line="6295" pos:column="12">::</op:operator><name pos:line="6295" pos:column="14">SetHotSpotRange</name></name><parameter_list pos:line="6295" pos:column="29">(<param><decl><type><name pos:line="6295" pos:column="30">Point</name> <type:modifier pos:line="6295" pos:column="36">*</type:modifier></type><name pos:line="6295" pos:column="37">pt</name></decl></param>)</parameter_list> <block pos:line="6295" pos:column="41">{
	<if pos:line="6296" pos:column="9">if <condition pos:line="6296" pos:column="12">(<expr><name pos:line="6296" pos:column="13">pt</name></expr>)</condition><then pos:line="6296" pos:column="16"> <block pos:line="6296" pos:column="17">{
		<decl_stmt><decl><type><name pos:line="6297" pos:column="17">int</name></type> <name pos:line="6297" pos:column="21">pos</name> <init pos:line="6297" pos:column="25">= <expr><call><name pos:line="6297" pos:column="27">PositionFromLocation</name><argument_list pos:line="6297" pos:column="47">(<argument><expr><op:operator pos:line="6297" pos:column="48">*</op:operator><name pos:line="6297" pos:column="49">pt</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="6299" pos:column="17">// If we don't limit this to word characters then the</comment>
		<comment type="line" pos:line="6300" pos:column="17">// range can encompass more than the run range and then</comment>
		<comment type="line" pos:line="6301" pos:column="17">// the underline will not be drawn properly.</comment>
		<decl_stmt><decl><type><name pos:line="6302" pos:column="17">int</name></type> <name pos:line="6302" pos:column="21">hsStart_</name> <init pos:line="6302" pos:column="30">= <expr><call><name><name pos:line="6302" pos:column="32">pdoc</name><op:operator pos:line="6302" pos:column="36">-&gt;</op:operator><name pos:line="6302" pos:column="38">ExtendStyleRange</name></name><argument_list pos:line="6302" pos:column="54">(<argument><expr><name pos:line="6302" pos:column="55">pos</name></expr></argument>, <argument><expr><op:operator pos:line="6302" pos:column="60">-</op:operator><lit:literal type="number" pos:line="6302" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="6302" pos:column="64">vs</name><op:operator pos:line="6302" pos:column="66">.</op:operator><name pos:line="6302" pos:column="67">hotspotSingleLine</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="6303" pos:column="17">int</name></type> <name pos:line="6303" pos:column="21">hsEnd_</name> <init pos:line="6303" pos:column="28">= <expr><call><name><name pos:line="6303" pos:column="30">pdoc</name><op:operator pos:line="6303" pos:column="34">-&gt;</op:operator><name pos:line="6303" pos:column="36">ExtendStyleRange</name></name><argument_list pos:line="6303" pos:column="52">(<argument><expr><name pos:line="6303" pos:column="53">pos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6303" pos:column="58">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="6303" pos:column="61">vs</name><op:operator pos:line="6303" pos:column="63">.</op:operator><name pos:line="6303" pos:column="64">hotspotSingleLine</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="6305" pos:column="17">// Only invalidate the range if the hotspot range has changed...</comment>
		<if pos:line="6306" pos:column="17">if <condition pos:line="6306" pos:column="20">(<expr><name pos:line="6306" pos:column="21">hsStart_</name> <op:operator pos:line="6306" pos:column="30">!=</op:operator> <name pos:line="6306" pos:column="33">hsStart</name> <op:operator pos:line="6306" pos:column="41">||</op:operator> <name pos:line="6306" pos:column="44">hsEnd_</name> <op:operator pos:line="6306" pos:column="51">!=</op:operator> <name pos:line="6306" pos:column="54">hsEnd</name></expr>)</condition><then pos:line="6306" pos:column="60"> <block pos:line="6306" pos:column="61">{
			<if pos:line="6307" pos:column="25">if <condition pos:line="6307" pos:column="28">(<expr><name pos:line="6307" pos:column="29">hsStart</name> <op:operator pos:line="6307" pos:column="37">!=</op:operator> <op:operator pos:line="6307" pos:column="40">-</op:operator><lit:literal type="number" pos:line="6307" pos:column="41">1</lit:literal></expr>)</condition><then pos:line="6307" pos:column="43"> <block pos:line="6307" pos:column="44">{
				<expr_stmt><expr><call><name pos:line="6308" pos:column="33">InvalidateRange</name><argument_list pos:line="6308" pos:column="48">(<argument><expr><name pos:line="6308" pos:column="49">hsStart</name></expr></argument>, <argument><expr><name pos:line="6308" pos:column="58">hsEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="6310" pos:column="25">hsStart</name> <op:operator pos:line="6310" pos:column="33">=</op:operator> <name pos:line="6310" pos:column="35">hsStart_</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6311" pos:column="25">hsEnd</name> <op:operator pos:line="6311" pos:column="31">=</op:operator> <name pos:line="6311" pos:column="33">hsEnd_</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6312" pos:column="25">InvalidateRange</name><argument_list pos:line="6312" pos:column="40">(<argument><expr><name pos:line="6312" pos:column="41">hsStart</name></expr></argument>, <argument><expr><name pos:line="6312" pos:column="50">hsEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then> <else pos:line="6314" pos:column="11">else <block pos:line="6314" pos:column="16">{
		<if pos:line="6315" pos:column="17">if <condition pos:line="6315" pos:column="20">(<expr><name pos:line="6315" pos:column="21">hsStart</name> <op:operator pos:line="6315" pos:column="29">!=</op:operator> <op:operator pos:line="6315" pos:column="32">-</op:operator><lit:literal type="number" pos:line="6315" pos:column="33">1</lit:literal></expr>)</condition><then pos:line="6315" pos:column="35"> <block pos:line="6315" pos:column="36">{
			<decl_stmt><decl><type><name pos:line="6316" pos:column="25">int</name></type> <name pos:line="6316" pos:column="29">hsStart_</name> <init pos:line="6316" pos:column="38">= <expr><name pos:line="6316" pos:column="40">hsStart</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="6317" pos:column="25">int</name></type> <name pos:line="6317" pos:column="29">hsEnd_</name> <init pos:line="6317" pos:column="36">= <expr><name pos:line="6317" pos:column="38">hsEnd</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="6318" pos:column="25">hsStart</name> <op:operator pos:line="6318" pos:column="33">=</op:operator> <op:operator pos:line="6318" pos:column="35">-</op:operator><lit:literal type="number" pos:line="6318" pos:column="36">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6319" pos:column="25">hsEnd</name> <op:operator pos:line="6319" pos:column="31">=</op:operator> <op:operator pos:line="6319" pos:column="33">-</op:operator><lit:literal type="number" pos:line="6319" pos:column="34">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6320" pos:column="25">InvalidateRange</name><argument_list pos:line="6320" pos:column="40">(<argument><expr><name pos:line="6320" pos:column="41">hsStart_</name></expr></argument>, <argument><expr><name pos:line="6320" pos:column="51">hsEnd_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6321" pos:column="19">else <block pos:line="6321" pos:column="24">{
			<expr_stmt><expr><name pos:line="6322" pos:column="25">hsStart</name> <op:operator pos:line="6322" pos:column="33">=</op:operator> <op:operator pos:line="6322" pos:column="35">-</op:operator><lit:literal type="number" pos:line="6322" pos:column="36">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="6323" pos:column="25">hsEnd</name> <op:operator pos:line="6323" pos:column="31">=</op:operator> <op:operator pos:line="6323" pos:column="33">-</op:operator><lit:literal type="number" pos:line="6323" pos:column="34">1</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="6328" pos:column="1">void</name></type> <name><name pos:line="6328" pos:column="6">Editor</name><op:operator pos:line="6328" pos:column="12">::</op:operator><name pos:line="6328" pos:column="14">GetHotSpotRange</name></name><parameter_list pos:line="6328" pos:column="29">(<param><decl><type><name pos:line="6328" pos:column="30">int</name> <type:modifier pos:line="6328" pos:column="34">&amp;</type:modifier></type><name pos:line="6328" pos:column="35">hsStart_</name></decl></param>, <param><decl><type><name pos:line="6328" pos:column="45">int</name> <type:modifier pos:line="6328" pos:column="49">&amp;</type:modifier></type><name pos:line="6328" pos:column="50">hsEnd_</name></decl></param>)</parameter_list> <block pos:line="6328" pos:column="58">{
	<expr_stmt><expr><name pos:line="6329" pos:column="9">hsStart_</name> <op:operator pos:line="6329" pos:column="18">=</op:operator> <name pos:line="6329" pos:column="20">hsStart</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="6330" pos:column="9">hsEnd_</name> <op:operator pos:line="6330" pos:column="16">=</op:operator> <name pos:line="6330" pos:column="18">hsEnd</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="6333" pos:column="1">void</name></type> <name><name pos:line="6333" pos:column="6">Editor</name><op:operator pos:line="6333" pos:column="12">::</op:operator><name pos:line="6333" pos:column="14">ButtonMove</name></name><parameter_list pos:line="6333" pos:column="24">(<param><decl><type><name pos:line="6333" pos:column="25">Point</name></type> <name pos:line="6333" pos:column="31">pt</name></decl></param>)</parameter_list> <block pos:line="6333" pos:column="35">{
	<if pos:line="6334" pos:column="9">if <condition pos:line="6334" pos:column="12">(<expr><op:operator pos:line="6334" pos:column="13">(</op:operator><name><name pos:line="6334" pos:column="14">ptMouseLast</name><op:operator pos:line="6334" pos:column="25">.</op:operator><name pos:line="6334" pos:column="26">x</name></name> <op:operator pos:line="6334" pos:column="28">!=</op:operator> <name><name pos:line="6334" pos:column="31">pt</name><op:operator pos:line="6334" pos:column="33">.</op:operator><name pos:line="6334" pos:column="34">x</name></name><op:operator pos:line="6334" pos:column="35">)</op:operator> <op:operator pos:line="6334" pos:column="37">||</op:operator> <op:operator pos:line="6334" pos:column="40">(</op:operator><name><name pos:line="6334" pos:column="41">ptMouseLast</name><op:operator pos:line="6334" pos:column="52">.</op:operator><name pos:line="6334" pos:column="53">y</name></name> <op:operator pos:line="6334" pos:column="55">!=</op:operator> <name><name pos:line="6334" pos:column="58">pt</name><op:operator pos:line="6334" pos:column="60">.</op:operator><name pos:line="6334" pos:column="61">y</name></name><op:operator pos:line="6334" pos:column="62">)</op:operator></expr>)</condition><then pos:line="6334" pos:column="64"> <block pos:line="6334" pos:column="65">{
		<expr_stmt><expr><call><name pos:line="6335" pos:column="17">DwellEnd</name><argument_list pos:line="6335" pos:column="25">(<argument><expr><lit:literal type="boolean" pos:line="6335" pos:column="26">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="6338" pos:column="9">SelectionPosition</name></type> <name pos:line="6338" pos:column="27">movePos</name> <init pos:line="6338" pos:column="35">= <expr><call><name pos:line="6338" pos:column="37">SPositionFromLocation</name><argument_list pos:line="6338" pos:column="58">(<argument><expr><name pos:line="6338" pos:column="59">pt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6338" pos:column="63">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6338" pos:column="70">false</lit:literal></expr></argument>,
		<argument><expr><call><name pos:line="6339" pos:column="17">AllowVirtualSpace</name><argument_list pos:line="6339" pos:column="34">(<argument><expr><name pos:line="6339" pos:column="35">virtualSpaceOptions</name></expr></argument>, <argument><expr><call><name><name pos:line="6339" pos:column="56">sel</name><op:operator pos:line="6339" pos:column="59">.</op:operator><name pos:line="6339" pos:column="60">IsRectangular</name></name><argument_list pos:line="6339" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="6340" pos:column="9">movePos</name> <op:operator pos:line="6340" pos:column="17">=</op:operator> <call><name pos:line="6340" pos:column="19">MovePositionOutsideChar</name><argument_list pos:line="6340" pos:column="42">(<argument><expr><name pos:line="6340" pos:column="43">movePos</name></expr></argument>, <argument><expr><call><name><name pos:line="6340" pos:column="52">sel</name><op:operator pos:line="6340" pos:column="55">.</op:operator><name pos:line="6340" pos:column="56">MainCaret</name></name><argument_list pos:line="6340" pos:column="65">()</argument_list></call> <op:operator pos:line="6340" pos:column="68">-</op:operator> <call><name><name pos:line="6340" pos:column="70">movePos</name><op:operator pos:line="6340" pos:column="77">.</op:operator><name pos:line="6340" pos:column="78">Position</name></name><argument_list pos:line="6340" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="6342" pos:column="9">if <condition pos:line="6342" pos:column="12">(<expr><name pos:line="6342" pos:column="13">inDragDrop</name> <op:operator pos:line="6342" pos:column="24">==</op:operator> <name pos:line="6342" pos:column="27">ddInitial</name></expr>)</condition><then pos:line="6342" pos:column="37"> <block pos:line="6342" pos:column="38">{
		<if pos:line="6343" pos:column="17">if <condition pos:line="6343" pos:column="20">(<expr><call><name pos:line="6343" pos:column="21">DragThreshold</name><argument_list pos:line="6343" pos:column="34">(<argument><expr><name pos:line="6343" pos:column="35">ptMouseLast</name></expr></argument>, <argument><expr><name pos:line="6343" pos:column="48">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6343" pos:column="52"> <block pos:line="6343" pos:column="53">{
			<expr_stmt><expr><call><name pos:line="6344" pos:column="25">SetMouseCapture</name><argument_list pos:line="6344" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="6344" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6345" pos:column="25">SetDragPosition</name><argument_list pos:line="6345" pos:column="40">(<argument><expr><name pos:line="6345" pos:column="41">movePos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6346" pos:column="25">CopySelectionRange</name><argument_list pos:line="6346" pos:column="43">(<argument><expr><op:operator pos:line="6346" pos:column="44">&amp;</op:operator><name pos:line="6346" pos:column="45">drag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6347" pos:column="25">StartDrag</name><argument_list pos:line="6347" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<return pos:line="6349" pos:column="17">return;</return>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="6352" pos:column="9">ptMouseLast</name> <op:operator pos:line="6352" pos:column="21">=</op:operator> <name pos:line="6352" pos:column="23">pt</name></expr>;</expr_stmt>
	<comment type="line" pos:line="6353" pos:column="9">//Platform::DebugPrintf("Move %d %d\n", pt.x, pt.y);</comment>
	<if pos:line="6354" pos:column="9">if <condition pos:line="6354" pos:column="12">(<expr><call><name pos:line="6354" pos:column="13">HaveMouseCapture</name><argument_list pos:line="6354" pos:column="29">()</argument_list></call></expr>)</condition><then pos:line="6354" pos:column="32"> <block pos:line="6354" pos:column="33">{

		<comment type="line" pos:line="6356" pos:column="17">// Slow down autoscrolling/selection</comment>
		<expr_stmt><expr><name><name pos:line="6357" pos:column="17">autoScrollTimer</name><op:operator pos:line="6357" pos:column="32">.</op:operator><name pos:line="6357" pos:column="33">ticksToWait</name></name> <op:operator pos:line="6357" pos:column="45">-=</op:operator> <name><name pos:line="6357" pos:column="48">timer</name><op:operator pos:line="6357" pos:column="53">.</op:operator><name pos:line="6357" pos:column="54">tickSize</name></name></expr>;</expr_stmt>
		<if pos:line="6358" pos:column="17">if <condition pos:line="6358" pos:column="20">(<expr><name><name pos:line="6358" pos:column="21">autoScrollTimer</name><op:operator pos:line="6358" pos:column="36">.</op:operator><name pos:line="6358" pos:column="37">ticksToWait</name></name> <op:operator pos:line="6358" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="6358" pos:column="51">0</lit:literal></expr>)</condition><then pos:line="6358" pos:column="53">
			<return pos:line="6359" pos:column="25">return;</return></then></if>
		<expr_stmt><expr><name><name pos:line="6360" pos:column="17">autoScrollTimer</name><op:operator pos:line="6360" pos:column="32">.</op:operator><name pos:line="6360" pos:column="33">ticksToWait</name></name> <op:operator pos:line="6360" pos:column="45">=</op:operator> <name pos:line="6360" pos:column="47">autoScrollDelay</name></expr>;</expr_stmt>

		<comment type="line" pos:line="6362" pos:column="17">// Adjust selection</comment>
		<if pos:line="6363" pos:column="17">if <condition pos:line="6363" pos:column="20">(<expr><call><name><name pos:line="6363" pos:column="21">posDrag</name><op:operator pos:line="6363" pos:column="28">.</op:operator><name pos:line="6363" pos:column="29">IsValid</name></name><argument_list pos:line="6363" pos:column="36">()</argument_list></call></expr>)</condition><then pos:line="6363" pos:column="39"> <block pos:line="6363" pos:column="40">{
			<expr_stmt><expr><call><name pos:line="6364" pos:column="25">SetDragPosition</name><argument_list pos:line="6364" pos:column="40">(<argument><expr><name pos:line="6364" pos:column="41">movePos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6365" pos:column="19">else <block pos:line="6365" pos:column="24">{
			<if pos:line="6366" pos:column="25">if <condition pos:line="6366" pos:column="28">(<expr><name pos:line="6366" pos:column="29">selectionType</name> <op:operator pos:line="6366" pos:column="43">==</op:operator> <name pos:line="6366" pos:column="46">selChar</name></expr>)</condition><then pos:line="6366" pos:column="54"> <block pos:line="6366" pos:column="55">{
				<if pos:line="6367" pos:column="33">if <condition pos:line="6367" pos:column="36">(<expr><call><name><name pos:line="6367" pos:column="37">sel</name><op:operator pos:line="6367" pos:column="40">.</op:operator><name pos:line="6367" pos:column="41">IsRectangular</name></name><argument_list pos:line="6367" pos:column="54">()</argument_list></call></expr>)</condition><then pos:line="6367" pos:column="57"> <block pos:line="6367" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="6368" pos:column="41">sel</name><op:operator pos:line="6368" pos:column="44">.</op:operator><name pos:line="6368" pos:column="45">Rectangular</name></name><argument_list pos:line="6368" pos:column="56">()</argument_list></call> <op:operator pos:line="6368" pos:column="59">=</op:operator> <call><name pos:line="6368" pos:column="61">SelectionRange</name><argument_list pos:line="6368" pos:column="75">(<argument><expr><name pos:line="6368" pos:column="76">movePos</name></expr></argument>, <argument><expr><call><name><name pos:line="6368" pos:column="85">sel</name><op:operator pos:line="6368" pos:column="88">.</op:operator><name pos:line="6368" pos:column="89">Rectangular</name></name><argument_list pos:line="6368" pos:column="100">()</argument_list></call><op:operator pos:line="6368" pos:column="102">.</op:operator><name pos:line="6368" pos:column="103">anchor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="6369" pos:column="41">SetSelection</name><argument_list pos:line="6369" pos:column="53">(<argument><expr><name pos:line="6369" pos:column="54">movePos</name></expr></argument>, <argument><expr><call><name><name pos:line="6369" pos:column="63">sel</name><op:operator pos:line="6369" pos:column="66">.</op:operator><name pos:line="6369" pos:column="67">RangeMain</name></name><argument_list pos:line="6369" pos:column="76">()</argument_list></call><op:operator pos:line="6369" pos:column="78">.</op:operator><name pos:line="6369" pos:column="79">anchor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="6370" pos:column="35">else <if pos:line="6370" pos:column="40">if <condition pos:line="6370" pos:column="43">(<expr><call><name><name pos:line="6370" pos:column="44">sel</name><op:operator pos:line="6370" pos:column="47">.</op:operator><name pos:line="6370" pos:column="48">Count</name></name><argument_list pos:line="6370" pos:column="53">()</argument_list></call> <op:operator pos:line="6370" pos:column="56">&gt;</op:operator> <lit:literal type="number" pos:line="6370" pos:column="58">1</lit:literal></expr>)</condition><then pos:line="6370" pos:column="60"> <block pos:line="6370" pos:column="61">{
					<decl_stmt><decl><type><name pos:line="6371" pos:column="41">SelectionRange</name></type> <name pos:line="6371" pos:column="56">range</name><argument_list pos:line="6371" pos:column="61">(<argument><expr><name pos:line="6371" pos:column="62">movePos</name></expr></argument>, <argument><expr><call><name><name pos:line="6371" pos:column="71">sel</name><op:operator pos:line="6371" pos:column="74">.</op:operator><name pos:line="6371" pos:column="75">RangeMain</name></name><argument_list pos:line="6371" pos:column="84">()</argument_list></call><op:operator pos:line="6371" pos:column="86">.</op:operator><name pos:line="6371" pos:column="87">anchor</name></expr></argument>)</argument_list></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="6372" pos:column="41">sel</name><op:operator pos:line="6372" pos:column="44">.</op:operator><name pos:line="6372" pos:column="45">TentativeSelection</name></name><argument_list pos:line="6372" pos:column="63">(<argument><expr><name pos:line="6372" pos:column="64">range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="6373" pos:column="41">InvalidateSelection</name><argument_list pos:line="6373" pos:column="60">(<argument><expr><name pos:line="6373" pos:column="61">range</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6373" pos:column="68">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="6374" pos:column="35">else <block pos:line="6374" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="6375" pos:column="41">SetSelection</name><argument_list pos:line="6375" pos:column="53">(<argument><expr><name pos:line="6375" pos:column="54">movePos</name></expr></argument>, <argument><expr><call><name><name pos:line="6375" pos:column="63">sel</name><op:operator pos:line="6375" pos:column="66">.</op:operator><name pos:line="6375" pos:column="67">RangeMain</name></name><argument_list pos:line="6375" pos:column="76">()</argument_list></call><op:operator pos:line="6375" pos:column="78">.</op:operator><name pos:line="6375" pos:column="79">anchor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if></else></if>
			}</block></then> <else pos:line="6377" pos:column="27">else <if pos:line="6377" pos:column="32">if <condition pos:line="6377" pos:column="35">(<expr><name pos:line="6377" pos:column="36">selectionType</name> <op:operator pos:line="6377" pos:column="50">==</op:operator> <name pos:line="6377" pos:column="53">selWord</name></expr>)</condition><then pos:line="6377" pos:column="61"> <block pos:line="6377" pos:column="62">{
				<comment type="line" pos:line="6378" pos:column="33">// Continue selecting by word</comment>
				<if pos:line="6379" pos:column="33">if <condition pos:line="6379" pos:column="36">(<expr><call><name><name pos:line="6379" pos:column="37">movePos</name><op:operator pos:line="6379" pos:column="44">.</op:operator><name pos:line="6379" pos:column="45">Position</name></name><argument_list pos:line="6379" pos:column="53">()</argument_list></call> <op:operator pos:line="6379" pos:column="56">==</op:operator> <name pos:line="6379" pos:column="59">wordSelectInitialCaretPos</name></expr>)</condition><then pos:line="6379" pos:column="85"> <block pos:line="6379" pos:column="86">{  <comment type="line" pos:line="6379" pos:column="89">// Didn't move</comment>
					<comment type="line" pos:line="6380" pos:column="41">// No need to do anything. Previously this case was lumped</comment>
					<comment type="line" pos:line="6381" pos:column="41">// in with "Moved forward", but that can be harmful in this</comment>
					<comment type="line" pos:line="6382" pos:column="41">// case: a handler for the NotifyDoubleClick re-adjusts</comment>
					<comment type="line" pos:line="6383" pos:column="41">// the selection for a fancier definition of "word" (for</comment>
					<comment type="line" pos:line="6384" pos:column="41">// example, in Perl it is useful to include the leading</comment>
					<comment type="line" pos:line="6385" pos:column="41">// '$', '%' or '@' on variables for word selection). In this</comment>
					<comment type="line" pos:line="6386" pos:column="41">// the ButtonMove() called via Tick() for auto-scrolling</comment>
					<comment type="line" pos:line="6387" pos:column="41">// could result in the fancier word selection adjustment</comment>
					<comment type="line" pos:line="6388" pos:column="41">// being unmade.</comment>
				}</block></then> <else pos:line="6389" pos:column="35">else <block pos:line="6389" pos:column="40">{
					<expr_stmt><expr><name pos:line="6390" pos:column="41">wordSelectInitialCaretPos</name> <op:operator pos:line="6390" pos:column="67">=</op:operator> <op:operator pos:line="6390" pos:column="69">-</op:operator><lit:literal type="number" pos:line="6390" pos:column="70">1</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="6391" pos:column="41">WordSelection</name><argument_list pos:line="6391" pos:column="54">(<argument><expr><call><name><name pos:line="6391" pos:column="55">movePos</name><op:operator pos:line="6391" pos:column="62">.</op:operator><name pos:line="6391" pos:column="63">Position</name></name><argument_list pos:line="6391" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then> <else pos:line="6393" pos:column="27">else <block pos:line="6393" pos:column="32">{
				<comment type="line" pos:line="6394" pos:column="33">// Continue selecting by line</comment>
				<expr_stmt><expr><call><name pos:line="6395" pos:column="33">LineSelection</name><argument_list pos:line="6395" pos:column="46">(<argument><expr><call><name><name pos:line="6395" pos:column="47">movePos</name><op:operator pos:line="6395" pos:column="54">.</op:operator><name pos:line="6395" pos:column="55">Position</name></name><argument_list pos:line="6395" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="6395" pos:column="67">lineAnchorPos</name></expr></argument>, <argument><expr><name pos:line="6395" pos:column="82">selectionType</name> <op:operator pos:line="6395" pos:column="96">==</op:operator> <name pos:line="6395" pos:column="99">selWholeLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if></else></if>
		}</block></else></if>

		<comment type="line" pos:line="6399" pos:column="17">// Autoscroll</comment>
		<decl_stmt><decl><type><name pos:line="6400" pos:column="17">PRectangle</name></type> <name pos:line="6400" pos:column="28">rcClient</name> <init pos:line="6400" pos:column="37">= <expr><call><name pos:line="6400" pos:column="39">GetClientRectangle</name><argument_list pos:line="6400" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="6401" pos:column="17">int</name></type> <name pos:line="6401" pos:column="21">lineMove</name> <init pos:line="6401" pos:column="30">= <expr><call><name pos:line="6401" pos:column="32">DisplayFromPosition</name><argument_list pos:line="6401" pos:column="51">(<argument><expr><call><name><name pos:line="6401" pos:column="52">movePos</name><op:operator pos:line="6401" pos:column="59">.</op:operator><name pos:line="6401" pos:column="60">Position</name></name><argument_list pos:line="6401" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="6402" pos:column="17">if <condition pos:line="6402" pos:column="20">(<expr><name><name pos:line="6402" pos:column="21">pt</name><op:operator pos:line="6402" pos:column="23">.</op:operator><name pos:line="6402" pos:column="24">y</name></name> <op:operator pos:line="6402" pos:column="26">&gt;</op:operator> <name><name pos:line="6402" pos:column="28">rcClient</name><op:operator pos:line="6402" pos:column="36">.</op:operator><name pos:line="6402" pos:column="37">bottom</name></name></expr>)</condition><then pos:line="6402" pos:column="44"> <block pos:line="6402" pos:column="45">{
			<expr_stmt><expr><call><name pos:line="6403" pos:column="25">ScrollTo</name><argument_list pos:line="6403" pos:column="33">(<argument><expr><name pos:line="6403" pos:column="34">lineMove</name> <op:operator pos:line="6403" pos:column="43">-</op:operator> <call><name pos:line="6403" pos:column="45">LinesOnScreen</name><argument_list pos:line="6403" pos:column="58">()</argument_list></call> <op:operator pos:line="6403" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="6403" pos:column="63">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6404" pos:column="25">Redraw</name><argument_list pos:line="6404" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6405" pos:column="19">else <if pos:line="6405" pos:column="24">if <condition pos:line="6405" pos:column="27">(<expr><name><name pos:line="6405" pos:column="28">pt</name><op:operator pos:line="6405" pos:column="30">.</op:operator><name pos:line="6405" pos:column="31">y</name></name> <op:operator pos:line="6405" pos:column="33">&lt;</op:operator> <name><name pos:line="6405" pos:column="35">rcClient</name><op:operator pos:line="6405" pos:column="43">.</op:operator><name pos:line="6405" pos:column="44">top</name></name></expr>)</condition><then pos:line="6405" pos:column="48"> <block pos:line="6405" pos:column="49">{
			<expr_stmt><expr><call><name pos:line="6406" pos:column="25">ScrollTo</name><argument_list pos:line="6406" pos:column="33">(<argument><expr><name pos:line="6406" pos:column="34">lineMove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6407" pos:column="25">Redraw</name><argument_list pos:line="6407" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if></else></if>
		<expr_stmt><expr><call><name pos:line="6409" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="6409" pos:column="35">(<argument><expr><lit:literal type="boolean" pos:line="6409" pos:column="36">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6409" pos:column="43">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6409" pos:column="50">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="6411" pos:column="17">if <condition pos:line="6411" pos:column="20">(<expr><name pos:line="6411" pos:column="21">hsStart</name> <op:operator pos:line="6411" pos:column="29">!=</op:operator> <op:operator pos:line="6411" pos:column="32">-</op:operator><lit:literal type="number" pos:line="6411" pos:column="33">1</lit:literal> <op:operator pos:line="6411" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="6411" pos:column="38">!</op:operator><call><name pos:line="6411" pos:column="39">PositionIsHotspot</name><argument_list pos:line="6411" pos:column="56">(<argument><expr><call><name><name pos:line="6411" pos:column="57">movePos</name><op:operator pos:line="6411" pos:column="64">.</op:operator><name pos:line="6411" pos:column="65">Position</name></name><argument_list pos:line="6411" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6411" pos:column="77">
			<expr_stmt><expr><call><name pos:line="6412" pos:column="25">SetHotSpotRange</name><argument_list pos:line="6412" pos:column="40">(<argument><expr><name pos:line="6412" pos:column="41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<if pos:line="6414" pos:column="17">if <condition pos:line="6414" pos:column="20">(<expr><name pos:line="6414" pos:column="21">hotSpotClickPos</name> <op:operator pos:line="6414" pos:column="37">!=</op:operator> <name pos:line="6414" pos:column="40">INVALID_POSITION</name> <op:operator pos:line="6414" pos:column="57">&amp;&amp;</op:operator> <call><name pos:line="6414" pos:column="60">PositionFromLocation</name><argument_list pos:line="6414" pos:column="80">(<argument><expr><name pos:line="6414" pos:column="81">pt</name></expr></argument>,<argument><expr><lit:literal type="boolean" pos:line="6414" pos:column="84">true</lit:literal></expr></argument>,<argument><expr><lit:literal type="boolean" pos:line="6414" pos:column="89">false</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="6414" pos:column="96">!=</op:operator> <name pos:line="6414" pos:column="99">hotSpotClickPos</name></expr>)</condition><then pos:line="6414" pos:column="115"> <block pos:line="6414" pos:column="116">{
			<if pos:line="6415" pos:column="25">if <condition pos:line="6415" pos:column="28">(<expr><name pos:line="6415" pos:column="29">inDragDrop</name> <op:operator pos:line="6415" pos:column="40">==</op:operator> <name pos:line="6415" pos:column="43">ddNone</name></expr>)</condition><then pos:line="6415" pos:column="50"> <block pos:line="6415" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="6416" pos:column="33">DisplayCursor</name><argument_list pos:line="6416" pos:column="46">(<argument><expr><name><name pos:line="6416" pos:column="47">Window</name><op:operator pos:line="6416" pos:column="53">::</op:operator><name pos:line="6416" pos:column="55">cursorText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="6418" pos:column="25">hotSpotClickPos</name> <op:operator pos:line="6418" pos:column="41">=</op:operator> <name pos:line="6418" pos:column="43">INVALID_POSITION</name></expr>;</expr_stmt>
		}</block></then></if>

	}</block></then> <else pos:line="6421" pos:column="11">else <block pos:line="6421" pos:column="16">{
		<if pos:line="6422" pos:column="17">if <condition pos:line="6422" pos:column="20">(<expr><name><name pos:line="6422" pos:column="21">vs</name><op:operator pos:line="6422" pos:column="23">.</op:operator><name pos:line="6422" pos:column="24">fixedColumnWidth</name></name> <op:operator pos:line="6422" pos:column="41">&gt;</op:operator> <lit:literal type="number" pos:line="6422" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="6422" pos:column="45"> <block pos:line="6422" pos:column="46">{	<comment type="line" pos:line="6422" pos:column="49">// There is a margin</comment>
			<if pos:line="6423" pos:column="25">if <condition pos:line="6423" pos:column="28">(<expr><call><name pos:line="6423" pos:column="29">PointInSelMargin</name><argument_list pos:line="6423" pos:column="45">(<argument><expr><name pos:line="6423" pos:column="46">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6423" pos:column="50"> <block pos:line="6423" pos:column="51">{
				<expr_stmt><expr><call><name pos:line="6424" pos:column="33">DisplayCursor</name><argument_list pos:line="6424" pos:column="46">(<argument><expr><call><name pos:line="6424" pos:column="47">GetMarginCursor</name><argument_list pos:line="6424" pos:column="62">(<argument><expr><name pos:line="6424" pos:column="63">pt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6425" pos:column="33">SetHotSpotRange</name><argument_list pos:line="6425" pos:column="48">(<argument><expr><name pos:line="6425" pos:column="49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="6426" pos:column="33">return;</return> 	<comment type="line" pos:line="6426" pos:column="49">// No need to test for selection</comment>
			}</block></then></if>
		}</block></then></if>
		<comment type="line" pos:line="6429" pos:column="17">// Display regular (drag) cursor over selection</comment>
		<if pos:line="6430" pos:column="17">if <condition pos:line="6430" pos:column="20">(<expr><call><name pos:line="6430" pos:column="21">PointInSelection</name><argument_list pos:line="6430" pos:column="37">(<argument><expr><name pos:line="6430" pos:column="38">pt</name></expr></argument>)</argument_list></call> <op:operator pos:line="6430" pos:column="42">&amp;&amp;</op:operator> <op:operator pos:line="6430" pos:column="45">!</op:operator><call><name pos:line="6430" pos:column="46">SelectionEmpty</name><argument_list pos:line="6430" pos:column="60">()</argument_list></call></expr>)</condition><then pos:line="6430" pos:column="63"> <block pos:line="6430" pos:column="64">{
			<expr_stmt><expr><call><name pos:line="6431" pos:column="25">DisplayCursor</name><argument_list pos:line="6431" pos:column="38">(<argument><expr><name><name pos:line="6431" pos:column="39">Window</name><op:operator pos:line="6431" pos:column="45">::</op:operator><name pos:line="6431" pos:column="47">cursorArrow</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6432" pos:column="19">else <if pos:line="6432" pos:column="24">if <condition pos:line="6432" pos:column="27">(<expr><call><name pos:line="6432" pos:column="28">PointIsHotspot</name><argument_list pos:line="6432" pos:column="42">(<argument><expr><name pos:line="6432" pos:column="43">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6432" pos:column="47"> <block pos:line="6432" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="6433" pos:column="25">DisplayCursor</name><argument_list pos:line="6433" pos:column="38">(<argument><expr><name><name pos:line="6433" pos:column="39">Window</name><op:operator pos:line="6433" pos:column="45">::</op:operator><name pos:line="6433" pos:column="47">cursorHand</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6434" pos:column="25">SetHotSpotRange</name><argument_list pos:line="6434" pos:column="40">(<argument><expr><op:operator pos:line="6434" pos:column="41">&amp;</op:operator><name pos:line="6434" pos:column="42">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6435" pos:column="19">else <block pos:line="6435" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="6436" pos:column="25">DisplayCursor</name><argument_list pos:line="6436" pos:column="38">(<argument><expr><name><name pos:line="6436" pos:column="39">Window</name><op:operator pos:line="6436" pos:column="45">::</op:operator><name pos:line="6436" pos:column="47">cursorText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6437" pos:column="25">SetHotSpotRange</name><argument_list pos:line="6437" pos:column="40">(<argument><expr><name pos:line="6437" pos:column="41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if></else></if>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="6442" pos:column="1">void</name></type> <name><name pos:line="6442" pos:column="6">Editor</name><op:operator pos:line="6442" pos:column="12">::</op:operator><name pos:line="6442" pos:column="14">ButtonUp</name></name><parameter_list pos:line="6442" pos:column="22">(<param><decl><type><name pos:line="6442" pos:column="23">Point</name></type> <name pos:line="6442" pos:column="29">pt</name></decl></param>, <param><decl><type><name pos:line="6442" pos:column="33">unsigned</name> <name pos:line="6442" pos:column="42">int</name></type> <name pos:line="6442" pos:column="46">curTime</name></decl></param>, <param><decl><type><name pos:line="6442" pos:column="55">bool</name></type> <name pos:line="6442" pos:column="60">ctrl</name></decl></param>)</parameter_list> <block pos:line="6442" pos:column="66">{
	<comment type="line" pos:line="6443" pos:column="9">//Platform::DebugPrintf("ButtonUp %d %d\n", HaveMouseCapture(), inDragDrop);</comment>
	<decl_stmt><decl><type><name pos:line="6444" pos:column="9">SelectionPosition</name></type> <name pos:line="6444" pos:column="27">newPos</name> <init pos:line="6444" pos:column="34">= <expr><call><name pos:line="6444" pos:column="36">SPositionFromLocation</name><argument_list pos:line="6444" pos:column="57">(<argument><expr><name pos:line="6444" pos:column="58">pt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6444" pos:column="62">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6444" pos:column="69">false</lit:literal></expr></argument>,
		<argument><expr><call><name pos:line="6445" pos:column="17">AllowVirtualSpace</name><argument_list pos:line="6445" pos:column="34">(<argument><expr><name pos:line="6445" pos:column="35">virtualSpaceOptions</name></expr></argument>, <argument><expr><call><name><name pos:line="6445" pos:column="56">sel</name><op:operator pos:line="6445" pos:column="59">.</op:operator><name pos:line="6445" pos:column="60">IsRectangular</name></name><argument_list pos:line="6445" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="6446" pos:column="9">newPos</name> <op:operator pos:line="6446" pos:column="16">=</op:operator> <call><name pos:line="6446" pos:column="18">MovePositionOutsideChar</name><argument_list pos:line="6446" pos:column="41">(<argument><expr><name pos:line="6446" pos:column="42">newPos</name></expr></argument>, <argument><expr><call><name><name pos:line="6446" pos:column="50">sel</name><op:operator pos:line="6446" pos:column="53">.</op:operator><name pos:line="6446" pos:column="54">MainCaret</name></name><argument_list pos:line="6446" pos:column="63">()</argument_list></call> <op:operator pos:line="6446" pos:column="66">-</op:operator> <call><name><name pos:line="6446" pos:column="68">newPos</name><op:operator pos:line="6446" pos:column="74">.</op:operator><name pos:line="6446" pos:column="75">Position</name></name><argument_list pos:line="6446" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="6447" pos:column="9">if <condition pos:line="6447" pos:column="12">(<expr><name pos:line="6447" pos:column="13">inDragDrop</name> <op:operator pos:line="6447" pos:column="24">==</op:operator> <name pos:line="6447" pos:column="27">ddInitial</name></expr>)</condition><then pos:line="6447" pos:column="37"> <block pos:line="6447" pos:column="38">{
		<expr_stmt><expr><name pos:line="6448" pos:column="17">inDragDrop</name> <op:operator pos:line="6448" pos:column="28">=</op:operator> <name pos:line="6448" pos:column="30">ddNone</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6449" pos:column="17">SetEmptySelection</name><argument_list pos:line="6449" pos:column="34">(<argument><expr><call><name><name pos:line="6449" pos:column="35">newPos</name><op:operator pos:line="6449" pos:column="41">.</op:operator><name pos:line="6449" pos:column="42">Position</name></name><argument_list pos:line="6449" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="6450" pos:column="17">selectionType</name> <op:operator pos:line="6450" pos:column="31">=</op:operator> <name pos:line="6450" pos:column="33">selChar</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="6451" pos:column="17">originalAnchorPos</name> <op:operator pos:line="6451" pos:column="35">=</op:operator> <call><name><name pos:line="6451" pos:column="37">sel</name><op:operator pos:line="6451" pos:column="40">.</op:operator><name pos:line="6451" pos:column="41">MainCaret</name></name><argument_list pos:line="6451" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="6453" pos:column="9">if <condition pos:line="6453" pos:column="12">(<expr><name pos:line="6453" pos:column="13">hotSpotClickPos</name> <op:operator pos:line="6453" pos:column="29">!=</op:operator> <name pos:line="6453" pos:column="32">INVALID_POSITION</name> <op:operator pos:line="6453" pos:column="49">&amp;&amp;</op:operator> <call><name pos:line="6453" pos:column="52">PointIsHotspot</name><argument_list pos:line="6453" pos:column="66">(<argument><expr><name pos:line="6453" pos:column="67">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6453" pos:column="71"> <block pos:line="6453" pos:column="72">{
		<expr_stmt><expr><name pos:line="6454" pos:column="17">hotSpotClickPos</name> <op:operator pos:line="6454" pos:column="33">=</op:operator> <name pos:line="6454" pos:column="35">INVALID_POSITION</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6455" pos:column="17">NotifyHotSpotReleaseClick</name><argument_list pos:line="6455" pos:column="42">(<argument><expr><call><name><name pos:line="6455" pos:column="43">newPos</name><op:operator pos:line="6455" pos:column="49">.</op:operator><name pos:line="6455" pos:column="50">Position</name></name><argument_list pos:line="6455" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6455" pos:column="62">false</lit:literal></expr></argument>, <argument><expr><name pos:line="6455" pos:column="69">ctrl</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6455" pos:column="75">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="6457" pos:column="9">if <condition pos:line="6457" pos:column="12">(<expr><call><name pos:line="6457" pos:column="13">HaveMouseCapture</name><argument_list pos:line="6457" pos:column="29">()</argument_list></call></expr>)</condition><then pos:line="6457" pos:column="32"> <block pos:line="6457" pos:column="33">{
		<if pos:line="6458" pos:column="17">if <condition pos:line="6458" pos:column="20">(<expr><call><name pos:line="6458" pos:column="21">PointInSelMargin</name><argument_list pos:line="6458" pos:column="37">(<argument><expr><name pos:line="6458" pos:column="38">pt</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6458" pos:column="42"> <block pos:line="6458" pos:column="43">{
			<expr_stmt><expr><call><name pos:line="6459" pos:column="25">DisplayCursor</name><argument_list pos:line="6459" pos:column="38">(<argument><expr><call><name pos:line="6459" pos:column="39">GetMarginCursor</name><argument_list pos:line="6459" pos:column="54">(<argument><expr><name pos:line="6459" pos:column="55">pt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="6460" pos:column="19">else <block pos:line="6460" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="6461" pos:column="25">DisplayCursor</name><argument_list pos:line="6461" pos:column="38">(<argument><expr><name><name pos:line="6461" pos:column="39">Window</name><op:operator pos:line="6461" pos:column="45">::</op:operator><name pos:line="6461" pos:column="47">cursorText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6462" pos:column="25">SetHotSpotRange</name><argument_list pos:line="6462" pos:column="40">(<argument><expr><name pos:line="6462" pos:column="41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="6464" pos:column="17">ptMouseLast</name> <op:operator pos:line="6464" pos:column="29">=</op:operator> <name pos:line="6464" pos:column="31">pt</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6465" pos:column="17">SetMouseCapture</name><argument_list pos:line="6465" pos:column="32">(<argument><expr><lit:literal type="boolean" pos:line="6465" pos:column="33">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6466" pos:column="17">NotifyIndicatorClick</name><argument_list pos:line="6466" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="6466" pos:column="38">false</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="6466" pos:column="45">newPos</name><op:operator pos:line="6466" pos:column="51">.</op:operator><name pos:line="6466" pos:column="52">Position</name></name><argument_list pos:line="6466" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6466" pos:column="64">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6466" pos:column="71">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6466" pos:column="78">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="6467" pos:column="17">if <condition pos:line="6467" pos:column="20">(<expr><name pos:line="6467" pos:column="21">inDragDrop</name> <op:operator pos:line="6467" pos:column="32">==</op:operator> <name pos:line="6467" pos:column="35">ddDragging</name></expr>)</condition><then pos:line="6467" pos:column="46"> <block pos:line="6467" pos:column="47">{
			<decl_stmt><decl><type><name pos:line="6468" pos:column="25">SelectionPosition</name></type> <name pos:line="6468" pos:column="43">selStart</name> <init pos:line="6468" pos:column="52">= <expr><call><name pos:line="6468" pos:column="54">SelectionStart</name><argument_list pos:line="6468" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="6469" pos:column="25">SelectionPosition</name></type> <name pos:line="6469" pos:column="43">selEnd</name> <init pos:line="6469" pos:column="50">= <expr><call><name pos:line="6469" pos:column="52">SelectionEnd</name><argument_list pos:line="6469" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="6470" pos:column="25">if <condition pos:line="6470" pos:column="28">(<expr><name pos:line="6470" pos:column="29">selStart</name> <op:operator pos:line="6470" pos:column="38">&lt;</op:operator> <name pos:line="6470" pos:column="40">selEnd</name></expr>)</condition><then pos:line="6470" pos:column="47"> <block pos:line="6470" pos:column="48">{
				<if pos:line="6471" pos:column="33">if <condition pos:line="6471" pos:column="36">(<expr><name><name pos:line="6471" pos:column="37">drag</name><op:operator pos:line="6471" pos:column="41">.</op:operator><name pos:line="6471" pos:column="42">len</name></name></expr>)</condition><then pos:line="6471" pos:column="46"> <block pos:line="6471" pos:column="47">{
					<if pos:line="6472" pos:column="41">if <condition pos:line="6472" pos:column="44">(<expr><name pos:line="6472" pos:column="45">ctrl</name></expr>)</condition><then pos:line="6472" pos:column="50"> <block pos:line="6472" pos:column="51">{
						<if pos:line="6473" pos:column="49">if <condition pos:line="6473" pos:column="52">(<expr><call><name><name pos:line="6473" pos:column="53">pdoc</name><op:operator pos:line="6473" pos:column="57">-&gt;</op:operator><name pos:line="6473" pos:column="59">InsertString</name></name><argument_list pos:line="6473" pos:column="71">(<argument><expr><call><name><name pos:line="6473" pos:column="72">newPos</name><op:operator pos:line="6473" pos:column="78">.</op:operator><name pos:line="6473" pos:column="79">Position</name></name><argument_list pos:line="6473" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="6473" pos:column="91">drag</name><op:operator pos:line="6473" pos:column="95">.</op:operator><name pos:line="6473" pos:column="96">s</name></name></expr></argument>, <argument><expr><name><name pos:line="6473" pos:column="99">drag</name><op:operator pos:line="6473" pos:column="103">.</op:operator><name pos:line="6473" pos:column="104">len</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6473" pos:column="109"> <block pos:line="6473" pos:column="110">{
							<expr_stmt><expr><call><name pos:line="6474" pos:column="57">SetSelection</name><argument_list pos:line="6474" pos:column="69">(<argument><expr><call><name><name pos:line="6474" pos:column="70">newPos</name><op:operator pos:line="6474" pos:column="76">.</op:operator><name pos:line="6474" pos:column="77">Position</name></name><argument_list pos:line="6474" pos:column="85">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6474" pos:column="89">newPos</name><op:operator pos:line="6474" pos:column="95">.</op:operator><name pos:line="6474" pos:column="96">Position</name></name><argument_list pos:line="6474" pos:column="104">()</argument_list></call> <op:operator pos:line="6474" pos:column="107">+</op:operator> <name><name pos:line="6474" pos:column="109">drag</name><op:operator pos:line="6474" pos:column="113">.</op:operator><name pos:line="6474" pos:column="114">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then> <else pos:line="6476" pos:column="43">else <if pos:line="6476" pos:column="48">if <condition pos:line="6476" pos:column="51">(<expr><name pos:line="6476" pos:column="52">newPos</name> <op:operator pos:line="6476" pos:column="59">&lt;</op:operator> <name pos:line="6476" pos:column="61">selStart</name></expr>)</condition><then pos:line="6476" pos:column="70"> <block pos:line="6476" pos:column="71">{
						<expr_stmt><expr><call><name><name pos:line="6477" pos:column="49">pdoc</name><op:operator pos:line="6477" pos:column="53">-&gt;</op:operator><name pos:line="6477" pos:column="55">DeleteChars</name></name><argument_list pos:line="6477" pos:column="66">(<argument><expr><call><name><name pos:line="6477" pos:column="67">selStart</name><op:operator pos:line="6477" pos:column="75">.</op:operator><name pos:line="6477" pos:column="76">Position</name></name><argument_list pos:line="6477" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="6477" pos:column="88">drag</name><op:operator pos:line="6477" pos:column="92">.</op:operator><name pos:line="6477" pos:column="93">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="6478" pos:column="49">if <condition pos:line="6478" pos:column="52">(<expr><call><name><name pos:line="6478" pos:column="53">pdoc</name><op:operator pos:line="6478" pos:column="57">-&gt;</op:operator><name pos:line="6478" pos:column="59">InsertString</name></name><argument_list pos:line="6478" pos:column="71">(<argument><expr><call><name><name pos:line="6478" pos:column="72">newPos</name><op:operator pos:line="6478" pos:column="78">.</op:operator><name pos:line="6478" pos:column="79">Position</name></name><argument_list pos:line="6478" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="6478" pos:column="91">drag</name><op:operator pos:line="6478" pos:column="95">.</op:operator><name pos:line="6478" pos:column="96">s</name></name></expr></argument>, <argument><expr><name><name pos:line="6478" pos:column="99">drag</name><op:operator pos:line="6478" pos:column="103">.</op:operator><name pos:line="6478" pos:column="104">len</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6478" pos:column="109"> <block pos:line="6478" pos:column="110">{
							<expr_stmt><expr><call><name pos:line="6479" pos:column="57">SetSelection</name><argument_list pos:line="6479" pos:column="69">(<argument><expr><call><name><name pos:line="6479" pos:column="70">newPos</name><op:operator pos:line="6479" pos:column="76">.</op:operator><name pos:line="6479" pos:column="77">Position</name></name><argument_list pos:line="6479" pos:column="85">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6479" pos:column="89">newPos</name><op:operator pos:line="6479" pos:column="95">.</op:operator><name pos:line="6479" pos:column="96">Position</name></name><argument_list pos:line="6479" pos:column="104">()</argument_list></call> <op:operator pos:line="6479" pos:column="107">+</op:operator> <name><name pos:line="6479" pos:column="109">drag</name><op:operator pos:line="6479" pos:column="113">.</op:operator><name pos:line="6479" pos:column="114">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then> <else pos:line="6481" pos:column="43">else <if pos:line="6481" pos:column="48">if <condition pos:line="6481" pos:column="51">(<expr><name pos:line="6481" pos:column="52">newPos</name> <op:operator pos:line="6481" pos:column="59">&gt;</op:operator> <name pos:line="6481" pos:column="61">selEnd</name></expr>)</condition><then pos:line="6481" pos:column="68"> <block pos:line="6481" pos:column="69">{
						<expr_stmt><expr><call><name><name pos:line="6482" pos:column="49">pdoc</name><op:operator pos:line="6482" pos:column="53">-&gt;</op:operator><name pos:line="6482" pos:column="55">DeleteChars</name></name><argument_list pos:line="6482" pos:column="66">(<argument><expr><call><name><name pos:line="6482" pos:column="67">selStart</name><op:operator pos:line="6482" pos:column="75">.</op:operator><name pos:line="6482" pos:column="76">Position</name></name><argument_list pos:line="6482" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="6482" pos:column="88">drag</name><op:operator pos:line="6482" pos:column="92">.</op:operator><name pos:line="6482" pos:column="93">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="6483" pos:column="49">newPos</name><op:operator pos:line="6483" pos:column="55">.</op:operator><name pos:line="6483" pos:column="56">Add</name></name><argument_list pos:line="6483" pos:column="59">(<argument><expr><op:operator pos:line="6483" pos:column="60">-</op:operator><name><name pos:line="6483" pos:column="61">drag</name><op:operator pos:line="6483" pos:column="65">.</op:operator><name pos:line="6483" pos:column="66">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="6484" pos:column="49">if <condition pos:line="6484" pos:column="52">(<expr><call><name><name pos:line="6484" pos:column="53">pdoc</name><op:operator pos:line="6484" pos:column="57">-&gt;</op:operator><name pos:line="6484" pos:column="59">InsertString</name></name><argument_list pos:line="6484" pos:column="71">(<argument><expr><call><name><name pos:line="6484" pos:column="72">newPos</name><op:operator pos:line="6484" pos:column="78">.</op:operator><name pos:line="6484" pos:column="79">Position</name></name><argument_list pos:line="6484" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="6484" pos:column="91">drag</name><op:operator pos:line="6484" pos:column="95">.</op:operator><name pos:line="6484" pos:column="96">s</name></name></expr></argument>, <argument><expr><name><name pos:line="6484" pos:column="99">drag</name><op:operator pos:line="6484" pos:column="103">.</op:operator><name pos:line="6484" pos:column="104">len</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6484" pos:column="109"> <block pos:line="6484" pos:column="110">{
							<expr_stmt><expr><call><name pos:line="6485" pos:column="57">SetSelection</name><argument_list pos:line="6485" pos:column="69">(<argument><expr><call><name><name pos:line="6485" pos:column="70">newPos</name><op:operator pos:line="6485" pos:column="76">.</op:operator><name pos:line="6485" pos:column="77">Position</name></name><argument_list pos:line="6485" pos:column="85">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6485" pos:column="89">newPos</name><op:operator pos:line="6485" pos:column="95">.</op:operator><name pos:line="6485" pos:column="96">Position</name></name><argument_list pos:line="6485" pos:column="104">()</argument_list></call> <op:operator pos:line="6485" pos:column="107">+</op:operator> <name><name pos:line="6485" pos:column="109">drag</name><op:operator pos:line="6485" pos:column="113">.</op:operator><name pos:line="6485" pos:column="114">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then> <else pos:line="6487" pos:column="43">else <block pos:line="6487" pos:column="48">{
						<expr_stmt><expr><call><name pos:line="6488" pos:column="49">SetEmptySelection</name><argument_list pos:line="6488" pos:column="66">(<argument><expr><call><name><name pos:line="6488" pos:column="67">newPos</name><op:operator pos:line="6488" pos:column="73">.</op:operator><name pos:line="6488" pos:column="74">Position</name></name><argument_list pos:line="6488" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if></else></if></else></if>
					<expr_stmt><expr><call><name><name pos:line="6490" pos:column="41">drag</name><op:operator pos:line="6490" pos:column="45">.</op:operator><name pos:line="6490" pos:column="46">Free</name></name><argument_list pos:line="6490" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><name pos:line="6492" pos:column="33">selectionType</name> <op:operator pos:line="6492" pos:column="47">=</op:operator> <name pos:line="6492" pos:column="49">selChar</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then> <else pos:line="6494" pos:column="19">else <block pos:line="6494" pos:column="24">{
			<if pos:line="6495" pos:column="25">if <condition pos:line="6495" pos:column="28">(<expr><name pos:line="6495" pos:column="29">selectionType</name> <op:operator pos:line="6495" pos:column="43">==</op:operator> <name pos:line="6495" pos:column="46">selChar</name></expr>)</condition><then pos:line="6495" pos:column="54"> <block pos:line="6495" pos:column="55">{
				<if pos:line="6496" pos:column="33">if <condition pos:line="6496" pos:column="36">(<expr><call><name><name pos:line="6496" pos:column="37">sel</name><op:operator pos:line="6496" pos:column="40">.</op:operator><name pos:line="6496" pos:column="41">Count</name></name><argument_list pos:line="6496" pos:column="46">()</argument_list></call> <op:operator pos:line="6496" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="6496" pos:column="51">1</lit:literal></expr>)</condition><then pos:line="6496" pos:column="53"> <block pos:line="6496" pos:column="54">{
					<expr_stmt><expr><call><name><name pos:line="6497" pos:column="41">sel</name><op:operator pos:line="6497" pos:column="44">.</op:operator><name pos:line="6497" pos:column="45">RangeMain</name></name><argument_list pos:line="6497" pos:column="54">()</argument_list></call> <op:operator pos:line="6497" pos:column="57">=</op:operator>
						<call><name pos:line="6498" pos:column="49">SelectionRange</name><argument_list pos:line="6498" pos:column="63">(<argument><expr><name pos:line="6498" pos:column="64">newPos</name></expr></argument>, <argument><expr><call><name><name pos:line="6498" pos:column="72">sel</name><op:operator pos:line="6498" pos:column="75">.</op:operator><name pos:line="6498" pos:column="76">Range</name></name><argument_list pos:line="6498" pos:column="81">(<argument><expr><call><name><name pos:line="6498" pos:column="82">sel</name><op:operator pos:line="6498" pos:column="85">.</op:operator><name pos:line="6498" pos:column="86">Count</name></name><argument_list pos:line="6498" pos:column="91">()</argument_list></call> <op:operator pos:line="6498" pos:column="94">-</op:operator> <lit:literal type="number" pos:line="6498" pos:column="96">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="6498" pos:column="98">.</op:operator><name pos:line="6498" pos:column="99">anchor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="6499" pos:column="41">InvalidateSelection</name><argument_list pos:line="6499" pos:column="60">(<argument><expr><call><name><name pos:line="6499" pos:column="61">sel</name><op:operator pos:line="6499" pos:column="64">.</op:operator><name pos:line="6499" pos:column="65">RangeMain</name></name><argument_list pos:line="6499" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6499" pos:column="78">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="6500" pos:column="35">else <block pos:line="6500" pos:column="40">{
					<expr_stmt><expr><call><name pos:line="6501" pos:column="41">SetSelection</name><argument_list pos:line="6501" pos:column="53">(<argument><expr><name pos:line="6501" pos:column="54">newPos</name></expr></argument>, <argument><expr><call><name><name pos:line="6501" pos:column="62">sel</name><op:operator pos:line="6501" pos:column="65">.</op:operator><name pos:line="6501" pos:column="66">RangeMain</name></name><argument_list pos:line="6501" pos:column="75">()</argument_list></call><op:operator pos:line="6501" pos:column="77">.</op:operator><name pos:line="6501" pos:column="78">anchor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="6504" pos:column="25">sel</name><op:operator pos:line="6504" pos:column="28">.</op:operator><name pos:line="6504" pos:column="29">CommitTentative</name></name><argument_list pos:line="6504" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="6506" pos:column="17">SetRectangularRange</name><argument_list pos:line="6506" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="6507" pos:column="17">lastClickTime</name> <op:operator pos:line="6507" pos:column="31">=</op:operator> <name pos:line="6507" pos:column="33">curTime</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="6508" pos:column="17">lastClick</name> <op:operator pos:line="6508" pos:column="27">=</op:operator> <name pos:line="6508" pos:column="29">pt</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="6509" pos:column="17">lastXChosen</name> <op:operator pos:line="6509" pos:column="29">=</op:operator> <name><name pos:line="6509" pos:column="31">pt</name><op:operator pos:line="6509" pos:column="33">.</op:operator><name pos:line="6509" pos:column="34">x</name></name> <op:operator pos:line="6509" pos:column="36">+</op:operator> <name pos:line="6509" pos:column="38">xOffset</name></expr>;</expr_stmt>
		<if pos:line="6510" pos:column="17">if <condition pos:line="6510" pos:column="20">(<expr><name><name pos:line="6510" pos:column="21">sel</name><op:operator pos:line="6510" pos:column="24">.</op:operator><name pos:line="6510" pos:column="25">selType</name></name> <op:operator pos:line="6510" pos:column="33">==</op:operator> <name><name pos:line="6510" pos:column="36">Selection</name><op:operator pos:line="6510" pos:column="45">::</op:operator><name pos:line="6510" pos:column="47">selStream</name></name></expr>)</condition><then pos:line="6510" pos:column="57"> <block pos:line="6510" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="6511" pos:column="25">SetLastXChosen</name><argument_list pos:line="6511" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="6513" pos:column="17">inDragDrop</name> <op:operator pos:line="6513" pos:column="28">=</op:operator> <name pos:line="6513" pos:column="30">ddNone</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6514" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="6514" pos:column="35">(<argument><expr><lit:literal type="boolean" pos:line="6514" pos:column="36">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<comment type="line" pos:line="6518" pos:column="1">// Called frequently to perform background UI including</comment>
<comment type="line" pos:line="6519" pos:column="1">// caret blinking and automatic scrolling.</comment>
<function><type><name pos:line="6520" pos:column="1">void</name></type> <name><name pos:line="6520" pos:column="6">Editor</name><op:operator pos:line="6520" pos:column="12">::</op:operator><name pos:line="6520" pos:column="14">Tick</name></name><parameter_list pos:line="6520" pos:column="18">()</parameter_list> <block pos:line="6520" pos:column="21">{
	<if pos:line="6521" pos:column="9">if <condition pos:line="6521" pos:column="12">(<expr><call><name pos:line="6521" pos:column="13">HaveMouseCapture</name><argument_list pos:line="6521" pos:column="29">()</argument_list></call></expr>)</condition><then pos:line="6521" pos:column="32"> <block pos:line="6521" pos:column="33">{
		<comment type="line" pos:line="6522" pos:column="17">// Auto scroll</comment>
		<expr_stmt><expr><call><name pos:line="6523" pos:column="17">ButtonMove</name><argument_list pos:line="6523" pos:column="27">(<argument><expr><name pos:line="6523" pos:column="28">ptMouseLast</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="6525" pos:column="9">if <condition pos:line="6525" pos:column="12">(<expr><name><name pos:line="6525" pos:column="13">caret</name><op:operator pos:line="6525" pos:column="18">.</op:operator><name pos:line="6525" pos:column="19">period</name></name> <op:operator pos:line="6525" pos:column="26">&gt;</op:operator> <lit:literal type="number" pos:line="6525" pos:column="28">0</lit:literal></expr>)</condition><then pos:line="6525" pos:column="30"> <block pos:line="6525" pos:column="31">{
		<expr_stmt><expr><name><name pos:line="6526" pos:column="17">timer</name><op:operator pos:line="6526" pos:column="22">.</op:operator><name pos:line="6526" pos:column="23">ticksToWait</name></name> <op:operator pos:line="6526" pos:column="35">-=</op:operator> <name><name pos:line="6526" pos:column="38">timer</name><op:operator pos:line="6526" pos:column="43">.</op:operator><name pos:line="6526" pos:column="44">tickSize</name></name></expr>;</expr_stmt>
		<if pos:line="6527" pos:column="17">if <condition pos:line="6527" pos:column="20">(<expr><name><name pos:line="6527" pos:column="21">timer</name><op:operator pos:line="6527" pos:column="26">.</op:operator><name pos:line="6527" pos:column="27">ticksToWait</name></name> <op:operator pos:line="6527" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="6527" pos:column="42">0</lit:literal></expr>)</condition><then pos:line="6527" pos:column="44"> <block pos:line="6527" pos:column="45">{
			<expr_stmt><expr><name><name pos:line="6528" pos:column="25">caret</name><op:operator pos:line="6528" pos:column="30">.</op:operator><name pos:line="6528" pos:column="31">on</name></name> <op:operator pos:line="6528" pos:column="34">=</op:operator> <op:operator pos:line="6528" pos:column="36">!</op:operator><name><name pos:line="6528" pos:column="37">caret</name><op:operator pos:line="6528" pos:column="42">.</op:operator><name pos:line="6528" pos:column="43">on</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="6529" pos:column="25">timer</name><op:operator pos:line="6529" pos:column="30">.</op:operator><name pos:line="6529" pos:column="31">ticksToWait</name></name> <op:operator pos:line="6529" pos:column="43">=</op:operator> <name><name pos:line="6529" pos:column="45">caret</name><op:operator pos:line="6529" pos:column="50">.</op:operator><name pos:line="6529" pos:column="51">period</name></name></expr>;</expr_stmt>
			<if pos:line="6530" pos:column="25">if <condition pos:line="6530" pos:column="28">(<expr><name><name pos:line="6530" pos:column="29">caret</name><op:operator pos:line="6530" pos:column="34">.</op:operator><name pos:line="6530" pos:column="35">active</name></name></expr>)</condition><then pos:line="6530" pos:column="42"> <block pos:line="6530" pos:column="43">{
				<expr_stmt><expr><call><name pos:line="6531" pos:column="33">InvalidateCaret</name><argument_list pos:line="6531" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
	<if pos:line="6535" pos:column="9">if <condition pos:line="6535" pos:column="12">(<expr><name pos:line="6535" pos:column="13">horizontalScrollBarVisible</name> <op:operator pos:line="6535" pos:column="40">&amp;&amp;</op:operator> <name pos:line="6535" pos:column="43">trackLineWidth</name> <op:operator pos:line="6535" pos:column="58">&amp;&amp;</op:operator> <op:operator pos:line="6535" pos:column="61">(</op:operator><name pos:line="6535" pos:column="62">lineWidthMaxSeen</name> <op:operator pos:line="6535" pos:column="79">&gt;</op:operator> <name pos:line="6535" pos:column="81">scrollWidth</name><op:operator pos:line="6535" pos:column="92">)</op:operator></expr>)</condition><then pos:line="6535" pos:column="94"> <block pos:line="6535" pos:column="95">{
		<expr_stmt><expr><name pos:line="6536" pos:column="17">scrollWidth</name> <op:operator pos:line="6536" pos:column="29">=</op:operator> <name pos:line="6536" pos:column="31">lineWidthMaxSeen</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6537" pos:column="17">SetScrollBars</name><argument_list pos:line="6537" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="6539" pos:column="9">if <condition pos:line="6539" pos:column="12">(<expr><op:operator pos:line="6539" pos:column="13">(</op:operator><name pos:line="6539" pos:column="14">dwellDelay</name> <op:operator pos:line="6539" pos:column="25">&lt;</op:operator> <name pos:line="6539" pos:column="27">SC_TIME_FOREVER</name><op:operator pos:line="6539" pos:column="42">)</op:operator> <op:operator pos:line="6539" pos:column="44">&amp;&amp;</op:operator>
	        <op:operator pos:line="6540" pos:column="17">(</op:operator><name pos:line="6540" pos:column="18">ticksToDwell</name> <op:operator pos:line="6540" pos:column="31">&gt;</op:operator> <lit:literal type="number" pos:line="6540" pos:column="33">0</lit:literal><op:operator pos:line="6540" pos:column="34">)</op:operator> <op:operator pos:line="6540" pos:column="36">&amp;&amp;</op:operator>
	        <op:operator pos:line="6541" pos:column="17">(</op:operator><op:operator pos:line="6541" pos:column="18">!</op:operator><call><name pos:line="6541" pos:column="19">HaveMouseCapture</name><argument_list pos:line="6541" pos:column="35">()</argument_list></call><op:operator pos:line="6541" pos:column="37">)</op:operator> <op:operator pos:line="6541" pos:column="39">&amp;&amp;</op:operator>
	        <op:operator pos:line="6542" pos:column="17">(</op:operator><name><name pos:line="6542" pos:column="18">ptMouseLast</name><op:operator pos:line="6542" pos:column="29">.</op:operator><name pos:line="6542" pos:column="30">y</name></name> <op:operator pos:line="6542" pos:column="32">&gt;=</op:operator> <lit:literal type="number" pos:line="6542" pos:column="35">0</lit:literal><op:operator pos:line="6542" pos:column="36">)</op:operator></expr>)</condition><then pos:line="6542" pos:column="38"> <block pos:line="6542" pos:column="39">{
		<expr_stmt><expr><name pos:line="6543" pos:column="17">ticksToDwell</name> <op:operator pos:line="6543" pos:column="30">-=</op:operator> <name><name pos:line="6543" pos:column="33">timer</name><op:operator pos:line="6543" pos:column="38">.</op:operator><name pos:line="6543" pos:column="39">tickSize</name></name></expr>;</expr_stmt>
		<if pos:line="6544" pos:column="17">if <condition pos:line="6544" pos:column="20">(<expr><name pos:line="6544" pos:column="21">ticksToDwell</name> <op:operator pos:line="6544" pos:column="34">&lt;=</op:operator> <lit:literal type="number" pos:line="6544" pos:column="37">0</lit:literal></expr>)</condition><then pos:line="6544" pos:column="39"> <block pos:line="6544" pos:column="40">{
			<expr_stmt><expr><name pos:line="6545" pos:column="25">dwelling</name> <op:operator pos:line="6545" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="6545" pos:column="36">true</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6546" pos:column="25">NotifyDwelling</name><argument_list pos:line="6546" pos:column="39">(<argument><expr><name pos:line="6546" pos:column="40">ptMouseLast</name></expr></argument>, <argument><expr><name pos:line="6546" pos:column="53">dwelling</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="6551" pos:column="1">bool</name></type> <name><name pos:line="6551" pos:column="6">Editor</name><op:operator pos:line="6551" pos:column="12">::</op:operator><name pos:line="6551" pos:column="14">Idle</name></name><parameter_list pos:line="6551" pos:column="18">()</parameter_list> <block pos:line="6551" pos:column="21">{

	<decl_stmt><decl><type><name pos:line="6553" pos:column="9">bool</name></type> <name pos:line="6553" pos:column="14">idleDone</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="6555" pos:column="9">bool</name></type> <name pos:line="6555" pos:column="14">wrappingDone</name> <init pos:line="6555" pos:column="27">= <expr><name pos:line="6555" pos:column="29">wrapState</name> <op:operator pos:line="6555" pos:column="39">==</op:operator> <name pos:line="6555" pos:column="42">eWrapNone</name></expr></init></decl>;</decl_stmt>

	<if pos:line="6557" pos:column="9">if <condition pos:line="6557" pos:column="12">(<expr><op:operator pos:line="6557" pos:column="13">!</op:operator><name pos:line="6557" pos:column="14">wrappingDone</name></expr>)</condition><then pos:line="6557" pos:column="27"> <block pos:line="6557" pos:column="28">{
		<comment type="line" pos:line="6558" pos:column="17">// Wrap lines during idle.</comment>
		<expr_stmt><expr><call><name pos:line="6559" pos:column="17">WrapLines</name><argument_list pos:line="6559" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="6559" pos:column="27">false</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="6559" pos:column="34">-</op:operator><lit:literal type="number" pos:line="6559" pos:column="35">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="6560" pos:column="17">// No more wrapping</comment>
		<if pos:line="6561" pos:column="17">if <condition pos:line="6561" pos:column="20">(<expr><name pos:line="6561" pos:column="21">wrapStart</name> <op:operator pos:line="6561" pos:column="31">==</op:operator> <name pos:line="6561" pos:column="34">wrapEnd</name></expr>)</condition><then pos:line="6561" pos:column="42">
			<expr_stmt><expr><name pos:line="6562" pos:column="25">wrappingDone</name> <op:operator pos:line="6562" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="6562" pos:column="40">true</lit:literal></expr>;</expr_stmt></then></if>
	}</block></then></if>

	<comment type="line" pos:line="6565" pos:column="9">// Add more idle things to do here, but make sure idleDone is</comment>
	<comment type="line" pos:line="6566" pos:column="9">// set correctly before the function returns. returning</comment>
	<comment type="line" pos:line="6567" pos:column="9">// false will stop calling this idle funtion until SetIdle() is</comment>
	<comment type="line" pos:line="6568" pos:column="9">// called again.</comment>

	<expr_stmt><expr><name pos:line="6570" pos:column="9">idleDone</name> <op:operator pos:line="6570" pos:column="18">=</op:operator> <name pos:line="6570" pos:column="20">wrappingDone</name></expr>;</expr_stmt> <comment type="line" pos:line="6570" pos:column="34">// &amp;&amp; thatDone &amp;&amp; theOtherThingDone...</comment>

	<return pos:line="6572" pos:column="9">return <expr><op:operator pos:line="6572" pos:column="16">!</op:operator><name pos:line="6572" pos:column="17">idleDone</name></expr>;</return>
}</block></function>

<function><type><name pos:line="6575" pos:column="1">void</name></type> <name><name pos:line="6575" pos:column="6">Editor</name><op:operator pos:line="6575" pos:column="12">::</op:operator><name pos:line="6575" pos:column="14">SetFocusState</name></name><parameter_list pos:line="6575" pos:column="27">(<param><decl><type><name pos:line="6575" pos:column="28">bool</name></type> <name pos:line="6575" pos:column="33">focusState</name></decl></param>)</parameter_list> <block pos:line="6575" pos:column="45">{
	<expr_stmt><expr><name pos:line="6576" pos:column="9">hasFocus</name> <op:operator pos:line="6576" pos:column="18">=</op:operator> <name pos:line="6576" pos:column="20">focusState</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="6577" pos:column="9">NotifyFocus</name><argument_list pos:line="6577" pos:column="20">(<argument><expr><name pos:line="6577" pos:column="21">hasFocus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="6578" pos:column="9">if <condition pos:line="6578" pos:column="12">(<expr><name pos:line="6578" pos:column="13">hasFocus</name></expr>)</condition><then pos:line="6578" pos:column="22"> <block pos:line="6578" pos:column="23">{
		<expr_stmt><expr><call><name pos:line="6579" pos:column="17">ShowCaretAtCurrentPosition</name><argument_list pos:line="6579" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="6580" pos:column="11">else <block pos:line="6580" pos:column="16">{
		<expr_stmt><expr><call><name pos:line="6581" pos:column="17">CancelModes</name><argument_list pos:line="6581" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6582" pos:column="17">DropCaret</name><argument_list pos:line="6582" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="6586" pos:column="1">int</name></type> <name><name pos:line="6586" pos:column="5">Editor</name><op:operator pos:line="6586" pos:column="11">::</op:operator><name pos:line="6586" pos:column="13">PositionAfterArea</name></name><parameter_list pos:line="6586" pos:column="30">(<param><decl><type><name pos:line="6586" pos:column="31">PRectangle</name></type> <name pos:line="6586" pos:column="42">rcArea</name></decl></param>)</parameter_list> <block pos:line="6586" pos:column="50">{
	<comment type="line" pos:line="6587" pos:column="9">// The start of the document line after the display line after the area</comment>
	<comment type="line" pos:line="6588" pos:column="9">// This often means that the line after a modification is restyled which helps</comment>
	<comment type="line" pos:line="6589" pos:column="9">// detect multiline comment additions and heals single line comments</comment>
	<decl_stmt><decl><type><name pos:line="6590" pos:column="9">int</name></type> <name pos:line="6590" pos:column="13">lineAfter</name> <init pos:line="6590" pos:column="23">= <expr><name pos:line="6590" pos:column="25">topLine</name> <op:operator pos:line="6590" pos:column="33">+</op:operator> <op:operator pos:line="6590" pos:column="35">(</op:operator><name><name pos:line="6590" pos:column="36">rcArea</name><op:operator pos:line="6590" pos:column="42">.</op:operator><name pos:line="6590" pos:column="43">bottom</name></name> <op:operator pos:line="6590" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="6590" pos:column="52">1</lit:literal><op:operator pos:line="6590" pos:column="53">)</op:operator> <op:operator pos:line="6590" pos:column="55">/</op:operator> <name><name pos:line="6590" pos:column="57">vs</name><op:operator pos:line="6590" pos:column="59">.</op:operator><name pos:line="6590" pos:column="60">lineHeight</name></name> <op:operator pos:line="6590" pos:column="71">+</op:operator> <lit:literal type="number" pos:line="6590" pos:column="73">1</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="6591" pos:column="9">if <condition pos:line="6591" pos:column="12">(<expr><name pos:line="6591" pos:column="13">lineAfter</name> <op:operator pos:line="6591" pos:column="23">&lt;</op:operator> <call><name><name pos:line="6591" pos:column="25">cs</name><op:operator pos:line="6591" pos:column="27">.</op:operator><name pos:line="6591" pos:column="28">LinesDisplayed</name></name><argument_list pos:line="6591" pos:column="42">()</argument_list></call></expr>)</condition><then pos:line="6591" pos:column="45">
		<return pos:line="6592" pos:column="17">return <expr><call><name><name pos:line="6592" pos:column="24">pdoc</name><op:operator pos:line="6592" pos:column="28">-&gt;</op:operator><name pos:line="6592" pos:column="30">LineStart</name></name><argument_list pos:line="6592" pos:column="39">(<argument><expr><call><name><name pos:line="6592" pos:column="40">cs</name><op:operator pos:line="6592" pos:column="42">.</op:operator><name pos:line="6592" pos:column="43">DocFromDisplay</name></name><argument_list pos:line="6592" pos:column="57">(<argument><expr><name pos:line="6592" pos:column="58">lineAfter</name></expr></argument>)</argument_list></call> <op:operator pos:line="6592" pos:column="69">+</op:operator> <lit:literal type="number" pos:line="6592" pos:column="71">1</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then>
	<else pos:line="6593" pos:column="9">else
		<return pos:line="6594" pos:column="17">return <expr><call><name><name pos:line="6594" pos:column="24">pdoc</name><op:operator pos:line="6594" pos:column="28">-&gt;</op:operator><name pos:line="6594" pos:column="30">Length</name></name><argument_list pos:line="6594" pos:column="36">()</argument_list></call></expr>;</return></else></if>
}</block></function>

<comment type="line" pos:line="6597" pos:column="1">// Style to a position within the view. If this causes a change at end of last line then</comment>
<comment type="line" pos:line="6598" pos:column="1">// affects later lines so style all the viewed text.</comment>
<function><type><name pos:line="6599" pos:column="1">void</name></type> <name><name pos:line="6599" pos:column="6">Editor</name><op:operator pos:line="6599" pos:column="12">::</op:operator><name pos:line="6599" pos:column="14">StyleToPositionInView</name></name><parameter_list pos:line="6599" pos:column="35">(<param><decl><type><name pos:line="6599" pos:column="36">Position</name></type> <name pos:line="6599" pos:column="45">pos</name></decl></param>)</parameter_list> <block pos:line="6599" pos:column="50">{
	<decl_stmt><decl><type><name pos:line="6600" pos:column="9">int</name></type> <name pos:line="6600" pos:column="13">endWindow</name> <init pos:line="6600" pos:column="23">= <expr><call><name pos:line="6600" pos:column="25">PositionAfterArea</name><argument_list pos:line="6600" pos:column="42">(<argument><expr><call><name pos:line="6600" pos:column="43">GetClientRectangle</name><argument_list pos:line="6600" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="6601" pos:column="9">if <condition pos:line="6601" pos:column="12">(<expr><name pos:line="6601" pos:column="13">pos</name> <op:operator pos:line="6601" pos:column="17">&gt;</op:operator> <name pos:line="6601" pos:column="19">endWindow</name></expr>)</condition><then pos:line="6601" pos:column="29">
		<expr_stmt><expr><name pos:line="6602" pos:column="17">pos</name> <op:operator pos:line="6602" pos:column="21">=</op:operator> <name pos:line="6602" pos:column="23">endWindow</name></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="6603" pos:column="9">int</name></type> <name pos:line="6603" pos:column="13">styleAtEnd</name> <init pos:line="6603" pos:column="24">= <expr><call><name><name pos:line="6603" pos:column="26">pdoc</name><op:operator pos:line="6603" pos:column="30">-&gt;</op:operator><name pos:line="6603" pos:column="32">StyleAt</name></name><argument_list pos:line="6603" pos:column="39">(<argument><expr><name pos:line="6603" pos:column="40">pos</name><op:operator pos:line="6603" pos:column="43">-</op:operator><lit:literal type="number" pos:line="6603" pos:column="44">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="6604" pos:column="9">pdoc</name><op:operator pos:line="6604" pos:column="13">-&gt;</op:operator><name pos:line="6604" pos:column="15">EnsureStyledTo</name></name><argument_list pos:line="6604" pos:column="29">(<argument><expr><name pos:line="6604" pos:column="30">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="6605" pos:column="9">if <condition pos:line="6605" pos:column="12">(<expr><op:operator pos:line="6605" pos:column="13">(</op:operator><name pos:line="6605" pos:column="14">endWindow</name> <op:operator pos:line="6605" pos:column="24">&gt;</op:operator> <name pos:line="6605" pos:column="26">pos</name><op:operator pos:line="6605" pos:column="29">)</op:operator> <op:operator pos:line="6605" pos:column="31">&amp;&amp;</op:operator> <op:operator pos:line="6605" pos:column="34">(</op:operator><name pos:line="6605" pos:column="35">styleAtEnd</name> <op:operator pos:line="6605" pos:column="46">!=</op:operator> <call><name><name pos:line="6605" pos:column="49">pdoc</name><op:operator pos:line="6605" pos:column="53">-&gt;</op:operator><name pos:line="6605" pos:column="55">StyleAt</name></name><argument_list pos:line="6605" pos:column="62">(<argument><expr><name pos:line="6605" pos:column="63">pos</name><op:operator pos:line="6605" pos:column="66">-</op:operator><lit:literal type="number" pos:line="6605" pos:column="67">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="6605" pos:column="69">)</op:operator></expr>)</condition><then pos:line="6605" pos:column="71"> <block pos:line="6605" pos:column="72">{
		<comment type="line" pos:line="6606" pos:column="17">// Style at end of line changed so is multi-line change like starting a comment</comment>
		<comment type="line" pos:line="6607" pos:column="17">// so require rest of window to be styled.</comment>
		<expr_stmt><expr><call><name><name pos:line="6608" pos:column="17">pdoc</name><op:operator pos:line="6608" pos:column="21">-&gt;</op:operator><name pos:line="6608" pos:column="23">EnsureStyledTo</name></name><argument_list pos:line="6608" pos:column="37">(<argument><expr><name pos:line="6608" pos:column="38">endWindow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="6612" pos:column="1">void</name></type> <name><name pos:line="6612" pos:column="6">Editor</name><op:operator pos:line="6612" pos:column="12">::</op:operator><name pos:line="6612" pos:column="14">IdleStyling</name></name><parameter_list pos:line="6612" pos:column="25">()</parameter_list> <block pos:line="6612" pos:column="28">{
	<comment type="line" pos:line="6613" pos:column="9">// Style the line after the modification as this allows modifications that change just the</comment>
	<comment type="line" pos:line="6614" pos:column="9">// line of the modification to heal instead of propagating to the rest of the window.</comment>
	<expr_stmt><expr><call><name pos:line="6615" pos:column="9">StyleToPositionInView</name><argument_list pos:line="6615" pos:column="30">(<argument><expr><call><name><name pos:line="6615" pos:column="31">pdoc</name><op:operator pos:line="6615" pos:column="35">-&gt;</op:operator><name pos:line="6615" pos:column="37">LineStart</name></name><argument_list pos:line="6615" pos:column="46">(<argument><expr><call><name><name pos:line="6615" pos:column="47">pdoc</name><op:operator pos:line="6615" pos:column="51">-&gt;</op:operator><name pos:line="6615" pos:column="53">LineFromPosition</name></name><argument_list pos:line="6615" pos:column="69">(<argument><expr><name><name pos:line="6615" pos:column="70">styleNeeded</name><op:operator pos:line="6615" pos:column="81">.</op:operator><name pos:line="6615" pos:column="82">upTo</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="6615" pos:column="88">+</op:operator> <lit:literal type="number" pos:line="6615" pos:column="90">2</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="6617" pos:column="9">if <condition pos:line="6617" pos:column="12">(<expr><name pos:line="6617" pos:column="13">needUpdateUI</name></expr>)</condition><then pos:line="6617" pos:column="26"> <block pos:line="6617" pos:column="27">{
		<expr_stmt><expr><call><name pos:line="6618" pos:column="17">NotifyUpdateUI</name><argument_list pos:line="6618" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="6619" pos:column="17">needUpdateUI</name> <op:operator pos:line="6619" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="6619" pos:column="32">0</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="6621" pos:column="9">styleNeeded</name><op:operator pos:line="6621" pos:column="20">.</op:operator><name pos:line="6621" pos:column="21">Reset</name></name><argument_list pos:line="6621" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="6624" pos:column="1">void</name></type> <name><name pos:line="6624" pos:column="6">Editor</name><op:operator pos:line="6624" pos:column="12">::</op:operator><name pos:line="6624" pos:column="14">QueueStyling</name></name><parameter_list pos:line="6624" pos:column="26">(<param><decl><type><name pos:line="6624" pos:column="27">int</name></type> <name pos:line="6624" pos:column="31">upTo</name></decl></param>)</parameter_list> <block pos:line="6624" pos:column="37">{
	<expr_stmt><expr><call><name><name pos:line="6625" pos:column="9">styleNeeded</name><op:operator pos:line="6625" pos:column="20">.</op:operator><name pos:line="6625" pos:column="21">NeedUpTo</name></name><argument_list pos:line="6625" pos:column="29">(<argument><expr><name pos:line="6625" pos:column="30">upTo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="6628" pos:column="1">bool</name></type> <name><name pos:line="6628" pos:column="6">Editor</name><op:operator pos:line="6628" pos:column="12">::</op:operator><name pos:line="6628" pos:column="14">PaintContains</name></name><parameter_list pos:line="6628" pos:column="27">(<param><decl><type><name pos:line="6628" pos:column="28">PRectangle</name></type> <name pos:line="6628" pos:column="39">rc</name></decl></param>)</parameter_list> <block pos:line="6628" pos:column="43">{
	<if pos:line="6629" pos:column="9">if <condition pos:line="6629" pos:column="12">(<expr><call><name><name pos:line="6629" pos:column="13">rc</name><op:operator pos:line="6629" pos:column="15">.</op:operator><name pos:line="6629" pos:column="16">Empty</name></name><argument_list pos:line="6629" pos:column="21">()</argument_list></call></expr>)</condition><then pos:line="6629" pos:column="24"> <block pos:line="6629" pos:column="25">{
		<return pos:line="6630" pos:column="17">return <expr><lit:literal type="boolean" pos:line="6630" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then> <else pos:line="6631" pos:column="11">else <block pos:line="6631" pos:column="16">{
		<return pos:line="6632" pos:column="17">return <expr><call><name><name pos:line="6632" pos:column="24">rcPaint</name><op:operator pos:line="6632" pos:column="31">.</op:operator><name pos:line="6632" pos:column="32">Contains</name></name><argument_list pos:line="6632" pos:column="40">(<argument><expr><name pos:line="6632" pos:column="41">rc</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="6636" pos:column="1">bool</name></type> <name><name pos:line="6636" pos:column="6">Editor</name><op:operator pos:line="6636" pos:column="12">::</op:operator><name pos:line="6636" pos:column="14">PaintContainsMargin</name></name><parameter_list pos:line="6636" pos:column="33">()</parameter_list> <block pos:line="6636" pos:column="36">{
	<decl_stmt><decl><type><name pos:line="6637" pos:column="9">PRectangle</name></type> <name pos:line="6637" pos:column="20">rcSelMargin</name> <init pos:line="6637" pos:column="32">= <expr><call><name pos:line="6637" pos:column="34">GetClientRectangle</name><argument_list pos:line="6637" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="6638" pos:column="9">rcSelMargin</name><op:operator pos:line="6638" pos:column="20">.</op:operator><name pos:line="6638" pos:column="21">right</name></name> <op:operator pos:line="6638" pos:column="27">=</op:operator> <name><name pos:line="6638" pos:column="29">vs</name><op:operator pos:line="6638" pos:column="31">.</op:operator><name pos:line="6638" pos:column="32">fixedColumnWidth</name></name></expr>;</expr_stmt>
	<return pos:line="6639" pos:column="9">return <expr><call><name pos:line="6639" pos:column="16">PaintContains</name><argument_list pos:line="6639" pos:column="29">(<argument><expr><name pos:line="6639" pos:column="30">rcSelMargin</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="6642" pos:column="1">void</name></type> <name><name pos:line="6642" pos:column="6">Editor</name><op:operator pos:line="6642" pos:column="12">::</op:operator><name pos:line="6642" pos:column="14">CheckForChangeOutsidePaint</name></name><parameter_list pos:line="6642" pos:column="40">(<param><decl><type><name pos:line="6642" pos:column="41">Range</name></type> <name pos:line="6642" pos:column="47">r</name></decl></param>)</parameter_list> <block pos:line="6642" pos:column="50">{
	<if pos:line="6643" pos:column="9">if <condition pos:line="6643" pos:column="12">(<expr><name pos:line="6643" pos:column="13">paintState</name> <op:operator pos:line="6643" pos:column="24">==</op:operator> <name pos:line="6643" pos:column="27">painting</name> <op:operator pos:line="6643" pos:column="36">&amp;&amp;</op:operator> <op:operator pos:line="6643" pos:column="39">!</op:operator><name pos:line="6643" pos:column="40">paintingAllText</name></expr>)</condition><then pos:line="6643" pos:column="56"> <block pos:line="6643" pos:column="57">{
		<comment type="line" pos:line="6644" pos:column="17">//Platform::DebugPrintf("Checking range in paint %d-%d\n", r.start, r.end);</comment>
		<if pos:line="6645" pos:column="17">if <condition pos:line="6645" pos:column="20">(<expr><op:operator pos:line="6645" pos:column="21">!</op:operator><call><name><name pos:line="6645" pos:column="22">r</name><op:operator pos:line="6645" pos:column="23">.</op:operator><name pos:line="6645" pos:column="24">Valid</name></name><argument_list pos:line="6645" pos:column="29">()</argument_list></call></expr>)</condition><then pos:line="6645" pos:column="32">
			<return pos:line="6646" pos:column="25">return;</return></then></if>

		<decl_stmt><decl><type><name pos:line="6648" pos:column="17">PRectangle</name></type> <name pos:line="6648" pos:column="28">rcRange</name> <init pos:line="6648" pos:column="36">= <expr><call><name pos:line="6648" pos:column="38">RectangleFromRange</name><argument_list pos:line="6648" pos:column="56">(<argument><expr><name><name pos:line="6648" pos:column="57">r</name><op:operator pos:line="6648" pos:column="58">.</op:operator><name pos:line="6648" pos:column="59">start</name></name></expr></argument>, <argument><expr><name><name pos:line="6648" pos:column="66">r</name><op:operator pos:line="6648" pos:column="67">.</op:operator><name pos:line="6648" pos:column="68">end</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="6649" pos:column="17">PRectangle</name></type> <name pos:line="6649" pos:column="28">rcText</name> <init pos:line="6649" pos:column="35">= <expr><call><name pos:line="6649" pos:column="37">GetTextRectangle</name><argument_list pos:line="6649" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="6650" pos:column="17">if <condition pos:line="6650" pos:column="20">(<expr><name><name pos:line="6650" pos:column="21">rcRange</name><op:operator pos:line="6650" pos:column="28">.</op:operator><name pos:line="6650" pos:column="29">top</name></name> <op:operator pos:line="6650" pos:column="33">&lt;</op:operator> <name><name pos:line="6650" pos:column="35">rcText</name><op:operator pos:line="6650" pos:column="41">.</op:operator><name pos:line="6650" pos:column="42">top</name></name></expr>)</condition><then pos:line="6650" pos:column="46"> <block pos:line="6650" pos:column="47">{
			<expr_stmt><expr><name><name pos:line="6651" pos:column="25">rcRange</name><op:operator pos:line="6651" pos:column="32">.</op:operator><name pos:line="6651" pos:column="33">top</name></name> <op:operator pos:line="6651" pos:column="37">=</op:operator> <name><name pos:line="6651" pos:column="39">rcText</name><op:operator pos:line="6651" pos:column="45">.</op:operator><name pos:line="6651" pos:column="46">top</name></name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="6653" pos:column="17">if <condition pos:line="6653" pos:column="20">(<expr><name><name pos:line="6653" pos:column="21">rcRange</name><op:operator pos:line="6653" pos:column="28">.</op:operator><name pos:line="6653" pos:column="29">bottom</name></name> <op:operator pos:line="6653" pos:column="36">&gt;</op:operator> <name><name pos:line="6653" pos:column="38">rcText</name><op:operator pos:line="6653" pos:column="44">.</op:operator><name pos:line="6653" pos:column="45">bottom</name></name></expr>)</condition><then pos:line="6653" pos:column="52"> <block pos:line="6653" pos:column="53">{
			<expr_stmt><expr><name><name pos:line="6654" pos:column="25">rcRange</name><op:operator pos:line="6654" pos:column="32">.</op:operator><name pos:line="6654" pos:column="33">bottom</name></name> <op:operator pos:line="6654" pos:column="40">=</op:operator> <name><name pos:line="6654" pos:column="42">rcText</name><op:operator pos:line="6654" pos:column="48">.</op:operator><name pos:line="6654" pos:column="49">bottom</name></name></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="6657" pos:column="17">if <condition pos:line="6657" pos:column="20">(<expr><op:operator pos:line="6657" pos:column="21">!</op:operator><call><name pos:line="6657" pos:column="22">PaintContains</name><argument_list pos:line="6657" pos:column="35">(<argument><expr><name pos:line="6657" pos:column="36">rcRange</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6657" pos:column="45"> <block pos:line="6657" pos:column="46">{
			<expr_stmt><expr><call><name pos:line="6658" pos:column="25">AbandonPaint</name><argument_list pos:line="6658" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="6663" pos:column="1">void</name></type> <name><name pos:line="6663" pos:column="6">Editor</name><op:operator pos:line="6663" pos:column="12">::</op:operator><name pos:line="6663" pos:column="14">SetBraceHighlight</name></name><parameter_list pos:line="6663" pos:column="31">(<param><decl><type><name pos:line="6663" pos:column="32">Position</name></type> <name pos:line="6663" pos:column="41">pos0</name></decl></param>, <param><decl><type><name pos:line="6663" pos:column="47">Position</name></type> <name pos:line="6663" pos:column="56">pos1</name></decl></param>, <param><decl><type><name pos:line="6663" pos:column="62">int</name></type> <name pos:line="6663" pos:column="66">matchStyle</name></decl></param>)</parameter_list> <block pos:line="6663" pos:column="78">{
	<if pos:line="6664" pos:column="9">if <condition pos:line="6664" pos:column="12">(<expr><op:operator pos:line="6664" pos:column="13">(</op:operator><name pos:line="6664" pos:column="14">pos0</name> <op:operator pos:line="6664" pos:column="19">!=</op:operator> <name><name pos:line="6664" pos:column="22">braces</name><index pos:line="6664" pos:column="28">[<expr><lit:literal type="number" pos:line="6664" pos:column="29">0</lit:literal></expr>]</index></name><op:operator pos:line="6664" pos:column="31">)</op:operator> <op:operator pos:line="6664" pos:column="33">||</op:operator> <op:operator pos:line="6664" pos:column="36">(</op:operator><name pos:line="6664" pos:column="37">pos1</name> <op:operator pos:line="6664" pos:column="42">!=</op:operator> <name><name pos:line="6664" pos:column="45">braces</name><index pos:line="6664" pos:column="51">[<expr><lit:literal type="number" pos:line="6664" pos:column="52">1</lit:literal></expr>]</index></name><op:operator pos:line="6664" pos:column="54">)</op:operator> <op:operator pos:line="6664" pos:column="56">||</op:operator> <op:operator pos:line="6664" pos:column="59">(</op:operator><name pos:line="6664" pos:column="60">matchStyle</name> <op:operator pos:line="6664" pos:column="71">!=</op:operator> <name pos:line="6664" pos:column="74">bracesMatchStyle</name><op:operator pos:line="6664" pos:column="90">)</op:operator></expr>)</condition><then pos:line="6664" pos:column="92"> <block pos:line="6664" pos:column="93">{
		<if pos:line="6665" pos:column="17">if <condition pos:line="6665" pos:column="20">(<expr><op:operator pos:line="6665" pos:column="21">(</op:operator><name><name pos:line="6665" pos:column="22">braces</name><index pos:line="6665" pos:column="28">[<expr><lit:literal type="number" pos:line="6665" pos:column="29">0</lit:literal></expr>]</index></name> <op:operator pos:line="6665" pos:column="32">!=</op:operator> <name pos:line="6665" pos:column="35">pos0</name><op:operator pos:line="6665" pos:column="39">)</op:operator> <op:operator pos:line="6665" pos:column="41">||</op:operator> <op:operator pos:line="6665" pos:column="44">(</op:operator><name pos:line="6665" pos:column="45">matchStyle</name> <op:operator pos:line="6665" pos:column="56">!=</op:operator> <name pos:line="6665" pos:column="59">bracesMatchStyle</name><op:operator pos:line="6665" pos:column="75">)</op:operator></expr>)</condition><then pos:line="6665" pos:column="77"> <block pos:line="6665" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="6666" pos:column="25">CheckForChangeOutsidePaint</name><argument_list pos:line="6666" pos:column="51">(<argument><expr><call><name pos:line="6666" pos:column="52">Range</name><argument_list pos:line="6666" pos:column="57">(<argument><expr><name><name pos:line="6666" pos:column="58">braces</name><index pos:line="6666" pos:column="64">[<expr><lit:literal type="number" pos:line="6666" pos:column="65">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6667" pos:column="25">CheckForChangeOutsidePaint</name><argument_list pos:line="6667" pos:column="51">(<argument><expr><call><name pos:line="6667" pos:column="52">Range</name><argument_list pos:line="6667" pos:column="57">(<argument><expr><name pos:line="6667" pos:column="58">pos0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="6668" pos:column="25">braces</name><index pos:line="6668" pos:column="31">[<expr><lit:literal type="number" pos:line="6668" pos:column="32">0</lit:literal></expr>]</index></name> <op:operator pos:line="6668" pos:column="35">=</op:operator> <name pos:line="6668" pos:column="37">pos0</name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="6670" pos:column="17">if <condition pos:line="6670" pos:column="20">(<expr><op:operator pos:line="6670" pos:column="21">(</op:operator><name><name pos:line="6670" pos:column="22">braces</name><index pos:line="6670" pos:column="28">[<expr><lit:literal type="number" pos:line="6670" pos:column="29">1</lit:literal></expr>]</index></name> <op:operator pos:line="6670" pos:column="32">!=</op:operator> <name pos:line="6670" pos:column="35">pos1</name><op:operator pos:line="6670" pos:column="39">)</op:operator> <op:operator pos:line="6670" pos:column="41">||</op:operator> <op:operator pos:line="6670" pos:column="44">(</op:operator><name pos:line="6670" pos:column="45">matchStyle</name> <op:operator pos:line="6670" pos:column="56">!=</op:operator> <name pos:line="6670" pos:column="59">bracesMatchStyle</name><op:operator pos:line="6670" pos:column="75">)</op:operator></expr>)</condition><then pos:line="6670" pos:column="77"> <block pos:line="6670" pos:column="78">{
			<expr_stmt><expr><call><name pos:line="6671" pos:column="25">CheckForChangeOutsidePaint</name><argument_list pos:line="6671" pos:column="51">(<argument><expr><call><name pos:line="6671" pos:column="52">Range</name><argument_list pos:line="6671" pos:column="57">(<argument><expr><name><name pos:line="6671" pos:column="58">braces</name><index pos:line="6671" pos:column="64">[<expr><lit:literal type="number" pos:line="6671" pos:column="65">1</lit:literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6672" pos:column="25">CheckForChangeOutsidePaint</name><argument_list pos:line="6672" pos:column="51">(<argument><expr><call><name pos:line="6672" pos:column="52">Range</name><argument_list pos:line="6672" pos:column="57">(<argument><expr><name pos:line="6672" pos:column="58">pos1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="6673" pos:column="25">braces</name><index pos:line="6673" pos:column="31">[<expr><lit:literal type="number" pos:line="6673" pos:column="32">1</lit:literal></expr>]</index></name> <op:operator pos:line="6673" pos:column="35">=</op:operator> <name pos:line="6673" pos:column="37">pos1</name></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="6675" pos:column="17">bracesMatchStyle</name> <op:operator pos:line="6675" pos:column="34">=</op:operator> <name pos:line="6675" pos:column="36">matchStyle</name></expr>;</expr_stmt>
		<if pos:line="6676" pos:column="17">if <condition pos:line="6676" pos:column="20">(<expr><name pos:line="6676" pos:column="21">paintState</name> <op:operator pos:line="6676" pos:column="32">==</op:operator> <name pos:line="6676" pos:column="35">notPainting</name></expr>)</condition><then pos:line="6676" pos:column="47"> <block pos:line="6676" pos:column="48">{
			<expr_stmt><expr><call><name pos:line="6677" pos:column="25">Redraw</name><argument_list pos:line="6677" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="6682" pos:column="1">void</name></type> <name><name pos:line="6682" pos:column="6">Editor</name><op:operator pos:line="6682" pos:column="12">::</op:operator><name pos:line="6682" pos:column="14">SetAnnotationHeights</name></name><parameter_list pos:line="6682" pos:column="34">(<param><decl><type><name pos:line="6682" pos:column="35">int</name></type> <name pos:line="6682" pos:column="39">start</name></decl></param>, <param><decl><type><name pos:line="6682" pos:column="46">int</name></type> <name pos:line="6682" pos:column="50">end</name></decl></param>)</parameter_list> <block pos:line="6682" pos:column="55">{
	<if pos:line="6683" pos:column="9">if <condition pos:line="6683" pos:column="12">(<expr><name><name pos:line="6683" pos:column="13">vs</name><op:operator pos:line="6683" pos:column="15">.</op:operator><name pos:line="6683" pos:column="16">annotationVisible</name></name></expr>)</condition><then pos:line="6683" pos:column="34"> <block pos:line="6683" pos:column="35">{
		<for pos:line="6684" pos:column="17">for (<init><decl><type><name pos:line="6684" pos:column="22">int</name></type> <name pos:line="6684" pos:column="26">line</name><init pos:line="6684" pos:column="30">=<expr><name pos:line="6684" pos:column="31">start</name></expr></init></decl>;</init> <condition><expr><name pos:line="6684" pos:column="38">line</name><op:operator pos:line="6684" pos:column="42">&lt;</op:operator><name pos:line="6684" pos:column="43">end</name></expr>;</condition> <incr><expr><name pos:line="6684" pos:column="48">line</name><op:operator pos:line="6684" pos:column="52">++</op:operator></expr></incr>) <block pos:line="6684" pos:column="56">{
			<expr_stmt><expr><call><name><name pos:line="6685" pos:column="25">cs</name><op:operator pos:line="6685" pos:column="27">.</op:operator><name pos:line="6685" pos:column="28">SetHeight</name></name><argument_list pos:line="6685" pos:column="37">(<argument><expr><name pos:line="6685" pos:column="38">line</name></expr></argument>, <argument><expr><call><name><name pos:line="6685" pos:column="44">pdoc</name><op:operator pos:line="6685" pos:column="48">-&gt;</op:operator><name pos:line="6685" pos:column="50">AnnotationLines</name></name><argument_list pos:line="6685" pos:column="65">(<argument><expr><name pos:line="6685" pos:column="66">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="6685" pos:column="72">+</op:operator> <lit:literal type="number" pos:line="6685" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="6690" pos:column="1">void</name></type> <name><name pos:line="6690" pos:column="6">Editor</name><op:operator pos:line="6690" pos:column="12">::</op:operator><name pos:line="6690" pos:column="14">SetDocPointer</name></name><parameter_list pos:line="6690" pos:column="27">(<param><decl><type><name pos:line="6690" pos:column="28">Document</name> <type:modifier pos:line="6690" pos:column="37">*</type:modifier></type><name pos:line="6690" pos:column="38">document</name></decl></param>)</parameter_list> <block pos:line="6690" pos:column="48">{
	<comment type="line" pos:line="6691" pos:column="9">//Platform::DebugPrintf("** %x setdoc to %x\n", pdoc, document);</comment>
	<expr_stmt><expr><call><name><name pos:line="6692" pos:column="9">pdoc</name><op:operator pos:line="6692" pos:column="13">-&gt;</op:operator><name pos:line="6692" pos:column="15">RemoveWatcher</name></name><argument_list pos:line="6692" pos:column="28">(<argument><expr><name pos:line="6692" pos:column="29">this</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6692" pos:column="35">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="6693" pos:column="9">pdoc</name><op:operator pos:line="6693" pos:column="13">-&gt;</op:operator><name pos:line="6693" pos:column="15">Release</name></name><argument_list pos:line="6693" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="6694" pos:column="9">if <condition pos:line="6694" pos:column="12">(<expr><name pos:line="6694" pos:column="13">document</name> <op:operator pos:line="6694" pos:column="22">==</op:operator> <name pos:line="6694" pos:column="25">NULL</name></expr>)</condition><then pos:line="6694" pos:column="30"> <block pos:line="6694" pos:column="31">{
		<expr_stmt><expr><name pos:line="6695" pos:column="17">pdoc</name> <op:operator pos:line="6695" pos:column="22">=</op:operator> <op:operator pos:line="6695" pos:column="24">new</op:operator> <call><name pos:line="6695" pos:column="28">Document</name><argument_list pos:line="6695" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
	}</block></then> <else pos:line="6696" pos:column="11">else <block pos:line="6696" pos:column="16">{
		<expr_stmt><expr><name pos:line="6697" pos:column="17">pdoc</name> <op:operator pos:line="6697" pos:column="22">=</op:operator> <name pos:line="6697" pos:column="24">document</name></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><name pos:line="6699" pos:column="9">pdoc</name><op:operator pos:line="6699" pos:column="13">-&gt;</op:operator><name pos:line="6699" pos:column="15">AddRef</name></name><argument_list pos:line="6699" pos:column="21">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="6701" pos:column="9">// Ensure all positions within document</comment>
	<expr_stmt><expr><call><name><name pos:line="6702" pos:column="9">sel</name><op:operator pos:line="6702" pos:column="12">.</op:operator><name pos:line="6702" pos:column="13">Clear</name></name><argument_list pos:line="6702" pos:column="18">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="6703" pos:column="9">targetStart</name> <op:operator pos:line="6703" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="6703" pos:column="23">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="6704" pos:column="9">targetEnd</name> <op:operator pos:line="6704" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="6704" pos:column="21">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="6706" pos:column="9">braces</name><index pos:line="6706" pos:column="15">[<expr><lit:literal type="number" pos:line="6706" pos:column="16">0</lit:literal></expr>]</index></name> <op:operator pos:line="6706" pos:column="19">=</op:operator> <name pos:line="6706" pos:column="21">invalidPosition</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="6707" pos:column="9">braces</name><index pos:line="6707" pos:column="15">[<expr><lit:literal type="number" pos:line="6707" pos:column="16">1</lit:literal></expr>]</index></name> <op:operator pos:line="6707" pos:column="19">=</op:operator> <name pos:line="6707" pos:column="21">invalidPosition</name></expr>;</expr_stmt>

	<comment type="line" pos:line="6709" pos:column="9">// Reset the contraction state to fully shown.</comment>
	<expr_stmt><expr><call><name><name pos:line="6710" pos:column="9">cs</name><op:operator pos:line="6710" pos:column="11">.</op:operator><name pos:line="6710" pos:column="12">Clear</name></name><argument_list pos:line="6710" pos:column="17">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="6711" pos:column="9">cs</name><op:operator pos:line="6711" pos:column="11">.</op:operator><name pos:line="6711" pos:column="12">InsertLines</name></name><argument_list pos:line="6711" pos:column="23">(<argument><expr><lit:literal type="number" pos:line="6711" pos:column="24">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="6711" pos:column="27">pdoc</name><op:operator pos:line="6711" pos:column="31">-&gt;</op:operator><name pos:line="6711" pos:column="33">LinesTotal</name></name><argument_list pos:line="6711" pos:column="43">()</argument_list></call> <op:operator pos:line="6711" pos:column="46">-</op:operator> <lit:literal type="number" pos:line="6711" pos:column="48">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="6712" pos:column="9">SetAnnotationHeights</name><argument_list pos:line="6712" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="6712" pos:column="30">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="6712" pos:column="33">pdoc</name><op:operator pos:line="6712" pos:column="37">-&gt;</op:operator><name pos:line="6712" pos:column="39">LinesTotal</name></name><argument_list pos:line="6712" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="6713" pos:column="9">llc</name><op:operator pos:line="6713" pos:column="12">.</op:operator><name pos:line="6713" pos:column="13">Deallocate</name></name><argument_list pos:line="6713" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="6714" pos:column="9">NeedWrapping</name><argument_list pos:line="6714" pos:column="21">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="6716" pos:column="9">pdoc</name><op:operator pos:line="6716" pos:column="13">-&gt;</op:operator><name pos:line="6716" pos:column="15">AddWatcher</name></name><argument_list pos:line="6716" pos:column="25">(<argument><expr><name pos:line="6716" pos:column="26">this</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6716" pos:column="32">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="6717" pos:column="9">SetScrollBars</name><argument_list pos:line="6717" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="6718" pos:column="9">Redraw</name><argument_list pos:line="6718" pos:column="15">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="6721" pos:column="1">void</name></type> <name><name pos:line="6721" pos:column="6">Editor</name><op:operator pos:line="6721" pos:column="12">::</op:operator><name pos:line="6721" pos:column="14">SetAnnotationVisible</name></name><parameter_list pos:line="6721" pos:column="34">(<param><decl><type><name pos:line="6721" pos:column="35">int</name></type> <name pos:line="6721" pos:column="39">visible</name></decl></param>)</parameter_list> <block pos:line="6721" pos:column="48">{
	<if pos:line="6722" pos:column="9">if <condition pos:line="6722" pos:column="12">(<expr><name><name pos:line="6722" pos:column="13">vs</name><op:operator pos:line="6722" pos:column="15">.</op:operator><name pos:line="6722" pos:column="16">annotationVisible</name></name> <op:operator pos:line="6722" pos:column="34">!=</op:operator> <name pos:line="6722" pos:column="37">visible</name></expr>)</condition><then pos:line="6722" pos:column="45"> <block pos:line="6722" pos:column="46">{
		<decl_stmt><decl><type><name pos:line="6723" pos:column="17">bool</name></type> <name pos:line="6723" pos:column="22">changedFromOrToHidden</name> <init pos:line="6723" pos:column="44">= <expr><op:operator pos:line="6723" pos:column="46">(</op:operator><op:operator pos:line="6723" pos:column="47">(</op:operator><name><name pos:line="6723" pos:column="48">vs</name><op:operator pos:line="6723" pos:column="50">.</op:operator><name pos:line="6723" pos:column="51">annotationVisible</name></name> <op:operator pos:line="6723" pos:column="69">!=</op:operator> <lit:literal type="number" pos:line="6723" pos:column="72">0</lit:literal><op:operator pos:line="6723" pos:column="73">)</op:operator> <op:operator pos:line="6723" pos:column="75">!=</op:operator> <op:operator pos:line="6723" pos:column="78">(</op:operator><name pos:line="6723" pos:column="79">visible</name> <op:operator pos:line="6723" pos:column="87">!=</op:operator> <lit:literal type="number" pos:line="6723" pos:column="90">0</lit:literal><op:operator pos:line="6723" pos:column="91">)</op:operator><op:operator pos:line="6723" pos:column="92">)</op:operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="6724" pos:column="17">vs</name><op:operator pos:line="6724" pos:column="19">.</op:operator><name pos:line="6724" pos:column="20">annotationVisible</name></name> <op:operator pos:line="6724" pos:column="38">=</op:operator> <name pos:line="6724" pos:column="40">visible</name></expr>;</expr_stmt>
		<if pos:line="6725" pos:column="17">if <condition pos:line="6725" pos:column="20">(<expr><name pos:line="6725" pos:column="21">changedFromOrToHidden</name></expr>)</condition><then pos:line="6725" pos:column="43"> <block pos:line="6725" pos:column="44">{
			<decl_stmt><decl><type><name pos:line="6726" pos:column="25">int</name></type> <name pos:line="6726" pos:column="29">dir</name> <init pos:line="6726" pos:column="33">= <expr><name><name pos:line="6726" pos:column="35">vs</name><op:operator pos:line="6726" pos:column="37">.</op:operator><name pos:line="6726" pos:column="38">annotationVisible</name></name> <op:operator pos:line="6726" pos:column="56">?</op:operator> <lit:literal type="number" pos:line="6726" pos:column="58">1</lit:literal> <op:operator pos:line="6726" pos:column="60">:</op:operator> <op:operator pos:line="6726" pos:column="62">-</op:operator><lit:literal type="number" pos:line="6726" pos:column="63">1</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="6727" pos:column="25">for (<init><decl><type><name pos:line="6727" pos:column="30">int</name></type> <name pos:line="6727" pos:column="34">line</name><init pos:line="6727" pos:column="38">=<expr><lit:literal type="number" pos:line="6727" pos:column="39">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="6727" pos:column="42">line</name><op:operator pos:line="6727" pos:column="46">&lt;</op:operator><call><name><name pos:line="6727" pos:column="47">pdoc</name><op:operator pos:line="6727" pos:column="51">-&gt;</op:operator><name pos:line="6727" pos:column="53">LinesTotal</name></name><argument_list pos:line="6727" pos:column="63">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="6727" pos:column="67">line</name><op:operator pos:line="6727" pos:column="71">++</op:operator></expr></incr>) <block pos:line="6727" pos:column="75">{
				<decl_stmt><decl><type><name pos:line="6728" pos:column="33">int</name></type> <name pos:line="6728" pos:column="37">annotationLines</name> <init pos:line="6728" pos:column="53">= <expr><call><name><name pos:line="6728" pos:column="55">pdoc</name><op:operator pos:line="6728" pos:column="59">-&gt;</op:operator><name pos:line="6728" pos:column="61">AnnotationLines</name></name><argument_list pos:line="6728" pos:column="76">(<argument><expr><name pos:line="6728" pos:column="77">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="6729" pos:column="33">if <condition pos:line="6729" pos:column="36">(<expr><name pos:line="6729" pos:column="37">annotationLines</name> <op:operator pos:line="6729" pos:column="53">&gt;</op:operator> <lit:literal type="number" pos:line="6729" pos:column="55">0</lit:literal></expr>)</condition><then pos:line="6729" pos:column="57"> <block pos:line="6729" pos:column="58">{
					<expr_stmt><expr><call><name><name pos:line="6730" pos:column="41">cs</name><op:operator pos:line="6730" pos:column="43">.</op:operator><name pos:line="6730" pos:column="44">SetHeight</name></name><argument_list pos:line="6730" pos:column="53">(<argument><expr><name pos:line="6730" pos:column="54">line</name></expr></argument>, <argument><expr><call><name><name pos:line="6730" pos:column="60">cs</name><op:operator pos:line="6730" pos:column="62">.</op:operator><name pos:line="6730" pos:column="63">GetHeight</name></name><argument_list pos:line="6730" pos:column="72">(<argument><expr><name pos:line="6730" pos:column="73">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="6730" pos:column="79">+</op:operator> <name pos:line="6730" pos:column="81">annotationLines</name> <op:operator pos:line="6730" pos:column="97">*</op:operator> <name pos:line="6730" pos:column="99">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></for>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="6734" pos:column="17">Redraw</name><argument_list pos:line="6734" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<comment type="block" format="doxygen" pos:line="6738" pos:column="1">/**
 * Recursively expand a fold, making lines visible except where they have an unexpanded parent.
 */</comment>
<function><type><name pos:line="6741" pos:column="1">void</name></type> <name><name pos:line="6741" pos:column="6">Editor</name><op:operator pos:line="6741" pos:column="12">::</op:operator><name pos:line="6741" pos:column="14">Expand</name></name><parameter_list pos:line="6741" pos:column="20">(<param><decl><type><name pos:line="6741" pos:column="21">int</name> <type:modifier pos:line="6741" pos:column="25">&amp;</type:modifier></type><name pos:line="6741" pos:column="26">line</name></decl></param>, <param><decl><type><name pos:line="6741" pos:column="32">bool</name></type> <name pos:line="6741" pos:column="37">doExpand</name></decl></param>)</parameter_list> <block pos:line="6741" pos:column="47">{
	<decl_stmt><decl><type><name pos:line="6742" pos:column="9">int</name></type> <name pos:line="6742" pos:column="13">lineMaxSubord</name> <init pos:line="6742" pos:column="27">= <expr><call><name><name pos:line="6742" pos:column="29">pdoc</name><op:operator pos:line="6742" pos:column="33">-&gt;</op:operator><name pos:line="6742" pos:column="35">GetLastChild</name></name><argument_list pos:line="6742" pos:column="47">(<argument><expr><name pos:line="6742" pos:column="48">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="6743" pos:column="9">line</name><op:operator pos:line="6743" pos:column="13">++</op:operator></expr>;</expr_stmt>
	<while pos:line="6744" pos:column="9">while <condition pos:line="6744" pos:column="15">(<expr><name pos:line="6744" pos:column="16">line</name> <op:operator pos:line="6744" pos:column="21">&lt;=</op:operator> <name pos:line="6744" pos:column="24">lineMaxSubord</name></expr>)</condition> <block pos:line="6744" pos:column="39">{
		<if pos:line="6745" pos:column="17">if <condition pos:line="6745" pos:column="20">(<expr><name pos:line="6745" pos:column="21">doExpand</name></expr>)</condition><then pos:line="6745" pos:column="30">
			<expr_stmt><expr><call><name><name pos:line="6746" pos:column="25">cs</name><op:operator pos:line="6746" pos:column="27">.</op:operator><name pos:line="6746" pos:column="28">SetVisible</name></name><argument_list pos:line="6746" pos:column="38">(<argument><expr><name pos:line="6746" pos:column="39">line</name></expr></argument>, <argument><expr><name pos:line="6746" pos:column="45">line</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6746" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<decl_stmt><decl><type><name pos:line="6747" pos:column="17">int</name></type> <name pos:line="6747" pos:column="21">level</name> <init pos:line="6747" pos:column="27">= <expr><call><name><name pos:line="6747" pos:column="29">pdoc</name><op:operator pos:line="6747" pos:column="33">-&gt;</op:operator><name pos:line="6747" pos:column="35">GetLevel</name></name><argument_list pos:line="6747" pos:column="43">(<argument><expr><name pos:line="6747" pos:column="44">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="6748" pos:column="17">if <condition pos:line="6748" pos:column="20">(<expr><name pos:line="6748" pos:column="21">level</name> <op:operator pos:line="6748" pos:column="27">&amp;</op:operator> <name pos:line="6748" pos:column="29">SC_FOLDLEVELHEADERFLAG</name></expr>)</condition><then pos:line="6748" pos:column="52"> <block pos:line="6748" pos:column="53">{
			<if pos:line="6749" pos:column="25">if <condition pos:line="6749" pos:column="28">(<expr><name pos:line="6749" pos:column="29">doExpand</name> <op:operator pos:line="6749" pos:column="38">&amp;&amp;</op:operator> <call><name><name pos:line="6749" pos:column="41">cs</name><op:operator pos:line="6749" pos:column="43">.</op:operator><name pos:line="6749" pos:column="44">GetExpanded</name></name><argument_list pos:line="6749" pos:column="55">(<argument><expr><name pos:line="6749" pos:column="56">line</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6749" pos:column="62"> <block pos:line="6749" pos:column="63">{
				<expr_stmt><expr><call><name pos:line="6750" pos:column="33">Expand</name><argument_list pos:line="6750" pos:column="39">(<argument><expr><name pos:line="6750" pos:column="40">line</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6750" pos:column="46">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="6751" pos:column="27">else <block pos:line="6751" pos:column="32">{
				<expr_stmt><expr><call><name pos:line="6752" pos:column="33">Expand</name><argument_list pos:line="6752" pos:column="39">(<argument><expr><name pos:line="6752" pos:column="40">line</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6752" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block></then> <else pos:line="6754" pos:column="19">else <block pos:line="6754" pos:column="24">{
			<expr_stmt><expr><name pos:line="6755" pos:column="25">line</name><op:operator pos:line="6755" pos:column="29">++</op:operator></expr>;</expr_stmt>
		}</block></else></if>
	}</block></while>
}</block></function>

<function><type><name pos:line="6760" pos:column="1">void</name></type> <name><name pos:line="6760" pos:column="6">Editor</name><op:operator pos:line="6760" pos:column="12">::</op:operator><name pos:line="6760" pos:column="14">ToggleContraction</name></name><parameter_list pos:line="6760" pos:column="31">(<param><decl><type><name pos:line="6760" pos:column="32">int</name></type> <name pos:line="6760" pos:column="36">line</name></decl></param>)</parameter_list> <block pos:line="6760" pos:column="42">{
	<if pos:line="6761" pos:column="9">if <condition pos:line="6761" pos:column="12">(<expr><name pos:line="6761" pos:column="13">line</name> <op:operator pos:line="6761" pos:column="18">&gt;=</op:operator> <lit:literal type="number" pos:line="6761" pos:column="21">0</lit:literal></expr>)</condition><then pos:line="6761" pos:column="23"> <block pos:line="6761" pos:column="24">{
		<if pos:line="6762" pos:column="17">if <condition pos:line="6762" pos:column="20">(<expr><op:operator pos:line="6762" pos:column="21">(</op:operator><call><name><name pos:line="6762" pos:column="22">pdoc</name><op:operator pos:line="6762" pos:column="26">-&gt;</op:operator><name pos:line="6762" pos:column="28">GetLevel</name></name><argument_list pos:line="6762" pos:column="36">(<argument><expr><name pos:line="6762" pos:column="37">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="6762" pos:column="43">&amp;</op:operator> <name pos:line="6762" pos:column="45">SC_FOLDLEVELHEADERFLAG</name><op:operator pos:line="6762" pos:column="67">)</op:operator> <op:operator pos:line="6762" pos:column="69">==</op:operator> <lit:literal type="number" pos:line="6762" pos:column="72">0</lit:literal></expr>)</condition><then pos:line="6762" pos:column="74"> <block pos:line="6762" pos:column="75">{
			<expr_stmt><expr><name pos:line="6763" pos:column="25">line</name> <op:operator pos:line="6763" pos:column="30">=</op:operator> <call><name><name pos:line="6763" pos:column="32">pdoc</name><op:operator pos:line="6763" pos:column="36">-&gt;</op:operator><name pos:line="6763" pos:column="38">GetFoldParent</name></name><argument_list pos:line="6763" pos:column="51">(<argument><expr><name pos:line="6763" pos:column="52">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="6764" pos:column="25">if <condition pos:line="6764" pos:column="28">(<expr><name pos:line="6764" pos:column="29">line</name> <op:operator pos:line="6764" pos:column="34">&lt;</op:operator> <lit:literal type="number" pos:line="6764" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="6764" pos:column="38">
				<return pos:line="6765" pos:column="33">return;</return></then></if>
		}</block></then></if>

		<if pos:line="6768" pos:column="17">if <condition pos:line="6768" pos:column="20">(<expr><call><name><name pos:line="6768" pos:column="21">cs</name><op:operator pos:line="6768" pos:column="23">.</op:operator><name pos:line="6768" pos:column="24">GetExpanded</name></name><argument_list pos:line="6768" pos:column="35">(<argument><expr><name pos:line="6768" pos:column="36">line</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6768" pos:column="42"> <block pos:line="6768" pos:column="43">{
			<decl_stmt><decl><type><name pos:line="6769" pos:column="25">int</name></type> <name pos:line="6769" pos:column="29">lineMaxSubord</name> <init pos:line="6769" pos:column="43">= <expr><call><name><name pos:line="6769" pos:column="45">pdoc</name><op:operator pos:line="6769" pos:column="49">-&gt;</op:operator><name pos:line="6769" pos:column="51">GetLastChild</name></name><argument_list pos:line="6769" pos:column="63">(<argument><expr><name pos:line="6769" pos:column="64">line</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="6770" pos:column="25">if <condition pos:line="6770" pos:column="28">(<expr><name pos:line="6770" pos:column="29">lineMaxSubord</name> <op:operator pos:line="6770" pos:column="43">&gt;</op:operator> <name pos:line="6770" pos:column="45">line</name></expr>)</condition><then pos:line="6770" pos:column="50"> <block pos:line="6770" pos:column="51">{
				<expr_stmt><expr><call><name><name pos:line="6771" pos:column="33">cs</name><op:operator pos:line="6771" pos:column="35">.</op:operator><name pos:line="6771" pos:column="36">SetExpanded</name></name><argument_list pos:line="6771" pos:column="47">(<argument><expr><name pos:line="6771" pos:column="48">line</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6771" pos:column="54">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="6772" pos:column="33">cs</name><op:operator pos:line="6772" pos:column="35">.</op:operator><name pos:line="6772" pos:column="36">SetVisible</name></name><argument_list pos:line="6772" pos:column="46">(<argument><expr><name pos:line="6772" pos:column="47">line</name> <op:operator pos:line="6772" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="6772" pos:column="54">1</lit:literal></expr></argument>, <argument><expr><name pos:line="6772" pos:column="57">lineMaxSubord</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6772" pos:column="72">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="6774" pos:column="33">int</name></type> <name pos:line="6774" pos:column="37">lineCurrent</name> <init pos:line="6774" pos:column="49">= <expr><call><name><name pos:line="6774" pos:column="51">pdoc</name><op:operator pos:line="6774" pos:column="55">-&gt;</op:operator><name pos:line="6774" pos:column="57">LineFromPosition</name></name><argument_list pos:line="6774" pos:column="73">(<argument><expr><call><name><name pos:line="6774" pos:column="74">sel</name><op:operator pos:line="6774" pos:column="77">.</op:operator><name pos:line="6774" pos:column="78">MainCaret</name></name><argument_list pos:line="6774" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="6775" pos:column="33">if <condition pos:line="6775" pos:column="36">(<expr><name pos:line="6775" pos:column="37">lineCurrent</name> <op:operator pos:line="6775" pos:column="49">&gt;</op:operator> <name pos:line="6775" pos:column="51">line</name> <op:operator pos:line="6775" pos:column="56">&amp;&amp;</op:operator> <name pos:line="6775" pos:column="59">lineCurrent</name> <op:operator pos:line="6775" pos:column="71">&lt;=</op:operator> <name pos:line="6775" pos:column="74">lineMaxSubord</name></expr>)</condition><then pos:line="6775" pos:column="88"> <block pos:line="6775" pos:column="89">{
					<comment type="line" pos:line="6776" pos:column="41">// This does not re-expand the fold</comment>
					<expr_stmt><expr><call><name pos:line="6777" pos:column="41">EnsureCaretVisible</name><argument_list pos:line="6777" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>

				<expr_stmt><expr><call><name pos:line="6780" pos:column="33">SetScrollBars</name><argument_list pos:line="6780" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6781" pos:column="33">Redraw</name><argument_list pos:line="6781" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

		}</block></then> <else pos:line="6784" pos:column="19">else <block pos:line="6784" pos:column="24">{
			<if pos:line="6785" pos:column="25">if <condition pos:line="6785" pos:column="28">(<expr><op:operator pos:line="6785" pos:column="29">!</op:operator><op:operator pos:line="6785" pos:column="30">(</op:operator><call><name><name pos:line="6785" pos:column="31">cs</name><op:operator pos:line="6785" pos:column="33">.</op:operator><name pos:line="6785" pos:column="34">GetVisible</name></name><argument_list pos:line="6785" pos:column="44">(<argument><expr><name pos:line="6785" pos:column="45">line</name></expr></argument>)</argument_list></call><op:operator pos:line="6785" pos:column="50">)</op:operator></expr>)</condition><then pos:line="6785" pos:column="52"> <block pos:line="6785" pos:column="53">{
				<expr_stmt><expr><call><name pos:line="6786" pos:column="33">EnsureLineVisible</name><argument_list pos:line="6786" pos:column="50">(<argument><expr><name pos:line="6786" pos:column="51">line</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6786" pos:column="57">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6787" pos:column="33">GoToLine</name><argument_list pos:line="6787" pos:column="41">(<argument><expr><name pos:line="6787" pos:column="42">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="6789" pos:column="25">cs</name><op:operator pos:line="6789" pos:column="27">.</op:operator><name pos:line="6789" pos:column="28">SetExpanded</name></name><argument_list pos:line="6789" pos:column="39">(<argument><expr><name pos:line="6789" pos:column="40">line</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6789" pos:column="46">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6790" pos:column="25">Expand</name><argument_list pos:line="6790" pos:column="31">(<argument><expr><name pos:line="6790" pos:column="32">line</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6790" pos:column="38">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6791" pos:column="25">SetScrollBars</name><argument_list pos:line="6791" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="6792" pos:column="25">Redraw</name><argument_list pos:line="6792" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="6797" pos:column="1">int</name></type> <name><name pos:line="6797" pos:column="5">Editor</name><op:operator pos:line="6797" pos:column="11">::</op:operator><name pos:line="6797" pos:column="13">ContractedFoldNext</name></name><parameter_list pos:line="6797" pos:column="31">(<param><decl><type><name pos:line="6797" pos:column="32">int</name></type> <name pos:line="6797" pos:column="36">lineStart</name></decl></param>)</parameter_list> <block pos:line="6797" pos:column="47">{
	<for pos:line="6798" pos:column="9">for (<init><decl><type><name pos:line="6798" pos:column="14">int</name></type> <name pos:line="6798" pos:column="18">line</name> <init pos:line="6798" pos:column="23">= <expr><name pos:line="6798" pos:column="25">lineStart</name></expr></init></decl>;</init> <condition><expr><name pos:line="6798" pos:column="36">line</name><op:operator pos:line="6798" pos:column="40">&lt;</op:operator><call><name><name pos:line="6798" pos:column="41">pdoc</name><op:operator pos:line="6798" pos:column="45">-&gt;</op:operator><name pos:line="6798" pos:column="47">LinesTotal</name></name><argument_list pos:line="6798" pos:column="57">()</argument_list></call></expr>;</condition><incr/>) <block pos:line="6798" pos:column="62">{
		<if pos:line="6799" pos:column="17">if <condition pos:line="6799" pos:column="20">(<expr><op:operator pos:line="6799" pos:column="21">!</op:operator><call><name><name pos:line="6799" pos:column="22">cs</name><op:operator pos:line="6799" pos:column="24">.</op:operator><name pos:line="6799" pos:column="25">GetExpanded</name></name><argument_list pos:line="6799" pos:column="36">(<argument><expr><name pos:line="6799" pos:column="37">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="6799" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="6799" pos:column="46">(</op:operator><call><name><name pos:line="6799" pos:column="47">pdoc</name><op:operator pos:line="6799" pos:column="51">-&gt;</op:operator><name pos:line="6799" pos:column="53">GetLevel</name></name><argument_list pos:line="6799" pos:column="61">(<argument><expr><name pos:line="6799" pos:column="62">line</name></expr></argument>)</argument_list></call> <op:operator pos:line="6799" pos:column="68">&amp;</op:operator> <name pos:line="6799" pos:column="70">SC_FOLDLEVELHEADERFLAG</name><op:operator pos:line="6799" pos:column="92">)</op:operator></expr>)</condition><then pos:line="6799" pos:column="94">
			<return pos:line="6800" pos:column="25">return <expr><name pos:line="6800" pos:column="32">line</name></expr>;</return></then></if>
		<expr_stmt><expr><name pos:line="6801" pos:column="17">line</name> <op:operator pos:line="6801" pos:column="22">=</op:operator> <call><name><name pos:line="6801" pos:column="24">cs</name><op:operator pos:line="6801" pos:column="26">.</op:operator><name pos:line="6801" pos:column="27">ContractedNext</name></name><argument_list pos:line="6801" pos:column="41">(<argument><expr><name pos:line="6801" pos:column="42">line</name><op:operator pos:line="6801" pos:column="46">+</op:operator><lit:literal type="number" pos:line="6801" pos:column="47">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="6802" pos:column="17">if <condition pos:line="6802" pos:column="20">(<expr><name pos:line="6802" pos:column="21">line</name> <op:operator pos:line="6802" pos:column="26">&lt;</op:operator> <lit:literal type="number" pos:line="6802" pos:column="28">0</lit:literal></expr>)</condition><then pos:line="6802" pos:column="30">
			<return pos:line="6803" pos:column="25">return <expr><op:operator pos:line="6803" pos:column="32">-</op:operator><lit:literal type="number" pos:line="6803" pos:column="33">1</lit:literal></expr>;</return></then></if>
	}</block></for>

	<return pos:line="6806" pos:column="9">return <expr><op:operator pos:line="6806" pos:column="16">-</op:operator><lit:literal type="number" pos:line="6806" pos:column="17">1</lit:literal></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="6809" pos:column="1">/**
 * Recurse up from this line to find any folds that prevent this line from being visible
 * and unfold them all.
 */</comment>
<function><type><name pos:line="6813" pos:column="1">void</name></type> <name><name pos:line="6813" pos:column="6">Editor</name><op:operator pos:line="6813" pos:column="12">::</op:operator><name pos:line="6813" pos:column="14">EnsureLineVisible</name></name><parameter_list pos:line="6813" pos:column="31">(<param><decl><type><name pos:line="6813" pos:column="32">int</name></type> <name pos:line="6813" pos:column="36">lineDoc</name></decl></param>, <param><decl><type><name pos:line="6813" pos:column="45">bool</name></type> <name pos:line="6813" pos:column="50">enforcePolicy</name></decl></param>)</parameter_list> <block pos:line="6813" pos:column="65">{

	<comment type="line" pos:line="6815" pos:column="9">// In case in need of wrapping to ensure DisplayFromDoc works.</comment>
	<expr_stmt><expr><call><name pos:line="6816" pos:column="9">WrapLines</name><argument_list pos:line="6816" pos:column="18">(<argument><expr><lit:literal type="boolean" pos:line="6816" pos:column="19">true</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="6816" pos:column="25">-</op:operator><lit:literal type="number" pos:line="6816" pos:column="26">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="6818" pos:column="9">if <condition pos:line="6818" pos:column="12">(<expr><op:operator pos:line="6818" pos:column="13">!</op:operator><call><name><name pos:line="6818" pos:column="14">cs</name><op:operator pos:line="6818" pos:column="16">.</op:operator><name pos:line="6818" pos:column="17">GetVisible</name></name><argument_list pos:line="6818" pos:column="27">(<argument><expr><name pos:line="6818" pos:column="28">lineDoc</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6818" pos:column="37"> <block pos:line="6818" pos:column="38">{
		<decl_stmt><decl><type><name pos:line="6819" pos:column="17">int</name></type> <name pos:line="6819" pos:column="21">lineParent</name> <init pos:line="6819" pos:column="32">= <expr><call><name><name pos:line="6819" pos:column="34">pdoc</name><op:operator pos:line="6819" pos:column="38">-&gt;</op:operator><name pos:line="6819" pos:column="40">GetFoldParent</name></name><argument_list pos:line="6819" pos:column="53">(<argument><expr><name pos:line="6819" pos:column="54">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="6820" pos:column="17">if <condition pos:line="6820" pos:column="20">(<expr><name pos:line="6820" pos:column="21">lineParent</name> <op:operator pos:line="6820" pos:column="32">&gt;=</op:operator> <lit:literal type="number" pos:line="6820" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="6820" pos:column="37"> <block pos:line="6820" pos:column="38">{
			<if pos:line="6821" pos:column="25">if <condition pos:line="6821" pos:column="28">(<expr><name pos:line="6821" pos:column="29">lineDoc</name> <op:operator pos:line="6821" pos:column="37">!=</op:operator> <name pos:line="6821" pos:column="40">lineParent</name></expr>)</condition><then pos:line="6821" pos:column="51">
				<expr_stmt><expr><call><name pos:line="6822" pos:column="33">EnsureLineVisible</name><argument_list pos:line="6822" pos:column="50">(<argument><expr><name pos:line="6822" pos:column="51">lineParent</name></expr></argument>, <argument><expr><name pos:line="6822" pos:column="63">enforcePolicy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="6823" pos:column="25">if <condition pos:line="6823" pos:column="28">(<expr><op:operator pos:line="6823" pos:column="29">!</op:operator><call><name><name pos:line="6823" pos:column="30">cs</name><op:operator pos:line="6823" pos:column="32">.</op:operator><name pos:line="6823" pos:column="33">GetExpanded</name></name><argument_list pos:line="6823" pos:column="44">(<argument><expr><name pos:line="6823" pos:column="45">lineParent</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="6823" pos:column="57"> <block pos:line="6823" pos:column="58">{
				<expr_stmt><expr><call><name><name pos:line="6824" pos:column="33">cs</name><op:operator pos:line="6824" pos:column="35">.</op:operator><name pos:line="6824" pos:column="36">SetExpanded</name></name><argument_list pos:line="6824" pos:column="47">(<argument><expr><name pos:line="6824" pos:column="48">lineParent</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6824" pos:column="60">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6825" pos:column="33">Expand</name><argument_list pos:line="6825" pos:column="39">(<argument><expr><name pos:line="6825" pos:column="40">lineParent</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="6825" pos:column="52">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="6828" pos:column="17">SetScrollBars</name><argument_list pos:line="6828" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="6829" pos:column="17">Redraw</name><argument_list pos:line="6829" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="6831" pos:column="9">if <condition pos:line="6831" pos:column="12">(<expr><name pos:line="6831" pos:column="13">enforcePolicy</name></expr>)</condition><then pos:line="6831" pos:column="27"> <block pos:line="6831" pos:column="28">{
		<decl_stmt><decl><type><name pos:line="6832" pos:column="17">int</name></type> <name pos:line="6832" pos:column="21">lineDisplay</name> <init pos:line="6832" pos:column="33">= <expr><call><name><name pos:line="6832" pos:column="35">cs</name><op:operator pos:line="6832" pos:column="37">.</op:operator><name pos:line="6832" pos:column="38">DisplayFromDoc</name></name><argument_list pos:line="6832" pos:column="52">(<argument><expr><name pos:line="6832" pos:column="53">lineDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="6833" pos:column="17">if <condition pos:line="6833" pos:column="20">(<expr><name pos:line="6833" pos:column="21">visiblePolicy</name> <op:operator pos:line="6833" pos:column="35">&amp;</op:operator> <name pos:line="6833" pos:column="37">VISIBLE_SLOP</name></expr>)</condition><then pos:line="6833" pos:column="50"> <block pos:line="6833" pos:column="51">{
			<if pos:line="6834" pos:column="25">if <condition pos:line="6834" pos:column="28">(<expr><op:operator pos:line="6834" pos:column="29">(</op:operator><name pos:line="6834" pos:column="30">topLine</name> <op:operator pos:line="6834" pos:column="38">&gt;</op:operator> <name pos:line="6834" pos:column="40">lineDisplay</name><op:operator pos:line="6834" pos:column="51">)</op:operator> <op:operator pos:line="6834" pos:column="53">||</op:operator> <op:operator pos:line="6834" pos:column="56">(</op:operator><op:operator pos:line="6834" pos:column="57">(</op:operator><name pos:line="6834" pos:column="58">visiblePolicy</name> <op:operator pos:line="6834" pos:column="72">&amp;</op:operator> <name pos:line="6834" pos:column="74">VISIBLE_STRICT</name><op:operator pos:line="6834" pos:column="88">)</op:operator> <op:operator pos:line="6834" pos:column="90">&amp;&amp;</op:operator> <op:operator pos:line="6834" pos:column="93">(</op:operator><name pos:line="6834" pos:column="94">topLine</name> <op:operator pos:line="6834" pos:column="102">+</op:operator> <name pos:line="6834" pos:column="104">visibleSlop</name> <op:operator pos:line="6834" pos:column="116">&gt;</op:operator> <name pos:line="6834" pos:column="118">lineDisplay</name><op:operator pos:line="6834" pos:column="129">)</op:operator><op:operator pos:line="6834" pos:column="130">)</op:operator></expr>)</condition><then pos:line="6834" pos:column="132"> <block pos:line="6834" pos:column="133">{
				<expr_stmt><expr><call><name pos:line="6835" pos:column="33">SetTopLine</name><argument_list pos:line="6835" pos:column="43">(<argument><expr><call><name><name pos:line="6835" pos:column="44">Platform</name><op:operator pos:line="6835" pos:column="52">::</op:operator><name pos:line="6835" pos:column="54">Clamp</name></name><argument_list pos:line="6835" pos:column="59">(<argument><expr><name pos:line="6835" pos:column="60">lineDisplay</name> <op:operator pos:line="6835" pos:column="72">-</op:operator> <name pos:line="6835" pos:column="74">visibleSlop</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6835" pos:column="87">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="6835" pos:column="90">MaxScrollPos</name><argument_list pos:line="6835" pos:column="102">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6836" pos:column="33">SetVerticalScrollPos</name><argument_list pos:line="6836" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6837" pos:column="33">Redraw</name><argument_list pos:line="6837" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="6838" pos:column="27">else <if pos:line="6838" pos:column="32">if <condition pos:line="6838" pos:column="35">(<expr><op:operator pos:line="6838" pos:column="36">(</op:operator><name pos:line="6838" pos:column="37">lineDisplay</name> <op:operator pos:line="6838" pos:column="49">&gt;</op:operator> <name pos:line="6838" pos:column="51">topLine</name> <op:operator pos:line="6838" pos:column="59">+</op:operator> <call><name pos:line="6838" pos:column="61">LinesOnScreen</name><argument_list pos:line="6838" pos:column="74">()</argument_list></call> <op:operator pos:line="6838" pos:column="77">-</op:operator> <lit:literal type="number" pos:line="6838" pos:column="79">1</lit:literal><op:operator pos:line="6838" pos:column="80">)</op:operator> <op:operator pos:line="6838" pos:column="82">||</op:operator>
			        <op:operator pos:line="6839" pos:column="33">(</op:operator><op:operator pos:line="6839" pos:column="34">(</op:operator><name pos:line="6839" pos:column="35">visiblePolicy</name> <op:operator pos:line="6839" pos:column="49">&amp;</op:operator> <name pos:line="6839" pos:column="51">VISIBLE_STRICT</name><op:operator pos:line="6839" pos:column="65">)</op:operator> <op:operator pos:line="6839" pos:column="67">&amp;&amp;</op:operator> <op:operator pos:line="6839" pos:column="70">(</op:operator><name pos:line="6839" pos:column="71">lineDisplay</name> <op:operator pos:line="6839" pos:column="83">&gt;</op:operator> <name pos:line="6839" pos:column="85">topLine</name> <op:operator pos:line="6839" pos:column="93">+</op:operator> <call><name pos:line="6839" pos:column="95">LinesOnScreen</name><argument_list pos:line="6839" pos:column="108">()</argument_list></call> <op:operator pos:line="6839" pos:column="111">-</op:operator> <lit:literal type="number" pos:line="6839" pos:column="113">1</lit:literal> <op:operator pos:line="6839" pos:column="115">-</op:operator> <name pos:line="6839" pos:column="117">visibleSlop</name><op:operator pos:line="6839" pos:column="128">)</op:operator><op:operator pos:line="6839" pos:column="129">)</op:operator></expr>)</condition><then pos:line="6839" pos:column="131"> <block pos:line="6839" pos:column="132">{
				<expr_stmt><expr><call><name pos:line="6840" pos:column="33">SetTopLine</name><argument_list pos:line="6840" pos:column="43">(<argument><expr><call><name><name pos:line="6840" pos:column="44">Platform</name><op:operator pos:line="6840" pos:column="52">::</op:operator><name pos:line="6840" pos:column="54">Clamp</name></name><argument_list pos:line="6840" pos:column="59">(<argument><expr><name pos:line="6840" pos:column="60">lineDisplay</name> <op:operator pos:line="6840" pos:column="72">-</op:operator> <call><name pos:line="6840" pos:column="74">LinesOnScreen</name><argument_list pos:line="6840" pos:column="87">()</argument_list></call> <op:operator pos:line="6840" pos:column="90">+</op:operator> <lit:literal type="number" pos:line="6840" pos:column="92">1</lit:literal> <op:operator pos:line="6840" pos:column="94">+</op:operator> <name pos:line="6840" pos:column="96">visibleSlop</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6840" pos:column="109">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="6840" pos:column="112">MaxScrollPos</name><argument_list pos:line="6840" pos:column="124">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6841" pos:column="33">SetVerticalScrollPos</name><argument_list pos:line="6841" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6842" pos:column="33">Redraw</name><argument_list pos:line="6842" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if></else></if>
		}</block></then> <else pos:line="6844" pos:column="19">else <block pos:line="6844" pos:column="24">{
			<if pos:line="6845" pos:column="25">if <condition pos:line="6845" pos:column="28">(<expr><op:operator pos:line="6845" pos:column="29">(</op:operator><name pos:line="6845" pos:column="30">topLine</name> <op:operator pos:line="6845" pos:column="38">&gt;</op:operator> <name pos:line="6845" pos:column="40">lineDisplay</name><op:operator pos:line="6845" pos:column="51">)</op:operator> <op:operator pos:line="6845" pos:column="53">||</op:operator> <op:operator pos:line="6845" pos:column="56">(</op:operator><name pos:line="6845" pos:column="57">lineDisplay</name> <op:operator pos:line="6845" pos:column="69">&gt;</op:operator> <name pos:line="6845" pos:column="71">topLine</name> <op:operator pos:line="6845" pos:column="79">+</op:operator> <call><name pos:line="6845" pos:column="81">LinesOnScreen</name><argument_list pos:line="6845" pos:column="94">()</argument_list></call> <op:operator pos:line="6845" pos:column="97">-</op:operator> <lit:literal type="number" pos:line="6845" pos:column="99">1</lit:literal><op:operator pos:line="6845" pos:column="100">)</op:operator> <op:operator pos:line="6845" pos:column="102">||</op:operator> <op:operator pos:line="6845" pos:column="105">(</op:operator><name pos:line="6845" pos:column="106">visiblePolicy</name> <op:operator pos:line="6845" pos:column="120">&amp;</op:operator> <name pos:line="6845" pos:column="122">VISIBLE_STRICT</name><op:operator pos:line="6845" pos:column="136">)</op:operator></expr>)</condition><then pos:line="6845" pos:column="138"> <block pos:line="6845" pos:column="139">{
				<expr_stmt><expr><call><name pos:line="6846" pos:column="33">SetTopLine</name><argument_list pos:line="6846" pos:column="43">(<argument><expr><call><name><name pos:line="6846" pos:column="44">Platform</name><op:operator pos:line="6846" pos:column="52">::</op:operator><name pos:line="6846" pos:column="54">Clamp</name></name><argument_list pos:line="6846" pos:column="59">(<argument><expr><name pos:line="6846" pos:column="60">lineDisplay</name> <op:operator pos:line="6846" pos:column="72">-</op:operator> <call><name pos:line="6846" pos:column="74">LinesOnScreen</name><argument_list pos:line="6846" pos:column="87">()</argument_list></call> <op:operator pos:line="6846" pos:column="90">/</op:operator> <lit:literal type="number" pos:line="6846" pos:column="92">2</lit:literal> <op:operator pos:line="6846" pos:column="94">+</op:operator> <lit:literal type="number" pos:line="6846" pos:column="96">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="6846" pos:column="99">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="6846" pos:column="102">MaxScrollPos</name><argument_list pos:line="6846" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6847" pos:column="33">SetVerticalScrollPos</name><argument_list pos:line="6847" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="6848" pos:column="33">Redraw</name><argument_list pos:line="6848" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="6854" pos:column="1">int</name></type> <name><name pos:line="6854" pos:column="5">Editor</name><op:operator pos:line="6854" pos:column="11">::</op:operator><name pos:line="6854" pos:column="13">GetTag</name></name><parameter_list pos:line="6854" pos:column="19">(<param><decl><type><name pos:line="6854" pos:column="20">char</name> <type:modifier pos:line="6854" pos:column="25">*</type:modifier></type><name pos:line="6854" pos:column="26">tagValue</name></decl></param>, <param><decl><type><name pos:line="6854" pos:column="36">int</name></type> <name pos:line="6854" pos:column="40">tagNumber</name></decl></param>)</parameter_list> <block pos:line="6854" pos:column="51">{
	<decl_stmt><decl><type><name pos:line="6855" pos:column="9">char</name></type> <name><name pos:line="6855" pos:column="14">name</name><index pos:line="6855" pos:column="18">[<expr><lit:literal type="number" pos:line="6855" pos:column="19">3</lit:literal></expr>]</index></name> <init pos:line="6855" pos:column="22">= <expr><lit:literal type="string" pos:line="6855" pos:column="24">"\\?"</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="6856" pos:column="9">const</specifier> <name pos:line="6856" pos:column="15">char</name> <type:modifier pos:line="6856" pos:column="20">*</type:modifier></type><name pos:line="6856" pos:column="21">text</name> <init pos:line="6856" pos:column="26">= <expr><lit:literal type="number" pos:line="6856" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="6857" pos:column="9">int</name></type> <name pos:line="6857" pos:column="13">length</name> <init pos:line="6857" pos:column="20">= <expr><lit:literal type="number" pos:line="6857" pos:column="22">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="6858" pos:column="9">if <condition pos:line="6858" pos:column="12">(<expr><op:operator pos:line="6858" pos:column="13">(</op:operator><name pos:line="6858" pos:column="14">tagNumber</name> <op:operator pos:line="6858" pos:column="24">&gt;=</op:operator> <lit:literal type="number" pos:line="6858" pos:column="27">1</lit:literal><op:operator pos:line="6858" pos:column="28">)</op:operator> <op:operator pos:line="6858" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="6858" pos:column="33">(</op:operator><name pos:line="6858" pos:column="34">tagNumber</name> <op:operator pos:line="6858" pos:column="44">&lt;=</op:operator> <lit:literal type="number" pos:line="6858" pos:column="47">9</lit:literal><op:operator pos:line="6858" pos:column="48">)</op:operator></expr>)</condition><then pos:line="6858" pos:column="50"> <block pos:line="6858" pos:column="51">{
		<expr_stmt><expr><name><name pos:line="6859" pos:column="17">name</name><index pos:line="6859" pos:column="21">[<expr><lit:literal type="number" pos:line="6859" pos:column="22">1</lit:literal></expr>]</index></name> <op:operator pos:line="6859" pos:column="25">=</op:operator> <call><name><name pos:line="6859" pos:column="27">static_cast</name><argument_list pos:line="6859" pos:column="38">&lt;<argument><expr><name pos:line="6859" pos:column="39">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="6859" pos:column="44">(<argument><expr><name pos:line="6859" pos:column="45">tagNumber</name> <op:operator pos:line="6859" pos:column="55">+</op:operator> <lit:literal type="char" pos:line="6859" pos:column="57">'0'</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="6860" pos:column="17">length</name> <op:operator pos:line="6860" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="6860" pos:column="26">2</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="6861" pos:column="17">text</name> <op:operator pos:line="6861" pos:column="22">=</op:operator> <call><name><name pos:line="6861" pos:column="24">pdoc</name><op:operator pos:line="6861" pos:column="28">-&gt;</op:operator><name pos:line="6861" pos:column="30">SubstituteByPosition</name></name><argument_list pos:line="6861" pos:column="50">(<argument><expr><name pos:line="6861" pos:column="51">name</name></expr></argument>, <argument><expr><op:operator pos:line="6861" pos:column="57">&amp;</op:operator><name pos:line="6861" pos:column="58">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="6863" pos:column="9">if <condition pos:line="6863" pos:column="12">(<expr><name pos:line="6863" pos:column="13">tagValue</name></expr>)</condition><then pos:line="6863" pos:column="22"> <block pos:line="6863" pos:column="23">{
		<if pos:line="6864" pos:column="17">if <condition pos:line="6864" pos:column="20">(<expr><name pos:line="6864" pos:column="21">text</name></expr>)</condition><then pos:line="6864" pos:column="26">
			<expr_stmt><expr><call><name pos:line="6865" pos:column="25">memcpy</name><argument_list pos:line="6865" pos:column="31">(<argument><expr><name pos:line="6865" pos:column="32">tagValue</name></expr></argument>, <argument><expr><name pos:line="6865" pos:column="42">text</name></expr></argument>, <argument><expr><name pos:line="6865" pos:column="48">length</name> <op:operator pos:line="6865" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="6865" pos:column="57">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="6866" pos:column="17">else
			<expr_stmt><expr><op:operator pos:line="6867" pos:column="25">*</op:operator><name pos:line="6867" pos:column="26">tagValue</name> <op:operator pos:line="6867" pos:column="35">=</op:operator> <lit:literal type="char" pos:line="6867" pos:column="37">'\0'</lit:literal></expr>;</expr_stmt></else></if>
	}</block></then></if>
	<return pos:line="6869" pos:column="9">return <expr><name pos:line="6869" pos:column="16">length</name></expr>;</return>
}</block></function>

<function><type><name pos:line="6872" pos:column="1">int</name></type> <name><name pos:line="6872" pos:column="5">Editor</name><op:operator pos:line="6872" pos:column="11">::</op:operator><name pos:line="6872" pos:column="13">ReplaceTarget</name></name><parameter_list pos:line="6872" pos:column="26">(<param><decl><type><name pos:line="6872" pos:column="27">bool</name></type> <name pos:line="6872" pos:column="32">replacePatterns</name></decl></param>, <param><decl><type><specifier pos:line="6872" pos:column="49">const</specifier> <name pos:line="6872" pos:column="55">char</name> <type:modifier pos:line="6872" pos:column="60">*</type:modifier></type><name pos:line="6872" pos:column="61">text</name></decl></param>, <param><decl><type><name pos:line="6872" pos:column="67">int</name></type> <name pos:line="6872" pos:column="71">length</name></decl></param>)</parameter_list> <block pos:line="6872" pos:column="79">{
	<function_decl><type><name pos:line="6873" pos:column="9">UndoGroup</name></type> <name pos:line="6873" pos:column="19">ug</name><parameter_list pos:line="6873" pos:column="21">(<param><decl><type><name pos:line="6873" pos:column="22">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
	<if pos:line="6874" pos:column="9">if <condition pos:line="6874" pos:column="12">(<expr><name pos:line="6874" pos:column="13">length</name> <op:operator pos:line="6874" pos:column="20">==</op:operator> <op:operator pos:line="6874" pos:column="23">-</op:operator><lit:literal type="number" pos:line="6874" pos:column="24">1</lit:literal></expr>)</condition><then pos:line="6874" pos:column="26">
		<expr_stmt><expr><name pos:line="6875" pos:column="17">length</name> <op:operator pos:line="6875" pos:column="24">=</op:operator> <call><name pos:line="6875" pos:column="26">istrlen</name><argument_list pos:line="6875" pos:column="33">(<argument><expr><name pos:line="6875" pos:column="34">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="6876" pos:column="9">if <condition pos:line="6876" pos:column="12">(<expr><name pos:line="6876" pos:column="13">replacePatterns</name></expr>)</condition><then pos:line="6876" pos:column="29"> <block pos:line="6876" pos:column="30">{
		<expr_stmt><expr><name pos:line="6877" pos:column="17">text</name> <op:operator pos:line="6877" pos:column="22">=</op:operator> <call><name><name pos:line="6877" pos:column="24">pdoc</name><op:operator pos:line="6877" pos:column="28">-&gt;</op:operator><name pos:line="6877" pos:column="30">SubstituteByPosition</name></name><argument_list pos:line="6877" pos:column="50">(<argument><expr><name pos:line="6877" pos:column="51">text</name></expr></argument>, <argument><expr><op:operator pos:line="6877" pos:column="57">&amp;</op:operator><name pos:line="6877" pos:column="58">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="6878" pos:column="17">if <condition pos:line="6878" pos:column="20">(<expr><op:operator pos:line="6878" pos:column="21">!</op:operator><name pos:line="6878" pos:column="22">text</name></expr>)</condition><then pos:line="6878" pos:column="27"> <block pos:line="6878" pos:column="28">{
			<return pos:line="6879" pos:column="25">return <expr><lit:literal type="number" pos:line="6879" pos:column="32">0</lit:literal></expr>;</return>
		}</block></then></if>
	}</block></then></if>
	<if pos:line="6882" pos:column="9">if <condition pos:line="6882" pos:column="12">(<expr><name pos:line="6882" pos:column="13">targetStart</name> <op:operator pos:line="6882" pos:column="25">!=</op:operator> <name pos:line="6882" pos:column="28">targetEnd</name></expr>)</condition><then pos:line="6882" pos:column="38">
		<expr_stmt><expr><call><name><name pos:line="6883" pos:column="17">pdoc</name><op:operator pos:line="6883" pos:column="21">-&gt;</op:operator><name pos:line="6883" pos:column="23">DeleteChars</name></name><argument_list pos:line="6883" pos:column="34">(<argument><expr><name pos:line="6883" pos:column="35">targetStart</name></expr></argument>, <argument><expr><name pos:line="6883" pos:column="48">targetEnd</name> <op:operator pos:line="6883" pos:column="58">-</op:operator> <name pos:line="6883" pos:column="60">targetStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><name pos:line="6884" pos:column="9">targetEnd</name> <op:operator pos:line="6884" pos:column="19">=</op:operator> <name pos:line="6884" pos:column="21">targetStart</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="6885" pos:column="9">pdoc</name><op:operator pos:line="6885" pos:column="13">-&gt;</op:operator><name pos:line="6885" pos:column="15">InsertString</name></name><argument_list pos:line="6885" pos:column="27">(<argument><expr><name pos:line="6885" pos:column="28">targetStart</name></expr></argument>, <argument><expr><name pos:line="6885" pos:column="41">text</name></expr></argument>, <argument><expr><name pos:line="6885" pos:column="47">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="6886" pos:column="9">targetEnd</name> <op:operator pos:line="6886" pos:column="19">=</op:operator> <name pos:line="6886" pos:column="21">targetStart</name> <op:operator pos:line="6886" pos:column="33">+</op:operator> <name pos:line="6886" pos:column="35">length</name></expr>;</expr_stmt>
	<return pos:line="6887" pos:column="9">return <expr><name pos:line="6887" pos:column="16">length</name></expr>;</return>
}</block></function>

<function><type><name pos:line="6890" pos:column="1">bool</name></type> <name><name pos:line="6890" pos:column="6">Editor</name><op:operator pos:line="6890" pos:column="12">::</op:operator><name pos:line="6890" pos:column="14">IsUnicodeMode</name></name><parameter_list pos:line="6890" pos:column="27">()</parameter_list> <specifier pos:line="6890" pos:column="30">const</specifier> <block pos:line="6890" pos:column="36">{
	<return pos:line="6891" pos:column="9">return <expr><name pos:line="6891" pos:column="16">pdoc</name> <op:operator pos:line="6891" pos:column="21">&amp;&amp;</op:operator> <op:operator pos:line="6891" pos:column="24">(</op:operator><name pos:line="6891" pos:column="25">SC_CP_UTF8</name> <op:operator pos:line="6891" pos:column="36">==</op:operator> <name><name pos:line="6891" pos:column="39">pdoc</name><op:operator pos:line="6891" pos:column="43">-&gt;</op:operator><name pos:line="6891" pos:column="45">dbcsCodePage</name></name><op:operator pos:line="6891" pos:column="57">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="6894" pos:column="1">int</name></type> <name><name pos:line="6894" pos:column="5">Editor</name><op:operator pos:line="6894" pos:column="11">::</op:operator><name pos:line="6894" pos:column="13">CodePage</name></name><parameter_list pos:line="6894" pos:column="21">()</parameter_list> <specifier pos:line="6894" pos:column="24">const</specifier> <block pos:line="6894" pos:column="30">{
	<if pos:line="6895" pos:column="9">if <condition pos:line="6895" pos:column="12">(<expr><name pos:line="6895" pos:column="13">pdoc</name></expr>)</condition><then pos:line="6895" pos:column="18">
		<return pos:line="6896" pos:column="17">return <expr><name><name pos:line="6896" pos:column="24">pdoc</name><op:operator pos:line="6896" pos:column="28">-&gt;</op:operator><name pos:line="6896" pos:column="30">dbcsCodePage</name></name></expr>;</return></then>
	<else pos:line="6897" pos:column="9">else
		<return pos:line="6898" pos:column="17">return <expr><lit:literal type="number" pos:line="6898" pos:column="24">0</lit:literal></expr>;</return></else></if>
}</block></function>

<function><type><name pos:line="6901" pos:column="1">int</name></type> <name><name pos:line="6901" pos:column="5">Editor</name><op:operator pos:line="6901" pos:column="11">::</op:operator><name pos:line="6901" pos:column="13">WrapCount</name></name><parameter_list pos:line="6901" pos:column="22">(<param><decl><type><name pos:line="6901" pos:column="23">int</name></type> <name pos:line="6901" pos:column="27">line</name></decl></param>)</parameter_list> <block pos:line="6901" pos:column="33">{
	<function_decl><type><name pos:line="6902" pos:column="9">AutoSurface</name></type> <name pos:line="6902" pos:column="21">surface</name><parameter_list pos:line="6902" pos:column="28">(<param><decl><type><name pos:line="6902" pos:column="29">this</name></type></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="6903" pos:column="9">AutoLineLayout</name></type> <name pos:line="6903" pos:column="24">ll</name><argument_list pos:line="6903" pos:column="26">(<argument><expr><name pos:line="6903" pos:column="27">llc</name></expr></argument>, <argument><expr><call><name pos:line="6903" pos:column="32">RetrieveLineLayout</name><argument_list pos:line="6903" pos:column="50">(<argument><expr><name pos:line="6903" pos:column="51">line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>

	<if pos:line="6905" pos:column="9">if <condition pos:line="6905" pos:column="12">(<expr><name pos:line="6905" pos:column="13">surface</name> <op:operator pos:line="6905" pos:column="21">&amp;&amp;</op:operator> <name pos:line="6905" pos:column="24">ll</name></expr>)</condition><then pos:line="6905" pos:column="27"> <block pos:line="6905" pos:column="28">{
		<expr_stmt><expr><call><name pos:line="6906" pos:column="17">LayoutLine</name><argument_list pos:line="6906" pos:column="27">(<argument><expr><name pos:line="6906" pos:column="28">line</name></expr></argument>, <argument><expr><name pos:line="6906" pos:column="34">surface</name></expr></argument>, <argument><expr><name pos:line="6906" pos:column="43">vs</name></expr></argument>, <argument><expr><name pos:line="6906" pos:column="47">ll</name></expr></argument>, <argument><expr><name pos:line="6906" pos:column="51">wrapWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="6907" pos:column="17">return <expr><name><name pos:line="6907" pos:column="24">ll</name><op:operator pos:line="6907" pos:column="26">-&gt;</op:operator><name pos:line="6907" pos:column="28">lines</name></name></expr>;</return>
	}</block></then> <else pos:line="6908" pos:column="11">else <block pos:line="6908" pos:column="16">{
		<return pos:line="6909" pos:column="17">return <expr><lit:literal type="number" pos:line="6909" pos:column="24">1</lit:literal></expr>;</return>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="6913" pos:column="1">void</name></type> <name><name pos:line="6913" pos:column="6">Editor</name><op:operator pos:line="6913" pos:column="12">::</op:operator><name pos:line="6913" pos:column="14">AddStyledText</name></name><parameter_list pos:line="6913" pos:column="27">(<param><decl><type><name pos:line="6913" pos:column="28">char</name> <type:modifier pos:line="6913" pos:column="33">*</type:modifier></type><name pos:line="6913" pos:column="34">buffer</name></decl></param>, <param><decl><type><name pos:line="6913" pos:column="42">int</name></type> <name pos:line="6913" pos:column="46">appendLength</name></decl></param>)</parameter_list> <block pos:line="6913" pos:column="60">{
	<comment type="line" pos:line="6914" pos:column="9">// The buffer consists of alternating character bytes and style bytes</comment>
	<decl_stmt><decl><type><name pos:line="6915" pos:column="9">size_t</name></type> <name pos:line="6915" pos:column="16">textLength</name> <init pos:line="6915" pos:column="27">= <expr><name pos:line="6915" pos:column="29">appendLength</name> <op:operator pos:line="6915" pos:column="42">/</op:operator> <lit:literal type="number" pos:line="6915" pos:column="44">2</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="6916" pos:column="9">char</name> <type:modifier pos:line="6916" pos:column="14">*</type:modifier></type><name pos:line="6916" pos:column="15">text</name> <init pos:line="6916" pos:column="20">= <expr><op:operator pos:line="6916" pos:column="22">new</op:operator> <name><name pos:line="6916" pos:column="26">char</name><index pos:line="6916" pos:column="30">[<expr><name pos:line="6916" pos:column="31">textLength</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="6917" pos:column="9">size_t</name></type> <name pos:line="6917" pos:column="16">i</name></decl>;</decl_stmt>
	<for pos:line="6918" pos:column="9">for (<init><expr><name pos:line="6918" pos:column="14">i</name> <op:operator pos:line="6918" pos:column="16">=</op:operator> <lit:literal type="number" pos:line="6918" pos:column="18">0</lit:literal></expr>;</init> <condition><expr><name pos:line="6918" pos:column="21">i</name> <op:operator pos:line="6918" pos:column="23">&lt;</op:operator> <name pos:line="6918" pos:column="25">textLength</name></expr>;</condition> <incr><expr><name pos:line="6918" pos:column="37">i</name><op:operator pos:line="6918" pos:column="38">++</op:operator></expr></incr>) <block pos:line="6918" pos:column="42">{
		<expr_stmt><expr><name><name pos:line="6919" pos:column="17">text</name><index pos:line="6919" pos:column="21">[<expr><name pos:line="6919" pos:column="22">i</name></expr>]</index></name> <op:operator pos:line="6919" pos:column="25">=</op:operator> <name><name pos:line="6919" pos:column="27">buffer</name><index pos:line="6919" pos:column="33">[<expr><name pos:line="6919" pos:column="34">i</name><op:operator pos:line="6919" pos:column="35">*</op:operator><lit:literal type="number" pos:line="6919" pos:column="36">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="6921" pos:column="9">pdoc</name><op:operator pos:line="6921" pos:column="13">-&gt;</op:operator><name pos:line="6921" pos:column="15">InsertString</name></name><argument_list pos:line="6921" pos:column="27">(<argument><expr><call><name pos:line="6921" pos:column="28">CurrentPosition</name><argument_list pos:line="6921" pos:column="43">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="6921" pos:column="47">text</name></expr></argument>, <argument><expr><name pos:line="6921" pos:column="53">textLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="6922" pos:column="9">for (<init><expr><name pos:line="6922" pos:column="14">i</name> <op:operator pos:line="6922" pos:column="16">=</op:operator> <lit:literal type="number" pos:line="6922" pos:column="18">0</lit:literal></expr>;</init> <condition><expr><name pos:line="6922" pos:column="21">i</name> <op:operator pos:line="6922" pos:column="23">&lt;</op:operator> <name pos:line="6922" pos:column="25">textLength</name></expr>;</condition> <incr><expr><name pos:line="6922" pos:column="37">i</name><op:operator pos:line="6922" pos:column="38">++</op:operator></expr></incr>) <block pos:line="6922" pos:column="42">{
		<expr_stmt><expr><name><name pos:line="6923" pos:column="17">text</name><index pos:line="6923" pos:column="21">[<expr><name pos:line="6923" pos:column="22">i</name></expr>]</index></name> <op:operator pos:line="6923" pos:column="25">=</op:operator> <name><name pos:line="6923" pos:column="27">buffer</name><index pos:line="6923" pos:column="33">[<expr><name pos:line="6923" pos:column="34">i</name><op:operator pos:line="6923" pos:column="35">*</op:operator><lit:literal type="number" pos:line="6923" pos:column="36">2</lit:literal><op:operator pos:line="6923" pos:column="37">+</op:operator><lit:literal type="number" pos:line="6923" pos:column="38">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="6925" pos:column="9">pdoc</name><op:operator pos:line="6925" pos:column="13">-&gt;</op:operator><name pos:line="6925" pos:column="15">StartStyling</name></name><argument_list pos:line="6925" pos:column="27">(<argument><expr><call><name pos:line="6925" pos:column="28">CurrentPosition</name><argument_list pos:line="6925" pos:column="43">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6925" pos:column="47">static_cast</name><argument_list pos:line="6925" pos:column="58">&lt;<argument><expr><name pos:line="6925" pos:column="59">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="6925" pos:column="64">(<argument><expr><lit:literal type="number" pos:line="6925" pos:column="65">0xff</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="6926" pos:column="9">pdoc</name><op:operator pos:line="6926" pos:column="13">-&gt;</op:operator><name pos:line="6926" pos:column="15">SetStyles</name></name><argument_list pos:line="6926" pos:column="24">(<argument><expr><name pos:line="6926" pos:column="25">textLength</name></expr></argument>, <argument><expr><name pos:line="6926" pos:column="37">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="6927" pos:column="9">delete</op:operator> <index pos:line="6927" pos:column="16">[]</index><name pos:line="6927" pos:column="18">text</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="6928" pos:column="9">SetEmptySelection</name><argument_list pos:line="6928" pos:column="26">(<argument><expr><call><name><name pos:line="6928" pos:column="27">sel</name><op:operator pos:line="6928" pos:column="30">.</op:operator><name pos:line="6928" pos:column="31">MainCaret</name></name><argument_list pos:line="6928" pos:column="40">()</argument_list></call> <op:operator pos:line="6928" pos:column="43">+</op:operator> <name pos:line="6928" pos:column="45">textLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier pos:line="6931" pos:column="1">static</specifier> <name pos:line="6931" pos:column="8">bool</name></type> <name pos:line="6931" pos:column="13">ValidMargin</name><parameter_list pos:line="6931" pos:column="24">(<param><decl><type><name pos:line="6931" pos:column="25">unsigned</name> <name pos:line="6931" pos:column="34">long</name></type> <name pos:line="6931" pos:column="39">wParam</name></decl></param>)</parameter_list> <block pos:line="6931" pos:column="47">{
	<return pos:line="6932" pos:column="9">return <expr><name pos:line="6932" pos:column="16">wParam</name> <op:operator pos:line="6932" pos:column="23">&lt;</op:operator> <name><name pos:line="6932" pos:column="25">ViewStyle</name><op:operator pos:line="6932" pos:column="34">::</op:operator><name pos:line="6932" pos:column="36">margins</name></name></expr>;</return>
}</block></function>

<function><type><specifier pos:line="6935" pos:column="1">static</specifier> <name pos:line="6935" pos:column="8">char</name> <type:modifier pos:line="6935" pos:column="13">*</type:modifier></type><name pos:line="6935" pos:column="14">CharPtrFromSPtr</name><parameter_list pos:line="6935" pos:column="29">(<param><decl><type><name pos:line="6935" pos:column="30">sptr_t</name></type> <name pos:line="6935" pos:column="37">lParam</name></decl></param>)</parameter_list> <block pos:line="6935" pos:column="45">{
	<return pos:line="6936" pos:column="9">return <expr><call><name><name pos:line="6936" pos:column="16">reinterpret_cast</name><argument_list pos:line="6936" pos:column="32">&lt;<argument><expr><name pos:line="6936" pos:column="33">char</name> <op:operator pos:line="6936" pos:column="38">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="6936" pos:column="40">(<argument><expr><name pos:line="6936" pos:column="41">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="6939" pos:column="1">void</name></type> <name><name pos:line="6939" pos:column="6">Editor</name><op:operator pos:line="6939" pos:column="12">::</op:operator><name pos:line="6939" pos:column="14">StyleSetMessage</name></name><parameter_list pos:line="6939" pos:column="29">(<param><decl><type><name pos:line="6939" pos:column="30">unsigned</name> <name pos:line="6939" pos:column="39">int</name></type> <name pos:line="6939" pos:column="43">iMessage</name></decl></param>, <param><decl><type><name pos:line="6939" pos:column="53">uptr_t</name></type> <name pos:line="6939" pos:column="60">wParam</name></decl></param>, <param><decl><type><name pos:line="6939" pos:column="68">sptr_t</name></type> <name pos:line="6939" pos:column="75">lParam</name></decl></param>)</parameter_list> <block pos:line="6939" pos:column="83">{
	<expr_stmt><expr><call><name><name pos:line="6940" pos:column="9">vs</name><op:operator pos:line="6940" pos:column="11">.</op:operator><name pos:line="6940" pos:column="12">EnsureStyle</name></name><argument_list pos:line="6940" pos:column="23">(<argument><expr><name pos:line="6940" pos:column="24">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<switch pos:line="6941" pos:column="9">switch <condition pos:line="6941" pos:column="16">(<expr><name pos:line="6941" pos:column="17">iMessage</name></expr>)</condition> <block pos:line="6941" pos:column="27">{
	<case pos:line="6942" pos:column="9">case <expr><name pos:line="6942" pos:column="14">SCI_STYLESETFORE</name></expr>:
		<expr_stmt><expr><name><name pos:line="6943" pos:column="17">vs</name><op:operator pos:line="6943" pos:column="19">.</op:operator><name pos:line="6943" pos:column="20">styles</name><index pos:line="6943" pos:column="26">[<expr><name pos:line="6943" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6943" pos:column="34">.</op:operator><name><name pos:line="6943" pos:column="35">fore</name><op:operator pos:line="6943" pos:column="39">.</op:operator><name pos:line="6943" pos:column="40">desired</name></name> <op:operator pos:line="6943" pos:column="48">=</op:operator> <call><name pos:line="6943" pos:column="50">ColourDesired</name><argument_list pos:line="6943" pos:column="63">(<argument><expr><name pos:line="6943" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="6944" pos:column="17">break;</break>
	</case><case pos:line="6945" pos:column="9">case <expr><name pos:line="6945" pos:column="14">SCI_STYLESETBACK</name></expr>:
		<expr_stmt><expr><name><name pos:line="6946" pos:column="17">vs</name><op:operator pos:line="6946" pos:column="19">.</op:operator><name pos:line="6946" pos:column="20">styles</name><index pos:line="6946" pos:column="26">[<expr><name pos:line="6946" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6946" pos:column="34">.</op:operator><name><name pos:line="6946" pos:column="35">back</name><op:operator pos:line="6946" pos:column="39">.</op:operator><name pos:line="6946" pos:column="40">desired</name></name> <op:operator pos:line="6946" pos:column="48">=</op:operator> <call><name pos:line="6946" pos:column="50">ColourDesired</name><argument_list pos:line="6946" pos:column="63">(<argument><expr><name pos:line="6946" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="6947" pos:column="17">break;</break>
	</case><case pos:line="6948" pos:column="9">case <expr><name pos:line="6948" pos:column="14">SCI_STYLESETBOLD</name></expr>:
		<expr_stmt><expr><name><name pos:line="6949" pos:column="17">vs</name><op:operator pos:line="6949" pos:column="19">.</op:operator><name pos:line="6949" pos:column="20">styles</name><index pos:line="6949" pos:column="26">[<expr><name pos:line="6949" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6949" pos:column="34">.</op:operator><name pos:line="6949" pos:column="35">bold</name> <op:operator pos:line="6949" pos:column="40">=</op:operator> <name pos:line="6949" pos:column="42">lParam</name> <op:operator pos:line="6949" pos:column="49">!=</op:operator> <lit:literal type="number" pos:line="6949" pos:column="52">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="6950" pos:column="17">break;</break>
	</case><case pos:line="6951" pos:column="9">case <expr><name pos:line="6951" pos:column="14">SCI_STYLESETITALIC</name></expr>:
		<expr_stmt><expr><name><name pos:line="6952" pos:column="17">vs</name><op:operator pos:line="6952" pos:column="19">.</op:operator><name pos:line="6952" pos:column="20">styles</name><index pos:line="6952" pos:column="26">[<expr><name pos:line="6952" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6952" pos:column="34">.</op:operator><name pos:line="6952" pos:column="35">italic</name> <op:operator pos:line="6952" pos:column="42">=</op:operator> <name pos:line="6952" pos:column="44">lParam</name> <op:operator pos:line="6952" pos:column="51">!=</op:operator> <lit:literal type="number" pos:line="6952" pos:column="54">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="6953" pos:column="17">break;</break>
	</case><case pos:line="6954" pos:column="9">case <expr><name pos:line="6954" pos:column="14">SCI_STYLESETEOLFILLED</name></expr>:
		<expr_stmt><expr><name><name pos:line="6955" pos:column="17">vs</name><op:operator pos:line="6955" pos:column="19">.</op:operator><name pos:line="6955" pos:column="20">styles</name><index pos:line="6955" pos:column="26">[<expr><name pos:line="6955" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6955" pos:column="34">.</op:operator><name pos:line="6955" pos:column="35">eolFilled</name> <op:operator pos:line="6955" pos:column="45">=</op:operator> <name pos:line="6955" pos:column="47">lParam</name> <op:operator pos:line="6955" pos:column="54">!=</op:operator> <lit:literal type="number" pos:line="6955" pos:column="57">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="6956" pos:column="17">break;</break>
	</case><case pos:line="6957" pos:column="9">case <expr><name pos:line="6957" pos:column="14">SCI_STYLESETSIZE</name></expr>:
		<expr_stmt><expr><name><name pos:line="6958" pos:column="17">vs</name><op:operator pos:line="6958" pos:column="19">.</op:operator><name pos:line="6958" pos:column="20">styles</name><index pos:line="6958" pos:column="26">[<expr><name pos:line="6958" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6958" pos:column="34">.</op:operator><name pos:line="6958" pos:column="35">size</name> <op:operator pos:line="6958" pos:column="40">=</op:operator> <name pos:line="6958" pos:column="42">lParam</name></expr>;</expr_stmt>
		<break pos:line="6959" pos:column="17">break;</break>
	</case><case pos:line="6960" pos:column="9">case <expr><name pos:line="6960" pos:column="14">SCI_STYLESETFONT</name></expr>:
		<if pos:line="6961" pos:column="17">if <condition pos:line="6961" pos:column="20">(<expr><name pos:line="6961" pos:column="21">lParam</name> <op:operator pos:line="6961" pos:column="28">!=</op:operator> <lit:literal type="number" pos:line="6961" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="6961" pos:column="33"> <block pos:line="6961" pos:column="34">{
			<expr_stmt><expr><call><name><name pos:line="6962" pos:column="25">vs</name><op:operator pos:line="6962" pos:column="27">.</op:operator><name pos:line="6962" pos:column="28">SetStyleFontName</name></name><argument_list pos:line="6962" pos:column="44">(<argument><expr><name pos:line="6962" pos:column="45">wParam</name></expr></argument>, <argument><expr><call><name pos:line="6962" pos:column="53">CharPtrFromSPtr</name><argument_list pos:line="6962" pos:column="68">(<argument><expr><name pos:line="6962" pos:column="69">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="6964" pos:column="17">break;</break>
	</case><case pos:line="6965" pos:column="9">case <expr><name pos:line="6965" pos:column="14">SCI_STYLESETUNDERLINE</name></expr>:
		<expr_stmt><expr><name><name pos:line="6966" pos:column="17">vs</name><op:operator pos:line="6966" pos:column="19">.</op:operator><name pos:line="6966" pos:column="20">styles</name><index pos:line="6966" pos:column="26">[<expr><name pos:line="6966" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6966" pos:column="34">.</op:operator><name pos:line="6966" pos:column="35">underline</name> <op:operator pos:line="6966" pos:column="45">=</op:operator> <name pos:line="6966" pos:column="47">lParam</name> <op:operator pos:line="6966" pos:column="54">!=</op:operator> <lit:literal type="number" pos:line="6966" pos:column="57">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="6967" pos:column="17">break;</break>
	</case><case pos:line="6968" pos:column="9">case <expr><name pos:line="6968" pos:column="14">SCI_STYLESETCASE</name></expr>:
		<expr_stmt><expr><name><name pos:line="6969" pos:column="17">vs</name><op:operator pos:line="6969" pos:column="19">.</op:operator><name pos:line="6969" pos:column="20">styles</name><index pos:line="6969" pos:column="26">[<expr><name pos:line="6969" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6969" pos:column="34">.</op:operator><name pos:line="6969" pos:column="35">caseForce</name> <op:operator pos:line="6969" pos:column="45">=</op:operator> <call><name><name pos:line="6969" pos:column="47">static_cast</name><argument_list pos:line="6969" pos:column="58">&lt;<argument><expr><name><name pos:line="6969" pos:column="59">Style</name><op:operator pos:line="6969" pos:column="64">::</op:operator><name pos:line="6969" pos:column="66">ecaseForced</name></name></expr></argument>&gt;</argument_list></name><argument_list pos:line="6969" pos:column="78">(<argument><expr><name pos:line="6969" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="6970" pos:column="17">break;</break>
	</case><case pos:line="6971" pos:column="9">case <expr><name pos:line="6971" pos:column="14">SCI_STYLESETCHARACTERSET</name></expr>:
		<expr_stmt><expr><name><name pos:line="6972" pos:column="17">vs</name><op:operator pos:line="6972" pos:column="19">.</op:operator><name pos:line="6972" pos:column="20">styles</name><index pos:line="6972" pos:column="26">[<expr><name pos:line="6972" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6972" pos:column="34">.</op:operator><name pos:line="6972" pos:column="35">characterSet</name> <op:operator pos:line="6972" pos:column="48">=</op:operator> <name pos:line="6972" pos:column="50">lParam</name></expr>;</expr_stmt>
		<break pos:line="6973" pos:column="17">break;</break>
	</case><case pos:line="6974" pos:column="9">case <expr><name pos:line="6974" pos:column="14">SCI_STYLESETVISIBLE</name></expr>:
		<expr_stmt><expr><name><name pos:line="6975" pos:column="17">vs</name><op:operator pos:line="6975" pos:column="19">.</op:operator><name pos:line="6975" pos:column="20">styles</name><index pos:line="6975" pos:column="26">[<expr><name pos:line="6975" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6975" pos:column="34">.</op:operator><name pos:line="6975" pos:column="35">visible</name> <op:operator pos:line="6975" pos:column="43">=</op:operator> <name pos:line="6975" pos:column="45">lParam</name> <op:operator pos:line="6975" pos:column="52">!=</op:operator> <lit:literal type="number" pos:line="6975" pos:column="55">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="6976" pos:column="17">break;</break>
	</case><case pos:line="6977" pos:column="9">case <expr><name pos:line="6977" pos:column="14">SCI_STYLESETCHANGEABLE</name></expr>:
		<expr_stmt><expr><name><name pos:line="6978" pos:column="17">vs</name><op:operator pos:line="6978" pos:column="19">.</op:operator><name pos:line="6978" pos:column="20">styles</name><index pos:line="6978" pos:column="26">[<expr><name pos:line="6978" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6978" pos:column="34">.</op:operator><name pos:line="6978" pos:column="35">changeable</name> <op:operator pos:line="6978" pos:column="46">=</op:operator> <name pos:line="6978" pos:column="48">lParam</name> <op:operator pos:line="6978" pos:column="55">!=</op:operator> <lit:literal type="number" pos:line="6978" pos:column="58">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="6979" pos:column="17">break;</break>
	</case><case pos:line="6980" pos:column="9">case <expr><name pos:line="6980" pos:column="14">SCI_STYLESETHOTSPOT</name></expr>:
		<expr_stmt><expr><name><name pos:line="6981" pos:column="17">vs</name><op:operator pos:line="6981" pos:column="19">.</op:operator><name pos:line="6981" pos:column="20">styles</name><index pos:line="6981" pos:column="26">[<expr><name pos:line="6981" pos:column="27">wParam</name></expr>]</index></name><op:operator pos:line="6981" pos:column="34">.</op:operator><name pos:line="6981" pos:column="35">hotspot</name> <op:operator pos:line="6981" pos:column="43">=</op:operator> <name pos:line="6981" pos:column="45">lParam</name> <op:operator pos:line="6981" pos:column="52">!=</op:operator> <lit:literal type="number" pos:line="6981" pos:column="55">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="6982" pos:column="17">break;</break>
	</case>}</block></switch>
	<expr_stmt><expr><call><name pos:line="6984" pos:column="9">InvalidateStyleRedraw</name><argument_list pos:line="6984" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="6987" pos:column="1">sptr_t</name></type> <name><name pos:line="6987" pos:column="8">Editor</name><op:operator pos:line="6987" pos:column="14">::</op:operator><name pos:line="6987" pos:column="16">StyleGetMessage</name></name><parameter_list pos:line="6987" pos:column="31">(<param><decl><type><name pos:line="6987" pos:column="32">unsigned</name> <name pos:line="6987" pos:column="41">int</name></type> <name pos:line="6987" pos:column="45">iMessage</name></decl></param>, <param><decl><type><name pos:line="6987" pos:column="55">uptr_t</name></type> <name pos:line="6987" pos:column="62">wParam</name></decl></param>, <param><decl><type><name pos:line="6987" pos:column="70">sptr_t</name></type> <name pos:line="6987" pos:column="77">lParam</name></decl></param>)</parameter_list> <block pos:line="6987" pos:column="85">{
	<expr_stmt><expr><call><name><name pos:line="6988" pos:column="9">vs</name><op:operator pos:line="6988" pos:column="11">.</op:operator><name pos:line="6988" pos:column="12">EnsureStyle</name></name><argument_list pos:line="6988" pos:column="23">(<argument><expr><name pos:line="6988" pos:column="24">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<switch pos:line="6989" pos:column="9">switch <condition pos:line="6989" pos:column="16">(<expr><name pos:line="6989" pos:column="17">iMessage</name></expr>)</condition> <block pos:line="6989" pos:column="27">{
	<case pos:line="6990" pos:column="9">case <expr><name pos:line="6990" pos:column="14">SCI_STYLEGETFORE</name></expr>:
		<return pos:line="6991" pos:column="17">return <expr><name><name pos:line="6991" pos:column="24">vs</name><op:operator pos:line="6991" pos:column="26">.</op:operator><name pos:line="6991" pos:column="27">styles</name><index pos:line="6991" pos:column="33">[<expr><name pos:line="6991" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="6991" pos:column="41">.</op:operator><call><name><name pos:line="6991" pos:column="42">fore</name><op:operator pos:line="6991" pos:column="46">.</op:operator><name pos:line="6991" pos:column="47">desired</name><op:operator pos:line="6991" pos:column="54">.</op:operator><name pos:line="6991" pos:column="55">AsLong</name></name><argument_list pos:line="6991" pos:column="61">()</argument_list></call></expr>;</return>
	</case><case pos:line="6992" pos:column="9">case <expr><name pos:line="6992" pos:column="14">SCI_STYLEGETBACK</name></expr>:
		<return pos:line="6993" pos:column="17">return <expr><name><name pos:line="6993" pos:column="24">vs</name><op:operator pos:line="6993" pos:column="26">.</op:operator><name pos:line="6993" pos:column="27">styles</name><index pos:line="6993" pos:column="33">[<expr><name pos:line="6993" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="6993" pos:column="41">.</op:operator><call><name><name pos:line="6993" pos:column="42">back</name><op:operator pos:line="6993" pos:column="46">.</op:operator><name pos:line="6993" pos:column="47">desired</name><op:operator pos:line="6993" pos:column="54">.</op:operator><name pos:line="6993" pos:column="55">AsLong</name></name><argument_list pos:line="6993" pos:column="61">()</argument_list></call></expr>;</return>
	</case><case pos:line="6994" pos:column="9">case <expr><name pos:line="6994" pos:column="14">SCI_STYLEGETBOLD</name></expr>:
		<return pos:line="6995" pos:column="17">return <expr><name><name pos:line="6995" pos:column="24">vs</name><op:operator pos:line="6995" pos:column="26">.</op:operator><name pos:line="6995" pos:column="27">styles</name><index pos:line="6995" pos:column="33">[<expr><name pos:line="6995" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="6995" pos:column="41">.</op:operator><name pos:line="6995" pos:column="42">bold</name> <op:operator pos:line="6995" pos:column="47">?</op:operator> <lit:literal type="number" pos:line="6995" pos:column="49">1</lit:literal> <op:operator pos:line="6995" pos:column="51">:</op:operator> <lit:literal type="number" pos:line="6995" pos:column="53">0</lit:literal></expr>;</return>
	</case><case pos:line="6996" pos:column="9">case <expr><name pos:line="6996" pos:column="14">SCI_STYLEGETITALIC</name></expr>:
		<return pos:line="6997" pos:column="17">return <expr><name><name pos:line="6997" pos:column="24">vs</name><op:operator pos:line="6997" pos:column="26">.</op:operator><name pos:line="6997" pos:column="27">styles</name><index pos:line="6997" pos:column="33">[<expr><name pos:line="6997" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="6997" pos:column="41">.</op:operator><name pos:line="6997" pos:column="42">italic</name> <op:operator pos:line="6997" pos:column="49">?</op:operator> <lit:literal type="number" pos:line="6997" pos:column="51">1</lit:literal> <op:operator pos:line="6997" pos:column="53">:</op:operator> <lit:literal type="number" pos:line="6997" pos:column="55">0</lit:literal></expr>;</return>
	</case><case pos:line="6998" pos:column="9">case <expr><name pos:line="6998" pos:column="14">SCI_STYLEGETEOLFILLED</name></expr>:
		<return pos:line="6999" pos:column="17">return <expr><name><name pos:line="6999" pos:column="24">vs</name><op:operator pos:line="6999" pos:column="26">.</op:operator><name pos:line="6999" pos:column="27">styles</name><index pos:line="6999" pos:column="33">[<expr><name pos:line="6999" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="6999" pos:column="41">.</op:operator><name pos:line="6999" pos:column="42">eolFilled</name> <op:operator pos:line="6999" pos:column="52">?</op:operator> <lit:literal type="number" pos:line="6999" pos:column="54">1</lit:literal> <op:operator pos:line="6999" pos:column="56">:</op:operator> <lit:literal type="number" pos:line="6999" pos:column="58">0</lit:literal></expr>;</return>
	</case><case pos:line="7000" pos:column="9">case <expr><name pos:line="7000" pos:column="14">SCI_STYLEGETSIZE</name></expr>:
		<return pos:line="7001" pos:column="17">return <expr><name><name pos:line="7001" pos:column="24">vs</name><op:operator pos:line="7001" pos:column="26">.</op:operator><name pos:line="7001" pos:column="27">styles</name><index pos:line="7001" pos:column="33">[<expr><name pos:line="7001" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="7001" pos:column="41">.</op:operator><name pos:line="7001" pos:column="42">size</name></expr>;</return>
	</case><case pos:line="7002" pos:column="9">case <expr><name pos:line="7002" pos:column="14">SCI_STYLEGETFONT</name></expr>:
		<if pos:line="7003" pos:column="17">if <condition pos:line="7003" pos:column="20">(<expr><op:operator pos:line="7003" pos:column="21">!</op:operator><name><name pos:line="7003" pos:column="22">vs</name><op:operator pos:line="7003" pos:column="24">.</op:operator><name pos:line="7003" pos:column="25">styles</name><index pos:line="7003" pos:column="31">[<expr><name pos:line="7003" pos:column="32">wParam</name></expr>]</index></name><op:operator pos:line="7003" pos:column="39">.</op:operator><name pos:line="7003" pos:column="40">fontName</name></expr>)</condition><then pos:line="7003" pos:column="49">
			<return pos:line="7004" pos:column="25">return <expr><lit:literal type="number" pos:line="7004" pos:column="32">0</lit:literal></expr>;</return></then></if>
		<if pos:line="7005" pos:column="17">if <condition pos:line="7005" pos:column="20">(<expr><name pos:line="7005" pos:column="21">lParam</name> <op:operator pos:line="7005" pos:column="28">!=</op:operator> <lit:literal type="number" pos:line="7005" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="7005" pos:column="33">
			<expr_stmt><expr><call><name pos:line="7006" pos:column="25">strcpy</name><argument_list pos:line="7006" pos:column="31">(<argument><expr><call><name pos:line="7006" pos:column="32">CharPtrFromSPtr</name><argument_list pos:line="7006" pos:column="47">(<argument><expr><name pos:line="7006" pos:column="48">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="7006" pos:column="57">vs</name><op:operator pos:line="7006" pos:column="59">.</op:operator><name pos:line="7006" pos:column="60">styles</name><index pos:line="7006" pos:column="66">[<expr><name pos:line="7006" pos:column="67">wParam</name></expr>]</index></name><op:operator pos:line="7006" pos:column="74">.</op:operator><name pos:line="7006" pos:column="75">fontName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<return pos:line="7007" pos:column="17">return <expr><call><name pos:line="7007" pos:column="24">strlen</name><argument_list pos:line="7007" pos:column="30">(<argument><expr><name><name pos:line="7007" pos:column="31">vs</name><op:operator pos:line="7007" pos:column="33">.</op:operator><name pos:line="7007" pos:column="34">styles</name><index pos:line="7007" pos:column="40">[<expr><name pos:line="7007" pos:column="41">wParam</name></expr>]</index></name><op:operator pos:line="7007" pos:column="48">.</op:operator><name pos:line="7007" pos:column="49">fontName</name></expr></argument>)</argument_list></call></expr>;</return>
	</case><case pos:line="7008" pos:column="9">case <expr><name pos:line="7008" pos:column="14">SCI_STYLEGETUNDERLINE</name></expr>:
		<return pos:line="7009" pos:column="17">return <expr><name><name pos:line="7009" pos:column="24">vs</name><op:operator pos:line="7009" pos:column="26">.</op:operator><name pos:line="7009" pos:column="27">styles</name><index pos:line="7009" pos:column="33">[<expr><name pos:line="7009" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="7009" pos:column="41">.</op:operator><name pos:line="7009" pos:column="42">underline</name> <op:operator pos:line="7009" pos:column="52">?</op:operator> <lit:literal type="number" pos:line="7009" pos:column="54">1</lit:literal> <op:operator pos:line="7009" pos:column="56">:</op:operator> <lit:literal type="number" pos:line="7009" pos:column="58">0</lit:literal></expr>;</return>
	</case><case pos:line="7010" pos:column="9">case <expr><name pos:line="7010" pos:column="14">SCI_STYLEGETCASE</name></expr>:
		<return pos:line="7011" pos:column="17">return <expr><call><name><name pos:line="7011" pos:column="24">static_cast</name><argument_list pos:line="7011" pos:column="35">&lt;<argument><expr><name pos:line="7011" pos:column="36">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7011" pos:column="40">(<argument><expr><name><name pos:line="7011" pos:column="41">vs</name><op:operator pos:line="7011" pos:column="43">.</op:operator><name pos:line="7011" pos:column="44">styles</name><index pos:line="7011" pos:column="50">[<expr><name pos:line="7011" pos:column="51">wParam</name></expr>]</index></name><op:operator pos:line="7011" pos:column="58">.</op:operator><name pos:line="7011" pos:column="59">caseForce</name></expr></argument>)</argument_list></call></expr>;</return>
	</case><case pos:line="7012" pos:column="9">case <expr><name pos:line="7012" pos:column="14">SCI_STYLEGETCHARACTERSET</name></expr>:
		<return pos:line="7013" pos:column="17">return <expr><name><name pos:line="7013" pos:column="24">vs</name><op:operator pos:line="7013" pos:column="26">.</op:operator><name pos:line="7013" pos:column="27">styles</name><index pos:line="7013" pos:column="33">[<expr><name pos:line="7013" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="7013" pos:column="41">.</op:operator><name pos:line="7013" pos:column="42">characterSet</name></expr>;</return>
	</case><case pos:line="7014" pos:column="9">case <expr><name pos:line="7014" pos:column="14">SCI_STYLEGETVISIBLE</name></expr>:
		<return pos:line="7015" pos:column="17">return <expr><name><name pos:line="7015" pos:column="24">vs</name><op:operator pos:line="7015" pos:column="26">.</op:operator><name pos:line="7015" pos:column="27">styles</name><index pos:line="7015" pos:column="33">[<expr><name pos:line="7015" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="7015" pos:column="41">.</op:operator><name pos:line="7015" pos:column="42">visible</name> <op:operator pos:line="7015" pos:column="50">?</op:operator> <lit:literal type="number" pos:line="7015" pos:column="52">1</lit:literal> <op:operator pos:line="7015" pos:column="54">:</op:operator> <lit:literal type="number" pos:line="7015" pos:column="56">0</lit:literal></expr>;</return>
	</case><case pos:line="7016" pos:column="9">case <expr><name pos:line="7016" pos:column="14">SCI_STYLEGETCHANGEABLE</name></expr>:
		<return pos:line="7017" pos:column="17">return <expr><name><name pos:line="7017" pos:column="24">vs</name><op:operator pos:line="7017" pos:column="26">.</op:operator><name pos:line="7017" pos:column="27">styles</name><index pos:line="7017" pos:column="33">[<expr><name pos:line="7017" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="7017" pos:column="41">.</op:operator><name pos:line="7017" pos:column="42">changeable</name> <op:operator pos:line="7017" pos:column="53">?</op:operator> <lit:literal type="number" pos:line="7017" pos:column="55">1</lit:literal> <op:operator pos:line="7017" pos:column="57">:</op:operator> <lit:literal type="number" pos:line="7017" pos:column="59">0</lit:literal></expr>;</return>
	</case><case pos:line="7018" pos:column="9">case <expr><name pos:line="7018" pos:column="14">SCI_STYLEGETHOTSPOT</name></expr>:
		<return pos:line="7019" pos:column="17">return <expr><name><name pos:line="7019" pos:column="24">vs</name><op:operator pos:line="7019" pos:column="26">.</op:operator><name pos:line="7019" pos:column="27">styles</name><index pos:line="7019" pos:column="33">[<expr><name pos:line="7019" pos:column="34">wParam</name></expr>]</index></name><op:operator pos:line="7019" pos:column="41">.</op:operator><name pos:line="7019" pos:column="42">hotspot</name> <op:operator pos:line="7019" pos:column="50">?</op:operator> <lit:literal type="number" pos:line="7019" pos:column="52">1</lit:literal> <op:operator pos:line="7019" pos:column="54">:</op:operator> <lit:literal type="number" pos:line="7019" pos:column="56">0</lit:literal></expr>;</return>
	</case>}</block></switch>
	<return pos:line="7021" pos:column="9">return <expr><lit:literal type="number" pos:line="7021" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="7024" pos:column="1">sptr_t</name></type> <name><name pos:line="7024" pos:column="8">Editor</name><op:operator pos:line="7024" pos:column="14">::</op:operator><name pos:line="7024" pos:column="16">StringResult</name></name><parameter_list pos:line="7024" pos:column="28">(<param><decl><type><name pos:line="7024" pos:column="29">sptr_t</name></type> <name pos:line="7024" pos:column="36">lParam</name></decl></param>, <param><decl><type><specifier pos:line="7024" pos:column="44">const</specifier> <name pos:line="7024" pos:column="50">char</name> <type:modifier pos:line="7024" pos:column="55">*</type:modifier></type><name pos:line="7024" pos:column="56">val</name></decl></param>)</parameter_list> <block pos:line="7024" pos:column="61">{
	<decl_stmt><decl><type><specifier pos:line="7025" pos:column="9">const</specifier> <name pos:line="7025" pos:column="15">int</name></type> <name pos:line="7025" pos:column="19">n</name> <init pos:line="7025" pos:column="21">= <expr><call><name pos:line="7025" pos:column="23">strlen</name><argument_list pos:line="7025" pos:column="29">(<argument><expr><name pos:line="7025" pos:column="30">val</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="7026" pos:column="9">if <condition pos:line="7026" pos:column="12">(<expr><name pos:line="7026" pos:column="13">lParam</name> <op:operator pos:line="7026" pos:column="20">!=</op:operator> <lit:literal type="number" pos:line="7026" pos:column="23">0</lit:literal></expr>)</condition><then pos:line="7026" pos:column="25"> <block pos:line="7026" pos:column="26">{
		<decl_stmt><decl><type><name pos:line="7027" pos:column="17">char</name> <type:modifier pos:line="7027" pos:column="22">*</type:modifier></type><name pos:line="7027" pos:column="23">ptr</name> <init pos:line="7027" pos:column="27">= <expr><call><name><name pos:line="7027" pos:column="29">reinterpret_cast</name><argument_list pos:line="7027" pos:column="45">&lt;<argument><expr><name pos:line="7027" pos:column="46">char</name> <op:operator pos:line="7027" pos:column="51">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="7027" pos:column="53">(<argument><expr><name pos:line="7027" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="7028" pos:column="17">strcpy</name><argument_list pos:line="7028" pos:column="23">(<argument><expr><name pos:line="7028" pos:column="24">ptr</name></expr></argument>, <argument><expr><name pos:line="7028" pos:column="29">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="7030" pos:column="9">return <expr><name pos:line="7030" pos:column="16">n</name></expr>;</return>	<comment type="line" pos:line="7030" pos:column="25">// Not including NUL</comment>
}</block></function>

<function><type><name pos:line="7033" pos:column="1">sptr_t</name></type> <name><name pos:line="7033" pos:column="8">Editor</name><op:operator pos:line="7033" pos:column="14">::</op:operator><name pos:line="7033" pos:column="16">WndProc</name></name><parameter_list pos:line="7033" pos:column="23">(<param><decl><type><name pos:line="7033" pos:column="24">unsigned</name> <name pos:line="7033" pos:column="33">int</name></type> <name pos:line="7033" pos:column="37">iMessage</name></decl></param>, <param><decl><type><name pos:line="7033" pos:column="47">uptr_t</name></type> <name pos:line="7033" pos:column="54">wParam</name></decl></param>, <param><decl><type><name pos:line="7033" pos:column="62">sptr_t</name></type> <name pos:line="7033" pos:column="69">lParam</name></decl></param>)</parameter_list> <block pos:line="7033" pos:column="77">{
	<comment type="line" pos:line="7034" pos:column="9">//Platform::DebugPrintf("S start wnd proc %d %d %d\n",iMessage, wParam, lParam);</comment>

	<comment type="line" pos:line="7036" pos:column="9">// Optional macro recording hook</comment>
	<if pos:line="7037" pos:column="9">if <condition pos:line="7037" pos:column="12">(<expr><name pos:line="7037" pos:column="13">recordingMacro</name></expr>)</condition><then pos:line="7037" pos:column="28">
		<expr_stmt><expr><call><name pos:line="7038" pos:column="17">NotifyMacroRecord</name><argument_list pos:line="7038" pos:column="34">(<argument><expr><name pos:line="7038" pos:column="35">iMessage</name></expr></argument>, <argument><expr><name pos:line="7038" pos:column="45">wParam</name></expr></argument>, <argument><expr><name pos:line="7038" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<switch pos:line="7040" pos:column="9">switch <condition pos:line="7040" pos:column="16">(<expr><name pos:line="7040" pos:column="17">iMessage</name></expr>)</condition> <block pos:line="7040" pos:column="27">{

	<case pos:line="7042" pos:column="9">case <expr><name pos:line="7042" pos:column="14">SCI_GETTEXT</name></expr>: <block pos:line="7042" pos:column="27">{
			<if pos:line="7043" pos:column="25">if <condition pos:line="7043" pos:column="28">(<expr><name pos:line="7043" pos:column="29">lParam</name> <op:operator pos:line="7043" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7043" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7043" pos:column="41">
				<return pos:line="7044" pos:column="33">return <expr><call><name><name pos:line="7044" pos:column="40">pdoc</name><op:operator pos:line="7044" pos:column="44">-&gt;</op:operator><name pos:line="7044" pos:column="46">Length</name></name><argument_list pos:line="7044" pos:column="52">()</argument_list></call> <op:operator pos:line="7044" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="7044" pos:column="57">1</lit:literal></expr>;</return></then></if>
			<if pos:line="7045" pos:column="25">if <condition pos:line="7045" pos:column="28">(<expr><name pos:line="7045" pos:column="29">wParam</name> <op:operator pos:line="7045" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7045" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7045" pos:column="41">
				<return pos:line="7046" pos:column="33">return <expr><lit:literal type="number" pos:line="7046" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="7047" pos:column="25">char</name> <type:modifier pos:line="7047" pos:column="30">*</type:modifier></type><name pos:line="7047" pos:column="31">ptr</name> <init pos:line="7047" pos:column="35">= <expr><call><name pos:line="7047" pos:column="37">CharPtrFromSPtr</name><argument_list pos:line="7047" pos:column="52">(<argument><expr><name pos:line="7047" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7048" pos:column="25">unsigned</name> <name pos:line="7048" pos:column="34">int</name></type> <name pos:line="7048" pos:column="38">iChar</name> <init pos:line="7048" pos:column="44">= <expr><lit:literal type="number" pos:line="7048" pos:column="46">0</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="7049" pos:column="25">for (<init pos:line="7049" pos:column="30">;</init> <condition><expr><name pos:line="7049" pos:column="32">iChar</name> <op:operator pos:line="7049" pos:column="38">&lt;</op:operator> <name pos:line="7049" pos:column="40">wParam</name> <op:operator pos:line="7049" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="7049" pos:column="49">1</lit:literal></expr>;</condition> <incr><expr><name pos:line="7049" pos:column="52">iChar</name><op:operator pos:line="7049" pos:column="57">++</op:operator></expr></incr>)
				<expr_stmt><expr><name><name pos:line="7050" pos:column="33">ptr</name><index pos:line="7050" pos:column="36">[<expr><name pos:line="7050" pos:column="37">iChar</name></expr>]</index></name> <op:operator pos:line="7050" pos:column="44">=</op:operator> <call><name><name pos:line="7050" pos:column="46">pdoc</name><op:operator pos:line="7050" pos:column="50">-&gt;</op:operator><name pos:line="7050" pos:column="52">CharAt</name></name><argument_list pos:line="7050" pos:column="58">(<argument><expr><name pos:line="7050" pos:column="59">iChar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>
			<expr_stmt><expr><name><name pos:line="7051" pos:column="25">ptr</name><index pos:line="7051" pos:column="28">[<expr><name pos:line="7051" pos:column="29">iChar</name></expr>]</index></name> <op:operator pos:line="7051" pos:column="36">=</op:operator> <lit:literal type="char" pos:line="7051" pos:column="38">'\0'</lit:literal></expr>;</expr_stmt>
			<return pos:line="7052" pos:column="25">return <expr><name pos:line="7052" pos:column="32">iChar</name></expr>;</return>
		}</block>

	</case><case pos:line="7055" pos:column="9">case <expr><name pos:line="7055" pos:column="14">SCI_SETTEXT</name></expr>: <block pos:line="7055" pos:column="27">{
			<if pos:line="7056" pos:column="25">if <condition pos:line="7056" pos:column="28">(<expr><name pos:line="7056" pos:column="29">lParam</name> <op:operator pos:line="7056" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7056" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7056" pos:column="41">
				<return pos:line="7057" pos:column="33">return <expr><lit:literal type="number" pos:line="7057" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<function_decl><type><name pos:line="7058" pos:column="25">UndoGroup</name></type> <name pos:line="7058" pos:column="35">ug</name><parameter_list pos:line="7058" pos:column="37">(<param><decl><type><name pos:line="7058" pos:column="38">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
			<expr_stmt><expr><call><name><name pos:line="7059" pos:column="25">pdoc</name><op:operator pos:line="7059" pos:column="29">-&gt;</op:operator><name pos:line="7059" pos:column="31">DeleteChars</name></name><argument_list pos:line="7059" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="7059" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="7059" pos:column="46">pdoc</name><op:operator pos:line="7059" pos:column="50">-&gt;</op:operator><name pos:line="7059" pos:column="52">Length</name></name><argument_list pos:line="7059" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7060" pos:column="25">SetEmptySelection</name><argument_list pos:line="7060" pos:column="42">(<argument><expr><lit:literal type="number" pos:line="7060" pos:column="43">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="7061" pos:column="25">pdoc</name><op:operator pos:line="7061" pos:column="29">-&gt;</op:operator><name pos:line="7061" pos:column="31">InsertCString</name></name><argument_list pos:line="7061" pos:column="44">(<argument><expr><lit:literal type="number" pos:line="7061" pos:column="45">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="7061" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="7061" pos:column="63">(<argument><expr><name pos:line="7061" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="7062" pos:column="25">return <expr><lit:literal type="number" pos:line="7062" pos:column="32">1</lit:literal></expr>;</return>
		}</block>

	</case><case pos:line="7065" pos:column="9">case <expr><name pos:line="7065" pos:column="14">SCI_GETTEXTLENGTH</name></expr>:
		<return pos:line="7066" pos:column="17">return <expr><call><name><name pos:line="7066" pos:column="24">pdoc</name><op:operator pos:line="7066" pos:column="28">-&gt;</op:operator><name pos:line="7066" pos:column="30">Length</name></name><argument_list pos:line="7066" pos:column="36">()</argument_list></call></expr>;</return>

	</case><case pos:line="7068" pos:column="9">case <expr><name pos:line="7068" pos:column="14">SCI_CUT</name></expr>:
		<expr_stmt><expr><call><name pos:line="7069" pos:column="17">Cut</name><argument_list pos:line="7069" pos:column="20">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7070" pos:column="17">SetLastXChosen</name><argument_list pos:line="7070" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7071" pos:column="17">break;</break>

	</case><case pos:line="7073" pos:column="9">case <expr><name pos:line="7073" pos:column="14">SCI_COPY</name></expr>:
		<expr_stmt><expr><call><name pos:line="7074" pos:column="17">Copy</name><argument_list pos:line="7074" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7075" pos:column="17">break;</break>

	</case><case pos:line="7077" pos:column="9">case <expr><name pos:line="7077" pos:column="14">SCI_COPYALLOWLINE</name></expr>:
		<expr_stmt><expr><call><name pos:line="7078" pos:column="17">CopyAllowLine</name><argument_list pos:line="7078" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7079" pos:column="17">break;</break>

	</case><case pos:line="7081" pos:column="9">case <expr><name pos:line="7081" pos:column="14">SCI_VERTICALCENTRECARET</name></expr>:
		<expr_stmt><expr><call><name pos:line="7082" pos:column="17">VerticalCentreCaret</name><argument_list pos:line="7082" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7083" pos:column="17">break;</break>

	</case><case pos:line="7085" pos:column="9">case <expr><name pos:line="7085" pos:column="14">SCI_MOVESELECTEDLINESUP</name></expr>:
		<expr_stmt><expr><call><name pos:line="7086" pos:column="17">MoveSelectedLinesUp</name><argument_list pos:line="7086" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7087" pos:column="17">break;</break>

	</case><case pos:line="7089" pos:column="9">case <expr><name pos:line="7089" pos:column="14">SCI_MOVESELECTEDLINESDOWN</name></expr>:
		<expr_stmt><expr><call><name pos:line="7090" pos:column="17">MoveSelectedLinesDown</name><argument_list pos:line="7090" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7091" pos:column="17">break;</break>

	</case><case pos:line="7093" pos:column="9">case <expr><name pos:line="7093" pos:column="14">SCI_COPYRANGE</name></expr>:
		<expr_stmt><expr><call><name pos:line="7094" pos:column="17">CopyRangeToClipboard</name><argument_list pos:line="7094" pos:column="37">(<argument><expr><name pos:line="7094" pos:column="38">wParam</name></expr></argument>, <argument><expr><name pos:line="7094" pos:column="46">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7095" pos:column="17">break;</break>

	</case><case pos:line="7097" pos:column="9">case <expr><name pos:line="7097" pos:column="14">SCI_COPYTEXT</name></expr>:
		<expr_stmt><expr><call><name pos:line="7098" pos:column="17">CopyText</name><argument_list pos:line="7098" pos:column="25">(<argument><expr><name pos:line="7098" pos:column="26">wParam</name></expr></argument>, <argument><expr><call><name pos:line="7098" pos:column="34">CharPtrFromSPtr</name><argument_list pos:line="7098" pos:column="49">(<argument><expr><name pos:line="7098" pos:column="50">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7099" pos:column="17">break;</break>

	</case><case pos:line="7101" pos:column="9">case <expr><name pos:line="7101" pos:column="14">SCI_PASTE</name></expr>:
		<expr_stmt><expr><call><name pos:line="7102" pos:column="17">Paste</name><argument_list pos:line="7102" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
		<if pos:line="7103" pos:column="17">if <condition pos:line="7103" pos:column="20">(<expr><op:operator pos:line="7103" pos:column="21">(</op:operator><name pos:line="7103" pos:column="22">caretSticky</name> <op:operator pos:line="7103" pos:column="34">==</op:operator> <name pos:line="7103" pos:column="37">SC_CARETSTICKY_OFF</name><op:operator pos:line="7103" pos:column="55">)</op:operator> <op:operator pos:line="7103" pos:column="57">||</op:operator> <op:operator pos:line="7103" pos:column="60">(</op:operator><name pos:line="7103" pos:column="61">caretSticky</name> <op:operator pos:line="7103" pos:column="73">==</op:operator> <name pos:line="7103" pos:column="76">SC_CARETSTICKY_WHITESPACE</name><op:operator pos:line="7103" pos:column="101">)</op:operator></expr>)</condition><then pos:line="7103" pos:column="103"> <block pos:line="7103" pos:column="104">{
			<expr_stmt><expr><call><name pos:line="7104" pos:column="25">SetLastXChosen</name><argument_list pos:line="7104" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="7106" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="7106" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7107" pos:column="17">break;</break>

	</case><case pos:line="7109" pos:column="9">case <expr><name pos:line="7109" pos:column="14">SCI_CLEAR</name></expr>:
		<expr_stmt><expr><call><name pos:line="7110" pos:column="17">Clear</name><argument_list pos:line="7110" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7111" pos:column="17">SetLastXChosen</name><argument_list pos:line="7111" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7112" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="7112" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7113" pos:column="17">break;</break>

	</case><case pos:line="7115" pos:column="9">case <expr><name pos:line="7115" pos:column="14">SCI_UNDO</name></expr>:
		<expr_stmt><expr><call><name pos:line="7116" pos:column="17">Undo</name><argument_list pos:line="7116" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7117" pos:column="17">SetLastXChosen</name><argument_list pos:line="7117" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7118" pos:column="17">break;</break>

	</case><case pos:line="7120" pos:column="9">case <expr><name pos:line="7120" pos:column="14">SCI_CANUNDO</name></expr>:
		<return pos:line="7121" pos:column="17">return <expr><op:operator pos:line="7121" pos:column="24">(</op:operator><call><name><name pos:line="7121" pos:column="25">pdoc</name><op:operator pos:line="7121" pos:column="29">-&gt;</op:operator><name pos:line="7121" pos:column="31">CanUndo</name></name><argument_list pos:line="7121" pos:column="38">()</argument_list></call> <op:operator pos:line="7121" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="7121" pos:column="44">!</op:operator><call><name><name pos:line="7121" pos:column="45">pdoc</name><op:operator pos:line="7121" pos:column="49">-&gt;</op:operator><name pos:line="7121" pos:column="51">IsReadOnly</name></name><argument_list pos:line="7121" pos:column="61">()</argument_list></call><op:operator pos:line="7121" pos:column="63">)</op:operator> <op:operator pos:line="7121" pos:column="65">?</op:operator> <lit:literal type="number" pos:line="7121" pos:column="67">1</lit:literal> <op:operator pos:line="7121" pos:column="69">:</op:operator> <lit:literal type="number" pos:line="7121" pos:column="71">0</lit:literal></expr>;</return>

	</case><case pos:line="7123" pos:column="9">case <expr><name pos:line="7123" pos:column="14">SCI_EMPTYUNDOBUFFER</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7124" pos:column="17">pdoc</name><op:operator pos:line="7124" pos:column="21">-&gt;</op:operator><name pos:line="7124" pos:column="23">DeleteUndoHistory</name></name><argument_list pos:line="7124" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7125" pos:column="17">return <expr><lit:literal type="number" pos:line="7125" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="7127" pos:column="9">case <expr><name pos:line="7127" pos:column="14">SCI_GETFIRSTVISIBLELINE</name></expr>:
		<return pos:line="7128" pos:column="17">return <expr><name pos:line="7128" pos:column="24">topLine</name></expr>;</return>

	</case><case pos:line="7130" pos:column="9">case <expr><name pos:line="7130" pos:column="14">SCI_SETFIRSTVISIBLELINE</name></expr>:
		<expr_stmt><expr><call><name pos:line="7131" pos:column="17">ScrollTo</name><argument_list pos:line="7131" pos:column="25">(<argument><expr><name pos:line="7131" pos:column="26">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7132" pos:column="17">break;</break>

	</case><case pos:line="7134" pos:column="9">case <expr><name pos:line="7134" pos:column="14">SCI_GETLINE</name></expr>: <block pos:line="7134" pos:column="27">{	<comment type="line" pos:line="7134" pos:column="33">// Risk of overwriting the end of the buffer</comment>
			<decl_stmt><decl><type><name pos:line="7135" pos:column="25">int</name></type> <name pos:line="7135" pos:column="29">lineStart</name> <init pos:line="7135" pos:column="39">= <expr><call><name><name pos:line="7135" pos:column="41">pdoc</name><op:operator pos:line="7135" pos:column="45">-&gt;</op:operator><name pos:line="7135" pos:column="47">LineStart</name></name><argument_list pos:line="7135" pos:column="56">(<argument><expr><name pos:line="7135" pos:column="57">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7136" pos:column="25">int</name></type> <name pos:line="7136" pos:column="29">lineEnd</name> <init pos:line="7136" pos:column="37">= <expr><call><name><name pos:line="7136" pos:column="39">pdoc</name><op:operator pos:line="7136" pos:column="43">-&gt;</op:operator><name pos:line="7136" pos:column="45">LineStart</name></name><argument_list pos:line="7136" pos:column="54">(<argument><expr><name pos:line="7136" pos:column="55">wParam</name> <op:operator pos:line="7136" pos:column="62">+</op:operator> <lit:literal type="number" pos:line="7136" pos:column="64">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="7137" pos:column="25">if <condition pos:line="7137" pos:column="28">(<expr><name pos:line="7137" pos:column="29">lParam</name> <op:operator pos:line="7137" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7137" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7137" pos:column="41"> <block pos:line="7137" pos:column="42">{
				<return pos:line="7138" pos:column="33">return <expr><name pos:line="7138" pos:column="40">lineEnd</name> <op:operator pos:line="7138" pos:column="48">-</op:operator> <name pos:line="7138" pos:column="50">lineStart</name></expr>;</return>
			}</block></then></if>
			<decl_stmt><decl><type><name pos:line="7140" pos:column="25">char</name> <type:modifier pos:line="7140" pos:column="30">*</type:modifier></type><name pos:line="7140" pos:column="31">ptr</name> <init pos:line="7140" pos:column="35">= <expr><call><name pos:line="7140" pos:column="37">CharPtrFromSPtr</name><argument_list pos:line="7140" pos:column="52">(<argument><expr><name pos:line="7140" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7141" pos:column="25">int</name></type> <name pos:line="7141" pos:column="29">iPlace</name> <init pos:line="7141" pos:column="36">= <expr><lit:literal type="number" pos:line="7141" pos:column="38">0</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="7142" pos:column="25">for (<init><decl><type><name pos:line="7142" pos:column="30">int</name></type> <name pos:line="7142" pos:column="34">iChar</name> <init pos:line="7142" pos:column="40">= <expr><name pos:line="7142" pos:column="42">lineStart</name></expr></init></decl>;</init> <condition><expr><name pos:line="7142" pos:column="53">iChar</name> <op:operator pos:line="7142" pos:column="59">&lt;</op:operator> <name pos:line="7142" pos:column="61">lineEnd</name></expr>;</condition> <incr><expr><name pos:line="7142" pos:column="70">iChar</name><op:operator pos:line="7142" pos:column="75">++</op:operator></expr></incr>) <block pos:line="7142" pos:column="79">{
				<expr_stmt><expr><name><name pos:line="7143" pos:column="33">ptr</name><index pos:line="7143" pos:column="36">[<expr><name pos:line="7143" pos:column="37">iPlace</name><op:operator pos:line="7143" pos:column="43">++</op:operator></expr>]</index></name> <op:operator pos:line="7143" pos:column="47">=</op:operator> <call><name><name pos:line="7143" pos:column="49">pdoc</name><op:operator pos:line="7143" pos:column="53">-&gt;</op:operator><name pos:line="7143" pos:column="55">CharAt</name></name><argument_list pos:line="7143" pos:column="61">(<argument><expr><name pos:line="7143" pos:column="62">iChar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<return pos:line="7145" pos:column="25">return <expr><name pos:line="7145" pos:column="32">iPlace</name></expr>;</return>
		}</block>

	</case><case pos:line="7148" pos:column="9">case <expr><name pos:line="7148" pos:column="14">SCI_GETLINECOUNT</name></expr>:
		<if pos:line="7149" pos:column="17">if <condition pos:line="7149" pos:column="20">(<expr><call><name><name pos:line="7149" pos:column="21">pdoc</name><op:operator pos:line="7149" pos:column="25">-&gt;</op:operator><name pos:line="7149" pos:column="27">LinesTotal</name></name><argument_list pos:line="7149" pos:column="37">()</argument_list></call> <op:operator pos:line="7149" pos:column="40">==</op:operator> <lit:literal type="number" pos:line="7149" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="7149" pos:column="45">
			<return pos:line="7150" pos:column="25">return <expr><lit:literal type="number" pos:line="7150" pos:column="32">1</lit:literal></expr>;</return></then>
		<else pos:line="7151" pos:column="17">else
			<return pos:line="7152" pos:column="25">return <expr><call><name><name pos:line="7152" pos:column="32">pdoc</name><op:operator pos:line="7152" pos:column="36">-&gt;</op:operator><name pos:line="7152" pos:column="38">LinesTotal</name></name><argument_list pos:line="7152" pos:column="48">()</argument_list></call></expr>;</return></else></if>

	</case><case pos:line="7154" pos:column="9">case <expr><name pos:line="7154" pos:column="14">SCI_GETMODIFY</name></expr>:
		<return pos:line="7155" pos:column="17">return <expr><op:operator pos:line="7155" pos:column="24">!</op:operator><call><name><name pos:line="7155" pos:column="25">pdoc</name><op:operator pos:line="7155" pos:column="29">-&gt;</op:operator><name pos:line="7155" pos:column="31">IsSavePoint</name></name><argument_list pos:line="7155" pos:column="42">()</argument_list></call></expr>;</return>

	</case><case pos:line="7157" pos:column="9">case <expr><name pos:line="7157" pos:column="14">SCI_SETSEL</name></expr>: <block pos:line="7157" pos:column="26">{
			<decl_stmt><decl><type><name pos:line="7158" pos:column="25">int</name></type> <name pos:line="7158" pos:column="29">nStart</name> <init pos:line="7158" pos:column="36">= <expr><call><name><name pos:line="7158" pos:column="38">static_cast</name><argument_list pos:line="7158" pos:column="49">&lt;<argument><expr><name pos:line="7158" pos:column="50">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7158" pos:column="54">(<argument><expr><name pos:line="7158" pos:column="55">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7159" pos:column="25">int</name></type> <name pos:line="7159" pos:column="29">nEnd</name> <init pos:line="7159" pos:column="34">= <expr><call><name><name pos:line="7159" pos:column="36">static_cast</name><argument_list pos:line="7159" pos:column="47">&lt;<argument><expr><name pos:line="7159" pos:column="48">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7159" pos:column="52">(<argument><expr><name pos:line="7159" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="7160" pos:column="25">if <condition pos:line="7160" pos:column="28">(<expr><name pos:line="7160" pos:column="29">nEnd</name> <op:operator pos:line="7160" pos:column="34">&lt;</op:operator> <lit:literal type="number" pos:line="7160" pos:column="36">0</lit:literal></expr>)</condition><then pos:line="7160" pos:column="38">
				<expr_stmt><expr><name pos:line="7161" pos:column="33">nEnd</name> <op:operator pos:line="7161" pos:column="38">=</op:operator> <call><name><name pos:line="7161" pos:column="40">pdoc</name><op:operator pos:line="7161" pos:column="44">-&gt;</op:operator><name pos:line="7161" pos:column="46">Length</name></name><argument_list pos:line="7161" pos:column="52">()</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="7162" pos:column="25">if <condition pos:line="7162" pos:column="28">(<expr><name pos:line="7162" pos:column="29">nStart</name> <op:operator pos:line="7162" pos:column="36">&lt;</op:operator> <lit:literal type="number" pos:line="7162" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="7162" pos:column="40">
				<expr_stmt><expr><name pos:line="7163" pos:column="33">nStart</name> <op:operator pos:line="7163" pos:column="40">=</op:operator> <name pos:line="7163" pos:column="42">nEnd</name></expr>;</expr_stmt></then></if> 	<comment type="line" pos:line="7163" pos:column="49">// Remove selection</comment>
			<expr_stmt><expr><call><name pos:line="7164" pos:column="25">InvalidateSelection</name><argument_list pos:line="7164" pos:column="44">(<argument><expr><call><name pos:line="7164" pos:column="45">SelectionRange</name><argument_list pos:line="7164" pos:column="59">(<argument><expr><name pos:line="7164" pos:column="60">nStart</name></expr></argument>, <argument><expr><name pos:line="7164" pos:column="68">nEnd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="7165" pos:column="25">sel</name><op:operator pos:line="7165" pos:column="28">.</op:operator><name pos:line="7165" pos:column="29">Clear</name></name><argument_list pos:line="7165" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="7166" pos:column="25">sel</name><op:operator pos:line="7166" pos:column="28">.</op:operator><name pos:line="7166" pos:column="29">selType</name></name> <op:operator pos:line="7166" pos:column="37">=</op:operator> <name><name pos:line="7166" pos:column="39">Selection</name><op:operator pos:line="7166" pos:column="48">::</op:operator><name pos:line="7166" pos:column="50">selStream</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7167" pos:column="25">SetSelection</name><argument_list pos:line="7167" pos:column="37">(<argument><expr><name pos:line="7167" pos:column="38">nEnd</name></expr></argument>, <argument><expr><name pos:line="7167" pos:column="44">nStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7168" pos:column="25">EnsureCaretVisible</name><argument_list pos:line="7168" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="7170" pos:column="17">break;</break>

	</case><case pos:line="7172" pos:column="9">case <expr><name pos:line="7172" pos:column="14">SCI_GETSELTEXT</name></expr>: <block pos:line="7172" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="7173" pos:column="25">SelectionText</name></type> <name pos:line="7173" pos:column="39">selectedText</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="7174" pos:column="25">CopySelectionRange</name><argument_list pos:line="7174" pos:column="43">(<argument><expr><op:operator pos:line="7174" pos:column="44">&amp;</op:operator><name pos:line="7174" pos:column="45">selectedText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="7175" pos:column="25">if <condition pos:line="7175" pos:column="28">(<expr><name pos:line="7175" pos:column="29">lParam</name> <op:operator pos:line="7175" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7175" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7175" pos:column="41"> <block pos:line="7175" pos:column="42">{
				<return pos:line="7176" pos:column="33">return <expr><name><name pos:line="7176" pos:column="40">selectedText</name><op:operator pos:line="7176" pos:column="52">.</op:operator><name pos:line="7176" pos:column="53">len</name></name> <op:operator pos:line="7176" pos:column="57">?</op:operator> <name><name pos:line="7176" pos:column="59">selectedText</name><op:operator pos:line="7176" pos:column="71">.</op:operator><name pos:line="7176" pos:column="72">len</name></name> <op:operator pos:line="7176" pos:column="76">:</op:operator> <lit:literal type="number" pos:line="7176" pos:column="78">1</lit:literal></expr>;</return>
			}</block></then> <else pos:line="7177" pos:column="27">else <block pos:line="7177" pos:column="32">{
				<decl_stmt><decl><type><name pos:line="7178" pos:column="33">char</name> <type:modifier pos:line="7178" pos:column="38">*</type:modifier></type><name pos:line="7178" pos:column="39">ptr</name> <init pos:line="7178" pos:column="43">= <expr><call><name pos:line="7178" pos:column="45">CharPtrFromSPtr</name><argument_list pos:line="7178" pos:column="60">(<argument><expr><name pos:line="7178" pos:column="61">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="7179" pos:column="33">int</name></type> <name pos:line="7179" pos:column="37">iChar</name> <init pos:line="7179" pos:column="43">= <expr><lit:literal type="number" pos:line="7179" pos:column="45">0</lit:literal></expr></init></decl>;</decl_stmt>
				<if pos:line="7180" pos:column="33">if <condition pos:line="7180" pos:column="36">(<expr><name><name pos:line="7180" pos:column="37">selectedText</name><op:operator pos:line="7180" pos:column="49">.</op:operator><name pos:line="7180" pos:column="50">len</name></name></expr>)</condition><then pos:line="7180" pos:column="54"> <block pos:line="7180" pos:column="55">{
					<for pos:line="7181" pos:column="41">for (<init pos:line="7181" pos:column="46">;</init> <condition><expr><name pos:line="7181" pos:column="48">iChar</name> <op:operator pos:line="7181" pos:column="54">&lt;</op:operator> <name><name pos:line="7181" pos:column="56">selectedText</name><op:operator pos:line="7181" pos:column="68">.</op:operator><name pos:line="7181" pos:column="69">len</name></name></expr>;</condition> <incr><expr><name pos:line="7181" pos:column="74">iChar</name><op:operator pos:line="7181" pos:column="79">++</op:operator></expr></incr>)
						<expr_stmt><expr><name><name pos:line="7182" pos:column="49">ptr</name><index pos:line="7182" pos:column="52">[<expr><name pos:line="7182" pos:column="53">iChar</name></expr>]</index></name> <op:operator pos:line="7182" pos:column="60">=</op:operator> <name><name pos:line="7182" pos:column="62">selectedText</name><op:operator pos:line="7182" pos:column="74">.</op:operator><name pos:line="7182" pos:column="75">s</name><index pos:line="7182" pos:column="76">[<expr><name pos:line="7182" pos:column="77">iChar</name></expr>]</index></name></expr>;</expr_stmt></for>
				}</block></then> <else pos:line="7183" pos:column="35">else <block pos:line="7183" pos:column="40">{
					<expr_stmt><expr><name><name pos:line="7184" pos:column="41">ptr</name><index pos:line="7184" pos:column="44">[<expr><lit:literal type="number" pos:line="7184" pos:column="45">0</lit:literal></expr>]</index></name> <op:operator pos:line="7184" pos:column="48">=</op:operator> <lit:literal type="char" pos:line="7184" pos:column="50">'\0'</lit:literal></expr>;</expr_stmt>
				}</block></else></if>
				<return pos:line="7186" pos:column="33">return <expr><name pos:line="7186" pos:column="40">iChar</name></expr>;</return>
			}</block></else></if>
		}</block>

	</case><case pos:line="7190" pos:column="9">case <expr><name pos:line="7190" pos:column="14">SCI_LINEFROMPOSITION</name></expr>:
		<if pos:line="7191" pos:column="17">if <condition pos:line="7191" pos:column="20">(<expr><call><name><name pos:line="7191" pos:column="21">static_cast</name><argument_list pos:line="7191" pos:column="32">&lt;<argument><expr><name pos:line="7191" pos:column="33">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7191" pos:column="37">(<argument><expr><name pos:line="7191" pos:column="38">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="7191" pos:column="46">&lt;</op:operator> <lit:literal type="number" pos:line="7191" pos:column="48">0</lit:literal></expr>)</condition><then pos:line="7191" pos:column="50">
			<return pos:line="7192" pos:column="25">return <expr><lit:literal type="number" pos:line="7192" pos:column="32">0</lit:literal></expr>;</return></then></if>
		<return pos:line="7193" pos:column="17">return <expr><call><name><name pos:line="7193" pos:column="24">pdoc</name><op:operator pos:line="7193" pos:column="28">-&gt;</op:operator><name pos:line="7193" pos:column="30">LineFromPosition</name></name><argument_list pos:line="7193" pos:column="46">(<argument><expr><name pos:line="7193" pos:column="47">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7195" pos:column="9">case <expr><name pos:line="7195" pos:column="14">SCI_POSITIONFROMLINE</name></expr>:
		<if pos:line="7196" pos:column="17">if <condition pos:line="7196" pos:column="20">(<expr><call><name><name pos:line="7196" pos:column="21">static_cast</name><argument_list pos:line="7196" pos:column="32">&lt;<argument><expr><name pos:line="7196" pos:column="33">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7196" pos:column="37">(<argument><expr><name pos:line="7196" pos:column="38">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="7196" pos:column="46">&lt;</op:operator> <lit:literal type="number" pos:line="7196" pos:column="48">0</lit:literal></expr>)</condition><then pos:line="7196" pos:column="50">
			<expr_stmt><expr><name pos:line="7197" pos:column="25">wParam</name> <op:operator pos:line="7197" pos:column="32">=</op:operator> <call><name><name pos:line="7197" pos:column="34">pdoc</name><op:operator pos:line="7197" pos:column="38">-&gt;</op:operator><name pos:line="7197" pos:column="40">LineFromPosition</name></name><argument_list pos:line="7197" pos:column="56">(<argument><expr><call><name pos:line="7197" pos:column="57">SelectionStart</name><argument_list pos:line="7197" pos:column="71">()</argument_list></call><op:operator pos:line="7197" pos:column="73">.</op:operator><call><name pos:line="7197" pos:column="74">Position</name><argument_list pos:line="7197" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="7198" pos:column="17">if <condition pos:line="7198" pos:column="20">(<expr><name pos:line="7198" pos:column="21">wParam</name> <op:operator pos:line="7198" pos:column="28">==</op:operator> <lit:literal type="number" pos:line="7198" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="7198" pos:column="33">
			<return pos:line="7199" pos:column="25">return <expr><lit:literal type="number" pos:line="7199" pos:column="32">0</lit:literal></expr>;</return></then></if> 	<comment type="line" pos:line="7199" pos:column="41">// Even if there is no text, there is a first line that starts at 0</comment>
		<if pos:line="7200" pos:column="17">if <condition pos:line="7200" pos:column="20">(<expr><call><name><name pos:line="7200" pos:column="21">static_cast</name><argument_list pos:line="7200" pos:column="32">&lt;<argument><expr><name pos:line="7200" pos:column="33">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7200" pos:column="37">(<argument><expr><name pos:line="7200" pos:column="38">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="7200" pos:column="46">&gt;</op:operator> <call><name><name pos:line="7200" pos:column="48">pdoc</name><op:operator pos:line="7200" pos:column="52">-&gt;</op:operator><name pos:line="7200" pos:column="54">LinesTotal</name></name><argument_list pos:line="7200" pos:column="64">()</argument_list></call></expr>)</condition><then pos:line="7200" pos:column="67">
			<return pos:line="7201" pos:column="25">return <expr><op:operator pos:line="7201" pos:column="32">-</op:operator><lit:literal type="number" pos:line="7201" pos:column="33">1</lit:literal></expr>;</return></then></if>
		<comment type="line" pos:line="7202" pos:column="17">//if (wParam &gt; pdoc-&gt;LineFromPosition(pdoc-&gt;Length()))	// Useful test, anyway...</comment>
		<comment type="line" pos:line="7203" pos:column="17">//	return -1;</comment>
		<return pos:line="7204" pos:column="17">return <expr><call><name><name pos:line="7204" pos:column="24">pdoc</name><op:operator pos:line="7204" pos:column="28">-&gt;</op:operator><name pos:line="7204" pos:column="30">LineStart</name></name><argument_list pos:line="7204" pos:column="39">(<argument><expr><name pos:line="7204" pos:column="40">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

		<comment type="line" pos:line="7206" pos:column="17">// Replacement of the old Scintilla interpretation of EM_LINELENGTH</comment>
	</case><case pos:line="7207" pos:column="9">case <expr><name pos:line="7207" pos:column="14">SCI_LINELENGTH</name></expr>:
		<if pos:line="7208" pos:column="17">if <condition pos:line="7208" pos:column="20">(<expr><op:operator pos:line="7208" pos:column="21">(</op:operator><call><name><name pos:line="7208" pos:column="22">static_cast</name><argument_list pos:line="7208" pos:column="33">&lt;<argument><expr><name pos:line="7208" pos:column="34">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7208" pos:column="38">(<argument><expr><name pos:line="7208" pos:column="39">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="7208" pos:column="47">&lt;</op:operator> <lit:literal type="number" pos:line="7208" pos:column="49">0</lit:literal><op:operator pos:line="7208" pos:column="50">)</op:operator> <op:operator pos:line="7208" pos:column="52">||</op:operator>
		        <op:operator pos:line="7209" pos:column="25">(</op:operator><call><name><name pos:line="7209" pos:column="26">static_cast</name><argument_list pos:line="7209" pos:column="37">&lt;<argument><expr><name pos:line="7209" pos:column="38">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7209" pos:column="42">(<argument><expr><name pos:line="7209" pos:column="43">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="7209" pos:column="51">&gt;</op:operator> <call><name><name pos:line="7209" pos:column="53">pdoc</name><op:operator pos:line="7209" pos:column="57">-&gt;</op:operator><name pos:line="7209" pos:column="59">LineFromPosition</name></name><argument_list pos:line="7209" pos:column="75">(<argument><expr><call><name><name pos:line="7209" pos:column="76">pdoc</name><op:operator pos:line="7209" pos:column="80">-&gt;</op:operator><name pos:line="7209" pos:column="82">Length</name></name><argument_list pos:line="7209" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="7209" pos:column="91">)</op:operator></expr>)</condition><then pos:line="7209" pos:column="93">
			<return pos:line="7210" pos:column="25">return <expr><lit:literal type="number" pos:line="7210" pos:column="32">0</lit:literal></expr>;</return></then></if>
		<return pos:line="7211" pos:column="17">return <expr><call><name><name pos:line="7211" pos:column="24">pdoc</name><op:operator pos:line="7211" pos:column="28">-&gt;</op:operator><name pos:line="7211" pos:column="30">LineStart</name></name><argument_list pos:line="7211" pos:column="39">(<argument><expr><name pos:line="7211" pos:column="40">wParam</name> <op:operator pos:line="7211" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="7211" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="7211" pos:column="52">-</op:operator> <call><name><name pos:line="7211" pos:column="54">pdoc</name><op:operator pos:line="7211" pos:column="58">-&gt;</op:operator><name pos:line="7211" pos:column="60">LineStart</name></name><argument_list pos:line="7211" pos:column="69">(<argument><expr><name pos:line="7211" pos:column="70">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7213" pos:column="9">case <expr><name pos:line="7213" pos:column="14">SCI_REPLACESEL</name></expr>: <block pos:line="7213" pos:column="30">{
			<if pos:line="7214" pos:column="25">if <condition pos:line="7214" pos:column="28">(<expr><name pos:line="7214" pos:column="29">lParam</name> <op:operator pos:line="7214" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7214" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7214" pos:column="41">
				<return pos:line="7215" pos:column="33">return <expr><lit:literal type="number" pos:line="7215" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<function_decl><type><name pos:line="7216" pos:column="25">UndoGroup</name></type> <name pos:line="7216" pos:column="35">ug</name><parameter_list pos:line="7216" pos:column="37">(<param><decl><type><name pos:line="7216" pos:column="38">pdoc</name></type></decl></param>)</parameter_list>;</function_decl>
			<expr_stmt><expr><call><name pos:line="7217" pos:column="25">ClearSelection</name><argument_list pos:line="7217" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="7218" pos:column="25">char</name> <type:modifier pos:line="7218" pos:column="30">*</type:modifier></type><name pos:line="7218" pos:column="31">replacement</name> <init pos:line="7218" pos:column="43">= <expr><call><name pos:line="7218" pos:column="45">CharPtrFromSPtr</name><argument_list pos:line="7218" pos:column="60">(<argument><expr><name pos:line="7218" pos:column="61">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="7219" pos:column="25">pdoc</name><op:operator pos:line="7219" pos:column="29">-&gt;</op:operator><name pos:line="7219" pos:column="31">InsertCString</name></name><argument_list pos:line="7219" pos:column="44">(<argument><expr><call><name><name pos:line="7219" pos:column="45">sel</name><op:operator pos:line="7219" pos:column="48">.</op:operator><name pos:line="7219" pos:column="49">MainCaret</name></name><argument_list pos:line="7219" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="7219" pos:column="62">replacement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7220" pos:column="25">SetEmptySelection</name><argument_list pos:line="7220" pos:column="42">(<argument><expr><call><name><name pos:line="7220" pos:column="43">sel</name><op:operator pos:line="7220" pos:column="46">.</op:operator><name pos:line="7220" pos:column="47">MainCaret</name></name><argument_list pos:line="7220" pos:column="56">()</argument_list></call> <op:operator pos:line="7220" pos:column="59">+</op:operator> <call><name pos:line="7220" pos:column="61">istrlen</name><argument_list pos:line="7220" pos:column="68">(<argument><expr><name pos:line="7220" pos:column="69">replacement</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7221" pos:column="25">EnsureCaretVisible</name><argument_list pos:line="7221" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="7223" pos:column="17">break;</break>

	</case><case pos:line="7225" pos:column="9">case <expr><name pos:line="7225" pos:column="14">SCI_SETTARGETSTART</name></expr>:
		<expr_stmt><expr><name pos:line="7226" pos:column="17">targetStart</name> <op:operator pos:line="7226" pos:column="29">=</op:operator> <name pos:line="7226" pos:column="31">wParam</name></expr>;</expr_stmt>
		<break pos:line="7227" pos:column="17">break;</break>

	</case><case pos:line="7229" pos:column="9">case <expr><name pos:line="7229" pos:column="14">SCI_GETTARGETSTART</name></expr>:
		<return pos:line="7230" pos:column="17">return <expr><name pos:line="7230" pos:column="24">targetStart</name></expr>;</return>

	</case><case pos:line="7232" pos:column="9">case <expr><name pos:line="7232" pos:column="14">SCI_SETTARGETEND</name></expr>:
		<expr_stmt><expr><name pos:line="7233" pos:column="17">targetEnd</name> <op:operator pos:line="7233" pos:column="27">=</op:operator> <name pos:line="7233" pos:column="29">wParam</name></expr>;</expr_stmt>
		<break pos:line="7234" pos:column="17">break;</break>

	</case><case pos:line="7236" pos:column="9">case <expr><name pos:line="7236" pos:column="14">SCI_GETTARGETEND</name></expr>:
		<return pos:line="7237" pos:column="17">return <expr><name pos:line="7237" pos:column="24">targetEnd</name></expr>;</return>

	</case><case pos:line="7239" pos:column="9">case <expr><name pos:line="7239" pos:column="14">SCI_TARGETFROMSELECTION</name></expr>:
		<if pos:line="7240" pos:column="17">if <condition pos:line="7240" pos:column="20">(<expr><call><name><name pos:line="7240" pos:column="21">sel</name><op:operator pos:line="7240" pos:column="24">.</op:operator><name pos:line="7240" pos:column="25">MainCaret</name></name><argument_list pos:line="7240" pos:column="34">()</argument_list></call> <op:operator pos:line="7240" pos:column="37">&lt;</op:operator> <call><name><name pos:line="7240" pos:column="39">sel</name><op:operator pos:line="7240" pos:column="42">.</op:operator><name pos:line="7240" pos:column="43">MainAnchor</name></name><argument_list pos:line="7240" pos:column="53">()</argument_list></call></expr>)</condition><then pos:line="7240" pos:column="56"> <block pos:line="7240" pos:column="57">{
			<expr_stmt><expr><name pos:line="7241" pos:column="25">targetStart</name> <op:operator pos:line="7241" pos:column="37">=</op:operator> <call><name><name pos:line="7241" pos:column="39">sel</name><op:operator pos:line="7241" pos:column="42">.</op:operator><name pos:line="7241" pos:column="43">MainCaret</name></name><argument_list pos:line="7241" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="7242" pos:column="25">targetEnd</name> <op:operator pos:line="7242" pos:column="35">=</op:operator> <call><name><name pos:line="7242" pos:column="37">sel</name><op:operator pos:line="7242" pos:column="40">.</op:operator><name pos:line="7242" pos:column="41">MainAnchor</name></name><argument_list pos:line="7242" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="7243" pos:column="19">else <block pos:line="7243" pos:column="24">{
			<expr_stmt><expr><name pos:line="7244" pos:column="25">targetStart</name> <op:operator pos:line="7244" pos:column="37">=</op:operator> <call><name><name pos:line="7244" pos:column="39">sel</name><op:operator pos:line="7244" pos:column="42">.</op:operator><name pos:line="7244" pos:column="43">MainAnchor</name></name><argument_list pos:line="7244" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="7245" pos:column="25">targetEnd</name> <op:operator pos:line="7245" pos:column="35">=</op:operator> <call><name><name pos:line="7245" pos:column="37">sel</name><op:operator pos:line="7245" pos:column="40">.</op:operator><name pos:line="7245" pos:column="41">MainCaret</name></name><argument_list pos:line="7245" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<break pos:line="7247" pos:column="17">break;</break>

	</case><case pos:line="7249" pos:column="9">case <expr><name pos:line="7249" pos:column="14">SCI_REPLACETARGET</name></expr>:
		<expr_stmt><expr><call><name pos:line="7250" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="7250" pos:column="32">(<argument><expr><name pos:line="7250" pos:column="33">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7251" pos:column="17">return <expr><call><name pos:line="7251" pos:column="24">ReplaceTarget</name><argument_list pos:line="7251" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="7251" pos:column="38">false</lit:literal></expr></argument>, <argument><expr><call><name pos:line="7251" pos:column="45">CharPtrFromSPtr</name><argument_list pos:line="7251" pos:column="60">(<argument><expr><name pos:line="7251" pos:column="61">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="7251" pos:column="70">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7253" pos:column="9">case <expr><name pos:line="7253" pos:column="14">SCI_REPLACETARGETRE</name></expr>:
		<expr_stmt><expr><call><name pos:line="7254" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="7254" pos:column="32">(<argument><expr><name pos:line="7254" pos:column="33">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7255" pos:column="17">return <expr><call><name pos:line="7255" pos:column="24">ReplaceTarget</name><argument_list pos:line="7255" pos:column="37">(<argument><expr><lit:literal type="boolean" pos:line="7255" pos:column="38">true</lit:literal></expr></argument>, <argument><expr><call><name pos:line="7255" pos:column="44">CharPtrFromSPtr</name><argument_list pos:line="7255" pos:column="59">(<argument><expr><name pos:line="7255" pos:column="60">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="7255" pos:column="69">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7257" pos:column="9">case <expr><name pos:line="7257" pos:column="14">SCI_SEARCHINTARGET</name></expr>:
		<expr_stmt><expr><call><name pos:line="7258" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="7258" pos:column="32">(<argument><expr><name pos:line="7258" pos:column="33">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7259" pos:column="17">return <expr><call><name pos:line="7259" pos:column="24">SearchInTarget</name><argument_list pos:line="7259" pos:column="38">(<argument><expr><call><name pos:line="7259" pos:column="39">CharPtrFromSPtr</name><argument_list pos:line="7259" pos:column="54">(<argument><expr><name pos:line="7259" pos:column="55">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="7259" pos:column="64">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7261" pos:column="9">case <expr><name pos:line="7261" pos:column="14">SCI_SETSEARCHFLAGS</name></expr>:
		<expr_stmt><expr><name pos:line="7262" pos:column="17">searchFlags</name> <op:operator pos:line="7262" pos:column="29">=</op:operator> <name pos:line="7262" pos:column="31">wParam</name></expr>;</expr_stmt>
		<break pos:line="7263" pos:column="17">break;</break>

	</case><case pos:line="7265" pos:column="9">case <expr><name pos:line="7265" pos:column="14">SCI_GETSEARCHFLAGS</name></expr>:
		<return pos:line="7266" pos:column="17">return <expr><name pos:line="7266" pos:column="24">searchFlags</name></expr>;</return>

	</case><case pos:line="7268" pos:column="9">case <expr><name pos:line="7268" pos:column="14">SCI_GETTAG</name></expr>:
		<return pos:line="7269" pos:column="17">return <expr><call><name pos:line="7269" pos:column="24">GetTag</name><argument_list pos:line="7269" pos:column="30">(<argument><expr><call><name pos:line="7269" pos:column="31">CharPtrFromSPtr</name><argument_list pos:line="7269" pos:column="46">(<argument><expr><name pos:line="7269" pos:column="47">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="7269" pos:column="56">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7271" pos:column="9">case <expr><name pos:line="7271" pos:column="14">SCI_POSITIONBEFORE</name></expr>:
		<return pos:line="7272" pos:column="17">return <expr><call><name><name pos:line="7272" pos:column="24">pdoc</name><op:operator pos:line="7272" pos:column="28">-&gt;</op:operator><name pos:line="7272" pos:column="30">MovePositionOutsideChar</name></name><argument_list pos:line="7272" pos:column="53">(<argument><expr><name pos:line="7272" pos:column="54">wParam</name> <op:operator pos:line="7272" pos:column="61">-</op:operator> <lit:literal type="number" pos:line="7272" pos:column="63">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="7272" pos:column="66">-</op:operator><lit:literal type="number" pos:line="7272" pos:column="67">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7272" pos:column="70">true</lit:literal></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7274" pos:column="9">case <expr><name pos:line="7274" pos:column="14">SCI_POSITIONAFTER</name></expr>:
		<return pos:line="7275" pos:column="17">return <expr><call><name><name pos:line="7275" pos:column="24">pdoc</name><op:operator pos:line="7275" pos:column="28">-&gt;</op:operator><name pos:line="7275" pos:column="30">MovePositionOutsideChar</name></name><argument_list pos:line="7275" pos:column="53">(<argument><expr><name pos:line="7275" pos:column="54">wParam</name> <op:operator pos:line="7275" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="7275" pos:column="63">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="7275" pos:column="66">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7275" pos:column="69">true</lit:literal></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7277" pos:column="9">case <expr><name pos:line="7277" pos:column="14">SCI_LINESCROLL</name></expr>:
		<expr_stmt><expr><call><name pos:line="7278" pos:column="17">ScrollTo</name><argument_list pos:line="7278" pos:column="25">(<argument><expr><name pos:line="7278" pos:column="26">topLine</name> <op:operator pos:line="7278" pos:column="34">+</op:operator> <name pos:line="7278" pos:column="36">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7279" pos:column="17">HorizontalScrollTo</name><argument_list pos:line="7279" pos:column="35">(<argument><expr><name pos:line="7279" pos:column="36">xOffset</name> <op:operator pos:line="7279" pos:column="44">+</op:operator> <name pos:line="7279" pos:column="46">wParam</name> <op:operator pos:line="7279" pos:column="53">*</op:operator> <name><name pos:line="7279" pos:column="55">vs</name><op:operator pos:line="7279" pos:column="57">.</op:operator><name pos:line="7279" pos:column="58">spaceWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7280" pos:column="17">return <expr><lit:literal type="number" pos:line="7280" pos:column="24">1</lit:literal></expr>;</return>

	</case><case pos:line="7282" pos:column="9">case <expr><name pos:line="7282" pos:column="14">SCI_SETXOFFSET</name></expr>:
		<expr_stmt><expr><name pos:line="7283" pos:column="17">xOffset</name> <op:operator pos:line="7283" pos:column="25">=</op:operator> <name pos:line="7283" pos:column="27">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7284" pos:column="17">ContainerNeedsUpdate</name><argument_list pos:line="7284" pos:column="37">(<argument><expr><name pos:line="7284" pos:column="38">SC_UPDATE_H_SCROLL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7285" pos:column="17">SetHorizontalScrollPos</name><argument_list pos:line="7285" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7286" pos:column="17">Redraw</name><argument_list pos:line="7286" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7287" pos:column="17">break;</break>

	</case><case pos:line="7289" pos:column="9">case <expr><name pos:line="7289" pos:column="14">SCI_GETXOFFSET</name></expr>:
		<return pos:line="7290" pos:column="17">return <expr><name pos:line="7290" pos:column="24">xOffset</name></expr>;</return>

	</case><case pos:line="7292" pos:column="9">case <expr><name pos:line="7292" pos:column="14">SCI_CHOOSECARETX</name></expr>:
		<expr_stmt><expr><call><name pos:line="7293" pos:column="17">SetLastXChosen</name><argument_list pos:line="7293" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7294" pos:column="17">break;</break>

	</case><case pos:line="7296" pos:column="9">case <expr><name pos:line="7296" pos:column="14">SCI_SCROLLCARET</name></expr>:
		<expr_stmt><expr><call><name pos:line="7297" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="7297" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7298" pos:column="17">break;</break>

	</case><case pos:line="7300" pos:column="9">case <expr><name pos:line="7300" pos:column="14">SCI_SETREADONLY</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7301" pos:column="17">pdoc</name><op:operator pos:line="7301" pos:column="21">-&gt;</op:operator><name pos:line="7301" pos:column="23">SetReadOnly</name></name><argument_list pos:line="7301" pos:column="34">(<argument><expr><name pos:line="7301" pos:column="35">wParam</name> <op:operator pos:line="7301" pos:column="42">!=</op:operator> <lit:literal type="number" pos:line="7301" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7302" pos:column="17">return <expr><lit:literal type="number" pos:line="7302" pos:column="24">1</lit:literal></expr>;</return>

	</case><case pos:line="7304" pos:column="9">case <expr><name pos:line="7304" pos:column="14">SCI_GETREADONLY</name></expr>:
		<return pos:line="7305" pos:column="17">return <expr><call><name><name pos:line="7305" pos:column="24">pdoc</name><op:operator pos:line="7305" pos:column="28">-&gt;</op:operator><name pos:line="7305" pos:column="30">IsReadOnly</name></name><argument_list pos:line="7305" pos:column="40">()</argument_list></call></expr>;</return>

	</case><case pos:line="7307" pos:column="9">case <expr><name pos:line="7307" pos:column="14">SCI_CANPASTE</name></expr>:
		<return pos:line="7308" pos:column="17">return <expr><call><name pos:line="7308" pos:column="24">CanPaste</name><argument_list pos:line="7308" pos:column="32">()</argument_list></call></expr>;</return>

	</case><case pos:line="7310" pos:column="9">case <expr><name pos:line="7310" pos:column="14">SCI_POINTXFROMPOSITION</name></expr>:
		<if pos:line="7311" pos:column="17">if <condition pos:line="7311" pos:column="20">(<expr><name pos:line="7311" pos:column="21">lParam</name> <op:operator pos:line="7311" pos:column="28">&lt;</op:operator> <lit:literal type="number" pos:line="7311" pos:column="30">0</lit:literal></expr>)</condition><then pos:line="7311" pos:column="32"> <block pos:line="7311" pos:column="33">{
			<return pos:line="7312" pos:column="25">return <expr><lit:literal type="number" pos:line="7312" pos:column="32">0</lit:literal></expr>;</return>
		}</block></then> <else pos:line="7313" pos:column="19">else <block pos:line="7313" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="7314" pos:column="25">Point</name></type> <name pos:line="7314" pos:column="31">pt</name> <init pos:line="7314" pos:column="34">= <expr><call><name pos:line="7314" pos:column="36">LocationFromPosition</name><argument_list pos:line="7314" pos:column="56">(<argument><expr><name pos:line="7314" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="7315" pos:column="25">return <expr><name><name pos:line="7315" pos:column="32">pt</name><op:operator pos:line="7315" pos:column="34">.</op:operator><name pos:line="7315" pos:column="35">x</name></name></expr>;</return>
		}</block></else></if>

	</case><case pos:line="7318" pos:column="9">case <expr><name pos:line="7318" pos:column="14">SCI_POINTYFROMPOSITION</name></expr>:
		<if pos:line="7319" pos:column="17">if <condition pos:line="7319" pos:column="20">(<expr><name pos:line="7319" pos:column="21">lParam</name> <op:operator pos:line="7319" pos:column="28">&lt;</op:operator> <lit:literal type="number" pos:line="7319" pos:column="30">0</lit:literal></expr>)</condition><then pos:line="7319" pos:column="32"> <block pos:line="7319" pos:column="33">{
			<return pos:line="7320" pos:column="25">return <expr><lit:literal type="number" pos:line="7320" pos:column="32">0</lit:literal></expr>;</return>
		}</block></then> <else pos:line="7321" pos:column="19">else <block pos:line="7321" pos:column="24">{
			<decl_stmt><decl><type><name pos:line="7322" pos:column="25">Point</name></type> <name pos:line="7322" pos:column="31">pt</name> <init pos:line="7322" pos:column="34">= <expr><call><name pos:line="7322" pos:column="36">LocationFromPosition</name><argument_list pos:line="7322" pos:column="56">(<argument><expr><name pos:line="7322" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="7323" pos:column="25">return <expr><name><name pos:line="7323" pos:column="32">pt</name><op:operator pos:line="7323" pos:column="34">.</op:operator><name pos:line="7323" pos:column="35">y</name></name></expr>;</return>
		}</block></else></if>

	</case><case pos:line="7326" pos:column="9">case <expr><name pos:line="7326" pos:column="14">SCI_FINDTEXT</name></expr>:
		<return pos:line="7327" pos:column="17">return <expr><call><name pos:line="7327" pos:column="24">FindText</name><argument_list pos:line="7327" pos:column="32">(<argument><expr><name pos:line="7327" pos:column="33">wParam</name></expr></argument>, <argument><expr><name pos:line="7327" pos:column="41">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7329" pos:column="9">case <expr><name pos:line="7329" pos:column="14">SCI_GETTEXTRANGE</name></expr>: <block pos:line="7329" pos:column="32">{
			<if pos:line="7330" pos:column="25">if <condition pos:line="7330" pos:column="28">(<expr><name pos:line="7330" pos:column="29">lParam</name> <op:operator pos:line="7330" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7330" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7330" pos:column="41">
				<return pos:line="7331" pos:column="33">return <expr><lit:literal type="number" pos:line="7331" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="7332" pos:column="25">Sci_TextRange</name> <type:modifier pos:line="7332" pos:column="39">*</type:modifier></type><name pos:line="7332" pos:column="40">tr</name> <init pos:line="7332" pos:column="43">= <expr><call><name><name pos:line="7332" pos:column="45">reinterpret_cast</name><argument_list pos:line="7332" pos:column="61">&lt;<argument><expr><name pos:line="7332" pos:column="62">Sci_TextRange</name> <op:operator pos:line="7332" pos:column="76">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="7332" pos:column="78">(<argument><expr><name pos:line="7332" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7333" pos:column="25">int</name></type> <name pos:line="7333" pos:column="29">cpMax</name> <init pos:line="7333" pos:column="35">= <expr><name><name pos:line="7333" pos:column="37">tr</name><op:operator pos:line="7333" pos:column="39">-&gt;</op:operator><name pos:line="7333" pos:column="41">chrg</name><op:operator pos:line="7333" pos:column="45">.</op:operator><name pos:line="7333" pos:column="46">cpMax</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="7334" pos:column="25">if <condition pos:line="7334" pos:column="28">(<expr><name pos:line="7334" pos:column="29">cpMax</name> <op:operator pos:line="7334" pos:column="35">==</op:operator> <op:operator pos:line="7334" pos:column="38">-</op:operator><lit:literal type="number" pos:line="7334" pos:column="39">1</lit:literal></expr>)</condition><then pos:line="7334" pos:column="41">
				<expr_stmt><expr><name pos:line="7335" pos:column="33">cpMax</name> <op:operator pos:line="7335" pos:column="39">=</op:operator> <call><name><name pos:line="7335" pos:column="41">pdoc</name><op:operator pos:line="7335" pos:column="45">-&gt;</op:operator><name pos:line="7335" pos:column="47">Length</name></name><argument_list pos:line="7335" pos:column="53">()</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name pos:line="7336" pos:column="25">PLATFORM_ASSERT</name><argument_list pos:line="7336" pos:column="40">(<argument><expr><name pos:line="7336" pos:column="41">cpMax</name> <op:operator pos:line="7336" pos:column="47">&lt;=</op:operator> <call><name><name pos:line="7336" pos:column="50">pdoc</name><op:operator pos:line="7336" pos:column="54">-&gt;</op:operator><name pos:line="7336" pos:column="56">Length</name></name><argument_list pos:line="7336" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="7337" pos:column="25">int</name></type> <name pos:line="7337" pos:column="29">len</name> <init pos:line="7337" pos:column="33">= <expr><name pos:line="7337" pos:column="35">cpMax</name> <op:operator pos:line="7337" pos:column="41">-</op:operator> <name><name pos:line="7337" pos:column="43">tr</name><op:operator pos:line="7337" pos:column="45">-&gt;</op:operator><name pos:line="7337" pos:column="47">chrg</name><op:operator pos:line="7337" pos:column="51">.</op:operator><name pos:line="7337" pos:column="52">cpMin</name></name></expr></init></decl>;</decl_stmt> 	<comment type="line" pos:line="7337" pos:column="65">// No -1 as cpMin and cpMax are referring to inter character positions</comment>
			<expr_stmt><expr><call><name><name pos:line="7338" pos:column="25">pdoc</name><op:operator pos:line="7338" pos:column="29">-&gt;</op:operator><name pos:line="7338" pos:column="31">GetCharRange</name></name><argument_list pos:line="7338" pos:column="43">(<argument><expr><name><name pos:line="7338" pos:column="44">tr</name><op:operator pos:line="7338" pos:column="46">-&gt;</op:operator><name pos:line="7338" pos:column="48">lpstrText</name></name></expr></argument>, <argument><expr><name><name pos:line="7338" pos:column="59">tr</name><op:operator pos:line="7338" pos:column="61">-&gt;</op:operator><name pos:line="7338" pos:column="63">chrg</name><op:operator pos:line="7338" pos:column="67">.</op:operator><name pos:line="7338" pos:column="68">cpMin</name></name></expr></argument>, <argument><expr><name pos:line="7338" pos:column="75">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="7339" pos:column="25">// Spec says copied text is terminated with a NUL</comment>
			<expr_stmt><expr><name><name pos:line="7340" pos:column="25">tr</name><op:operator pos:line="7340" pos:column="27">-&gt;</op:operator><name pos:line="7340" pos:column="29">lpstrText</name><index pos:line="7340" pos:column="38">[<expr><name pos:line="7340" pos:column="39">len</name></expr>]</index></name> <op:operator pos:line="7340" pos:column="44">=</op:operator> <lit:literal type="char" pos:line="7340" pos:column="46">'\0'</lit:literal></expr>;</expr_stmt>
			<return pos:line="7341" pos:column="25">return <expr><name pos:line="7341" pos:column="32">len</name></expr>;</return> 	<comment type="line" pos:line="7341" pos:column="41">// Not including NUL</comment>
		}</block>

	</case><case pos:line="7344" pos:column="9">case <expr><name pos:line="7344" pos:column="14">SCI_HIDESELECTION</name></expr>:
		<expr_stmt><expr><name pos:line="7345" pos:column="17">hideSelection</name> <op:operator pos:line="7345" pos:column="31">=</op:operator> <name pos:line="7345" pos:column="33">wParam</name> <op:operator pos:line="7345" pos:column="40">!=</op:operator> <lit:literal type="number" pos:line="7345" pos:column="43">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7346" pos:column="17">Redraw</name><argument_list pos:line="7346" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7347" pos:column="17">break;</break>

	</case><case pos:line="7349" pos:column="9">case <expr><name pos:line="7349" pos:column="14">SCI_FORMATRANGE</name></expr>:
		<return pos:line="7350" pos:column="17">return <expr><call><name pos:line="7350" pos:column="24">FormatRange</name><argument_list pos:line="7350" pos:column="35">(<argument><expr><name pos:line="7350" pos:column="36">wParam</name> <op:operator pos:line="7350" pos:column="43">!=</op:operator> <lit:literal type="number" pos:line="7350" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="7350" pos:column="49">reinterpret_cast</name><argument_list pos:line="7350" pos:column="65">&lt;<argument><expr><name pos:line="7350" pos:column="66">Sci_RangeToFormat</name> <op:operator pos:line="7350" pos:column="84">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="7350" pos:column="86">(<argument><expr><name pos:line="7350" pos:column="87">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7352" pos:column="9">case <expr><name pos:line="7352" pos:column="14">SCI_GETMARGINLEFT</name></expr>:
		<return pos:line="7353" pos:column="17">return <expr><name><name pos:line="7353" pos:column="24">vs</name><op:operator pos:line="7353" pos:column="26">.</op:operator><name pos:line="7353" pos:column="27">leftMarginWidth</name></name></expr>;</return>

	</case><case pos:line="7355" pos:column="9">case <expr><name pos:line="7355" pos:column="14">SCI_GETMARGINRIGHT</name></expr>:
		<return pos:line="7356" pos:column="17">return <expr><name><name pos:line="7356" pos:column="24">vs</name><op:operator pos:line="7356" pos:column="26">.</op:operator><name pos:line="7356" pos:column="27">rightMarginWidth</name></name></expr>;</return>

	</case><case pos:line="7358" pos:column="9">case <expr><name pos:line="7358" pos:column="14">SCI_SETMARGINLEFT</name></expr>:
		<expr_stmt><expr><name><name pos:line="7359" pos:column="17">vs</name><op:operator pos:line="7359" pos:column="19">.</op:operator><name pos:line="7359" pos:column="20">leftMarginWidth</name></name> <op:operator pos:line="7359" pos:column="36">=</op:operator> <name pos:line="7359" pos:column="38">lParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7360" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7360" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7361" pos:column="17">break;</break>

	</case><case pos:line="7363" pos:column="9">case <expr><name pos:line="7363" pos:column="14">SCI_SETMARGINRIGHT</name></expr>:
		<expr_stmt><expr><name><name pos:line="7364" pos:column="17">vs</name><op:operator pos:line="7364" pos:column="19">.</op:operator><name pos:line="7364" pos:column="20">rightMarginWidth</name></name> <op:operator pos:line="7364" pos:column="37">=</op:operator> <name pos:line="7364" pos:column="39">lParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7365" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7365" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7366" pos:column="17">break;</break>

		<comment type="line" pos:line="7368" pos:column="17">// Control specific mesages</comment>

	</case><case pos:line="7370" pos:column="9">case <expr><name pos:line="7370" pos:column="14">SCI_ADDTEXT</name></expr>: <block pos:line="7370" pos:column="27">{
			<if pos:line="7371" pos:column="25">if <condition pos:line="7371" pos:column="28">(<expr><name pos:line="7371" pos:column="29">lParam</name> <op:operator pos:line="7371" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7371" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7371" pos:column="41">
				<return pos:line="7372" pos:column="33">return <expr><lit:literal type="number" pos:line="7372" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<expr_stmt><expr><call><name><name pos:line="7373" pos:column="25">pdoc</name><op:operator pos:line="7373" pos:column="29">-&gt;</op:operator><name pos:line="7373" pos:column="31">InsertString</name></name><argument_list pos:line="7373" pos:column="43">(<argument><expr><call><name pos:line="7373" pos:column="44">CurrentPosition</name><argument_list pos:line="7373" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="7373" pos:column="63">CharPtrFromSPtr</name><argument_list pos:line="7373" pos:column="78">(<argument><expr><name pos:line="7373" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="7373" pos:column="88">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7374" pos:column="25">SetEmptySelection</name><argument_list pos:line="7374" pos:column="42">(<argument><expr><call><name><name pos:line="7374" pos:column="43">sel</name><op:operator pos:line="7374" pos:column="46">.</op:operator><name pos:line="7374" pos:column="47">MainCaret</name></name><argument_list pos:line="7374" pos:column="56">()</argument_list></call> <op:operator pos:line="7374" pos:column="59">+</op:operator> <name pos:line="7374" pos:column="61">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="7375" pos:column="25">return <expr><lit:literal type="number" pos:line="7375" pos:column="32">0</lit:literal></expr>;</return>
		}</block>

	</case><case pos:line="7378" pos:column="9">case <expr><name pos:line="7378" pos:column="14">SCI_ADDSTYLEDTEXT</name></expr>:
		<if pos:line="7379" pos:column="17">if <condition pos:line="7379" pos:column="20">(<expr><name pos:line="7379" pos:column="21">lParam</name></expr>)</condition><then pos:line="7379" pos:column="28">
			<expr_stmt><expr><call><name pos:line="7380" pos:column="25">AddStyledText</name><argument_list pos:line="7380" pos:column="38">(<argument><expr><call><name pos:line="7380" pos:column="39">CharPtrFromSPtr</name><argument_list pos:line="7380" pos:column="54">(<argument><expr><name pos:line="7380" pos:column="55">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="7380" pos:column="64">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<return pos:line="7381" pos:column="17">return <expr><lit:literal type="number" pos:line="7381" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="7383" pos:column="9">case <expr><name pos:line="7383" pos:column="14">SCI_INSERTTEXT</name></expr>: <block pos:line="7383" pos:column="30">{
			<if pos:line="7384" pos:column="25">if <condition pos:line="7384" pos:column="28">(<expr><name pos:line="7384" pos:column="29">lParam</name> <op:operator pos:line="7384" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7384" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7384" pos:column="41">
				<return pos:line="7385" pos:column="33">return <expr><lit:literal type="number" pos:line="7385" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="7386" pos:column="25">int</name></type> <name pos:line="7386" pos:column="29">insertPos</name> <init pos:line="7386" pos:column="39">= <expr><name pos:line="7386" pos:column="41">wParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="7387" pos:column="25">if <condition pos:line="7387" pos:column="28">(<expr><call><name><name pos:line="7387" pos:column="29">static_cast</name><argument_list pos:line="7387" pos:column="40">&lt;<argument><expr><name pos:line="7387" pos:column="41">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7387" pos:column="45">(<argument><expr><name pos:line="7387" pos:column="46">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="7387" pos:column="54">==</op:operator> <op:operator pos:line="7387" pos:column="57">-</op:operator><lit:literal type="number" pos:line="7387" pos:column="58">1</lit:literal></expr>)</condition><then pos:line="7387" pos:column="60">
				<expr_stmt><expr><name pos:line="7388" pos:column="33">insertPos</name> <op:operator pos:line="7388" pos:column="43">=</op:operator> <call><name pos:line="7388" pos:column="45">CurrentPosition</name><argument_list pos:line="7388" pos:column="60">()</argument_list></call></expr>;</expr_stmt></then></if>
			<decl_stmt><decl><type><name pos:line="7389" pos:column="25">int</name></type> <name pos:line="7389" pos:column="29">newCurrent</name> <init pos:line="7389" pos:column="40">= <expr><call><name pos:line="7389" pos:column="42">CurrentPosition</name><argument_list pos:line="7389" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7390" pos:column="25">char</name> <type:modifier pos:line="7390" pos:column="30">*</type:modifier></type><name pos:line="7390" pos:column="31">sz</name> <init pos:line="7390" pos:column="34">= <expr><call><name pos:line="7390" pos:column="36">CharPtrFromSPtr</name><argument_list pos:line="7390" pos:column="51">(<argument><expr><name pos:line="7390" pos:column="52">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="7391" pos:column="25">pdoc</name><op:operator pos:line="7391" pos:column="29">-&gt;</op:operator><name pos:line="7391" pos:column="31">InsertCString</name></name><argument_list pos:line="7391" pos:column="44">(<argument><expr><name pos:line="7391" pos:column="45">insertPos</name></expr></argument>, <argument><expr><name pos:line="7391" pos:column="56">sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="7392" pos:column="25">if <condition pos:line="7392" pos:column="28">(<expr><name pos:line="7392" pos:column="29">newCurrent</name> <op:operator pos:line="7392" pos:column="40">&gt;</op:operator> <name pos:line="7392" pos:column="42">insertPos</name></expr>)</condition><then pos:line="7392" pos:column="52">
				<expr_stmt><expr><name pos:line="7393" pos:column="33">newCurrent</name> <op:operator pos:line="7393" pos:column="44">+=</op:operator> <call><name pos:line="7393" pos:column="47">istrlen</name><argument_list pos:line="7393" pos:column="54">(<argument><expr><name pos:line="7393" pos:column="55">sz</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name pos:line="7394" pos:column="25">SetEmptySelection</name><argument_list pos:line="7394" pos:column="42">(<argument><expr><name pos:line="7394" pos:column="43">newCurrent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="7395" pos:column="25">return <expr><lit:literal type="number" pos:line="7395" pos:column="32">0</lit:literal></expr>;</return>
		}</block>

	</case><case pos:line="7398" pos:column="9">case <expr><name pos:line="7398" pos:column="14">SCI_APPENDTEXT</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7399" pos:column="17">pdoc</name><op:operator pos:line="7399" pos:column="21">-&gt;</op:operator><name pos:line="7399" pos:column="23">InsertString</name></name><argument_list pos:line="7399" pos:column="35">(<argument><expr><call><name><name pos:line="7399" pos:column="36">pdoc</name><op:operator pos:line="7399" pos:column="40">-&gt;</op:operator><name pos:line="7399" pos:column="42">Length</name></name><argument_list pos:line="7399" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="7399" pos:column="52">CharPtrFromSPtr</name><argument_list pos:line="7399" pos:column="67">(<argument><expr><name pos:line="7399" pos:column="68">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="7399" pos:column="77">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7400" pos:column="17">return <expr><lit:literal type="number" pos:line="7400" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="7402" pos:column="9">case <expr><name pos:line="7402" pos:column="14">SCI_CLEARALL</name></expr>:
		<expr_stmt><expr><call><name pos:line="7403" pos:column="17">ClearAll</name><argument_list pos:line="7403" pos:column="25">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7404" pos:column="17">return <expr><lit:literal type="number" pos:line="7404" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="7406" pos:column="9">case <expr><name pos:line="7406" pos:column="14">SCI_CLEARDOCUMENTSTYLE</name></expr>:
		<expr_stmt><expr><call><name pos:line="7407" pos:column="17">ClearDocumentStyle</name><argument_list pos:line="7407" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7408" pos:column="17">return <expr><lit:literal type="number" pos:line="7408" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="7410" pos:column="9">case <expr><name pos:line="7410" pos:column="14">SCI_SETUNDOCOLLECTION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7411" pos:column="17">pdoc</name><op:operator pos:line="7411" pos:column="21">-&gt;</op:operator><name pos:line="7411" pos:column="23">SetUndoCollection</name></name><argument_list pos:line="7411" pos:column="40">(<argument><expr><name pos:line="7411" pos:column="41">wParam</name> <op:operator pos:line="7411" pos:column="48">!=</op:operator> <lit:literal type="number" pos:line="7411" pos:column="51">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7412" pos:column="17">return <expr><lit:literal type="number" pos:line="7412" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="7414" pos:column="9">case <expr><name pos:line="7414" pos:column="14">SCI_GETUNDOCOLLECTION</name></expr>:
		<return pos:line="7415" pos:column="17">return <expr><call><name><name pos:line="7415" pos:column="24">pdoc</name><op:operator pos:line="7415" pos:column="28">-&gt;</op:operator><name pos:line="7415" pos:column="30">IsCollectingUndo</name></name><argument_list pos:line="7415" pos:column="46">()</argument_list></call></expr>;</return>

	</case><case pos:line="7417" pos:column="9">case <expr><name pos:line="7417" pos:column="14">SCI_BEGINUNDOACTION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7418" pos:column="17">pdoc</name><op:operator pos:line="7418" pos:column="21">-&gt;</op:operator><name pos:line="7418" pos:column="23">BeginUndoAction</name></name><argument_list pos:line="7418" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7419" pos:column="17">return <expr><lit:literal type="number" pos:line="7419" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="7421" pos:column="9">case <expr><name pos:line="7421" pos:column="14">SCI_ENDUNDOACTION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7422" pos:column="17">pdoc</name><op:operator pos:line="7422" pos:column="21">-&gt;</op:operator><name pos:line="7422" pos:column="23">EndUndoAction</name></name><argument_list pos:line="7422" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7423" pos:column="17">return <expr><lit:literal type="number" pos:line="7423" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="7425" pos:column="9">case <expr><name pos:line="7425" pos:column="14">SCI_GETCARETPERIOD</name></expr>:
		<return pos:line="7426" pos:column="17">return <expr><name><name pos:line="7426" pos:column="24">caret</name><op:operator pos:line="7426" pos:column="29">.</op:operator><name pos:line="7426" pos:column="30">period</name></name></expr>;</return>

	</case><case pos:line="7428" pos:column="9">case <expr><name pos:line="7428" pos:column="14">SCI_SETCARETPERIOD</name></expr>:
		<expr_stmt><expr><name><name pos:line="7429" pos:column="17">caret</name><op:operator pos:line="7429" pos:column="22">.</op:operator><name pos:line="7429" pos:column="23">period</name></name> <op:operator pos:line="7429" pos:column="30">=</op:operator> <name pos:line="7429" pos:column="32">wParam</name></expr>;</expr_stmt>
		<break pos:line="7430" pos:column="17">break;</break>

	</case><case pos:line="7432" pos:column="9">case <expr><name pos:line="7432" pos:column="14">SCI_SETWORDCHARS</name></expr>: <block pos:line="7432" pos:column="32">{
			<expr_stmt><expr><call><name><name pos:line="7433" pos:column="25">pdoc</name><op:operator pos:line="7433" pos:column="29">-&gt;</op:operator><name pos:line="7433" pos:column="31">SetDefaultCharClasses</name></name><argument_list pos:line="7433" pos:column="52">(<argument><expr><lit:literal type="boolean" pos:line="7433" pos:column="53">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="7434" pos:column="25">if <condition pos:line="7434" pos:column="28">(<expr><name pos:line="7434" pos:column="29">lParam</name> <op:operator pos:line="7434" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7434" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7434" pos:column="41">
				<return pos:line="7435" pos:column="33">return <expr><lit:literal type="number" pos:line="7435" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<macro><name pos:line="7436" pos:column="25">pdoc</name></macro><expr_stmt><expr><op:operator pos:line="7436" pos:column="29">-&gt;</op:operator><macro><name pos:line="7436" pos:column="31">SetCharClasses</name><argument_list pos:line="7436" pos:column="45">(<argument pos:line="7436" pos:column="46">reinterpret_cast&lt;unsigned char *&gt;(lParam)</argument>, <argument pos:line="7436" pos:column="89">CharClassify::ccWord</argument>)</argument_list></macro></expr>;</expr_stmt>
		}</block>
		<break pos:line="7438" pos:column="17">break;</break>

	</case><case pos:line="7440" pos:column="9">case <expr><name pos:line="7440" pos:column="14">SCI_SETWHITESPACECHARS</name></expr>: <block pos:line="7440" pos:column="38">{
			<if pos:line="7441" pos:column="25">if <condition pos:line="7441" pos:column="28">(<expr><name pos:line="7441" pos:column="29">lParam</name> <op:operator pos:line="7441" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7441" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7441" pos:column="41">
				<return pos:line="7442" pos:column="33">return <expr><lit:literal type="number" pos:line="7442" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<macro><name pos:line="7443" pos:column="25">pdoc</name></macro><expr_stmt><expr><op:operator pos:line="7443" pos:column="29">-&gt;</op:operator><macro><name pos:line="7443" pos:column="31">SetCharClasses</name><argument_list pos:line="7443" pos:column="45">(<argument pos:line="7443" pos:column="46">reinterpret_cast&lt;unsigned char *&gt;(lParam)</argument>, <argument pos:line="7443" pos:column="89">CharClassify::ccSpace</argument>)</argument_list></macro></expr>;</expr_stmt>
		}</block>
		<break pos:line="7445" pos:column="17">break;</break>

	</case><case pos:line="7447" pos:column="9">case <expr><name pos:line="7447" pos:column="14">SCI_SETCHARSDEFAULT</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7448" pos:column="17">pdoc</name><op:operator pos:line="7448" pos:column="21">-&gt;</op:operator><name pos:line="7448" pos:column="23">SetDefaultCharClasses</name></name><argument_list pos:line="7448" pos:column="44">(<argument><expr><lit:literal type="boolean" pos:line="7448" pos:column="45">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7449" pos:column="17">break;</break>

	</case><case pos:line="7451" pos:column="9">case <expr><name pos:line="7451" pos:column="14">SCI_GETLENGTH</name></expr>:
		<return pos:line="7452" pos:column="17">return <expr><call><name><name pos:line="7452" pos:column="24">pdoc</name><op:operator pos:line="7452" pos:column="28">-&gt;</op:operator><name pos:line="7452" pos:column="30">Length</name></name><argument_list pos:line="7452" pos:column="36">()</argument_list></call></expr>;</return>

	</case><case pos:line="7454" pos:column="9">case <expr><name pos:line="7454" pos:column="14">SCI_ALLOCATE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7455" pos:column="17">pdoc</name><op:operator pos:line="7455" pos:column="21">-&gt;</op:operator><name pos:line="7455" pos:column="23">Allocate</name></name><argument_list pos:line="7455" pos:column="31">(<argument><expr><name pos:line="7455" pos:column="32">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7456" pos:column="17">break;</break>

	</case><case pos:line="7458" pos:column="9">case <expr><name pos:line="7458" pos:column="14">SCI_GETCHARAT</name></expr>:
		<return pos:line="7459" pos:column="17">return <expr><call><name><name pos:line="7459" pos:column="24">pdoc</name><op:operator pos:line="7459" pos:column="28">-&gt;</op:operator><name pos:line="7459" pos:column="30">CharAt</name></name><argument_list pos:line="7459" pos:column="36">(<argument><expr><name pos:line="7459" pos:column="37">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7461" pos:column="9">case <expr><name pos:line="7461" pos:column="14">SCI_SETCURRENTPOS</name></expr>:
		<if pos:line="7462" pos:column="17">if <condition pos:line="7462" pos:column="20">(<expr><call><name><name pos:line="7462" pos:column="21">sel</name><op:operator pos:line="7462" pos:column="24">.</op:operator><name pos:line="7462" pos:column="25">IsRectangular</name></name><argument_list pos:line="7462" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="7462" pos:column="41"> <block pos:line="7462" pos:column="42">{
			<expr_stmt><expr><call><name><name pos:line="7463" pos:column="25">sel</name><op:operator pos:line="7463" pos:column="28">.</op:operator><name pos:line="7463" pos:column="29">Rectangular</name></name><argument_list pos:line="7463" pos:column="40">()</argument_list></call><op:operator pos:line="7463" pos:column="42">.</op:operator><call><name><name pos:line="7463" pos:column="43">caret</name><op:operator pos:line="7463" pos:column="48">.</op:operator><name pos:line="7463" pos:column="49">SetPosition</name></name><argument_list pos:line="7463" pos:column="60">(<argument><expr><name pos:line="7463" pos:column="61">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7464" pos:column="25">SetRectangularRange</name><argument_list pos:line="7464" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7465" pos:column="25">Redraw</name><argument_list pos:line="7465" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="7466" pos:column="19">else <block pos:line="7466" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="7467" pos:column="25">SetSelection</name><argument_list pos:line="7467" pos:column="37">(<argument><expr><name pos:line="7467" pos:column="38">wParam</name></expr></argument>, <argument><expr><call><name><name pos:line="7467" pos:column="46">sel</name><op:operator pos:line="7467" pos:column="49">.</op:operator><name pos:line="7467" pos:column="50">MainAnchor</name></name><argument_list pos:line="7467" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<break pos:line="7469" pos:column="17">break;</break>

	</case><case pos:line="7471" pos:column="9">case <expr><name pos:line="7471" pos:column="14">SCI_GETCURRENTPOS</name></expr>:
		<return pos:line="7472" pos:column="17">return <expr><call><name><name pos:line="7472" pos:column="24">sel</name><op:operator pos:line="7472" pos:column="27">.</op:operator><name pos:line="7472" pos:column="28">IsRectangular</name></name><argument_list pos:line="7472" pos:column="41">()</argument_list></call> <op:operator pos:line="7472" pos:column="44">?</op:operator> <call><name><name pos:line="7472" pos:column="46">sel</name><op:operator pos:line="7472" pos:column="49">.</op:operator><name pos:line="7472" pos:column="50">Rectangular</name></name><argument_list pos:line="7472" pos:column="61">()</argument_list></call><op:operator pos:line="7472" pos:column="63">.</op:operator><call><name><name pos:line="7472" pos:column="64">caret</name><op:operator pos:line="7472" pos:column="69">.</op:operator><name pos:line="7472" pos:column="70">Position</name></name><argument_list pos:line="7472" pos:column="78">()</argument_list></call> <op:operator pos:line="7472" pos:column="81">:</op:operator> <call><name><name pos:line="7472" pos:column="83">sel</name><op:operator pos:line="7472" pos:column="86">.</op:operator><name pos:line="7472" pos:column="87">MainCaret</name></name><argument_list pos:line="7472" pos:column="96">()</argument_list></call></expr>;</return>

	</case><case pos:line="7474" pos:column="9">case <expr><name pos:line="7474" pos:column="14">SCI_SETANCHOR</name></expr>:
		<if pos:line="7475" pos:column="17">if <condition pos:line="7475" pos:column="20">(<expr><call><name><name pos:line="7475" pos:column="21">sel</name><op:operator pos:line="7475" pos:column="24">.</op:operator><name pos:line="7475" pos:column="25">IsRectangular</name></name><argument_list pos:line="7475" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="7475" pos:column="41"> <block pos:line="7475" pos:column="42">{
			<expr_stmt><expr><call><name><name pos:line="7476" pos:column="25">sel</name><op:operator pos:line="7476" pos:column="28">.</op:operator><name pos:line="7476" pos:column="29">Rectangular</name></name><argument_list pos:line="7476" pos:column="40">()</argument_list></call><op:operator pos:line="7476" pos:column="42">.</op:operator><call><name><name pos:line="7476" pos:column="43">anchor</name><op:operator pos:line="7476" pos:column="49">.</op:operator><name pos:line="7476" pos:column="50">SetPosition</name></name><argument_list pos:line="7476" pos:column="61">(<argument><expr><name pos:line="7476" pos:column="62">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7477" pos:column="25">SetRectangularRange</name><argument_list pos:line="7477" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7478" pos:column="25">Redraw</name><argument_list pos:line="7478" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="7479" pos:column="19">else <block pos:line="7479" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="7480" pos:column="25">SetSelection</name><argument_list pos:line="7480" pos:column="37">(<argument><expr><call><name><name pos:line="7480" pos:column="38">sel</name><op:operator pos:line="7480" pos:column="41">.</op:operator><name pos:line="7480" pos:column="42">MainCaret</name></name><argument_list pos:line="7480" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="7480" pos:column="55">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<break pos:line="7482" pos:column="17">break;</break>

	</case><case pos:line="7484" pos:column="9">case <expr><name pos:line="7484" pos:column="14">SCI_GETANCHOR</name></expr>:
		<return pos:line="7485" pos:column="17">return <expr><call><name><name pos:line="7485" pos:column="24">sel</name><op:operator pos:line="7485" pos:column="27">.</op:operator><name pos:line="7485" pos:column="28">IsRectangular</name></name><argument_list pos:line="7485" pos:column="41">()</argument_list></call> <op:operator pos:line="7485" pos:column="44">?</op:operator> <call><name><name pos:line="7485" pos:column="46">sel</name><op:operator pos:line="7485" pos:column="49">.</op:operator><name pos:line="7485" pos:column="50">Rectangular</name></name><argument_list pos:line="7485" pos:column="61">()</argument_list></call><op:operator pos:line="7485" pos:column="63">.</op:operator><call><name><name pos:line="7485" pos:column="64">anchor</name><op:operator pos:line="7485" pos:column="70">.</op:operator><name pos:line="7485" pos:column="71">Position</name></name><argument_list pos:line="7485" pos:column="79">()</argument_list></call> <op:operator pos:line="7485" pos:column="82">:</op:operator> <call><name><name pos:line="7485" pos:column="84">sel</name><op:operator pos:line="7485" pos:column="87">.</op:operator><name pos:line="7485" pos:column="88">MainAnchor</name></name><argument_list pos:line="7485" pos:column="98">()</argument_list></call></expr>;</return>

	</case><case pos:line="7487" pos:column="9">case <expr><name pos:line="7487" pos:column="14">SCI_SETSELECTIONSTART</name></expr>:
		<expr_stmt><expr><call><name pos:line="7488" pos:column="17">SetSelection</name><argument_list pos:line="7488" pos:column="29">(<argument><expr><call><name><name pos:line="7488" pos:column="30">Platform</name><op:operator pos:line="7488" pos:column="38">::</op:operator><name pos:line="7488" pos:column="40">Maximum</name></name><argument_list pos:line="7488" pos:column="47">(<argument><expr><call><name><name pos:line="7488" pos:column="48">sel</name><op:operator pos:line="7488" pos:column="51">.</op:operator><name pos:line="7488" pos:column="52">MainCaret</name></name><argument_list pos:line="7488" pos:column="61">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="7488" pos:column="65">wParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="7488" pos:column="74">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7489" pos:column="17">break;</break>

	</case><case pos:line="7491" pos:column="9">case <expr><name pos:line="7491" pos:column="14">SCI_GETSELECTIONSTART</name></expr>:
		<return pos:line="7492" pos:column="17">return <expr><call><name><name pos:line="7492" pos:column="24">sel</name><op:operator pos:line="7492" pos:column="27">.</op:operator><name pos:line="7492" pos:column="28">LimitsForRectangularElseMain</name></name><argument_list pos:line="7492" pos:column="56">()</argument_list></call><op:operator pos:line="7492" pos:column="58">.</op:operator><call><name><name pos:line="7492" pos:column="59">start</name><op:operator pos:line="7492" pos:column="64">.</op:operator><name pos:line="7492" pos:column="65">Position</name></name><argument_list pos:line="7492" pos:column="73">()</argument_list></call></expr>;</return>

	</case><case pos:line="7494" pos:column="9">case <expr><name pos:line="7494" pos:column="14">SCI_SETSELECTIONEND</name></expr>:
		<expr_stmt><expr><call><name pos:line="7495" pos:column="17">SetSelection</name><argument_list pos:line="7495" pos:column="29">(<argument><expr><name pos:line="7495" pos:column="30">wParam</name></expr></argument>, <argument><expr><call><name><name pos:line="7495" pos:column="38">Platform</name><op:operator pos:line="7495" pos:column="46">::</op:operator><name pos:line="7495" pos:column="48">Minimum</name></name><argument_list pos:line="7495" pos:column="55">(<argument><expr><call><name><name pos:line="7495" pos:column="56">sel</name><op:operator pos:line="7495" pos:column="59">.</op:operator><name pos:line="7495" pos:column="60">MainAnchor</name></name><argument_list pos:line="7495" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="7495" pos:column="74">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7496" pos:column="17">break;</break>

	</case><case pos:line="7498" pos:column="9">case <expr><name pos:line="7498" pos:column="14">SCI_GETSELECTIONEND</name></expr>:
		<return pos:line="7499" pos:column="17">return <expr><call><name><name pos:line="7499" pos:column="24">sel</name><op:operator pos:line="7499" pos:column="27">.</op:operator><name pos:line="7499" pos:column="28">LimitsForRectangularElseMain</name></name><argument_list pos:line="7499" pos:column="56">()</argument_list></call><op:operator pos:line="7499" pos:column="58">.</op:operator><call><name><name pos:line="7499" pos:column="59">end</name><op:operator pos:line="7499" pos:column="62">.</op:operator><name pos:line="7499" pos:column="63">Position</name></name><argument_list pos:line="7499" pos:column="71">()</argument_list></call></expr>;</return>

	</case><case pos:line="7501" pos:column="9">case <expr><name pos:line="7501" pos:column="14">SCI_SETEMPTYSELECTION</name></expr>:
		<expr_stmt><expr><call><name pos:line="7502" pos:column="17">SetEmptySelection</name><argument_list pos:line="7502" pos:column="34">(<argument><expr><name pos:line="7502" pos:column="35">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7503" pos:column="17">break;</break>

	</case><case pos:line="7505" pos:column="9">case <expr><name pos:line="7505" pos:column="14">SCI_SETPRINTMAGNIFICATION</name></expr>:
		<expr_stmt><expr><name pos:line="7506" pos:column="17">printMagnification</name> <op:operator pos:line="7506" pos:column="36">=</op:operator> <name pos:line="7506" pos:column="38">wParam</name></expr>;</expr_stmt>
		<break pos:line="7507" pos:column="17">break;</break>

	</case><case pos:line="7509" pos:column="9">case <expr><name pos:line="7509" pos:column="14">SCI_GETPRINTMAGNIFICATION</name></expr>:
		<return pos:line="7510" pos:column="17">return <expr><name pos:line="7510" pos:column="24">printMagnification</name></expr>;</return>

	</case><case pos:line="7512" pos:column="9">case <expr><name pos:line="7512" pos:column="14">SCI_SETPRINTCOLOURMODE</name></expr>:
		<expr_stmt><expr><name pos:line="7513" pos:column="17">printColourMode</name> <op:operator pos:line="7513" pos:column="33">=</op:operator> <name pos:line="7513" pos:column="35">wParam</name></expr>;</expr_stmt>
		<break pos:line="7514" pos:column="17">break;</break>

	</case><case pos:line="7516" pos:column="9">case <expr><name pos:line="7516" pos:column="14">SCI_GETPRINTCOLOURMODE</name></expr>:
		<return pos:line="7517" pos:column="17">return <expr><name pos:line="7517" pos:column="24">printColourMode</name></expr>;</return>

	</case><case pos:line="7519" pos:column="9">case <expr><name pos:line="7519" pos:column="14">SCI_SETPRINTWRAPMODE</name></expr>:
		<expr_stmt><expr><name pos:line="7520" pos:column="17">printWrapState</name> <op:operator pos:line="7520" pos:column="32">=</op:operator> <op:operator pos:line="7520" pos:column="34">(</op:operator><name pos:line="7520" pos:column="35">wParam</name> <op:operator pos:line="7520" pos:column="42">==</op:operator> <name pos:line="7520" pos:column="45">SC_WRAP_WORD</name><op:operator pos:line="7520" pos:column="57">)</op:operator> <op:operator pos:line="7520" pos:column="59">?</op:operator> <name pos:line="7520" pos:column="61">eWrapWord</name> <op:operator pos:line="7520" pos:column="71">:</op:operator> <name pos:line="7520" pos:column="73">eWrapNone</name></expr>;</expr_stmt>
		<break pos:line="7521" pos:column="17">break;</break>

	</case><case pos:line="7523" pos:column="9">case <expr><name pos:line="7523" pos:column="14">SCI_GETPRINTWRAPMODE</name></expr>:
		<return pos:line="7524" pos:column="17">return <expr><name pos:line="7524" pos:column="24">printWrapState</name></expr>;</return>

	</case><case pos:line="7526" pos:column="9">case <expr><name pos:line="7526" pos:column="14">SCI_GETSTYLEAT</name></expr>:
		<if pos:line="7527" pos:column="17">if <condition pos:line="7527" pos:column="20">(<expr><call><name><name pos:line="7527" pos:column="21">static_cast</name><argument_list pos:line="7527" pos:column="32">&lt;<argument><expr><name pos:line="7527" pos:column="33">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7527" pos:column="37">(<argument><expr><name pos:line="7527" pos:column="38">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="7527" pos:column="46">&gt;=</op:operator> <call><name><name pos:line="7527" pos:column="49">pdoc</name><op:operator pos:line="7527" pos:column="53">-&gt;</op:operator><name pos:line="7527" pos:column="55">Length</name></name><argument_list pos:line="7527" pos:column="61">()</argument_list></call></expr>)</condition><then pos:line="7527" pos:column="64">
			<return pos:line="7528" pos:column="25">return <expr><lit:literal type="number" pos:line="7528" pos:column="32">0</lit:literal></expr>;</return></then>
		<else pos:line="7529" pos:column="17">else
			<return pos:line="7530" pos:column="25">return <expr><call><name><name pos:line="7530" pos:column="32">pdoc</name><op:operator pos:line="7530" pos:column="36">-&gt;</op:operator><name pos:line="7530" pos:column="38">StyleAt</name></name><argument_list pos:line="7530" pos:column="45">(<argument><expr><name pos:line="7530" pos:column="46">wParam</name></expr></argument>)</argument_list></call></expr>;</return></else></if>

	</case><case pos:line="7532" pos:column="9">case <expr><name pos:line="7532" pos:column="14">SCI_REDO</name></expr>:
		<expr_stmt><expr><call><name pos:line="7533" pos:column="17">Redo</name><argument_list pos:line="7533" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7534" pos:column="17">break;</break>

	</case><case pos:line="7536" pos:column="9">case <expr><name pos:line="7536" pos:column="14">SCI_SELECTALL</name></expr>:
		<expr_stmt><expr><call><name pos:line="7537" pos:column="17">SelectAll</name><argument_list pos:line="7537" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7538" pos:column="17">break;</break>

	</case><case pos:line="7540" pos:column="9">case <expr><name pos:line="7540" pos:column="14">SCI_SETSAVEPOINT</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7541" pos:column="17">pdoc</name><op:operator pos:line="7541" pos:column="21">-&gt;</op:operator><name pos:line="7541" pos:column="23">SetSavePoint</name></name><argument_list pos:line="7541" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7542" pos:column="17">break;</break>

	</case><case pos:line="7544" pos:column="9">case <expr><name pos:line="7544" pos:column="14">SCI_GETSTYLEDTEXT</name></expr>: <block pos:line="7544" pos:column="33">{
			<if pos:line="7545" pos:column="25">if <condition pos:line="7545" pos:column="28">(<expr><name pos:line="7545" pos:column="29">lParam</name> <op:operator pos:line="7545" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7545" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7545" pos:column="41">
				<return pos:line="7546" pos:column="33">return <expr><lit:literal type="number" pos:line="7546" pos:column="40">0</lit:literal></expr>;</return></then></if>
			<decl_stmt><decl><type><name pos:line="7547" pos:column="25">Sci_TextRange</name> <type:modifier pos:line="7547" pos:column="39">*</type:modifier></type><name pos:line="7547" pos:column="40">tr</name> <init pos:line="7547" pos:column="43">= <expr><call><name><name pos:line="7547" pos:column="45">reinterpret_cast</name><argument_list pos:line="7547" pos:column="61">&lt;<argument><expr><name pos:line="7547" pos:column="62">Sci_TextRange</name> <op:operator pos:line="7547" pos:column="76">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="7547" pos:column="78">(<argument><expr><name pos:line="7547" pos:column="79">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7548" pos:column="25">int</name></type> <name pos:line="7548" pos:column="29">iPlace</name> <init pos:line="7548" pos:column="36">= <expr><lit:literal type="number" pos:line="7548" pos:column="38">0</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="7549" pos:column="25">for (<init><decl><type><name pos:line="7549" pos:column="30">int</name></type> <name pos:line="7549" pos:column="34">iChar</name> <init pos:line="7549" pos:column="40">= <expr><name><name pos:line="7549" pos:column="42">tr</name><op:operator pos:line="7549" pos:column="44">-&gt;</op:operator><name pos:line="7549" pos:column="46">chrg</name><op:operator pos:line="7549" pos:column="50">.</op:operator><name pos:line="7549" pos:column="51">cpMin</name></name></expr></init></decl>;</init> <condition><expr><name pos:line="7549" pos:column="58">iChar</name> <op:operator pos:line="7549" pos:column="64">&lt;</op:operator> <name><name pos:line="7549" pos:column="66">tr</name><op:operator pos:line="7549" pos:column="68">-&gt;</op:operator><name pos:line="7549" pos:column="70">chrg</name><op:operator pos:line="7549" pos:column="74">.</op:operator><name pos:line="7549" pos:column="75">cpMax</name></name></expr>;</condition> <incr><expr><name pos:line="7549" pos:column="82">iChar</name><op:operator pos:line="7549" pos:column="87">++</op:operator></expr></incr>) <block pos:line="7549" pos:column="91">{
				<expr_stmt><expr><name><name pos:line="7550" pos:column="33">tr</name><op:operator pos:line="7550" pos:column="35">-&gt;</op:operator><name pos:line="7550" pos:column="37">lpstrText</name><index pos:line="7550" pos:column="46">[<expr><name pos:line="7550" pos:column="47">iPlace</name><op:operator pos:line="7550" pos:column="53">++</op:operator></expr>]</index></name> <op:operator pos:line="7550" pos:column="57">=</op:operator> <call><name><name pos:line="7550" pos:column="59">pdoc</name><op:operator pos:line="7550" pos:column="63">-&gt;</op:operator><name pos:line="7550" pos:column="65">CharAt</name></name><argument_list pos:line="7550" pos:column="71">(<argument><expr><name pos:line="7550" pos:column="72">iChar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="7551" pos:column="33">tr</name><op:operator pos:line="7551" pos:column="35">-&gt;</op:operator><name pos:line="7551" pos:column="37">lpstrText</name><index pos:line="7551" pos:column="46">[<expr><name pos:line="7551" pos:column="47">iPlace</name><op:operator pos:line="7551" pos:column="53">++</op:operator></expr>]</index></name> <op:operator pos:line="7551" pos:column="57">=</op:operator> <call><name><name pos:line="7551" pos:column="59">pdoc</name><op:operator pos:line="7551" pos:column="63">-&gt;</op:operator><name pos:line="7551" pos:column="65">StyleAt</name></name><argument_list pos:line="7551" pos:column="72">(<argument><expr><name pos:line="7551" pos:column="73">iChar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><name><name pos:line="7553" pos:column="25">tr</name><op:operator pos:line="7553" pos:column="27">-&gt;</op:operator><name pos:line="7553" pos:column="29">lpstrText</name><index pos:line="7553" pos:column="38">[<expr><name pos:line="7553" pos:column="39">iPlace</name></expr>]</index></name> <op:operator pos:line="7553" pos:column="47">=</op:operator> <lit:literal type="char" pos:line="7553" pos:column="49">'\0'</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="7554" pos:column="25">tr</name><op:operator pos:line="7554" pos:column="27">-&gt;</op:operator><name pos:line="7554" pos:column="29">lpstrText</name><index pos:line="7554" pos:column="38">[<expr><name pos:line="7554" pos:column="39">iPlace</name> <op:operator pos:line="7554" pos:column="46">+</op:operator> <lit:literal type="number" pos:line="7554" pos:column="48">1</lit:literal></expr>]</index></name> <op:operator pos:line="7554" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="7554" pos:column="53">'\0'</lit:literal></expr>;</expr_stmt>
			<return pos:line="7555" pos:column="25">return <expr><name pos:line="7555" pos:column="32">iPlace</name></expr>;</return>
		}</block>

	</case><case pos:line="7558" pos:column="9">case <expr><name pos:line="7558" pos:column="14">SCI_CANREDO</name></expr>:
		<return pos:line="7559" pos:column="17">return <expr><op:operator pos:line="7559" pos:column="24">(</op:operator><call><name><name pos:line="7559" pos:column="25">pdoc</name><op:operator pos:line="7559" pos:column="29">-&gt;</op:operator><name pos:line="7559" pos:column="31">CanRedo</name></name><argument_list pos:line="7559" pos:column="38">()</argument_list></call> <op:operator pos:line="7559" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="7559" pos:column="44">!</op:operator><call><name><name pos:line="7559" pos:column="45">pdoc</name><op:operator pos:line="7559" pos:column="49">-&gt;</op:operator><name pos:line="7559" pos:column="51">IsReadOnly</name></name><argument_list pos:line="7559" pos:column="61">()</argument_list></call><op:operator pos:line="7559" pos:column="63">)</op:operator> <op:operator pos:line="7559" pos:column="65">?</op:operator> <lit:literal type="number" pos:line="7559" pos:column="67">1</lit:literal> <op:operator pos:line="7559" pos:column="69">:</op:operator> <lit:literal type="number" pos:line="7559" pos:column="71">0</lit:literal></expr>;</return>

	</case><case pos:line="7561" pos:column="9">case <expr><name pos:line="7561" pos:column="14">SCI_MARKERLINEFROMHANDLE</name></expr>:
		<return pos:line="7562" pos:column="17">return <expr><call><name><name pos:line="7562" pos:column="24">pdoc</name><op:operator pos:line="7562" pos:column="28">-&gt;</op:operator><name pos:line="7562" pos:column="30">LineFromHandle</name></name><argument_list pos:line="7562" pos:column="44">(<argument><expr><name pos:line="7562" pos:column="45">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7564" pos:column="9">case <expr><name pos:line="7564" pos:column="14">SCI_MARKERDELETEHANDLE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7565" pos:column="17">pdoc</name><op:operator pos:line="7565" pos:column="21">-&gt;</op:operator><name pos:line="7565" pos:column="23">DeleteMarkFromHandle</name></name><argument_list pos:line="7565" pos:column="43">(<argument><expr><name pos:line="7565" pos:column="44">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7566" pos:column="17">break;</break>

	</case><case pos:line="7568" pos:column="9">case <expr><name pos:line="7568" pos:column="14">SCI_GETVIEWWS</name></expr>:
		<return pos:line="7569" pos:column="17">return <expr><name><name pos:line="7569" pos:column="24">vs</name><op:operator pos:line="7569" pos:column="26">.</op:operator><name pos:line="7569" pos:column="27">viewWhitespace</name></name></expr>;</return>

	</case><case pos:line="7571" pos:column="9">case <expr><name pos:line="7571" pos:column="14">SCI_SETVIEWWS</name></expr>:
		<expr_stmt><expr><name><name pos:line="7572" pos:column="17">vs</name><op:operator pos:line="7572" pos:column="19">.</op:operator><name pos:line="7572" pos:column="20">viewWhitespace</name></name> <op:operator pos:line="7572" pos:column="35">=</op:operator> <call><name><name pos:line="7572" pos:column="37">static_cast</name><argument_list pos:line="7572" pos:column="48">&lt;<argument><expr><name pos:line="7572" pos:column="49">WhiteSpaceVisibility</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7572" pos:column="70">(<argument><expr><name pos:line="7572" pos:column="71">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7573" pos:column="17">Redraw</name><argument_list pos:line="7573" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7574" pos:column="17">break;</break>

	</case><case pos:line="7576" pos:column="9">case <expr><name pos:line="7576" pos:column="14">SCI_GETWHITESPACESIZE</name></expr>:
		<return pos:line="7577" pos:column="17">return <expr><name><name pos:line="7577" pos:column="24">vs</name><op:operator pos:line="7577" pos:column="26">.</op:operator><name pos:line="7577" pos:column="27">whitespaceSize</name></name></expr>;</return>

	</case><case pos:line="7579" pos:column="9">case <expr><name pos:line="7579" pos:column="14">SCI_SETWHITESPACESIZE</name></expr>:
		<expr_stmt><expr><name><name pos:line="7580" pos:column="17">vs</name><op:operator pos:line="7580" pos:column="19">.</op:operator><name pos:line="7580" pos:column="20">whitespaceSize</name></name> <op:operator pos:line="7580" pos:column="35">=</op:operator> <call><name><name pos:line="7580" pos:column="37">static_cast</name><argument_list pos:line="7580" pos:column="48">&lt;<argument><expr><name pos:line="7580" pos:column="49">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7580" pos:column="53">(<argument><expr><name pos:line="7580" pos:column="54">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7581" pos:column="17">Redraw</name><argument_list pos:line="7581" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7582" pos:column="17">break;</break>

	</case><case pos:line="7584" pos:column="9">case <expr><name pos:line="7584" pos:column="14">SCI_POSITIONFROMPOINT</name></expr>:
		<return pos:line="7585" pos:column="17">return <expr><call><name pos:line="7585" pos:column="24">PositionFromLocation</name><argument_list pos:line="7585" pos:column="44">(<argument><expr><call><name pos:line="7585" pos:column="45">Point</name><argument_list pos:line="7585" pos:column="50">(<argument><expr><name pos:line="7585" pos:column="51">wParam</name></expr></argument>, <argument><expr><name pos:line="7585" pos:column="59">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7585" pos:column="68">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7585" pos:column="75">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7587" pos:column="9">case <expr><name pos:line="7587" pos:column="14">SCI_POSITIONFROMPOINTCLOSE</name></expr>:
		<return pos:line="7588" pos:column="17">return <expr><call><name pos:line="7588" pos:column="24">PositionFromLocation</name><argument_list pos:line="7588" pos:column="44">(<argument><expr><call><name pos:line="7588" pos:column="45">Point</name><argument_list pos:line="7588" pos:column="50">(<argument><expr><name pos:line="7588" pos:column="51">wParam</name></expr></argument>, <argument><expr><name pos:line="7588" pos:column="59">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7588" pos:column="68">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7588" pos:column="74">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7590" pos:column="9">case <expr><name pos:line="7590" pos:column="14">SCI_CHARPOSITIONFROMPOINT</name></expr>:
		<return pos:line="7591" pos:column="17">return <expr><call><name pos:line="7591" pos:column="24">PositionFromLocation</name><argument_list pos:line="7591" pos:column="44">(<argument><expr><call><name pos:line="7591" pos:column="45">Point</name><argument_list pos:line="7591" pos:column="50">(<argument><expr><name pos:line="7591" pos:column="51">wParam</name></expr></argument>, <argument><expr><name pos:line="7591" pos:column="59">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7591" pos:column="68">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7591" pos:column="75">true</lit:literal></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7593" pos:column="9">case <expr><name pos:line="7593" pos:column="14">SCI_CHARPOSITIONFROMPOINTCLOSE</name></expr>:
		<return pos:line="7594" pos:column="17">return <expr><call><name pos:line="7594" pos:column="24">PositionFromLocation</name><argument_list pos:line="7594" pos:column="44">(<argument><expr><call><name pos:line="7594" pos:column="45">Point</name><argument_list pos:line="7594" pos:column="50">(<argument><expr><name pos:line="7594" pos:column="51">wParam</name></expr></argument>, <argument><expr><name pos:line="7594" pos:column="59">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7594" pos:column="68">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="7594" pos:column="74">true</lit:literal></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7596" pos:column="9">case <expr><name pos:line="7596" pos:column="14">SCI_GOTOLINE</name></expr>:
		<expr_stmt><expr><call><name pos:line="7597" pos:column="17">GoToLine</name><argument_list pos:line="7597" pos:column="25">(<argument><expr><name pos:line="7597" pos:column="26">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7598" pos:column="17">break;</break>

	</case><case pos:line="7600" pos:column="9">case <expr><name pos:line="7600" pos:column="14">SCI_GOTOPOS</name></expr>:
		<expr_stmt><expr><call><name pos:line="7601" pos:column="17">SetEmptySelection</name><argument_list pos:line="7601" pos:column="34">(<argument><expr><name pos:line="7601" pos:column="35">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7602" pos:column="17">EnsureCaretVisible</name><argument_list pos:line="7602" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7603" pos:column="17">break;</break>

	</case><case pos:line="7605" pos:column="9">case <expr><name pos:line="7605" pos:column="14">SCI_GETCURLINE</name></expr>: <block pos:line="7605" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="7606" pos:column="25">int</name></type> <name pos:line="7606" pos:column="29">lineCurrentPos</name> <init pos:line="7606" pos:column="44">= <expr><call><name><name pos:line="7606" pos:column="46">pdoc</name><op:operator pos:line="7606" pos:column="50">-&gt;</op:operator><name pos:line="7606" pos:column="52">LineFromPosition</name></name><argument_list pos:line="7606" pos:column="68">(<argument><expr><call><name><name pos:line="7606" pos:column="69">sel</name><op:operator pos:line="7606" pos:column="72">.</op:operator><name pos:line="7606" pos:column="73">MainCaret</name></name><argument_list pos:line="7606" pos:column="82">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7607" pos:column="25">int</name></type> <name pos:line="7607" pos:column="29">lineStart</name> <init pos:line="7607" pos:column="39">= <expr><call><name><name pos:line="7607" pos:column="41">pdoc</name><op:operator pos:line="7607" pos:column="45">-&gt;</op:operator><name pos:line="7607" pos:column="47">LineStart</name></name><argument_list pos:line="7607" pos:column="56">(<argument><expr><name pos:line="7607" pos:column="57">lineCurrentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7608" pos:column="25">unsigned</name> <name pos:line="7608" pos:column="34">int</name></type> <name pos:line="7608" pos:column="38">lineEnd</name> <init pos:line="7608" pos:column="46">= <expr><call><name><name pos:line="7608" pos:column="48">pdoc</name><op:operator pos:line="7608" pos:column="52">-&gt;</op:operator><name pos:line="7608" pos:column="54">LineStart</name></name><argument_list pos:line="7608" pos:column="63">(<argument><expr><name pos:line="7608" pos:column="64">lineCurrentPos</name> <op:operator pos:line="7608" pos:column="79">+</op:operator> <lit:literal type="number" pos:line="7608" pos:column="81">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="7609" pos:column="25">if <condition pos:line="7609" pos:column="28">(<expr><name pos:line="7609" pos:column="29">lParam</name> <op:operator pos:line="7609" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="7609" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="7609" pos:column="41"> <block pos:line="7609" pos:column="42">{
				<return pos:line="7610" pos:column="33">return <expr><lit:literal type="number" pos:line="7610" pos:column="40">1</lit:literal> <op:operator pos:line="7610" pos:column="42">+</op:operator> <name pos:line="7610" pos:column="44">lineEnd</name> <op:operator pos:line="7610" pos:column="52">-</op:operator> <name pos:line="7610" pos:column="54">lineStart</name></expr>;</return>
			}</block></then></if>
			<expr_stmt><expr><call><name pos:line="7612" pos:column="25">PLATFORM_ASSERT</name><argument_list pos:line="7612" pos:column="40">(<argument><expr><name pos:line="7612" pos:column="41">wParam</name> <op:operator pos:line="7612" pos:column="48">&gt;</op:operator> <lit:literal type="number" pos:line="7612" pos:column="50">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="7613" pos:column="25">char</name> <type:modifier pos:line="7613" pos:column="30">*</type:modifier></type><name pos:line="7613" pos:column="31">ptr</name> <init pos:line="7613" pos:column="35">= <expr><call><name pos:line="7613" pos:column="37">CharPtrFromSPtr</name><argument_list pos:line="7613" pos:column="52">(<argument><expr><name pos:line="7613" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="7614" pos:column="25">unsigned</name> <name pos:line="7614" pos:column="34">int</name></type> <name pos:line="7614" pos:column="38">iPlace</name> <init pos:line="7614" pos:column="45">= <expr><lit:literal type="number" pos:line="7614" pos:column="47">0</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="7615" pos:column="25">for (<init><decl><type><name pos:line="7615" pos:column="30">unsigned</name> <name pos:line="7615" pos:column="39">int</name></type> <name pos:line="7615" pos:column="43">iChar</name> <init pos:line="7615" pos:column="49">= <expr><name pos:line="7615" pos:column="51">lineStart</name></expr></init></decl>;</init> <condition><expr><name pos:line="7615" pos:column="62">iChar</name> <op:operator pos:line="7615" pos:column="68">&lt;</op:operator> <name pos:line="7615" pos:column="70">lineEnd</name> <op:operator pos:line="7615" pos:column="78">&amp;&amp;</op:operator> <name pos:line="7615" pos:column="81">iPlace</name> <op:operator pos:line="7615" pos:column="88">&lt;</op:operator> <name pos:line="7615" pos:column="90">wParam</name> <op:operator pos:line="7615" pos:column="97">-</op:operator> <lit:literal type="number" pos:line="7615" pos:column="99">1</lit:literal></expr>;</condition> <incr><expr><name pos:line="7615" pos:column="102">iChar</name><op:operator pos:line="7615" pos:column="107">++</op:operator></expr></incr>) <block pos:line="7615" pos:column="111">{
				<expr_stmt><expr><name><name pos:line="7616" pos:column="33">ptr</name><index pos:line="7616" pos:column="36">[<expr><name pos:line="7616" pos:column="37">iPlace</name><op:operator pos:line="7616" pos:column="43">++</op:operator></expr>]</index></name> <op:operator pos:line="7616" pos:column="47">=</op:operator> <call><name><name pos:line="7616" pos:column="49">pdoc</name><op:operator pos:line="7616" pos:column="53">-&gt;</op:operator><name pos:line="7616" pos:column="55">CharAt</name></name><argument_list pos:line="7616" pos:column="61">(<argument><expr><name pos:line="7616" pos:column="62">iChar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><name><name pos:line="7618" pos:column="25">ptr</name><index pos:line="7618" pos:column="28">[<expr><name pos:line="7618" pos:column="29">iPlace</name></expr>]</index></name> <op:operator pos:line="7618" pos:column="37">=</op:operator> <lit:literal type="char" pos:line="7618" pos:column="39">'\0'</lit:literal></expr>;</expr_stmt>
			<return pos:line="7619" pos:column="25">return <expr><call><name><name pos:line="7619" pos:column="32">sel</name><op:operator pos:line="7619" pos:column="35">.</op:operator><name pos:line="7619" pos:column="36">MainCaret</name></name><argument_list pos:line="7619" pos:column="45">()</argument_list></call> <op:operator pos:line="7619" pos:column="48">-</op:operator> <name pos:line="7619" pos:column="50">lineStart</name></expr>;</return>
		}</block>

	</case><case pos:line="7622" pos:column="9">case <expr><name pos:line="7622" pos:column="14">SCI_GETENDSTYLED</name></expr>:
		<return pos:line="7623" pos:column="17">return <expr><call><name><name pos:line="7623" pos:column="24">pdoc</name><op:operator pos:line="7623" pos:column="28">-&gt;</op:operator><name pos:line="7623" pos:column="30">GetEndStyled</name></name><argument_list pos:line="7623" pos:column="42">()</argument_list></call></expr>;</return>

	</case><case pos:line="7625" pos:column="9">case <expr><name pos:line="7625" pos:column="14">SCI_GETEOLMODE</name></expr>:
		<return pos:line="7626" pos:column="17">return <expr><name><name pos:line="7626" pos:column="24">pdoc</name><op:operator pos:line="7626" pos:column="28">-&gt;</op:operator><name pos:line="7626" pos:column="30">eolMode</name></name></expr>;</return>

	</case><case pos:line="7628" pos:column="9">case <expr><name pos:line="7628" pos:column="14">SCI_SETEOLMODE</name></expr>:
		<expr_stmt><expr><name><name pos:line="7629" pos:column="17">pdoc</name><op:operator pos:line="7629" pos:column="21">-&gt;</op:operator><name pos:line="7629" pos:column="23">eolMode</name></name> <op:operator pos:line="7629" pos:column="31">=</op:operator> <name pos:line="7629" pos:column="33">wParam</name></expr>;</expr_stmt>
		<break pos:line="7630" pos:column="17">break;</break>

	</case><case pos:line="7632" pos:column="9">case <expr><name pos:line="7632" pos:column="14">SCI_STARTSTYLING</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7633" pos:column="17">pdoc</name><op:operator pos:line="7633" pos:column="21">-&gt;</op:operator><name pos:line="7633" pos:column="23">StartStyling</name></name><argument_list pos:line="7633" pos:column="35">(<argument><expr><name pos:line="7633" pos:column="36">wParam</name></expr></argument>, <argument><expr><call><name><name pos:line="7633" pos:column="44">static_cast</name><argument_list pos:line="7633" pos:column="55">&lt;<argument><expr><name pos:line="7633" pos:column="56">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7633" pos:column="61">(<argument><expr><name pos:line="7633" pos:column="62">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7634" pos:column="17">break;</break>

	</case><case pos:line="7636" pos:column="9">case <expr><name pos:line="7636" pos:column="14">SCI_SETSTYLING</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7637" pos:column="17">pdoc</name><op:operator pos:line="7637" pos:column="21">-&gt;</op:operator><name pos:line="7637" pos:column="23">SetStyleFor</name></name><argument_list pos:line="7637" pos:column="34">(<argument><expr><name pos:line="7637" pos:column="35">wParam</name></expr></argument>, <argument><expr><call><name><name pos:line="7637" pos:column="43">static_cast</name><argument_list pos:line="7637" pos:column="54">&lt;<argument><expr><name pos:line="7637" pos:column="55">char</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7637" pos:column="60">(<argument><expr><name pos:line="7637" pos:column="61">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7638" pos:column="17">break;</break>

	</case><case pos:line="7640" pos:column="9">case <expr><name pos:line="7640" pos:column="14">SCI_SETSTYLINGEX</name></expr>:             <comment type="line" pos:line="7640" pos:column="44">// Specify a complete styling buffer</comment>
		<if pos:line="7641" pos:column="17">if <condition pos:line="7641" pos:column="20">(<expr><name pos:line="7641" pos:column="21">lParam</name> <op:operator pos:line="7641" pos:column="28">==</op:operator> <lit:literal type="number" pos:line="7641" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="7641" pos:column="33">
			<return pos:line="7642" pos:column="25">return <expr><lit:literal type="number" pos:line="7642" pos:column="32">0</lit:literal></expr>;</return></then></if>
		<expr_stmt><expr><call><name><name pos:line="7643" pos:column="17">pdoc</name><op:operator pos:line="7643" pos:column="21">-&gt;</op:operator><name pos:line="7643" pos:column="23">SetStyles</name></name><argument_list pos:line="7643" pos:column="32">(<argument><expr><name pos:line="7643" pos:column="33">wParam</name></expr></argument>, <argument><expr><call><name pos:line="7643" pos:column="41">CharPtrFromSPtr</name><argument_list pos:line="7643" pos:column="56">(<argument><expr><name pos:line="7643" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7644" pos:column="17">break;</break>

	</case><case pos:line="7646" pos:column="9">case <expr><name pos:line="7646" pos:column="14">SCI_SETBUFFEREDDRAW</name></expr>:
		<expr_stmt><expr><name pos:line="7647" pos:column="17">bufferedDraw</name> <op:operator pos:line="7647" pos:column="30">=</op:operator> <name pos:line="7647" pos:column="32">wParam</name> <op:operator pos:line="7647" pos:column="39">!=</op:operator> <lit:literal type="number" pos:line="7647" pos:column="42">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="7648" pos:column="17">break;</break>

	</case><case pos:line="7650" pos:column="9">case <expr><name pos:line="7650" pos:column="14">SCI_GETBUFFEREDDRAW</name></expr>:
		<return pos:line="7651" pos:column="17">return <expr><name pos:line="7651" pos:column="24">bufferedDraw</name></expr>;</return>

	</case><case pos:line="7653" pos:column="9">case <expr><name pos:line="7653" pos:column="14">SCI_GETTWOPHASEDRAW</name></expr>:
		<return pos:line="7654" pos:column="17">return <expr><name pos:line="7654" pos:column="24">twoPhaseDraw</name></expr>;</return>

	</case><case pos:line="7656" pos:column="9">case <expr><name pos:line="7656" pos:column="14">SCI_SETTWOPHASEDRAW</name></expr>:
		<expr_stmt><expr><name pos:line="7657" pos:column="17">twoPhaseDraw</name> <op:operator pos:line="7657" pos:column="30">=</op:operator> <name pos:line="7657" pos:column="32">wParam</name> <op:operator pos:line="7657" pos:column="39">!=</op:operator> <lit:literal type="number" pos:line="7657" pos:column="42">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7658" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7658" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7659" pos:column="17">break;</break>

	</case><case pos:line="7661" pos:column="9">case <expr><name pos:line="7661" pos:column="14">SCI_SETFONTQUALITY</name></expr>:
		<expr_stmt><expr><name><name pos:line="7662" pos:column="17">vs</name><op:operator pos:line="7662" pos:column="19">.</op:operator><name pos:line="7662" pos:column="20">extraFontFlag</name></name> <op:operator pos:line="7662" pos:column="34">&amp;=</op:operator> <op:operator pos:line="7662" pos:column="37">~</op:operator><name pos:line="7662" pos:column="38">SC_EFF_QUALITY_MASK</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="7663" pos:column="17">vs</name><op:operator pos:line="7663" pos:column="19">.</op:operator><name pos:line="7663" pos:column="20">extraFontFlag</name></name> <op:operator pos:line="7663" pos:column="34">|=</op:operator> <op:operator pos:line="7663" pos:column="37">(</op:operator><name pos:line="7663" pos:column="38">wParam</name> <op:operator pos:line="7663" pos:column="45">&amp;</op:operator> <name pos:line="7663" pos:column="47">SC_EFF_QUALITY_MASK</name><op:operator pos:line="7663" pos:column="66">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7664" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7664" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7665" pos:column="17">break;</break>

	</case><case pos:line="7667" pos:column="9">case <expr><name pos:line="7667" pos:column="14">SCI_GETFONTQUALITY</name></expr>:
		<return pos:line="7668" pos:column="17">return <expr><op:operator pos:line="7668" pos:column="24">(</op:operator><name><name pos:line="7668" pos:column="25">vs</name><op:operator pos:line="7668" pos:column="27">.</op:operator><name pos:line="7668" pos:column="28">extraFontFlag</name></name> <op:operator pos:line="7668" pos:column="42">&amp;</op:operator> <name pos:line="7668" pos:column="44">SC_EFF_QUALITY_MASK</name><op:operator pos:line="7668" pos:column="63">)</op:operator></expr>;</return>

	</case><case pos:line="7670" pos:column="9">case <expr><name pos:line="7670" pos:column="14">SCI_SETTABWIDTH</name></expr>:
		<if pos:line="7671" pos:column="17">if <condition pos:line="7671" pos:column="20">(<expr><name pos:line="7671" pos:column="21">wParam</name> <op:operator pos:line="7671" pos:column="28">&gt;</op:operator> <lit:literal type="number" pos:line="7671" pos:column="30">0</lit:literal></expr>)</condition><then pos:line="7671" pos:column="32"> <block pos:line="7671" pos:column="33">{
			<expr_stmt><expr><name><name pos:line="7672" pos:column="25">pdoc</name><op:operator pos:line="7672" pos:column="29">-&gt;</op:operator><name pos:line="7672" pos:column="31">tabInChars</name></name> <op:operator pos:line="7672" pos:column="42">=</op:operator> <name pos:line="7672" pos:column="44">wParam</name></expr>;</expr_stmt>
			<if pos:line="7673" pos:column="25">if <condition pos:line="7673" pos:column="28">(<expr><name><name pos:line="7673" pos:column="29">pdoc</name><op:operator pos:line="7673" pos:column="33">-&gt;</op:operator><name pos:line="7673" pos:column="35">indentInChars</name></name> <op:operator pos:line="7673" pos:column="49">==</op:operator> <lit:literal type="number" pos:line="7673" pos:column="52">0</lit:literal></expr>)</condition><then pos:line="7673" pos:column="54">
				<expr_stmt><expr><name><name pos:line="7674" pos:column="33">pdoc</name><op:operator pos:line="7674" pos:column="37">-&gt;</op:operator><name pos:line="7674" pos:column="39">actualIndentInChars</name></name> <op:operator pos:line="7674" pos:column="59">=</op:operator> <name><name pos:line="7674" pos:column="61">pdoc</name><op:operator pos:line="7674" pos:column="65">-&gt;</op:operator><name pos:line="7674" pos:column="67">tabInChars</name></name></expr>;</expr_stmt></then></if>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="7676" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7676" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7677" pos:column="17">break;</break>

	</case><case pos:line="7679" pos:column="9">case <expr><name pos:line="7679" pos:column="14">SCI_GETTABWIDTH</name></expr>:
		<return pos:line="7680" pos:column="17">return <expr><name><name pos:line="7680" pos:column="24">pdoc</name><op:operator pos:line="7680" pos:column="28">-&gt;</op:operator><name pos:line="7680" pos:column="30">tabInChars</name></name></expr>;</return>

	</case><case pos:line="7682" pos:column="9">case <expr><name pos:line="7682" pos:column="14">SCI_SETINDENT</name></expr>:
		<expr_stmt><expr><name><name pos:line="7683" pos:column="17">pdoc</name><op:operator pos:line="7683" pos:column="21">-&gt;</op:operator><name pos:line="7683" pos:column="23">indentInChars</name></name> <op:operator pos:line="7683" pos:column="37">=</op:operator> <name pos:line="7683" pos:column="39">wParam</name></expr>;</expr_stmt>
		<if pos:line="7684" pos:column="17">if <condition pos:line="7684" pos:column="20">(<expr><name><name pos:line="7684" pos:column="21">pdoc</name><op:operator pos:line="7684" pos:column="25">-&gt;</op:operator><name pos:line="7684" pos:column="27">indentInChars</name></name> <op:operator pos:line="7684" pos:column="41">!=</op:operator> <lit:literal type="number" pos:line="7684" pos:column="44">0</lit:literal></expr>)</condition><then pos:line="7684" pos:column="46">
			<expr_stmt><expr><name><name pos:line="7685" pos:column="25">pdoc</name><op:operator pos:line="7685" pos:column="29">-&gt;</op:operator><name pos:line="7685" pos:column="31">actualIndentInChars</name></name> <op:operator pos:line="7685" pos:column="51">=</op:operator> <name><name pos:line="7685" pos:column="53">pdoc</name><op:operator pos:line="7685" pos:column="57">-&gt;</op:operator><name pos:line="7685" pos:column="59">indentInChars</name></name></expr>;</expr_stmt></then>
		<else pos:line="7686" pos:column="17">else
			<expr_stmt><expr><name><name pos:line="7687" pos:column="25">pdoc</name><op:operator pos:line="7687" pos:column="29">-&gt;</op:operator><name pos:line="7687" pos:column="31">actualIndentInChars</name></name> <op:operator pos:line="7687" pos:column="51">=</op:operator> <name><name pos:line="7687" pos:column="53">pdoc</name><op:operator pos:line="7687" pos:column="57">-&gt;</op:operator><name pos:line="7687" pos:column="59">tabInChars</name></name></expr>;</expr_stmt></else></if>
		<expr_stmt><expr><call><name pos:line="7688" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7688" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7689" pos:column="17">break;</break>

	</case><case pos:line="7691" pos:column="9">case <expr><name pos:line="7691" pos:column="14">SCI_GETINDENT</name></expr>:
		<return pos:line="7692" pos:column="17">return <expr><name><name pos:line="7692" pos:column="24">pdoc</name><op:operator pos:line="7692" pos:column="28">-&gt;</op:operator><name pos:line="7692" pos:column="30">indentInChars</name></name></expr>;</return>

	</case><case pos:line="7694" pos:column="9">case <expr><name pos:line="7694" pos:column="14">SCI_SETUSETABS</name></expr>:
		<expr_stmt><expr><name><name pos:line="7695" pos:column="17">pdoc</name><op:operator pos:line="7695" pos:column="21">-&gt;</op:operator><name pos:line="7695" pos:column="23">useTabs</name></name> <op:operator pos:line="7695" pos:column="31">=</op:operator> <name pos:line="7695" pos:column="33">wParam</name> <op:operator pos:line="7695" pos:column="40">!=</op:operator> <lit:literal type="number" pos:line="7695" pos:column="43">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7696" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7696" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7697" pos:column="17">break;</break>

	</case><case pos:line="7699" pos:column="9">case <expr><name pos:line="7699" pos:column="14">SCI_GETUSETABS</name></expr>:
		<return pos:line="7700" pos:column="17">return <expr><name><name pos:line="7700" pos:column="24">pdoc</name><op:operator pos:line="7700" pos:column="28">-&gt;</op:operator><name pos:line="7700" pos:column="30">useTabs</name></name></expr>;</return>

	</case><case pos:line="7702" pos:column="9">case <expr><name pos:line="7702" pos:column="14">SCI_SETLINEINDENTATION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7703" pos:column="17">pdoc</name><op:operator pos:line="7703" pos:column="21">-&gt;</op:operator><name pos:line="7703" pos:column="23">SetLineIndentation</name></name><argument_list pos:line="7703" pos:column="41">(<argument><expr><name pos:line="7703" pos:column="42">wParam</name></expr></argument>, <argument><expr><name pos:line="7703" pos:column="50">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7704" pos:column="17">break;</break>

	</case><case pos:line="7706" pos:column="9">case <expr><name pos:line="7706" pos:column="14">SCI_GETLINEINDENTATION</name></expr>:
		<return pos:line="7707" pos:column="17">return <expr><call><name><name pos:line="7707" pos:column="24">pdoc</name><op:operator pos:line="7707" pos:column="28">-&gt;</op:operator><name pos:line="7707" pos:column="30">GetLineIndentation</name></name><argument_list pos:line="7707" pos:column="48">(<argument><expr><name pos:line="7707" pos:column="49">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7709" pos:column="9">case <expr><name pos:line="7709" pos:column="14">SCI_GETLINEINDENTPOSITION</name></expr>:
		<return pos:line="7710" pos:column="17">return <expr><call><name><name pos:line="7710" pos:column="24">pdoc</name><op:operator pos:line="7710" pos:column="28">-&gt;</op:operator><name pos:line="7710" pos:column="30">GetLineIndentPosition</name></name><argument_list pos:line="7710" pos:column="51">(<argument><expr><name pos:line="7710" pos:column="52">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7712" pos:column="9">case <expr><name pos:line="7712" pos:column="14">SCI_SETTABINDENTS</name></expr>:
		<expr_stmt><expr><name><name pos:line="7713" pos:column="17">pdoc</name><op:operator pos:line="7713" pos:column="21">-&gt;</op:operator><name pos:line="7713" pos:column="23">tabIndents</name></name> <op:operator pos:line="7713" pos:column="34">=</op:operator> <name pos:line="7713" pos:column="36">wParam</name> <op:operator pos:line="7713" pos:column="43">!=</op:operator> <lit:literal type="number" pos:line="7713" pos:column="46">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="7714" pos:column="17">break;</break>

	</case><case pos:line="7716" pos:column="9">case <expr><name pos:line="7716" pos:column="14">SCI_GETTABINDENTS</name></expr>:
		<return pos:line="7717" pos:column="17">return <expr><name><name pos:line="7717" pos:column="24">pdoc</name><op:operator pos:line="7717" pos:column="28">-&gt;</op:operator><name pos:line="7717" pos:column="30">tabIndents</name></name></expr>;</return>

	</case><case pos:line="7719" pos:column="9">case <expr><name pos:line="7719" pos:column="14">SCI_SETBACKSPACEUNINDENTS</name></expr>:
		<expr_stmt><expr><name><name pos:line="7720" pos:column="17">pdoc</name><op:operator pos:line="7720" pos:column="21">-&gt;</op:operator><name pos:line="7720" pos:column="23">backspaceUnindents</name></name> <op:operator pos:line="7720" pos:column="42">=</op:operator> <name pos:line="7720" pos:column="44">wParam</name> <op:operator pos:line="7720" pos:column="51">!=</op:operator> <lit:literal type="number" pos:line="7720" pos:column="54">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="7721" pos:column="17">break;</break>

	</case><case pos:line="7723" pos:column="9">case <expr><name pos:line="7723" pos:column="14">SCI_GETBACKSPACEUNINDENTS</name></expr>:
		<return pos:line="7724" pos:column="17">return <expr><name><name pos:line="7724" pos:column="24">pdoc</name><op:operator pos:line="7724" pos:column="28">-&gt;</op:operator><name pos:line="7724" pos:column="30">backspaceUnindents</name></name></expr>;</return>

	</case><case pos:line="7726" pos:column="9">case <expr><name pos:line="7726" pos:column="14">SCI_SETMOUSEDWELLTIME</name></expr>:
		<expr_stmt><expr><name pos:line="7727" pos:column="17">dwellDelay</name> <op:operator pos:line="7727" pos:column="28">=</op:operator> <name pos:line="7727" pos:column="30">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="7728" pos:column="17">ticksToDwell</name> <op:operator pos:line="7728" pos:column="30">=</op:operator> <name pos:line="7728" pos:column="32">dwellDelay</name></expr>;</expr_stmt>
		<break pos:line="7729" pos:column="17">break;</break>

	</case><case pos:line="7731" pos:column="9">case <expr><name pos:line="7731" pos:column="14">SCI_GETMOUSEDWELLTIME</name></expr>:
		<return pos:line="7732" pos:column="17">return <expr><name pos:line="7732" pos:column="24">dwellDelay</name></expr>;</return>

	</case><case pos:line="7734" pos:column="9">case <expr><name pos:line="7734" pos:column="14">SCI_WORDSTARTPOSITION</name></expr>:
		<return pos:line="7735" pos:column="17">return <expr><call><name><name pos:line="7735" pos:column="24">pdoc</name><op:operator pos:line="7735" pos:column="28">-&gt;</op:operator><name pos:line="7735" pos:column="30">ExtendWordSelect</name></name><argument_list pos:line="7735" pos:column="46">(<argument><expr><name pos:line="7735" pos:column="47">wParam</name></expr></argument>, <argument><expr><op:operator pos:line="7735" pos:column="55">-</op:operator><lit:literal type="number" pos:line="7735" pos:column="56">1</lit:literal></expr></argument>, <argument><expr><name pos:line="7735" pos:column="59">lParam</name> <op:operator pos:line="7735" pos:column="66">!=</op:operator> <lit:literal type="number" pos:line="7735" pos:column="69">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7737" pos:column="9">case <expr><name pos:line="7737" pos:column="14">SCI_WORDENDPOSITION</name></expr>:
		<return pos:line="7738" pos:column="17">return <expr><call><name><name pos:line="7738" pos:column="24">pdoc</name><op:operator pos:line="7738" pos:column="28">-&gt;</op:operator><name pos:line="7738" pos:column="30">ExtendWordSelect</name></name><argument_list pos:line="7738" pos:column="46">(<argument><expr><name pos:line="7738" pos:column="47">wParam</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="7738" pos:column="55">1</lit:literal></expr></argument>, <argument><expr><name pos:line="7738" pos:column="58">lParam</name> <op:operator pos:line="7738" pos:column="65">!=</op:operator> <lit:literal type="number" pos:line="7738" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7740" pos:column="9">case <expr><name pos:line="7740" pos:column="14">SCI_SETWRAPMODE</name></expr>:
		<switch pos:line="7741" pos:column="17">switch <condition pos:line="7741" pos:column="24">(<expr><name pos:line="7741" pos:column="25">wParam</name></expr>)</condition> <block pos:line="7741" pos:column="33">{
		<case pos:line="7742" pos:column="17">case <expr><name pos:line="7742" pos:column="22">SC_WRAP_WORD</name></expr>:
			<expr_stmt><expr><name pos:line="7743" pos:column="25">wrapState</name> <op:operator pos:line="7743" pos:column="35">=</op:operator> <name pos:line="7743" pos:column="37">eWrapWord</name></expr>;</expr_stmt>
			<break pos:line="7744" pos:column="25">break;</break>
		</case><case pos:line="7745" pos:column="17">case <expr><name pos:line="7745" pos:column="22">SC_WRAP_CHAR</name></expr>:
			<expr_stmt><expr><name pos:line="7746" pos:column="25">wrapState</name> <op:operator pos:line="7746" pos:column="35">=</op:operator> <name pos:line="7746" pos:column="37">eWrapChar</name></expr>;</expr_stmt>
			<break pos:line="7747" pos:column="25">break;</break>
		</case><default pos:line="7748" pos:column="17">default:
			<expr_stmt><expr><name pos:line="7749" pos:column="25">wrapState</name> <op:operator pos:line="7749" pos:column="35">=</op:operator> <name pos:line="7749" pos:column="37">eWrapNone</name></expr>;</expr_stmt>
			<break pos:line="7750" pos:column="25">break;</break>
		</default>}</block></switch>
		<expr_stmt><expr><name pos:line="7752" pos:column="17">xOffset</name> <op:operator pos:line="7752" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="7752" pos:column="27">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7753" pos:column="17">ContainerNeedsUpdate</name><argument_list pos:line="7753" pos:column="37">(<argument><expr><name pos:line="7753" pos:column="38">SC_UPDATE_H_SCROLL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7754" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7754" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7755" pos:column="17">ReconfigureScrollBars</name><argument_list pos:line="7755" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7756" pos:column="17">break;</break>

	</case><case pos:line="7758" pos:column="9">case <expr><name pos:line="7758" pos:column="14">SCI_GETWRAPMODE</name></expr>:
		<return pos:line="7759" pos:column="17">return <expr><name pos:line="7759" pos:column="24">wrapState</name></expr>;</return>

	</case><case pos:line="7761" pos:column="9">case <expr><name pos:line="7761" pos:column="14">SCI_SETWRAPVISUALFLAGS</name></expr>:
		<if pos:line="7762" pos:column="17">if <condition pos:line="7762" pos:column="20">(<expr><name pos:line="7762" pos:column="21">wrapVisualFlags</name> <op:operator pos:line="7762" pos:column="37">!=</op:operator> <call><name><name pos:line="7762" pos:column="40">static_cast</name><argument_list pos:line="7762" pos:column="51">&lt;<argument><expr><name pos:line="7762" pos:column="52">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7762" pos:column="56">(<argument><expr><name pos:line="7762" pos:column="57">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="7762" pos:column="65"> <block pos:line="7762" pos:column="66">{
			<expr_stmt><expr><name pos:line="7763" pos:column="25">wrapVisualFlags</name> <op:operator pos:line="7763" pos:column="41">=</op:operator> <name pos:line="7763" pos:column="43">wParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7764" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="7764" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7765" pos:column="25">ReconfigureScrollBars</name><argument_list pos:line="7765" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7767" pos:column="17">break;</break>

	</case><case pos:line="7769" pos:column="9">case <expr><name pos:line="7769" pos:column="14">SCI_GETWRAPVISUALFLAGS</name></expr>:
		<return pos:line="7770" pos:column="17">return <expr><name pos:line="7770" pos:column="24">wrapVisualFlags</name></expr>;</return>

	</case><case pos:line="7772" pos:column="9">case <expr><name pos:line="7772" pos:column="14">SCI_SETWRAPVISUALFLAGSLOCATION</name></expr>:
		<expr_stmt><expr><name pos:line="7773" pos:column="17">wrapVisualFlagsLocation</name> <op:operator pos:line="7773" pos:column="41">=</op:operator> <name pos:line="7773" pos:column="43">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7774" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7774" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7775" pos:column="17">break;</break>

	</case><case pos:line="7777" pos:column="9">case <expr><name pos:line="7777" pos:column="14">SCI_GETWRAPVISUALFLAGSLOCATION</name></expr>:
		<return pos:line="7778" pos:column="17">return <expr><name pos:line="7778" pos:column="24">wrapVisualFlagsLocation</name></expr>;</return>

	</case><case pos:line="7780" pos:column="9">case <expr><name pos:line="7780" pos:column="14">SCI_SETWRAPSTARTINDENT</name></expr>:
		<if pos:line="7781" pos:column="17">if <condition pos:line="7781" pos:column="20">(<expr><name pos:line="7781" pos:column="21">wrapVisualStartIndent</name> <op:operator pos:line="7781" pos:column="43">!=</op:operator> <call><name><name pos:line="7781" pos:column="46">static_cast</name><argument_list pos:line="7781" pos:column="57">&lt;<argument><expr><name pos:line="7781" pos:column="58">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7781" pos:column="62">(<argument><expr><name pos:line="7781" pos:column="63">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="7781" pos:column="71"> <block pos:line="7781" pos:column="72">{
			<expr_stmt><expr><name pos:line="7782" pos:column="25">wrapVisualStartIndent</name> <op:operator pos:line="7782" pos:column="47">=</op:operator> <name pos:line="7782" pos:column="49">wParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7783" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="7783" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7784" pos:column="25">ReconfigureScrollBars</name><argument_list pos:line="7784" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7786" pos:column="17">break;</break>

	</case><case pos:line="7788" pos:column="9">case <expr><name pos:line="7788" pos:column="14">SCI_GETWRAPSTARTINDENT</name></expr>:
		<return pos:line="7789" pos:column="17">return <expr><name pos:line="7789" pos:column="24">wrapVisualStartIndent</name></expr>;</return>

	</case><case pos:line="7791" pos:column="9">case <expr><name pos:line="7791" pos:column="14">SCI_SETWRAPINDENTMODE</name></expr>:
		<if pos:line="7792" pos:column="17">if <condition pos:line="7792" pos:column="20">(<expr><name pos:line="7792" pos:column="21">wrapIndentMode</name> <op:operator pos:line="7792" pos:column="36">!=</op:operator> <call><name><name pos:line="7792" pos:column="39">static_cast</name><argument_list pos:line="7792" pos:column="50">&lt;<argument><expr><name pos:line="7792" pos:column="51">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7792" pos:column="55">(<argument><expr><name pos:line="7792" pos:column="56">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="7792" pos:column="64"> <block pos:line="7792" pos:column="65">{
			<expr_stmt><expr><name pos:line="7793" pos:column="25">wrapIndentMode</name> <op:operator pos:line="7793" pos:column="40">=</op:operator> <name pos:line="7793" pos:column="42">wParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7794" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="7794" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7795" pos:column="25">ReconfigureScrollBars</name><argument_list pos:line="7795" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7797" pos:column="17">break;</break>

	</case><case pos:line="7799" pos:column="9">case <expr><name pos:line="7799" pos:column="14">SCI_GETWRAPINDENTMODE</name></expr>:
		<return pos:line="7800" pos:column="17">return <expr><name pos:line="7800" pos:column="24">wrapIndentMode</name></expr>;</return>

	</case><case pos:line="7802" pos:column="9">case <expr><name pos:line="7802" pos:column="14">SCI_SETLAYOUTCACHE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7803" pos:column="17">llc</name><op:operator pos:line="7803" pos:column="20">.</op:operator><name pos:line="7803" pos:column="21">SetLevel</name></name><argument_list pos:line="7803" pos:column="29">(<argument><expr><name pos:line="7803" pos:column="30">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7804" pos:column="17">break;</break>

	</case><case pos:line="7806" pos:column="9">case <expr><name pos:line="7806" pos:column="14">SCI_GETLAYOUTCACHE</name></expr>:
		<return pos:line="7807" pos:column="17">return <expr><call><name><name pos:line="7807" pos:column="24">llc</name><op:operator pos:line="7807" pos:column="27">.</op:operator><name pos:line="7807" pos:column="28">GetLevel</name></name><argument_list pos:line="7807" pos:column="36">()</argument_list></call></expr>;</return>

	</case><case pos:line="7809" pos:column="9">case <expr><name pos:line="7809" pos:column="14">SCI_SETPOSITIONCACHE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7810" pos:column="17">posCache</name><op:operator pos:line="7810" pos:column="25">.</op:operator><name pos:line="7810" pos:column="26">SetSize</name></name><argument_list pos:line="7810" pos:column="33">(<argument><expr><name pos:line="7810" pos:column="34">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7811" pos:column="17">break;</break>

	</case><case pos:line="7813" pos:column="9">case <expr><name pos:line="7813" pos:column="14">SCI_GETPOSITIONCACHE</name></expr>:
		<return pos:line="7814" pos:column="17">return <expr><call><name><name pos:line="7814" pos:column="24">posCache</name><op:operator pos:line="7814" pos:column="32">.</op:operator><name pos:line="7814" pos:column="33">GetSize</name></name><argument_list pos:line="7814" pos:column="40">()</argument_list></call></expr>;</return>

	</case><case pos:line="7816" pos:column="9">case <expr><name pos:line="7816" pos:column="14">SCI_SETSCROLLWIDTH</name></expr>:
		<expr_stmt><expr><call><name pos:line="7817" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="7817" pos:column="32">(<argument><expr><name pos:line="7817" pos:column="33">wParam</name> <op:operator pos:line="7817" pos:column="40">&gt;</op:operator> <lit:literal type="number" pos:line="7817" pos:column="42">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="7818" pos:column="17">if <condition pos:line="7818" pos:column="20">(<expr><op:operator pos:line="7818" pos:column="21">(</op:operator><name pos:line="7818" pos:column="22">wParam</name> <op:operator pos:line="7818" pos:column="29">&gt;</op:operator> <lit:literal type="number" pos:line="7818" pos:column="31">0</lit:literal><op:operator pos:line="7818" pos:column="32">)</op:operator> <op:operator pos:line="7818" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="7818" pos:column="37">(</op:operator><name pos:line="7818" pos:column="38">wParam</name> <op:operator pos:line="7818" pos:column="45">!=</op:operator> <call><name><name pos:line="7818" pos:column="48">static_cast</name><argument_list pos:line="7818" pos:column="59">&lt;<argument><expr><name pos:line="7818" pos:column="60">unsigned</name> <name pos:line="7818" pos:column="69">int</name></expr></argument> &gt;</argument_list></name><argument_list pos:line="7818" pos:column="74">(<argument><expr><name pos:line="7818" pos:column="75">scrollWidth</name></expr></argument>)</argument_list></call><op:operator pos:line="7818" pos:column="87">)</op:operator></expr>)</condition><then pos:line="7818" pos:column="89"> <block pos:line="7818" pos:column="90">{
			<expr_stmt><expr><name pos:line="7819" pos:column="25">lineWidthMaxSeen</name> <op:operator pos:line="7819" pos:column="42">=</op:operator> <lit:literal type="number" pos:line="7819" pos:column="44">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="7820" pos:column="25">scrollWidth</name> <op:operator pos:line="7820" pos:column="37">=</op:operator> <name pos:line="7820" pos:column="39">wParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7821" pos:column="25">SetScrollBars</name><argument_list pos:line="7821" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7823" pos:column="17">break;</break>

	</case><case pos:line="7825" pos:column="9">case <expr><name pos:line="7825" pos:column="14">SCI_GETSCROLLWIDTH</name></expr>:
		<return pos:line="7826" pos:column="17">return <expr><name pos:line="7826" pos:column="24">scrollWidth</name></expr>;</return>

	</case><case pos:line="7828" pos:column="9">case <expr><name pos:line="7828" pos:column="14">SCI_SETSCROLLWIDTHTRACKING</name></expr>:
		<expr_stmt><expr><name pos:line="7829" pos:column="17">trackLineWidth</name> <op:operator pos:line="7829" pos:column="32">=</op:operator> <name pos:line="7829" pos:column="34">wParam</name> <op:operator pos:line="7829" pos:column="41">!=</op:operator> <lit:literal type="number" pos:line="7829" pos:column="44">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="7830" pos:column="17">break;</break>

	</case><case pos:line="7832" pos:column="9">case <expr><name pos:line="7832" pos:column="14">SCI_GETSCROLLWIDTHTRACKING</name></expr>:
		<return pos:line="7833" pos:column="17">return <expr><name pos:line="7833" pos:column="24">trackLineWidth</name></expr>;</return>

	</case><case pos:line="7835" pos:column="9">case <expr><name pos:line="7835" pos:column="14">SCI_LINESJOIN</name></expr>:
		<expr_stmt><expr><call><name pos:line="7836" pos:column="17">LinesJoin</name><argument_list pos:line="7836" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7837" pos:column="17">break;</break>

	</case><case pos:line="7839" pos:column="9">case <expr><name pos:line="7839" pos:column="14">SCI_LINESSPLIT</name></expr>:
		<expr_stmt><expr><call><name pos:line="7840" pos:column="17">LinesSplit</name><argument_list pos:line="7840" pos:column="27">(<argument><expr><name pos:line="7840" pos:column="28">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7841" pos:column="17">break;</break>

	</case><case pos:line="7843" pos:column="9">case <expr><name pos:line="7843" pos:column="14">SCI_TEXTWIDTH</name></expr>:
		<expr_stmt><expr><call><name pos:line="7844" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="7844" pos:column="32">(<argument><expr><name pos:line="7844" pos:column="33">wParam</name> <op:operator pos:line="7844" pos:column="40">&lt;</op:operator> <name><name pos:line="7844" pos:column="42">vs</name><op:operator pos:line="7844" pos:column="44">.</op:operator><name pos:line="7844" pos:column="45">stylesSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7845" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="7845" pos:column="32">(<argument><expr><name pos:line="7845" pos:column="33">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="7846" pos:column="17">return <expr><call><name pos:line="7846" pos:column="24">TextWidth</name><argument_list pos:line="7846" pos:column="33">(<argument><expr><name pos:line="7846" pos:column="34">wParam</name></expr></argument>, <argument><expr><call><name pos:line="7846" pos:column="42">CharPtrFromSPtr</name><argument_list pos:line="7846" pos:column="57">(<argument><expr><name pos:line="7846" pos:column="58">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7848" pos:column="9">case <expr><name pos:line="7848" pos:column="14">SCI_TEXTHEIGHT</name></expr>:
		<return pos:line="7849" pos:column="17">return <expr><name><name pos:line="7849" pos:column="24">vs</name><op:operator pos:line="7849" pos:column="26">.</op:operator><name pos:line="7849" pos:column="27">lineHeight</name></name></expr>;</return>

	</case><case pos:line="7851" pos:column="9">case <expr><name pos:line="7851" pos:column="14">SCI_SETENDATLASTLINE</name></expr>:
		<expr_stmt><expr><call><name pos:line="7852" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="7852" pos:column="32">(<argument><expr><op:operator pos:line="7852" pos:column="33">(</op:operator><name pos:line="7852" pos:column="34">wParam</name> <op:operator pos:line="7852" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="7852" pos:column="44">0</lit:literal><op:operator pos:line="7852" pos:column="45">)</op:operator> <op:operator pos:line="7852" pos:column="47">||</op:operator> <op:operator pos:line="7852" pos:column="50">(</op:operator><name pos:line="7852" pos:column="51">wParam</name> <op:operator pos:line="7852" pos:column="58">==</op:operator> <lit:literal type="number" pos:line="7852" pos:column="61">1</lit:literal><op:operator pos:line="7852" pos:column="62">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="7853" pos:column="17">if <condition pos:line="7853" pos:column="20">(<expr><name pos:line="7853" pos:column="21">endAtLastLine</name> <op:operator pos:line="7853" pos:column="35">!=</op:operator> <op:operator pos:line="7853" pos:column="38">(</op:operator><name pos:line="7853" pos:column="39">wParam</name> <op:operator pos:line="7853" pos:column="46">!=</op:operator> <lit:literal type="number" pos:line="7853" pos:column="49">0</lit:literal><op:operator pos:line="7853" pos:column="50">)</op:operator></expr>)</condition><then pos:line="7853" pos:column="52"> <block pos:line="7853" pos:column="53">{
			<expr_stmt><expr><name pos:line="7854" pos:column="25">endAtLastLine</name> <op:operator pos:line="7854" pos:column="39">=</op:operator> <name pos:line="7854" pos:column="41">wParam</name> <op:operator pos:line="7854" pos:column="48">!=</op:operator> <lit:literal type="number" pos:line="7854" pos:column="51">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7855" pos:column="25">SetScrollBars</name><argument_list pos:line="7855" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7857" pos:column="17">break;</break>

	</case><case pos:line="7859" pos:column="9">case <expr><name pos:line="7859" pos:column="14">SCI_GETENDATLASTLINE</name></expr>:
		<return pos:line="7860" pos:column="17">return <expr><name pos:line="7860" pos:column="24">endAtLastLine</name></expr>;</return>

	</case><case pos:line="7862" pos:column="9">case <expr><name pos:line="7862" pos:column="14">SCI_SETCARETSTICKY</name></expr>:
		<expr_stmt><expr><call><name pos:line="7863" pos:column="17">PLATFORM_ASSERT</name><argument_list pos:line="7863" pos:column="32">(<argument><expr><op:operator pos:line="7863" pos:column="33">(</op:operator><name pos:line="7863" pos:column="34">wParam</name> <op:operator pos:line="7863" pos:column="41">&gt;=</op:operator> <name pos:line="7863" pos:column="44">SC_CARETSTICKY_OFF</name><op:operator pos:line="7863" pos:column="62">)</op:operator> <op:operator pos:line="7863" pos:column="64">&amp;&amp;</op:operator> <op:operator pos:line="7863" pos:column="67">(</op:operator><name pos:line="7863" pos:column="68">wParam</name> <op:operator pos:line="7863" pos:column="75">&lt;=</op:operator> <name pos:line="7863" pos:column="78">SC_CARETSTICKY_WHITESPACE</name><op:operator pos:line="7863" pos:column="103">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="7864" pos:column="17">if <condition pos:line="7864" pos:column="20">(<expr><op:operator pos:line="7864" pos:column="21">(</op:operator><name pos:line="7864" pos:column="22">wParam</name> <op:operator pos:line="7864" pos:column="29">&gt;=</op:operator> <name pos:line="7864" pos:column="32">SC_CARETSTICKY_OFF</name><op:operator pos:line="7864" pos:column="50">)</op:operator> <op:operator pos:line="7864" pos:column="52">&amp;&amp;</op:operator> <op:operator pos:line="7864" pos:column="55">(</op:operator><name pos:line="7864" pos:column="56">wParam</name> <op:operator pos:line="7864" pos:column="63">&lt;=</op:operator> <name pos:line="7864" pos:column="66">SC_CARETSTICKY_WHITESPACE</name><op:operator pos:line="7864" pos:column="91">)</op:operator></expr>)</condition><then pos:line="7864" pos:column="93"> <block pos:line="7864" pos:column="94">{
			<expr_stmt><expr><name pos:line="7865" pos:column="25">caretSticky</name> <op:operator pos:line="7865" pos:column="37">=</op:operator> <name pos:line="7865" pos:column="39">wParam</name></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7867" pos:column="17">break;</break>

	</case><case pos:line="7869" pos:column="9">case <expr><name pos:line="7869" pos:column="14">SCI_GETCARETSTICKY</name></expr>:
		<return pos:line="7870" pos:column="17">return <expr><name pos:line="7870" pos:column="24">caretSticky</name></expr>;</return>

	</case><case pos:line="7872" pos:column="9">case <expr><name pos:line="7872" pos:column="14">SCI_TOGGLECARETSTICKY</name></expr>:
		<expr_stmt><expr><name pos:line="7873" pos:column="17">caretSticky</name> <op:operator pos:line="7873" pos:column="29">=</op:operator> <op:operator pos:line="7873" pos:column="31">!</op:operator><name pos:line="7873" pos:column="32">caretSticky</name></expr>;</expr_stmt>
		<break pos:line="7874" pos:column="17">break;</break>

	</case><case pos:line="7876" pos:column="9">case <expr><name pos:line="7876" pos:column="14">SCI_GETCOLUMN</name></expr>:
		<return pos:line="7877" pos:column="17">return <expr><call><name><name pos:line="7877" pos:column="24">pdoc</name><op:operator pos:line="7877" pos:column="28">-&gt;</op:operator><name pos:line="7877" pos:column="30">GetColumn</name></name><argument_list pos:line="7877" pos:column="39">(<argument><expr><name pos:line="7877" pos:column="40">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7879" pos:column="9">case <expr><name pos:line="7879" pos:column="14">SCI_FINDCOLUMN</name></expr>:
		<return pos:line="7880" pos:column="17">return <expr><call><name><name pos:line="7880" pos:column="24">pdoc</name><op:operator pos:line="7880" pos:column="28">-&gt;</op:operator><name pos:line="7880" pos:column="30">FindColumn</name></name><argument_list pos:line="7880" pos:column="40">(<argument><expr><name pos:line="7880" pos:column="41">wParam</name></expr></argument>, <argument><expr><name pos:line="7880" pos:column="49">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7882" pos:column="9">case <expr><name pos:line="7882" pos:column="14">SCI_SETHSCROLLBAR</name></expr> :
		<if pos:line="7883" pos:column="17">if <condition pos:line="7883" pos:column="20">(<expr><name pos:line="7883" pos:column="21">horizontalScrollBarVisible</name> <op:operator pos:line="7883" pos:column="48">!=</op:operator> <op:operator pos:line="7883" pos:column="51">(</op:operator><name pos:line="7883" pos:column="52">wParam</name> <op:operator pos:line="7883" pos:column="59">!=</op:operator> <lit:literal type="number" pos:line="7883" pos:column="62">0</lit:literal><op:operator pos:line="7883" pos:column="63">)</op:operator></expr>)</condition><then pos:line="7883" pos:column="65"> <block pos:line="7883" pos:column="66">{
			<expr_stmt><expr><name pos:line="7884" pos:column="25">horizontalScrollBarVisible</name> <op:operator pos:line="7884" pos:column="52">=</op:operator> <name pos:line="7884" pos:column="54">wParam</name> <op:operator pos:line="7884" pos:column="61">!=</op:operator> <lit:literal type="number" pos:line="7884" pos:column="64">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7885" pos:column="25">SetScrollBars</name><argument_list pos:line="7885" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7886" pos:column="25">ReconfigureScrollBars</name><argument_list pos:line="7886" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7888" pos:column="17">break;</break>

	</case><case pos:line="7890" pos:column="9">case <expr><name pos:line="7890" pos:column="14">SCI_GETHSCROLLBAR</name></expr>:
		<return pos:line="7891" pos:column="17">return <expr><name pos:line="7891" pos:column="24">horizontalScrollBarVisible</name></expr>;</return>

	</case><case pos:line="7893" pos:column="9">case <expr><name pos:line="7893" pos:column="14">SCI_SETVSCROLLBAR</name></expr>:
		<if pos:line="7894" pos:column="17">if <condition pos:line="7894" pos:column="20">(<expr><name pos:line="7894" pos:column="21">verticalScrollBarVisible</name> <op:operator pos:line="7894" pos:column="46">!=</op:operator> <op:operator pos:line="7894" pos:column="49">(</op:operator><name pos:line="7894" pos:column="50">wParam</name> <op:operator pos:line="7894" pos:column="57">!=</op:operator> <lit:literal type="number" pos:line="7894" pos:column="60">0</lit:literal><op:operator pos:line="7894" pos:column="61">)</op:operator></expr>)</condition><then pos:line="7894" pos:column="63"> <block pos:line="7894" pos:column="64">{
			<expr_stmt><expr><name pos:line="7895" pos:column="25">verticalScrollBarVisible</name> <op:operator pos:line="7895" pos:column="50">=</op:operator> <name pos:line="7895" pos:column="52">wParam</name> <op:operator pos:line="7895" pos:column="59">!=</op:operator> <lit:literal type="number" pos:line="7895" pos:column="62">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7896" pos:column="25">SetScrollBars</name><argument_list pos:line="7896" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7897" pos:column="25">ReconfigureScrollBars</name><argument_list pos:line="7897" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7899" pos:column="17">break;</break>

	</case><case pos:line="7901" pos:column="9">case <expr><name pos:line="7901" pos:column="14">SCI_GETVSCROLLBAR</name></expr>:
		<return pos:line="7902" pos:column="17">return <expr><name pos:line="7902" pos:column="24">verticalScrollBarVisible</name></expr>;</return>

	</case><case pos:line="7904" pos:column="9">case <expr><name pos:line="7904" pos:column="14">SCI_SETINDENTATIONGUIDES</name></expr>:
		<expr_stmt><expr><name><name pos:line="7905" pos:column="17">vs</name><op:operator pos:line="7905" pos:column="19">.</op:operator><name pos:line="7905" pos:column="20">viewIndentationGuides</name></name> <op:operator pos:line="7905" pos:column="42">=</op:operator> <call><name pos:line="7905" pos:column="44">IndentView</name><argument_list pos:line="7905" pos:column="54">(<argument><expr><name pos:line="7905" pos:column="55">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7906" pos:column="17">Redraw</name><argument_list pos:line="7906" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7907" pos:column="17">break;</break>

	</case><case pos:line="7909" pos:column="9">case <expr><name pos:line="7909" pos:column="14">SCI_GETINDENTATIONGUIDES</name></expr>:
		<return pos:line="7910" pos:column="17">return <expr><name><name pos:line="7910" pos:column="24">vs</name><op:operator pos:line="7910" pos:column="26">.</op:operator><name pos:line="7910" pos:column="27">viewIndentationGuides</name></name></expr>;</return>

	</case><case pos:line="7912" pos:column="9">case <expr><name pos:line="7912" pos:column="14">SCI_SETHIGHLIGHTGUIDE</name></expr>:
		<if pos:line="7913" pos:column="17">if <condition pos:line="7913" pos:column="20">(<expr><op:operator pos:line="7913" pos:column="21">(</op:operator><name pos:line="7913" pos:column="22">highlightGuideColumn</name> <op:operator pos:line="7913" pos:column="43">!=</op:operator> <call><name><name pos:line="7913" pos:column="46">static_cast</name><argument_list pos:line="7913" pos:column="57">&lt;<argument><expr><name pos:line="7913" pos:column="58">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7913" pos:column="62">(<argument><expr><name pos:line="7913" pos:column="63">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="7913" pos:column="70">)</op:operator> <op:operator pos:line="7913" pos:column="72">||</op:operator> <op:operator pos:line="7913" pos:column="75">(</op:operator><name pos:line="7913" pos:column="76">wParam</name> <op:operator pos:line="7913" pos:column="83">&gt;</op:operator> <lit:literal type="number" pos:line="7913" pos:column="85">0</lit:literal><op:operator pos:line="7913" pos:column="86">)</op:operator></expr>)</condition><then pos:line="7913" pos:column="88"> <block pos:line="7913" pos:column="89">{
			<expr_stmt><expr><name pos:line="7914" pos:column="25">highlightGuideColumn</name> <op:operator pos:line="7914" pos:column="46">=</op:operator> <name pos:line="7914" pos:column="48">wParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7915" pos:column="25">Redraw</name><argument_list pos:line="7915" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7917" pos:column="17">break;</break>

	</case><case pos:line="7919" pos:column="9">case <expr><name pos:line="7919" pos:column="14">SCI_GETHIGHLIGHTGUIDE</name></expr>:
		<return pos:line="7920" pos:column="17">return <expr><name pos:line="7920" pos:column="24">highlightGuideColumn</name></expr>;</return>

	</case><case pos:line="7922" pos:column="9">case <expr><name pos:line="7922" pos:column="14">SCI_GETLINEENDPOSITION</name></expr>:
		<return pos:line="7923" pos:column="17">return <expr><call><name><name pos:line="7923" pos:column="24">pdoc</name><op:operator pos:line="7923" pos:column="28">-&gt;</op:operator><name pos:line="7923" pos:column="30">LineEnd</name></name><argument_list pos:line="7923" pos:column="37">(<argument><expr><name pos:line="7923" pos:column="38">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="7925" pos:column="9">case <expr><name pos:line="7925" pos:column="14">SCI_SETCODEPAGE</name></expr>:
		<if pos:line="7926" pos:column="17">if <condition pos:line="7926" pos:column="20">(<expr><call><name pos:line="7926" pos:column="21">ValidCodePage</name><argument_list pos:line="7926" pos:column="34">(<argument><expr><name pos:line="7926" pos:column="35">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="7926" pos:column="43"> <block pos:line="7926" pos:column="44">{
			<expr_stmt><expr><name><name pos:line="7927" pos:column="25">pdoc</name><op:operator pos:line="7927" pos:column="29">-&gt;</op:operator><name pos:line="7927" pos:column="31">dbcsCodePage</name></name> <op:operator pos:line="7927" pos:column="44">=</op:operator> <name pos:line="7927" pos:column="46">wParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="7928" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="7928" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="7930" pos:column="17">break;</break>

	</case><case pos:line="7932" pos:column="9">case <expr><name pos:line="7932" pos:column="14">SCI_GETCODEPAGE</name></expr>:
		<return pos:line="7933" pos:column="17">return <expr><name><name pos:line="7933" pos:column="24">pdoc</name><op:operator pos:line="7933" pos:column="28">-&gt;</op:operator><name pos:line="7933" pos:column="30">dbcsCodePage</name></name></expr>;</return>

	</case><case pos:line="7935" pos:column="9">case <expr><name pos:line="7935" pos:column="14">SCI_SETUSEPALETTE</name></expr>:
		<expr_stmt><expr><name><name pos:line="7936" pos:column="17">palette</name><op:operator pos:line="7936" pos:column="24">.</op:operator><name pos:line="7936" pos:column="25">allowRealization</name></name> <op:operator pos:line="7936" pos:column="42">=</op:operator> <name pos:line="7936" pos:column="44">wParam</name> <op:operator pos:line="7936" pos:column="51">!=</op:operator> <lit:literal type="number" pos:line="7936" pos:column="54">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7937" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7937" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7938" pos:column="17">break;</break>

	</case><case pos:line="7940" pos:column="9">case <expr><name pos:line="7940" pos:column="14">SCI_GETUSEPALETTE</name></expr>:
		<return pos:line="7941" pos:column="17">return <expr><name><name pos:line="7941" pos:column="24">palette</name><op:operator pos:line="7941" pos:column="31">.</op:operator><name pos:line="7941" pos:column="32">allowRealization</name></name></expr>;</return>

		<comment type="line" pos:line="7943" pos:column="17">// Marker definition and setting</comment>
	</case><case pos:line="7944" pos:column="9">case <expr><name pos:line="7944" pos:column="14">SCI_MARKERDEFINE</name></expr>:
		<if pos:line="7945" pos:column="17">if <condition pos:line="7945" pos:column="20">(<expr><name pos:line="7945" pos:column="21">wParam</name> <op:operator pos:line="7945" pos:column="28">&lt;=</op:operator> <name pos:line="7945" pos:column="31">MARKER_MAX</name></expr>)</condition><then pos:line="7945" pos:column="42">
			<expr_stmt><expr><name><name pos:line="7946" pos:column="25">vs</name><op:operator pos:line="7946" pos:column="27">.</op:operator><name pos:line="7946" pos:column="28">markers</name><index pos:line="7946" pos:column="35">[<expr><name pos:line="7946" pos:column="36">wParam</name></expr>]</index></name><op:operator pos:line="7946" pos:column="43">.</op:operator><name pos:line="7946" pos:column="44">markType</name> <op:operator pos:line="7946" pos:column="53">=</op:operator> <name pos:line="7946" pos:column="55">lParam</name></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="7947" pos:column="17">InvalidateStyleData</name><argument_list pos:line="7947" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7948" pos:column="17">RedrawSelMargin</name><argument_list pos:line="7948" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7949" pos:column="17">break;</break>

	</case><case pos:line="7951" pos:column="9">case <expr><name pos:line="7951" pos:column="14">SCI_MARKERSYMBOLDEFINED</name></expr>:
		<if pos:line="7952" pos:column="17">if <condition pos:line="7952" pos:column="20">(<expr><name pos:line="7952" pos:column="21">wParam</name> <op:operator pos:line="7952" pos:column="28">&lt;=</op:operator> <name pos:line="7952" pos:column="31">MARKER_MAX</name></expr>)</condition><then pos:line="7952" pos:column="42">
			<return pos:line="7953" pos:column="25">return <expr><name><name pos:line="7953" pos:column="32">vs</name><op:operator pos:line="7953" pos:column="34">.</op:operator><name pos:line="7953" pos:column="35">markers</name><index pos:line="7953" pos:column="42">[<expr><name pos:line="7953" pos:column="43">wParam</name></expr>]</index></name><op:operator pos:line="7953" pos:column="50">.</op:operator><name pos:line="7953" pos:column="51">markType</name></expr>;</return></then>
		<else pos:line="7954" pos:column="17">else
			<return pos:line="7955" pos:column="25">return <expr><lit:literal type="number" pos:line="7955" pos:column="32">0</lit:literal></expr>;</return></else></if>

	</case><case pos:line="7957" pos:column="9">case <expr><name pos:line="7957" pos:column="14">SCI_MARKERSETFORE</name></expr>:
		<if pos:line="7958" pos:column="17">if <condition pos:line="7958" pos:column="20">(<expr><name pos:line="7958" pos:column="21">wParam</name> <op:operator pos:line="7958" pos:column="28">&lt;=</op:operator> <name pos:line="7958" pos:column="31">MARKER_MAX</name></expr>)</condition><then pos:line="7958" pos:column="42">
			<expr_stmt><expr><name><name pos:line="7959" pos:column="25">vs</name><op:operator pos:line="7959" pos:column="27">.</op:operator><name pos:line="7959" pos:column="28">markers</name><index pos:line="7959" pos:column="35">[<expr><name pos:line="7959" pos:column="36">wParam</name></expr>]</index></name><op:operator pos:line="7959" pos:column="43">.</op:operator><name><name pos:line="7959" pos:column="44">fore</name><op:operator pos:line="7959" pos:column="48">.</op:operator><name pos:line="7959" pos:column="49">desired</name></name> <op:operator pos:line="7959" pos:column="57">=</op:operator> <call><name pos:line="7959" pos:column="59">ColourDesired</name><argument_list pos:line="7959" pos:column="72">(<argument><expr><name pos:line="7959" pos:column="73">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="7960" pos:column="17">InvalidateStyleData</name><argument_list pos:line="7960" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7961" pos:column="17">RedrawSelMargin</name><argument_list pos:line="7961" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7962" pos:column="17">break;</break>
	</case><case pos:line="7963" pos:column="9">case <expr><name pos:line="7963" pos:column="14">SCI_MARKERSETBACKSELECTED</name></expr>:
		<if pos:line="7964" pos:column="17">if <condition pos:line="7964" pos:column="20">(<expr><name pos:line="7964" pos:column="21">wParam</name> <op:operator pos:line="7964" pos:column="28">&lt;=</op:operator> <name pos:line="7964" pos:column="31">MARKER_MAX</name></expr>)</condition><then pos:line="7964" pos:column="42">
			<expr_stmt><expr><name><name pos:line="7965" pos:column="25">vs</name><op:operator pos:line="7965" pos:column="27">.</op:operator><name pos:line="7965" pos:column="28">markers</name><index pos:line="7965" pos:column="35">[<expr><name pos:line="7965" pos:column="36">wParam</name></expr>]</index></name><op:operator pos:line="7965" pos:column="43">.</op:operator><name><name pos:line="7965" pos:column="44">backSelected</name><op:operator pos:line="7965" pos:column="56">.</op:operator><name pos:line="7965" pos:column="57">desired</name></name> <op:operator pos:line="7965" pos:column="65">=</op:operator> <call><name pos:line="7965" pos:column="67">ColourDesired</name><argument_list pos:line="7965" pos:column="80">(<argument><expr><name pos:line="7965" pos:column="81">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="7966" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7966" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7967" pos:column="17">break;</break>
	</case><case pos:line="7968" pos:column="9">case <expr><name pos:line="7968" pos:column="14">SCI_MARKERENABLEHIGHLIGHT</name></expr>:
		<expr_stmt><expr><name><name pos:line="7969" pos:column="17">highlightDelimiter</name><op:operator pos:line="7969" pos:column="35">.</op:operator><name pos:line="7969" pos:column="36">isEnabled</name></name> <op:operator pos:line="7969" pos:column="46">=</op:operator> <name pos:line="7969" pos:column="48">wParam</name> <op:operator pos:line="7969" pos:column="55">==</op:operator> <lit:literal type="number" pos:line="7969" pos:column="58">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7970" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7970" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7971" pos:column="17">break;</break>
	</case><case pos:line="7972" pos:column="9">case <expr><name pos:line="7972" pos:column="14">SCI_MARKERSETBACK</name></expr>:
		<if pos:line="7973" pos:column="17">if <condition pos:line="7973" pos:column="20">(<expr><name pos:line="7973" pos:column="21">wParam</name> <op:operator pos:line="7973" pos:column="28">&lt;=</op:operator> <name pos:line="7973" pos:column="31">MARKER_MAX</name></expr>)</condition><then pos:line="7973" pos:column="42">
			<expr_stmt><expr><name><name pos:line="7974" pos:column="25">vs</name><op:operator pos:line="7974" pos:column="27">.</op:operator><name pos:line="7974" pos:column="28">markers</name><index pos:line="7974" pos:column="35">[<expr><name pos:line="7974" pos:column="36">wParam</name></expr>]</index></name><op:operator pos:line="7974" pos:column="43">.</op:operator><name><name pos:line="7974" pos:column="44">back</name><op:operator pos:line="7974" pos:column="48">.</op:operator><name pos:line="7974" pos:column="49">desired</name></name> <op:operator pos:line="7974" pos:column="57">=</op:operator> <call><name pos:line="7974" pos:column="59">ColourDesired</name><argument_list pos:line="7974" pos:column="72">(<argument><expr><name pos:line="7974" pos:column="73">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="7975" pos:column="17">InvalidateStyleData</name><argument_list pos:line="7975" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="7976" pos:column="17">RedrawSelMargin</name><argument_list pos:line="7976" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7977" pos:column="17">break;</break>
	</case><case pos:line="7978" pos:column="9">case <expr><name pos:line="7978" pos:column="14">SCI_MARKERSETALPHA</name></expr>:
		<if pos:line="7979" pos:column="17">if <condition pos:line="7979" pos:column="20">(<expr><name pos:line="7979" pos:column="21">wParam</name> <op:operator pos:line="7979" pos:column="28">&lt;=</op:operator> <name pos:line="7979" pos:column="31">MARKER_MAX</name></expr>)</condition><then pos:line="7979" pos:column="42">
			<expr_stmt><expr><name><name pos:line="7980" pos:column="25">vs</name><op:operator pos:line="7980" pos:column="27">.</op:operator><name pos:line="7980" pos:column="28">markers</name><index pos:line="7980" pos:column="35">[<expr><name pos:line="7980" pos:column="36">wParam</name></expr>]</index></name><op:operator pos:line="7980" pos:column="43">.</op:operator><name pos:line="7980" pos:column="44">alpha</name> <op:operator pos:line="7980" pos:column="50">=</op:operator> <name pos:line="7980" pos:column="52">lParam</name></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="7981" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="7981" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7982" pos:column="17">break;</break>
	</case><case pos:line="7983" pos:column="9">case <expr><name pos:line="7983" pos:column="14">SCI_MARKERADD</name></expr>: <block pos:line="7983" pos:column="29">{
			<decl_stmt><decl><type><name pos:line="7984" pos:column="25">int</name></type> <name pos:line="7984" pos:column="29">markerID</name> <init pos:line="7984" pos:column="38">= <expr><call><name><name pos:line="7984" pos:column="40">pdoc</name><op:operator pos:line="7984" pos:column="44">-&gt;</op:operator><name pos:line="7984" pos:column="46">AddMark</name></name><argument_list pos:line="7984" pos:column="53">(<argument><expr><name pos:line="7984" pos:column="54">wParam</name></expr></argument>, <argument><expr><name pos:line="7984" pos:column="62">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="7985" pos:column="25">return <expr><name pos:line="7985" pos:column="32">markerID</name></expr>;</return>
		}</block>
	</case><case pos:line="7987" pos:column="9">case <expr><name pos:line="7987" pos:column="14">SCI_MARKERADDSET</name></expr>:
		<if pos:line="7988" pos:column="17">if <condition pos:line="7988" pos:column="20">(<expr><name pos:line="7988" pos:column="21">lParam</name> <op:operator pos:line="7988" pos:column="28">!=</op:operator> <lit:literal type="number" pos:line="7988" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="7988" pos:column="33">
			<expr_stmt><expr><call><name><name pos:line="7989" pos:column="25">pdoc</name><op:operator pos:line="7989" pos:column="29">-&gt;</op:operator><name pos:line="7989" pos:column="31">AddMarkSet</name></name><argument_list pos:line="7989" pos:column="41">(<argument><expr><name pos:line="7989" pos:column="42">wParam</name></expr></argument>, <argument><expr><name pos:line="7989" pos:column="50">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<break pos:line="7990" pos:column="17">break;</break>

	</case><case pos:line="7992" pos:column="9">case <expr><name pos:line="7992" pos:column="14">SCI_MARKERDELETE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7993" pos:column="17">pdoc</name><op:operator pos:line="7993" pos:column="21">-&gt;</op:operator><name pos:line="7993" pos:column="23">DeleteMark</name></name><argument_list pos:line="7993" pos:column="33">(<argument><expr><name pos:line="7993" pos:column="34">wParam</name></expr></argument>, <argument><expr><name pos:line="7993" pos:column="42">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7994" pos:column="17">break;</break>

	</case><case pos:line="7996" pos:column="9">case <expr><name pos:line="7996" pos:column="14">SCI_MARKERDELETEALL</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="7997" pos:column="17">pdoc</name><op:operator pos:line="7997" pos:column="21">-&gt;</op:operator><name pos:line="7997" pos:column="23">DeleteAllMarks</name></name><argument_list pos:line="7997" pos:column="37">(<argument><expr><call><name><name pos:line="7997" pos:column="38">static_cast</name><argument_list pos:line="7997" pos:column="49">&lt;<argument><expr><name pos:line="7997" pos:column="50">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="7997" pos:column="54">(<argument><expr><name pos:line="7997" pos:column="55">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="7998" pos:column="17">break;</break>

	</case><case pos:line="8000" pos:column="9">case <expr><name pos:line="8000" pos:column="14">SCI_MARKERGET</name></expr>:
		<return pos:line="8001" pos:column="17">return <expr><call><name><name pos:line="8001" pos:column="24">pdoc</name><op:operator pos:line="8001" pos:column="28">-&gt;</op:operator><name pos:line="8001" pos:column="30">GetMark</name></name><argument_list pos:line="8001" pos:column="37">(<argument><expr><name pos:line="8001" pos:column="38">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8003" pos:column="9">case <expr><name pos:line="8003" pos:column="14">SCI_MARKERNEXT</name></expr>: <block pos:line="8003" pos:column="30">{
			<decl_stmt><decl><type><name pos:line="8004" pos:column="25">int</name></type> <name pos:line="8004" pos:column="29">lt</name> <init pos:line="8004" pos:column="32">= <expr><call><name><name pos:line="8004" pos:column="34">pdoc</name><op:operator pos:line="8004" pos:column="38">-&gt;</op:operator><name pos:line="8004" pos:column="40">LinesTotal</name></name><argument_list pos:line="8004" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="8005" pos:column="25">for (<init><decl><type><name pos:line="8005" pos:column="30">int</name></type> <name pos:line="8005" pos:column="34">iLine</name> <init pos:line="8005" pos:column="40">= <expr><name pos:line="8005" pos:column="42">wParam</name></expr></init></decl>;</init> <condition><expr><name pos:line="8005" pos:column="50">iLine</name> <op:operator pos:line="8005" pos:column="56">&lt;</op:operator> <name pos:line="8005" pos:column="58">lt</name></expr>;</condition> <incr><expr><name pos:line="8005" pos:column="62">iLine</name><op:operator pos:line="8005" pos:column="67">++</op:operator></expr></incr>) <block pos:line="8005" pos:column="71">{
				<if pos:line="8006" pos:column="33">if <condition pos:line="8006" pos:column="36">(<expr><op:operator pos:line="8006" pos:column="37">(</op:operator><call><name><name pos:line="8006" pos:column="38">pdoc</name><op:operator pos:line="8006" pos:column="42">-&gt;</op:operator><name pos:line="8006" pos:column="44">GetMark</name></name><argument_list pos:line="8006" pos:column="51">(<argument><expr><name pos:line="8006" pos:column="52">iLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="8006" pos:column="59">&amp;</op:operator> <name pos:line="8006" pos:column="61">lParam</name><op:operator pos:line="8006" pos:column="67">)</op:operator> <op:operator pos:line="8006" pos:column="69">!=</op:operator> <lit:literal type="number" pos:line="8006" pos:column="72">0</lit:literal></expr>)</condition><then pos:line="8006" pos:column="74">
					<return pos:line="8007" pos:column="41">return <expr><name pos:line="8007" pos:column="48">iLine</name></expr>;</return></then></if>
			}</block></for>
		}</block>
		<return pos:line="8010" pos:column="17">return <expr><op:operator pos:line="8010" pos:column="24">-</op:operator><lit:literal type="number" pos:line="8010" pos:column="25">1</lit:literal></expr>;</return>

	</case><case pos:line="8012" pos:column="9">case <expr><name pos:line="8012" pos:column="14">SCI_MARKERPREVIOUS</name></expr>: <block pos:line="8012" pos:column="34">{
			<for pos:line="8013" pos:column="25">for (<init><decl><type><name pos:line="8013" pos:column="30">int</name></type> <name pos:line="8013" pos:column="34">iLine</name> <init pos:line="8013" pos:column="40">= <expr><name pos:line="8013" pos:column="42">wParam</name></expr></init></decl>;</init> <condition><expr><name pos:line="8013" pos:column="50">iLine</name> <op:operator pos:line="8013" pos:column="56">&gt;=</op:operator> <lit:literal type="number" pos:line="8013" pos:column="59">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="8013" pos:column="62">iLine</name><op:operator pos:line="8013" pos:column="67">--</op:operator></expr></incr>) <block pos:line="8013" pos:column="71">{
				<if pos:line="8014" pos:column="33">if <condition pos:line="8014" pos:column="36">(<expr><op:operator pos:line="8014" pos:column="37">(</op:operator><call><name><name pos:line="8014" pos:column="38">pdoc</name><op:operator pos:line="8014" pos:column="42">-&gt;</op:operator><name pos:line="8014" pos:column="44">GetMark</name></name><argument_list pos:line="8014" pos:column="51">(<argument><expr><name pos:line="8014" pos:column="52">iLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="8014" pos:column="59">&amp;</op:operator> <name pos:line="8014" pos:column="61">lParam</name><op:operator pos:line="8014" pos:column="67">)</op:operator> <op:operator pos:line="8014" pos:column="69">!=</op:operator> <lit:literal type="number" pos:line="8014" pos:column="72">0</lit:literal></expr>)</condition><then pos:line="8014" pos:column="74">
					<return pos:line="8015" pos:column="41">return <expr><name pos:line="8015" pos:column="48">iLine</name></expr>;</return></then></if>
			}</block></for>
		}</block>
		<return pos:line="8018" pos:column="17">return <expr><op:operator pos:line="8018" pos:column="24">-</op:operator><lit:literal type="number" pos:line="8018" pos:column="25">1</lit:literal></expr>;</return>

	</case><case pos:line="8020" pos:column="9">case <expr><name pos:line="8020" pos:column="14">SCI_MARKERDEFINEPIXMAP</name></expr>:
		<if pos:line="8021" pos:column="17">if <condition pos:line="8021" pos:column="20">(<expr><name pos:line="8021" pos:column="21">wParam</name> <op:operator pos:line="8021" pos:column="28">&lt;=</op:operator> <name pos:line="8021" pos:column="31">MARKER_MAX</name></expr>)</condition><then pos:line="8021" pos:column="42"> <block pos:line="8021" pos:column="43">{
			<expr_stmt><expr><name><name pos:line="8022" pos:column="25">vs</name><op:operator pos:line="8022" pos:column="27">.</op:operator><name pos:line="8022" pos:column="28">markers</name><index pos:line="8022" pos:column="35">[<expr><name pos:line="8022" pos:column="36">wParam</name></expr>]</index></name><op:operator pos:line="8022" pos:column="43">.</op:operator><call><name pos:line="8022" pos:column="44">SetXPM</name><argument_list pos:line="8022" pos:column="50">(<argument><expr><call><name pos:line="8022" pos:column="51">CharPtrFromSPtr</name><argument_list pos:line="8022" pos:column="66">(<argument><expr><name pos:line="8022" pos:column="67">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if><empty_stmt pos:line="8023" pos:column="18">;</empty_stmt>
		<expr_stmt><expr><call><name pos:line="8024" pos:column="17">InvalidateStyleData</name><argument_list pos:line="8024" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8025" pos:column="17">RedrawSelMargin</name><argument_list pos:line="8025" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8026" pos:column="17">break;</break>

	</case><case pos:line="8028" pos:column="9">case <expr><name pos:line="8028" pos:column="14">SCI_SETMARGINTYPEN</name></expr>:
		<if pos:line="8029" pos:column="17">if <condition pos:line="8029" pos:column="20">(<expr><call><name pos:line="8029" pos:column="21">ValidMargin</name><argument_list pos:line="8029" pos:column="32">(<argument><expr><name pos:line="8029" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8029" pos:column="41"> <block pos:line="8029" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="8030" pos:column="25">vs</name><op:operator pos:line="8030" pos:column="27">.</op:operator><name pos:line="8030" pos:column="28">ms</name><index pos:line="8030" pos:column="30">[<expr><name pos:line="8030" pos:column="31">wParam</name></expr>]</index></name><op:operator pos:line="8030" pos:column="38">.</op:operator><name pos:line="8030" pos:column="39">style</name> <op:operator pos:line="8030" pos:column="45">=</op:operator> <name pos:line="8030" pos:column="47">lParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="8031" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="8031" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8033" pos:column="17">break;</break>

	</case><case pos:line="8035" pos:column="9">case <expr><name pos:line="8035" pos:column="14">SCI_GETMARGINTYPEN</name></expr>:
		<if pos:line="8036" pos:column="17">if <condition pos:line="8036" pos:column="20">(<expr><call><name pos:line="8036" pos:column="21">ValidMargin</name><argument_list pos:line="8036" pos:column="32">(<argument><expr><name pos:line="8036" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8036" pos:column="41">
			<return pos:line="8037" pos:column="25">return <expr><name><name pos:line="8037" pos:column="32">vs</name><op:operator pos:line="8037" pos:column="34">.</op:operator><name pos:line="8037" pos:column="35">ms</name><index pos:line="8037" pos:column="37">[<expr><name pos:line="8037" pos:column="38">wParam</name></expr>]</index></name><op:operator pos:line="8037" pos:column="45">.</op:operator><name pos:line="8037" pos:column="46">style</name></expr>;</return></then>
		<else pos:line="8038" pos:column="17">else
			<return pos:line="8039" pos:column="25">return <expr><lit:literal type="number" pos:line="8039" pos:column="32">0</lit:literal></expr>;</return></else></if>

	</case><case pos:line="8041" pos:column="9">case <expr><name pos:line="8041" pos:column="14">SCI_SETMARGINWIDTHN</name></expr>:
		<if pos:line="8042" pos:column="17">if <condition pos:line="8042" pos:column="20">(<expr><call><name pos:line="8042" pos:column="21">ValidMargin</name><argument_list pos:line="8042" pos:column="32">(<argument><expr><name pos:line="8042" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8042" pos:column="41"> <block pos:line="8042" pos:column="42">{
			<comment type="line" pos:line="8043" pos:column="25">// Short-circuit if the width is unchanged, to avoid unnecessary redraw.</comment>
			<if pos:line="8044" pos:column="25">if <condition pos:line="8044" pos:column="28">(<expr><name><name pos:line="8044" pos:column="29">vs</name><op:operator pos:line="8044" pos:column="31">.</op:operator><name pos:line="8044" pos:column="32">ms</name><index pos:line="8044" pos:column="34">[<expr><name pos:line="8044" pos:column="35">wParam</name></expr>]</index></name><op:operator pos:line="8044" pos:column="42">.</op:operator><name pos:line="8044" pos:column="43">width</name> <op:operator pos:line="8044" pos:column="49">!=</op:operator> <name pos:line="8044" pos:column="52">lParam</name></expr>)</condition><then pos:line="8044" pos:column="59"> <block pos:line="8044" pos:column="60">{
				<expr_stmt><expr><name><name pos:line="8045" pos:column="33">vs</name><op:operator pos:line="8045" pos:column="35">.</op:operator><name pos:line="8045" pos:column="36">ms</name><index pos:line="8045" pos:column="38">[<expr><name pos:line="8045" pos:column="39">wParam</name></expr>]</index></name><op:operator pos:line="8045" pos:column="46">.</op:operator><name pos:line="8045" pos:column="47">width</name> <op:operator pos:line="8045" pos:column="53">=</op:operator> <name pos:line="8045" pos:column="55">lParam</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="8046" pos:column="33">InvalidateStyleRedraw</name><argument_list pos:line="8046" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<break pos:line="8049" pos:column="17">break;</break>

	</case><case pos:line="8051" pos:column="9">case <expr><name pos:line="8051" pos:column="14">SCI_GETMARGINWIDTHN</name></expr>:
		<if pos:line="8052" pos:column="17">if <condition pos:line="8052" pos:column="20">(<expr><call><name pos:line="8052" pos:column="21">ValidMargin</name><argument_list pos:line="8052" pos:column="32">(<argument><expr><name pos:line="8052" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8052" pos:column="41">
			<return pos:line="8053" pos:column="25">return <expr><name><name pos:line="8053" pos:column="32">vs</name><op:operator pos:line="8053" pos:column="34">.</op:operator><name pos:line="8053" pos:column="35">ms</name><index pos:line="8053" pos:column="37">[<expr><name pos:line="8053" pos:column="38">wParam</name></expr>]</index></name><op:operator pos:line="8053" pos:column="45">.</op:operator><name pos:line="8053" pos:column="46">width</name></expr>;</return></then>
		<else pos:line="8054" pos:column="17">else
			<return pos:line="8055" pos:column="25">return <expr><lit:literal type="number" pos:line="8055" pos:column="32">0</lit:literal></expr>;</return></else></if>

	</case><case pos:line="8057" pos:column="9">case <expr><name pos:line="8057" pos:column="14">SCI_SETMARGINMASKN</name></expr>:
		<if pos:line="8058" pos:column="17">if <condition pos:line="8058" pos:column="20">(<expr><call><name pos:line="8058" pos:column="21">ValidMargin</name><argument_list pos:line="8058" pos:column="32">(<argument><expr><name pos:line="8058" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8058" pos:column="41"> <block pos:line="8058" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="8059" pos:column="25">vs</name><op:operator pos:line="8059" pos:column="27">.</op:operator><name pos:line="8059" pos:column="28">ms</name><index pos:line="8059" pos:column="30">[<expr><name pos:line="8059" pos:column="31">wParam</name></expr>]</index></name><op:operator pos:line="8059" pos:column="38">.</op:operator><name pos:line="8059" pos:column="39">mask</name> <op:operator pos:line="8059" pos:column="44">=</op:operator> <name pos:line="8059" pos:column="46">lParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="8060" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="8060" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8062" pos:column="17">break;</break>

	</case><case pos:line="8064" pos:column="9">case <expr><name pos:line="8064" pos:column="14">SCI_GETMARGINMASKN</name></expr>:
		<if pos:line="8065" pos:column="17">if <condition pos:line="8065" pos:column="20">(<expr><call><name pos:line="8065" pos:column="21">ValidMargin</name><argument_list pos:line="8065" pos:column="32">(<argument><expr><name pos:line="8065" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8065" pos:column="41">
			<return pos:line="8066" pos:column="25">return <expr><name><name pos:line="8066" pos:column="32">vs</name><op:operator pos:line="8066" pos:column="34">.</op:operator><name pos:line="8066" pos:column="35">ms</name><index pos:line="8066" pos:column="37">[<expr><name pos:line="8066" pos:column="38">wParam</name></expr>]</index></name><op:operator pos:line="8066" pos:column="45">.</op:operator><name pos:line="8066" pos:column="46">mask</name></expr>;</return></then>
		<else pos:line="8067" pos:column="17">else
			<return pos:line="8068" pos:column="25">return <expr><lit:literal type="number" pos:line="8068" pos:column="32">0</lit:literal></expr>;</return></else></if>

	</case><case pos:line="8070" pos:column="9">case <expr><name pos:line="8070" pos:column="14">SCI_SETMARGINSENSITIVEN</name></expr>:
		<if pos:line="8071" pos:column="17">if <condition pos:line="8071" pos:column="20">(<expr><call><name pos:line="8071" pos:column="21">ValidMargin</name><argument_list pos:line="8071" pos:column="32">(<argument><expr><name pos:line="8071" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8071" pos:column="41"> <block pos:line="8071" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="8072" pos:column="25">vs</name><op:operator pos:line="8072" pos:column="27">.</op:operator><name pos:line="8072" pos:column="28">ms</name><index pos:line="8072" pos:column="30">[<expr><name pos:line="8072" pos:column="31">wParam</name></expr>]</index></name><op:operator pos:line="8072" pos:column="38">.</op:operator><name pos:line="8072" pos:column="39">sensitive</name> <op:operator pos:line="8072" pos:column="49">=</op:operator> <name pos:line="8072" pos:column="51">lParam</name> <op:operator pos:line="8072" pos:column="58">!=</op:operator> <lit:literal type="number" pos:line="8072" pos:column="61">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="8073" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="8073" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8075" pos:column="17">break;</break>

	</case><case pos:line="8077" pos:column="9">case <expr><name pos:line="8077" pos:column="14">SCI_GETMARGINSENSITIVEN</name></expr>:
		<if pos:line="8078" pos:column="17">if <condition pos:line="8078" pos:column="20">(<expr><call><name pos:line="8078" pos:column="21">ValidMargin</name><argument_list pos:line="8078" pos:column="32">(<argument><expr><name pos:line="8078" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8078" pos:column="41">
			<return pos:line="8079" pos:column="25">return <expr><name><name pos:line="8079" pos:column="32">vs</name><op:operator pos:line="8079" pos:column="34">.</op:operator><name pos:line="8079" pos:column="35">ms</name><index pos:line="8079" pos:column="37">[<expr><name pos:line="8079" pos:column="38">wParam</name></expr>]</index></name><op:operator pos:line="8079" pos:column="45">.</op:operator><name pos:line="8079" pos:column="46">sensitive</name> <op:operator pos:line="8079" pos:column="56">?</op:operator> <lit:literal type="number" pos:line="8079" pos:column="58">1</lit:literal> <op:operator pos:line="8079" pos:column="60">:</op:operator> <lit:literal type="number" pos:line="8079" pos:column="62">0</lit:literal></expr>;</return></then>
		<else pos:line="8080" pos:column="17">else
			<return pos:line="8081" pos:column="25">return <expr><lit:literal type="number" pos:line="8081" pos:column="32">0</lit:literal></expr>;</return></else></if>

	</case><case pos:line="8083" pos:column="9">case <expr><name pos:line="8083" pos:column="14">SCI_SETMARGINCURSORN</name></expr>:
		<if pos:line="8084" pos:column="17">if <condition pos:line="8084" pos:column="20">(<expr><call><name pos:line="8084" pos:column="21">ValidMargin</name><argument_list pos:line="8084" pos:column="32">(<argument><expr><name pos:line="8084" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8084" pos:column="41">
			<expr_stmt><expr><name><name pos:line="8085" pos:column="25">vs</name><op:operator pos:line="8085" pos:column="27">.</op:operator><name pos:line="8085" pos:column="28">ms</name><index pos:line="8085" pos:column="30">[<expr><name pos:line="8085" pos:column="31">wParam</name></expr>]</index></name><op:operator pos:line="8085" pos:column="38">.</op:operator><name pos:line="8085" pos:column="39">cursor</name> <op:operator pos:line="8085" pos:column="46">=</op:operator> <name pos:line="8085" pos:column="48">lParam</name></expr>;</expr_stmt></then></if>
		<break pos:line="8086" pos:column="17">break;</break>

	</case><case pos:line="8088" pos:column="9">case <expr><name pos:line="8088" pos:column="14">SCI_GETMARGINCURSORN</name></expr>:
		<if pos:line="8089" pos:column="17">if <condition pos:line="8089" pos:column="20">(<expr><call><name pos:line="8089" pos:column="21">ValidMargin</name><argument_list pos:line="8089" pos:column="32">(<argument><expr><name pos:line="8089" pos:column="33">wParam</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8089" pos:column="41">
			<return pos:line="8090" pos:column="25">return <expr><name><name pos:line="8090" pos:column="32">vs</name><op:operator pos:line="8090" pos:column="34">.</op:operator><name pos:line="8090" pos:column="35">ms</name><index pos:line="8090" pos:column="37">[<expr><name pos:line="8090" pos:column="38">wParam</name></expr>]</index></name><op:operator pos:line="8090" pos:column="45">.</op:operator><name pos:line="8090" pos:column="46">cursor</name></expr>;</return></then>
		<else pos:line="8091" pos:column="17">else
			<return pos:line="8092" pos:column="25">return <expr><lit:literal type="number" pos:line="8092" pos:column="32">0</lit:literal></expr>;</return></else></if>

	</case><case pos:line="8094" pos:column="9">case <expr><name pos:line="8094" pos:column="14">SCI_STYLECLEARALL</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8095" pos:column="17">vs</name><op:operator pos:line="8095" pos:column="19">.</op:operator><name pos:line="8095" pos:column="20">ClearStyles</name></name><argument_list pos:line="8095" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8096" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8096" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8097" pos:column="17">break;</break>

	</case><case pos:line="8099" pos:column="9">case <expr><name pos:line="8099" pos:column="14">SCI_STYLESETFORE</name></expr>:
	</case><case pos:line="8100" pos:column="9">case <expr><name pos:line="8100" pos:column="14">SCI_STYLESETBACK</name></expr>:
	</case><case pos:line="8101" pos:column="9">case <expr><name pos:line="8101" pos:column="14">SCI_STYLESETBOLD</name></expr>:
	</case><case pos:line="8102" pos:column="9">case <expr><name pos:line="8102" pos:column="14">SCI_STYLESETITALIC</name></expr>:
	</case><case pos:line="8103" pos:column="9">case <expr><name pos:line="8103" pos:column="14">SCI_STYLESETEOLFILLED</name></expr>:
	</case><case pos:line="8104" pos:column="9">case <expr><name pos:line="8104" pos:column="14">SCI_STYLESETSIZE</name></expr>:
	</case><case pos:line="8105" pos:column="9">case <expr><name pos:line="8105" pos:column="14">SCI_STYLESETFONT</name></expr>:
	</case><case pos:line="8106" pos:column="9">case <expr><name pos:line="8106" pos:column="14">SCI_STYLESETUNDERLINE</name></expr>:
	</case><case pos:line="8107" pos:column="9">case <expr><name pos:line="8107" pos:column="14">SCI_STYLESETCASE</name></expr>:
	</case><case pos:line="8108" pos:column="9">case <expr><name pos:line="8108" pos:column="14">SCI_STYLESETCHARACTERSET</name></expr>:
	</case><case pos:line="8109" pos:column="9">case <expr><name pos:line="8109" pos:column="14">SCI_STYLESETVISIBLE</name></expr>:
	</case><case pos:line="8110" pos:column="9">case <expr><name pos:line="8110" pos:column="14">SCI_STYLESETCHANGEABLE</name></expr>:
	</case><case pos:line="8111" pos:column="9">case <expr><name pos:line="8111" pos:column="14">SCI_STYLESETHOTSPOT</name></expr>:
		<expr_stmt><expr><call><name pos:line="8112" pos:column="17">StyleSetMessage</name><argument_list pos:line="8112" pos:column="32">(<argument><expr><name pos:line="8112" pos:column="33">iMessage</name></expr></argument>, <argument><expr><name pos:line="8112" pos:column="43">wParam</name></expr></argument>, <argument><expr><name pos:line="8112" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8113" pos:column="17">break;</break>

	</case><case pos:line="8115" pos:column="9">case <expr><name pos:line="8115" pos:column="14">SCI_STYLEGETFORE</name></expr>:
	</case><case pos:line="8116" pos:column="9">case <expr><name pos:line="8116" pos:column="14">SCI_STYLEGETBACK</name></expr>:
	</case><case pos:line="8117" pos:column="9">case <expr><name pos:line="8117" pos:column="14">SCI_STYLEGETBOLD</name></expr>:
	</case><case pos:line="8118" pos:column="9">case <expr><name pos:line="8118" pos:column="14">SCI_STYLEGETITALIC</name></expr>:
	</case><case pos:line="8119" pos:column="9">case <expr><name pos:line="8119" pos:column="14">SCI_STYLEGETEOLFILLED</name></expr>:
	</case><case pos:line="8120" pos:column="9">case <expr><name pos:line="8120" pos:column="14">SCI_STYLEGETSIZE</name></expr>:
	</case><case pos:line="8121" pos:column="9">case <expr><name pos:line="8121" pos:column="14">SCI_STYLEGETFONT</name></expr>:
	</case><case pos:line="8122" pos:column="9">case <expr><name pos:line="8122" pos:column="14">SCI_STYLEGETUNDERLINE</name></expr>:
	</case><case pos:line="8123" pos:column="9">case <expr><name pos:line="8123" pos:column="14">SCI_STYLEGETCASE</name></expr>:
	</case><case pos:line="8124" pos:column="9">case <expr><name pos:line="8124" pos:column="14">SCI_STYLEGETCHARACTERSET</name></expr>:
	</case><case pos:line="8125" pos:column="9">case <expr><name pos:line="8125" pos:column="14">SCI_STYLEGETVISIBLE</name></expr>:
	</case><case pos:line="8126" pos:column="9">case <expr><name pos:line="8126" pos:column="14">SCI_STYLEGETCHANGEABLE</name></expr>:
	</case><case pos:line="8127" pos:column="9">case <expr><name pos:line="8127" pos:column="14">SCI_STYLEGETHOTSPOT</name></expr>:
		<return pos:line="8128" pos:column="17">return <expr><call><name pos:line="8128" pos:column="24">StyleGetMessage</name><argument_list pos:line="8128" pos:column="39">(<argument><expr><name pos:line="8128" pos:column="40">iMessage</name></expr></argument>, <argument><expr><name pos:line="8128" pos:column="50">wParam</name></expr></argument>, <argument><expr><name pos:line="8128" pos:column="58">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8130" pos:column="9">case <expr><name pos:line="8130" pos:column="14">SCI_STYLERESETDEFAULT</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8131" pos:column="17">vs</name><op:operator pos:line="8131" pos:column="19">.</op:operator><name pos:line="8131" pos:column="20">ResetDefaultStyle</name></name><argument_list pos:line="8131" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8132" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8132" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8133" pos:column="17">break;</break>
	</case><case pos:line="8134" pos:column="9">case <expr><name pos:line="8134" pos:column="14">SCI_SETSTYLEBITS</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8135" pos:column="17">vs</name><op:operator pos:line="8135" pos:column="19">.</op:operator><name pos:line="8135" pos:column="20">EnsureStyle</name></name><argument_list pos:line="8135" pos:column="31">(<argument><expr><op:operator pos:line="8135" pos:column="32">(</op:operator><lit:literal type="number" pos:line="8135" pos:column="33">1</lit:literal> <op:operator pos:line="8135" pos:column="35">&lt;&lt;</op:operator> <name pos:line="8135" pos:column="38">wParam</name><op:operator pos:line="8135" pos:column="44">)</op:operator> <op:operator pos:line="8135" pos:column="46">-</op:operator> <lit:literal type="number" pos:line="8135" pos:column="48">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="8136" pos:column="17">pdoc</name><op:operator pos:line="8136" pos:column="21">-&gt;</op:operator><name pos:line="8136" pos:column="23">SetStylingBits</name></name><argument_list pos:line="8136" pos:column="37">(<argument><expr><name pos:line="8136" pos:column="38">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8137" pos:column="17">break;</break>

	</case><case pos:line="8139" pos:column="9">case <expr><name pos:line="8139" pos:column="14">SCI_GETSTYLEBITS</name></expr>:
		<return pos:line="8140" pos:column="17">return <expr><name><name pos:line="8140" pos:column="24">pdoc</name><op:operator pos:line="8140" pos:column="28">-&gt;</op:operator><name pos:line="8140" pos:column="30">stylingBits</name></name></expr>;</return>

	</case><case pos:line="8142" pos:column="9">case <expr><name pos:line="8142" pos:column="14">SCI_SETLINESTATE</name></expr>:
		<return pos:line="8143" pos:column="17">return <expr><call><name><name pos:line="8143" pos:column="24">pdoc</name><op:operator pos:line="8143" pos:column="28">-&gt;</op:operator><name pos:line="8143" pos:column="30">SetLineState</name></name><argument_list pos:line="8143" pos:column="42">(<argument><expr><name pos:line="8143" pos:column="43">wParam</name></expr></argument>, <argument><expr><name pos:line="8143" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8145" pos:column="9">case <expr><name pos:line="8145" pos:column="14">SCI_GETLINESTATE</name></expr>:
		<return pos:line="8146" pos:column="17">return <expr><call><name><name pos:line="8146" pos:column="24">pdoc</name><op:operator pos:line="8146" pos:column="28">-&gt;</op:operator><name pos:line="8146" pos:column="30">GetLineState</name></name><argument_list pos:line="8146" pos:column="42">(<argument><expr><name pos:line="8146" pos:column="43">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8148" pos:column="9">case <expr><name pos:line="8148" pos:column="14">SCI_GETMAXLINESTATE</name></expr>:
		<return pos:line="8149" pos:column="17">return <expr><call><name><name pos:line="8149" pos:column="24">pdoc</name><op:operator pos:line="8149" pos:column="28">-&gt;</op:operator><name pos:line="8149" pos:column="30">GetMaxLineState</name></name><argument_list pos:line="8149" pos:column="45">()</argument_list></call></expr>;</return>

	</case><case pos:line="8151" pos:column="9">case <expr><name pos:line="8151" pos:column="14">SCI_GETCARETLINEVISIBLE</name></expr>:
		<return pos:line="8152" pos:column="17">return <expr><name><name pos:line="8152" pos:column="24">vs</name><op:operator pos:line="8152" pos:column="26">.</op:operator><name pos:line="8152" pos:column="27">showCaretLineBackground</name></name></expr>;</return>
	</case><case pos:line="8153" pos:column="9">case <expr><name pos:line="8153" pos:column="14">SCI_SETCARETLINEVISIBLE</name></expr>:
		<expr_stmt><expr><name><name pos:line="8154" pos:column="17">vs</name><op:operator pos:line="8154" pos:column="19">.</op:operator><name pos:line="8154" pos:column="20">showCaretLineBackground</name></name> <op:operator pos:line="8154" pos:column="44">=</op:operator> <name pos:line="8154" pos:column="46">wParam</name> <op:operator pos:line="8154" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="8154" pos:column="56">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8155" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8155" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8156" pos:column="17">break;</break>
	</case><case pos:line="8157" pos:column="9">case <expr><name pos:line="8157" pos:column="14">SCI_GETCARETLINEVISIBLEALWAYS</name></expr>:
		<return pos:line="8158" pos:column="17">return <expr><name><name pos:line="8158" pos:column="24">vs</name><op:operator pos:line="8158" pos:column="26">.</op:operator><name pos:line="8158" pos:column="27">showCaretLineBackgroundAlways</name></name></expr>;</return>
	</case><case pos:line="8159" pos:column="9">case <expr><name pos:line="8159" pos:column="14">SCI_SETCARETLINEVISIBLEALWAYS</name></expr>:
		<expr_stmt><expr><name><name pos:line="8160" pos:column="17">vs</name><op:operator pos:line="8160" pos:column="19">.</op:operator><name pos:line="8160" pos:column="20">showCaretLineBackgroundAlways</name></name> <op:operator pos:line="8160" pos:column="50">=</op:operator> <name pos:line="8160" pos:column="52">wParam</name> <op:operator pos:line="8160" pos:column="59">!=</op:operator> <lit:literal type="number" pos:line="8160" pos:column="62">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8161" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8161" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
	</case><case pos:line="8162" pos:column="9">case <expr><name pos:line="8162" pos:column="14">SCI_GETCARETLINEBACK</name></expr>:
		<return pos:line="8163" pos:column="17">return <expr><call><name><name pos:line="8163" pos:column="24">vs</name><op:operator pos:line="8163" pos:column="26">.</op:operator><name pos:line="8163" pos:column="27">caretLineBackground</name><op:operator pos:line="8163" pos:column="46">.</op:operator><name pos:line="8163" pos:column="47">desired</name><op:operator pos:line="8163" pos:column="54">.</op:operator><name pos:line="8163" pos:column="55">AsLong</name></name><argument_list pos:line="8163" pos:column="61">()</argument_list></call></expr>;</return>
	</case><case pos:line="8164" pos:column="9">case <expr><name pos:line="8164" pos:column="14">SCI_SETCARETLINEBACK</name></expr>:
		<expr_stmt><expr><name><name pos:line="8165" pos:column="17">vs</name><op:operator pos:line="8165" pos:column="19">.</op:operator><name pos:line="8165" pos:column="20">caretLineBackground</name><op:operator pos:line="8165" pos:column="39">.</op:operator><name pos:line="8165" pos:column="40">desired</name></name> <op:operator pos:line="8165" pos:column="48">=</op:operator> <name pos:line="8165" pos:column="50">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8166" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8166" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8167" pos:column="17">break;</break>
	</case><case pos:line="8168" pos:column="9">case <expr><name pos:line="8168" pos:column="14">SCI_GETCARETLINEBACKALPHA</name></expr>:
		<return pos:line="8169" pos:column="17">return <expr><name><name pos:line="8169" pos:column="24">vs</name><op:operator pos:line="8169" pos:column="26">.</op:operator><name pos:line="8169" pos:column="27">caretLineAlpha</name></name></expr>;</return>
	</case><case pos:line="8170" pos:column="9">case <expr><name pos:line="8170" pos:column="14">SCI_SETCARETLINEBACKALPHA</name></expr>:
		<expr_stmt><expr><name><name pos:line="8171" pos:column="17">vs</name><op:operator pos:line="8171" pos:column="19">.</op:operator><name pos:line="8171" pos:column="20">caretLineAlpha</name></name> <op:operator pos:line="8171" pos:column="35">=</op:operator> <name pos:line="8171" pos:column="37">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8172" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8172" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8173" pos:column="17">break;</break>

		<comment type="line" pos:line="8175" pos:column="17">// Folding messages</comment>

	</case><case pos:line="8177" pos:column="9">case <expr><name pos:line="8177" pos:column="14">SCI_VISIBLEFROMDOCLINE</name></expr>:
		<return pos:line="8178" pos:column="17">return <expr><call><name><name pos:line="8178" pos:column="24">cs</name><op:operator pos:line="8178" pos:column="26">.</op:operator><name pos:line="8178" pos:column="27">DisplayFromDoc</name></name><argument_list pos:line="8178" pos:column="41">(<argument><expr><name pos:line="8178" pos:column="42">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8180" pos:column="9">case <expr><name pos:line="8180" pos:column="14">SCI_DOCLINEFROMVISIBLE</name></expr>:
		<return pos:line="8181" pos:column="17">return <expr><call><name><name pos:line="8181" pos:column="24">cs</name><op:operator pos:line="8181" pos:column="26">.</op:operator><name pos:line="8181" pos:column="27">DocFromDisplay</name></name><argument_list pos:line="8181" pos:column="41">(<argument><expr><name pos:line="8181" pos:column="42">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8183" pos:column="9">case <expr><name pos:line="8183" pos:column="14">SCI_WRAPCOUNT</name></expr>:
		<return pos:line="8184" pos:column="17">return <expr><call><name pos:line="8184" pos:column="24">WrapCount</name><argument_list pos:line="8184" pos:column="33">(<argument><expr><name pos:line="8184" pos:column="34">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8186" pos:column="9">case <expr><name pos:line="8186" pos:column="14">SCI_SETFOLDLEVEL</name></expr>: <block pos:line="8186" pos:column="32">{
			<decl_stmt><decl><type><name pos:line="8187" pos:column="25">int</name></type> <name pos:line="8187" pos:column="29">prev</name> <init pos:line="8187" pos:column="34">= <expr><call><name><name pos:line="8187" pos:column="36">pdoc</name><op:operator pos:line="8187" pos:column="40">-&gt;</op:operator><name pos:line="8187" pos:column="42">SetLevel</name></name><argument_list pos:line="8187" pos:column="50">(<argument><expr><name pos:line="8187" pos:column="51">wParam</name></expr></argument>, <argument><expr><name pos:line="8187" pos:column="59">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="8188" pos:column="25">if <condition pos:line="8188" pos:column="28">(<expr><name pos:line="8188" pos:column="29">prev</name> <op:operator pos:line="8188" pos:column="34">!=</op:operator> <name pos:line="8188" pos:column="37">lParam</name></expr>)</condition><then pos:line="8188" pos:column="44">
				<expr_stmt><expr><call><name pos:line="8189" pos:column="33">RedrawSelMargin</name><argument_list pos:line="8189" pos:column="48">()</argument_list></call></expr>;</expr_stmt></then></if>
			<return pos:line="8190" pos:column="25">return <expr><name pos:line="8190" pos:column="32">prev</name></expr>;</return>
		}</block>

	</case><case pos:line="8193" pos:column="9">case <expr><name pos:line="8193" pos:column="14">SCI_GETFOLDLEVEL</name></expr>:
		<return pos:line="8194" pos:column="17">return <expr><call><name><name pos:line="8194" pos:column="24">pdoc</name><op:operator pos:line="8194" pos:column="28">-&gt;</op:operator><name pos:line="8194" pos:column="30">GetLevel</name></name><argument_list pos:line="8194" pos:column="38">(<argument><expr><name pos:line="8194" pos:column="39">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8196" pos:column="9">case <expr><name pos:line="8196" pos:column="14">SCI_GETLASTCHILD</name></expr>:
		<return pos:line="8197" pos:column="17">return <expr><call><name><name pos:line="8197" pos:column="24">pdoc</name><op:operator pos:line="8197" pos:column="28">-&gt;</op:operator><name pos:line="8197" pos:column="30">GetLastChild</name></name><argument_list pos:line="8197" pos:column="42">(<argument><expr><name pos:line="8197" pos:column="43">wParam</name></expr></argument>, <argument><expr><name pos:line="8197" pos:column="51">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8199" pos:column="9">case <expr><name pos:line="8199" pos:column="14">SCI_GETFOLDPARENT</name></expr>:
		<return pos:line="8200" pos:column="17">return <expr><call><name><name pos:line="8200" pos:column="24">pdoc</name><op:operator pos:line="8200" pos:column="28">-&gt;</op:operator><name pos:line="8200" pos:column="30">GetFoldParent</name></name><argument_list pos:line="8200" pos:column="43">(<argument><expr><name pos:line="8200" pos:column="44">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8202" pos:column="9">case <expr><name pos:line="8202" pos:column="14">SCI_SHOWLINES</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8203" pos:column="17">cs</name><op:operator pos:line="8203" pos:column="19">.</op:operator><name pos:line="8203" pos:column="20">SetVisible</name></name><argument_list pos:line="8203" pos:column="30">(<argument><expr><name pos:line="8203" pos:column="31">wParam</name></expr></argument>, <argument><expr><name pos:line="8203" pos:column="39">lParam</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="8203" pos:column="47">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8204" pos:column="17">SetScrollBars</name><argument_list pos:line="8204" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8205" pos:column="17">Redraw</name><argument_list pos:line="8205" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8206" pos:column="17">break;</break>

	</case><case pos:line="8208" pos:column="9">case <expr><name pos:line="8208" pos:column="14">SCI_HIDELINES</name></expr>:
		<if pos:line="8209" pos:column="17">if <condition pos:line="8209" pos:column="20">(<expr><name pos:line="8209" pos:column="21">wParam</name> <op:operator pos:line="8209" pos:column="28">&gt;</op:operator> <lit:literal type="number" pos:line="8209" pos:column="30">0</lit:literal></expr>)</condition><then pos:line="8209" pos:column="32">
			<expr_stmt><expr><call><name><name pos:line="8210" pos:column="25">cs</name><op:operator pos:line="8210" pos:column="27">.</op:operator><name pos:line="8210" pos:column="28">SetVisible</name></name><argument_list pos:line="8210" pos:column="38">(<argument><expr><name pos:line="8210" pos:column="39">wParam</name></expr></argument>, <argument><expr><name pos:line="8210" pos:column="47">lParam</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="8210" pos:column="55">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="8211" pos:column="17">SetScrollBars</name><argument_list pos:line="8211" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8212" pos:column="17">Redraw</name><argument_list pos:line="8212" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8213" pos:column="17">break;</break>

	</case><case pos:line="8215" pos:column="9">case <expr><name pos:line="8215" pos:column="14">SCI_GETLINEVISIBLE</name></expr>:
		<return pos:line="8216" pos:column="17">return <expr><call><name><name pos:line="8216" pos:column="24">cs</name><op:operator pos:line="8216" pos:column="26">.</op:operator><name pos:line="8216" pos:column="27">GetVisible</name></name><argument_list pos:line="8216" pos:column="37">(<argument><expr><name pos:line="8216" pos:column="38">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8218" pos:column="9">case <expr><name pos:line="8218" pos:column="14">SCI_SETFOLDEXPANDED</name></expr>:
		<if pos:line="8219" pos:column="17">if <condition pos:line="8219" pos:column="20">(<expr><call><name><name pos:line="8219" pos:column="21">cs</name><op:operator pos:line="8219" pos:column="23">.</op:operator><name pos:line="8219" pos:column="24">SetExpanded</name></name><argument_list pos:line="8219" pos:column="35">(<argument><expr><name pos:line="8219" pos:column="36">wParam</name></expr></argument>, <argument><expr><name pos:line="8219" pos:column="44">lParam</name> <op:operator pos:line="8219" pos:column="51">!=</op:operator> <lit:literal type="number" pos:line="8219" pos:column="54">0</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="8219" pos:column="57"> <block pos:line="8219" pos:column="58">{
			<expr_stmt><expr><call><name pos:line="8220" pos:column="25">RedrawSelMargin</name><argument_list pos:line="8220" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8222" pos:column="17">break;</break>

	</case><case pos:line="8224" pos:column="9">case <expr><name pos:line="8224" pos:column="14">SCI_GETFOLDEXPANDED</name></expr>:
		<return pos:line="8225" pos:column="17">return <expr><call><name><name pos:line="8225" pos:column="24">cs</name><op:operator pos:line="8225" pos:column="26">.</op:operator><name pos:line="8225" pos:column="27">GetExpanded</name></name><argument_list pos:line="8225" pos:column="38">(<argument><expr><name pos:line="8225" pos:column="39">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8227" pos:column="9">case <expr><name pos:line="8227" pos:column="14">SCI_SETFOLDFLAGS</name></expr>:
		<expr_stmt><expr><name pos:line="8228" pos:column="17">foldFlags</name> <op:operator pos:line="8228" pos:column="27">=</op:operator> <name pos:line="8228" pos:column="29">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8229" pos:column="17">Redraw</name><argument_list pos:line="8229" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8230" pos:column="17">break;</break>

	</case><case pos:line="8232" pos:column="9">case <expr><name pos:line="8232" pos:column="14">SCI_TOGGLEFOLD</name></expr>:
		<expr_stmt><expr><call><name pos:line="8233" pos:column="17">ToggleContraction</name><argument_list pos:line="8233" pos:column="34">(<argument><expr><name pos:line="8233" pos:column="35">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8234" pos:column="17">break;</break>

	</case><case pos:line="8236" pos:column="9">case <expr><name pos:line="8236" pos:column="14">SCI_CONTRACTEDFOLDNEXT</name></expr>:
		<return pos:line="8237" pos:column="17">return <expr><call><name pos:line="8237" pos:column="24">ContractedFoldNext</name><argument_list pos:line="8237" pos:column="42">(<argument><expr><name pos:line="8237" pos:column="43">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8239" pos:column="9">case <expr><name pos:line="8239" pos:column="14">SCI_ENSUREVISIBLE</name></expr>:
		<expr_stmt><expr><call><name pos:line="8240" pos:column="17">EnsureLineVisible</name><argument_list pos:line="8240" pos:column="34">(<argument><expr><name pos:line="8240" pos:column="35">wParam</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="8240" pos:column="43">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8241" pos:column="17">break;</break>

	</case><case pos:line="8243" pos:column="9">case <expr><name pos:line="8243" pos:column="14">SCI_ENSUREVISIBLEENFORCEPOLICY</name></expr>:
		<expr_stmt><expr><call><name pos:line="8244" pos:column="17">EnsureLineVisible</name><argument_list pos:line="8244" pos:column="34">(<argument><expr><name pos:line="8244" pos:column="35">wParam</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="8244" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8245" pos:column="17">break;</break>

	</case><case pos:line="8247" pos:column="9">case <expr><name pos:line="8247" pos:column="14">SCI_SEARCHANCHOR</name></expr>:
		<expr_stmt><expr><call><name pos:line="8248" pos:column="17">SearchAnchor</name><argument_list pos:line="8248" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8249" pos:column="17">break;</break>

	</case><case pos:line="8251" pos:column="9">case <expr><name pos:line="8251" pos:column="14">SCI_SEARCHNEXT</name></expr>:
	</case><case pos:line="8252" pos:column="9">case <expr><name pos:line="8252" pos:column="14">SCI_SEARCHPREV</name></expr>:
		<return pos:line="8253" pos:column="17">return <expr><call><name pos:line="8253" pos:column="24">SearchText</name><argument_list pos:line="8253" pos:column="34">(<argument><expr><name pos:line="8253" pos:column="35">iMessage</name></expr></argument>, <argument><expr><name pos:line="8253" pos:column="45">wParam</name></expr></argument>, <argument><expr><name pos:line="8253" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8255" pos:column="9">case <expr><name pos:line="8255" pos:column="14">SCI_SETXCARETPOLICY</name></expr>:
		<expr_stmt><expr><name pos:line="8256" pos:column="17">caretXPolicy</name> <op:operator pos:line="8256" pos:column="30">=</op:operator> <name pos:line="8256" pos:column="32">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="8257" pos:column="17">caretXSlop</name> <op:operator pos:line="8257" pos:column="28">=</op:operator> <name pos:line="8257" pos:column="30">lParam</name></expr>;</expr_stmt>
		<break pos:line="8258" pos:column="17">break;</break>

	</case><case pos:line="8260" pos:column="9">case <expr><name pos:line="8260" pos:column="14">SCI_SETYCARETPOLICY</name></expr>:
		<expr_stmt><expr><name pos:line="8261" pos:column="17">caretYPolicy</name> <op:operator pos:line="8261" pos:column="30">=</op:operator> <name pos:line="8261" pos:column="32">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="8262" pos:column="17">caretYSlop</name> <op:operator pos:line="8262" pos:column="28">=</op:operator> <name pos:line="8262" pos:column="30">lParam</name></expr>;</expr_stmt>
		<break pos:line="8263" pos:column="17">break;</break>

	</case><case pos:line="8265" pos:column="9">case <expr><name pos:line="8265" pos:column="14">SCI_SETVISIBLEPOLICY</name></expr>:
		<expr_stmt><expr><name pos:line="8266" pos:column="17">visiblePolicy</name> <op:operator pos:line="8266" pos:column="31">=</op:operator> <name pos:line="8266" pos:column="33">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="8267" pos:column="17">visibleSlop</name> <op:operator pos:line="8267" pos:column="29">=</op:operator> <name pos:line="8267" pos:column="31">lParam</name></expr>;</expr_stmt>
		<break pos:line="8268" pos:column="17">break;</break>

	</case><case pos:line="8270" pos:column="9">case <expr><name pos:line="8270" pos:column="14">SCI_LINESONSCREEN</name></expr>:
		<return pos:line="8271" pos:column="17">return <expr><call><name pos:line="8271" pos:column="24">LinesOnScreen</name><argument_list pos:line="8271" pos:column="37">()</argument_list></call></expr>;</return>

	</case><case pos:line="8273" pos:column="9">case <expr><name pos:line="8273" pos:column="14">SCI_SETSELFORE</name></expr>:
		<expr_stmt><expr><name><name pos:line="8274" pos:column="17">vs</name><op:operator pos:line="8274" pos:column="19">.</op:operator><name pos:line="8274" pos:column="20">selforeset</name></name> <op:operator pos:line="8274" pos:column="31">=</op:operator> <name pos:line="8274" pos:column="33">wParam</name> <op:operator pos:line="8274" pos:column="40">!=</op:operator> <lit:literal type="number" pos:line="8274" pos:column="43">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8275" pos:column="17">vs</name><op:operator pos:line="8275" pos:column="19">.</op:operator><name pos:line="8275" pos:column="20">selforeground</name><op:operator pos:line="8275" pos:column="33">.</op:operator><name pos:line="8275" pos:column="34">desired</name></name> <op:operator pos:line="8275" pos:column="42">=</op:operator> <call><name pos:line="8275" pos:column="44">ColourDesired</name><argument_list pos:line="8275" pos:column="57">(<argument><expr><name pos:line="8275" pos:column="58">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8276" pos:column="17">vs</name><op:operator pos:line="8276" pos:column="19">.</op:operator><name pos:line="8276" pos:column="20">selAdditionalForeground</name><op:operator pos:line="8276" pos:column="43">.</op:operator><name pos:line="8276" pos:column="44">desired</name></name> <op:operator pos:line="8276" pos:column="52">=</op:operator> <call><name pos:line="8276" pos:column="54">ColourDesired</name><argument_list pos:line="8276" pos:column="67">(<argument><expr><name pos:line="8276" pos:column="68">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8277" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8277" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8278" pos:column="17">break;</break>

	</case><case pos:line="8280" pos:column="9">case <expr><name pos:line="8280" pos:column="14">SCI_SETSELBACK</name></expr>:
		<expr_stmt><expr><name><name pos:line="8281" pos:column="17">vs</name><op:operator pos:line="8281" pos:column="19">.</op:operator><name pos:line="8281" pos:column="20">selbackset</name></name> <op:operator pos:line="8281" pos:column="31">=</op:operator> <name pos:line="8281" pos:column="33">wParam</name> <op:operator pos:line="8281" pos:column="40">!=</op:operator> <lit:literal type="number" pos:line="8281" pos:column="43">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8282" pos:column="17">vs</name><op:operator pos:line="8282" pos:column="19">.</op:operator><name pos:line="8282" pos:column="20">selbackground</name><op:operator pos:line="8282" pos:column="33">.</op:operator><name pos:line="8282" pos:column="34">desired</name></name> <op:operator pos:line="8282" pos:column="42">=</op:operator> <call><name pos:line="8282" pos:column="44">ColourDesired</name><argument_list pos:line="8282" pos:column="57">(<argument><expr><name pos:line="8282" pos:column="58">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8283" pos:column="17">vs</name><op:operator pos:line="8283" pos:column="19">.</op:operator><name pos:line="8283" pos:column="20">selAdditionalBackground</name><op:operator pos:line="8283" pos:column="43">.</op:operator><name pos:line="8283" pos:column="44">desired</name></name> <op:operator pos:line="8283" pos:column="52">=</op:operator> <call><name pos:line="8283" pos:column="54">ColourDesired</name><argument_list pos:line="8283" pos:column="67">(<argument><expr><name pos:line="8283" pos:column="68">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8284" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8284" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8285" pos:column="17">break;</break>

	</case><case pos:line="8287" pos:column="9">case <expr><name pos:line="8287" pos:column="14">SCI_SETSELALPHA</name></expr>:
		<expr_stmt><expr><name><name pos:line="8288" pos:column="17">vs</name><op:operator pos:line="8288" pos:column="19">.</op:operator><name pos:line="8288" pos:column="20">selAlpha</name></name> <op:operator pos:line="8288" pos:column="29">=</op:operator> <name pos:line="8288" pos:column="31">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8289" pos:column="17">vs</name><op:operator pos:line="8289" pos:column="19">.</op:operator><name pos:line="8289" pos:column="20">selAdditionalAlpha</name></name> <op:operator pos:line="8289" pos:column="39">=</op:operator> <name pos:line="8289" pos:column="41">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8290" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8290" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8291" pos:column="17">break;</break>

	</case><case pos:line="8293" pos:column="9">case <expr><name pos:line="8293" pos:column="14">SCI_GETSELALPHA</name></expr>:
		<return pos:line="8294" pos:column="17">return <expr><name><name pos:line="8294" pos:column="24">vs</name><op:operator pos:line="8294" pos:column="26">.</op:operator><name pos:line="8294" pos:column="27">selAlpha</name></name></expr>;</return>

	</case><case pos:line="8296" pos:column="9">case <expr><name pos:line="8296" pos:column="14">SCI_GETSELEOLFILLED</name></expr>:
		<return pos:line="8297" pos:column="17">return <expr><name><name pos:line="8297" pos:column="24">vs</name><op:operator pos:line="8297" pos:column="26">.</op:operator><name pos:line="8297" pos:column="27">selEOLFilled</name></name></expr>;</return>

	</case><case pos:line="8299" pos:column="9">case <expr><name pos:line="8299" pos:column="14">SCI_SETSELEOLFILLED</name></expr>:
		<expr_stmt><expr><name><name pos:line="8300" pos:column="17">vs</name><op:operator pos:line="8300" pos:column="19">.</op:operator><name pos:line="8300" pos:column="20">selEOLFilled</name></name> <op:operator pos:line="8300" pos:column="33">=</op:operator> <name pos:line="8300" pos:column="35">wParam</name> <op:operator pos:line="8300" pos:column="42">!=</op:operator> <lit:literal type="number" pos:line="8300" pos:column="45">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8301" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8301" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8302" pos:column="17">break;</break>

	</case><case pos:line="8304" pos:column="9">case <expr><name pos:line="8304" pos:column="14">SCI_SETWHITESPACEFORE</name></expr>:
		<expr_stmt><expr><name><name pos:line="8305" pos:column="17">vs</name><op:operator pos:line="8305" pos:column="19">.</op:operator><name pos:line="8305" pos:column="20">whitespaceForegroundSet</name></name> <op:operator pos:line="8305" pos:column="44">=</op:operator> <name pos:line="8305" pos:column="46">wParam</name> <op:operator pos:line="8305" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="8305" pos:column="56">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8306" pos:column="17">vs</name><op:operator pos:line="8306" pos:column="19">.</op:operator><name pos:line="8306" pos:column="20">whitespaceForeground</name><op:operator pos:line="8306" pos:column="40">.</op:operator><name pos:line="8306" pos:column="41">desired</name></name> <op:operator pos:line="8306" pos:column="49">=</op:operator> <call><name pos:line="8306" pos:column="51">ColourDesired</name><argument_list pos:line="8306" pos:column="64">(<argument><expr><name pos:line="8306" pos:column="65">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8307" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8307" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8308" pos:column="17">break;</break>

	</case><case pos:line="8310" pos:column="9">case <expr><name pos:line="8310" pos:column="14">SCI_SETWHITESPACEBACK</name></expr>:
		<expr_stmt><expr><name><name pos:line="8311" pos:column="17">vs</name><op:operator pos:line="8311" pos:column="19">.</op:operator><name pos:line="8311" pos:column="20">whitespaceBackgroundSet</name></name> <op:operator pos:line="8311" pos:column="44">=</op:operator> <name pos:line="8311" pos:column="46">wParam</name> <op:operator pos:line="8311" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="8311" pos:column="56">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8312" pos:column="17">vs</name><op:operator pos:line="8312" pos:column="19">.</op:operator><name pos:line="8312" pos:column="20">whitespaceBackground</name><op:operator pos:line="8312" pos:column="40">.</op:operator><name pos:line="8312" pos:column="41">desired</name></name> <op:operator pos:line="8312" pos:column="49">=</op:operator> <call><name pos:line="8312" pos:column="51">ColourDesired</name><argument_list pos:line="8312" pos:column="64">(<argument><expr><name pos:line="8312" pos:column="65">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8313" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8313" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8314" pos:column="17">break;</break>

	</case><case pos:line="8316" pos:column="9">case <expr><name pos:line="8316" pos:column="14">SCI_SETCARETFORE</name></expr>:
		<expr_stmt><expr><name><name pos:line="8317" pos:column="17">vs</name><op:operator pos:line="8317" pos:column="19">.</op:operator><name pos:line="8317" pos:column="20">caretcolour</name><op:operator pos:line="8317" pos:column="31">.</op:operator><name pos:line="8317" pos:column="32">desired</name></name> <op:operator pos:line="8317" pos:column="40">=</op:operator> <call><name pos:line="8317" pos:column="42">ColourDesired</name><argument_list pos:line="8317" pos:column="55">(<argument><expr><name pos:line="8317" pos:column="56">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8318" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8318" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8319" pos:column="17">break;</break>

	</case><case pos:line="8321" pos:column="9">case <expr><name pos:line="8321" pos:column="14">SCI_GETCARETFORE</name></expr>:
		<return pos:line="8322" pos:column="17">return <expr><call><name><name pos:line="8322" pos:column="24">vs</name><op:operator pos:line="8322" pos:column="26">.</op:operator><name pos:line="8322" pos:column="27">caretcolour</name><op:operator pos:line="8322" pos:column="38">.</op:operator><name pos:line="8322" pos:column="39">desired</name><op:operator pos:line="8322" pos:column="46">.</op:operator><name pos:line="8322" pos:column="47">AsLong</name></name><argument_list pos:line="8322" pos:column="53">()</argument_list></call></expr>;</return>

	</case><case pos:line="8324" pos:column="9">case <expr><name pos:line="8324" pos:column="14">SCI_SETCARETSTYLE</name></expr>:
		<if pos:line="8325" pos:column="17">if <condition pos:line="8325" pos:column="20">(<expr><name pos:line="8325" pos:column="21">wParam</name> <op:operator pos:line="8325" pos:column="28">&gt;=</op:operator> <name pos:line="8325" pos:column="31">CARETSTYLE_INVISIBLE</name> <op:operator pos:line="8325" pos:column="52">&amp;&amp;</op:operator> <name pos:line="8325" pos:column="55">wParam</name> <op:operator pos:line="8325" pos:column="62">&lt;=</op:operator> <name pos:line="8325" pos:column="65">CARETSTYLE_BLOCK</name></expr>)</condition><then pos:line="8325" pos:column="82">
			<expr_stmt><expr><name><name pos:line="8326" pos:column="25">vs</name><op:operator pos:line="8326" pos:column="27">.</op:operator><name pos:line="8326" pos:column="28">caretStyle</name></name> <op:operator pos:line="8326" pos:column="39">=</op:operator> <name pos:line="8326" pos:column="41">wParam</name></expr>;</expr_stmt></then>
		<else pos:line="8327" pos:column="17">else
			<comment type="block" pos:line="8328" pos:column="25">/* Default to the line caret */</comment>
			<expr_stmt><expr><name><name pos:line="8329" pos:column="25">vs</name><op:operator pos:line="8329" pos:column="27">.</op:operator><name pos:line="8329" pos:column="28">caretStyle</name></name> <op:operator pos:line="8329" pos:column="39">=</op:operator> <name pos:line="8329" pos:column="41">CARETSTYLE_LINE</name></expr>;</expr_stmt></else></if>
		<expr_stmt><expr><call><name pos:line="8330" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8330" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8331" pos:column="17">break;</break>

	</case><case pos:line="8333" pos:column="9">case <expr><name pos:line="8333" pos:column="14">SCI_GETCARETSTYLE</name></expr>:
		<return pos:line="8334" pos:column="17">return <expr><name><name pos:line="8334" pos:column="24">vs</name><op:operator pos:line="8334" pos:column="26">.</op:operator><name pos:line="8334" pos:column="27">caretStyle</name></name></expr>;</return>

	</case><case pos:line="8336" pos:column="9">case <expr><name pos:line="8336" pos:column="14">SCI_SETCARETWIDTH</name></expr>:
		<if pos:line="8337" pos:column="17">if <condition pos:line="8337" pos:column="20">(<expr><name pos:line="8337" pos:column="21">wParam</name> <op:operator pos:line="8337" pos:column="28">&lt;=</op:operator> <lit:literal type="number" pos:line="8337" pos:column="31">0</lit:literal></expr>)</condition><then pos:line="8337" pos:column="33">
			<expr_stmt><expr><name><name pos:line="8338" pos:column="25">vs</name><op:operator pos:line="8338" pos:column="27">.</op:operator><name pos:line="8338" pos:column="28">caretWidth</name></name> <op:operator pos:line="8338" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="8338" pos:column="41">0</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="8339" pos:column="17">else <if pos:line="8339" pos:column="22">if <condition pos:line="8339" pos:column="25">(<expr><name pos:line="8339" pos:column="26">wParam</name> <op:operator pos:line="8339" pos:column="33">&gt;=</op:operator> <lit:literal type="number" pos:line="8339" pos:column="36">3</lit:literal></expr>)</condition><then pos:line="8339" pos:column="38">
			<expr_stmt><expr><name><name pos:line="8340" pos:column="25">vs</name><op:operator pos:line="8340" pos:column="27">.</op:operator><name pos:line="8340" pos:column="28">caretWidth</name></name> <op:operator pos:line="8340" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="8340" pos:column="41">3</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="8341" pos:column="17">else
			<expr_stmt><expr><name><name pos:line="8342" pos:column="25">vs</name><op:operator pos:line="8342" pos:column="27">.</op:operator><name pos:line="8342" pos:column="28">caretWidth</name></name> <op:operator pos:line="8342" pos:column="39">=</op:operator> <name pos:line="8342" pos:column="41">wParam</name></expr>;</expr_stmt></else></if></else></if>
		<expr_stmt><expr><call><name pos:line="8343" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8343" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8344" pos:column="17">break;</break>

	</case><case pos:line="8346" pos:column="9">case <expr><name pos:line="8346" pos:column="14">SCI_GETCARETWIDTH</name></expr>:
		<return pos:line="8347" pos:column="17">return <expr><name><name pos:line="8347" pos:column="24">vs</name><op:operator pos:line="8347" pos:column="26">.</op:operator><name pos:line="8347" pos:column="27">caretWidth</name></name></expr>;</return>

	</case><case pos:line="8349" pos:column="9">case <expr><name pos:line="8349" pos:column="14">SCI_ASSIGNCMDKEY</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8350" pos:column="17">kmap</name><op:operator pos:line="8350" pos:column="21">.</op:operator><name pos:line="8350" pos:column="22">AssignCmdKey</name></name><argument_list pos:line="8350" pos:column="34">(<argument><expr><call><name><name pos:line="8350" pos:column="35">Platform</name><op:operator pos:line="8350" pos:column="43">::</op:operator><name pos:line="8350" pos:column="45">LowShortFromLong</name></name><argument_list pos:line="8350" pos:column="61">(<argument><expr><name pos:line="8350" pos:column="62">wParam</name></expr></argument>)</argument_list></call></expr></argument>,
		        <argument><expr><call><name><name pos:line="8351" pos:column="25">Platform</name><op:operator pos:line="8351" pos:column="33">::</op:operator><name pos:line="8351" pos:column="35">HighShortFromLong</name></name><argument_list pos:line="8351" pos:column="52">(<argument><expr><name pos:line="8351" pos:column="53">wParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="8351" pos:column="62">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8352" pos:column="17">break;</break>

	</case><case pos:line="8354" pos:column="9">case <expr><name pos:line="8354" pos:column="14">SCI_CLEARCMDKEY</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8355" pos:column="17">kmap</name><op:operator pos:line="8355" pos:column="21">.</op:operator><name pos:line="8355" pos:column="22">AssignCmdKey</name></name><argument_list pos:line="8355" pos:column="34">(<argument><expr><call><name><name pos:line="8355" pos:column="35">Platform</name><op:operator pos:line="8355" pos:column="43">::</op:operator><name pos:line="8355" pos:column="45">LowShortFromLong</name></name><argument_list pos:line="8355" pos:column="61">(<argument><expr><name pos:line="8355" pos:column="62">wParam</name></expr></argument>)</argument_list></call></expr></argument>,
		        <argument><expr><call><name><name pos:line="8356" pos:column="25">Platform</name><op:operator pos:line="8356" pos:column="33">::</op:operator><name pos:line="8356" pos:column="35">HighShortFromLong</name></name><argument_list pos:line="8356" pos:column="52">(<argument><expr><name pos:line="8356" pos:column="53">wParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="8356" pos:column="62">SCI_NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8357" pos:column="17">break;</break>

	</case><case pos:line="8359" pos:column="9">case <expr><name pos:line="8359" pos:column="14">SCI_CLEARALLCMDKEYS</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8360" pos:column="17">kmap</name><op:operator pos:line="8360" pos:column="21">.</op:operator><name pos:line="8360" pos:column="22">Clear</name></name><argument_list pos:line="8360" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8361" pos:column="17">break;</break>

	</case><case pos:line="8363" pos:column="9">case <expr><name pos:line="8363" pos:column="14">SCI_INDICSETSTYLE</name></expr>:
		<if pos:line="8364" pos:column="17">if <condition pos:line="8364" pos:column="20">(<expr><name pos:line="8364" pos:column="21">wParam</name> <op:operator pos:line="8364" pos:column="28">&lt;=</op:operator> <name pos:line="8364" pos:column="31">INDIC_MAX</name></expr>)</condition><then pos:line="8364" pos:column="41"> <block pos:line="8364" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="8365" pos:column="25">vs</name><op:operator pos:line="8365" pos:column="27">.</op:operator><name pos:line="8365" pos:column="28">indicators</name><index pos:line="8365" pos:column="38">[<expr><name pos:line="8365" pos:column="39">wParam</name></expr>]</index></name><op:operator pos:line="8365" pos:column="46">.</op:operator><name pos:line="8365" pos:column="47">style</name> <op:operator pos:line="8365" pos:column="53">=</op:operator> <name pos:line="8365" pos:column="55">lParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="8366" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="8366" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8368" pos:column="17">break;</break>

	</case><case pos:line="8370" pos:column="9">case <expr><name pos:line="8370" pos:column="14">SCI_INDICGETSTYLE</name></expr>:
		<return pos:line="8371" pos:column="17">return <expr><op:operator pos:line="8371" pos:column="24">(</op:operator><name pos:line="8371" pos:column="25">wParam</name> <op:operator pos:line="8371" pos:column="32">&lt;=</op:operator> <name pos:line="8371" pos:column="35">INDIC_MAX</name><op:operator pos:line="8371" pos:column="44">)</op:operator> <op:operator pos:line="8371" pos:column="46">?</op:operator> <name><name pos:line="8371" pos:column="48">vs</name><op:operator pos:line="8371" pos:column="50">.</op:operator><name pos:line="8371" pos:column="51">indicators</name><index pos:line="8371" pos:column="61">[<expr><name pos:line="8371" pos:column="62">wParam</name></expr>]</index></name><op:operator pos:line="8371" pos:column="69">.</op:operator><name pos:line="8371" pos:column="70">style</name> <op:operator pos:line="8371" pos:column="76">:</op:operator> <lit:literal type="number" pos:line="8371" pos:column="78">0</lit:literal></expr>;</return>

	</case><case pos:line="8373" pos:column="9">case <expr><name pos:line="8373" pos:column="14">SCI_INDICSETFORE</name></expr>:
		<if pos:line="8374" pos:column="17">if <condition pos:line="8374" pos:column="20">(<expr><name pos:line="8374" pos:column="21">wParam</name> <op:operator pos:line="8374" pos:column="28">&lt;=</op:operator> <name pos:line="8374" pos:column="31">INDIC_MAX</name></expr>)</condition><then pos:line="8374" pos:column="41"> <block pos:line="8374" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="8375" pos:column="25">vs</name><op:operator pos:line="8375" pos:column="27">.</op:operator><name pos:line="8375" pos:column="28">indicators</name><index pos:line="8375" pos:column="38">[<expr><name pos:line="8375" pos:column="39">wParam</name></expr>]</index></name><op:operator pos:line="8375" pos:column="46">.</op:operator><name><name pos:line="8375" pos:column="47">fore</name><op:operator pos:line="8375" pos:column="51">.</op:operator><name pos:line="8375" pos:column="52">desired</name></name> <op:operator pos:line="8375" pos:column="60">=</op:operator> <call><name pos:line="8375" pos:column="62">ColourDesired</name><argument_list pos:line="8375" pos:column="75">(<argument><expr><name pos:line="8375" pos:column="76">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="8376" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="8376" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8378" pos:column="17">break;</break>

	</case><case pos:line="8380" pos:column="9">case <expr><name pos:line="8380" pos:column="14">SCI_INDICGETFORE</name></expr>:
		<return pos:line="8381" pos:column="17">return <expr><op:operator pos:line="8381" pos:column="24">(</op:operator><name pos:line="8381" pos:column="25">wParam</name> <op:operator pos:line="8381" pos:column="32">&lt;=</op:operator> <name pos:line="8381" pos:column="35">INDIC_MAX</name><op:operator pos:line="8381" pos:column="44">)</op:operator> <op:operator pos:line="8381" pos:column="46">?</op:operator> <name><name pos:line="8381" pos:column="48">vs</name><op:operator pos:line="8381" pos:column="50">.</op:operator><name pos:line="8381" pos:column="51">indicators</name><index pos:line="8381" pos:column="61">[<expr><name pos:line="8381" pos:column="62">wParam</name></expr>]</index></name><op:operator pos:line="8381" pos:column="69">.</op:operator><call><name><name pos:line="8381" pos:column="70">fore</name><op:operator pos:line="8381" pos:column="74">.</op:operator><name pos:line="8381" pos:column="75">desired</name><op:operator pos:line="8381" pos:column="82">.</op:operator><name pos:line="8381" pos:column="83">AsLong</name></name><argument_list pos:line="8381" pos:column="89">()</argument_list></call> <op:operator pos:line="8381" pos:column="92">:</op:operator> <lit:literal type="number" pos:line="8381" pos:column="94">0</lit:literal></expr>;</return>

	</case><case pos:line="8383" pos:column="9">case <expr><name pos:line="8383" pos:column="14">SCI_INDICSETUNDER</name></expr>:
		<if pos:line="8384" pos:column="17">if <condition pos:line="8384" pos:column="20">(<expr><name pos:line="8384" pos:column="21">wParam</name> <op:operator pos:line="8384" pos:column="28">&lt;=</op:operator> <name pos:line="8384" pos:column="31">INDIC_MAX</name></expr>)</condition><then pos:line="8384" pos:column="41"> <block pos:line="8384" pos:column="42">{
			<expr_stmt><expr><name><name pos:line="8385" pos:column="25">vs</name><op:operator pos:line="8385" pos:column="27">.</op:operator><name pos:line="8385" pos:column="28">indicators</name><index pos:line="8385" pos:column="38">[<expr><name pos:line="8385" pos:column="39">wParam</name></expr>]</index></name><op:operator pos:line="8385" pos:column="46">.</op:operator><name pos:line="8385" pos:column="47">under</name> <op:operator pos:line="8385" pos:column="53">=</op:operator> <name pos:line="8385" pos:column="55">lParam</name> <op:operator pos:line="8385" pos:column="62">!=</op:operator> <lit:literal type="number" pos:line="8385" pos:column="65">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="8386" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="8386" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8388" pos:column="17">break;</break>

	</case><case pos:line="8390" pos:column="9">case <expr><name pos:line="8390" pos:column="14">SCI_INDICGETUNDER</name></expr>:
		<return pos:line="8391" pos:column="17">return <expr><op:operator pos:line="8391" pos:column="24">(</op:operator><name pos:line="8391" pos:column="25">wParam</name> <op:operator pos:line="8391" pos:column="32">&lt;=</op:operator> <name pos:line="8391" pos:column="35">INDIC_MAX</name><op:operator pos:line="8391" pos:column="44">)</op:operator> <op:operator pos:line="8391" pos:column="46">?</op:operator> <name><name pos:line="8391" pos:column="48">vs</name><op:operator pos:line="8391" pos:column="50">.</op:operator><name pos:line="8391" pos:column="51">indicators</name><index pos:line="8391" pos:column="61">[<expr><name pos:line="8391" pos:column="62">wParam</name></expr>]</index></name><op:operator pos:line="8391" pos:column="69">.</op:operator><name pos:line="8391" pos:column="70">under</name> <op:operator pos:line="8391" pos:column="76">:</op:operator> <lit:literal type="number" pos:line="8391" pos:column="78">0</lit:literal></expr>;</return>

	</case><case pos:line="8393" pos:column="9">case <expr><name pos:line="8393" pos:column="14">SCI_INDICSETALPHA</name></expr>:
		<if pos:line="8394" pos:column="17">if <condition pos:line="8394" pos:column="20">(<expr><name pos:line="8394" pos:column="21">wParam</name> <op:operator pos:line="8394" pos:column="28">&lt;=</op:operator> <name pos:line="8394" pos:column="31">INDIC_MAX</name> <op:operator pos:line="8394" pos:column="41">&amp;&amp;</op:operator> <name pos:line="8394" pos:column="44">lParam</name> <op:operator pos:line="8394" pos:column="51">&gt;=</op:operator><lit:literal type="number" pos:line="8394" pos:column="53">0</lit:literal> <op:operator pos:line="8394" pos:column="55">&amp;&amp;</op:operator> <name pos:line="8394" pos:column="58">lParam</name> <op:operator pos:line="8394" pos:column="65">&lt;=</op:operator> <lit:literal type="number" pos:line="8394" pos:column="68">255</lit:literal></expr>)</condition><then pos:line="8394" pos:column="72"> <block pos:line="8394" pos:column="73">{
			<expr_stmt><expr><name><name pos:line="8395" pos:column="25">vs</name><op:operator pos:line="8395" pos:column="27">.</op:operator><name pos:line="8395" pos:column="28">indicators</name><index pos:line="8395" pos:column="38">[<expr><name pos:line="8395" pos:column="39">wParam</name></expr>]</index></name><op:operator pos:line="8395" pos:column="46">.</op:operator><name pos:line="8395" pos:column="47">fillAlpha</name> <op:operator pos:line="8395" pos:column="57">=</op:operator> <name pos:line="8395" pos:column="59">lParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="8396" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="8396" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8398" pos:column="17">break;</break>

	</case><case pos:line="8400" pos:column="9">case <expr><name pos:line="8400" pos:column="14">SCI_INDICGETALPHA</name></expr>:
		<return pos:line="8401" pos:column="17">return <expr><op:operator pos:line="8401" pos:column="24">(</op:operator><name pos:line="8401" pos:column="25">wParam</name> <op:operator pos:line="8401" pos:column="32">&lt;=</op:operator> <name pos:line="8401" pos:column="35">INDIC_MAX</name><op:operator pos:line="8401" pos:column="44">)</op:operator> <op:operator pos:line="8401" pos:column="46">?</op:operator> <name><name pos:line="8401" pos:column="48">vs</name><op:operator pos:line="8401" pos:column="50">.</op:operator><name pos:line="8401" pos:column="51">indicators</name><index pos:line="8401" pos:column="61">[<expr><name pos:line="8401" pos:column="62">wParam</name></expr>]</index></name><op:operator pos:line="8401" pos:column="69">.</op:operator><name pos:line="8401" pos:column="70">fillAlpha</name> <op:operator pos:line="8401" pos:column="80">:</op:operator> <lit:literal type="number" pos:line="8401" pos:column="82">0</lit:literal></expr>;</return>

	</case><case pos:line="8403" pos:column="9">case <expr><name pos:line="8403" pos:column="14">SCI_INDICSETOUTLINEALPHA</name></expr>:
		<if pos:line="8404" pos:column="17">if <condition pos:line="8404" pos:column="20">(<expr><name pos:line="8404" pos:column="21">wParam</name> <op:operator pos:line="8404" pos:column="28">&lt;=</op:operator> <name pos:line="8404" pos:column="31">INDIC_MAX</name> <op:operator pos:line="8404" pos:column="41">&amp;&amp;</op:operator> <name pos:line="8404" pos:column="44">lParam</name> <op:operator pos:line="8404" pos:column="51">&gt;=</op:operator><lit:literal type="number" pos:line="8404" pos:column="53">0</lit:literal> <op:operator pos:line="8404" pos:column="55">&amp;&amp;</op:operator> <name pos:line="8404" pos:column="58">lParam</name> <op:operator pos:line="8404" pos:column="65">&lt;=</op:operator> <lit:literal type="number" pos:line="8404" pos:column="68">255</lit:literal></expr>)</condition><then pos:line="8404" pos:column="72"> <block pos:line="8404" pos:column="73">{
			<expr_stmt><expr><name><name pos:line="8405" pos:column="25">vs</name><op:operator pos:line="8405" pos:column="27">.</op:operator><name pos:line="8405" pos:column="28">indicators</name><index pos:line="8405" pos:column="38">[<expr><name pos:line="8405" pos:column="39">wParam</name></expr>]</index></name><op:operator pos:line="8405" pos:column="46">.</op:operator><name pos:line="8405" pos:column="47">outlineAlpha</name> <op:operator pos:line="8405" pos:column="60">=</op:operator> <name pos:line="8405" pos:column="62">lParam</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="8406" pos:column="25">InvalidateStyleRedraw</name><argument_list pos:line="8406" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8408" pos:column="17">break;</break>

	</case><case pos:line="8410" pos:column="9">case <expr><name pos:line="8410" pos:column="14">SCI_INDICGETOUTLINEALPHA</name></expr>:
		<return pos:line="8411" pos:column="17">return <expr><op:operator pos:line="8411" pos:column="24">(</op:operator><name pos:line="8411" pos:column="25">wParam</name> <op:operator pos:line="8411" pos:column="32">&lt;=</op:operator> <name pos:line="8411" pos:column="35">INDIC_MAX</name><op:operator pos:line="8411" pos:column="44">)</op:operator> <op:operator pos:line="8411" pos:column="46">?</op:operator> <name><name pos:line="8411" pos:column="48">vs</name><op:operator pos:line="8411" pos:column="50">.</op:operator><name pos:line="8411" pos:column="51">indicators</name><index pos:line="8411" pos:column="61">[<expr><name pos:line="8411" pos:column="62">wParam</name></expr>]</index></name><op:operator pos:line="8411" pos:column="69">.</op:operator><name pos:line="8411" pos:column="70">outlineAlpha</name> <op:operator pos:line="8411" pos:column="83">:</op:operator> <lit:literal type="number" pos:line="8411" pos:column="85">0</lit:literal></expr>;</return>

	</case><case pos:line="8413" pos:column="9">case <expr><name pos:line="8413" pos:column="14">SCI_SETINDICATORCURRENT</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8414" pos:column="17">pdoc</name><op:operator pos:line="8414" pos:column="21">-&gt;</op:operator><name pos:line="8414" pos:column="23">decorations</name><op:operator pos:line="8414" pos:column="34">.</op:operator><name pos:line="8414" pos:column="35">SetCurrentIndicator</name></name><argument_list pos:line="8414" pos:column="54">(<argument><expr><name pos:line="8414" pos:column="55">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8415" pos:column="17">break;</break>
	</case><case pos:line="8416" pos:column="9">case <expr><name pos:line="8416" pos:column="14">SCI_GETINDICATORCURRENT</name></expr>:
		<return pos:line="8417" pos:column="17">return <expr><call><name><name pos:line="8417" pos:column="24">pdoc</name><op:operator pos:line="8417" pos:column="28">-&gt;</op:operator><name pos:line="8417" pos:column="30">decorations</name><op:operator pos:line="8417" pos:column="41">.</op:operator><name pos:line="8417" pos:column="42">GetCurrentIndicator</name></name><argument_list pos:line="8417" pos:column="61">()</argument_list></call></expr>;</return>
	</case><case pos:line="8418" pos:column="9">case <expr><name pos:line="8418" pos:column="14">SCI_SETINDICATORVALUE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8419" pos:column="17">pdoc</name><op:operator pos:line="8419" pos:column="21">-&gt;</op:operator><name pos:line="8419" pos:column="23">decorations</name><op:operator pos:line="8419" pos:column="34">.</op:operator><name pos:line="8419" pos:column="35">SetCurrentValue</name></name><argument_list pos:line="8419" pos:column="50">(<argument><expr><name pos:line="8419" pos:column="51">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8420" pos:column="17">break;</break>
	</case><case pos:line="8421" pos:column="9">case <expr><name pos:line="8421" pos:column="14">SCI_GETINDICATORVALUE</name></expr>:
		<return pos:line="8422" pos:column="17">return <expr><call><name><name pos:line="8422" pos:column="24">pdoc</name><op:operator pos:line="8422" pos:column="28">-&gt;</op:operator><name pos:line="8422" pos:column="30">decorations</name><op:operator pos:line="8422" pos:column="41">.</op:operator><name pos:line="8422" pos:column="42">GetCurrentValue</name></name><argument_list pos:line="8422" pos:column="57">()</argument_list></call></expr>;</return>

	</case><case pos:line="8424" pos:column="9">case <expr><name pos:line="8424" pos:column="14">SCI_INDICATORFILLRANGE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8425" pos:column="17">pdoc</name><op:operator pos:line="8425" pos:column="21">-&gt;</op:operator><name pos:line="8425" pos:column="23">DecorationFillRange</name></name><argument_list pos:line="8425" pos:column="42">(<argument><expr><name pos:line="8425" pos:column="43">wParam</name></expr></argument>, <argument><expr><call><name><name pos:line="8425" pos:column="51">pdoc</name><op:operator pos:line="8425" pos:column="55">-&gt;</op:operator><name pos:line="8425" pos:column="57">decorations</name><op:operator pos:line="8425" pos:column="68">.</op:operator><name pos:line="8425" pos:column="69">GetCurrentValue</name></name><argument_list pos:line="8425" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="8425" pos:column="88">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8426" pos:column="17">break;</break>

	</case><case pos:line="8428" pos:column="9">case <expr><name pos:line="8428" pos:column="14">SCI_INDICATORCLEARRANGE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8429" pos:column="17">pdoc</name><op:operator pos:line="8429" pos:column="21">-&gt;</op:operator><name pos:line="8429" pos:column="23">DecorationFillRange</name></name><argument_list pos:line="8429" pos:column="42">(<argument><expr><name pos:line="8429" pos:column="43">wParam</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="8429" pos:column="51">0</lit:literal></expr></argument>, <argument><expr><name pos:line="8429" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8430" pos:column="17">break;</break>

	</case><case pos:line="8432" pos:column="9">case <expr><name pos:line="8432" pos:column="14">SCI_INDICATORALLONFOR</name></expr>:
		<return pos:line="8433" pos:column="17">return <expr><call><name><name pos:line="8433" pos:column="24">pdoc</name><op:operator pos:line="8433" pos:column="28">-&gt;</op:operator><name pos:line="8433" pos:column="30">decorations</name><op:operator pos:line="8433" pos:column="41">.</op:operator><name pos:line="8433" pos:column="42">AllOnFor</name></name><argument_list pos:line="8433" pos:column="50">(<argument><expr><name pos:line="8433" pos:column="51">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8435" pos:column="9">case <expr><name pos:line="8435" pos:column="14">SCI_INDICATORVALUEAT</name></expr>:
		<return pos:line="8436" pos:column="17">return <expr><call><name><name pos:line="8436" pos:column="24">pdoc</name><op:operator pos:line="8436" pos:column="28">-&gt;</op:operator><name pos:line="8436" pos:column="30">decorations</name><op:operator pos:line="8436" pos:column="41">.</op:operator><name pos:line="8436" pos:column="42">ValueAt</name></name><argument_list pos:line="8436" pos:column="49">(<argument><expr><name pos:line="8436" pos:column="50">wParam</name></expr></argument>, <argument><expr><name pos:line="8436" pos:column="58">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8438" pos:column="9">case <expr><name pos:line="8438" pos:column="14">SCI_INDICATORSTART</name></expr>:
		<return pos:line="8439" pos:column="17">return <expr><call><name><name pos:line="8439" pos:column="24">pdoc</name><op:operator pos:line="8439" pos:column="28">-&gt;</op:operator><name pos:line="8439" pos:column="30">decorations</name><op:operator pos:line="8439" pos:column="41">.</op:operator><name pos:line="8439" pos:column="42">Start</name></name><argument_list pos:line="8439" pos:column="47">(<argument><expr><name pos:line="8439" pos:column="48">wParam</name></expr></argument>, <argument><expr><name pos:line="8439" pos:column="56">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8441" pos:column="9">case <expr><name pos:line="8441" pos:column="14">SCI_INDICATOREND</name></expr>:
		<return pos:line="8442" pos:column="17">return <expr><call><name><name pos:line="8442" pos:column="24">pdoc</name><op:operator pos:line="8442" pos:column="28">-&gt;</op:operator><name pos:line="8442" pos:column="30">decorations</name><op:operator pos:line="8442" pos:column="41">.</op:operator><name pos:line="8442" pos:column="42">End</name></name><argument_list pos:line="8442" pos:column="45">(<argument><expr><name pos:line="8442" pos:column="46">wParam</name></expr></argument>, <argument><expr><name pos:line="8442" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8444" pos:column="9">case <expr><name pos:line="8444" pos:column="14">SCI_LINEDOWN</name></expr>:
	</case><case pos:line="8445" pos:column="9">case <expr><name pos:line="8445" pos:column="14">SCI_LINEDOWNEXTEND</name></expr>:
	</case><case pos:line="8446" pos:column="9">case <expr><name pos:line="8446" pos:column="14">SCI_PARADOWN</name></expr>:
	</case><case pos:line="8447" pos:column="9">case <expr><name pos:line="8447" pos:column="14">SCI_PARADOWNEXTEND</name></expr>:
	</case><case pos:line="8448" pos:column="9">case <expr><name pos:line="8448" pos:column="14">SCI_LINEUP</name></expr>:
	</case><case pos:line="8449" pos:column="9">case <expr><name pos:line="8449" pos:column="14">SCI_LINEUPEXTEND</name></expr>:
	</case><case pos:line="8450" pos:column="9">case <expr><name pos:line="8450" pos:column="14">SCI_PARAUP</name></expr>:
	</case><case pos:line="8451" pos:column="9">case <expr><name pos:line="8451" pos:column="14">SCI_PARAUPEXTEND</name></expr>:
	</case><case pos:line="8452" pos:column="9">case <expr><name pos:line="8452" pos:column="14">SCI_CHARLEFT</name></expr>:
	</case><case pos:line="8453" pos:column="9">case <expr><name pos:line="8453" pos:column="14">SCI_CHARLEFTEXTEND</name></expr>:
	</case><case pos:line="8454" pos:column="9">case <expr><name pos:line="8454" pos:column="14">SCI_CHARRIGHT</name></expr>:
	</case><case pos:line="8455" pos:column="9">case <expr><name pos:line="8455" pos:column="14">SCI_CHARRIGHTEXTEND</name></expr>:
	</case><case pos:line="8456" pos:column="9">case <expr><name pos:line="8456" pos:column="14">SCI_WORDLEFT</name></expr>:
	</case><case pos:line="8457" pos:column="9">case <expr><name pos:line="8457" pos:column="14">SCI_WORDLEFTEXTEND</name></expr>:
	</case><case pos:line="8458" pos:column="9">case <expr><name pos:line="8458" pos:column="14">SCI_WORDRIGHT</name></expr>:
	</case><case pos:line="8459" pos:column="9">case <expr><name pos:line="8459" pos:column="14">SCI_WORDRIGHTEXTEND</name></expr>:
	</case><case pos:line="8460" pos:column="9">case <expr><name pos:line="8460" pos:column="14">SCI_WORDLEFTEND</name></expr>:
	</case><case pos:line="8461" pos:column="9">case <expr><name pos:line="8461" pos:column="14">SCI_WORDLEFTENDEXTEND</name></expr>:
	</case><case pos:line="8462" pos:column="9">case <expr><name pos:line="8462" pos:column="14">SCI_WORDRIGHTEND</name></expr>:
	</case><case pos:line="8463" pos:column="9">case <expr><name pos:line="8463" pos:column="14">SCI_WORDRIGHTENDEXTEND</name></expr>:
	</case><case pos:line="8464" pos:column="9">case <expr><name pos:line="8464" pos:column="14">SCI_HOME</name></expr>:
	</case><case pos:line="8465" pos:column="9">case <expr><name pos:line="8465" pos:column="14">SCI_HOMEEXTEND</name></expr>:
	</case><case pos:line="8466" pos:column="9">case <expr><name pos:line="8466" pos:column="14">SCI_LINEEND</name></expr>:
	</case><case pos:line="8467" pos:column="9">case <expr><name pos:line="8467" pos:column="14">SCI_LINEENDEXTEND</name></expr>:
	</case><case pos:line="8468" pos:column="9">case <expr><name pos:line="8468" pos:column="14">SCI_HOMEWRAP</name></expr>:
	</case><case pos:line="8469" pos:column="9">case <expr><name pos:line="8469" pos:column="14">SCI_HOMEWRAPEXTEND</name></expr>:
	</case><case pos:line="8470" pos:column="9">case <expr><name pos:line="8470" pos:column="14">SCI_LINEENDWRAP</name></expr>:
	</case><case pos:line="8471" pos:column="9">case <expr><name pos:line="8471" pos:column="14">SCI_LINEENDWRAPEXTEND</name></expr>:
	</case><case pos:line="8472" pos:column="9">case <expr><name pos:line="8472" pos:column="14">SCI_DOCUMENTSTART</name></expr>:
	</case><case pos:line="8473" pos:column="9">case <expr><name pos:line="8473" pos:column="14">SCI_DOCUMENTSTARTEXTEND</name></expr>:
	</case><case pos:line="8474" pos:column="9">case <expr><name pos:line="8474" pos:column="14">SCI_DOCUMENTEND</name></expr>:
	</case><case pos:line="8475" pos:column="9">case <expr><name pos:line="8475" pos:column="14">SCI_DOCUMENTENDEXTEND</name></expr>:

	</case><case pos:line="8477" pos:column="9">case <expr><name pos:line="8477" pos:column="14">SCI_STUTTEREDPAGEUP</name></expr>:
	</case><case pos:line="8478" pos:column="9">case <expr><name pos:line="8478" pos:column="14">SCI_STUTTEREDPAGEUPEXTEND</name></expr>:
	</case><case pos:line="8479" pos:column="9">case <expr><name pos:line="8479" pos:column="14">SCI_STUTTEREDPAGEDOWN</name></expr>:
	</case><case pos:line="8480" pos:column="9">case <expr><name pos:line="8480" pos:column="14">SCI_STUTTEREDPAGEDOWNEXTEND</name></expr>:

	</case><case pos:line="8482" pos:column="9">case <expr><name pos:line="8482" pos:column="14">SCI_PAGEUP</name></expr>:
	</case><case pos:line="8483" pos:column="9">case <expr><name pos:line="8483" pos:column="14">SCI_PAGEUPEXTEND</name></expr>:
	</case><case pos:line="8484" pos:column="9">case <expr><name pos:line="8484" pos:column="14">SCI_PAGEDOWN</name></expr>:
	</case><case pos:line="8485" pos:column="9">case <expr><name pos:line="8485" pos:column="14">SCI_PAGEDOWNEXTEND</name></expr>:
	</case><case pos:line="8486" pos:column="9">case <expr><name pos:line="8486" pos:column="14">SCI_EDITTOGGLEOVERTYPE</name></expr>:
	</case><case pos:line="8487" pos:column="9">case <expr><name pos:line="8487" pos:column="14">SCI_CANCEL</name></expr>:
	</case><case pos:line="8488" pos:column="9">case <expr><name pos:line="8488" pos:column="14">SCI_DELETEBACK</name></expr>:
	</case><case pos:line="8489" pos:column="9">case <expr><name pos:line="8489" pos:column="14">SCI_TAB</name></expr>:
	</case><case pos:line="8490" pos:column="9">case <expr><name pos:line="8490" pos:column="14">SCI_BACKTAB</name></expr>:
	</case><case pos:line="8491" pos:column="9">case <expr><name pos:line="8491" pos:column="14">SCI_NEWLINE</name></expr>:
	</case><case pos:line="8492" pos:column="9">case <expr><name pos:line="8492" pos:column="14">SCI_FORMFEED</name></expr>:
	</case><case pos:line="8493" pos:column="9">case <expr><name pos:line="8493" pos:column="14">SCI_VCHOME</name></expr>:
	</case><case pos:line="8494" pos:column="9">case <expr><name pos:line="8494" pos:column="14">SCI_VCHOMEEXTEND</name></expr>:
	</case><case pos:line="8495" pos:column="9">case <expr><name pos:line="8495" pos:column="14">SCI_VCHOMEWRAP</name></expr>:
	</case><case pos:line="8496" pos:column="9">case <expr><name pos:line="8496" pos:column="14">SCI_VCHOMEWRAPEXTEND</name></expr>:
	</case><case pos:line="8497" pos:column="9">case <expr><name pos:line="8497" pos:column="14">SCI_ZOOMIN</name></expr>:
	</case><case pos:line="8498" pos:column="9">case <expr><name pos:line="8498" pos:column="14">SCI_ZOOMOUT</name></expr>:
	</case><case pos:line="8499" pos:column="9">case <expr><name pos:line="8499" pos:column="14">SCI_DELWORDLEFT</name></expr>:
	</case><case pos:line="8500" pos:column="9">case <expr><name pos:line="8500" pos:column="14">SCI_DELWORDRIGHT</name></expr>:
	</case><case pos:line="8501" pos:column="9">case <expr><name pos:line="8501" pos:column="14">SCI_DELWORDRIGHTEND</name></expr>:
	</case><case pos:line="8502" pos:column="9">case <expr><name pos:line="8502" pos:column="14">SCI_DELLINELEFT</name></expr>:
	</case><case pos:line="8503" pos:column="9">case <expr><name pos:line="8503" pos:column="14">SCI_DELLINERIGHT</name></expr>:
	</case><case pos:line="8504" pos:column="9">case <expr><name pos:line="8504" pos:column="14">SCI_LINECOPY</name></expr>:
	</case><case pos:line="8505" pos:column="9">case <expr><name pos:line="8505" pos:column="14">SCI_LINECUT</name></expr>:
	</case><case pos:line="8506" pos:column="9">case <expr><name pos:line="8506" pos:column="14">SCI_LINEDELETE</name></expr>:
	</case><case pos:line="8507" pos:column="9">case <expr><name pos:line="8507" pos:column="14">SCI_LINETRANSPOSE</name></expr>:
	</case><case pos:line="8508" pos:column="9">case <expr><name pos:line="8508" pos:column="14">SCI_LINEDUPLICATE</name></expr>:
	</case><case pos:line="8509" pos:column="9">case <expr><name pos:line="8509" pos:column="14">SCI_LOWERCASE</name></expr>:
	</case><case pos:line="8510" pos:column="9">case <expr><name pos:line="8510" pos:column="14">SCI_UPPERCASE</name></expr>:
	</case><case pos:line="8511" pos:column="9">case <expr><name pos:line="8511" pos:column="14">SCI_LINESCROLLDOWN</name></expr>:
	</case><case pos:line="8512" pos:column="9">case <expr><name pos:line="8512" pos:column="14">SCI_LINESCROLLUP</name></expr>:
	</case><case pos:line="8513" pos:column="9">case <expr><name pos:line="8513" pos:column="14">SCI_WORDPARTLEFT</name></expr>:
	</case><case pos:line="8514" pos:column="9">case <expr><name pos:line="8514" pos:column="14">SCI_WORDPARTLEFTEXTEND</name></expr>:
	</case><case pos:line="8515" pos:column="9">case <expr><name pos:line="8515" pos:column="14">SCI_WORDPARTRIGHT</name></expr>:
	</case><case pos:line="8516" pos:column="9">case <expr><name pos:line="8516" pos:column="14">SCI_WORDPARTRIGHTEXTEND</name></expr>:
	</case><case pos:line="8517" pos:column="9">case <expr><name pos:line="8517" pos:column="14">SCI_DELETEBACKNOTLINE</name></expr>:
	</case><case pos:line="8518" pos:column="9">case <expr><name pos:line="8518" pos:column="14">SCI_HOMEDISPLAY</name></expr>:
	</case><case pos:line="8519" pos:column="9">case <expr><name pos:line="8519" pos:column="14">SCI_HOMEDISPLAYEXTEND</name></expr>:
	</case><case pos:line="8520" pos:column="9">case <expr><name pos:line="8520" pos:column="14">SCI_LINEENDDISPLAY</name></expr>:
	</case><case pos:line="8521" pos:column="9">case <expr><name pos:line="8521" pos:column="14">SCI_LINEENDDISPLAYEXTEND</name></expr>:
	</case><case pos:line="8522" pos:column="9">case <expr><name pos:line="8522" pos:column="14">SCI_LINEDOWNRECTEXTEND</name></expr>:
	</case><case pos:line="8523" pos:column="9">case <expr><name pos:line="8523" pos:column="14">SCI_LINEUPRECTEXTEND</name></expr>:
	</case><case pos:line="8524" pos:column="9">case <expr><name pos:line="8524" pos:column="14">SCI_CHARLEFTRECTEXTEND</name></expr>:
	</case><case pos:line="8525" pos:column="9">case <expr><name pos:line="8525" pos:column="14">SCI_CHARRIGHTRECTEXTEND</name></expr>:
	</case><case pos:line="8526" pos:column="9">case <expr><name pos:line="8526" pos:column="14">SCI_HOMERECTEXTEND</name></expr>:
	</case><case pos:line="8527" pos:column="9">case <expr><name pos:line="8527" pos:column="14">SCI_VCHOMERECTEXTEND</name></expr>:
	</case><case pos:line="8528" pos:column="9">case <expr><name pos:line="8528" pos:column="14">SCI_LINEENDRECTEXTEND</name></expr>:
	</case><case pos:line="8529" pos:column="9">case <expr><name pos:line="8529" pos:column="14">SCI_PAGEUPRECTEXTEND</name></expr>:
	</case><case pos:line="8530" pos:column="9">case <expr><name pos:line="8530" pos:column="14">SCI_PAGEDOWNRECTEXTEND</name></expr>:
	</case><case pos:line="8531" pos:column="9">case <expr><name pos:line="8531" pos:column="14">SCI_SELECTIONDUPLICATE</name></expr>:
		<return pos:line="8532" pos:column="17">return <expr><call><name pos:line="8532" pos:column="24">KeyCommand</name><argument_list pos:line="8532" pos:column="34">(<argument><expr><name pos:line="8532" pos:column="35">iMessage</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8534" pos:column="9">case <expr><name pos:line="8534" pos:column="14">SCI_BRACEHIGHLIGHT</name></expr>:
		<expr_stmt><expr><call><name pos:line="8535" pos:column="17">SetBraceHighlight</name><argument_list pos:line="8535" pos:column="34">(<argument><expr><call><name><name pos:line="8535" pos:column="35">static_cast</name><argument_list pos:line="8535" pos:column="46">&lt;<argument><expr><name pos:line="8535" pos:column="47">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="8535" pos:column="51">(<argument><expr><name pos:line="8535" pos:column="52">wParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="8535" pos:column="61">lParam</name></expr></argument>, <argument><expr><name pos:line="8535" pos:column="69">STYLE_BRACELIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8536" pos:column="17">break;</break>

	</case><case pos:line="8538" pos:column="9">case <expr><name pos:line="8538" pos:column="14">SCI_BRACEHIGHLIGHTINDICATOR</name></expr>:
		<if pos:line="8539" pos:column="17">if <condition pos:line="8539" pos:column="20">(<expr><name pos:line="8539" pos:column="21">lParam</name> <op:operator pos:line="8539" pos:column="28">&gt;=</op:operator> <lit:literal type="number" pos:line="8539" pos:column="31">0</lit:literal> <op:operator pos:line="8539" pos:column="33">&amp;&amp;</op:operator> <name pos:line="8539" pos:column="36">lParam</name> <op:operator pos:line="8539" pos:column="43">&lt;=</op:operator> <name pos:line="8539" pos:column="46">INDIC_MAX</name></expr>)</condition><then pos:line="8539" pos:column="56"> <block pos:line="8539" pos:column="57">{
			<expr_stmt><expr><name><name pos:line="8540" pos:column="25">vs</name><op:operator pos:line="8540" pos:column="27">.</op:operator><name pos:line="8540" pos:column="28">braceHighlightIndicatorSet</name></name> <op:operator pos:line="8540" pos:column="55">=</op:operator> <name pos:line="8540" pos:column="57">wParam</name> <op:operator pos:line="8540" pos:column="64">!=</op:operator> <lit:literal type="number" pos:line="8540" pos:column="67">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="8541" pos:column="25">vs</name><op:operator pos:line="8541" pos:column="27">.</op:operator><name pos:line="8541" pos:column="28">braceHighlightIndicator</name></name> <op:operator pos:line="8541" pos:column="52">=</op:operator> <name pos:line="8541" pos:column="54">lParam</name></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8543" pos:column="17">break;</break>

	</case><case pos:line="8545" pos:column="9">case <expr><name pos:line="8545" pos:column="14">SCI_BRACEBADLIGHT</name></expr>:
		<expr_stmt><expr><call><name pos:line="8546" pos:column="17">SetBraceHighlight</name><argument_list pos:line="8546" pos:column="34">(<argument><expr><call><name><name pos:line="8546" pos:column="35">static_cast</name><argument_list pos:line="8546" pos:column="46">&lt;<argument><expr><name pos:line="8546" pos:column="47">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="8546" pos:column="51">(<argument><expr><name pos:line="8546" pos:column="52">wParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="8546" pos:column="61">-</op:operator><lit:literal type="number" pos:line="8546" pos:column="62">1</lit:literal></expr></argument>, <argument><expr><name pos:line="8546" pos:column="65">STYLE_BRACEBAD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8547" pos:column="17">break;</break>

	</case><case pos:line="8549" pos:column="9">case <expr><name pos:line="8549" pos:column="14">SCI_BRACEBADLIGHTINDICATOR</name></expr>:
		<if pos:line="8550" pos:column="17">if <condition pos:line="8550" pos:column="20">(<expr><name pos:line="8550" pos:column="21">lParam</name> <op:operator pos:line="8550" pos:column="28">&gt;=</op:operator> <lit:literal type="number" pos:line="8550" pos:column="31">0</lit:literal> <op:operator pos:line="8550" pos:column="33">&amp;&amp;</op:operator> <name pos:line="8550" pos:column="36">lParam</name> <op:operator pos:line="8550" pos:column="43">&lt;=</op:operator> <name pos:line="8550" pos:column="46">INDIC_MAX</name></expr>)</condition><then pos:line="8550" pos:column="56"> <block pos:line="8550" pos:column="57">{
			<expr_stmt><expr><name><name pos:line="8551" pos:column="25">vs</name><op:operator pos:line="8551" pos:column="27">.</op:operator><name pos:line="8551" pos:column="28">braceBadLightIndicatorSet</name></name> <op:operator pos:line="8551" pos:column="54">=</op:operator> <name pos:line="8551" pos:column="56">wParam</name> <op:operator pos:line="8551" pos:column="63">!=</op:operator> <lit:literal type="number" pos:line="8551" pos:column="66">0</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="8552" pos:column="25">vs</name><op:operator pos:line="8552" pos:column="27">.</op:operator><name pos:line="8552" pos:column="28">braceBadLightIndicator</name></name> <op:operator pos:line="8552" pos:column="51">=</op:operator> <name pos:line="8552" pos:column="53">lParam</name></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="8554" pos:column="17">break;</break>

	</case><case pos:line="8556" pos:column="9">case <expr><name pos:line="8556" pos:column="14">SCI_BRACEMATCH</name></expr>:
		<comment type="line" pos:line="8557" pos:column="17">// wParam is position of char to find brace for,</comment>
		<comment type="line" pos:line="8558" pos:column="17">// lParam is maximum amount of text to restyle to find it</comment>
		<return pos:line="8559" pos:column="17">return <expr><call><name><name pos:line="8559" pos:column="24">pdoc</name><op:operator pos:line="8559" pos:column="28">-&gt;</op:operator><name pos:line="8559" pos:column="30">BraceMatch</name></name><argument_list pos:line="8559" pos:column="40">(<argument><expr><name pos:line="8559" pos:column="41">wParam</name></expr></argument>, <argument><expr><name pos:line="8559" pos:column="49">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8561" pos:column="9">case <expr><name pos:line="8561" pos:column="14">SCI_GETVIEWEOL</name></expr>:
		<return pos:line="8562" pos:column="17">return <expr><name><name pos:line="8562" pos:column="24">vs</name><op:operator pos:line="8562" pos:column="26">.</op:operator><name pos:line="8562" pos:column="27">viewEOL</name></name></expr>;</return>

	</case><case pos:line="8564" pos:column="9">case <expr><name pos:line="8564" pos:column="14">SCI_SETVIEWEOL</name></expr>:
		<expr_stmt><expr><name><name pos:line="8565" pos:column="17">vs</name><op:operator pos:line="8565" pos:column="19">.</op:operator><name pos:line="8565" pos:column="20">viewEOL</name></name> <op:operator pos:line="8565" pos:column="28">=</op:operator> <name pos:line="8565" pos:column="30">wParam</name> <op:operator pos:line="8565" pos:column="37">!=</op:operator> <lit:literal type="number" pos:line="8565" pos:column="40">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8566" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8566" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8567" pos:column="17">break;</break>

	</case><case pos:line="8569" pos:column="9">case <expr><name pos:line="8569" pos:column="14">SCI_SETZOOM</name></expr>:
		<expr_stmt><expr><name><name pos:line="8570" pos:column="17">vs</name><op:operator pos:line="8570" pos:column="19">.</op:operator><name pos:line="8570" pos:column="20">zoomLevel</name></name> <op:operator pos:line="8570" pos:column="30">=</op:operator> <name pos:line="8570" pos:column="32">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8571" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8571" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8572" pos:column="17">NotifyZoom</name><argument_list pos:line="8572" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8573" pos:column="17">break;</break>

	</case><case pos:line="8575" pos:column="9">case <expr><name pos:line="8575" pos:column="14">SCI_GETZOOM</name></expr>:
		<return pos:line="8576" pos:column="17">return <expr><name><name pos:line="8576" pos:column="24">vs</name><op:operator pos:line="8576" pos:column="26">.</op:operator><name pos:line="8576" pos:column="27">zoomLevel</name></name></expr>;</return>

	</case><case pos:line="8578" pos:column="9">case <expr><name pos:line="8578" pos:column="14">SCI_GETEDGECOLUMN</name></expr>:
		<return pos:line="8579" pos:column="17">return <expr><name pos:line="8579" pos:column="24">theEdge</name></expr>;</return>

	</case><case pos:line="8581" pos:column="9">case <expr><name pos:line="8581" pos:column="14">SCI_SETEDGECOLUMN</name></expr>:
		<expr_stmt><expr><name pos:line="8582" pos:column="17">theEdge</name> <op:operator pos:line="8582" pos:column="25">=</op:operator> <name pos:line="8582" pos:column="27">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8583" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8583" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8584" pos:column="17">break;</break>

	</case><case pos:line="8586" pos:column="9">case <expr><name pos:line="8586" pos:column="14">SCI_GETEDGEMODE</name></expr>:
		<return pos:line="8587" pos:column="17">return <expr><name><name pos:line="8587" pos:column="24">vs</name><op:operator pos:line="8587" pos:column="26">.</op:operator><name pos:line="8587" pos:column="27">edgeState</name></name></expr>;</return>

	</case><case pos:line="8589" pos:column="9">case <expr><name pos:line="8589" pos:column="14">SCI_SETEDGEMODE</name></expr>:
		<expr_stmt><expr><name><name pos:line="8590" pos:column="17">vs</name><op:operator pos:line="8590" pos:column="19">.</op:operator><name pos:line="8590" pos:column="20">edgeState</name></name> <op:operator pos:line="8590" pos:column="30">=</op:operator> <name pos:line="8590" pos:column="32">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8591" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8591" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8592" pos:column="17">break;</break>

	</case><case pos:line="8594" pos:column="9">case <expr><name pos:line="8594" pos:column="14">SCI_GETEDGECOLOUR</name></expr>:
		<return pos:line="8595" pos:column="17">return <expr><call><name><name pos:line="8595" pos:column="24">vs</name><op:operator pos:line="8595" pos:column="26">.</op:operator><name pos:line="8595" pos:column="27">edgecolour</name><op:operator pos:line="8595" pos:column="37">.</op:operator><name pos:line="8595" pos:column="38">desired</name><op:operator pos:line="8595" pos:column="45">.</op:operator><name pos:line="8595" pos:column="46">AsLong</name></name><argument_list pos:line="8595" pos:column="52">()</argument_list></call></expr>;</return>

	</case><case pos:line="8597" pos:column="9">case <expr><name pos:line="8597" pos:column="14">SCI_SETEDGECOLOUR</name></expr>:
		<expr_stmt><expr><name><name pos:line="8598" pos:column="17">vs</name><op:operator pos:line="8598" pos:column="19">.</op:operator><name pos:line="8598" pos:column="20">edgecolour</name><op:operator pos:line="8598" pos:column="30">.</op:operator><name pos:line="8598" pos:column="31">desired</name></name> <op:operator pos:line="8598" pos:column="39">=</op:operator> <call><name pos:line="8598" pos:column="41">ColourDesired</name><argument_list pos:line="8598" pos:column="54">(<argument><expr><name pos:line="8598" pos:column="55">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8599" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8599" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8600" pos:column="17">break;</break>

	</case><case pos:line="8602" pos:column="9">case <expr><name pos:line="8602" pos:column="14">SCI_GETDOCPOINTER</name></expr>:
		<return pos:line="8603" pos:column="17">return <expr><call><name><name pos:line="8603" pos:column="24">reinterpret_cast</name><argument_list pos:line="8603" pos:column="40">&lt;<argument><expr><name pos:line="8603" pos:column="41">sptr_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="8603" pos:column="48">(<argument><expr><name pos:line="8603" pos:column="49">pdoc</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8605" pos:column="9">case <expr><name pos:line="8605" pos:column="14">SCI_SETDOCPOINTER</name></expr>:
		<expr_stmt><expr><call><name pos:line="8606" pos:column="17">CancelModes</name><argument_list pos:line="8606" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8607" pos:column="17">SetDocPointer</name><argument_list pos:line="8607" pos:column="30">(<argument><expr><call><name><name pos:line="8607" pos:column="31">reinterpret_cast</name><argument_list pos:line="8607" pos:column="47">&lt;<argument><expr><name pos:line="8607" pos:column="48">Document</name> <op:operator pos:line="8607" pos:column="57">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="8607" pos:column="59">(<argument><expr><name pos:line="8607" pos:column="60">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="8608" pos:column="17">return <expr><lit:literal type="number" pos:line="8608" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="8610" pos:column="9">case <expr><name pos:line="8610" pos:column="14">SCI_CREATEDOCUMENT</name></expr>: <block pos:line="8610" pos:column="34">{
			<decl_stmt><decl><type><name pos:line="8611" pos:column="25">Document</name> <type:modifier pos:line="8611" pos:column="34">*</type:modifier></type><name pos:line="8611" pos:column="35">doc</name> <init pos:line="8611" pos:column="39">= <expr><op:operator pos:line="8611" pos:column="41">new</op:operator> <call><name pos:line="8611" pos:column="45">Document</name><argument_list pos:line="8611" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="8612" pos:column="25">if <condition pos:line="8612" pos:column="28">(<expr><name pos:line="8612" pos:column="29">doc</name></expr>)</condition><then pos:line="8612" pos:column="33"> <block pos:line="8612" pos:column="34">{
				<expr_stmt><expr><call><name><name pos:line="8613" pos:column="33">doc</name><op:operator pos:line="8613" pos:column="36">-&gt;</op:operator><name pos:line="8613" pos:column="38">AddRef</name></name><argument_list pos:line="8613" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="8615" pos:column="25">return <expr><call><name><name pos:line="8615" pos:column="32">reinterpret_cast</name><argument_list pos:line="8615" pos:column="48">&lt;<argument><expr><name pos:line="8615" pos:column="49">sptr_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="8615" pos:column="56">(<argument><expr><name pos:line="8615" pos:column="57">doc</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

	</case><case pos:line="8618" pos:column="9">case <expr><name pos:line="8618" pos:column="14">SCI_ADDREFDOCUMENT</name></expr>:
		<expr_stmt><expr><op:operator pos:line="8619" pos:column="17">(</op:operator><call><name><name pos:line="8619" pos:column="18">reinterpret_cast</name><argument_list pos:line="8619" pos:column="34">&lt;<argument><expr><name pos:line="8619" pos:column="35">Document</name> <op:operator pos:line="8619" pos:column="44">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="8619" pos:column="46">(<argument><expr><name pos:line="8619" pos:column="47">lParam</name></expr></argument>)</argument_list></call><op:operator pos:line="8619" pos:column="54">)</op:operator><op:operator pos:line="8619" pos:column="55">-&gt;</op:operator><call><name pos:line="8619" pos:column="57">AddRef</name><argument_list pos:line="8619" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8620" pos:column="17">break;</break>

	</case><case pos:line="8622" pos:column="9">case <expr><name pos:line="8622" pos:column="14">SCI_RELEASEDOCUMENT</name></expr>:
		<expr_stmt><expr><op:operator pos:line="8623" pos:column="17">(</op:operator><call><name><name pos:line="8623" pos:column="18">reinterpret_cast</name><argument_list pos:line="8623" pos:column="34">&lt;<argument><expr><name pos:line="8623" pos:column="35">Document</name> <op:operator pos:line="8623" pos:column="44">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="8623" pos:column="46">(<argument><expr><name pos:line="8623" pos:column="47">lParam</name></expr></argument>)</argument_list></call><op:operator pos:line="8623" pos:column="54">)</op:operator><op:operator pos:line="8623" pos:column="55">-&gt;</op:operator><call><name pos:line="8623" pos:column="57">Release</name><argument_list pos:line="8623" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8624" pos:column="17">break;</break>

	</case><case pos:line="8626" pos:column="9">case <expr><name pos:line="8626" pos:column="14">SCI_SETMODEVENTMASK</name></expr>:
		<expr_stmt><expr><name pos:line="8627" pos:column="17">modEventMask</name> <op:operator pos:line="8627" pos:column="30">=</op:operator> <name pos:line="8627" pos:column="32">wParam</name></expr>;</expr_stmt>
		<return pos:line="8628" pos:column="17">return <expr><lit:literal type="number" pos:line="8628" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="8630" pos:column="9">case <expr><name pos:line="8630" pos:column="14">SCI_GETMODEVENTMASK</name></expr>:
		<return pos:line="8631" pos:column="17">return <expr><name pos:line="8631" pos:column="24">modEventMask</name></expr>;</return>

	</case><case pos:line="8633" pos:column="9">case <expr><name pos:line="8633" pos:column="14">SCI_CONVERTEOLS</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8634" pos:column="17">pdoc</name><op:operator pos:line="8634" pos:column="21">-&gt;</op:operator><name pos:line="8634" pos:column="23">ConvertLineEnds</name></name><argument_list pos:line="8634" pos:column="38">(<argument><expr><name pos:line="8634" pos:column="39">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8635" pos:column="17">SetSelection</name><argument_list pos:line="8635" pos:column="29">(<argument><expr><call><name><name pos:line="8635" pos:column="30">sel</name><op:operator pos:line="8635" pos:column="33">.</op:operator><name pos:line="8635" pos:column="34">MainCaret</name></name><argument_list pos:line="8635" pos:column="43">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="8635" pos:column="47">sel</name><op:operator pos:line="8635" pos:column="50">.</op:operator><name pos:line="8635" pos:column="51">MainAnchor</name></name><argument_list pos:line="8635" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="8635" pos:column="73">// Ensure selection inside document</comment>
		<return pos:line="8636" pos:column="17">return <expr><lit:literal type="number" pos:line="8636" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="8638" pos:column="9">case <expr><name pos:line="8638" pos:column="14">SCI_SETLENGTHFORENCODE</name></expr>:
		<expr_stmt><expr><name pos:line="8639" pos:column="17">lengthForEncode</name> <op:operator pos:line="8639" pos:column="33">=</op:operator> <name pos:line="8639" pos:column="35">wParam</name></expr>;</expr_stmt>
		<return pos:line="8640" pos:column="17">return <expr><lit:literal type="number" pos:line="8640" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="8642" pos:column="9">case <expr><name pos:line="8642" pos:column="14">SCI_SELECTIONISRECTANGLE</name></expr>:
		<return pos:line="8643" pos:column="17">return <expr><name><name pos:line="8643" pos:column="24">sel</name><op:operator pos:line="8643" pos:column="27">.</op:operator><name pos:line="8643" pos:column="28">selType</name></name> <op:operator pos:line="8643" pos:column="36">==</op:operator> <name><name pos:line="8643" pos:column="39">Selection</name><op:operator pos:line="8643" pos:column="48">::</op:operator><name pos:line="8643" pos:column="50">selRectangle</name></name> <op:operator pos:line="8643" pos:column="63">?</op:operator> <lit:literal type="number" pos:line="8643" pos:column="65">1</lit:literal> <op:operator pos:line="8643" pos:column="67">:</op:operator> <lit:literal type="number" pos:line="8643" pos:column="69">0</lit:literal></expr>;</return>

	</case><case pos:line="8645" pos:column="9">case <expr><name pos:line="8645" pos:column="14">SCI_SETSELECTIONMODE</name></expr>: <block pos:line="8645" pos:column="36">{
			<switch pos:line="8646" pos:column="25">switch <condition pos:line="8646" pos:column="32">(<expr><name pos:line="8646" pos:column="33">wParam</name></expr>)</condition> <block pos:line="8646" pos:column="41">{
			<case pos:line="8647" pos:column="25">case <expr><name pos:line="8647" pos:column="30">SC_SEL_STREAM</name></expr>:
				<expr_stmt><expr><call><name><name pos:line="8648" pos:column="33">sel</name><op:operator pos:line="8648" pos:column="36">.</op:operator><name pos:line="8648" pos:column="37">SetMoveExtends</name></name><argument_list pos:line="8648" pos:column="51">(<argument><expr><op:operator pos:line="8648" pos:column="52">!</op:operator><call><name><name pos:line="8648" pos:column="53">sel</name><op:operator pos:line="8648" pos:column="56">.</op:operator><name pos:line="8648" pos:column="57">MoveExtends</name></name><argument_list pos:line="8648" pos:column="68">()</argument_list></call> <op:operator pos:line="8648" pos:column="71">||</op:operator> <op:operator pos:line="8648" pos:column="74">(</op:operator><name><name pos:line="8648" pos:column="75">sel</name><op:operator pos:line="8648" pos:column="78">.</op:operator><name pos:line="8648" pos:column="79">selType</name></name> <op:operator pos:line="8648" pos:column="87">!=</op:operator> <name><name pos:line="8648" pos:column="90">Selection</name><op:operator pos:line="8648" pos:column="99">::</op:operator><name pos:line="8648" pos:column="101">selStream</name></name><op:operator pos:line="8648" pos:column="110">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="8649" pos:column="33">sel</name><op:operator pos:line="8649" pos:column="36">.</op:operator><name pos:line="8649" pos:column="37">selType</name></name> <op:operator pos:line="8649" pos:column="45">=</op:operator> <name><name pos:line="8649" pos:column="47">Selection</name><op:operator pos:line="8649" pos:column="56">::</op:operator><name pos:line="8649" pos:column="58">selStream</name></name></expr>;</expr_stmt>
				<break pos:line="8650" pos:column="33">break;</break>
			</case><case pos:line="8651" pos:column="25">case <expr><name pos:line="8651" pos:column="30">SC_SEL_RECTANGLE</name></expr>:
				<expr_stmt><expr><call><name><name pos:line="8652" pos:column="33">sel</name><op:operator pos:line="8652" pos:column="36">.</op:operator><name pos:line="8652" pos:column="37">SetMoveExtends</name></name><argument_list pos:line="8652" pos:column="51">(<argument><expr><op:operator pos:line="8652" pos:column="52">!</op:operator><call><name><name pos:line="8652" pos:column="53">sel</name><op:operator pos:line="8652" pos:column="56">.</op:operator><name pos:line="8652" pos:column="57">MoveExtends</name></name><argument_list pos:line="8652" pos:column="68">()</argument_list></call> <op:operator pos:line="8652" pos:column="71">||</op:operator> <op:operator pos:line="8652" pos:column="74">(</op:operator><name><name pos:line="8652" pos:column="75">sel</name><op:operator pos:line="8652" pos:column="78">.</op:operator><name pos:line="8652" pos:column="79">selType</name></name> <op:operator pos:line="8652" pos:column="87">!=</op:operator> <name><name pos:line="8652" pos:column="90">Selection</name><op:operator pos:line="8652" pos:column="99">::</op:operator><name pos:line="8652" pos:column="101">selRectangle</name></name><op:operator pos:line="8652" pos:column="113">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="8653" pos:column="33">sel</name><op:operator pos:line="8653" pos:column="36">.</op:operator><name pos:line="8653" pos:column="37">selType</name></name> <op:operator pos:line="8653" pos:column="45">=</op:operator> <name><name pos:line="8653" pos:column="47">Selection</name><op:operator pos:line="8653" pos:column="56">::</op:operator><name pos:line="8653" pos:column="58">selRectangle</name></name></expr>;</expr_stmt>
				<break pos:line="8654" pos:column="33">break;</break>
			</case><case pos:line="8655" pos:column="25">case <expr><name pos:line="8655" pos:column="30">SC_SEL_LINES</name></expr>:
				<expr_stmt><expr><call><name><name pos:line="8656" pos:column="33">sel</name><op:operator pos:line="8656" pos:column="36">.</op:operator><name pos:line="8656" pos:column="37">SetMoveExtends</name></name><argument_list pos:line="8656" pos:column="51">(<argument><expr><op:operator pos:line="8656" pos:column="52">!</op:operator><call><name><name pos:line="8656" pos:column="53">sel</name><op:operator pos:line="8656" pos:column="56">.</op:operator><name pos:line="8656" pos:column="57">MoveExtends</name></name><argument_list pos:line="8656" pos:column="68">()</argument_list></call> <op:operator pos:line="8656" pos:column="71">||</op:operator> <op:operator pos:line="8656" pos:column="74">(</op:operator><name><name pos:line="8656" pos:column="75">sel</name><op:operator pos:line="8656" pos:column="78">.</op:operator><name pos:line="8656" pos:column="79">selType</name></name> <op:operator pos:line="8656" pos:column="87">!=</op:operator> <name><name pos:line="8656" pos:column="90">Selection</name><op:operator pos:line="8656" pos:column="99">::</op:operator><name pos:line="8656" pos:column="101">selLines</name></name><op:operator pos:line="8656" pos:column="109">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="8657" pos:column="33">sel</name><op:operator pos:line="8657" pos:column="36">.</op:operator><name pos:line="8657" pos:column="37">selType</name></name> <op:operator pos:line="8657" pos:column="45">=</op:operator> <name><name pos:line="8657" pos:column="47">Selection</name><op:operator pos:line="8657" pos:column="56">::</op:operator><name pos:line="8657" pos:column="58">selLines</name></name></expr>;</expr_stmt>
				<break pos:line="8658" pos:column="33">break;</break>
			</case><case pos:line="8659" pos:column="25">case <expr><name pos:line="8659" pos:column="30">SC_SEL_THIN</name></expr>:
				<expr_stmt><expr><call><name><name pos:line="8660" pos:column="33">sel</name><op:operator pos:line="8660" pos:column="36">.</op:operator><name pos:line="8660" pos:column="37">SetMoveExtends</name></name><argument_list pos:line="8660" pos:column="51">(<argument><expr><op:operator pos:line="8660" pos:column="52">!</op:operator><call><name><name pos:line="8660" pos:column="53">sel</name><op:operator pos:line="8660" pos:column="56">.</op:operator><name pos:line="8660" pos:column="57">MoveExtends</name></name><argument_list pos:line="8660" pos:column="68">()</argument_list></call> <op:operator pos:line="8660" pos:column="71">||</op:operator> <op:operator pos:line="8660" pos:column="74">(</op:operator><name><name pos:line="8660" pos:column="75">sel</name><op:operator pos:line="8660" pos:column="78">.</op:operator><name pos:line="8660" pos:column="79">selType</name></name> <op:operator pos:line="8660" pos:column="87">!=</op:operator> <name><name pos:line="8660" pos:column="90">Selection</name><op:operator pos:line="8660" pos:column="99">::</op:operator><name pos:line="8660" pos:column="101">selThin</name></name><op:operator pos:line="8660" pos:column="108">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="8661" pos:column="33">sel</name><op:operator pos:line="8661" pos:column="36">.</op:operator><name pos:line="8661" pos:column="37">selType</name></name> <op:operator pos:line="8661" pos:column="45">=</op:operator> <name><name pos:line="8661" pos:column="47">Selection</name><op:operator pos:line="8661" pos:column="56">::</op:operator><name pos:line="8661" pos:column="58">selThin</name></name></expr>;</expr_stmt>
				<break pos:line="8662" pos:column="33">break;</break>
			</case><default pos:line="8663" pos:column="25">default:
				<expr_stmt><expr><call><name><name pos:line="8664" pos:column="33">sel</name><op:operator pos:line="8664" pos:column="36">.</op:operator><name pos:line="8664" pos:column="37">SetMoveExtends</name></name><argument_list pos:line="8664" pos:column="51">(<argument><expr><op:operator pos:line="8664" pos:column="52">!</op:operator><call><name><name pos:line="8664" pos:column="53">sel</name><op:operator pos:line="8664" pos:column="56">.</op:operator><name pos:line="8664" pos:column="57">MoveExtends</name></name><argument_list pos:line="8664" pos:column="68">()</argument_list></call> <op:operator pos:line="8664" pos:column="71">||</op:operator> <op:operator pos:line="8664" pos:column="74">(</op:operator><name><name pos:line="8664" pos:column="75">sel</name><op:operator pos:line="8664" pos:column="78">.</op:operator><name pos:line="8664" pos:column="79">selType</name></name> <op:operator pos:line="8664" pos:column="87">!=</op:operator> <name><name pos:line="8664" pos:column="90">Selection</name><op:operator pos:line="8664" pos:column="99">::</op:operator><name pos:line="8664" pos:column="101">selStream</name></name><op:operator pos:line="8664" pos:column="110">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="8665" pos:column="33">sel</name><op:operator pos:line="8665" pos:column="36">.</op:operator><name pos:line="8665" pos:column="37">selType</name></name> <op:operator pos:line="8665" pos:column="45">=</op:operator> <name><name pos:line="8665" pos:column="47">Selection</name><op:operator pos:line="8665" pos:column="56">::</op:operator><name pos:line="8665" pos:column="58">selStream</name></name></expr>;</expr_stmt>
			</default>}</block></switch>
			<expr_stmt><expr><call><name pos:line="8667" pos:column="25">InvalidateSelection</name><argument_list pos:line="8667" pos:column="44">(<argument><expr><call><name><name pos:line="8667" pos:column="45">sel</name><op:operator pos:line="8667" pos:column="48">.</op:operator><name pos:line="8667" pos:column="49">RangeMain</name></name><argument_list pos:line="8667" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="8667" pos:column="62">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
	</case><case pos:line="8669" pos:column="9">case <expr><name pos:line="8669" pos:column="14">SCI_GETSELECTIONMODE</name></expr>:
		<switch pos:line="8670" pos:column="17">switch <condition pos:line="8670" pos:column="24">(<expr><name><name pos:line="8670" pos:column="25">sel</name><op:operator pos:line="8670" pos:column="28">.</op:operator><name pos:line="8670" pos:column="29">selType</name></name></expr>)</condition> <block pos:line="8670" pos:column="38">{
		<case pos:line="8671" pos:column="17">case <expr><name><name pos:line="8671" pos:column="22">Selection</name><op:operator pos:line="8671" pos:column="31">::</op:operator><name pos:line="8671" pos:column="33">selStream</name></name></expr>:
			<return pos:line="8672" pos:column="25">return <expr><name pos:line="8672" pos:column="32">SC_SEL_STREAM</name></expr>;</return>
		</case><case pos:line="8673" pos:column="17">case <expr><name><name pos:line="8673" pos:column="22">Selection</name><op:operator pos:line="8673" pos:column="31">::</op:operator><name pos:line="8673" pos:column="33">selRectangle</name></name></expr>:
			<return pos:line="8674" pos:column="25">return <expr><name pos:line="8674" pos:column="32">SC_SEL_RECTANGLE</name></expr>;</return>
		</case><case pos:line="8675" pos:column="17">case <expr><name><name pos:line="8675" pos:column="22">Selection</name><op:operator pos:line="8675" pos:column="31">::</op:operator><name pos:line="8675" pos:column="33">selLines</name></name></expr>:
			<return pos:line="8676" pos:column="25">return <expr><name pos:line="8676" pos:column="32">SC_SEL_LINES</name></expr>;</return>
		</case><case pos:line="8677" pos:column="17">case <expr><name><name pos:line="8677" pos:column="22">Selection</name><op:operator pos:line="8677" pos:column="31">::</op:operator><name pos:line="8677" pos:column="33">selThin</name></name></expr>:
			<return pos:line="8678" pos:column="25">return <expr><name pos:line="8678" pos:column="32">SC_SEL_THIN</name></expr>;</return>
		</case><default pos:line="8679" pos:column="17">default:	<comment type="line" pos:line="8679" pos:column="33">// ?!</comment>
			<return pos:line="8680" pos:column="25">return <expr><name pos:line="8680" pos:column="32">SC_SEL_STREAM</name></expr>;</return>
		</default>}</block></switch>
	</case><case pos:line="8682" pos:column="9">case <expr><name pos:line="8682" pos:column="14">SCI_GETLINESELSTARTPOSITION</name></expr>:
	</case><case pos:line="8683" pos:column="9">case <expr><name pos:line="8683" pos:column="14">SCI_GETLINESELENDPOSITION</name></expr>: <block pos:line="8683" pos:column="41">{
			<decl_stmt><decl><type><name pos:line="8684" pos:column="25">SelectionSegment</name></type> <name pos:line="8684" pos:column="42">segmentLine</name><argument_list pos:line="8684" pos:column="53">(<argument><expr><call><name pos:line="8684" pos:column="54">SelectionPosition</name><argument_list pos:line="8684" pos:column="71">(<argument><expr><call><name><name pos:line="8684" pos:column="72">pdoc</name><op:operator pos:line="8684" pos:column="76">-&gt;</op:operator><name pos:line="8684" pos:column="78">LineStart</name></name><argument_list pos:line="8684" pos:column="87">(<argument><expr><name pos:line="8684" pos:column="88">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="8685" pos:column="33">SelectionPosition</name><argument_list pos:line="8685" pos:column="50">(<argument><expr><call><name><name pos:line="8685" pos:column="51">pdoc</name><op:operator pos:line="8685" pos:column="55">-&gt;</op:operator><name pos:line="8685" pos:column="57">LineEnd</name></name><argument_list pos:line="8685" pos:column="64">(<argument><expr><name pos:line="8685" pos:column="65">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			<for pos:line="8686" pos:column="25">for (<init><decl><type><name pos:line="8686" pos:column="30">size_t</name></type> <name pos:line="8686" pos:column="37">r</name><init pos:line="8686" pos:column="38">=<expr><lit:literal type="number" pos:line="8686" pos:column="39">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="8686" pos:column="42">r</name><op:operator pos:line="8686" pos:column="43">&lt;</op:operator><call><name><name pos:line="8686" pos:column="44">sel</name><op:operator pos:line="8686" pos:column="47">.</op:operator><name pos:line="8686" pos:column="48">Count</name></name><argument_list pos:line="8686" pos:column="53">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="8686" pos:column="57">r</name><op:operator pos:line="8686" pos:column="58">++</op:operator></expr></incr>) <block pos:line="8686" pos:column="62">{
				<decl_stmt><decl><type><name pos:line="8687" pos:column="33">SelectionSegment</name></type> <name pos:line="8687" pos:column="50">portion</name> <init pos:line="8687" pos:column="58">= <expr><call><name><name pos:line="8687" pos:column="60">sel</name><op:operator pos:line="8687" pos:column="63">.</op:operator><name pos:line="8687" pos:column="64">Range</name></name><argument_list pos:line="8687" pos:column="69">(<argument><expr><name pos:line="8687" pos:column="70">r</name></expr></argument>)</argument_list></call><op:operator pos:line="8687" pos:column="72">.</op:operator><call><name pos:line="8687" pos:column="73">Intersect</name><argument_list pos:line="8687" pos:column="82">(<argument><expr><name pos:line="8687" pos:column="83">segmentLine</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="8688" pos:column="33">if <condition pos:line="8688" pos:column="36">(<expr><call><name><name pos:line="8688" pos:column="37">portion</name><op:operator pos:line="8688" pos:column="44">.</op:operator><name pos:line="8688" pos:column="45">start</name><op:operator pos:line="8688" pos:column="50">.</op:operator><name pos:line="8688" pos:column="51">IsValid</name></name><argument_list pos:line="8688" pos:column="58">()</argument_list></call></expr>)</condition><then pos:line="8688" pos:column="61"> <block pos:line="8688" pos:column="62">{
					<return pos:line="8689" pos:column="41">return <expr><op:operator pos:line="8689" pos:column="48">(</op:operator><name pos:line="8689" pos:column="49">iMessage</name> <op:operator pos:line="8689" pos:column="58">==</op:operator> <name pos:line="8689" pos:column="61">SCI_GETLINESELSTARTPOSITION</name><op:operator pos:line="8689" pos:column="88">)</op:operator> <op:operator pos:line="8689" pos:column="90">?</op:operator> <call><name><name pos:line="8689" pos:column="92">portion</name><op:operator pos:line="8689" pos:column="99">.</op:operator><name pos:line="8689" pos:column="100">start</name><op:operator pos:line="8689" pos:column="105">.</op:operator><name pos:line="8689" pos:column="106">Position</name></name><argument_list pos:line="8689" pos:column="114">()</argument_list></call> <op:operator pos:line="8689" pos:column="117">:</op:operator> <call><name><name pos:line="8689" pos:column="119">portion</name><op:operator pos:line="8689" pos:column="126">.</op:operator><name pos:line="8689" pos:column="127">end</name><op:operator pos:line="8689" pos:column="130">.</op:operator><name pos:line="8689" pos:column="131">Position</name></name><argument_list pos:line="8689" pos:column="139">()</argument_list></call></expr>;</return>
				}</block></then></if>
			}</block></for>
			<return pos:line="8692" pos:column="25">return <expr><name pos:line="8692" pos:column="32">INVALID_POSITION</name></expr>;</return>
		}</block>

	</case><case pos:line="8695" pos:column="9">case <expr><name pos:line="8695" pos:column="14">SCI_SETOVERTYPE</name></expr>:
		<expr_stmt><expr><name pos:line="8696" pos:column="17">inOverstrike</name> <op:operator pos:line="8696" pos:column="30">=</op:operator> <name pos:line="8696" pos:column="32">wParam</name> <op:operator pos:line="8696" pos:column="39">!=</op:operator> <lit:literal type="number" pos:line="8696" pos:column="42">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="8697" pos:column="17">break;</break>

	</case><case pos:line="8699" pos:column="9">case <expr><name pos:line="8699" pos:column="14">SCI_GETOVERTYPE</name></expr>:
		<return pos:line="8700" pos:column="17">return <expr><name pos:line="8700" pos:column="24">inOverstrike</name> <op:operator pos:line="8700" pos:column="37">?</op:operator> <lit:literal type="number" pos:line="8700" pos:column="39">1</lit:literal> <op:operator pos:line="8700" pos:column="41">:</op:operator> <lit:literal type="number" pos:line="8700" pos:column="43">0</lit:literal></expr>;</return>

	</case><case pos:line="8702" pos:column="9">case <expr><name pos:line="8702" pos:column="14">SCI_SETFOCUS</name></expr>:
		<expr_stmt><expr><call><name pos:line="8703" pos:column="17">SetFocusState</name><argument_list pos:line="8703" pos:column="30">(<argument><expr><name pos:line="8703" pos:column="31">wParam</name> <op:operator pos:line="8703" pos:column="38">!=</op:operator> <lit:literal type="number" pos:line="8703" pos:column="41">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8704" pos:column="17">break;</break>

	</case><case pos:line="8706" pos:column="9">case <expr><name pos:line="8706" pos:column="14">SCI_GETFOCUS</name></expr>:
		<return pos:line="8707" pos:column="17">return <expr><name pos:line="8707" pos:column="24">hasFocus</name></expr>;</return>

	</case><case pos:line="8709" pos:column="9">case <expr><name pos:line="8709" pos:column="14">SCI_SETSTATUS</name></expr>:
		<expr_stmt><expr><name pos:line="8710" pos:column="17">errorStatus</name> <op:operator pos:line="8710" pos:column="29">=</op:operator> <name pos:line="8710" pos:column="31">wParam</name></expr>;</expr_stmt>
		<break pos:line="8711" pos:column="17">break;</break>

	</case><case pos:line="8713" pos:column="9">case <expr><name pos:line="8713" pos:column="14">SCI_GETSTATUS</name></expr>:
		<return pos:line="8714" pos:column="17">return <expr><name pos:line="8714" pos:column="24">errorStatus</name></expr>;</return>

	</case><case pos:line="8716" pos:column="9">case <expr><name pos:line="8716" pos:column="14">SCI_SETMOUSEDOWNCAPTURES</name></expr>:
		<expr_stmt><expr><name pos:line="8717" pos:column="17">mouseDownCaptures</name> <op:operator pos:line="8717" pos:column="35">=</op:operator> <name pos:line="8717" pos:column="37">wParam</name> <op:operator pos:line="8717" pos:column="44">!=</op:operator> <lit:literal type="number" pos:line="8717" pos:column="47">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="8718" pos:column="17">break;</break>

	</case><case pos:line="8720" pos:column="9">case <expr><name pos:line="8720" pos:column="14">SCI_GETMOUSEDOWNCAPTURES</name></expr>:
		<return pos:line="8721" pos:column="17">return <expr><name pos:line="8721" pos:column="24">mouseDownCaptures</name></expr>;</return>

	</case><case pos:line="8723" pos:column="9">case <expr><name pos:line="8723" pos:column="14">SCI_SETCURSOR</name></expr>:
		<expr_stmt><expr><name pos:line="8724" pos:column="17">cursorMode</name> <op:operator pos:line="8724" pos:column="28">=</op:operator> <name pos:line="8724" pos:column="30">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8725" pos:column="17">DisplayCursor</name><argument_list pos:line="8725" pos:column="30">(<argument><expr><name><name pos:line="8725" pos:column="31">Window</name><op:operator pos:line="8725" pos:column="37">::</op:operator><name pos:line="8725" pos:column="39">cursorText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8726" pos:column="17">break;</break>

	</case><case pos:line="8728" pos:column="9">case <expr><name pos:line="8728" pos:column="14">SCI_GETCURSOR</name></expr>:
		<return pos:line="8729" pos:column="17">return <expr><name pos:line="8729" pos:column="24">cursorMode</name></expr>;</return>

	</case><case pos:line="8731" pos:column="9">case <expr><name pos:line="8731" pos:column="14">SCI_SETCONTROLCHARSYMBOL</name></expr>:
		<expr_stmt><expr><name pos:line="8732" pos:column="17">controlCharSymbol</name> <op:operator pos:line="8732" pos:column="35">=</op:operator> <name pos:line="8732" pos:column="37">wParam</name></expr>;</expr_stmt>
		<break pos:line="8733" pos:column="17">break;</break>

	</case><case pos:line="8735" pos:column="9">case <expr><name pos:line="8735" pos:column="14">SCI_GETCONTROLCHARSYMBOL</name></expr>:
		<return pos:line="8736" pos:column="17">return <expr><name pos:line="8736" pos:column="24">controlCharSymbol</name></expr>;</return>

	</case><case pos:line="8738" pos:column="9">case <expr><name pos:line="8738" pos:column="14">SCI_STARTRECORD</name></expr>:
		<expr_stmt><expr><name pos:line="8739" pos:column="17">recordingMacro</name> <op:operator pos:line="8739" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="8739" pos:column="34">true</lit:literal></expr>;</expr_stmt>
		<return pos:line="8740" pos:column="17">return <expr><lit:literal type="number" pos:line="8740" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="8742" pos:column="9">case <expr><name pos:line="8742" pos:column="14">SCI_STOPRECORD</name></expr>:
		<expr_stmt><expr><name pos:line="8743" pos:column="17">recordingMacro</name> <op:operator pos:line="8743" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="8743" pos:column="34">false</lit:literal></expr>;</expr_stmt>
		<return pos:line="8744" pos:column="17">return <expr><lit:literal type="number" pos:line="8744" pos:column="24">0</lit:literal></expr>;</return>

	</case><case pos:line="8746" pos:column="9">case <expr><name pos:line="8746" pos:column="14">SCI_MOVECARETINSIDEVIEW</name></expr>:
		<expr_stmt><expr><call><name pos:line="8747" pos:column="17">MoveCaretInsideView</name><argument_list pos:line="8747" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8748" pos:column="17">break;</break>

	</case><case pos:line="8750" pos:column="9">case <expr><name pos:line="8750" pos:column="14">SCI_SETFOLDMARGINCOLOUR</name></expr>:
		<expr_stmt><expr><name><name pos:line="8751" pos:column="17">vs</name><op:operator pos:line="8751" pos:column="19">.</op:operator><name pos:line="8751" pos:column="20">foldmarginColourSet</name></name> <op:operator pos:line="8751" pos:column="40">=</op:operator> <name pos:line="8751" pos:column="42">wParam</name> <op:operator pos:line="8751" pos:column="49">!=</op:operator> <lit:literal type="number" pos:line="8751" pos:column="52">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8752" pos:column="17">vs</name><op:operator pos:line="8752" pos:column="19">.</op:operator><name pos:line="8752" pos:column="20">foldmarginColour</name><op:operator pos:line="8752" pos:column="36">.</op:operator><name pos:line="8752" pos:column="37">desired</name></name> <op:operator pos:line="8752" pos:column="45">=</op:operator> <call><name pos:line="8752" pos:column="47">ColourDesired</name><argument_list pos:line="8752" pos:column="60">(<argument><expr><name pos:line="8752" pos:column="61">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8753" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8753" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8754" pos:column="17">break;</break>

	</case><case pos:line="8756" pos:column="9">case <expr><name pos:line="8756" pos:column="14">SCI_SETFOLDMARGINHICOLOUR</name></expr>:
		<expr_stmt><expr><name><name pos:line="8757" pos:column="17">vs</name><op:operator pos:line="8757" pos:column="19">.</op:operator><name pos:line="8757" pos:column="20">foldmarginHighlightColourSet</name></name> <op:operator pos:line="8757" pos:column="49">=</op:operator> <name pos:line="8757" pos:column="51">wParam</name> <op:operator pos:line="8757" pos:column="58">!=</op:operator> <lit:literal type="number" pos:line="8757" pos:column="61">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8758" pos:column="17">vs</name><op:operator pos:line="8758" pos:column="19">.</op:operator><name pos:line="8758" pos:column="20">foldmarginHighlightColour</name><op:operator pos:line="8758" pos:column="45">.</op:operator><name pos:line="8758" pos:column="46">desired</name></name> <op:operator pos:line="8758" pos:column="54">=</op:operator> <call><name pos:line="8758" pos:column="56">ColourDesired</name><argument_list pos:line="8758" pos:column="69">(<argument><expr><name pos:line="8758" pos:column="70">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8759" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8759" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8760" pos:column="17">break;</break>

	</case><case pos:line="8762" pos:column="9">case <expr><name pos:line="8762" pos:column="14">SCI_SETHOTSPOTACTIVEFORE</name></expr>:
		<expr_stmt><expr><name><name pos:line="8763" pos:column="17">vs</name><op:operator pos:line="8763" pos:column="19">.</op:operator><name pos:line="8763" pos:column="20">hotspotForegroundSet</name></name> <op:operator pos:line="8763" pos:column="41">=</op:operator> <name pos:line="8763" pos:column="43">wParam</name> <op:operator pos:line="8763" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="8763" pos:column="53">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8764" pos:column="17">vs</name><op:operator pos:line="8764" pos:column="19">.</op:operator><name pos:line="8764" pos:column="20">hotspotForeground</name><op:operator pos:line="8764" pos:column="37">.</op:operator><name pos:line="8764" pos:column="38">desired</name></name> <op:operator pos:line="8764" pos:column="46">=</op:operator> <call><name pos:line="8764" pos:column="48">ColourDesired</name><argument_list pos:line="8764" pos:column="61">(<argument><expr><name pos:line="8764" pos:column="62">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8765" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8765" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8766" pos:column="17">break;</break>

	</case><case pos:line="8768" pos:column="9">case <expr><name pos:line="8768" pos:column="14">SCI_GETHOTSPOTACTIVEFORE</name></expr>:
		<return pos:line="8769" pos:column="17">return <expr><call><name><name pos:line="8769" pos:column="24">vs</name><op:operator pos:line="8769" pos:column="26">.</op:operator><name pos:line="8769" pos:column="27">hotspotForeground</name><op:operator pos:line="8769" pos:column="44">.</op:operator><name pos:line="8769" pos:column="45">desired</name><op:operator pos:line="8769" pos:column="52">.</op:operator><name pos:line="8769" pos:column="53">AsLong</name></name><argument_list pos:line="8769" pos:column="59">()</argument_list></call></expr>;</return>

	</case><case pos:line="8771" pos:column="9">case <expr><name pos:line="8771" pos:column="14">SCI_SETHOTSPOTACTIVEBACK</name></expr>:
		<expr_stmt><expr><name><name pos:line="8772" pos:column="17">vs</name><op:operator pos:line="8772" pos:column="19">.</op:operator><name pos:line="8772" pos:column="20">hotspotBackgroundSet</name></name> <op:operator pos:line="8772" pos:column="41">=</op:operator> <name pos:line="8772" pos:column="43">wParam</name> <op:operator pos:line="8772" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="8772" pos:column="53">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="8773" pos:column="17">vs</name><op:operator pos:line="8773" pos:column="19">.</op:operator><name pos:line="8773" pos:column="20">hotspotBackground</name><op:operator pos:line="8773" pos:column="37">.</op:operator><name pos:line="8773" pos:column="38">desired</name></name> <op:operator pos:line="8773" pos:column="46">=</op:operator> <call><name pos:line="8773" pos:column="48">ColourDesired</name><argument_list pos:line="8773" pos:column="61">(<argument><expr><name pos:line="8773" pos:column="62">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8774" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8774" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8775" pos:column="17">break;</break>

	</case><case pos:line="8777" pos:column="9">case <expr><name pos:line="8777" pos:column="14">SCI_GETHOTSPOTACTIVEBACK</name></expr>:
		<return pos:line="8778" pos:column="17">return <expr><call><name><name pos:line="8778" pos:column="24">vs</name><op:operator pos:line="8778" pos:column="26">.</op:operator><name pos:line="8778" pos:column="27">hotspotBackground</name><op:operator pos:line="8778" pos:column="44">.</op:operator><name pos:line="8778" pos:column="45">desired</name><op:operator pos:line="8778" pos:column="52">.</op:operator><name pos:line="8778" pos:column="53">AsLong</name></name><argument_list pos:line="8778" pos:column="59">()</argument_list></call></expr>;</return>

	</case><case pos:line="8780" pos:column="9">case <expr><name pos:line="8780" pos:column="14">SCI_SETHOTSPOTACTIVEUNDERLINE</name></expr>:
		<expr_stmt><expr><name><name pos:line="8781" pos:column="17">vs</name><op:operator pos:line="8781" pos:column="19">.</op:operator><name pos:line="8781" pos:column="20">hotspotUnderline</name></name> <op:operator pos:line="8781" pos:column="37">=</op:operator> <name pos:line="8781" pos:column="39">wParam</name> <op:operator pos:line="8781" pos:column="46">!=</op:operator> <lit:literal type="number" pos:line="8781" pos:column="49">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8782" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8782" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8783" pos:column="17">break;</break>

	</case><case pos:line="8785" pos:column="9">case <expr><name pos:line="8785" pos:column="14">SCI_GETHOTSPOTACTIVEUNDERLINE</name></expr>:
		<return pos:line="8786" pos:column="17">return <expr><name><name pos:line="8786" pos:column="24">vs</name><op:operator pos:line="8786" pos:column="26">.</op:operator><name pos:line="8786" pos:column="27">hotspotUnderline</name></name> <op:operator pos:line="8786" pos:column="44">?</op:operator> <lit:literal type="number" pos:line="8786" pos:column="46">1</lit:literal> <op:operator pos:line="8786" pos:column="48">:</op:operator> <lit:literal type="number" pos:line="8786" pos:column="50">0</lit:literal></expr>;</return>

	</case><case pos:line="8788" pos:column="9">case <expr><name pos:line="8788" pos:column="14">SCI_SETHOTSPOTSINGLELINE</name></expr>:
		<expr_stmt><expr><name><name pos:line="8789" pos:column="17">vs</name><op:operator pos:line="8789" pos:column="19">.</op:operator><name pos:line="8789" pos:column="20">hotspotSingleLine</name></name> <op:operator pos:line="8789" pos:column="38">=</op:operator> <name pos:line="8789" pos:column="40">wParam</name> <op:operator pos:line="8789" pos:column="47">!=</op:operator> <lit:literal type="number" pos:line="8789" pos:column="50">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8790" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8790" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8791" pos:column="17">break;</break>

	</case><case pos:line="8793" pos:column="9">case <expr><name pos:line="8793" pos:column="14">SCI_GETHOTSPOTSINGLELINE</name></expr>:
		<return pos:line="8794" pos:column="17">return <expr><name><name pos:line="8794" pos:column="24">vs</name><op:operator pos:line="8794" pos:column="26">.</op:operator><name pos:line="8794" pos:column="27">hotspotSingleLine</name></name> <op:operator pos:line="8794" pos:column="45">?</op:operator> <lit:literal type="number" pos:line="8794" pos:column="47">1</lit:literal> <op:operator pos:line="8794" pos:column="49">:</op:operator> <lit:literal type="number" pos:line="8794" pos:column="51">0</lit:literal></expr>;</return>

	</case><case pos:line="8796" pos:column="9">case <expr><name pos:line="8796" pos:column="14">SCI_SETPASTECONVERTENDINGS</name></expr>:
		<expr_stmt><expr><name pos:line="8797" pos:column="17">convertPastes</name> <op:operator pos:line="8797" pos:column="31">=</op:operator> <name pos:line="8797" pos:column="33">wParam</name> <op:operator pos:line="8797" pos:column="40">!=</op:operator> <lit:literal type="number" pos:line="8797" pos:column="43">0</lit:literal></expr>;</expr_stmt>
		<break pos:line="8798" pos:column="17">break;</break>

	</case><case pos:line="8800" pos:column="9">case <expr><name pos:line="8800" pos:column="14">SCI_GETPASTECONVERTENDINGS</name></expr>:
		<return pos:line="8801" pos:column="17">return <expr><name pos:line="8801" pos:column="24">convertPastes</name> <op:operator pos:line="8801" pos:column="38">?</op:operator> <lit:literal type="number" pos:line="8801" pos:column="40">1</lit:literal> <op:operator pos:line="8801" pos:column="42">:</op:operator> <lit:literal type="number" pos:line="8801" pos:column="44">0</lit:literal></expr>;</return>

	</case><case pos:line="8803" pos:column="9">case <expr><name pos:line="8803" pos:column="14">SCI_GETCHARACTERPOINTER</name></expr>:
		<return pos:line="8804" pos:column="17">return <expr><call><name><name pos:line="8804" pos:column="24">reinterpret_cast</name><argument_list pos:line="8804" pos:column="40">&lt;<argument><expr><name pos:line="8804" pos:column="41">sptr_t</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="8804" pos:column="48">(<argument><expr><call><name><name pos:line="8804" pos:column="49">pdoc</name><op:operator pos:line="8804" pos:column="53">-&gt;</op:operator><name pos:line="8804" pos:column="55">BufferPointer</name></name><argument_list pos:line="8804" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8806" pos:column="9">case <expr><name pos:line="8806" pos:column="14">SCI_SETEXTRAASCENT</name></expr>:
		<expr_stmt><expr><name><name pos:line="8807" pos:column="17">vs</name><op:operator pos:line="8807" pos:column="19">.</op:operator><name pos:line="8807" pos:column="20">extraAscent</name></name> <op:operator pos:line="8807" pos:column="32">=</op:operator> <name pos:line="8807" pos:column="34">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8808" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8808" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8809" pos:column="17">break;</break>

	</case><case pos:line="8811" pos:column="9">case <expr><name pos:line="8811" pos:column="14">SCI_GETEXTRAASCENT</name></expr>:
		<return pos:line="8812" pos:column="17">return <expr><name><name pos:line="8812" pos:column="24">vs</name><op:operator pos:line="8812" pos:column="26">.</op:operator><name pos:line="8812" pos:column="27">extraAscent</name></name></expr>;</return>

	</case><case pos:line="8814" pos:column="9">case <expr><name pos:line="8814" pos:column="14">SCI_SETEXTRADESCENT</name></expr>:
		<expr_stmt><expr><name><name pos:line="8815" pos:column="17">vs</name><op:operator pos:line="8815" pos:column="19">.</op:operator><name pos:line="8815" pos:column="20">extraDescent</name></name> <op:operator pos:line="8815" pos:column="33">=</op:operator> <name pos:line="8815" pos:column="35">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8816" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8816" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8817" pos:column="17">break;</break>

	</case><case pos:line="8819" pos:column="9">case <expr><name pos:line="8819" pos:column="14">SCI_GETEXTRADESCENT</name></expr>:
		<return pos:line="8820" pos:column="17">return <expr><name><name pos:line="8820" pos:column="24">vs</name><op:operator pos:line="8820" pos:column="26">.</op:operator><name pos:line="8820" pos:column="27">extraDescent</name></name></expr>;</return>

	</case><case pos:line="8822" pos:column="9">case <expr><name pos:line="8822" pos:column="14">SCI_MARGINSETSTYLEOFFSET</name></expr>:
		<expr_stmt><expr><name><name pos:line="8823" pos:column="17">vs</name><op:operator pos:line="8823" pos:column="19">.</op:operator><name pos:line="8823" pos:column="20">marginStyleOffset</name></name> <op:operator pos:line="8823" pos:column="38">=</op:operator> <name pos:line="8823" pos:column="40">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8824" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8824" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8825" pos:column="17">break;</break>

	</case><case pos:line="8827" pos:column="9">case <expr><name pos:line="8827" pos:column="14">SCI_MARGINGETSTYLEOFFSET</name></expr>:
		<return pos:line="8828" pos:column="17">return <expr><name><name pos:line="8828" pos:column="24">vs</name><op:operator pos:line="8828" pos:column="26">.</op:operator><name pos:line="8828" pos:column="27">marginStyleOffset</name></name></expr>;</return>

	</case><case pos:line="8830" pos:column="9">case <expr><name pos:line="8830" pos:column="14">SCI_SETMARGINOPTIONS</name></expr>:
		<expr_stmt><expr><name pos:line="8831" pos:column="17">marginOptions</name> <op:operator pos:line="8831" pos:column="31">=</op:operator> <name pos:line="8831" pos:column="33">wParam</name></expr>;</expr_stmt>
		<break pos:line="8832" pos:column="17">break;</break>

	</case><case pos:line="8834" pos:column="9">case <expr><name pos:line="8834" pos:column="14">SCI_GETMARGINOPTIONS</name></expr>:
		<return pos:line="8835" pos:column="17">return <expr><name pos:line="8835" pos:column="24">marginOptions</name></expr>;</return>

	</case><case pos:line="8837" pos:column="9">case <expr><name pos:line="8837" pos:column="14">SCI_MARGINSETTEXT</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8838" pos:column="17">pdoc</name><op:operator pos:line="8838" pos:column="21">-&gt;</op:operator><name pos:line="8838" pos:column="23">MarginSetText</name></name><argument_list pos:line="8838" pos:column="36">(<argument><expr><name pos:line="8838" pos:column="37">wParam</name></expr></argument>, <argument><expr><call><name pos:line="8838" pos:column="45">CharPtrFromSPtr</name><argument_list pos:line="8838" pos:column="60">(<argument><expr><name pos:line="8838" pos:column="61">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8839" pos:column="17">break;</break>

	</case><case pos:line="8841" pos:column="9">case <expr><name pos:line="8841" pos:column="14">SCI_MARGINGETTEXT</name></expr>: <block pos:line="8841" pos:column="33">{
			<decl_stmt><decl><type><specifier pos:line="8842" pos:column="25">const</specifier> <name pos:line="8842" pos:column="31">StyledText</name></type> <name pos:line="8842" pos:column="42">st</name> <init pos:line="8842" pos:column="45">= <expr><call><name><name pos:line="8842" pos:column="47">pdoc</name><op:operator pos:line="8842" pos:column="51">-&gt;</op:operator><name pos:line="8842" pos:column="53">MarginStyledText</name></name><argument_list pos:line="8842" pos:column="69">(<argument><expr><name pos:line="8842" pos:column="70">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="8843" pos:column="25">if <condition pos:line="8843" pos:column="28">(<expr><name pos:line="8843" pos:column="29">lParam</name></expr>)</condition><then pos:line="8843" pos:column="36"> <block pos:line="8843" pos:column="37">{
				<if pos:line="8844" pos:column="33">if <condition pos:line="8844" pos:column="36">(<expr><name><name pos:line="8844" pos:column="37">st</name><op:operator pos:line="8844" pos:column="39">.</op:operator><name pos:line="8844" pos:column="40">text</name></name></expr>)</condition><then pos:line="8844" pos:column="45">
					<expr_stmt><expr><call><name pos:line="8845" pos:column="41">memcpy</name><argument_list pos:line="8845" pos:column="47">(<argument><expr><call><name pos:line="8845" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="8845" pos:column="63">(<argument><expr><name pos:line="8845" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="8845" pos:column="73">st</name><op:operator pos:line="8845" pos:column="75">.</op:operator><name pos:line="8845" pos:column="76">text</name></name></expr></argument>, <argument><expr><name><name pos:line="8845" pos:column="82">st</name><op:operator pos:line="8845" pos:column="84">.</op:operator><name pos:line="8845" pos:column="85">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="8846" pos:column="33">else
					<expr_stmt><expr><call><name pos:line="8847" pos:column="41">strcpy</name><argument_list pos:line="8847" pos:column="47">(<argument><expr><call><name pos:line="8847" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="8847" pos:column="63">(<argument><expr><name pos:line="8847" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="8847" pos:column="73">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then></if>
			<return pos:line="8849" pos:column="25">return <expr><name><name pos:line="8849" pos:column="32">st</name><op:operator pos:line="8849" pos:column="34">.</op:operator><name pos:line="8849" pos:column="35">length</name></name></expr>;</return>
		}</block>

	</case><case pos:line="8852" pos:column="9">case <expr><name pos:line="8852" pos:column="14">SCI_MARGINSETSTYLE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8853" pos:column="17">pdoc</name><op:operator pos:line="8853" pos:column="21">-&gt;</op:operator><name pos:line="8853" pos:column="23">MarginSetStyle</name></name><argument_list pos:line="8853" pos:column="37">(<argument><expr><name pos:line="8853" pos:column="38">wParam</name></expr></argument>, <argument><expr><name pos:line="8853" pos:column="46">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8854" pos:column="17">break;</break>

	</case><case pos:line="8856" pos:column="9">case <expr><name pos:line="8856" pos:column="14">SCI_MARGINGETSTYLE</name></expr>: <block pos:line="8856" pos:column="34">{
			<decl_stmt><decl><type><specifier pos:line="8857" pos:column="25">const</specifier> <name pos:line="8857" pos:column="31">StyledText</name></type> <name pos:line="8857" pos:column="42">st</name> <init pos:line="8857" pos:column="45">= <expr><call><name><name pos:line="8857" pos:column="47">pdoc</name><op:operator pos:line="8857" pos:column="51">-&gt;</op:operator><name pos:line="8857" pos:column="53">MarginStyledText</name></name><argument_list pos:line="8857" pos:column="69">(<argument><expr><name pos:line="8857" pos:column="70">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="8858" pos:column="25">return <expr><name><name pos:line="8858" pos:column="32">st</name><op:operator pos:line="8858" pos:column="34">.</op:operator><name pos:line="8858" pos:column="35">style</name></name></expr>;</return>
		}</block>

	</case><case pos:line="8861" pos:column="9">case <expr><name pos:line="8861" pos:column="14">SCI_MARGINSETSTYLES</name></expr>:
		<macro><name pos:line="8862" pos:column="17">pdoc</name></macro><expr_stmt><expr><op:operator pos:line="8862" pos:column="21">-&gt;</op:operator><macro><name pos:line="8862" pos:column="23">MarginSetStyles</name><argument_list pos:line="8862" pos:column="38">(<argument pos:line="8862" pos:column="39">wParam</argument>, <argument pos:line="8862" pos:column="47">reinterpret_cast&lt;const unsigned char *&gt;(lParam)</argument>)</argument_list></macro></expr>;</expr_stmt>
		<break pos:line="8863" pos:column="17">break;</break>

	</case><case pos:line="8865" pos:column="9">case <expr><name pos:line="8865" pos:column="14">SCI_MARGINGETSTYLES</name></expr>: <block pos:line="8865" pos:column="35">{
			<decl_stmt><decl><type><specifier pos:line="8866" pos:column="25">const</specifier> <name pos:line="8866" pos:column="31">StyledText</name></type> <name pos:line="8866" pos:column="42">st</name> <init pos:line="8866" pos:column="45">= <expr><call><name><name pos:line="8866" pos:column="47">pdoc</name><op:operator pos:line="8866" pos:column="51">-&gt;</op:operator><name pos:line="8866" pos:column="53">MarginStyledText</name></name><argument_list pos:line="8866" pos:column="69">(<argument><expr><name pos:line="8866" pos:column="70">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="8867" pos:column="25">if <condition pos:line="8867" pos:column="28">(<expr><name pos:line="8867" pos:column="29">lParam</name></expr>)</condition><then pos:line="8867" pos:column="36"> <block pos:line="8867" pos:column="37">{
				<if pos:line="8868" pos:column="33">if <condition pos:line="8868" pos:column="36">(<expr><name><name pos:line="8868" pos:column="37">st</name><op:operator pos:line="8868" pos:column="39">.</op:operator><name pos:line="8868" pos:column="40">styles</name></name></expr>)</condition><then pos:line="8868" pos:column="47">
					<expr_stmt><expr><call><name pos:line="8869" pos:column="41">memcpy</name><argument_list pos:line="8869" pos:column="47">(<argument><expr><call><name pos:line="8869" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="8869" pos:column="63">(<argument><expr><name pos:line="8869" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="8869" pos:column="73">st</name><op:operator pos:line="8869" pos:column="75">.</op:operator><name pos:line="8869" pos:column="76">styles</name></name></expr></argument>, <argument><expr><name><name pos:line="8869" pos:column="84">st</name><op:operator pos:line="8869" pos:column="86">.</op:operator><name pos:line="8869" pos:column="87">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="8870" pos:column="33">else
					<expr_stmt><expr><call><name pos:line="8871" pos:column="41">strcpy</name><argument_list pos:line="8871" pos:column="47">(<argument><expr><call><name pos:line="8871" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="8871" pos:column="63">(<argument><expr><name pos:line="8871" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="8871" pos:column="73">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then></if>
			<return pos:line="8873" pos:column="25">return <expr><name><name pos:line="8873" pos:column="32">st</name><op:operator pos:line="8873" pos:column="34">.</op:operator><name pos:line="8873" pos:column="35">styles</name></name> <op:operator pos:line="8873" pos:column="42">?</op:operator> <name><name pos:line="8873" pos:column="44">st</name><op:operator pos:line="8873" pos:column="46">.</op:operator><name pos:line="8873" pos:column="47">length</name></name> <op:operator pos:line="8873" pos:column="54">:</op:operator> <lit:literal type="number" pos:line="8873" pos:column="56">0</lit:literal></expr>;</return>
		}</block>

	</case><case pos:line="8876" pos:column="9">case <expr><name pos:line="8876" pos:column="14">SCI_MARGINTEXTCLEARALL</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8877" pos:column="17">pdoc</name><op:operator pos:line="8877" pos:column="21">-&gt;</op:operator><name pos:line="8877" pos:column="23">MarginClearAll</name></name><argument_list pos:line="8877" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8878" pos:column="17">break;</break>

	</case><case pos:line="8880" pos:column="9">case <expr><name pos:line="8880" pos:column="14">SCI_ANNOTATIONSETTEXT</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8881" pos:column="17">pdoc</name><op:operator pos:line="8881" pos:column="21">-&gt;</op:operator><name pos:line="8881" pos:column="23">AnnotationSetText</name></name><argument_list pos:line="8881" pos:column="40">(<argument><expr><name pos:line="8881" pos:column="41">wParam</name></expr></argument>, <argument><expr><call><name pos:line="8881" pos:column="49">CharPtrFromSPtr</name><argument_list pos:line="8881" pos:column="64">(<argument><expr><name pos:line="8881" pos:column="65">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8882" pos:column="17">break;</break>

	</case><case pos:line="8884" pos:column="9">case <expr><name pos:line="8884" pos:column="14">SCI_ANNOTATIONGETTEXT</name></expr>: <block pos:line="8884" pos:column="37">{
			<decl_stmt><decl><type><specifier pos:line="8885" pos:column="25">const</specifier> <name pos:line="8885" pos:column="31">StyledText</name></type> <name pos:line="8885" pos:column="42">st</name> <init pos:line="8885" pos:column="45">= <expr><call><name><name pos:line="8885" pos:column="47">pdoc</name><op:operator pos:line="8885" pos:column="51">-&gt;</op:operator><name pos:line="8885" pos:column="53">AnnotationStyledText</name></name><argument_list pos:line="8885" pos:column="73">(<argument><expr><name pos:line="8885" pos:column="74">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="8886" pos:column="25">if <condition pos:line="8886" pos:column="28">(<expr><name pos:line="8886" pos:column="29">lParam</name></expr>)</condition><then pos:line="8886" pos:column="36"> <block pos:line="8886" pos:column="37">{
				<if pos:line="8887" pos:column="33">if <condition pos:line="8887" pos:column="36">(<expr><name><name pos:line="8887" pos:column="37">st</name><op:operator pos:line="8887" pos:column="39">.</op:operator><name pos:line="8887" pos:column="40">text</name></name></expr>)</condition><then pos:line="8887" pos:column="45">
					<expr_stmt><expr><call><name pos:line="8888" pos:column="41">memcpy</name><argument_list pos:line="8888" pos:column="47">(<argument><expr><call><name pos:line="8888" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="8888" pos:column="63">(<argument><expr><name pos:line="8888" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="8888" pos:column="73">st</name><op:operator pos:line="8888" pos:column="75">.</op:operator><name pos:line="8888" pos:column="76">text</name></name></expr></argument>, <argument><expr><name><name pos:line="8888" pos:column="82">st</name><op:operator pos:line="8888" pos:column="84">.</op:operator><name pos:line="8888" pos:column="85">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="8889" pos:column="33">else
					<expr_stmt><expr><call><name pos:line="8890" pos:column="41">strcpy</name><argument_list pos:line="8890" pos:column="47">(<argument><expr><call><name pos:line="8890" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="8890" pos:column="63">(<argument><expr><name pos:line="8890" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="8890" pos:column="73">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then></if>
			<return pos:line="8892" pos:column="25">return <expr><name><name pos:line="8892" pos:column="32">st</name><op:operator pos:line="8892" pos:column="34">.</op:operator><name pos:line="8892" pos:column="35">length</name></name></expr>;</return>
		}</block>

	</case><case pos:line="8895" pos:column="9">case <expr><name pos:line="8895" pos:column="14">SCI_ANNOTATIONGETSTYLE</name></expr>: <block pos:line="8895" pos:column="38">{
			<decl_stmt><decl><type><specifier pos:line="8896" pos:column="25">const</specifier> <name pos:line="8896" pos:column="31">StyledText</name></type> <name pos:line="8896" pos:column="42">st</name> <init pos:line="8896" pos:column="45">= <expr><call><name><name pos:line="8896" pos:column="47">pdoc</name><op:operator pos:line="8896" pos:column="51">-&gt;</op:operator><name pos:line="8896" pos:column="53">AnnotationStyledText</name></name><argument_list pos:line="8896" pos:column="73">(<argument><expr><name pos:line="8896" pos:column="74">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<return pos:line="8897" pos:column="25">return <expr><name><name pos:line="8897" pos:column="32">st</name><op:operator pos:line="8897" pos:column="34">.</op:operator><name pos:line="8897" pos:column="35">style</name></name></expr>;</return>
		}</block>

	</case><case pos:line="8900" pos:column="9">case <expr><name pos:line="8900" pos:column="14">SCI_ANNOTATIONSETSTYLE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8901" pos:column="17">pdoc</name><op:operator pos:line="8901" pos:column="21">-&gt;</op:operator><name pos:line="8901" pos:column="23">AnnotationSetStyle</name></name><argument_list pos:line="8901" pos:column="41">(<argument><expr><name pos:line="8901" pos:column="42">wParam</name></expr></argument>, <argument><expr><name pos:line="8901" pos:column="50">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8902" pos:column="17">break;</break>

	</case><case pos:line="8904" pos:column="9">case <expr><name pos:line="8904" pos:column="14">SCI_ANNOTATIONSETSTYLES</name></expr>:
		<macro><name pos:line="8905" pos:column="17">pdoc</name></macro><expr_stmt><expr><op:operator pos:line="8905" pos:column="21">-&gt;</op:operator><macro><name pos:line="8905" pos:column="23">AnnotationSetStyles</name><argument_list pos:line="8905" pos:column="42">(<argument pos:line="8905" pos:column="43">wParam</argument>, <argument pos:line="8905" pos:column="51">reinterpret_cast&lt;const unsigned char *&gt;(lParam)</argument>)</argument_list></macro></expr>;</expr_stmt>
		<break pos:line="8906" pos:column="17">break;</break>

	</case><case pos:line="8908" pos:column="9">case <expr><name pos:line="8908" pos:column="14">SCI_ANNOTATIONGETSTYLES</name></expr>: <block pos:line="8908" pos:column="39">{
			<decl_stmt><decl><type><specifier pos:line="8909" pos:column="25">const</specifier> <name pos:line="8909" pos:column="31">StyledText</name></type> <name pos:line="8909" pos:column="42">st</name> <init pos:line="8909" pos:column="45">= <expr><call><name><name pos:line="8909" pos:column="47">pdoc</name><op:operator pos:line="8909" pos:column="51">-&gt;</op:operator><name pos:line="8909" pos:column="53">AnnotationStyledText</name></name><argument_list pos:line="8909" pos:column="73">(<argument><expr><name pos:line="8909" pos:column="74">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="8910" pos:column="25">if <condition pos:line="8910" pos:column="28">(<expr><name pos:line="8910" pos:column="29">lParam</name></expr>)</condition><then pos:line="8910" pos:column="36"> <block pos:line="8910" pos:column="37">{
				<if pos:line="8911" pos:column="33">if <condition pos:line="8911" pos:column="36">(<expr><name><name pos:line="8911" pos:column="37">st</name><op:operator pos:line="8911" pos:column="39">.</op:operator><name pos:line="8911" pos:column="40">styles</name></name></expr>)</condition><then pos:line="8911" pos:column="47">
					<expr_stmt><expr><call><name pos:line="8912" pos:column="41">memcpy</name><argument_list pos:line="8912" pos:column="47">(<argument><expr><call><name pos:line="8912" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="8912" pos:column="63">(<argument><expr><name pos:line="8912" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="8912" pos:column="73">st</name><op:operator pos:line="8912" pos:column="75">.</op:operator><name pos:line="8912" pos:column="76">styles</name></name></expr></argument>, <argument><expr><name><name pos:line="8912" pos:column="84">st</name><op:operator pos:line="8912" pos:column="86">.</op:operator><name pos:line="8912" pos:column="87">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="8913" pos:column="33">else
					<expr_stmt><expr><call><name pos:line="8914" pos:column="41">strcpy</name><argument_list pos:line="8914" pos:column="47">(<argument><expr><call><name pos:line="8914" pos:column="48">CharPtrFromSPtr</name><argument_list pos:line="8914" pos:column="63">(<argument><expr><name pos:line="8914" pos:column="64">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="8914" pos:column="73">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			}</block></then></if>
			<return pos:line="8916" pos:column="25">return <expr><name><name pos:line="8916" pos:column="32">st</name><op:operator pos:line="8916" pos:column="34">.</op:operator><name pos:line="8916" pos:column="35">styles</name></name> <op:operator pos:line="8916" pos:column="42">?</op:operator> <name><name pos:line="8916" pos:column="44">st</name><op:operator pos:line="8916" pos:column="46">.</op:operator><name pos:line="8916" pos:column="47">length</name></name> <op:operator pos:line="8916" pos:column="54">:</op:operator> <lit:literal type="number" pos:line="8916" pos:column="56">0</lit:literal></expr>;</return>
		}</block>

	</case><case pos:line="8919" pos:column="9">case <expr><name pos:line="8919" pos:column="14">SCI_ANNOTATIONGETLINES</name></expr>:
		<return pos:line="8920" pos:column="17">return <expr><call><name><name pos:line="8920" pos:column="24">pdoc</name><op:operator pos:line="8920" pos:column="28">-&gt;</op:operator><name pos:line="8920" pos:column="30">AnnotationLines</name></name><argument_list pos:line="8920" pos:column="45">(<argument><expr><name pos:line="8920" pos:column="46">wParam</name></expr></argument>)</argument_list></call></expr>;</return>

	</case><case pos:line="8922" pos:column="9">case <expr><name pos:line="8922" pos:column="14">SCI_ANNOTATIONCLEARALL</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8923" pos:column="17">pdoc</name><op:operator pos:line="8923" pos:column="21">-&gt;</op:operator><name pos:line="8923" pos:column="23">AnnotationClearAll</name></name><argument_list pos:line="8923" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8924" pos:column="17">break;</break>

	</case><case pos:line="8926" pos:column="9">case <expr><name pos:line="8926" pos:column="14">SCI_ANNOTATIONSETVISIBLE</name></expr>:
		<expr_stmt><expr><call><name pos:line="8927" pos:column="17">SetAnnotationVisible</name><argument_list pos:line="8927" pos:column="37">(<argument><expr><name pos:line="8927" pos:column="38">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8928" pos:column="17">break;</break>

	</case><case pos:line="8930" pos:column="9">case <expr><name pos:line="8930" pos:column="14">SCI_ANNOTATIONGETVISIBLE</name></expr>:
		<return pos:line="8931" pos:column="17">return <expr><name><name pos:line="8931" pos:column="24">vs</name><op:operator pos:line="8931" pos:column="26">.</op:operator><name pos:line="8931" pos:column="27">annotationVisible</name></name></expr>;</return>

	</case><case pos:line="8933" pos:column="9">case <expr><name pos:line="8933" pos:column="14">SCI_ANNOTATIONSETSTYLEOFFSET</name></expr>:
		<expr_stmt><expr><name><name pos:line="8934" pos:column="17">vs</name><op:operator pos:line="8934" pos:column="19">.</op:operator><name pos:line="8934" pos:column="20">annotationStyleOffset</name></name> <op:operator pos:line="8934" pos:column="42">=</op:operator> <name pos:line="8934" pos:column="44">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8935" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="8935" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8936" pos:column="17">break;</break>

	</case><case pos:line="8938" pos:column="9">case <expr><name pos:line="8938" pos:column="14">SCI_ANNOTATIONGETSTYLEOFFSET</name></expr>:
		<return pos:line="8939" pos:column="17">return <expr><name><name pos:line="8939" pos:column="24">vs</name><op:operator pos:line="8939" pos:column="26">.</op:operator><name pos:line="8939" pos:column="27">annotationStyleOffset</name></name></expr>;</return>

	</case><case pos:line="8941" pos:column="9">case <expr><name pos:line="8941" pos:column="14">SCI_ADDUNDOACTION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8942" pos:column="17">pdoc</name><op:operator pos:line="8942" pos:column="21">-&gt;</op:operator><name pos:line="8942" pos:column="23">AddUndoAction</name></name><argument_list pos:line="8942" pos:column="36">(<argument><expr><name pos:line="8942" pos:column="37">wParam</name></expr></argument>, <argument><expr><name pos:line="8942" pos:column="45">lParam</name> <op:operator pos:line="8942" pos:column="52">&amp;</op:operator> <name pos:line="8942" pos:column="54">UNDO_MAY_COALESCE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8943" pos:column="17">break;</break>

	</case><case pos:line="8945" pos:column="9">case <expr><name pos:line="8945" pos:column="14">SCI_SETMULTIPLESELECTION</name></expr>:
		<expr_stmt><expr><name pos:line="8946" pos:column="17">multipleSelection</name> <op:operator pos:line="8946" pos:column="35">=</op:operator> <name pos:line="8946" pos:column="37">wParam</name> <op:operator pos:line="8946" pos:column="44">!=</op:operator> <lit:literal type="number" pos:line="8946" pos:column="47">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8947" pos:column="17">InvalidateCaret</name><argument_list pos:line="8947" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8948" pos:column="17">break;</break>

	</case><case pos:line="8950" pos:column="9">case <expr><name pos:line="8950" pos:column="14">SCI_GETMULTIPLESELECTION</name></expr>:
		<return pos:line="8951" pos:column="17">return <expr><name pos:line="8951" pos:column="24">multipleSelection</name></expr>;</return>

	</case><case pos:line="8953" pos:column="9">case <expr><name pos:line="8953" pos:column="14">SCI_SETADDITIONALSELECTIONTYPING</name></expr>:
		<expr_stmt><expr><name pos:line="8954" pos:column="17">additionalSelectionTyping</name> <op:operator pos:line="8954" pos:column="43">=</op:operator> <name pos:line="8954" pos:column="45">wParam</name> <op:operator pos:line="8954" pos:column="52">!=</op:operator> <lit:literal type="number" pos:line="8954" pos:column="55">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8955" pos:column="17">InvalidateCaret</name><argument_list pos:line="8955" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8956" pos:column="17">break;</break>

	</case><case pos:line="8958" pos:column="9">case <expr><name pos:line="8958" pos:column="14">SCI_GETADDITIONALSELECTIONTYPING</name></expr>:
		<return pos:line="8959" pos:column="17">return <expr><name pos:line="8959" pos:column="24">additionalSelectionTyping</name></expr>;</return>

	</case><case pos:line="8961" pos:column="9">case <expr><name pos:line="8961" pos:column="14">SCI_SETMULTIPASTE</name></expr>:
		<expr_stmt><expr><name pos:line="8962" pos:column="17">multiPasteMode</name> <op:operator pos:line="8962" pos:column="32">=</op:operator> <name pos:line="8962" pos:column="34">wParam</name></expr>;</expr_stmt>
		<break pos:line="8963" pos:column="17">break;</break>

	</case><case pos:line="8965" pos:column="9">case <expr><name pos:line="8965" pos:column="14">SCI_GETMULTIPASTE</name></expr>:
		<return pos:line="8966" pos:column="17">return <expr><name pos:line="8966" pos:column="24">multiPasteMode</name></expr>;</return>

	</case><case pos:line="8968" pos:column="9">case <expr><name pos:line="8968" pos:column="14">SCI_SETADDITIONALCARETSBLINK</name></expr>:
		<expr_stmt><expr><name pos:line="8969" pos:column="17">additionalCaretsBlink</name> <op:operator pos:line="8969" pos:column="39">=</op:operator> <name pos:line="8969" pos:column="41">wParam</name> <op:operator pos:line="8969" pos:column="48">!=</op:operator> <lit:literal type="number" pos:line="8969" pos:column="51">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8970" pos:column="17">InvalidateCaret</name><argument_list pos:line="8970" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8971" pos:column="17">break;</break>

	</case><case pos:line="8973" pos:column="9">case <expr><name pos:line="8973" pos:column="14">SCI_GETADDITIONALCARETSBLINK</name></expr>:
		<return pos:line="8974" pos:column="17">return <expr><name pos:line="8974" pos:column="24">additionalCaretsBlink</name></expr>;</return>

	</case><case pos:line="8976" pos:column="9">case <expr><name pos:line="8976" pos:column="14">SCI_SETADDITIONALCARETSVISIBLE</name></expr>:
		<expr_stmt><expr><name pos:line="8977" pos:column="17">additionalCaretsVisible</name> <op:operator pos:line="8977" pos:column="41">=</op:operator> <name pos:line="8977" pos:column="43">wParam</name> <op:operator pos:line="8977" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="8977" pos:column="53">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8978" pos:column="17">InvalidateCaret</name><argument_list pos:line="8978" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8979" pos:column="17">break;</break>

	</case><case pos:line="8981" pos:column="9">case <expr><name pos:line="8981" pos:column="14">SCI_GETADDITIONALCARETSVISIBLE</name></expr>:
		<return pos:line="8982" pos:column="17">return <expr><name pos:line="8982" pos:column="24">additionalCaretsVisible</name></expr>;</return>

	</case><case pos:line="8984" pos:column="9">case <expr><name pos:line="8984" pos:column="14">SCI_GETSELECTIONS</name></expr>:
		<return pos:line="8985" pos:column="17">return <expr><call><name><name pos:line="8985" pos:column="24">sel</name><op:operator pos:line="8985" pos:column="27">.</op:operator><name pos:line="8985" pos:column="28">Count</name></name><argument_list pos:line="8985" pos:column="33">()</argument_list></call></expr>;</return>

	</case><case pos:line="8987" pos:column="9">case <expr><name pos:line="8987" pos:column="14">SCI_CLEARSELECTIONS</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8988" pos:column="17">sel</name><op:operator pos:line="8988" pos:column="20">.</op:operator><name pos:line="8988" pos:column="21">Clear</name></name><argument_list pos:line="8988" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8989" pos:column="17">Redraw</name><argument_list pos:line="8989" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8990" pos:column="17">break;</break>

	</case><case pos:line="8992" pos:column="9">case <expr><name pos:line="8992" pos:column="14">SCI_SETSELECTION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8993" pos:column="17">sel</name><op:operator pos:line="8993" pos:column="20">.</op:operator><name pos:line="8993" pos:column="21">SetSelection</name></name><argument_list pos:line="8993" pos:column="33">(<argument><expr><call><name pos:line="8993" pos:column="34">SelectionRange</name><argument_list pos:line="8993" pos:column="48">(<argument><expr><name pos:line="8993" pos:column="49">wParam</name></expr></argument>, <argument><expr><name pos:line="8993" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8994" pos:column="17">Redraw</name><argument_list pos:line="8994" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="8995" pos:column="17">break;</break>

	</case><case pos:line="8997" pos:column="9">case <expr><name pos:line="8997" pos:column="14">SCI_ADDSELECTION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="8998" pos:column="17">sel</name><op:operator pos:line="8998" pos:column="20">.</op:operator><name pos:line="8998" pos:column="21">AddSelection</name></name><argument_list pos:line="8998" pos:column="33">(<argument><expr><call><name pos:line="8998" pos:column="34">SelectionRange</name><argument_list pos:line="8998" pos:column="48">(<argument><expr><name pos:line="8998" pos:column="49">wParam</name></expr></argument>, <argument><expr><name pos:line="8998" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="8999" pos:column="17">Redraw</name><argument_list pos:line="8999" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9000" pos:column="17">break;</break>

	</case><case pos:line="9002" pos:column="9">case <expr><name pos:line="9002" pos:column="14">SCI_SETMAINSELECTION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9003" pos:column="17">sel</name><op:operator pos:line="9003" pos:column="20">.</op:operator><name pos:line="9003" pos:column="21">SetMain</name></name><argument_list pos:line="9003" pos:column="28">(<argument><expr><name pos:line="9003" pos:column="29">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9004" pos:column="17">Redraw</name><argument_list pos:line="9004" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9005" pos:column="17">break;</break>

	</case><case pos:line="9007" pos:column="9">case <expr><name pos:line="9007" pos:column="14">SCI_GETMAINSELECTION</name></expr>:
		<return pos:line="9008" pos:column="17">return <expr><call><name><name pos:line="9008" pos:column="24">sel</name><op:operator pos:line="9008" pos:column="27">.</op:operator><name pos:line="9008" pos:column="28">Main</name></name><argument_list pos:line="9008" pos:column="32">()</argument_list></call></expr>;</return>

	</case><case pos:line="9010" pos:column="9">case <expr><name pos:line="9010" pos:column="14">SCI_SETSELECTIONNCARET</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9011" pos:column="17">sel</name><op:operator pos:line="9011" pos:column="20">.</op:operator><name pos:line="9011" pos:column="21">Range</name></name><argument_list pos:line="9011" pos:column="26">(<argument><expr><name pos:line="9011" pos:column="27">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9011" pos:column="34">.</op:operator><call><name><name pos:line="9011" pos:column="35">caret</name><op:operator pos:line="9011" pos:column="40">.</op:operator><name pos:line="9011" pos:column="41">SetPosition</name></name><argument_list pos:line="9011" pos:column="52">(<argument><expr><name pos:line="9011" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9012" pos:column="17">Redraw</name><argument_list pos:line="9012" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9013" pos:column="17">break;</break>

	</case><case pos:line="9015" pos:column="9">case <expr><name pos:line="9015" pos:column="14">SCI_GETSELECTIONNCARET</name></expr>:
		<return pos:line="9016" pos:column="17">return <expr><call><name><name pos:line="9016" pos:column="24">sel</name><op:operator pos:line="9016" pos:column="27">.</op:operator><name pos:line="9016" pos:column="28">Range</name></name><argument_list pos:line="9016" pos:column="33">(<argument><expr><name pos:line="9016" pos:column="34">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9016" pos:column="41">.</op:operator><call><name><name pos:line="9016" pos:column="42">caret</name><op:operator pos:line="9016" pos:column="47">.</op:operator><name pos:line="9016" pos:column="48">Position</name></name><argument_list pos:line="9016" pos:column="56">()</argument_list></call></expr>;</return>

	</case><case pos:line="9018" pos:column="9">case <expr><name pos:line="9018" pos:column="14">SCI_SETSELECTIONNANCHOR</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9019" pos:column="17">sel</name><op:operator pos:line="9019" pos:column="20">.</op:operator><name pos:line="9019" pos:column="21">Range</name></name><argument_list pos:line="9019" pos:column="26">(<argument><expr><name pos:line="9019" pos:column="27">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9019" pos:column="34">.</op:operator><call><name><name pos:line="9019" pos:column="35">anchor</name><op:operator pos:line="9019" pos:column="41">.</op:operator><name pos:line="9019" pos:column="42">SetPosition</name></name><argument_list pos:line="9019" pos:column="53">(<argument><expr><name pos:line="9019" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9020" pos:column="17">Redraw</name><argument_list pos:line="9020" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9021" pos:column="17">break;</break>
	</case><case pos:line="9022" pos:column="9">case <expr><name pos:line="9022" pos:column="14">SCI_GETSELECTIONNANCHOR</name></expr>:
		<return pos:line="9023" pos:column="17">return <expr><call><name><name pos:line="9023" pos:column="24">sel</name><op:operator pos:line="9023" pos:column="27">.</op:operator><name pos:line="9023" pos:column="28">Range</name></name><argument_list pos:line="9023" pos:column="33">(<argument><expr><name pos:line="9023" pos:column="34">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9023" pos:column="41">.</op:operator><call><name><name pos:line="9023" pos:column="42">anchor</name><op:operator pos:line="9023" pos:column="48">.</op:operator><name pos:line="9023" pos:column="49">Position</name></name><argument_list pos:line="9023" pos:column="57">()</argument_list></call></expr>;</return>

	</case><case pos:line="9025" pos:column="9">case <expr><name pos:line="9025" pos:column="14">SCI_SETSELECTIONNCARETVIRTUALSPACE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9026" pos:column="17">sel</name><op:operator pos:line="9026" pos:column="20">.</op:operator><name pos:line="9026" pos:column="21">Range</name></name><argument_list pos:line="9026" pos:column="26">(<argument><expr><name pos:line="9026" pos:column="27">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9026" pos:column="34">.</op:operator><call><name><name pos:line="9026" pos:column="35">caret</name><op:operator pos:line="9026" pos:column="40">.</op:operator><name pos:line="9026" pos:column="41">SetVirtualSpace</name></name><argument_list pos:line="9026" pos:column="56">(<argument><expr><name pos:line="9026" pos:column="57">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9027" pos:column="17">Redraw</name><argument_list pos:line="9027" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9028" pos:column="17">break;</break>

	</case><case pos:line="9030" pos:column="9">case <expr><name pos:line="9030" pos:column="14">SCI_GETSELECTIONNCARETVIRTUALSPACE</name></expr>:
		<return pos:line="9031" pos:column="17">return <expr><call><name><name pos:line="9031" pos:column="24">sel</name><op:operator pos:line="9031" pos:column="27">.</op:operator><name pos:line="9031" pos:column="28">Range</name></name><argument_list pos:line="9031" pos:column="33">(<argument><expr><name pos:line="9031" pos:column="34">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9031" pos:column="41">.</op:operator><call><name><name pos:line="9031" pos:column="42">caret</name><op:operator pos:line="9031" pos:column="47">.</op:operator><name pos:line="9031" pos:column="48">VirtualSpace</name></name><argument_list pos:line="9031" pos:column="60">()</argument_list></call></expr>;</return>

	</case><case pos:line="9033" pos:column="9">case <expr><name pos:line="9033" pos:column="14">SCI_SETSELECTIONNANCHORVIRTUALSPACE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9034" pos:column="17">sel</name><op:operator pos:line="9034" pos:column="20">.</op:operator><name pos:line="9034" pos:column="21">Range</name></name><argument_list pos:line="9034" pos:column="26">(<argument><expr><name pos:line="9034" pos:column="27">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9034" pos:column="34">.</op:operator><call><name><name pos:line="9034" pos:column="35">anchor</name><op:operator pos:line="9034" pos:column="41">.</op:operator><name pos:line="9034" pos:column="42">SetVirtualSpace</name></name><argument_list pos:line="9034" pos:column="57">(<argument><expr><name pos:line="9034" pos:column="58">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9035" pos:column="17">Redraw</name><argument_list pos:line="9035" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9036" pos:column="17">break;</break>

	</case><case pos:line="9038" pos:column="9">case <expr><name pos:line="9038" pos:column="14">SCI_GETSELECTIONNANCHORVIRTUALSPACE</name></expr>:
		<return pos:line="9039" pos:column="17">return <expr><call><name><name pos:line="9039" pos:column="24">sel</name><op:operator pos:line="9039" pos:column="27">.</op:operator><name pos:line="9039" pos:column="28">Range</name></name><argument_list pos:line="9039" pos:column="33">(<argument><expr><name pos:line="9039" pos:column="34">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9039" pos:column="41">.</op:operator><call><name><name pos:line="9039" pos:column="42">anchor</name><op:operator pos:line="9039" pos:column="48">.</op:operator><name pos:line="9039" pos:column="49">VirtualSpace</name></name><argument_list pos:line="9039" pos:column="61">()</argument_list></call></expr>;</return>

	</case><case pos:line="9041" pos:column="9">case <expr><name pos:line="9041" pos:column="14">SCI_SETSELECTIONNSTART</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9042" pos:column="17">sel</name><op:operator pos:line="9042" pos:column="20">.</op:operator><name pos:line="9042" pos:column="21">Range</name></name><argument_list pos:line="9042" pos:column="26">(<argument><expr><name pos:line="9042" pos:column="27">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9042" pos:column="34">.</op:operator><call><name><name pos:line="9042" pos:column="35">anchor</name><op:operator pos:line="9042" pos:column="41">.</op:operator><name pos:line="9042" pos:column="42">SetPosition</name></name><argument_list pos:line="9042" pos:column="53">(<argument><expr><name pos:line="9042" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9043" pos:column="17">Redraw</name><argument_list pos:line="9043" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9044" pos:column="17">break;</break>

	</case><case pos:line="9046" pos:column="9">case <expr><name pos:line="9046" pos:column="14">SCI_GETSELECTIONNSTART</name></expr>:
		<return pos:line="9047" pos:column="17">return <expr><call><name><name pos:line="9047" pos:column="24">sel</name><op:operator pos:line="9047" pos:column="27">.</op:operator><name pos:line="9047" pos:column="28">Range</name></name><argument_list pos:line="9047" pos:column="33">(<argument><expr><name pos:line="9047" pos:column="34">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9047" pos:column="41">.</op:operator><call><name pos:line="9047" pos:column="42">Start</name><argument_list pos:line="9047" pos:column="47">()</argument_list></call><op:operator pos:line="9047" pos:column="49">.</op:operator><call><name pos:line="9047" pos:column="50">Position</name><argument_list pos:line="9047" pos:column="58">()</argument_list></call></expr>;</return>

	</case><case pos:line="9049" pos:column="9">case <expr><name pos:line="9049" pos:column="14">SCI_SETSELECTIONNEND</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9050" pos:column="17">sel</name><op:operator pos:line="9050" pos:column="20">.</op:operator><name pos:line="9050" pos:column="21">Range</name></name><argument_list pos:line="9050" pos:column="26">(<argument><expr><name pos:line="9050" pos:column="27">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9050" pos:column="34">.</op:operator><call><name><name pos:line="9050" pos:column="35">caret</name><op:operator pos:line="9050" pos:column="40">.</op:operator><name pos:line="9050" pos:column="41">SetPosition</name></name><argument_list pos:line="9050" pos:column="52">(<argument><expr><name pos:line="9050" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9051" pos:column="17">Redraw</name><argument_list pos:line="9051" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9052" pos:column="17">break;</break>

	</case><case pos:line="9054" pos:column="9">case <expr><name pos:line="9054" pos:column="14">SCI_GETSELECTIONNEND</name></expr>:
		<return pos:line="9055" pos:column="17">return <expr><call><name><name pos:line="9055" pos:column="24">sel</name><op:operator pos:line="9055" pos:column="27">.</op:operator><name pos:line="9055" pos:column="28">Range</name></name><argument_list pos:line="9055" pos:column="33">(<argument><expr><name pos:line="9055" pos:column="34">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="9055" pos:column="41">.</op:operator><call><name pos:line="9055" pos:column="42">End</name><argument_list pos:line="9055" pos:column="45">()</argument_list></call><op:operator pos:line="9055" pos:column="47">.</op:operator><call><name pos:line="9055" pos:column="48">Position</name><argument_list pos:line="9055" pos:column="56">()</argument_list></call></expr>;</return>

	</case><case pos:line="9057" pos:column="9">case <expr><name pos:line="9057" pos:column="14">SCI_SETRECTANGULARSELECTIONCARET</name></expr>:
		<if pos:line="9058" pos:column="17">if <condition pos:line="9058" pos:column="20">(<expr><op:operator pos:line="9058" pos:column="21">!</op:operator><call><name><name pos:line="9058" pos:column="22">sel</name><op:operator pos:line="9058" pos:column="25">.</op:operator><name pos:line="9058" pos:column="26">IsRectangular</name></name><argument_list pos:line="9058" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="9058" pos:column="42">
			<expr_stmt><expr><call><name><name pos:line="9059" pos:column="25">sel</name><op:operator pos:line="9059" pos:column="28">.</op:operator><name pos:line="9059" pos:column="29">Clear</name></name><argument_list pos:line="9059" pos:column="34">()</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name><name pos:line="9060" pos:column="17">sel</name><op:operator pos:line="9060" pos:column="20">.</op:operator><name pos:line="9060" pos:column="21">selType</name></name> <op:operator pos:line="9060" pos:column="29">=</op:operator> <name><name pos:line="9060" pos:column="31">Selection</name><op:operator pos:line="9060" pos:column="40">::</op:operator><name pos:line="9060" pos:column="42">selRectangle</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="9061" pos:column="17">sel</name><op:operator pos:line="9061" pos:column="20">.</op:operator><name pos:line="9061" pos:column="21">Rectangular</name></name><argument_list pos:line="9061" pos:column="32">()</argument_list></call><op:operator pos:line="9061" pos:column="34">.</op:operator><call><name><name pos:line="9061" pos:column="35">caret</name><op:operator pos:line="9061" pos:column="40">.</op:operator><name pos:line="9061" pos:column="41">SetPosition</name></name><argument_list pos:line="9061" pos:column="52">(<argument><expr><name pos:line="9061" pos:column="53">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9062" pos:column="17">SetRectangularRange</name><argument_list pos:line="9062" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9063" pos:column="17">Redraw</name><argument_list pos:line="9063" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9064" pos:column="17">break;</break>

	</case><case pos:line="9066" pos:column="9">case <expr><name pos:line="9066" pos:column="14">SCI_GETRECTANGULARSELECTIONCARET</name></expr>:
		<return pos:line="9067" pos:column="17">return <expr><call><name><name pos:line="9067" pos:column="24">sel</name><op:operator pos:line="9067" pos:column="27">.</op:operator><name pos:line="9067" pos:column="28">Rectangular</name></name><argument_list pos:line="9067" pos:column="39">()</argument_list></call><op:operator pos:line="9067" pos:column="41">.</op:operator><call><name><name pos:line="9067" pos:column="42">caret</name><op:operator pos:line="9067" pos:column="47">.</op:operator><name pos:line="9067" pos:column="48">Position</name></name><argument_list pos:line="9067" pos:column="56">()</argument_list></call></expr>;</return>

	</case><case pos:line="9069" pos:column="9">case <expr><name pos:line="9069" pos:column="14">SCI_SETRECTANGULARSELECTIONANCHOR</name></expr>:
		<if pos:line="9070" pos:column="17">if <condition pos:line="9070" pos:column="20">(<expr><op:operator pos:line="9070" pos:column="21">!</op:operator><call><name><name pos:line="9070" pos:column="22">sel</name><op:operator pos:line="9070" pos:column="25">.</op:operator><name pos:line="9070" pos:column="26">IsRectangular</name></name><argument_list pos:line="9070" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="9070" pos:column="42">
			<expr_stmt><expr><call><name><name pos:line="9071" pos:column="25">sel</name><op:operator pos:line="9071" pos:column="28">.</op:operator><name pos:line="9071" pos:column="29">Clear</name></name><argument_list pos:line="9071" pos:column="34">()</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name><name pos:line="9072" pos:column="17">sel</name><op:operator pos:line="9072" pos:column="20">.</op:operator><name pos:line="9072" pos:column="21">selType</name></name> <op:operator pos:line="9072" pos:column="29">=</op:operator> <name><name pos:line="9072" pos:column="31">Selection</name><op:operator pos:line="9072" pos:column="40">::</op:operator><name pos:line="9072" pos:column="42">selRectangle</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="9073" pos:column="17">sel</name><op:operator pos:line="9073" pos:column="20">.</op:operator><name pos:line="9073" pos:column="21">Rectangular</name></name><argument_list pos:line="9073" pos:column="32">()</argument_list></call><op:operator pos:line="9073" pos:column="34">.</op:operator><call><name><name pos:line="9073" pos:column="35">anchor</name><op:operator pos:line="9073" pos:column="41">.</op:operator><name pos:line="9073" pos:column="42">SetPosition</name></name><argument_list pos:line="9073" pos:column="53">(<argument><expr><name pos:line="9073" pos:column="54">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9074" pos:column="17">SetRectangularRange</name><argument_list pos:line="9074" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9075" pos:column="17">Redraw</name><argument_list pos:line="9075" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9076" pos:column="17">break;</break>

	</case><case pos:line="9078" pos:column="9">case <expr><name pos:line="9078" pos:column="14">SCI_GETRECTANGULARSELECTIONANCHOR</name></expr>:
		<return pos:line="9079" pos:column="17">return <expr><call><name><name pos:line="9079" pos:column="24">sel</name><op:operator pos:line="9079" pos:column="27">.</op:operator><name pos:line="9079" pos:column="28">Rectangular</name></name><argument_list pos:line="9079" pos:column="39">()</argument_list></call><op:operator pos:line="9079" pos:column="41">.</op:operator><call><name><name pos:line="9079" pos:column="42">anchor</name><op:operator pos:line="9079" pos:column="48">.</op:operator><name pos:line="9079" pos:column="49">Position</name></name><argument_list pos:line="9079" pos:column="57">()</argument_list></call></expr>;</return>

	</case><case pos:line="9081" pos:column="9">case <expr><name pos:line="9081" pos:column="14">SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE</name></expr>:
		<if pos:line="9082" pos:column="17">if <condition pos:line="9082" pos:column="20">(<expr><op:operator pos:line="9082" pos:column="21">!</op:operator><call><name><name pos:line="9082" pos:column="22">sel</name><op:operator pos:line="9082" pos:column="25">.</op:operator><name pos:line="9082" pos:column="26">IsRectangular</name></name><argument_list pos:line="9082" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="9082" pos:column="42">
			<expr_stmt><expr><call><name><name pos:line="9083" pos:column="25">sel</name><op:operator pos:line="9083" pos:column="28">.</op:operator><name pos:line="9083" pos:column="29">Clear</name></name><argument_list pos:line="9083" pos:column="34">()</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name><name pos:line="9084" pos:column="17">sel</name><op:operator pos:line="9084" pos:column="20">.</op:operator><name pos:line="9084" pos:column="21">selType</name></name> <op:operator pos:line="9084" pos:column="29">=</op:operator> <name><name pos:line="9084" pos:column="31">Selection</name><op:operator pos:line="9084" pos:column="40">::</op:operator><name pos:line="9084" pos:column="42">selRectangle</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="9085" pos:column="17">sel</name><op:operator pos:line="9085" pos:column="20">.</op:operator><name pos:line="9085" pos:column="21">Rectangular</name></name><argument_list pos:line="9085" pos:column="32">()</argument_list></call><op:operator pos:line="9085" pos:column="34">.</op:operator><call><name><name pos:line="9085" pos:column="35">caret</name><op:operator pos:line="9085" pos:column="40">.</op:operator><name pos:line="9085" pos:column="41">SetVirtualSpace</name></name><argument_list pos:line="9085" pos:column="56">(<argument><expr><name pos:line="9085" pos:column="57">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9086" pos:column="17">SetRectangularRange</name><argument_list pos:line="9086" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9087" pos:column="17">Redraw</name><argument_list pos:line="9087" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9088" pos:column="17">break;</break>

	</case><case pos:line="9090" pos:column="9">case <expr><name pos:line="9090" pos:column="14">SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE</name></expr>:
		<return pos:line="9091" pos:column="17">return <expr><call><name><name pos:line="9091" pos:column="24">sel</name><op:operator pos:line="9091" pos:column="27">.</op:operator><name pos:line="9091" pos:column="28">Rectangular</name></name><argument_list pos:line="9091" pos:column="39">()</argument_list></call><op:operator pos:line="9091" pos:column="41">.</op:operator><call><name><name pos:line="9091" pos:column="42">caret</name><op:operator pos:line="9091" pos:column="47">.</op:operator><name pos:line="9091" pos:column="48">VirtualSpace</name></name><argument_list pos:line="9091" pos:column="60">()</argument_list></call></expr>;</return>

	</case><case pos:line="9093" pos:column="9">case <expr><name pos:line="9093" pos:column="14">SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE</name></expr>:
		<if pos:line="9094" pos:column="17">if <condition pos:line="9094" pos:column="20">(<expr><op:operator pos:line="9094" pos:column="21">!</op:operator><call><name><name pos:line="9094" pos:column="22">sel</name><op:operator pos:line="9094" pos:column="25">.</op:operator><name pos:line="9094" pos:column="26">IsRectangular</name></name><argument_list pos:line="9094" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="9094" pos:column="42">
			<expr_stmt><expr><call><name><name pos:line="9095" pos:column="25">sel</name><op:operator pos:line="9095" pos:column="28">.</op:operator><name pos:line="9095" pos:column="29">Clear</name></name><argument_list pos:line="9095" pos:column="34">()</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name><name pos:line="9096" pos:column="17">sel</name><op:operator pos:line="9096" pos:column="20">.</op:operator><name pos:line="9096" pos:column="21">selType</name></name> <op:operator pos:line="9096" pos:column="29">=</op:operator> <name><name pos:line="9096" pos:column="31">Selection</name><op:operator pos:line="9096" pos:column="40">::</op:operator><name pos:line="9096" pos:column="42">selRectangle</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="9097" pos:column="17">sel</name><op:operator pos:line="9097" pos:column="20">.</op:operator><name pos:line="9097" pos:column="21">Rectangular</name></name><argument_list pos:line="9097" pos:column="32">()</argument_list></call><op:operator pos:line="9097" pos:column="34">.</op:operator><call><name><name pos:line="9097" pos:column="35">anchor</name><op:operator pos:line="9097" pos:column="41">.</op:operator><name pos:line="9097" pos:column="42">SetVirtualSpace</name></name><argument_list pos:line="9097" pos:column="57">(<argument><expr><name pos:line="9097" pos:column="58">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9098" pos:column="17">SetRectangularRange</name><argument_list pos:line="9098" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9099" pos:column="17">Redraw</name><argument_list pos:line="9099" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9100" pos:column="17">break;</break>

	</case><case pos:line="9102" pos:column="9">case <expr><name pos:line="9102" pos:column="14">SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE</name></expr>:
		<return pos:line="9103" pos:column="17">return <expr><call><name><name pos:line="9103" pos:column="24">sel</name><op:operator pos:line="9103" pos:column="27">.</op:operator><name pos:line="9103" pos:column="28">Rectangular</name></name><argument_list pos:line="9103" pos:column="39">()</argument_list></call><op:operator pos:line="9103" pos:column="41">.</op:operator><call><name><name pos:line="9103" pos:column="42">anchor</name><op:operator pos:line="9103" pos:column="48">.</op:operator><name pos:line="9103" pos:column="49">VirtualSpace</name></name><argument_list pos:line="9103" pos:column="61">()</argument_list></call></expr>;</return>

	</case><case pos:line="9105" pos:column="9">case <expr><name pos:line="9105" pos:column="14">SCI_SETVIRTUALSPACEOPTIONS</name></expr>:
		<expr_stmt><expr><name pos:line="9106" pos:column="17">virtualSpaceOptions</name> <op:operator pos:line="9106" pos:column="37">=</op:operator> <name pos:line="9106" pos:column="39">wParam</name></expr>;</expr_stmt>
		<break pos:line="9107" pos:column="17">break;</break>

	</case><case pos:line="9109" pos:column="9">case <expr><name pos:line="9109" pos:column="14">SCI_GETVIRTUALSPACEOPTIONS</name></expr>:
		<return pos:line="9110" pos:column="17">return <expr><name pos:line="9110" pos:column="24">virtualSpaceOptions</name></expr>;</return>

	</case><case pos:line="9112" pos:column="9">case <expr><name pos:line="9112" pos:column="14">SCI_SETADDITIONALSELFORE</name></expr>:
		<expr_stmt><expr><name><name pos:line="9113" pos:column="17">vs</name><op:operator pos:line="9113" pos:column="19">.</op:operator><name pos:line="9113" pos:column="20">selAdditionalForeground</name><op:operator pos:line="9113" pos:column="43">.</op:operator><name pos:line="9113" pos:column="44">desired</name></name> <op:operator pos:line="9113" pos:column="52">=</op:operator> <call><name pos:line="9113" pos:column="54">ColourDesired</name><argument_list pos:line="9113" pos:column="67">(<argument><expr><name pos:line="9113" pos:column="68">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9114" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="9114" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9115" pos:column="17">break;</break>

	</case><case pos:line="9117" pos:column="9">case <expr><name pos:line="9117" pos:column="14">SCI_SETADDITIONALSELBACK</name></expr>:
		<expr_stmt><expr><name><name pos:line="9118" pos:column="17">vs</name><op:operator pos:line="9118" pos:column="19">.</op:operator><name pos:line="9118" pos:column="20">selAdditionalBackground</name><op:operator pos:line="9118" pos:column="43">.</op:operator><name pos:line="9118" pos:column="44">desired</name></name> <op:operator pos:line="9118" pos:column="52">=</op:operator> <call><name pos:line="9118" pos:column="54">ColourDesired</name><argument_list pos:line="9118" pos:column="67">(<argument><expr><name pos:line="9118" pos:column="68">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9119" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="9119" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9120" pos:column="17">break;</break>

	</case><case pos:line="9122" pos:column="9">case <expr><name pos:line="9122" pos:column="14">SCI_SETADDITIONALSELALPHA</name></expr>:
		<expr_stmt><expr><name><name pos:line="9123" pos:column="17">vs</name><op:operator pos:line="9123" pos:column="19">.</op:operator><name pos:line="9123" pos:column="20">selAdditionalAlpha</name></name> <op:operator pos:line="9123" pos:column="39">=</op:operator> <name pos:line="9123" pos:column="41">wParam</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9124" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="9124" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9125" pos:column="17">break;</break>

	</case><case pos:line="9127" pos:column="9">case <expr><name pos:line="9127" pos:column="14">SCI_GETADDITIONALSELALPHA</name></expr>:
		<return pos:line="9128" pos:column="17">return <expr><name><name pos:line="9128" pos:column="24">vs</name><op:operator pos:line="9128" pos:column="26">.</op:operator><name pos:line="9128" pos:column="27">selAdditionalAlpha</name></name></expr>;</return>

	</case><case pos:line="9130" pos:column="9">case <expr><name pos:line="9130" pos:column="14">SCI_SETADDITIONALCARETFORE</name></expr>:
		<expr_stmt><expr><name><name pos:line="9131" pos:column="17">vs</name><op:operator pos:line="9131" pos:column="19">.</op:operator><name pos:line="9131" pos:column="20">additionalCaretColour</name><op:operator pos:line="9131" pos:column="41">.</op:operator><name pos:line="9131" pos:column="42">desired</name></name> <op:operator pos:line="9131" pos:column="50">=</op:operator> <call><name pos:line="9131" pos:column="52">ColourDesired</name><argument_list pos:line="9131" pos:column="65">(<argument><expr><name pos:line="9131" pos:column="66">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9132" pos:column="17">InvalidateStyleRedraw</name><argument_list pos:line="9132" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9133" pos:column="17">break;</break>

	</case><case pos:line="9135" pos:column="9">case <expr><name pos:line="9135" pos:column="14">SCI_GETADDITIONALCARETFORE</name></expr>:
		<return pos:line="9136" pos:column="17">return <expr><call><name><name pos:line="9136" pos:column="24">vs</name><op:operator pos:line="9136" pos:column="26">.</op:operator><name pos:line="9136" pos:column="27">additionalCaretColour</name><op:operator pos:line="9136" pos:column="48">.</op:operator><name pos:line="9136" pos:column="49">desired</name><op:operator pos:line="9136" pos:column="56">.</op:operator><name pos:line="9136" pos:column="57">AsLong</name></name><argument_list pos:line="9136" pos:column="63">()</argument_list></call></expr>;</return>

	</case><case pos:line="9138" pos:column="9">case <expr><name pos:line="9138" pos:column="14">SCI_ROTATESELECTION</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9139" pos:column="17">sel</name><op:operator pos:line="9139" pos:column="20">.</op:operator><name pos:line="9139" pos:column="21">RotateMain</name></name><argument_list pos:line="9139" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="9140" pos:column="17">InvalidateSelection</name><argument_list pos:line="9140" pos:column="36">(<argument><expr><call><name><name pos:line="9140" pos:column="37">sel</name><op:operator pos:line="9140" pos:column="40">.</op:operator><name pos:line="9140" pos:column="41">RangeMain</name></name><argument_list pos:line="9140" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="9140" pos:column="54">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9141" pos:column="17">break;</break>

	</case><case pos:line="9143" pos:column="9">case <expr><name pos:line="9143" pos:column="14">SCI_SWAPMAINANCHORCARET</name></expr>:
		<expr_stmt><expr><call><name pos:line="9144" pos:column="17">InvalidateSelection</name><argument_list pos:line="9144" pos:column="36">(<argument><expr><call><name><name pos:line="9144" pos:column="37">sel</name><op:operator pos:line="9144" pos:column="40">.</op:operator><name pos:line="9144" pos:column="41">RangeMain</name></name><argument_list pos:line="9144" pos:column="50">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="9145" pos:column="17">sel</name><op:operator pos:line="9145" pos:column="20">.</op:operator><name pos:line="9145" pos:column="21">RangeMain</name></name><argument_list pos:line="9145" pos:column="30">()</argument_list></call> <op:operator pos:line="9145" pos:column="33">=</op:operator> <call><name pos:line="9145" pos:column="35">SelectionRange</name><argument_list pos:line="9145" pos:column="49">(<argument><expr><call><name><name pos:line="9145" pos:column="50">sel</name><op:operator pos:line="9145" pos:column="53">.</op:operator><name pos:line="9145" pos:column="54">RangeMain</name></name><argument_list pos:line="9145" pos:column="63">()</argument_list></call><op:operator pos:line="9145" pos:column="65">.</op:operator><name pos:line="9145" pos:column="66">anchor</name></expr></argument>, <argument><expr><call><name><name pos:line="9145" pos:column="74">sel</name><op:operator pos:line="9145" pos:column="77">.</op:operator><name pos:line="9145" pos:column="78">RangeMain</name></name><argument_list pos:line="9145" pos:column="87">()</argument_list></call><op:operator pos:line="9145" pos:column="89">.</op:operator><name pos:line="9145" pos:column="90">caret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9146" pos:column="17">break;</break>

	</case><case pos:line="9148" pos:column="9">case <expr><name pos:line="9148" pos:column="14">SCI_CHANGELEXERSTATE</name></expr>:
		<expr_stmt><expr><call><name><name pos:line="9149" pos:column="17">pdoc</name><op:operator pos:line="9149" pos:column="21">-&gt;</op:operator><name pos:line="9149" pos:column="23">ChangeLexerState</name></name><argument_list pos:line="9149" pos:column="39">(<argument><expr><name pos:line="9149" pos:column="40">wParam</name></expr></argument>, <argument><expr><name pos:line="9149" pos:column="48">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9150" pos:column="17">break;</break>
	
	</case><case pos:line="9152" pos:column="9">case <expr><name pos:line="9152" pos:column="14">SCI_SETIDENTIFIER</name></expr>:
		<expr_stmt><expr><call><name pos:line="9153" pos:column="17">SetCtrlID</name><argument_list pos:line="9153" pos:column="26">(<argument><expr><name pos:line="9153" pos:column="27">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="9154" pos:column="17">break;</break>
	
	</case><case pos:line="9156" pos:column="9">case <expr><name pos:line="9156" pos:column="14">SCI_GETIDENTIFIER</name></expr>:
		<return pos:line="9157" pos:column="17">return <expr><call><name pos:line="9157" pos:column="24">GetCtrlID</name><argument_list pos:line="9157" pos:column="33">()</argument_list></call></expr>;</return>

	</case><default pos:line="9159" pos:column="9">default:
		<return pos:line="9160" pos:column="17">return <expr><call><name pos:line="9160" pos:column="24">DefWndProc</name><argument_list pos:line="9160" pos:column="34">(<argument><expr><name pos:line="9160" pos:column="35">iMessage</name></expr></argument>, <argument><expr><name pos:line="9160" pos:column="45">wParam</name></expr></argument>, <argument><expr><name pos:line="9160" pos:column="53">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
	</default>}</block></switch>
	<comment type="line" pos:line="9162" pos:column="9">//Platform::DebugPrintf("end wnd proc\n");</comment>
	<return pos:line="9163" pos:column="9">return <expr><lit:literal type="number" pos:line="9163" pos:column="16">0l</lit:literal></expr>;</return>
}</block></function>
</unit>
