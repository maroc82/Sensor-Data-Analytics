<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\VerticalFileSwitcher\VerticalFileSwitcher.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">VERTICALFILESWITCHER_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive>  <cpp:macro><name pos:line="30" pos:column="10">VERTICALFILESWITCHER_H</name></cpp:macro></cpp:define>

<comment type="line" pos:line="32" pos:column="1">//#include &lt;windows.h&gt;</comment>
<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">DOCKINGDLGINTERFACE_H</name></cpp:ifndef>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"DockingDlgInterface.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">//DOCKINGDLGINTERFACE_H</comment>

<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"VerticalFileSwitcher_rc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"VerticalFileSwitcherListView.h"</lit:literal></cpp:file></cpp:include>

<class pos:line="40" pos:column="1">class <name pos:line="40" pos:column="7">VerticalFileSwitcher</name> <super pos:line="40" pos:column="28">: <specifier pos:line="40" pos:column="30">public</specifier> <name pos:line="40" pos:column="37">DockingDlgInterface</name></super> <block pos:line="40" pos:column="57">{<private type="default" pos:line="40" pos:column="58">
</private><public pos:line="41" pos:column="1">public:
	<constructor><name pos:line="42" pos:column="9">VerticalFileSwitcher</name><parameter_list pos:line="42" pos:column="29">()</parameter_list><member_list pos:line="42" pos:column="31">: <call><name pos:line="42" pos:column="33">DockingDlgInterface</name><argument_list pos:line="42" pos:column="52">(<argument><expr><name pos:line="42" pos:column="53">IDD_FILESWITCHER_PANEL</name></expr></argument>)</argument_list></call> </member_list><block pos:line="42" pos:column="77">{}</block></constructor><empty_stmt pos:line="42" pos:column="79">;</empty_stmt>

	<function><type><name pos:line="44" pos:column="9">void</name></type> <name pos:line="44" pos:column="14">init</name><parameter_list pos:line="44" pos:column="18">(<param><decl><type><name pos:line="44" pos:column="19">HINSTANCE</name></type> <name pos:line="44" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="44" pos:column="36">HWND</name></type> <name pos:line="44" pos:column="41">hPere</name></decl></param>, <param><decl><type><name pos:line="44" pos:column="48">HIMAGELIST</name></type> <name pos:line="44" pos:column="59">hImaLst</name></decl></param>)</parameter_list> <block pos:line="44" pos:column="68">{
		<expr_stmt><expr><call><name><name pos:line="45" pos:column="17">DockingDlgInterface</name><op:operator pos:line="45" pos:column="36">::</op:operator><name pos:line="45" pos:column="38">init</name></name><argument_list pos:line="45" pos:column="42">(<argument><expr><name pos:line="45" pos:column="43">hInst</name></expr></argument>, <argument><expr><name pos:line="45" pos:column="50">hPere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="46" pos:column="17">_hImaLst</name> <op:operator pos:line="46" pos:column="26">=</op:operator> <name pos:line="46" pos:column="28">hImaLst</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="47" pos:column="10">;</empty_stmt>

    <function><type><specifier pos:line="49" pos:column="5">virtual</specifier> <name pos:line="49" pos:column="13">void</name></type> <name pos:line="49" pos:column="18">display</name><parameter_list pos:line="49" pos:column="25">(<param><decl><type><name pos:line="49" pos:column="26">bool</name></type> <name pos:line="49" pos:column="31">toShow</name> <init pos:line="49" pos:column="38">= <expr><lit:literal type="boolean" pos:line="49" pos:column="40">true</lit:literal></expr></init></decl></param>)</parameter_list> <specifier pos:line="49" pos:column="46">const</specifier> <block pos:line="49" pos:column="52">{
        <expr_stmt><expr><call><name><name pos:line="50" pos:column="9">DockingDlgInterface</name><op:operator pos:line="50" pos:column="28">::</op:operator><name pos:line="50" pos:column="30">display</name></name><argument_list pos:line="50" pos:column="37">(<argument><expr><name pos:line="50" pos:column="38">toShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="51" pos:column="6">;</empty_stmt>

    <function><type><name pos:line="53" pos:column="5">void</name></type> <name pos:line="53" pos:column="10">setParent</name><parameter_list pos:line="53" pos:column="19">(<param><decl><type><name pos:line="53" pos:column="20">HWND</name></type> <name pos:line="53" pos:column="25">parent2set</name></decl></param>)</parameter_list><block pos:line="53" pos:column="36">{
        <expr_stmt><expr><name pos:line="54" pos:column="9">_hParent</name> <op:operator pos:line="54" pos:column="18">=</op:operator> <name pos:line="54" pos:column="20">parent2set</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="55" pos:column="6">;</empty_stmt>
	
	<comment type="line" pos:line="57" pos:column="9">//Activate document in scintilla by using the internal index</comment>
	<function_decl><type><name pos:line="58" pos:column="9">void</name></type> <name pos:line="58" pos:column="14">activateDoc</name><parameter_list pos:line="58" pos:column="25">(<param><decl><type><name pos:line="58" pos:column="26">TaskLstFnStatus</name> <type:modifier pos:line="58" pos:column="42">*</type:modifier></type><name pos:line="58" pos:column="43">tlfs</name></decl></param>)</parameter_list> <specifier pos:line="58" pos:column="49">const</specifier>;</function_decl>

	<function><type><name pos:line="60" pos:column="9">int</name></type> <name pos:line="60" pos:column="13">newItem</name><parameter_list pos:line="60" pos:column="20">(<param><decl><type><name pos:line="60" pos:column="21">int</name></type> <name pos:line="60" pos:column="25">bufferID</name></decl></param>, <param><decl><type><name pos:line="60" pos:column="35">int</name></type> <name pos:line="60" pos:column="39">iView</name></decl></param>)</parameter_list><block pos:line="60" pos:column="45">{
		<return pos:line="61" pos:column="17">return <expr><call><name><name pos:line="61" pos:column="24">_fileListView</name><op:operator pos:line="61" pos:column="37">.</op:operator><name pos:line="61" pos:column="38">newItem</name></name><argument_list pos:line="61" pos:column="45">(<argument><expr><name pos:line="61" pos:column="46">bufferID</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="56">iView</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="62" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="64" pos:column="9">int</name></type> <name pos:line="64" pos:column="13">closeItem</name><parameter_list pos:line="64" pos:column="22">(<param><decl><type><name pos:line="64" pos:column="23">int</name></type> <name pos:line="64" pos:column="27">bufferID</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="37">int</name></type> <name pos:line="64" pos:column="41">iView</name></decl></param>)</parameter_list><block pos:line="64" pos:column="47">{
		<return pos:line="65" pos:column="17">return <expr><call><name><name pos:line="65" pos:column="24">_fileListView</name><op:operator pos:line="65" pos:column="37">.</op:operator><name pos:line="65" pos:column="38">closeItem</name></name><argument_list pos:line="65" pos:column="47">(<argument><expr><name pos:line="65" pos:column="48">bufferID</name></expr></argument>, <argument><expr><name pos:line="65" pos:column="58">iView</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="66" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="68" pos:column="9">void</name></type> <name pos:line="68" pos:column="14">activateItem</name><parameter_list pos:line="68" pos:column="26">(<param><decl><type><name pos:line="68" pos:column="27">int</name></type> <name pos:line="68" pos:column="31">bufferID</name></decl></param>, <param><decl><type><name pos:line="68" pos:column="41">int</name></type> <name pos:line="68" pos:column="45">iView</name></decl></param>)</parameter_list> <block pos:line="68" pos:column="52">{
		<expr_stmt><expr><call><name><name pos:line="69" pos:column="17">_fileListView</name><op:operator pos:line="69" pos:column="30">.</op:operator><name pos:line="69" pos:column="31">activateItem</name></name><argument_list pos:line="69" pos:column="43">(<argument><expr><name pos:line="69" pos:column="44">bufferID</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="54">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="70" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="72" pos:column="9">void</name></type> <name pos:line="72" pos:column="14">setItemIconStatus</name><parameter_list pos:line="72" pos:column="31">(<param><decl><type><name pos:line="72" pos:column="32">int</name></type> <name pos:line="72" pos:column="36">bufferID</name></decl></param>)</parameter_list> <block pos:line="72" pos:column="46">{
		<expr_stmt><expr><call><name><name pos:line="73" pos:column="17">_fileListView</name><op:operator pos:line="73" pos:column="30">.</op:operator><name pos:line="73" pos:column="31">setItemIconStatus</name></name><argument_list pos:line="73" pos:column="48">(<argument><expr><name pos:line="73" pos:column="49">bufferID</name></expr></argument>)</argument_list></call></expr> ;</expr_stmt>
	}</block></function><empty_stmt pos:line="74" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="76" pos:column="9">generic_string</name></type> <name pos:line="76" pos:column="24">getFullFilePath</name><parameter_list pos:line="76" pos:column="39">(<param><decl><type><name pos:line="76" pos:column="40">size_t</name></type> <name pos:line="76" pos:column="47">i</name></decl></param>)</parameter_list> <specifier pos:line="76" pos:column="50">const</specifier> <block pos:line="76" pos:column="56">{
		<return pos:line="77" pos:column="17">return <expr><call><name><name pos:line="77" pos:column="24">_fileListView</name><op:operator pos:line="77" pos:column="37">.</op:operator><name pos:line="77" pos:column="38">getFullFilePath</name></name><argument_list pos:line="77" pos:column="53">(<argument><expr><name pos:line="77" pos:column="54">i</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="78" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="80" pos:column="9">int</name></type> <name pos:line="80" pos:column="13">setHeaderOrder</name><parameter_list pos:line="80" pos:column="27">(<param><decl><type><name pos:line="80" pos:column="28">LPNMLISTVIEW</name></type> <name pos:line="80" pos:column="41">pnm_list_view</name></decl></param>)</parameter_list>;</function_decl>

</public><protected pos:line="82" pos:column="1">protected:
	<function_decl><type><specifier pos:line="83" pos:column="9">virtual</specifier> <name pos:line="83" pos:column="17">BOOL</name> <name pos:line="83" pos:column="22">CALLBACK</name></type> <name><name pos:line="83" pos:column="31">VerticalFileSwitcher</name><op:operator pos:line="83" pos:column="51">::</op:operator><name pos:line="83" pos:column="53">run_dlgProc</name></name><parameter_list pos:line="83" pos:column="64">(<param><decl><type><name pos:line="83" pos:column="65">UINT</name></type> <name pos:line="83" pos:column="70">message</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="79">WPARAM</name></type> <name pos:line="83" pos:column="86">wParam</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="94">LPARAM</name></type> <name pos:line="83" pos:column="101">lParam</name></decl></param>)</parameter_list>;</function_decl>

</protected><private pos:line="85" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="86" pos:column="9">VerticalFileSwitcherListView</name></type> <name pos:line="86" pos:column="38">_fileListView</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="87" pos:column="9">HIMAGELIST</name></type> <name pos:line="87" pos:column="20">_hImaLst</name></decl>;</decl_stmt>
</private>}</block>;</class>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="89" pos:column="8">// VERTICALFILESWITCHER_H</comment>
</unit>
