<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\macosx\SciTest\main.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">//</comment>
<comment type="line" pos:line="2" pos:column="1">//  main.c</comment>
<comment type="line" pos:line="3" pos:column="1">//  SciTest</comment>
<comment type="line" pos:line="4" pos:column="1">//</comment>
<comment type="line" pos:line="5" pos:column="1">//  Copyright (c) 2005-2006 ActiveState Software Inc.</comment>
<comment type="line" pos:line="6" pos:column="1">//  All rights reserved.</comment>
<comment type="line" pos:line="7" pos:column="1">//</comment>
<comment type="line" pos:line="8" pos:column="1">//  Created by Shane Caraveo on 3/20/05.</comment>
<comment type="line" pos:line="9" pos:column="1">//</comment>

<cpp:include pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">include</cpp:directive> <cpp:file pos:line="11" pos:column="10">&lt;Carbon/Carbon.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="12" pos:column="10">"TView.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="13" pos:column="10">"TCarbonEvent.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="14" pos:column="10">"ScintillaMacOSX.h"</lit:literal></cpp:file></cpp:include>

<extern pos:line="16" pos:column="1">extern <lit:literal type="string" pos:line="16" pos:column="8">"C"</lit:literal> <function_decl><type><name pos:line="16" pos:column="12">HIViewRef</name></type> <name pos:line="16" pos:column="22">scintilla_new</name><parameter_list pos:line="16" pos:column="35">(<param><decl><type><name pos:line="16" pos:column="36">void</name></type></decl></param>)</parameter_list>;</function_decl></extern>

<decl_stmt><decl><type><specifier pos:line="18" pos:column="1">const</specifier> <name pos:line="18" pos:column="7">HILayoutInfo</name></type> <name pos:line="18" pos:column="20">kBindToParentLayout</name> <init pos:line="18" pos:column="40">= <expr><block pos:line="18" pos:column="42">{
  <expr><name pos:line="19" pos:column="3">kHILayoutInfoVersionZero</name></expr>,
  <expr><block pos:line="20" pos:column="3">{ <expr><block pos:line="20" pos:column="5">{ <expr><name pos:line="20" pos:column="7">NULL</name></expr>, <expr><name pos:line="20" pos:column="13">kHILayoutBindTop</name></expr> }</block></expr>, <expr><block pos:line="20" pos:column="33">{ <expr><name pos:line="20" pos:column="35">NULL</name></expr>, <expr><name pos:line="20" pos:column="41">kHILayoutBindLeft</name></expr> }</block></expr>, <expr><block pos:line="20" pos:column="62">{ <expr><name pos:line="20" pos:column="64">NULL</name></expr>, <expr><name pos:line="20" pos:column="70">kHILayoutBindBottom</name></expr> }</block></expr>, <expr><block pos:line="20" pos:column="93">{ <expr><name pos:line="20" pos:column="95">NULL</name></expr>, <expr><name pos:line="20" pos:column="101">kHILayoutBindRight</name></expr> }</block></expr> }</block></expr>,
  <expr><block pos:line="21" pos:column="3">{ <expr><block pos:line="21" pos:column="5">{ <expr><name pos:line="21" pos:column="7">NULL</name></expr>, <expr><name pos:line="21" pos:column="13">kHILayoutScaleAbsolute</name></expr>, <expr><lit:literal type="number" pos:line="21" pos:column="37">0</lit:literal></expr> }</block></expr>, <expr><block pos:line="21" pos:column="42">{ <expr><name pos:line="21" pos:column="44">NULL</name></expr>, <expr><name pos:line="21" pos:column="50">kHILayoutScaleAbsolute</name></expr>, <expr><lit:literal type="number" pos:line="21" pos:column="74">0</lit:literal></expr> }</block></expr> }</block></expr>,
  <expr><block pos:line="22" pos:column="3">{ <expr><block pos:line="22" pos:column="5">{ <expr><name pos:line="22" pos:column="7">NULL</name></expr>, <expr><name pos:line="22" pos:column="13">kHILayoutPositionTop</name></expr>, <expr><lit:literal type="number" pos:line="22" pos:column="35">0</lit:literal></expr> }</block></expr>, <expr><block pos:line="22" pos:column="40">{ <expr><name pos:line="22" pos:column="42">NULL</name></expr>, <expr><name pos:line="22" pos:column="48">kHILayoutPositionLeft</name></expr>, <expr><lit:literal type="number" pos:line="22" pos:column="71">0</lit:literal></expr> }</block></expr> }</block></expr>
}</block></expr></init></decl>;</decl_stmt>

<using pos:line="25" pos:column="1">using namespace <name pos:line="25" pos:column="17">Scintilla</name>;</using>

<comment type="block" pos:line="27" pos:column="1">/* XPM */</comment>
<decl_stmt><decl><type><specifier pos:line="28" pos:column="1">static</specifier> <specifier pos:line="28" pos:column="8">const</specifier> <name pos:line="28" pos:column="14">char</name> <type:modifier pos:line="28" pos:column="19">*</type:modifier></type><name><name pos:line="28" pos:column="20">ac_class</name><index pos:line="28" pos:column="28">[]</index></name> <init pos:line="28" pos:column="31">= <expr><block pos:line="28" pos:column="33">{
<comment type="block" pos:line="29" pos:column="1">/* columns rows colors chars-per-pixel */</comment>
<expr><lit:literal type="string" pos:line="30" pos:column="1">"18 12 24 1"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="31" pos:column="1">"  c black"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="32" pos:column="1">". c #403030"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="33" pos:column="1">"X c #473636"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="34" pos:column="1">"o c #4E3C3C"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="35" pos:column="1">"O c #474141"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="36" pos:column="1">"+ c #5F4C4C"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="37" pos:column="1">"@ c #756362"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="38" pos:column="1">"# c #98342C"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="39" pos:column="1">"$ c #A0392F"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="40" pos:column="1">"% c #B24235"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="41" pos:column="1">"&amp; c #B2443C"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="42" pos:column="1">"* c #B34E3E"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="43" pos:column="1">"= c #B54E44"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="44" pos:column="1">"- c #B65146"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="45" pos:column="1">"; c #B7584F"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="46" pos:column="1">": c #B8554C"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="47" pos:column="1">"&gt; c #B75A50"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="48" pos:column="1">", c #B95852"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="49" pos:column="1">"&lt; c #B96259"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="50" pos:column="1">"1 c #B89B9B"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="51" pos:column="1">"2 c #BCA0A0"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="52" pos:column="1">"3 c #C1A5A5"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="53" pos:column="1">"4 c gray100"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="54" pos:column="1">"5 c None"</lit:literal></expr>,
<comment type="block" pos:line="55" pos:column="1">/* pixels */</comment>
<expr><lit:literal type="string" pos:line="56" pos:column="1">"555555555555555555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="57" pos:column="1">"55553$$$$$$$#@5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="58" pos:column="1">"55552;%&amp;&amp;==;=o5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="59" pos:column="1">"55551&gt;&amp;&amp;*=;:=.5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="60" pos:column="1">"55551&gt;&amp;*=;::=.5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="61" pos:column="1">"55551&gt;*==:::-X5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="62" pos:column="1">"55551&gt;==:::,;.5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="63" pos:column="1">"55551&lt;==:;,&lt;&gt;.5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="64" pos:column="1">"55551&lt;;;;;&lt;&lt;;.5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="65" pos:column="1">"55551;-==;;;;X5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="66" pos:column="1">"55555+XX..X..O5555"</lit:literal></expr>,
<expr><lit:literal type="string" pos:line="67" pos:column="1">"555555555555555555"</lit:literal></expr>
}</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="70" pos:column="1">const</specifier> <name pos:line="70" pos:column="7">char</name></type> <name><name pos:line="70" pos:column="12">keywords</name><index pos:line="70" pos:column="20">[]</index></name><init pos:line="70" pos:column="22">=<expr><lit:literal type="string" pos:line="70" pos:column="23">"and and_eq asm auto bitand bitor bool break "</lit:literal>
<lit:literal type="string" pos:line="71" pos:column="1">"case catch char class compl const const_cast continue "</lit:literal>
<lit:literal type="string" pos:line="72" pos:column="1">"default delete do double dynamic_cast else enum explicit export extern false float for "</lit:literal>
<lit:literal type="string" pos:line="73" pos:column="1">"friend goto if inline int long mutable namespace new not not_eq "</lit:literal>
<lit:literal type="string" pos:line="74" pos:column="1">"operator or or_eq private protected public "</lit:literal>
<lit:literal type="string" pos:line="75" pos:column="1">"register reinterpret_cast return short signed sizeof static static_cast struct switch "</lit:literal>
<lit:literal type="string" pos:line="76" pos:column="1">"template this throw true try typedef typeid typename union unsigned using "</lit:literal>
<lit:literal type="string" pos:line="77" pos:column="1">"virtual void volatile wchar_t while xor xor_eq"</lit:literal></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="79" pos:column="1">pascal</name> <name pos:line="79" pos:column="8">OSStatus</name></type> <name pos:line="79" pos:column="17">WindowEventHandler</name><parameter_list pos:line="79" pos:column="35">(<param><decl><type><name pos:line="79" pos:column="36">EventHandlerCallRef</name></type>	<name pos:line="79" pos:column="57">inCallRef</name></decl></param>,
				   <param><decl><type><name pos:line="80" pos:column="36">EventRef</name></type>		<name pos:line="80" pos:column="57">inEvent</name></decl></param>,
				   <param><decl><type><name pos:line="81" pos:column="36">void</name><type:modifier pos:line="81" pos:column="40">*</type:modifier></type>	        <name pos:line="81" pos:column="57">inUserData</name></decl></param> )</parameter_list>
<block pos:line="82" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="83" pos:column="9">HIViewRef</name></type> <name pos:line="83" pos:column="19">sciView</name> <init pos:line="83" pos:column="27">= <expr><op:operator pos:line="83" pos:column="29">*</op:operator><call><name><name pos:line="83" pos:column="30">reinterpret_cast</name><argument_list pos:line="83" pos:column="46">&lt;<argument><expr><name pos:line="83" pos:column="47">HIViewRef</name><op:operator pos:line="83" pos:column="56">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="83" pos:column="58">( <argument><expr><name pos:line="83" pos:column="60">inUserData</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="84" pos:column="9">WindowRef</name></type> <name pos:line="84" pos:column="19">window</name> <init pos:line="84" pos:column="26">= <expr><call><name pos:line="84" pos:column="28">GetControlOwner</name><argument_list pos:line="84" pos:column="43">(<argument><expr><name pos:line="84" pos:column="44">sciView</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="85" pos:column="9">ScintillaMacOSX</name><type:modifier pos:line="85" pos:column="24">*</type:modifier></type> <name pos:line="85" pos:column="26">scintilla</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="86" pos:column="9">GetControlProperty</name><argument_list pos:line="86" pos:column="27">( <argument><expr><name pos:line="86" pos:column="29">sciView</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="38">scintillaMacOSType</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="86" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><sizeof pos:line="86" pos:column="61">sizeof<argument_list pos:line="86" pos:column="67">( <argument><expr><name pos:line="86" pos:column="69">scintilla</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="86" pos:column="82">NULL</name></expr></argument>, <argument><expr><op:operator pos:line="86" pos:column="88">&amp;</op:operator><name pos:line="86" pos:column="89">scintilla</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	<function_decl><type><name pos:line="87" pos:column="9">TCarbonEvent</name></type> <name pos:line="87" pos:column="22">event</name><parameter_list pos:line="87" pos:column="27">( <param><decl><type><name pos:line="87" pos:column="29">inEvent</name></type></decl></param> )</parameter_list>;</function_decl>

	<comment type="line" pos:line="89" pos:column="9">// If the window is not active, let the standard window handler execute.</comment>
	<if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">( <expr><op:operator pos:line="90" pos:column="14">!</op:operator> <call><name pos:line="90" pos:column="16">IsWindowActive</name><argument_list pos:line="90" pos:column="30">( <argument><expr><name pos:line="90" pos:column="32">window</name></expr></argument> )</argument_list></call></expr> )</condition><then pos:line="90" pos:column="42"> <return pos:line="90" pos:column="43">return <expr><name pos:line="90" pos:column="50">eventNotHandledErr</name></expr>;</return></then></if>

	<decl_stmt><decl><type><specifier pos:line="92" pos:column="9">const</specifier> <name pos:line="92" pos:column="15">HIViewRef</name></type> <name pos:line="92" pos:column="25">rootView</name> <init pos:line="92" pos:column="34">= <expr><call><name pos:line="92" pos:column="36">HIViewGetRoot</name><argument_list pos:line="92" pos:column="49">( <argument><expr><name pos:line="92" pos:column="51">window</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="93" pos:column="9">assert</name><argument_list pos:line="93" pos:column="15">( <argument><expr><name pos:line="93" pos:column="17">rootView</name> <op:operator pos:line="93" pos:column="26">!=</op:operator> <name pos:line="93" pos:column="29">NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

	<if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">( <expr><call><name><name pos:line="95" pos:column="14">event</name><op:operator pos:line="95" pos:column="19">.</op:operator><name pos:line="95" pos:column="20">GetKind</name></name><argument_list pos:line="95" pos:column="27">()</argument_list></call> <op:operator pos:line="95" pos:column="30">==</op:operator> <name pos:line="95" pos:column="33">kEventMouseDown</name></expr> )</condition><then pos:line="95" pos:column="50">
		<block pos:line="96" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="97" pos:column="25">UInt32</name></type> <name pos:line="97" pos:column="32">inKeyModifiers</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="98" pos:column="25">event</name><op:operator pos:line="98" pos:column="30">.</op:operator><name pos:line="98" pos:column="31">GetParameter</name></name><argument_list pos:line="98" pos:column="43">( <argument><expr><name pos:line="98" pos:column="45">kEventParamKeyModifiers</name></expr></argument>, <argument><expr><op:operator pos:line="98" pos:column="70">&amp;</op:operator><name pos:line="98" pos:column="71">inKeyModifiers</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="100" pos:column="25">EventMouseButton</name></type> <name pos:line="100" pos:column="42">inMouseButton</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="101" pos:column="25">event</name><op:operator pos:line="101" pos:column="30">.</op:operator><name><name pos:line="101" pos:column="31">GetParameter</name><argument_list pos:line="101" pos:column="43">&lt;<argument><expr><name pos:line="101" pos:column="44">EventMouseButton</name></expr></argument>&gt;</argument_list></name></name><argument_list pos:line="101" pos:column="61">( <argument><expr><name pos:line="101" pos:column="63">kEventParamMouseButton</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="87">typeMouseButton</name></expr></argument>, <argument><expr><op:operator pos:line="101" pos:column="104">&amp;</op:operator><name pos:line="101" pos:column="105">inMouseButton</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
			<if pos:line="102" pos:column="25">if <condition pos:line="102" pos:column="28">(<expr><name pos:line="102" pos:column="29">inMouseButton</name> <op:operator pos:line="102" pos:column="43">==</op:operator> <name pos:line="102" pos:column="46">kEventMouseButtonTertiary</name></expr>)</condition><then pos:line="102" pos:column="72"> <block pos:line="102" pos:column="73">{
				<if pos:line="103" pos:column="33">if <condition pos:line="103" pos:column="36">(<expr><name pos:line="103" pos:column="37">inKeyModifiers</name> <op:operator pos:line="103" pos:column="52">&amp;</op:operator> <name pos:line="103" pos:column="54">optionKey</name></expr>)</condition><then pos:line="103" pos:column="64"> <block pos:line="103" pos:column="65">{
					<decl_stmt><decl><type><specifier pos:line="104" pos:column="41">const</specifier> <name pos:line="104" pos:column="47">char</name> <type:modifier pos:line="104" pos:column="52">*</type:modifier></type><name pos:line="104" pos:column="53">test</name> <init pos:line="104" pos:column="58">= <expr><lit:literal type="string" pos:line="104" pos:column="60">"\001This is a test calltip This is a test calltip This is a test calltip"</lit:literal></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="105" pos:column="41">scintilla</name><op:operator pos:line="105" pos:column="50">-&gt;</op:operator><name pos:line="105" pos:column="52">WndProc</name></name><argument_list pos:line="105" pos:column="59">( <argument><expr><name pos:line="105" pos:column="61">SCI_CALLTIPSHOW</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="105" pos:column="78">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="105" pos:column="81">(</op:operator><name pos:line="105" pos:column="82">long</name> <name pos:line="105" pos:column="87">int</name><op:operator pos:line="105" pos:column="90">)</op:operator><name pos:line="105" pos:column="91">test</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="106" pos:column="35">else <block pos:line="106" pos:column="40">{
					<decl_stmt><decl><type><specifier pos:line="107" pos:column="41">const</specifier> <name pos:line="107" pos:column="47">char</name> <type:modifier pos:line="107" pos:column="52">*</type:modifier></type><name pos:line="107" pos:column="53">list</name> <init pos:line="107" pos:column="58">= <expr><lit:literal type="string" pos:line="107" pos:column="60">"test_1?0 test_2 test_3 test_4 test_5 test_6 test_7 test_8 test_9 test_10 test_11 test_12"</lit:literal></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="108" pos:column="41">scintilla</name><op:operator pos:line="108" pos:column="50">-&gt;</op:operator><name pos:line="108" pos:column="52">WndProc</name></name><argument_list pos:line="108" pos:column="59">( <argument><expr><name pos:line="108" pos:column="61">SCI_AUTOCSHOW</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="108" pos:column="76">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="108" pos:column="79">(</op:operator><name pos:line="108" pos:column="80">long</name> <name pos:line="108" pos:column="85">int</name><op:operator pos:line="108" pos:column="88">)</op:operator><name pos:line="108" pos:column="89">list</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
				<return pos:line="110" pos:column="33">return <expr><name pos:line="110" pos:column="40">noErr</name></expr>;</return>
			}</block></then></if>
		}</block></then></if>

	<return pos:line="114" pos:column="9">return <expr><name pos:line="114" pos:column="16">eventNotHandledErr</name></expr>;</return>
}</block></function>

<function><type><name pos:line="117" pos:column="1">int</name></type> <name pos:line="117" pos:column="5">main</name><parameter_list pos:line="117" pos:column="9">(<param><decl><type><name pos:line="117" pos:column="10">int</name></type> <name pos:line="117" pos:column="14">argc</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="20">char</name><type:modifier pos:line="117" pos:column="24">*</type:modifier></type> <name><name pos:line="117" pos:column="26">argv</name><index pos:line="117" pos:column="30">[]</index></name></decl></param>)</parameter_list>
<block pos:line="118" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="119" pos:column="5">IBNibRef</name></type> 		<name pos:line="119" pos:column="25">nibRef</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="120" pos:column="5">WindowRef</name></type> 		<name pos:line="120" pos:column="25">window</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="122" pos:column="5">OSStatus</name></type>		<name pos:line="122" pos:column="25">err</name></decl>;</decl_stmt>

    <comment type="line" pos:line="124" pos:column="5">// Create a Nib reference passing the name of the nib file (without the .nib extension)</comment>
    <comment type="line" pos:line="125" pos:column="5">// CreateNibReference only searches into the application bundle.</comment>
    <expr_stmt><expr><name pos:line="126" pos:column="5">err</name> <op:operator pos:line="126" pos:column="9">=</op:operator> <call><name pos:line="126" pos:column="11">CreateNibReference</name><argument_list pos:line="126" pos:column="29">(<argument><expr><call><name pos:line="126" pos:column="30">CFSTR</name><argument_list pos:line="126" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="36">"main"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="126" pos:column="45">&amp;</op:operator><name pos:line="126" pos:column="46">nibRef</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="127" pos:column="5">require_noerr</name><argument_list pos:line="127" pos:column="18">( <argument><expr><name pos:line="127" pos:column="20">err</name></expr></argument>, <argument><expr><name pos:line="127" pos:column="25">CantGetNibRef</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="129" pos:column="5">// Once the nib reference is created, set the menu bar. "MainMenu" is the name of the menu bar</comment>
    <comment type="line" pos:line="130" pos:column="5">// object. This name is set in InterfaceBuilder when the nib is created.</comment>
    <expr_stmt><expr><name pos:line="131" pos:column="5">err</name> <op:operator pos:line="131" pos:column="9">=</op:operator> <call><name pos:line="131" pos:column="11">SetMenuBarFromNib</name><argument_list pos:line="131" pos:column="28">(<argument><expr><name pos:line="131" pos:column="29">nibRef</name></expr></argument>, <argument><expr><call><name pos:line="131" pos:column="37">CFSTR</name><argument_list pos:line="131" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="131" pos:column="43">"MenuBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="132" pos:column="5">require_noerr</name><argument_list pos:line="132" pos:column="18">( <argument><expr><name pos:line="132" pos:column="20">err</name></expr></argument>, <argument><expr><name pos:line="132" pos:column="25">CantSetMenuBar</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="134" pos:column="5">// Then create a window. "MainWindow" is the name of the window object. This name is set in</comment>
    <comment type="line" pos:line="135" pos:column="5">// InterfaceBuilder when the nib is created.</comment>
    <expr_stmt><expr><name pos:line="136" pos:column="5">err</name> <op:operator pos:line="136" pos:column="9">=</op:operator> <call><name pos:line="136" pos:column="11">CreateWindowFromNib</name><argument_list pos:line="136" pos:column="30">(<argument><expr><name pos:line="136" pos:column="31">nibRef</name></expr></argument>, <argument><expr><call><name pos:line="136" pos:column="39">CFSTR</name><argument_list pos:line="136" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="136" pos:column="45">"MainWindow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="136" pos:column="60">&amp;</op:operator><name pos:line="136" pos:column="61">window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="137" pos:column="5">require_noerr</name><argument_list pos:line="137" pos:column="18">( <argument><expr><name pos:line="137" pos:column="20">err</name></expr></argument>, <argument><expr><name pos:line="137" pos:column="25">CantCreateWindow</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="139" pos:column="5">// We don't need the nib reference anymore.</comment>
    <expr_stmt><expr><call><name pos:line="140" pos:column="5">DisposeNibReference</name><argument_list pos:line="140" pos:column="24">(<argument><expr><name pos:line="140" pos:column="25">nibRef</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name pos:line="142" pos:column="5">HIRect</name></type> <name pos:line="142" pos:column="12">boundsRect</name></decl>;</decl_stmt>
    <comment type="line" pos:line="143" pos:column="5">// GOOD and BAD methods off embedding into a window.  This is used</comment>
    <comment type="line" pos:line="144" pos:column="5">// to test Window::SetPositionRelative under different situations.</comment>
<cpp:define pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="145" pos:column="9">GOOD</name></cpp:macro></cpp:define>
<cpp:ifdef pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">ifdef</cpp:directive> <name pos:line="146" pos:column="8">GOOD</name></cpp:ifdef>
<cpp:ifdef pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">ifdef</cpp:directive> <name pos:line="147" pos:column="8">USE_CONTROL</name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="148" pos:column="5">ControlRef</name></type> <name pos:line="148" pos:column="16">root</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name pos:line="149" pos:column="5">GetRootControl</name><argument_list pos:line="149" pos:column="19">(<argument><expr><name pos:line="149" pos:column="20">window</name></expr></argument>, <argument><expr><op:operator pos:line="149" pos:column="28">&amp;</op:operator><name pos:line="149" pos:column="29">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="150" pos:column="1">#<cpp:directive pos:line="150" pos:column="2">else</cpp:directive></cpp:else>
    <decl_stmt><decl><type><name pos:line="151" pos:column="5">HIViewRef</name></type> <name pos:line="151" pos:column="15">root</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name pos:line="152" pos:column="5">HIViewFindByID</name><argument_list pos:line="152" pos:column="19">(<argument><expr><call><name pos:line="152" pos:column="20">HIViewGetRoot</name><argument_list pos:line="152" pos:column="33">(<argument><expr><name pos:line="152" pos:column="34">window</name></expr></argument>)</argument_list></call></expr></argument>,
    		   <argument><expr><name pos:line="153" pos:column="20">kHIViewWindowContentID</name></expr></argument>,
    		   <argument><expr><op:operator pos:line="154" pos:column="20">&amp;</op:operator><name pos:line="154" pos:column="21">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="155" pos:column="1">#<cpp:directive pos:line="155" pos:column="2">endif</cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="156" pos:column="5">HIViewGetBounds</name><argument_list pos:line="156" pos:column="20">(<argument><expr><name pos:line="156" pos:column="21">root</name></expr></argument>, <argument><expr><op:operator pos:line="156" pos:column="27">&amp;</op:operator><name pos:line="156" pos:column="28">boundsRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">else</cpp:directive></cpp:else> <comment type="line" pos:line="158" pos:column="7">// BAD like mozilla</comment>
    <decl_stmt><decl><type><name pos:line="159" pos:column="5">HIViewRef</name></type> <name pos:line="159" pos:column="15">root</name></decl>;</decl_stmt>
    <expr_stmt><expr><name pos:line="160" pos:column="5">root</name> <op:operator pos:line="160" pos:column="10">=</op:operator> <call><name pos:line="160" pos:column="12">HIViewGetRoot</name><argument_list pos:line="160" pos:column="25">(<argument><expr><name pos:line="160" pos:column="26">window</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name pos:line="162" pos:column="5">Rect</name></type> <name pos:line="162" pos:column="10">cBounds</name></decl><op:operator pos:line="162" pos:column="17">,</op:operator> <decl><type ref="prev"/><name pos:line="162" pos:column="19">sBounds</name></decl>;</decl_stmt>
    <expr_stmt><expr><call><name pos:line="163" pos:column="5">GetWindowBounds</name><argument_list pos:line="163" pos:column="20">(<argument><expr><name pos:line="163" pos:column="21">window</name></expr></argument>, <argument><expr><name pos:line="163" pos:column="29">kWindowContentRgn</name></expr></argument>, <argument><expr><op:operator pos:line="163" pos:column="48">&amp;</op:operator><name pos:line="163" pos:column="49">cBounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="164" pos:column="5">GetWindowBounds</name><argument_list pos:line="164" pos:column="20">(<argument><expr><name pos:line="164" pos:column="21">window</name></expr></argument>, <argument><expr><name pos:line="164" pos:column="29">kWindowStructureRgn</name></expr></argument>, <argument><expr><op:operator pos:line="164" pos:column="50">&amp;</op:operator><name pos:line="164" pos:column="51">sBounds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="165" pos:column="5">boundsRect</name><op:operator pos:line="165" pos:column="15">.</op:operator><name pos:line="165" pos:column="16">origin</name><op:operator pos:line="165" pos:column="22">.</op:operator><name pos:line="165" pos:column="23">x</name></name> <op:operator pos:line="165" pos:column="25">=</op:operator> <name><name pos:line="165" pos:column="27">cBounds</name><op:operator pos:line="165" pos:column="34">.</op:operator><name pos:line="165" pos:column="35">left</name></name> <op:operator pos:line="165" pos:column="40">-</op:operator> <name><name pos:line="165" pos:column="42">sBounds</name><op:operator pos:line="165" pos:column="49">.</op:operator><name pos:line="165" pos:column="50">left</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="166" pos:column="5">boundsRect</name><op:operator pos:line="166" pos:column="15">.</op:operator><name pos:line="166" pos:column="16">origin</name><op:operator pos:line="166" pos:column="22">.</op:operator><name pos:line="166" pos:column="23">y</name></name> <op:operator pos:line="166" pos:column="25">=</op:operator> <name><name pos:line="166" pos:column="27">cBounds</name><op:operator pos:line="166" pos:column="34">.</op:operator><name pos:line="166" pos:column="35">top</name></name> <op:operator pos:line="166" pos:column="39">-</op:operator> <name><name pos:line="166" pos:column="41">sBounds</name><op:operator pos:line="166" pos:column="48">.</op:operator><name pos:line="166" pos:column="49">top</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="167" pos:column="5">boundsRect</name><op:operator pos:line="167" pos:column="15">.</op:operator><name pos:line="167" pos:column="16">size</name><op:operator pos:line="167" pos:column="20">.</op:operator><name pos:line="167" pos:column="21">width</name></name> <op:operator pos:line="167" pos:column="27">=</op:operator> <name><name pos:line="167" pos:column="29">cBounds</name><op:operator pos:line="167" pos:column="36">.</op:operator><name pos:line="167" pos:column="37">right</name></name> <op:operator pos:line="167" pos:column="43">-</op:operator> <name><name pos:line="167" pos:column="45">cBounds</name><op:operator pos:line="167" pos:column="52">.</op:operator><name pos:line="167" pos:column="53">left</name></name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="168" pos:column="5">boundsRect</name><op:operator pos:line="168" pos:column="15">.</op:operator><name pos:line="168" pos:column="16">size</name><op:operator pos:line="168" pos:column="20">.</op:operator><name pos:line="168" pos:column="21">height</name></name> <op:operator pos:line="168" pos:column="28">=</op:operator> <name><name pos:line="168" pos:column="30">cBounds</name><op:operator pos:line="168" pos:column="37">.</op:operator><name pos:line="168" pos:column="38">bottom</name></name> <op:operator pos:line="168" pos:column="45">-</op:operator> <name><name pos:line="168" pos:column="47">cBounds</name><op:operator pos:line="168" pos:column="54">.</op:operator><name pos:line="168" pos:column="55">top</name></name></expr>;</expr_stmt>
<cpp:endif pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">endif</cpp:directive></cpp:endif>

    <comment type="line" pos:line="171" pos:column="5">// get a scintilla control, and add it to it's parent container</comment>
    <decl_stmt><decl><type><name pos:line="172" pos:column="5">HIViewRef</name></type> <name pos:line="172" pos:column="15">sciView</name></decl>;</decl_stmt>
    <expr_stmt><expr><name pos:line="173" pos:column="5">sciView</name> <op:operator pos:line="173" pos:column="13">=</op:operator> <call><name pos:line="173" pos:column="15">scintilla_new</name><argument_list pos:line="173" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="174" pos:column="5">HIViewAddSubview</name><argument_list pos:line="174" pos:column="21">(<argument><expr><name pos:line="174" pos:column="22">root</name></expr></argument>, <argument><expr><name pos:line="174" pos:column="28">sciView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="176" pos:column="9">// some scintilla init</comment>
	<decl_stmt><decl><type><name pos:line="177" pos:column="9">ScintillaMacOSX</name><type:modifier pos:line="177" pos:column="24">*</type:modifier></type> <name pos:line="177" pos:column="26">scintilla</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="178" pos:column="9">GetControlProperty</name><argument_list pos:line="178" pos:column="27">( <argument><expr><name pos:line="178" pos:column="29">sciView</name></expr></argument>, <argument><expr><name pos:line="178" pos:column="38">scintillaMacOSType</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="178" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><sizeof pos:line="178" pos:column="61">sizeof<argument_list pos:line="178" pos:column="67">( <argument><expr><name pos:line="178" pos:column="69">scintilla</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="178" pos:column="82">NULL</name></expr></argument>, <argument><expr><op:operator pos:line="178" pos:column="88">&amp;</op:operator><name pos:line="178" pos:column="89">scintilla</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="180" pos:column="9">scintilla</name><op:operator pos:line="180" pos:column="18">-&gt;</op:operator><name pos:line="180" pos:column="20">WndProc</name></name><argument_list pos:line="180" pos:column="27">( <argument><expr><name pos:line="180" pos:column="29">SCI_SETLEXER</name></expr></argument>, <argument><expr><name pos:line="180" pos:column="43">SCLEX_CPP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="180" pos:column="54">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="181" pos:column="9">scintilla</name><op:operator pos:line="181" pos:column="18">-&gt;</op:operator><name pos:line="181" pos:column="20">WndProc</name></name><argument_list pos:line="181" pos:column="27">( <argument><expr><name pos:line="181" pos:column="29">SCI_SETSTYLEBITS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="181" pos:column="47">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="181" pos:column="50">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="183" pos:column="9">scintilla</name><op:operator pos:line="183" pos:column="18">-&gt;</op:operator><name pos:line="183" pos:column="20">WndProc</name></name><argument_list pos:line="183" pos:column="27">(<argument><expr><name pos:line="183" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="183" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="183" pos:column="49">0x808080</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="183" pos:column="65">// White space</comment>
	<expr_stmt><expr><call><name><name pos:line="184" pos:column="9">scintilla</name><op:operator pos:line="184" pos:column="18">-&gt;</op:operator><name pos:line="184" pos:column="20">WndProc</name></name><argument_list pos:line="184" pos:column="27">(<argument><expr><name pos:line="184" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="184" pos:column="46">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="184" pos:column="49">0x007F00</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="184" pos:column="65">// Comment</comment>
	<expr_stmt><expr><call><name><name pos:line="185" pos:column="9">scintilla</name><op:operator pos:line="185" pos:column="18">-&gt;</op:operator><name pos:line="185" pos:column="20">WndProc</name></name><argument_list pos:line="185" pos:column="27">(<argument><expr><name pos:line="185" pos:column="28">SCI_STYLESETITALIC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="185" pos:column="48">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="185" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="185" pos:column="57">// Comment</comment>
	<expr_stmt><expr><call><name><name pos:line="186" pos:column="9">scintilla</name><op:operator pos:line="186" pos:column="18">-&gt;</op:operator><name pos:line="186" pos:column="20">WndProc</name></name><argument_list pos:line="186" pos:column="27">(<argument><expr><name pos:line="186" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="186" pos:column="46">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="186" pos:column="49">0x007F00</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="186" pos:column="65">// Line comment</comment>
	<expr_stmt><expr><call><name><name pos:line="187" pos:column="9">scintilla</name><op:operator pos:line="187" pos:column="18">-&gt;</op:operator><name pos:line="187" pos:column="20">WndProc</name></name><argument_list pos:line="187" pos:column="27">(<argument><expr><name pos:line="187" pos:column="28">SCI_STYLESETITALIC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="187" pos:column="48">2</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="187" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="187" pos:column="57">// Line comment</comment>
	<expr_stmt><expr><call><name><name pos:line="188" pos:column="9">scintilla</name><op:operator pos:line="188" pos:column="18">-&gt;</op:operator><name pos:line="188" pos:column="20">WndProc</name></name><argument_list pos:line="188" pos:column="27">(<argument><expr><name pos:line="188" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="188" pos:column="46">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="188" pos:column="49">0x3F703F</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="188" pos:column="65">// Doc comment</comment>
	<expr_stmt><expr><call><name><name pos:line="189" pos:column="9">scintilla</name><op:operator pos:line="189" pos:column="18">-&gt;</op:operator><name pos:line="189" pos:column="20">WndProc</name></name><argument_list pos:line="189" pos:column="27">(<argument><expr><name pos:line="189" pos:column="28">SCI_STYLESETITALIC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="189" pos:column="48">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="189" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="189" pos:column="57">// Doc comment</comment>
	<expr_stmt><expr><call><name><name pos:line="190" pos:column="9">scintilla</name><op:operator pos:line="190" pos:column="18">-&gt;</op:operator><name pos:line="190" pos:column="20">WndProc</name></name><argument_list pos:line="190" pos:column="27">(<argument><expr><name pos:line="190" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="190" pos:column="46">4</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="190" pos:column="49">0x7F7F00</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="190" pos:column="65">// Number</comment>
	<expr_stmt><expr><call><name><name pos:line="191" pos:column="9">scintilla</name><op:operator pos:line="191" pos:column="18">-&gt;</op:operator><name pos:line="191" pos:column="20">WndProc</name></name><argument_list pos:line="191" pos:column="27">(<argument><expr><name pos:line="191" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="191" pos:column="46">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="191" pos:column="49">0x7F0000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="191" pos:column="65">// Keyword</comment>
	<expr_stmt><expr><call><name><name pos:line="192" pos:column="9">scintilla</name><op:operator pos:line="192" pos:column="18">-&gt;</op:operator><name pos:line="192" pos:column="20">WndProc</name></name><argument_list pos:line="192" pos:column="27">(<argument><expr><name pos:line="192" pos:column="28">SCI_STYLESETBOLD</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="192" pos:column="46">5</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="192" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="192" pos:column="57">// Keyword</comment>
	<expr_stmt><expr><call><name><name pos:line="193" pos:column="9">scintilla</name><op:operator pos:line="193" pos:column="18">-&gt;</op:operator><name pos:line="193" pos:column="20">WndProc</name></name><argument_list pos:line="193" pos:column="27">(<argument><expr><name pos:line="193" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="193" pos:column="46">6</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="193" pos:column="49">0x7F007F</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="193" pos:column="65">// String</comment>
	<expr_stmt><expr><call><name><name pos:line="194" pos:column="9">scintilla</name><op:operator pos:line="194" pos:column="18">-&gt;</op:operator><name pos:line="194" pos:column="20">WndProc</name></name><argument_list pos:line="194" pos:column="27">(<argument><expr><name pos:line="194" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="194" pos:column="46">7</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="194" pos:column="49">0x7F007F</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="194" pos:column="65">// Character</comment>
	<expr_stmt><expr><call><name><name pos:line="195" pos:column="9">scintilla</name><op:operator pos:line="195" pos:column="18">-&gt;</op:operator><name pos:line="195" pos:column="20">WndProc</name></name><argument_list pos:line="195" pos:column="27">(<argument><expr><name pos:line="195" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="195" pos:column="46">8</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="195" pos:column="49">0x804080</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="195" pos:column="65">// UUID</comment>
	<expr_stmt><expr><call><name><name pos:line="196" pos:column="9">scintilla</name><op:operator pos:line="196" pos:column="18">-&gt;</op:operator><name pos:line="196" pos:column="20">WndProc</name></name><argument_list pos:line="196" pos:column="27">(<argument><expr><name pos:line="196" pos:column="28">SCI_STYLESETFORE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="196" pos:column="46">9</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="196" pos:column="49">0x007F7F</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="196" pos:column="65">// Preprocessor</comment>
	<expr_stmt><expr><call><name><name pos:line="197" pos:column="9">scintilla</name><op:operator pos:line="197" pos:column="18">-&gt;</op:operator><name pos:line="197" pos:column="20">WndProc</name></name><argument_list pos:line="197" pos:column="27">(<argument><expr><name pos:line="197" pos:column="28">SCI_STYLESETFORE</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="197" pos:column="45">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="197" pos:column="49">0x000000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="197" pos:column="65">// Operators</comment>
	<expr_stmt><expr><call><name><name pos:line="198" pos:column="9">scintilla</name><op:operator pos:line="198" pos:column="18">-&gt;</op:operator><name pos:line="198" pos:column="20">WndProc</name></name><argument_list pos:line="198" pos:column="27">(<argument><expr><name pos:line="198" pos:column="28">SCI_STYLESETBOLD</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="198" pos:column="45">10</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="198" pos:column="49">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="198" pos:column="57">// Operators</comment>
	<expr_stmt><expr><call><name><name pos:line="199" pos:column="9">scintilla</name><op:operator pos:line="199" pos:column="18">-&gt;</op:operator><name pos:line="199" pos:column="20">WndProc</name></name><argument_list pos:line="199" pos:column="27">(<argument><expr><name pos:line="199" pos:column="28">SCI_STYLESETFORE</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="199" pos:column="45">11</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="199" pos:column="49">0x000000</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="199" pos:column="65">// Identifiers</comment>


	<expr_stmt><expr><call><name><name pos:line="202" pos:column="9">scintilla</name><op:operator pos:line="202" pos:column="18">-&gt;</op:operator><name pos:line="202" pos:column="20">WndProc</name></name><argument_list pos:line="202" pos:column="27">(<argument><expr><name pos:line="202" pos:column="28">SCI_SETKEYWORDS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="202" pos:column="45">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="202" pos:column="48">(</op:operator><name pos:line="202" pos:column="49">sptr_t</name><op:operator pos:line="202" pos:column="55">)</op:operator><op:operator pos:line="202" pos:column="56">(</op:operator><name pos:line="202" pos:column="57">char</name> <op:operator pos:line="202" pos:column="62">*</op:operator><op:operator pos:line="202" pos:column="63">)</op:operator><name pos:line="202" pos:column="64">keywords</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="202" pos:column="81">// Keyword</comment>

	<comment type="block" pos:line="204" pos:column="9">/*
	these fail compilation on osx now
	scintilla-&gt;WndProc( SCI_SETPROPERTY, "fold", (long int)"1");
	scintilla-&gt;WndProc( SCI_SETPROPERTY, "fold.compact", (long int)"0");
	scintilla-&gt;WndProc( SCI_SETPROPERTY, "fold.comment", (long int)"1");
	scintilla-&gt;WndProc( SCI_SETPROPERTY, "fold.preprocessor", (long int)"1");
	*/</comment>

	<expr_stmt><expr><call><name><name pos:line="212" pos:column="9">scintilla</name><op:operator pos:line="212" pos:column="18">-&gt;</op:operator><name pos:line="212" pos:column="20">WndProc</name></name><argument_list pos:line="212" pos:column="27">( <argument><expr><name pos:line="212" pos:column="29">SCI_REGISTERIMAGE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="212" pos:column="48">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="212" pos:column="51">(</op:operator><name pos:line="212" pos:column="52">long</name> <name pos:line="212" pos:column="57">int</name><op:operator pos:line="212" pos:column="60">)</op:operator><name pos:line="212" pos:column="61">ac_class</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="214" pos:column="9">scintilla</name><op:operator pos:line="214" pos:column="18">-&gt;</op:operator><name pos:line="214" pos:column="20">WndProc</name></name><argument_list pos:line="214" pos:column="27">( <argument><expr><name pos:line="214" pos:column="29">SCI_SETMARGINTYPEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="214" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="214" pos:column="52">(</op:operator><name pos:line="214" pos:column="53">long</name> <name pos:line="214" pos:column="58">int</name><op:operator pos:line="214" pos:column="61">)</op:operator><name pos:line="214" pos:column="62">SC_MARGIN_NUMBER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="215" pos:column="9">scintilla</name><op:operator pos:line="215" pos:column="18">-&gt;</op:operator><name pos:line="215" pos:column="20">WndProc</name></name><argument_list pos:line="215" pos:column="27">( <argument><expr><name pos:line="215" pos:column="29">SCI_SETMARGINWIDTHN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="215" pos:column="50">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="215" pos:column="53">(</op:operator><name pos:line="215" pos:column="54">long</name> <name pos:line="215" pos:column="59">int</name><op:operator pos:line="215" pos:column="62">)</op:operator><lit:literal type="number" pos:line="215" pos:column="63">30</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="216" pos:column="9">scintilla</name><op:operator pos:line="216" pos:column="18">-&gt;</op:operator><name pos:line="216" pos:column="20">WndProc</name></name><argument_list pos:line="216" pos:column="27">( <argument><expr><name pos:line="216" pos:column="29">SCI_SETMARGINTYPEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="216" pos:column="49">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="216" pos:column="52">(</op:operator><name pos:line="216" pos:column="53">long</name> <name pos:line="216" pos:column="58">int</name><op:operator pos:line="216" pos:column="61">)</op:operator><name pos:line="216" pos:column="62">SC_MARGIN_SYMBOL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="217" pos:column="9">scintilla</name><op:operator pos:line="217" pos:column="18">-&gt;</op:operator><name pos:line="217" pos:column="20">WndProc</name></name><argument_list pos:line="217" pos:column="27">( <argument><expr><name pos:line="217" pos:column="29">SCI_SETMARGINMASKN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="217" pos:column="49">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="217" pos:column="52">(</op:operator><name pos:line="217" pos:column="53">long</name> <name pos:line="217" pos:column="58">int</name><op:operator pos:line="217" pos:column="61">)</op:operator><name pos:line="217" pos:column="62">SC_MASK_FOLDERS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="218" pos:column="9">scintilla</name><op:operator pos:line="218" pos:column="18">-&gt;</op:operator><name pos:line="218" pos:column="20">WndProc</name></name><argument_list pos:line="218" pos:column="27">( <argument><expr><name pos:line="218" pos:column="29">SCI_SETMARGINWIDTHN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="218" pos:column="50">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="218" pos:column="53">(</op:operator><name pos:line="218" pos:column="54">long</name> <name pos:line="218" pos:column="59">int</name><op:operator pos:line="218" pos:column="62">)</op:operator><lit:literal type="number" pos:line="218" pos:column="63">20</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="219" pos:column="9">scintilla</name><op:operator pos:line="219" pos:column="18">-&gt;</op:operator><name pos:line="219" pos:column="20">WndProc</name></name><argument_list pos:line="219" pos:column="27">( <argument><expr><name pos:line="219" pos:column="29">SCI_SETMARGINTYPEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="219" pos:column="49">2</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="219" pos:column="52">(</op:operator><name pos:line="219" pos:column="53">long</name> <name pos:line="219" pos:column="58">int</name><op:operator pos:line="219" pos:column="61">)</op:operator><name pos:line="219" pos:column="62">SC_MARGIN_SYMBOL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="220" pos:column="9">scintilla</name><op:operator pos:line="220" pos:column="18">-&gt;</op:operator><name pos:line="220" pos:column="20">WndProc</name></name><argument_list pos:line="220" pos:column="27">( <argument><expr><name pos:line="220" pos:column="29">SCI_SETMARGINWIDTHN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="220" pos:column="50">2</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="220" pos:column="53">(</op:operator><name pos:line="220" pos:column="54">long</name> <name pos:line="220" pos:column="59">int</name><op:operator pos:line="220" pos:column="62">)</op:operator><lit:literal type="number" pos:line="220" pos:column="63">16</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="221" pos:column="9">//scintilla-&gt;WndProc( SCI_SETWRAPMODE, SC_WRAP_WORD, 0);</comment>
	<comment type="line" pos:line="222" pos:column="9">//scintilla-&gt;WndProc( SCI_SETWRAPVISUALFLAGS, SC_WRAPVISUALFLAG_END | SC_WRAPVISUALFLAG_START, 0);</comment>

    <comment type="line" pos:line="224" pos:column="5">// set the size of scintilla to the size of the container</comment>
    <expr_stmt><expr><call><name pos:line="225" pos:column="5">HIViewSetFrame</name><argument_list pos:line="225" pos:column="19">( <argument><expr><name pos:line="225" pos:column="21">sciView</name></expr></argument>, <argument><expr><op:operator pos:line="225" pos:column="30">&amp;</op:operator><name pos:line="225" pos:column="31">boundsRect</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="227" pos:column="5">// bind the size of scintilla to the size of it's container window</comment>
    <expr_stmt><expr><call><name pos:line="228" pos:column="5">HIViewSetLayoutInfo</name><argument_list pos:line="228" pos:column="24">(<argument><expr><name pos:line="228" pos:column="25">sciView</name></expr></argument>, <argument><expr><op:operator pos:line="228" pos:column="34">&amp;</op:operator><name pos:line="228" pos:column="35">kBindToParentLayout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="230" pos:column="5">// setup some event handling</comment>
    <decl_stmt><decl><type><specifier pos:line="231" pos:column="5">static</specifier> <specifier pos:line="231" pos:column="12">const</specifier> <name pos:line="231" pos:column="18">EventTypeSpec</name></type> <name><name pos:line="231" pos:column="32">kWindowMouseEvents</name><index pos:line="231" pos:column="50">[]</index></name> <init pos:line="231" pos:column="53">=
      <expr><block pos:line="232" pos:column="7">{
	<expr><block pos:line="233" pos:column="9">{ <expr><name pos:line="233" pos:column="11">kEventClassMouse</name></expr>, <expr><name pos:line="233" pos:column="29">kEventMouseDown</name></expr> }</block></expr>,
      }</block></expr></init></decl>;</decl_stmt>

    <expr_stmt><expr><call><name pos:line="236" pos:column="5">InstallEventHandler</name><argument_list pos:line="236" pos:column="24">( <argument><expr><call><name pos:line="236" pos:column="26">GetWindowEventTarget</name><argument_list pos:line="236" pos:column="46">( <argument><expr><name pos:line="236" pos:column="48">window</name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><name pos:line="236" pos:column="58">WindowEventHandler</name></expr></argument>,
			 <argument><expr><call><name pos:line="237" pos:column="26">GetEventTypeCount</name><argument_list pos:line="237" pos:column="43">( <argument><expr><name pos:line="237" pos:column="45">kWindowMouseEvents</name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><name pos:line="237" pos:column="67">kWindowMouseEvents</name></expr></argument>, <argument><expr><op:operator pos:line="237" pos:column="87">&amp;</op:operator><name pos:line="237" pos:column="88">sciView</name></expr></argument>, <argument><expr><name pos:line="237" pos:column="97">NULL</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="239" pos:column="5">// show scintilla</comment>
    <expr_stmt><expr><call><name pos:line="240" pos:column="5">ShowControl</name><argument_list pos:line="240" pos:column="16">(<argument><expr><name pos:line="240" pos:column="17">sciView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt><expr><call><name pos:line="242" pos:column="5">SetAutomaticControlDragTrackingEnabledForWindow</name><argument_list pos:line="242" pos:column="52">(<argument><expr><name pos:line="242" pos:column="53">window</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="242" pos:column="61">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="244" pos:column="5">// The window was created hidden so show it.</comment>
    <expr_stmt><expr><call><name pos:line="245" pos:column="5">ShowWindow</name><argument_list pos:line="245" pos:column="15">( <argument><expr><name pos:line="245" pos:column="17">window</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:line="247" pos:column="5">// Call the event loop</comment>
    <expr_stmt><expr><call><name pos:line="248" pos:column="5">RunApplicationEventLoop</name><argument_list pos:line="248" pos:column="28">()</argument_list></call></expr>;</expr_stmt>

<label><name pos:line="250" pos:column="1">CantCreateWindow</name>:</label>
<label><name pos:line="251" pos:column="1">CantSetMenuBar</name>:</label>
<label><name pos:line="252" pos:column="1">CantGetNibRef</name>:</label>
	<return pos:line="253" pos:column="9">return <expr><name pos:line="253" pos:column="16">err</name></expr>;</return>
}</block></function>

</unit>
