<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\WindowsDlg\WindowsDlg.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">WINDOWS_DLG_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">WINDOWS_DLG_H</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">SIZABLE_DLG_H</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"SizeableDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="34" pos:column="8">//SIZABLE_DLG_H</comment>

<class_decl pos:line="36" pos:column="1">class <name pos:line="36" pos:column="7">DocTabView</name>;</class_decl>
<class_decl pos:line="37" pos:column="1">class <name pos:line="37" pos:column="7">TiXmlNodeA</name>;</class_decl>

<typedef pos:line="39" pos:column="1">typedef <type><enum pos:line="39" pos:column="9">enum <block pos:line="39" pos:column="14">{
	<decl><name pos:line="40" pos:column="9">WDT_ACTIVATE</name> <init pos:line="40" pos:column="22">= <expr><lit:literal type="number" pos:line="40" pos:column="24">1</lit:literal></expr></init></decl><op:operator pos:line="40" pos:column="25">,</op:operator>
	<decl><name pos:line="41" pos:column="9">WDT_SAVE</name> <init pos:line="41" pos:column="18">= <expr><lit:literal type="number" pos:line="41" pos:column="20">2</lit:literal></expr></init></decl><op:operator pos:line="41" pos:column="21">,</op:operator>
	<decl><name pos:line="42" pos:column="9">WDT_CLOSE</name> <init pos:line="42" pos:column="19">= <expr><lit:literal type="number" pos:line="42" pos:column="21">3</lit:literal></expr></init></decl><op:operator pos:line="42" pos:column="22">,</op:operator>
	<decl><name pos:line="43" pos:column="9">WDT_SORT</name> <init pos:line="43" pos:column="18">= <expr><lit:literal type="number" pos:line="43" pos:column="20">4</lit:literal></expr></init></decl><op:operator pos:line="43" pos:column="21">,</op:operator>
}</block></enum></type> <name pos:line="44" pos:column="3">WinDlgNotifyType</name>;</typedef>


<struct pos:line="47" pos:column="1">struct <name pos:line="47" pos:column="8">NMWINDLG</name> <super pos:line="47" pos:column="17">: <specifier pos:line="47" pos:column="19">public</specifier> <name pos:line="47" pos:column="26">NMHDR</name></super> <block pos:line="47" pos:column="32">{<public type="default" pos:line="47" pos:column="33">

	<decl_stmt><decl><type><name pos:line="49" pos:column="9">BOOL</name></type> <name pos:line="49" pos:column="14">processed</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="50" pos:column="9">WinDlgNotifyType</name></type> <name pos:line="50" pos:column="26">type</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="51" pos:column="9">UINT</name></type> <name pos:line="51" pos:column="14">curSel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="52" pos:column="9">UINT</name></type> <name pos:line="52" pos:column="14">nItems</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="53" pos:column="9">UINT</name> <type:modifier pos:line="53" pos:column="14">*</type:modifier></type><name pos:line="53" pos:column="15">Items</name></decl>;</decl_stmt>

	<comment type="line" pos:line="55" pos:column="9">// ctor: initialize to zeroes</comment>
	<constructor><name pos:line="56" pos:column="9">NMWINDLG</name><parameter_list pos:line="56" pos:column="17">()</parameter_list> <block pos:line="56" pos:column="20">{ <expr_stmt><expr><call><name pos:line="56" pos:column="22">memset</name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">this</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="56" pos:column="34">0</lit:literal></expr></argument>,<argument><expr><sizeof pos:line="56" pos:column="36">sizeof<argument_list pos:line="56" pos:column="42">(<argument><expr><name pos:line="56" pos:column="43">NMWINDLG</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> }</block></constructor>
</public>}</block>;</struct>

<decl_stmt><decl><type><specifier pos:line="59" pos:column="1">extern</specifier> <specifier pos:line="59" pos:column="8">const</specifier> <name pos:line="59" pos:column="14">UINT</name></type> <name pos:line="59" pos:column="19">WDN_NOTIFY</name></decl>;</decl_stmt>


<class pos:line="62" pos:column="1">class <name pos:line="62" pos:column="7">WindowsDlg</name> <super pos:line="62" pos:column="18">: <specifier pos:line="62" pos:column="20">public</specifier> <name pos:line="62" pos:column="27">SizeableDlg</name></super>
<block pos:line="63" pos:column="1">{<private type="default" pos:line="63" pos:column="2">
	<typedef pos:line="64" pos:column="9">typedef <type><name pos:line="64" pos:column="17">SizeableDlg</name></type> <name pos:line="64" pos:column="29">MyBaseClass</name>;</typedef>

	<class pos:line="66" pos:column="9">class <name pos:line="66" pos:column="15">CachedValue</name>
	<block pos:line="67" pos:column="9">{<private type="default" pos:line="67" pos:column="10">
		<decl_stmt><decl><type><name pos:line="68" pos:column="17">generic_string</name></type> <name pos:line="68" pos:column="32">fullname</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="69" pos:column="17">int</name></type> <name pos:line="69" pos:column="21">index</name></decl>;</decl_stmt>
	</private>}</block>;</class>

</private><public pos:line="72" pos:column="1">public :
	<constructor_decl><name pos:line="73" pos:column="9">WindowsDlg</name><parameter_list pos:line="73" pos:column="19">()</parameter_list>;</constructor_decl>
	<function_decl><type><name pos:line="74" pos:column="9">int</name></type> <name pos:line="74" pos:column="13">doDialog</name><parameter_list pos:line="74" pos:column="21">(<param><decl><type><name pos:line="74" pos:column="22">TiXmlNodeA</name> <type:modifier pos:line="74" pos:column="33">*</type:modifier></type><name pos:line="74" pos:column="34">dlgNode</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="75" pos:column="9">virtual</specifier> <name pos:line="75" pos:column="17">void</name></type> <name pos:line="75" pos:column="22">init</name><parameter_list pos:line="75" pos:column="26">(<param><decl><type><name pos:line="75" pos:column="27">HINSTANCE</name></type> <name pos:line="75" pos:column="37">hInst</name></decl></param>, <param><decl><type><name pos:line="75" pos:column="44">HWND</name></type> <name pos:line="75" pos:column="49">parent</name></decl></param>, <param><decl><type><name pos:line="75" pos:column="57">DocTabView</name> <type:modifier pos:line="75" pos:column="68">*</type:modifier></type><name pos:line="75" pos:column="69">pTab</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="77" pos:column="9">void</name></type> <name pos:line="77" pos:column="14">doRefresh</name><parameter_list pos:line="77" pos:column="23">(<param><decl><type><name pos:line="77" pos:column="24">bool</name></type> <name pos:line="77" pos:column="29">invalidate</name> <init pos:line="77" pos:column="40">= <expr><lit:literal type="boolean" pos:line="77" pos:column="42">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="78" pos:column="9">bool</name></type> <name pos:line="78" pos:column="14">changeDlgLang</name><parameter_list pos:line="78" pos:column="27">()</parameter_list>;</function_decl>

</public><protected pos:line="80" pos:column="1">protected :
	<function_decl><type><specifier pos:line="81" pos:column="9">virtual</specifier> <name pos:line="81" pos:column="17">BOOL</name> <name pos:line="81" pos:column="22">CALLBACK</name></type> <name pos:line="81" pos:column="31">run_dlgProc</name><parameter_list pos:line="81" pos:column="42">(<param><decl><type><name pos:line="81" pos:column="43">UINT</name></type> <name pos:line="81" pos:column="48">message</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="57">WPARAM</name></type> <name pos:line="81" pos:column="64">wParam</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="72">LPARAM</name></type> <name pos:line="81" pos:column="79">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="82" pos:column="9">virtual</specifier> <name pos:line="82" pos:column="17">BOOL</name></type> <name pos:line="82" pos:column="22">onInitDialog</name><parameter_list pos:line="82" pos:column="34">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="83" pos:column="9">virtual</specifier> <name pos:line="83" pos:column="17">void</name></type> <name pos:line="83" pos:column="22">onSize</name><parameter_list pos:line="83" pos:column="28">(<param><decl><type><name pos:line="83" pos:column="29">UINT</name></type> <name pos:line="83" pos:column="34">nType</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="41">int</name></type> <name pos:line="83" pos:column="45">cx</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="49">int</name></type> <name pos:line="83" pos:column="53">cy</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="84" pos:column="9">virtual</specifier> <name pos:line="84" pos:column="17">void</name></type> <name pos:line="84" pos:column="22">onGetMinMaxInfo</name><parameter_list pos:line="84" pos:column="37">(<param><decl><type><name pos:line="84" pos:column="38">MINMAXINFO</name><type:modifier pos:line="84" pos:column="48">*</type:modifier></type> <name pos:line="84" pos:column="50">lpMMI</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="85" pos:column="9">virtual</specifier> <name pos:line="85" pos:column="17">LRESULT</name></type> <name pos:line="85" pos:column="25">onWinMgr</name><parameter_list pos:line="85" pos:column="33">(<param><decl><type><name pos:line="85" pos:column="34">WPARAM</name></type> <name pos:line="85" pos:column="41">wp</name></decl></param>, <param><decl><type><name pos:line="85" pos:column="45">LPARAM</name></type> <name pos:line="85" pos:column="52">lp</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="86" pos:column="9">virtual</specifier> <name pos:line="86" pos:column="17">void</name></type> <name pos:line="86" pos:column="22">destroy</name><parameter_list pos:line="86" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="87" pos:column="9">void</name></type> <name pos:line="87" pos:column="14">fitColumnsToSize</name><parameter_list pos:line="87" pos:column="30">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="88" pos:column="9">void</name></type> <name pos:line="88" pos:column="14">resetSelection</name><parameter_list pos:line="88" pos:column="28">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="89" pos:column="9">void</name></type> <name pos:line="89" pos:column="14">doSave</name><parameter_list pos:line="89" pos:column="20">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="90" pos:column="9">void</name></type> <name pos:line="90" pos:column="14">doClose</name><parameter_list pos:line="90" pos:column="21">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="91" pos:column="9">void</name></type> <name pos:line="91" pos:column="14">doSortToTabs</name><parameter_list pos:line="91" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="92" pos:column="9">void</name></type> <name pos:line="92" pos:column="14">updateButtonState</name><parameter_list pos:line="92" pos:column="31">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="93" pos:column="9">void</name></type> <name pos:line="93" pos:column="14">activateCurrent</name><parameter_list pos:line="93" pos:column="29">()</parameter_list>;</function_decl>

	<decl_stmt><decl><type><name pos:line="95" pos:column="9">HWND</name></type> <name pos:line="95" pos:column="14">_hList</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="96" pos:column="9">static</specifier> <name pos:line="96" pos:column="16">RECT</name></type> <name pos:line="96" pos:column="21">_lastKnownLocation</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="97" pos:column="9">SIZE</name></type> <name pos:line="97" pos:column="14">_szMinButton</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="98" pos:column="9">SIZE</name></type> <name pos:line="98" pos:column="14">_szMinListCtrl</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="99" pos:column="9">DocTabView</name> <type:modifier pos:line="99" pos:column="20">*</type:modifier></type><name pos:line="99" pos:column="21">_pTab</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="100" pos:column="9">std</name><op:operator pos:line="100" pos:column="12">::</op:operator><name><name pos:line="100" pos:column="14">vector</name><argument_list pos:line="100" pos:column="20">&lt;<argument><expr><name pos:line="100" pos:column="21">int</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="100" pos:column="26">_idxMap</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="101" pos:column="9">int</name></type> <name pos:line="101" pos:column="13">_lastSort</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="102" pos:column="9">bool</name></type> <name pos:line="102" pos:column="14">_isSorted</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="103" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="103" pos:column="20">*</type:modifier></type><name pos:line="103" pos:column="21">_dlgNode</name></decl>;</decl_stmt>

</protected><private pos:line="105" pos:column="1">private:
	<function_decl><type><specifier pos:line="106" pos:column="9">virtual</specifier> <name pos:line="106" pos:column="17">void</name></type> <name pos:line="106" pos:column="22">init</name><parameter_list pos:line="106" pos:column="26">(<param><decl><type><name pos:line="106" pos:column="27">HINSTANCE</name></type> <name pos:line="106" pos:column="37">hInst</name></decl></param>, <param><decl><type><name pos:line="106" pos:column="44">HWND</name></type> <name pos:line="106" pos:column="49">parent</name></decl></param>)</parameter_list>;</function_decl>	
</private>}</block>;</class>

<class pos:line="109" pos:column="1">class <name pos:line="109" pos:column="7">WindowsMenu</name>
<block pos:line="110" pos:column="1">{<private type="default" pos:line="110" pos:column="2">
</private><public pos:line="111" pos:column="1">public:
	<constructor_decl><name pos:line="112" pos:column="9">WindowsMenu</name><parameter_list pos:line="112" pos:column="20">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="113" pos:column="9">~<name pos:line="113" pos:column="10">WindowsMenu</name></name><parameter_list pos:line="113" pos:column="21">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="114" pos:column="9">void</name></type> <name pos:line="114" pos:column="14">init</name><parameter_list pos:line="114" pos:column="18">(<param><decl><type><name pos:line="114" pos:column="19">HINSTANCE</name></type> <name pos:line="114" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="114" pos:column="36">HMENU</name></type> <name pos:line="114" pos:column="42">hMainMenu</name></decl></param>, <param><decl><type><specifier pos:line="114" pos:column="53">const</specifier> <name pos:line="114" pos:column="59">TCHAR</name> <type:modifier pos:line="114" pos:column="65">*</type:modifier></type><name pos:line="114" pos:column="66">translation</name></decl></param>)</parameter_list>;</function_decl> 
	<comment type="line" pos:line="115" pos:column="9">//void initMenu(HMENU hMenu, ScintillaEditView *pView);</comment>
	<function_decl><type><name pos:line="116" pos:column="9">void</name></type> <name pos:line="116" pos:column="14">initPopupMenu</name><parameter_list pos:line="116" pos:column="27">(<param><decl><type><name pos:line="116" pos:column="28">HMENU</name></type> <name pos:line="116" pos:column="34">hMenu</name></decl></param>, <param><decl><type><name pos:line="116" pos:column="41">DocTabView</name> <type:modifier pos:line="116" pos:column="52">*</type:modifier></type><name pos:line="116" pos:column="53">pTab</name></decl></param>)</parameter_list>;</function_decl>
	<comment type="line" pos:line="117" pos:column="9">//void uninitPopupMenu(HMENU hMenu, ScintillaEditView *pView);</comment>
</public><private pos:line="118" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="119" pos:column="9">HMENU</name></type> <name pos:line="119" pos:column="15">_hMenu</name></decl>;</decl_stmt>
</private>}</block>;</class>


<cpp:endif pos:line="123" pos:column="1">#<cpp:directive pos:line="123" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="123" pos:column="8">//WINDOWS_DLG_H</comment>
</unit>
