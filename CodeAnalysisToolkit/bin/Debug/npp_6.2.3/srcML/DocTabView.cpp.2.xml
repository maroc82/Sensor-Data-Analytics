<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\ScitillaComponent\DocTabView.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"DocTabView.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"ScintillaEditView.h"</lit:literal></cpp:file></cpp:include>

<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">_WIN32_IE</name></cpp:ifndef>
<cpp:define pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="34" pos:column="9">_WIN32_IE</name></cpp:macro>	<cpp:value pos:line="34" pos:column="25">0x0600</cpp:value></cpp:define>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">//_WIN32_IE</comment>


<decl_stmt><decl><type><name pos:line="38" pos:column="1">bool</name></type> <name><name pos:line="38" pos:column="6">DocTabView</name><op:operator pos:line="38" pos:column="16">::</op:operator><name pos:line="38" pos:column="18">_hideTabBarStatus</name></name> <init pos:line="38" pos:column="36">= <expr><lit:literal type="boolean" pos:line="38" pos:column="38">false</lit:literal></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="40" pos:column="1">void</name></type> <name><name pos:line="40" pos:column="6">DocTabView</name><op:operator pos:line="40" pos:column="16">::</op:operator><name pos:line="40" pos:column="18">addBuffer</name></name><parameter_list pos:line="40" pos:column="27">(<param><decl><type><name pos:line="40" pos:column="28">BufferID</name></type> <name pos:line="40" pos:column="37">buffer</name></decl></param>)</parameter_list> <block pos:line="40" pos:column="45">{
	<if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">buffer</name> <op:operator pos:line="41" pos:column="20">==</op:operator> <name pos:line="41" pos:column="23">BUFFER_INVALID</name></expr>)</condition><then pos:line="41" pos:column="38">	<comment type="line" pos:line="41" pos:column="41">//valid only</comment>
		<return pos:line="42" pos:column="17">return;</return></then></if>
	<if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name><name pos:line="43" pos:column="13">this</name><op:operator pos:line="43" pos:column="17">-&gt;</op:operator><name pos:line="43" pos:column="19">getIndexByBuffer</name></name><argument_list pos:line="43" pos:column="35">(<argument><expr><name pos:line="43" pos:column="36">buffer</name></expr></argument>)</argument_list></call> <op:operator pos:line="43" pos:column="44">!=</op:operator> <op:operator pos:line="43" pos:column="47">-</op:operator><lit:literal type="number" pos:line="43" pos:column="48">1</lit:literal></expr>)</condition><then pos:line="43" pos:column="50">	<comment type="line" pos:line="43" pos:column="57">//no duplicates</comment>
		<return pos:line="44" pos:column="17">return;</return></then></if>
	<decl_stmt><decl><type><name pos:line="45" pos:column="9">Buffer</name> <type:modifier pos:line="45" pos:column="16">*</type:modifier></type> <name pos:line="45" pos:column="18">buf</name> <init pos:line="45" pos:column="22">= <expr><call><name><name pos:line="45" pos:column="24">MainFileManager</name><op:operator pos:line="45" pos:column="39">-&gt;</op:operator><name pos:line="45" pos:column="41">getBufferByID</name></name><argument_list pos:line="45" pos:column="54">(<argument><expr><name pos:line="45" pos:column="55">buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="46" pos:column="9">TCITEM</name></type> <name pos:line="46" pos:column="16">tie</name></decl>;</decl_stmt> 
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">tie</name><op:operator pos:line="47" pos:column="12">.</op:operator><name pos:line="47" pos:column="13">mask</name></name> <op:operator pos:line="47" pos:column="18">=</op:operator> <name pos:line="47" pos:column="20">TCIF_TEXT</name> <op:operator pos:line="47" pos:column="30">|</op:operator> <name pos:line="47" pos:column="32">TCIF_IMAGE</name> <op:operator pos:line="47" pos:column="43">|</op:operator> <name pos:line="47" pos:column="45">TCIF_PARAM</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="49" pos:column="9">int</name></type> <name pos:line="49" pos:column="13">index</name> <init pos:line="49" pos:column="19">= <expr><op:operator pos:line="49" pos:column="21">-</op:operator><lit:literal type="number" pos:line="49" pos:column="22">1</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">_hasImgLst</name></expr>)</condition><then pos:line="50" pos:column="24">
		<expr_stmt><expr><name pos:line="51" pos:column="17">index</name> <op:operator pos:line="51" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="51" pos:column="25">0</lit:literal></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><name><name pos:line="52" pos:column="9">tie</name><op:operator pos:line="52" pos:column="12">.</op:operator><name pos:line="52" pos:column="13">iImage</name></name> <op:operator pos:line="52" pos:column="20">=</op:operator> <name pos:line="52" pos:column="22">index</name></expr>;</expr_stmt> 
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">tie</name><op:operator pos:line="53" pos:column="12">.</op:operator><name pos:line="53" pos:column="13">pszText</name></name> <op:operator pos:line="53" pos:column="21">=</op:operator> <op:operator pos:line="53" pos:column="23">(</op:operator><name pos:line="53" pos:column="24">TCHAR</name> <op:operator pos:line="53" pos:column="30">*</op:operator><op:operator pos:line="53" pos:column="31">)</op:operator><call><name><name pos:line="53" pos:column="32">buf</name><op:operator pos:line="53" pos:column="35">-&gt;</op:operator><name pos:line="53" pos:column="37">getFileName</name></name><argument_list pos:line="53" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="54" pos:column="9">tie</name><op:operator pos:line="54" pos:column="12">.</op:operator><name pos:line="54" pos:column="13">lParam</name></name> <op:operator pos:line="54" pos:column="20">=</op:operator> <op:operator pos:line="54" pos:column="22">(</op:operator><name pos:line="54" pos:column="23">LPARAM</name><op:operator pos:line="54" pos:column="29">)</op:operator><name pos:line="54" pos:column="30">buffer</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="55" pos:column="9">::</op:operator><name pos:line="55" pos:column="11">SendMessage</name></name><argument_list pos:line="55" pos:column="22">(<argument><expr><name pos:line="55" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="55" pos:column="31">TCM_INSERTITEM</name></expr></argument>, <argument><expr><name pos:line="55" pos:column="47">_nbItem</name><op:operator pos:line="55" pos:column="54">++</op:operator></expr></argument>, <argument><expr><call><name><name pos:line="55" pos:column="58">reinterpret_cast</name><argument_list pos:line="55" pos:column="74">&lt;<argument><expr><name pos:line="55" pos:column="75">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="55" pos:column="82">(<argument><expr><op:operator pos:line="55" pos:column="83">&amp;</op:operator><name pos:line="55" pos:column="84">tie</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="56" pos:column="9">bufferUpdated</name><argument_list pos:line="56" pos:column="22">(<argument><expr><name pos:line="56" pos:column="23">buf</name></expr></argument>, <argument><expr><name pos:line="56" pos:column="28">BufferChangeMask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="58" pos:column="9">::</op:operator><name pos:line="58" pos:column="11">SendMessage</name></name><argument_list pos:line="58" pos:column="22">(<argument><expr><name pos:line="58" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="33">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="58" pos:column="42">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="58" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="61" pos:column="1">void</name></type> <name><name pos:line="61" pos:column="6">DocTabView</name><op:operator pos:line="61" pos:column="16">::</op:operator><name pos:line="61" pos:column="18">closeBuffer</name></name><parameter_list pos:line="61" pos:column="29">(<param><decl><type><name pos:line="61" pos:column="30">BufferID</name></type> <name pos:line="61" pos:column="39">buffer</name></decl></param>)</parameter_list> <block pos:line="61" pos:column="47">{
	<decl_stmt><decl><type><name pos:line="62" pos:column="9">int</name></type> <name pos:line="62" pos:column="13">indexToClose</name> <init pos:line="62" pos:column="26">= <expr><call><name pos:line="62" pos:column="28">getIndexByBuffer</name><argument_list pos:line="62" pos:column="44">(<argument><expr><name pos:line="62" pos:column="45">buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="63" pos:column="9">deletItemAt</name><argument_list pos:line="63" pos:column="20">(<argument><expr><op:operator pos:line="63" pos:column="21">(</op:operator><name pos:line="63" pos:column="22">size_t</name><op:operator pos:line="63" pos:column="28">)</op:operator><name pos:line="63" pos:column="29">indexToClose</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="65" pos:column="9">::</op:operator><name pos:line="65" pos:column="11">SendMessage</name></name><argument_list pos:line="65" pos:column="22">(<argument><expr><name pos:line="65" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="65" pos:column="33">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="65" pos:column="42">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="65" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="68" pos:column="1">bool</name></type> <name><name pos:line="68" pos:column="6">DocTabView</name><op:operator pos:line="68" pos:column="16">::</op:operator><name pos:line="68" pos:column="18">activateBuffer</name></name><parameter_list pos:line="68" pos:column="32">(<param><decl><type><name pos:line="68" pos:column="33">BufferID</name></type> <name pos:line="68" pos:column="42">buffer</name></decl></param>)</parameter_list> <block pos:line="68" pos:column="50">{
	<decl_stmt><decl><type><name pos:line="69" pos:column="9">int</name></type> <name pos:line="69" pos:column="13">indexToActivate</name> <init pos:line="69" pos:column="29">= <expr><call><name pos:line="69" pos:column="31">getIndexByBuffer</name><argument_list pos:line="69" pos:column="47">(<argument><expr><name pos:line="69" pos:column="48">buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name pos:line="70" pos:column="13">indexToActivate</name> <op:operator pos:line="70" pos:column="29">==</op:operator> <op:operator pos:line="70" pos:column="32">-</op:operator><lit:literal type="number" pos:line="70" pos:column="33">1</lit:literal></expr>)</condition><then pos:line="70" pos:column="35">
		<return pos:line="71" pos:column="17">return <expr><lit:literal type="boolean" pos:line="71" pos:column="24">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="71" pos:column="33">//cannot activate</comment>
	<expr_stmt><expr><call><name pos:line="72" pos:column="9">activateAt</name><argument_list pos:line="72" pos:column="19">(<argument><expr><name pos:line="72" pos:column="20">indexToActivate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="73" pos:column="9">return <expr><lit:literal type="boolean" pos:line="73" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="76" pos:column="1">BufferID</name></type> <name><name pos:line="76" pos:column="10">DocTabView</name><op:operator pos:line="76" pos:column="20">::</op:operator><name pos:line="76" pos:column="22">activeBuffer</name></name><parameter_list pos:line="76" pos:column="34">()</parameter_list> <block pos:line="76" pos:column="37">{
	<decl_stmt><decl><type><name pos:line="77" pos:column="9">int</name></type> <name pos:line="77" pos:column="13">index</name> <init pos:line="77" pos:column="19">= <expr><call><name pos:line="77" pos:column="21">getCurrentTabIndex</name><argument_list pos:line="77" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="78" pos:column="9">return <expr><op:operator pos:line="78" pos:column="16">(</op:operator><name pos:line="78" pos:column="17">BufferID</name><op:operator pos:line="78" pos:column="25">)</op:operator><call><name pos:line="78" pos:column="26">getBufferByIndex</name><argument_list pos:line="78" pos:column="42">(<argument><expr><name pos:line="78" pos:column="43">index</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="81" pos:column="1">BufferID</name></type> <name><name pos:line="81" pos:column="10">DocTabView</name><op:operator pos:line="81" pos:column="20">::</op:operator><name pos:line="81" pos:column="22">findBufferByName</name></name><parameter_list pos:line="81" pos:column="38">(<param><decl><type><specifier pos:line="81" pos:column="39">const</specifier> <name pos:line="81" pos:column="45">TCHAR</name> <type:modifier pos:line="81" pos:column="51">*</type:modifier></type> <name pos:line="81" pos:column="53">fullfilename</name></decl></param>)</parameter_list> <block pos:line="81" pos:column="67">{	<comment type="line" pos:line="81" pos:column="73">//-1 if not found, something else otherwise</comment>
	<decl_stmt><decl><type><name pos:line="82" pos:column="9">TCITEM</name></type> <name pos:line="82" pos:column="16">tie</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="83" pos:column="9">tie</name><op:operator pos:line="83" pos:column="12">.</op:operator><name pos:line="83" pos:column="13">lParam</name></name> <op:operator pos:line="83" pos:column="20">=</op:operator> <op:operator pos:line="83" pos:column="22">-</op:operator><lit:literal type="number" pos:line="83" pos:column="23">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="84" pos:column="9">tie</name><op:operator pos:line="84" pos:column="12">.</op:operator><name pos:line="84" pos:column="13">mask</name></name> <op:operator pos:line="84" pos:column="18">=</op:operator> <name pos:line="84" pos:column="20">TCIF_PARAM</name></expr>;</expr_stmt>
	<for pos:line="85" pos:column="9">for(<init><decl><type><name pos:line="85" pos:column="13">size_t</name></type> <name pos:line="85" pos:column="20">i</name> <init pos:line="85" pos:column="22">= <expr><lit:literal type="number" pos:line="85" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="85" pos:column="27">i</name> <op:operator pos:line="85" pos:column="29">&lt;</op:operator> <name pos:line="85" pos:column="31">_nbItem</name></expr>;</condition> <incr><expr><name pos:line="85" pos:column="40">i</name><op:operator pos:line="85" pos:column="41">++</op:operator></expr></incr>) <block pos:line="85" pos:column="45">{
		<expr_stmt><expr><call><name><op:operator pos:line="86" pos:column="17">::</op:operator><name pos:line="86" pos:column="19">SendMessage</name></name><argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="39">TCM_GETITEM</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="52">i</name></expr></argument>, <argument><expr><call><name><name pos:line="86" pos:column="55">reinterpret_cast</name><argument_list pos:line="86" pos:column="71">&lt;<argument><expr><name pos:line="86" pos:column="72">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="86" pos:column="79">(<argument><expr><op:operator pos:line="86" pos:column="80">&amp;</op:operator><name pos:line="86" pos:column="81">tie</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="87" pos:column="17">BufferID</name></type> <name pos:line="87" pos:column="26">id</name> <init pos:line="87" pos:column="29">= <expr><op:operator pos:line="87" pos:column="31">(</op:operator><name pos:line="87" pos:column="32">BufferID</name><op:operator pos:line="87" pos:column="40">)</op:operator><name><name pos:line="87" pos:column="41">tie</name><op:operator pos:line="87" pos:column="44">.</op:operator><name pos:line="87" pos:column="45">lParam</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="88" pos:column="17">Buffer</name> <type:modifier pos:line="88" pos:column="24">*</type:modifier></type> <name pos:line="88" pos:column="26">buf</name> <init pos:line="88" pos:column="30">= <expr><call><name><name pos:line="88" pos:column="32">MainFileManager</name><op:operator pos:line="88" pos:column="47">-&gt;</op:operator><name pos:line="88" pos:column="49">getBufferByID</name></name><argument_list pos:line="88" pos:column="62">(<argument><expr><name pos:line="88" pos:column="63">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="89" pos:column="17">if <condition pos:line="89" pos:column="20">(<expr><op:operator pos:line="89" pos:column="21">!</op:operator><call><name pos:line="89" pos:column="22">lstrcmp</name><argument_list pos:line="89" pos:column="29">(<argument><expr><name pos:line="89" pos:column="30">fullfilename</name></expr></argument>, <argument><expr><call><name><name pos:line="89" pos:column="44">buf</name><op:operator pos:line="89" pos:column="47">-&gt;</op:operator><name pos:line="89" pos:column="49">getFullPathName</name></name><argument_list pos:line="89" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="89" pos:column="68"> <block pos:line="89" pos:column="69">{
			<return pos:line="90" pos:column="25">return <expr><name pos:line="90" pos:column="32">id</name></expr>;</return>
		}</block></then></if>
	}</block></for>
	<return pos:line="93" pos:column="9">return <expr><name pos:line="93" pos:column="16">BUFFER_INVALID</name></expr>;</return>
}</block></function>

<function><type><name pos:line="96" pos:column="1">int</name></type> <name><name pos:line="96" pos:column="5">DocTabView</name><op:operator pos:line="96" pos:column="15">::</op:operator><name pos:line="96" pos:column="17">getIndexByBuffer</name></name><parameter_list pos:line="96" pos:column="33">(<param><decl><type><name pos:line="96" pos:column="34">BufferID</name></type> <name pos:line="96" pos:column="43">id</name></decl></param>)</parameter_list> <block pos:line="96" pos:column="47">{
	<decl_stmt><decl><type><name pos:line="97" pos:column="9">TCITEM</name></type> <name pos:line="97" pos:column="16">tie</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="98" pos:column="9">tie</name><op:operator pos:line="98" pos:column="12">.</op:operator><name pos:line="98" pos:column="13">lParam</name></name> <op:operator pos:line="98" pos:column="20">=</op:operator> <op:operator pos:line="98" pos:column="22">-</op:operator><lit:literal type="number" pos:line="98" pos:column="23">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="99" pos:column="9">tie</name><op:operator pos:line="99" pos:column="12">.</op:operator><name pos:line="99" pos:column="13">mask</name></name> <op:operator pos:line="99" pos:column="18">=</op:operator> <name pos:line="99" pos:column="20">TCIF_PARAM</name></expr>;</expr_stmt>
	<for pos:line="100" pos:column="9">for(<init><decl><type><name pos:line="100" pos:column="13">int</name></type> <name pos:line="100" pos:column="17">i</name> <init pos:line="100" pos:column="19">= <expr><lit:literal type="number" pos:line="100" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="100" pos:column="24">i</name> <op:operator pos:line="100" pos:column="26">&lt;</op:operator> <op:operator pos:line="100" pos:column="28">(</op:operator><name pos:line="100" pos:column="29">int</name><op:operator pos:line="100" pos:column="32">)</op:operator><name pos:line="100" pos:column="33">_nbItem</name></expr>;</condition> <incr><expr><name pos:line="100" pos:column="42">i</name><op:operator pos:line="100" pos:column="43">++</op:operator></expr></incr>) <block pos:line="100" pos:column="47">{
		<expr_stmt><expr><call><name><op:operator pos:line="101" pos:column="17">::</op:operator><name pos:line="101" pos:column="19">SendMessage</name></name><argument_list pos:line="101" pos:column="30">(<argument><expr><name pos:line="101" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="39">TCM_GETITEM</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="52">i</name></expr></argument>, <argument><expr><call><name><name pos:line="101" pos:column="55">reinterpret_cast</name><argument_list pos:line="101" pos:column="71">&lt;<argument><expr><name pos:line="101" pos:column="72">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="101" pos:column="79">(<argument><expr><op:operator pos:line="101" pos:column="80">&amp;</op:operator><name pos:line="101" pos:column="81">tie</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><op:operator pos:line="102" pos:column="21">(</op:operator><name pos:line="102" pos:column="22">BufferID</name><op:operator pos:line="102" pos:column="30">)</op:operator><name><name pos:line="102" pos:column="31">tie</name><op:operator pos:line="102" pos:column="34">.</op:operator><name pos:line="102" pos:column="35">lParam</name></name> <op:operator pos:line="102" pos:column="42">==</op:operator> <name pos:line="102" pos:column="45">id</name></expr>)</condition><then pos:line="102" pos:column="48">
			<return pos:line="103" pos:column="25">return <expr><name pos:line="103" pos:column="32">i</name></expr>;</return></then></if>
	}</block></for>
	<return pos:line="105" pos:column="9">return <expr><op:operator pos:line="105" pos:column="16">-</op:operator><lit:literal type="number" pos:line="105" pos:column="17">1</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="108" pos:column="1">BufferID</name></type> <name><name pos:line="108" pos:column="10">DocTabView</name><op:operator pos:line="108" pos:column="20">::</op:operator><name pos:line="108" pos:column="22">getBufferByIndex</name></name><parameter_list pos:line="108" pos:column="38">(<param><decl><type><name pos:line="108" pos:column="39">int</name></type> <name pos:line="108" pos:column="43">index</name></decl></param>)</parameter_list> <block pos:line="108" pos:column="50">{
	<decl_stmt><decl><type><name pos:line="109" pos:column="9">TCITEM</name></type> <name pos:line="109" pos:column="16">tie</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="110" pos:column="9">tie</name><op:operator pos:line="110" pos:column="12">.</op:operator><name pos:line="110" pos:column="13">lParam</name></name> <op:operator pos:line="110" pos:column="20">=</op:operator> <op:operator pos:line="110" pos:column="22">-</op:operator><lit:literal type="number" pos:line="110" pos:column="23">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="111" pos:column="9">tie</name><op:operator pos:line="111" pos:column="12">.</op:operator><name pos:line="111" pos:column="13">mask</name></name> <op:operator pos:line="111" pos:column="18">=</op:operator> <name pos:line="111" pos:column="20">TCIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="112" pos:column="9">::</op:operator><name pos:line="112" pos:column="11">SendMessage</name></name><argument_list pos:line="112" pos:column="22">(<argument><expr><name pos:line="112" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="31">TCM_GETITEM</name></expr></argument>, <argument><expr><name pos:line="112" pos:column="44">index</name></expr></argument>, <argument><expr><call><name><name pos:line="112" pos:column="51">reinterpret_cast</name><argument_list pos:line="112" pos:column="67">&lt;<argument><expr><name pos:line="112" pos:column="68">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="112" pos:column="75">(<argument><expr><op:operator pos:line="112" pos:column="76">&amp;</op:operator><name pos:line="112" pos:column="77">tie</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:line="114" pos:column="9">return <expr><op:operator pos:line="114" pos:column="16">(</op:operator><name pos:line="114" pos:column="17">BufferID</name><op:operator pos:line="114" pos:column="25">)</op:operator><name><name pos:line="114" pos:column="26">tie</name><op:operator pos:line="114" pos:column="29">.</op:operator><name pos:line="114" pos:column="30">lParam</name></name></expr>;</return>
}</block></function>

<function><type><name pos:line="117" pos:column="1">void</name></type> <name><name pos:line="117" pos:column="6">DocTabView</name><op:operator pos:line="117" pos:column="16">::</op:operator><name pos:line="117" pos:column="18">bufferUpdated</name></name><parameter_list pos:line="117" pos:column="31">(<param><decl><type><name pos:line="117" pos:column="32">Buffer</name> <type:modifier pos:line="117" pos:column="39">*</type:modifier></type> <name pos:line="117" pos:column="41">buffer</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="49">int</name></type> <name pos:line="117" pos:column="53">mask</name></decl></param>)</parameter_list> <block pos:line="117" pos:column="59">{
	<decl_stmt><decl><type><name pos:line="118" pos:column="9">int</name></type> <name pos:line="118" pos:column="13">index</name> <init pos:line="118" pos:column="19">= <expr><call><name pos:line="118" pos:column="21">getIndexByBuffer</name><argument_list pos:line="118" pos:column="37">(<argument><expr><call><name><name pos:line="118" pos:column="38">buffer</name><op:operator pos:line="118" pos:column="44">-&gt;</op:operator><name pos:line="118" pos:column="46">getID</name></name><argument_list pos:line="118" pos:column="51">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="119" pos:column="9">if <condition pos:line="119" pos:column="12">(<expr><name pos:line="119" pos:column="13">index</name> <op:operator pos:line="119" pos:column="19">==</op:operator> <op:operator pos:line="119" pos:column="22">-</op:operator><lit:literal type="number" pos:line="119" pos:column="23">1</lit:literal></expr>)</condition><then pos:line="119" pos:column="25">
		<return pos:line="120" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="122" pos:column="9">TCITEM</name></type> <name pos:line="122" pos:column="16">tie</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="123" pos:column="9">tie</name><op:operator pos:line="123" pos:column="12">.</op:operator><name pos:line="123" pos:column="13">lParam</name></name> <op:operator pos:line="123" pos:column="20">=</op:operator> <op:operator pos:line="123" pos:column="22">-</op:operator><lit:literal type="number" pos:line="123" pos:column="23">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="124" pos:column="9">tie</name><op:operator pos:line="124" pos:column="12">.</op:operator><name pos:line="124" pos:column="13">mask</name></name> <op:operator pos:line="124" pos:column="18">=</op:operator> <lit:literal type="number" pos:line="124" pos:column="20">0</lit:literal></expr>;</expr_stmt>
	

	<if pos:line="127" pos:column="9">if <condition pos:line="127" pos:column="12">(<expr><name pos:line="127" pos:column="13">mask</name> <op:operator pos:line="127" pos:column="18">&amp;</op:operator> <name pos:line="127" pos:column="20">BufferChangeReadonly</name> <op:operator pos:line="127" pos:column="41">||</op:operator> <name pos:line="127" pos:column="44">mask</name> <op:operator pos:line="127" pos:column="49">&amp;</op:operator> <name pos:line="127" pos:column="51">BufferChangeDirty</name></expr>)</condition><then pos:line="127" pos:column="69"> <block pos:line="127" pos:column="70">{
		<expr_stmt><expr><name><name pos:line="128" pos:column="17">tie</name><op:operator pos:line="128" pos:column="20">.</op:operator><name pos:line="128" pos:column="21">mask</name></name> <op:operator pos:line="128" pos:column="26">|=</op:operator> <name pos:line="128" pos:column="29">TCIF_IMAGE</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="129" pos:column="17">tie</name><op:operator pos:line="129" pos:column="20">.</op:operator><name pos:line="129" pos:column="21">iImage</name></name> <op:operator pos:line="129" pos:column="28">=</op:operator> <call><name><name pos:line="129" pos:column="30">buffer</name><op:operator pos:line="129" pos:column="36">-&gt;</op:operator><name pos:line="129" pos:column="38">isDirty</name></name><argument_list pos:line="129" pos:column="45">()</argument_list></call><op:operator pos:line="129" pos:column="47">?</op:operator><name pos:line="129" pos:column="48">UNSAVED_IMG_INDEX</name><op:operator pos:line="129" pos:column="65">:</op:operator><name pos:line="129" pos:column="66">SAVED_IMG_INDEX</name></expr>;</expr_stmt>
		<if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><call><name><name pos:line="130" pos:column="21">buffer</name><op:operator pos:line="130" pos:column="27">-&gt;</op:operator><name pos:line="130" pos:column="29">isReadOnly</name></name><argument_list pos:line="130" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="130" pos:column="42"> <block pos:line="130" pos:column="43">{
			<expr_stmt><expr><name><name pos:line="131" pos:column="25">tie</name><op:operator pos:line="131" pos:column="28">.</op:operator><name pos:line="131" pos:column="29">iImage</name></name> <op:operator pos:line="131" pos:column="36">=</op:operator> <name pos:line="131" pos:column="38">REDONLY_IMG_INDEX</name></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">mask</name> <op:operator pos:line="135" pos:column="18">&amp;</op:operator> <name pos:line="135" pos:column="20">BufferChangeFilename</name></expr>)</condition><then pos:line="135" pos:column="41"> <block pos:line="135" pos:column="42">{
		<expr_stmt><expr><name><name pos:line="136" pos:column="17">tie</name><op:operator pos:line="136" pos:column="20">.</op:operator><name pos:line="136" pos:column="21">mask</name></name> <op:operator pos:line="136" pos:column="26">|=</op:operator> <name pos:line="136" pos:column="29">TCIF_TEXT</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="137" pos:column="17">tie</name><op:operator pos:line="137" pos:column="20">.</op:operator><name pos:line="137" pos:column="21">pszText</name></name> <op:operator pos:line="137" pos:column="29">=</op:operator> <op:operator pos:line="137" pos:column="31">(</op:operator><name pos:line="137" pos:column="32">TCHAR</name> <op:operator pos:line="137" pos:column="38">*</op:operator><op:operator pos:line="137" pos:column="39">)</op:operator><call><name><name pos:line="137" pos:column="40">buffer</name><op:operator pos:line="137" pos:column="46">-&gt;</op:operator><name pos:line="137" pos:column="48">getFileName</name></name><argument_list pos:line="137" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><call><name><op:operator pos:line="140" pos:column="9">::</op:operator><name pos:line="140" pos:column="11">SendMessage</name></name><argument_list pos:line="140" pos:column="22">(<argument><expr><name pos:line="140" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="140" pos:column="31">TCM_SETITEM</name></expr></argument>, <argument><expr><name pos:line="140" pos:column="44">index</name></expr></argument>, <argument><expr><call><name><name pos:line="140" pos:column="51">reinterpret_cast</name><argument_list pos:line="140" pos:column="67">&lt;<argument><expr><name pos:line="140" pos:column="68">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="140" pos:column="75">(<argument><expr><op:operator pos:line="140" pos:column="76">&amp;</op:operator><name pos:line="140" pos:column="77">tie</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="142" pos:column="9">// send WM_SIZE only when change tab</comment>
	<comment type="line" pos:line="143" pos:column="9">// It is needed while a tab is closed (so tab changed) in multi-line tab mode</comment>
	<if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><name pos:line="144" pos:column="13">mask</name> <op:operator pos:line="144" pos:column="18">&amp;</op:operator> <name pos:line="144" pos:column="20">BufferChangeRecentTag</name></expr>)</condition><then pos:line="144" pos:column="42">
		<expr_stmt><expr><call><name><op:operator pos:line="145" pos:column="17">::</op:operator><name pos:line="145" pos:column="19">SendMessage</name></name><argument_list pos:line="145" pos:column="30">(<argument><expr><name pos:line="145" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="145" pos:column="41">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="145" pos:column="50">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="145" pos:column="53">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<function><type><name pos:line="148" pos:column="1">void</name></type> <name><name pos:line="148" pos:column="6">DocTabView</name><op:operator pos:line="148" pos:column="16">::</op:operator><name pos:line="148" pos:column="18">setBuffer</name></name><parameter_list pos:line="148" pos:column="27">(<param><decl><type><name pos:line="148" pos:column="28">int</name></type> <name pos:line="148" pos:column="32">index</name></decl></param>, <param><decl><type><name pos:line="148" pos:column="39">BufferID</name></type> <name pos:line="148" pos:column="48">id</name></decl></param>)</parameter_list> <block pos:line="148" pos:column="52">{
	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><name><name pos:line="149" pos:column="13">index</name> <argument_list pos:line="149" pos:column="19">&lt; <argument><expr><lit:literal type="number" pos:line="149" pos:column="21">0</lit:literal> <op:operator pos:line="149" pos:column="23">||</op:operator> <name pos:line="149" pos:column="26">index</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="149" pos:column="33">=</op:operator> <op:operator pos:line="149" pos:column="35">(</op:operator><name pos:line="149" pos:column="36">int</name><op:operator pos:line="149" pos:column="39">)</op:operator><name pos:line="149" pos:column="40">_nbItem</name></expr>)</condition><then pos:line="149" pos:column="48">
		<return pos:line="150" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="152" pos:column="9">TCITEM</name></type> <name pos:line="152" pos:column="16">tie</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="153" pos:column="9">tie</name><op:operator pos:line="153" pos:column="12">.</op:operator><name pos:line="153" pos:column="13">lParam</name></name> <op:operator pos:line="153" pos:column="20">=</op:operator> <op:operator pos:line="153" pos:column="22">(</op:operator><name pos:line="153" pos:column="23">LPARAM</name><op:operator pos:line="153" pos:column="29">)</op:operator><name pos:line="153" pos:column="30">id</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="154" pos:column="9">tie</name><op:operator pos:line="154" pos:column="12">.</op:operator><name pos:line="154" pos:column="13">mask</name></name> <op:operator pos:line="154" pos:column="18">=</op:operator> <name pos:line="154" pos:column="20">TCIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="155" pos:column="9">::</op:operator><name pos:line="155" pos:column="11">SendMessage</name></name><argument_list pos:line="155" pos:column="22">(<argument><expr><name pos:line="155" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="155" pos:column="31">TCM_SETITEM</name></expr></argument>, <argument><expr><name pos:line="155" pos:column="44">index</name></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="51">reinterpret_cast</name><argument_list pos:line="155" pos:column="67">&lt;<argument><expr><name pos:line="155" pos:column="68">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="155" pos:column="75">(<argument><expr><op:operator pos:line="155" pos:column="76">&amp;</op:operator><name pos:line="155" pos:column="77">tie</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="157" pos:column="9">bufferUpdated</name><argument_list pos:line="157" pos:column="22">(<argument><expr><call><name><name pos:line="157" pos:column="23">MainFileManager</name><op:operator pos:line="157" pos:column="38">-&gt;</op:operator><name pos:line="157" pos:column="40">getBufferByID</name></name><argument_list pos:line="157" pos:column="53">(<argument><expr><name pos:line="157" pos:column="54">id</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="157" pos:column="59">BufferChangeMask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="157" pos:column="81">//update tab, everything has changed</comment>

	<expr_stmt><expr><call><name><op:operator pos:line="159" pos:column="9">::</op:operator><name pos:line="159" pos:column="11">SendMessage</name></name><argument_list pos:line="159" pos:column="22">(<argument><expr><name pos:line="159" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="159" pos:column="33">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="159" pos:column="42">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="159" pos:column="45">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="162" pos:column="1">void</name></type> <name><name pos:line="162" pos:column="6">DocTabView</name><op:operator pos:line="162" pos:column="16">::</op:operator><name pos:line="162" pos:column="18">reSizeTo</name></name><parameter_list pos:line="162" pos:column="26">(<param><decl><type><name pos:line="162" pos:column="27">RECT</name> <type:modifier pos:line="162" pos:column="32">&amp;</type:modifier></type> <name pos:line="162" pos:column="34">rc</name></decl></param>)</parameter_list> 
<block pos:line="163" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="164" pos:column="9">int</name></type> <name pos:line="164" pos:column="13">borderWidth</name> <init pos:line="164" pos:column="25">= <expr><op:operator pos:line="164" pos:column="27">(</op:operator><op:operator pos:line="164" pos:column="28">(</op:operator><call><name><name pos:line="164" pos:column="29">NppParameters</name><op:operator pos:line="164" pos:column="42">::</op:operator><name pos:line="164" pos:column="44">getInstance</name></name><argument_list pos:line="164" pos:column="55">()</argument_list></call><op:operator pos:line="164" pos:column="57">)</op:operator><op:operator pos:line="164" pos:column="58">-&gt;</op:operator><call><name pos:line="164" pos:column="60">getSVP</name><argument_list pos:line="164" pos:column="66">()</argument_list></call><op:operator pos:line="164" pos:column="68">)</op:operator><op:operator pos:line="164" pos:column="69">.</op:operator><name pos:line="164" pos:column="70">_borderWidth</name></expr></init></decl>;</decl_stmt>
	<if pos:line="165" pos:column="9">if <condition pos:line="165" pos:column="12">(<expr><name pos:line="165" pos:column="13">_hideTabBarStatus</name></expr>)</condition><then pos:line="165" pos:column="31">
	<block pos:line="166" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="167" pos:column="17">RECT</name></type> <name pos:line="167" pos:column="22">rcTmp</name> <init pos:line="167" pos:column="28">= <expr><name pos:line="167" pos:column="30">rc</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="168" pos:column="17">TabBar</name><op:operator pos:line="168" pos:column="23">::</op:operator><name pos:line="168" pos:column="25">reSizeTo</name></name><argument_list pos:line="168" pos:column="33">(<argument><expr><name pos:line="168" pos:column="34">rcTmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="169" pos:column="17">_pView</name><op:operator pos:line="169" pos:column="23">-&gt;</op:operator><name pos:line="169" pos:column="25">reSizeTo</name></name><argument_list pos:line="169" pos:column="33">(<argument><expr><name pos:line="169" pos:column="34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="171" pos:column="9">else
	<block pos:line="172" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="173" pos:column="17">TabBar</name><op:operator pos:line="173" pos:column="23">::</op:operator><name pos:line="173" pos:column="25">reSizeTo</name></name><argument_list pos:line="173" pos:column="33">(<argument><expr><name pos:line="173" pos:column="34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="174" pos:column="17">rc</name><op:operator pos:line="174" pos:column="19">.</op:operator><name pos:line="174" pos:column="20">left</name></name>	 <op:operator pos:line="174" pos:column="26">+=</op:operator> <name pos:line="174" pos:column="29">borderWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="175" pos:column="17">rc</name><op:operator pos:line="175" pos:column="19">.</op:operator><name pos:line="175" pos:column="20">right</name></name> <op:operator pos:line="175" pos:column="26">-=</op:operator> <name pos:line="175" pos:column="29">borderWidth</name> <op:operator pos:line="175" pos:column="41">*</op:operator> <lit:literal type="number" pos:line="175" pos:column="43">2</lit:literal></expr>;</expr_stmt>	
		<expr_stmt><expr><name><name pos:line="176" pos:column="17">rc</name><op:operator pos:line="176" pos:column="19">.</op:operator><name pos:line="176" pos:column="20">top</name></name>   <op:operator pos:line="176" pos:column="26">+=</op:operator> <name pos:line="176" pos:column="29">borderWidth</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="177" pos:column="17">rc</name><op:operator pos:line="177" pos:column="19">.</op:operator><name pos:line="177" pos:column="20">bottom</name></name> <op:operator pos:line="177" pos:column="27">-=</op:operator> <op:operator pos:line="177" pos:column="30">(</op:operator><name pos:line="177" pos:column="31">borderWidth</name> <op:operator pos:line="177" pos:column="43">*</op:operator> <lit:literal type="number" pos:line="177" pos:column="45">2</lit:literal><op:operator pos:line="177" pos:column="46">)</op:operator></expr>;</expr_stmt>	
		<expr_stmt><expr><call><name><name pos:line="178" pos:column="17">_pView</name><op:operator pos:line="178" pos:column="23">-&gt;</op:operator><name pos:line="178" pos:column="25">reSizeTo</name></name><argument_list pos:line="178" pos:column="33">(<argument><expr><name pos:line="178" pos:column="34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
}</block></function></unit>
