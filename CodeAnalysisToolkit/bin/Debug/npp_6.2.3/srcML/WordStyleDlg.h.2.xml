<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ColourPicker\WordStyleDlg.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">WORD_STYLE_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">WORD_STYLE_H</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">COLOUR_PICKER_H</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"ColourPicker.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="34" pos:column="8">//COLOUR_PICKER_H</comment>

<cpp:ifndef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifndef</cpp:directive> <name pos:line="36" pos:column="9">WORD_STYLE_DLG_RES_H</name></cpp:ifndef>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"WordStyleDlgRes.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="38" pos:column="8">//WORD_STYLE_DLG_RES_H</comment>

<cpp:ifndef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifndef</cpp:directive> <name pos:line="40" pos:column="9">PARAMETERS_H</name></cpp:ifndef>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="41" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="42" pos:column="8">//PARAMETERS_H</comment>

<cpp:define pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="44" pos:column="9">WM_UPDATESCINTILLAS</name></cpp:macro>			<cpp:value pos:line="44" pos:column="49">(WORDSTYLE_USER + 1)</cpp:value></cpp:define> <comment type="line" pos:line="44" pos:column="70">//GlobalStyleDlg's msg 2 send 2 its parent</comment>

<enum pos:line="46" pos:column="1">enum <name pos:line="46" pos:column="6">fontStyleType</name> <block pos:line="46" pos:column="20">{<decl><name pos:line="46" pos:column="21">BOLD_STATUS</name></decl><op:operator pos:line="46" pos:column="32">,</op:operator> <decl><name pos:line="46" pos:column="34">ITALIC_STATUS</name></decl><op:operator pos:line="46" pos:column="47">,</op:operator> <decl><name pos:line="46" pos:column="49">UNDERLINE_STATUS</name></decl>}</block>;</enum>

<decl_stmt><decl><type><specifier pos:line="48" pos:column="1">const</specifier> <name pos:line="48" pos:column="7">bool</name></type> <name pos:line="48" pos:column="12">C_FOREGROUND</name> <init pos:line="48" pos:column="25">= <expr><lit:literal type="boolean" pos:line="48" pos:column="27">false</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="49" pos:column="1">const</specifier> <name pos:line="49" pos:column="7">bool</name></type> <name pos:line="49" pos:column="12">C_BACKGROUND</name> <init pos:line="49" pos:column="25">= <expr><lit:literal type="boolean" pos:line="49" pos:column="27">true</lit:literal></expr></init></decl>;</decl_stmt>


<class pos:line="52" pos:column="1">class <name pos:line="52" pos:column="7">ColourStaticTextHooker</name> <block pos:line="52" pos:column="30">{<private type="default" pos:line="52" pos:column="31">
</private><public pos:line="53" pos:column="1">public :
	<constructor><name pos:line="54" pos:column="9">ColourStaticTextHooker</name><parameter_list pos:line="54" pos:column="31">()</parameter_list> <member_list pos:line="54" pos:column="34">: <call><name pos:line="54" pos:column="36">_colour</name><argument_list pos:line="54" pos:column="43">(<argument><expr><call><name pos:line="54" pos:column="44">RGB</name><argument_list pos:line="54" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="54" pos:column="48">0x00</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="54" pos:column="54">0x00</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="54" pos:column="60">0x00</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> </member_list><block pos:line="54" pos:column="67">{}</block></constructor><empty_stmt pos:line="54" pos:column="69">;</empty_stmt>

	<function><type><name pos:line="56" pos:column="9">COLORREF</name></type> <name pos:line="56" pos:column="18">setColour</name><parameter_list pos:line="56" pos:column="27">(<param><decl><type><name pos:line="56" pos:column="28">COLORREF</name></type> <name pos:line="56" pos:column="37">colour2Set</name></decl></param>)</parameter_list> <block pos:line="56" pos:column="49">{
		<decl_stmt><decl><type><name pos:line="57" pos:column="17">COLORREF</name></type> <name pos:line="57" pos:column="26">oldColour</name> <init pos:line="57" pos:column="36">= <expr><name pos:line="57" pos:column="38">_colour</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="58" pos:column="17">_colour</name> <op:operator pos:line="58" pos:column="25">=</op:operator> <name pos:line="58" pos:column="27">colour2Set</name></expr>;</expr_stmt>
		<return pos:line="59" pos:column="17">return <expr><name pos:line="59" pos:column="24">oldColour</name></expr>;</return>
	}</block></function><empty_stmt pos:line="60" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="61" pos:column="9">void</name></type> <name pos:line="61" pos:column="14">hookOn</name><parameter_list pos:line="61" pos:column="20">(<param><decl><type><name pos:line="61" pos:column="21">HWND</name></type> <name pos:line="61" pos:column="26">staticHandle</name></decl></param>)</parameter_list> <block pos:line="61" pos:column="40">{
		<expr_stmt><expr><call><name><op:operator pos:line="62" pos:column="17">::</op:operator><name pos:line="62" pos:column="19">SetWindowLongPtr</name></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">staticHandle</name></expr></argument>, <argument><expr><name pos:line="62" pos:column="50">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="62" pos:column="65">(</op:operator><name pos:line="62" pos:column="66">LONG_PTR</name><op:operator pos:line="62" pos:column="74">)</op:operator><name pos:line="62" pos:column="75">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="63" pos:column="17">_oldProc</name> <op:operator pos:line="63" pos:column="26">=</op:operator> <op:operator pos:line="63" pos:column="28">(</op:operator><name pos:line="63" pos:column="29">WNDPROC</name><op:operator pos:line="63" pos:column="36">)</op:operator><call><name><op:operator pos:line="63" pos:column="37">::</op:operator><name pos:line="63" pos:column="39">SetWindowLongPtr</name></name><argument_list pos:line="63" pos:column="55">(<argument><expr><name pos:line="63" pos:column="56">staticHandle</name></expr></argument>, <argument><expr><name pos:line="63" pos:column="70">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="63" pos:column="84">(</op:operator><name pos:line="63" pos:column="85">LONG_PTR</name><op:operator pos:line="63" pos:column="93">)</op:operator><name pos:line="63" pos:column="94">staticProc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="64" pos:column="10">;</empty_stmt>
</public><private pos:line="65" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="66" pos:column="9">COLORREF</name></type> <name pos:line="66" pos:column="18">_colour</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="67" pos:column="9">WNDPROC</name></type> <name pos:line="67" pos:column="17">_oldProc</name></decl>;</decl_stmt>

	<function><type><specifier pos:line="69" pos:column="9">static</specifier> <name pos:line="69" pos:column="16">BOOL</name> <name pos:line="69" pos:column="21">CALLBACK</name></type> <name pos:line="69" pos:column="30">staticProc</name><parameter_list pos:line="69" pos:column="40">(<param><decl><type><name pos:line="69" pos:column="41">HWND</name></type> <name pos:line="69" pos:column="46">hwnd</name></decl></param>, <param><decl><type><name pos:line="69" pos:column="52">UINT</name></type> <name pos:line="69" pos:column="57">message</name></decl></param>, <param><decl><type><name pos:line="69" pos:column="66">WPARAM</name></type> <name pos:line="69" pos:column="73">wParam</name></decl></param>, <param><decl><type><name pos:line="69" pos:column="81">LPARAM</name></type> <name pos:line="69" pos:column="88">lParam</name></decl></param>)</parameter_list><block pos:line="69" pos:column="95">{
		<decl_stmt><decl><type><name pos:line="70" pos:column="17">ColourStaticTextHooker</name> <type:modifier pos:line="70" pos:column="40">*</type:modifier></type><name pos:line="70" pos:column="41">pColourStaticTextHooker</name> <init pos:line="70" pos:column="65">= <expr><call><name><name pos:line="70" pos:column="67">reinterpret_cast</name><argument_list pos:line="70" pos:column="83">&lt;<argument><expr><name pos:line="70" pos:column="84">ColourStaticTextHooker</name> <op:operator pos:line="70" pos:column="107">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="70" pos:column="109">(<argument><expr><call><name><op:operator pos:line="70" pos:column="110">::</op:operator><name pos:line="70" pos:column="112">GetWindowLongPtr</name></name><argument_list pos:line="70" pos:column="128">(<argument><expr><name pos:line="70" pos:column="129">hwnd</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="135">GWL_USERDATA</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:line="71" pos:column="17">return <expr><call><name><name pos:line="71" pos:column="24">pColourStaticTextHooker</name><op:operator pos:line="71" pos:column="47">-&gt;</op:operator><name pos:line="71" pos:column="49">colourStaticProc</name></name><argument_list pos:line="71" pos:column="65">(<argument><expr><name pos:line="71" pos:column="66">hwnd</name></expr></argument>, <argument><expr><name pos:line="71" pos:column="72">message</name></expr></argument>, <argument><expr><name pos:line="71" pos:column="81">wParam</name></expr></argument>, <argument><expr><name pos:line="71" pos:column="89">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="72" pos:column="10">;</empty_stmt> 
	<function_decl><type><name pos:line="73" pos:column="9">BOOL</name> <name pos:line="73" pos:column="14">CALLBACK</name></type> <name pos:line="73" pos:column="23">colourStaticProc</name><parameter_list pos:line="73" pos:column="39">(<param><decl><type><name pos:line="73" pos:column="40">HWND</name></type> <name pos:line="73" pos:column="45">hwnd</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="51">UINT</name></type> <name pos:line="73" pos:column="56">Message</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="65">WPARAM</name></type> <name pos:line="73" pos:column="72">wParam</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="80">LPARAM</name></type> <name pos:line="73" pos:column="87">lParam</name></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<class pos:line="76" pos:column="1">class <name pos:line="76" pos:column="7">WordStyleDlg</name> <super pos:line="76" pos:column="20">: <specifier pos:line="76" pos:column="22">public</specifier> <name pos:line="76" pos:column="29">StaticDialog</name></super>
<block pos:line="77" pos:column="1">{<private type="default" pos:line="77" pos:column="2">
</private><public pos:line="78" pos:column="1">public :
	<constructor><name pos:line="79" pos:column="9">WordStyleDlg</name><parameter_list pos:line="79" pos:column="21">()</parameter_list><member_list pos:line="79" pos:column="23">:<call><name pos:line="79" pos:column="24">_isDirty</name><argument_list pos:line="79" pos:column="32">(<argument><expr><lit:literal type="boolean" pos:line="79" pos:column="33">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="39">,</op:operator> <call><name pos:line="79" pos:column="41">_isThemeDirty</name><argument_list pos:line="79" pos:column="54">(<argument><expr><lit:literal type="boolean" pos:line="79" pos:column="55">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="61">,</op:operator> <call><name pos:line="79" pos:column="63">_restoreInvalid</name><argument_list pos:line="79" pos:column="78">(<argument><expr><lit:literal type="boolean" pos:line="79" pos:column="79">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="79" pos:column="85">,</op:operator> <comment type="block" pos:line="79" pos:column="87">/*_isSync(true),*/</comment> <call><name pos:line="79" pos:column="106">_isShownGOCtrls</name><argument_list pos:line="79" pos:column="121">(<argument><expr><lit:literal type="boolean" pos:line="79" pos:column="122">false</lit:literal></expr></argument>)</argument_list></call></member_list><block pos:line="79" pos:column="128">{}</block></constructor><empty_stmt pos:line="79" pos:column="130">;</empty_stmt>

    <function><type><name pos:line="81" pos:column="5">void</name></type> <name pos:line="81" pos:column="10">init</name><parameter_list pos:line="81" pos:column="14">(<param><decl><type><name pos:line="81" pos:column="15">HINSTANCE</name></type> <name pos:line="81" pos:column="25">hInst</name></decl></param>, <param><decl><type><name pos:line="81" pos:column="32">HWND</name></type> <name pos:line="81" pos:column="37">parent</name></decl></param>)</parameter_list>	<block pos:line="81" pos:column="49">{
        <expr_stmt><expr><call><name><name pos:line="82" pos:column="9">Window</name><op:operator pos:line="82" pos:column="15">::</op:operator><name pos:line="82" pos:column="17">init</name></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="83" pos:column="10">;</empty_stmt>

	<function_decl><type><specifier pos:line="85" pos:column="9">virtual</specifier> <name pos:line="85" pos:column="17">void</name></type> <name pos:line="85" pos:column="22">create</name><parameter_list pos:line="85" pos:column="28">(<param><decl><type><name pos:line="85" pos:column="29">int</name></type> <name pos:line="85" pos:column="33">dialogID</name></decl></param>, <param><decl><type><name pos:line="85" pos:column="43">bool</name></type> <name pos:line="85" pos:column="48">isRTL</name> <init pos:line="85" pos:column="54">= <expr><lit:literal type="boolean" pos:line="85" pos:column="56">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>

    <function><type><name pos:line="87" pos:column="5">void</name></type> <name pos:line="87" pos:column="10">doDialog</name><parameter_list pos:line="87" pos:column="18">(<param><decl><type><name pos:line="87" pos:column="19">bool</name></type> <name pos:line="87" pos:column="24">isRTL</name> <init pos:line="87" pos:column="30">= <expr><lit:literal type="boolean" pos:line="87" pos:column="32">false</lit:literal></expr></init></decl></param>)</parameter_list> <block pos:line="87" pos:column="39">{
    	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><op:operator pos:line="88" pos:column="13">!</op:operator><call><name pos:line="88" pos:column="14">isCreated</name><argument_list pos:line="88" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="88" pos:column="26">
		<block pos:line="89" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="90" pos:column="25">create</name><argument_list pos:line="90" pos:column="31">(<argument><expr><name pos:line="90" pos:column="32">IDD_STYLER_DLG</name></expr></argument>, <argument><expr><name pos:line="90" pos:column="48">isRTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="91" pos:column="25">prepare2Cancel</name><argument_list pos:line="91" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="94" pos:column="17">if <condition pos:line="94" pos:column="20">(<expr><op:operator pos:line="94" pos:column="21">!</op:operator><call><name><op:operator pos:line="94" pos:column="22">::</op:operator><name pos:line="94" pos:column="24">IsWindowVisible</name></name><argument_list pos:line="94" pos:column="39">(<argument><expr><name pos:line="94" pos:column="40">_hSelf</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="94" pos:column="48">
		<block pos:line="95" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="96" pos:column="25">prepare2Cancel</name><argument_list pos:line="96" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	    <expr_stmt><expr><call><name pos:line="98" pos:column="13">display</name><argument_list pos:line="98" pos:column="20">()</argument_list></call></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="99" pos:column="6">;</empty_stmt>

	<function><type><name pos:line="101" pos:column="9">void</name></type> <name pos:line="101" pos:column="14">prepare2Cancel</name><parameter_list pos:line="101" pos:column="28">()</parameter_list> <block pos:line="101" pos:column="31">{
		<expr_stmt><expr><name pos:line="102" pos:column="17">_styles2restored</name> <op:operator pos:line="102" pos:column="34">=</op:operator> <op:operator pos:line="102" pos:column="36">(</op:operator><call><name><name pos:line="102" pos:column="37">NppParameters</name><op:operator pos:line="102" pos:column="50">::</op:operator><name pos:line="102" pos:column="52">getInstance</name></name><argument_list pos:line="102" pos:column="63">()</argument_list></call><op:operator pos:line="102" pos:column="65">)</op:operator><op:operator pos:line="102" pos:column="66">-&gt;</op:operator><call><name pos:line="102" pos:column="68">getLStylerArray</name><argument_list pos:line="102" pos:column="83">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="103" pos:column="17">_gstyles2restored</name> <op:operator pos:line="103" pos:column="35">=</op:operator> <op:operator pos:line="103" pos:column="37">(</op:operator><call><name><name pos:line="103" pos:column="38">NppParameters</name><op:operator pos:line="103" pos:column="51">::</op:operator><name pos:line="103" pos:column="53">getInstance</name></name><argument_list pos:line="103" pos:column="64">()</argument_list></call><op:operator pos:line="103" pos:column="66">)</op:operator><op:operator pos:line="103" pos:column="67">-&gt;</op:operator><call><name pos:line="103" pos:column="69">getGlobalStylers</name><argument_list pos:line="103" pos:column="85">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="104" pos:column="17">_gOverride2restored</name> <op:operator pos:line="104" pos:column="37">=</op:operator> <op:operator pos:line="104" pos:column="39">(</op:operator><call><name><name pos:line="104" pos:column="40">NppParameters</name><op:operator pos:line="104" pos:column="53">::</op:operator><name pos:line="104" pos:column="55">getInstance</name></name><argument_list pos:line="104" pos:column="66">()</argument_list></call><op:operator pos:line="104" pos:column="68">)</op:operator><op:operator pos:line="104" pos:column="69">-&gt;</op:operator><call><name pos:line="104" pos:column="71">getGlobalOverrideStyle</name><argument_list pos:line="104" pos:column="93">()</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="105" pos:column="10">;</empty_stmt>

    <function><type><specifier pos:line="107" pos:column="5">virtual</specifier> <name pos:line="107" pos:column="13">void</name></type> <name pos:line="107" pos:column="18">redraw</name><parameter_list pos:line="107" pos:column="24">()</parameter_list> <specifier pos:line="107" pos:column="27">const</specifier> <block pos:line="107" pos:column="33">{
        <expr_stmt><expr><call><name><name pos:line="108" pos:column="9">_pFgColour</name><op:operator pos:line="108" pos:column="19">-&gt;</op:operator><name pos:line="108" pos:column="21">redraw</name></name><argument_list pos:line="108" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="109" pos:column="9">_pBgColour</name><op:operator pos:line="109" pos:column="19">-&gt;</op:operator><name pos:line="109" pos:column="21">redraw</name></name><argument_list pos:line="109" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="110" pos:column="17">::</op:operator><name pos:line="110" pos:column="19">InvalidateRect</name></name><argument_list pos:line="110" pos:column="33">(<argument><expr><name pos:line="110" pos:column="34">_hStyleInfoStaticText</name></expr></argument>, <argument><expr><name pos:line="110" pos:column="57">NULL</name></expr></argument>, <argument><expr><name pos:line="110" pos:column="63">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="111" pos:column="17">::</op:operator><name pos:line="111" pos:column="19">UpdateWindow</name></name><argument_list pos:line="111" pos:column="31">(<argument><expr><name pos:line="111" pos:column="32">_hStyleInfoStaticText</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="112" pos:column="6">;</empty_stmt>
	
	<function><type><name pos:line="114" pos:column="9">void</name></type> <name pos:line="114" pos:column="14">restoreGlobalOverrideValues</name><parameter_list pos:line="114" pos:column="41">()</parameter_list> <block pos:line="114" pos:column="44">{
		<decl_stmt><decl><type><name pos:line="115" pos:column="17">GlobalOverride</name> <type:modifier pos:line="115" pos:column="32">&amp;</type:modifier></type> <name pos:line="115" pos:column="34">gOverride</name> <init pos:line="115" pos:column="44">= <expr><op:operator pos:line="115" pos:column="46">(</op:operator><call><name><name pos:line="115" pos:column="47">NppParameters</name><op:operator pos:line="115" pos:column="60">::</op:operator><name pos:line="115" pos:column="62">getInstance</name></name><argument_list pos:line="115" pos:column="73">()</argument_list></call><op:operator pos:line="115" pos:column="75">)</op:operator><op:operator pos:line="115" pos:column="76">-&gt;</op:operator><call><name pos:line="115" pos:column="78">getGlobalOverrideStyle</name><argument_list pos:line="115" pos:column="100">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="116" pos:column="17">gOverride</name> <op:operator pos:line="116" pos:column="27">=</op:operator> <name pos:line="116" pos:column="29">_gOverride2restored</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="117" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="119" pos:column="9">void</name></type> <name pos:line="119" pos:column="14">apply</name><parameter_list pos:line="119" pos:column="19">()</parameter_list>;</function_decl>

	<function><type><name pos:line="121" pos:column="9">void</name></type> <name pos:line="121" pos:column="14">addLastThemeEntry</name><parameter_list pos:line="121" pos:column="31">()</parameter_list> <block pos:line="121" pos:column="34">{
        <decl_stmt><decl><type><name pos:line="122" pos:column="9">NppParameters</name> <type:modifier pos:line="122" pos:column="23">*</type:modifier></type><name pos:line="122" pos:column="24">nppParamInst</name> <init pos:line="122" pos:column="37">= <expr><call><name><name pos:line="122" pos:column="39">NppParameters</name><op:operator pos:line="122" pos:column="52">::</op:operator><name pos:line="122" pos:column="54">getInstance</name></name><argument_list pos:line="122" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="123" pos:column="9">ThemeSwitcher</name> <type:modifier pos:line="123" pos:column="23">&amp;</type:modifier></type> <name pos:line="123" pos:column="25">themeSwitcher</name> <init pos:line="123" pos:column="39">= <expr><call><name><name pos:line="123" pos:column="41">nppParamInst</name><op:operator pos:line="123" pos:column="53">-&gt;</op:operator><name pos:line="123" pos:column="55">getThemeSwitcher</name></name><argument_list pos:line="123" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="124" pos:column="9">pair</name><argument_list pos:line="124" pos:column="13">&lt;<argument><expr><name pos:line="124" pos:column="14">generic_string</name></expr></argument>, <argument><expr><name pos:line="124" pos:column="30">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="124" pos:column="46">&amp;</type:modifier></type> <name pos:line="124" pos:column="48">themeInfo</name> <init pos:line="124" pos:column="58">= <expr><call><name><name pos:line="124" pos:column="60">themeSwitcher</name><op:operator pos:line="124" pos:column="73">.</op:operator><name pos:line="124" pos:column="74">getElementFromIndex</name></name><argument_list pos:line="124" pos:column="93">(<argument><expr><call><name><name pos:line="124" pos:column="94">themeSwitcher</name><op:operator pos:line="124" pos:column="107">.</op:operator><name pos:line="124" pos:column="108">size</name></name><argument_list pos:line="124" pos:column="112">()</argument_list></call> <op:operator pos:line="124" pos:column="115">-</op:operator> <lit:literal type="number" pos:line="124" pos:column="117">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <expr_stmt><expr><call><name><op:operator pos:line="125" pos:column="13">::</op:operator><name pos:line="125" pos:column="15">SendMessage</name></name><argument_list pos:line="125" pos:column="26">(<argument><expr><name pos:line="125" pos:column="27">_hSwitch2ThemeCombo</name></expr></argument>, <argument><expr><name pos:line="125" pos:column="48">CB_ADDSTRING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="125" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="125" pos:column="65">(</op:operator><name pos:line="125" pos:column="66">LPARAM</name><op:operator pos:line="125" pos:column="72">)</op:operator><call><name><name pos:line="125" pos:column="73">themeInfo</name><op:operator pos:line="125" pos:column="82">.</op:operator><name pos:line="125" pos:column="83">first</name><op:operator pos:line="125" pos:column="88">.</op:operator><name pos:line="125" pos:column="89">c_str</name></name><argument_list pos:line="125" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="126" pos:column="6">;</empty_stmt>



</public><private pos:line="130" pos:column="1">private :
    <decl_stmt><decl><type><name pos:line="131" pos:column="5">ColourPicker</name> <type:modifier pos:line="131" pos:column="18">*</type:modifier></type><name pos:line="131" pos:column="19">_pFgColour</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="132" pos:column="5">ColourPicker</name> <type:modifier pos:line="132" pos:column="18">*</type:modifier></type><name pos:line="132" pos:column="19">_pBgColour</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="134" pos:column="5">int</name></type> <name pos:line="134" pos:column="9">_currentLexerIndex</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="135" pos:column="9">int</name></type> <name pos:line="135" pos:column="13">_currentThemeIndex</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="137" pos:column="5">HWND</name></type> <name pos:line="137" pos:column="10">_hCheckBold</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="138" pos:column="5">HWND</name></type> <name pos:line="138" pos:column="10">_hCheckItalic</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="139" pos:column="9">HWND</name></type> <name pos:line="139" pos:column="14">_hCheckUnderline</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="140" pos:column="5">HWND</name></type> <name pos:line="140" pos:column="10">_hFontNameCombo</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="141" pos:column="5">HWND</name></type> <name pos:line="141" pos:column="10">_hFontSizeCombo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="142" pos:column="9">HWND</name></type> <name pos:line="142" pos:column="14">_hSwitch2ThemeCombo</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="144" pos:column="9">HWND</name></type> <name pos:line="144" pos:column="14">_hFgColourStaticText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="145" pos:column="9">HWND</name></type> <name pos:line="145" pos:column="14">_hBgColourStaticText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="146" pos:column="9">HWND</name></type> <name pos:line="146" pos:column="14">_hFontNameStaticText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="147" pos:column="9">HWND</name></type> <name pos:line="147" pos:column="14">_hFontSizeStaticText</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="148" pos:column="9">HWND</name></type> <name pos:line="148" pos:column="14">_hStyleInfoStaticText</name></decl>;</decl_stmt>
	<comment type="line" pos:line="149" pos:column="9">//TCHAR _originalWarning[256];</comment>

	<decl_stmt><decl><type><name pos:line="151" pos:column="9">LexerStylerArray</name></type> <name pos:line="151" pos:column="26">_lsArray</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="152" pos:column="5">StyleArray</name></type> <name pos:line="152" pos:column="16">_globalStyles</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="153" pos:column="9">generic_string</name></type> <name pos:line="153" pos:column="24">_themeName</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="155" pos:column="9">LexerStylerArray</name></type> <name pos:line="155" pos:column="26">_styles2restored</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="156" pos:column="9">StyleArray</name></type> <name pos:line="156" pos:column="20">_gstyles2restored</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="157" pos:column="9">GlobalOverride</name></type> <name pos:line="157" pos:column="24">_gOverride2restored</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="158" pos:column="9">bool</name></type> <name pos:line="158" pos:column="14">_restoreInvalid</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="160" pos:column="9">ColourStaticTextHooker</name></type> <name pos:line="160" pos:column="32">colourHooker</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="162" pos:column="9">bool</name></type> <name pos:line="162" pos:column="14">_isDirty</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="163" pos:column="9">bool</name></type> <name pos:line="163" pos:column="14">_isThemeDirty</name></decl>;</decl_stmt>
    <comment type="line" pos:line="164" pos:column="5">//bool _isSync;</comment>
	<decl_stmt><decl><type><name pos:line="165" pos:column="9">bool</name></type> <name pos:line="165" pos:column="14">_isShownGOCtrls</name></decl>;</decl_stmt>

	<function_decl><type><name pos:line="167" pos:column="9">BOOL</name> <name pos:line="167" pos:column="14">CALLBACK</name></type> <name pos:line="167" pos:column="23">run_dlgProc</name><parameter_list pos:line="167" pos:column="34">(<param><decl><type><name pos:line="167" pos:column="35">UINT</name></type> <name pos:line="167" pos:column="40">Message</name></decl></param>, <param><decl><type><name pos:line="167" pos:column="49">WPARAM</name></type> <name pos:line="167" pos:column="56">wParam</name></decl></param>, <param><decl><type><name pos:line="167" pos:column="64">LPARAM</name></type> <name pos:line="167" pos:column="71">lParam</name></decl></param>)</parameter_list>;</function_decl>


	<function><type><name pos:line="170" pos:column="9">Style</name> <type:modifier pos:line="170" pos:column="15">&amp;</type:modifier></type> <name pos:line="170" pos:column="17">getCurrentStyler</name><parameter_list pos:line="170" pos:column="33">()</parameter_list> <block pos:line="170" pos:column="36">{
		<decl_stmt><decl><type><name pos:line="171" pos:column="17">int</name></type> <name pos:line="171" pos:column="21">styleIndex</name> <init pos:line="171" pos:column="32">= <expr><call><name><op:operator pos:line="171" pos:column="34">::</op:operator><name pos:line="171" pos:column="36">SendDlgItemMessage</name></name><argument_list pos:line="171" pos:column="54">(<argument><expr><name pos:line="171" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="171" pos:column="63">IDC_STYLES_LIST</name></expr></argument>, <argument><expr><name pos:line="171" pos:column="80">LB_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="171" pos:column="94">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="171" pos:column="97">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><name pos:line="172" pos:column="21">styleIndex</name> <op:operator pos:line="172" pos:column="32">==</op:operator> <name pos:line="172" pos:column="35">LB_ERR</name></expr>)</condition><then pos:line="172" pos:column="42"> <expr_stmt><expr><name pos:line="172" pos:column="43">styleIndex</name> <op:operator pos:line="172" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="172" pos:column="56">0</lit:literal></expr>;</expr_stmt></then></if>

        <if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><name pos:line="174" pos:column="13">_currentLexerIndex</name> <op:operator pos:line="174" pos:column="32">==</op:operator> <lit:literal type="number" pos:line="174" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="174" pos:column="37">
		<block pos:line="175" pos:column="17">{
            <return pos:line="176" pos:column="13">return <expr><call><name><name pos:line="176" pos:column="20">_globalStyles</name><op:operator pos:line="176" pos:column="33">.</op:operator><name pos:line="176" pos:column="34">getStyler</name></name><argument_list pos:line="176" pos:column="43">(<argument><expr><name pos:line="176" pos:column="44">styleIndex</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></then>
        <else pos:line="178" pos:column="9">else
        <block pos:line="179" pos:column="9">{
		    <decl_stmt><decl><type><name pos:line="180" pos:column="21">LexerStyler</name> <type:modifier pos:line="180" pos:column="33">&amp;</type:modifier></type> <name pos:line="180" pos:column="35">lexerStyler</name> <init pos:line="180" pos:column="47">= <expr><call><name><name pos:line="180" pos:column="49">_lsArray</name><op:operator pos:line="180" pos:column="57">.</op:operator><name pos:line="180" pos:column="58">getLexerFromIndex</name></name><argument_list pos:line="180" pos:column="75">(<argument><expr><name pos:line="180" pos:column="76">_currentLexerIndex</name> <op:operator pos:line="180" pos:column="95">-</op:operator> <lit:literal type="number" pos:line="180" pos:column="97">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		    <return pos:line="181" pos:column="21">return <expr><call><name><name pos:line="181" pos:column="28">lexerStyler</name><op:operator pos:line="181" pos:column="39">.</op:operator><name pos:line="181" pos:column="40">getStyler</name></name><argument_list pos:line="181" pos:column="49">(<argument><expr><name pos:line="181" pos:column="50">styleIndex</name></expr></argument>)</argument_list></call></expr>;</return>
        }</block></else></if>
	}</block></function><empty_stmt pos:line="183" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="185" pos:column="9">int</name></type> <name pos:line="185" pos:column="13">whichTabColourIndex</name><parameter_list pos:line="185" pos:column="32">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="187" pos:column="9">void</name></type> <name pos:line="187" pos:column="14">updateColour</name><parameter_list pos:line="187" pos:column="26">(<param><decl><type><name pos:line="187" pos:column="27">bool</name></type> <name pos:line="187" pos:column="32">which</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="188" pos:column="9">void</name></type> <name pos:line="188" pos:column="14">updateFontStyleStatus</name><parameter_list pos:line="188" pos:column="35">(<param><decl><type><name pos:line="188" pos:column="36">fontStyleType</name></type> <name pos:line="188" pos:column="50">whitchStyle</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="189" pos:column="9">void</name></type> <name pos:line="189" pos:column="14">updateExtension</name><parameter_list pos:line="189" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="190" pos:column="9">void</name></type> <name pos:line="190" pos:column="14">updateFontName</name><parameter_list pos:line="190" pos:column="28">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="191" pos:column="9">void</name></type> <name pos:line="191" pos:column="14">updateFontSize</name><parameter_list pos:line="191" pos:column="28">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="192" pos:column="9">void</name></type> <name pos:line="192" pos:column="14">updateUserKeywords</name><parameter_list pos:line="192" pos:column="32">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="193" pos:column="9">void</name></type> <name pos:line="193" pos:column="14">switchToTheme</name><parameter_list pos:line="193" pos:column="27">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="194" pos:column="9">void</name></type> <name pos:line="194" pos:column="14">updateThemeName</name><parameter_list pos:line="194" pos:column="29">(<param><decl><type><name pos:line="194" pos:column="30">generic_string</name></type> <name pos:line="194" pos:column="45">themeName</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="196" pos:column="9">void</name></type> <name pos:line="196" pos:column="14">loadLangListFromNppParam</name><parameter_list pos:line="196" pos:column="38">()</parameter_list>;</function_decl>

	<function><type><name pos:line="198" pos:column="9">void</name></type> <name pos:line="198" pos:column="14">enableFg</name><parameter_list pos:line="198" pos:column="22">(<param><decl><type><name pos:line="198" pos:column="23">bool</name></type> <name pos:line="198" pos:column="28">isEnable</name></decl></param>)</parameter_list> <block pos:line="198" pos:column="38">{
		<expr_stmt><expr><call><name><op:operator pos:line="199" pos:column="17">::</op:operator><name pos:line="199" pos:column="19">EnableWindow</name></name><argument_list pos:line="199" pos:column="31">(<argument><expr><call><name><name pos:line="199" pos:column="32">_pFgColour</name><op:operator pos:line="199" pos:column="42">-&gt;</op:operator><name pos:line="199" pos:column="44">getHSelf</name></name><argument_list pos:line="199" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="199" pos:column="56">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="200" pos:column="17">::</op:operator><name pos:line="200" pos:column="19">EnableWindow</name></name><argument_list pos:line="200" pos:column="31">(<argument><expr><name pos:line="200" pos:column="32">_hFgColourStaticText</name></expr></argument>, <argument><expr><name pos:line="200" pos:column="54">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="201" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="203" pos:column="9">void</name></type> <name pos:line="203" pos:column="14">enableBg</name><parameter_list pos:line="203" pos:column="22">(<param><decl><type><name pos:line="203" pos:column="23">bool</name></type> <name pos:line="203" pos:column="28">isEnable</name></decl></param>)</parameter_list> <block pos:line="203" pos:column="38">{
		<expr_stmt><expr><call><name><op:operator pos:line="204" pos:column="17">::</op:operator><name pos:line="204" pos:column="19">EnableWindow</name></name><argument_list pos:line="204" pos:column="31">(<argument><expr><call><name><name pos:line="204" pos:column="32">_pBgColour</name><op:operator pos:line="204" pos:column="42">-&gt;</op:operator><name pos:line="204" pos:column="44">getHSelf</name></name><argument_list pos:line="204" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="204" pos:column="56">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="205" pos:column="17">::</op:operator><name pos:line="205" pos:column="19">EnableWindow</name></name><argument_list pos:line="205" pos:column="31">(<argument><expr><name pos:line="205" pos:column="32">_hBgColourStaticText</name></expr></argument>, <argument><expr><name pos:line="205" pos:column="54">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="206" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="208" pos:column="9">void</name></type> <name pos:line="208" pos:column="14">enableFontName</name><parameter_list pos:line="208" pos:column="28">(<param><decl><type><name pos:line="208" pos:column="29">bool</name></type> <name pos:line="208" pos:column="34">isEnable</name></decl></param>)</parameter_list> <block pos:line="208" pos:column="44">{
		<expr_stmt><expr><call><name><op:operator pos:line="209" pos:column="17">::</op:operator><name pos:line="209" pos:column="19">EnableWindow</name></name><argument_list pos:line="209" pos:column="31">(<argument><expr><name pos:line="209" pos:column="32">_hFontNameCombo</name></expr></argument>, <argument><expr><name pos:line="209" pos:column="49">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="210" pos:column="17">::</op:operator><name pos:line="210" pos:column="19">EnableWindow</name></name><argument_list pos:line="210" pos:column="31">(<argument><expr><name pos:line="210" pos:column="32">_hFontNameStaticText</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="54">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="211" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="213" pos:column="9">void</name></type> <name pos:line="213" pos:column="14">enableFontSize</name><parameter_list pos:line="213" pos:column="28">(<param><decl><type><name pos:line="213" pos:column="29">bool</name></type> <name pos:line="213" pos:column="34">isEnable</name></decl></param>)</parameter_list> <block pos:line="213" pos:column="44">{
		<expr_stmt><expr><call><name><op:operator pos:line="214" pos:column="17">::</op:operator><name pos:line="214" pos:column="19">EnableWindow</name></name><argument_list pos:line="214" pos:column="31">(<argument><expr><name pos:line="214" pos:column="32">_hFontSizeCombo</name></expr></argument>, <argument><expr><name pos:line="214" pos:column="49">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="215" pos:column="17">::</op:operator><name pos:line="215" pos:column="19">EnableWindow</name></name><argument_list pos:line="215" pos:column="31">(<argument><expr><name pos:line="215" pos:column="32">_hFontSizeStaticText</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="54">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="216" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="218" pos:column="9">void</name></type> <name pos:line="218" pos:column="14">enableFontStyle</name><parameter_list pos:line="218" pos:column="29">(<param><decl><type><name pos:line="218" pos:column="30">bool</name></type> <name pos:line="218" pos:column="35">isEnable</name></decl></param>)</parameter_list> <block pos:line="218" pos:column="45">{
		<expr_stmt><expr><call><name><op:operator pos:line="219" pos:column="17">::</op:operator><name pos:line="219" pos:column="19">EnableWindow</name></name><argument_list pos:line="219" pos:column="31">(<argument><expr><name pos:line="219" pos:column="32">_hCheckBold</name></expr></argument>, <argument><expr><name pos:line="219" pos:column="45">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="220" pos:column="17">::</op:operator><name pos:line="220" pos:column="19">EnableWindow</name></name><argument_list pos:line="220" pos:column="31">(<argument><expr><name pos:line="220" pos:column="32">_hCheckItalic</name></expr></argument>, <argument><expr><name pos:line="220" pos:column="47">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="221" pos:column="17">::</op:operator><name pos:line="221" pos:column="19">EnableWindow</name></name><argument_list pos:line="221" pos:column="31">(<argument><expr><name pos:line="221" pos:column="32">_hCheckUnderline</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="50">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="222" pos:column="10">;</empty_stmt>
    <function><type><name pos:line="223" pos:column="5">long</name></type> <name pos:line="223" pos:column="10">notifyDataModified</name><parameter_list pos:line="223" pos:column="28">()</parameter_list> <block pos:line="223" pos:column="31">{
		<expr_stmt><expr><name pos:line="224" pos:column="17">_isDirty</name> <op:operator pos:line="224" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="224" pos:column="28">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="225" pos:column="17">_isThemeDirty</name> <op:operator pos:line="225" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="225" pos:column="33">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="226" pos:column="17">::</op:operator><name pos:line="226" pos:column="19">EnableWindow</name></name><argument_list pos:line="226" pos:column="31">(<argument><expr><call><name><op:operator pos:line="226" pos:column="32">::</op:operator><name pos:line="226" pos:column="34">GetDlgItem</name></name><argument_list pos:line="226" pos:column="44">(<argument><expr><name pos:line="226" pos:column="45">_hSelf</name></expr></argument>, <argument><expr><name pos:line="226" pos:column="53">IDC_SAVECLOSE_BUTTON</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="226" pos:column="76">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="227" pos:column="17">return <expr><name pos:line="227" pos:column="24">TRUE</name></expr>;</return>
    }</block></function><empty_stmt pos:line="228" pos:column="6">;</empty_stmt>
	<function_decl><type><name pos:line="229" pos:column="9">void</name></type> <name pos:line="229" pos:column="14">setStyleListFromLexer</name><parameter_list pos:line="229" pos:column="35">(<param><decl><type><name pos:line="229" pos:column="36">int</name></type> <name pos:line="229" pos:column="40">index</name></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name pos:line="230" pos:column="5">void</name></type> <name pos:line="230" pos:column="10">setVisualFromStyleList</name><parameter_list pos:line="230" pos:column="32">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="232" pos:column="9">void</name></type> <name pos:line="232" pos:column="14">updateGlobalOverrideCtrls</name><parameter_list pos:line="232" pos:column="39">()</parameter_list>;</function_decl>

	<function><type><name pos:line="234" pos:column="9">void</name></type> <name pos:line="234" pos:column="14">showGlobalOverrideCtrls</name><parameter_list pos:line="234" pos:column="37">(<param><decl><type><name pos:line="234" pos:column="38">bool</name></type> <name pos:line="234" pos:column="43">show</name></decl></param>)</parameter_list>	<block pos:line="234" pos:column="49">{
		<if pos:line="235" pos:column="17">if <condition pos:line="235" pos:column="20">(<expr><name pos:line="235" pos:column="21">show</name></expr>)</condition><then pos:line="235" pos:column="26">
		<block pos:line="236" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="237" pos:column="25">updateGlobalOverrideCtrls</name><argument_list pos:line="237" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><op:operator pos:line="239" pos:column="17">::</op:operator><name pos:line="239" pos:column="19">ShowWindow</name></name><argument_list pos:line="239" pos:column="29">(<argument><expr><call><name><op:operator pos:line="239" pos:column="30">::</op:operator><name pos:line="239" pos:column="32">GetDlgItem</name></name><argument_list pos:line="239" pos:column="42">(<argument><expr><name pos:line="239" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="239" pos:column="51">IDC_GLOBAL_FG_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="239" pos:column="73">show</name><op:operator pos:line="239" pos:column="77">?</op:operator><name pos:line="239" pos:column="78">SW_SHOW</name><op:operator pos:line="239" pos:column="85">:</op:operator><name pos:line="239" pos:column="86">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="240" pos:column="17">::</op:operator><name pos:line="240" pos:column="19">ShowWindow</name></name><argument_list pos:line="240" pos:column="29">(<argument><expr><call><name><op:operator pos:line="240" pos:column="30">::</op:operator><name pos:line="240" pos:column="32">GetDlgItem</name></name><argument_list pos:line="240" pos:column="42">(<argument><expr><name pos:line="240" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="240" pos:column="51">IDC_GLOBAL_BG_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="240" pos:column="73">show</name><op:operator pos:line="240" pos:column="77">?</op:operator><name pos:line="240" pos:column="78">SW_SHOW</name><op:operator pos:line="240" pos:column="85">:</op:operator><name pos:line="240" pos:column="86">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="241" pos:column="17">::</op:operator><name pos:line="241" pos:column="19">ShowWindow</name></name><argument_list pos:line="241" pos:column="29">(<argument><expr><call><name><op:operator pos:line="241" pos:column="30">::</op:operator><name pos:line="241" pos:column="32">GetDlgItem</name></name><argument_list pos:line="241" pos:column="42">(<argument><expr><name pos:line="241" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="241" pos:column="51">IDC_GLOBAL_FONT_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="241" pos:column="75">show</name><op:operator pos:line="241" pos:column="79">?</op:operator><name pos:line="241" pos:column="80">SW_SHOW</name><op:operator pos:line="241" pos:column="87">:</op:operator><name pos:line="241" pos:column="88">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="242" pos:column="17">::</op:operator><name pos:line="242" pos:column="19">ShowWindow</name></name><argument_list pos:line="242" pos:column="29">(<argument><expr><call><name><op:operator pos:line="242" pos:column="30">::</op:operator><name pos:line="242" pos:column="32">GetDlgItem</name></name><argument_list pos:line="242" pos:column="42">(<argument><expr><name pos:line="242" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="242" pos:column="51">IDC_GLOBAL_FONTSIZE_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="242" pos:column="79">show</name><op:operator pos:line="242" pos:column="83">?</op:operator><name pos:line="242" pos:column="84">SW_SHOW</name><op:operator pos:line="242" pos:column="91">:</op:operator><name pos:line="242" pos:column="92">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="243" pos:column="17">::</op:operator><name pos:line="243" pos:column="19">ShowWindow</name></name><argument_list pos:line="243" pos:column="29">(<argument><expr><call><name><op:operator pos:line="243" pos:column="30">::</op:operator><name pos:line="243" pos:column="32">GetDlgItem</name></name><argument_list pos:line="243" pos:column="42">(<argument><expr><name pos:line="243" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="243" pos:column="51">IDC_GLOBAL_BOLD_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="243" pos:column="75">show</name><op:operator pos:line="243" pos:column="79">?</op:operator><name pos:line="243" pos:column="80">SW_SHOW</name><op:operator pos:line="243" pos:column="87">:</op:operator><name pos:line="243" pos:column="88">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="244" pos:column="17">::</op:operator><name pos:line="244" pos:column="19">ShowWindow</name></name><argument_list pos:line="244" pos:column="29">(<argument><expr><call><name><op:operator pos:line="244" pos:column="30">::</op:operator><name pos:line="244" pos:column="32">GetDlgItem</name></name><argument_list pos:line="244" pos:column="42">(<argument><expr><name pos:line="244" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="51">IDC_GLOBAL_ITALIC_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="244" pos:column="77">show</name><op:operator pos:line="244" pos:column="81">?</op:operator><name pos:line="244" pos:column="82">SW_SHOW</name><op:operator pos:line="244" pos:column="89">:</op:operator><name pos:line="244" pos:column="90">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="245" pos:column="17">::</op:operator><name pos:line="245" pos:column="19">ShowWindow</name></name><argument_list pos:line="245" pos:column="29">(<argument><expr><call><name><op:operator pos:line="245" pos:column="30">::</op:operator><name pos:line="245" pos:column="32">GetDlgItem</name></name><argument_list pos:line="245" pos:column="42">(<argument><expr><name pos:line="245" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="245" pos:column="51">IDC_GLOBAL_UNDERLINE_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="245" pos:column="80">show</name><op:operator pos:line="245" pos:column="84">?</op:operator><name pos:line="245" pos:column="85">SW_SHOW</name><op:operator pos:line="245" pos:column="92">:</op:operator><name pos:line="245" pos:column="93">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="246" pos:column="17">_isShownGOCtrls</name> <op:operator pos:line="246" pos:column="33">=</op:operator> <name pos:line="246" pos:column="35">show</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="247" pos:column="10">;</empty_stmt>
</private>}</block>;</class>

<cpp:endif pos:line="250" pos:column="1">#<cpp:directive pos:line="250" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="250" pos:column="8">//WORD_STYLE_H</comment>
</unit>
