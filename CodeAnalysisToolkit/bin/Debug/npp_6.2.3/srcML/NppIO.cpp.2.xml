<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\NppIO.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Notepad_plus_Window.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"FileDialog.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"EncodingMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"VerticalFileSwitcher.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file pos:line="34" pos:column="10">&lt;TCHAR.h&gt;</cpp:file></cpp:include>


<function><type><name pos:line="37" pos:column="1">BufferID</name></type> <name><name pos:line="37" pos:column="10">Notepad_plus</name><op:operator pos:line="37" pos:column="22">::</op:operator><name pos:line="37" pos:column="24">doOpen</name></name><parameter_list pos:line="37" pos:column="30">(<param><decl><type><specifier pos:line="37" pos:column="31">const</specifier> <name pos:line="37" pos:column="37">TCHAR</name> <type:modifier pos:line="37" pos:column="43">*</type:modifier></type><name pos:line="37" pos:column="44">fileName</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="54">bool</name></type> <name pos:line="37" pos:column="59">isReadOnly</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="71">int</name></type> <name pos:line="37" pos:column="75">encoding</name></decl></param>)</parameter_list>
<block pos:line="38" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="39" pos:column="9">NppParameters</name> <type:modifier pos:line="39" pos:column="23">*</type:modifier></type><name pos:line="39" pos:column="24">pNppParam</name> <init pos:line="39" pos:column="34">= <expr><call><name><name pos:line="39" pos:column="36">NppParameters</name><op:operator pos:line="39" pos:column="49">::</op:operator><name pos:line="39" pos:column="51">getInstance</name></name><argument_list pos:line="39" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">TCHAR</name></type> <name><name pos:line="40" pos:column="15">longFileName</name><index pos:line="40" pos:column="27">[<expr><name pos:line="40" pos:column="28">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="42" pos:column="9">::</op:operator><name pos:line="42" pos:column="11">GetFullPathName</name></name><argument_list pos:line="42" pos:column="26">(<argument><expr><name pos:line="42" pos:column="27">fileName</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="37">MAX_PATH</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="47">longFileName</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="43" pos:column="9">::</op:operator><name pos:line="43" pos:column="11">GetLongPathName</name></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">longFileName</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">longFileName</name></expr></argument>, <argument><expr><name pos:line="43" pos:column="55">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="45" pos:column="9">_lastRecentFileList</name><op:operator pos:line="45" pos:column="28">.</op:operator><name pos:line="45" pos:column="29">remove</name></name><argument_list pos:line="45" pos:column="35">(<argument><expr><name pos:line="45" pos:column="36">longFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><specifier pos:line="47" pos:column="9">const</specifier> <name pos:line="47" pos:column="15">TCHAR</name> <type:modifier pos:line="47" pos:column="21">*</type:modifier></type> <name pos:line="47" pos:column="23">fileName2Find</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="48" pos:column="9">generic_string</name></type> <name pos:line="48" pos:column="24">gs_fileName</name> <init pos:line="48" pos:column="36">= <expr><name pos:line="48" pos:column="38">fileName</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="49" pos:column="9">size_t</name></type> <name pos:line="49" pos:column="16">res</name> <init pos:line="49" pos:column="20">= <expr><call><name><name pos:line="49" pos:column="22">gs_fileName</name><op:operator pos:line="49" pos:column="33">.</op:operator><name pos:line="49" pos:column="34">find_first_of</name></name><argument_list pos:line="49" pos:column="47">(<argument><expr><name pos:line="49" pos:column="48">UNTITLED_STR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	 
	<if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">res</name> <op:operator pos:line="51" pos:column="17">!=</op:operator> <name><name pos:line="51" pos:column="20">string</name><op:operator pos:line="51" pos:column="26">::</op:operator><name pos:line="51" pos:column="28">npos</name></name> <op:operator pos:line="51" pos:column="33">&amp;&amp;</op:operator> <name pos:line="51" pos:column="36">res</name> <op:operator pos:line="51" pos:column="40">==</op:operator> <lit:literal type="number" pos:line="51" pos:column="43">0</lit:literal></expr>)</condition><then pos:line="51" pos:column="45">
	<block pos:line="52" pos:column="9">{
		<expr_stmt><expr><name pos:line="53" pos:column="17">fileName2Find</name> <op:operator pos:line="53" pos:column="31">=</op:operator> <name pos:line="53" pos:column="33">fileName</name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="55" pos:column="9">else
	<block pos:line="56" pos:column="9">{
		<expr_stmt><expr><name pos:line="57" pos:column="17">fileName2Find</name> <op:operator pos:line="57" pos:column="31">=</op:operator> <name pos:line="57" pos:column="33">longFileName</name></expr>;</expr_stmt>
	}</block></else></if>

	<decl_stmt><decl><type><name pos:line="60" pos:column="9">BufferID</name></type> <name pos:line="60" pos:column="18">test</name> <init pos:line="60" pos:column="23">= <expr><call><name><name pos:line="60" pos:column="25">MainFileManager</name><op:operator pos:line="60" pos:column="40">-&gt;</op:operator><name pos:line="60" pos:column="42">getBufferFromName</name></name><argument_list pos:line="60" pos:column="59">(<argument><expr><name pos:line="60" pos:column="60">fileName2Find</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name pos:line="61" pos:column="13">test</name> <op:operator pos:line="61" pos:column="18">!=</op:operator> <name pos:line="61" pos:column="21">BUFFER_INVALID</name></expr>)</condition><then pos:line="61" pos:column="36">
	<block pos:line="62" pos:column="9">{
		<comment type="line" pos:line="63" pos:column="17">//switchToFile(test);</comment>
		<comment type="line" pos:line="64" pos:column="17">//Dont switch, not responsibility of doOpen, but of caller</comment>
		<if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">_pTrayIco</name></expr>)</condition><then pos:line="65" pos:column="31">
		<block pos:line="66" pos:column="17">{
			<if pos:line="67" pos:column="25">if <condition pos:line="67" pos:column="28">(<expr><call><name><name pos:line="67" pos:column="29">_pTrayIco</name><op:operator pos:line="67" pos:column="38">-&gt;</op:operator><name pos:line="67" pos:column="40">isInTray</name></name><argument_list pos:line="67" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="67" pos:column="51">
			<block pos:line="68" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="69" pos:column="33">::</op:operator><name pos:line="69" pos:column="35">ShowWindow</name></name><argument_list pos:line="69" pos:column="45">(<argument><expr><call><name><name pos:line="69" pos:column="46">_pPublicInterface</name><op:operator pos:line="69" pos:column="63">-&gt;</op:operator><name pos:line="69" pos:column="65">getHSelf</name></name><argument_list pos:line="69" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="77">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="70" pos:column="33">if <condition pos:line="70" pos:column="36">(<expr><op:operator pos:line="70" pos:column="37">!</op:operator><call><name><name pos:line="70" pos:column="38">_pPublicInterface</name><op:operator pos:line="70" pos:column="55">-&gt;</op:operator><name pos:line="70" pos:column="57">isPrelaunch</name></name><argument_list pos:line="70" pos:column="68">()</argument_list></call></expr>)</condition><then pos:line="70" pos:column="71">
					<expr_stmt><expr><call><name><name pos:line="71" pos:column="41">_pTrayIco</name><op:operator pos:line="71" pos:column="50">-&gt;</op:operator><name pos:line="71" pos:column="52">doTrayIcon</name></name><argument_list pos:line="71" pos:column="62">(<argument><expr><name pos:line="71" pos:column="63">REMOVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><call><name><op:operator pos:line="72" pos:column="33">::</op:operator><name pos:line="72" pos:column="35">SendMessage</name></name><argument_list pos:line="72" pos:column="46">(<argument><expr><call><name><name pos:line="72" pos:column="47">_pPublicInterface</name><op:operator pos:line="72" pos:column="64">-&gt;</op:operator><name pos:line="72" pos:column="66">getHSelf</name></name><argument_list pos:line="72" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="72" pos:column="78">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="72" pos:column="87">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="72" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<return pos:line="75" pos:column="17">return <expr><name pos:line="75" pos:column="24">test</name></expr>;</return>
	}</block></then></if>

	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><call><name pos:line="78" pos:column="13">isFileSession</name><argument_list pos:line="78" pos:column="26">(<argument><expr><name pos:line="78" pos:column="27">longFileName</name></expr></argument>)</argument_list></call> <op:operator pos:line="78" pos:column="41">&amp;&amp;</op:operator> <call><name pos:line="78" pos:column="44">PathFileExists</name><argument_list pos:line="78" pos:column="58">(<argument><expr><name pos:line="78" pos:column="59">longFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="78" pos:column="73"> 
	<block pos:line="79" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="80" pos:column="17">fileLoadSession</name><argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">longFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="81" pos:column="17">return <expr><name pos:line="81" pos:column="24">BUFFER_INVALID</name></expr>;</return>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="84" pos:column="9">bool</name></type> <name pos:line="84" pos:column="14">isWow64Off</name> <init pos:line="84" pos:column="25">= <expr><lit:literal type="boolean" pos:line="84" pos:column="27">false</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><op:operator pos:line="85" pos:column="13">!</op:operator><call><name pos:line="85" pos:column="14">PathFileExists</name><argument_list pos:line="85" pos:column="28">(<argument><expr><name pos:line="85" pos:column="29">longFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="85" pos:column="43">
	<block pos:line="86" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="87" pos:column="17">pNppParam</name><op:operator pos:line="87" pos:column="26">-&gt;</op:operator><name pos:line="87" pos:column="28">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="87" pos:column="61">(<argument><expr><name pos:line="87" pos:column="62">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="88" pos:column="17">isWow64Off</name> <op:operator pos:line="88" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="88" pos:column="30">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><op:operator pos:line="91" pos:column="13">!</op:operator><call><name pos:line="91" pos:column="14">PathFileExists</name><argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">longFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="91" pos:column="43">
	<block pos:line="92" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="93" pos:column="17">TCHAR</name></type> <name><name pos:line="93" pos:column="23">str2display</name><index pos:line="93" pos:column="34">[<expr><name pos:line="93" pos:column="35">MAX_PATH</name><op:operator pos:line="93" pos:column="43">*</op:operator><lit:literal type="number" pos:line="93" pos:column="44">2</lit:literal></expr>]</index></name></decl>;</decl_stmt>
		<function_decl><type><name pos:line="94" pos:column="17">generic_string</name></type> <name pos:line="94" pos:column="32">longFileDir</name><parameter_list pos:line="94" pos:column="43">(<param><decl><type><name pos:line="94" pos:column="44">longFileName</name></type></decl></param>)</parameter_list>;</function_decl>
		<expr_stmt><expr><call><name pos:line="95" pos:column="17">PathRemoveFileSpec</name><argument_list pos:line="95" pos:column="35">(<argument><expr><name pos:line="95" pos:column="36">longFileDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="97" pos:column="17">bool</name></type> <name pos:line="97" pos:column="22">isCreateFileSuccessful</name> <init pos:line="97" pos:column="45">= <expr><lit:literal type="boolean" pos:line="97" pos:column="47">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><call><name pos:line="98" pos:column="21">PathFileExists</name><argument_list pos:line="98" pos:column="35">(<argument><expr><call><name><name pos:line="98" pos:column="36">longFileDir</name><op:operator pos:line="98" pos:column="47">.</op:operator><name pos:line="98" pos:column="48">c_str</name></name><argument_list pos:line="98" pos:column="53">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="98" pos:column="57">
		<block pos:line="99" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="100" pos:column="25">wsprintf</name><argument_list pos:line="100" pos:column="33">(<argument><expr><name pos:line="100" pos:column="34">str2display</name></expr></argument>, <argument><expr><call><name pos:line="100" pos:column="47">TEXT</name><argument_list pos:line="100" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="52">"%s doesn't exist. Create it?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="100" pos:column="85">longFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><call><name><op:operator pos:line="101" pos:column="29">::</op:operator><name pos:line="101" pos:column="31">MessageBox</name></name><argument_list pos:line="101" pos:column="41">(<argument><expr><call><name><name pos:line="101" pos:column="42">_pPublicInterface</name><op:operator pos:line="101" pos:column="59">-&gt;</op:operator><name pos:line="101" pos:column="61">getHSelf</name></name><argument_list pos:line="101" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="101" pos:column="73">str2display</name></expr></argument>, <argument><expr><call><name pos:line="101" pos:column="86">TEXT</name><argument_list pos:line="101" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="101" pos:column="91">"Create new file"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="101" pos:column="111">MB_YESNO</name></expr></argument>)</argument_list></call> <op:operator pos:line="101" pos:column="121">==</op:operator> <name pos:line="101" pos:column="124">IDYES</name></expr>)</condition><then pos:line="101" pos:column="130">
			<block pos:line="102" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="103" pos:column="33">bool</name></type> <name pos:line="103" pos:column="38">res</name> <init pos:line="103" pos:column="42">= <expr><call><name><name pos:line="103" pos:column="44">MainFileManager</name><op:operator pos:line="103" pos:column="59">-&gt;</op:operator><name pos:line="103" pos:column="61">createEmptyFile</name></name><argument_list pos:line="103" pos:column="76">(<argument><expr><name pos:line="103" pos:column="77">longFileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="104" pos:column="33">if <condition pos:line="104" pos:column="36">(<expr><name pos:line="104" pos:column="37">res</name></expr>)</condition><then pos:line="104" pos:column="41">
				<block pos:line="105" pos:column="33">{
					<expr_stmt><expr><name pos:line="106" pos:column="41">isCreateFileSuccessful</name> <op:operator pos:line="106" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="106" pos:column="66">true</lit:literal></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="108" pos:column="33">else
				<block pos:line="109" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="110" pos:column="41">wsprintf</name><argument_list pos:line="110" pos:column="49">(<argument><expr><name pos:line="110" pos:column="50">str2display</name></expr></argument>, <argument><expr><call><name pos:line="110" pos:column="63">TEXT</name><argument_list pos:line="110" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="110" pos:column="68">"Cannot create the file \"%s\""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="110" pos:column="102">longFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="111" pos:column="41">::</op:operator><name pos:line="111" pos:column="43">MessageBox</name></name><argument_list pos:line="111" pos:column="53">(<argument><expr><call><name><name pos:line="111" pos:column="54">_pPublicInterface</name><op:operator pos:line="111" pos:column="71">-&gt;</op:operator><name pos:line="111" pos:column="73">getHSelf</name></name><argument_list pos:line="111" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="111" pos:column="85">str2display</name></expr></argument>, <argument><expr><call><name pos:line="111" pos:column="98">TEXT</name><argument_list pos:line="111" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="111" pos:column="103">"Create new file"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="111" pos:column="123">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
		}</block></then></if>

		<if pos:line="116" pos:column="17">if <condition pos:line="116" pos:column="20">(<expr><op:operator pos:line="116" pos:column="21">!</op:operator><name pos:line="116" pos:column="22">isCreateFileSuccessful</name></expr>)</condition><then pos:line="116" pos:column="45">
		<block pos:line="117" pos:column="17">{
			<if pos:line="118" pos:column="25">if <condition pos:line="118" pos:column="28">(<expr><name pos:line="118" pos:column="29">isWow64Off</name></expr>)</condition><then pos:line="118" pos:column="40">
			<block pos:line="119" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="120" pos:column="33">pNppParam</name><op:operator pos:line="120" pos:column="42">-&gt;</op:operator><name pos:line="120" pos:column="44">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="120" pos:column="77">(<argument><expr><name pos:line="120" pos:column="78">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="121" pos:column="33">isWow64Off</name> <op:operator pos:line="121" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="121" pos:column="46">false</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			<return pos:line="123" pos:column="25">return <expr><name pos:line="123" pos:column="32">BUFFER_INVALID</name></expr>;</return>
		}</block></then></if>
	}</block></then></if>

	<comment type="line" pos:line="127" pos:column="9">// Notify plugins that current file is about to load</comment>
	<comment type="line" pos:line="128" pos:column="9">// Plugins can should use this notification to filter SCN_MODIFIED</comment>
	<decl_stmt><decl><type><name pos:line="129" pos:column="9">SCNotification</name></type> <name pos:line="129" pos:column="24">scnN</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="130" pos:column="9">scnN</name><op:operator pos:line="130" pos:column="13">.</op:operator><name pos:line="130" pos:column="14">nmhdr</name><op:operator pos:line="130" pos:column="19">.</op:operator><name pos:line="130" pos:column="20">code</name></name> <op:operator pos:line="130" pos:column="25">=</op:operator> <name pos:line="130" pos:column="27">NPPN_FILEBEFORELOAD</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="131" pos:column="9">scnN</name><op:operator pos:line="131" pos:column="13">.</op:operator><name pos:line="131" pos:column="14">nmhdr</name><op:operator pos:line="131" pos:column="19">.</op:operator><name pos:line="131" pos:column="20">hwndFrom</name></name> <op:operator pos:line="131" pos:column="29">=</op:operator> <call><name><name pos:line="131" pos:column="31">_pPublicInterface</name><op:operator pos:line="131" pos:column="48">-&gt;</op:operator><name pos:line="131" pos:column="50">getHSelf</name></name><argument_list pos:line="131" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="132" pos:column="9">scnN</name><op:operator pos:line="132" pos:column="13">.</op:operator><name pos:line="132" pos:column="14">nmhdr</name><op:operator pos:line="132" pos:column="19">.</op:operator><name pos:line="132" pos:column="20">idFrom</name></name> <op:operator pos:line="132" pos:column="27">=</op:operator> <name pos:line="132" pos:column="29">NULL</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="133" pos:column="9">_pluginsManager</name><op:operator pos:line="133" pos:column="24">.</op:operator><name pos:line="133" pos:column="25">notify</name></name><argument_list pos:line="133" pos:column="31">(<argument><expr><op:operator pos:line="133" pos:column="32">&amp;</op:operator><name pos:line="133" pos:column="33">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">encoding</name> <op:operator pos:line="135" pos:column="22">==</op:operator> <op:operator pos:line="135" pos:column="25">-</op:operator><lit:literal type="number" pos:line="135" pos:column="26">1</lit:literal></expr>)</condition><then pos:line="135" pos:column="28">
	<block pos:line="136" pos:column="9">{
		<expr_stmt><expr><name pos:line="137" pos:column="17">encoding</name> <op:operator pos:line="137" pos:column="26">=</op:operator> <call><name pos:line="137" pos:column="28">getHtmlXmlEncoding</name><argument_list pos:line="137" pos:column="46">(<argument><expr><name pos:line="137" pos:column="47">longFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<decl_stmt><decl><type><name pos:line="140" pos:column="9">BufferID</name></type> <name pos:line="140" pos:column="18">buffer</name> <init pos:line="140" pos:column="25">= <expr><call><name><name pos:line="140" pos:column="27">MainFileManager</name><op:operator pos:line="140" pos:column="42">-&gt;</op:operator><name pos:line="140" pos:column="44">loadFile</name></name><argument_list pos:line="140" pos:column="52">(<argument><expr><name pos:line="140" pos:column="53">longFileName</name></expr></argument>, <argument><expr><name pos:line="140" pos:column="67">NULL</name></expr></argument>, <argument><expr><name pos:line="140" pos:column="73">encoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="142" pos:column="9">if <condition pos:line="142" pos:column="12">(<expr><name pos:line="142" pos:column="13">buffer</name> <op:operator pos:line="142" pos:column="20">!=</op:operator> <name pos:line="142" pos:column="23">BUFFER_INVALID</name></expr>)</condition><then pos:line="142" pos:column="38">
	<block pos:line="143" pos:column="9">{
		<expr_stmt><expr><name pos:line="144" pos:column="17">_isFileOpening</name> <op:operator pos:line="144" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="144" pos:column="34">true</lit:literal></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="146" pos:column="17">Buffer</name> <type:modifier pos:line="146" pos:column="24">*</type:modifier></type> <name pos:line="146" pos:column="26">buf</name> <init pos:line="146" pos:column="30">= <expr><call><name><name pos:line="146" pos:column="32">MainFileManager</name><op:operator pos:line="146" pos:column="47">-&gt;</op:operator><name pos:line="146" pos:column="49">getBufferByID</name></name><argument_list pos:line="146" pos:column="62">(<argument><expr><name pos:line="146" pos:column="63">buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="147" pos:column="17">// if file is read only, we set the view read only</comment>
		<if pos:line="148" pos:column="17">if <condition pos:line="148" pos:column="20">(<expr><name pos:line="148" pos:column="21">isReadOnly</name></expr>)</condition><then pos:line="148" pos:column="32">
			<expr_stmt><expr><call><name><name pos:line="149" pos:column="25">buf</name><op:operator pos:line="149" pos:column="28">-&gt;</op:operator><name pos:line="149" pos:column="30">setUserReadOnly</name></name><argument_list pos:line="149" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="149" pos:column="46">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<comment type="line" pos:line="151" pos:column="17">// Notify plugins that current file is about to open</comment>
		<expr_stmt><expr><name><name pos:line="152" pos:column="17">scnN</name><op:operator pos:line="152" pos:column="21">.</op:operator><name pos:line="152" pos:column="22">nmhdr</name><op:operator pos:line="152" pos:column="27">.</op:operator><name pos:line="152" pos:column="28">code</name></name> <op:operator pos:line="152" pos:column="33">=</op:operator> <name pos:line="152" pos:column="35">NPPN_FILEBEFOREOPEN</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="153" pos:column="17">scnN</name><op:operator pos:line="153" pos:column="21">.</op:operator><name pos:line="153" pos:column="22">nmhdr</name><op:operator pos:line="153" pos:column="27">.</op:operator><name pos:line="153" pos:column="28">idFrom</name></name> <op:operator pos:line="153" pos:column="35">=</op:operator> <op:operator pos:line="153" pos:column="37">(</op:operator><name pos:line="153" pos:column="38">uptr_t</name><op:operator pos:line="153" pos:column="44">)</op:operator><name pos:line="153" pos:column="45">buffer</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="154" pos:column="17">_pluginsManager</name><op:operator pos:line="154" pos:column="32">.</op:operator><name pos:line="154" pos:column="33">notify</name></name><argument_list pos:line="154" pos:column="39">(<argument><expr><op:operator pos:line="154" pos:column="40">&amp;</op:operator><name pos:line="154" pos:column="41">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		

		<expr_stmt><expr><call><name pos:line="157" pos:column="17">loadBufferIntoView</name><argument_list pos:line="157" pos:column="35">(<argument><expr><name pos:line="157" pos:column="36">buffer</name></expr></argument>, <argument><expr><call><name pos:line="157" pos:column="44">currentView</name><argument_list pos:line="157" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="159" pos:column="17">if <condition pos:line="159" pos:column="20">(<expr><name pos:line="159" pos:column="21">_pTrayIco</name></expr>)</condition><then pos:line="159" pos:column="31">
		<block pos:line="160" pos:column="17">{
			<if pos:line="161" pos:column="25">if <condition pos:line="161" pos:column="28">(<expr><call><name><name pos:line="161" pos:column="29">_pTrayIco</name><op:operator pos:line="161" pos:column="38">-&gt;</op:operator><name pos:line="161" pos:column="40">isInTray</name></name><argument_list pos:line="161" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="161" pos:column="51">
			<block pos:line="162" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="163" pos:column="33">::</op:operator><name pos:line="163" pos:column="35">ShowWindow</name></name><argument_list pos:line="163" pos:column="45">(<argument><expr><call><name><name pos:line="163" pos:column="46">_pPublicInterface</name><op:operator pos:line="163" pos:column="63">-&gt;</op:operator><name pos:line="163" pos:column="65">getHSelf</name></name><argument_list pos:line="163" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="163" pos:column="77">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="164" pos:column="33">if <condition pos:line="164" pos:column="36">(<expr><op:operator pos:line="164" pos:column="37">!</op:operator><call><name><name pos:line="164" pos:column="38">_pPublicInterface</name><op:operator pos:line="164" pos:column="55">-&gt;</op:operator><name pos:line="164" pos:column="57">isPrelaunch</name></name><argument_list pos:line="164" pos:column="68">()</argument_list></call></expr>)</condition><then pos:line="164" pos:column="71">
					<expr_stmt><expr><call><name><name pos:line="165" pos:column="41">_pTrayIco</name><op:operator pos:line="165" pos:column="50">-&gt;</op:operator><name pos:line="165" pos:column="52">doTrayIcon</name></name><argument_list pos:line="165" pos:column="62">(<argument><expr><name pos:line="165" pos:column="63">REMOVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><call><name><op:operator pos:line="166" pos:column="33">::</op:operator><name pos:line="166" pos:column="35">SendMessage</name></name><argument_list pos:line="166" pos:column="46">(<argument><expr><call><name><name pos:line="166" pos:column="47">_pPublicInterface</name><op:operator pos:line="166" pos:column="64">-&gt;</op:operator><name pos:line="166" pos:column="66">getHSelf</name></name><argument_list pos:line="166" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="166" pos:column="78">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="87">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="166" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="169" pos:column="17">PathRemoveFileSpec</name><argument_list pos:line="169" pos:column="35">(<argument><expr><name pos:line="169" pos:column="36">longFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="170" pos:column="17">_linkTriggered</name> <op:operator pos:line="170" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="170" pos:column="34">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="171" pos:column="17">_isFileOpening</name> <op:operator pos:line="171" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="171" pos:column="34">false</lit:literal></expr>;</expr_stmt>

		<comment type="line" pos:line="173" pos:column="17">// Notify plugins that current file is just opened</comment>
		<expr_stmt><expr><name><name pos:line="174" pos:column="17">scnN</name><op:operator pos:line="174" pos:column="21">.</op:operator><name pos:line="174" pos:column="22">nmhdr</name><op:operator pos:line="174" pos:column="27">.</op:operator><name pos:line="174" pos:column="28">code</name></name> <op:operator pos:line="174" pos:column="33">=</op:operator> <name pos:line="174" pos:column="35">NPPN_FILEOPENED</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="175" pos:column="17">_pluginsManager</name><op:operator pos:line="175" pos:column="32">.</op:operator><name pos:line="175" pos:column="33">notify</name></name><argument_list pos:line="175" pos:column="39">(<argument><expr><op:operator pos:line="175" pos:column="40">&amp;</op:operator><name pos:line="175" pos:column="41">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="176" pos:column="17">if <condition pos:line="176" pos:column="20">(<expr><name pos:line="176" pos:column="21">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="176" pos:column="41">
			<expr_stmt><expr><call><name><name pos:line="177" pos:column="25">_pFileSwitcherPanel</name><op:operator pos:line="177" pos:column="44">-&gt;</op:operator><name pos:line="177" pos:column="46">newItem</name></name><argument_list pos:line="177" pos:column="53">(<argument><expr><op:operator pos:line="177" pos:column="54">(</op:operator><name pos:line="177" pos:column="55">int</name><op:operator pos:line="177" pos:column="58">)</op:operator><name pos:line="177" pos:column="59">buf</name></expr></argument>, <argument><expr><call><name pos:line="177" pos:column="64">currentView</name><argument_list pos:line="177" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then>
	<else pos:line="179" pos:column="9">else
	<block pos:line="180" pos:column="9">{
		<if pos:line="181" pos:column="17">if <condition pos:line="181" pos:column="20">(<expr><call><name><op:operator pos:line="181" pos:column="21">::</op:operator><name pos:line="181" pos:column="23">PathIsDirectory</name></name><argument_list pos:line="181" pos:column="38">(<argument><expr><name pos:line="181" pos:column="39">fileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="181" pos:column="49">
		<block pos:line="182" pos:column="17">{
			<decl_stmt><decl><type><name><name pos:line="183" pos:column="25">vector</name><argument_list pos:line="183" pos:column="31">&lt;<argument><expr><name pos:line="183" pos:column="32">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="183" pos:column="48">fileNames</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name><name pos:line="184" pos:column="25">vector</name><argument_list pos:line="184" pos:column="31">&lt;<argument><expr><name pos:line="184" pos:column="32">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="184" pos:column="48">patterns</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="185" pos:column="25">patterns</name><op:operator pos:line="185" pos:column="33">.</op:operator><name pos:line="185" pos:column="34">push_back</name></name><argument_list pos:line="185" pos:column="43">(<argument><expr><call><name pos:line="185" pos:column="44">TEXT</name><argument_list pos:line="185" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="185" pos:column="49">"*.*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="187" pos:column="25">generic_string</name></type> <name pos:line="187" pos:column="40">fileNameStr</name> <init pos:line="187" pos:column="52">= <expr><name pos:line="187" pos:column="54">fileName</name></expr></init></decl>;</decl_stmt>
			<if pos:line="188" pos:column="25">if <condition pos:line="188" pos:column="28">(<expr><name><name pos:line="188" pos:column="29">fileName</name><index pos:line="188" pos:column="37">[<expr><call><name pos:line="188" pos:column="38">lstrlen</name><argument_list pos:line="188" pos:column="45">(<argument><expr><name pos:line="188" pos:column="46">fileName</name></expr></argument>)</argument_list></call> <op:operator pos:line="188" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="188" pos:column="58">1</lit:literal></expr>]</index></name> <op:operator pos:line="188" pos:column="61">!=</op:operator> <lit:literal type="char" pos:line="188" pos:column="64">'\\'</lit:literal></expr>)</condition><then pos:line="188" pos:column="69">
				<expr_stmt><expr><name pos:line="189" pos:column="33">fileNameStr</name> <op:operator pos:line="189" pos:column="45">+=</op:operator> <call><name pos:line="189" pos:column="48">TEXT</name><argument_list pos:line="189" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="189" pos:column="53">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name pos:line="191" pos:column="25">getMatchedFileNames</name><argument_list pos:line="191" pos:column="44">(<argument><expr><call><name><name pos:line="191" pos:column="45">fileNameStr</name><op:operator pos:line="191" pos:column="56">.</op:operator><name pos:line="191" pos:column="57">c_str</name></name><argument_list pos:line="191" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="191" pos:column="66">patterns</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="76">fileNames</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="191" pos:column="87">true</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="191" pos:column="93">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="192" pos:column="25">size_t</name></type> <name pos:line="192" pos:column="32">nbFiles2Open</name> <init pos:line="192" pos:column="45">= <expr><call><name><name pos:line="192" pos:column="47">fileNames</name><op:operator pos:line="192" pos:column="56">.</op:operator><name pos:line="192" pos:column="57">size</name></name><argument_list pos:line="192" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="194" pos:column="25">bool</name></type> <name pos:line="194" pos:column="30">ok2Open</name> <init pos:line="194" pos:column="38">= <expr><lit:literal type="boolean" pos:line="194" pos:column="40">true</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="195" pos:column="25">if <condition pos:line="195" pos:column="28">(<expr><name pos:line="195" pos:column="29">nbFiles2Open</name> <op:operator pos:line="195" pos:column="42">&gt;</op:operator> <lit:literal type="number" pos:line="195" pos:column="44">200</lit:literal></expr>)</condition><then pos:line="195" pos:column="48">
			<block pos:line="196" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="197" pos:column="33">int</name></type> <name pos:line="197" pos:column="37">answer</name> <init pos:line="197" pos:column="44">= <expr><call><name><name pos:line="197" pos:column="46">_nativeLangSpeaker</name><op:operator pos:line="197" pos:column="64">.</op:operator><name pos:line="197" pos:column="65">messageBox</name></name><argument_list pos:line="197" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="197" pos:column="76">"NbFileToOpenImportantWarning"</lit:literal></expr></argument>,
												<argument><expr><call><name><name pos:line="198" pos:column="97">_pPublicInterface</name><op:operator pos:line="198" pos:column="114">-&gt;</op:operator><name pos:line="198" pos:column="116">getHSelf</name></name><argument_list pos:line="198" pos:column="124">()</argument_list></call></expr></argument>,
												<argument><expr><call><name pos:line="199" pos:column="97">TEXT</name><argument_list pos:line="199" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="199" pos:column="102">"$INT_REPLACE$ files are about to be opened.\rAre you sure to open them?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><call><name pos:line="200" pos:column="97">TEXT</name><argument_list pos:line="200" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="200" pos:column="102">"Amount of files to open is too large"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
												<argument><expr><name pos:line="201" pos:column="97">MB_YESNO</name><op:operator pos:line="201" pos:column="105">|</op:operator><name pos:line="201" pos:column="106">MB_APPLMODAL</name></expr></argument>,
												<argument><expr><name pos:line="202" pos:column="97">nbFiles2Open</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="203" pos:column="33">ok2Open</name> <op:operator pos:line="203" pos:column="41">=</op:operator> <name pos:line="203" pos:column="43">answer</name> <op:operator pos:line="203" pos:column="50">==</op:operator> <name pos:line="203" pos:column="53">IDYES</name></expr>;</expr_stmt>
			}</block></then></if>

			<if pos:line="206" pos:column="25">if <condition pos:line="206" pos:column="28">(<expr><name pos:line="206" pos:column="29">ok2Open</name></expr>)</condition><then pos:line="206" pos:column="37">
			<block pos:line="207" pos:column="25">{
				<for pos:line="208" pos:column="33">for (<init><decl><type><name pos:line="208" pos:column="38">size_t</name></type> <name pos:line="208" pos:column="45">i</name> <init pos:line="208" pos:column="47">= <expr><lit:literal type="number" pos:line="208" pos:column="49">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="208" pos:column="53">i</name> <op:operator pos:line="208" pos:column="55">&lt;</op:operator> <name pos:line="208" pos:column="57">nbFiles2Open</name></expr> ;</condition> <incr><expr><name pos:line="208" pos:column="72">i</name><op:operator pos:line="208" pos:column="73">++</op:operator></expr></incr>)
				<block pos:line="209" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="210" pos:column="41">doOpen</name><argument_list pos:line="210" pos:column="47">(<argument><expr><name><name pos:line="210" pos:column="48">fileNames</name><index pos:line="210" pos:column="57">[<expr><name pos:line="210" pos:column="58">i</name></expr>]</index></name><op:operator pos:line="210" pos:column="60">.</op:operator><call><name pos:line="210" pos:column="61">c_str</name><argument_list pos:line="210" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
			}</block></then></if>
		}</block></then>
		<else pos:line="214" pos:column="17">else
		<block pos:line="215" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="216" pos:column="25">generic_string</name></type> <name pos:line="216" pos:column="40">msg</name> <init pos:line="216" pos:column="44">= <expr><call><name pos:line="216" pos:column="46">TEXT</name><argument_list pos:line="216" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="216" pos:column="51">"Can not open file \""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="217" pos:column="25">msg</name> <op:operator pos:line="217" pos:column="29">+=</op:operator> <name pos:line="217" pos:column="32">longFileName</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="218" pos:column="25">msg</name> <op:operator pos:line="218" pos:column="29">+=</op:operator> <call><name pos:line="218" pos:column="32">TEXT</name><argument_list pos:line="218" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="218" pos:column="37">"\"."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="219" pos:column="25">::</op:operator><name pos:line="219" pos:column="27">MessageBox</name></name><argument_list pos:line="219" pos:column="37">(<argument><expr><call><name><name pos:line="219" pos:column="38">_pPublicInterface</name><op:operator pos:line="219" pos:column="55">-&gt;</op:operator><name pos:line="219" pos:column="57">getHSelf</name></name><argument_list pos:line="219" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="219" pos:column="69">msg</name><op:operator pos:line="219" pos:column="72">.</op:operator><name pos:line="219" pos:column="73">c_str</name></name><argument_list pos:line="219" pos:column="78">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="219" pos:column="82">TEXT</name><argument_list pos:line="219" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="219" pos:column="87">"ERROR"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="219" pos:column="97">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="220" pos:column="25">_isFileOpening</name> <op:operator pos:line="220" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="220" pos:column="42">false</lit:literal></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="222" pos:column="25">scnN</name><op:operator pos:line="222" pos:column="29">.</op:operator><name pos:line="222" pos:column="30">nmhdr</name><op:operator pos:line="222" pos:column="35">.</op:operator><name pos:line="222" pos:column="36">code</name></name> <op:operator pos:line="222" pos:column="41">=</op:operator> <name pos:line="222" pos:column="43">NPPN_FILELOADFAILED</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="223" pos:column="25">_pluginsManager</name><op:operator pos:line="223" pos:column="40">.</op:operator><name pos:line="223" pos:column="41">notify</name></name><argument_list pos:line="223" pos:column="47">(<argument><expr><op:operator pos:line="223" pos:column="48">&amp;</op:operator><name pos:line="223" pos:column="49">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></else></if>

	<if pos:line="227" pos:column="9">if <condition pos:line="227" pos:column="12">(<expr><name pos:line="227" pos:column="13">isWow64Off</name></expr>)</condition><then pos:line="227" pos:column="24">
	<block pos:line="228" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="229" pos:column="17">pNppParam</name><op:operator pos:line="229" pos:column="26">-&gt;</op:operator><name pos:line="229" pos:column="28">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="229" pos:column="61">(<argument><expr><name pos:line="229" pos:column="62">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="230" pos:column="17">isWow64Off</name> <op:operator pos:line="230" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="230" pos:column="30">false</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="232" pos:column="9">return <expr><name pos:line="232" pos:column="16">buffer</name></expr>;</return>
}</block></function>

<function><type><name pos:line="235" pos:column="1">bool</name></type> <name><name pos:line="235" pos:column="6">Notepad_plus</name><op:operator pos:line="235" pos:column="18">::</op:operator><name pos:line="235" pos:column="20">doReload</name></name><parameter_list pos:line="235" pos:column="28">(<param><decl><type><name pos:line="235" pos:column="29">BufferID</name></type> <name pos:line="235" pos:column="38">id</name></decl></param>, <param><decl><type><name pos:line="235" pos:column="42">bool</name></type> <name pos:line="235" pos:column="47">alert</name></decl></param>)</parameter_list>
<block pos:line="236" pos:column="1">{
	<if pos:line="237" pos:column="9">if <condition pos:line="237" pos:column="12">(<expr><name pos:line="237" pos:column="13">alert</name></expr>)</condition><then pos:line="237" pos:column="19">
	<block pos:line="238" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="239" pos:column="17">int</name></type> <name pos:line="239" pos:column="21">answer</name> <init pos:line="239" pos:column="28">= <expr><call><name><name pos:line="239" pos:column="30">_nativeLangSpeaker</name><op:operator pos:line="239" pos:column="48">.</op:operator><name pos:line="239" pos:column="49">messageBox</name></name><argument_list pos:line="239" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="239" pos:column="60">"DocReloadWarning"</lit:literal></expr></argument>,
			<argument><expr><call><name><name pos:line="240" pos:column="25">_pPublicInterface</name><op:operator pos:line="240" pos:column="42">-&gt;</op:operator><name pos:line="240" pos:column="44">getHSelf</name></name><argument_list pos:line="240" pos:column="52">()</argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="241" pos:column="25">TEXT</name><argument_list pos:line="241" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="241" pos:column="30">"Are you sure you want to reload the current file and lose the changes made in Notepad++?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="242" pos:column="25">TEXT</name><argument_list pos:line="242" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="242" pos:column="30">"Reload"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, 
			<argument><expr><name pos:line="243" pos:column="25">MB_YESNO</name> <op:operator pos:line="243" pos:column="34">|</op:operator> <name pos:line="243" pos:column="36">MB_ICONEXCLAMATION</name> <op:operator pos:line="243" pos:column="55">|</op:operator> <name pos:line="243" pos:column="57">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="244" pos:column="17">if <condition pos:line="244" pos:column="20">(<expr><name pos:line="244" pos:column="21">answer</name> <op:operator pos:line="244" pos:column="28">!=</op:operator> <name pos:line="244" pos:column="31">IDYES</name></expr>)</condition><then pos:line="244" pos:column="37">
			<return pos:line="245" pos:column="25">return <expr><lit:literal type="boolean" pos:line="245" pos:column="32">false</lit:literal></expr>;</return></then></if>
	}</block></then></if>

	<comment type="line" pos:line="248" pos:column="9">//In order to prevent Scintilla from restyling the entire document,</comment>
	<comment type="line" pos:line="249" pos:column="9">//an empty Document is inserted during reload if needed.</comment>
	<decl_stmt><decl><type><name pos:line="250" pos:column="9">bool</name></type> <name pos:line="250" pos:column="14">mainVisisble</name> <init pos:line="250" pos:column="27">= <expr><op:operator pos:line="250" pos:column="29">(</op:operator><call><name><name pos:line="250" pos:column="30">_mainEditView</name><op:operator pos:line="250" pos:column="43">.</op:operator><name pos:line="250" pos:column="44">getCurrentBufferID</name></name><argument_list pos:line="250" pos:column="62">()</argument_list></call> <op:operator pos:line="250" pos:column="65">==</op:operator> <name pos:line="250" pos:column="68">id</name><op:operator pos:line="250" pos:column="70">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="251" pos:column="9">bool</name></type> <name pos:line="251" pos:column="14">subVisisble</name> <init pos:line="251" pos:column="26">= <expr><op:operator pos:line="251" pos:column="28">(</op:operator><call><name><name pos:line="251" pos:column="29">_subEditView</name><op:operator pos:line="251" pos:column="41">.</op:operator><name pos:line="251" pos:column="42">getCurrentBufferID</name></name><argument_list pos:line="251" pos:column="60">()</argument_list></call> <op:operator pos:line="251" pos:column="63">==</op:operator> <name pos:line="251" pos:column="66">id</name><op:operator pos:line="251" pos:column="68">)</op:operator></expr></init></decl>;</decl_stmt>
	<if pos:line="252" pos:column="9">if <condition pos:line="252" pos:column="12">(<expr><name pos:line="252" pos:column="13">mainVisisble</name></expr>)</condition><then pos:line="252" pos:column="26"> <block pos:line="252" pos:column="27">{
		<expr_stmt><expr><call><name><name pos:line="253" pos:column="17">_mainEditView</name><op:operator pos:line="253" pos:column="30">.</op:operator><name pos:line="253" pos:column="31">saveCurrentPos</name></name><argument_list pos:line="253" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="254" pos:column="17">_mainEditView</name><op:operator pos:line="254" pos:column="30">.</op:operator><name pos:line="254" pos:column="31">execute</name></name><argument_list pos:line="254" pos:column="38">(<argument><expr><name pos:line="254" pos:column="39">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="254" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="254" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="256" pos:column="9">if <condition pos:line="256" pos:column="12">(<expr><name pos:line="256" pos:column="13">subVisisble</name></expr>)</condition><then pos:line="256" pos:column="25"> <block pos:line="256" pos:column="26">{
		<expr_stmt><expr><call><name><name pos:line="257" pos:column="17">_subEditView</name><op:operator pos:line="257" pos:column="29">.</op:operator><name pos:line="257" pos:column="30">saveCurrentPos</name></name><argument_list pos:line="257" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="258" pos:column="17">_subEditView</name><op:operator pos:line="258" pos:column="29">.</op:operator><name pos:line="258" pos:column="30">execute</name></name><argument_list pos:line="258" pos:column="37">(<argument><expr><name pos:line="258" pos:column="38">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="258" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="258" pos:column="60">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="261" pos:column="9">if <condition pos:line="261" pos:column="12">(<expr><op:operator pos:line="261" pos:column="13">!</op:operator><name pos:line="261" pos:column="14">mainVisisble</name> <op:operator pos:line="261" pos:column="27">&amp;&amp;</op:operator> <op:operator pos:line="261" pos:column="30">!</op:operator><name pos:line="261" pos:column="31">subVisisble</name></expr>)</condition><then pos:line="261" pos:column="43"> <block pos:line="261" pos:column="44">{
		<return pos:line="262" pos:column="17">return <expr><call><name><name pos:line="262" pos:column="24">MainFileManager</name><op:operator pos:line="262" pos:column="39">-&gt;</op:operator><name pos:line="262" pos:column="41">reloadBufferDeferred</name></name><argument_list pos:line="262" pos:column="61">(<argument><expr><name pos:line="262" pos:column="62">id</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="265" pos:column="9">bool</name></type> <name pos:line="265" pos:column="14">res</name> <init pos:line="265" pos:column="18">= <expr><call><name><name pos:line="265" pos:column="20">MainFileManager</name><op:operator pos:line="265" pos:column="35">-&gt;</op:operator><name pos:line="265" pos:column="37">reloadBuffer</name></name><argument_list pos:line="265" pos:column="49">(<argument><expr><name pos:line="265" pos:column="50">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="266" pos:column="9">Buffer</name> <type:modifier pos:line="266" pos:column="16">*</type:modifier></type> <name pos:line="266" pos:column="18">pBuf</name> <init pos:line="266" pos:column="23">= <expr><call><name><name pos:line="266" pos:column="25">MainFileManager</name><op:operator pos:line="266" pos:column="40">-&gt;</op:operator><name pos:line="266" pos:column="42">getBufferByID</name></name><argument_list pos:line="266" pos:column="55">(<argument><expr><name pos:line="266" pos:column="56">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="267" pos:column="9">if <condition pos:line="267" pos:column="12">(<expr><name pos:line="267" pos:column="13">mainVisisble</name></expr>)</condition><then pos:line="267" pos:column="26"> <block pos:line="267" pos:column="27">{
		<expr_stmt><expr><call><name><name pos:line="268" pos:column="17">_mainEditView</name><op:operator pos:line="268" pos:column="30">.</op:operator><name pos:line="268" pos:column="31">execute</name></name><argument_list pos:line="268" pos:column="38">(<argument><expr><name pos:line="268" pos:column="39">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="268" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="268" pos:column="61">pBuf</name><op:operator pos:line="268" pos:column="65">-&gt;</op:operator><name pos:line="268" pos:column="67">getDocument</name></name><argument_list pos:line="268" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="269" pos:column="17">_mainEditView</name><op:operator pos:line="269" pos:column="30">.</op:operator><name pos:line="269" pos:column="31">restoreCurrentPos</name></name><argument_list pos:line="269" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="271" pos:column="9">if <condition pos:line="271" pos:column="12">(<expr><name pos:line="271" pos:column="13">subVisisble</name></expr>)</condition><then pos:line="271" pos:column="25"> <block pos:line="271" pos:column="26">{
		<expr_stmt><expr><call><name><name pos:line="272" pos:column="17">_subEditView</name><op:operator pos:line="272" pos:column="29">.</op:operator><name pos:line="272" pos:column="30">execute</name></name><argument_list pos:line="272" pos:column="37">(<argument><expr><name pos:line="272" pos:column="38">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="272" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="272" pos:column="60">pBuf</name><op:operator pos:line="272" pos:column="64">-&gt;</op:operator><name pos:line="272" pos:column="66">getDocument</name></name><argument_list pos:line="272" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="273" pos:column="17">_subEditView</name><op:operator pos:line="273" pos:column="29">.</op:operator><name pos:line="273" pos:column="30">restoreCurrentPos</name></name><argument_list pos:line="273" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="275" pos:column="9">return <expr><name pos:line="275" pos:column="16">res</name></expr>;</return>
}</block></function>

<function><type><name pos:line="278" pos:column="1">bool</name></type> <name><name pos:line="278" pos:column="6">Notepad_plus</name><op:operator pos:line="278" pos:column="18">::</op:operator><name pos:line="278" pos:column="20">doSave</name></name><parameter_list pos:line="278" pos:column="26">(<param><decl><type><name pos:line="278" pos:column="27">BufferID</name></type> <name pos:line="278" pos:column="36">id</name></decl></param>, <param><decl><type><specifier pos:line="278" pos:column="40">const</specifier> <name pos:line="278" pos:column="46">TCHAR</name> <type:modifier pos:line="278" pos:column="52">*</type:modifier></type> <name pos:line="278" pos:column="54">filename</name></decl></param>, <param><decl><type><name pos:line="278" pos:column="64">bool</name></type> <name pos:line="278" pos:column="69">isCopy</name></decl></param>)</parameter_list>
<block pos:line="279" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="280" pos:column="9">SCNotification</name></type> <name pos:line="280" pos:column="24">scnN</name></decl>;</decl_stmt>
	<comment type="line" pos:line="281" pos:column="9">// Notify plugins that current file is about to be saved</comment>
	<if pos:line="282" pos:column="9">if <condition pos:line="282" pos:column="12">(<expr><op:operator pos:line="282" pos:column="13">!</op:operator><name pos:line="282" pos:column="14">isCopy</name></expr>)</condition><then pos:line="282" pos:column="21">
	<block pos:line="283" pos:column="9">{
		
		<expr_stmt><expr><name><name pos:line="285" pos:column="17">scnN</name><op:operator pos:line="285" pos:column="21">.</op:operator><name pos:line="285" pos:column="22">nmhdr</name><op:operator pos:line="285" pos:column="27">.</op:operator><name pos:line="285" pos:column="28">code</name></name> <op:operator pos:line="285" pos:column="33">=</op:operator> <name pos:line="285" pos:column="35">NPPN_FILEBEFORESAVE</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="286" pos:column="17">scnN</name><op:operator pos:line="286" pos:column="21">.</op:operator><name pos:line="286" pos:column="22">nmhdr</name><op:operator pos:line="286" pos:column="27">.</op:operator><name pos:line="286" pos:column="28">hwndFrom</name></name> <op:operator pos:line="286" pos:column="37">=</op:operator> <call><name><name pos:line="286" pos:column="39">_pPublicInterface</name><op:operator pos:line="286" pos:column="56">-&gt;</op:operator><name pos:line="286" pos:column="58">getHSelf</name></name><argument_list pos:line="286" pos:column="66">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="287" pos:column="17">scnN</name><op:operator pos:line="287" pos:column="21">.</op:operator><name pos:line="287" pos:column="22">nmhdr</name><op:operator pos:line="287" pos:column="27">.</op:operator><name pos:line="287" pos:column="28">idFrom</name></name> <op:operator pos:line="287" pos:column="35">=</op:operator> <op:operator pos:line="287" pos:column="37">(</op:operator><name pos:line="287" pos:column="38">uptr_t</name><op:operator pos:line="287" pos:column="44">)</op:operator><name pos:line="287" pos:column="45">id</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="288" pos:column="17">_pluginsManager</name><op:operator pos:line="288" pos:column="32">.</op:operator><name pos:line="288" pos:column="33">notify</name></name><argument_list pos:line="288" pos:column="39">(<argument><expr><op:operator pos:line="288" pos:column="40">&amp;</op:operator><name pos:line="288" pos:column="41">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="291" pos:column="9">generic_string</name></type> <name pos:line="291" pos:column="24">error_msg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="292" pos:column="9">bool</name></type> <name pos:line="292" pos:column="14">res</name> <init pos:line="292" pos:column="18">= <expr><call><name><name pos:line="292" pos:column="20">MainFileManager</name><op:operator pos:line="292" pos:column="35">-&gt;</op:operator><name pos:line="292" pos:column="37">saveBuffer</name></name><argument_list pos:line="292" pos:column="47">(<argument><expr><name pos:line="292" pos:column="48">id</name></expr></argument>, <argument><expr><name pos:line="292" pos:column="52">filename</name></expr></argument>, <argument><expr><name pos:line="292" pos:column="62">isCopy</name></expr></argument>, <argument><expr><op:operator pos:line="292" pos:column="70">&amp;</op:operator><name pos:line="292" pos:column="71">error_msg</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="294" pos:column="9">if <condition pos:line="294" pos:column="12">(<expr><op:operator pos:line="294" pos:column="13">!</op:operator><name pos:line="294" pos:column="14">isCopy</name></expr>)</condition><then pos:line="294" pos:column="21">
	<block pos:line="295" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="296" pos:column="17">scnN</name><op:operator pos:line="296" pos:column="21">.</op:operator><name pos:line="296" pos:column="22">nmhdr</name><op:operator pos:line="296" pos:column="27">.</op:operator><name pos:line="296" pos:column="28">code</name></name> <op:operator pos:line="296" pos:column="33">=</op:operator> <name pos:line="296" pos:column="35">NPPN_FILESAVED</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="297" pos:column="17">_pluginsManager</name><op:operator pos:line="297" pos:column="32">.</op:operator><name pos:line="297" pos:column="33">notify</name></name><argument_list pos:line="297" pos:column="39">(<argument><expr><op:operator pos:line="297" pos:column="40">&amp;</op:operator><name pos:line="297" pos:column="41">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="300" pos:column="9">if <condition pos:line="300" pos:column="12">(<expr><op:operator pos:line="300" pos:column="13">!</op:operator><name pos:line="300" pos:column="14">res</name></expr>)</condition><then pos:line="300" pos:column="18">
	<block pos:line="301" pos:column="9">{
		<if pos:line="302" pos:column="17">if<condition pos:line="302" pos:column="19">(<expr><call><name><name pos:line="302" pos:column="20">error_msg</name><op:operator pos:line="302" pos:column="29">.</op:operator><name pos:line="302" pos:column="30">empty</name></name><argument_list pos:line="302" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="302" pos:column="38">
		<block pos:line="303" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="304" pos:column="25">_nativeLangSpeaker</name><op:operator pos:line="304" pos:column="43">.</op:operator><name pos:line="304" pos:column="44">messageBox</name></name><argument_list pos:line="304" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="304" pos:column="55">"FileLockedWarning"</lit:literal></expr></argument>,
			<argument><expr><call><name><name pos:line="305" pos:column="25">_pPublicInterface</name><op:operator pos:line="305" pos:column="42">-&gt;</op:operator><name pos:line="305" pos:column="44">getHSelf</name></name><argument_list pos:line="305" pos:column="52">()</argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="306" pos:column="25">TEXT</name><argument_list pos:line="306" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="306" pos:column="30">"Please check if this file is opened in another program."</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
			<argument><expr><call><name pos:line="307" pos:column="25">TEXT</name><argument_list pos:line="307" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="307" pos:column="30">"Save failed"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, 
			<argument><expr><name pos:line="308" pos:column="25">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="310" pos:column="17">else
		<block pos:line="311" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="312" pos:column="25">::</op:operator><name pos:line="312" pos:column="27">MessageBox</name></name><argument_list pos:line="312" pos:column="37">(<argument><expr><call><name><name pos:line="312" pos:column="38">_pPublicInterface</name><op:operator pos:line="312" pos:column="55">-&gt;</op:operator><name pos:line="312" pos:column="57">getHSelf</name></name><argument_list pos:line="312" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="312" pos:column="69">error_msg</name><op:operator pos:line="312" pos:column="78">.</op:operator><name pos:line="312" pos:column="79">c_str</name></name><argument_list pos:line="312" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="312" pos:column="88">TEXT</name><argument_list pos:line="312" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="312" pos:column="93">"Save failed"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="312" pos:column="109">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
	<return pos:line="315" pos:column="9">return <expr><name pos:line="315" pos:column="16">res</name></expr>;</return>
}</block></function>

<function><type><name pos:line="318" pos:column="1">void</name></type> <name><name pos:line="318" pos:column="6">Notepad_plus</name><op:operator pos:line="318" pos:column="18">::</op:operator><name pos:line="318" pos:column="20">doClose</name></name><parameter_list pos:line="318" pos:column="27">(<param><decl><type><name pos:line="318" pos:column="28">BufferID</name></type> <name pos:line="318" pos:column="37">id</name></decl></param>, <param><decl><type><name pos:line="318" pos:column="41">int</name></type> <name pos:line="318" pos:column="45">whichOne</name></decl></param>)</parameter_list>
<block pos:line="319" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="320" pos:column="9">DocTabView</name> <type:modifier pos:line="320" pos:column="20">*</type:modifier></type><name pos:line="320" pos:column="21">tabToClose</name> <init pos:line="320" pos:column="32">= <expr><op:operator pos:line="320" pos:column="34">(</op:operator><name pos:line="320" pos:column="35">whichOne</name> <op:operator pos:line="320" pos:column="44">==</op:operator> <name pos:line="320" pos:column="47">MAIN_VIEW</name><op:operator pos:line="320" pos:column="56">)</op:operator><op:operator pos:line="320" pos:column="57">?</op:operator><op:operator pos:line="320" pos:column="58">&amp;</op:operator><name pos:line="320" pos:column="59">_mainDocTab</name><op:operator pos:line="320" pos:column="70">:</op:operator><op:operator pos:line="320" pos:column="71">&amp;</op:operator><name pos:line="320" pos:column="72">_subDocTab</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="321" pos:column="9">int</name></type> <name pos:line="321" pos:column="13">i</name> <init pos:line="321" pos:column="15">= <expr><call><name><name pos:line="321" pos:column="17">tabToClose</name><op:operator pos:line="321" pos:column="27">-&gt;</op:operator><name pos:line="321" pos:column="29">getIndexByBuffer</name></name><argument_list pos:line="321" pos:column="45">(<argument><expr><name pos:line="321" pos:column="46">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="322" pos:column="9">if <condition pos:line="322" pos:column="12">(<expr><name pos:line="322" pos:column="13">i</name> <op:operator pos:line="322" pos:column="15">==</op:operator> <op:operator pos:line="322" pos:column="18">-</op:operator><lit:literal type="number" pos:line="322" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="322" pos:column="21">
		<return pos:line="323" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="325" pos:column="9">Buffer</name> <type:modifier pos:line="325" pos:column="16">*</type:modifier></type> <name pos:line="325" pos:column="18">buf</name> <init pos:line="325" pos:column="22">= <expr><call><name><name pos:line="325" pos:column="24">MainFileManager</name><op:operator pos:line="325" pos:column="39">-&gt;</op:operator><name pos:line="325" pos:column="41">getBufferByID</name></name><argument_list pos:line="325" pos:column="54">(<argument><expr><name pos:line="325" pos:column="55">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="327" pos:column="9">// Notify plugins that current file is about to be closed</comment>
	<decl_stmt><decl><type><name pos:line="328" pos:column="9">SCNotification</name></type> <name pos:line="328" pos:column="24">scnN</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="329" pos:column="9">scnN</name><op:operator pos:line="329" pos:column="13">.</op:operator><name pos:line="329" pos:column="14">nmhdr</name><op:operator pos:line="329" pos:column="19">.</op:operator><name pos:line="329" pos:column="20">code</name></name> <op:operator pos:line="329" pos:column="25">=</op:operator> <name pos:line="329" pos:column="27">NPPN_FILEBEFORECLOSE</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="330" pos:column="9">scnN</name><op:operator pos:line="330" pos:column="13">.</op:operator><name pos:line="330" pos:column="14">nmhdr</name><op:operator pos:line="330" pos:column="19">.</op:operator><name pos:line="330" pos:column="20">hwndFrom</name></name> <op:operator pos:line="330" pos:column="29">=</op:operator> <call><name><name pos:line="330" pos:column="31">_pPublicInterface</name><op:operator pos:line="330" pos:column="48">-&gt;</op:operator><name pos:line="330" pos:column="50">getHSelf</name></name><argument_list pos:line="330" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="331" pos:column="9">scnN</name><op:operator pos:line="331" pos:column="13">.</op:operator><name pos:line="331" pos:column="14">nmhdr</name><op:operator pos:line="331" pos:column="19">.</op:operator><name pos:line="331" pos:column="20">idFrom</name></name> <op:operator pos:line="331" pos:column="27">=</op:operator> <op:operator pos:line="331" pos:column="29">(</op:operator><name pos:line="331" pos:column="30">uptr_t</name><op:operator pos:line="331" pos:column="36">)</op:operator><name pos:line="331" pos:column="37">id</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="332" pos:column="9">_pluginsManager</name><op:operator pos:line="332" pos:column="24">.</op:operator><name pos:line="332" pos:column="25">notify</name></name><argument_list pos:line="332" pos:column="31">(<argument><expr><op:operator pos:line="332" pos:column="32">&amp;</op:operator><name pos:line="332" pos:column="33">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="334" pos:column="9">//add to recent files if its an existing file</comment>
	<if pos:line="335" pos:column="9">if <condition pos:line="335" pos:column="12">(<expr><op:operator pos:line="335" pos:column="13">!</op:operator><call><name><name pos:line="335" pos:column="14">buf</name><op:operator pos:line="335" pos:column="17">-&gt;</op:operator><name pos:line="335" pos:column="19">isUntitled</name></name><argument_list pos:line="335" pos:column="29">()</argument_list></call></expr>)</condition><then pos:line="335" pos:column="32">
	<block pos:line="336" pos:column="9">{
		<comment type="line" pos:line="337" pos:column="17">// if the file doesn't exist, it could be redirected</comment>
		<comment type="line" pos:line="338" pos:column="17">// So we turn Wow64 off</comment>
		<decl_stmt><decl><type><name pos:line="339" pos:column="17">bool</name></type> <name pos:line="339" pos:column="22">isWow64Off</name> <init pos:line="339" pos:column="33">= <expr><lit:literal type="boolean" pos:line="339" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="340" pos:column="17">NppParameters</name> <type:modifier pos:line="340" pos:column="31">*</type:modifier></type><name pos:line="340" pos:column="32">pNppParam</name> <init pos:line="340" pos:column="42">= <expr><call><name><name pos:line="340" pos:column="44">NppParameters</name><op:operator pos:line="340" pos:column="57">::</op:operator><name pos:line="340" pos:column="59">getInstance</name></name><argument_list pos:line="340" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="341" pos:column="17">const</specifier> <name pos:line="341" pos:column="23">TCHAR</name> <type:modifier pos:line="341" pos:column="29">*</type:modifier></type><name pos:line="341" pos:column="30">fn</name> <init pos:line="341" pos:column="33">= <expr><call><name><name pos:line="341" pos:column="35">buf</name><op:operator pos:line="341" pos:column="38">-&gt;</op:operator><name pos:line="341" pos:column="40">getFullPathName</name></name><argument_list pos:line="341" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="342" pos:column="17">if <condition pos:line="342" pos:column="20">(<expr><op:operator pos:line="342" pos:column="21">!</op:operator><call><name pos:line="342" pos:column="22">PathFileExists</name><argument_list pos:line="342" pos:column="36">(<argument><expr><name pos:line="342" pos:column="37">fn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="342" pos:column="41">
		<block pos:line="343" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="344" pos:column="25">pNppParam</name><op:operator pos:line="344" pos:column="34">-&gt;</op:operator><name pos:line="344" pos:column="36">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="344" pos:column="69">(<argument><expr><name pos:line="344" pos:column="70">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="345" pos:column="25">isWow64Off</name> <op:operator pos:line="345" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="345" pos:column="38">true</lit:literal></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="348" pos:column="17">if <condition pos:line="348" pos:column="20">(<expr><call><name pos:line="348" pos:column="21">PathFileExists</name><argument_list pos:line="348" pos:column="35">(<argument><expr><call><name><name pos:line="348" pos:column="36">buf</name><op:operator pos:line="348" pos:column="39">-&gt;</op:operator><name pos:line="348" pos:column="41">getFullPathName</name></name><argument_list pos:line="348" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="348" pos:column="60">
			<expr_stmt><expr><call><name><name pos:line="349" pos:column="25">_lastRecentFileList</name><op:operator pos:line="349" pos:column="44">.</op:operator><name pos:line="349" pos:column="45">add</name></name><argument_list pos:line="349" pos:column="48">(<argument><expr><call><name><name pos:line="349" pos:column="49">buf</name><op:operator pos:line="349" pos:column="52">-&gt;</op:operator><name pos:line="349" pos:column="54">getFullPathName</name></name><argument_list pos:line="349" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<comment type="line" pos:line="351" pos:column="17">// We enable Wow64 system, if it was disabled</comment>
		<if pos:line="352" pos:column="17">if <condition pos:line="352" pos:column="20">(<expr><name pos:line="352" pos:column="21">isWow64Off</name></expr>)</condition><then pos:line="352" pos:column="32">
		<block pos:line="353" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="354" pos:column="25">pNppParam</name><op:operator pos:line="354" pos:column="34">-&gt;</op:operator><name pos:line="354" pos:column="36">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="354" pos:column="69">(<argument><expr><name pos:line="354" pos:column="70">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="355" pos:column="25">isWow64Off</name> <op:operator pos:line="355" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="355" pos:column="38">false</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="359" pos:column="9">int</name></type> <name pos:line="359" pos:column="13">nrDocs</name> <init pos:line="359" pos:column="20">= <expr><name pos:line="359" pos:column="22">whichOne</name><op:operator pos:line="359" pos:column="30">==</op:operator><name pos:line="359" pos:column="32">MAIN_VIEW</name><op:operator pos:line="359" pos:column="41">?</op:operator><op:operator pos:line="359" pos:column="42">(</op:operator><call><name><name pos:line="359" pos:column="43">_mainDocTab</name><op:operator pos:line="359" pos:column="54">.</op:operator><name pos:line="359" pos:column="55">nbItem</name></name><argument_list pos:line="359" pos:column="61">()</argument_list></call><op:operator pos:line="359" pos:column="63">)</op:operator><op:operator pos:line="359" pos:column="64">:</op:operator><op:operator pos:line="359" pos:column="65">(</op:operator><call><name><name pos:line="359" pos:column="66">_subDocTab</name><op:operator pos:line="359" pos:column="76">.</op:operator><name pos:line="359" pos:column="77">nbItem</name></name><argument_list pos:line="359" pos:column="83">()</argument_list></call><op:operator pos:line="359" pos:column="85">)</op:operator></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="361" pos:column="9">//Do all the works</comment>
	<decl_stmt><decl><type><name pos:line="362" pos:column="9">bool</name></type> <name pos:line="362" pos:column="14">isBufRemoved</name> <init pos:line="362" pos:column="27">= <expr><call><name pos:line="362" pos:column="29">removeBufferFromView</name><argument_list pos:line="362" pos:column="49">(<argument><expr><name pos:line="362" pos:column="50">id</name></expr></argument>, <argument><expr><name pos:line="362" pos:column="54">whichOne</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="363" pos:column="9">int</name></type> <name pos:line="363" pos:column="13">hiddenBufferID</name> <init pos:line="363" pos:column="28">= <expr><op:operator pos:line="363" pos:column="30">-</op:operator><lit:literal type="number" pos:line="363" pos:column="31">1</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="364" pos:column="9">if <condition pos:line="364" pos:column="12">(<expr><name pos:line="364" pos:column="13">nrDocs</name> <op:operator pos:line="364" pos:column="20">==</op:operator> <lit:literal type="number" pos:line="364" pos:column="23">1</lit:literal> <op:operator pos:line="364" pos:column="25">&amp;&amp;</op:operator> <call><name pos:line="364" pos:column="28">canHideView</name><argument_list pos:line="364" pos:column="39">(<argument><expr><name pos:line="364" pos:column="40">whichOne</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="364" pos:column="50">
	<block pos:line="365" pos:column="9">{	<comment type="line" pos:line="365" pos:column="17">//close the view if both visible</comment>
		<expr_stmt><expr><call><name pos:line="366" pos:column="17">hideView</name><argument_list pos:line="366" pos:column="25">(<argument><expr><name pos:line="366" pos:column="26">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="368" pos:column="17">// if the current activated buffer is in this view, </comment>
		<comment type="line" pos:line="369" pos:column="17">// then get buffer ID to remove the entry from File Switcher Pannel</comment>
		<expr_stmt><expr><name pos:line="370" pos:column="17">hiddenBufferID</name> <op:operator pos:line="370" pos:column="32">=</op:operator> <call><name><op:operator pos:line="370" pos:column="34">::</op:operator><name pos:line="370" pos:column="36">SendMessage</name></name><argument_list pos:line="370" pos:column="47">(<argument><expr><call><name><name pos:line="370" pos:column="48">_pPublicInterface</name><op:operator pos:line="370" pos:column="65">-&gt;</op:operator><name pos:line="370" pos:column="67">getHSelf</name></name><argument_list pos:line="370" pos:column="75">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="370" pos:column="79">NPPM_GETBUFFERIDFROMPOS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="370" pos:column="104">0</lit:literal></expr></argument>, <argument><expr><name pos:line="370" pos:column="107">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="373" pos:column="9">// Notify plugins that current file is closed</comment>
	<if pos:line="374" pos:column="9">if <condition pos:line="374" pos:column="12">(<expr><name pos:line="374" pos:column="13">isBufRemoved</name></expr>)</condition><then pos:line="374" pos:column="26">
	<block pos:line="375" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="376" pos:column="17">scnN</name><op:operator pos:line="376" pos:column="21">.</op:operator><name pos:line="376" pos:column="22">nmhdr</name><op:operator pos:line="376" pos:column="27">.</op:operator><name pos:line="376" pos:column="28">code</name></name> <op:operator pos:line="376" pos:column="33">=</op:operator> <name pos:line="376" pos:column="35">NPPN_FILECLOSED</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="377" pos:column="17">_pluginsManager</name><op:operator pos:line="377" pos:column="32">.</op:operator><name pos:line="377" pos:column="33">notify</name></name><argument_list pos:line="377" pos:column="39">(<argument><expr><op:operator pos:line="377" pos:column="40">&amp;</op:operator><name pos:line="377" pos:column="41">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="379" pos:column="17">// The document could be clonned.</comment>
		<comment type="line" pos:line="380" pos:column="17">// if the same buffer ID is not found then remove the entry from File Switcher Pannel</comment>
		<if pos:line="381" pos:column="17">if <condition pos:line="381" pos:column="20">(<expr><name pos:line="381" pos:column="21">_pFileSwitcherPanel</name></expr>)</condition><then pos:line="381" pos:column="41">
		<block pos:line="382" pos:column="17">{
			<comment type="line" pos:line="383" pos:column="25">//int posInfo = ::SendMessage(_pPublicInterface-&gt;getHSelf(), NPPM_GETPOSFROMBUFFERID, (WPARAM)id ,0);</comment>
				
			<expr_stmt><expr><call><name><name pos:line="385" pos:column="25">_pFileSwitcherPanel</name><op:operator pos:line="385" pos:column="44">-&gt;</op:operator><name pos:line="385" pos:column="46">closeItem</name></name><argument_list pos:line="385" pos:column="55">(<argument><expr><op:operator pos:line="385" pos:column="56">(</op:operator><name pos:line="385" pos:column="57">int</name><op:operator pos:line="385" pos:column="60">)</op:operator><name pos:line="385" pos:column="61">id</name></expr></argument>, <argument><expr><name pos:line="385" pos:column="65">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="387" pos:column="25">if <condition pos:line="387" pos:column="28">(<expr><name pos:line="387" pos:column="29">hiddenBufferID</name> <op:operator pos:line="387" pos:column="44">!=</op:operator> <op:operator pos:line="387" pos:column="47">-</op:operator><lit:literal type="number" pos:line="387" pos:column="48">1</lit:literal></expr>)</condition><then pos:line="387" pos:column="50">
				<expr_stmt><expr><call><name><name pos:line="388" pos:column="33">_pFileSwitcherPanel</name><op:operator pos:line="388" pos:column="52">-&gt;</op:operator><name pos:line="388" pos:column="54">closeItem</name></name><argument_list pos:line="388" pos:column="63">(<argument><expr><op:operator pos:line="388" pos:column="64">(</op:operator><name pos:line="388" pos:column="65">int</name><op:operator pos:line="388" pos:column="68">)</op:operator><name pos:line="388" pos:column="69">hiddenBufferID</name></expr></argument>, <argument><expr><name pos:line="388" pos:column="85">whichOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
	}</block></then></if>
	<return pos:line="391" pos:column="9">return;</return>
}</block></function>

<function><type><name pos:line="394" pos:column="1">generic_string</name></type> <name><name pos:line="394" pos:column="16">Notepad_plus</name><op:operator pos:line="394" pos:column="28">::</op:operator><name pos:line="394" pos:column="30">exts2Filters</name></name><parameter_list pos:line="394" pos:column="42">(<param><decl><type><name pos:line="394" pos:column="43">generic_string</name></type> <name pos:line="394" pos:column="58">exts</name></decl></param>)</parameter_list> <specifier pos:line="394" pos:column="64">const</specifier>
<block pos:line="395" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="396" pos:column="9">const</specifier> <name pos:line="396" pos:column="15">TCHAR</name> <type:modifier pos:line="396" pos:column="21">*</type:modifier></type><name pos:line="396" pos:column="22">extStr</name> <init pos:line="396" pos:column="29">= <expr><call><name><name pos:line="396" pos:column="31">exts</name><op:operator pos:line="396" pos:column="35">.</op:operator><name pos:line="396" pos:column="36">c_str</name></name><argument_list pos:line="396" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="397" pos:column="9">TCHAR</name></type> <name><name pos:line="397" pos:column="15">aExt</name><index pos:line="397" pos:column="19">[<expr><name pos:line="397" pos:column="20">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="398" pos:column="9">generic_string</name></type> <name pos:line="398" pos:column="24">filters</name><argument_list pos:line="398" pos:column="31">(<argument><expr><call><name pos:line="398" pos:column="32">TEXT</name><argument_list pos:line="398" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="398" pos:column="37">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="400" pos:column="9">int</name></type> <name pos:line="400" pos:column="13">j</name> <init pos:line="400" pos:column="15">= <expr><lit:literal type="number" pos:line="400" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="401" pos:column="9">bool</name></type> <name pos:line="401" pos:column="14">stop</name> <init pos:line="401" pos:column="19">= <expr><lit:literal type="boolean" pos:line="401" pos:column="21">false</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="402" pos:column="9">for (<init><decl><type><name pos:line="402" pos:column="14">size_t</name></type> <name pos:line="402" pos:column="21">i</name> <init pos:line="402" pos:column="23">= <expr><lit:literal type="number" pos:line="402" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="402" pos:column="29">i</name> <op:operator pos:line="402" pos:column="31">&lt;</op:operator> <call><name><name pos:line="402" pos:column="33">exts</name><op:operator pos:line="402" pos:column="37">.</op:operator><name pos:line="402" pos:column="38">length</name></name><argument_list pos:line="402" pos:column="44">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="402" pos:column="49">i</name><op:operator pos:line="402" pos:column="50">++</op:operator></expr></incr>)
	<block pos:line="403" pos:column="9">{
		<if pos:line="404" pos:column="17">if <condition pos:line="404" pos:column="20">(<expr><name><name pos:line="404" pos:column="21">extStr</name><index pos:line="404" pos:column="27">[<expr><name pos:line="404" pos:column="28">i</name></expr>]</index></name> <op:operator pos:line="404" pos:column="31">==</op:operator> <lit:literal type="char" pos:line="404" pos:column="34">' '</lit:literal></expr>)</condition><then pos:line="404" pos:column="38">
		<block pos:line="405" pos:column="17">{
			<if pos:line="406" pos:column="25">if <condition pos:line="406" pos:column="28">(<expr><op:operator pos:line="406" pos:column="29">!</op:operator><name pos:line="406" pos:column="30">stop</name></expr>)</condition><then pos:line="406" pos:column="35">
			<block pos:line="407" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="408" pos:column="33">aExt</name><index pos:line="408" pos:column="37">[<expr><name pos:line="408" pos:column="38">j</name></expr>]</index></name> <op:operator pos:line="408" pos:column="41">=</op:operator> <lit:literal type="char" pos:line="408" pos:column="43">'\0'</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="409" pos:column="33">stop</name> <op:operator pos:line="409" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="409" pos:column="40">true</lit:literal></expr>;</expr_stmt>

				<if pos:line="411" pos:column="33">if <condition pos:line="411" pos:column="36">(<expr><name><name pos:line="411" pos:column="37">aExt</name><index pos:line="411" pos:column="41">[<expr><lit:literal type="number" pos:line="411" pos:column="42">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="411" pos:column="45">
				<block pos:line="412" pos:column="33">{
					<expr_stmt><expr><name pos:line="413" pos:column="41">filters</name> <op:operator pos:line="413" pos:column="49">+=</op:operator> <call><name pos:line="413" pos:column="52">TEXT</name><argument_list pos:line="413" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="413" pos:column="57">"*."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="414" pos:column="41">filters</name> <op:operator pos:line="414" pos:column="49">+=</op:operator> <name pos:line="414" pos:column="52">aExt</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="415" pos:column="41">filters</name> <op:operator pos:line="415" pos:column="49">+=</op:operator> <call><name pos:line="415" pos:column="52">TEXT</name><argument_list pos:line="415" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="415" pos:column="57">";"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><name pos:line="417" pos:column="33">j</name> <op:operator pos:line="417" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="417" pos:column="37">0</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then>
		<else pos:line="420" pos:column="17">else
		<block pos:line="421" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="422" pos:column="25">aExt</name><index pos:line="422" pos:column="29">[<expr><name pos:line="422" pos:column="30">j</name></expr>]</index></name> <op:operator pos:line="422" pos:column="33">=</op:operator> <name><name pos:line="422" pos:column="35">extStr</name><index pos:line="422" pos:column="41">[<expr><name pos:line="422" pos:column="42">i</name></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="423" pos:column="25">stop</name> <op:operator pos:line="423" pos:column="30">=</op:operator> <lit:literal type="boolean" pos:line="423" pos:column="32">false</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="424" pos:column="25">j</name><op:operator pos:line="424" pos:column="26">++</op:operator></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>

	<if pos:line="428" pos:column="9">if <condition pos:line="428" pos:column="12">(<expr><name pos:line="428" pos:column="13">j</name> <op:operator pos:line="428" pos:column="15">&gt;</op:operator> <lit:literal type="number" pos:line="428" pos:column="17">0</lit:literal></expr>)</condition><then pos:line="428" pos:column="19">
	<block pos:line="429" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="430" pos:column="17">aExt</name><index pos:line="430" pos:column="21">[<expr><name pos:line="430" pos:column="22">j</name></expr>]</index></name> <op:operator pos:line="430" pos:column="25">=</op:operator> <lit:literal type="char" pos:line="430" pos:column="27">'\0'</lit:literal></expr>;</expr_stmt>
		<if pos:line="431" pos:column="17">if <condition pos:line="431" pos:column="20">(<expr><name><name pos:line="431" pos:column="21">aExt</name><index pos:line="431" pos:column="25">[<expr><lit:literal type="number" pos:line="431" pos:column="26">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="431" pos:column="29">
		<block pos:line="432" pos:column="17">{
			<expr_stmt><expr><name pos:line="433" pos:column="25">filters</name> <op:operator pos:line="433" pos:column="33">+=</op:operator> <call><name pos:line="433" pos:column="36">TEXT</name><argument_list pos:line="433" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="433" pos:column="41">"*."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="434" pos:column="25">filters</name> <op:operator pos:line="434" pos:column="33">+=</op:operator> <name pos:line="434" pos:column="36">aExt</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="435" pos:column="25">filters</name> <op:operator pos:line="435" pos:column="33">+=</op:operator> <call><name pos:line="435" pos:column="36">TEXT</name><argument_list pos:line="435" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="435" pos:column="41">";"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<comment type="line" pos:line="439" pos:column="9">// remove the last ';'</comment>
    <expr_stmt><expr><name pos:line="440" pos:column="5">filters</name> <op:operator pos:line="440" pos:column="13">=</op:operator> <call><name><name pos:line="440" pos:column="15">filters</name><op:operator pos:line="440" pos:column="22">.</op:operator><name pos:line="440" pos:column="23">substr</name></name><argument_list pos:line="440" pos:column="29">(<argument><expr><lit:literal type="number" pos:line="440" pos:column="30">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="440" pos:column="33">filters</name><op:operator pos:line="440" pos:column="40">.</op:operator><name pos:line="440" pos:column="41">length</name></name><argument_list pos:line="440" pos:column="47">()</argument_list></call><op:operator pos:line="440" pos:column="49">-</op:operator><lit:literal type="number" pos:line="440" pos:column="50">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="441" pos:column="9">return <expr><name pos:line="441" pos:column="16">filters</name></expr>;</return>
}</block></function>

<function><type><name pos:line="444" pos:column="1">int</name></type> <name><name pos:line="444" pos:column="5">Notepad_plus</name><op:operator pos:line="444" pos:column="17">::</op:operator><name pos:line="444" pos:column="19">setFileOpenSaveDlgFilters</name></name><parameter_list pos:line="444" pos:column="44">(<param><decl><type><name pos:line="444" pos:column="45">FileDialog</name> <type:modifier pos:line="444" pos:column="56">&amp;</type:modifier></type> <name pos:line="444" pos:column="58">fDlg</name></decl></param>, <param><decl><type><name pos:line="444" pos:column="64">int</name></type> <name pos:line="444" pos:column="68">langType</name></decl></param>)</parameter_list>
<block pos:line="445" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="446" pos:column="9">NppParameters</name> <type:modifier pos:line="446" pos:column="23">*</type:modifier></type><name pos:line="446" pos:column="24">pNppParam</name> <init pos:line="446" pos:column="34">= <expr><call><name><name pos:line="446" pos:column="36">NppParameters</name><op:operator pos:line="446" pos:column="49">::</op:operator><name pos:line="446" pos:column="51">getInstance</name></name><argument_list pos:line="446" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="447" pos:column="9">NppGUI</name> <type:modifier pos:line="447" pos:column="16">&amp;</type:modifier></type> <name pos:line="447" pos:column="18">nppGUI</name> <init pos:line="447" pos:column="25">= <expr><op:operator pos:line="447" pos:column="27">(</op:operator><name pos:line="447" pos:column="28">NppGUI</name> <op:operator pos:line="447" pos:column="35">&amp;</op:operator> <op:operator pos:line="447" pos:column="37">)</op:operator><call><name><name pos:line="447" pos:column="38">pNppParam</name><op:operator pos:line="447" pos:column="47">-&gt;</op:operator><name pos:line="447" pos:column="49">getNppGUI</name></name><argument_list pos:line="447" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="449" pos:column="9">int</name></type> <name pos:line="449" pos:column="13">i</name> <init pos:line="449" pos:column="15">= <expr><lit:literal type="number" pos:line="449" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="450" pos:column="9">Lang</name> <type:modifier pos:line="450" pos:column="14">*</type:modifier></type><name pos:line="450" pos:column="15">l</name> <init pos:line="450" pos:column="17">= <expr><call><name><name pos:line="450" pos:column="19">NppParameters</name><op:operator pos:line="450" pos:column="32">::</op:operator><name pos:line="450" pos:column="34">getInstance</name></name><argument_list pos:line="450" pos:column="45">()</argument_list></call><op:operator pos:line="450" pos:column="47">-&gt;</op:operator><call><name pos:line="450" pos:column="49">getLangFromIndex</name><argument_list pos:line="450" pos:column="65">(<argument><expr><name pos:line="450" pos:column="66">i</name><op:operator pos:line="450" pos:column="67">++</op:operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="452" pos:column="5">int</name></type> <name pos:line="452" pos:column="9">ltIndex</name> <init pos:line="452" pos:column="17">= <expr><lit:literal type="number" pos:line="452" pos:column="19">0</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="453" pos:column="5">bool</name></type> <name pos:line="453" pos:column="10">ltFound</name> <init pos:line="453" pos:column="18">= <expr><lit:literal type="boolean" pos:line="453" pos:column="20">false</lit:literal></expr></init></decl>;</decl_stmt>
	<while pos:line="454" pos:column="9">while <condition pos:line="454" pos:column="15">(<expr><name pos:line="454" pos:column="16">l</name></expr>)</condition>
	<block pos:line="455" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="456" pos:column="17">LangType</name></type> <name pos:line="456" pos:column="26">lid</name> <init pos:line="456" pos:column="30">= <expr><call><name><name pos:line="456" pos:column="32">l</name><op:operator pos:line="456" pos:column="33">-&gt;</op:operator><name pos:line="456" pos:column="35">getLangID</name></name><argument_list pos:line="456" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="458" pos:column="17">bool</name></type> <name pos:line="458" pos:column="22">inExcludedList</name> <init pos:line="458" pos:column="37">= <expr><lit:literal type="boolean" pos:line="458" pos:column="39">false</lit:literal></expr></init></decl>;</decl_stmt>
		
		<for pos:line="460" pos:column="17">for (<init><decl><type><name pos:line="460" pos:column="22">size_t</name></type> <name pos:line="460" pos:column="29">j</name> <init pos:line="460" pos:column="31">= <expr><lit:literal type="number" pos:line="460" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="460" pos:column="37">j</name> <op:operator pos:line="460" pos:column="39">&lt;</op:operator> <call><name><name pos:line="460" pos:column="41">nppGUI</name><op:operator pos:line="460" pos:column="47">.</op:operator><name pos:line="460" pos:column="48">_excludedLangList</name><op:operator pos:line="460" pos:column="65">.</op:operator><name pos:line="460" pos:column="66">size</name></name><argument_list pos:line="460" pos:column="70">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="460" pos:column="75">j</name><op:operator pos:line="460" pos:column="76">++</op:operator></expr></incr>)
		<block pos:line="461" pos:column="17">{
			<if pos:line="462" pos:column="25">if <condition pos:line="462" pos:column="28">(<expr><name pos:line="462" pos:column="29">lid</name> <op:operator pos:line="462" pos:column="33">==</op:operator> <name><name pos:line="462" pos:column="36">nppGUI</name><op:operator pos:line="462" pos:column="42">.</op:operator><name pos:line="462" pos:column="43">_excludedLangList</name><index pos:line="462" pos:column="60">[<expr><name pos:line="462" pos:column="61">j</name></expr>]</index></name><op:operator pos:line="462" pos:column="63">.</op:operator><name pos:line="462" pos:column="64">_langType</name></expr>)</condition><then pos:line="462" pos:column="74">
			<block pos:line="463" pos:column="25">{
				<expr_stmt><expr><name pos:line="464" pos:column="33">inExcludedList</name> <op:operator pos:line="464" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="464" pos:column="50">true</lit:literal></expr>;</expr_stmt>
				<break pos:line="465" pos:column="33">break;</break>
			}</block></then></if>
		}</block></for>

		<if pos:line="469" pos:column="17">if <condition pos:line="469" pos:column="20">(<expr><op:operator pos:line="469" pos:column="21">!</op:operator><name pos:line="469" pos:column="22">inExcludedList</name></expr>)</condition><then pos:line="469" pos:column="37">
		<block pos:line="470" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="471" pos:column="25">const</specifier> <name pos:line="471" pos:column="31">TCHAR</name> <type:modifier pos:line="471" pos:column="37">*</type:modifier></type><name pos:line="471" pos:column="38">defList</name> <init pos:line="471" pos:column="46">= <expr><call><name><name pos:line="471" pos:column="48">l</name><op:operator pos:line="471" pos:column="49">-&gt;</op:operator><name pos:line="471" pos:column="51">getDefaultExtList</name></name><argument_list pos:line="471" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="472" pos:column="25">const</specifier> <name pos:line="472" pos:column="31">TCHAR</name> <type:modifier pos:line="472" pos:column="37">*</type:modifier></type><name pos:line="472" pos:column="38">userList</name> <init pos:line="472" pos:column="47">= <expr><name pos:line="472" pos:column="49">NULL</name></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="474" pos:column="25">LexerStylerArray</name> <type:modifier pos:line="474" pos:column="42">&amp;</type:modifier></type><name pos:line="474" pos:column="43">lsa</name> <init pos:line="474" pos:column="47">= <expr><op:operator pos:line="474" pos:column="49">(</op:operator><call><name><name pos:line="474" pos:column="50">NppParameters</name><op:operator pos:line="474" pos:column="63">::</op:operator><name pos:line="474" pos:column="65">getInstance</name></name><argument_list pos:line="474" pos:column="76">()</argument_list></call><op:operator pos:line="474" pos:column="78">)</op:operator><op:operator pos:line="474" pos:column="79">-&gt;</op:operator><call><name pos:line="474" pos:column="81">getLStylerArray</name><argument_list pos:line="474" pos:column="96">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="475" pos:column="25">const</specifier> <name pos:line="475" pos:column="31">TCHAR</name> <type:modifier pos:line="475" pos:column="37">*</type:modifier></type><name pos:line="475" pos:column="38">lName</name> <init pos:line="475" pos:column="44">= <expr><call><name><name pos:line="475" pos:column="46">l</name><op:operator pos:line="475" pos:column="47">-&gt;</op:operator><name pos:line="475" pos:column="49">getLangName</name></name><argument_list pos:line="475" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="476" pos:column="25">LexerStyler</name> <type:modifier pos:line="476" pos:column="37">*</type:modifier></type><name pos:line="476" pos:column="38">pLS</name> <init pos:line="476" pos:column="42">= <expr><call><name><name pos:line="476" pos:column="44">lsa</name><op:operator pos:line="476" pos:column="47">.</op:operator><name pos:line="476" pos:column="48">getLexerStylerByName</name></name><argument_list pos:line="476" pos:column="68">(<argument><expr><name pos:line="476" pos:column="69">lName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<if pos:line="478" pos:column="25">if <condition pos:line="478" pos:column="28">(<expr><name pos:line="478" pos:column="29">pLS</name></expr>)</condition><then pos:line="478" pos:column="33">
				<expr_stmt><expr><name pos:line="479" pos:column="33">userList</name> <op:operator pos:line="479" pos:column="42">=</op:operator> <call><name><name pos:line="479" pos:column="44">pLS</name><op:operator pos:line="479" pos:column="47">-&gt;</op:operator><name pos:line="479" pos:column="49">getLexerUserExt</name></name><argument_list pos:line="479" pos:column="64">()</argument_list></call></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><name pos:line="481" pos:column="25">generic_string</name></type> <name pos:line="481" pos:column="40">list</name><argument_list pos:line="481" pos:column="44">(<argument><expr><call><name pos:line="481" pos:column="45">TEXT</name><argument_list pos:line="481" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="481" pos:column="50">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			<if pos:line="482" pos:column="25">if <condition pos:line="482" pos:column="28">(<expr><name pos:line="482" pos:column="29">defList</name></expr>)</condition><then pos:line="482" pos:column="37">
				<expr_stmt><expr><name pos:line="483" pos:column="33">list</name> <op:operator pos:line="483" pos:column="38">+=</op:operator> <name pos:line="483" pos:column="41">defList</name></expr>;</expr_stmt></then></if>
			<if pos:line="484" pos:column="25">if <condition pos:line="484" pos:column="28">(<expr><name pos:line="484" pos:column="29">userList</name></expr>)</condition><then pos:line="484" pos:column="38">
			<block pos:line="485" pos:column="25">{
				<expr_stmt><expr><name pos:line="486" pos:column="33">list</name> <op:operator pos:line="486" pos:column="38">+=</op:operator> <call><name pos:line="486" pos:column="41">TEXT</name><argument_list pos:line="486" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="486" pos:column="46">" "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="487" pos:column="33">list</name> <op:operator pos:line="487" pos:column="38">+=</op:operator> <name pos:line="487" pos:column="41">userList</name></expr>;</expr_stmt>
			}</block></then></if>
			
			<decl_stmt><decl><type><name pos:line="490" pos:column="25">generic_string</name></type> <name pos:line="490" pos:column="40">stringFilters</name> <init pos:line="490" pos:column="54">= <expr><call><name pos:line="490" pos:column="56">exts2Filters</name><argument_list pos:line="490" pos:column="68">(<argument><expr><name pos:line="490" pos:column="69">list</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="491" pos:column="25">const</specifier> <name pos:line="491" pos:column="31">TCHAR</name> <type:modifier pos:line="491" pos:column="37">*</type:modifier></type><name pos:line="491" pos:column="38">filters</name> <init pos:line="491" pos:column="46">= <expr><call><name><name pos:line="491" pos:column="48">stringFilters</name><op:operator pos:line="491" pos:column="61">.</op:operator><name pos:line="491" pos:column="62">c_str</name></name><argument_list pos:line="491" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="492" pos:column="25">if <condition pos:line="492" pos:column="28">(<expr><name><name pos:line="492" pos:column="29">filters</name><index pos:line="492" pos:column="36">[<expr><lit:literal type="number" pos:line="492" pos:column="37">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="492" pos:column="40">
			<block pos:line="493" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="494" pos:column="33">fDlg</name><op:operator pos:line="494" pos:column="37">.</op:operator><name pos:line="494" pos:column="38">setExtsFilter</name></name><argument_list pos:line="494" pos:column="51">(<argument><expr><call><name pos:line="494" pos:column="52">getLangDesc</name><argument_list pos:line="494" pos:column="63">(<argument><expr><name pos:line="494" pos:column="64">lid</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="494" pos:column="69">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="494" pos:column="75">.</op:operator><call><name pos:line="494" pos:column="76">c_str</name><argument_list pos:line="494" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="494" pos:column="85">filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="line" pos:line="496" pos:column="17">//</comment>
                <comment type="line" pos:line="497" pos:column="17">// Get index of lang type to find</comment>
                <comment type="line" pos:line="498" pos:column="17">//</comment>
                <if pos:line="499" pos:column="17">if <condition pos:line="499" pos:column="20">(<expr><name pos:line="499" pos:column="21">langType</name> <op:operator pos:line="499" pos:column="30">!=</op:operator> <op:operator pos:line="499" pos:column="33">-</op:operator><lit:literal type="number" pos:line="499" pos:column="34">1</lit:literal> <op:operator pos:line="499" pos:column="36">&amp;&amp;</op:operator> <op:operator pos:line="499" pos:column="39">!</op:operator><name pos:line="499" pos:column="40">ltFound</name></expr>)</condition><then pos:line="499" pos:column="48">
                <block pos:line="500" pos:column="17">{
                    <expr_stmt><expr><name pos:line="501" pos:column="21">ltFound</name> <op:operator pos:line="501" pos:column="29">=</op:operator> <name pos:line="501" pos:column="31">langType</name> <op:operator pos:line="501" pos:column="40">==</op:operator> <name pos:line="501" pos:column="43">lid</name></expr>;</expr_stmt>
                }</block></then></if>

                <if pos:line="504" pos:column="17">if <condition pos:line="504" pos:column="20">(<expr><name pos:line="504" pos:column="21">langType</name> <op:operator pos:line="504" pos:column="30">!=</op:operator> <op:operator pos:line="504" pos:column="33">-</op:operator><lit:literal type="number" pos:line="504" pos:column="34">1</lit:literal> <op:operator pos:line="504" pos:column="36">&amp;&amp;</op:operator> <op:operator pos:line="504" pos:column="39">!</op:operator><name pos:line="504" pos:column="40">ltFound</name></expr>)</condition><then pos:line="504" pos:column="48">
                <block pos:line="505" pos:column="17">{
                    <expr_stmt><expr><name pos:line="506" pos:column="21">ltIndex</name><op:operator pos:line="506" pos:column="28">++</op:operator></expr>;</expr_stmt>
                }</block></then></if>
			}</block></then></if>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="510" pos:column="17">l</name> <op:operator pos:line="510" pos:column="19">=</op:operator> <op:operator pos:line="510" pos:column="21">(</op:operator><call><name><name pos:line="510" pos:column="22">NppParameters</name><op:operator pos:line="510" pos:column="35">::</op:operator><name pos:line="510" pos:column="37">getInstance</name></name><argument_list pos:line="510" pos:column="48">()</argument_list></call><op:operator pos:line="510" pos:column="50">)</op:operator><op:operator pos:line="510" pos:column="51">-&gt;</op:operator><call><name pos:line="510" pos:column="53">getLangFromIndex</name><argument_list pos:line="510" pos:column="69">(<argument><expr><name pos:line="510" pos:column="70">i</name><op:operator pos:line="510" pos:column="71">++</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>

    <if pos:line="513" pos:column="5">if <condition pos:line="513" pos:column="8">(<expr><op:operator pos:line="513" pos:column="9">!</op:operator><name pos:line="513" pos:column="10">ltFound</name></expr>)</condition><then pos:line="513" pos:column="18">
        <return pos:line="514" pos:column="9">return <expr><op:operator pos:line="514" pos:column="16">-</op:operator><lit:literal type="number" pos:line="514" pos:column="17">1</lit:literal></expr>;</return></then></if>
    <return pos:line="515" pos:column="5">return <expr><name pos:line="515" pos:column="12">ltIndex</name></expr>;</return>
}</block></function>


<function><type><name pos:line="519" pos:column="1">bool</name></type> <name><name pos:line="519" pos:column="6">Notepad_plus</name><op:operator pos:line="519" pos:column="18">::</op:operator><name pos:line="519" pos:column="20">fileClose</name></name><parameter_list pos:line="519" pos:column="29">(<param><decl><type><name pos:line="519" pos:column="30">BufferID</name></type> <name pos:line="519" pos:column="39">id</name></decl></param>, <param><decl><type><name pos:line="519" pos:column="43">int</name></type> <name pos:line="519" pos:column="47">curView</name></decl></param>)</parameter_list>
<block pos:line="520" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="521" pos:column="9">BufferID</name></type> <name pos:line="521" pos:column="18">bufferID</name> <init pos:line="521" pos:column="27">= <expr><name pos:line="521" pos:column="29">id</name></expr></init></decl>;</decl_stmt>
	<if pos:line="522" pos:column="9">if <condition pos:line="522" pos:column="12">(<expr><name pos:line="522" pos:column="13">id</name> <op:operator pos:line="522" pos:column="16">==</op:operator> <name pos:line="522" pos:column="19">BUFFER_INVALID</name></expr>)</condition><then pos:line="522" pos:column="34">
		<expr_stmt><expr><name pos:line="523" pos:column="17">bufferID</name> <op:operator pos:line="523" pos:column="26">=</op:operator> <call><name><name pos:line="523" pos:column="28">_pEditView</name><op:operator pos:line="523" pos:column="38">-&gt;</op:operator><name pos:line="523" pos:column="40">getCurrentBufferID</name></name><argument_list pos:line="523" pos:column="58">()</argument_list></call></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="524" pos:column="9">Buffer</name> <type:modifier pos:line="524" pos:column="16">*</type:modifier></type> <name pos:line="524" pos:column="18">buf</name> <init pos:line="524" pos:column="22">= <expr><call><name><name pos:line="524" pos:column="24">MainFileManager</name><op:operator pos:line="524" pos:column="39">-&gt;</op:operator><name pos:line="524" pos:column="41">getBufferByID</name></name><argument_list pos:line="524" pos:column="54">(<argument><expr><name pos:line="524" pos:column="55">bufferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="526" pos:column="9">int</name></type> <name pos:line="526" pos:column="13">res</name></decl>;</decl_stmt>

	<comment type="line" pos:line="528" pos:column="9">//process the fileNamePath into LRF</comment>
	<decl_stmt><decl><type><specifier pos:line="529" pos:column="9">const</specifier> <name pos:line="529" pos:column="15">TCHAR</name> <type:modifier pos:line="529" pos:column="21">*</type:modifier></type><name pos:line="529" pos:column="22">fileNamePath</name> <init pos:line="529" pos:column="35">= <expr><call><name><name pos:line="529" pos:column="37">buf</name><op:operator pos:line="529" pos:column="40">-&gt;</op:operator><name pos:line="529" pos:column="42">getFullPathName</name></name><argument_list pos:line="529" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="531" pos:column="9">if <condition pos:line="531" pos:column="12">(<expr><call><name><name pos:line="531" pos:column="13">buf</name><op:operator pos:line="531" pos:column="16">-&gt;</op:operator><name pos:line="531" pos:column="18">isUntitled</name></name><argument_list pos:line="531" pos:column="28">()</argument_list></call> <op:operator pos:line="531" pos:column="31">&amp;&amp;</op:operator> <call><name><name pos:line="531" pos:column="34">buf</name><op:operator pos:line="531" pos:column="37">-&gt;</op:operator><name pos:line="531" pos:column="39">docLength</name></name><argument_list pos:line="531" pos:column="48">()</argument_list></call> <op:operator pos:line="531" pos:column="51">==</op:operator> <lit:literal type="number" pos:line="531" pos:column="54">0</lit:literal></expr>)</condition><then pos:line="531" pos:column="56">
	<block pos:line="532" pos:column="9">{
		<comment type="line" pos:line="533" pos:column="17">// Do nothing</comment>
	}</block></then>
	<else pos:line="535" pos:column="9">else <if pos:line="535" pos:column="14">if <condition pos:line="535" pos:column="17">(<expr><call><name><name pos:line="535" pos:column="18">buf</name><op:operator pos:line="535" pos:column="21">-&gt;</op:operator><name pos:line="535" pos:column="23">isDirty</name></name><argument_list pos:line="535" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="535" pos:column="33">
	<block pos:line="536" pos:column="9">{
		
		<expr_stmt><expr><name pos:line="538" pos:column="17">res</name> <op:operator pos:line="538" pos:column="21">=</op:operator> <call><name pos:line="538" pos:column="23">doSaveOrNot</name><argument_list pos:line="538" pos:column="34">(<argument><expr><name pos:line="538" pos:column="35">fileNamePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="539" pos:column="17">if <condition pos:line="539" pos:column="20">(<expr><name pos:line="539" pos:column="21">res</name> <op:operator pos:line="539" pos:column="25">==</op:operator> <name pos:line="539" pos:column="28">IDYES</name></expr>)</condition><then pos:line="539" pos:column="34">
		<block pos:line="540" pos:column="17">{
			<if pos:line="541" pos:column="25">if <condition pos:line="541" pos:column="28">(<expr><op:operator pos:line="541" pos:column="29">!</op:operator><call><name pos:line="541" pos:column="30">fileSave</name><argument_list pos:line="541" pos:column="38">(<argument><expr><name pos:line="541" pos:column="39">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="541" pos:column="43"> <comment type="line" pos:line="541" pos:column="44">// the cancel button of savedialog is pressed, aborts closing</comment>
				<return pos:line="542" pos:column="33">return <expr><lit:literal type="boolean" pos:line="542" pos:column="40">false</lit:literal></expr>;</return></then></if>
		}</block></then>
		<else pos:line="544" pos:column="17">else <if pos:line="544" pos:column="22">if <condition pos:line="544" pos:column="25">(<expr><name pos:line="544" pos:column="26">res</name> <op:operator pos:line="544" pos:column="30">==</op:operator> <name pos:line="544" pos:column="33">IDCANCEL</name></expr>)</condition><then pos:line="544" pos:column="42">
		<block pos:line="545" pos:column="17">{
			<return pos:line="546" pos:column="25">return <expr><lit:literal type="boolean" pos:line="546" pos:column="32">false</lit:literal></expr>;</return>	<comment type="line" pos:line="546" pos:column="41">//cancel aborts closing</comment>
		}</block></then>
		<else pos:line="548" pos:column="17">else
		<block pos:line="549" pos:column="17">{
			<comment type="line" pos:line="550" pos:column="25">// else IDNO we continue</comment>
		}</block></else></if></else></if>
	}</block></then></if></else></if>

	<decl_stmt><decl><type><name pos:line="554" pos:column="9">int</name></type> <name pos:line="554" pos:column="13">viewToClose</name> <init pos:line="554" pos:column="25">= <expr><call><name pos:line="554" pos:column="27">currentView</name><argument_list pos:line="554" pos:column="38">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="555" pos:column="9">if <condition pos:line="555" pos:column="12">(<expr><name pos:line="555" pos:column="13">curView</name> <op:operator pos:line="555" pos:column="21">!=</op:operator> <op:operator pos:line="555" pos:column="24">-</op:operator><lit:literal type="number" pos:line="555" pos:column="25">1</lit:literal></expr>)</condition><then pos:line="555" pos:column="27">
		<expr_stmt><expr><name pos:line="556" pos:column="17">viewToClose</name> <op:operator pos:line="556" pos:column="29">=</op:operator> <name pos:line="556" pos:column="31">curView</name></expr>;</expr_stmt></then></if>
	<comment type="line" pos:line="557" pos:column="9">//first check amount of documents, we dont want the view to hide if we closed a secondary doc with primary being empty</comment>
	<comment type="line" pos:line="558" pos:column="9">//int nrDocs = _pDocTab-&gt;nbItem();</comment>
	<expr_stmt><expr><call><name pos:line="559" pos:column="9">doClose</name><argument_list pos:line="559" pos:column="16">(<argument><expr><name pos:line="559" pos:column="17">bufferID</name></expr></argument>, <argument><expr><name pos:line="559" pos:column="27">viewToClose</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="560" pos:column="9">return <expr><lit:literal type="boolean" pos:line="560" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="563" pos:column="1">bool</name></type> <name><name pos:line="563" pos:column="6">Notepad_plus</name><op:operator pos:line="563" pos:column="18">::</op:operator><name pos:line="563" pos:column="20">fileCloseAll</name></name><parameter_list pos:line="563" pos:column="32">()</parameter_list>
<block pos:line="564" pos:column="1">{
	<comment type="line" pos:line="565" pos:column="9">//closes all documents, makes the current view the only one visible</comment>

	<comment type="line" pos:line="567" pos:column="9">//first check if we need to save any file</comment>
	<for pos:line="568" pos:column="9">for(<init><decl><type><name pos:line="568" pos:column="13">int</name></type> <name pos:line="568" pos:column="17">i</name> <init pos:line="568" pos:column="19">= <expr><lit:literal type="number" pos:line="568" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="568" pos:column="24">i</name> <op:operator pos:line="568" pos:column="26">&lt;</op:operator> <call><name><name pos:line="568" pos:column="28">_mainDocTab</name><op:operator pos:line="568" pos:column="39">.</op:operator><name pos:line="568" pos:column="40">nbItem</name></name><argument_list pos:line="568" pos:column="46">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="568" pos:column="50">i</name><op:operator pos:line="568" pos:column="51">++</op:operator></expr></incr>)
	<block pos:line="569" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="570" pos:column="17">BufferID</name></type> <name pos:line="570" pos:column="26">id</name> <init pos:line="570" pos:column="29">= <expr><call><name><name pos:line="570" pos:column="31">_mainDocTab</name><op:operator pos:line="570" pos:column="42">.</op:operator><name pos:line="570" pos:column="43">getBufferByIndex</name></name><argument_list pos:line="570" pos:column="59">(<argument><expr><name pos:line="570" pos:column="60">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="571" pos:column="17">Buffer</name> <type:modifier pos:line="571" pos:column="24">*</type:modifier></type> <name pos:line="571" pos:column="26">buf</name> <init pos:line="571" pos:column="30">= <expr><call><name><name pos:line="571" pos:column="32">MainFileManager</name><op:operator pos:line="571" pos:column="47">-&gt;</op:operator><name pos:line="571" pos:column="49">getBufferByID</name></name><argument_list pos:line="571" pos:column="62">(<argument><expr><name pos:line="571" pos:column="63">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="572" pos:column="17">if <condition pos:line="572" pos:column="20">(<expr><call><name><name pos:line="572" pos:column="21">buf</name><op:operator pos:line="572" pos:column="24">-&gt;</op:operator><name pos:line="572" pos:column="26">isUntitled</name></name><argument_list pos:line="572" pos:column="36">()</argument_list></call> <op:operator pos:line="572" pos:column="39">&amp;&amp;</op:operator> <call><name><name pos:line="572" pos:column="42">buf</name><op:operator pos:line="572" pos:column="45">-&gt;</op:operator><name pos:line="572" pos:column="47">docLength</name></name><argument_list pos:line="572" pos:column="56">()</argument_list></call> <op:operator pos:line="572" pos:column="59">==</op:operator> <lit:literal type="number" pos:line="572" pos:column="62">0</lit:literal></expr>)</condition><then pos:line="572" pos:column="64">
		<block pos:line="573" pos:column="17">{
			<comment type="line" pos:line="574" pos:column="25">// Do nothing</comment>
		}</block></then>
		<else pos:line="576" pos:column="17">else <if pos:line="576" pos:column="22">if <condition pos:line="576" pos:column="25">(<expr><call><name><name pos:line="576" pos:column="26">buf</name><op:operator pos:line="576" pos:column="29">-&gt;</op:operator><name pos:line="576" pos:column="31">isDirty</name></name><argument_list pos:line="576" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="576" pos:column="41"> 
		<block pos:line="577" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="578" pos:column="25">_mainDocTab</name><op:operator pos:line="578" pos:column="36">.</op:operator><name pos:line="578" pos:column="37">activateBuffer</name></name><argument_list pos:line="578" pos:column="51">(<argument><expr><name pos:line="578" pos:column="52">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="579" pos:column="25">_mainEditView</name><op:operator pos:line="579" pos:column="38">.</op:operator><name pos:line="579" pos:column="39">activateBuffer</name></name><argument_list pos:line="579" pos:column="53">(<argument><expr><name pos:line="579" pos:column="54">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="581" pos:column="25">int</name></type> <name pos:line="581" pos:column="29">res</name> <init pos:line="581" pos:column="33">= <expr><call><name pos:line="581" pos:column="35">doSaveOrNot</name><argument_list pos:line="581" pos:column="46">(<argument><expr><call><name><name pos:line="581" pos:column="47">buf</name><op:operator pos:line="581" pos:column="50">-&gt;</op:operator><name pos:line="581" pos:column="52">getFullPathName</name></name><argument_list pos:line="581" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="582" pos:column="25">if <condition pos:line="582" pos:column="28">(<expr><name pos:line="582" pos:column="29">res</name> <op:operator pos:line="582" pos:column="33">==</op:operator> <name pos:line="582" pos:column="36">IDYES</name></expr>)</condition><then pos:line="582" pos:column="42"> 
			<block pos:line="583" pos:column="25">{
				<if pos:line="584" pos:column="33">if <condition pos:line="584" pos:column="36">(<expr><op:operator pos:line="584" pos:column="37">!</op:operator><call><name pos:line="584" pos:column="38">fileSave</name><argument_list pos:line="584" pos:column="46">(<argument><expr><name pos:line="584" pos:column="47">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="584" pos:column="51">
					<return pos:line="585" pos:column="41">return <expr><lit:literal type="boolean" pos:line="585" pos:column="48">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="585" pos:column="57">//abort entire procedure</comment>
			}</block></then> 
			<else pos:line="587" pos:column="25">else <if pos:line="587" pos:column="30">if <condition pos:line="587" pos:column="33">(<expr><name pos:line="587" pos:column="34">res</name> <op:operator pos:line="587" pos:column="38">==</op:operator> <name pos:line="587" pos:column="41">IDCANCEL</name></expr>)</condition><then pos:line="587" pos:column="50"> 
			<block pos:line="588" pos:column="25">{
					<return pos:line="589" pos:column="41">return <expr><lit:literal type="boolean" pos:line="589" pos:column="48">false</lit:literal></expr>;</return>
			}</block></then></if></else></if>
		}</block></then></if></else></if>
	}</block></for>
	<for pos:line="593" pos:column="9">for(<init><decl><type><name pos:line="593" pos:column="13">int</name></type> <name pos:line="593" pos:column="17">i</name> <init pos:line="593" pos:column="19">= <expr><lit:literal type="number" pos:line="593" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="593" pos:column="24">i</name> <op:operator pos:line="593" pos:column="26">&lt;</op:operator> <call><name><name pos:line="593" pos:column="28">_subDocTab</name><op:operator pos:line="593" pos:column="38">.</op:operator><name pos:line="593" pos:column="39">nbItem</name></name><argument_list pos:line="593" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="593" pos:column="49">i</name><op:operator pos:line="593" pos:column="50">++</op:operator></expr></incr>) 
	<block pos:line="594" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="595" pos:column="17">BufferID</name></type> <name pos:line="595" pos:column="26">id</name> <init pos:line="595" pos:column="29">= <expr><call><name><name pos:line="595" pos:column="31">_subDocTab</name><op:operator pos:line="595" pos:column="41">.</op:operator><name pos:line="595" pos:column="42">getBufferByIndex</name></name><argument_list pos:line="595" pos:column="58">(<argument><expr><name pos:line="595" pos:column="59">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="596" pos:column="17">Buffer</name> <type:modifier pos:line="596" pos:column="24">*</type:modifier></type> <name pos:line="596" pos:column="26">buf</name> <init pos:line="596" pos:column="30">= <expr><call><name><name pos:line="596" pos:column="32">MainFileManager</name><op:operator pos:line="596" pos:column="47">-&gt;</op:operator><name pos:line="596" pos:column="49">getBufferByID</name></name><argument_list pos:line="596" pos:column="62">(<argument><expr><name pos:line="596" pos:column="63">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="597" pos:column="17">if <condition pos:line="597" pos:column="20">(<expr><call><name><name pos:line="597" pos:column="21">buf</name><op:operator pos:line="597" pos:column="24">-&gt;</op:operator><name pos:line="597" pos:column="26">isUntitled</name></name><argument_list pos:line="597" pos:column="36">()</argument_list></call> <op:operator pos:line="597" pos:column="39">&amp;&amp;</op:operator> <call><name><name pos:line="597" pos:column="42">buf</name><op:operator pos:line="597" pos:column="45">-&gt;</op:operator><name pos:line="597" pos:column="47">docLength</name></name><argument_list pos:line="597" pos:column="56">()</argument_list></call> <op:operator pos:line="597" pos:column="59">==</op:operator> <lit:literal type="number" pos:line="597" pos:column="62">0</lit:literal></expr>)</condition><then pos:line="597" pos:column="64">
		<block pos:line="598" pos:column="17">{
			<comment type="line" pos:line="599" pos:column="25">// Do nothing</comment>
		}</block></then>
		<else pos:line="601" pos:column="17">else <if pos:line="601" pos:column="22">if <condition pos:line="601" pos:column="25">(<expr><call><name><name pos:line="601" pos:column="26">buf</name><op:operator pos:line="601" pos:column="29">-&gt;</op:operator><name pos:line="601" pos:column="31">isDirty</name></name><argument_list pos:line="601" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="601" pos:column="41">
		<block pos:line="602" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="603" pos:column="25">_subDocTab</name><op:operator pos:line="603" pos:column="35">.</op:operator><name pos:line="603" pos:column="36">activateBuffer</name></name><argument_list pos:line="603" pos:column="50">(<argument><expr><name pos:line="603" pos:column="51">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="604" pos:column="25">_subEditView</name><op:operator pos:line="604" pos:column="37">.</op:operator><name pos:line="604" pos:column="38">activateBuffer</name></name><argument_list pos:line="604" pos:column="52">(<argument><expr><name pos:line="604" pos:column="53">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="606" pos:column="25">int</name></type> <name pos:line="606" pos:column="29">res</name> <init pos:line="606" pos:column="33">= <expr><call><name pos:line="606" pos:column="35">doSaveOrNot</name><argument_list pos:line="606" pos:column="46">(<argument><expr><call><name><name pos:line="606" pos:column="47">buf</name><op:operator pos:line="606" pos:column="50">-&gt;</op:operator><name pos:line="606" pos:column="52">getFullPathName</name></name><argument_list pos:line="606" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="607" pos:column="25">if <condition pos:line="607" pos:column="28">(<expr><name pos:line="607" pos:column="29">res</name> <op:operator pos:line="607" pos:column="33">==</op:operator> <name pos:line="607" pos:column="36">IDYES</name></expr>)</condition><then pos:line="607" pos:column="42">
			<block pos:line="608" pos:column="25">{
				<if pos:line="609" pos:column="33">if <condition pos:line="609" pos:column="36">(<expr><op:operator pos:line="609" pos:column="37">!</op:operator><call><name pos:line="609" pos:column="38">fileSave</name><argument_list pos:line="609" pos:column="46">(<argument><expr><name pos:line="609" pos:column="47">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="609" pos:column="51">
					<return pos:line="610" pos:column="41">return <expr><lit:literal type="boolean" pos:line="610" pos:column="48">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="610" pos:column="57">//abort entire procedure</comment>
			}</block></then>
			<else pos:line="612" pos:column="25">else <if pos:line="612" pos:column="30">if <condition pos:line="612" pos:column="33">(<expr><name pos:line="612" pos:column="34">res</name> <op:operator pos:line="612" pos:column="38">==</op:operator> <name pos:line="612" pos:column="41">IDCANCEL</name></expr>)</condition><then pos:line="612" pos:column="50"> 
			<block pos:line="613" pos:column="25">{
					<return pos:line="614" pos:column="41">return <expr><lit:literal type="boolean" pos:line="614" pos:column="48">false</lit:literal></expr>;</return>
				<comment type="line" pos:line="615" pos:column="33">//otherwise continue (IDNO)</comment>
			}</block></then></if></else></if>
		}</block></then></if></else></if>
	}</block></for>

	<comment type="line" pos:line="620" pos:column="9">//Then start closing, inactive view first so the active is left open</comment>
    <if pos:line="621" pos:column="5">if <condition pos:line="621" pos:column="8">(<expr><call><name pos:line="621" pos:column="9">bothActive</name><argument_list pos:line="621" pos:column="19">()</argument_list></call></expr>)</condition><then pos:line="621" pos:column="22">
    <block pos:line="622" pos:column="5">{	<comment type="line" pos:line="622" pos:column="9">//first close all docs in non-current view, which gets closed automatically</comment>
		<comment type="line" pos:line="623" pos:column="17">//Set active tab to the last one closed.</comment>
		<expr_stmt><expr><call><name pos:line="624" pos:column="17">activateBuffer</name><argument_list pos:line="624" pos:column="31">(<argument><expr><call><name><name pos:line="624" pos:column="32">_pNonDocTab</name><op:operator pos:line="624" pos:column="43">-&gt;</op:operator><name pos:line="624" pos:column="45">getBufferByIndex</name></name><argument_list pos:line="624" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="624" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="624" pos:column="66">otherView</name><argument_list pos:line="624" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="625" pos:column="17">for(<init><decl><type><name pos:line="625" pos:column="21">int</name></type> <name pos:line="625" pos:column="25">i</name> <init pos:line="625" pos:column="27">= <expr><call><name><name pos:line="625" pos:column="29">_pNonDocTab</name><op:operator pos:line="625" pos:column="40">-&gt;</op:operator><name pos:line="625" pos:column="42">nbItem</name></name><argument_list pos:line="625" pos:column="48">()</argument_list></call> <op:operator pos:line="625" pos:column="51">-</op:operator> <lit:literal type="number" pos:line="625" pos:column="53">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="625" pos:column="56">i</name> <op:operator pos:line="625" pos:column="58">&gt;=</op:operator> <lit:literal type="number" pos:line="625" pos:column="61">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="625" pos:column="64">i</name><op:operator pos:line="625" pos:column="65">--</op:operator></expr></incr>) <block pos:line="625" pos:column="69">{	<comment type="line" pos:line="625" pos:column="73">//close all from right to left</comment>
			<expr_stmt><expr><call><name pos:line="626" pos:column="25">doClose</name><argument_list pos:line="626" pos:column="32">(<argument><expr><call><name><name pos:line="626" pos:column="33">_pNonDocTab</name><op:operator pos:line="626" pos:column="44">-&gt;</op:operator><name pos:line="626" pos:column="46">getBufferByIndex</name></name><argument_list pos:line="626" pos:column="62">(<argument><expr><name pos:line="626" pos:column="63">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="626" pos:column="67">otherView</name><argument_list pos:line="626" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<comment type="line" pos:line="628" pos:column="17">//hideView(otherView());</comment>
    }</block></then></if>

	<expr_stmt><expr><call><name pos:line="631" pos:column="9">activateBuffer</name><argument_list pos:line="631" pos:column="23">(<argument><expr><call><name><name pos:line="631" pos:column="24">_pDocTab</name><op:operator pos:line="631" pos:column="32">-&gt;</op:operator><name pos:line="631" pos:column="34">getBufferByIndex</name></name><argument_list pos:line="631" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="631" pos:column="51">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="631" pos:column="55">currentView</name><argument_list pos:line="631" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="632" pos:column="9">for(<init><decl><type><name pos:line="632" pos:column="13">int</name></type> <name pos:line="632" pos:column="17">i</name> <init pos:line="632" pos:column="19">= <expr><call><name><name pos:line="632" pos:column="21">_pDocTab</name><op:operator pos:line="632" pos:column="29">-&gt;</op:operator><name pos:line="632" pos:column="31">nbItem</name></name><argument_list pos:line="632" pos:column="37">()</argument_list></call> <op:operator pos:line="632" pos:column="40">-</op:operator> <lit:literal type="number" pos:line="632" pos:column="42">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="632" pos:column="45">i</name> <op:operator pos:line="632" pos:column="47">&gt;=</op:operator> <lit:literal type="number" pos:line="632" pos:column="50">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="632" pos:column="53">i</name><op:operator pos:line="632" pos:column="54">--</op:operator></expr></incr>) <block pos:line="632" pos:column="58">{	<comment type="line" pos:line="632" pos:column="65">//close all from right to left</comment>
		<expr_stmt><expr><call><name pos:line="633" pos:column="17">doClose</name><argument_list pos:line="633" pos:column="24">(<argument><expr><call><name><name pos:line="633" pos:column="25">_pDocTab</name><op:operator pos:line="633" pos:column="33">-&gt;</op:operator><name pos:line="633" pos:column="35">getBufferByIndex</name></name><argument_list pos:line="633" pos:column="51">(<argument><expr><name pos:line="633" pos:column="52">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="633" pos:column="56">currentView</name><argument_list pos:line="633" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<return pos:line="635" pos:column="9">return <expr><lit:literal type="boolean" pos:line="635" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="638" pos:column="1">bool</name></type> <name><name pos:line="638" pos:column="6">Notepad_plus</name><op:operator pos:line="638" pos:column="18">::</op:operator><name pos:line="638" pos:column="20">fileCloseAllButCurrent</name></name><parameter_list pos:line="638" pos:column="42">()</parameter_list>
<block pos:line="639" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="640" pos:column="9">BufferID</name></type> <name pos:line="640" pos:column="18">current</name> <init pos:line="640" pos:column="26">= <expr><call><name><name pos:line="640" pos:column="28">_pEditView</name><op:operator pos:line="640" pos:column="38">-&gt;</op:operator><name pos:line="640" pos:column="40">getCurrentBufferID</name></name><argument_list pos:line="640" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="641" pos:column="9">int</name></type> <name pos:line="641" pos:column="13">active</name> <init pos:line="641" pos:column="20">= <expr><call><name><name pos:line="641" pos:column="22">_pDocTab</name><op:operator pos:line="641" pos:column="30">-&gt;</op:operator><name pos:line="641" pos:column="32">getCurrentTabIndex</name></name><argument_list pos:line="641" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="642" pos:column="9">//closes all documents, makes the current view the only one visible</comment>

	<comment type="line" pos:line="644" pos:column="9">//first check if we need to save any file</comment>
	<for pos:line="645" pos:column="9">for(<init><decl><type><name pos:line="645" pos:column="13">int</name></type> <name pos:line="645" pos:column="17">i</name> <init pos:line="645" pos:column="19">= <expr><lit:literal type="number" pos:line="645" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="645" pos:column="24">i</name> <op:operator pos:line="645" pos:column="26">&lt;</op:operator> <call><name><name pos:line="645" pos:column="28">_mainDocTab</name><op:operator pos:line="645" pos:column="39">.</op:operator><name pos:line="645" pos:column="40">nbItem</name></name><argument_list pos:line="645" pos:column="46">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="645" pos:column="50">i</name><op:operator pos:line="645" pos:column="51">++</op:operator></expr></incr>) <block pos:line="645" pos:column="55">{
		<decl_stmt><decl><type><name pos:line="646" pos:column="17">BufferID</name></type> <name pos:line="646" pos:column="26">id</name> <init pos:line="646" pos:column="29">= <expr><call><name><name pos:line="646" pos:column="31">_mainDocTab</name><op:operator pos:line="646" pos:column="42">.</op:operator><name pos:line="646" pos:column="43">getBufferByIndex</name></name><argument_list pos:line="646" pos:column="59">(<argument><expr><name pos:line="646" pos:column="60">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="647" pos:column="17">if <condition pos:line="647" pos:column="20">(<expr><name pos:line="647" pos:column="21">id</name> <op:operator pos:line="647" pos:column="24">==</op:operator> <name pos:line="647" pos:column="27">current</name></expr>)</condition><then pos:line="647" pos:column="35">
			<continue pos:line="648" pos:column="25">continue;</continue></then></if>
		<decl_stmt><decl><type><name pos:line="649" pos:column="17">Buffer</name> <type:modifier pos:line="649" pos:column="24">*</type:modifier></type> <name pos:line="649" pos:column="26">buf</name> <init pos:line="649" pos:column="30">= <expr><call><name><name pos:line="649" pos:column="32">MainFileManager</name><op:operator pos:line="649" pos:column="47">-&gt;</op:operator><name pos:line="649" pos:column="49">getBufferByID</name></name><argument_list pos:line="649" pos:column="62">(<argument><expr><name pos:line="649" pos:column="63">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="650" pos:column="17">if <condition pos:line="650" pos:column="20">(<expr><call><name><name pos:line="650" pos:column="21">buf</name><op:operator pos:line="650" pos:column="24">-&gt;</op:operator><name pos:line="650" pos:column="26">isUntitled</name></name><argument_list pos:line="650" pos:column="36">()</argument_list></call> <op:operator pos:line="650" pos:column="39">&amp;&amp;</op:operator> <call><name><name pos:line="650" pos:column="42">buf</name><op:operator pos:line="650" pos:column="45">-&gt;</op:operator><name pos:line="650" pos:column="47">docLength</name></name><argument_list pos:line="650" pos:column="56">()</argument_list></call> <op:operator pos:line="650" pos:column="59">==</op:operator> <lit:literal type="number" pos:line="650" pos:column="62">0</lit:literal></expr>)</condition><then pos:line="650" pos:column="64">
		<block pos:line="651" pos:column="17">{
			<comment type="line" pos:line="652" pos:column="25">// Do nothing</comment>
		}</block></then>
		<else pos:line="654" pos:column="17">else <if pos:line="654" pos:column="22">if <condition pos:line="654" pos:column="25">(<expr><call><name><name pos:line="654" pos:column="26">buf</name><op:operator pos:line="654" pos:column="29">-&gt;</op:operator><name pos:line="654" pos:column="31">isDirty</name></name><argument_list pos:line="654" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="654" pos:column="41"> 
		<block pos:line="655" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="656" pos:column="25">_mainDocTab</name><op:operator pos:line="656" pos:column="36">.</op:operator><name pos:line="656" pos:column="37">activateBuffer</name></name><argument_list pos:line="656" pos:column="51">(<argument><expr><name pos:line="656" pos:column="52">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="657" pos:column="25">_mainEditView</name><op:operator pos:line="657" pos:column="38">.</op:operator><name pos:line="657" pos:column="39">activateBuffer</name></name><argument_list pos:line="657" pos:column="53">(<argument><expr><name pos:line="657" pos:column="54">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="659" pos:column="25">int</name></type> <name pos:line="659" pos:column="29">res</name> <init pos:line="659" pos:column="33">= <expr><call><name pos:line="659" pos:column="35">doSaveOrNot</name><argument_list pos:line="659" pos:column="46">(<argument><expr><call><name><name pos:line="659" pos:column="47">buf</name><op:operator pos:line="659" pos:column="50">-&gt;</op:operator><name pos:line="659" pos:column="52">getFullPathName</name></name><argument_list pos:line="659" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="660" pos:column="25">if <condition pos:line="660" pos:column="28">(<expr><name pos:line="660" pos:column="29">res</name> <op:operator pos:line="660" pos:column="33">==</op:operator> <name pos:line="660" pos:column="36">IDYES</name></expr>)</condition><then pos:line="660" pos:column="42"> 
			<block pos:line="661" pos:column="25">{
				<if pos:line="662" pos:column="33">if <condition pos:line="662" pos:column="36">(<expr><op:operator pos:line="662" pos:column="37">!</op:operator><call><name pos:line="662" pos:column="38">fileSave</name><argument_list pos:line="662" pos:column="46">(<argument><expr><name pos:line="662" pos:column="47">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="662" pos:column="51">
					<return pos:line="663" pos:column="41">return <expr><lit:literal type="boolean" pos:line="663" pos:column="48">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="663" pos:column="57">//abort entire procedure</comment>
			}</block></then> 
			<else pos:line="665" pos:column="25">else <if pos:line="665" pos:column="30">if <condition pos:line="665" pos:column="33">(<expr><name pos:line="665" pos:column="34">res</name> <op:operator pos:line="665" pos:column="38">==</op:operator> <name pos:line="665" pos:column="41">IDCANCEL</name></expr>)</condition><then pos:line="665" pos:column="50">
			<block pos:line="666" pos:column="25">{
					<return pos:line="667" pos:column="41">return <expr><lit:literal type="boolean" pos:line="667" pos:column="48">false</lit:literal></expr>;</return>
			}</block></then></if></else></if>
		}</block></then></if></else></if>
	}</block></for>
	<for pos:line="671" pos:column="9">for(<init><decl><type><name pos:line="671" pos:column="13">int</name></type> <name pos:line="671" pos:column="17">i</name> <init pos:line="671" pos:column="19">= <expr><lit:literal type="number" pos:line="671" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="671" pos:column="24">i</name> <op:operator pos:line="671" pos:column="26">&lt;</op:operator> <call><name><name pos:line="671" pos:column="28">_subDocTab</name><op:operator pos:line="671" pos:column="38">.</op:operator><name pos:line="671" pos:column="39">nbItem</name></name><argument_list pos:line="671" pos:column="45">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="671" pos:column="49">i</name><op:operator pos:line="671" pos:column="50">++</op:operator></expr></incr>) 
	<block pos:line="672" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="673" pos:column="17">BufferID</name></type> <name pos:line="673" pos:column="26">id</name> <init pos:line="673" pos:column="29">= <expr><call><name><name pos:line="673" pos:column="31">_subDocTab</name><op:operator pos:line="673" pos:column="41">.</op:operator><name pos:line="673" pos:column="42">getBufferByIndex</name></name><argument_list pos:line="673" pos:column="58">(<argument><expr><name pos:line="673" pos:column="59">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="674" pos:column="17">Buffer</name> <type:modifier pos:line="674" pos:column="24">*</type:modifier></type> <name pos:line="674" pos:column="26">buf</name> <init pos:line="674" pos:column="30">= <expr><call><name><name pos:line="674" pos:column="32">MainFileManager</name><op:operator pos:line="674" pos:column="47">-&gt;</op:operator><name pos:line="674" pos:column="49">getBufferByID</name></name><argument_list pos:line="674" pos:column="62">(<argument><expr><name pos:line="674" pos:column="63">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="675" pos:column="17">if <condition pos:line="675" pos:column="20">(<expr><name pos:line="675" pos:column="21">id</name> <op:operator pos:line="675" pos:column="24">==</op:operator> <name pos:line="675" pos:column="27">current</name></expr>)</condition><then pos:line="675" pos:column="35">
			<continue pos:line="676" pos:column="25">continue;</continue></then></if>
		<if pos:line="677" pos:column="17">if <condition pos:line="677" pos:column="20">(<expr><call><name><name pos:line="677" pos:column="21">buf</name><op:operator pos:line="677" pos:column="24">-&gt;</op:operator><name pos:line="677" pos:column="26">isUntitled</name></name><argument_list pos:line="677" pos:column="36">()</argument_list></call> <op:operator pos:line="677" pos:column="39">&amp;&amp;</op:operator> <call><name><name pos:line="677" pos:column="42">buf</name><op:operator pos:line="677" pos:column="45">-&gt;</op:operator><name pos:line="677" pos:column="47">docLength</name></name><argument_list pos:line="677" pos:column="56">()</argument_list></call> <op:operator pos:line="677" pos:column="59">==</op:operator> <lit:literal type="number" pos:line="677" pos:column="62">0</lit:literal></expr>)</condition><then pos:line="677" pos:column="64">
		<block pos:line="678" pos:column="17">{
			<comment type="line" pos:line="679" pos:column="25">// Do nothing</comment>
		}</block></then>
		<else pos:line="681" pos:column="17">else <if pos:line="681" pos:column="22">if <condition pos:line="681" pos:column="25">(<expr><call><name><name pos:line="681" pos:column="26">buf</name><op:operator pos:line="681" pos:column="29">-&gt;</op:operator><name pos:line="681" pos:column="31">isDirty</name></name><argument_list pos:line="681" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="681" pos:column="41"> 
		<block pos:line="682" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="683" pos:column="25">_subDocTab</name><op:operator pos:line="683" pos:column="35">.</op:operator><name pos:line="683" pos:column="36">activateBuffer</name></name><argument_list pos:line="683" pos:column="50">(<argument><expr><name pos:line="683" pos:column="51">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="684" pos:column="25">_subEditView</name><op:operator pos:line="684" pos:column="37">.</op:operator><name pos:line="684" pos:column="38">activateBuffer</name></name><argument_list pos:line="684" pos:column="52">(<argument><expr><name pos:line="684" pos:column="53">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="686" pos:column="25">int</name></type> <name pos:line="686" pos:column="29">res</name> <init pos:line="686" pos:column="33">= <expr><call><name pos:line="686" pos:column="35">doSaveOrNot</name><argument_list pos:line="686" pos:column="46">(<argument><expr><call><name><name pos:line="686" pos:column="47">buf</name><op:operator pos:line="686" pos:column="50">-&gt;</op:operator><name pos:line="686" pos:column="52">getFullPathName</name></name><argument_list pos:line="686" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="687" pos:column="25">if <condition pos:line="687" pos:column="28">(<expr><name pos:line="687" pos:column="29">res</name> <op:operator pos:line="687" pos:column="33">==</op:operator> <name pos:line="687" pos:column="36">IDYES</name></expr>)</condition><then pos:line="687" pos:column="42"> 
			<block pos:line="688" pos:column="25">{
				<if pos:line="689" pos:column="33">if <condition pos:line="689" pos:column="36">(<expr><op:operator pos:line="689" pos:column="37">!</op:operator><call><name pos:line="689" pos:column="38">fileSave</name><argument_list pos:line="689" pos:column="46">(<argument><expr><name pos:line="689" pos:column="47">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="689" pos:column="51">
					<return pos:line="690" pos:column="41">return <expr><lit:literal type="boolean" pos:line="690" pos:column="48">false</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="690" pos:column="57">//abort entire procedure</comment>
			}</block></then> 
			<else pos:line="692" pos:column="25">else <if pos:line="692" pos:column="30">if <condition pos:line="692" pos:column="33">(<expr><name pos:line="692" pos:column="34">res</name> <op:operator pos:line="692" pos:column="38">==</op:operator> <name pos:line="692" pos:column="41">IDCANCEL</name></expr>)</condition><then pos:line="692" pos:column="50"> 
			<block pos:line="693" pos:column="25">{
					<return pos:line="694" pos:column="41">return <expr><lit:literal type="boolean" pos:line="694" pos:column="48">false</lit:literal></expr>;</return>
			}</block></then></if></else></if>
		}</block></then></if></else></if>
	}</block></for>

	<comment type="line" pos:line="699" pos:column="9">//Then start closing, inactive view first so the active is left open</comment>
    <if pos:line="700" pos:column="5">if <condition pos:line="700" pos:column="8">(<expr><call><name pos:line="700" pos:column="9">bothActive</name><argument_list pos:line="700" pos:column="19">()</argument_list></call></expr>)</condition><then pos:line="700" pos:column="22">
    <block pos:line="701" pos:column="5">{	<comment type="line" pos:line="701" pos:column="9">//first close all docs in non-current view, which gets closed automatically</comment>
		<comment type="line" pos:line="702" pos:column="17">//Set active tab to the last one closed.</comment>
		<expr_stmt><expr><call><name pos:line="703" pos:column="17">activateBuffer</name><argument_list pos:line="703" pos:column="31">(<argument><expr><call><name><name pos:line="703" pos:column="32">_pNonDocTab</name><op:operator pos:line="703" pos:column="43">-&gt;</op:operator><name pos:line="703" pos:column="45">getBufferByIndex</name></name><argument_list pos:line="703" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="703" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="703" pos:column="66">otherView</name><argument_list pos:line="703" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="704" pos:column="17">for(<init><decl><type><name pos:line="704" pos:column="21">int</name></type> <name pos:line="704" pos:column="25">i</name> <init pos:line="704" pos:column="27">= <expr><call><name><name pos:line="704" pos:column="29">_pNonDocTab</name><op:operator pos:line="704" pos:column="40">-&gt;</op:operator><name pos:line="704" pos:column="42">nbItem</name></name><argument_list pos:line="704" pos:column="48">()</argument_list></call> <op:operator pos:line="704" pos:column="51">-</op:operator> <lit:literal type="number" pos:line="704" pos:column="53">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="704" pos:column="56">i</name> <op:operator pos:line="704" pos:column="58">&gt;=</op:operator> <lit:literal type="number" pos:line="704" pos:column="61">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="704" pos:column="64">i</name><op:operator pos:line="704" pos:column="65">--</op:operator></expr></incr>) <block pos:line="704" pos:column="69">{	<comment type="line" pos:line="704" pos:column="73">//close all from right to left</comment>
			<expr_stmt><expr><call><name pos:line="705" pos:column="25">doClose</name><argument_list pos:line="705" pos:column="32">(<argument><expr><call><name><name pos:line="705" pos:column="33">_pNonDocTab</name><op:operator pos:line="705" pos:column="44">-&gt;</op:operator><name pos:line="705" pos:column="46">getBufferByIndex</name></name><argument_list pos:line="705" pos:column="62">(<argument><expr><name pos:line="705" pos:column="63">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="705" pos:column="67">otherView</name><argument_list pos:line="705" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<comment type="line" pos:line="707" pos:column="17">//hideView(otherView());</comment>
    }</block></then></if>

	<expr_stmt><expr><call><name pos:line="710" pos:column="9">activateBuffer</name><argument_list pos:line="710" pos:column="23">(<argument><expr><call><name><name pos:line="710" pos:column="24">_pDocTab</name><op:operator pos:line="710" pos:column="32">-&gt;</op:operator><name pos:line="710" pos:column="34">getBufferByIndex</name></name><argument_list pos:line="710" pos:column="50">(<argument><expr><lit:literal type="number" pos:line="710" pos:column="51">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="710" pos:column="55">currentView</name><argument_list pos:line="710" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="711" pos:column="9">for(<init><decl><type><name pos:line="711" pos:column="13">int</name></type> <name pos:line="711" pos:column="17">i</name> <init pos:line="711" pos:column="19">= <expr><call><name><name pos:line="711" pos:column="21">_pDocTab</name><op:operator pos:line="711" pos:column="29">-&gt;</op:operator><name pos:line="711" pos:column="31">nbItem</name></name><argument_list pos:line="711" pos:column="37">()</argument_list></call> <op:operator pos:line="711" pos:column="40">-</op:operator> <lit:literal type="number" pos:line="711" pos:column="42">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="711" pos:column="45">i</name> <op:operator pos:line="711" pos:column="47">&gt;=</op:operator> <lit:literal type="number" pos:line="711" pos:column="50">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="711" pos:column="53">i</name><op:operator pos:line="711" pos:column="54">--</op:operator></expr></incr>) <block pos:line="711" pos:column="58">{	<comment type="line" pos:line="711" pos:column="65">//close all from right to left</comment>
		<if pos:line="712" pos:column="17">if <condition pos:line="712" pos:column="20">(<expr><name pos:line="712" pos:column="21">i</name> <op:operator pos:line="712" pos:column="23">==</op:operator> <name pos:line="712" pos:column="26">active</name></expr>)</condition><then pos:line="712" pos:column="33"> <block pos:line="712" pos:column="34">{	<comment type="line" pos:line="712" pos:column="41">//dont close active index</comment>
			<continue pos:line="713" pos:column="25">continue;</continue>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="715" pos:column="17">doClose</name><argument_list pos:line="715" pos:column="24">(<argument><expr><call><name><name pos:line="715" pos:column="25">_pDocTab</name><op:operator pos:line="715" pos:column="33">-&gt;</op:operator><name pos:line="715" pos:column="35">getBufferByIndex</name></name><argument_list pos:line="715" pos:column="51">(<argument><expr><name pos:line="715" pos:column="52">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="715" pos:column="56">currentView</name><argument_list pos:line="715" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<return pos:line="717" pos:column="9">return <expr><lit:literal type="boolean" pos:line="717" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="720" pos:column="1">bool</name></type> <name><name pos:line="720" pos:column="6">Notepad_plus</name><op:operator pos:line="720" pos:column="18">::</op:operator><name pos:line="720" pos:column="20">fileSave</name></name><parameter_list pos:line="720" pos:column="28">(<param><decl><type><name pos:line="720" pos:column="29">BufferID</name></type> <name pos:line="720" pos:column="38">id</name></decl></param>)</parameter_list>
<block pos:line="721" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="722" pos:column="9">BufferID</name></type> <name pos:line="722" pos:column="18">bufferID</name> <init pos:line="722" pos:column="27">= <expr><name pos:line="722" pos:column="29">id</name></expr></init></decl>;</decl_stmt>
	<if pos:line="723" pos:column="9">if <condition pos:line="723" pos:column="12">(<expr><name pos:line="723" pos:column="13">id</name> <op:operator pos:line="723" pos:column="16">==</op:operator> <name pos:line="723" pos:column="19">BUFFER_INVALID</name></expr>)</condition><then pos:line="723" pos:column="34">
		<expr_stmt><expr><name pos:line="724" pos:column="17">bufferID</name> <op:operator pos:line="724" pos:column="26">=</op:operator> <call><name><name pos:line="724" pos:column="28">_pEditView</name><op:operator pos:line="724" pos:column="38">-&gt;</op:operator><name pos:line="724" pos:column="40">getCurrentBufferID</name></name><argument_list pos:line="724" pos:column="58">()</argument_list></call></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="725" pos:column="9">Buffer</name> <type:modifier pos:line="725" pos:column="16">*</type:modifier></type> <name pos:line="725" pos:column="18">buf</name> <init pos:line="725" pos:column="22">= <expr><call><name><name pos:line="725" pos:column="24">MainFileManager</name><op:operator pos:line="725" pos:column="39">-&gt;</op:operator><name pos:line="725" pos:column="41">getBufferByID</name></name><argument_list pos:line="725" pos:column="54">(<argument><expr><name pos:line="725" pos:column="55">bufferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="727" pos:column="9">if <condition pos:line="727" pos:column="12">(<expr><op:operator pos:line="727" pos:column="13">!</op:operator><call><name><name pos:line="727" pos:column="14">buf</name><op:operator pos:line="727" pos:column="17">-&gt;</op:operator><name pos:line="727" pos:column="19">getFileReadOnly</name></name><argument_list pos:line="727" pos:column="34">()</argument_list></call> <op:operator pos:line="727" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="727" pos:column="40">buf</name><op:operator pos:line="727" pos:column="43">-&gt;</op:operator><name pos:line="727" pos:column="45">isDirty</name></name><argument_list pos:line="727" pos:column="52">()</argument_list></call></expr>)</condition><then pos:line="727" pos:column="55">	<comment type="line" pos:line="727" pos:column="57">//cannot save if readonly</comment>
	<block pos:line="728" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="729" pos:column="17">const</specifier> <name pos:line="729" pos:column="23">TCHAR</name> <type:modifier pos:line="729" pos:column="29">*</type:modifier></type><name pos:line="729" pos:column="30">fn</name> <init pos:line="729" pos:column="33">= <expr><call><name><name pos:line="729" pos:column="35">buf</name><op:operator pos:line="729" pos:column="38">-&gt;</op:operator><name pos:line="729" pos:column="40">getFullPathName</name></name><argument_list pos:line="729" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="730" pos:column="17">if <condition pos:line="730" pos:column="20">(<expr><call><name><name pos:line="730" pos:column="21">buf</name><op:operator pos:line="730" pos:column="24">-&gt;</op:operator><name pos:line="730" pos:column="26">isUntitled</name></name><argument_list pos:line="730" pos:column="36">()</argument_list></call></expr>)</condition><then pos:line="730" pos:column="39">
		<block pos:line="731" pos:column="17">{
			<return pos:line="732" pos:column="25">return <expr><call><name pos:line="732" pos:column="32">fileSaveAs</name><argument_list pos:line="732" pos:column="42">(<argument><expr><name pos:line="732" pos:column="43">bufferID</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block></then>
		<else pos:line="734" pos:column="17">else
		<block pos:line="735" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="736" pos:column="25">const</specifier> <name pos:line="736" pos:column="31">NppGUI</name> <type:modifier pos:line="736" pos:column="38">&amp;</type:modifier></type> <name pos:line="736" pos:column="40">nppgui</name> <init pos:line="736" pos:column="47">= <expr><op:operator pos:line="736" pos:column="49">(</op:operator><call><name><name pos:line="736" pos:column="50">NppParameters</name><op:operator pos:line="736" pos:column="63">::</op:operator><name pos:line="736" pos:column="65">getInstance</name></name><argument_list pos:line="736" pos:column="76">()</argument_list></call><op:operator pos:line="736" pos:column="78">)</op:operator><op:operator pos:line="736" pos:column="79">-&gt;</op:operator><call><name pos:line="736" pos:column="81">getNppGUI</name><argument_list pos:line="736" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="737" pos:column="25">BackupFeature</name></type> <name pos:line="737" pos:column="39">backup</name> <init pos:line="737" pos:column="46">= <expr><name><name pos:line="737" pos:column="48">nppgui</name><op:operator pos:line="737" pos:column="54">.</op:operator><name pos:line="737" pos:column="55">_backup</name></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="738" pos:column="25">TCHAR</name> <type:modifier pos:line="738" pos:column="31">*</type:modifier></type><name pos:line="738" pos:column="32">name</name> <init pos:line="738" pos:column="37">= <expr><call><name><op:operator pos:line="738" pos:column="39">::</op:operator><name pos:line="738" pos:column="41">PathFindFileName</name></name><argument_list pos:line="738" pos:column="57">(<argument><expr><name pos:line="738" pos:column="58">fn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="740" pos:column="25">if <condition pos:line="740" pos:column="28">(<expr><name pos:line="740" pos:column="29">backup</name> <op:operator pos:line="740" pos:column="36">==</op:operator> <name pos:line="740" pos:column="39">bak_simple</name></expr>)</condition><then pos:line="740" pos:column="50">
			<block pos:line="741" pos:column="25">{
				<comment type="line" pos:line="742" pos:column="33">//copy fn to fn.backup</comment>
				<function_decl><type><name pos:line="743" pos:column="33">generic_string</name></type> <name pos:line="743" pos:column="48">fn_bak</name><parameter_list pos:line="743" pos:column="54">(<param><decl><type><name pos:line="743" pos:column="55">fn</name></type></decl></param>)</parameter_list>;</function_decl>
				<if pos:line="744" pos:column="33">if <condition pos:line="744" pos:column="36">(<expr><op:operator pos:line="744" pos:column="37">(</op:operator><name><name pos:line="744" pos:column="38">nppgui</name><op:operator pos:line="744" pos:column="44">.</op:operator><name pos:line="744" pos:column="45">_useDir</name></name><op:operator pos:line="744" pos:column="52">)</op:operator> <op:operator pos:line="744" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="744" pos:column="57">(</op:operator><name><name pos:line="744" pos:column="58">nppgui</name><op:operator pos:line="744" pos:column="64">.</op:operator><name pos:line="744" pos:column="65">_backupDir</name></name> <op:operator pos:line="744" pos:column="76">!=</op:operator> <call><name pos:line="744" pos:column="79">TEXT</name><argument_list pos:line="744" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="744" pos:column="84">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="744" pos:column="87">)</op:operator></expr>)</condition><then pos:line="744" pos:column="89">
				<block pos:line="745" pos:column="33">{
					<expr_stmt><expr><name pos:line="746" pos:column="41">fn_bak</name> <op:operator pos:line="746" pos:column="48">=</op:operator> <name><name pos:line="746" pos:column="50">nppgui</name><op:operator pos:line="746" pos:column="56">.</op:operator><name pos:line="746" pos:column="57">_backupDir</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="747" pos:column="41">fn_bak</name> <op:operator pos:line="747" pos:column="48">+=</op:operator> <call><name pos:line="747" pos:column="51">TEXT</name><argument_list pos:line="747" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="747" pos:column="56">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="748" pos:column="41">fn_bak</name> <op:operator pos:line="748" pos:column="48">+=</op:operator> <name pos:line="748" pos:column="51">name</name></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="750" pos:column="33">else
				<block pos:line="751" pos:column="33">{
					<expr_stmt><expr><name pos:line="752" pos:column="41">fn_bak</name> <op:operator pos:line="752" pos:column="48">=</op:operator> <name pos:line="752" pos:column="50">fn</name></expr>;</expr_stmt>
				}</block></else></if>
				<expr_stmt><expr><name pos:line="754" pos:column="33">fn_bak</name> <op:operator pos:line="754" pos:column="40">+=</op:operator> <call><name pos:line="754" pos:column="43">TEXT</name><argument_list pos:line="754" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="754" pos:column="48">".bak"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="755" pos:column="33">::</op:operator><name pos:line="755" pos:column="35">CopyFile</name></name><argument_list pos:line="755" pos:column="43">(<argument><expr><name pos:line="755" pos:column="44">fn</name></expr></argument>, <argument><expr><call><name><name pos:line="755" pos:column="48">fn_bak</name><op:operator pos:line="755" pos:column="54">.</op:operator><name pos:line="755" pos:column="55">c_str</name></name><argument_list pos:line="755" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="755" pos:column="64">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="757" pos:column="25">else <if pos:line="757" pos:column="30">if <condition pos:line="757" pos:column="33">(<expr><name pos:line="757" pos:column="34">backup</name> <op:operator pos:line="757" pos:column="41">==</op:operator> <name pos:line="757" pos:column="44">bak_verbose</name></expr>)</condition><then pos:line="757" pos:column="56">
			<block pos:line="758" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="759" pos:column="33">generic_string</name></type> <name pos:line="759" pos:column="48">fn_dateTime_bak</name><argument_list pos:line="759" pos:column="63">(<argument><expr><call><name pos:line="759" pos:column="64">TEXT</name><argument_list pos:line="759" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="759" pos:column="69">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
				
				<if pos:line="761" pos:column="33">if <condition pos:line="761" pos:column="36">(<expr><op:operator pos:line="761" pos:column="37">(</op:operator><name><name pos:line="761" pos:column="38">nppgui</name><op:operator pos:line="761" pos:column="44">.</op:operator><name pos:line="761" pos:column="45">_useDir</name></name><op:operator pos:line="761" pos:column="52">)</op:operator> <op:operator pos:line="761" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="761" pos:column="57">(</op:operator><name><name pos:line="761" pos:column="58">nppgui</name><op:operator pos:line="761" pos:column="64">.</op:operator><name pos:line="761" pos:column="65">_backupDir</name></name> <op:operator pos:line="761" pos:column="76">!=</op:operator> <call><name pos:line="761" pos:column="79">TEXT</name><argument_list pos:line="761" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="761" pos:column="84">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="761" pos:column="87">)</op:operator></expr>)</condition><then pos:line="761" pos:column="89">
				<block pos:line="762" pos:column="33">{
					<expr_stmt><expr><name pos:line="763" pos:column="41">fn_dateTime_bak</name> <op:operator pos:line="763" pos:column="57">=</op:operator> <name><name pos:line="763" pos:column="59">nppgui</name><op:operator pos:line="763" pos:column="65">.</op:operator><name pos:line="763" pos:column="66">_backupDir</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="764" pos:column="41">fn_dateTime_bak</name> <op:operator pos:line="764" pos:column="57">+=</op:operator> <call><name pos:line="764" pos:column="60">TEXT</name><argument_list pos:line="764" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="764" pos:column="65">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="766" pos:column="33">else
				<block pos:line="767" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="768" pos:column="41">const</specifier> <name pos:line="768" pos:column="47">TCHAR</name> <type:modifier pos:line="768" pos:column="53">*</type:modifier></type><name pos:line="768" pos:column="54">bakDir</name> <init pos:line="768" pos:column="61">= <expr><call><name pos:line="768" pos:column="63">TEXT</name><argument_list pos:line="768" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="768" pos:column="68">"nppBackup"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<comment type="line" pos:line="770" pos:column="41">// std::string path should be a temp throwable variable </comment>
					<decl_stmt><decl><type><name pos:line="771" pos:column="41">generic_string</name></type> <name pos:line="771" pos:column="56">path</name> <init pos:line="771" pos:column="61">= <expr><name pos:line="771" pos:column="63">fn</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="772" pos:column="41">::</op:operator><name pos:line="772" pos:column="43">PathRemoveFileSpec</name></name><argument_list pos:line="772" pos:column="61">(<argument><expr><name pos:line="772" pos:column="62">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="773" pos:column="41">fn_dateTime_bak</name> <op:operator pos:line="773" pos:column="57">=</op:operator> <call><name><name pos:line="773" pos:column="59">path</name><op:operator pos:line="773" pos:column="63">.</op:operator><name pos:line="773" pos:column="64">c_str</name></name><argument_list pos:line="773" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
					

					<expr_stmt><expr><name pos:line="776" pos:column="41">fn_dateTime_bak</name> <op:operator pos:line="776" pos:column="57">+=</op:operator> <call><name pos:line="776" pos:column="60">TEXT</name><argument_list pos:line="776" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="776" pos:column="65">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="777" pos:column="41">fn_dateTime_bak</name> <op:operator pos:line="777" pos:column="57">+=</op:operator> <name pos:line="777" pos:column="60">bakDir</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="778" pos:column="41">fn_dateTime_bak</name> <op:operator pos:line="778" pos:column="57">+=</op:operator> <call><name pos:line="778" pos:column="60">TEXT</name><argument_list pos:line="778" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="778" pos:column="65">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<if pos:line="780" pos:column="41">if <condition pos:line="780" pos:column="44">(<expr><op:operator pos:line="780" pos:column="45">!</op:operator><call><name><op:operator pos:line="780" pos:column="46">::</op:operator><name pos:line="780" pos:column="48">PathFileExists</name></name><argument_list pos:line="780" pos:column="62">(<argument><expr><call><name><name pos:line="780" pos:column="63">fn_dateTime_bak</name><op:operator pos:line="780" pos:column="78">.</op:operator><name pos:line="780" pos:column="79">c_str</name></name><argument_list pos:line="780" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="780" pos:column="88">
					<block pos:line="781" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="782" pos:column="49">::</op:operator><name pos:line="782" pos:column="51">CreateDirectory</name></name><argument_list pos:line="782" pos:column="66">(<argument><expr><call><name><name pos:line="782" pos:column="67">fn_dateTime_bak</name><op:operator pos:line="782" pos:column="82">.</op:operator><name pos:line="782" pos:column="83">c_str</name></name><argument_list pos:line="782" pos:column="88">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="782" pos:column="92">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></else></if>

				<expr_stmt><expr><name pos:line="786" pos:column="33">fn_dateTime_bak</name> <op:operator pos:line="786" pos:column="49">+=</op:operator> <name pos:line="786" pos:column="52">name</name></expr>;</expr_stmt>

				<decl_stmt><decl><type><specifier pos:line="788" pos:column="33">const</specifier> <name pos:line="788" pos:column="39">int</name></type> <name pos:line="788" pos:column="43">temBufLen</name> <init pos:line="788" pos:column="53">= <expr><lit:literal type="number" pos:line="788" pos:column="55">32</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="789" pos:column="33">TCHAR</name></type> <name><name pos:line="789" pos:column="39">tmpbuf</name><index pos:line="789" pos:column="45">[<expr><name pos:line="789" pos:column="46">temBufLen</name></expr>]</index></name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="790" pos:column="33">time_t</name></type> <name pos:line="790" pos:column="40">ltime</name> <init pos:line="790" pos:column="46">= <expr><call><name pos:line="790" pos:column="48">time</name><argument_list pos:line="790" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="790" pos:column="53">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type pos:line="791" pos:column="33">struct <name pos:line="791" pos:column="40">tm</name> <type:modifier pos:line="791" pos:column="43">*</type:modifier></type><name pos:line="791" pos:column="44">today</name></decl>;</decl_stmt>

				<expr_stmt><expr><name pos:line="793" pos:column="33">today</name> <op:operator pos:line="793" pos:column="39">=</op:operator> <call><name pos:line="793" pos:column="41">localtime</name><argument_list pos:line="793" pos:column="50">(<argument><expr><op:operator pos:line="793" pos:column="51">&amp;</op:operator><name pos:line="793" pos:column="52">ltime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="794" pos:column="33">generic_strftime</name><argument_list pos:line="794" pos:column="49">(<argument><expr><name pos:line="794" pos:column="50">tmpbuf</name></expr></argument>, <argument><expr><name pos:line="794" pos:column="58">temBufLen</name></expr></argument>, <argument><expr><call><name pos:line="794" pos:column="69">TEXT</name><argument_list pos:line="794" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="794" pos:column="74">"%Y-%m-%d_%H%M%S"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="794" pos:column="94">today</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><name pos:line="796" pos:column="33">fn_dateTime_bak</name> <op:operator pos:line="796" pos:column="49">+=</op:operator> <call><name pos:line="796" pos:column="52">TEXT</name><argument_list pos:line="796" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="796" pos:column="57">"."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="797" pos:column="33">fn_dateTime_bak</name> <op:operator pos:line="797" pos:column="49">+=</op:operator> <name pos:line="797" pos:column="52">tmpbuf</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="798" pos:column="33">fn_dateTime_bak</name> <op:operator pos:line="798" pos:column="49">+=</op:operator> <call><name pos:line="798" pos:column="52">TEXT</name><argument_list pos:line="798" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="798" pos:column="57">".bak"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><op:operator pos:line="800" pos:column="33">::</op:operator><name pos:line="800" pos:column="35">CopyFile</name></name><argument_list pos:line="800" pos:column="43">(<argument><expr><name pos:line="800" pos:column="44">fn</name></expr></argument>, <argument><expr><call><name><name pos:line="800" pos:column="48">fn_dateTime_bak</name><op:operator pos:line="800" pos:column="63">.</op:operator><name pos:line="800" pos:column="64">c_str</name></name><argument_list pos:line="800" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="800" pos:column="73">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if></else></if>
			<return pos:line="802" pos:column="25">return <expr><call><name pos:line="802" pos:column="32">doSave</name><argument_list pos:line="802" pos:column="38">(<argument><expr><name pos:line="802" pos:column="39">bufferID</name></expr></argument>, <argument><expr><call><name><name pos:line="802" pos:column="49">buf</name><op:operator pos:line="802" pos:column="52">-&gt;</op:operator><name pos:line="802" pos:column="54">getFullPathName</name></name><argument_list pos:line="802" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="802" pos:column="73">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
		}</block></else></if>
	}</block></then></if>
	<return pos:line="805" pos:column="9">return <expr><lit:literal type="boolean" pos:line="805" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="808" pos:column="1">bool</name></type> <name><name pos:line="808" pos:column="6">Notepad_plus</name><op:operator pos:line="808" pos:column="18">::</op:operator><name pos:line="808" pos:column="20">fileSaveAll</name></name><parameter_list pos:line="808" pos:column="31">()</parameter_list> <block pos:line="808" pos:column="34">{
	<if pos:line="809" pos:column="9">if <condition pos:line="809" pos:column="12">(<expr><call><name pos:line="809" pos:column="13">viewVisible</name><argument_list pos:line="809" pos:column="24">(<argument><expr><name pos:line="809" pos:column="25">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="809" pos:column="36"> <block pos:line="809" pos:column="37">{
		<for pos:line="810" pos:column="17">for(<init><decl><type><name pos:line="810" pos:column="21">int</name></type> <name pos:line="810" pos:column="25">i</name> <init pos:line="810" pos:column="27">= <expr><lit:literal type="number" pos:line="810" pos:column="29">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="810" pos:column="32">i</name> <op:operator pos:line="810" pos:column="34">&lt;</op:operator> <call><name><name pos:line="810" pos:column="36">_mainDocTab</name><op:operator pos:line="810" pos:column="47">.</op:operator><name pos:line="810" pos:column="48">nbItem</name></name><argument_list pos:line="810" pos:column="54">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="810" pos:column="58">i</name><op:operator pos:line="810" pos:column="59">++</op:operator></expr></incr>) <block pos:line="810" pos:column="63">{
			<decl_stmt><decl><type><name pos:line="811" pos:column="25">BufferID</name></type> <name pos:line="811" pos:column="34">idToSave</name> <init pos:line="811" pos:column="43">= <expr><call><name><name pos:line="811" pos:column="45">_mainDocTab</name><op:operator pos:line="811" pos:column="56">.</op:operator><name pos:line="811" pos:column="57">getBufferByIndex</name></name><argument_list pos:line="811" pos:column="73">(<argument><expr><name pos:line="811" pos:column="74">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="812" pos:column="25">fileSave</name><argument_list pos:line="812" pos:column="33">(<argument><expr><name pos:line="812" pos:column="34">idToSave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>

	<if pos:line="816" pos:column="9">if <condition pos:line="816" pos:column="12">(<expr><call><name pos:line="816" pos:column="13">viewVisible</name><argument_list pos:line="816" pos:column="24">(<argument><expr><name pos:line="816" pos:column="25">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="816" pos:column="35"> <block pos:line="816" pos:column="36">{
		<for pos:line="817" pos:column="17">for(<init><decl><type><name pos:line="817" pos:column="21">int</name></type> <name pos:line="817" pos:column="25">i</name> <init pos:line="817" pos:column="27">= <expr><lit:literal type="number" pos:line="817" pos:column="29">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="817" pos:column="32">i</name> <op:operator pos:line="817" pos:column="34">&lt;</op:operator> <call><name><name pos:line="817" pos:column="36">_subDocTab</name><op:operator pos:line="817" pos:column="46">.</op:operator><name pos:line="817" pos:column="47">nbItem</name></name><argument_list pos:line="817" pos:column="53">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="817" pos:column="57">i</name><op:operator pos:line="817" pos:column="58">++</op:operator></expr></incr>) <block pos:line="817" pos:column="62">{
			<decl_stmt><decl><type><name pos:line="818" pos:column="25">BufferID</name></type> <name pos:line="818" pos:column="34">idToSave</name> <init pos:line="818" pos:column="43">= <expr><call><name><name pos:line="818" pos:column="45">_subDocTab</name><op:operator pos:line="818" pos:column="55">.</op:operator><name pos:line="818" pos:column="56">getBufferByIndex</name></name><argument_list pos:line="818" pos:column="72">(<argument><expr><name pos:line="818" pos:column="73">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="819" pos:column="25">fileSave</name><argument_list pos:line="819" pos:column="33">(<argument><expr><name pos:line="819" pos:column="34">idToSave</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="822" pos:column="9">checkDocState</name><argument_list pos:line="822" pos:column="22">()</argument_list></call></expr>;</expr_stmt>
	<return pos:line="823" pos:column="9">return <expr><lit:literal type="boolean" pos:line="823" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="826" pos:column="1">bool</name></type> <name><name pos:line="826" pos:column="6">Notepad_plus</name><op:operator pos:line="826" pos:column="18">::</op:operator><name pos:line="826" pos:column="20">fileSaveAs</name></name><parameter_list pos:line="826" pos:column="30">(<param><decl><type><name pos:line="826" pos:column="31">BufferID</name></type> <name pos:line="826" pos:column="40">id</name></decl></param>, <param><decl><type><name pos:line="826" pos:column="44">bool</name></type> <name pos:line="826" pos:column="49">isSaveCopy</name></decl></param>)</parameter_list>
<block pos:line="827" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="828" pos:column="9">BufferID</name></type> <name pos:line="828" pos:column="18">bufferID</name> <init pos:line="828" pos:column="27">= <expr><name pos:line="828" pos:column="29">id</name></expr></init></decl>;</decl_stmt>
	<if pos:line="829" pos:column="9">if <condition pos:line="829" pos:column="12">(<expr><name pos:line="829" pos:column="13">id</name> <op:operator pos:line="829" pos:column="16">==</op:operator> <name pos:line="829" pos:column="19">BUFFER_INVALID</name></expr>)</condition><then pos:line="829" pos:column="34">
		<expr_stmt><expr><name pos:line="830" pos:column="17">bufferID</name> <op:operator pos:line="830" pos:column="26">=</op:operator> <call><name><name pos:line="830" pos:column="28">_pEditView</name><op:operator pos:line="830" pos:column="38">-&gt;</op:operator><name pos:line="830" pos:column="40">getCurrentBufferID</name></name><argument_list pos:line="830" pos:column="58">()</argument_list></call></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="831" pos:column="9">Buffer</name> <type:modifier pos:line="831" pos:column="16">*</type:modifier></type> <name pos:line="831" pos:column="18">buf</name> <init pos:line="831" pos:column="22">= <expr><call><name><name pos:line="831" pos:column="24">MainFileManager</name><op:operator pos:line="831" pos:column="39">-&gt;</op:operator><name pos:line="831" pos:column="41">getBufferByID</name></name><argument_list pos:line="831" pos:column="54">(<argument><expr><name pos:line="831" pos:column="55">bufferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="833" pos:column="9">FileDialog</name></type> <name pos:line="833" pos:column="20">fDlg</name><argument_list pos:line="833" pos:column="24">(<argument><expr><call><name><name pos:line="833" pos:column="25">_pPublicInterface</name><op:operator pos:line="833" pos:column="42">-&gt;</op:operator><name pos:line="833" pos:column="44">getHSelf</name></name><argument_list pos:line="833" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="833" pos:column="56">_pPublicInterface</name><op:operator pos:line="833" pos:column="73">-&gt;</op:operator><name pos:line="833" pos:column="75">getHinst</name></name><argument_list pos:line="833" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="835" pos:column="5">fDlg</name><op:operator pos:line="835" pos:column="9">.</op:operator><name pos:line="835" pos:column="10">setExtFilter</name></name><argument_list pos:line="835" pos:column="22">(<argument><expr><call><name pos:line="835" pos:column="23">TEXT</name><argument_list pos:line="835" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="835" pos:column="28">"All types"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="835" pos:column="42">TEXT</name><argument_list pos:line="835" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="835" pos:column="47">".*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="835" pos:column="54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="836" pos:column="9">int</name></type> <name pos:line="836" pos:column="13">langTypeIndex</name> <init pos:line="836" pos:column="27">= <expr><call><name pos:line="836" pos:column="29">setFileOpenSaveDlgFilters</name><argument_list pos:line="836" pos:column="54">(<argument><expr><name pos:line="836" pos:column="55">fDlg</name></expr></argument>, <argument><expr><call><name><name pos:line="836" pos:column="61">buf</name><op:operator pos:line="836" pos:column="64">-&gt;</op:operator><name pos:line="836" pos:column="66">getLangType</name></name><argument_list pos:line="836" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="837" pos:column="9">fDlg</name><op:operator pos:line="837" pos:column="13">.</op:operator><name pos:line="837" pos:column="14">setDefFileName</name></name><argument_list pos:line="837" pos:column="28">(<argument><expr><call><name><name pos:line="837" pos:column="29">buf</name><op:operator pos:line="837" pos:column="32">-&gt;</op:operator><name pos:line="837" pos:column="34">getFileName</name></name><argument_list pos:line="837" pos:column="45">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
    <expr_stmt><expr><call><name><name pos:line="839" pos:column="5">fDlg</name><op:operator pos:line="839" pos:column="9">.</op:operator><name pos:line="839" pos:column="10">setExtIndex</name></name><argument_list pos:line="839" pos:column="21">(<argument><expr><name pos:line="839" pos:column="22">langTypeIndex</name><op:operator pos:line="839" pos:column="35">+</op:operator><lit:literal type="number" pos:line="839" pos:column="36">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="839" pos:column="40">// +1 for "All types"</comment>

	<comment type="line" pos:line="841" pos:column="9">// Disable file autodetection before opening save dialog to prevent use-after-delete bug.</comment>
	<decl_stmt><decl><type><name pos:line="842" pos:column="9">NppParameters</name> <type:modifier pos:line="842" pos:column="23">*</type:modifier></type><name pos:line="842" pos:column="24">pNppParam</name> <init pos:line="842" pos:column="34">= <expr><call><name><name pos:line="842" pos:column="36">NppParameters</name><op:operator pos:line="842" pos:column="49">::</op:operator><name pos:line="842" pos:column="51">getInstance</name></name><argument_list pos:line="842" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="843" pos:column="9">ChangeDetect</name></type> <name pos:line="843" pos:column="22">cdBefore</name> <init pos:line="843" pos:column="31">= <expr><op:operator pos:line="843" pos:column="33">(</op:operator><op:operator pos:line="843" pos:column="34">(</op:operator><name pos:line="843" pos:column="35">NppGUI</name> <op:operator pos:line="843" pos:column="42">&amp;</op:operator><op:operator pos:line="843" pos:column="43">)</op:operator><op:operator pos:line="843" pos:column="44">(</op:operator><call><name><name pos:line="843" pos:column="45">pNppParam</name><op:operator pos:line="843" pos:column="54">-&gt;</op:operator><name pos:line="843" pos:column="56">getNppGUI</name></name><argument_list pos:line="843" pos:column="65">()</argument_list></call><op:operator pos:line="843" pos:column="67">)</op:operator><op:operator pos:line="843" pos:column="68">)</op:operator><op:operator pos:line="843" pos:column="69">.</op:operator><name pos:line="843" pos:column="70">_fileAutoDetection</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="844" pos:column="9">(</op:operator><op:operator pos:line="844" pos:column="10">(</op:operator><name pos:line="844" pos:column="11">NppGUI</name> <op:operator pos:line="844" pos:column="18">&amp;</op:operator><op:operator pos:line="844" pos:column="19">)</op:operator><op:operator pos:line="844" pos:column="20">(</op:operator><call><name><name pos:line="844" pos:column="21">pNppParam</name><op:operator pos:line="844" pos:column="30">-&gt;</op:operator><name pos:line="844" pos:column="32">getNppGUI</name></name><argument_list pos:line="844" pos:column="41">()</argument_list></call><op:operator pos:line="844" pos:column="43">)</op:operator><op:operator pos:line="844" pos:column="44">)</op:operator><op:operator pos:line="844" pos:column="45">.</op:operator><name pos:line="844" pos:column="46">_fileAutoDetection</name> <op:operator pos:line="844" pos:column="65">=</op:operator> <name pos:line="844" pos:column="67">cdDisabled</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="846" pos:column="9">TCHAR</name> <type:modifier pos:line="846" pos:column="15">*</type:modifier></type><name pos:line="846" pos:column="16">pfn</name> <init pos:line="846" pos:column="20">= <expr><call><name><name pos:line="846" pos:column="22">fDlg</name><op:operator pos:line="846" pos:column="26">.</op:operator><name pos:line="846" pos:column="27">doSaveDlg</name></name><argument_list pos:line="846" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="848" pos:column="9">// Enable file autodetection again.</comment>
	<expr_stmt><expr><op:operator pos:line="849" pos:column="9">(</op:operator><op:operator pos:line="849" pos:column="10">(</op:operator><name pos:line="849" pos:column="11">NppGUI</name> <op:operator pos:line="849" pos:column="18">&amp;</op:operator><op:operator pos:line="849" pos:column="19">)</op:operator><op:operator pos:line="849" pos:column="20">(</op:operator><call><name><name pos:line="849" pos:column="21">pNppParam</name><op:operator pos:line="849" pos:column="30">-&gt;</op:operator><name pos:line="849" pos:column="32">getNppGUI</name></name><argument_list pos:line="849" pos:column="41">()</argument_list></call><op:operator pos:line="849" pos:column="43">)</op:operator><op:operator pos:line="849" pos:column="44">)</op:operator><op:operator pos:line="849" pos:column="45">.</op:operator><name pos:line="849" pos:column="46">_fileAutoDetection</name> <op:operator pos:line="849" pos:column="65">=</op:operator> <name pos:line="849" pos:column="67">cdBefore</name></expr>;</expr_stmt>

	<if pos:line="851" pos:column="9">if <condition pos:line="851" pos:column="12">(<expr><name pos:line="851" pos:column="13">pfn</name></expr>)</condition><then pos:line="851" pos:column="17">
	<block pos:line="852" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="853" pos:column="17">BufferID</name></type> <name pos:line="853" pos:column="26">other</name> <init pos:line="853" pos:column="32">= <expr><call><name><name pos:line="853" pos:column="34">_pNonDocTab</name><op:operator pos:line="853" pos:column="45">-&gt;</op:operator><name pos:line="853" pos:column="47">findBufferByName</name></name><argument_list pos:line="853" pos:column="63">(<argument><expr><name pos:line="853" pos:column="64">pfn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="854" pos:column="17">if <condition pos:line="854" pos:column="20">(<expr><name pos:line="854" pos:column="21">other</name> <op:operator pos:line="854" pos:column="27">==</op:operator> <name pos:line="854" pos:column="30">BUFFER_INVALID</name></expr>)</condition><then pos:line="854" pos:column="45">	<comment type="line" pos:line="854" pos:column="49">//can save, other view doesnt contain buffer</comment>
		<block pos:line="855" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="856" pos:column="25">bool</name></type> <name pos:line="856" pos:column="30">res</name> <init pos:line="856" pos:column="34">= <expr><call><name pos:line="856" pos:column="36">doSave</name><argument_list pos:line="856" pos:column="42">(<argument><expr><name pos:line="856" pos:column="43">bufferID</name></expr></argument>, <argument><expr><name pos:line="856" pos:column="53">pfn</name></expr></argument>, <argument><expr><name pos:line="856" pos:column="58">isSaveCopy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="857" pos:column="25">//buf-&gt;setNeedsLexing(true);	//commented to fix wrapping being removed after save as (due to SCI_CLEARSTYLE or something, seems to be Scintilla bug)</comment>
			<comment type="line" pos:line="858" pos:column="25">//Changing lexer after save seems to work properly</comment>
			<return pos:line="859" pos:column="25">return <expr><name pos:line="859" pos:column="32">res</name></expr>;</return>
		}</block></then>
		<else pos:line="861" pos:column="17">else		<comment type="line" pos:line="861" pos:column="33">//cannot save, other view has buffer already open, activate it</comment>
		<block pos:line="862" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="863" pos:column="25">_nativeLangSpeaker</name><op:operator pos:line="863" pos:column="43">.</op:operator><name pos:line="863" pos:column="44">messageBox</name></name><argument_list pos:line="863" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="863" pos:column="55">"FileAlreadyOpenedInNpp"</lit:literal></expr></argument>,
				<argument><expr><call><name><name pos:line="864" pos:column="33">_pPublicInterface</name><op:operator pos:line="864" pos:column="50">-&gt;</op:operator><name pos:line="864" pos:column="52">getHSelf</name></name><argument_list pos:line="864" pos:column="60">()</argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="865" pos:column="33">TEXT</name><argument_list pos:line="865" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="865" pos:column="38">"The file is already opened in the Notepad++."</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="866" pos:column="33">TEXT</name><argument_list pos:line="866" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="866" pos:column="38">"ERROR"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><name pos:line="867" pos:column="33">MB_OK</name> <op:operator pos:line="867" pos:column="39">|</op:operator> <name pos:line="867" pos:column="41">MB_ICONSTOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="868" pos:column="25">switchToFile</name><argument_list pos:line="868" pos:column="37">(<argument><expr><name pos:line="868" pos:column="38">other</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="869" pos:column="25">return <expr><lit:literal type="boolean" pos:line="869" pos:column="32">false</lit:literal></expr>;</return>
		}</block></else></if>
	}</block></then>
	<else pos:line="872" pos:column="9">else <comment type="line" pos:line="872" pos:column="14">// cancel button is pressed</comment>
    <block pos:line="873" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="874" pos:column="9">checkModifiedDocument</name><argument_list pos:line="874" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="875" pos:column="17">return <expr><lit:literal type="boolean" pos:line="875" pos:column="24">false</lit:literal></expr>;</return>
    }</block></else></if>
}</block></function>

<function><type><name pos:line="879" pos:column="1">bool</name></type> <name><name pos:line="879" pos:column="6">Notepad_plus</name><op:operator pos:line="879" pos:column="18">::</op:operator><name pos:line="879" pos:column="20">fileRename</name></name><parameter_list pos:line="879" pos:column="30">(<param><decl><type><name pos:line="879" pos:column="31">BufferID</name></type> <name pos:line="879" pos:column="40">id</name></decl></param>)</parameter_list>
<block pos:line="880" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="881" pos:column="9">BufferID</name></type> <name pos:line="881" pos:column="18">bufferID</name> <init pos:line="881" pos:column="27">= <expr><name pos:line="881" pos:column="29">id</name></expr></init></decl>;</decl_stmt>
	<if pos:line="882" pos:column="9">if <condition pos:line="882" pos:column="12">(<expr><name pos:line="882" pos:column="13">id</name> <op:operator pos:line="882" pos:column="16">==</op:operator> <name pos:line="882" pos:column="19">BUFFER_INVALID</name></expr>)</condition><then pos:line="882" pos:column="34">
		<expr_stmt><expr><name pos:line="883" pos:column="17">bufferID</name> <op:operator pos:line="883" pos:column="26">=</op:operator> <call><name><name pos:line="883" pos:column="28">_pEditView</name><op:operator pos:line="883" pos:column="38">-&gt;</op:operator><name pos:line="883" pos:column="40">getCurrentBufferID</name></name><argument_list pos:line="883" pos:column="58">()</argument_list></call></expr>;</expr_stmt></then></if>
	<decl_stmt><decl><type><name pos:line="884" pos:column="9">Buffer</name> <type:modifier pos:line="884" pos:column="16">*</type:modifier></type> <name pos:line="884" pos:column="18">buf</name> <init pos:line="884" pos:column="22">= <expr><call><name><name pos:line="884" pos:column="24">MainFileManager</name><op:operator pos:line="884" pos:column="39">-&gt;</op:operator><name pos:line="884" pos:column="41">getBufferByID</name></name><argument_list pos:line="884" pos:column="54">(<argument><expr><name pos:line="884" pos:column="55">bufferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="886" pos:column="9">FileDialog</name></type> <name pos:line="886" pos:column="20">fDlg</name><argument_list pos:line="886" pos:column="24">(<argument><expr><call><name><name pos:line="886" pos:column="25">_pPublicInterface</name><op:operator pos:line="886" pos:column="42">-&gt;</op:operator><name pos:line="886" pos:column="44">getHSelf</name></name><argument_list pos:line="886" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="886" pos:column="56">_pPublicInterface</name><op:operator pos:line="886" pos:column="73">-&gt;</op:operator><name pos:line="886" pos:column="75">getHinst</name></name><argument_list pos:line="886" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="888" pos:column="5">fDlg</name><op:operator pos:line="888" pos:column="9">.</op:operator><name pos:line="888" pos:column="10">setExtFilter</name></name><argument_list pos:line="888" pos:column="22">(<argument><expr><call><name pos:line="888" pos:column="23">TEXT</name><argument_list pos:line="888" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="888" pos:column="28">"All types"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="888" pos:column="42">TEXT</name><argument_list pos:line="888" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="888" pos:column="47">".*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="888" pos:column="54">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="889" pos:column="9">setFileOpenSaveDlgFilters</name><argument_list pos:line="889" pos:column="34">(<argument><expr><name pos:line="889" pos:column="35">fDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
	<expr_stmt><expr><call><name><name pos:line="891" pos:column="9">fDlg</name><op:operator pos:line="891" pos:column="13">.</op:operator><name pos:line="891" pos:column="14">setDefFileName</name></name><argument_list pos:line="891" pos:column="28">(<argument><expr><call><name><name pos:line="891" pos:column="29">buf</name><op:operator pos:line="891" pos:column="32">-&gt;</op:operator><name pos:line="891" pos:column="34">getFileName</name></name><argument_list pos:line="891" pos:column="45">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="892" pos:column="9">TCHAR</name> <type:modifier pos:line="892" pos:column="15">*</type:modifier></type><name pos:line="892" pos:column="16">pfn</name> <init pos:line="892" pos:column="20">= <expr><call><name><name pos:line="892" pos:column="22">fDlg</name><op:operator pos:line="892" pos:column="26">.</op:operator><name pos:line="892" pos:column="27">doSaveDlg</name></name><argument_list pos:line="892" pos:column="36">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="894" pos:column="9">if <condition pos:line="894" pos:column="12">(<expr><name pos:line="894" pos:column="13">pfn</name></expr>)</condition><then pos:line="894" pos:column="17">
	<block pos:line="895" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="896" pos:column="17">MainFileManager</name><op:operator pos:line="896" pos:column="32">-&gt;</op:operator><name pos:line="896" pos:column="34">moveFile</name></name><argument_list pos:line="896" pos:column="42">(<argument><expr><name pos:line="896" pos:column="43">bufferID</name></expr></argument>, <argument><expr><name pos:line="896" pos:column="53">pfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="898" pos:column="9">return <expr><lit:literal type="boolean" pos:line="898" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="902" pos:column="1">bool</name></type> <name><name pos:line="902" pos:column="6">Notepad_plus</name><op:operator pos:line="902" pos:column="18">::</op:operator><name pos:line="902" pos:column="20">fileDelete</name></name><parameter_list pos:line="902" pos:column="30">(<param><decl><type><name pos:line="902" pos:column="31">BufferID</name></type> <name pos:line="902" pos:column="40">id</name></decl></param>)</parameter_list>
<block pos:line="903" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="904" pos:column="9">BufferID</name></type> <name pos:line="904" pos:column="18">bufferID</name> <init pos:line="904" pos:column="27">= <expr><name pos:line="904" pos:column="29">id</name></expr></init></decl>;</decl_stmt>
	<if pos:line="905" pos:column="9">if <condition pos:line="905" pos:column="12">(<expr><name pos:line="905" pos:column="13">id</name> <op:operator pos:line="905" pos:column="16">==</op:operator> <name pos:line="905" pos:column="19">BUFFER_INVALID</name></expr>)</condition><then pos:line="905" pos:column="34">
		<expr_stmt><expr><name pos:line="906" pos:column="17">bufferID</name> <op:operator pos:line="906" pos:column="26">=</op:operator> <call><name><name pos:line="906" pos:column="28">_pEditView</name><op:operator pos:line="906" pos:column="38">-&gt;</op:operator><name pos:line="906" pos:column="40">getCurrentBufferID</name></name><argument_list pos:line="906" pos:column="58">()</argument_list></call></expr>;</expr_stmt></then></if>
	
	<decl_stmt><decl><type><name pos:line="908" pos:column="9">Buffer</name> <type:modifier pos:line="908" pos:column="16">*</type:modifier></type> <name pos:line="908" pos:column="18">buf</name> <init pos:line="908" pos:column="22">= <expr><call><name><name pos:line="908" pos:column="24">MainFileManager</name><op:operator pos:line="908" pos:column="39">-&gt;</op:operator><name pos:line="908" pos:column="41">getBufferByID</name></name><argument_list pos:line="908" pos:column="54">(<argument><expr><name pos:line="908" pos:column="55">bufferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="909" pos:column="9">const</specifier> <name pos:line="909" pos:column="15">TCHAR</name> <type:modifier pos:line="909" pos:column="21">*</type:modifier></type><name pos:line="909" pos:column="22">fileNamePath</name> <init pos:line="909" pos:column="35">= <expr><call><name><name pos:line="909" pos:column="37">buf</name><op:operator pos:line="909" pos:column="40">-&gt;</op:operator><name pos:line="909" pos:column="42">getFullPathName</name></name><argument_list pos:line="909" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="911" pos:column="9">if <condition pos:line="911" pos:column="12">(<expr><call><name pos:line="911" pos:column="13">doDeleteOrNot</name><argument_list pos:line="911" pos:column="26">(<argument><expr><name pos:line="911" pos:column="27">fileNamePath</name></expr></argument>)</argument_list></call> <op:operator pos:line="911" pos:column="41">==</op:operator> <name pos:line="911" pos:column="44">IDYES</name></expr>)</condition><then pos:line="911" pos:column="50">
	<block pos:line="912" pos:column="9">{
		<if pos:line="913" pos:column="17">if <condition pos:line="913" pos:column="20">(<expr><op:operator pos:line="913" pos:column="21">!</op:operator><call><name><name pos:line="913" pos:column="22">MainFileManager</name><op:operator pos:line="913" pos:column="37">-&gt;</op:operator><name pos:line="913" pos:column="39">deleteFile</name></name><argument_list pos:line="913" pos:column="49">(<argument><expr><name pos:line="913" pos:column="50">bufferID</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="913" pos:column="60">
		<block pos:line="914" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="915" pos:column="25">_nativeLangSpeaker</name><op:operator pos:line="915" pos:column="43">.</op:operator><name pos:line="915" pos:column="44">messageBox</name></name><argument_list pos:line="915" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="915" pos:column="55">"DeleteFileFailed"</lit:literal></expr></argument>,
				<argument><expr><call><name><name pos:line="916" pos:column="33">_pPublicInterface</name><op:operator pos:line="916" pos:column="50">-&gt;</op:operator><name pos:line="916" pos:column="52">getHSelf</name></name><argument_list pos:line="916" pos:column="60">()</argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="917" pos:column="33">TEXT</name><argument_list pos:line="917" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="917" pos:column="38">"Delete File failed"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><call><name pos:line="918" pos:column="33">TEXT</name><argument_list pos:line="918" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="918" pos:column="38">"Delete File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
				<argument><expr><name pos:line="919" pos:column="33">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="920" pos:column="25">return <expr><lit:literal type="boolean" pos:line="920" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
		<expr_stmt><expr><call><name pos:line="922" pos:column="17">doClose</name><argument_list pos:line="922" pos:column="24">(<argument><expr><name pos:line="922" pos:column="25">bufferID</name></expr></argument>, <argument><expr><name pos:line="922" pos:column="35">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="923" pos:column="17">doClose</name><argument_list pos:line="923" pos:column="24">(<argument><expr><name pos:line="923" pos:column="25">bufferID</name></expr></argument>, <argument><expr><name pos:line="923" pos:column="35">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="924" pos:column="17">return <expr><lit:literal type="boolean" pos:line="924" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="926" pos:column="9">return <expr><lit:literal type="boolean" pos:line="926" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="929" pos:column="1">void</name></type> <name><name pos:line="929" pos:column="6">Notepad_plus</name><op:operator pos:line="929" pos:column="18">::</op:operator><name pos:line="929" pos:column="20">fileOpen</name></name><parameter_list pos:line="929" pos:column="28">()</parameter_list>
<block pos:line="930" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="931" pos:column="5">FileDialog</name></type> <name pos:line="931" pos:column="16">fDlg</name><argument_list pos:line="931" pos:column="20">(<argument><expr><call><name><name pos:line="931" pos:column="21">_pPublicInterface</name><op:operator pos:line="931" pos:column="38">-&gt;</op:operator><name pos:line="931" pos:column="40">getHSelf</name></name><argument_list pos:line="931" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="931" pos:column="52">_pPublicInterface</name><op:operator pos:line="931" pos:column="69">-&gt;</op:operator><name pos:line="931" pos:column="71">getHinst</name></name><argument_list pos:line="931" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="932" pos:column="9">fDlg</name><op:operator pos:line="932" pos:column="13">.</op:operator><name pos:line="932" pos:column="14">setExtFilter</name></name><argument_list pos:line="932" pos:column="26">(<argument><expr><call><name pos:line="932" pos:column="27">TEXT</name><argument_list pos:line="932" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="932" pos:column="32">"All types"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="932" pos:column="46">TEXT</name><argument_list pos:line="932" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="932" pos:column="51">".*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="932" pos:column="58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="934" pos:column="9">setFileOpenSaveDlgFilters</name><argument_list pos:line="934" pos:column="34">(<argument><expr><name pos:line="934" pos:column="35">fDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="936" pos:column="9">BufferID</name></type> <name pos:line="936" pos:column="18">lastOpened</name> <init pos:line="936" pos:column="29">= <expr><name pos:line="936" pos:column="31">BUFFER_INVALID</name></expr></init></decl>;</decl_stmt>
	<if pos:line="937" pos:column="9">if <condition pos:line="937" pos:column="12">(<decl><type><name pos:line="937" pos:column="13">stringVector</name> <type:modifier pos:line="937" pos:column="26">*</type:modifier></type><name pos:line="937" pos:column="27">pfns</name> <init pos:line="937" pos:column="32">= <expr><call><name><name pos:line="937" pos:column="34">fDlg</name><op:operator pos:line="937" pos:column="38">.</op:operator><name pos:line="937" pos:column="39">doOpenMultiFilesDlg</name></name><argument_list pos:line="937" pos:column="58">()</argument_list></call></expr></init></decl>)</condition><then pos:line="937" pos:column="61">
	<block pos:line="938" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="939" pos:column="17">size_t</name></type> <name pos:line="939" pos:column="24">sz</name> <init pos:line="939" pos:column="27">= <expr><call><name><name pos:line="939" pos:column="29">pfns</name><op:operator pos:line="939" pos:column="33">-&gt;</op:operator><name pos:line="939" pos:column="35">size</name></name><argument_list pos:line="939" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="940" pos:column="17">for (<init><decl><type><name pos:line="940" pos:column="22">size_t</name></type> <name pos:line="940" pos:column="29">i</name> <init pos:line="940" pos:column="31">= <expr><lit:literal type="number" pos:line="940" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="940" pos:column="37">i</name> <op:operator pos:line="940" pos:column="39">&lt;</op:operator> <name pos:line="940" pos:column="41">sz</name></expr> ;</condition> <incr><expr><name pos:line="940" pos:column="46">i</name><op:operator pos:line="940" pos:column="47">++</op:operator></expr></incr>) <block pos:line="940" pos:column="51">{
			<decl_stmt><decl><type><name pos:line="941" pos:column="25">BufferID</name></type> <name pos:line="941" pos:column="34">test</name> <init pos:line="941" pos:column="39">= <expr><call><name pos:line="941" pos:column="41">doOpen</name><argument_list pos:line="941" pos:column="47">(<argument><expr><call><name><name pos:line="941" pos:column="48">pfns</name><op:operator pos:line="941" pos:column="52">-&gt;</op:operator><name pos:line="941" pos:column="54">at</name></name><argument_list pos:line="941" pos:column="56">(<argument><expr><name pos:line="941" pos:column="57">i</name></expr></argument>)</argument_list></call><op:operator pos:line="941" pos:column="59">.</op:operator><call><name pos:line="941" pos:column="60">c_str</name><argument_list pos:line="941" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="941" pos:column="69">fDlg</name><op:operator pos:line="941" pos:column="73">.</op:operator><name pos:line="941" pos:column="74">isReadOnly</name></name><argument_list pos:line="941" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="942" pos:column="25">if <condition pos:line="942" pos:column="28">(<expr><name pos:line="942" pos:column="29">test</name> <op:operator pos:line="942" pos:column="34">!=</op:operator> <name pos:line="942" pos:column="37">BUFFER_INVALID</name></expr>)</condition><then pos:line="942" pos:column="52">
				<expr_stmt><expr><name pos:line="943" pos:column="33">lastOpened</name> <op:operator pos:line="943" pos:column="44">=</op:operator> <name pos:line="943" pos:column="46">test</name></expr>;</expr_stmt></then></if>
		}</block></for>
	}</block></then></if>
	<if pos:line="946" pos:column="9">if <condition pos:line="946" pos:column="12">(<expr><name pos:line="946" pos:column="13">lastOpened</name> <op:operator pos:line="946" pos:column="24">!=</op:operator> <name pos:line="946" pos:column="27">BUFFER_INVALID</name></expr>)</condition><then pos:line="946" pos:column="42"> <block pos:line="946" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="947" pos:column="17">switchToFile</name><argument_list pos:line="947" pos:column="29">(<argument><expr><name pos:line="947" pos:column="30">lastOpened</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="951" pos:column="1">void</name></type> <name><name pos:line="951" pos:column="6">Notepad_plus</name><op:operator pos:line="951" pos:column="18">::</op:operator><name pos:line="951" pos:column="20">fileNew</name></name><parameter_list pos:line="951" pos:column="27">()</parameter_list>
<block pos:line="952" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="953" pos:column="5">BufferID</name></type> <name pos:line="953" pos:column="14">newBufID</name> <init pos:line="953" pos:column="23">= <expr><call><name><name pos:line="953" pos:column="25">MainFileManager</name><op:operator pos:line="953" pos:column="40">-&gt;</op:operator><name pos:line="953" pos:column="42">newEmptyDocument</name></name><argument_list pos:line="953" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
	
    <expr_stmt><expr><call><name pos:line="955" pos:column="5">loadBufferIntoView</name><argument_list pos:line="955" pos:column="23">(<argument><expr><name pos:line="955" pos:column="24">newBufID</name></expr></argument>, <argument><expr><call><name pos:line="955" pos:column="34">currentView</name><argument_list pos:line="955" pos:column="45">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="955" pos:column="49">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="955" pos:column="57">//true, because we want multiple new files if possible</comment>
    <expr_stmt><expr><call><name pos:line="956" pos:column="5">activateBuffer</name><argument_list pos:line="956" pos:column="19">(<argument><expr><name pos:line="956" pos:column="20">newBufID</name></expr></argument>, <argument><expr><call><name pos:line="956" pos:column="30">currentView</name><argument_list pos:line="956" pos:column="41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="959" pos:column="1">bool</name></type> <name><name pos:line="959" pos:column="6">Notepad_plus</name><op:operator pos:line="959" pos:column="18">::</op:operator><name pos:line="959" pos:column="20">isFileSession</name></name><parameter_list pos:line="959" pos:column="33">(<param><decl><type><specifier pos:line="959" pos:column="34">const</specifier> <name pos:line="959" pos:column="40">TCHAR</name> <type:modifier pos:line="959" pos:column="46">*</type:modifier></type> <name pos:line="959" pos:column="48">filename</name></decl></param>)</parameter_list> <block pos:line="959" pos:column="58">{
	<comment type="line" pos:line="960" pos:column="9">// if file2open matches the ext of user defined session file ext, then it'll be opened as a session</comment>
	<decl_stmt><decl><type><specifier pos:line="961" pos:column="9">const</specifier> <name pos:line="961" pos:column="15">TCHAR</name> <type:modifier pos:line="961" pos:column="21">*</type:modifier></type><name pos:line="961" pos:column="22">definedSessionExt</name> <init pos:line="961" pos:column="40">= <expr><call><name><name pos:line="961" pos:column="42">NppParameters</name><op:operator pos:line="961" pos:column="55">::</op:operator><name pos:line="961" pos:column="57">getInstance</name></name><argument_list pos:line="961" pos:column="68">()</argument_list></call><op:operator pos:line="961" pos:column="70">-&gt;</op:operator><call><name pos:line="961" pos:column="72">getNppGUI</name><argument_list pos:line="961" pos:column="81">()</argument_list></call><op:operator pos:line="961" pos:column="83">.</op:operator><call><name><name pos:line="961" pos:column="84">_definedSessionExt</name><op:operator pos:line="961" pos:column="102">.</op:operator><name pos:line="961" pos:column="103">c_str</name></name><argument_list pos:line="961" pos:column="108">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="962" pos:column="9">if <condition pos:line="962" pos:column="12">(<expr><op:operator pos:line="962" pos:column="13">*</op:operator><name pos:line="962" pos:column="14">definedSessionExt</name> <op:operator pos:line="962" pos:column="32">!=</op:operator> <lit:literal type="char" pos:line="962" pos:column="35">'\0'</lit:literal></expr>)</condition><then pos:line="962" pos:column="40">
	<block pos:line="963" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="964" pos:column="17">generic_string</name></type> <name pos:line="964" pos:column="32">fncp</name> <init pos:line="964" pos:column="37">= <expr><name pos:line="964" pos:column="39">filename</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="965" pos:column="17">TCHAR</name> <type:modifier pos:line="965" pos:column="23">*</type:modifier></type><name pos:line="965" pos:column="24">pExt</name> <init pos:line="965" pos:column="29">= <expr><call><name pos:line="965" pos:column="31">PathFindExtension</name><argument_list pos:line="965" pos:column="48">(<argument><expr><call><name><name pos:line="965" pos:column="49">fncp</name><op:operator pos:line="965" pos:column="53">.</op:operator><name pos:line="965" pos:column="54">c_str</name></name><argument_list pos:line="965" pos:column="59">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="967" pos:column="17">generic_string</name></type> <name pos:line="967" pos:column="32">usrSessionExt</name> <init pos:line="967" pos:column="46">= <expr><call><name pos:line="967" pos:column="48">TEXT</name><argument_list pos:line="967" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="967" pos:column="53">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="968" pos:column="17">if <condition pos:line="968" pos:column="20">(<expr><op:operator pos:line="968" pos:column="21">*</op:operator><name pos:line="968" pos:column="22">definedSessionExt</name> <op:operator pos:line="968" pos:column="40">!=</op:operator> <lit:literal type="char" pos:line="968" pos:column="43">'.'</lit:literal></expr>)</condition><then pos:line="968" pos:column="47">
		<block pos:line="969" pos:column="17">{
			<expr_stmt><expr><name pos:line="970" pos:column="25">usrSessionExt</name> <op:operator pos:line="970" pos:column="39">+=</op:operator> <call><name pos:line="970" pos:column="42">TEXT</name><argument_list pos:line="970" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="970" pos:column="47">"."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="972" pos:column="17">usrSessionExt</name> <op:operator pos:line="972" pos:column="31">+=</op:operator> <name pos:line="972" pos:column="34">definedSessionExt</name></expr>;</expr_stmt>

		<if pos:line="974" pos:column="17">if <condition pos:line="974" pos:column="20">(<expr><op:operator pos:line="974" pos:column="21">!</op:operator><call><name pos:line="974" pos:column="22">generic_stricmp</name><argument_list pos:line="974" pos:column="37">(<argument><expr><name pos:line="974" pos:column="38">pExt</name></expr></argument>, <argument><expr><call><name><name pos:line="974" pos:column="44">usrSessionExt</name><op:operator pos:line="974" pos:column="57">.</op:operator><name pos:line="974" pos:column="58">c_str</name></name><argument_list pos:line="974" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="974" pos:column="67">
		<block pos:line="975" pos:column="17">{
			<return pos:line="976" pos:column="25">return <expr><lit:literal type="boolean" pos:line="976" pos:column="32">true</lit:literal></expr>;</return>
		}</block></then></if>
	}</block></then></if>
	<return pos:line="979" pos:column="9">return <expr><lit:literal type="boolean" pos:line="979" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>


<comment type="line" pos:line="983" pos:column="1">// return true if all the session files are loaded</comment>
<comment type="line" pos:line="984" pos:column="1">// return false if one or more sessions files fail to load (and session is modify to remove invalid files)</comment>
<function><type><name pos:line="985" pos:column="1">bool</name></type> <name><name pos:line="985" pos:column="6">Notepad_plus</name><op:operator pos:line="985" pos:column="18">::</op:operator><name pos:line="985" pos:column="20">loadSession</name></name><parameter_list pos:line="985" pos:column="31">(<param><decl><type><name pos:line="985" pos:column="32">Session</name> <type:modifier pos:line="985" pos:column="40">&amp;</type:modifier></type> <name pos:line="985" pos:column="42">session</name></decl></param>)</parameter_list>
<block pos:line="986" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="987" pos:column="9">NppParameters</name> <type:modifier pos:line="987" pos:column="23">*</type:modifier></type><name pos:line="987" pos:column="24">pNppParam</name> <init pos:line="987" pos:column="34">= <expr><call><name><name pos:line="987" pos:column="36">NppParameters</name><op:operator pos:line="987" pos:column="49">::</op:operator><name pos:line="987" pos:column="51">getInstance</name></name><argument_list pos:line="987" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="988" pos:column="9">bool</name></type> <name pos:line="988" pos:column="14">allSessionFilesLoaded</name> <init pos:line="988" pos:column="36">= <expr><lit:literal type="boolean" pos:line="988" pos:column="38">true</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="989" pos:column="9">BufferID</name></type> <name pos:line="989" pos:column="18">lastOpened</name> <init pos:line="989" pos:column="29">= <expr><name pos:line="989" pos:column="31">BUFFER_INVALID</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="990" pos:column="9">size_t</name></type> <name pos:line="990" pos:column="16">i</name> <init pos:line="990" pos:column="18">= <expr><lit:literal type="number" pos:line="990" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="991" pos:column="9">showView</name><argument_list pos:line="991" pos:column="17">(<argument><expr><name pos:line="991" pos:column="18">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="992" pos:column="9">switchEditViewTo</name><argument_list pos:line="992" pos:column="25">(<argument><expr><name pos:line="992" pos:column="26">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="992" pos:column="41">//open files in main</comment>
	<for pos:line="993" pos:column="9">for ( <init pos:line="993" pos:column="15">;</init> <condition><expr><name pos:line="993" pos:column="17">i</name> <op:operator pos:line="993" pos:column="19">&lt;</op:operator> <call><name><name pos:line="993" pos:column="21">session</name><op:operator pos:line="993" pos:column="28">.</op:operator><name pos:line="993" pos:column="29">nbMainFiles</name></name><argument_list pos:line="993" pos:column="40">()</argument_list></call></expr> ;</condition> <incr/>)
	<block pos:line="994" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="995" pos:column="17">const</specifier> <name pos:line="995" pos:column="23">TCHAR</name> <type:modifier pos:line="995" pos:column="29">*</type:modifier></type><name pos:line="995" pos:column="30">pFn</name> <init pos:line="995" pos:column="34">= <expr><name><name pos:line="995" pos:column="36">session</name><op:operator pos:line="995" pos:column="43">.</op:operator><name pos:line="995" pos:column="44">_mainViewFiles</name><index pos:line="995" pos:column="58">[<expr><name pos:line="995" pos:column="59">i</name></expr>]</index></name><op:operator pos:line="995" pos:column="61">.</op:operator><call><name><name pos:line="995" pos:column="62">_fileName</name><op:operator pos:line="995" pos:column="71">.</op:operator><name pos:line="995" pos:column="72">c_str</name></name><argument_list pos:line="995" pos:column="77">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="996" pos:column="17">if <condition pos:line="996" pos:column="20">(<expr><call><name pos:line="996" pos:column="21">isFileSession</name><argument_list pos:line="996" pos:column="34">(<argument><expr><name pos:line="996" pos:column="35">pFn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="996" pos:column="40">
		<block pos:line="997" pos:column="17">{
			<decl_stmt><decl><type><name><name><name pos:line="998" pos:column="25">vector</name><argument_list pos:line="998" pos:column="31">&lt;<argument><expr><name pos:line="998" pos:column="32">sessionFileInfo</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="998" pos:column="48">::</op:operator><name pos:line="998" pos:column="50">iterator</name></name></type> <name pos:line="998" pos:column="59">posIt</name> <init pos:line="998" pos:column="65">= <expr><call><name><name pos:line="998" pos:column="67">session</name><op:operator pos:line="998" pos:column="74">.</op:operator><name pos:line="998" pos:column="75">_mainViewFiles</name><op:operator pos:line="998" pos:column="89">.</op:operator><name pos:line="998" pos:column="90">begin</name></name><argument_list pos:line="998" pos:column="95">()</argument_list></call> <op:operator pos:line="998" pos:column="98">+</op:operator> <name pos:line="998" pos:column="100">i</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="999" pos:column="25">session</name><op:operator pos:line="999" pos:column="32">.</op:operator><name pos:line="999" pos:column="33">_mainViewFiles</name><op:operator pos:line="999" pos:column="47">.</op:operator><name pos:line="999" pos:column="48">erase</name></name><argument_list pos:line="999" pos:column="53">(<argument><expr><name pos:line="999" pos:column="54">posIt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<continue pos:line="1000" pos:column="25">continue;</continue>	<comment type="line" pos:line="1000" pos:column="41">//skip session files, not supporting recursive sessions</comment>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="1003" pos:column="17">bool</name></type> <name pos:line="1003" pos:column="22">isWow64Off</name> <init pos:line="1003" pos:column="33">= <expr><lit:literal type="boolean" pos:line="1003" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="1004" pos:column="17">if <condition pos:line="1004" pos:column="20">(<expr><op:operator pos:line="1004" pos:column="21">!</op:operator><call><name pos:line="1004" pos:column="22">PathFileExists</name><argument_list pos:line="1004" pos:column="36">(<argument><expr><name pos:line="1004" pos:column="37">pFn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1004" pos:column="42">
		<block pos:line="1005" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1006" pos:column="25">pNppParam</name><op:operator pos:line="1006" pos:column="34">-&gt;</op:operator><name pos:line="1006" pos:column="36">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="1006" pos:column="69">(<argument><expr><name pos:line="1006" pos:column="70">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1007" pos:column="25">isWow64Off</name> <op:operator pos:line="1007" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1007" pos:column="38">true</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="1009" pos:column="17">if <condition pos:line="1009" pos:column="20">(<expr><call><name pos:line="1009" pos:column="21">PathFileExists</name><argument_list pos:line="1009" pos:column="35">(<argument><expr><name pos:line="1009" pos:column="36">pFn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1009" pos:column="41"> 
		<block pos:line="1010" pos:column="17">{
			<expr_stmt><expr><name pos:line="1011" pos:column="25">lastOpened</name> <op:operator pos:line="1011" pos:column="36">=</op:operator> <call><name pos:line="1011" pos:column="38">doOpen</name><argument_list pos:line="1011" pos:column="44">(<argument><expr><name pos:line="1011" pos:column="45">pFn</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1011" pos:column="50">false</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1011" pos:column="57">session</name><op:operator pos:line="1011" pos:column="64">.</op:operator><name pos:line="1011" pos:column="65">_mainViewFiles</name><index pos:line="1011" pos:column="79">[<expr><name pos:line="1011" pos:column="80">i</name></expr>]</index></name><op:operator pos:line="1011" pos:column="82">.</op:operator><name pos:line="1011" pos:column="83">_encoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1013" pos:column="17">else
		<block pos:line="1014" pos:column="17">{
			<expr_stmt><expr><name pos:line="1015" pos:column="25">lastOpened</name> <op:operator pos:line="1015" pos:column="36">=</op:operator> <name pos:line="1015" pos:column="38">BUFFER_INVALID</name></expr>;</expr_stmt>
		}</block></else></if>
		<if pos:line="1017" pos:column="17">if <condition pos:line="1017" pos:column="20">(<expr><name pos:line="1017" pos:column="21">isWow64Off</name></expr>)</condition><then pos:line="1017" pos:column="32">
		<block pos:line="1018" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1019" pos:column="25">pNppParam</name><op:operator pos:line="1019" pos:column="34">-&gt;</op:operator><name pos:line="1019" pos:column="36">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="1019" pos:column="69">(<argument><expr><name pos:line="1019" pos:column="70">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1020" pos:column="25">isWow64Off</name> <op:operator pos:line="1020" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1020" pos:column="38">false</lit:literal></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="1023" pos:column="17">if <condition pos:line="1023" pos:column="20">(<expr><name pos:line="1023" pos:column="21">lastOpened</name> <op:operator pos:line="1023" pos:column="32">!=</op:operator> <name pos:line="1023" pos:column="35">BUFFER_INVALID</name></expr>)</condition><then pos:line="1023" pos:column="50">
		<block pos:line="1024" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1025" pos:column="25">showView</name><argument_list pos:line="1025" pos:column="33">(<argument><expr><name pos:line="1025" pos:column="34">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="1026" pos:column="25">const</specifier> <name pos:line="1026" pos:column="31">TCHAR</name> <type:modifier pos:line="1026" pos:column="37">*</type:modifier></type><name pos:line="1026" pos:column="38">pLn</name> <init pos:line="1026" pos:column="42">= <expr><name><name pos:line="1026" pos:column="44">session</name><op:operator pos:line="1026" pos:column="51">.</op:operator><name pos:line="1026" pos:column="52">_mainViewFiles</name><index pos:line="1026" pos:column="66">[<expr><name pos:line="1026" pos:column="67">i</name></expr>]</index></name><op:operator pos:line="1026" pos:column="69">.</op:operator><call><name><name pos:line="1026" pos:column="70">_langName</name><op:operator pos:line="1026" pos:column="79">.</op:operator><name pos:line="1026" pos:column="80">c_str</name></name><argument_list pos:line="1026" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1027" pos:column="25">int</name></type> <name pos:line="1027" pos:column="29">id</name> <init pos:line="1027" pos:column="32">= <expr><call><name pos:line="1027" pos:column="34">getLangFromMenuName</name><argument_list pos:line="1027" pos:column="53">(<argument><expr><name pos:line="1027" pos:column="54">pLn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1028" pos:column="25">LangType</name></type> <name pos:line="1028" pos:column="34">typeToSet</name> <init pos:line="1028" pos:column="44">= <expr><name pos:line="1028" pos:column="46">L_TEXT</name></expr></init></decl>;</decl_stmt>
			<if pos:line="1029" pos:column="25">if <condition pos:line="1029" pos:column="28">(<expr><name pos:line="1029" pos:column="29">id</name> <op:operator pos:line="1029" pos:column="32">!=</op:operator> <lit:literal type="number" pos:line="1029" pos:column="35">0</lit:literal> <op:operator pos:line="1029" pos:column="37">&amp;&amp;</op:operator> <name pos:line="1029" pos:column="40">id</name> <op:operator pos:line="1029" pos:column="43">!=</op:operator> <name pos:line="1029" pos:column="46">IDM_LANG_USER</name></expr>)</condition><then pos:line="1029" pos:column="60">
				<expr_stmt><expr><name pos:line="1030" pos:column="33">typeToSet</name> <op:operator pos:line="1030" pos:column="43">=</op:operator> <call><name pos:line="1030" pos:column="45">menuID2LangType</name><argument_list pos:line="1030" pos:column="60">(<argument><expr><name pos:line="1030" pos:column="61">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="1031" pos:column="25">if <condition pos:line="1031" pos:column="28">(<expr><name pos:line="1031" pos:column="29">typeToSet</name> <op:operator pos:line="1031" pos:column="39">==</op:operator> <name pos:line="1031" pos:column="42">L_EXTERNAL</name></expr> )</condition><then pos:line="1031" pos:column="54">
				<expr_stmt><expr><name pos:line="1032" pos:column="33">typeToSet</name> <op:operator pos:line="1032" pos:column="43">=</op:operator> <call pos:line="1032" pos:column="45">(<name pos:line="1032" pos:column="46">LangType</name>)<argument_list pos:line="1032" pos:column="55">(<argument><expr><name pos:line="1032" pos:column="56">id</name> <op:operator pos:line="1032" pos:column="59">-</op:operator> <name pos:line="1032" pos:column="61">IDM_LANG_EXTERNAL</name> <op:operator pos:line="1032" pos:column="79">+</op:operator> <name pos:line="1032" pos:column="81">L_EXTERNAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><name pos:line="1034" pos:column="25">Buffer</name> <type:modifier pos:line="1034" pos:column="32">*</type:modifier></type> <name pos:line="1034" pos:column="34">buf</name> <init pos:line="1034" pos:column="38">= <expr><call><name><name pos:line="1034" pos:column="40">MainFileManager</name><op:operator pos:line="1034" pos:column="55">-&gt;</op:operator><name pos:line="1034" pos:column="57">getBufferByID</name></name><argument_list pos:line="1034" pos:column="70">(<argument><expr><name pos:line="1034" pos:column="71">lastOpened</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1035" pos:column="25">buf</name><op:operator pos:line="1035" pos:column="28">-&gt;</op:operator><name pos:line="1035" pos:column="30">setPosition</name></name><argument_list pos:line="1035" pos:column="41">(<argument><expr><name><name pos:line="1035" pos:column="42">session</name><op:operator pos:line="1035" pos:column="49">.</op:operator><name pos:line="1035" pos:column="50">_mainViewFiles</name><index pos:line="1035" pos:column="64">[<expr><name pos:line="1035" pos:column="65">i</name></expr>]</index></name></expr></argument>, <argument><expr><op:operator pos:line="1035" pos:column="69">&amp;</op:operator><name pos:line="1035" pos:column="70">_mainEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1036" pos:column="25">buf</name><op:operator pos:line="1036" pos:column="28">-&gt;</op:operator><name pos:line="1036" pos:column="30">setLangType</name></name><argument_list pos:line="1036" pos:column="41">(<argument><expr><name pos:line="1036" pos:column="42">typeToSet</name></expr></argument>, <argument><expr><name pos:line="1036" pos:column="53">pLn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1037" pos:column="25">if <condition pos:line="1037" pos:column="28">(<expr><name><name pos:line="1037" pos:column="29">session</name><op:operator pos:line="1037" pos:column="36">.</op:operator><name pos:line="1037" pos:column="37">_mainViewFiles</name><index pos:line="1037" pos:column="51">[<expr><name pos:line="1037" pos:column="52">i</name></expr>]</index></name><op:operator pos:line="1037" pos:column="54">.</op:operator><name pos:line="1037" pos:column="55">_encoding</name> <op:operator pos:line="1037" pos:column="65">!=</op:operator> <op:operator pos:line="1037" pos:column="68">-</op:operator><lit:literal type="number" pos:line="1037" pos:column="69">1</lit:literal></expr>)</condition><then pos:line="1037" pos:column="71">
				<expr_stmt><expr><call><name><name pos:line="1038" pos:column="33">buf</name><op:operator pos:line="1038" pos:column="36">-&gt;</op:operator><name pos:line="1038" pos:column="38">setEncoding</name></name><argument_list pos:line="1038" pos:column="49">(<argument><expr><name><name pos:line="1038" pos:column="50">session</name><op:operator pos:line="1038" pos:column="57">.</op:operator><name pos:line="1038" pos:column="58">_mainViewFiles</name><index pos:line="1038" pos:column="72">[<expr><name pos:line="1038" pos:column="73">i</name></expr>]</index></name><op:operator pos:line="1038" pos:column="75">.</op:operator><name pos:line="1038" pos:column="76">_encoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<comment type="line" pos:line="1040" pos:column="25">//Force in the document so we can add the markers</comment>
			<comment type="line" pos:line="1041" pos:column="25">//Dont use default methods because of performance</comment>
			<decl_stmt><decl><type><name pos:line="1042" pos:column="25">Document</name></type> <name pos:line="1042" pos:column="34">prevDoc</name> <init pos:line="1042" pos:column="42">= <expr><call><name><name pos:line="1042" pos:column="44">_mainEditView</name><op:operator pos:line="1042" pos:column="57">.</op:operator><name pos:line="1042" pos:column="58">execute</name></name><argument_list pos:line="1042" pos:column="65">(<argument><expr><name pos:line="1042" pos:column="66">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1043" pos:column="25">_mainEditView</name><op:operator pos:line="1043" pos:column="38">.</op:operator><name pos:line="1043" pos:column="39">execute</name></name><argument_list pos:line="1043" pos:column="46">(<argument><expr><name pos:line="1043" pos:column="47">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1043" pos:column="66">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1043" pos:column="69">buf</name><op:operator pos:line="1043" pos:column="72">-&gt;</op:operator><name pos:line="1043" pos:column="74">getDocument</name></name><argument_list pos:line="1043" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:line="1044" pos:column="25">for (<init><decl><type><name pos:line="1044" pos:column="30">size_t</name></type> <name pos:line="1044" pos:column="37">j</name> <init pos:line="1044" pos:column="39">= <expr><lit:literal type="number" pos:line="1044" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1044" pos:column="45">j</name> <op:operator pos:line="1044" pos:column="47">&lt;</op:operator> <name><name pos:line="1044" pos:column="49">session</name><op:operator pos:line="1044" pos:column="56">.</op:operator><name pos:line="1044" pos:column="57">_mainViewFiles</name><index pos:line="1044" pos:column="71">[<expr><name pos:line="1044" pos:column="72">i</name></expr>]</index></name><op:operator pos:line="1044" pos:column="74">.</op:operator><call><name><name pos:line="1044" pos:column="75">marks</name><op:operator pos:line="1044" pos:column="80">.</op:operator><name pos:line="1044" pos:column="81">size</name></name><argument_list pos:line="1044" pos:column="85">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1044" pos:column="90">j</name><op:operator pos:line="1044" pos:column="91">++</op:operator></expr></incr>) 
			<block pos:line="1045" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1046" pos:column="33">_mainEditView</name><op:operator pos:line="1046" pos:column="46">.</op:operator><name pos:line="1046" pos:column="47">execute</name></name><argument_list pos:line="1046" pos:column="54">(<argument><expr><name pos:line="1046" pos:column="55">SCI_MARKERADD</name></expr></argument>, <argument><expr><name><name pos:line="1046" pos:column="70">session</name><op:operator pos:line="1046" pos:column="77">.</op:operator><name pos:line="1046" pos:column="78">_mainViewFiles</name><index pos:line="1046" pos:column="92">[<expr><name pos:line="1046" pos:column="93">i</name></expr>]</index></name><op:operator pos:line="1046" pos:column="95">.</op:operator><name><name pos:line="1046" pos:column="96">marks</name><index pos:line="1046" pos:column="101">[<expr><name pos:line="1046" pos:column="102">j</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="1046" pos:column="106">MARK_BOOKMARK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><call><name><name pos:line="1048" pos:column="25">_mainEditView</name><op:operator pos:line="1048" pos:column="38">.</op:operator><name pos:line="1048" pos:column="39">execute</name></name><argument_list pos:line="1048" pos:column="46">(<argument><expr><name pos:line="1048" pos:column="47">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1048" pos:column="66">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1048" pos:column="69">prevDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1049" pos:column="25">i</name><op:operator pos:line="1049" pos:column="26">++</op:operator></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1051" pos:column="17">else
		<block pos:line="1052" pos:column="17">{
			<decl_stmt><decl><type><name><name><name pos:line="1053" pos:column="25">vector</name><argument_list pos:line="1053" pos:column="31">&lt;<argument><expr><name pos:line="1053" pos:column="32">sessionFileInfo</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="1053" pos:column="48">::</op:operator><name pos:line="1053" pos:column="50">iterator</name></name></type> <name pos:line="1053" pos:column="59">posIt</name> <init pos:line="1053" pos:column="65">= <expr><call><name><name pos:line="1053" pos:column="67">session</name><op:operator pos:line="1053" pos:column="74">.</op:operator><name pos:line="1053" pos:column="75">_mainViewFiles</name><op:operator pos:line="1053" pos:column="89">.</op:operator><name pos:line="1053" pos:column="90">begin</name></name><argument_list pos:line="1053" pos:column="95">()</argument_list></call> <op:operator pos:line="1053" pos:column="98">+</op:operator> <name pos:line="1053" pos:column="100">i</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1054" pos:column="25">session</name><op:operator pos:line="1054" pos:column="32">.</op:operator><name pos:line="1054" pos:column="33">_mainViewFiles</name><op:operator pos:line="1054" pos:column="47">.</op:operator><name pos:line="1054" pos:column="48">erase</name></name><argument_list pos:line="1054" pos:column="53">(<argument><expr><name pos:line="1054" pos:column="54">posIt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1055" pos:column="25">allSessionFilesLoaded</name> <op:operator pos:line="1055" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="1055" pos:column="49">false</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="1059" pos:column="9">size_t</name></type> <name pos:line="1059" pos:column="16">k</name> <init pos:line="1059" pos:column="18">= <expr><lit:literal type="number" pos:line="1059" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1060" pos:column="9">showView</name><argument_list pos:line="1060" pos:column="17">(<argument><expr><name pos:line="1060" pos:column="18">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1061" pos:column="9">switchEditViewTo</name><argument_list pos:line="1061" pos:column="25">(<argument><expr><name pos:line="1061" pos:column="26">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="1061" pos:column="41">//open files in sub</comment>
	<for pos:line="1062" pos:column="9">for ( <init pos:line="1062" pos:column="15">;</init> <condition><expr><name pos:line="1062" pos:column="17">k</name> <op:operator pos:line="1062" pos:column="19">&lt;</op:operator> <call><name><name pos:line="1062" pos:column="21">session</name><op:operator pos:line="1062" pos:column="28">.</op:operator><name pos:line="1062" pos:column="29">nbSubFiles</name></name><argument_list pos:line="1062" pos:column="39">()</argument_list></call></expr> ;</condition> <incr/>)
	<block pos:line="1063" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="1064" pos:column="17">const</specifier> <name pos:line="1064" pos:column="23">TCHAR</name> <type:modifier pos:line="1064" pos:column="29">*</type:modifier></type><name pos:line="1064" pos:column="30">pFn</name> <init pos:line="1064" pos:column="34">= <expr><name><name pos:line="1064" pos:column="36">session</name><op:operator pos:line="1064" pos:column="43">.</op:operator><name pos:line="1064" pos:column="44">_subViewFiles</name><index pos:line="1064" pos:column="57">[<expr><name pos:line="1064" pos:column="58">k</name></expr>]</index></name><op:operator pos:line="1064" pos:column="60">.</op:operator><call><name><name pos:line="1064" pos:column="61">_fileName</name><op:operator pos:line="1064" pos:column="70">.</op:operator><name pos:line="1064" pos:column="71">c_str</name></name><argument_list pos:line="1064" pos:column="76">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1065" pos:column="17">if <condition pos:line="1065" pos:column="20">(<expr><call><name pos:line="1065" pos:column="21">isFileSession</name><argument_list pos:line="1065" pos:column="34">(<argument><expr><name pos:line="1065" pos:column="35">pFn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1065" pos:column="40"> <block pos:line="1065" pos:column="41">{
			<decl_stmt><decl><type><name><name><name pos:line="1066" pos:column="25">vector</name><argument_list pos:line="1066" pos:column="31">&lt;<argument><expr><name pos:line="1066" pos:column="32">sessionFileInfo</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="1066" pos:column="48">::</op:operator><name pos:line="1066" pos:column="50">iterator</name></name></type> <name pos:line="1066" pos:column="59">posIt</name> <init pos:line="1066" pos:column="65">= <expr><call><name><name pos:line="1066" pos:column="67">session</name><op:operator pos:line="1066" pos:column="74">.</op:operator><name pos:line="1066" pos:column="75">_subViewFiles</name><op:operator pos:line="1066" pos:column="88">.</op:operator><name pos:line="1066" pos:column="89">begin</name></name><argument_list pos:line="1066" pos:column="94">()</argument_list></call> <op:operator pos:line="1066" pos:column="97">+</op:operator> <name pos:line="1066" pos:column="99">k</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1067" pos:column="25">session</name><op:operator pos:line="1067" pos:column="32">.</op:operator><name pos:line="1067" pos:column="33">_subViewFiles</name><op:operator pos:line="1067" pos:column="46">.</op:operator><name pos:line="1067" pos:column="47">erase</name></name><argument_list pos:line="1067" pos:column="52">(<argument><expr><name pos:line="1067" pos:column="53">posIt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<continue pos:line="1068" pos:column="25">continue;</continue>	<comment type="line" pos:line="1068" pos:column="41">//skip session files, not supporting recursive sessions</comment>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="1071" pos:column="17">bool</name></type> <name pos:line="1071" pos:column="22">isWow64Off</name> <init pos:line="1071" pos:column="33">= <expr><lit:literal type="boolean" pos:line="1071" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="1072" pos:column="17">if <condition pos:line="1072" pos:column="20">(<expr><op:operator pos:line="1072" pos:column="21">!</op:operator><call><name pos:line="1072" pos:column="22">PathFileExists</name><argument_list pos:line="1072" pos:column="36">(<argument><expr><name pos:line="1072" pos:column="37">pFn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1072" pos:column="42">
		<block pos:line="1073" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1074" pos:column="25">pNppParam</name><op:operator pos:line="1074" pos:column="34">-&gt;</op:operator><name pos:line="1074" pos:column="36">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="1074" pos:column="69">(<argument><expr><name pos:line="1074" pos:column="70">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1075" pos:column="25">isWow64Off</name> <op:operator pos:line="1075" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1075" pos:column="38">true</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="1077" pos:column="17">if <condition pos:line="1077" pos:column="20">(<expr><call><name pos:line="1077" pos:column="21">PathFileExists</name><argument_list pos:line="1077" pos:column="35">(<argument><expr><name pos:line="1077" pos:column="36">pFn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1077" pos:column="41"> 
		<block pos:line="1078" pos:column="17">{
			<expr_stmt><expr><name pos:line="1079" pos:column="25">lastOpened</name> <op:operator pos:line="1079" pos:column="36">=</op:operator> <call><name pos:line="1079" pos:column="38">doOpen</name><argument_list pos:line="1079" pos:column="44">(<argument><expr><name pos:line="1079" pos:column="45">pFn</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1079" pos:column="50">false</lit:literal></expr></argument>, <argument><expr><name><name pos:line="1079" pos:column="57">session</name><op:operator pos:line="1079" pos:column="64">.</op:operator><name pos:line="1079" pos:column="65">_subViewFiles</name><index pos:line="1079" pos:column="78">[<expr><name pos:line="1079" pos:column="79">k</name></expr>]</index></name><op:operator pos:line="1079" pos:column="81">.</op:operator><name pos:line="1079" pos:column="82">_encoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="1080" pos:column="25">//check if already open in main. If so, clone</comment>
			<if pos:line="1081" pos:column="25">if <condition pos:line="1081" pos:column="28">(<expr><call><name><name pos:line="1081" pos:column="29">_mainDocTab</name><op:operator pos:line="1081" pos:column="40">.</op:operator><name pos:line="1081" pos:column="41">getIndexByBuffer</name></name><argument_list pos:line="1081" pos:column="57">(<argument><expr><name pos:line="1081" pos:column="58">lastOpened</name></expr></argument>)</argument_list></call> <op:operator pos:line="1081" pos:column="70">!=</op:operator> <op:operator pos:line="1081" pos:column="73">-</op:operator><lit:literal type="number" pos:line="1081" pos:column="74">1</lit:literal></expr>)</condition><then pos:line="1081" pos:column="76"> <block pos:line="1081" pos:column="77">{
				<expr_stmt><expr><call><name pos:line="1082" pos:column="33">loadBufferIntoView</name><argument_list pos:line="1082" pos:column="51">(<argument><expr><name pos:line="1082" pos:column="52">lastOpened</name></expr></argument>, <argument><expr><name pos:line="1082" pos:column="64">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then>
		<else pos:line="1085" pos:column="17">else 
		<block pos:line="1086" pos:column="17">{
			<expr_stmt><expr><name pos:line="1087" pos:column="25">lastOpened</name> <op:operator pos:line="1087" pos:column="36">=</op:operator> <name pos:line="1087" pos:column="38">BUFFER_INVALID</name></expr>;</expr_stmt>
		}</block></else></if>
		<if pos:line="1089" pos:column="17">if <condition pos:line="1089" pos:column="20">(<expr><name pos:line="1089" pos:column="21">isWow64Off</name></expr>)</condition><then pos:line="1089" pos:column="32">
		<block pos:line="1090" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1091" pos:column="25">pNppParam</name><op:operator pos:line="1091" pos:column="34">-&gt;</op:operator><name pos:line="1091" pos:column="36">safeWow64EnableWow64FsRedirection</name></name><argument_list pos:line="1091" pos:column="69">(<argument><expr><name pos:line="1091" pos:column="70">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1092" pos:column="25">isWow64Off</name> <op:operator pos:line="1092" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1092" pos:column="38">false</lit:literal></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="1095" pos:column="17">if <condition pos:line="1095" pos:column="20">(<expr><name pos:line="1095" pos:column="21">lastOpened</name> <op:operator pos:line="1095" pos:column="32">!=</op:operator> <name pos:line="1095" pos:column="35">BUFFER_INVALID</name></expr>)</condition><then pos:line="1095" pos:column="50">
		<block pos:line="1096" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1097" pos:column="25">showView</name><argument_list pos:line="1097" pos:column="33">(<argument><expr><name pos:line="1097" pos:column="34">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1098" pos:column="25">if <condition pos:line="1098" pos:column="28">(<expr><call><name pos:line="1098" pos:column="29">canHideView</name><argument_list pos:line="1098" pos:column="40">(<argument><expr><name pos:line="1098" pos:column="41">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1098" pos:column="52">
				<expr_stmt><expr><call><name pos:line="1099" pos:column="33">hideView</name><argument_list pos:line="1099" pos:column="41">(<argument><expr><name pos:line="1099" pos:column="42">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<decl_stmt><decl><type><specifier pos:line="1100" pos:column="25">const</specifier> <name pos:line="1100" pos:column="31">TCHAR</name> <type:modifier pos:line="1100" pos:column="37">*</type:modifier></type><name pos:line="1100" pos:column="38">pLn</name> <init pos:line="1100" pos:column="42">= <expr><name><name pos:line="1100" pos:column="44">session</name><op:operator pos:line="1100" pos:column="51">.</op:operator><name pos:line="1100" pos:column="52">_subViewFiles</name><index pos:line="1100" pos:column="65">[<expr><name pos:line="1100" pos:column="66">k</name></expr>]</index></name><op:operator pos:line="1100" pos:column="68">.</op:operator><call><name><name pos:line="1100" pos:column="69">_langName</name><op:operator pos:line="1100" pos:column="78">.</op:operator><name pos:line="1100" pos:column="79">c_str</name></name><argument_list pos:line="1100" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1101" pos:column="25">int</name></type> <name pos:line="1101" pos:column="29">id</name> <init pos:line="1101" pos:column="32">= <expr><call><name pos:line="1101" pos:column="34">getLangFromMenuName</name><argument_list pos:line="1101" pos:column="53">(<argument><expr><name pos:line="1101" pos:column="54">pLn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1102" pos:column="25">LangType</name></type> <name pos:line="1102" pos:column="34">typeToSet</name> <init pos:line="1102" pos:column="44">= <expr><name pos:line="1102" pos:column="46">L_TEXT</name></expr></init></decl>;</decl_stmt>
			<if pos:line="1103" pos:column="25">if <condition pos:line="1103" pos:column="28">(<expr><name pos:line="1103" pos:column="29">id</name> <op:operator pos:line="1103" pos:column="32">!=</op:operator> <lit:literal type="number" pos:line="1103" pos:column="35">0</lit:literal></expr>)</condition><then pos:line="1103" pos:column="37">
				<expr_stmt><expr><name pos:line="1104" pos:column="33">typeToSet</name> <op:operator pos:line="1104" pos:column="43">=</op:operator> <call><name pos:line="1104" pos:column="45">menuID2LangType</name><argument_list pos:line="1104" pos:column="60">(<argument><expr><name pos:line="1104" pos:column="61">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<if pos:line="1105" pos:column="25">if <condition pos:line="1105" pos:column="28">(<expr><name pos:line="1105" pos:column="29">typeToSet</name> <op:operator pos:line="1105" pos:column="39">==</op:operator> <name pos:line="1105" pos:column="42">L_EXTERNAL</name></expr> )</condition><then pos:line="1105" pos:column="54">
				<expr_stmt><expr><name pos:line="1106" pos:column="33">typeToSet</name> <op:operator pos:line="1106" pos:column="43">=</op:operator> <call pos:line="1106" pos:column="45">(<name pos:line="1106" pos:column="46">LangType</name>)<argument_list pos:line="1106" pos:column="55">(<argument><expr><name pos:line="1106" pos:column="56">id</name> <op:operator pos:line="1106" pos:column="59">-</op:operator> <name pos:line="1106" pos:column="61">IDM_LANG_EXTERNAL</name> <op:operator pos:line="1106" pos:column="79">+</op:operator> <name pos:line="1106" pos:column="81">L_EXTERNAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><name pos:line="1108" pos:column="25">Buffer</name> <type:modifier pos:line="1108" pos:column="32">*</type:modifier></type> <name pos:line="1108" pos:column="34">buf</name> <init pos:line="1108" pos:column="38">= <expr><call><name><name pos:line="1108" pos:column="40">MainFileManager</name><op:operator pos:line="1108" pos:column="55">-&gt;</op:operator><name pos:line="1108" pos:column="57">getBufferByID</name></name><argument_list pos:line="1108" pos:column="70">(<argument><expr><name pos:line="1108" pos:column="71">lastOpened</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1109" pos:column="25">buf</name><op:operator pos:line="1109" pos:column="28">-&gt;</op:operator><name pos:line="1109" pos:column="30">setPosition</name></name><argument_list pos:line="1109" pos:column="41">(<argument><expr><name><name pos:line="1109" pos:column="42">session</name><op:operator pos:line="1109" pos:column="49">.</op:operator><name pos:line="1109" pos:column="50">_subViewFiles</name><index pos:line="1109" pos:column="63">[<expr><name pos:line="1109" pos:column="64">k</name></expr>]</index></name></expr></argument>, <argument><expr><op:operator pos:line="1109" pos:column="68">&amp;</op:operator><name pos:line="1109" pos:column="69">_subEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1110" pos:column="25">if <condition pos:line="1110" pos:column="28">(<expr><name pos:line="1110" pos:column="29">typeToSet</name> <op:operator pos:line="1110" pos:column="39">==</op:operator> <name pos:line="1110" pos:column="42">L_USER</name></expr>)</condition><then pos:line="1110" pos:column="49"> <block pos:line="1110" pos:column="50">{
				<if pos:line="1111" pos:column="33">if <condition pos:line="1111" pos:column="36">(<expr><op:operator pos:line="1111" pos:column="37">!</op:operator><call><name pos:line="1111" pos:column="38">lstrcmp</name><argument_list pos:line="1111" pos:column="45">(<argument><expr><name pos:line="1111" pos:column="46">pLn</name></expr></argument>, <argument><expr><call><name pos:line="1111" pos:column="51">TEXT</name><argument_list pos:line="1111" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1111" pos:column="56">"User Defined"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1111" pos:column="73"> <block pos:line="1111" pos:column="74">{
					<expr_stmt><expr><name pos:line="1112" pos:column="41">pLn</name> <op:operator pos:line="1112" pos:column="45">=</op:operator> <call><name pos:line="1112" pos:column="47">TEXT</name><argument_list pos:line="1112" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1112" pos:column="52">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="1112" pos:column="57">//default user defined</comment>
				}</block></then></if>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="1115" pos:column="25">buf</name><op:operator pos:line="1115" pos:column="28">-&gt;</op:operator><name pos:line="1115" pos:column="30">setLangType</name></name><argument_list pos:line="1115" pos:column="41">(<argument><expr><name pos:line="1115" pos:column="42">typeToSet</name></expr></argument>, <argument><expr><name pos:line="1115" pos:column="53">pLn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1116" pos:column="25">buf</name><op:operator pos:line="1116" pos:column="28">-&gt;</op:operator><name pos:line="1116" pos:column="30">setEncoding</name></name><argument_list pos:line="1116" pos:column="41">(<argument><expr><name><name pos:line="1116" pos:column="42">session</name><op:operator pos:line="1116" pos:column="49">.</op:operator><name pos:line="1116" pos:column="50">_subViewFiles</name><index pos:line="1116" pos:column="63">[<expr><name pos:line="1116" pos:column="64">k</name></expr>]</index></name><op:operator pos:line="1116" pos:column="66">.</op:operator><name pos:line="1116" pos:column="67">_encoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<comment type="line" pos:line="1118" pos:column="25">//Force in the document so we can add the markers</comment>
			<comment type="line" pos:line="1119" pos:column="25">//Dont use default methods because of performance</comment>
			<decl_stmt><decl><type><name pos:line="1120" pos:column="25">Document</name></type> <name pos:line="1120" pos:column="34">prevDoc</name> <init pos:line="1120" pos:column="42">= <expr><call><name><name pos:line="1120" pos:column="44">_subEditView</name><op:operator pos:line="1120" pos:column="56">.</op:operator><name pos:line="1120" pos:column="57">execute</name></name><argument_list pos:line="1120" pos:column="64">(<argument><expr><name pos:line="1120" pos:column="65">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1121" pos:column="25">_subEditView</name><op:operator pos:line="1121" pos:column="37">.</op:operator><name pos:line="1121" pos:column="38">execute</name></name><argument_list pos:line="1121" pos:column="45">(<argument><expr><name pos:line="1121" pos:column="46">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1121" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="1121" pos:column="68">buf</name><op:operator pos:line="1121" pos:column="71">-&gt;</op:operator><name pos:line="1121" pos:column="73">getDocument</name></name><argument_list pos:line="1121" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:line="1122" pos:column="25">for (<init><decl><type><name pos:line="1122" pos:column="30">size_t</name></type> <name pos:line="1122" pos:column="37">j</name> <init pos:line="1122" pos:column="39">= <expr><lit:literal type="number" pos:line="1122" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1122" pos:column="45">j</name> <op:operator pos:line="1122" pos:column="47">&lt;</op:operator> <name><name pos:line="1122" pos:column="49">session</name><op:operator pos:line="1122" pos:column="56">.</op:operator><name pos:line="1122" pos:column="57">_subViewFiles</name><index pos:line="1122" pos:column="70">[<expr><name pos:line="1122" pos:column="71">k</name></expr>]</index></name><op:operator pos:line="1122" pos:column="73">.</op:operator><call><name><name pos:line="1122" pos:column="74">marks</name><op:operator pos:line="1122" pos:column="79">.</op:operator><name pos:line="1122" pos:column="80">size</name></name><argument_list pos:line="1122" pos:column="84">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1122" pos:column="89">j</name><op:operator pos:line="1122" pos:column="90">++</op:operator></expr></incr>) 
			<block pos:line="1123" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1124" pos:column="33">_subEditView</name><op:operator pos:line="1124" pos:column="45">.</op:operator><name pos:line="1124" pos:column="46">execute</name></name><argument_list pos:line="1124" pos:column="53">(<argument><expr><name pos:line="1124" pos:column="54">SCI_MARKERADD</name></expr></argument>, <argument><expr><name><name pos:line="1124" pos:column="69">session</name><op:operator pos:line="1124" pos:column="76">.</op:operator><name pos:line="1124" pos:column="77">_subViewFiles</name><index pos:line="1124" pos:column="90">[<expr><name pos:line="1124" pos:column="91">k</name></expr>]</index></name><op:operator pos:line="1124" pos:column="93">.</op:operator><name><name pos:line="1124" pos:column="94">marks</name><index pos:line="1124" pos:column="99">[<expr><name pos:line="1124" pos:column="100">j</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="1124" pos:column="104">MARK_BOOKMARK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
			<expr_stmt><expr><call><name><name pos:line="1126" pos:column="25">_subEditView</name><op:operator pos:line="1126" pos:column="37">.</op:operator><name pos:line="1126" pos:column="38">execute</name></name><argument_list pos:line="1126" pos:column="45">(<argument><expr><name pos:line="1126" pos:column="46">SCI_SETDOCPOINTER</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1126" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1126" pos:column="68">prevDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="1128" pos:column="25">k</name><op:operator pos:line="1128" pos:column="26">++</op:operator></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1130" pos:column="17">else
		<block pos:line="1131" pos:column="17">{
			<decl_stmt><decl><type><name><name><name pos:line="1132" pos:column="25">vector</name><argument_list pos:line="1132" pos:column="31">&lt;<argument><expr><name pos:line="1132" pos:column="32">sessionFileInfo</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="1132" pos:column="48">::</op:operator><name pos:line="1132" pos:column="50">iterator</name></name></type> <name pos:line="1132" pos:column="59">posIt</name> <init pos:line="1132" pos:column="65">= <expr><call><name><name pos:line="1132" pos:column="67">session</name><op:operator pos:line="1132" pos:column="74">.</op:operator><name pos:line="1132" pos:column="75">_subViewFiles</name><op:operator pos:line="1132" pos:column="88">.</op:operator><name pos:line="1132" pos:column="89">begin</name></name><argument_list pos:line="1132" pos:column="94">()</argument_list></call> <op:operator pos:line="1132" pos:column="97">+</op:operator> <name pos:line="1132" pos:column="99">k</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1133" pos:column="25">session</name><op:operator pos:line="1133" pos:column="32">.</op:operator><name pos:line="1133" pos:column="33">_subViewFiles</name><op:operator pos:line="1133" pos:column="46">.</op:operator><name pos:line="1133" pos:column="47">erase</name></name><argument_list pos:line="1133" pos:column="52">(<argument><expr><name pos:line="1133" pos:column="53">posIt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1134" pos:column="25">allSessionFilesLoaded</name> <op:operator pos:line="1134" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="1134" pos:column="49">false</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="1138" pos:column="9">_mainEditView</name><op:operator pos:line="1138" pos:column="22">.</op:operator><name pos:line="1138" pos:column="23">restoreCurrentPos</name></name><argument_list pos:line="1138" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1139" pos:column="9">_subEditView</name><op:operator pos:line="1139" pos:column="21">.</op:operator><name pos:line="1139" pos:column="22">restoreCurrentPos</name></name><argument_list pos:line="1139" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1141" pos:column="9">if <condition pos:line="1141" pos:column="12">(<expr><name><name pos:line="1141" pos:column="13">session</name><op:operator pos:line="1141" pos:column="20">.</op:operator><name pos:line="1141" pos:column="21">_activeMainIndex</name></name> <op:operator pos:line="1141" pos:column="38">&lt;</op:operator> <op:operator pos:line="1141" pos:column="40">(</op:operator><name pos:line="1141" pos:column="41">size_t</name><op:operator pos:line="1141" pos:column="47">)</op:operator><call><name><name pos:line="1141" pos:column="48">_mainDocTab</name><op:operator pos:line="1141" pos:column="59">.</op:operator><name pos:line="1141" pos:column="60">nbItem</name></name><argument_list pos:line="1141" pos:column="66">()</argument_list></call></expr>)</condition><then><comment type="line" pos:line="1141" pos:column="69">//session.nbMainFiles())</comment>
		<expr_stmt><expr><call><name pos:line="1142" pos:column="17">activateBuffer</name><argument_list pos:line="1142" pos:column="31">(<argument><expr><call><name><name pos:line="1142" pos:column="32">_mainDocTab</name><op:operator pos:line="1142" pos:column="43">.</op:operator><name pos:line="1142" pos:column="44">getBufferByIndex</name></name><argument_list pos:line="1142" pos:column="60">(<argument><expr><name><name pos:line="1142" pos:column="61">session</name><op:operator pos:line="1142" pos:column="68">.</op:operator><name pos:line="1142" pos:column="69">_activeMainIndex</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1142" pos:column="88">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="1144" pos:column="9">if <condition pos:line="1144" pos:column="12">(<expr><name><name pos:line="1144" pos:column="13">session</name><op:operator pos:line="1144" pos:column="20">.</op:operator><name pos:line="1144" pos:column="21">_activeSubIndex</name></name> <op:operator pos:line="1144" pos:column="37">&lt;</op:operator> <op:operator pos:line="1144" pos:column="39">(</op:operator><name pos:line="1144" pos:column="40">size_t</name><op:operator pos:line="1144" pos:column="46">)</op:operator><call><name><name pos:line="1144" pos:column="47">_subDocTab</name><op:operator pos:line="1144" pos:column="57">.</op:operator><name pos:line="1144" pos:column="58">nbItem</name></name><argument_list pos:line="1144" pos:column="64">()</argument_list></call></expr>)</condition><then><comment type="line" pos:line="1144" pos:column="67">//session.nbSubFiles())</comment>
		<expr_stmt><expr><call><name pos:line="1145" pos:column="17">activateBuffer</name><argument_list pos:line="1145" pos:column="31">(<argument><expr><call><name><name pos:line="1145" pos:column="32">_subDocTab</name><op:operator pos:line="1145" pos:column="42">.</op:operator><name pos:line="1145" pos:column="43">getBufferByIndex</name></name><argument_list pos:line="1145" pos:column="59">(<argument><expr><name><name pos:line="1145" pos:column="60">session</name><op:operator pos:line="1145" pos:column="67">.</op:operator><name pos:line="1145" pos:column="68">_activeSubIndex</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1145" pos:column="86">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="1147" pos:column="9">if <condition pos:line="1147" pos:column="12">(<expr><op:operator pos:line="1147" pos:column="13">(</op:operator><call><name><name pos:line="1147" pos:column="14">session</name><op:operator pos:line="1147" pos:column="21">.</op:operator><name pos:line="1147" pos:column="22">nbSubFiles</name></name><argument_list pos:line="1147" pos:column="32">()</argument_list></call> <op:operator pos:line="1147" pos:column="35">&gt;</op:operator> <lit:literal type="number" pos:line="1147" pos:column="37">0</lit:literal><op:operator pos:line="1147" pos:column="38">)</op:operator> <op:operator pos:line="1147" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="1147" pos:column="43">(</op:operator><name><name pos:line="1147" pos:column="44">session</name><op:operator pos:line="1147" pos:column="51">.</op:operator><name pos:line="1147" pos:column="52">_activeView</name></name> <op:operator pos:line="1147" pos:column="64">==</op:operator> <name pos:line="1147" pos:column="67">MAIN_VIEW</name> <op:operator pos:line="1147" pos:column="77">||</op:operator> <name><name pos:line="1147" pos:column="80">session</name><op:operator pos:line="1147" pos:column="87">.</op:operator><name pos:line="1147" pos:column="88">_activeView</name></name> <op:operator pos:line="1147" pos:column="100">==</op:operator> <name pos:line="1147" pos:column="103">SUB_VIEW</name><op:operator pos:line="1147" pos:column="111">)</op:operator></expr>)</condition><then pos:line="1147" pos:column="113">
		<expr_stmt><expr><call><name pos:line="1148" pos:column="17">switchEditViewTo</name><argument_list pos:line="1148" pos:column="33">(<argument><expr><name><name pos:line="1148" pos:column="34">session</name><op:operator pos:line="1148" pos:column="41">.</op:operator><name pos:line="1148" pos:column="42">_activeView</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="1149" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="1150" pos:column="17">switchEditViewTo</name><argument_list pos:line="1150" pos:column="33">(<argument><expr><name pos:line="1150" pos:column="34">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

	<if pos:line="1152" pos:column="9">if <condition pos:line="1152" pos:column="12">(<expr><call><name pos:line="1152" pos:column="13">canHideView</name><argument_list pos:line="1152" pos:column="24">(<argument><expr><call><name pos:line="1152" pos:column="25">otherView</name><argument_list pos:line="1152" pos:column="34">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1152" pos:column="38">
		<expr_stmt><expr><call><name pos:line="1153" pos:column="17">hideView</name><argument_list pos:line="1153" pos:column="25">(<argument><expr><call><name pos:line="1153" pos:column="26">otherView</name><argument_list pos:line="1153" pos:column="35">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="1154" pos:column="9">else <if pos:line="1154" pos:column="14">if <condition pos:line="1154" pos:column="17">(<expr><call><name pos:line="1154" pos:column="18">canHideView</name><argument_list pos:line="1154" pos:column="29">(<argument><expr><call><name pos:line="1154" pos:column="30">currentView</name><argument_list pos:line="1154" pos:column="41">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1154" pos:column="45">
		<expr_stmt><expr><call><name pos:line="1155" pos:column="17">hideView</name><argument_list pos:line="1155" pos:column="25">(<argument><expr><call><name pos:line="1155" pos:column="26">currentView</name><argument_list pos:line="1155" pos:column="37">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
	<return pos:line="1156" pos:column="9">return <expr><name pos:line="1156" pos:column="16">allSessionFilesLoaded</name></expr>;</return>
}</block></function>


<function><type><name pos:line="1160" pos:column="1">bool</name></type> <name><name pos:line="1160" pos:column="6">Notepad_plus</name><op:operator pos:line="1160" pos:column="18">::</op:operator><name pos:line="1160" pos:column="20">fileLoadSession</name></name><parameter_list pos:line="1160" pos:column="35">(<param><decl><type><specifier pos:line="1160" pos:column="36">const</specifier> <name pos:line="1160" pos:column="42">TCHAR</name> <type:modifier pos:line="1160" pos:column="48">*</type:modifier></type><name pos:line="1160" pos:column="49">fn</name></decl></param>)</parameter_list>
<block pos:line="1161" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1162" pos:column="9">bool</name></type> <name pos:line="1162" pos:column="14">result</name> <init pos:line="1162" pos:column="21">= <expr><lit:literal type="boolean" pos:line="1162" pos:column="23">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1163" pos:column="9">const</specifier> <name pos:line="1163" pos:column="15">TCHAR</name> <type:modifier pos:line="1163" pos:column="21">*</type:modifier></type><name pos:line="1163" pos:column="22">sessionFileName</name> <init pos:line="1163" pos:column="38">= <expr><name pos:line="1163" pos:column="40">NULL</name></expr></init></decl>;</decl_stmt>
	<if pos:line="1164" pos:column="9">if <condition pos:line="1164" pos:column="12">(<expr><name pos:line="1164" pos:column="13">fn</name> <op:operator pos:line="1164" pos:column="16">==</op:operator> <name pos:line="1164" pos:column="19">NULL</name></expr>)</condition><then pos:line="1164" pos:column="24">
	<block pos:line="1165" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1166" pos:column="17">FileDialog</name></type> <name pos:line="1166" pos:column="28">fDlg</name><argument_list pos:line="1166" pos:column="32">(<argument><expr><call><name><name pos:line="1166" pos:column="33">_pPublicInterface</name><op:operator pos:line="1166" pos:column="50">-&gt;</op:operator><name pos:line="1166" pos:column="52">getHSelf</name></name><argument_list pos:line="1166" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1166" pos:column="64">_pPublicInterface</name><op:operator pos:line="1166" pos:column="81">-&gt;</op:operator><name pos:line="1166" pos:column="83">getHinst</name></name><argument_list pos:line="1166" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1167" pos:column="17">fDlg</name><op:operator pos:line="1167" pos:column="21">.</op:operator><name pos:line="1167" pos:column="22">setExtFilter</name></name><argument_list pos:line="1167" pos:column="34">(<argument><expr><call><name pos:line="1167" pos:column="35">TEXT</name><argument_list pos:line="1167" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1167" pos:column="40">"All types"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1167" pos:column="54">TEXT</name><argument_list pos:line="1167" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1167" pos:column="59">".*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1167" pos:column="66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier pos:line="1168" pos:column="17">const</specifier> <name pos:line="1168" pos:column="23">TCHAR</name> <type:modifier pos:line="1168" pos:column="29">*</type:modifier></type><name pos:line="1168" pos:column="30">ext</name> <init pos:line="1168" pos:column="34">= <expr><call><name><name pos:line="1168" pos:column="36">NppParameters</name><op:operator pos:line="1168" pos:column="49">::</op:operator><name pos:line="1168" pos:column="51">getInstance</name></name><argument_list pos:line="1168" pos:column="62">()</argument_list></call><op:operator pos:line="1168" pos:column="64">-&gt;</op:operator><call><name pos:line="1168" pos:column="66">getNppGUI</name><argument_list pos:line="1168" pos:column="75">()</argument_list></call><op:operator pos:line="1168" pos:column="77">.</op:operator><call><name><name pos:line="1168" pos:column="78">_definedSessionExt</name><op:operator pos:line="1168" pos:column="96">.</op:operator><name pos:line="1168" pos:column="97">c_str</name></name><argument_list pos:line="1168" pos:column="102">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1169" pos:column="17">generic_string</name></type> <name pos:line="1169" pos:column="32">sessionExt</name> <init pos:line="1169" pos:column="43">= <expr><call><name pos:line="1169" pos:column="45">TEXT</name><argument_list pos:line="1169" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="1169" pos:column="50">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1170" pos:column="17">if <condition pos:line="1170" pos:column="20">(<expr><op:operator pos:line="1170" pos:column="21">*</op:operator><name pos:line="1170" pos:column="22">ext</name> <op:operator pos:line="1170" pos:column="26">!=</op:operator> <lit:literal type="char" pos:line="1170" pos:column="29">'\0'</lit:literal></expr>)</condition><then pos:line="1170" pos:column="34">
		<block pos:line="1171" pos:column="17">{
			<if pos:line="1172" pos:column="25">if <condition pos:line="1172" pos:column="28">(<expr><op:operator pos:line="1172" pos:column="29">*</op:operator><name pos:line="1172" pos:column="30">ext</name> <op:operator pos:line="1172" pos:column="34">!=</op:operator> <lit:literal type="char" pos:line="1172" pos:column="37">'.'</lit:literal></expr>)</condition><then pos:line="1172" pos:column="41"> 
				<expr_stmt><expr><name pos:line="1173" pos:column="33">sessionExt</name> <op:operator pos:line="1173" pos:column="44">+=</op:operator> <call><name pos:line="1173" pos:column="47">TEXT</name><argument_list pos:line="1173" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1173" pos:column="52">"."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="1174" pos:column="25">sessionExt</name> <op:operator pos:line="1174" pos:column="36">+=</op:operator> <name pos:line="1174" pos:column="39">ext</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1175" pos:column="25">fDlg</name><op:operator pos:line="1175" pos:column="29">.</op:operator><name pos:line="1175" pos:column="30">setExtFilter</name></name><argument_list pos:line="1175" pos:column="42">(<argument><expr><call><name pos:line="1175" pos:column="43">TEXT</name><argument_list pos:line="1175" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="1175" pos:column="48">"Session file"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1175" pos:column="65">sessionExt</name><op:operator pos:line="1175" pos:column="75">.</op:operator><name pos:line="1175" pos:column="76">c_str</name></name><argument_list pos:line="1175" pos:column="81">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1175" pos:column="85">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="1177" pos:column="17">sessionFileName</name> <op:operator pos:line="1177" pos:column="33">=</op:operator> <call><name><name pos:line="1177" pos:column="35">fDlg</name><op:operator pos:line="1177" pos:column="39">.</op:operator><name pos:line="1177" pos:column="40">doOpenSingleFileDlg</name></name><argument_list pos:line="1177" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1179" pos:column="9">else
	<block pos:line="1180" pos:column="9">{
		<if pos:line="1181" pos:column="17">if <condition pos:line="1181" pos:column="20">(<expr><call><name pos:line="1181" pos:column="21">PathFileExists</name><argument_list pos:line="1181" pos:column="35">(<argument><expr><name pos:line="1181" pos:column="36">fn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1181" pos:column="40">
			<expr_stmt><expr><name pos:line="1182" pos:column="25">sessionFileName</name> <op:operator pos:line="1182" pos:column="41">=</op:operator> <name pos:line="1182" pos:column="43">fn</name></expr>;</expr_stmt></then></if>
	}</block></else></if>
	
	<if pos:line="1185" pos:column="9">if <condition pos:line="1185" pos:column="12">(<expr><name pos:line="1185" pos:column="13">sessionFileName</name></expr>)</condition><then pos:line="1185" pos:column="29">
	<block pos:line="1186" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1187" pos:column="17">bool</name></type> <name pos:line="1187" pos:column="22">isAllSuccessful</name> <init pos:line="1187" pos:column="38">= <expr><lit:literal type="boolean" pos:line="1187" pos:column="40">true</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1188" pos:column="17">Session</name></type> <name pos:line="1188" pos:column="25">session2Load</name></decl>;</decl_stmt>

		<if pos:line="1190" pos:column="17">if <condition pos:line="1190" pos:column="20">(<expr><op:operator pos:line="1190" pos:column="21">(</op:operator><call><name><name pos:line="1190" pos:column="22">NppParameters</name><op:operator pos:line="1190" pos:column="35">::</op:operator><name pos:line="1190" pos:column="37">getInstance</name></name><argument_list pos:line="1190" pos:column="48">()</argument_list></call><op:operator pos:line="1190" pos:column="50">)</op:operator><op:operator pos:line="1190" pos:column="51">-&gt;</op:operator><call><name pos:line="1190" pos:column="53">loadSession</name><argument_list pos:line="1190" pos:column="64">(<argument><expr><name pos:line="1190" pos:column="65">session2Load</name></expr></argument>, <argument><expr><name pos:line="1190" pos:column="79">sessionFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1190" pos:column="96">
		<block pos:line="1191" pos:column="17">{
			<expr_stmt><expr><name pos:line="1192" pos:column="25">isAllSuccessful</name> <op:operator pos:line="1192" pos:column="41">=</op:operator> <call><name pos:line="1192" pos:column="43">loadSession</name><argument_list pos:line="1192" pos:column="54">(<argument><expr><name pos:line="1192" pos:column="55">session2Load</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1193" pos:column="25">result</name> <op:operator pos:line="1193" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="1193" pos:column="34">true</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="1195" pos:column="17">if <condition pos:line="1195" pos:column="20">(<expr><op:operator pos:line="1195" pos:column="21">!</op:operator><name pos:line="1195" pos:column="22">isAllSuccessful</name></expr>)</condition><then pos:line="1195" pos:column="38">
			<expr_stmt><expr><op:operator pos:line="1196" pos:column="25">(</op:operator><call><name><name pos:line="1196" pos:column="26">NppParameters</name><op:operator pos:line="1196" pos:column="39">::</op:operator><name pos:line="1196" pos:column="41">getInstance</name></name><argument_list pos:line="1196" pos:column="52">()</argument_list></call><op:operator pos:line="1196" pos:column="54">)</op:operator><op:operator pos:line="1196" pos:column="55">-&gt;</op:operator><call><name pos:line="1196" pos:column="57">writeSession</name><argument_list pos:line="1196" pos:column="69">(<argument><expr><name pos:line="1196" pos:column="70">session2Load</name></expr></argument>, <argument><expr><name pos:line="1196" pos:column="84">sessionFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>
	<return pos:line="1198" pos:column="9">return <expr><name pos:line="1198" pos:column="16">result</name></expr>;</return>
}</block></function>

<function><type><specifier pos:line="1201" pos:column="1">const</specifier> <name pos:line="1201" pos:column="7">TCHAR</name> <type:modifier pos:line="1201" pos:column="13">*</type:modifier></type> <name><name pos:line="1201" pos:column="15">Notepad_plus</name><op:operator pos:line="1201" pos:column="27">::</op:operator><name pos:line="1201" pos:column="29">fileSaveSession</name></name><parameter_list pos:line="1201" pos:column="44">(<param><decl><type><name pos:line="1201" pos:column="45">size_t</name></type> <name pos:line="1201" pos:column="52">nbFile</name></decl></param>, <param><decl><type><name pos:line="1201" pos:column="60">TCHAR</name> <type:modifier pos:line="1201" pos:column="66">*</type:modifier><type:modifier pos:line="1201" pos:column="67">*</type:modifier></type> <name pos:line="1201" pos:column="69">fileNames</name></decl></param>, <param><decl><type><specifier pos:line="1201" pos:column="80">const</specifier> <name pos:line="1201" pos:column="86">TCHAR</name> <type:modifier pos:line="1201" pos:column="92">*</type:modifier></type><name pos:line="1201" pos:column="93">sessionFile2save</name></decl></param>)</parameter_list>
<block pos:line="1202" pos:column="1">{
	<if pos:line="1203" pos:column="9">if <condition pos:line="1203" pos:column="12">(<expr><name pos:line="1203" pos:column="13">sessionFile2save</name></expr>)</condition><then pos:line="1203" pos:column="30">
	<block pos:line="1204" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1205" pos:column="17">Session</name></type> <name pos:line="1205" pos:column="25">currentSession</name></decl>;</decl_stmt>
		<if pos:line="1206" pos:column="17">if <condition pos:line="1206" pos:column="20">(<expr><op:operator pos:line="1206" pos:column="21">(</op:operator><name pos:line="1206" pos:column="22">nbFile</name><op:operator pos:line="1206" pos:column="28">)</op:operator> <op:operator pos:line="1206" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="1206" pos:column="33">(</op:operator><name pos:line="1206" pos:column="34">fileNames</name><op:operator pos:line="1206" pos:column="43">)</op:operator></expr>)</condition><then pos:line="1206" pos:column="45">
		<block pos:line="1207" pos:column="17">{
			<for pos:line="1208" pos:column="25">for (<init><decl><type><name pos:line="1208" pos:column="30">size_t</name></type> <name pos:line="1208" pos:column="37">i</name> <init pos:line="1208" pos:column="39">= <expr><lit:literal type="number" pos:line="1208" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1208" pos:column="45">i</name> <op:operator pos:line="1208" pos:column="47">&lt;</op:operator> <name pos:line="1208" pos:column="49">nbFile</name></expr> ;</condition> <incr><expr><name pos:line="1208" pos:column="58">i</name><op:operator pos:line="1208" pos:column="59">++</op:operator></expr></incr>)
			<block pos:line="1209" pos:column="25">{
				<if pos:line="1210" pos:column="33">if <condition pos:line="1210" pos:column="36">(<expr><call><name pos:line="1210" pos:column="37">PathFileExists</name><argument_list pos:line="1210" pos:column="51">(<argument><expr><name><name pos:line="1210" pos:column="52">fileNames</name><index pos:line="1210" pos:column="61">[<expr><name pos:line="1210" pos:column="62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1210" pos:column="66">
					<expr_stmt><expr><call><name><name pos:line="1211" pos:column="41">currentSession</name><op:operator pos:line="1211" pos:column="55">.</op:operator><name pos:line="1211" pos:column="56">_mainViewFiles</name><op:operator pos:line="1211" pos:column="70">.</op:operator><name pos:line="1211" pos:column="71">push_back</name></name><argument_list pos:line="1211" pos:column="80">(<argument><expr><call><name pos:line="1211" pos:column="81">generic_string</name><argument_list pos:line="1211" pos:column="95">(<argument><expr><name><name pos:line="1211" pos:column="96">fileNames</name><index pos:line="1211" pos:column="105">[<expr><name pos:line="1211" pos:column="106">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></for>
		}</block></then>
		<else pos:line="1214" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="1215" pos:column="25">getCurrentOpenedFiles</name><argument_list pos:line="1215" pos:column="46">(<argument><expr><name pos:line="1215" pos:column="47">currentSession</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

		<expr_stmt><expr><op:operator pos:line="1217" pos:column="17">(</op:operator><call><name><name pos:line="1217" pos:column="18">NppParameters</name><op:operator pos:line="1217" pos:column="31">::</op:operator><name pos:line="1217" pos:column="33">getInstance</name></name><argument_list pos:line="1217" pos:column="44">()</argument_list></call><op:operator pos:line="1217" pos:column="46">)</op:operator><op:operator pos:line="1217" pos:column="47">-&gt;</op:operator><call><name pos:line="1217" pos:column="49">writeSession</name><argument_list pos:line="1217" pos:column="61">(<argument><expr><name pos:line="1217" pos:column="62">currentSession</name></expr></argument>, <argument><expr><name pos:line="1217" pos:column="78">sessionFile2save</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="1218" pos:column="17">return <expr><name pos:line="1218" pos:column="24">sessionFile2save</name></expr>;</return>
	}</block></then></if>
	<return pos:line="1220" pos:column="9">return <expr><name pos:line="1220" pos:column="16">NULL</name></expr>;</return>
}</block></function>

<function><type><specifier pos:line="1223" pos:column="1">const</specifier> <name pos:line="1223" pos:column="7">TCHAR</name> <type:modifier pos:line="1223" pos:column="13">*</type:modifier></type> <name><name pos:line="1223" pos:column="15">Notepad_plus</name><op:operator pos:line="1223" pos:column="27">::</op:operator><name pos:line="1223" pos:column="29">fileSaveSession</name></name><parameter_list pos:line="1223" pos:column="44">(<param><decl><type><name pos:line="1223" pos:column="45">size_t</name></type> <name pos:line="1223" pos:column="52">nbFile</name></decl></param>, <param><decl><type><name pos:line="1223" pos:column="60">TCHAR</name> <type:modifier pos:line="1223" pos:column="66">*</type:modifier><type:modifier pos:line="1223" pos:column="67">*</type:modifier></type> <name pos:line="1223" pos:column="69">fileNames</name></decl></param>)</parameter_list>
<block pos:line="1224" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="1225" pos:column="9">const</specifier> <name pos:line="1225" pos:column="15">TCHAR</name> <type:modifier pos:line="1225" pos:column="21">*</type:modifier></type><name pos:line="1225" pos:column="22">sessionFileName</name> <init pos:line="1225" pos:column="38">= <expr><name pos:line="1225" pos:column="40">NULL</name></expr></init></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="1227" pos:column="9">FileDialog</name></type> <name pos:line="1227" pos:column="20">fDlg</name><argument_list pos:line="1227" pos:column="24">(<argument><expr><call><name><name pos:line="1227" pos:column="25">_pPublicInterface</name><op:operator pos:line="1227" pos:column="42">-&gt;</op:operator><name pos:line="1227" pos:column="44">getHSelf</name></name><argument_list pos:line="1227" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1227" pos:column="56">_pPublicInterface</name><op:operator pos:line="1227" pos:column="73">-&gt;</op:operator><name pos:line="1227" pos:column="75">getHinst</name></name><argument_list pos:line="1227" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1228" pos:column="9">const</specifier> <name pos:line="1228" pos:column="15">TCHAR</name> <type:modifier pos:line="1228" pos:column="21">*</type:modifier></type><name pos:line="1228" pos:column="22">ext</name> <init pos:line="1228" pos:column="26">= <expr><call><name><name pos:line="1228" pos:column="28">NppParameters</name><op:operator pos:line="1228" pos:column="41">::</op:operator><name pos:line="1228" pos:column="43">getInstance</name></name><argument_list pos:line="1228" pos:column="54">()</argument_list></call><op:operator pos:line="1228" pos:column="56">-&gt;</op:operator><call><name pos:line="1228" pos:column="58">getNppGUI</name><argument_list pos:line="1228" pos:column="67">()</argument_list></call><op:operator pos:line="1228" pos:column="69">.</op:operator><call><name><name pos:line="1228" pos:column="70">_definedSessionExt</name><op:operator pos:line="1228" pos:column="88">.</op:operator><name pos:line="1228" pos:column="89">c_str</name></name><argument_list pos:line="1228" pos:column="94">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="1230" pos:column="9">fDlg</name><op:operator pos:line="1230" pos:column="13">.</op:operator><name pos:line="1230" pos:column="14">setExtFilter</name></name><argument_list pos:line="1230" pos:column="26">(<argument><expr><call><name pos:line="1230" pos:column="27">TEXT</name><argument_list pos:line="1230" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="1230" pos:column="32">"All types"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1230" pos:column="46">TEXT</name><argument_list pos:line="1230" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1230" pos:column="51">".*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1230" pos:column="58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1231" pos:column="9">generic_string</name></type> <name pos:line="1231" pos:column="24">sessionExt</name> <init pos:line="1231" pos:column="35">= <expr><call><name pos:line="1231" pos:column="37">TEXT</name><argument_list pos:line="1231" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="1231" pos:column="42">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1232" pos:column="9">if <condition pos:line="1232" pos:column="12">(<expr><op:operator pos:line="1232" pos:column="13">*</op:operator><name pos:line="1232" pos:column="14">ext</name> <op:operator pos:line="1232" pos:column="18">!=</op:operator> <lit:literal type="char" pos:line="1232" pos:column="21">'\0'</lit:literal></expr>)</condition><then pos:line="1232" pos:column="26">
	<block pos:line="1233" pos:column="9">{
		<if pos:line="1234" pos:column="17">if <condition pos:line="1234" pos:column="20">(<expr><op:operator pos:line="1234" pos:column="21">*</op:operator><name pos:line="1234" pos:column="22">ext</name> <op:operator pos:line="1234" pos:column="26">!=</op:operator> <lit:literal type="char" pos:line="1234" pos:column="29">'.'</lit:literal></expr>)</condition><then pos:line="1234" pos:column="33"> 
			<expr_stmt><expr><name pos:line="1235" pos:column="25">sessionExt</name> <op:operator pos:line="1235" pos:column="36">+=</op:operator> <call><name pos:line="1235" pos:column="39">TEXT</name><argument_list pos:line="1235" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="1235" pos:column="44">"."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="1236" pos:column="17">sessionExt</name> <op:operator pos:line="1236" pos:column="28">+=</op:operator> <name pos:line="1236" pos:column="31">ext</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1237" pos:column="17">fDlg</name><op:operator pos:line="1237" pos:column="21">.</op:operator><name pos:line="1237" pos:column="22">setExtFilter</name></name><argument_list pos:line="1237" pos:column="34">(<argument><expr><call><name pos:line="1237" pos:column="35">TEXT</name><argument_list pos:line="1237" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1237" pos:column="40">"Session file"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1237" pos:column="57">sessionExt</name><op:operator pos:line="1237" pos:column="67">.</op:operator><name pos:line="1237" pos:column="68">c_str</name></name><argument_list pos:line="1237" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1237" pos:column="77">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name pos:line="1239" pos:column="9">sessionFileName</name> <op:operator pos:line="1239" pos:column="25">=</op:operator> <call><name><name pos:line="1239" pos:column="27">fDlg</name><op:operator pos:line="1239" pos:column="31">.</op:operator><name pos:line="1239" pos:column="32">doSaveDlg</name></name><argument_list pos:line="1239" pos:column="41">()</argument_list></call></expr>;</expr_stmt>

	<return pos:line="1241" pos:column="9">return <expr><call><name pos:line="1241" pos:column="16">fileSaveSession</name><argument_list pos:line="1241" pos:column="31">(<argument><expr><name pos:line="1241" pos:column="32">nbFile</name></expr></argument>, <argument><expr><name pos:line="1241" pos:column="40">fileNames</name></expr></argument>, <argument><expr><name pos:line="1241" pos:column="51">sessionFileName</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>


<function><type><name pos:line="1245" pos:column="1">void</name></type> <name><name pos:line="1245" pos:column="6">Notepad_plus</name><op:operator pos:line="1245" pos:column="18">::</op:operator><name pos:line="1245" pos:column="20">saveSession</name></name><parameter_list pos:line="1245" pos:column="31">(<param><decl><type><specifier pos:line="1245" pos:column="32">const</specifier> <name pos:line="1245" pos:column="38">Session</name> <type:modifier pos:line="1245" pos:column="46">&amp;</type:modifier></type> <name pos:line="1245" pos:column="48">session</name></decl></param>)</parameter_list>
<block pos:line="1246" pos:column="1">{
	<expr_stmt><expr><op:operator pos:line="1247" pos:column="9">(</op:operator><call><name><name pos:line="1247" pos:column="10">NppParameters</name><op:operator pos:line="1247" pos:column="23">::</op:operator><name pos:line="1247" pos:column="25">getInstance</name></name><argument_list pos:line="1247" pos:column="36">()</argument_list></call><op:operator pos:line="1247" pos:column="38">)</op:operator><op:operator pos:line="1247" pos:column="39">-&gt;</op:operator><call><name pos:line="1247" pos:column="41">writeSession</name><argument_list pos:line="1247" pos:column="53">(<argument><expr><name pos:line="1247" pos:column="54">session</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
