<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\Parameters.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"FileDialog.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"ScintillaEditView.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"keys.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"localization.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"UserDefineDialog.h"</lit:literal></cpp:file></cpp:include>

<struct pos:line="37" pos:column="1">struct <name pos:line="37" pos:column="8">WinMenuKeyDefinition</name> <block pos:line="37" pos:column="29">{<public type="default" pos:line="37" pos:column="30">	<comment type="line" pos:line="37" pos:column="33">//more or less matches accelerator table definition, easy copy/paste</comment>
	<comment type="line" pos:line="38" pos:column="9">//const TCHAR * name;	//name retrieved from menu?</comment>
	<decl_stmt><decl><type><name pos:line="39" pos:column="9">int</name></type> <name pos:line="39" pos:column="13">vKey</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">int</name></type> <name pos:line="40" pos:column="13">functionId</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="41" pos:column="9">bool</name></type> <name pos:line="41" pos:column="14">isCtrl</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">bool</name></type> <name pos:line="42" pos:column="14">isAlt</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="43" pos:column="9">bool</name></type> <name pos:line="43" pos:column="14">isShift</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="44" pos:column="9">TCHAR</name> <type:modifier pos:line="44" pos:column="15">*</type:modifier></type> <name pos:line="44" pos:column="17">specialName</name></decl>;</decl_stmt>		<comment type="line" pos:line="44" pos:column="41">//Used when no real menu name exists (in case of toggle for example)</comment>
</public>}</block>;</struct>


<struct pos:line="48" pos:column="1">struct <name pos:line="48" pos:column="8">ScintillaKeyDefinition</name> <block pos:line="48" pos:column="31">{<public type="default" pos:line="48" pos:column="32">
	<decl_stmt><decl><type><specifier pos:line="49" pos:column="9">const</specifier> <name pos:line="49" pos:column="15">TCHAR</name> <type:modifier pos:line="49" pos:column="21">*</type:modifier></type> <name pos:line="49" pos:column="23">name</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="50" pos:column="9">int</name></type> <name pos:line="50" pos:column="13">functionId</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="51" pos:column="9">bool</name></type> <name pos:line="51" pos:column="14">isCtrl</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="52" pos:column="9">bool</name></type> <name pos:line="52" pos:column="14">isAlt</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="53" pos:column="9">bool</name></type> <name pos:line="53" pos:column="14">isShift</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="54" pos:column="9">int</name></type> <name pos:line="54" pos:column="13">vKey</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="55" pos:column="9">int</name></type> <name pos:line="55" pos:column="13">redirFunctionId</name></decl>;</decl_stmt>	<comment type="line" pos:line="55" pos:column="33">//this gets set  when a function is being redirected through Notepad++ if Scintilla doesnt do it properly :)</comment>
</public>}</block>;</struct>

<decl_stmt><decl><type><name pos:line="58" pos:column="1">WinMenuKeyDefinition</name></type> <name><name pos:line="58" pos:column="22">winKeyDefs</name><index pos:line="58" pos:column="32">[]</index></name> <init pos:line="58" pos:column="35">= <expr><block pos:line="58" pos:column="37">{
<comment type="line" pos:line="59" pos:column="1">//array of accelerator keys for all std menu items, values can be 0 for vKey, which means its unused</comment>
<comment type="line" pos:line="60" pos:column="1">//================================================================================</comment>
<comment type="line" pos:line="61" pos:column="1">//  {V_KEY,		COMMAND_ID,				 			Ctrl,  Alt,   Shift, cmdName},</comment>
<comment type="line" pos:line="62" pos:column="1">//================================================================================</comment>
	<expr><block pos:line="63" pos:column="9">{<expr><name pos:line="63" pos:column="10">VK_N</name></expr>,		<expr><name pos:line="63" pos:column="25">IDM_FILE_NEW</name></expr>,			 			<expr><lit:literal type="boolean" pos:line="63" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="63" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="63" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="63" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="64" pos:column="9">{<expr><name pos:line="64" pos:column="10">VK_O</name></expr>,		<expr><name pos:line="64" pos:column="25">IDM_FILE_OPEN</name></expr>,						<expr><lit:literal type="boolean" pos:line="64" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="64" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="64" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="64" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="65" pos:column="9">{<expr><name pos:line="65" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="65" pos:column="25">IDM_FILE_RELOAD</name></expr>,					<expr><lit:literal type="boolean" pos:line="65" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="65" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="65" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="65" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="66" pos:column="9">{<expr><name pos:line="66" pos:column="10">VK_S</name></expr>,		<expr><name pos:line="66" pos:column="25">IDM_FILE_SAVE</name></expr>,						<expr><lit:literal type="boolean" pos:line="66" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="66" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="66" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="66" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="67" pos:column="9">{<expr><name pos:line="67" pos:column="10">VK_S</name></expr>,		<expr><name pos:line="67" pos:column="25">IDM_FILE_SAVEAS</name></expr>,					<expr><lit:literal type="boolean" pos:line="67" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="67" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="67" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="67" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="68" pos:column="9">{<expr><name pos:line="68" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="68" pos:column="25">IDM_FILE_SAVECOPYAS</name></expr>,				<expr><lit:literal type="boolean" pos:line="68" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="68" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="68" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="68" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="69" pos:column="9">{<expr><name pos:line="69" pos:column="10">VK_S</name></expr>,		<expr><name pos:line="69" pos:column="25">IDM_FILE_SAVEALL</name></expr>,					<expr><lit:literal type="boolean" pos:line="69" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="69" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="69" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="69" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="70" pos:column="9">{<expr><name pos:line="70" pos:column="10">VK_W</name></expr>,	 	<expr><name pos:line="70" pos:column="25">IDM_FILE_CLOSE</name></expr>,						<expr><lit:literal type="boolean" pos:line="70" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="70" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="70" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="70" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="71" pos:column="9">{<expr><name pos:line="71" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="71" pos:column="25">IDM_FILE_CLOSEALL</name></expr>,					<expr><lit:literal type="boolean" pos:line="71" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="71" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="71" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="71" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="72" pos:column="9">{<expr><name pos:line="72" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="72" pos:column="25">IDM_FILE_CLOSEALL_BUT_CURRENT</name></expr>,		<expr><lit:literal type="boolean" pos:line="72" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="72" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="72" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="72" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="73" pos:column="9">{<expr><name pos:line="73" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="73" pos:column="25">IDM_FILE_DELETE</name></expr>,					<expr><lit:literal type="boolean" pos:line="73" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="73" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="73" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="73" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="74" pos:column="9">{<expr><name pos:line="74" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="74" pos:column="25">IDM_FILE_RENAME</name></expr>,					<expr><lit:literal type="boolean" pos:line="74" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="74" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="74" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="74" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="75" pos:column="9">{<expr><name pos:line="75" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="75" pos:column="25">IDM_FILE_LOADSESSION</name></expr>,				<expr><lit:literal type="boolean" pos:line="75" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="75" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="75" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="75" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="76" pos:column="9">{<expr><name pos:line="76" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="76" pos:column="25">IDM_FILE_SAVESESSION</name></expr>,				<expr><lit:literal type="boolean" pos:line="76" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="76" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="76" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="76" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="77" pos:column="9">{<expr><name pos:line="77" pos:column="10">VK_P</name></expr>,		<expr><name pos:line="77" pos:column="25">IDM_FILE_PRINT</name></expr>,						<expr><lit:literal type="boolean" pos:line="77" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="77" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="77" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="77" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="78" pos:column="9">{<expr><name pos:line="78" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="78" pos:column="25">IDM_FILE_PRINTNOW</name></expr>,					<expr><lit:literal type="boolean" pos:line="78" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="78" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="78" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="78" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="79" pos:column="9">{<expr><name pos:line="79" pos:column="10">VK_F4</name></expr>,		<expr><name pos:line="79" pos:column="25">IDM_FILE_EXIT</name></expr>,						<expr><lit:literal type="boolean" pos:line="79" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="79" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="79" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="79" pos:column="102">NULL</name></expr>}</block></expr>,

<comment type="line" pos:line="81" pos:column="1">//	{VK_NULL,	IDM_EDIT_UNDO,		 				false, false, false, NULL},</comment>
<comment type="line" pos:line="82" pos:column="1">//	{VK_NULL,	IDM_EDIT_REDO,		 				false, false, false, NULL},</comment>
<comment type="line" pos:line="83" pos:column="1">//	{VK_NULL,	IDM_EDIT_CUT,		 				false, false, false, NULL},</comment>
<comment type="line" pos:line="84" pos:column="1">//	{VK_NULL,	IDM_EDIT_COPY,		 				false, false, false, NULL},</comment>
<comment type="line" pos:line="85" pos:column="1">//	{VK_NULL,	IDM_EDIT_PASTE,		 				false, false, false, NULL},</comment>
<comment type="line" pos:line="86" pos:column="1">//	{VK_NULL,	IDM_EDIT_DELETE,	 				false, false, false, NULL},</comment>
<comment type="line" pos:line="87" pos:column="1">//	{VK_NULL,	IDM_EDIT_SELECTALL,					false, false, false, NULL},</comment>

	<expr><block pos:line="89" pos:column="9">{<expr><name pos:line="89" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="89" pos:column="25">IDM_EDIT_SETREADONLY</name></expr>,				<expr><lit:literal type="boolean" pos:line="89" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="89" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="89" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="89" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="90" pos:column="9">{<expr><name pos:line="90" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="90" pos:column="25">IDM_EDIT_CLEARREADONLY</name></expr>,				<expr><lit:literal type="boolean" pos:line="90" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="90" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="90" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="90" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="91" pos:column="9">{<expr><name pos:line="91" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="91" pos:column="25">IDM_EDIT_FULLPATHTOCLIP</name></expr>,			<expr><lit:literal type="boolean" pos:line="91" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="91" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="91" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="91" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="92" pos:column="9">{<expr><name pos:line="92" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="92" pos:column="25">IDM_EDIT_FILENAMETOCLIP</name></expr>,			<expr><lit:literal type="boolean" pos:line="92" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="92" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="92" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="92" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="93" pos:column="9">{<expr><name pos:line="93" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="93" pos:column="25">IDM_EDIT_CURRENTDIRTOCLIP</name></expr>,			<expr><lit:literal type="boolean" pos:line="93" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="93" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="93" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="93" pos:column="94">NULL</name></expr>}</block></expr>,
<comment type="line" pos:line="94" pos:column="1">//	{VK_NULL,	IDM_EDIT_INS_TAB,					false, false, false, NULL},</comment>
<comment type="line" pos:line="95" pos:column="1">//	{VK_NULL,	IDM_EDIT_RMV_TAB,					false, false, false, NULL},</comment>
<comment type="line" pos:line="96" pos:column="1">//	{VK_NULL,	IDM_EDIT_DUP_LINE,					false, false, false, NULL},</comment>
	<expr><block pos:line="97" pos:column="9">{<expr><name pos:line="97" pos:column="10">VK_I</name></expr>,		<expr><name pos:line="97" pos:column="25">IDM_EDIT_SPLIT_LINES</name></expr>,		 		<expr><lit:literal type="boolean" pos:line="97" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="97" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="97" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="97" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="98" pos:column="9">{<expr><name pos:line="98" pos:column="10">VK_J</name></expr>,		<expr><name pos:line="98" pos:column="25">IDM_EDIT_JOIN_LINES</name></expr>,		 		<expr><lit:literal type="boolean" pos:line="98" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="98" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="98" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="98" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="99" pos:column="9">{<expr><name pos:line="99" pos:column="10">VK_UP</name></expr>,		<expr><name pos:line="99" pos:column="25">IDM_EDIT_LINE_UP</name></expr>,					<expr><lit:literal type="boolean" pos:line="99" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="99" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="99" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="99" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="100" pos:column="9">{<expr><name pos:line="100" pos:column="10">VK_DOWN</name></expr>,	<expr><name pos:line="100" pos:column="25">IDM_EDIT_LINE_DOWN</name></expr>,					<expr><lit:literal type="boolean" pos:line="100" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="100" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="100" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="100" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="101" pos:column="9">{<expr><name pos:line="101" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="101" pos:column="25">IDM_EDIT_TRIMTRAILING</name></expr>,		 		<expr><lit:literal type="boolean" pos:line="101" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="101" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="101" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="101" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="102" pos:column="9">{<expr><name pos:line="102" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="102" pos:column="25">IDM_EDIT_TRIMLINEHEAD</name></expr>,		 		<expr><lit:literal type="boolean" pos:line="102" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="102" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="102" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="102" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="103" pos:column="9">{<expr><name pos:line="103" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="103" pos:column="25">IDM_EDIT_TRIM_BOTH</name></expr>,			 		<expr><lit:literal type="boolean" pos:line="103" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="103" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="103" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="103" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="104" pos:column="9">{<expr><name pos:line="104" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="104" pos:column="25">IDM_EDIT_EOL2WS</name></expr>,			 		<expr><lit:literal type="boolean" pos:line="104" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="104" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="104" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="104" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="105" pos:column="9">{<expr><name pos:line="105" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="105" pos:column="25">IDM_EDIT_TRIMALL</name></expr>,			 		<expr><lit:literal type="boolean" pos:line="105" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="105" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="105" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="105" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="106" pos:column="9">{<expr><name pos:line="106" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="106" pos:column="25">IDM_EDIT_TAB2SW</name></expr>,			 		<expr><lit:literal type="boolean" pos:line="106" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="106" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="106" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="106" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="107" pos:column="9">{<expr><name pos:line="107" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="107" pos:column="25">IDM_EDIT_SW2TAB_ALL</name></expr>,		 		<expr><lit:literal type="boolean" pos:line="107" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="107" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="107" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="107" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="108" pos:column="9">{<expr><name pos:line="108" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="108" pos:column="25">IDM_EDIT_SW2TAB_LEADING</name></expr>,	 		<expr><lit:literal type="boolean" pos:line="108" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="108" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="108" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="108" pos:column="94">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="110" pos:column="9">{<expr><name pos:line="110" pos:column="10">VK_C</name></expr>,		<expr><name pos:line="110" pos:column="25">IDM_EDIT_COLUMNMODE</name></expr>,				<expr><lit:literal type="boolean" pos:line="110" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="110" pos:column="80">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="110" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="110" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="111" pos:column="9">{<expr><name pos:line="111" pos:column="10">VK_U</name></expr>, 		<expr><name pos:line="111" pos:column="25">IDM_EDIT_UPPERCASE</name></expr>,					<expr><lit:literal type="boolean" pos:line="111" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="111" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="111" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="111" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="112" pos:column="9">{<expr><name pos:line="112" pos:column="10">VK_U</name></expr>, 		<expr><name pos:line="112" pos:column="25">IDM_EDIT_LOWERCASE</name></expr>,					<expr><lit:literal type="boolean" pos:line="112" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="112" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="112" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="112" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="113" pos:column="9">{<expr><name pos:line="113" pos:column="10">VK_Q</name></expr>,		<expr><name pos:line="113" pos:column="25">IDM_EDIT_BLOCK_COMMENT</name></expr>,				<expr><lit:literal type="boolean" pos:line="113" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="113" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="113" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="113" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="114" pos:column="9">{<expr><name pos:line="114" pos:column="10">VK_K</name></expr>,		<expr><name pos:line="114" pos:column="25">IDM_EDIT_BLOCK_COMMENT_SET</name></expr>,			<expr><lit:literal type="boolean" pos:line="114" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="114" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="114" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="114" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="115" pos:column="9">{<expr><name pos:line="115" pos:column="10">VK_K</name></expr>,		<expr><name pos:line="115" pos:column="25">IDM_EDIT_BLOCK_UNCOMMENT</name></expr>,			<expr><lit:literal type="boolean" pos:line="115" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="115" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="115" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="115" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="116" pos:column="9">{<expr><name pos:line="116" pos:column="10">VK_Q</name></expr>,		<expr><name pos:line="116" pos:column="25">IDM_EDIT_STREAM_COMMENT</name></expr>, 			<expr><lit:literal type="boolean" pos:line="116" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="116" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="116" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="116" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="117" pos:column="9">{<expr><name pos:line="117" pos:column="10">VK_SPACE</name></expr>,	<expr><name pos:line="117" pos:column="25">IDM_EDIT_AUTOCOMPLETE</name></expr>,				<expr><lit:literal type="boolean" pos:line="117" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="117" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="117" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="117" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="118" pos:column="9">{<expr><name pos:line="118" pos:column="10">VK_RETURN</name></expr>,	<expr><name pos:line="118" pos:column="25">IDM_EDIT_AUTOCOMPLETE_CURRENTFILE</name></expr>,	<expr><lit:literal type="boolean" pos:line="118" pos:column="65">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="118" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="118" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="118" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="119" pos:column="9">{<expr><name pos:line="119" pos:column="10">VK_SPACE</name></expr>,	<expr><name pos:line="119" pos:column="25">IDM_EDIT_FUNCCALLTIP</name></expr>,				<expr><lit:literal type="boolean" pos:line="119" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="119" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="119" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="119" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="120" pos:column="9">{<expr><name pos:line="120" pos:column="10">VK_R</name></expr>,		<expr><name pos:line="120" pos:column="25">IDM_EDIT_RTL</name></expr>,						<expr><lit:literal type="boolean" pos:line="120" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="120" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="120" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="120" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="121" pos:column="9">{<expr><name pos:line="121" pos:column="10">VK_L</name></expr>,		<expr><name pos:line="121" pos:column="25">IDM_EDIT_LTR</name></expr>,						<expr><lit:literal type="boolean" pos:line="121" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="121" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="121" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="121" pos:column="102">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="123" pos:column="9">{<expr><name pos:line="123" pos:column="10">VK_F</name></expr>,		<expr><name pos:line="123" pos:column="25">IDM_SEARCH_FIND</name></expr>,					<expr><lit:literal type="boolean" pos:line="123" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="123" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="123" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="123" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="124" pos:column="9">{<expr><name pos:line="124" pos:column="10">VK_F</name></expr>,		<expr><name pos:line="124" pos:column="25">IDM_SEARCH_FINDINFILES</name></expr>,				<expr><lit:literal type="boolean" pos:line="124" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="124" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="124" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="124" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="125" pos:column="9">{<expr><name pos:line="125" pos:column="10">VK_F3</name></expr>,		<expr><name pos:line="125" pos:column="25">IDM_SEARCH_FINDNEXT</name></expr>,				<expr><lit:literal type="boolean" pos:line="125" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="125" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="125" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="125" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="126" pos:column="9">{<expr><name pos:line="126" pos:column="10">VK_F3</name></expr>,		<expr><name pos:line="126" pos:column="25">IDM_SEARCH_FINDPREV</name></expr>,				<expr><lit:literal type="boolean" pos:line="126" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="126" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="126" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="126" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="127" pos:column="9">{<expr><name pos:line="127" pos:column="10">VK_F3</name></expr>,		<expr><name pos:line="127" pos:column="25">IDM_SEARCH_VOLATILE_FINDNEXT</name></expr>,		<expr><lit:literal type="boolean" pos:line="127" pos:column="65">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="127" pos:column="72">true</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="127" pos:column="78">false</lit:literal></expr>, <expr><name pos:line="127" pos:column="85">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="128" pos:column="9">{<expr><name pos:line="128" pos:column="10">VK_F3</name></expr>,		<expr><name pos:line="128" pos:column="25">IDM_SEARCH_VOLATILE_FINDPREV</name></expr>,		<expr><lit:literal type="boolean" pos:line="128" pos:column="65">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="128" pos:column="72">true</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="128" pos:column="78">true</lit:literal></expr>,  <expr><name pos:line="128" pos:column="85">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="129" pos:column="5">{<expr><name pos:line="129" pos:column="6">VK_F3</name></expr>,		<expr><name pos:line="129" pos:column="25">IDM_SEARCH_SETANDFINDNEXT</name></expr>,          <expr><lit:literal type="boolean" pos:line="129" pos:column="61">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="129" pos:column="68">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="129" pos:column="75">false</lit:literal></expr>, <expr><name pos:line="129" pos:column="82">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="130" pos:column="9">{<expr><name pos:line="130" pos:column="10">VK_F3</name></expr>,		<expr><name pos:line="130" pos:column="25">IDM_SEARCH_SETANDFINDPREV</name></expr>,          <expr><lit:literal type="boolean" pos:line="130" pos:column="61">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="130" pos:column="68">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="130" pos:column="75">true</lit:literal></expr>,  <expr><name pos:line="130" pos:column="82">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="131" pos:column="9">{<expr><name pos:line="131" pos:column="10">VK_F4</name></expr>,		<expr><name pos:line="131" pos:column="25">IDM_SEARCH_GOTONEXTFOUND</name></expr>,           <expr><lit:literal type="boolean" pos:line="131" pos:column="61">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="131" pos:column="68">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="131" pos:column="75">false</lit:literal></expr>, <expr><name pos:line="131" pos:column="82">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="132" pos:column="9">{<expr><name pos:line="132" pos:column="10">VK_F4</name></expr>,		<expr><name pos:line="132" pos:column="25">IDM_SEARCH_GOTOPREVFOUND</name></expr>,           <expr><lit:literal type="boolean" pos:line="132" pos:column="61">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="132" pos:column="68">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="132" pos:column="75">true</lit:literal></expr>,  <expr><name pos:line="132" pos:column="82">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="133" pos:column="9">{<expr><name pos:line="133" pos:column="10">VK_F7</name></expr>,		<expr><name pos:line="133" pos:column="25">IDM_FOCUS_ON_FOUND_RESULTS</name></expr>,         <expr><lit:literal type="boolean" pos:line="133" pos:column="61">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="133" pos:column="68">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="133" pos:column="75">false</lit:literal></expr>, <expr><name pos:line="133" pos:column="82">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="134" pos:column="9">{<expr><name pos:line="134" pos:column="10">VK_H</name></expr>,		<expr><name pos:line="134" pos:column="25">IDM_SEARCH_REPLACE</name></expr>,					<expr><lit:literal type="boolean" pos:line="134" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="134" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="134" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="134" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="135" pos:column="9">{<expr><name pos:line="135" pos:column="10">VK_I</name></expr>,		<expr><name pos:line="135" pos:column="25">IDM_SEARCH_FINDINCREMENT</name></expr>,			<expr><lit:literal type="boolean" pos:line="135" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="135" pos:column="80">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="135" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="135" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="136" pos:column="9">{<expr><name pos:line="136" pos:column="10">VK_G</name></expr>,		<expr><name pos:line="136" pos:column="25">IDM_SEARCH_GOTOLINE</name></expr>,		 		<expr><lit:literal type="boolean" pos:line="136" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="136" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="136" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="136" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="137" pos:column="9">{<expr><name pos:line="137" pos:column="10">VK_B</name></expr>,		<expr><name pos:line="137" pos:column="25">IDM_SEARCH_GOTOMATCHINGBRACE</name></expr>,		<expr><lit:literal type="boolean" pos:line="137" pos:column="65">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="137" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="137" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="137" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="138" pos:column="9">{<expr><name pos:line="138" pos:column="10">VK_F2</name></expr>,		<expr><name pos:line="138" pos:column="25">IDM_SEARCH_TOGGLE_BOOKMARK</name></expr>,			<expr><lit:literal type="boolean" pos:line="138" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="138" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="138" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="138" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="139" pos:column="9">{<expr><name pos:line="139" pos:column="10">VK_F2</name></expr>,		<expr><name pos:line="139" pos:column="25">IDM_SEARCH_NEXT_BOOKMARK</name></expr>, 			<expr><lit:literal type="boolean" pos:line="139" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="139" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="139" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="139" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="140" pos:column="9">{<expr><name pos:line="140" pos:column="10">VK_F2</name></expr>,		<expr><name pos:line="140" pos:column="25">IDM_SEARCH_PREV_BOOKMARK</name></expr>, 			<expr><lit:literal type="boolean" pos:line="140" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="140" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="140" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="140" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="141" pos:column="9">{<expr><name pos:line="141" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="141" pos:column="25">IDM_SEARCH_CLEAR_BOOKMARKS</name></expr>, 		<expr><lit:literal type="boolean" pos:line="141" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="141" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="141" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="141" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="142" pos:column="9">{<expr><name pos:line="142" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="142" pos:column="25">IDM_SEARCH_CUTMARKEDLINES</name></expr>, 			<expr><lit:literal type="boolean" pos:line="142" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="142" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="142" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="142" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="143" pos:column="9">{<expr><name pos:line="143" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="143" pos:column="25">IDM_SEARCH_COPYMARKEDLINES</name></expr>, 		<expr><lit:literal type="boolean" pos:line="143" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="143" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="143" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="143" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="144" pos:column="9">{<expr><name pos:line="144" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="144" pos:column="25">IDM_SEARCH_PASTEMARKEDLINES</name></expr>, 		<expr><lit:literal type="boolean" pos:line="144" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="144" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="144" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="144" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="145" pos:column="9">{<expr><name pos:line="145" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="145" pos:column="25">IDM_SEARCH_DELETEMARKEDLINES</name></expr>, 		<expr><lit:literal type="boolean" pos:line="145" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="145" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="145" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="145" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="146" pos:column="9">{<expr><name pos:line="146" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="146" pos:column="25">IDM_SEARCH_MARKALLEXT1</name></expr>,			    <expr><lit:literal type="boolean" pos:line="146" pos:column="69">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="146" pos:column="76">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="146" pos:column="83">false</lit:literal></expr>, <expr><name pos:line="146" pos:column="90">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="147" pos:column="9">{<expr><name pos:line="147" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="147" pos:column="25">IDM_SEARCH_MARKALLEXT2</name></expr>,		    	<expr><lit:literal type="boolean" pos:line="147" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="147" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="147" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="147" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="148" pos:column="9">{<expr><name pos:line="148" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="148" pos:column="25">IDM_SEARCH_MARKALLEXT3</name></expr>,			    <expr><lit:literal type="boolean" pos:line="148" pos:column="69">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="148" pos:column="76">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="148" pos:column="83">false</lit:literal></expr>, <expr><name pos:line="148" pos:column="90">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="149" pos:column="9">{<expr><name pos:line="149" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="149" pos:column="25">IDM_SEARCH_MARKALLEXT4</name></expr>, 			<expr><lit:literal type="boolean" pos:line="149" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="149" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="149" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="149" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="150" pos:column="9">{<expr><name pos:line="150" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="150" pos:column="25">IDM_SEARCH_MARKALLEXT5</name></expr>,	    		<expr><lit:literal type="boolean" pos:line="150" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="150" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="150" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="150" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="151" pos:column="9">{<expr><name pos:line="151" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="151" pos:column="25">IDM_SEARCH_UNMARKALLEXT1</name></expr>,	    	<expr><lit:literal type="boolean" pos:line="151" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="151" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="151" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="151" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="152" pos:column="9">{<expr><name pos:line="152" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="152" pos:column="25">IDM_SEARCH_UNMARKALLEXT2</name></expr>,			<expr><lit:literal type="boolean" pos:line="152" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="152" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="152" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="152" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="153" pos:column="9">{<expr><name pos:line="153" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="153" pos:column="25">IDM_SEARCH_UNMARKALLEXT3</name></expr>,			<expr><lit:literal type="boolean" pos:line="153" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="153" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="153" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="153" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="154" pos:column="9">{<expr><name pos:line="154" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="154" pos:column="25">IDM_SEARCH_UNMARKALLEXT4</name></expr>,			<expr><lit:literal type="boolean" pos:line="154" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="154" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="154" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="154" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="155" pos:column="9">{<expr><name pos:line="155" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="155" pos:column="25">IDM_SEARCH_UNMARKALLEXT5</name></expr>,			<expr><lit:literal type="boolean" pos:line="155" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="155" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="155" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="155" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="156" pos:column="9">{<expr><name pos:line="156" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="156" pos:column="25">IDM_SEARCH_CLEARALLMARKS</name></expr>,			<expr><lit:literal type="boolean" pos:line="156" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="156" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="156" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="156" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="157" pos:column="9">{<expr><name pos:line="157" pos:column="10">VK_1</name></expr>,		<expr><name pos:line="157" pos:column="25">IDM_SEARCH_GOPREVMARKER1</name></expr>,			<expr><lit:literal type="boolean" pos:line="157" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="157" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="157" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="157" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="158" pos:column="9">{<expr><name pos:line="158" pos:column="10">VK_2</name></expr>,		<expr><name pos:line="158" pos:column="25">IDM_SEARCH_GOPREVMARKER2</name></expr>,			<expr><lit:literal type="boolean" pos:line="158" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="158" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="158" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="158" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="159" pos:column="9">{<expr><name pos:line="159" pos:column="10">VK_3</name></expr>,		<expr><name pos:line="159" pos:column="25">IDM_SEARCH_GOPREVMARKER3</name></expr>,			<expr><lit:literal type="boolean" pos:line="159" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="159" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="159" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="159" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="160" pos:column="9">{<expr><name pos:line="160" pos:column="10">VK_4</name></expr>,		<expr><name pos:line="160" pos:column="25">IDM_SEARCH_GOPREVMARKER4</name></expr>,			<expr><lit:literal type="boolean" pos:line="160" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="160" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="160" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="160" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="161" pos:column="9">{<expr><name pos:line="161" pos:column="10">VK_5</name></expr>,		<expr><name pos:line="161" pos:column="25">IDM_SEARCH_GOPREVMARKER5</name></expr>,			<expr><lit:literal type="boolean" pos:line="161" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="161" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="161" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="161" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="162" pos:column="9">{<expr><name pos:line="162" pos:column="10">VK_0</name></expr>,		<expr><name pos:line="162" pos:column="25">IDM_SEARCH_GOPREVMARKER_DEF</name></expr>,		<expr><lit:literal type="boolean" pos:line="162" pos:column="65">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="162" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="162" pos:column="79">true</lit:literal></expr>,  <expr><name pos:line="162" pos:column="86">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="164" pos:column="9">{<expr><name pos:line="164" pos:column="10">VK_F11</name></expr>,	<expr><name pos:line="164" pos:column="25">IDM_VIEW_FULLSCREENTOGGLE</name></expr>,			<expr><lit:literal type="boolean" pos:line="164" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="164" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="164" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="164" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="165" pos:column="9">{<expr><name pos:line="165" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="165" pos:column="25">IDM_VIEW_ALWAYSONTOP</name></expr>,				<expr><lit:literal type="boolean" pos:line="165" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="165" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="165" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="165" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="166" pos:column="9">{<expr><name pos:line="166" pos:column="10">VK_F12</name></expr>,	<expr><name pos:line="166" pos:column="25">IDM_VIEW_POSTIT</name></expr>,					<expr><lit:literal type="boolean" pos:line="166" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="166" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="166" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="166" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="167" pos:column="9">{<expr><name pos:line="167" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="167" pos:column="25">IDM_VIEW_TAB_SPACE</name></expr>,					<expr><lit:literal type="boolean" pos:line="167" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="167" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="167" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="167" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="168" pos:column="9">{<expr><name pos:line="168" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="168" pos:column="25">IDM_VIEW_EOL</name></expr>,						<expr><lit:literal type="boolean" pos:line="168" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="168" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="168" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="168" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="169" pos:column="9">{<expr><name pos:line="169" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="169" pos:column="25">IDM_VIEW_ALL_CHARACTERS</name></expr>,			<expr><lit:literal type="boolean" pos:line="169" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="169" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="169" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="169" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="170" pos:column="9">{<expr><name pos:line="170" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="170" pos:column="25">IDM_VIEW_INDENT_GUIDE</name></expr>,				<expr><lit:literal type="boolean" pos:line="170" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="170" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="170" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="170" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="171" pos:column="9">{<expr><name pos:line="171" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="171" pos:column="25">IDM_VIEW_WRAP</name></expr>,						<expr><lit:literal type="boolean" pos:line="171" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="171" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="171" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="171" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="172" pos:column="9">{<expr><name pos:line="172" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="172" pos:column="25">IDM_VIEW_WRAP_SYMBOL</name></expr>,				<expr><lit:literal type="boolean" pos:line="172" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="172" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="172" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="172" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="173" pos:column="9">{<expr><name pos:line="173" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="173" pos:column="25">IDM_LANG_USER_DLG</name></expr>,					<expr><lit:literal type="boolean" pos:line="173" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="173" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="173" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="173" pos:column="102">NULL</name></expr>}</block></expr>,
	<comment type="line" pos:line="174" pos:column="9">// {VK_NULL,	IDM_VIEW_ZOOMIN,					false, false, false, NULL},</comment>
	<comment type="line" pos:line="175" pos:column="9">// {VK_NULL,	IDM_VIEW_ZOOMOUT,					false, false, false, NULL},</comment>
	<comment type="line" pos:line="176" pos:column="9">// {VK_NULL,	IDM_VIEW_ZOOMRESTORE,				false, false, false, NULL},</comment>
	<expr><block pos:line="177" pos:column="9">{<expr><name pos:line="177" pos:column="10">VK_0</name></expr>,		<expr><name pos:line="177" pos:column="25">IDM_VIEW_TOGGLE_FOLDALL</name></expr>, 			<expr><lit:literal type="boolean" pos:line="177" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="177" pos:column="80">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="177" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="177" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="178" pos:column="9">{<expr><name pos:line="178" pos:column="10">VK_F</name></expr>,		<expr><name pos:line="178" pos:column="25">IDM_VIEW_FOLD_CURRENT</name></expr>,				<expr><lit:literal type="boolean" pos:line="178" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="178" pos:column="80">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="178" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="178" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="179" pos:column="9">{<expr><name pos:line="179" pos:column="10">VK_1</name></expr>,		<expr><name pos:line="179" pos:column="25">IDM_VIEW_FOLD_1</name></expr>, 					<expr><lit:literal type="boolean" pos:line="179" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="179" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="179" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="179" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="180" pos:column="9">{<expr><name pos:line="180" pos:column="10">VK_2</name></expr>,		<expr><name pos:line="180" pos:column="25">IDM_VIEW_FOLD_2</name></expr>, 					<expr><lit:literal type="boolean" pos:line="180" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="180" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="180" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="180" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="181" pos:column="9">{<expr><name pos:line="181" pos:column="10">VK_3</name></expr>,		<expr><name pos:line="181" pos:column="25">IDM_VIEW_FOLD_3</name></expr>, 					<expr><lit:literal type="boolean" pos:line="181" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="181" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="181" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="181" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="182" pos:column="9">{<expr><name pos:line="182" pos:column="10">VK_4</name></expr>,		<expr><name pos:line="182" pos:column="25">IDM_VIEW_FOLD_4</name></expr>, 					<expr><lit:literal type="boolean" pos:line="182" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="182" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="182" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="182" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="183" pos:column="9">{<expr><name pos:line="183" pos:column="10">VK_5</name></expr>,		<expr><name pos:line="183" pos:column="25">IDM_VIEW_FOLD_5</name></expr>, 					<expr><lit:literal type="boolean" pos:line="183" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="183" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="183" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="183" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="184" pos:column="9">{<expr><name pos:line="184" pos:column="10">VK_6</name></expr>,		<expr><name pos:line="184" pos:column="25">IDM_VIEW_FOLD_6</name></expr>, 					<expr><lit:literal type="boolean" pos:line="184" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="184" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="184" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="184" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="185" pos:column="9">{<expr><name pos:line="185" pos:column="10">VK_7</name></expr>,		<expr><name pos:line="185" pos:column="25">IDM_VIEW_FOLD_7</name></expr>, 					<expr><lit:literal type="boolean" pos:line="185" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="185" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="185" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="185" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="186" pos:column="9">{<expr><name pos:line="186" pos:column="10">VK_8</name></expr>,		<expr><name pos:line="186" pos:column="25">IDM_VIEW_FOLD_8</name></expr>, 					<expr><lit:literal type="boolean" pos:line="186" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="186" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="186" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="186" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="187" pos:column="9">{<expr><name pos:line="187" pos:column="10">VK_F</name></expr>,		<expr><name pos:line="187" pos:column="25">IDM_VIEW_UNFOLD_CURRENT</name></expr>,			<expr><lit:literal type="boolean" pos:line="187" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="187" pos:column="80">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="187" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="187" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="188" pos:column="9">{<expr><name pos:line="188" pos:column="10">VK_1</name></expr>,		<expr><name pos:line="188" pos:column="25">IDM_VIEW_UNFOLD_1</name></expr>,					<expr><lit:literal type="boolean" pos:line="188" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="188" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="188" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="188" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="189" pos:column="9">{<expr><name pos:line="189" pos:column="10">VK_2</name></expr>,		<expr><name pos:line="189" pos:column="25">IDM_VIEW_UNFOLD_2</name></expr>,					<expr><lit:literal type="boolean" pos:line="189" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="189" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="189" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="189" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="190" pos:column="9">{<expr><name pos:line="190" pos:column="10">VK_3</name></expr>,		<expr><name pos:line="190" pos:column="25">IDM_VIEW_UNFOLD_3</name></expr>,					<expr><lit:literal type="boolean" pos:line="190" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="190" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="190" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="190" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="191" pos:column="9">{<expr><name pos:line="191" pos:column="10">VK_4</name></expr>,		<expr><name pos:line="191" pos:column="25">IDM_VIEW_UNFOLD_4</name></expr>,					<expr><lit:literal type="boolean" pos:line="191" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="191" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="191" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="191" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="192" pos:column="9">{<expr><name pos:line="192" pos:column="10">VK_5</name></expr>,		<expr><name pos:line="192" pos:column="25">IDM_VIEW_UNFOLD_5</name></expr>,					<expr><lit:literal type="boolean" pos:line="192" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="192" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="192" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="192" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="193" pos:column="9">{<expr><name pos:line="193" pos:column="10">VK_6</name></expr>,		<expr><name pos:line="193" pos:column="25">IDM_VIEW_UNFOLD_6</name></expr>,					<expr><lit:literal type="boolean" pos:line="193" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="193" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="193" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="193" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="194" pos:column="9">{<expr><name pos:line="194" pos:column="10">VK_7</name></expr>,		<expr><name pos:line="194" pos:column="25">IDM_VIEW_UNFOLD_7</name></expr>,					<expr><lit:literal type="boolean" pos:line="194" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="194" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="194" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="194" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="195" pos:column="9">{<expr><name pos:line="195" pos:column="10">VK_8</name></expr>,		<expr><name pos:line="195" pos:column="25">IDM_VIEW_UNFOLD_8</name></expr>,					<expr><lit:literal type="boolean" pos:line="195" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="195" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="195" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="195" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="196" pos:column="9">{<expr><name pos:line="196" pos:column="10">VK_0</name></expr>,		<expr><name pos:line="196" pos:column="25">IDM_VIEW_TOGGLE_UNFOLDALL</name></expr>,			<expr><lit:literal type="boolean" pos:line="196" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="196" pos:column="80">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="196" pos:column="87">true</lit:literal></expr>,  <expr><name pos:line="196" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="197" pos:column="9">{<expr><name pos:line="197" pos:column="10">VK_H</name></expr>,		<expr><name pos:line="197" pos:column="25">IDM_VIEW_HIDELINES</name></expr>,					<expr><lit:literal type="boolean" pos:line="197" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="197" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="197" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="197" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="198" pos:column="9">{<expr><name pos:line="198" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="198" pos:column="25">IDM_VIEW_GOTO_ANOTHER_VIEW</name></expr>,			<expr><lit:literal type="boolean" pos:line="198" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="198" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="198" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="198" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="199" pos:column="9">{<expr><name pos:line="199" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="199" pos:column="25">IDM_VIEW_CLONE_TO_ANOTHER_VIEW</name></expr>,		<expr><lit:literal type="boolean" pos:line="199" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="199" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="199" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="199" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="200" pos:column="9">{<expr><name pos:line="200" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="200" pos:column="25">IDM_VIEW_SYNSCROLLV</name></expr>,				<expr><lit:literal type="boolean" pos:line="200" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="200" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="200" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="200" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="201" pos:column="9">{<expr><name pos:line="201" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="201" pos:column="25">IDM_VIEW_SYNSCROLLH</name></expr>,				<expr><lit:literal type="boolean" pos:line="201" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="201" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="201" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="201" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="202" pos:column="9">{<expr><name pos:line="202" pos:column="10">VK_F8</name></expr>,		<expr><name pos:line="202" pos:column="25">IDM_VIEW_SWITCHTO_OTHER_VIEW</name></expr>,		<expr><lit:literal type="boolean" pos:line="202" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="202" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="202" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="202" pos:column="86">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="204" pos:column="9">{<expr><name pos:line="204" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="204" pos:column="25">IDM_FORMAT_TODOS</name></expr>,					<expr><lit:literal type="boolean" pos:line="204" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="204" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="204" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="204" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="205" pos:column="9">{<expr><name pos:line="205" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="205" pos:column="25">IDM_FORMAT_TOUNIX</name></expr>,					<expr><lit:literal type="boolean" pos:line="205" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="205" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="205" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="205" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="206" pos:column="9">{<expr><name pos:line="206" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="206" pos:column="25">IDM_FORMAT_TOMAC</name></expr>,					<expr><lit:literal type="boolean" pos:line="206" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="206" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="206" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="206" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="207" pos:column="9">{<expr><name pos:line="207" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="207" pos:column="25">IDM_FORMAT_ANSI</name></expr>,					<expr><lit:literal type="boolean" pos:line="207" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="207" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="207" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="207" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="208" pos:column="9">{<expr><name pos:line="208" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="208" pos:column="25">IDM_FORMAT_UTF_8</name></expr>,					<expr><lit:literal type="boolean" pos:line="208" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="208" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="208" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="208" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="209" pos:column="9">{<expr><name pos:line="209" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="209" pos:column="25">IDM_FORMAT_AS_UTF_8</name></expr>,				<expr><lit:literal type="boolean" pos:line="209" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="209" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="209" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="209" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="210" pos:column="9">{<expr><name pos:line="210" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="210" pos:column="25">IDM_FORMAT_UCS_2BE</name></expr>,					<expr><lit:literal type="boolean" pos:line="210" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="210" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="210" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="210" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="211" pos:column="9">{<expr><name pos:line="211" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="211" pos:column="25">IDM_FORMAT_UCS_2LE</name></expr>,					<expr><lit:literal type="boolean" pos:line="211" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="211" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="211" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="211" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="212" pos:column="9">{<expr><name pos:line="212" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="212" pos:column="25">IDM_FORMAT_CONV2_ANSI</name></expr>,				<expr><lit:literal type="boolean" pos:line="212" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="212" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="212" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="212" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="213" pos:column="9">{<expr><name pos:line="213" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="213" pos:column="25">IDM_FORMAT_CONV2_AS_UTF_8</name></expr>,			<expr><lit:literal type="boolean" pos:line="213" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="213" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="213" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="213" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="214" pos:column="9">{<expr><name pos:line="214" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="214" pos:column="25">IDM_FORMAT_CONV2_UTF_8</name></expr>,				<expr><lit:literal type="boolean" pos:line="214" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="214" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="214" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="214" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="215" pos:column="9">{<expr><name pos:line="215" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="215" pos:column="25">IDM_FORMAT_CONV2_UCS_2BE</name></expr>,			<expr><lit:literal type="boolean" pos:line="215" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="215" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="215" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="215" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="216" pos:column="9">{<expr><name pos:line="216" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="216" pos:column="25">IDM_FORMAT_CONV2_UCS_2LE</name></expr>,			<expr><lit:literal type="boolean" pos:line="216" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="216" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="216" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="216" pos:column="94">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="217" pos:column="5">{<expr><name pos:line="217" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="217" pos:column="17">IDM_FORMAT_ISO_8859_6</name></expr>,              <expr><lit:literal type="boolean" pos:line="217" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="217" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="217" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="217" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="218" pos:column="5">{<expr><name pos:line="218" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="218" pos:column="17">IDM_FORMAT_WIN_1256</name></expr>,                <expr><lit:literal type="boolean" pos:line="218" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="218" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="218" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="218" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="219" pos:column="5">{<expr><name pos:line="219" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="219" pos:column="17">IDM_FORMAT_ISO_8859_13</name></expr>,             <expr><lit:literal type="boolean" pos:line="219" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="219" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="219" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="219" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="220" pos:column="5">{<expr><name pos:line="220" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="220" pos:column="17">IDM_FORMAT_WIN_1257</name></expr>,                <expr><lit:literal type="boolean" pos:line="220" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="220" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="220" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="220" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="221" pos:column="5">{<expr><name pos:line="221" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="221" pos:column="17">IDM_FORMAT_ISO_8859_14</name></expr>,             <expr><lit:literal type="boolean" pos:line="221" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="221" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="221" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="221" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="222" pos:column="5">{<expr><name pos:line="222" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="222" pos:column="17">IDM_FORMAT_ISO_8859_5</name></expr>,              <expr><lit:literal type="boolean" pos:line="222" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="222" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="222" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="222" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="223" pos:column="5">{<expr><name pos:line="223" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="223" pos:column="17">IDM_FORMAT_MAC_CYRILLIC</name></expr>,            <expr><lit:literal type="boolean" pos:line="223" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="223" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="223" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="223" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="224" pos:column="5">{<expr><name pos:line="224" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="224" pos:column="17">IDM_FORMAT_KOI8R_CYRILLIC</name></expr>,          <expr><lit:literal type="boolean" pos:line="224" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="224" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="224" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="224" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="225" pos:column="5">{<expr><name pos:line="225" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="225" pos:column="17">IDM_FORMAT_KOI8U_CYRILLIC</name></expr>,          <expr><lit:literal type="boolean" pos:line="225" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="225" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="225" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="225" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="226" pos:column="5">{<expr><name pos:line="226" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="226" pos:column="17">IDM_FORMAT_WIN_1251</name></expr>,                <expr><lit:literal type="boolean" pos:line="226" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="226" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="226" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="226" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="227" pos:column="5">{<expr><name pos:line="227" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="227" pos:column="17">IDM_FORMAT_WIN_1250</name></expr>,                <expr><lit:literal type="boolean" pos:line="227" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="227" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="227" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="227" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="228" pos:column="5">{<expr><name pos:line="228" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="228" pos:column="17">IDM_FORMAT_DOS_437</name></expr>,                 <expr><lit:literal type="boolean" pos:line="228" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="228" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="228" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="228" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="229" pos:column="5">{<expr><name pos:line="229" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="229" pos:column="17">IDM_FORMAT_DOS_720</name></expr>,                 <expr><lit:literal type="boolean" pos:line="229" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="229" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="229" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="229" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="230" pos:column="5">{<expr><name pos:line="230" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="230" pos:column="17">IDM_FORMAT_DOS_737</name></expr>,                 <expr><lit:literal type="boolean" pos:line="230" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="230" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="230" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="230" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="231" pos:column="5">{<expr><name pos:line="231" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="231" pos:column="17">IDM_FORMAT_DOS_775</name></expr>,                 <expr><lit:literal type="boolean" pos:line="231" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="231" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="231" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="231" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="232" pos:column="5">{<expr><name pos:line="232" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="232" pos:column="17">IDM_FORMAT_DOS_850</name></expr>,                 <expr><lit:literal type="boolean" pos:line="232" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="232" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="232" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="232" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="233" pos:column="5">{<expr><name pos:line="233" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="233" pos:column="17">IDM_FORMAT_DOS_852</name></expr>,                 <expr><lit:literal type="boolean" pos:line="233" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="233" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="233" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="233" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="234" pos:column="5">{<expr><name pos:line="234" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="234" pos:column="17">IDM_FORMAT_DOS_855</name></expr>,                 <expr><lit:literal type="boolean" pos:line="234" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="234" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="234" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="234" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="235" pos:column="5">{<expr><name pos:line="235" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="235" pos:column="17">IDM_FORMAT_DOS_857</name></expr>,                 <expr><lit:literal type="boolean" pos:line="235" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="235" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="235" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="235" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="236" pos:column="5">{<expr><name pos:line="236" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="236" pos:column="17">IDM_FORMAT_DOS_858</name></expr>,                 <expr><lit:literal type="boolean" pos:line="236" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="236" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="236" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="236" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="237" pos:column="5">{<expr><name pos:line="237" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="237" pos:column="17">IDM_FORMAT_DOS_860</name></expr>,                 <expr><lit:literal type="boolean" pos:line="237" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="237" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="237" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="237" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="238" pos:column="5">{<expr><name pos:line="238" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="238" pos:column="17">IDM_FORMAT_DOS_861</name></expr>,                 <expr><lit:literal type="boolean" pos:line="238" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="238" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="238" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="238" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="239" pos:column="5">{<expr><name pos:line="239" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="239" pos:column="17">IDM_FORMAT_DOS_862</name></expr>,                 <expr><lit:literal type="boolean" pos:line="239" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="239" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="239" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="239" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="240" pos:column="5">{<expr><name pos:line="240" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="240" pos:column="17">IDM_FORMAT_DOS_863</name></expr>,                 <expr><lit:literal type="boolean" pos:line="240" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="240" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="240" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="240" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="241" pos:column="5">{<expr><name pos:line="241" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="241" pos:column="17">IDM_FORMAT_DOS_865</name></expr>,                 <expr><lit:literal type="boolean" pos:line="241" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="241" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="241" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="241" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="242" pos:column="5">{<expr><name pos:line="242" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="242" pos:column="17">IDM_FORMAT_DOS_866</name></expr>,                 <expr><lit:literal type="boolean" pos:line="242" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="242" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="242" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="242" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="243" pos:column="5">{<expr><name pos:line="243" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="243" pos:column="17">IDM_FORMAT_DOS_869</name></expr>,                 <expr><lit:literal type="boolean" pos:line="243" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="243" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="243" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="243" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="244" pos:column="5">{<expr><name pos:line="244" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="244" pos:column="17">IDM_FORMAT_BIG5</name></expr>,                    <expr><lit:literal type="boolean" pos:line="244" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="244" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="244" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="244" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="245" pos:column="5">{<expr><name pos:line="245" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="245" pos:column="17">IDM_FORMAT_GB2312</name></expr>,                  <expr><lit:literal type="boolean" pos:line="245" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="245" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="245" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="245" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="246" pos:column="5">{<expr><name pos:line="246" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="246" pos:column="17">IDM_FORMAT_ISO_8859_2</name></expr>,              <expr><lit:literal type="boolean" pos:line="246" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="246" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="246" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="246" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="247" pos:column="5">{<expr><name pos:line="247" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="247" pos:column="17">IDM_FORMAT_ISO_8859_7</name></expr>,              <expr><lit:literal type="boolean" pos:line="247" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="247" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="247" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="247" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="248" pos:column="5">{<expr><name pos:line="248" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="248" pos:column="17">IDM_FORMAT_WIN_1253</name></expr>,                <expr><lit:literal type="boolean" pos:line="248" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="248" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="248" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="248" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="249" pos:column="5">{<expr><name pos:line="249" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="249" pos:column="17">IDM_FORMAT_ISO_8859_8</name></expr>,              <expr><lit:literal type="boolean" pos:line="249" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="249" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="249" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="249" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="250" pos:column="5">{<expr><name pos:line="250" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="250" pos:column="17">IDM_FORMAT_WIN_1255</name></expr>,                <expr><lit:literal type="boolean" pos:line="250" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="250" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="250" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="250" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="251" pos:column="5">{<expr><name pos:line="251" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="251" pos:column="17">IDM_FORMAT_SHIFT_JIS</name></expr>,               <expr><lit:literal type="boolean" pos:line="251" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="251" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="251" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="251" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="252" pos:column="5">{<expr><name pos:line="252" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="252" pos:column="17">IDM_FORMAT_EUC_KR</name></expr>,                  <expr><lit:literal type="boolean" pos:line="252" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="252" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="252" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="252" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="253" pos:column="5">{<expr><name pos:line="253" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="253" pos:column="17">IDM_FORMAT_ISO_8859_10</name></expr>,             <expr><lit:literal type="boolean" pos:line="253" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="253" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="253" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="253" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="254" pos:column="5">{<expr><name pos:line="254" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="254" pos:column="17">IDM_FORMAT_ISO_8859_15</name></expr>,             <expr><lit:literal type="boolean" pos:line="254" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="254" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="254" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="254" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="255" pos:column="5">{<expr><name pos:line="255" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="255" pos:column="17">IDM_FORMAT_ISO_8859_4</name></expr>,              <expr><lit:literal type="boolean" pos:line="255" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="255" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="255" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="255" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="256" pos:column="5">{<expr><name pos:line="256" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="256" pos:column="17">IDM_FORMAT_ISO_8859_16</name></expr>,             <expr><lit:literal type="boolean" pos:line="256" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="256" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="256" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="256" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="257" pos:column="5">{<expr><name pos:line="257" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="257" pos:column="17">IDM_FORMAT_ISO_8859_3</name></expr>,              <expr><lit:literal type="boolean" pos:line="257" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="257" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="257" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="257" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="258" pos:column="5">{<expr><name pos:line="258" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="258" pos:column="17">IDM_FORMAT_ISO_8859_11</name></expr>,             <expr><lit:literal type="boolean" pos:line="258" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="258" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="258" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="258" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="259" pos:column="5">{<expr><name pos:line="259" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="259" pos:column="17">IDM_FORMAT_TIS_620</name></expr>,                 <expr><lit:literal type="boolean" pos:line="259" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="259" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="259" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="259" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="260" pos:column="5">{<expr><name pos:line="260" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="260" pos:column="17">IDM_FORMAT_ISO_8859_9</name></expr>,              <expr><lit:literal type="boolean" pos:line="260" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="260" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="260" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="260" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="261" pos:column="5">{<expr><name pos:line="261" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="261" pos:column="17">IDM_FORMAT_WIN_1254</name></expr>,                <expr><lit:literal type="boolean" pos:line="261" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="261" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="261" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="261" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="262" pos:column="5">{<expr><name pos:line="262" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="262" pos:column="17">IDM_FORMAT_WIN_1252</name></expr>,                <expr><lit:literal type="boolean" pos:line="262" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="262" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="262" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="262" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="263" pos:column="5">{<expr><name pos:line="263" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="263" pos:column="17">IDM_FORMAT_ISO_8859_1</name></expr>,              <expr><lit:literal type="boolean" pos:line="263" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="263" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="263" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="263" pos:column="74">NULL</name></expr>}</block></expr>,
    <expr><block pos:line="264" pos:column="5">{<expr><name pos:line="264" pos:column="6">VK_NULL</name></expr>,   <expr><name pos:line="264" pos:column="17">IDM_FORMAT_WIN_1258</name></expr>,                <expr><lit:literal type="boolean" pos:line="264" pos:column="53">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="264" pos:column="60">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="264" pos:column="67">false</lit:literal></expr>, <expr><name pos:line="264" pos:column="74">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="266" pos:column="9">{<expr><name pos:line="266" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="266" pos:column="25">IDM_SETTING_PREFERECE</name></expr>,				<expr><lit:literal type="boolean" pos:line="266" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="266" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="266" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="266" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="267" pos:column="9">{<expr><name pos:line="267" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="267" pos:column="25">IDM_LANGSTYLE_CONFIG_DLG</name></expr>,			<expr><lit:literal type="boolean" pos:line="267" pos:column="73">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="267" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="267" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="267" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="268" pos:column="9">{<expr><name pos:line="268" pos:column="10">VK_NULL</name></expr>, 	<expr><name pos:line="268" pos:column="25">IDM_SETTING_SHORTCUT_MAPPER</name></expr>,		<expr><lit:literal type="boolean" pos:line="268" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="268" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="268" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="268" pos:column="86">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="270" pos:column="9">{<expr><name pos:line="270" pos:column="10">VK_R</name></expr>,		<expr><name pos:line="270" pos:column="25">IDC_EDIT_TOGGLEMACRORECORDING</name></expr>,		<expr><lit:literal type="boolean" pos:line="270" pos:column="65">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="270" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="270" pos:column="79">true</lit:literal></expr>,  <macro><name pos:line="270" pos:column="86">TEXT</name><argument_list pos:line="270" pos:column="90">(<argument pos:line="270" pos:column="91">"Toggle macro record"</argument>)</argument_list></macro>}</block></expr>,
	<expr><block pos:line="271" pos:column="9">{<expr><name pos:line="271" pos:column="10">VK_P</name></expr>,		<expr><name pos:line="271" pos:column="25">IDM_MACRO_PLAYBACKRECORDEDMACRO</name></expr>, 	<expr><lit:literal type="boolean" pos:line="271" pos:column="65">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="271" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="271" pos:column="79">true</lit:literal></expr>,  <expr><name pos:line="271" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="272" pos:column="9">{<expr><name pos:line="272" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="272" pos:column="25">IDM_MACRO_SAVECURRENTMACRO</name></expr>, 		<expr><lit:literal type="boolean" pos:line="272" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="272" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="272" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="272" pos:column="86">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="273" pos:column="9">{<expr><name pos:line="273" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="273" pos:column="25">IDM_MACRO_RUNMULTIMACRODLG</name></expr>, 		<expr><lit:literal type="boolean" pos:line="273" pos:column="65">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="273" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="273" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="273" pos:column="86">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="275" pos:column="9">{<expr><name pos:line="275" pos:column="10">VK_F5</name></expr>,		<expr><name pos:line="275" pos:column="25">IDM_EXECUTE</name></expr>,						<expr><lit:literal type="boolean" pos:line="275" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="275" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="275" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="275" pos:column="102">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="277" pos:column="9">{<expr><name pos:line="277" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="277" pos:column="25">IDM_HOMESWEETHOME</name></expr>, 					<expr><lit:literal type="boolean" pos:line="277" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="277" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="277" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="277" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="278" pos:column="9">{<expr><name pos:line="278" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="278" pos:column="25">IDM_PROJECTPAGE</name></expr>, 					<expr><lit:literal type="boolean" pos:line="278" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="278" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="278" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="278" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="279" pos:column="9">{<expr><name pos:line="279" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="279" pos:column="25">IDM_ONLINEHELP</name></expr>, 					<expr><lit:literal type="boolean" pos:line="279" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="279" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="279" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="279" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="280" pos:column="9">{<expr><name pos:line="280" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="280" pos:column="25">IDM_FORUM</name></expr>, 							<expr><lit:literal type="boolean" pos:line="280" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="280" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="280" pos:column="103">false</lit:literal></expr>, <expr><name pos:line="280" pos:column="110">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="281" pos:column="9">{<expr><name pos:line="281" pos:column="10">VK_NULL</name></expr>,	<expr><name pos:line="281" pos:column="25">IDM_PLUGINSHOME</name></expr>, 					<expr><lit:literal type="boolean" pos:line="281" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="281" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="281" pos:column="95">false</lit:literal></expr>, <expr><name pos:line="281" pos:column="102">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="282" pos:column="9">{<expr><name pos:line="282" pos:column="10">VK_F1</name></expr>,		<expr><name pos:line="282" pos:column="25">IDM_ABOUT</name></expr>, 							<expr><lit:literal type="boolean" pos:line="282" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="282" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="282" pos:column="103">false</lit:literal></expr>, <expr><name pos:line="282" pos:column="110">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="283" pos:column="9">{<expr><name pos:line="283" pos:column="10">VK_F1</name></expr>,		<expr><name pos:line="283" pos:column="25">IDM_HELP</name></expr>, 							<expr><lit:literal type="boolean" pos:line="283" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="283" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="283" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="283" pos:column="110">NULL</name></expr>}</block></expr>,

	<expr><block pos:line="285" pos:column="9">{<expr><name pos:line="285" pos:column="10">VK_TAB</name></expr>,	<expr><name pos:line="285" pos:column="25">IDC_PREV_DOC</name></expr>,						<expr><lit:literal type="boolean" pos:line="285" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="285" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="285" pos:column="95">true</lit:literal></expr>, <macro><name pos:line="285" pos:column="101">TEXT</name><argument_list pos:line="285" pos:column="105">(<argument pos:line="285" pos:column="106">"Switch to previous document"</argument>)</argument_list></macro>}</block></expr>,
	<expr><block pos:line="286" pos:column="9">{<expr><name pos:line="286" pos:column="10">VK_TAB</name></expr>,	<expr><name pos:line="286" pos:column="25">IDC_NEXT_DOC</name></expr>,						<expr><lit:literal type="boolean" pos:line="286" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="286" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="286" pos:column="95">false</lit:literal></expr>, <macro><name pos:line="286" pos:column="102">TEXT</name><argument_list pos:line="286" pos:column="106">(<argument pos:line="286" pos:column="107">"Switch to next document"</argument>)</argument_list></macro>}</block></expr>,

	<expr><block pos:line="288" pos:column="9">{<expr><name pos:line="288" pos:column="10">VK_1</name></expr>,		<expr><name pos:line="288" pos:column="25">IDM_SEARCH_GONEXTMARKER1</name></expr>,			<expr><lit:literal type="boolean" pos:line="288" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="288" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="288" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="288" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="289" pos:column="9">{<expr><name pos:line="289" pos:column="10">VK_2</name></expr>,		<expr><name pos:line="289" pos:column="25">IDM_SEARCH_GONEXTMARKER2</name></expr>,			<expr><lit:literal type="boolean" pos:line="289" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="289" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="289" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="289" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="290" pos:column="9">{<expr><name pos:line="290" pos:column="10">VK_3</name></expr>,		<expr><name pos:line="290" pos:column="25">IDM_SEARCH_GONEXTMARKER3</name></expr>,			<expr><lit:literal type="boolean" pos:line="290" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="290" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="290" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="290" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="291" pos:column="9">{<expr><name pos:line="291" pos:column="10">VK_4</name></expr>,		<expr><name pos:line="291" pos:column="25">IDM_SEARCH_GONEXTMARKER4</name></expr>,			<expr><lit:literal type="boolean" pos:line="291" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="291" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="291" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="291" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="292" pos:column="9">{<expr><name pos:line="292" pos:column="10">VK_5</name></expr>,		<expr><name pos:line="292" pos:column="25">IDM_SEARCH_GONEXTMARKER5</name></expr>,			<expr><lit:literal type="boolean" pos:line="292" pos:column="73">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="292" pos:column="80">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="292" pos:column="87">false</lit:literal></expr>, <expr><name pos:line="292" pos:column="94">NULL</name></expr>}</block></expr>,
	<expr><block pos:line="293" pos:column="9">{<expr><name pos:line="293" pos:column="10">VK_0</name></expr>,		<expr><name pos:line="293" pos:column="25">IDM_SEARCH_GONEXTMARKER_DEF</name></expr>,		<expr><lit:literal type="boolean" pos:line="293" pos:column="65">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="293" pos:column="72">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="293" pos:column="79">false</lit:literal></expr>, <expr><name pos:line="293" pos:column="86">NULL</name></expr>}</block></expr>

}</block></expr></init></decl>;</decl_stmt>


<decl_stmt><decl><type><name pos:line="298" pos:column="1">ScintillaKeyDefinition</name></type> <name><name pos:line="298" pos:column="24">scintKeyDefs</name><index pos:line="298" pos:column="36">[]</index></name> <init pos:line="298" pos:column="39">= <expr><block pos:line="298" pos:column="41">{	<comment type="line" pos:line="298" pos:column="49">//array of accelerator keys for all possible scintilla functions, values can be 0 for vKey, which means its unused</comment>
	<expr><block pos:line="299" pos:column="9">{<expr><call><name pos:line="299" pos:column="10">TEXT</name><argument_list pos:line="299" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="299" pos:column="15">"SCI_CUT"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="299" pos:column="65">SCI_CUT</name></expr>,					<expr><lit:literal type="boolean" pos:line="299" pos:column="113">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="299" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="299" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="299" pos:column="134">VK_X</name></expr>, 		<expr><name pos:line="299" pos:column="153">IDM_EDIT_CUT</name></expr>}</block></expr>,
	<expr><block pos:line="300" pos:column="9">{<expr><call><name pos:line="300" pos:column="10">TEXT</name><argument_list pos:line="300" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="300" pos:column="15">""</lit:literal></expr></argument>)</argument_list></call></expr>,							<expr><name pos:line="300" pos:column="73">SCI_CUT</name></expr>,					<expr><lit:literal type="boolean" pos:line="300" pos:column="121">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="300" pos:column="128">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="300" pos:column="135">true</lit:literal></expr>,  <expr><name pos:line="300" pos:column="142">VK_DELETE</name></expr>, <expr><lit:literal type="number" pos:line="300" pos:column="153">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="301" pos:column="9">{<expr><call><name pos:line="301" pos:column="10">TEXT</name><argument_list pos:line="301" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="301" pos:column="15">"SCI_COPY"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="301" pos:column="65">SCI_COPY</name></expr>,					<expr><lit:literal type="boolean" pos:line="301" pos:column="113">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="301" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="301" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="301" pos:column="134">VK_C</name></expr>, 		<expr><name pos:line="301" pos:column="153">IDM_EDIT_COPY</name></expr>}</block></expr>,
	<expr><block pos:line="302" pos:column="9">{<expr><call><name pos:line="302" pos:column="10">TEXT</name><argument_list pos:line="302" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="302" pos:column="15">""</lit:literal></expr></argument>)</argument_list></call></expr>,							<expr><name pos:line="302" pos:column="73">SCI_COPY</name></expr>,					<expr><lit:literal type="boolean" pos:line="302" pos:column="121">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="302" pos:column="128">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="302" pos:column="135">false</lit:literal></expr>, <expr><name pos:line="302" pos:column="142">VK_INSERT</name></expr>, <expr><lit:literal type="number" pos:line="302" pos:column="153">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="303" pos:column="9">{<expr><call><name pos:line="303" pos:column="10">TEXT</name><argument_list pos:line="303" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="303" pos:column="15">"SCI_PASTE"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="303" pos:column="65">SCI_PASTE</name></expr>,					<expr><lit:literal type="boolean" pos:line="303" pos:column="113">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="303" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="303" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="303" pos:column="134">VK_V</name></expr>, 		<expr><name pos:line="303" pos:column="153">IDM_EDIT_PASTE</name></expr>}</block></expr>,
	<expr><block pos:line="304" pos:column="9">{<expr><call><name pos:line="304" pos:column="10">TEXT</name><argument_list pos:line="304" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="304" pos:column="15">""</lit:literal></expr></argument>)</argument_list></call></expr>,							<expr><name pos:line="304" pos:column="73">SCI_PASTE</name></expr>,					<expr><lit:literal type="boolean" pos:line="304" pos:column="121">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="304" pos:column="128">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="304" pos:column="135">true</lit:literal></expr>,  <expr><name pos:line="304" pos:column="142">VK_INSERT</name></expr>, <expr><lit:literal type="number" pos:line="304" pos:column="153">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="305" pos:column="9">{<expr><call><name pos:line="305" pos:column="10">TEXT</name><argument_list pos:line="305" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="305" pos:column="15">"SCI_SELECTALL"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="305" pos:column="57">SCI_SELECTALL</name></expr>,				<expr><lit:literal type="boolean" pos:line="305" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="305" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="305" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="305" pos:column="118">VK_A</name></expr>, 		<expr><name pos:line="305" pos:column="137">IDM_EDIT_SELECTALL</name></expr>}</block></expr>,
	<expr><block pos:line="306" pos:column="9">{<expr><call><name pos:line="306" pos:column="10">TEXT</name><argument_list pos:line="306" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="306" pos:column="15">"SCI_CLEAR"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="306" pos:column="65">SCI_CLEAR</name></expr>,					<expr><lit:literal type="boolean" pos:line="306" pos:column="113">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="306" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="306" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="306" pos:column="134">VK_DELETE</name></expr>, <expr><name pos:line="306" pos:column="145">IDM_EDIT_DELETE</name></expr>}</block></expr>,
	<expr><block pos:line="307" pos:column="9">{<expr><call><name pos:line="307" pos:column="10">TEXT</name><argument_list pos:line="307" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="307" pos:column="15">"SCI_CLEARALL"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="307" pos:column="57">SCI_CLEARALL</name></expr>,				<expr><lit:literal type="boolean" pos:line="307" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="307" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="307" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="307" pos:column="118">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="307" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="308" pos:column="9">{<expr><call><name pos:line="308" pos:column="10">TEXT</name><argument_list pos:line="308" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="308" pos:column="15">"SCI_UNDO"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="308" pos:column="65">SCI_UNDO</name></expr>,					<expr><lit:literal type="boolean" pos:line="308" pos:column="113">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="308" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="308" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="308" pos:column="134">VK_Z</name></expr>, 		<expr><name pos:line="308" pos:column="153">IDM_EDIT_UNDO</name></expr>}</block></expr>,
	<expr><block pos:line="309" pos:column="9">{<expr><call><name pos:line="309" pos:column="10">TEXT</name><argument_list pos:line="309" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="309" pos:column="15">""</lit:literal></expr></argument>)</argument_list></call></expr>,							<expr><name pos:line="309" pos:column="73">SCI_UNDO</name></expr>,					<expr><lit:literal type="boolean" pos:line="309" pos:column="121">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="309" pos:column="128">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="309" pos:column="135">false</lit:literal></expr>, <expr><name pos:line="309" pos:column="142">VK_BACK</name></expr>, 	<expr><lit:literal type="number" pos:line="309" pos:column="153">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="310" pos:column="9">{<expr><call><name pos:line="310" pos:column="10">TEXT</name><argument_list pos:line="310" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="310" pos:column="15">"SCI_REDO"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="310" pos:column="65">SCI_REDO</name></expr>,					<expr><lit:literal type="boolean" pos:line="310" pos:column="113">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="310" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="310" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="310" pos:column="134">VK_Y</name></expr>, 		<expr><name pos:line="310" pos:column="153">IDM_EDIT_REDO</name></expr>}</block></expr>,
	<expr><block pos:line="311" pos:column="9">{<expr><call><name pos:line="311" pos:column="10">TEXT</name><argument_list pos:line="311" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="311" pos:column="15">"SCI_NEWLINE"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="311" pos:column="65">SCI_NEWLINE</name></expr>,				<expr><lit:literal type="boolean" pos:line="311" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="311" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="311" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="311" pos:column="126">VK_RETURN</name></expr>, <expr><lit:literal type="number" pos:line="311" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="312" pos:column="9">{<expr><call><name pos:line="312" pos:column="10">TEXT</name><argument_list pos:line="312" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="312" pos:column="15">""</lit:literal></expr></argument>)</argument_list></call></expr>,							<expr><name pos:line="312" pos:column="73">SCI_NEWLINE</name></expr>,				<expr><lit:literal type="boolean" pos:line="312" pos:column="113">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="312" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="312" pos:column="127">true</lit:literal></expr>,  <expr><name pos:line="312" pos:column="134">VK_RETURN</name></expr>, <expr><lit:literal type="number" pos:line="312" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="313" pos:column="9">{<expr><call><name pos:line="313" pos:column="10">TEXT</name><argument_list pos:line="313" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="313" pos:column="15">"SCI_TAB"</lit:literal></expr></argument>)</argument_list></call></expr>,						<expr><name pos:line="313" pos:column="73">SCI_TAB</name></expr>,					<expr><lit:literal type="boolean" pos:line="313" pos:column="121">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="313" pos:column="128">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="313" pos:column="135">false</lit:literal></expr>, <expr><name pos:line="313" pos:column="142">VK_TAB</name></expr>,	<expr><name pos:line="313" pos:column="153">IDM_EDIT_INS_TAB</name></expr>}</block></expr>,
	<expr><block pos:line="314" pos:column="9">{<expr><call><name pos:line="314" pos:column="10">TEXT</name><argument_list pos:line="314" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="314" pos:column="15">"SCI_BACKTAB"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="314" pos:column="65">SCI_BACKTAB</name></expr>,				<expr><lit:literal type="boolean" pos:line="314" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="314" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="314" pos:column="119">true</lit:literal></expr>,  <expr><name pos:line="314" pos:column="126">VK_TAB</name></expr>,	<expr><name pos:line="314" pos:column="137">IDM_EDIT_RMV_TAB</name></expr>}</block></expr>,
	<expr><block pos:line="315" pos:column="9">{<expr><call><name pos:line="315" pos:column="10">TEXT</name><argument_list pos:line="315" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="315" pos:column="15">"SCI_FORMFEED"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="315" pos:column="57">SCI_FORMFEED</name></expr>,				<expr><lit:literal type="boolean" pos:line="315" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="315" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="315" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="315" pos:column="118">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="315" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="316" pos:column="9">{<expr><call><name pos:line="316" pos:column="10">TEXT</name><argument_list pos:line="316" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="316" pos:column="15">"SCI_ZOOMIN"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="316" pos:column="65">SCI_ZOOMIN</name></expr>,					<expr><lit:literal type="boolean" pos:line="316" pos:column="113">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="316" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="316" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="316" pos:column="134">VK_ADD</name></expr>, 	<expr><name pos:line="316" pos:column="145">IDM_VIEW_ZOOMIN</name></expr>}</block></expr>,
	<expr><block pos:line="317" pos:column="9">{<expr><call><name pos:line="317" pos:column="10">TEXT</name><argument_list pos:line="317" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="317" pos:column="15">"SCI_ZOOMOUT"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="317" pos:column="65">SCI_ZOOMOUT</name></expr>,				<expr><lit:literal type="boolean" pos:line="317" pos:column="105">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="317" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="317" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="317" pos:column="126">VK_SUBTRACT</name></expr>,<expr><name pos:line="317" pos:column="138">IDM_VIEW_ZOOMOUT</name></expr>}</block></expr>,
	<expr><block pos:line="318" pos:column="9">{<expr><call><name pos:line="318" pos:column="10">TEXT</name><argument_list pos:line="318" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="318" pos:column="15">"SCI_SETZOOM"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="318" pos:column="65">SCI_SETZOOM</name></expr>,				<expr><lit:literal type="boolean" pos:line="318" pos:column="105">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="318" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="318" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="318" pos:column="126">VK_DIVIDE</name></expr>,	<expr><name pos:line="318" pos:column="137">IDM_VIEW_ZOOMRESTORE</name></expr>}</block></expr>,
	<expr><block pos:line="319" pos:column="9">{<expr><call><name pos:line="319" pos:column="10">TEXT</name><argument_list pos:line="319" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="319" pos:column="15">"SCI_SELECTIONDUPLICATE"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="319" pos:column="57">SCI_SELECTIONDUPLICATE</name></expr>,		<expr><lit:literal type="boolean" pos:line="319" pos:column="89">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="319" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="319" pos:column="103">false</lit:literal></expr>, <expr><name pos:line="319" pos:column="110">VK_D</name></expr>, 		<expr><name pos:line="319" pos:column="129">IDM_EDIT_DUP_LINE</name></expr>}</block></expr>,
	<expr><block pos:line="320" pos:column="9">{<expr><call><name pos:line="320" pos:column="10">TEXT</name><argument_list pos:line="320" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="320" pos:column="15">"SCI_LINESJOIN"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="320" pos:column="57">SCI_LINESJOIN</name></expr>,				<expr><lit:literal type="boolean" pos:line="320" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="320" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="320" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="320" pos:column="118">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="320" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="321" pos:column="9">{<expr><call><name pos:line="321" pos:column="10">TEXT</name><argument_list pos:line="321" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="321" pos:column="15">"SCI_SCROLLCARET"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="321" pos:column="65">SCI_SCROLLCARET</name></expr>,			<expr><lit:literal type="boolean" pos:line="321" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="321" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="321" pos:column="119">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="321" pos:column="126">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="321" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="322" pos:column="9">{<expr><call><name pos:line="322" pos:column="10">TEXT</name><argument_list pos:line="322" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="322" pos:column="15">"SCI_EDITTOGGLEOVERTYPE"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="322" pos:column="57">SCI_EDITTOGGLEOVERTYPE</name></expr>,		<expr><lit:literal type="boolean" pos:line="322" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="322" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="322" pos:column="103">false</lit:literal></expr>, <expr><name pos:line="322" pos:column="110">VK_INSERT</name></expr>, <expr><lit:literal type="number" pos:line="322" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="323" pos:column="9">{<expr><call><name pos:line="323" pos:column="10">TEXT</name><argument_list pos:line="323" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="323" pos:column="15">"SCI_MOVECARETINSIDEVIEW"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="323" pos:column="57">SCI_MOVECARETINSIDEVIEW</name></expr>,	<expr><lit:literal type="boolean" pos:line="323" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="323" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="323" pos:column="103">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="323" pos:column="110">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="323" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="324" pos:column="9">{<expr><call><name pos:line="324" pos:column="10">TEXT</name><argument_list pos:line="324" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="324" pos:column="15">"SCI_LINEDOWN"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="324" pos:column="57">SCI_LINEDOWN</name></expr>,				<expr><lit:literal type="boolean" pos:line="324" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="324" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="324" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="324" pos:column="118">VK_DOWN</name></expr>,	<expr><lit:literal type="number" pos:line="324" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="325" pos:column="9">{<expr><call><name pos:line="325" pos:column="10">TEXT</name><argument_list pos:line="325" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="325" pos:column="15">"SCI_LINEDOWNEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="325" pos:column="57">SCI_LINEDOWNEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="325" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="325" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="325" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="325" pos:column="118">VK_DOWN</name></expr>,	<expr><lit:literal type="number" pos:line="325" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="326" pos:column="9">{<expr><call><name pos:line="326" pos:column="10">TEXT</name><argument_list pos:line="326" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="326" pos:column="15">"SCI_LINEDOWNRECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="326" pos:column="57">SCI_LINEDOWNRECTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="326" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="326" pos:column="96">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="326" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="326" pos:column="110">VK_DOWN</name></expr>,	<expr><lit:literal type="number" pos:line="326" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="327" pos:column="9">{<expr><call><name pos:line="327" pos:column="10">TEXT</name><argument_list pos:line="327" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="327" pos:column="15">"SCI_LINESCROLLDOWN"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="327" pos:column="57">SCI_LINESCROLLDOWN</name></expr>,			<expr><lit:literal type="boolean" pos:line="327" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="327" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="327" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="327" pos:column="118">VK_DOWN</name></expr>,	<expr><lit:literal type="number" pos:line="327" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="328" pos:column="9">{<expr><call><name pos:line="328" pos:column="10">TEXT</name><argument_list pos:line="328" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="328" pos:column="15">"SCI_LINEUP"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="328" pos:column="65">SCI_LINEUP</name></expr>,					<expr><lit:literal type="boolean" pos:line="328" pos:column="113">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="328" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="328" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="328" pos:column="134">VK_UP</name></expr>,		<expr><lit:literal type="number" pos:line="328" pos:column="153">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="329" pos:column="9">{<expr><call><name pos:line="329" pos:column="10">TEXT</name><argument_list pos:line="329" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="329" pos:column="15">"SCI_LINEUPEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="329" pos:column="57">SCI_LINEUPEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="329" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="329" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="329" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="329" pos:column="118">VK_UP</name></expr>,		<expr><lit:literal type="number" pos:line="329" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="330" pos:column="9">{<expr><call><name pos:line="330" pos:column="10">TEXT</name><argument_list pos:line="330" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="330" pos:column="15">"SCI_LINEUPRECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="330" pos:column="49">SCI_LINEUPRECTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="330" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="330" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="330" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="330" pos:column="102">VK_UP</name></expr>,		<expr><lit:literal type="number" pos:line="330" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="331" pos:column="9">{<expr><call><name pos:line="331" pos:column="10">TEXT</name><argument_list pos:line="331" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="331" pos:column="15">"SCI_LINESCROLLUP"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="331" pos:column="57">SCI_LINESCROLLUP</name></expr>,			<expr><lit:literal type="boolean" pos:line="331" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="331" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="331" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="331" pos:column="118">VK_UP</name></expr>,		<expr><lit:literal type="number" pos:line="331" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="332" pos:column="9">{<expr><call><name pos:line="332" pos:column="10">TEXT</name><argument_list pos:line="332" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="332" pos:column="15">"SCI_PARADOWN"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="332" pos:column="57">SCI_PARADOWN</name></expr>,				<expr><lit:literal type="boolean" pos:line="332" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="332" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="332" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="332" pos:column="118">VK_OEM_6</name></expr>,	<expr><lit:literal type="number" pos:line="332" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="333" pos:column="9">{<expr><call><name pos:line="333" pos:column="10">TEXT</name><argument_list pos:line="333" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="333" pos:column="15">"SCI_PARADOWNEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="333" pos:column="57">SCI_PARADOWNEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="333" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="333" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="333" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="333" pos:column="118">VK_OEM_6</name></expr>,	<expr><lit:literal type="number" pos:line="333" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="334" pos:column="9">{<expr><call><name pos:line="334" pos:column="10">TEXT</name><argument_list pos:line="334" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="334" pos:column="15">"SCI_PARAUP"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="334" pos:column="65">SCI_PARAUP</name></expr>,					<expr><lit:literal type="boolean" pos:line="334" pos:column="113">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="334" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="334" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="334" pos:column="134">VK_OEM_4</name></expr>,	<expr><lit:literal type="number" pos:line="334" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="335" pos:column="9">{<expr><call><name pos:line="335" pos:column="10">TEXT</name><argument_list pos:line="335" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="335" pos:column="15">"SCI_PARAUPEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="335" pos:column="57">SCI_PARAUPEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="335" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="335" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="335" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="335" pos:column="118">VK_OEM_4</name></expr>,	<expr><lit:literal type="number" pos:line="335" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="336" pos:column="9">{<expr><call><name pos:line="336" pos:column="10">TEXT</name><argument_list pos:line="336" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="336" pos:column="15">"SCI_CHARLEFT"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="336" pos:column="57">SCI_CHARLEFT</name></expr>,				<expr><lit:literal type="boolean" pos:line="336" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="336" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="336" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="336" pos:column="118">VK_LEFT</name></expr>,	<expr><lit:literal type="number" pos:line="336" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="337" pos:column="9">{<expr><call><name pos:line="337" pos:column="10">TEXT</name><argument_list pos:line="337" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="337" pos:column="15">"SCI_CHARLEFTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="337" pos:column="57">SCI_CHARLEFTEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="337" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="337" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="337" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="337" pos:column="118">VK_LEFT</name></expr>,	<expr><lit:literal type="number" pos:line="337" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="338" pos:column="9">{<expr><call><name pos:line="338" pos:column="10">TEXT</name><argument_list pos:line="338" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="338" pos:column="15">"SCI_CHARLEFTRECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="338" pos:column="57">SCI_CHARLEFTRECTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="338" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="338" pos:column="96">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="338" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="338" pos:column="110">VK_LEFT</name></expr>,	<expr><lit:literal type="number" pos:line="338" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="339" pos:column="9">{<expr><call><name pos:line="339" pos:column="10">TEXT</name><argument_list pos:line="339" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="339" pos:column="15">"SCI_CHARRIGHT"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="339" pos:column="57">SCI_CHARRIGHT</name></expr>,				<expr><lit:literal type="boolean" pos:line="339" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="339" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="339" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="339" pos:column="118">VK_RIGHT</name></expr>,	<expr><lit:literal type="number" pos:line="339" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="340" pos:column="9">{<expr><call><name pos:line="340" pos:column="10">TEXT</name><argument_list pos:line="340" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="340" pos:column="15">"SCI_CHARRIGHTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="340" pos:column="57">SCI_CHARRIGHTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="340" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="340" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="340" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="340" pos:column="110">VK_RIGHT</name></expr>,	<expr><lit:literal type="number" pos:line="340" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="341" pos:column="9">{<expr><call><name pos:line="341" pos:column="10">TEXT</name><argument_list pos:line="341" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="341" pos:column="15">"SCI_CHARRIGHTRECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="341" pos:column="57">SCI_CHARRIGHTRECTEXTEND</name></expr>,	<expr><lit:literal type="boolean" pos:line="341" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="341" pos:column="96">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="341" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="341" pos:column="110">VK_RIGHT</name></expr>,	<expr><lit:literal type="number" pos:line="341" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="342" pos:column="9">{<expr><call><name pos:line="342" pos:column="10">TEXT</name><argument_list pos:line="342" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="342" pos:column="15">"SCI_WORDLEFT"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="342" pos:column="57">SCI_WORDLEFT</name></expr>,				<expr><lit:literal type="boolean" pos:line="342" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="342" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="342" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="342" pos:column="118">VK_LEFT</name></expr>,	<expr><lit:literal type="number" pos:line="342" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="343" pos:column="9">{<expr><call><name pos:line="343" pos:column="10">TEXT</name><argument_list pos:line="343" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="343" pos:column="15">"SCI_WORDLEFTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="343" pos:column="57">SCI_WORDLEFTEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="343" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="343" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="343" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="343" pos:column="118">VK_LEFT</name></expr>,	<expr><lit:literal type="number" pos:line="343" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="344" pos:column="9">{<expr><call><name pos:line="344" pos:column="10">TEXT</name><argument_list pos:line="344" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="344" pos:column="15">"SCI_WORDRIGHT"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="344" pos:column="57">SCI_WORDRIGHT</name></expr>,				<expr><lit:literal type="boolean" pos:line="344" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="344" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="344" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="344" pos:column="118">VK_RIGHT</name></expr>,	<expr><lit:literal type="number" pos:line="344" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="345" pos:column="9">{<expr><call><name pos:line="345" pos:column="10">TEXT</name><argument_list pos:line="345" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="345" pos:column="15">"SCI_WORDRIGHTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="345" pos:column="57">SCI_WORDRIGHTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="345" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="345" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="345" pos:column="103">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="345" pos:column="110">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="345" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="346" pos:column="9">{<expr><call><name pos:line="346" pos:column="10">TEXT</name><argument_list pos:line="346" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="346" pos:column="15">"SCI_WORDLEFTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="346" pos:column="65">SCI_WORDLEFTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="346" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="346" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="346" pos:column="119">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="346" pos:column="126">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="346" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="347" pos:column="9">{<expr><call><name pos:line="347" pos:column="10">TEXT</name><argument_list pos:line="347" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="347" pos:column="15">"SCI_WORDLEFTENDEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="347" pos:column="49">SCI_WORDLEFTENDEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="347" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="347" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="347" pos:column="95">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="347" pos:column="102">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="347" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="348" pos:column="9">{<expr><call><name pos:line="348" pos:column="10">TEXT</name><argument_list pos:line="348" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="348" pos:column="15">"SCI_WORDRIGHTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="348" pos:column="57">SCI_WORDRIGHTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="348" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="348" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="348" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="348" pos:column="118">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="348" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="349" pos:column="9">{<expr><call><name pos:line="349" pos:column="10">TEXT</name><argument_list pos:line="349" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="349" pos:column="15">"SCI_WORDRIGHTENDEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="349" pos:column="57">SCI_WORDRIGHTENDEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="349" pos:column="89">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="349" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="349" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="349" pos:column="110">VK_RIGHT</name></expr>,	<expr><lit:literal type="number" pos:line="349" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="350" pos:column="9">{<expr><call><name pos:line="350" pos:column="10">TEXT</name><argument_list pos:line="350" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="350" pos:column="15">"SCI_WORDPARTLEFT"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="350" pos:column="57">SCI_WORDPARTLEFT</name></expr>,			<expr><lit:literal type="boolean" pos:line="350" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="350" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="350" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="350" pos:column="118">VK_OEM_2</name></expr>,	<expr><lit:literal type="number" pos:line="350" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="351" pos:column="9">{<expr><call><name pos:line="351" pos:column="10">TEXT</name><argument_list pos:line="351" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="351" pos:column="15">"SCI_WORDPARTLEFTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="351" pos:column="57">SCI_WORDPARTLEFTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="351" pos:column="89">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="351" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="351" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="351" pos:column="110">VK_OEM_2</name></expr>,	<expr><lit:literal type="number" pos:line="351" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="352" pos:column="9">{<expr><call><name pos:line="352" pos:column="10">TEXT</name><argument_list pos:line="352" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="352" pos:column="15">"SCI_WORDPARTRIGHT"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="352" pos:column="57">SCI_WORDPARTRIGHT</name></expr>,			<expr><lit:literal type="boolean" pos:line="352" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="352" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="352" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="352" pos:column="118">VK_OEM_5</name></expr>,	<expr><lit:literal type="number" pos:line="352" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="353" pos:column="9">{<expr><call><name pos:line="353" pos:column="10">TEXT</name><argument_list pos:line="353" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="353" pos:column="15">"SCI_WORDPARTRIGHTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="353" pos:column="57">SCI_WORDPARTRIGHTEXTEND</name></expr>,	<expr><lit:literal type="boolean" pos:line="353" pos:column="89">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="353" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="353" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="353" pos:column="110">VK_OEM_5</name></expr>,	<expr><lit:literal type="number" pos:line="353" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="354" pos:column="9">{<expr><call><name pos:line="354" pos:column="10">TEXT</name><argument_list pos:line="354" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="354" pos:column="15">"SCI_HOME"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="354" pos:column="65">SCI_HOME</name></expr>,					<expr><lit:literal type="boolean" pos:line="354" pos:column="113">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="354" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="354" pos:column="127">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="354" pos:column="134">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="354" pos:column="153">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="355" pos:column="9">{<expr><call><name pos:line="355" pos:column="10">TEXT</name><argument_list pos:line="355" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="355" pos:column="15">"SCI_HOMEEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="355" pos:column="65">SCI_HOMEEXTEND</name></expr>,				<expr><lit:literal type="boolean" pos:line="355" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="355" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="355" pos:column="119">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="355" pos:column="126">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="355" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="356" pos:column="9">{<expr><call><name pos:line="356" pos:column="10">TEXT</name><argument_list pos:line="356" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="356" pos:column="15">"SCI_HOMERECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="356" pos:column="57">SCI_HOMERECTEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="356" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="356" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="356" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="356" pos:column="118">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="356" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="357" pos:column="9">{<expr><call><name pos:line="357" pos:column="10">TEXT</name><argument_list pos:line="357" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="357" pos:column="15">"SCI_HOMEDISPLAY"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="357" pos:column="65">SCI_HOMEDISPLAY</name></expr>,			<expr><lit:literal type="boolean" pos:line="357" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="357" pos:column="112">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="357" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="357" pos:column="126">VK_HOME</name></expr>, 	<expr><lit:literal type="number" pos:line="357" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="358" pos:column="9">{<expr><call><name pos:line="358" pos:column="10">TEXT</name><argument_list pos:line="358" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="358" pos:column="15">"SCI_HOMEDISPLAYEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="358" pos:column="49">SCI_HOMEDISPLAYEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="358" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="358" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="358" pos:column="95">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="358" pos:column="102">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="358" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="359" pos:column="9">{<expr><call><name pos:line="359" pos:column="10">TEXT</name><argument_list pos:line="359" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="359" pos:column="15">"SCI_HOMEWRAP"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="359" pos:column="57">SCI_HOMEWRAP</name></expr>,				<expr><lit:literal type="boolean" pos:line="359" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="359" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="359" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="359" pos:column="118">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="359" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="360" pos:column="9">{<expr><call><name pos:line="360" pos:column="10">TEXT</name><argument_list pos:line="360" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="360" pos:column="15">"SCI_HOMEWRAPEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="360" pos:column="57">SCI_HOMEWRAPEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="360" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="360" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="360" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="360" pos:column="118">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="360" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="361" pos:column="9">{<expr><call><name pos:line="361" pos:column="10">TEXT</name><argument_list pos:line="361" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="361" pos:column="15">"SCI_VCHOME"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="361" pos:column="65">SCI_VCHOME</name></expr>,					<expr><lit:literal type="boolean" pos:line="361" pos:column="113">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="361" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="361" pos:column="127">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="361" pos:column="134">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="361" pos:column="153">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="362" pos:column="9">{<expr><call><name pos:line="362" pos:column="10">TEXT</name><argument_list pos:line="362" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="362" pos:column="15">"SCI_VCHOMEEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="362" pos:column="57">SCI_VCHOMEEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="362" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="362" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="362" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="362" pos:column="118">VK_HOME</name></expr>, 	<expr><lit:literal type="number" pos:line="362" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="363" pos:column="9">{<expr><call><name pos:line="363" pos:column="10">TEXT</name><argument_list pos:line="363" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="363" pos:column="15">"SCI_VCHOMERECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="363" pos:column="49">SCI_VCHOMERECTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="363" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="363" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="363" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="363" pos:column="102">VK_HOME</name></expr>,	<expr><lit:literal type="number" pos:line="363" pos:column="113">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="364" pos:column="9">{<expr><call><name pos:line="364" pos:column="10">TEXT</name><argument_list pos:line="364" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="364" pos:column="15">"SCI_VCHOMEWRAP"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="364" pos:column="65">SCI_VCHOMEWRAP</name></expr>,				<expr><lit:literal type="boolean" pos:line="364" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="364" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="364" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="364" pos:column="126">VK_HOME</name></expr>,	<expr><lit:literal type="number" pos:line="364" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="365" pos:column="9">{<expr><call><name pos:line="365" pos:column="10">TEXT</name><argument_list pos:line="365" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="365" pos:column="15">"SCI_VCHOMEWRAPEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="365" pos:column="49">SCI_VCHOMEWRAPEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="365" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="365" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="365" pos:column="95">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="365" pos:column="102">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="365" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="366" pos:column="9">{<expr><call><name pos:line="366" pos:column="10">TEXT</name><argument_list pos:line="366" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="366" pos:column="15">"SCI_LINEEND"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="366" pos:column="65">SCI_LINEEND</name></expr>,				<expr><lit:literal type="boolean" pos:line="366" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="366" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="366" pos:column="119">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="366" pos:column="126">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="366" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="367" pos:column="9">{<expr><call><name pos:line="367" pos:column="10">TEXT</name><argument_list pos:line="367" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="367" pos:column="15">"SCI_LINEENDEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="367" pos:column="57">SCI_LINEENDEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="367" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="367" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="367" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="367" pos:column="118">VK_END</name></expr>,	<expr><lit:literal type="number" pos:line="367" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="368" pos:column="9">{<expr><call><name pos:line="368" pos:column="10">TEXT</name><argument_list pos:line="368" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="368" pos:column="15">"SCI_LINEENDRECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="368" pos:column="49">SCI_LINEENDRECTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="368" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="368" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="368" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="368" pos:column="102">VK_END</name></expr>,	<expr><lit:literal type="number" pos:line="368" pos:column="113">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="369" pos:column="9">{<expr><call><name pos:line="369" pos:column="10">TEXT</name><argument_list pos:line="369" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="369" pos:column="15">"SCI_LINEENDDISPLAY"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="369" pos:column="57">SCI_LINEENDDISPLAY</name></expr>,			<expr><lit:literal type="boolean" pos:line="369" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="369" pos:column="104">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="369" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="369" pos:column="118">VK_END</name></expr>, 	<expr><lit:literal type="number" pos:line="369" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="370" pos:column="9">{<expr><call><name pos:line="370" pos:column="10">TEXT</name><argument_list pos:line="370" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="370" pos:column="15">"SCI_LINEENDDISPLAYEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>, 	<expr><name pos:line="370" pos:column="49">SCI_LINEENDDISPLAYEXTEND</name></expr>,	<expr><lit:literal type="boolean" pos:line="370" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="370" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="370" pos:column="95">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="370" pos:column="102">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="370" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="371" pos:column="9">{<expr><call><name pos:line="371" pos:column="10">TEXT</name><argument_list pos:line="371" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="371" pos:column="15">"SCI_LINEENDWRAP"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="371" pos:column="65">SCI_LINEENDWRAP</name></expr>,			<expr><lit:literal type="boolean" pos:line="371" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="371" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="371" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="371" pos:column="126">VK_END</name></expr>,	<expr><lit:literal type="number" pos:line="371" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="372" pos:column="9">{<expr><call><name pos:line="372" pos:column="10">TEXT</name><argument_list pos:line="372" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="372" pos:column="15">"SCI_LINEENDWRAPEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="372" pos:column="49">SCI_LINEENDWRAPEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="372" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="372" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="372" pos:column="95">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="372" pos:column="102">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="372" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="373" pos:column="9">{<expr><call><name pos:line="373" pos:column="10">TEXT</name><argument_list pos:line="373" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="373" pos:column="15">"SCI_DOCUMENTSTART"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="373" pos:column="57">SCI_DOCUMENTSTART</name></expr>,			<expr><lit:literal type="boolean" pos:line="373" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="373" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="373" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="373" pos:column="118">VK_HOME</name></expr>, 	<expr><lit:literal type="number" pos:line="373" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="374" pos:column="9">{<expr><call><name pos:line="374" pos:column="10">TEXT</name><argument_list pos:line="374" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="374" pos:column="15">"SCI_DOCUMENTSTARTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="374" pos:column="57">SCI_DOCUMENTSTARTEXTEND</name></expr>,	<expr><lit:literal type="boolean" pos:line="374" pos:column="89">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="374" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="374" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="374" pos:column="110">VK_HOME</name></expr>, 	<expr><lit:literal type="number" pos:line="374" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="375" pos:column="9">{<expr><call><name pos:line="375" pos:column="10">TEXT</name><argument_list pos:line="375" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="375" pos:column="15">"SCI_DOCUMENTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="375" pos:column="65">SCI_DOCUMENTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="375" pos:column="105">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="375" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="375" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="375" pos:column="126">VK_END</name></expr>, 	<expr><lit:literal type="number" pos:line="375" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="376" pos:column="9">{<expr><call><name pos:line="376" pos:column="10">TEXT</name><argument_list pos:line="376" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="376" pos:column="15">"SCI_DOCUMENTENDEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="376" pos:column="49">SCI_DOCUMENTENDEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="376" pos:column="81">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="376" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="376" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="376" pos:column="102">VK_END</name></expr>, 	<expr><lit:literal type="number" pos:line="376" pos:column="113">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="377" pos:column="9">{<expr><call><name pos:line="377" pos:column="10">TEXT</name><argument_list pos:line="377" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="377" pos:column="15">"SCI_PAGEUP"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="377" pos:column="65">SCI_PAGEUP</name></expr>,					<expr><lit:literal type="boolean" pos:line="377" pos:column="113">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="377" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="377" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="377" pos:column="134">VK_PRIOR</name></expr>,	<expr><lit:literal type="number" pos:line="377" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="378" pos:column="9">{<expr><call><name pos:line="378" pos:column="10">TEXT</name><argument_list pos:line="378" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="378" pos:column="15">"SCI_PAGEUPEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="378" pos:column="57">SCI_PAGEUPEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="378" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="378" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="378" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="378" pos:column="118">VK_PRIOR</name></expr>,	<expr><lit:literal type="number" pos:line="378" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="379" pos:column="9">{<expr><call><name pos:line="379" pos:column="10">TEXT</name><argument_list pos:line="379" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="379" pos:column="15">"SCI_PAGEUPRECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="379" pos:column="49">SCI_PAGEUPRECTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="379" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="379" pos:column="88">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="379" pos:column="95">true</lit:literal></expr>,  <expr><name pos:line="379" pos:column="102">VK_PRIOR</name></expr>,	<expr><lit:literal type="number" pos:line="379" pos:column="113">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="380" pos:column="9">{<expr><call><name pos:line="380" pos:column="10">TEXT</name><argument_list pos:line="380" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="380" pos:column="15">"SCI_PAGEDOWN"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="380" pos:column="57">SCI_PAGEDOWN</name></expr>,				<expr><lit:literal type="boolean" pos:line="380" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="380" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="380" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="380" pos:column="118">VK_NEXT</name></expr>, 	<expr><lit:literal type="number" pos:line="380" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="381" pos:column="9">{<expr><call><name pos:line="381" pos:column="10">TEXT</name><argument_list pos:line="381" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="381" pos:column="15">"SCI_PAGEDOWNEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="381" pos:column="57">SCI_PAGEDOWNEXTEND</name></expr>,			<expr><lit:literal type="boolean" pos:line="381" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="381" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="381" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="381" pos:column="118">VK_NEXT</name></expr>, 	<expr><lit:literal type="number" pos:line="381" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="382" pos:column="9">{<expr><call><name pos:line="382" pos:column="10">TEXT</name><argument_list pos:line="382" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="382" pos:column="15">"SCI_PAGEDOWNRECTEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="382" pos:column="57">SCI_PAGEDOWNRECTEXTEND</name></expr>,		<expr><lit:literal type="boolean" pos:line="382" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="382" pos:column="96">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="382" pos:column="103">true</lit:literal></expr>,  <expr><name pos:line="382" pos:column="110">VK_NEXT</name></expr>,	<expr><lit:literal type="number" pos:line="382" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="383" pos:column="9">{<expr><call><name pos:line="383" pos:column="10">TEXT</name><argument_list pos:line="383" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="383" pos:column="15">"SCI_STUTTEREDPAGEUP"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="383" pos:column="57">SCI_STUTTEREDPAGEUP</name></expr>,		<expr><lit:literal type="boolean" pos:line="383" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="383" pos:column="96">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="383" pos:column="103">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="383" pos:column="110">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="383" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="384" pos:column="9">{<expr><call><name pos:line="384" pos:column="10">TEXT</name><argument_list pos:line="384" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="384" pos:column="15">"SCI_STUTTEREDPAGEUPEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>,	<expr><name pos:line="384" pos:column="49">SCI_STUTTEREDPAGEUPEXTEND</name></expr>,	<expr><lit:literal type="boolean" pos:line="384" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="384" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="384" pos:column="95">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="384" pos:column="102">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="384" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="385" pos:column="9">{<expr><call><name pos:line="385" pos:column="10">TEXT</name><argument_list pos:line="385" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="385" pos:column="15">"SCI_STUTTEREDPAGEDOWN"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="385" pos:column="49">SCI_STUTTEREDPAGEDOWN</name></expr>,		<expr><lit:literal type="boolean" pos:line="385" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="385" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="385" pos:column="95">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="385" pos:column="102">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="385" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="386" pos:column="9">{<expr><call><name pos:line="386" pos:column="10">TEXT</name><argument_list pos:line="386" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="386" pos:column="15">"SCI_STUTTEREDPAGEDOWNEXTEND"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><name pos:line="386" pos:column="47">SCI_STUTTEREDPAGEDOWNEXTEND</name></expr>,<expr><lit:literal type="boolean" pos:line="386" pos:column="75">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="386" pos:column="82">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="386" pos:column="89">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="386" pos:column="96">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="386" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="387" pos:column="9">{<expr><call><name pos:line="387" pos:column="10">TEXT</name><argument_list pos:line="387" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="387" pos:column="15">"SCI_DELETEBACK"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="387" pos:column="65">SCI_DELETEBACK</name></expr>,				<expr><lit:literal type="boolean" pos:line="387" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="387" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="387" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="387" pos:column="126">VK_BACK</name></expr>,	<expr><lit:literal type="number" pos:line="387" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="388" pos:column="9">{<expr><call><name pos:line="388" pos:column="10">TEXT</name><argument_list pos:line="388" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="388" pos:column="15">""</lit:literal></expr></argument>)</argument_list></call></expr>,							<expr><name pos:line="388" pos:column="73">SCI_DELETEBACK</name></expr>,				<expr><lit:literal type="boolean" pos:line="388" pos:column="113">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="388" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="388" pos:column="127">true</lit:literal></expr>,  <expr><name pos:line="388" pos:column="134">VK_BACK</name></expr>,	<expr><lit:literal type="number" pos:line="388" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="389" pos:column="9">{<expr><call><name pos:line="389" pos:column="10">TEXT</name><argument_list pos:line="389" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="389" pos:column="15">"SCI_DELETEBACKNOTLINE"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="389" pos:column="49">SCI_DELETEBACKNOTLINE</name></expr>,		<expr><lit:literal type="boolean" pos:line="389" pos:column="81">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="389" pos:column="88">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="389" pos:column="95">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="389" pos:column="102">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="389" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="390" pos:column="9">{<expr><call><name pos:line="390" pos:column="10">TEXT</name><argument_list pos:line="390" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="390" pos:column="15">"SCI_DELWORDLEFT"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="390" pos:column="65">SCI_DELWORDLEFT</name></expr>,			<expr><lit:literal type="boolean" pos:line="390" pos:column="105">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="390" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="390" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="390" pos:column="126">VK_BACK</name></expr>,	<expr><lit:literal type="number" pos:line="390" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="391" pos:column="9">{<expr><call><name pos:line="391" pos:column="10">TEXT</name><argument_list pos:line="391" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="391" pos:column="15">"SCI_DELWORDRIGHT"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="391" pos:column="57">SCI_DELWORDRIGHT</name></expr>,			<expr><lit:literal type="boolean" pos:line="391" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="391" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="391" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="391" pos:column="118">VK_DELETE</name></expr>, <expr><lit:literal type="number" pos:line="391" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="392" pos:column="9">{<expr><call><name pos:line="392" pos:column="10">TEXT</name><argument_list pos:line="392" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="392" pos:column="15">"SCI_DELLINELEFT"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="392" pos:column="65">SCI_DELLINELEFT</name></expr>,			<expr><lit:literal type="boolean" pos:line="392" pos:column="105">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="392" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="392" pos:column="119">true</lit:literal></expr>,  <expr><name pos:line="392" pos:column="126">VK_BACK</name></expr>,	<expr><lit:literal type="number" pos:line="392" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="393" pos:column="9">{<expr><call><name pos:line="393" pos:column="10">TEXT</name><argument_list pos:line="393" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="393" pos:column="15">"SCI_DELLINERIGHT"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="393" pos:column="57">SCI_DELLINERIGHT</name></expr>,			<expr><lit:literal type="boolean" pos:line="393" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="393" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="393" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="393" pos:column="118">VK_DELETE</name></expr>,	<expr><lit:literal type="number" pos:line="393" pos:column="129">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="394" pos:column="9">{<expr><call><name pos:line="394" pos:column="10">TEXT</name><argument_list pos:line="394" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="394" pos:column="15">"SCI_LINEDELETE"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="394" pos:column="65">SCI_LINEDELETE</name></expr>,				<expr><lit:literal type="boolean" pos:line="394" pos:column="105">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="394" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="394" pos:column="119">true</lit:literal></expr>,  <expr><name pos:line="394" pos:column="126">VK_L</name></expr>, 		<expr><lit:literal type="number" pos:line="394" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="395" pos:column="9">{<expr><call><name pos:line="395" pos:column="10">TEXT</name><argument_list pos:line="395" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="395" pos:column="15">"SCI_LINECUT"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="395" pos:column="65">SCI_LINECUT</name></expr>,				<expr><lit:literal type="boolean" pos:line="395" pos:column="105">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="395" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="395" pos:column="119">false</lit:literal></expr>, <expr><name pos:line="395" pos:column="126">VK_L</name></expr>, 		<expr><lit:literal type="number" pos:line="395" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="396" pos:column="9">{<expr><call><name pos:line="396" pos:column="10">TEXT</name><argument_list pos:line="396" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="396" pos:column="15">"SCI_LINECOPY"</lit:literal></expr></argument>)</argument_list></call></expr>,				<expr><name pos:line="396" pos:column="57">SCI_LINECOPY</name></expr>,				<expr><lit:literal type="boolean" pos:line="396" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="396" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="396" pos:column="111">true</lit:literal></expr>,  <expr><name pos:line="396" pos:column="118">VK_T</name></expr>, 		<expr><lit:literal type="number" pos:line="396" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="397" pos:column="9">{<expr><call><name pos:line="397" pos:column="10">TEXT</name><argument_list pos:line="397" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="397" pos:column="15">"SCI_LINETRANSPOSE"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="397" pos:column="57">SCI_LINETRANSPOSE</name></expr>,			<expr><lit:literal type="boolean" pos:line="397" pos:column="97">true</lit:literal></expr>,  <expr><lit:literal type="boolean" pos:line="397" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="397" pos:column="111">false</lit:literal></expr>, <expr><name pos:line="397" pos:column="118">VK_T</name></expr>, 		<expr><lit:literal type="number" pos:line="397" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="398" pos:column="9">{<expr><call><name pos:line="398" pos:column="10">TEXT</name><argument_list pos:line="398" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="398" pos:column="15">"SCI_LINEDUPLICATE"</lit:literal></expr></argument>)</argument_list></call></expr>,			<expr><name pos:line="398" pos:column="57">SCI_LINEDUPLICATE</name></expr>,			<expr><lit:literal type="boolean" pos:line="398" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="398" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="398" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="398" pos:column="118">0</lit:literal></expr>,			<expr><lit:literal type="number" pos:line="398" pos:column="137">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="399" pos:column="9">{<expr><call><name pos:line="399" pos:column="10">TEXT</name><argument_list pos:line="399" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="399" pos:column="15">"SCI_CANCEL"</lit:literal></expr></argument>)</argument_list></call></expr>,					<expr><name pos:line="399" pos:column="65">SCI_CANCEL</name></expr>,					<expr><lit:literal type="boolean" pos:line="399" pos:column="113">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="399" pos:column="120">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="399" pos:column="127">false</lit:literal></expr>, <expr><name pos:line="399" pos:column="134">VK_ESCAPE</name></expr>, <expr><lit:literal type="number" pos:line="399" pos:column="145">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="400" pos:column="9">{<expr><call><name pos:line="400" pos:column="10">TEXT</name><argument_list pos:line="400" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="400" pos:column="15">"SCI_SWAPMAINANCHORCARET"</lit:literal></expr></argument>)</argument_list></call></expr>,	<expr><name pos:line="400" pos:column="49">SCI_SWAPMAINANCHORCARET</name></expr>,			<expr><lit:literal type="boolean" pos:line="400" pos:column="97">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="400" pos:column="104">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="400" pos:column="111">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="400" pos:column="118">0</lit:literal></expr>,	<expr><lit:literal type="number" pos:line="400" pos:column="121">0</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="401" pos:column="9">{<expr><call><name pos:line="401" pos:column="10">TEXT</name><argument_list pos:line="401" pos:column="14">(<argument><expr><lit:literal type="string" pos:line="401" pos:column="15">"SCI_ROTATESELECTION"</lit:literal></expr></argument>)</argument_list></call></expr>,		<expr><name pos:line="401" pos:column="49">SCI_ROTATESELECTION</name></expr>,					<expr><lit:literal type="boolean" pos:line="401" pos:column="105">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="401" pos:column="112">false</lit:literal></expr>, <expr><lit:literal type="boolean" pos:line="401" pos:column="119">false</lit:literal></expr>, <expr><lit:literal type="number" pos:line="401" pos:column="126">0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="401" pos:column="129">0</lit:literal></expr>}</block></expr>

	<comment type="line" pos:line="403" pos:column="9">// {TEXT("SCI_EMPTYUNDOBUFFER"),		SCI_EMPTYUNDOBUFFER,		false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="404" pos:column="9">// {TEXT("SCI_TOGGLECARETSTICKY"),		SCI_TOGGLECARETSTICKY,		false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="405" pos:column="9">// {TEXT("SCI_CALLTIPCANCEL"),			SCI_CALLTIPCANCEL,			false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="406" pos:column="9">// {TEXT("SCI_SETSAVEPOINT"),			SCI_SETSAVEPOINT,			false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="407" pos:column="9">// {TEXT("SCI_CLEARDOCUMENTSTYLE"),	SCI_CLEARDOCUMENTSTYLE,		false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="408" pos:column="9">//</comment>
	<comment type="line" pos:line="409" pos:column="9">//</comment>
	<comment type="line" pos:line="410" pos:column="9">//{TEXT("SCI_CHOOSECARETX"),			SCI_CHOOSECARETX,			false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="411" pos:column="9">// {TEXT("SCI_AUTOCCOMPLETE"),			SCI_AUTOCCOMPLETE,			false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="412" pos:column="9">// {TEXT("SCI_AUTOCCANCEL"),			SCI_AUTOCCANCEL,			false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="413" pos:column="9">// {TEXT("SCI_CLEARREGISTEREDIMAGES"), SCI_CLEARREGISTEREDIMAGES,	false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="414" pos:column="9">// {TEXT("SCI_HOMEDISPLAYEXTEND"),		SCI_HOMEDISPLAYEXTEND,		false, true,  true,  VK_HOME,	0},</comment>
	<comment type="line" pos:line="415" pos:column="9">// {TEXT("SCI_LINEENDDISPLAYEXTEND"),	SCI_LINEENDDISPLAYEXTEND,	false, true,  true,  VK_END,	0},</comment>
	<comment type="line" pos:line="416" pos:column="9">// </comment>
	<comment type="line" pos:line="417" pos:column="9">// {TEXT("SCI_DELWORDRIGHTEND"),		SCI_DELWORDRIGHTEND,		false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="418" pos:column="9">// {TEXT("SCI_LOWERCASE"),				SCI_LOWERCASE,				false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="419" pos:column="9">// {TEXT("SCI_UPPERCASE"),				SCI_UPPERCASE,				false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="420" pos:column="9">// {TEXT("SCI_LOWERCASE"),				SCI_LOWERCASE,				true,  false, false, VK_U, 		0},</comment>
	<comment type="line" pos:line="421" pos:column="9">// {TEXT("SCI_UPPERCASE"),				SCI_UPPERCASE,				true,  false, true,  VK_U, 		0},</comment>
	<comment type="line" pos:line="422" pos:column="9">// </comment>
	<comment type="line" pos:line="423" pos:column="9">// {TEXT("SCI_FORMFEED"),				SCI_FORMFEED,				true,  false, false, VK_L, 		0},</comment>
	<comment type="line" pos:line="424" pos:column="9">// {TEXT("SCI_CLEARALLCMDKEYS"),		SCI_CLEARALLCMDKEYS,		false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="425" pos:column="9">// {TEXT("SCI_STARTRECORD"),			SCI_STARTRECORD,			false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="426" pos:column="9">// {TEXT("SCI_STOPRECORD"),			SCI_STOPRECORD,				false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="427" pos:column="9">// {TEXT("SCI_SEARCHANCHOR"),			SCI_SEARCHANCHOR,			false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="428" pos:column="9">// {TEXT("SCI_TARGETFROMSELECTION"),	SCI_TARGETFROMSELECTION,	false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="429" pos:column="9">// {TEXT("SCI_STYLERESETDEFAULT"),		SCI_STYLERESETDEFAULT,		false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="430" pos:column="9">// {TEXT("SCI_STYLECLEARALL"),			SCI_STYLECLEARALL,			false, false, false, 0,			0},</comment>
	<comment type="line" pos:line="431" pos:column="9">//</comment>
}</block></expr></init></decl>;</decl_stmt>


<function><type><specifier pos:line="435" pos:column="1">static</specifier> <name pos:line="435" pos:column="8">int</name></type> <name pos:line="435" pos:column="12">strVal</name><parameter_list pos:line="435" pos:column="18">(<param><decl><type><specifier pos:line="435" pos:column="19">const</specifier> <name pos:line="435" pos:column="25">TCHAR</name> <type:modifier pos:line="435" pos:column="31">*</type:modifier></type><name pos:line="435" pos:column="32">str</name></decl></param>, <param><decl><type><name pos:line="435" pos:column="37">int</name></type> <name pos:line="435" pos:column="41">base</name></decl></param>)</parameter_list> <block pos:line="435" pos:column="47">{
	<if pos:line="436" pos:column="9">if <condition pos:line="436" pos:column="12">(<expr><op:operator pos:line="436" pos:column="13">!</op:operator><name pos:line="436" pos:column="14">str</name></expr>)</condition><then pos:line="436" pos:column="18"> <return pos:line="436" pos:column="19">return <expr><op:operator pos:line="436" pos:column="26">-</op:operator><lit:literal type="number" pos:line="436" pos:column="27">1</lit:literal></expr>;</return></then></if>
	<if pos:line="437" pos:column="9">if <condition pos:line="437" pos:column="12">(<expr><op:operator pos:line="437" pos:column="13">!</op:operator><name><name pos:line="437" pos:column="14">str</name><index pos:line="437" pos:column="17">[<expr><lit:literal type="number" pos:line="437" pos:column="18">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="437" pos:column="21"> <return pos:line="437" pos:column="22">return <expr><lit:literal type="number" pos:line="437" pos:column="29">0</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="439" pos:column="9">TCHAR</name> <type:modifier pos:line="439" pos:column="15">*</type:modifier></type><name pos:line="439" pos:column="16">finStr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="440" pos:column="9">int</name></type> <name pos:line="440" pos:column="13">result</name> <init pos:line="440" pos:column="20">= <expr><call><name pos:line="440" pos:column="22">generic_strtol</name><argument_list pos:line="440" pos:column="36">(<argument><expr><name pos:line="440" pos:column="37">str</name></expr></argument>, <argument><expr><op:operator pos:line="440" pos:column="42">&amp;</op:operator><name pos:line="440" pos:column="43">finStr</name></expr></argument>, <argument><expr><name pos:line="440" pos:column="51">base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="441" pos:column="9">if <condition pos:line="441" pos:column="12">(<expr><op:operator pos:line="441" pos:column="13">*</op:operator><name pos:line="441" pos:column="14">finStr</name> <op:operator pos:line="441" pos:column="21">!=</op:operator> <lit:literal type="char" pos:line="441" pos:column="24">'\0'</lit:literal></expr>)</condition><then pos:line="441" pos:column="29">
		<return pos:line="442" pos:column="17">return <expr><op:operator pos:line="442" pos:column="24">-</op:operator><lit:literal type="number" pos:line="442" pos:column="25">1</lit:literal></expr>;</return></then></if>
	<return pos:line="443" pos:column="9">return <expr><name pos:line="443" pos:column="16">result</name></expr>;</return>
}</block></function><empty_stmt pos:line="444" pos:column="2">;</empty_stmt>

<function><type><specifier pos:line="446" pos:column="1">static</specifier> <name pos:line="446" pos:column="8">int</name></type> <name pos:line="446" pos:column="12">decStrVal</name><parameter_list pos:line="446" pos:column="21">(<param><decl><type><specifier pos:line="446" pos:column="22">const</specifier> <name pos:line="446" pos:column="28">TCHAR</name> <type:modifier pos:line="446" pos:column="34">*</type:modifier></type><name pos:line="446" pos:column="35">str</name></decl></param>)</parameter_list> <block pos:line="446" pos:column="40">{
	<return pos:line="447" pos:column="9">return <expr><call><name pos:line="447" pos:column="16">strVal</name><argument_list pos:line="447" pos:column="22">(<argument><expr><name pos:line="447" pos:column="23">str</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="447" pos:column="28">10</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
}</block></function><empty_stmt pos:line="448" pos:column="2">;</empty_stmt>

<function><type><specifier pos:line="450" pos:column="1">static</specifier> <name pos:line="450" pos:column="8">int</name></type> <name pos:line="450" pos:column="12">hexStrVal</name><parameter_list pos:line="450" pos:column="21">(<param><decl><type><specifier pos:line="450" pos:column="22">const</specifier> <name pos:line="450" pos:column="28">TCHAR</name> <type:modifier pos:line="450" pos:column="34">*</type:modifier></type><name pos:line="450" pos:column="35">str</name></decl></param>)</parameter_list> <block pos:line="450" pos:column="40">{
	<return pos:line="451" pos:column="9">return <expr><call><name pos:line="451" pos:column="16">strVal</name><argument_list pos:line="451" pos:column="22">(<argument><expr><name pos:line="451" pos:column="23">str</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="451" pos:column="28">16</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
}</block></function><empty_stmt pos:line="452" pos:column="2">;</empty_stmt>

<function><type><specifier pos:line="454" pos:column="1">static</specifier> <name pos:line="454" pos:column="8">int</name></type> <name pos:line="454" pos:column="12">getKwClassFromName</name><parameter_list pos:line="454" pos:column="30">(<param><decl><type><specifier pos:line="454" pos:column="31">const</specifier> <name pos:line="454" pos:column="37">TCHAR</name> <type:modifier pos:line="454" pos:column="43">*</type:modifier></type><name pos:line="454" pos:column="44">str</name></decl></param>)</parameter_list> <block pos:line="454" pos:column="49">{
	<if pos:line="455" pos:column="9">if <condition pos:line="455" pos:column="12">(<expr><op:operator pos:line="455" pos:column="13">!</op:operator><call><name pos:line="455" pos:column="14">lstrcmp</name><argument_list pos:line="455" pos:column="21">(<argument><expr><call><name pos:line="455" pos:column="22">TEXT</name><argument_list pos:line="455" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="455" pos:column="27">"instre1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="455" pos:column="39">str</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="455" pos:column="44"> <return pos:line="455" pos:column="45">return <expr><name pos:line="455" pos:column="52">LANG_INDEX_INSTR</name></expr>;</return></then></if>
	<if pos:line="456" pos:column="9">if <condition pos:line="456" pos:column="12">(<expr><op:operator pos:line="456" pos:column="13">!</op:operator><call><name pos:line="456" pos:column="14">lstrcmp</name><argument_list pos:line="456" pos:column="21">(<argument><expr><call><name pos:line="456" pos:column="22">TEXT</name><argument_list pos:line="456" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="456" pos:column="27">"instre2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="456" pos:column="39">str</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="456" pos:column="44"> <return pos:line="456" pos:column="45">return <expr><name pos:line="456" pos:column="52">LANG_INDEX_INSTR2</name></expr>;</return></then></if>
	<if pos:line="457" pos:column="9">if <condition pos:line="457" pos:column="12">(<expr><op:operator pos:line="457" pos:column="13">!</op:operator><call><name pos:line="457" pos:column="14">lstrcmp</name><argument_list pos:line="457" pos:column="21">(<argument><expr><call><name pos:line="457" pos:column="22">TEXT</name><argument_list pos:line="457" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="457" pos:column="27">"type1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="457" pos:column="37">str</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="457" pos:column="42"> <return pos:line="457" pos:column="43">return <expr><name pos:line="457" pos:column="50">LANG_INDEX_TYPE</name></expr>;</return></then></if>
	<if pos:line="458" pos:column="9">if <condition pos:line="458" pos:column="12">(<expr><op:operator pos:line="458" pos:column="13">!</op:operator><call><name pos:line="458" pos:column="14">lstrcmp</name><argument_list pos:line="458" pos:column="21">(<argument><expr><call><name pos:line="458" pos:column="22">TEXT</name><argument_list pos:line="458" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="458" pos:column="27">"type2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="458" pos:column="37">str</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="458" pos:column="42"> <return pos:line="458" pos:column="43">return <expr><name pos:line="458" pos:column="50">LANG_INDEX_TYPE2</name></expr>;</return></then></if>
	<if pos:line="459" pos:column="9">if <condition pos:line="459" pos:column="12">(<expr><op:operator pos:line="459" pos:column="13">!</op:operator><call><name pos:line="459" pos:column="14">lstrcmp</name><argument_list pos:line="459" pos:column="21">(<argument><expr><call><name pos:line="459" pos:column="22">TEXT</name><argument_list pos:line="459" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="459" pos:column="27">"type3"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="459" pos:column="37">str</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="459" pos:column="42"> <return pos:line="459" pos:column="43">return <expr><name pos:line="459" pos:column="50">LANG_INDEX_TYPE3</name></expr>;</return></then></if>
	<if pos:line="460" pos:column="9">if <condition pos:line="460" pos:column="12">(<expr><op:operator pos:line="460" pos:column="13">!</op:operator><call><name pos:line="460" pos:column="14">lstrcmp</name><argument_list pos:line="460" pos:column="21">(<argument><expr><call><name pos:line="460" pos:column="22">TEXT</name><argument_list pos:line="460" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="460" pos:column="27">"type4"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="460" pos:column="37">str</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="460" pos:column="42"> <return pos:line="460" pos:column="43">return <expr><name pos:line="460" pos:column="50">LANG_INDEX_TYPE4</name></expr>;</return></then></if>
	<if pos:line="461" pos:column="9">if <condition pos:line="461" pos:column="12">(<expr><op:operator pos:line="461" pos:column="13">!</op:operator><call><name pos:line="461" pos:column="14">lstrcmp</name><argument_list pos:line="461" pos:column="21">(<argument><expr><call><name pos:line="461" pos:column="22">TEXT</name><argument_list pos:line="461" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="461" pos:column="27">"type5"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="461" pos:column="37">str</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="461" pos:column="42"> <return pos:line="461" pos:column="43">return <expr><name pos:line="461" pos:column="50">LANG_INDEX_TYPE5</name></expr>;</return></then></if>

	<if pos:line="463" pos:column="9">if <condition pos:line="463" pos:column="12">(<expr><op:operator pos:line="463" pos:column="13">(</op:operator><name><name pos:line="463" pos:column="14">str</name><index pos:line="463" pos:column="17">[<expr><lit:literal type="number" pos:line="463" pos:column="18">1</lit:literal></expr>]</index></name> <op:operator pos:line="463" pos:column="21">==</op:operator> <lit:literal type="char" pos:line="463" pos:column="24">'\0'</lit:literal><op:operator pos:line="463" pos:column="28">)</op:operator> <op:operator pos:line="463" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="463" pos:column="33">(</op:operator><name><name pos:line="463" pos:column="34">str</name><index pos:line="463" pos:column="37">[<expr><lit:literal type="number" pos:line="463" pos:column="38">0</lit:literal></expr>]</index></name> <op:operator pos:line="463" pos:column="41">&gt;=</op:operator> <lit:literal type="char" pos:line="463" pos:column="44">'0'</lit:literal><op:operator pos:line="463" pos:column="47">)</op:operator> <op:operator pos:line="463" pos:column="49">&amp;&amp;</op:operator> <op:operator pos:line="463" pos:column="52">(</op:operator><name><name pos:line="463" pos:column="53">str</name><index pos:line="463" pos:column="56">[<expr><lit:literal type="number" pos:line="463" pos:column="57">0</lit:literal></expr>]</index></name> <op:operator pos:line="463" pos:column="60">&lt;=</op:operator> <lit:literal type="char" pos:line="463" pos:column="63">'8'</lit:literal><op:operator pos:line="463" pos:column="66">)</op:operator></expr>)</condition><then pos:line="463" pos:column="68"> <comment type="line" pos:line="463" pos:column="69">// up to KEYWORDSET_MAX</comment>
		<return pos:line="464" pos:column="17">return <expr><name><name pos:line="464" pos:column="24">str</name><index pos:line="464" pos:column="27">[<expr><lit:literal type="number" pos:line="464" pos:column="28">0</lit:literal></expr>]</index></name> <op:operator pos:line="464" pos:column="31">-</op:operator> <lit:literal type="char" pos:line="464" pos:column="33">'0'</lit:literal></expr>;</return></then></if>

	<return pos:line="466" pos:column="9">return <expr><op:operator pos:line="466" pos:column="16">-</op:operator><lit:literal type="number" pos:line="466" pos:column="17">1</lit:literal></expr>;</return>
}</block></function><empty_stmt pos:line="467" pos:column="2">;</empty_stmt>

<cpp:ifdef pos:line="469" pos:column="1">#<cpp:directive pos:line="469" pos:column="2">ifdef</cpp:directive> <name pos:line="469" pos:column="8">UNICODE</name></cpp:ifdef>
<cpp:include pos:line="470" pos:column="1">#<cpp:directive pos:line="470" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="470" pos:column="10">"localizationString.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="472" pos:column="1">wstring</name></type> <name><name pos:line="472" pos:column="9">LocalizationSwitcher</name><op:operator pos:line="472" pos:column="29">::</op:operator><name pos:line="472" pos:column="31">getLangFromXmlFileName</name></name><parameter_list pos:line="472" pos:column="53">(<param><decl><type><specifier pos:line="472" pos:column="54">const</specifier> <name pos:line="472" pos:column="60">wchar_t</name> <type:modifier pos:line="472" pos:column="68">*</type:modifier></type><name pos:line="472" pos:column="69">fn</name></decl></param>)</parameter_list> <specifier pos:line="472" pos:column="73">const</specifier>
<block pos:line="473" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="474" pos:column="9">size_t</name></type> <name pos:line="474" pos:column="16">nbItem</name> <init pos:line="474" pos:column="23">= <expr><sizeof pos:line="474" pos:column="25">sizeof<argument_list pos:line="474" pos:column="31">(<argument><expr><name pos:line="474" pos:column="32">localizationDefs</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="474" pos:column="49">/</op:operator><sizeof pos:line="474" pos:column="50">sizeof<argument_list pos:line="474" pos:column="56">(<argument><expr><name><name pos:line="474" pos:column="57">LocalizationSwitcher</name><op:operator pos:line="474" pos:column="77">::</op:operator><name pos:line="474" pos:column="79">LocalizationDefinition</name></name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
	<for pos:line="475" pos:column="9">for (<init><decl><type><name pos:line="475" pos:column="14">size_t</name></type> <name pos:line="475" pos:column="21">i</name> <init pos:line="475" pos:column="23">= <expr><lit:literal type="number" pos:line="475" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="475" pos:column="29">i</name> <op:operator pos:line="475" pos:column="31">&lt;</op:operator> <name pos:line="475" pos:column="33">nbItem</name></expr> ;</condition> <incr><expr><name pos:line="475" pos:column="42">i</name><op:operator pos:line="475" pos:column="43">++</op:operator></expr></incr>)
	<block pos:line="476" pos:column="9">{
		<if pos:line="477" pos:column="17">if <condition pos:line="477" pos:column="20">(<expr><call><name pos:line="477" pos:column="21">wcsicmp</name><argument_list pos:line="477" pos:column="28">(<argument><expr><name pos:line="477" pos:column="29">fn</name></expr></argument>, <argument><expr><name><name pos:line="477" pos:column="33">localizationDefs</name><index pos:line="477" pos:column="49">[<expr><name pos:line="477" pos:column="50">i</name></expr>]</index></name><op:operator pos:line="477" pos:column="52">.</op:operator><name pos:line="477" pos:column="53">_xmlFileName</name></expr></argument>)</argument_list></call> <op:operator pos:line="477" pos:column="67">==</op:operator> <lit:literal type="number" pos:line="477" pos:column="70">0</lit:literal></expr>)</condition><then pos:line="477" pos:column="72">
			<return pos:line="478" pos:column="25">return <expr><name><name pos:line="478" pos:column="32">localizationDefs</name><index pos:line="478" pos:column="48">[<expr><name pos:line="478" pos:column="49">i</name></expr>]</index></name><op:operator pos:line="478" pos:column="51">.</op:operator><name pos:line="478" pos:column="52">_langName</name></expr>;</return></then></if>
	}</block></for>
	<return pos:line="480" pos:column="9">return <expr><call><name pos:line="480" pos:column="16">TEXT</name><argument_list pos:line="480" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="480" pos:column="21">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="483" pos:column="1">wstring</name></type> <name><name pos:line="483" pos:column="9">LocalizationSwitcher</name><op:operator pos:line="483" pos:column="29">::</op:operator><name pos:line="483" pos:column="31">getXmlFilePathFromLangName</name></name><parameter_list pos:line="483" pos:column="57">(<param><decl><type><specifier pos:line="483" pos:column="58">const</specifier> <name pos:line="483" pos:column="64">wchar_t</name> <type:modifier pos:line="483" pos:column="72">*</type:modifier></type><name pos:line="483" pos:column="73">langName</name></decl></param>)</parameter_list> <specifier pos:line="483" pos:column="83">const</specifier>
<block pos:line="484" pos:column="1">{
	<for pos:line="485" pos:column="9">for (<init><decl><type><name pos:line="485" pos:column="14">size_t</name></type> <name pos:line="485" pos:column="21">i</name> <init pos:line="485" pos:column="23">= <expr><lit:literal type="number" pos:line="485" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="485" pos:column="29">i</name> <op:operator pos:line="485" pos:column="31">&lt;</op:operator> <call><name><name pos:line="485" pos:column="33">_localizationList</name><op:operator pos:line="485" pos:column="50">.</op:operator><name pos:line="485" pos:column="51">size</name></name><argument_list pos:line="485" pos:column="55">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="485" pos:column="60">i</name><op:operator pos:line="485" pos:column="61">++</op:operator></expr></incr>)
	<block pos:line="486" pos:column="9">{
		<if pos:line="487" pos:column="17">if <condition pos:line="487" pos:column="20">(<expr><call><name pos:line="487" pos:column="21">wcsicmp</name><argument_list pos:line="487" pos:column="28">(<argument><expr><name pos:line="487" pos:column="29">langName</name></expr></argument>, <argument><expr><name><name pos:line="487" pos:column="39">_localizationList</name><index pos:line="487" pos:column="56">[<expr><name pos:line="487" pos:column="57">i</name></expr>]</index></name><op:operator pos:line="487" pos:column="59">.</op:operator><call><name><name pos:line="487" pos:column="60">first</name><op:operator pos:line="487" pos:column="65">.</op:operator><name pos:line="487" pos:column="66">c_str</name></name><argument_list pos:line="487" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="487" pos:column="75">==</op:operator> <lit:literal type="number" pos:line="487" pos:column="78">0</lit:literal></expr>)</condition><then pos:line="487" pos:column="80">
			<return pos:line="488" pos:column="25">return <expr><name><name pos:line="488" pos:column="32">_localizationList</name><index pos:line="488" pos:column="49">[<expr><name pos:line="488" pos:column="50">i</name></expr>]</index></name><op:operator pos:line="488" pos:column="52">.</op:operator><name pos:line="488" pos:column="53">second</name></expr>;</return></then></if>
	}</block></for>
	<return pos:line="490" pos:column="9">return <expr><call><name pos:line="490" pos:column="16">TEXT</name><argument_list pos:line="490" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="490" pos:column="21">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="493" pos:column="1">bool</name></type> <name><name pos:line="493" pos:column="6">LocalizationSwitcher</name><op:operator pos:line="493" pos:column="26">::</op:operator><name pos:line="493" pos:column="28">addLanguageFromXml</name></name><parameter_list pos:line="493" pos:column="46">(<param><decl><type><name pos:line="493" pos:column="47">wstring</name></type> <name pos:line="493" pos:column="55">xmlFullPath</name></decl></param>)</parameter_list>
<block pos:line="494" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="495" pos:column="9">wchar_t</name> <type:modifier pos:line="495" pos:column="17">*</type:modifier></type> <name pos:line="495" pos:column="19">fn</name> <init pos:line="495" pos:column="22">= <expr><call><name><op:operator pos:line="495" pos:column="24">::</op:operator><name pos:line="495" pos:column="26">PathFindFileNameW</name></name><argument_list pos:line="495" pos:column="43">(<argument><expr><call><name><name pos:line="495" pos:column="44">xmlFullPath</name><op:operator pos:line="495" pos:column="55">.</op:operator><name pos:line="495" pos:column="56">c_str</name></name><argument_list pos:line="495" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="496" pos:column="9">wstring</name></type> <name pos:line="496" pos:column="17">foundLang</name> <init pos:line="496" pos:column="27">= <expr><call><name pos:line="496" pos:column="29">getLangFromXmlFileName</name><argument_list pos:line="496" pos:column="51">(<argument><expr><name pos:line="496" pos:column="52">fn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="497" pos:column="9">if <condition pos:line="497" pos:column="12">(<expr><name pos:line="497" pos:column="13">foundLang</name> <op:operator pos:line="497" pos:column="23">!=</op:operator> <call><name pos:line="497" pos:column="26">TEXT</name><argument_list pos:line="497" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="497" pos:column="31">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="497" pos:column="35">
	<block pos:line="498" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="499" pos:column="17">_localizationList</name><op:operator pos:line="499" pos:column="34">.</op:operator><name pos:line="499" pos:column="35">push_back</name></name><argument_list pos:line="499" pos:column="44">(<argument><expr><call><name><name pos:line="499" pos:column="45">pair</name><argument_list pos:line="499" pos:column="49">&lt;<argument><expr><name pos:line="499" pos:column="50">wstring</name></expr></argument>, <argument><expr><name pos:line="499" pos:column="59">wstring</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="499" pos:column="67">(<argument><expr><name pos:line="499" pos:column="68">foundLang</name></expr></argument>, <argument><expr><name pos:line="499" pos:column="79">xmlFullPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="500" pos:column="17">return <expr><lit:literal type="boolean" pos:line="500" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="502" pos:column="9">return <expr><lit:literal type="boolean" pos:line="502" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="505" pos:column="1">bool</name></type> <name><name pos:line="505" pos:column="6">LocalizationSwitcher</name><op:operator pos:line="505" pos:column="26">::</op:operator><name pos:line="505" pos:column="28">switchToLang</name></name><parameter_list pos:line="505" pos:column="40">(<param><decl><type><name pos:line="505" pos:column="41">wchar_t</name> <type:modifier pos:line="505" pos:column="49">*</type:modifier></type><name pos:line="505" pos:column="50">lang2switch</name></decl></param>)</parameter_list> <specifier pos:line="505" pos:column="63">const</specifier>
<block pos:line="506" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="507" pos:column="9">wstring</name></type> <name pos:line="507" pos:column="17">langPath</name> <init pos:line="507" pos:column="26">= <expr><call><name pos:line="507" pos:column="28">getXmlFilePathFromLangName</name><argument_list pos:line="507" pos:column="54">(<argument><expr><name pos:line="507" pos:column="55">lang2switch</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="508" pos:column="9">if <condition pos:line="508" pos:column="12">(<expr><name pos:line="508" pos:column="13">langPath</name> <op:operator pos:line="508" pos:column="22">==</op:operator> <call><name pos:line="508" pos:column="25">TEXT</name><argument_list pos:line="508" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="508" pos:column="30">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="508" pos:column="34">
		<return pos:line="509" pos:column="17">return <expr><lit:literal type="boolean" pos:line="509" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<return pos:line="511" pos:column="9">return <expr><call><name><op:operator pos:line="511" pos:column="16">::</op:operator><name pos:line="511" pos:column="18">CopyFileW</name></name><argument_list pos:line="511" pos:column="27">(<argument><expr><call><name><name pos:line="511" pos:column="28">langPath</name><op:operator pos:line="511" pos:column="36">.</op:operator><name pos:line="511" pos:column="37">c_str</name></name><argument_list pos:line="511" pos:column="42">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="511" pos:column="46">_nativeLangPath</name><op:operator pos:line="511" pos:column="61">.</op:operator><name pos:line="511" pos:column="62">c_str</name></name><argument_list pos:line="511" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="511" pos:column="71">FALSE</name></expr></argument>)</argument_list></call> <op:operator pos:line="511" pos:column="78">!=</op:operator> <name pos:line="511" pos:column="81">FALSE</name></expr>;</return>
}</block></function>

<cpp:endif pos:line="514" pos:column="1">#<cpp:directive pos:line="514" pos:column="2">endif</cpp:directive></cpp:endif>


<function><type><name pos:line="517" pos:column="1">generic_string</name></type> <name><name pos:line="517" pos:column="16">ThemeSwitcher</name><op:operator pos:line="517" pos:column="29">::</op:operator><name pos:line="517" pos:column="31">getThemeFromXmlFileName</name></name><parameter_list pos:line="517" pos:column="54">(<param><decl><type><specifier pos:line="517" pos:column="55">const</specifier> <name pos:line="517" pos:column="61">TCHAR</name> <type:modifier pos:line="517" pos:column="67">*</type:modifier></type><name pos:line="517" pos:column="68">xmlFullPath</name></decl></param>)</parameter_list> <specifier pos:line="517" pos:column="81">const</specifier>
<block pos:line="518" pos:column="1">{
	<if pos:line="519" pos:column="9">if <condition pos:line="519" pos:column="12">(<expr><op:operator pos:line="519" pos:column="13">!</op:operator><name pos:line="519" pos:column="14">xmlFullPath</name> <op:operator pos:line="519" pos:column="26">||</op:operator> <op:operator pos:line="519" pos:column="29">!</op:operator><name><name pos:line="519" pos:column="30">xmlFullPath</name><index pos:line="519" pos:column="41">[<expr><lit:literal type="number" pos:line="519" pos:column="42">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="519" pos:column="45">
		<return pos:line="520" pos:column="17">return <expr><call><name pos:line="520" pos:column="24">TEXT</name><argument_list pos:line="520" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="520" pos:column="29">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="521" pos:column="9">generic_string</name></type> <name pos:line="521" pos:column="24">fn</name><argument_list pos:line="521" pos:column="26">(<argument><expr><call><name><op:operator pos:line="521" pos:column="27">::</op:operator><name pos:line="521" pos:column="29">PathFindFileName</name></name><argument_list pos:line="521" pos:column="45">(<argument><expr><name pos:line="521" pos:column="46">xmlFullPath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="522" pos:column="9">PathRemoveExtension</name><argument_list pos:line="522" pos:column="28">(<argument><expr><op:operator pos:line="522" pos:column="29">(</op:operator><name pos:line="522" pos:column="30">TCHAR</name> <op:operator pos:line="522" pos:column="36">*</op:operator><op:operator pos:line="522" pos:column="37">)</op:operator><call><name><name pos:line="522" pos:column="38">fn</name><op:operator pos:line="522" pos:column="40">.</op:operator><name pos:line="522" pos:column="41">c_str</name></name><argument_list pos:line="522" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="523" pos:column="9">return <expr><call><name><name pos:line="523" pos:column="16">fn</name><op:operator pos:line="523" pos:column="18">.</op:operator><name pos:line="523" pos:column="19">c_str</name></name><argument_list pos:line="523" pos:column="24">()</argument_list></call></expr>;</return>
}</block></function>

<typedef pos:line="526" pos:column="1">typedef <function_decl><type><name pos:line="526" pos:column="9">void</name></type> (<name pos:line="526" pos:column="15">WINAPI</name> <type:modifier pos:line="526" pos:column="22">*</type:modifier><name pos:line="526" pos:column="23">PGNSI</name>)<parameter_list pos:line="526" pos:column="29">(<param><decl><type><name pos:line="526" pos:column="30">LPSYSTEM_INFO</name></type></decl></param>)</parameter_list>;</function_decl></typedef>

<function><type><name pos:line="528" pos:column="1">winVer</name></type> <name pos:line="528" pos:column="8">getWindowsVersion</name><parameter_list pos:line="528" pos:column="25">()</parameter_list>
<block pos:line="529" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="530" pos:column="9">OSVERSIONINFOEX</name></type> <name pos:line="530" pos:column="25">osvi</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="531" pos:column="9">SYSTEM_INFO</name></type> <name pos:line="531" pos:column="21">si</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="532" pos:column="9">PGNSI</name></type> <name pos:line="532" pos:column="15">pGNSI</name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="534" pos:column="9">ZeroMemory</name><argument_list pos:line="534" pos:column="19">(<argument><expr><op:operator pos:line="534" pos:column="20">&amp;</op:operator><name pos:line="534" pos:column="21">si</name></expr></argument>, <argument><expr><sizeof pos:line="534" pos:column="25">sizeof<argument_list pos:line="534" pos:column="31">(<argument><expr><name pos:line="534" pos:column="32">SYSTEM_INFO</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="535" pos:column="9">ZeroMemory</name><argument_list pos:line="535" pos:column="19">(<argument><expr><op:operator pos:line="535" pos:column="20">&amp;</op:operator><name pos:line="535" pos:column="21">osvi</name></expr></argument>, <argument><expr><sizeof pos:line="535" pos:column="27">sizeof<argument_list pos:line="535" pos:column="33">(<argument><expr><name pos:line="535" pos:column="34">OSVERSIONINFOEX</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="537" pos:column="9">osvi</name><op:operator pos:line="537" pos:column="13">.</op:operator><name pos:line="537" pos:column="14">dwOSVersionInfoSize</name></name> <op:operator pos:line="537" pos:column="34">=</op:operator> <sizeof pos:line="537" pos:column="36">sizeof<argument_list pos:line="537" pos:column="42">(<argument><expr><name pos:line="537" pos:column="43">OSVERSIONINFOEX</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="538" pos:column="9">BOOL</name></type> <name pos:line="538" pos:column="14">bOsVersionInfoEx</name> <init pos:line="538" pos:column="31">= <expr><call><name pos:line="538" pos:column="33">GetVersionEx</name> <argument_list pos:line="538" pos:column="46">(<argument><expr><op:operator pos:line="538" pos:column="47">(</op:operator><name pos:line="538" pos:column="48">OSVERSIONINFO</name> <op:operator pos:line="538" pos:column="62">*</op:operator><op:operator pos:line="538" pos:column="63">)</op:operator><op:operator pos:line="538" pos:column="64">&amp;</op:operator><name pos:line="538" pos:column="65">osvi</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="539" pos:column="9">if <condition pos:line="539" pos:column="12">(<expr><op:operator pos:line="539" pos:column="13">!</op:operator><name pos:line="539" pos:column="14">bOsVersionInfoEx</name></expr>)</condition><then pos:line="539" pos:column="31">
	<block pos:line="540" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="541" pos:column="17">osvi</name><op:operator pos:line="541" pos:column="21">.</op:operator><name pos:line="541" pos:column="22">dwOSVersionInfoSize</name></name> <op:operator pos:line="541" pos:column="42">=</op:operator> <sizeof pos:line="541" pos:column="44">sizeof <argument_list pos:line="541" pos:column="51">(<argument><expr><name pos:line="541" pos:column="52">OSVERSIONINFO</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
		<if pos:line="542" pos:column="17">if <condition pos:line="542" pos:column="20">(<expr><op:operator pos:line="542" pos:column="21">!</op:operator> <call><name pos:line="542" pos:column="23">GetVersionEx</name> <argument_list pos:line="542" pos:column="36">( <argument><expr><op:operator pos:line="542" pos:column="38">(</op:operator><name pos:line="542" pos:column="39">OSVERSIONINFO</name> <op:operator pos:line="542" pos:column="53">*</op:operator><op:operator pos:line="542" pos:column="54">)</op:operator> <op:operator pos:line="542" pos:column="56">&amp;</op:operator><name pos:line="542" pos:column="57">osvi</name></expr></argument>)</argument_list></call></expr> )</condition><then pos:line="542" pos:column="64"> 
			<return pos:line="543" pos:column="25">return <expr><name pos:line="543" pos:column="32">WV_UNKNOWN</name></expr>;</return></then></if>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="546" pos:column="9">pGNSI</name> <op:operator pos:line="546" pos:column="15">=</op:operator> <op:operator pos:line="546" pos:column="17">(</op:operator><name pos:line="546" pos:column="18">PGNSI</name><op:operator pos:line="546" pos:column="23">)</op:operator> <call><name pos:line="546" pos:column="25">GetProcAddress</name><argument_list pos:line="546" pos:column="39">(<argument><expr><call><name pos:line="546" pos:column="40">GetModuleHandle</name><argument_list pos:line="546" pos:column="55">(<argument><expr><call><name pos:line="546" pos:column="56">TEXT</name><argument_list pos:line="546" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="546" pos:column="61">"kernel32.dll"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="546" pos:column="79">"GetNativeSystemInfo"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="547" pos:column="9">if<condition pos:line="547" pos:column="11">(<expr><name pos:line="547" pos:column="12">pGNSI</name> <op:operator pos:line="547" pos:column="18">!=</op:operator> <name pos:line="547" pos:column="21">NULL</name></expr>)</condition><then pos:line="547" pos:column="26">
		<expr_stmt><expr><call><name pos:line="548" pos:column="17">pGNSI</name><argument_list pos:line="548" pos:column="22">(<argument><expr><op:operator pos:line="548" pos:column="23">&amp;</op:operator><name pos:line="548" pos:column="24">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="549" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="550" pos:column="17">GetSystemInfo</name><argument_list pos:line="550" pos:column="30">(<argument><expr><op:operator pos:line="550" pos:column="31">&amp;</op:operator><name pos:line="550" pos:column="32">si</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

   <switch pos:line="552" pos:column="4">switch <condition pos:line="552" pos:column="11">(<expr><name><name pos:line="552" pos:column="12">osvi</name><op:operator pos:line="552" pos:column="16">.</op:operator><name pos:line="552" pos:column="17">dwPlatformId</name></name></expr>)</condition>
   <block pos:line="553" pos:column="4">{
		<case pos:line="554" pos:column="17">case <expr><name pos:line="554" pos:column="22">VER_PLATFORM_WIN32_NT</name></expr>:
		<block pos:line="555" pos:column="17">{
			<if pos:line="556" pos:column="25">if <condition pos:line="556" pos:column="28">( <expr><name><name pos:line="556" pos:column="30">osvi</name><op:operator pos:line="556" pos:column="34">.</op:operator><name pos:line="556" pos:column="35">dwMajorVersion</name></name> <op:operator pos:line="556" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="556" pos:column="53">6</lit:literal> <op:operator pos:line="556" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="556" pos:column="58">osvi</name><op:operator pos:line="556" pos:column="62">.</op:operator><name pos:line="556" pos:column="63">dwMinorVersion</name></name> <op:operator pos:line="556" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="556" pos:column="81">2</lit:literal></expr> )</condition><then pos:line="556" pos:column="84">
			<block pos:line="557" pos:column="25">{
				<return pos:line="558" pos:column="33">return <expr><name pos:line="558" pos:column="40">WV_WIN8</name></expr>;</return>
			}</block></then></if>

			<if pos:line="561" pos:column="25">if <condition pos:line="561" pos:column="28">( <expr><name><name pos:line="561" pos:column="30">osvi</name><op:operator pos:line="561" pos:column="34">.</op:operator><name pos:line="561" pos:column="35">dwMajorVersion</name></name> <op:operator pos:line="561" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="561" pos:column="53">6</lit:literal> <op:operator pos:line="561" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="561" pos:column="58">osvi</name><op:operator pos:line="561" pos:column="62">.</op:operator><name pos:line="561" pos:column="63">dwMinorVersion</name></name> <op:operator pos:line="561" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="561" pos:column="81">1</lit:literal></expr> )</condition><then pos:line="561" pos:column="84">
			<block pos:line="562" pos:column="25">{
				<return pos:line="563" pos:column="33">return <expr><name pos:line="563" pos:column="40">WV_WIN7</name></expr>;</return>
			}</block></then></if>

			<if pos:line="566" pos:column="25">if <condition pos:line="566" pos:column="28">( <expr><name><name pos:line="566" pos:column="30">osvi</name><op:operator pos:line="566" pos:column="34">.</op:operator><name pos:line="566" pos:column="35">dwMajorVersion</name></name> <op:operator pos:line="566" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="566" pos:column="53">6</lit:literal> <op:operator pos:line="566" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="566" pos:column="58">osvi</name><op:operator pos:line="566" pos:column="62">.</op:operator><name pos:line="566" pos:column="63">dwMinorVersion</name></name> <op:operator pos:line="566" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="566" pos:column="81">0</lit:literal></expr> )</condition><then pos:line="566" pos:column="84">
			<block pos:line="567" pos:column="25">{
				<return pos:line="568" pos:column="33">return <expr><name pos:line="568" pos:column="40">WV_VISTA</name></expr>;</return>
			}</block></then></if>

			<if pos:line="571" pos:column="25">if <condition pos:line="571" pos:column="28">( <expr><name><name pos:line="571" pos:column="30">osvi</name><op:operator pos:line="571" pos:column="34">.</op:operator><name pos:line="571" pos:column="35">dwMajorVersion</name></name> <op:operator pos:line="571" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="571" pos:column="53">5</lit:literal> <op:operator pos:line="571" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="571" pos:column="58">osvi</name><op:operator pos:line="571" pos:column="62">.</op:operator><name pos:line="571" pos:column="63">dwMinorVersion</name></name> <op:operator pos:line="571" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="571" pos:column="81">2</lit:literal></expr> )</condition><then pos:line="571" pos:column="84">
			<block pos:line="572" pos:column="25">{
				<if pos:line="573" pos:column="33">if <condition pos:line="573" pos:column="36">(<expr><name><name pos:line="573" pos:column="37">osvi</name><op:operator pos:line="573" pos:column="41">.</op:operator><name pos:line="573" pos:column="42">wProductType</name></name> <op:operator pos:line="573" pos:column="55">==</op:operator> <name pos:line="573" pos:column="58">VER_NT_WORKSTATION</name> <op:operator pos:line="573" pos:column="77">&amp;&amp;</op:operator>
					   <name><name pos:line="574" pos:column="44">si</name><op:operator pos:line="574" pos:column="46">.</op:operator><name pos:line="574" pos:column="47">wProcessorArchitecture</name></name><op:operator pos:line="574" pos:column="69">==</op:operator><name pos:line="574" pos:column="71">PROCESSOR_ARCHITECTURE_AMD64</name></expr>)</condition><then pos:line="574" pos:column="100">
				<block pos:line="575" pos:column="33">{
					<return pos:line="576" pos:column="41">return <expr><name pos:line="576" pos:column="48">WV_XPX64</name></expr>;</return>
				}</block></then></if>
				<return pos:line="578" pos:column="33">return <expr><name pos:line="578" pos:column="40">WV_S2003</name></expr>;</return>
			}</block></then></if>

			<if pos:line="581" pos:column="25">if <condition pos:line="581" pos:column="28">( <expr><name><name pos:line="581" pos:column="30">osvi</name><op:operator pos:line="581" pos:column="34">.</op:operator><name pos:line="581" pos:column="35">dwMajorVersion</name></name> <op:operator pos:line="581" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="581" pos:column="53">5</lit:literal> <op:operator pos:line="581" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="581" pos:column="58">osvi</name><op:operator pos:line="581" pos:column="62">.</op:operator><name pos:line="581" pos:column="63">dwMinorVersion</name></name> <op:operator pos:line="581" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="581" pos:column="81">1</lit:literal></expr> )</condition><then pos:line="581" pos:column="84">
				<return pos:line="582" pos:column="33">return <expr><name pos:line="582" pos:column="40">WV_XP</name></expr>;</return></then></if>

			<if pos:line="584" pos:column="25">if <condition pos:line="584" pos:column="28">( <expr><name><name pos:line="584" pos:column="30">osvi</name><op:operator pos:line="584" pos:column="34">.</op:operator><name pos:line="584" pos:column="35">dwMajorVersion</name></name> <op:operator pos:line="584" pos:column="50">==</op:operator> <lit:literal type="number" pos:line="584" pos:column="53">5</lit:literal> <op:operator pos:line="584" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="584" pos:column="58">osvi</name><op:operator pos:line="584" pos:column="62">.</op:operator><name pos:line="584" pos:column="63">dwMinorVersion</name></name> <op:operator pos:line="584" pos:column="78">==</op:operator> <lit:literal type="number" pos:line="584" pos:column="81">0</lit:literal></expr> )</condition><then pos:line="584" pos:column="84">
				<return pos:line="585" pos:column="33">return <expr><name pos:line="585" pos:column="40">WV_W2K</name></expr>;</return></then></if>

			<if pos:line="587" pos:column="25">if <condition pos:line="587" pos:column="28">( <expr><name><name pos:line="587" pos:column="30">osvi</name><op:operator pos:line="587" pos:column="34">.</op:operator><name pos:line="587" pos:column="35">dwMajorVersion</name></name> <op:operator pos:line="587" pos:column="50">&lt;=</op:operator> <lit:literal type="number" pos:line="587" pos:column="53">4</lit:literal></expr> )</condition><then pos:line="587" pos:column="56">
				<return pos:line="588" pos:column="33">return <expr><name pos:line="588" pos:column="40">WV_NT</name></expr>;</return></then></if>
		}</block>
		<break pos:line="590" pos:column="17">break;</break>

		<comment type="line" pos:line="592" pos:column="17">// Test for the Windows Me/98/95.</comment>
		</case><case pos:line="593" pos:column="17">case <expr><name pos:line="593" pos:column="22">VER_PLATFORM_WIN32_WINDOWS</name></expr>:
		<block pos:line="594" pos:column="17">{
			<if pos:line="595" pos:column="25">if <condition pos:line="595" pos:column="28">(<expr><name><name pos:line="595" pos:column="29">osvi</name><op:operator pos:line="595" pos:column="33">.</op:operator><name pos:line="595" pos:column="34">dwMajorVersion</name></name> <op:operator pos:line="595" pos:column="49">==</op:operator> <lit:literal type="number" pos:line="595" pos:column="52">4</lit:literal> <op:operator pos:line="595" pos:column="54">&amp;&amp;</op:operator> <name><name pos:line="595" pos:column="57">osvi</name><op:operator pos:line="595" pos:column="61">.</op:operator><name pos:line="595" pos:column="62">dwMinorVersion</name></name> <op:operator pos:line="595" pos:column="77">==</op:operator> <lit:literal type="number" pos:line="595" pos:column="80">0</lit:literal></expr>)</condition><then pos:line="595" pos:column="82">
			<block pos:line="596" pos:column="25">{
				<return pos:line="597" pos:column="33">return <expr><name pos:line="597" pos:column="40">WV_95</name></expr>;</return>
			}</block></then></if> 

			<if pos:line="600" pos:column="25">if <condition pos:line="600" pos:column="28">(<expr><name><name pos:line="600" pos:column="29">osvi</name><op:operator pos:line="600" pos:column="33">.</op:operator><name pos:line="600" pos:column="34">dwMajorVersion</name></name> <op:operator pos:line="600" pos:column="49">==</op:operator> <lit:literal type="number" pos:line="600" pos:column="52">4</lit:literal> <op:operator pos:line="600" pos:column="54">&amp;&amp;</op:operator> <name><name pos:line="600" pos:column="57">osvi</name><op:operator pos:line="600" pos:column="61">.</op:operator><name pos:line="600" pos:column="62">dwMinorVersion</name></name> <op:operator pos:line="600" pos:column="77">==</op:operator> <lit:literal type="number" pos:line="600" pos:column="80">10</lit:literal></expr>)</condition><then pos:line="600" pos:column="83">
			<block pos:line="601" pos:column="25">{
				<return pos:line="602" pos:column="33">return <expr><name pos:line="602" pos:column="40">WV_98</name></expr>;</return>
			}</block></then></if> 

			<if pos:line="605" pos:column="25">if <condition pos:line="605" pos:column="28">(<expr><name><name pos:line="605" pos:column="29">osvi</name><op:operator pos:line="605" pos:column="33">.</op:operator><name pos:line="605" pos:column="34">dwMajorVersion</name></name> <op:operator pos:line="605" pos:column="49">==</op:operator> <lit:literal type="number" pos:line="605" pos:column="52">4</lit:literal> <op:operator pos:line="605" pos:column="54">&amp;&amp;</op:operator> <name><name pos:line="605" pos:column="57">osvi</name><op:operator pos:line="605" pos:column="61">.</op:operator><name pos:line="605" pos:column="62">dwMinorVersion</name></name> <op:operator pos:line="605" pos:column="77">==</op:operator> <lit:literal type="number" pos:line="605" pos:column="80">90</lit:literal></expr>)</condition><then pos:line="605" pos:column="83">
			<block pos:line="606" pos:column="25">{
				<return pos:line="607" pos:column="33">return <expr><name pos:line="607" pos:column="40">WV_ME</name></expr>;</return>
			}</block></then></if>
		}</block>
		<break pos:line="610" pos:column="17">break;</break>

      </case><case pos:line="612" pos:column="7">case <expr><name pos:line="612" pos:column="12">VER_PLATFORM_WIN32s</name></expr>:
		<return pos:line="613" pos:column="17">return <expr><name pos:line="613" pos:column="24">WV_WIN32S</name></expr>;</return>
      
	  </case><default pos:line="615" pos:column="11">default :
		<return pos:line="616" pos:column="17">return <expr><name pos:line="616" pos:column="24">WV_UNKNOWN</name></expr>;</return>
   </default>}</block></switch>
   <return pos:line="618" pos:column="4">return <expr><name pos:line="618" pos:column="11">WV_UNKNOWN</name></expr>;</return> 
}</block></function>


<decl_stmt><decl><type><name pos:line="622" pos:column="1">NppParameters</name> <type:modifier pos:line="622" pos:column="15">*</type:modifier></type> <name><name pos:line="622" pos:column="17">NppParameters</name><op:operator pos:line="622" pos:column="30">::</op:operator><name pos:line="622" pos:column="32">_pSelf</name></name> <init pos:line="622" pos:column="39">= <expr><op:operator pos:line="622" pos:column="41">new</op:operator> <name pos:line="622" pos:column="45">NppParameters</name></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="623" pos:column="1">int</name></type> <name><name pos:line="623" pos:column="5">FileDialog</name><op:operator pos:line="623" pos:column="15">::</op:operator><name pos:line="623" pos:column="17">_dialogFileBoxId</name></name> <init pos:line="623" pos:column="34">= <expr><op:operator pos:line="623" pos:column="36">(</op:operator><call><name><name pos:line="623" pos:column="37">NppParameters</name><op:operator pos:line="623" pos:column="50">::</op:operator><name pos:line="623" pos:column="52">getInstance</name></name><argument_list pos:line="623" pos:column="63">()</argument_list></call><op:operator pos:line="623" pos:column="65">)</op:operator><op:operator pos:line="623" pos:column="66">-&gt;</op:operator><call><name pos:line="623" pos:column="68">getWinVersion</name><argument_list pos:line="623" pos:column="81">()</argument_list></call> <op:operator pos:line="623" pos:column="84">&lt;</op:operator> <name pos:line="623" pos:column="86">WV_W2K</name><op:operator pos:line="623" pos:column="92">?</op:operator><name pos:line="623" pos:column="93">edt1</name><op:operator pos:line="623" pos:column="97">:</op:operator><name pos:line="623" pos:column="98">cmb13</name></expr></init></decl>;</decl_stmt>

<constructor><name><name pos:line="625" pos:column="1">NppParameters</name><op:operator pos:line="625" pos:column="14">::</op:operator><name pos:line="625" pos:column="16">NppParameters</name></name><parameter_list pos:line="625" pos:column="29">()</parameter_list> <member_list pos:line="625" pos:column="32">: <call><name pos:line="625" pos:column="34">_pXmlDoc</name><argument_list pos:line="625" pos:column="42">(<argument><expr><name pos:line="625" pos:column="43">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="625" pos:column="48">,</op:operator><call><name pos:line="625" pos:column="49">_pXmlUserDoc</name><argument_list pos:line="625" pos:column="61">(<argument><expr><name pos:line="625" pos:column="62">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="625" pos:column="67">,</op:operator> <call><name pos:line="625" pos:column="69">_pXmlUserStylerDoc</name><argument_list pos:line="625" pos:column="87">(<argument><expr><name pos:line="625" pos:column="88">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="625" pos:column="93">,</op:operator>\
								<call><name pos:line="626" pos:column="65">_pXmlUserLangDoc</name><argument_list pos:line="626" pos:column="81">(<argument><expr><name pos:line="626" pos:column="82">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="626" pos:column="87">,</op:operator> <call><name pos:line="626" pos:column="89">_pXmlNativeLangDocA</name><argument_list pos:line="626" pos:column="108">(<argument><expr><name pos:line="626" pos:column="109">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="626" pos:column="114">,</op:operator>\
								<call><name pos:line="627" pos:column="65">_nbLang</name><argument_list pos:line="627" pos:column="72">(<argument><expr><lit:literal type="number" pos:line="627" pos:column="73">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="627" pos:column="75">,</op:operator> <call><name pos:line="627" pos:column="77">_pXmlToolIconsDoc</name><argument_list pos:line="627" pos:column="94">(<argument><expr><name pos:line="627" pos:column="95">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="627" pos:column="100">,</op:operator>\
								<call><name pos:line="628" pos:column="65">_nbRecentFile</name><argument_list pos:line="628" pos:column="78">(<argument><expr><lit:literal type="number" pos:line="628" pos:column="79">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="628" pos:column="81">,</op:operator> <call><name pos:line="628" pos:column="83">_nbMaxRecentFile</name><argument_list pos:line="628" pos:column="99">(<argument><expr><lit:literal type="number" pos:line="628" pos:column="100">10</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="628" pos:column="103">,</op:operator> <call><name pos:line="628" pos:column="105">_recentFileCustomLength</name><argument_list pos:line="628" pos:column="128">(<argument><expr><name pos:line="628" pos:column="129">RECENTFILES_SHOWFULLPATH</name></expr></argument>)</argument_list></call><op:operator pos:line="628" pos:column="154">,</op:operator><call><name pos:line="628" pos:column="155">_putRecentFileInSubMenu</name><argument_list pos:line="628" pos:column="178">(<argument><expr><lit:literal type="boolean" pos:line="628" pos:column="179">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="628" pos:column="185">,</op:operator>
								<call><name pos:line="629" pos:column="65">_pXmlShortcutDoc</name><argument_list pos:line="629" pos:column="81">(<argument><expr><name pos:line="629" pos:column="82">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="629" pos:column="87">,</op:operator> <call><name pos:line="629" pos:column="89">_pXmlContextMenuDocA</name><argument_list pos:line="629" pos:column="109">(<argument><expr><name pos:line="629" pos:column="110">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="629" pos:column="115">,</op:operator> <call><name pos:line="629" pos:column="117">_pXmlSessionDoc</name><argument_list pos:line="629" pos:column="132">(<argument><expr><name pos:line="629" pos:column="133">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="629" pos:column="138">,</op:operator> <call><name pos:line="629" pos:column="140">_pXmlBlacklistDoc</name><argument_list pos:line="629" pos:column="157">(<argument><expr><name pos:line="629" pos:column="158">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="629" pos:column="163">,</op:operator>\
								<call><name pos:line="630" pos:column="65">_nbUserLang</name><argument_list pos:line="630" pos:column="76">(<argument><expr><lit:literal type="number" pos:line="630" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="630" pos:column="79">,</op:operator> <call><name pos:line="630" pos:column="81">_nbExternalLang</name><argument_list pos:line="630" pos:column="96">(<argument><expr><lit:literal type="number" pos:line="630" pos:column="97">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="630" pos:column="99">,</op:operator> <call><name pos:line="630" pos:column="101">_hUser32</name><argument_list pos:line="630" pos:column="109">(<argument><expr><name pos:line="630" pos:column="110">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="630" pos:column="115">,</op:operator> <call><name pos:line="630" pos:column="117">_hUXTheme</name><argument_list pos:line="630" pos:column="126">(<argument><expr><name pos:line="630" pos:column="127">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="630" pos:column="132">,</op:operator>\
								<call><name pos:line="631" pos:column="65">_transparentFuncAddr</name><argument_list pos:line="631" pos:column="85">(<argument><expr><name pos:line="631" pos:column="86">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="631" pos:column="91">,</op:operator> <call><name pos:line="631" pos:column="93">_enableThemeDialogTextureFuncAddr</name><argument_list pos:line="631" pos:column="126">(<argument><expr><name pos:line="631" pos:column="127">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="631" pos:column="132">,</op:operator> <call><name pos:line="631" pos:column="134">_pNativeLangSpeaker</name><argument_list pos:line="631" pos:column="153">(<argument><expr><name pos:line="631" pos:column="154">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="631" pos:column="159">,</op:operator>\
								<call><name pos:line="632" pos:column="65">_isTaskListRBUTTONUP_Active</name><argument_list pos:line="632" pos:column="92">(<argument><expr><lit:literal type="boolean" pos:line="632" pos:column="93">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="632" pos:column="99">,</op:operator> <call><name pos:line="632" pos:column="101">_fileSaveDlgFilterIndex</name><argument_list pos:line="632" pos:column="124">(<argument><expr><op:operator pos:line="632" pos:column="125">-</op:operator><lit:literal type="number" pos:line="632" pos:column="126">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="632" pos:column="128">,</op:operator> <call><name pos:line="632" pos:column="130">_asNotepadStyle</name><argument_list pos:line="632" pos:column="145">(<argument><expr><lit:literal type="boolean" pos:line="632" pos:column="146">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="632" pos:column="152">,</op:operator> <call><name pos:line="632" pos:column="154">_isFindReplacing</name><argument_list pos:line="632" pos:column="170">(<argument><expr><lit:literal type="boolean" pos:line="632" pos:column="171">false</lit:literal></expr></argument>)</argument_list></call>
</member_list><block pos:line="633" pos:column="1">{
	<comment type="line" pos:line="634" pos:column="9">// init import UDL array</comment>
	<expr_stmt><expr><name pos:line="635" pos:column="9">_nbImportedULD</name> <op:operator pos:line="635" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="635" pos:column="26">0</lit:literal></expr>;</expr_stmt>
	<for pos:line="636" pos:column="9">for (<init><decl><type><name pos:line="636" pos:column="14">int</name></type> <name pos:line="636" pos:column="18">i</name> <init pos:line="636" pos:column="20">= <expr><lit:literal type="number" pos:line="636" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="636" pos:column="26">i</name> <op:operator pos:line="636" pos:column="28">&lt;</op:operator> <name pos:line="636" pos:column="30">NB_MAX_IMPORTED_UDL</name></expr> ;</condition> <incr><expr><name pos:line="636" pos:column="52">i</name><op:operator pos:line="636" pos:column="53">++</op:operator></expr></incr>)
	<block pos:line="637" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="638" pos:column="17">_importedULD</name><index pos:line="638" pos:column="29">[<expr><name pos:line="638" pos:column="30">i</name></expr>]</index></name> <op:operator pos:line="638" pos:column="33">=</op:operator> <name pos:line="638" pos:column="35">NULL</name></expr>;</expr_stmt>
	}</block></for>

	<comment type="line" pos:line="641" pos:column="9">//Get windows version</comment>
	<expr_stmt><expr><name pos:line="642" pos:column="9">_winVersion</name> <op:operator pos:line="642" pos:column="21">=</op:operator> <call><name pos:line="642" pos:column="23">getWindowsVersion</name><argument_list pos:line="642" pos:column="40">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="644" pos:column="9">// Prepare for default path</comment>
	<decl_stmt><decl><type><name pos:line="645" pos:column="9">TCHAR</name></type> <name><name pos:line="645" pos:column="15">nppPath</name><index pos:line="645" pos:column="22">[<expr><name pos:line="645" pos:column="23">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="646" pos:column="9">::</op:operator><name pos:line="646" pos:column="11">GetModuleFileName</name></name><argument_list pos:line="646" pos:column="28">(<argument><expr><name pos:line="646" pos:column="29">NULL</name></expr></argument>, <argument><expr><name pos:line="646" pos:column="35">nppPath</name></expr></argument>, <argument><expr><name pos:line="646" pos:column="44">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="648" pos:column="9">PathRemoveFileSpec</name><argument_list pos:line="648" pos:column="27">(<argument><expr><name pos:line="648" pos:column="28">nppPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="649" pos:column="9">_nppPath</name> <op:operator pos:line="649" pos:column="18">=</op:operator> <name pos:line="649" pos:column="20">nppPath</name></expr>;</expr_stmt>

	<comment type="line" pos:line="651" pos:column="9">//Initialize current directory to startup directory</comment>
	<decl_stmt><decl><type><name pos:line="652" pos:column="9">TCHAR</name></type> <name><name pos:line="652" pos:column="15">curDir</name><index pos:line="652" pos:column="21">[<expr><name pos:line="652" pos:column="22">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="653" pos:column="9">::</op:operator><name pos:line="653" pos:column="11">GetCurrentDirectory</name></name><argument_list pos:line="653" pos:column="30">(<argument><expr><name pos:line="653" pos:column="31">MAX_PATH</name></expr></argument>, <argument><expr><name pos:line="653" pos:column="41">curDir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="654" pos:column="9">_currentDirectory</name> <op:operator pos:line="654" pos:column="27">=</op:operator> <name pos:line="654" pos:column="29">curDir</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="656" pos:column="9">_appdataNppDir</name> <op:operator pos:line="656" pos:column="24">=</op:operator> <call><name pos:line="656" pos:column="26">TEXT</name><argument_list pos:line="656" pos:column="30">(<argument><expr><lit:literal type="string" pos:line="656" pos:column="31">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<function_decl><type><name pos:line="657" pos:column="9">generic_string</name></type> <name pos:line="657" pos:column="24">notepadStylePath</name><parameter_list pos:line="657" pos:column="40">(<param><decl><type><name pos:line="657" pos:column="41">_nppPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="658" pos:column="9">PathAppend</name><argument_list pos:line="658" pos:column="19">(<argument><expr><name pos:line="658" pos:column="20">notepadStylePath</name></expr></argument>, <argument><expr><name pos:line="658" pos:column="38">notepadStyleFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
	<expr_stmt><expr><name pos:line="660" pos:column="9">_asNotepadStyle</name> <op:operator pos:line="660" pos:column="25">=</op:operator> <op:operator pos:line="660" pos:column="27">(</op:operator><call><name pos:line="660" pos:column="28">PathFileExists</name><argument_list pos:line="660" pos:column="42">(<argument><expr><call><name><name pos:line="660" pos:column="43">notepadStylePath</name><op:operator pos:line="660" pos:column="59">.</op:operator><name pos:line="660" pos:column="60">c_str</name></name><argument_list pos:line="660" pos:column="65">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="660" pos:column="69">==</op:operator> <name pos:line="660" pos:column="72">TRUE</name><op:operator pos:line="660" pos:column="76">)</op:operator></expr>;</expr_stmt>

	<comment type="line" pos:line="662" pos:column="9">//Load initial accelerator key definitions</comment>
	<expr_stmt><expr><call><name pos:line="663" pos:column="9">initMenuKeys</name><argument_list pos:line="663" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="664" pos:column="9">initScintillaKeys</name><argument_list pos:line="664" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
}</block></constructor>

<destructor><name><name pos:line="667" pos:column="1">NppParameters</name><op:operator pos:line="667" pos:column="14">::</op:operator>~<name pos:line="667" pos:column="17">NppParameters</name></name><parameter_list pos:line="667" pos:column="30">()</parameter_list> 
<block pos:line="668" pos:column="1">{
	<for pos:line="669" pos:column="9">for (<init><decl><type><name pos:line="669" pos:column="14">int</name></type> <name pos:line="669" pos:column="18">i</name> <init pos:line="669" pos:column="20">= <expr><lit:literal type="number" pos:line="669" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="669" pos:column="26">i</name> <op:operator pos:line="669" pos:column="28">&lt;</op:operator> <name pos:line="669" pos:column="30">_nbLang</name></expr> ;</condition> <incr><expr><name pos:line="669" pos:column="40">i</name><op:operator pos:line="669" pos:column="41">++</op:operator></expr></incr>)
		<expr_stmt><expr><op:operator pos:line="670" pos:column="17">delete</op:operator> <name><name pos:line="670" pos:column="24">_langList</name><index pos:line="670" pos:column="33">[<expr><name pos:line="670" pos:column="34">i</name></expr>]</index></name></expr>;</expr_stmt></for>
	<for pos:line="671" pos:column="9">for (<init><decl><type><name pos:line="671" pos:column="14">int</name></type> <name pos:line="671" pos:column="18">i</name> <init pos:line="671" pos:column="20">= <expr><lit:literal type="number" pos:line="671" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="671" pos:column="26">i</name> <op:operator pos:line="671" pos:column="28">&lt;</op:operator> <name pos:line="671" pos:column="30">_nbRecentFile</name></expr> ;</condition> <incr><expr><name pos:line="671" pos:column="46">i</name><op:operator pos:line="671" pos:column="47">++</op:operator></expr></incr>)
		<expr_stmt><expr><op:operator pos:line="672" pos:column="17">delete</op:operator> <name><name pos:line="672" pos:column="24">_LRFileList</name><index pos:line="672" pos:column="35">[<expr><name pos:line="672" pos:column="36">i</name></expr>]</index></name></expr>;</expr_stmt></for>
	<for pos:line="673" pos:column="9">for (<init><decl><type><name pos:line="673" pos:column="14">int</name></type> <name pos:line="673" pos:column="18">i</name> <init pos:line="673" pos:column="20">= <expr><lit:literal type="number" pos:line="673" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="673" pos:column="26">i</name> <op:operator pos:line="673" pos:column="28">&lt;</op:operator> <name pos:line="673" pos:column="30">_nbUserLang</name></expr> ;</condition> <incr><expr><name pos:line="673" pos:column="44">i</name><op:operator pos:line="673" pos:column="45">++</op:operator></expr></incr>)
		<expr_stmt><expr><op:operator pos:line="674" pos:column="17">delete</op:operator> <name><name pos:line="674" pos:column="24">_userLangArray</name><index pos:line="674" pos:column="38">[<expr><name pos:line="674" pos:column="39">i</name></expr>]</index></name></expr>;</expr_stmt></for>
	<if pos:line="675" pos:column="9">if <condition pos:line="675" pos:column="12">(<expr><name pos:line="675" pos:column="13">_hUser32</name></expr>)</condition><then pos:line="675" pos:column="22">
		<expr_stmt><expr><call><name pos:line="676" pos:column="17">FreeLibrary</name><argument_list pos:line="676" pos:column="28">(<argument><expr><name pos:line="676" pos:column="29">_hUser32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="677" pos:column="9">if <condition pos:line="677" pos:column="12">(<expr><name pos:line="677" pos:column="13">_hUXTheme</name></expr>)</condition><then pos:line="677" pos:column="23">
		<expr_stmt><expr><call><name pos:line="678" pos:column="17">FreeLibrary</name><argument_list pos:line="678" pos:column="28">(<argument><expr><name pos:line="678" pos:column="29">_hUXTheme</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<for pos:line="680" pos:column="9">for (<init><decl><type><name><name pos:line="680" pos:column="14">std</name><op:operator pos:line="680" pos:column="17">::</op:operator><name><name pos:line="680" pos:column="19">vector</name><argument_list pos:line="680" pos:column="25">&lt;<argument><expr><name pos:line="680" pos:column="26">TiXmlDocument</name> <op:operator pos:line="680" pos:column="40">*</op:operator></expr></argument>&gt;</argument_list></name><op:operator pos:line="680" pos:column="42">::</op:operator><name pos:line="680" pos:column="44">iterator</name></name></type> <name pos:line="680" pos:column="53">it</name> <init pos:line="680" pos:column="56">= <expr><call><name><name pos:line="680" pos:column="58">_pXmlExternalLexerDoc</name><op:operator pos:line="680" pos:column="79">.</op:operator><name pos:line="680" pos:column="80">begin</name></name><argument_list pos:line="680" pos:column="85">()</argument_list></call></expr></init><op:operator pos:line="680" pos:column="87">,</op:operator> <name pos:line="680" pos:column="89">end</name> <init pos:line="680" pos:column="93">= <expr><call><name><name pos:line="680" pos:column="95">_pXmlExternalLexerDoc</name><op:operator pos:line="680" pos:column="116">.</op:operator><name pos:line="680" pos:column="117">end</name></name><argument_list pos:line="680" pos:column="120">()</argument_list></call></expr></init></decl>;</init> <condition><expr><name pos:line="680" pos:column="124">it</name> <op:operator pos:line="680" pos:column="127">!=</op:operator> <name pos:line="680" pos:column="130">end</name></expr>;</condition> <incr><expr><op:operator pos:line="680" pos:column="135">++</op:operator><name pos:line="680" pos:column="137">it</name></expr></incr> )
	<block pos:line="681" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="682" pos:column="17">delete</op:operator> <op:operator pos:line="682" pos:column="24">(</op:operator><op:operator pos:line="682" pos:column="25">*</op:operator><name pos:line="682" pos:column="26">it</name><op:operator pos:line="682" pos:column="28">)</op:operator></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="684" pos:column="9">_pXmlExternalLexerDoc</name><op:operator pos:line="684" pos:column="30">.</op:operator><name pos:line="684" pos:column="31">clear</name></name><argument_list pos:line="684" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
}</block></destructor>

<function><type><name pos:line="687" pos:column="1">void</name></type> <name pos:line="687" pos:column="6">cutString</name><parameter_list pos:line="687" pos:column="15">(<param><decl><type><specifier pos:line="687" pos:column="16">const</specifier> <name pos:line="687" pos:column="22">TCHAR</name> <type:modifier pos:line="687" pos:column="28">*</type:modifier></type><name pos:line="687" pos:column="29">str2cut</name></decl></param>, <param><decl><type><name><name pos:line="687" pos:column="38">vector</name><argument_list pos:line="687" pos:column="44">&lt;<argument><expr><name pos:line="687" pos:column="45">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="687" pos:column="61">&amp;</type:modifier></type> <name pos:line="687" pos:column="63">patternVect</name></decl></param>)</parameter_list>
<block pos:line="688" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="689" pos:column="9">TCHAR</name></type> <name><name pos:line="689" pos:column="15">str2scan</name><index pos:line="689" pos:column="23">[<expr><name pos:line="689" pos:column="24">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="690" pos:column="9">lstrcpy</name><argument_list pos:line="690" pos:column="16">(<argument><expr><name pos:line="690" pos:column="17">str2scan</name></expr></argument>, <argument><expr><name pos:line="690" pos:column="27">str2cut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="691" pos:column="9">size_t</name></type> <name pos:line="691" pos:column="16">len</name> <init pos:line="691" pos:column="20">= <expr><call><name pos:line="691" pos:column="22">lstrlen</name><argument_list pos:line="691" pos:column="29">(<argument><expr><name pos:line="691" pos:column="30">str2scan</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="692" pos:column="9">bool</name></type> <name pos:line="692" pos:column="14">isProcessing</name> <init pos:line="692" pos:column="27">= <expr><lit:literal type="boolean" pos:line="692" pos:column="29">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="693" pos:column="9">TCHAR</name> <type:modifier pos:line="693" pos:column="15">*</type:modifier></type><name pos:line="693" pos:column="16">pBegin</name> <init pos:line="693" pos:column="23">= <expr><name pos:line="693" pos:column="25">NULL</name></expr></init></decl>;</decl_stmt>
	<for pos:line="694" pos:column="9">for (<init><decl><type><name pos:line="694" pos:column="14">size_t</name></type> <name pos:line="694" pos:column="21">i</name> <init pos:line="694" pos:column="23">= <expr><lit:literal type="number" pos:line="694" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="694" pos:column="29">i</name> <op:operator pos:line="694" pos:column="31">&lt;=</op:operator> <name pos:line="694" pos:column="34">len</name></expr> ;</condition> <incr><expr><name pos:line="694" pos:column="40">i</name><op:operator pos:line="694" pos:column="41">++</op:operator></expr></incr>)
	<block pos:line="695" pos:column="9">{
		<switch pos:line="696" pos:column="17">switch<condition pos:line="696" pos:column="23">(<expr><name><name pos:line="696" pos:column="24">str2scan</name><index pos:line="696" pos:column="32">[<expr><name pos:line="696" pos:column="33">i</name></expr>]</index></name></expr>)</condition>
		<block pos:line="697" pos:column="17">{
			<case pos:line="698" pos:column="25">case <expr><lit:literal type="char" pos:line="698" pos:column="30">' '</lit:literal></expr>:
			</case><case pos:line="699" pos:column="25">case <expr><lit:literal type="char" pos:line="699" pos:column="30">'\0'</lit:literal></expr>:
			<block pos:line="700" pos:column="25">{
				<if pos:line="701" pos:column="33">if <condition pos:line="701" pos:column="36">(<expr><name pos:line="701" pos:column="37">isProcessing</name></expr>)</condition><then pos:line="701" pos:column="50">
				<block pos:line="702" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="703" pos:column="41">str2scan</name><index pos:line="703" pos:column="49">[<expr><name pos:line="703" pos:column="50">i</name></expr>]</index></name> <op:operator pos:line="703" pos:column="53">=</op:operator> <lit:literal type="char" pos:line="703" pos:column="55">'\0'</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="704" pos:column="41">patternVect</name><op:operator pos:line="704" pos:column="52">.</op:operator><name pos:line="704" pos:column="53">push_back</name></name><argument_list pos:line="704" pos:column="62">(<argument><expr><name pos:line="704" pos:column="63">pBegin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="705" pos:column="41">isProcessing</name> <op:operator pos:line="705" pos:column="54">=</op:operator> <lit:literal type="boolean" pos:line="705" pos:column="56">false</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
				<break pos:line="707" pos:column="33">break;</break>
			}</block>

			</case><default pos:line="710" pos:column="25">default :
				<if pos:line="711" pos:column="33">if <condition pos:line="711" pos:column="36">(<expr><op:operator pos:line="711" pos:column="37">!</op:operator><name pos:line="711" pos:column="38">isProcessing</name></expr>)</condition><then pos:line="711" pos:column="51">
				<block pos:line="712" pos:column="33">{
					<expr_stmt><expr><name pos:line="713" pos:column="41">isProcessing</name> <op:operator pos:line="713" pos:column="54">=</op:operator> <lit:literal type="boolean" pos:line="713" pos:column="56">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="714" pos:column="41">pBegin</name> <op:operator pos:line="714" pos:column="48">=</op:operator> <name pos:line="714" pos:column="50">str2scan</name><op:operator pos:line="714" pos:column="58">+</op:operator><name pos:line="714" pos:column="59">i</name></expr>;</expr_stmt>
				}</block></then></if>
		</default>}</block></switch>
	}</block></for>
}</block></function>

<function><type><name pos:line="720" pos:column="1">bool</name></type> <name><name pos:line="720" pos:column="6">NppParameters</name><op:operator pos:line="720" pos:column="19">::</op:operator><name pos:line="720" pos:column="21">reloadStylers</name></name><parameter_list pos:line="720" pos:column="34">(<param><decl><type><name pos:line="720" pos:column="35">TCHAR</name> <type:modifier pos:line="720" pos:column="41">*</type:modifier></type><name pos:line="720" pos:column="42">stylePath</name></decl></param>)</parameter_list>
<block pos:line="721" pos:column="1">{
	<if pos:line="722" pos:column="9">if <condition pos:line="722" pos:column="12">(<expr><name pos:line="722" pos:column="13">_pXmlUserStylerDoc</name></expr>)</condition><then pos:line="722" pos:column="32">
		<expr_stmt><expr><op:operator pos:line="723" pos:column="17">delete</op:operator> <name pos:line="723" pos:column="24">_pXmlUserStylerDoc</name></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="725" pos:column="9">_pXmlUserStylerDoc</name> <op:operator pos:line="725" pos:column="28">=</op:operator> <op:operator pos:line="725" pos:column="30">new</op:operator> <call><name pos:line="725" pos:column="34">TiXmlDocument</name><argument_list pos:line="725" pos:column="47">(<argument><expr><name pos:line="725" pos:column="48">stylePath</name><op:operator pos:line="725" pos:column="57">?</op:operator><name pos:line="725" pos:column="58">stylePath</name><op:operator pos:line="725" pos:column="67">:</op:operator><name pos:line="725" pos:column="68">_stylerPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="726" pos:column="9">bool</name></type> <name pos:line="726" pos:column="14">loadOkay</name> <init pos:line="726" pos:column="23">= <expr><call><name><name pos:line="726" pos:column="25">_pXmlUserStylerDoc</name><op:operator pos:line="726" pos:column="43">-&gt;</op:operator><name pos:line="726" pos:column="45">LoadFile</name></name><argument_list pos:line="726" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="727" pos:column="9">if <condition pos:line="727" pos:column="12">(<expr><op:operator pos:line="727" pos:column="13">!</op:operator><name pos:line="727" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="727" pos:column="23">
	<block pos:line="728" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="729" pos:column="17">::</op:operator><name pos:line="729" pos:column="19">MessageBox</name></name><argument_list pos:line="729" pos:column="29">(<argument><expr><name pos:line="729" pos:column="30">NULL</name></expr></argument>, <argument><expr><call><name pos:line="729" pos:column="36">TEXT</name><argument_list pos:line="729" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="729" pos:column="41">"Load stylers.xml failed!"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="729" pos:column="70">stylePath</name></expr></argument>, <argument><expr><name pos:line="729" pos:column="81">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="730" pos:column="17">delete</op:operator> <name pos:line="730" pos:column="24">_pXmlUserStylerDoc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="731" pos:column="17">_pXmlUserStylerDoc</name> <op:operator pos:line="731" pos:column="36">=</op:operator> <name pos:line="731" pos:column="38">NULL</name></expr>;</expr_stmt>
		<return pos:line="732" pos:column="17">return <expr><lit:literal type="boolean" pos:line="732" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="734" pos:column="9">_lexerStylerArray</name><op:operator pos:line="734" pos:column="26">.</op:operator><name pos:line="734" pos:column="27">eraseAll</name></name><argument_list pos:line="734" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="735" pos:column="9">_widgetStyleArray</name><op:operator pos:line="735" pos:column="26">.</op:operator><name pos:line="735" pos:column="27">setNbStyler</name></name><argument_list pos:line="735" pos:column="38">( <argument><expr><lit:literal type="number" pos:line="735" pos:column="40">0</lit:literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="737" pos:column="9">getUserStylersFromXmlTree</name><argument_list pos:line="737" pos:column="34">()</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="739" pos:column="9">//  Reload plugin styles.</comment>
	<for pos:line="740" pos:column="9">for( <init><decl><type><name pos:line="740" pos:column="14">size_t</name></type> <name pos:line="740" pos:column="21">i</name> <init pos:line="740" pos:column="23">= <expr><lit:literal type="number" pos:line="740" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="740" pos:column="28">i</name> <op:operator pos:line="740" pos:column="30">&lt;</op:operator> <call><name pos:line="740" pos:column="32">getExternalLexerDoc</name><argument_list pos:line="740" pos:column="51">()</argument_list></call><op:operator pos:line="740" pos:column="53">-&gt;</op:operator><call><name pos:line="740" pos:column="55">size</name><argument_list pos:line="740" pos:column="59">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="740" pos:column="63">i</name><op:operator pos:line="740" pos:column="64">++</op:operator></expr></incr>) 
	<block pos:line="741" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="742" pos:column="17">getExternalLexerFromXmlTree</name><argument_list pos:line="742" pos:column="44">( <argument><expr><call><name pos:line="742" pos:column="46">getExternalLexerDoc</name><argument_list pos:line="742" pos:column="65">()</argument_list></call><op:operator pos:line="742" pos:column="67">-&gt;</op:operator><call><name pos:line="742" pos:column="69">at</name><argument_list pos:line="742" pos:column="71">(<argument><expr><name pos:line="742" pos:column="72">i</name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<return pos:line="744" pos:column="9">return <expr><lit:literal type="boolean" pos:line="744" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="747" pos:column="1">bool</name></type> <name><name pos:line="747" pos:column="6">NppParameters</name><op:operator pos:line="747" pos:column="19">::</op:operator><name pos:line="747" pos:column="21">reloadLang</name></name><parameter_list pos:line="747" pos:column="31">()</parameter_list>
<block pos:line="748" pos:column="1">{
	<comment type="line" pos:line="749" pos:column="9">// use user path</comment>
<cpp:ifdef pos:line="750" pos:column="1">#<cpp:directive pos:line="750" pos:column="2">ifdef</cpp:directive> <name pos:line="750" pos:column="8">UNICODE</name></cpp:ifdef>
	<function_decl><type><name pos:line="751" pos:column="9">generic_string</name></type> <name pos:line="751" pos:column="24">nativeLangPath</name><parameter_list pos:line="751" pos:column="38">(<param><decl><type><name><name pos:line="751" pos:column="39">_localizationSwitcher</name><op:operator pos:line="751" pos:column="60">.</op:operator><name pos:line="751" pos:column="61">_nativeLangPath</name></name></type></decl></param>)</parameter_list>;</function_decl>
<cpp:else pos:line="752" pos:column="1">#<cpp:directive pos:line="752" pos:column="2">else</cpp:directive></cpp:else>
	<function_decl><type><name pos:line="753" pos:column="9">generic_string</name></type> <name pos:line="753" pos:column="24">nativeLangPath</name><parameter_list pos:line="753" pos:column="38">(<param><decl><type><name pos:line="753" pos:column="39">_userPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="754" pos:column="9">PathAppend</name><argument_list pos:line="754" pos:column="19">(<argument><expr><name pos:line="754" pos:column="20">nativeLangPath</name></expr></argument>, <argument><expr><call><name pos:line="754" pos:column="36">generic_string</name><argument_list pos:line="754" pos:column="50">(<argument><expr><call><name pos:line="754" pos:column="51">TEXT</name><argument_list pos:line="754" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="754" pos:column="56">"nativeLang.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="755" pos:column="1">#<cpp:directive pos:line="755" pos:column="2">endif</cpp:directive></cpp:endif>

	<comment type="line" pos:line="757" pos:column="9">// if "nativeLang.xml" does not exist, use npp path</comment>
	<if pos:line="758" pos:column="9">if <condition pos:line="758" pos:column="12">(<expr><op:operator pos:line="758" pos:column="13">!</op:operator><call><name pos:line="758" pos:column="14">PathFileExists</name><argument_list pos:line="758" pos:column="28">(<argument><expr><call><name><name pos:line="758" pos:column="29">nativeLangPath</name><op:operator pos:line="758" pos:column="43">.</op:operator><name pos:line="758" pos:column="44">c_str</name></name><argument_list pos:line="758" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="758" pos:column="53">
	<block pos:line="759" pos:column="9">{
		<expr_stmt><expr><name pos:line="760" pos:column="17">nativeLangPath</name> <op:operator pos:line="760" pos:column="32">=</op:operator> <name pos:line="760" pos:column="34">_nppPath</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="761" pos:column="17">PathAppend</name><argument_list pos:line="761" pos:column="27">(<argument><expr><name pos:line="761" pos:column="28">nativeLangPath</name></expr></argument>, <argument><expr><call><name pos:line="761" pos:column="44">generic_string</name><argument_list pos:line="761" pos:column="58">(<argument><expr><call><name pos:line="761" pos:column="59">TEXT</name><argument_list pos:line="761" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="761" pos:column="64">"nativeLang.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
		<if pos:line="762" pos:column="17">if <condition pos:line="762" pos:column="20">(<expr><op:operator pos:line="762" pos:column="21">!</op:operator><call><name pos:line="762" pos:column="22">PathFileExists</name><argument_list pos:line="762" pos:column="36">(<argument><expr><call><name><name pos:line="762" pos:column="37">nativeLangPath</name><op:operator pos:line="762" pos:column="51">.</op:operator><name pos:line="762" pos:column="52">c_str</name></name><argument_list pos:line="762" pos:column="57">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="762" pos:column="61">
			<return pos:line="763" pos:column="25">return <expr><lit:literal type="boolean" pos:line="763" pos:column="32">false</lit:literal></expr>;</return></then></if>
	}</block></then></if>

	<if pos:line="766" pos:column="9">if <condition pos:line="766" pos:column="12">(<expr><name pos:line="766" pos:column="13">_pXmlNativeLangDocA</name></expr>)</condition><then pos:line="766" pos:column="33">
		<expr_stmt><expr><op:operator pos:line="767" pos:column="17">delete</op:operator> <name pos:line="767" pos:column="24">_pXmlNativeLangDocA</name></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="769" pos:column="9">_pXmlNativeLangDocA</name> <op:operator pos:line="769" pos:column="29">=</op:operator> <op:operator pos:line="769" pos:column="31">new</op:operator> <call><name pos:line="769" pos:column="35">TiXmlDocumentA</name><argument_list pos:line="769" pos:column="49">()</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="771" pos:column="9">bool</name></type> <name pos:line="771" pos:column="14">loadOkay</name> <init pos:line="771" pos:column="23">= <expr><call><name><name pos:line="771" pos:column="25">_pXmlNativeLangDocA</name><op:operator pos:line="771" pos:column="44">-&gt;</op:operator><name pos:line="771" pos:column="46">LoadUnicodeFilePath</name></name><argument_list pos:line="771" pos:column="65">(<argument><expr><call><name><name pos:line="771" pos:column="66">nativeLangPath</name><op:operator pos:line="771" pos:column="80">.</op:operator><name pos:line="771" pos:column="81">c_str</name></name><argument_list pos:line="771" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="772" pos:column="9">if <condition pos:line="772" pos:column="12">(<expr><op:operator pos:line="772" pos:column="13">!</op:operator><name pos:line="772" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="772" pos:column="23">
	<block pos:line="773" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="774" pos:column="17">delete</op:operator> <name pos:line="774" pos:column="24">_pXmlNativeLangDocA</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="775" pos:column="17">_pXmlNativeLangDocA</name> <op:operator pos:line="775" pos:column="37">=</op:operator> <name pos:line="775" pos:column="39">NULL</name></expr>;</expr_stmt>
		<return pos:line="776" pos:column="17">return <expr><lit:literal type="boolean" pos:line="776" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="778" pos:column="9">return <expr><name pos:line="778" pos:column="16">loadOkay</name></expr>;</return>
}</block></function>

<function><type><name pos:line="781" pos:column="1">bool</name></type> <name><name pos:line="781" pos:column="6">NppParameters</name><op:operator pos:line="781" pos:column="19">::</op:operator><name pos:line="781" pos:column="21">load</name></name><parameter_list pos:line="781" pos:column="25">()</parameter_list>
<block pos:line="782" pos:column="1">{
	<expr_stmt><expr><name pos:line="783" pos:column="9">L_END</name> <op:operator pos:line="783" pos:column="15">=</op:operator> <name pos:line="783" pos:column="17">L_EXTERNAL</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="784" pos:column="9">bool</name></type> <name pos:line="784" pos:column="14">isAllLaoded</name> <init pos:line="784" pos:column="26">= <expr><lit:literal type="boolean" pos:line="784" pos:column="28">true</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="785" pos:column="9">for (<init><decl><type><name pos:line="785" pos:column="14">int</name></type> <name pos:line="785" pos:column="18">i</name> <init pos:line="785" pos:column="20">= <expr><lit:literal type="number" pos:line="785" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="785" pos:column="26">i</name> <op:operator pos:line="785" pos:column="28">&lt;</op:operator> <name pos:line="785" pos:column="30">NB_LANG</name></expr> ;</condition> <incr><expr><name><name pos:line="785" pos:column="40">_langList</name><index pos:line="785" pos:column="49">[<expr><name pos:line="785" pos:column="50">i</name></expr>]</index></name> <op:operator pos:line="785" pos:column="53">=</op:operator> <name pos:line="785" pos:column="55">NULL</name></expr><op:operator pos:line="785" pos:column="59">,</op:operator> <expr><name pos:line="785" pos:column="61">i</name><op:operator pos:line="785" pos:column="62">++</op:operator></expr></incr>)<empty_stmt pos:line="785" pos:column="65">;</empty_stmt></for>
	
	<comment type="line" pos:line="787" pos:column="9">// Make localConf.xml path</comment>
	<function_decl><type><name pos:line="788" pos:column="9">generic_string</name></type> <name pos:line="788" pos:column="24">localConfPath</name><parameter_list pos:line="788" pos:column="37">(<param><decl><type><name pos:line="788" pos:column="38">_nppPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="789" pos:column="9">PathAppend</name><argument_list pos:line="789" pos:column="19">(<argument><expr><name pos:line="789" pos:column="20">localConfPath</name></expr></argument>, <argument><expr><name pos:line="789" pos:column="35">localConfFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="791" pos:column="9">// Test if localConf.xml exist</comment>
	<expr_stmt><expr><name pos:line="792" pos:column="9">_isLocal</name> <op:operator pos:line="792" pos:column="18">=</op:operator> <op:operator pos:line="792" pos:column="20">(</op:operator><call><name pos:line="792" pos:column="21">PathFileExists</name><argument_list pos:line="792" pos:column="35">(<argument><expr><call><name><name pos:line="792" pos:column="36">localConfPath</name><op:operator pos:line="792" pos:column="49">.</op:operator><name pos:line="792" pos:column="50">c_str</name></name><argument_list pos:line="792" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="792" pos:column="59">==</op:operator> <name pos:line="792" pos:column="62">TRUE</name><op:operator pos:line="792" pos:column="66">)</op:operator></expr>;</expr_stmt>

    <comment type="line" pos:line="794" pos:column="5">// Under vista and windows 7, the usage of doLocalConf.xml is not allowed</comment>
    <comment type="line" pos:line="795" pos:column="5">// if Notepad++ is installed in "program files" directory, because of UAC</comment>
    <if pos:line="796" pos:column="5">if <condition pos:line="796" pos:column="8">(<expr><name pos:line="796" pos:column="9">_isLocal</name></expr>)</condition><then pos:line="796" pos:column="18">
    <block pos:line="797" pos:column="5">{
        <comment type="line" pos:line="798" pos:column="9">// We check if OS is Vista or above</comment>
        <if pos:line="799" pos:column="9">if <condition pos:line="799" pos:column="12">(<expr><name pos:line="799" pos:column="13">_winVersion</name> <op:operator pos:line="799" pos:column="25">&gt;=</op:operator> <name pos:line="799" pos:column="28">WV_VISTA</name></expr>)</condition><then pos:line="799" pos:column="37">
        <block pos:line="800" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="801" pos:column="13">ITEMIDLIST</name> <type:modifier pos:line="801" pos:column="24">*</type:modifier></type><name pos:line="801" pos:column="25">pidl</name></decl>;</decl_stmt>
		    <expr_stmt><expr><call><name pos:line="802" pos:column="21">SHGetSpecialFolderLocation</name><argument_list pos:line="802" pos:column="47">(<argument><expr><name pos:line="802" pos:column="48">NULL</name></expr></argument>, <argument><expr><name pos:line="802" pos:column="54">CSIDL_PROGRAM_FILES</name></expr></argument>, <argument><expr><op:operator pos:line="802" pos:column="75">&amp;</op:operator><name pos:line="802" pos:column="76">pidl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		    <decl_stmt><decl><type><name pos:line="803" pos:column="21">TCHAR</name></type> <name><name pos:line="803" pos:column="27">progPath</name><index pos:line="803" pos:column="35">[<expr><name pos:line="803" pos:column="36">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
		    <expr_stmt><expr><call><name pos:line="804" pos:column="21">SHGetPathFromIDList</name><argument_list pos:line="804" pos:column="40">(<argument><expr><name pos:line="804" pos:column="41">pidl</name></expr></argument>, <argument><expr><name pos:line="804" pos:column="47">progPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <decl_stmt><decl><type><name pos:line="805" pos:column="13">TCHAR</name></type> <name><name pos:line="805" pos:column="19">nppDirLocation</name><index pos:line="805" pos:column="33">[<expr><name pos:line="805" pos:column="34">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name pos:line="806" pos:column="13">lstrcpy</name><argument_list pos:line="806" pos:column="20">(<argument><expr><name pos:line="806" pos:column="21">nppDirLocation</name></expr></argument>, <argument><expr><call><name><name pos:line="806" pos:column="37">_nppPath</name><op:operator pos:line="806" pos:column="45">.</op:operator><name pos:line="806" pos:column="46">c_str</name></name><argument_list pos:line="806" pos:column="51">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="807" pos:column="13">::</op:operator><name pos:line="807" pos:column="15">PathRemoveFileSpec</name></name><argument_list pos:line="807" pos:column="33">(<argument><expr><name pos:line="807" pos:column="34">nppDirLocation</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            	
            <if pos:line="809" pos:column="13">if  <condition pos:line="809" pos:column="17">(<expr><call><name pos:line="809" pos:column="18">lstrcmp</name><argument_list pos:line="809" pos:column="25">(<argument><expr><name pos:line="809" pos:column="26">progPath</name></expr></argument>, <argument><expr><name pos:line="809" pos:column="36">nppDirLocation</name></expr></argument>)</argument_list></call> <op:operator pos:line="809" pos:column="52">==</op:operator> <lit:literal type="number" pos:line="809" pos:column="55">0</lit:literal></expr>)</condition><then pos:line="809" pos:column="57">
                <expr_stmt><expr><name pos:line="810" pos:column="17">_isLocal</name> <op:operator pos:line="810" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="810" pos:column="28">false</lit:literal></expr>;</expr_stmt></then></if>
        }</block></then></if>
    }</block></then></if>

	<if pos:line="814" pos:column="9">if <condition pos:line="814" pos:column="12">(<expr><name pos:line="814" pos:column="13">_isLocal</name></expr>)</condition><then pos:line="814" pos:column="22">
	<block pos:line="815" pos:column="9">{
		<expr_stmt><expr><name pos:line="816" pos:column="17">_userPath</name> <op:operator pos:line="816" pos:column="27">=</op:operator> <name pos:line="816" pos:column="29">_nppPath</name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="818" pos:column="9">else
	<block pos:line="819" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="820" pos:column="17">ITEMIDLIST</name> <type:modifier pos:line="820" pos:column="28">*</type:modifier></type><name pos:line="820" pos:column="29">pidl</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="821" pos:column="17">SHGetSpecialFolderLocation</name><argument_list pos:line="821" pos:column="43">(<argument><expr><name pos:line="821" pos:column="44">NULL</name></expr></argument>, <argument><expr><name pos:line="821" pos:column="50">CSIDL_APPDATA</name></expr></argument>, <argument><expr><op:operator pos:line="821" pos:column="65">&amp;</op:operator><name pos:line="821" pos:column="66">pidl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="822" pos:column="17">TCHAR</name></type> <name><name pos:line="822" pos:column="23">tmp</name><index pos:line="822" pos:column="26">[<expr><name pos:line="822" pos:column="27">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="823" pos:column="17">SHGetPathFromIDList</name><argument_list pos:line="823" pos:column="36">(<argument><expr><name pos:line="823" pos:column="37">pidl</name></expr></argument>, <argument><expr><name pos:line="823" pos:column="43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="824" pos:column="17">_userPath</name> <op:operator pos:line="824" pos:column="27">=</op:operator> <name pos:line="824" pos:column="29">tmp</name></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="826" pos:column="17">PathAppend</name><argument_list pos:line="826" pos:column="27">(<argument><expr><name pos:line="826" pos:column="28">_userPath</name></expr></argument>, <argument><expr><call><name pos:line="826" pos:column="39">TEXT</name><argument_list pos:line="826" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="826" pos:column="44">"Notepad++"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="827" pos:column="17">_appdataNppDir</name> <op:operator pos:line="827" pos:column="32">=</op:operator> <name pos:line="827" pos:column="34">_userPath</name></expr>;</expr_stmt>

		<if pos:line="829" pos:column="17">if <condition pos:line="829" pos:column="20">(<expr><op:operator pos:line="829" pos:column="21">!</op:operator><call><name pos:line="829" pos:column="22">PathFileExists</name><argument_list pos:line="829" pos:column="36">(<argument><expr><call><name><name pos:line="829" pos:column="37">_userPath</name><op:operator pos:line="829" pos:column="46">.</op:operator><name pos:line="829" pos:column="47">c_str</name></name><argument_list pos:line="829" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="829" pos:column="56">
		<block pos:line="830" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="831" pos:column="25">::</op:operator><name pos:line="831" pos:column="27">CreateDirectory</name></name><argument_list pos:line="831" pos:column="42">(<argument><expr><call><name><name pos:line="831" pos:column="43">_userPath</name><op:operator pos:line="831" pos:column="52">.</op:operator><name pos:line="831" pos:column="53">c_str</name></name><argument_list pos:line="831" pos:column="58">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="831" pos:column="62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></else></if>

	<comment type="line" pos:line="835" pos:column="9">//-------------------------------------//</comment>
	<comment type="line" pos:line="836" pos:column="9">// Transparent function for w2k and xp //</comment>
	<comment type="line" pos:line="837" pos:column="9">//-------------------------------------//</comment>
	<expr_stmt><expr><name pos:line="838" pos:column="9">_hUser32</name> <op:operator pos:line="838" pos:column="18">=</op:operator> <call><name><op:operator pos:line="838" pos:column="20">::</op:operator><name pos:line="838" pos:column="22">GetModuleHandle</name></name><argument_list pos:line="838" pos:column="37">(<argument><expr><call><name pos:line="838" pos:column="38">TEXT</name><argument_list pos:line="838" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="838" pos:column="43">"User32"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="839" pos:column="9">if <condition pos:line="839" pos:column="12">(<expr><name pos:line="839" pos:column="13">_hUser32</name></expr>)</condition><then pos:line="839" pos:column="22">
		<expr_stmt><expr><name pos:line="840" pos:column="17">_transparentFuncAddr</name> <op:operator pos:line="840" pos:column="38">=</op:operator> <op:operator pos:line="840" pos:column="40">(</op:operator><name pos:line="840" pos:column="41">WNDPROC</name><op:operator pos:line="840" pos:column="48">)</op:operator><call><name><op:operator pos:line="840" pos:column="49">::</op:operator><name pos:line="840" pos:column="51">GetProcAddress</name></name><argument_list pos:line="840" pos:column="65">(<argument><expr><name pos:line="840" pos:column="66">_hUser32</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="840" pos:column="76">"SetLayeredWindowAttributes"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	
	<comment type="line" pos:line="842" pos:column="9">//---------------------------------------------//</comment>
	<comment type="line" pos:line="843" pos:column="9">// Dlg theme texture function for xp and vista //</comment>
	<comment type="line" pos:line="844" pos:column="9">//---------------------------------------------//</comment>
	<expr_stmt><expr><name pos:line="845" pos:column="9">_hUXTheme</name> <op:operator pos:line="845" pos:column="19">=</op:operator> <call><name><op:operator pos:line="845" pos:column="21">::</op:operator><name pos:line="845" pos:column="23">LoadLibrary</name></name><argument_list pos:line="845" pos:column="34">(<argument><expr><call><name pos:line="845" pos:column="35">TEXT</name><argument_list pos:line="845" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="845" pos:column="40">"uxtheme.dll"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="846" pos:column="9">if <condition pos:line="846" pos:column="12">(<expr><name pos:line="846" pos:column="13">_hUXTheme</name></expr>)</condition><then pos:line="846" pos:column="23">
		<expr_stmt><expr><name pos:line="847" pos:column="17">_enableThemeDialogTextureFuncAddr</name> <op:operator pos:line="847" pos:column="51">=</op:operator> <op:operator pos:line="847" pos:column="53">(</op:operator><name pos:line="847" pos:column="54">WNDPROC</name><op:operator pos:line="847" pos:column="61">)</op:operator><call><name><op:operator pos:line="847" pos:column="62">::</op:operator><name pos:line="847" pos:column="64">GetProcAddress</name></name><argument_list pos:line="847" pos:column="78">(<argument><expr><name pos:line="847" pos:column="79">_hUXTheme</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="847" pos:column="90">"EnableThemeDialogTexture"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<comment type="line" pos:line="849" pos:column="9">//--------------------------//</comment>
	<comment type="line" pos:line="850" pos:column="9">// langs.xml : for per user //</comment>
	<comment type="line" pos:line="851" pos:column="9">//--------------------------//</comment>
	<function_decl><type><name pos:line="852" pos:column="9">generic_string</name></type> <name pos:line="852" pos:column="24">langs_xml_path</name><parameter_list pos:line="852" pos:column="38">(<param><decl><type><name pos:line="852" pos:column="39">_userPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="853" pos:column="9">PathAppend</name><argument_list pos:line="853" pos:column="19">(<argument><expr><name pos:line="853" pos:column="20">langs_xml_path</name></expr></argument>, <argument><expr><call><name pos:line="853" pos:column="36">TEXT</name><argument_list pos:line="853" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="853" pos:column="41">"langs.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt><decl><type><name pos:line="855" pos:column="5">BOOL</name></type> <name pos:line="855" pos:column="10">doRecover</name> <init pos:line="855" pos:column="20">= <expr><name pos:line="855" pos:column="22">FALSE</name></expr></init></decl>;</decl_stmt>
    <if pos:line="856" pos:column="5">if <condition pos:line="856" pos:column="8">(<expr><call><name><op:operator pos:line="856" pos:column="9">::</op:operator><name pos:line="856" pos:column="11">PathFileExists</name></name><argument_list pos:line="856" pos:column="25">(<argument><expr><call><name><name pos:line="856" pos:column="26">langs_xml_path</name><op:operator pos:line="856" pos:column="40">.</op:operator><name pos:line="856" pos:column="41">c_str</name></name><argument_list pos:line="856" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="856" pos:column="50">
    <block pos:line="857" pos:column="5">{
        <decl_stmt><decl><type pos:line="858" pos:column="9">struct <name pos:line="858" pos:column="16">_stat</name></type> <name pos:line="858" pos:column="22">buf</name></decl>;</decl_stmt>
	    
        <if pos:line="860" pos:column="9">if <condition pos:line="860" pos:column="12">(<expr><call><name pos:line="860" pos:column="13">generic_stat</name><argument_list pos:line="860" pos:column="25">(<argument><expr><call><name><name pos:line="860" pos:column="26">langs_xml_path</name><op:operator pos:line="860" pos:column="40">.</op:operator><name pos:line="860" pos:column="41">c_str</name></name><argument_list pos:line="860" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="860" pos:column="50">&amp;</op:operator><name pos:line="860" pos:column="51">buf</name></expr></argument>)</argument_list></call><op:operator pos:line="860" pos:column="55">==</op:operator><lit:literal type="number" pos:line="860" pos:column="57">0</lit:literal></expr>)</condition><then pos:line="860" pos:column="59">
            <if pos:line="861" pos:column="13">if <condition pos:line="861" pos:column="16">(<expr><name><name pos:line="861" pos:column="17">buf</name><op:operator pos:line="861" pos:column="20">.</op:operator><name pos:line="861" pos:column="21">st_size</name></name> <op:operator pos:line="861" pos:column="29">==</op:operator> <lit:literal type="number" pos:line="861" pos:column="32">0</lit:literal></expr>)</condition><then pos:line="861" pos:column="34">
                <expr_stmt><expr><name pos:line="862" pos:column="17">doRecover</name> <op:operator pos:line="862" pos:column="27">=</op:operator> <call><name><op:operator pos:line="862" pos:column="29">::</op:operator><name pos:line="862" pos:column="31">MessageBox</name></name><argument_list pos:line="862" pos:column="41">(<argument><expr><name pos:line="862" pos:column="42">NULL</name></expr></argument>, <argument><expr><call><name pos:line="862" pos:column="48">TEXT</name><argument_list pos:line="862" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="862" pos:column="53">"Load langs.xml failed!\rDo you want to recover your langs.xml?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="862" pos:column="120">TEXT</name><argument_list pos:line="862" pos:column="124">(<argument><expr><lit:literal type="string" pos:line="862" pos:column="125">"Configurator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="862" pos:column="141">MB_YESNO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></then></if>
    }</block></then>
    <else pos:line="864" pos:column="5">else
        <expr_stmt><expr><name pos:line="865" pos:column="9">doRecover</name> <op:operator pos:line="865" pos:column="19">=</op:operator> <lit:literal type="boolean" pos:line="865" pos:column="21">true</lit:literal></expr>;</expr_stmt></else></if>
	
    <if pos:line="867" pos:column="5">if <condition pos:line="867" pos:column="8">(<expr><name pos:line="867" pos:column="9">doRecover</name></expr>)</condition><then pos:line="867" pos:column="19">
	<block pos:line="868" pos:column="9">{
		<function_decl><type><name pos:line="869" pos:column="17">generic_string</name></type> <name pos:line="869" pos:column="32">srcLangsPath</name><parameter_list pos:line="869" pos:column="44">(<param><decl><type><name pos:line="869" pos:column="45">_nppPath</name></type></decl></param>)</parameter_list>;</function_decl>
		<expr_stmt><expr><call><name pos:line="870" pos:column="17">PathAppend</name><argument_list pos:line="870" pos:column="27">(<argument><expr><name pos:line="870" pos:column="28">srcLangsPath</name></expr></argument>, <argument><expr><call><name pos:line="870" pos:column="42">TEXT</name><argument_list pos:line="870" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="870" pos:column="47">"langs.model.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="871" pos:column="17">::</op:operator><name pos:line="871" pos:column="19">CopyFile</name></name><argument_list pos:line="871" pos:column="27">(<argument><expr><call><name><name pos:line="871" pos:column="28">srcLangsPath</name><op:operator pos:line="871" pos:column="40">.</op:operator><name pos:line="871" pos:column="41">c_str</name></name><argument_list pos:line="871" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="871" pos:column="50">langs_xml_path</name><op:operator pos:line="871" pos:column="64">.</op:operator><name pos:line="871" pos:column="65">c_str</name></name><argument_list pos:line="871" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="871" pos:column="74">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="874" pos:column="9">_pXmlDoc</name> <op:operator pos:line="874" pos:column="18">=</op:operator> <op:operator pos:line="874" pos:column="20">new</op:operator> <call><name pos:line="874" pos:column="24">TiXmlDocument</name><argument_list pos:line="874" pos:column="37">(<argument><expr><name pos:line="874" pos:column="38">langs_xml_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	

	<decl_stmt><decl><type><name pos:line="877" pos:column="9">bool</name></type> <name pos:line="877" pos:column="14">loadOkay</name> <init pos:line="877" pos:column="23">= <expr><call><name><name pos:line="877" pos:column="25">_pXmlDoc</name><op:operator pos:line="877" pos:column="33">-&gt;</op:operator><name pos:line="877" pos:column="35">LoadFile</name></name><argument_list pos:line="877" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="878" pos:column="9">if <condition pos:line="878" pos:column="12">(<expr><op:operator pos:line="878" pos:column="13">!</op:operator><name pos:line="878" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="878" pos:column="23">
	<block pos:line="879" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="880" pos:column="17">::</op:operator><name pos:line="880" pos:column="19">MessageBox</name></name><argument_list pos:line="880" pos:column="29">(<argument><expr><name pos:line="880" pos:column="30">NULL</name></expr></argument>, <argument><expr><call><name pos:line="880" pos:column="36">TEXT</name><argument_list pos:line="880" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="880" pos:column="41">"Load langs.xml failed!"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="880" pos:column="68">TEXT</name><argument_list pos:line="880" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="880" pos:column="73">"Configurator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="880" pos:column="89">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="881" pos:column="17">delete</op:operator> <name pos:line="881" pos:column="24">_pXmlDoc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="882" pos:column="17">_pXmlDoc</name> <op:operator pos:line="882" pos:column="26">=</op:operator> <name pos:line="882" pos:column="28">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="883" pos:column="17">isAllLaoded</name> <op:operator pos:line="883" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="883" pos:column="31">false</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="885" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="886" pos:column="17">getLangKeywordsFromXmlTree</name><argument_list pos:line="886" pos:column="43">()</argument_list></call></expr>;</expr_stmt></else></if>

	<comment type="line" pos:line="888" pos:column="9">//---------------------------//</comment>
	<comment type="line" pos:line="889" pos:column="9">// config.xml : for per user //</comment>
	<comment type="line" pos:line="890" pos:column="9">//---------------------------//</comment>
	<function_decl><type><name pos:line="891" pos:column="9">generic_string</name></type> <name pos:line="891" pos:column="24">configPath</name><parameter_list pos:line="891" pos:column="34">(<param><decl><type><name pos:line="891" pos:column="35">_userPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="892" pos:column="9">PathAppend</name><argument_list pos:line="892" pos:column="19">(<argument><expr><name pos:line="892" pos:column="20">configPath</name></expr></argument>, <argument><expr><call><name pos:line="892" pos:column="32">TEXT</name><argument_list pos:line="892" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="892" pos:column="37">"config.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<function_decl><type><name pos:line="894" pos:column="9">generic_string</name></type> <name pos:line="894" pos:column="24">srcConfigPath</name><parameter_list pos:line="894" pos:column="37">(<param><decl><type><name pos:line="894" pos:column="38">_nppPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="895" pos:column="9">PathAppend</name><argument_list pos:line="895" pos:column="19">(<argument><expr><name pos:line="895" pos:column="20">srcConfigPath</name></expr></argument>, <argument><expr><call><name pos:line="895" pos:column="35">TEXT</name><argument_list pos:line="895" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="895" pos:column="40">"config.model.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="897" pos:column="9">if <condition pos:line="897" pos:column="12">(<expr><op:operator pos:line="897" pos:column="13">!</op:operator><call><name><op:operator pos:line="897" pos:column="14">::</op:operator><name pos:line="897" pos:column="16">PathFileExists</name></name><argument_list pos:line="897" pos:column="30">(<argument><expr><call><name><name pos:line="897" pos:column="31">configPath</name><op:operator pos:line="897" pos:column="41">.</op:operator><name pos:line="897" pos:column="42">c_str</name></name><argument_list pos:line="897" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="897" pos:column="51">
		<expr_stmt><expr><call><name><op:operator pos:line="898" pos:column="17">::</op:operator><name pos:line="898" pos:column="19">CopyFile</name></name><argument_list pos:line="898" pos:column="27">(<argument><expr><call><name><name pos:line="898" pos:column="28">srcConfigPath</name><op:operator pos:line="898" pos:column="41">.</op:operator><name pos:line="898" pos:column="42">c_str</name></name><argument_list pos:line="898" pos:column="47">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="898" pos:column="51">configPath</name><op:operator pos:line="898" pos:column="61">.</op:operator><name pos:line="898" pos:column="62">c_str</name></name><argument_list pos:line="898" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="898" pos:column="71">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="900" pos:column="9">_pXmlUserDoc</name> <op:operator pos:line="900" pos:column="22">=</op:operator> <op:operator pos:line="900" pos:column="24">new</op:operator> <call><name pos:line="900" pos:column="28">TiXmlDocument</name><argument_list pos:line="900" pos:column="41">(<argument><expr><name pos:line="900" pos:column="42">configPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="901" pos:column="9">loadOkay</name> <op:operator pos:line="901" pos:column="18">=</op:operator> <call><name><name pos:line="901" pos:column="20">_pXmlUserDoc</name><op:operator pos:line="901" pos:column="32">-&gt;</op:operator><name pos:line="901" pos:column="34">LoadFile</name></name><argument_list pos:line="901" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="902" pos:column="9">if <condition pos:line="902" pos:column="12">(<expr><op:operator pos:line="902" pos:column="13">!</op:operator><name pos:line="902" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="902" pos:column="23">
	<block pos:line="903" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="904" pos:column="17">int</name></type> <name pos:line="904" pos:column="21">res</name> <init pos:line="904" pos:column="25">= <expr><call><name><op:operator pos:line="904" pos:column="27">::</op:operator><name pos:line="904" pos:column="29">MessageBox</name></name><argument_list pos:line="904" pos:column="39">(<argument><expr><name pos:line="904" pos:column="40">NULL</name></expr></argument>, <argument><expr><call><name pos:line="904" pos:column="46">TEXT</name><argument_list pos:line="904" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="904" pos:column="51">"Load config.xml failed!\rDo you want to recover your config.xml?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="904" pos:column="120">TEXT</name><argument_list pos:line="904" pos:column="124">(<argument><expr><lit:literal type="string" pos:line="904" pos:column="125">"Configurator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="904" pos:column="141">MB_YESNO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="905" pos:column="17">if <condition pos:line="905" pos:column="20">(<expr><name pos:line="905" pos:column="21">res</name> <op:operator pos:line="905" pos:column="25">==</op:operator><name pos:line="905" pos:column="27">IDYES</name></expr>)</condition><then pos:line="905" pos:column="33">
		<block pos:line="906" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="907" pos:column="25">::</op:operator><name pos:line="907" pos:column="27">CopyFile</name></name><argument_list pos:line="907" pos:column="35">(<argument><expr><call><name><name pos:line="907" pos:column="36">srcConfigPath</name><op:operator pos:line="907" pos:column="49">.</op:operator><name pos:line="907" pos:column="50">c_str</name></name><argument_list pos:line="907" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="907" pos:column="59">configPath</name><op:operator pos:line="907" pos:column="69">.</op:operator><name pos:line="907" pos:column="70">c_str</name></name><argument_list pos:line="907" pos:column="75">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="907" pos:column="79">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="909" pos:column="25">loadOkay</name> <op:operator pos:line="909" pos:column="34">=</op:operator> <call><name><name pos:line="909" pos:column="36">_pXmlUserDoc</name><op:operator pos:line="909" pos:column="48">-&gt;</op:operator><name pos:line="909" pos:column="50">LoadFile</name></name><argument_list pos:line="909" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
			<if pos:line="910" pos:column="25">if <condition pos:line="910" pos:column="28">(<expr><op:operator pos:line="910" pos:column="29">!</op:operator><name pos:line="910" pos:column="30">loadOkay</name></expr>)</condition><then pos:line="910" pos:column="39">
			<block pos:line="911" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="912" pos:column="33">::</op:operator><name pos:line="912" pos:column="35">MessageBox</name></name><argument_list pos:line="912" pos:column="45">(<argument><expr><name pos:line="912" pos:column="46">NULL</name></expr></argument>, <argument><expr><call><name pos:line="912" pos:column="52">TEXT</name><argument_list pos:line="912" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="912" pos:column="57">"Recover config.xml failed!"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="912" pos:column="88">TEXT</name><argument_list pos:line="912" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="912" pos:column="93">"Configurator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="912" pos:column="109">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="913" pos:column="33">delete</op:operator> <name pos:line="913" pos:column="40">_pXmlUserDoc</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="914" pos:column="33">_pXmlUserDoc</name> <op:operator pos:line="914" pos:column="46">=</op:operator> <name pos:line="914" pos:column="48">NULL</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="915" pos:column="33">isAllLaoded</name> <op:operator pos:line="915" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="915" pos:column="47">false</lit:literal></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="917" pos:column="25">else
				<expr_stmt><expr><call><name pos:line="918" pos:column="33">getUserParametersFromXmlTree</name><argument_list pos:line="918" pos:column="61">()</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="920" pos:column="17">else
		<block pos:line="921" pos:column="17">{
			<expr_stmt><expr><op:operator pos:line="922" pos:column="25">delete</op:operator> <name pos:line="922" pos:column="32">_pXmlUserDoc</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="923" pos:column="25">_pXmlUserDoc</name> <op:operator pos:line="923" pos:column="38">=</op:operator> <name pos:line="923" pos:column="40">NULL</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="924" pos:column="25">isAllLaoded</name> <op:operator pos:line="924" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="924" pos:column="39">false</lit:literal></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then>
	<else pos:line="927" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="928" pos:column="17">getUserParametersFromXmlTree</name><argument_list pos:line="928" pos:column="45">()</argument_list></call></expr>;</expr_stmt></else></if>

	<comment type="line" pos:line="930" pos:column="9">//----------------------------//</comment>
	<comment type="line" pos:line="931" pos:column="9">// stylers.xml : for per user //</comment>
	<comment type="line" pos:line="932" pos:column="9">//----------------------------//</comment>
	
	<expr_stmt><expr><name pos:line="934" pos:column="9">_stylerPath</name> <op:operator pos:line="934" pos:column="21">=</op:operator> <name pos:line="934" pos:column="23">_userPath</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="935" pos:column="9">PathAppend</name><argument_list pos:line="935" pos:column="19">(<argument><expr><name pos:line="935" pos:column="20">_stylerPath</name></expr></argument>, <argument><expr><call><name pos:line="935" pos:column="33">TEXT</name><argument_list pos:line="935" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="935" pos:column="38">"stylers.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="937" pos:column="9">if <condition pos:line="937" pos:column="12">(<expr><op:operator pos:line="937" pos:column="13">!</op:operator><call><name pos:line="937" pos:column="14">PathFileExists</name><argument_list pos:line="937" pos:column="28">(<argument><expr><call><name><name pos:line="937" pos:column="29">_stylerPath</name><op:operator pos:line="937" pos:column="40">.</op:operator><name pos:line="937" pos:column="41">c_str</name></name><argument_list pos:line="937" pos:column="46">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="937" pos:column="50">
	<block pos:line="938" pos:column="9">{
		<function_decl><type><name pos:line="939" pos:column="17">generic_string</name></type> <name pos:line="939" pos:column="32">srcStylersPath</name><parameter_list pos:line="939" pos:column="46">(<param><decl><type><name pos:line="939" pos:column="47">_nppPath</name></type></decl></param>)</parameter_list>;</function_decl>
		<expr_stmt><expr><call><name pos:line="940" pos:column="17">PathAppend</name><argument_list pos:line="940" pos:column="27">(<argument><expr><name pos:line="940" pos:column="28">srcStylersPath</name></expr></argument>, <argument><expr><call><name pos:line="940" pos:column="44">TEXT</name><argument_list pos:line="940" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="940" pos:column="49">"stylers.model.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="942" pos:column="17">::</op:operator><name pos:line="942" pos:column="19">CopyFile</name></name><argument_list pos:line="942" pos:column="27">(<argument><expr><call><name><name pos:line="942" pos:column="28">srcStylersPath</name><op:operator pos:line="942" pos:column="42">.</op:operator><name pos:line="942" pos:column="43">c_str</name></name><argument_list pos:line="942" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="942" pos:column="52">_stylerPath</name><op:operator pos:line="942" pos:column="63">.</op:operator><name pos:line="942" pos:column="64">c_str</name></name><argument_list pos:line="942" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="942" pos:column="73">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="945" pos:column="9">if <condition pos:line="945" pos:column="12">( <expr><call><name><name pos:line="945" pos:column="14">_nppGUI</name><op:operator pos:line="945" pos:column="21">.</op:operator><name pos:line="945" pos:column="22">_themeName</name><op:operator pos:line="945" pos:column="32">.</op:operator><name pos:line="945" pos:column="33">empty</name></name><argument_list pos:line="945" pos:column="38">()</argument_list></call> <op:operator pos:line="945" pos:column="41">||</op:operator> <op:operator pos:line="945" pos:column="44">(</op:operator><op:operator pos:line="945" pos:column="45">!</op:operator><call><name pos:line="945" pos:column="46">PathFileExists</name><argument_list pos:line="945" pos:column="60">(<argument><expr><call><name><name pos:line="945" pos:column="61">_nppGUI</name><op:operator pos:line="945" pos:column="68">.</op:operator><name pos:line="945" pos:column="69">_themeName</name><op:operator pos:line="945" pos:column="79">.</op:operator><name pos:line="945" pos:column="80">c_str</name></name><argument_list pos:line="945" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="945" pos:column="88">)</op:operator></expr> )</condition><then pos:line="945" pos:column="91">
	<block pos:line="946" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="947" pos:column="17">_nppGUI</name><op:operator pos:line="947" pos:column="24">.</op:operator><name pos:line="947" pos:column="25">_themeName</name><op:operator pos:line="947" pos:column="35">.</op:operator><name pos:line="947" pos:column="36">assign</name></name><argument_list pos:line="947" pos:column="42">(<argument><expr><name pos:line="947" pos:column="43">_stylerPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="950" pos:column="9">_pXmlUserStylerDoc</name> <op:operator pos:line="950" pos:column="28">=</op:operator> <op:operator pos:line="950" pos:column="30">new</op:operator> <call><name pos:line="950" pos:column="34">TiXmlDocument</name><argument_list pos:line="950" pos:column="47">(<argument><expr><call><name><name pos:line="950" pos:column="48">_nppGUI</name><op:operator pos:line="950" pos:column="55">.</op:operator><name pos:line="950" pos:column="56">_themeName</name><op:operator pos:line="950" pos:column="66">.</op:operator><name pos:line="950" pos:column="67">c_str</name></name><argument_list pos:line="950" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="952" pos:column="9">loadOkay</name> <op:operator pos:line="952" pos:column="18">=</op:operator> <call><name><name pos:line="952" pos:column="20">_pXmlUserStylerDoc</name><op:operator pos:line="952" pos:column="38">-&gt;</op:operator><name pos:line="952" pos:column="40">LoadFile</name></name><argument_list pos:line="952" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="953" pos:column="9">if <condition pos:line="953" pos:column="12">(<expr><op:operator pos:line="953" pos:column="13">!</op:operator><name pos:line="953" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="953" pos:column="23">
	<block pos:line="954" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="955" pos:column="17">::</op:operator><name pos:line="955" pos:column="19">MessageBox</name></name><argument_list pos:line="955" pos:column="29">(<argument><expr><name pos:line="955" pos:column="30">NULL</name></expr></argument>, <argument><expr><call><name pos:line="955" pos:column="36">TEXT</name><argument_list pos:line="955" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="955" pos:column="41">"Load stylers.xml failed!"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="955" pos:column="70">_stylerPath</name><op:operator pos:line="955" pos:column="81">.</op:operator><name pos:line="955" pos:column="82">c_str</name></name><argument_list pos:line="955" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="955" pos:column="91">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="956" pos:column="17">delete</op:operator> <name pos:line="956" pos:column="24">_pXmlUserStylerDoc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="957" pos:column="17">_pXmlUserStylerDoc</name> <op:operator pos:line="957" pos:column="36">=</op:operator> <name pos:line="957" pos:column="38">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="958" pos:column="17">isAllLaoded</name> <op:operator pos:line="958" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="958" pos:column="31">false</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="960" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="961" pos:column="17">getUserStylersFromXmlTree</name><argument_list pos:line="961" pos:column="42">()</argument_list></call></expr>;</expr_stmt></else></if>

	<expr_stmt><expr><name><name pos:line="963" pos:column="9">_themeSwitcher</name><op:operator pos:line="963" pos:column="23">.</op:operator><name pos:line="963" pos:column="24">_stylesXmlPath</name></name> <op:operator pos:line="963" pos:column="39">=</op:operator> <name pos:line="963" pos:column="41">_stylerPath</name></expr>;</expr_stmt>
	<comment type="line" pos:line="964" pos:column="9">// Firstly, add the default theme</comment>
	<expr_stmt><expr><call><name><name pos:line="965" pos:column="9">_themeSwitcher</name><op:operator pos:line="965" pos:column="23">.</op:operator><name pos:line="965" pos:column="24">addDefaultThemeFromXml</name></name><argument_list pos:line="965" pos:column="46">(<argument><expr><name pos:line="965" pos:column="47">_stylerPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="967" pos:column="9">//-----------------------------------//</comment>
	<comment type="line" pos:line="968" pos:column="9">// userDefineLang.xml : for per user //</comment>
	<comment type="line" pos:line="969" pos:column="9">//-----------------------------------//</comment>
	<expr_stmt><expr><name pos:line="970" pos:column="9">_userDefineLangPath</name> <op:operator pos:line="970" pos:column="29">=</op:operator> <name pos:line="970" pos:column="31">_userPath</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="971" pos:column="9">PathAppend</name><argument_list pos:line="971" pos:column="19">(<argument><expr><name pos:line="971" pos:column="20">_userDefineLangPath</name></expr></argument>, <argument><expr><call><name pos:line="971" pos:column="41">TEXT</name><argument_list pos:line="971" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="971" pos:column="46">"userDefineLang.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="973" pos:column="9">_pXmlUserLangDoc</name> <op:operator pos:line="973" pos:column="26">=</op:operator> <op:operator pos:line="973" pos:column="28">new</op:operator> <call><name pos:line="973" pos:column="32">TiXmlDocument</name><argument_list pos:line="973" pos:column="45">(<argument><expr><name pos:line="973" pos:column="46">_userDefineLangPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="974" pos:column="9">loadOkay</name> <op:operator pos:line="974" pos:column="18">=</op:operator> <call><name><name pos:line="974" pos:column="20">_pXmlUserLangDoc</name><op:operator pos:line="974" pos:column="36">-&gt;</op:operator><name pos:line="974" pos:column="38">LoadFile</name></name><argument_list pos:line="974" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="975" pos:column="9">if <condition pos:line="975" pos:column="12">(<expr><op:operator pos:line="975" pos:column="13">!</op:operator><name pos:line="975" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="975" pos:column="23">
	<block pos:line="976" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="977" pos:column="17">delete</op:operator> <name pos:line="977" pos:column="24">_pXmlUserLangDoc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="978" pos:column="17">_pXmlUserLangDoc</name> <op:operator pos:line="978" pos:column="34">=</op:operator> <name pos:line="978" pos:column="36">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="979" pos:column="17">isAllLaoded</name> <op:operator pos:line="979" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="979" pos:column="31">false</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="981" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="982" pos:column="17">getUserDefineLangsFromXmlTree</name><argument_list pos:line="982" pos:column="46">()</argument_list></call></expr>;</expr_stmt></else></if>
	
	<comment type="line" pos:line="984" pos:column="9">//----------------------------------------------//</comment>
	<comment type="line" pos:line="985" pos:column="9">// nativeLang.xml : for per user                //</comment>
	<comment type="line" pos:line="986" pos:column="9">// In case of absence of user's nativeLang.xml, //</comment>
	<comment type="line" pos:line="987" pos:column="9">// We'll look in the Notepad++ Dir.             //</comment>
	<comment type="line" pos:line="988" pos:column="9">//----------------------------------------------//</comment>
	<function_decl><type><name pos:line="989" pos:column="9">generic_string</name></type> <name pos:line="989" pos:column="24">nativeLangPath</name><parameter_list pos:line="989" pos:column="38">(<param><decl><type><name pos:line="989" pos:column="39">_userPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="990" pos:column="9">PathAppend</name><argument_list pos:line="990" pos:column="19">(<argument><expr><name pos:line="990" pos:column="20">nativeLangPath</name></expr></argument>, <argument><expr><call><name pos:line="990" pos:column="36">TEXT</name><argument_list pos:line="990" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="990" pos:column="41">"nativeLang.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="992" pos:column="9">// LocalizationSwitcher should use always user path</comment>
<cpp:ifdef pos:line="993" pos:column="1">#<cpp:directive pos:line="993" pos:column="2">ifdef</cpp:directive> <name pos:line="993" pos:column="8">UNICODE</name></cpp:ifdef>
	<expr_stmt><expr><name><name pos:line="994" pos:column="9">_localizationSwitcher</name><op:operator pos:line="994" pos:column="30">.</op:operator><name pos:line="994" pos:column="31">_nativeLangPath</name></name> <op:operator pos:line="994" pos:column="47">=</op:operator> <name pos:line="994" pos:column="49">nativeLangPath</name></expr>;</expr_stmt>
<cpp:endif pos:line="995" pos:column="1">#<cpp:directive pos:line="995" pos:column="2">endif</cpp:directive></cpp:endif>

	<if pos:line="997" pos:column="9">if <condition pos:line="997" pos:column="12">(<expr><op:operator pos:line="997" pos:column="13">!</op:operator><call><name pos:line="997" pos:column="14">PathFileExists</name><argument_list pos:line="997" pos:column="28">(<argument><expr><call><name><name pos:line="997" pos:column="29">nativeLangPath</name><op:operator pos:line="997" pos:column="43">.</op:operator><name pos:line="997" pos:column="44">c_str</name></name><argument_list pos:line="997" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="997" pos:column="53">
	<block pos:line="998" pos:column="9">{
		<expr_stmt><expr><name pos:line="999" pos:column="17">nativeLangPath</name> <op:operator pos:line="999" pos:column="32">=</op:operator> <name pos:line="999" pos:column="34">_nppPath</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1000" pos:column="17">PathAppend</name><argument_list pos:line="1000" pos:column="27">(<argument><expr><name pos:line="1000" pos:column="28">nativeLangPath</name></expr></argument>, <argument><expr><call><name pos:line="1000" pos:column="44">TEXT</name><argument_list pos:line="1000" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="1000" pos:column="49">"nativeLang.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="1003" pos:column="9">_pXmlNativeLangDocA</name> <op:operator pos:line="1003" pos:column="29">=</op:operator> <op:operator pos:line="1003" pos:column="31">new</op:operator> <call><name pos:line="1003" pos:column="35">TiXmlDocumentA</name><argument_list pos:line="1003" pos:column="49">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="1005" pos:column="9">loadOkay</name> <op:operator pos:line="1005" pos:column="18">=</op:operator> <call><name><name pos:line="1005" pos:column="20">_pXmlNativeLangDocA</name><op:operator pos:line="1005" pos:column="39">-&gt;</op:operator><name pos:line="1005" pos:column="41">LoadUnicodeFilePath</name></name><argument_list pos:line="1005" pos:column="60">(<argument><expr><call><name><name pos:line="1005" pos:column="61">nativeLangPath</name><op:operator pos:line="1005" pos:column="75">.</op:operator><name pos:line="1005" pos:column="76">c_str</name></name><argument_list pos:line="1005" pos:column="81">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1006" pos:column="9">if <condition pos:line="1006" pos:column="12">(<expr><op:operator pos:line="1006" pos:column="13">!</op:operator><name pos:line="1006" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="1006" pos:column="23">
	<block pos:line="1007" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1008" pos:column="17">delete</op:operator> <name pos:line="1008" pos:column="24">_pXmlNativeLangDocA</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1009" pos:column="17">_pXmlNativeLangDocA</name> <op:operator pos:line="1009" pos:column="37">=</op:operator> <name pos:line="1009" pos:column="39">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1010" pos:column="17">isAllLaoded</name> <op:operator pos:line="1010" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="1010" pos:column="31">false</lit:literal></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="1013" pos:column="9">//---------------------------------//</comment>
	<comment type="line" pos:line="1014" pos:column="9">// toolbarIcons.xml : for per user //</comment>
	<comment type="line" pos:line="1015" pos:column="9">//---------------------------------//</comment>
	<function_decl><type><name pos:line="1016" pos:column="9">generic_string</name></type> <name pos:line="1016" pos:column="24">toolbarIconsPath</name><parameter_list pos:line="1016" pos:column="40">(<param><decl><type><name pos:line="1016" pos:column="41">_userPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<expr_stmt><expr><call><name pos:line="1017" pos:column="9">PathAppend</name><argument_list pos:line="1017" pos:column="19">(<argument><expr><name pos:line="1017" pos:column="20">toolbarIconsPath</name></expr></argument>, <argument><expr><call><name pos:line="1017" pos:column="38">TEXT</name><argument_list pos:line="1017" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="1017" pos:column="43">"toolbarIcons.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="1019" pos:column="9">_pXmlToolIconsDoc</name> <op:operator pos:line="1019" pos:column="27">=</op:operator> <op:operator pos:line="1019" pos:column="29">new</op:operator> <call><name pos:line="1019" pos:column="33">TiXmlDocument</name><argument_list pos:line="1019" pos:column="46">(<argument><expr><name pos:line="1019" pos:column="47">toolbarIconsPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1020" pos:column="9">loadOkay</name> <op:operator pos:line="1020" pos:column="18">=</op:operator> <call><name><name pos:line="1020" pos:column="20">_pXmlToolIconsDoc</name><op:operator pos:line="1020" pos:column="37">-&gt;</op:operator><name pos:line="1020" pos:column="39">LoadFile</name></name><argument_list pos:line="1020" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1021" pos:column="9">if <condition pos:line="1021" pos:column="12">(<expr><op:operator pos:line="1021" pos:column="13">!</op:operator><name pos:line="1021" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="1021" pos:column="23">
	<block pos:line="1022" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1023" pos:column="17">delete</op:operator> <name pos:line="1023" pos:column="24">_pXmlToolIconsDoc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1024" pos:column="17">_pXmlToolIconsDoc</name> <op:operator pos:line="1024" pos:column="35">=</op:operator> <name pos:line="1024" pos:column="37">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1025" pos:column="17">isAllLaoded</name> <op:operator pos:line="1025" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="1025" pos:column="31">false</lit:literal></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="1028" pos:column="9">//------------------------------//</comment>
	<comment type="line" pos:line="1029" pos:column="9">// shortcuts.xml : for per user //</comment>
	<comment type="line" pos:line="1030" pos:column="9">//------------------------------//</comment>
	<expr_stmt><expr><name pos:line="1031" pos:column="9">_shortcutsPath</name> <op:operator pos:line="1031" pos:column="24">=</op:operator> <name pos:line="1031" pos:column="26">_userPath</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1032" pos:column="9">PathAppend</name><argument_list pos:line="1032" pos:column="19">(<argument><expr><name pos:line="1032" pos:column="20">_shortcutsPath</name></expr></argument>, <argument><expr><call><name pos:line="1032" pos:column="36">TEXT</name><argument_list pos:line="1032" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="1032" pos:column="41">"shortcuts.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1034" pos:column="9">if <condition pos:line="1034" pos:column="12">(<expr><op:operator pos:line="1034" pos:column="13">!</op:operator><call><name pos:line="1034" pos:column="14">PathFileExists</name><argument_list pos:line="1034" pos:column="28">(<argument><expr><call><name><name pos:line="1034" pos:column="29">_shortcutsPath</name><op:operator pos:line="1034" pos:column="43">.</op:operator><name pos:line="1034" pos:column="44">c_str</name></name><argument_list pos:line="1034" pos:column="49">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1034" pos:column="53">
	<block pos:line="1035" pos:column="9">{
		<function_decl><type><name pos:line="1036" pos:column="17">generic_string</name></type> <name pos:line="1036" pos:column="32">srcShortcutsPath</name><parameter_list pos:line="1036" pos:column="48">(<param><decl><type><name pos:line="1036" pos:column="49">_nppPath</name></type></decl></param>)</parameter_list>;</function_decl>
		<expr_stmt><expr><call><name pos:line="1037" pos:column="17">PathAppend</name><argument_list pos:line="1037" pos:column="27">(<argument><expr><name pos:line="1037" pos:column="28">srcShortcutsPath</name></expr></argument>, <argument><expr><call><name pos:line="1037" pos:column="46">TEXT</name><argument_list pos:line="1037" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1037" pos:column="51">"shortcuts.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="1039" pos:column="17">::</op:operator><name pos:line="1039" pos:column="19">CopyFile</name></name><argument_list pos:line="1039" pos:column="27">(<argument><expr><call><name><name pos:line="1039" pos:column="28">srcShortcutsPath</name><op:operator pos:line="1039" pos:column="44">.</op:operator><name pos:line="1039" pos:column="45">c_str</name></name><argument_list pos:line="1039" pos:column="50">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1039" pos:column="54">_shortcutsPath</name><op:operator pos:line="1039" pos:column="68">.</op:operator><name pos:line="1039" pos:column="69">c_str</name></name><argument_list pos:line="1039" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1039" pos:column="78">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="1042" pos:column="9">_pXmlShortcutDoc</name> <op:operator pos:line="1042" pos:column="26">=</op:operator> <op:operator pos:line="1042" pos:column="28">new</op:operator> <call><name pos:line="1042" pos:column="32">TiXmlDocument</name><argument_list pos:line="1042" pos:column="45">(<argument><expr><name pos:line="1042" pos:column="46">_shortcutsPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1043" pos:column="9">loadOkay</name> <op:operator pos:line="1043" pos:column="18">=</op:operator> <call><name><name pos:line="1043" pos:column="20">_pXmlShortcutDoc</name><op:operator pos:line="1043" pos:column="36">-&gt;</op:operator><name pos:line="1043" pos:column="38">LoadFile</name></name><argument_list pos:line="1043" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1044" pos:column="9">if <condition pos:line="1044" pos:column="12">(<expr><op:operator pos:line="1044" pos:column="13">!</op:operator><name pos:line="1044" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="1044" pos:column="23">
	<block pos:line="1045" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1046" pos:column="17">delete</op:operator> <name pos:line="1046" pos:column="24">_pXmlShortcutDoc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1047" pos:column="17">_pXmlShortcutDoc</name> <op:operator pos:line="1047" pos:column="34">=</op:operator> <name pos:line="1047" pos:column="36">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1048" pos:column="17">isAllLaoded</name> <op:operator pos:line="1048" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="1048" pos:column="31">false</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1050" pos:column="9">else
	<block pos:line="1051" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="1052" pos:column="17">getShortcutsFromXmlTree</name><argument_list pos:line="1052" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1053" pos:column="17">getMacrosFromXmlTree</name><argument_list pos:line="1053" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1054" pos:column="17">getUserCmdsFromXmlTree</name><argument_list pos:line="1054" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="1056" pos:column="17">// fill out _scintillaModifiedKeys : </comment>
		<comment type="line" pos:line="1057" pos:column="17">// those user defined Scintilla key will be used remap Scintilla Key Array</comment>
		<expr_stmt><expr><call><name pos:line="1058" pos:column="17">getScintKeysFromXmlTree</name><argument_list pos:line="1058" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<comment type="line" pos:line="1061" pos:column="9">//---------------------------------//</comment>
	<comment type="line" pos:line="1062" pos:column="9">// contextMenu.xml : for per user //</comment>
	<comment type="line" pos:line="1063" pos:column="9">//---------------------------------//</comment>
	<expr_stmt><expr><name pos:line="1064" pos:column="9">_contextMenuPath</name> <op:operator pos:line="1064" pos:column="26">=</op:operator> <name pos:line="1064" pos:column="28">_userPath</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1065" pos:column="9">PathAppend</name><argument_list pos:line="1065" pos:column="19">(<argument><expr><name pos:line="1065" pos:column="20">_contextMenuPath</name></expr></argument>, <argument><expr><call><name pos:line="1065" pos:column="38">TEXT</name><argument_list pos:line="1065" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="1065" pos:column="43">"contextMenu.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1067" pos:column="9">if <condition pos:line="1067" pos:column="12">(<expr><op:operator pos:line="1067" pos:column="13">!</op:operator><call><name pos:line="1067" pos:column="14">PathFileExists</name><argument_list pos:line="1067" pos:column="28">(<argument><expr><call><name><name pos:line="1067" pos:column="29">_contextMenuPath</name><op:operator pos:line="1067" pos:column="45">.</op:operator><name pos:line="1067" pos:column="46">c_str</name></name><argument_list pos:line="1067" pos:column="51">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1067" pos:column="55">
	<block pos:line="1068" pos:column="9">{
		<function_decl><type><name pos:line="1069" pos:column="17">generic_string</name></type> <name pos:line="1069" pos:column="32">srcContextMenuPath</name><parameter_list pos:line="1069" pos:column="50">(<param><decl><type><name pos:line="1069" pos:column="51">_nppPath</name></type></decl></param>)</parameter_list>;</function_decl>
		<expr_stmt><expr><call><name pos:line="1070" pos:column="17">PathAppend</name><argument_list pos:line="1070" pos:column="27">(<argument><expr><name pos:line="1070" pos:column="28">srcContextMenuPath</name></expr></argument>, <argument><expr><call><name pos:line="1070" pos:column="48">TEXT</name><argument_list pos:line="1070" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="1070" pos:column="53">"contextMenu.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><op:operator pos:line="1072" pos:column="17">::</op:operator><name pos:line="1072" pos:column="19">CopyFile</name></name><argument_list pos:line="1072" pos:column="27">(<argument><expr><call><name><name pos:line="1072" pos:column="28">srcContextMenuPath</name><op:operator pos:line="1072" pos:column="46">.</op:operator><name pos:line="1072" pos:column="47">c_str</name></name><argument_list pos:line="1072" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1072" pos:column="56">_contextMenuPath</name><op:operator pos:line="1072" pos:column="72">.</op:operator><name pos:line="1072" pos:column="73">c_str</name></name><argument_list pos:line="1072" pos:column="78">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1072" pos:column="82">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="1075" pos:column="9">_pXmlContextMenuDocA</name> <op:operator pos:line="1075" pos:column="30">=</op:operator> <op:operator pos:line="1075" pos:column="32">new</op:operator> <call><name pos:line="1075" pos:column="36">TiXmlDocumentA</name><argument_list pos:line="1075" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1076" pos:column="9">loadOkay</name> <op:operator pos:line="1076" pos:column="18">=</op:operator> <call><name><name pos:line="1076" pos:column="20">_pXmlContextMenuDocA</name><op:operator pos:line="1076" pos:column="40">-&gt;</op:operator><name pos:line="1076" pos:column="42">LoadUnicodeFilePath</name></name><argument_list pos:line="1076" pos:column="61">(<argument><expr><call><name><name pos:line="1076" pos:column="62">_contextMenuPath</name><op:operator pos:line="1076" pos:column="78">.</op:operator><name pos:line="1076" pos:column="79">c_str</name></name><argument_list pos:line="1076" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1077" pos:column="9">if <condition pos:line="1077" pos:column="12">(<expr><op:operator pos:line="1077" pos:column="13">!</op:operator><name pos:line="1077" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="1077" pos:column="23">
	<block pos:line="1078" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1079" pos:column="17">delete</op:operator> <name pos:line="1079" pos:column="24">_pXmlContextMenuDocA</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1080" pos:column="17">_pXmlContextMenuDocA</name> <op:operator pos:line="1080" pos:column="38">=</op:operator> <name pos:line="1080" pos:column="40">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1081" pos:column="17">isAllLaoded</name> <op:operator pos:line="1081" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="1081" pos:column="31">false</lit:literal></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="1084" pos:column="9">//----------------------------//</comment>
	<comment type="line" pos:line="1085" pos:column="9">// session.xml : for per user //</comment>
	<comment type="line" pos:line="1086" pos:column="9">//----------------------------//</comment>
	<expr_stmt><expr><name pos:line="1087" pos:column="9">_sessionPath</name> <op:operator pos:line="1087" pos:column="22">=</op:operator> <name pos:line="1087" pos:column="24">_userPath</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1088" pos:column="9">PathAppend</name><argument_list pos:line="1088" pos:column="19">(<argument><expr><name pos:line="1088" pos:column="20">_sessionPath</name></expr></argument>, <argument><expr><call><name pos:line="1088" pos:column="34">TEXT</name><argument_list pos:line="1088" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="1088" pos:column="39">"session.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1090" pos:column="9">// Don't load session.xml if not required in order to speed up!!</comment>
	<decl_stmt><decl><type><specifier pos:line="1091" pos:column="9">const</specifier> <name pos:line="1091" pos:column="15">NppGUI</name> <type:modifier pos:line="1091" pos:column="22">&amp;</type:modifier></type> <name pos:line="1091" pos:column="24">nppGUI</name> <init pos:line="1091" pos:column="31">= <expr><op:operator pos:line="1091" pos:column="33">(</op:operator><call><name><name pos:line="1091" pos:column="34">NppParameters</name><op:operator pos:line="1091" pos:column="47">::</op:operator><name pos:line="1091" pos:column="49">getInstance</name></name><argument_list pos:line="1091" pos:column="60">()</argument_list></call><op:operator pos:line="1091" pos:column="62">)</op:operator><op:operator pos:line="1091" pos:column="63">-&gt;</op:operator><call><name pos:line="1091" pos:column="65">getNppGUI</name><argument_list pos:line="1091" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1092" pos:column="9">if <condition pos:line="1092" pos:column="12">(<expr><name><name pos:line="1092" pos:column="13">nppGUI</name><op:operator pos:line="1092" pos:column="19">.</op:operator><name pos:line="1092" pos:column="20">_rememberLastSession</name></name></expr>)</condition><then pos:line="1092" pos:column="41">
	<block pos:line="1093" pos:column="9">{
		<expr_stmt><expr><name pos:line="1094" pos:column="17">_pXmlSessionDoc</name> <op:operator pos:line="1094" pos:column="33">=</op:operator> <op:operator pos:line="1094" pos:column="35">new</op:operator> <call><name pos:line="1094" pos:column="39">TiXmlDocument</name><argument_list pos:line="1094" pos:column="52">(<argument><expr><name pos:line="1094" pos:column="53">_sessionPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1095" pos:column="17">loadOkay</name> <op:operator pos:line="1095" pos:column="26">=</op:operator> <call><name><name pos:line="1095" pos:column="28">_pXmlSessionDoc</name><op:operator pos:line="1095" pos:column="43">-&gt;</op:operator><name pos:line="1095" pos:column="45">LoadFile</name></name><argument_list pos:line="1095" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1096" pos:column="17">if <condition pos:line="1096" pos:column="20">(<expr><op:operator pos:line="1096" pos:column="21">!</op:operator><name pos:line="1096" pos:column="22">loadOkay</name></expr>)</condition><then pos:line="1096" pos:column="31">
			<expr_stmt><expr><name pos:line="1097" pos:column="25">isAllLaoded</name> <op:operator pos:line="1097" pos:column="37">=</op:operator> <lit:literal type="boolean" pos:line="1097" pos:column="39">false</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="1098" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="1099" pos:column="25">getSessionFromXmlTree</name><argument_list pos:line="1099" pos:column="46">()</argument_list></call></expr>;</expr_stmt></else></if>

		<expr_stmt><expr><op:operator pos:line="1101" pos:column="17">delete</op:operator> <name pos:line="1101" pos:column="24">_pXmlSessionDoc</name></expr>;</expr_stmt>
		<for pos:line="1102" pos:column="17">for (<init><decl><type><name pos:line="1102" pos:column="22">size_t</name></type> <name pos:line="1102" pos:column="29">i</name> <init pos:line="1102" pos:column="31">= <expr><lit:literal type="number" pos:line="1102" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1102" pos:column="37">i</name> <op:operator pos:line="1102" pos:column="39">&lt;</op:operator> <call><name><name pos:line="1102" pos:column="41">_pXmlExternalLexerDoc</name><op:operator pos:line="1102" pos:column="62">.</op:operator><name pos:line="1102" pos:column="63">size</name></name><argument_list pos:line="1102" pos:column="67">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1102" pos:column="72">i</name><op:operator pos:line="1102" pos:column="73">++</op:operator></expr></incr>)
			<if pos:line="1103" pos:column="25">if <condition pos:line="1103" pos:column="28">(<expr><name><name pos:line="1103" pos:column="29">_pXmlExternalLexerDoc</name><index pos:line="1103" pos:column="50">[<expr><name pos:line="1103" pos:column="51">i</name></expr>]</index></name></expr>)</condition><then pos:line="1103" pos:column="54">
				<expr_stmt><expr><op:operator pos:line="1104" pos:column="33">delete</op:operator> <name><name pos:line="1104" pos:column="40">_pXmlExternalLexerDoc</name><index pos:line="1104" pos:column="61">[<expr><name pos:line="1104" pos:column="62">i</name></expr>]</index></name></expr>;</expr_stmt></then></if></for>

		<expr_stmt><expr><name pos:line="1106" pos:column="17">_pXmlSessionDoc</name> <op:operator pos:line="1106" pos:column="33">=</op:operator> <name pos:line="1106" pos:column="35">NULL</name></expr>;</expr_stmt>
	}</block></then></if>

    <comment type="line" pos:line="1109" pos:column="5">//------------------------------//</comment>
	<comment type="line" pos:line="1110" pos:column="9">// blacklist.xml : for per user //</comment>
	<comment type="line" pos:line="1111" pos:column="9">//------------------------------//</comment>
	<expr_stmt><expr><name pos:line="1112" pos:column="9">_blacklistPath</name> <op:operator pos:line="1112" pos:column="24">=</op:operator> <name pos:line="1112" pos:column="26">_userPath</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1113" pos:column="9">PathAppend</name><argument_list pos:line="1113" pos:column="19">(<argument><expr><name pos:line="1113" pos:column="20">_blacklistPath</name></expr></argument>, <argument><expr><call><name pos:line="1113" pos:column="36">TEXT</name><argument_list pos:line="1113" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="1113" pos:column="41">"blacklist.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if pos:line="1115" pos:column="5">if <condition pos:line="1115" pos:column="8">(<expr><call><name pos:line="1115" pos:column="9">PathFileExists</name><argument_list pos:line="1115" pos:column="23">(<argument><expr><call><name><name pos:line="1115" pos:column="24">_blacklistPath</name><op:operator pos:line="1115" pos:column="38">.</op:operator><name pos:line="1115" pos:column="39">c_str</name></name><argument_list pos:line="1115" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1115" pos:column="48">
	<block pos:line="1116" pos:column="9">{
        <expr_stmt><expr><name pos:line="1117" pos:column="9">_pXmlBlacklistDoc</name> <op:operator pos:line="1117" pos:column="27">=</op:operator> <op:operator pos:line="1117" pos:column="29">new</op:operator> <call><name pos:line="1117" pos:column="33">TiXmlDocument</name><argument_list pos:line="1117" pos:column="46">(<argument><expr><name pos:line="1117" pos:column="47">_blacklistPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="1118" pos:column="9">loadOkay</name> <op:operator pos:line="1118" pos:column="18">=</op:operator> <call><name><name pos:line="1118" pos:column="20">_pXmlBlacklistDoc</name><op:operator pos:line="1118" pos:column="37">-&gt;</op:operator><name pos:line="1118" pos:column="39">LoadFile</name></name><argument_list pos:line="1118" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
        <if pos:line="1119" pos:column="9">if <condition pos:line="1119" pos:column="12">(<expr><name pos:line="1119" pos:column="13">loadOkay</name></expr>)</condition><then pos:line="1119" pos:column="22">
        <block pos:line="1120" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="1121" pos:column="13">getBlackListFromXmlTree</name><argument_list pos:line="1121" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></then></if>
	<return pos:line="1124" pos:column="9">return <expr><name pos:line="1124" pos:column="16">isAllLaoded</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1127" pos:column="1">void</name></type> <name><name pos:line="1127" pos:column="6">NppParameters</name><op:operator pos:line="1127" pos:column="19">::</op:operator><name pos:line="1127" pos:column="21">destroyInstance</name></name><parameter_list pos:line="1127" pos:column="36">()</parameter_list>
<block pos:line="1128" pos:column="1">{
	<if pos:line="1129" pos:column="9">if <condition pos:line="1129" pos:column="12">(<expr><name pos:line="1129" pos:column="13">_pXmlDoc</name> <op:operator pos:line="1129" pos:column="22">!=</op:operator> <name pos:line="1129" pos:column="25">NULL</name></expr>)</condition><then pos:line="1129" pos:column="30">
	<block pos:line="1130" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1131" pos:column="17">delete</op:operator> <name pos:line="1131" pos:column="24">_pXmlDoc</name></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="1134" pos:column="9">if <condition pos:line="1134" pos:column="12">(<expr><name pos:line="1134" pos:column="13">_pXmlUserDoc</name> <op:operator pos:line="1134" pos:column="26">!=</op:operator> <name pos:line="1134" pos:column="29">NULL</name></expr>)</condition><then pos:line="1134" pos:column="34">
	<block pos:line="1135" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1136" pos:column="17">delete</op:operator> <name pos:line="1136" pos:column="24">_pXmlUserDoc</name></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="1138" pos:column="9">if <condition pos:line="1138" pos:column="12">(<expr><name pos:line="1138" pos:column="13">_pXmlUserStylerDoc</name></expr>)</condition><then pos:line="1138" pos:column="32">
		<expr_stmt><expr><op:operator pos:line="1139" pos:column="17">delete</op:operator> <name pos:line="1139" pos:column="24">_pXmlUserStylerDoc</name></expr>;</expr_stmt></then></if>

	<if pos:line="1141" pos:column="9">if <condition pos:line="1141" pos:column="12">(<expr><name pos:line="1141" pos:column="13">_pXmlUserLangDoc</name></expr>)</condition><then pos:line="1141" pos:column="30">
    <block pos:line="1142" pos:column="5">{
		<expr_stmt><expr><op:operator pos:line="1143" pos:column="17">delete</op:operator> <name pos:line="1143" pos:column="24">_pXmlUserLangDoc</name></expr>;</expr_stmt>
    }</block></then></if>

	<for pos:line="1146" pos:column="9">for (<init><decl><type><name pos:line="1146" pos:column="14">int</name></type> <name pos:line="1146" pos:column="18">i</name> <init pos:line="1146" pos:column="20">= <expr><lit:literal type="number" pos:line="1146" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1146" pos:column="26">i</name> <op:operator pos:line="1146" pos:column="28">&lt;</op:operator> <name pos:line="1146" pos:column="30">_nbImportedULD</name></expr> ;</condition> <incr><expr><name pos:line="1146" pos:column="47">i</name><op:operator pos:line="1146" pos:column="48">++</op:operator></expr></incr>)
	<block pos:line="1147" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1148" pos:column="17">delete</op:operator> <name><name pos:line="1148" pos:column="24">_importedULD</name><index pos:line="1148" pos:column="36">[<expr><name pos:line="1148" pos:column="37">i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1149" pos:column="17">_importedULD</name><index pos:line="1149" pos:column="29">[<expr><name pos:line="1149" pos:column="30">i</name></expr>]</index></name> <op:operator pos:line="1149" pos:column="33">=</op:operator> <name pos:line="1149" pos:column="35">NULL</name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><name pos:line="1151" pos:column="9">_nbImportedULD</name> <op:operator pos:line="1151" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="1151" pos:column="26">0</lit:literal></expr>;</expr_stmt>

	<if pos:line="1153" pos:column="9">if <condition pos:line="1153" pos:column="12">(<expr><name pos:line="1153" pos:column="13">_pXmlNativeLangDocA</name></expr>)</condition><then pos:line="1153" pos:column="33">
		<expr_stmt><expr><op:operator pos:line="1154" pos:column="17">delete</op:operator> <name pos:line="1154" pos:column="24">_pXmlNativeLangDocA</name></expr>;</expr_stmt></then></if>

	<if pos:line="1156" pos:column="9">if <condition pos:line="1156" pos:column="12">(<expr><name pos:line="1156" pos:column="13">_pXmlToolIconsDoc</name></expr>)</condition><then pos:line="1156" pos:column="31">
		<expr_stmt><expr><op:operator pos:line="1157" pos:column="17">delete</op:operator> <name pos:line="1157" pos:column="24">_pXmlToolIconsDoc</name></expr>;</expr_stmt></then></if>

	<if pos:line="1159" pos:column="9">if <condition pos:line="1159" pos:column="12">(<expr><name pos:line="1159" pos:column="13">_pXmlShortcutDoc</name></expr>)</condition><then pos:line="1159" pos:column="30">
		<expr_stmt><expr><op:operator pos:line="1160" pos:column="17">delete</op:operator> <name pos:line="1160" pos:column="24">_pXmlShortcutDoc</name></expr>;</expr_stmt></then></if>

	<if pos:line="1162" pos:column="9">if <condition pos:line="1162" pos:column="12">(<expr><name pos:line="1162" pos:column="13">_pXmlContextMenuDocA</name></expr>)</condition><then pos:line="1162" pos:column="34">
		<expr_stmt><expr><op:operator pos:line="1163" pos:column="17">delete</op:operator> <name pos:line="1163" pos:column="24">_pXmlContextMenuDocA</name></expr>;</expr_stmt></then></if>

	<if pos:line="1165" pos:column="9">if <condition pos:line="1165" pos:column="12">(<expr><name pos:line="1165" pos:column="13">_pXmlSessionDoc</name></expr>)</condition><then pos:line="1165" pos:column="29">
		<expr_stmt><expr><op:operator pos:line="1166" pos:column="17">delete</op:operator> <name pos:line="1166" pos:column="24">_pXmlSessionDoc</name></expr>;</expr_stmt></then></if>

	<if pos:line="1168" pos:column="9">if <condition pos:line="1168" pos:column="12">(<expr><name pos:line="1168" pos:column="13">_pXmlBlacklistDoc</name></expr>)</condition><then pos:line="1168" pos:column="31">
		<expr_stmt><expr><op:operator pos:line="1169" pos:column="17">delete</op:operator> <name pos:line="1169" pos:column="24">_pXmlBlacklistDoc</name></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><op:operator pos:line="1171" pos:column="9">delete</op:operator> <name pos:line="1171" pos:column="16">_pSelf</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1174" pos:column="1">void</name></type> <name><name pos:line="1174" pos:column="6">NppParameters</name><op:operator pos:line="1174" pos:column="19">::</op:operator><name pos:line="1174" pos:column="21">setFontList</name></name><parameter_list pos:line="1174" pos:column="32">(<param><decl><type><name pos:line="1174" pos:column="33">HWND</name></type> <name pos:line="1174" pos:column="38">hWnd</name></decl></param>)</parameter_list>
<block pos:line="1175" pos:column="1">{
	<comment type="line" pos:line="1176" pos:column="9">//---------------//</comment>
	<comment type="line" pos:line="1177" pos:column="9">// Sys font list //</comment>
	<comment type="line" pos:line="1178" pos:column="9">//---------------//</comment>

	<decl_stmt><decl><type><name pos:line="1180" pos:column="9">LOGFONT</name></type> <name pos:line="1180" pos:column="17">lf</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1181" pos:column="9">_fontlist</name><op:operator pos:line="1181" pos:column="18">.</op:operator><name pos:line="1181" pos:column="19">clear</name></name><argument_list pos:line="1181" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1182" pos:column="9">_fontlist</name><op:operator pos:line="1182" pos:column="18">.</op:operator><name pos:line="1182" pos:column="19">push_back</name></name><argument_list pos:line="1182" pos:column="28">(<argument><expr><call><name pos:line="1182" pos:column="29">TEXT</name><argument_list pos:line="1182" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="1182" pos:column="34">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="1184" pos:column="9">lf</name><op:operator pos:line="1184" pos:column="11">.</op:operator><name pos:line="1184" pos:column="12">lfCharSet</name></name> <op:operator pos:line="1184" pos:column="22">=</op:operator> <name pos:line="1184" pos:column="24">DEFAULT_CHARSET</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1185" pos:column="9">lf</name><op:operator pos:line="1185" pos:column="11">.</op:operator><name pos:line="1185" pos:column="12">lfFaceName</name><index pos:line="1185" pos:column="22">[<expr><lit:literal type="number" pos:line="1185" pos:column="23">0</lit:literal></expr>]</index></name><op:operator pos:line="1185" pos:column="25">=</op:operator><lit:literal type="char" pos:line="1185" pos:column="26">'\0'</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1186" pos:column="9">lf</name><op:operator pos:line="1186" pos:column="11">.</op:operator><name pos:line="1186" pos:column="12">lfPitchAndFamily</name></name> <op:operator pos:line="1186" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="1186" pos:column="31">0</lit:literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1187" pos:column="9">HDC</name></type> <name pos:line="1187" pos:column="13">hDC</name> <init pos:line="1187" pos:column="17">= <expr><call><name><op:operator pos:line="1187" pos:column="19">::</op:operator><name pos:line="1187" pos:column="21">GetDC</name></name><argument_list pos:line="1187" pos:column="26">(<argument><expr><name pos:line="1187" pos:column="27">hWnd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="1189" pos:column="9">::</op:operator><name pos:line="1189" pos:column="11">EnumFontFamiliesEx</name></name><argument_list pos:line="1189" pos:column="29">(<argument><expr><name pos:line="1189" pos:column="30">hDC</name></expr></argument>, 
						<argument><expr><op:operator pos:line="1190" pos:column="49">&amp;</op:operator><name pos:line="1190" pos:column="50">lf</name></expr></argument>, 
						<argument><expr><op:operator pos:line="1191" pos:column="49">(</op:operator><name pos:line="1191" pos:column="50">FONTENUMPROC</name><op:operator pos:line="1191" pos:column="62">)</op:operator> <name pos:line="1191" pos:column="64">EnumFontFamExProc</name></expr></argument>, 
						<argument><expr><op:operator pos:line="1192" pos:column="49">(</op:operator><name pos:line="1192" pos:column="50">LPARAM</name><op:operator pos:line="1192" pos:column="56">)</op:operator> <op:operator pos:line="1192" pos:column="58">&amp;</op:operator><name pos:line="1192" pos:column="59">_fontlist</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1192" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1195" pos:column="1">void</name></type> <name><name pos:line="1195" pos:column="6">NppParameters</name><op:operator pos:line="1195" pos:column="19">::</op:operator><name pos:line="1195" pos:column="21">getLangKeywordsFromXmlTree</name></name><parameter_list pos:line="1195" pos:column="47">()</parameter_list>
<block pos:line="1196" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1197" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1197" pos:column="19">*</type:modifier></type><name pos:line="1197" pos:column="20">root</name> <init pos:line="1197" pos:column="25">= 
        <expr><call><name><name pos:line="1198" pos:column="9">_pXmlDoc</name><op:operator pos:line="1198" pos:column="17">-&gt;</op:operator><name pos:line="1198" pos:column="19">FirstChild</name></name><argument_list pos:line="1198" pos:column="29">(<argument><expr><call><name pos:line="1198" pos:column="30">TEXT</name><argument_list pos:line="1198" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1198" pos:column="35">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1199" pos:column="17">if <condition pos:line="1199" pos:column="20">(<expr><op:operator pos:line="1199" pos:column="21">!</op:operator><name pos:line="1199" pos:column="22">root</name></expr>)</condition><then pos:line="1199" pos:column="27"> <return pos:line="1199" pos:column="28">return;</return></then></if>
	<expr_stmt><expr><call><name pos:line="1200" pos:column="9">feedKeyWordsParameters</name><argument_list pos:line="1200" pos:column="31">(<argument><expr><name pos:line="1200" pos:column="32">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
 
<function><type><name pos:line="1203" pos:column="1">void</name></type> <name><name pos:line="1203" pos:column="6">NppParameters</name><op:operator pos:line="1203" pos:column="19">::</op:operator><name pos:line="1203" pos:column="21">getExternalLexerFromXmlTree</name></name><parameter_list pos:line="1203" pos:column="48">(<param><decl><type><name pos:line="1203" pos:column="49">TiXmlDocument</name> <type:modifier pos:line="1203" pos:column="63">*</type:modifier></type><name pos:line="1203" pos:column="64">doc</name></decl></param>)</parameter_list>
<block pos:line="1204" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1205" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1205" pos:column="19">*</type:modifier></type><name pos:line="1205" pos:column="20">root</name> <init pos:line="1205" pos:column="25">= <expr><call><name><name pos:line="1205" pos:column="27">doc</name><op:operator pos:line="1205" pos:column="30">-&gt;</op:operator><name pos:line="1205" pos:column="32">FirstChild</name></name><argument_list pos:line="1205" pos:column="42">(<argument><expr><call><name pos:line="1205" pos:column="43">TEXT</name><argument_list pos:line="1205" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="1205" pos:column="48">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1206" pos:column="17">if <condition pos:line="1206" pos:column="20">(<expr><op:operator pos:line="1206" pos:column="21">!</op:operator><name pos:line="1206" pos:column="22">root</name></expr>)</condition><then pos:line="1206" pos:column="27"> <return pos:line="1206" pos:column="28">return;</return></then></if>
	<expr_stmt><expr><call><name pos:line="1207" pos:column="9">feedKeyWordsParameters</name><argument_list pos:line="1207" pos:column="31">(<argument><expr><name pos:line="1207" pos:column="32">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1208" pos:column="9">feedStylerArray</name><argument_list pos:line="1208" pos:column="24">(<argument><expr><name pos:line="1208" pos:column="25">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1211" pos:column="1">int</name></type> <name><name pos:line="1211" pos:column="5">NppParameters</name><op:operator pos:line="1211" pos:column="18">::</op:operator><name pos:line="1211" pos:column="20">addExternalLangToEnd</name></name><parameter_list pos:line="1211" pos:column="40">(<param><decl><type><name pos:line="1211" pos:column="41">ExternalLangContainer</name> <type:modifier pos:line="1211" pos:column="63">*</type:modifier></type> <name pos:line="1211" pos:column="65">externalLang</name></decl></param>)</parameter_list>
<block pos:line="1212" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="1213" pos:column="9">_externalLangArray</name><index pos:line="1213" pos:column="27">[<expr><name pos:line="1213" pos:column="28">_nbExternalLang</name></expr>]</index></name> <op:operator pos:line="1213" pos:column="45">=</op:operator> <name pos:line="1213" pos:column="47">externalLang</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1214" pos:column="9">_nbExternalLang</name><op:operator pos:line="1214" pos:column="24">++</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1215" pos:column="9">L_END</name><op:operator pos:line="1215" pos:column="14">++</op:operator></expr>;</expr_stmt>
	<return pos:line="1216" pos:column="9">return <expr><name pos:line="1216" pos:column="16">_nbExternalLang</name><op:operator pos:line="1216" pos:column="31">-</op:operator><lit:literal type="number" pos:line="1216" pos:column="32">1</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1219" pos:column="1">bool</name></type> <name><name pos:line="1219" pos:column="6">NppParameters</name><op:operator pos:line="1219" pos:column="19">::</op:operator><name pos:line="1219" pos:column="21">getUserStylersFromXmlTree</name></name><parameter_list pos:line="1219" pos:column="46">()</parameter_list>
<block pos:line="1220" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1221" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1221" pos:column="19">*</type:modifier></type><name pos:line="1221" pos:column="20">root</name> <init pos:line="1221" pos:column="25">= <expr><call><name><name pos:line="1221" pos:column="27">_pXmlUserStylerDoc</name><op:operator pos:line="1221" pos:column="45">-&gt;</op:operator><name pos:line="1221" pos:column="47">FirstChild</name></name><argument_list pos:line="1221" pos:column="57">(<argument><expr><call><name pos:line="1221" pos:column="58">TEXT</name><argument_list pos:line="1221" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="1221" pos:column="63">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1222" pos:column="17">if <condition pos:line="1222" pos:column="20">(<expr><op:operator pos:line="1222" pos:column="21">!</op:operator><name pos:line="1222" pos:column="22">root</name></expr>)</condition><then pos:line="1222" pos:column="27"> <return pos:line="1222" pos:column="28">return <expr><lit:literal type="boolean" pos:line="1222" pos:column="35">false</lit:literal></expr>;</return></then></if>
	<return pos:line="1223" pos:column="9">return <expr><call><name pos:line="1223" pos:column="16">feedStylerArray</name><argument_list pos:line="1223" pos:column="31">(<argument><expr><name pos:line="1223" pos:column="32">root</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1226" pos:column="1">bool</name></type> <name><name pos:line="1226" pos:column="6">NppParameters</name><op:operator pos:line="1226" pos:column="19">::</op:operator><name pos:line="1226" pos:column="21">getUserParametersFromXmlTree</name></name><parameter_list pos:line="1226" pos:column="49">()</parameter_list>
<block pos:line="1227" pos:column="1">{
	<if pos:line="1228" pos:column="9">if <condition pos:line="1228" pos:column="12">(<expr><op:operator pos:line="1228" pos:column="13">!</op:operator><name pos:line="1228" pos:column="14">_pXmlUserDoc</name></expr>)</condition><then pos:line="1228" pos:column="27">
		<return pos:line="1229" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1229" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1231" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1231" pos:column="19">*</type:modifier></type><name pos:line="1231" pos:column="20">root</name> <init pos:line="1231" pos:column="25">= <expr><call><name><name pos:line="1231" pos:column="27">_pXmlUserDoc</name><op:operator pos:line="1231" pos:column="39">-&gt;</op:operator><name pos:line="1231" pos:column="41">FirstChild</name></name><argument_list pos:line="1231" pos:column="51">(<argument><expr><call><name pos:line="1231" pos:column="52">TEXT</name><argument_list pos:line="1231" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1231" pos:column="57">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1232" pos:column="9">if <condition pos:line="1232" pos:column="12">(<expr><op:operator pos:line="1232" pos:column="13">!</op:operator><name pos:line="1232" pos:column="14">root</name></expr>)</condition><then pos:line="1232" pos:column="19"> <return pos:line="1232" pos:column="20">return <expr><lit:literal type="boolean" pos:line="1232" pos:column="27">false</lit:literal></expr>;</return></then></if>

	<comment type="line" pos:line="1234" pos:column="9">// Get GUI parameters</comment>
	<expr_stmt><expr><call><name pos:line="1235" pos:column="9">feedGUIParameters</name><argument_list pos:line="1235" pos:column="26">(<argument><expr><name pos:line="1235" pos:column="27">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1237" pos:column="9">// Get History parameters</comment>
	<expr_stmt><expr><call><name pos:line="1238" pos:column="9">feedFileListParameters</name><argument_list pos:line="1238" pos:column="31">(<argument><expr><name pos:line="1238" pos:column="32">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1240" pos:column="9">// Erase the History root</comment>
	<decl_stmt><decl><type><name pos:line="1241" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1241" pos:column="19">*</type:modifier></type><name pos:line="1241" pos:column="20">node</name> <init pos:line="1241" pos:column="25">= <expr><call><name><name pos:line="1241" pos:column="27">root</name><op:operator pos:line="1241" pos:column="31">-&gt;</op:operator><name pos:line="1241" pos:column="33">FirstChildElement</name></name><argument_list pos:line="1241" pos:column="50">(<argument><expr><call><name pos:line="1241" pos:column="51">TEXT</name><argument_list pos:line="1241" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1241" pos:column="56">"History"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1242" pos:column="9">root</name><op:operator pos:line="1242" pos:column="13">-&gt;</op:operator><name pos:line="1242" pos:column="15">RemoveChild</name></name><argument_list pos:line="1242" pos:column="26">(<argument><expr><name pos:line="1242" pos:column="27">node</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1244" pos:column="9">// Add a new empty History root</comment>
	<decl_stmt><decl><type><name pos:line="1245" pos:column="9">TiXmlElement</name></type> <name pos:line="1245" pos:column="22">HistoryNode</name><argument_list pos:line="1245" pos:column="33">(<argument><expr><call><name pos:line="1245" pos:column="34">TEXT</name><argument_list pos:line="1245" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="1245" pos:column="39">"History"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1246" pos:column="9">root</name><op:operator pos:line="1246" pos:column="13">-&gt;</op:operator><name pos:line="1246" pos:column="15">InsertEndChild</name></name><argument_list pos:line="1246" pos:column="29">(<argument><expr><name pos:line="1246" pos:column="30">HistoryNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1248" pos:column="9">//Get Find history parameters</comment>
	<expr_stmt><expr><call><name pos:line="1249" pos:column="9">feedFindHistoryParameters</name><argument_list pos:line="1249" pos:column="34">(<argument><expr><name pos:line="1249" pos:column="35">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1251" pos:column="9">//Get Project Panel parameters</comment>
	<expr_stmt><expr><call><name pos:line="1252" pos:column="9">feedProjectPanelsParameters</name><argument_list pos:line="1252" pos:column="36">(<argument><expr><name pos:line="1252" pos:column="37">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:line="1254" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1254" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1257" pos:column="1">bool</name></type> <name><name pos:line="1257" pos:column="6">NppParameters</name><op:operator pos:line="1257" pos:column="19">::</op:operator><name pos:line="1257" pos:column="21">getUserDefineLangsFromXmlTree</name></name><parameter_list pos:line="1257" pos:column="50">(<param><decl><type><name pos:line="1257" pos:column="51">TiXmlDocument</name> <type:modifier pos:line="1257" pos:column="65">*</type:modifier></type><name pos:line="1257" pos:column="66">tixmldoc</name></decl></param>)</parameter_list>
<block pos:line="1258" pos:column="1">{
	<if pos:line="1259" pos:column="9">if <condition pos:line="1259" pos:column="12">(<expr><op:operator pos:line="1259" pos:column="13">!</op:operator><name pos:line="1259" pos:column="14">tixmldoc</name></expr>)</condition><then pos:line="1259" pos:column="23">
		<return pos:line="1260" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1260" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1262" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1262" pos:column="19">*</type:modifier></type><name pos:line="1262" pos:column="20">root</name> <init pos:line="1262" pos:column="25">= <expr><call><name><name pos:line="1262" pos:column="27">tixmldoc</name><op:operator pos:line="1262" pos:column="35">-&gt;</op:operator><name pos:line="1262" pos:column="37">FirstChild</name></name><argument_list pos:line="1262" pos:column="47">(<argument><expr><call><name pos:line="1262" pos:column="48">TEXT</name><argument_list pos:line="1262" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="1262" pos:column="53">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1263" pos:column="9">if <condition pos:line="1263" pos:column="12">(<expr><op:operator pos:line="1263" pos:column="13">!</op:operator><name pos:line="1263" pos:column="14">root</name></expr>)</condition><then pos:line="1263" pos:column="19"> 
		<return pos:line="1264" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1264" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<return pos:line="1266" pos:column="9">return <expr><call><name pos:line="1266" pos:column="16">feedUserLang</name><argument_list pos:line="1266" pos:column="28">(<argument><expr><name pos:line="1266" pos:column="29">root</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>



<function><type><name pos:line="1271" pos:column="1">bool</name></type> <name><name pos:line="1271" pos:column="6">NppParameters</name><op:operator pos:line="1271" pos:column="19">::</op:operator><name pos:line="1271" pos:column="21">getShortcutsFromXmlTree</name></name><parameter_list pos:line="1271" pos:column="44">()</parameter_list>
<block pos:line="1272" pos:column="1">{
	<if pos:line="1273" pos:column="9">if <condition pos:line="1273" pos:column="12">(<expr><op:operator pos:line="1273" pos:column="13">!</op:operator><name pos:line="1273" pos:column="14">_pXmlShortcutDoc</name></expr>)</condition><then pos:line="1273" pos:column="31">
		<return pos:line="1274" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1274" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1276" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1276" pos:column="19">*</type:modifier></type><name pos:line="1276" pos:column="20">root</name> <init pos:line="1276" pos:column="25">= <expr><call><name><name pos:line="1276" pos:column="27">_pXmlShortcutDoc</name><op:operator pos:line="1276" pos:column="43">-&gt;</op:operator><name pos:line="1276" pos:column="45">FirstChild</name></name><argument_list pos:line="1276" pos:column="55">(<argument><expr><call><name pos:line="1276" pos:column="56">TEXT</name><argument_list pos:line="1276" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1276" pos:column="61">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1277" pos:column="9">if <condition pos:line="1277" pos:column="12">(<expr><op:operator pos:line="1277" pos:column="13">!</op:operator><name pos:line="1277" pos:column="14">root</name></expr>)</condition><then pos:line="1277" pos:column="19"> 
		<return pos:line="1278" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1278" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><call><name pos:line="1280" pos:column="9">feedShortcut</name><argument_list pos:line="1280" pos:column="21">(<argument><expr><name pos:line="1280" pos:column="22">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1281" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1281" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1284" pos:column="1">bool</name></type> <name><name pos:line="1284" pos:column="6">NppParameters</name><op:operator pos:line="1284" pos:column="19">::</op:operator><name pos:line="1284" pos:column="21">getMacrosFromXmlTree</name></name><parameter_list pos:line="1284" pos:column="41">()</parameter_list>
<block pos:line="1285" pos:column="1">{
	<if pos:line="1286" pos:column="9">if <condition pos:line="1286" pos:column="12">(<expr><op:operator pos:line="1286" pos:column="13">!</op:operator><name pos:line="1286" pos:column="14">_pXmlShortcutDoc</name></expr>)</condition><then pos:line="1286" pos:column="31">
		<return pos:line="1287" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1287" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1289" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1289" pos:column="19">*</type:modifier></type><name pos:line="1289" pos:column="20">root</name> <init pos:line="1289" pos:column="25">= <expr><call><name><name pos:line="1289" pos:column="27">_pXmlShortcutDoc</name><op:operator pos:line="1289" pos:column="43">-&gt;</op:operator><name pos:line="1289" pos:column="45">FirstChild</name></name><argument_list pos:line="1289" pos:column="55">(<argument><expr><call><name pos:line="1289" pos:column="56">TEXT</name><argument_list pos:line="1289" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1289" pos:column="61">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1290" pos:column="9">if <condition pos:line="1290" pos:column="12">(<expr><op:operator pos:line="1290" pos:column="13">!</op:operator><name pos:line="1290" pos:column="14">root</name></expr>)</condition><then pos:line="1290" pos:column="19"> 
		<return pos:line="1291" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1291" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><call><name pos:line="1293" pos:column="9">feedMacros</name><argument_list pos:line="1293" pos:column="19">(<argument><expr><name pos:line="1293" pos:column="20">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1294" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1294" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1297" pos:column="1">bool</name></type> <name><name pos:line="1297" pos:column="6">NppParameters</name><op:operator pos:line="1297" pos:column="19">::</op:operator><name pos:line="1297" pos:column="21">getUserCmdsFromXmlTree</name></name><parameter_list pos:line="1297" pos:column="43">()</parameter_list>
<block pos:line="1298" pos:column="1">{
	<if pos:line="1299" pos:column="9">if <condition pos:line="1299" pos:column="12">(<expr><op:operator pos:line="1299" pos:column="13">!</op:operator><name pos:line="1299" pos:column="14">_pXmlShortcutDoc</name></expr>)</condition><then pos:line="1299" pos:column="31">
		<return pos:line="1300" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1300" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1302" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1302" pos:column="19">*</type:modifier></type><name pos:line="1302" pos:column="20">root</name> <init pos:line="1302" pos:column="25">= <expr><call><name><name pos:line="1302" pos:column="27">_pXmlShortcutDoc</name><op:operator pos:line="1302" pos:column="43">-&gt;</op:operator><name pos:line="1302" pos:column="45">FirstChild</name></name><argument_list pos:line="1302" pos:column="55">(<argument><expr><call><name pos:line="1302" pos:column="56">TEXT</name><argument_list pos:line="1302" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1302" pos:column="61">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1303" pos:column="9">if <condition pos:line="1303" pos:column="12">(<expr><op:operator pos:line="1303" pos:column="13">!</op:operator><name pos:line="1303" pos:column="14">root</name></expr>)</condition><then pos:line="1303" pos:column="19"> 
		<return pos:line="1304" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1304" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><call><name pos:line="1306" pos:column="9">feedUserCmds</name><argument_list pos:line="1306" pos:column="21">(<argument><expr><name pos:line="1306" pos:column="22">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1307" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1307" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="1311" pos:column="1">bool</name></type> <name><name pos:line="1311" pos:column="6">NppParameters</name><op:operator pos:line="1311" pos:column="19">::</op:operator><name pos:line="1311" pos:column="21">getPluginCmdsFromXmlTree</name></name><parameter_list pos:line="1311" pos:column="45">()</parameter_list>
<block pos:line="1312" pos:column="1">{
	<if pos:line="1313" pos:column="9">if <condition pos:line="1313" pos:column="12">(<expr><op:operator pos:line="1313" pos:column="13">!</op:operator><name pos:line="1313" pos:column="14">_pXmlShortcutDoc</name></expr>)</condition><then pos:line="1313" pos:column="31">
		<return pos:line="1314" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1314" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1316" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1316" pos:column="19">*</type:modifier></type><name pos:line="1316" pos:column="20">root</name> <init pos:line="1316" pos:column="25">= <expr><call><name><name pos:line="1316" pos:column="27">_pXmlShortcutDoc</name><op:operator pos:line="1316" pos:column="43">-&gt;</op:operator><name pos:line="1316" pos:column="45">FirstChild</name></name><argument_list pos:line="1316" pos:column="55">(<argument><expr><call><name pos:line="1316" pos:column="56">TEXT</name><argument_list pos:line="1316" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1316" pos:column="61">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1317" pos:column="9">if <condition pos:line="1317" pos:column="12">(<expr><op:operator pos:line="1317" pos:column="13">!</op:operator><name pos:line="1317" pos:column="14">root</name></expr>)</condition><then pos:line="1317" pos:column="19"> 
		<return pos:line="1318" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1318" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><call><name pos:line="1320" pos:column="9">feedPluginCustomizedCmds</name><argument_list pos:line="1320" pos:column="33">(<argument><expr><name pos:line="1320" pos:column="34">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1321" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1321" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="1325" pos:column="1">bool</name></type> <name><name pos:line="1325" pos:column="6">NppParameters</name><op:operator pos:line="1325" pos:column="19">::</op:operator><name pos:line="1325" pos:column="21">getScintKeysFromXmlTree</name></name><parameter_list pos:line="1325" pos:column="44">()</parameter_list>
<block pos:line="1326" pos:column="1">{
	<if pos:line="1327" pos:column="9">if <condition pos:line="1327" pos:column="12">(<expr><op:operator pos:line="1327" pos:column="13">!</op:operator><name pos:line="1327" pos:column="14">_pXmlShortcutDoc</name></expr>)</condition><then pos:line="1327" pos:column="31">
		<return pos:line="1328" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1328" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1330" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1330" pos:column="19">*</type:modifier></type><name pos:line="1330" pos:column="20">root</name> <init pos:line="1330" pos:column="25">= <expr><call><name><name pos:line="1330" pos:column="27">_pXmlShortcutDoc</name><op:operator pos:line="1330" pos:column="43">-&gt;</op:operator><name pos:line="1330" pos:column="45">FirstChild</name></name><argument_list pos:line="1330" pos:column="55">(<argument><expr><call><name pos:line="1330" pos:column="56">TEXT</name><argument_list pos:line="1330" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1330" pos:column="61">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1331" pos:column="9">if <condition pos:line="1331" pos:column="12">(<expr><op:operator pos:line="1331" pos:column="13">!</op:operator><name pos:line="1331" pos:column="14">root</name></expr>)</condition><then pos:line="1331" pos:column="19"> 
		<return pos:line="1332" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1332" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><call><name pos:line="1334" pos:column="9">feedScintKeys</name><argument_list pos:line="1334" pos:column="22">(<argument><expr><name pos:line="1334" pos:column="23">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1335" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1335" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1338" pos:column="1">bool</name></type> <name><name pos:line="1338" pos:column="6">NppParameters</name><op:operator pos:line="1338" pos:column="19">::</op:operator><name pos:line="1338" pos:column="21">getBlackListFromXmlTree</name></name><parameter_list pos:line="1338" pos:column="44">()</parameter_list>
<block pos:line="1339" pos:column="1">{
    <if pos:line="1340" pos:column="5">if <condition pos:line="1340" pos:column="8">(<expr><op:operator pos:line="1340" pos:column="9">!</op:operator><name pos:line="1340" pos:column="10">_pXmlBlacklistDoc</name></expr>)</condition><then pos:line="1340" pos:column="28">
		<return pos:line="1341" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1341" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1343" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1343" pos:column="19">*</type:modifier></type><name pos:line="1343" pos:column="20">root</name> <init pos:line="1343" pos:column="25">= <expr><call><name><name pos:line="1343" pos:column="27">_pXmlBlacklistDoc</name><op:operator pos:line="1343" pos:column="44">-&gt;</op:operator><name pos:line="1343" pos:column="46">FirstChild</name></name><argument_list pos:line="1343" pos:column="56">(<argument><expr><call><name pos:line="1343" pos:column="57">TEXT</name><argument_list pos:line="1343" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="1343" pos:column="62">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1344" pos:column="9">if <condition pos:line="1344" pos:column="12">(<expr><op:operator pos:line="1344" pos:column="13">!</op:operator><name pos:line="1344" pos:column="14">root</name></expr>)</condition><then pos:line="1344" pos:column="19"> 
		<return pos:line="1345" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1345" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<return pos:line="1347" pos:column="9">return <expr><call><name pos:line="1347" pos:column="16">feedBlacklist</name><argument_list pos:line="1347" pos:column="29">(<argument><expr><name pos:line="1347" pos:column="30">root</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1350" pos:column="1">void</name></type> <name><name pos:line="1350" pos:column="6">NppParameters</name><op:operator pos:line="1350" pos:column="19">::</op:operator><name pos:line="1350" pos:column="21">initMenuKeys</name></name><parameter_list pos:line="1350" pos:column="33">()</parameter_list> 
<block pos:line="1351" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1352" pos:column="9">int</name></type> <name pos:line="1352" pos:column="13">nrCommands</name> <init pos:line="1352" pos:column="24">= <expr><sizeof pos:line="1352" pos:column="26">sizeof<argument_list pos:line="1352" pos:column="32">(<argument><expr><name pos:line="1352" pos:column="33">winKeyDefs</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="1352" pos:column="44">/</op:operator><sizeof pos:line="1352" pos:column="45">sizeof<argument_list pos:line="1352" pos:column="51">(<argument><expr><name pos:line="1352" pos:column="52">WinMenuKeyDefinition</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1353" pos:column="9">WinMenuKeyDefinition</name></type> <name pos:line="1353" pos:column="30">wkd</name></decl>;</decl_stmt>
	<for pos:line="1354" pos:column="9">for(<init><decl><type><name pos:line="1354" pos:column="13">int</name></type> <name pos:line="1354" pos:column="17">i</name> <init pos:line="1354" pos:column="19">= <expr><lit:literal type="number" pos:line="1354" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1354" pos:column="24">i</name> <op:operator pos:line="1354" pos:column="26">&lt;</op:operator> <name pos:line="1354" pos:column="28">nrCommands</name></expr>;</condition> <incr><expr><name pos:line="1354" pos:column="40">i</name><op:operator pos:line="1354" pos:column="41">++</op:operator></expr></incr>) 
	<block pos:line="1355" pos:column="9">{
		<expr_stmt><expr><name pos:line="1356" pos:column="17">wkd</name> <op:operator pos:line="1356" pos:column="21">=</op:operator> <name><name pos:line="1356" pos:column="23">winKeyDefs</name><index pos:line="1356" pos:column="33">[<expr><name pos:line="1356" pos:column="34">i</name></expr>]</index></name></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="1357" pos:column="17">Shortcut</name></type> <name pos:line="1357" pos:column="26">sc</name><argument_list pos:line="1357" pos:column="28">(<argument><expr><op:operator pos:line="1357" pos:column="29">(</op:operator><name><name pos:line="1357" pos:column="30">wkd</name><op:operator pos:line="1357" pos:column="33">.</op:operator><name pos:line="1357" pos:column="34">specialName</name></name><op:operator pos:line="1357" pos:column="45">?</op:operator><name><name pos:line="1357" pos:column="46">wkd</name><op:operator pos:line="1357" pos:column="49">.</op:operator><name pos:line="1357" pos:column="50">specialName</name></name><op:operator pos:line="1357" pos:column="61">:</op:operator><call><name pos:line="1357" pos:column="62">TEXT</name><argument_list pos:line="1357" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="1357" pos:column="67">""</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="1357" pos:column="70">)</op:operator></expr></argument>, <argument><expr><name><name pos:line="1357" pos:column="73">wkd</name><op:operator pos:line="1357" pos:column="76">.</op:operator><name pos:line="1357" pos:column="77">isCtrl</name></name></expr></argument>, <argument><expr><name><name pos:line="1357" pos:column="85">wkd</name><op:operator pos:line="1357" pos:column="88">.</op:operator><name pos:line="1357" pos:column="89">isAlt</name></name></expr></argument>, <argument><expr><name><name pos:line="1357" pos:column="96">wkd</name><op:operator pos:line="1357" pos:column="99">.</op:operator><name pos:line="1357" pos:column="100">isShift</name></name></expr></argument>, <argument><expr><op:operator pos:line="1357" pos:column="109">(</op:operator><name pos:line="1357" pos:column="110">unsigned</name> <name pos:line="1357" pos:column="119">char</name><op:operator pos:line="1357" pos:column="123">)</op:operator><name><name pos:line="1357" pos:column="124">wkd</name><op:operator pos:line="1357" pos:column="127">.</op:operator><name pos:line="1357" pos:column="128">vKey</name></name></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1358" pos:column="17">_shortcuts</name><op:operator pos:line="1358" pos:column="27">.</op:operator><name pos:line="1358" pos:column="28">push_back</name></name><argument_list pos:line="1358" pos:column="37">( <argument><expr><call><name pos:line="1358" pos:column="39">CommandShortcut</name><argument_list pos:line="1358" pos:column="54">(<argument><expr><name pos:line="1358" pos:column="55">sc</name></expr></argument>, <argument><expr><name><name pos:line="1358" pos:column="59">wkd</name><op:operator pos:line="1358" pos:column="62">.</op:operator><name pos:line="1358" pos:column="63">functionId</name></name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function>

<function><type><name pos:line="1362" pos:column="1">void</name></type> <name><name pos:line="1362" pos:column="6">NppParameters</name><op:operator pos:line="1362" pos:column="19">::</op:operator><name pos:line="1362" pos:column="21">initScintillaKeys</name></name><parameter_list pos:line="1362" pos:column="38">()</parameter_list> <block pos:line="1362" pos:column="41">{

	<decl_stmt><decl><type><name pos:line="1364" pos:column="9">int</name></type> <name pos:line="1364" pos:column="13">nrCommands</name> <init pos:line="1364" pos:column="24">= <expr><sizeof pos:line="1364" pos:column="26">sizeof<argument_list pos:line="1364" pos:column="32">(<argument><expr><name pos:line="1364" pos:column="33">scintKeyDefs</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="1364" pos:column="46">/</op:operator><sizeof pos:line="1364" pos:column="47">sizeof<argument_list pos:line="1364" pos:column="53">(<argument><expr><name pos:line="1364" pos:column="54">ScintillaKeyDefinition</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="1366" pos:column="9">//Warning! Matching function have to be consecutive</comment>
	<decl_stmt><decl><type><name pos:line="1367" pos:column="9">ScintillaKeyDefinition</name></type> <name pos:line="1367" pos:column="32">skd</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1368" pos:column="9">int</name></type> <name pos:line="1368" pos:column="13">prevIndex</name> <init pos:line="1368" pos:column="23">= <expr><op:operator pos:line="1368" pos:column="25">-</op:operator><lit:literal type="number" pos:line="1368" pos:column="26">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1369" pos:column="9">int</name></type> <name pos:line="1369" pos:column="13">prevID</name> <init pos:line="1369" pos:column="20">= <expr><op:operator pos:line="1369" pos:column="22">-</op:operator><lit:literal type="number" pos:line="1369" pos:column="23">1</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="1370" pos:column="9">for(<init><decl><type><name pos:line="1370" pos:column="13">int</name></type> <name pos:line="1370" pos:column="17">i</name> <init pos:line="1370" pos:column="19">= <expr><lit:literal type="number" pos:line="1370" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1370" pos:column="24">i</name> <op:operator pos:line="1370" pos:column="26">&lt;</op:operator> <name pos:line="1370" pos:column="28">nrCommands</name></expr>;</condition> <incr><expr><name pos:line="1370" pos:column="40">i</name><op:operator pos:line="1370" pos:column="41">++</op:operator></expr></incr>) 
	<block pos:line="1371" pos:column="9">{
		<expr_stmt><expr><name pos:line="1372" pos:column="17">skd</name> <op:operator pos:line="1372" pos:column="21">=</op:operator> <name><name pos:line="1372" pos:column="23">scintKeyDefs</name><index pos:line="1372" pos:column="35">[<expr><name pos:line="1372" pos:column="36">i</name></expr>]</index></name></expr>;</expr_stmt>
		<if pos:line="1373" pos:column="17">if <condition pos:line="1373" pos:column="20">(<expr><name><name pos:line="1373" pos:column="21">skd</name><op:operator pos:line="1373" pos:column="24">.</op:operator><name pos:line="1373" pos:column="25">functionId</name></name> <op:operator pos:line="1373" pos:column="36">==</op:operator> <name pos:line="1373" pos:column="39">prevID</name></expr>)</condition><then pos:line="1373" pos:column="46">
		<block pos:line="1374" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1375" pos:column="25">KeyCombo</name></type> <name pos:line="1375" pos:column="34">kc</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1376" pos:column="25">kc</name><op:operator pos:line="1376" pos:column="27">.</op:operator><name pos:line="1376" pos:column="28">_isCtrl</name></name> <op:operator pos:line="1376" pos:column="36">=</op:operator> <name><name pos:line="1376" pos:column="38">skd</name><op:operator pos:line="1376" pos:column="41">.</op:operator><name pos:line="1376" pos:column="42">isCtrl</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1377" pos:column="25">kc</name><op:operator pos:line="1377" pos:column="27">.</op:operator><name pos:line="1377" pos:column="28">_isAlt</name></name> <op:operator pos:line="1377" pos:column="35">=</op:operator> <name><name pos:line="1377" pos:column="37">skd</name><op:operator pos:line="1377" pos:column="40">.</op:operator><name pos:line="1377" pos:column="41">isAlt</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1378" pos:column="25">kc</name><op:operator pos:line="1378" pos:column="27">.</op:operator><name pos:line="1378" pos:column="28">_isShift</name></name> <op:operator pos:line="1378" pos:column="37">=</op:operator> <name><name pos:line="1378" pos:column="39">skd</name><op:operator pos:line="1378" pos:column="42">.</op:operator><name pos:line="1378" pos:column="43">isShift</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1379" pos:column="25">kc</name><op:operator pos:line="1379" pos:column="27">.</op:operator><name pos:line="1379" pos:column="28">_key</name></name> <op:operator pos:line="1379" pos:column="33">=</op:operator> <op:operator pos:line="1379" pos:column="35">(</op:operator><name pos:line="1379" pos:column="36">unsigned</name> <name pos:line="1379" pos:column="45">char</name><op:operator pos:line="1379" pos:column="49">)</op:operator><name><name pos:line="1379" pos:column="50">skd</name><op:operator pos:line="1379" pos:column="53">.</op:operator><name pos:line="1379" pos:column="54">vKey</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1380" pos:column="25">_scintillaKeyCommands</name><index pos:line="1380" pos:column="46">[<expr><name pos:line="1380" pos:column="47">prevIndex</name></expr>]</index></name><op:operator pos:line="1380" pos:column="57">.</op:operator><call><name pos:line="1380" pos:column="58">addKeyCombo</name><argument_list pos:line="1380" pos:column="69">(<argument><expr><name pos:line="1380" pos:column="70">kc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1382" pos:column="17">else
		<block pos:line="1383" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1384" pos:column="25">_scintillaKeyCommands</name><op:operator pos:line="1384" pos:column="46">.</op:operator><name pos:line="1384" pos:column="47">push_back</name></name><argument_list pos:line="1384" pos:column="56">(<argument><expr><call><name pos:line="1384" pos:column="57">ScintillaKeyMap</name><argument_list pos:line="1384" pos:column="72">(<argument><expr><call><name pos:line="1384" pos:column="73">Shortcut</name><argument_list pos:line="1384" pos:column="81">(<argument><expr><name><name pos:line="1384" pos:column="82">skd</name><op:operator pos:line="1384" pos:column="85">.</op:operator><name pos:line="1384" pos:column="86">name</name></name></expr></argument>, <argument><expr><name><name pos:line="1384" pos:column="92">skd</name><op:operator pos:line="1384" pos:column="95">.</op:operator><name pos:line="1384" pos:column="96">isCtrl</name></name></expr></argument>, <argument><expr><name><name pos:line="1384" pos:column="104">skd</name><op:operator pos:line="1384" pos:column="107">.</op:operator><name pos:line="1384" pos:column="108">isAlt</name></name></expr></argument>, <argument><expr><name><name pos:line="1384" pos:column="115">skd</name><op:operator pos:line="1384" pos:column="118">.</op:operator><name pos:line="1384" pos:column="119">isShift</name></name></expr></argument>, <argument><expr><op:operator pos:line="1384" pos:column="128">(</op:operator><name pos:line="1384" pos:column="129">unsigned</name> <name pos:line="1384" pos:column="138">char</name><op:operator pos:line="1384" pos:column="142">)</op:operator><name><name pos:line="1384" pos:column="143">skd</name><op:operator pos:line="1384" pos:column="146">.</op:operator><name pos:line="1384" pos:column="147">vKey</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1384" pos:column="154">skd</name><op:operator pos:line="1384" pos:column="157">.</op:operator><name pos:line="1384" pos:column="158">functionId</name></name></expr></argument>, <argument><expr><name><name pos:line="1384" pos:column="170">skd</name><op:operator pos:line="1384" pos:column="173">.</op:operator><name pos:line="1384" pos:column="174">redirFunctionId</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1385" pos:column="25">prevIndex</name><op:operator pos:line="1385" pos:column="34">++</op:operator></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="1387" pos:column="17">prevID</name> <op:operator pos:line="1387" pos:column="24">=</op:operator> <name><name pos:line="1387" pos:column="26">skd</name><op:operator pos:line="1387" pos:column="29">.</op:operator><name pos:line="1387" pos:column="30">functionId</name></name></expr>;</expr_stmt>
	}</block></for>
}</block></function>
<function><type><name pos:line="1390" pos:column="1">bool</name></type> <name><name pos:line="1390" pos:column="6">NppParameters</name><op:operator pos:line="1390" pos:column="19">::</op:operator><name pos:line="1390" pos:column="21">reloadContextMenuFromXmlTree</name></name><parameter_list pos:line="1390" pos:column="49">(<param><decl><type><name pos:line="1390" pos:column="50">HMENU</name></type> <name pos:line="1390" pos:column="56">mainMenuHadle</name></decl></param>, <param><decl><type><name pos:line="1390" pos:column="71">HMENU</name></type> <name pos:line="1390" pos:column="77">pluginsMenu</name></decl></param>)</parameter_list>
<block pos:line="1391" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="1392" pos:column="9">_contextMenuItems</name><op:operator pos:line="1392" pos:column="26">.</op:operator><name pos:line="1392" pos:column="27">clear</name></name><argument_list pos:line="1392" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	<return pos:line="1393" pos:column="9">return <expr><call><name pos:line="1393" pos:column="16">getContextMenuFromXmlTree</name><argument_list pos:line="1393" pos:column="41">(<argument><expr><name pos:line="1393" pos:column="42">mainMenuHadle</name></expr></argument>, <argument><expr><name pos:line="1393" pos:column="57">pluginsMenu</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1396" pos:column="1">bool</name></type> <name><name pos:line="1396" pos:column="6">NppParameters</name><op:operator pos:line="1396" pos:column="19">::</op:operator><name pos:line="1396" pos:column="21">getContextMenuFromXmlTree</name></name><parameter_list pos:line="1396" pos:column="46">(<param><decl><type><name pos:line="1396" pos:column="47">HMENU</name></type> <name pos:line="1396" pos:column="53">mainMenuHadle</name></decl></param>, <param><decl><type><name pos:line="1396" pos:column="68">HMENU</name></type> <name pos:line="1396" pos:column="74">pluginsMenu</name></decl></param>)</parameter_list>
<block pos:line="1397" pos:column="1">{
	<if pos:line="1398" pos:column="9">if <condition pos:line="1398" pos:column="12">(<expr><op:operator pos:line="1398" pos:column="13">!</op:operator><name pos:line="1398" pos:column="14">_pXmlContextMenuDocA</name></expr>)</condition><then pos:line="1398" pos:column="35">
		<return pos:line="1399" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1399" pos:column="24">false</lit:literal></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="1400" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="1400" pos:column="20">*</type:modifier></type><name pos:line="1400" pos:column="21">root</name> <init pos:line="1400" pos:column="26">= <expr><call><name><name pos:line="1400" pos:column="28">_pXmlContextMenuDocA</name><op:operator pos:line="1400" pos:column="48">-&gt;</op:operator><name pos:line="1400" pos:column="50">FirstChild</name></name><argument_list pos:line="1400" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1400" pos:column="61">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1401" pos:column="9">if <condition pos:line="1401" pos:column="12">(<expr><op:operator pos:line="1401" pos:column="13">!</op:operator><name pos:line="1401" pos:column="14">root</name></expr>)</condition><then pos:line="1401" pos:column="19"> 
		<return pos:line="1402" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1402" pos:column="24">false</lit:literal></expr>;</return></then></if>

<cpp:ifdef pos:line="1404" pos:column="1">#<cpp:directive pos:line="1404" pos:column="2">ifdef</cpp:directive> <name pos:line="1404" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="1405" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="1405" pos:column="28">*</type:modifier></type><name pos:line="1405" pos:column="29">wmc</name> <init pos:line="1405" pos:column="33">= <expr><call><name><name pos:line="1405" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="1405" pos:column="53">::</op:operator><name pos:line="1405" pos:column="55">getInstance</name></name><argument_list pos:line="1405" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="1406" pos:column="1">#<cpp:directive pos:line="1406" pos:column="2">endif</cpp:directive></cpp:endif>

	<decl_stmt><decl><type><name pos:line="1408" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="1408" pos:column="20">*</type:modifier></type><name pos:line="1408" pos:column="21">contextMenuRoot</name> <init pos:line="1408" pos:column="37">= <expr><call><name><name pos:line="1408" pos:column="39">root</name><op:operator pos:line="1408" pos:column="43">-&gt;</op:operator><name pos:line="1408" pos:column="45">FirstChildElement</name></name><argument_list pos:line="1408" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="1408" pos:column="63">"ScintillaContextMenu"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1409" pos:column="9">if <condition pos:line="1409" pos:column="12">(<expr><name pos:line="1409" pos:column="13">contextMenuRoot</name></expr>)</condition><then pos:line="1409" pos:column="29">
	<block pos:line="1410" pos:column="9">{
		<for pos:line="1411" pos:column="17">for (<init><decl><type><name pos:line="1411" pos:column="22">TiXmlNodeA</name> <type:modifier pos:line="1411" pos:column="33">*</type:modifier></type><name pos:line="1411" pos:column="34">childNode</name> <init pos:line="1411" pos:column="44">= <expr><call><name><name pos:line="1411" pos:column="46">contextMenuRoot</name><op:operator pos:line="1411" pos:column="61">-&gt;</op:operator><name pos:line="1411" pos:column="63">FirstChildElement</name></name><argument_list pos:line="1411" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="1411" pos:column="81">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
			<condition><expr><name pos:line="1412" pos:column="25">childNode</name></expr> ;</condition>
			<incr><expr><name pos:line="1413" pos:column="25">childNode</name> <op:operator pos:line="1413" pos:column="35">=</op:operator> <call><name><name pos:line="1413" pos:column="37">childNode</name><op:operator pos:line="1413" pos:column="46">-&gt;</op:operator><name pos:line="1413" pos:column="48">NextSibling</name></name><argument_list pos:line="1413" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1413" pos:column="60">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
		<block pos:line="1414" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="1415" pos:column="25">const</specifier> <name pos:line="1415" pos:column="31">char</name> <type:modifier pos:line="1415" pos:column="36">*</type:modifier></type><name pos:line="1415" pos:column="37">folderNameA</name> <init pos:line="1415" pos:column="49">= <expr><op:operator pos:line="1415" pos:column="51">(</op:operator><call><name><name pos:line="1415" pos:column="52">childNode</name><op:operator pos:line="1415" pos:column="61">-&gt;</op:operator><name pos:line="1415" pos:column="63">ToElement</name></name><argument_list pos:line="1415" pos:column="72">()</argument_list></call><op:operator pos:line="1415" pos:column="74">)</op:operator><op:operator pos:line="1415" pos:column="75">-&gt;</op:operator><call><name pos:line="1415" pos:column="77">Attribute</name><argument_list pos:line="1415" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="1415" pos:column="87">"FolderName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="1416" pos:column="25">const</specifier> <name pos:line="1416" pos:column="31">char</name> <type:modifier pos:line="1416" pos:column="36">*</type:modifier></type><name pos:line="1416" pos:column="37">displayAsA</name> <init pos:line="1416" pos:column="48">= <expr><op:operator pos:line="1416" pos:column="50">(</op:operator><call><name><name pos:line="1416" pos:column="51">childNode</name><op:operator pos:line="1416" pos:column="60">-&gt;</op:operator><name pos:line="1416" pos:column="62">ToElement</name></name><argument_list pos:line="1416" pos:column="71">()</argument_list></call><op:operator pos:line="1416" pos:column="73">)</op:operator><op:operator pos:line="1416" pos:column="74">-&gt;</op:operator><call><name pos:line="1416" pos:column="76">Attribute</name><argument_list pos:line="1416" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="1416" pos:column="86">"ItemNameAs"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="1418" pos:column="25">generic_string</name></type> <name pos:line="1418" pos:column="40">folderName</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1419" pos:column="25">generic_string</name></type> <name pos:line="1419" pos:column="40">displayAs</name></decl>;</decl_stmt>
<cpp:ifdef pos:line="1420" pos:column="1">#<cpp:directive pos:line="1420" pos:column="2">ifdef</cpp:directive> <name pos:line="1420" pos:column="8">UNICODE</name></cpp:ifdef>
			<expr_stmt><expr><name pos:line="1421" pos:column="25">folderName</name> <op:operator pos:line="1421" pos:column="36">=</op:operator> <name pos:line="1421" pos:column="38">folderNameA</name><op:operator pos:line="1421" pos:column="49">?</op:operator><call><name><name pos:line="1421" pos:column="50">wmc</name><op:operator pos:line="1421" pos:column="53">-&gt;</op:operator><name pos:line="1421" pos:column="55">char2wchar</name></name><argument_list pos:line="1421" pos:column="65">(<argument><expr><name pos:line="1421" pos:column="66">folderNameA</name></expr></argument>, <argument><expr><name pos:line="1421" pos:column="79">SC_CP_UTF8</name></expr></argument>)</argument_list></call><op:operator pos:line="1421" pos:column="90">:</op:operator><call><name pos:line="1421" pos:column="91">TEXT</name><argument_list pos:line="1421" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="1421" pos:column="96">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1422" pos:column="25">displayAs</name> <op:operator pos:line="1422" pos:column="35">=</op:operator> <name pos:line="1422" pos:column="37">displayAsA</name><op:operator pos:line="1422" pos:column="47">?</op:operator><call><name><name pos:line="1422" pos:column="48">wmc</name><op:operator pos:line="1422" pos:column="51">-&gt;</op:operator><name pos:line="1422" pos:column="53">char2wchar</name></name><argument_list pos:line="1422" pos:column="63">(<argument><expr><name pos:line="1422" pos:column="64">displayAsA</name></expr></argument>, <argument><expr><name pos:line="1422" pos:column="76">SC_CP_UTF8</name></expr></argument>)</argument_list></call><op:operator pos:line="1422" pos:column="87">:</op:operator><call><name pos:line="1422" pos:column="88">TEXT</name><argument_list pos:line="1422" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="1422" pos:column="93">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1423" pos:column="1">#<cpp:directive pos:line="1423" pos:column="2">else</cpp:directive></cpp:else>
			<expr_stmt><expr><name pos:line="1424" pos:column="25">folderName</name> <op:operator pos:line="1424" pos:column="36">=</op:operator> <name pos:line="1424" pos:column="38">folderNameA</name><op:operator pos:line="1424" pos:column="49">?</op:operator><name pos:line="1424" pos:column="50">folderNameA</name><op:operator pos:line="1424" pos:column="61">:</op:operator><lit:literal type="string" pos:line="1424" pos:column="62">""</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1425" pos:column="25">displayAs</name> <op:operator pos:line="1425" pos:column="35">=</op:operator> <name pos:line="1425" pos:column="37">displayAsA</name><op:operator pos:line="1425" pos:column="47">?</op:operator><name pos:line="1425" pos:column="48">displayAsA</name><op:operator pos:line="1425" pos:column="58">:</op:operator><lit:literal type="string" pos:line="1425" pos:column="59">""</lit:literal></expr>;</expr_stmt>
<cpp:endif pos:line="1426" pos:column="1">#<cpp:directive pos:line="1426" pos:column="2">endif</cpp:directive></cpp:endif>
			<decl_stmt><decl><type><name pos:line="1427" pos:column="25">int</name></type> <name pos:line="1427" pos:column="29">id</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="1428" pos:column="25">const</specifier> <name pos:line="1428" pos:column="31">char</name> <type:modifier pos:line="1428" pos:column="36">*</type:modifier></type><name pos:line="1428" pos:column="37">idStr</name> <init pos:line="1428" pos:column="43">= <expr><op:operator pos:line="1428" pos:column="45">(</op:operator><call><name><name pos:line="1428" pos:column="46">childNode</name><op:operator pos:line="1428" pos:column="55">-&gt;</op:operator><name pos:line="1428" pos:column="57">ToElement</name></name><argument_list pos:line="1428" pos:column="66">()</argument_list></call><op:operator pos:line="1428" pos:column="68">)</op:operator><op:operator pos:line="1428" pos:column="69">-&gt;</op:operator><call><name pos:line="1428" pos:column="71">Attribute</name><argument_list pos:line="1428" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="1428" pos:column="81">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1428" pos:column="87">&amp;</op:operator><name pos:line="1428" pos:column="88">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1429" pos:column="25">if <condition pos:line="1429" pos:column="28">(<expr><name pos:line="1429" pos:column="29">idStr</name></expr>)</condition><then pos:line="1429" pos:column="35">
			<block pos:line="1430" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1431" pos:column="33">_contextMenuItems</name><op:operator pos:line="1431" pos:column="50">.</op:operator><name pos:line="1431" pos:column="51">push_back</name></name><argument_list pos:line="1431" pos:column="60">(<argument><expr><call><name pos:line="1431" pos:column="61">MenuItemUnit</name><argument_list pos:line="1431" pos:column="73">(<argument><expr><name pos:line="1431" pos:column="74">id</name></expr></argument>, <argument><expr><call><name><name pos:line="1431" pos:column="78">displayAs</name><op:operator pos:line="1431" pos:column="87">.</op:operator><name pos:line="1431" pos:column="88">c_str</name></name><argument_list pos:line="1431" pos:column="93">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1431" pos:column="97">folderName</name><op:operator pos:line="1431" pos:column="107">.</op:operator><name pos:line="1431" pos:column="108">c_str</name></name><argument_list pos:line="1431" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="1433" pos:column="25">else
			<block pos:line="1434" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="1435" pos:column="33">const</specifier> <name pos:line="1435" pos:column="39">char</name> <type:modifier pos:line="1435" pos:column="44">*</type:modifier></type><name pos:line="1435" pos:column="45">menuEntryNameA</name> <init pos:line="1435" pos:column="60">= <expr><op:operator pos:line="1435" pos:column="62">(</op:operator><call><name><name pos:line="1435" pos:column="63">childNode</name><op:operator pos:line="1435" pos:column="72">-&gt;</op:operator><name pos:line="1435" pos:column="74">ToElement</name></name><argument_list pos:line="1435" pos:column="83">()</argument_list></call><op:operator pos:line="1435" pos:column="85">)</op:operator><op:operator pos:line="1435" pos:column="86">-&gt;</op:operator><call><name pos:line="1435" pos:column="88">Attribute</name><argument_list pos:line="1435" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="1435" pos:column="98">"MenuEntryName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="1436" pos:column="33">const</specifier> <name pos:line="1436" pos:column="39">char</name> <type:modifier pos:line="1436" pos:column="44">*</type:modifier></type><name pos:line="1436" pos:column="45">menuItemNameA</name> <init pos:line="1436" pos:column="59">= <expr><op:operator pos:line="1436" pos:column="61">(</op:operator><call><name><name pos:line="1436" pos:column="62">childNode</name><op:operator pos:line="1436" pos:column="71">-&gt;</op:operator><name pos:line="1436" pos:column="73">ToElement</name></name><argument_list pos:line="1436" pos:column="82">()</argument_list></call><op:operator pos:line="1436" pos:column="84">)</op:operator><op:operator pos:line="1436" pos:column="85">-&gt;</op:operator><call><name pos:line="1436" pos:column="87">Attribute</name><argument_list pos:line="1436" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="1436" pos:column="97">"MenuItemName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="1438" pos:column="33">generic_string</name></type> <name pos:line="1438" pos:column="48">menuEntryName</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1439" pos:column="33">generic_string</name></type> <name pos:line="1439" pos:column="48">menuItemName</name></decl>;</decl_stmt>
<cpp:ifdef pos:line="1440" pos:column="1">#<cpp:directive pos:line="1440" pos:column="2">ifdef</cpp:directive> <name pos:line="1440" pos:column="8">UNICODE</name></cpp:ifdef>
				<expr_stmt><expr><name pos:line="1441" pos:column="33">menuEntryName</name> <op:operator pos:line="1441" pos:column="47">=</op:operator> <name pos:line="1441" pos:column="49">menuEntryNameA</name><op:operator pos:line="1441" pos:column="63">?</op:operator><call><name><name pos:line="1441" pos:column="64">wmc</name><op:operator pos:line="1441" pos:column="67">-&gt;</op:operator><name pos:line="1441" pos:column="69">char2wchar</name></name><argument_list pos:line="1441" pos:column="79">(<argument><expr><name pos:line="1441" pos:column="80">menuEntryNameA</name></expr></argument>, <argument><expr><name pos:line="1441" pos:column="96">SC_CP_UTF8</name></expr></argument>)</argument_list></call><op:operator pos:line="1441" pos:column="107">:</op:operator><call><name pos:line="1441" pos:column="108">TEXT</name><argument_list pos:line="1441" pos:column="112">(<argument><expr><lit:literal type="string" pos:line="1441" pos:column="113">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1442" pos:column="33">menuItemName</name> <op:operator pos:line="1442" pos:column="46">=</op:operator> <name pos:line="1442" pos:column="48">menuItemNameA</name><op:operator pos:line="1442" pos:column="61">?</op:operator><call><name><name pos:line="1442" pos:column="62">wmc</name><op:operator pos:line="1442" pos:column="65">-&gt;</op:operator><name pos:line="1442" pos:column="67">char2wchar</name></name><argument_list pos:line="1442" pos:column="77">(<argument><expr><name pos:line="1442" pos:column="78">menuItemNameA</name></expr></argument>, <argument><expr><name pos:line="1442" pos:column="93">SC_CP_UTF8</name></expr></argument>)</argument_list></call><op:operator pos:line="1442" pos:column="104">:</op:operator><call><name pos:line="1442" pos:column="105">TEXT</name><argument_list pos:line="1442" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="1442" pos:column="110">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1443" pos:column="1">#<cpp:directive pos:line="1443" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><name pos:line="1444" pos:column="33">menuEntryName</name> <op:operator pos:line="1444" pos:column="47">=</op:operator> <name pos:line="1444" pos:column="49">menuEntryNameA</name><op:operator pos:line="1444" pos:column="63">?</op:operator><name pos:line="1444" pos:column="64">menuEntryNameA</name><op:operator pos:line="1444" pos:column="78">:</op:operator><lit:literal type="string" pos:line="1444" pos:column="79">""</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1445" pos:column="33">menuItemName</name> <op:operator pos:line="1445" pos:column="46">=</op:operator> <name pos:line="1445" pos:column="48">menuItemNameA</name><op:operator pos:line="1445" pos:column="61">?</op:operator><name pos:line="1445" pos:column="62">menuItemNameA</name><op:operator pos:line="1445" pos:column="75">:</op:operator><lit:literal type="string" pos:line="1445" pos:column="76">""</lit:literal></expr>;</expr_stmt>
<cpp:endif pos:line="1446" pos:column="1">#<cpp:directive pos:line="1446" pos:column="2">endif</cpp:directive></cpp:endif>
				<if pos:line="1447" pos:column="33">if <condition pos:line="1447" pos:column="36">(<expr><name pos:line="1447" pos:column="37">menuEntryName</name> <op:operator pos:line="1447" pos:column="51">!=</op:operator> <call><name pos:line="1447" pos:column="54">TEXT</name><argument_list pos:line="1447" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1447" pos:column="59">""</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1447" pos:column="63">&amp;&amp;</op:operator> <name pos:line="1447" pos:column="66">menuItemName</name> <op:operator pos:line="1447" pos:column="79">!=</op:operator> <call><name pos:line="1447" pos:column="82">TEXT</name><argument_list pos:line="1447" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="1447" pos:column="87">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1447" pos:column="91">
				<block pos:line="1448" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1449" pos:column="41">int</name></type> <name pos:line="1449" pos:column="45">nbMenuEntry</name> <init pos:line="1449" pos:column="57">= <expr><call><name><op:operator pos:line="1449" pos:column="59">::</op:operator><name pos:line="1449" pos:column="61">GetMenuItemCount</name></name><argument_list pos:line="1449" pos:column="77">(<argument><expr><name pos:line="1449" pos:column="78">mainMenuHadle</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<for pos:line="1450" pos:column="41">for (<init><decl><type><name pos:line="1450" pos:column="46">int</name></type> <name pos:line="1450" pos:column="50">i</name> <init pos:line="1450" pos:column="52">= <expr><lit:literal type="number" pos:line="1450" pos:column="54">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1450" pos:column="58">i</name> <op:operator pos:line="1450" pos:column="60">&lt;</op:operator> <name pos:line="1450" pos:column="62">nbMenuEntry</name></expr> ;</condition> <incr><expr><name pos:line="1450" pos:column="76">i</name><op:operator pos:line="1450" pos:column="77">++</op:operator></expr></incr>)
					<block pos:line="1451" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="1452" pos:column="49">TCHAR</name></type> <name><name pos:line="1452" pos:column="55">menuEntryString</name><index pos:line="1452" pos:column="70">[<expr><lit:literal type="number" pos:line="1452" pos:column="71">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="1453" pos:column="49">::</op:operator><name pos:line="1453" pos:column="51">GetMenuString</name></name><argument_list pos:line="1453" pos:column="64">(<argument><expr><name pos:line="1453" pos:column="65">mainMenuHadle</name></expr></argument>, <argument><expr><name pos:line="1453" pos:column="80">i</name></expr></argument>, <argument><expr><name pos:line="1453" pos:column="83">menuEntryString</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1453" pos:column="100">64</lit:literal></expr></argument>, <argument><expr><name pos:line="1453" pos:column="104">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="1454" pos:column="49">if <condition pos:line="1454" pos:column="52">(<expr><call><name pos:line="1454" pos:column="53">generic_stricmp</name><argument_list pos:line="1454" pos:column="68">(<argument><expr><call><name><name pos:line="1454" pos:column="69">menuEntryName</name><op:operator pos:line="1454" pos:column="82">.</op:operator><name pos:line="1454" pos:column="83">c_str</name></name><argument_list pos:line="1454" pos:column="88">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1454" pos:column="92">purgeMenuItemString</name><argument_list pos:line="1454" pos:column="111">(<argument><expr><name pos:line="1454" pos:column="112">menuEntryString</name></expr></argument>)</argument_list></call><op:operator pos:line="1454" pos:column="128">.</op:operator><call><name pos:line="1454" pos:column="129">c_str</name><argument_list pos:line="1454" pos:column="134">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1454" pos:column="138">==</op:operator> <lit:literal type="number" pos:line="1454" pos:column="141">0</lit:literal></expr>)</condition><then pos:line="1454" pos:column="143">
						<block pos:line="1455" pos:column="49">{
							<decl_stmt><decl><type><name><name pos:line="1456" pos:column="57">vector</name><argument_list pos:line="1456" pos:column="63">&lt; <argument><expr><name><name pos:line="1456" pos:column="65">pair</name><argument_list pos:line="1456" pos:column="69">&lt;<argument><expr><name pos:line="1456" pos:column="70">HMENU</name></expr></argument>, <argument><expr><name pos:line="1456" pos:column="77">int</name></expr></argument>&gt;</argument_list></name></expr></argument> &gt;</argument_list></name></type> <name pos:line="1456" pos:column="84">parentMenuPos</name></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="1457" pos:column="57">HMENU</name></type> <name pos:line="1457" pos:column="63">topMenu</name> <init pos:line="1457" pos:column="71">= <expr><call><name><op:operator pos:line="1457" pos:column="73">::</op:operator><name pos:line="1457" pos:column="75">GetSubMenu</name></name><argument_list pos:line="1457" pos:column="85">(<argument><expr><name pos:line="1457" pos:column="86">mainMenuHadle</name></expr></argument>, <argument><expr><name pos:line="1457" pos:column="101">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="1458" pos:column="57">int</name></type> <name pos:line="1458" pos:column="61">maxTopMenuPos</name> <init pos:line="1458" pos:column="75">= <expr><call><name><op:operator pos:line="1458" pos:column="77">::</op:operator><name pos:line="1458" pos:column="79">GetMenuItemCount</name></name><argument_list pos:line="1458" pos:column="95">(<argument><expr><name pos:line="1458" pos:column="96">topMenu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="1459" pos:column="57">HMENU</name></type> <name pos:line="1459" pos:column="63">currMenu</name> <init pos:line="1459" pos:column="72">= <expr><name pos:line="1459" pos:column="74">topMenu</name></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="1460" pos:column="57">int</name></type> <name pos:line="1460" pos:column="61">currMaxMenuPos</name> <init pos:line="1460" pos:column="76">= <expr><name pos:line="1460" pos:column="78">maxTopMenuPos</name></expr></init></decl>;</decl_stmt>

							<decl_stmt><decl><type><name pos:line="1462" pos:column="57">int</name></type> <name pos:line="1462" pos:column="61">currMenuPos</name> <init pos:line="1462" pos:column="73">= <expr><lit:literal type="number" pos:line="1462" pos:column="75">0</lit:literal></expr></init></decl>;</decl_stmt>
							<decl_stmt><decl><type><name pos:line="1463" pos:column="57">bool</name></type> <name pos:line="1463" pos:column="62">notFound</name> <init pos:line="1463" pos:column="71">= <expr><lit:literal type="boolean" pos:line="1463" pos:column="73">false</lit:literal></expr></init></decl>;</decl_stmt>

							<do pos:line="1465" pos:column="57">do <block pos:line="1465" pos:column="60">{
								<if pos:line="1466" pos:column="65">if <condition pos:line="1466" pos:column="68">( <expr><call><name><op:operator pos:line="1466" pos:column="70">::</op:operator><name pos:line="1466" pos:column="72">GetSubMenu</name></name><argument_list pos:line="1466" pos:column="82">( <argument><expr><name pos:line="1466" pos:column="84">currMenu</name></expr></argument>, <argument><expr><name pos:line="1466" pos:column="94">currMenuPos</name></expr></argument> )</argument_list></call></expr> )</condition><then pos:line="1466" pos:column="109"> <block pos:line="1466" pos:column="110">{
									<comment type="line" pos:line="1467" pos:column="73">//  Go into sub menu</comment>
									<expr_stmt><expr><call><name><name pos:line="1468" pos:column="73">parentMenuPos</name><op:operator pos:line="1468" pos:column="86">.</op:operator><name pos:line="1468" pos:column="87">push_back</name></name><argument_list pos:line="1468" pos:column="96">( <argument><expr><call><name><op:operator pos:line="1468" pos:column="98">::</op:operator><name pos:line="1468" pos:column="100">make_pair</name></name><argument_list pos:line="1468" pos:column="109">( <argument><expr><name pos:line="1468" pos:column="111">currMenu</name></expr></argument>, <argument><expr><name pos:line="1468" pos:column="121">currMenuPos</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>
									<expr_stmt><expr><name pos:line="1469" pos:column="73">currMenu</name> <op:operator pos:line="1469" pos:column="82">=</op:operator> <call><name><op:operator pos:line="1469" pos:column="84">::</op:operator><name pos:line="1469" pos:column="86">GetSubMenu</name></name><argument_list pos:line="1469" pos:column="96">( <argument><expr><name pos:line="1469" pos:column="98">currMenu</name></expr></argument>, <argument><expr><name pos:line="1469" pos:column="108">currMenuPos</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
									<expr_stmt><expr><name pos:line="1470" pos:column="73">currMenuPos</name> <op:operator pos:line="1470" pos:column="85">=</op:operator> <lit:literal type="number" pos:line="1470" pos:column="87">0</lit:literal></expr>;</expr_stmt>
									<expr_stmt><expr><name pos:line="1471" pos:column="73">currMaxMenuPos</name> <op:operator pos:line="1471" pos:column="88">=</op:operator> <call><name><op:operator pos:line="1471" pos:column="90">::</op:operator><name pos:line="1471" pos:column="92">GetMenuItemCount</name></name><argument_list pos:line="1471" pos:column="108">(<argument><expr><name pos:line="1471" pos:column="109">currMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								}</block></then>
								<else pos:line="1473" pos:column="65">else <block pos:line="1473" pos:column="70">{
									<comment type="line" pos:line="1474" pos:column="73">//  Check current menu position.</comment>
									<decl_stmt><decl><type><name pos:line="1475" pos:column="73">TCHAR</name></type> <name><name pos:line="1475" pos:column="79">cmdStr</name><index pos:line="1475" pos:column="85">[<expr><lit:literal type="number" pos:line="1475" pos:column="86">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
									<expr_stmt><expr><call><name><op:operator pos:line="1476" pos:column="73">::</op:operator><name pos:line="1476" pos:column="75">GetMenuString</name></name><argument_list pos:line="1476" pos:column="88">(<argument><expr><name pos:line="1476" pos:column="89">currMenu</name></expr></argument>, <argument><expr><name pos:line="1476" pos:column="99">currMenuPos</name></expr></argument>, <argument><expr><name pos:line="1476" pos:column="112">cmdStr</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1476" pos:column="120">256</lit:literal></expr></argument>, <argument><expr><name pos:line="1476" pos:column="125">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									<if pos:line="1477" pos:column="73">if <condition pos:line="1477" pos:column="76">(<expr><call><name pos:line="1477" pos:column="77">generic_stricmp</name><argument_list pos:line="1477" pos:column="92">(<argument><expr><call><name><name pos:line="1477" pos:column="93">menuItemName</name><op:operator pos:line="1477" pos:column="105">.</op:operator><name pos:line="1477" pos:column="106">c_str</name></name><argument_list pos:line="1477" pos:column="111">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1477" pos:column="115">purgeMenuItemString</name><argument_list pos:line="1477" pos:column="134">(<argument><expr><name pos:line="1477" pos:column="135">cmdStr</name></expr></argument>)</argument_list></call><op:operator pos:line="1477" pos:column="142">.</op:operator><call><name pos:line="1477" pos:column="143">c_str</name><argument_list pos:line="1477" pos:column="148">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1477" pos:column="152">==</op:operator> <lit:literal type="number" pos:line="1477" pos:column="155">0</lit:literal></expr>)</condition><then pos:line="1477" pos:column="157">
									<block pos:line="1478" pos:column="73">{
										<decl_stmt><decl><type><name pos:line="1479" pos:column="81">int</name></type> <name pos:line="1479" pos:column="85">cmdId</name> <init pos:line="1479" pos:column="91">= <expr><call><name><op:operator pos:line="1479" pos:column="93">::</op:operator><name pos:line="1479" pos:column="95">GetMenuItemID</name></name><argument_list pos:line="1479" pos:column="108">(<argument><expr><name pos:line="1479" pos:column="109">currMenu</name></expr></argument>, <argument><expr><name pos:line="1479" pos:column="119">currMenuPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
										<expr_stmt><expr><call><name><name pos:line="1480" pos:column="81">_contextMenuItems</name><op:operator pos:line="1480" pos:column="98">.</op:operator><name pos:line="1480" pos:column="99">push_back</name></name><argument_list pos:line="1480" pos:column="108">(<argument><expr><call><name pos:line="1480" pos:column="109">MenuItemUnit</name><argument_list pos:line="1480" pos:column="121">(<argument><expr><name pos:line="1480" pos:column="122">cmdId</name></expr></argument>, <argument><expr><call><name><name pos:line="1480" pos:column="129">displayAs</name><op:operator pos:line="1480" pos:column="138">.</op:operator><name pos:line="1480" pos:column="139">c_str</name></name><argument_list pos:line="1480" pos:column="144">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1480" pos:column="148">folderName</name><op:operator pos:line="1480" pos:column="158">.</op:operator><name pos:line="1480" pos:column="159">c_str</name></name><argument_list pos:line="1480" pos:column="164">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
										<break pos:line="1481" pos:column="81">break;</break>
									}</block></then></if>
									
									<if pos:line="1484" pos:column="73">if <condition pos:line="1484" pos:column="76">( <expr><op:operator pos:line="1484" pos:column="78">(</op:operator> <name pos:line="1484" pos:column="80">currMenuPos</name> <op:operator pos:line="1484" pos:column="92">&gt;=</op:operator> <name pos:line="1484" pos:column="95">currMaxMenuPos</name> <op:operator pos:line="1484" pos:column="110">)</op:operator> <op:operator pos:line="1484" pos:column="112">&amp;&amp;</op:operator> <op:operator pos:line="1484" pos:column="115">(</op:operator> <call><name><name pos:line="1484" pos:column="117">parentMenuPos</name><op:operator pos:line="1484" pos:column="130">.</op:operator><name pos:line="1484" pos:column="131">size</name></name><argument_list pos:line="1484" pos:column="135">()</argument_list></call> <op:operator pos:line="1484" pos:column="138">&gt;</op:operator> <lit:literal type="number" pos:line="1484" pos:column="140">0</lit:literal> <op:operator pos:line="1484" pos:column="142">)</op:operator></expr> )</condition><then pos:line="1484" pos:column="145"> <block pos:line="1484" pos:column="146">{
										<expr_stmt><expr><name pos:line="1485" pos:column="81">currMenu</name> <op:operator pos:line="1485" pos:column="90">=</op:operator> <call><name><name pos:line="1485" pos:column="92">parentMenuPos</name><op:operator pos:line="1485" pos:column="105">.</op:operator><name pos:line="1485" pos:column="106">back</name></name><argument_list pos:line="1485" pos:column="110">()</argument_list></call><op:operator pos:line="1485" pos:column="112">.</op:operator><name pos:line="1485" pos:column="113">first</name></expr>;</expr_stmt>
										<expr_stmt><expr><name pos:line="1486" pos:column="81">currMenuPos</name> <op:operator pos:line="1486" pos:column="93">=</op:operator> <call><name><name pos:line="1486" pos:column="95">parentMenuPos</name><op:operator pos:line="1486" pos:column="108">.</op:operator><name pos:line="1486" pos:column="109">back</name></name><argument_list pos:line="1486" pos:column="113">()</argument_list></call><op:operator pos:line="1486" pos:column="115">.</op:operator><name pos:line="1486" pos:column="116">second</name></expr>;</expr_stmt>
										<expr_stmt><expr><call><name><name pos:line="1487" pos:column="81">parentMenuPos</name><op:operator pos:line="1487" pos:column="94">.</op:operator><name pos:line="1487" pos:column="95">pop_back</name></name><argument_list pos:line="1487" pos:column="103">()</argument_list></call></expr>;</expr_stmt>
										<expr_stmt><expr><name pos:line="1488" pos:column="81">currMaxMenuPos</name> <op:operator pos:line="1488" pos:column="96">=</op:operator> <call><name><op:operator pos:line="1488" pos:column="98">::</op:operator><name pos:line="1488" pos:column="100">GetMenuItemCount</name></name><argument_list pos:line="1488" pos:column="116">( <argument><expr><name pos:line="1488" pos:column="118">currMenu</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
									}</block></then></if>

									<if pos:line="1491" pos:column="73">if <condition pos:line="1491" pos:column="76">( <expr><op:operator pos:line="1491" pos:column="78">(</op:operator> <name pos:line="1491" pos:column="80">currMenu</name> <op:operator pos:line="1491" pos:column="89">==</op:operator> <name pos:line="1491" pos:column="92">topMenu</name> <op:operator pos:line="1491" pos:column="100">)</op:operator> <op:operator pos:line="1491" pos:column="102">&amp;&amp;</op:operator> <op:operator pos:line="1491" pos:column="105">(</op:operator> <name pos:line="1491" pos:column="107">currMenuPos</name> <op:operator pos:line="1491" pos:column="119">&gt;=</op:operator> <name pos:line="1491" pos:column="122">maxTopMenuPos</name> <op:operator pos:line="1491" pos:column="136">)</op:operator></expr> )</condition><then pos:line="1491" pos:column="139"> <block pos:line="1491" pos:column="140">{
										<expr_stmt><expr><name pos:line="1492" pos:column="81">notFound</name> <op:operator pos:line="1492" pos:column="90">=</op:operator> <lit:literal type="boolean" pos:line="1492" pos:column="92">true</lit:literal></expr>;</expr_stmt>
									}</block></then>
									<else pos:line="1494" pos:column="73">else <block pos:line="1494" pos:column="78">{
										<expr_stmt><expr><name pos:line="1495" pos:column="81">currMenuPos</name><op:operator pos:line="1495" pos:column="92">++</op:operator></expr>;</expr_stmt>
									}</block></else></if>
								}</block></else></if>
							}</block> while <condition pos:line="1498" pos:column="65">(<expr><op:operator pos:line="1498" pos:column="66">!</op:operator> <name pos:line="1498" pos:column="68">notFound</name></expr> )</condition>;</do>
							<break pos:line="1499" pos:column="57">break;</break>
						}</block></then></if>
					}</block></for>
				}</block></then>
				<else pos:line="1503" pos:column="33">else
				<block pos:line="1504" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="1505" pos:column="41">const</specifier> <name pos:line="1505" pos:column="47">char</name> <type:modifier pos:line="1505" pos:column="52">*</type:modifier></type><name pos:line="1505" pos:column="53">pluginNameA</name> <init pos:line="1505" pos:column="65">= <expr><op:operator pos:line="1505" pos:column="67">(</op:operator><call><name><name pos:line="1505" pos:column="68">childNode</name><op:operator pos:line="1505" pos:column="77">-&gt;</op:operator><name pos:line="1505" pos:column="79">ToElement</name></name><argument_list pos:line="1505" pos:column="88">()</argument_list></call><op:operator pos:line="1505" pos:column="90">)</op:operator><op:operator pos:line="1505" pos:column="91">-&gt;</op:operator><call><name pos:line="1505" pos:column="93">Attribute</name><argument_list pos:line="1505" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="1505" pos:column="103">"PluginEntryName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="1506" pos:column="41">const</specifier> <name pos:line="1506" pos:column="47">char</name> <type:modifier pos:line="1506" pos:column="52">*</type:modifier></type><name pos:line="1506" pos:column="53">pluginCmdNameA</name> <init pos:line="1506" pos:column="68">= <expr><op:operator pos:line="1506" pos:column="70">(</op:operator><call><name><name pos:line="1506" pos:column="71">childNode</name><op:operator pos:line="1506" pos:column="80">-&gt;</op:operator><name pos:line="1506" pos:column="82">ToElement</name></name><argument_list pos:line="1506" pos:column="91">()</argument_list></call><op:operator pos:line="1506" pos:column="93">)</op:operator><op:operator pos:line="1506" pos:column="94">-&gt;</op:operator><call><name pos:line="1506" pos:column="96">Attribute</name><argument_list pos:line="1506" pos:column="105">(<argument><expr><lit:literal type="string" pos:line="1506" pos:column="106">"PluginCommandItemName"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<decl_stmt><decl><type><name pos:line="1508" pos:column="41">generic_string</name></type> <name pos:line="1508" pos:column="56">pluginName</name></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="1509" pos:column="41">generic_string</name></type> <name pos:line="1509" pos:column="56">pluginCmdName</name></decl>;</decl_stmt>
<cpp:ifdef pos:line="1510" pos:column="1">#<cpp:directive pos:line="1510" pos:column="2">ifdef</cpp:directive> <name pos:line="1510" pos:column="8">UNICODE</name></cpp:ifdef>
					<expr_stmt><expr><name pos:line="1511" pos:column="41">pluginName</name> <op:operator pos:line="1511" pos:column="52">=</op:operator> <name pos:line="1511" pos:column="54">pluginNameA</name><op:operator pos:line="1511" pos:column="65">?</op:operator><call><name><name pos:line="1511" pos:column="66">wmc</name><op:operator pos:line="1511" pos:column="69">-&gt;</op:operator><name pos:line="1511" pos:column="71">char2wchar</name></name><argument_list pos:line="1511" pos:column="81">(<argument><expr><name pos:line="1511" pos:column="82">pluginNameA</name></expr></argument>, <argument><expr><name pos:line="1511" pos:column="95">SC_CP_UTF8</name></expr></argument>)</argument_list></call><op:operator pos:line="1511" pos:column="106">:</op:operator><call><name pos:line="1511" pos:column="107">TEXT</name><argument_list pos:line="1511" pos:column="111">(<argument><expr><lit:literal type="string" pos:line="1511" pos:column="112">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1512" pos:column="41">pluginCmdName</name> <op:operator pos:line="1512" pos:column="55">=</op:operator> <name pos:line="1512" pos:column="57">pluginCmdNameA</name><op:operator pos:line="1512" pos:column="71">?</op:operator><call><name><name pos:line="1512" pos:column="72">wmc</name><op:operator pos:line="1512" pos:column="75">-&gt;</op:operator><name pos:line="1512" pos:column="77">char2wchar</name></name><argument_list pos:line="1512" pos:column="87">(<argument><expr><name pos:line="1512" pos:column="88">pluginCmdNameA</name></expr></argument>, <argument><expr><name pos:line="1512" pos:column="104">SC_CP_UTF8</name></expr></argument>)</argument_list></call><op:operator pos:line="1512" pos:column="115">:</op:operator><call><name pos:line="1512" pos:column="116">TEXT</name><argument_list pos:line="1512" pos:column="120">(<argument><expr><lit:literal type="string" pos:line="1512" pos:column="121">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1513" pos:column="1">#<cpp:directive pos:line="1513" pos:column="2">else</cpp:directive></cpp:else>
					<expr_stmt><expr><name pos:line="1514" pos:column="41">pluginName</name> <op:operator pos:line="1514" pos:column="52">=</op:operator> <name pos:line="1514" pos:column="54">pluginNameA</name><op:operator pos:line="1514" pos:column="65">?</op:operator><name pos:line="1514" pos:column="66">pluginNameA</name><op:operator pos:line="1514" pos:column="77">:</op:operator><lit:literal type="string" pos:line="1514" pos:column="78">""</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1515" pos:column="41">pluginCmdName</name> <op:operator pos:line="1515" pos:column="55">=</op:operator> <name pos:line="1515" pos:column="57">pluginCmdNameA</name><op:operator pos:line="1515" pos:column="71">?</op:operator><name pos:line="1515" pos:column="72">pluginCmdNameA</name><op:operator pos:line="1515" pos:column="86">:</op:operator><lit:literal type="string" pos:line="1515" pos:column="87">""</lit:literal></expr>;</expr_stmt>
<cpp:endif pos:line="1516" pos:column="1">#<cpp:directive pos:line="1516" pos:column="2">endif</cpp:directive></cpp:endif>
					<comment type="line" pos:line="1517" pos:column="41">// if plugin menu existing plls the value of PluginEntryName and PluginCommandItemName are valid</comment>
					<if pos:line="1518" pos:column="41">if <condition pos:line="1518" pos:column="44">(<expr><name pos:line="1518" pos:column="45">pluginsMenu</name> <op:operator pos:line="1518" pos:column="57">&amp;&amp;</op:operator> <name pos:line="1518" pos:column="60">pluginName</name> <op:operator pos:line="1518" pos:column="71">!=</op:operator> <call><name pos:line="1518" pos:column="74">TEXT</name><argument_list pos:line="1518" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="1518" pos:column="79">""</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1518" pos:column="83">&amp;&amp;</op:operator> <name pos:line="1518" pos:column="86">pluginCmdName</name> <op:operator pos:line="1518" pos:column="100">!=</op:operator> <call><name pos:line="1518" pos:column="103">TEXT</name><argument_list pos:line="1518" pos:column="107">(<argument><expr><lit:literal type="string" pos:line="1518" pos:column="108">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1518" pos:column="112">
					<block pos:line="1519" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="1520" pos:column="49">int</name></type> <name pos:line="1520" pos:column="53">nbPlugins</name> <init pos:line="1520" pos:column="63">= <expr><call><name><op:operator pos:line="1520" pos:column="65">::</op:operator><name pos:line="1520" pos:column="67">GetMenuItemCount</name></name><argument_list pos:line="1520" pos:column="83">(<argument><expr><name pos:line="1520" pos:column="84">pluginsMenu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<for pos:line="1521" pos:column="49">for (<init><decl><type><name pos:line="1521" pos:column="54">int</name></type> <name pos:line="1521" pos:column="58">i</name> <init pos:line="1521" pos:column="60">= <expr><lit:literal type="number" pos:line="1521" pos:column="62">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1521" pos:column="66">i</name> <op:operator pos:line="1521" pos:column="68">&lt;</op:operator> <name pos:line="1521" pos:column="70">nbPlugins</name></expr> ;</condition> <incr><expr><name pos:line="1521" pos:column="82">i</name><op:operator pos:line="1521" pos:column="83">++</op:operator></expr></incr>)
						<block pos:line="1522" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="1523" pos:column="57">TCHAR</name></type> <name><name pos:line="1523" pos:column="63">menuItemString</name><index pos:line="1523" pos:column="77">[<expr><lit:literal type="number" pos:line="1523" pos:column="78">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><op:operator pos:line="1524" pos:column="57">::</op:operator><name pos:line="1524" pos:column="59">GetMenuString</name></name><argument_list pos:line="1524" pos:column="72">(<argument><expr><name pos:line="1524" pos:column="73">pluginsMenu</name></expr></argument>, <argument><expr><name pos:line="1524" pos:column="86">i</name></expr></argument>, <argument><expr><name pos:line="1524" pos:column="89">menuItemString</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1524" pos:column="105">256</lit:literal></expr></argument>, <argument><expr><name pos:line="1524" pos:column="110">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<if pos:line="1525" pos:column="57">if <condition pos:line="1525" pos:column="60">(<expr><call><name pos:line="1525" pos:column="61">generic_stricmp</name><argument_list pos:line="1525" pos:column="76">(<argument><expr><call><name><name pos:line="1525" pos:column="77">pluginName</name><op:operator pos:line="1525" pos:column="87">.</op:operator><name pos:line="1525" pos:column="88">c_str</name></name><argument_list pos:line="1525" pos:column="93">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1525" pos:column="97">purgeMenuItemString</name><argument_list pos:line="1525" pos:column="116">(<argument><expr><name pos:line="1525" pos:column="117">menuItemString</name></expr></argument>)</argument_list></call><op:operator pos:line="1525" pos:column="132">.</op:operator><call><name pos:line="1525" pos:column="133">c_str</name><argument_list pos:line="1525" pos:column="138">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1525" pos:column="142">==</op:operator> <lit:literal type="number" pos:line="1525" pos:column="145">0</lit:literal></expr>)</condition><then pos:line="1525" pos:column="147">
							<block pos:line="1526" pos:column="57">{
								<decl_stmt><decl><type><name pos:line="1527" pos:column="65">HMENU</name></type> <name pos:line="1527" pos:column="71">pluginMenu</name> <init pos:line="1527" pos:column="82">= <expr><call><name><op:operator pos:line="1527" pos:column="84">::</op:operator><name pos:line="1527" pos:column="86">GetSubMenu</name></name><argument_list pos:line="1527" pos:column="96">(<argument><expr><name pos:line="1527" pos:column="97">pluginsMenu</name></expr></argument>, <argument><expr><name pos:line="1527" pos:column="110">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<decl_stmt><decl><type><name pos:line="1528" pos:column="65">int</name></type> <name pos:line="1528" pos:column="69">nbPluginCmd</name> <init pos:line="1528" pos:column="81">= <expr><call><name><op:operator pos:line="1528" pos:column="83">::</op:operator><name pos:line="1528" pos:column="85">GetMenuItemCount</name></name><argument_list pos:line="1528" pos:column="101">(<argument><expr><name pos:line="1528" pos:column="102">pluginMenu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
								<for pos:line="1529" pos:column="65">for (<init><decl><type><name pos:line="1529" pos:column="70">int</name></type> <name pos:line="1529" pos:column="74">j</name> <init pos:line="1529" pos:column="76">= <expr><lit:literal type="number" pos:line="1529" pos:column="78">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1529" pos:column="82">j</name> <op:operator pos:line="1529" pos:column="84">&lt;</op:operator> <name pos:line="1529" pos:column="86">nbPluginCmd</name></expr> ;</condition> <incr><expr><name pos:line="1529" pos:column="100">j</name><op:operator pos:line="1529" pos:column="101">++</op:operator></expr></incr>)
								<block pos:line="1530" pos:column="65">{
									<decl_stmt><decl><type><name pos:line="1531" pos:column="73">TCHAR</name></type> <name><name pos:line="1531" pos:column="79">pluginCmdStr</name><index pos:line="1531" pos:column="91">[<expr><lit:literal type="number" pos:line="1531" pos:column="92">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
									<expr_stmt><expr><call><name><op:operator pos:line="1532" pos:column="73">::</op:operator><name pos:line="1532" pos:column="75">GetMenuString</name></name><argument_list pos:line="1532" pos:column="88">(<argument><expr><name pos:line="1532" pos:column="89">pluginMenu</name></expr></argument>, <argument><expr><name pos:line="1532" pos:column="101">j</name></expr></argument>, <argument><expr><name pos:line="1532" pos:column="104">pluginCmdStr</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1532" pos:column="118">256</lit:literal></expr></argument>, <argument><expr><name pos:line="1532" pos:column="123">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
									<if pos:line="1533" pos:column="73">if <condition pos:line="1533" pos:column="76">(<expr><call><name pos:line="1533" pos:column="77">generic_stricmp</name><argument_list pos:line="1533" pos:column="92">(<argument><expr><call><name><name pos:line="1533" pos:column="93">pluginCmdName</name><op:operator pos:line="1533" pos:column="106">.</op:operator><name pos:line="1533" pos:column="107">c_str</name></name><argument_list pos:line="1533" pos:column="112">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1533" pos:column="116">purgeMenuItemString</name><argument_list pos:line="1533" pos:column="135">(<argument><expr><name pos:line="1533" pos:column="136">pluginCmdStr</name></expr></argument>)</argument_list></call><op:operator pos:line="1533" pos:column="149">.</op:operator><call><name pos:line="1533" pos:column="150">c_str</name><argument_list pos:line="1533" pos:column="155">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1533" pos:column="159">==</op:operator> <lit:literal type="number" pos:line="1533" pos:column="162">0</lit:literal></expr>)</condition><then pos:line="1533" pos:column="164">
									<block pos:line="1534" pos:column="73">{
										<decl_stmt><decl><type><name pos:line="1535" pos:column="81">int</name></type> <name pos:line="1535" pos:column="85">pluginCmdId</name> <init pos:line="1535" pos:column="97">= <expr><call><name><op:operator pos:line="1535" pos:column="99">::</op:operator><name pos:line="1535" pos:column="101">GetMenuItemID</name></name><argument_list pos:line="1535" pos:column="114">(<argument><expr><name pos:line="1535" pos:column="115">pluginMenu</name></expr></argument>, <argument><expr><name pos:line="1535" pos:column="127">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
										<expr_stmt><expr><call><name><name pos:line="1536" pos:column="81">_contextMenuItems</name><op:operator pos:line="1536" pos:column="98">.</op:operator><name pos:line="1536" pos:column="99">push_back</name></name><argument_list pos:line="1536" pos:column="108">(<argument><expr><call><name pos:line="1536" pos:column="109">MenuItemUnit</name><argument_list pos:line="1536" pos:column="121">(<argument><expr><name pos:line="1536" pos:column="122">pluginCmdId</name></expr></argument>, <argument><expr><call><name><name pos:line="1536" pos:column="135">displayAs</name><op:operator pos:line="1536" pos:column="144">.</op:operator><name pos:line="1536" pos:column="145">c_str</name></name><argument_list pos:line="1536" pos:column="150">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1536" pos:column="154">folderName</name><op:operator pos:line="1536" pos:column="164">.</op:operator><name pos:line="1536" pos:column="165">c_str</name></name><argument_list pos:line="1536" pos:column="170">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
										<break pos:line="1537" pos:column="81">break;</break>
									}</block></then></if>
								}</block></for>
								<break pos:line="1540" pos:column="65">break;</break>
							}</block></then></if>
						}</block></for>
					}</block></then></if>
				}</block></else></if>
			}</block></else></if>
		}</block></for>
	}</block></then></if>
	<return pos:line="1548" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1548" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1551" pos:column="1">void</name></type> <name><name pos:line="1551" pos:column="6">NppParameters</name><op:operator pos:line="1551" pos:column="19">::</op:operator><name pos:line="1551" pos:column="21">setWorkingDir</name></name><parameter_list pos:line="1551" pos:column="34">(<param><decl><type><specifier pos:line="1551" pos:column="35">const</specifier> <name pos:line="1551" pos:column="41">TCHAR</name> <type:modifier pos:line="1551" pos:column="47">*</type:modifier></type> <name pos:line="1551" pos:column="49">newPath</name></decl></param>)</parameter_list>
<block pos:line="1552" pos:column="1">{
	<if pos:line="1553" pos:column="9">if <condition pos:line="1553" pos:column="12">(<expr><name pos:line="1553" pos:column="13">newPath</name> <op:operator pos:line="1553" pos:column="21">&amp;&amp;</op:operator> <name><name pos:line="1553" pos:column="24">newPath</name><index pos:line="1553" pos:column="31">[<expr><lit:literal type="number" pos:line="1553" pos:column="32">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1553" pos:column="35"> 
	<block pos:line="1554" pos:column="9">{
		<expr_stmt><expr><name pos:line="1555" pos:column="17">_currentDirectory</name> <op:operator pos:line="1555" pos:column="35">=</op:operator> <name pos:line="1555" pos:column="37">newPath</name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1557" pos:column="9">else
	<block pos:line="1558" pos:column="9">{
		<if pos:line="1559" pos:column="17">if <condition pos:line="1559" pos:column="20">(<expr><call><name pos:line="1559" pos:column="21">PathFileExists</name><argument_list pos:line="1559" pos:column="35">(<argument><expr><name><name pos:line="1559" pos:column="36">_nppGUI</name><op:operator pos:line="1559" pos:column="43">.</op:operator><name pos:line="1559" pos:column="44">_defaultDirExp</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1559" pos:column="60">
		<block pos:line="1560" pos:column="17">{
			<expr_stmt><expr><name pos:line="1561" pos:column="25">_currentDirectory</name> <op:operator pos:line="1561" pos:column="43">=</op:operator> <name><name pos:line="1561" pos:column="45">_nppGUI</name><op:operator pos:line="1561" pos:column="52">.</op:operator><name pos:line="1561" pos:column="53">_defaultDirExp</name></name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1563" pos:column="17">else
		<block pos:line="1564" pos:column="17">{
			<expr_stmt><expr><name pos:line="1565" pos:column="25">_currentDirectory</name> <op:operator pos:line="1565" pos:column="43">=</op:operator> <call><name><name pos:line="1565" pos:column="45">_nppPath</name><op:operator pos:line="1565" pos:column="53">.</op:operator><name pos:line="1565" pos:column="54">c_str</name></name><argument_list pos:line="1565" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></else></if>
}</block></function>

<function><type><name pos:line="1570" pos:column="1">bool</name></type> <name><name pos:line="1570" pos:column="6">NppParameters</name><op:operator pos:line="1570" pos:column="19">::</op:operator><name pos:line="1570" pos:column="21">loadSession</name></name><parameter_list pos:line="1570" pos:column="32">(<param><decl><type><name pos:line="1570" pos:column="33">Session</name> <type:modifier pos:line="1570" pos:column="41">&amp;</type:modifier></type> <name pos:line="1570" pos:column="43">session</name></decl></param>, <param><decl><type><specifier pos:line="1570" pos:column="52">const</specifier> <name pos:line="1570" pos:column="58">TCHAR</name> <type:modifier pos:line="1570" pos:column="64">*</type:modifier></type><name pos:line="1570" pos:column="65">sessionFileName</name></decl></param>)</parameter_list>
<block pos:line="1571" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1572" pos:column="9">TiXmlDocument</name> <type:modifier pos:line="1572" pos:column="23">*</type:modifier></type><name pos:line="1572" pos:column="24">pXmlSessionDocument</name> <init pos:line="1572" pos:column="44">= <expr><op:operator pos:line="1572" pos:column="46">new</op:operator> <call><name pos:line="1572" pos:column="50">TiXmlDocument</name><argument_list pos:line="1572" pos:column="63">(<argument><expr><name pos:line="1572" pos:column="64">sessionFileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1573" pos:column="9">bool</name></type> <name pos:line="1573" pos:column="14">loadOkay</name> <init pos:line="1573" pos:column="23">= <expr><call><name><name pos:line="1573" pos:column="25">pXmlSessionDocument</name><op:operator pos:line="1573" pos:column="44">-&gt;</op:operator><name pos:line="1573" pos:column="46">LoadFile</name></name><argument_list pos:line="1573" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1574" pos:column="9">if <condition pos:line="1574" pos:column="12">(<expr><name pos:line="1574" pos:column="13">loadOkay</name></expr>)</condition><then pos:line="1574" pos:column="22">
		<expr_stmt><expr><name pos:line="1575" pos:column="17">loadOkay</name> <op:operator pos:line="1575" pos:column="26">=</op:operator> <call><name pos:line="1575" pos:column="28">getSessionFromXmlTree</name><argument_list pos:line="1575" pos:column="49">(<argument><expr><name pos:line="1575" pos:column="50">pXmlSessionDocument</name></expr></argument>, <argument><expr><op:operator pos:line="1575" pos:column="71">&amp;</op:operator><name pos:line="1575" pos:column="72">session</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><op:operator pos:line="1577" pos:column="9">delete</op:operator> <name pos:line="1577" pos:column="16">pXmlSessionDocument</name></expr>;</expr_stmt>
	<return pos:line="1578" pos:column="9">return <expr><name pos:line="1578" pos:column="16">loadOkay</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1581" pos:column="1">bool</name></type> <name><name pos:line="1581" pos:column="6">NppParameters</name><op:operator pos:line="1581" pos:column="19">::</op:operator><name pos:line="1581" pos:column="21">getSessionFromXmlTree</name></name><parameter_list pos:line="1581" pos:column="42">(<param><decl><type><name pos:line="1581" pos:column="43">TiXmlDocument</name> <type:modifier pos:line="1581" pos:column="57">*</type:modifier></type><name pos:line="1581" pos:column="58">pSessionDoc</name></decl></param>, <param><decl><type><name pos:line="1581" pos:column="71">Session</name> <type:modifier pos:line="1581" pos:column="79">*</type:modifier></type><name pos:line="1581" pos:column="80">pSession</name></decl></param>)</parameter_list>
<block pos:line="1582" pos:column="1">{
	<if pos:line="1583" pos:column="9">if <condition pos:line="1583" pos:column="12">(<expr><op:operator pos:line="1583" pos:column="13">(</op:operator><name pos:line="1583" pos:column="14">pSessionDoc</name><op:operator pos:line="1583" pos:column="25">)</op:operator> <op:operator pos:line="1583" pos:column="27">&amp;&amp;</op:operator> <op:operator pos:line="1583" pos:column="30">(</op:operator><op:operator pos:line="1583" pos:column="31">!</op:operator><name pos:line="1583" pos:column="32">pSession</name><op:operator pos:line="1583" pos:column="40">)</op:operator></expr>)</condition><then pos:line="1583" pos:column="42">
		<return pos:line="1584" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1584" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1586" pos:column="9">TiXmlDocument</name> <type:modifier pos:line="1586" pos:column="23">*</type:modifier><type:modifier pos:line="1586" pos:column="24">*</type:modifier></type><name pos:line="1586" pos:column="25">ppSessionDoc</name> <init pos:line="1586" pos:column="38">= <expr><op:operator pos:line="1586" pos:column="40">&amp;</op:operator><name pos:line="1586" pos:column="41">_pXmlSessionDoc</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1587" pos:column="9">Session</name> <type:modifier pos:line="1587" pos:column="17">*</type:modifier></type><name pos:line="1587" pos:column="18">ptrSession</name> <init pos:line="1587" pos:column="29">= <expr><op:operator pos:line="1587" pos:column="31">&amp;</op:operator><name pos:line="1587" pos:column="32">_session</name></expr></init></decl>;</decl_stmt>

	<if pos:line="1589" pos:column="9">if <condition pos:line="1589" pos:column="12">(<expr><name pos:line="1589" pos:column="13">pSessionDoc</name></expr>)</condition><then pos:line="1589" pos:column="25">
	<block pos:line="1590" pos:column="9">{
		<expr_stmt><expr><name pos:line="1591" pos:column="17">ppSessionDoc</name> <op:operator pos:line="1591" pos:column="30">=</op:operator> <op:operator pos:line="1591" pos:column="32">&amp;</op:operator><name pos:line="1591" pos:column="33">pSessionDoc</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1592" pos:column="17">ptrSession</name> <op:operator pos:line="1592" pos:column="28">=</op:operator> <name pos:line="1592" pos:column="30">pSession</name></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="1595" pos:column="9">if <condition pos:line="1595" pos:column="12">(<expr><op:operator pos:line="1595" pos:column="13">!</op:operator><op:operator pos:line="1595" pos:column="14">*</op:operator><name pos:line="1595" pos:column="15">ppSessionDoc</name></expr>)</condition><then pos:line="1595" pos:column="28">
		<return pos:line="1596" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1596" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1598" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1598" pos:column="19">*</type:modifier></type><name pos:line="1598" pos:column="20">root</name> <init pos:line="1598" pos:column="25">= <expr><call><name pos:line="1598" pos:column="27">(<type:modifier pos:line="1598" pos:column="28">*</type:modifier><name pos:line="1598" pos:column="29">ppSessionDoc</name>)<op:operator pos:line="1598" pos:column="42">-&gt;</op:operator><name pos:line="1598" pos:column="44">FirstChild</name></name><argument_list pos:line="1598" pos:column="54">(<argument><expr><call><name pos:line="1598" pos:column="55">TEXT</name><argument_list pos:line="1598" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1598" pos:column="60">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1599" pos:column="9">if <condition pos:line="1599" pos:column="12">(<expr><op:operator pos:line="1599" pos:column="13">!</op:operator><name pos:line="1599" pos:column="14">root</name></expr>)</condition><then pos:line="1599" pos:column="19"> 
		<return pos:line="1600" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1600" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="1602" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1602" pos:column="19">*</type:modifier></type><name pos:line="1602" pos:column="20">sessionRoot</name> <init pos:line="1602" pos:column="32">= <expr><call><name><name pos:line="1602" pos:column="34">root</name><op:operator pos:line="1602" pos:column="38">-&gt;</op:operator><name pos:line="1602" pos:column="40">FirstChildElement</name></name><argument_list pos:line="1602" pos:column="57">(<argument><expr><call><name pos:line="1602" pos:column="58">TEXT</name><argument_list pos:line="1602" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="1602" pos:column="63">"Session"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1603" pos:column="9">if <condition pos:line="1603" pos:column="12">(<expr><op:operator pos:line="1603" pos:column="13">!</op:operator><name pos:line="1603" pos:column="14">sessionRoot</name></expr>)</condition><then pos:line="1603" pos:column="26">
		<return pos:line="1604" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1604" pos:column="24">false</lit:literal></expr>;</return></then></if>

	
	<decl_stmt><decl><type><name pos:line="1607" pos:column="9">TiXmlElement</name> <type:modifier pos:line="1607" pos:column="22">*</type:modifier></type><name pos:line="1607" pos:column="23">actView</name> <init pos:line="1607" pos:column="31">= <expr><call><name><name pos:line="1607" pos:column="33">sessionRoot</name><op:operator pos:line="1607" pos:column="44">-&gt;</op:operator><name pos:line="1607" pos:column="46">ToElement</name></name><argument_list pos:line="1607" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1608" pos:column="9">size_t</name></type> <name pos:line="1608" pos:column="16">index</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1609" pos:column="9">const</specifier> <name pos:line="1609" pos:column="15">TCHAR</name> <type:modifier pos:line="1609" pos:column="21">*</type:modifier></type><name pos:line="1609" pos:column="22">str</name> <init pos:line="1609" pos:column="26">= <expr><call><name><name pos:line="1609" pos:column="28">actView</name><op:operator pos:line="1609" pos:column="35">-&gt;</op:operator><name pos:line="1609" pos:column="37">Attribute</name></name><argument_list pos:line="1609" pos:column="46">(<argument><expr><call><name pos:line="1609" pos:column="47">TEXT</name><argument_list pos:line="1609" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1609" pos:column="52">"activeView"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1609" pos:column="67">(</op:operator><name pos:line="1609" pos:column="68">int</name> <op:operator pos:line="1609" pos:column="72">*</op:operator><op:operator pos:line="1609" pos:column="73">)</op:operator><op:operator pos:line="1609" pos:column="74">&amp;</op:operator><name pos:line="1609" pos:column="75">index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1610" pos:column="9">if <condition pos:line="1610" pos:column="12">(<expr><name pos:line="1610" pos:column="13">str</name></expr>)</condition><then pos:line="1610" pos:column="17">
	<block pos:line="1611" pos:column="9">{
		<expr_stmt><expr><name pos:line="1612" pos:column="17">(<type:modifier pos:line="1612" pos:column="18">*</type:modifier><name pos:line="1612" pos:column="19">ptrSession</name>)<op:operator pos:line="1612" pos:column="30">.</op:operator><name pos:line="1612" pos:column="31">_activeView</name></name> <op:operator pos:line="1612" pos:column="43">=</op:operator> <name pos:line="1612" pos:column="45">index</name></expr>;</expr_stmt>
	}</block></then></if>


	<decl_stmt><decl><type><name pos:line="1616" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1616" pos:column="19">*</type:modifier></type><name pos:line="1616" pos:column="20">mainviewRoot</name> <init pos:line="1616" pos:column="33">= <expr><call><name><name pos:line="1616" pos:column="35">sessionRoot</name><op:operator pos:line="1616" pos:column="46">-&gt;</op:operator><name pos:line="1616" pos:column="48">FirstChildElement</name></name><argument_list pos:line="1616" pos:column="65">(<argument><expr><call><name pos:line="1616" pos:column="66">TEXT</name><argument_list pos:line="1616" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="1616" pos:column="71">"mainView"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1617" pos:column="9">if <condition pos:line="1617" pos:column="12">(<expr><name pos:line="1617" pos:column="13">mainviewRoot</name></expr>)</condition><then pos:line="1617" pos:column="26">
	<block pos:line="1618" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1619" pos:column="17">TiXmlElement</name> <type:modifier pos:line="1619" pos:column="30">*</type:modifier></type><name pos:line="1619" pos:column="31">actIndex</name> <init pos:line="1619" pos:column="40">= <expr><call><name><name pos:line="1619" pos:column="42">mainviewRoot</name><op:operator pos:line="1619" pos:column="54">-&gt;</op:operator><name pos:line="1619" pos:column="56">ToElement</name></name><argument_list pos:line="1619" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1620" pos:column="17">str</name> <op:operator pos:line="1620" pos:column="21">=</op:operator> <call><name><name pos:line="1620" pos:column="23">actIndex</name><op:operator pos:line="1620" pos:column="31">-&gt;</op:operator><name pos:line="1620" pos:column="33">Attribute</name></name><argument_list pos:line="1620" pos:column="42">(<argument><expr><call><name pos:line="1620" pos:column="43">TEXT</name><argument_list pos:line="1620" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="1620" pos:column="48">"activeIndex"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1620" pos:column="64">(</op:operator><name pos:line="1620" pos:column="65">int</name> <op:operator pos:line="1620" pos:column="69">*</op:operator><op:operator pos:line="1620" pos:column="70">)</op:operator><op:operator pos:line="1620" pos:column="71">&amp;</op:operator><name pos:line="1620" pos:column="72">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1621" pos:column="17">if <condition pos:line="1621" pos:column="20">(<expr><name pos:line="1621" pos:column="21">str</name></expr>)</condition><then pos:line="1621" pos:column="25">
		<block pos:line="1622" pos:column="17">{
			<expr_stmt><expr><name pos:line="1623" pos:column="25">(<type:modifier pos:line="1623" pos:column="26">*</type:modifier><name pos:line="1623" pos:column="27">ptrSession</name>)<op:operator pos:line="1623" pos:column="38">.</op:operator><name pos:line="1623" pos:column="39">_activeMainIndex</name></name> <op:operator pos:line="1623" pos:column="56">=</op:operator> <name pos:line="1623" pos:column="58">index</name></expr>;</expr_stmt>
		}</block></then></if>
		<for pos:line="1625" pos:column="17">for (<init><decl><type><name pos:line="1625" pos:column="22">TiXmlNode</name> <type:modifier pos:line="1625" pos:column="32">*</type:modifier></type><name pos:line="1625" pos:column="33">childNode</name> <init pos:line="1625" pos:column="43">= <expr><call><name><name pos:line="1625" pos:column="45">mainviewRoot</name><op:operator pos:line="1625" pos:column="57">-&gt;</op:operator><name pos:line="1625" pos:column="59">FirstChildElement</name></name><argument_list pos:line="1625" pos:column="76">(<argument><expr><call><name pos:line="1625" pos:column="77">TEXT</name><argument_list pos:line="1625" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="1625" pos:column="82">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
			<condition><expr><name pos:line="1626" pos:column="25">childNode</name></expr> ;</condition>
			<incr><expr><name pos:line="1627" pos:column="25">childNode</name> <op:operator pos:line="1627" pos:column="35">=</op:operator> <call><name><name pos:line="1627" pos:column="37">childNode</name><op:operator pos:line="1627" pos:column="46">-&gt;</op:operator><name pos:line="1627" pos:column="48">NextSibling</name></name><argument_list pos:line="1627" pos:column="59">(<argument><expr><call><name pos:line="1627" pos:column="60">TEXT</name><argument_list pos:line="1627" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1627" pos:column="65">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
		<block pos:line="1628" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="1629" pos:column="25">const</specifier> <name pos:line="1629" pos:column="31">TCHAR</name> <type:modifier pos:line="1629" pos:column="37">*</type:modifier></type><name pos:line="1629" pos:column="38">fileName</name> <init pos:line="1629" pos:column="47">= <expr><op:operator pos:line="1629" pos:column="49">(</op:operator><call><name><name pos:line="1629" pos:column="50">childNode</name><op:operator pos:line="1629" pos:column="59">-&gt;</op:operator><name pos:line="1629" pos:column="61">ToElement</name></name><argument_list pos:line="1629" pos:column="70">()</argument_list></call><op:operator pos:line="1629" pos:column="72">)</op:operator><op:operator pos:line="1629" pos:column="73">-&gt;</op:operator><call><name pos:line="1629" pos:column="75">Attribute</name><argument_list pos:line="1629" pos:column="84">(<argument><expr><call><name pos:line="1629" pos:column="85">TEXT</name><argument_list pos:line="1629" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="1629" pos:column="90">"filename"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1630" pos:column="25">if <condition pos:line="1630" pos:column="28">(<expr><name pos:line="1630" pos:column="29">fileName</name></expr>)</condition><then pos:line="1630" pos:column="38">
			<block pos:line="1631" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1632" pos:column="33">Position</name></type> <name pos:line="1632" pos:column="42">position</name></decl>;</decl_stmt>
				<expr_stmt><expr><op:operator pos:line="1633" pos:column="33">(</op:operator><call><name><name pos:line="1633" pos:column="34">childNode</name><op:operator pos:line="1633" pos:column="43">-&gt;</op:operator><name pos:line="1633" pos:column="45">ToElement</name></name><argument_list pos:line="1633" pos:column="54">()</argument_list></call><op:operator pos:line="1633" pos:column="56">)</op:operator><op:operator pos:line="1633" pos:column="57">-&gt;</op:operator><call><name pos:line="1633" pos:column="59">Attribute</name><argument_list pos:line="1633" pos:column="68">(<argument><expr><call><name pos:line="1633" pos:column="69">TEXT</name><argument_list pos:line="1633" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1633" pos:column="74">"firstVisibleLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1633" pos:column="95">&amp;</op:operator><name><name pos:line="1633" pos:column="96">position</name><op:operator pos:line="1633" pos:column="104">.</op:operator><name pos:line="1633" pos:column="105">_firstVisibleLine</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1634" pos:column="33">(</op:operator><call><name><name pos:line="1634" pos:column="34">childNode</name><op:operator pos:line="1634" pos:column="43">-&gt;</op:operator><name pos:line="1634" pos:column="45">ToElement</name></name><argument_list pos:line="1634" pos:column="54">()</argument_list></call><op:operator pos:line="1634" pos:column="56">)</op:operator><op:operator pos:line="1634" pos:column="57">-&gt;</op:operator><call><name pos:line="1634" pos:column="59">Attribute</name><argument_list pos:line="1634" pos:column="68">(<argument><expr><call><name pos:line="1634" pos:column="69">TEXT</name><argument_list pos:line="1634" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1634" pos:column="74">"xOffset"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1634" pos:column="86">&amp;</op:operator><name><name pos:line="1634" pos:column="87">position</name><op:operator pos:line="1634" pos:column="95">.</op:operator><name pos:line="1634" pos:column="96">_xOffset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1635" pos:column="33">(</op:operator><call><name><name pos:line="1635" pos:column="34">childNode</name><op:operator pos:line="1635" pos:column="43">-&gt;</op:operator><name pos:line="1635" pos:column="45">ToElement</name></name><argument_list pos:line="1635" pos:column="54">()</argument_list></call><op:operator pos:line="1635" pos:column="56">)</op:operator><op:operator pos:line="1635" pos:column="57">-&gt;</op:operator><call><name pos:line="1635" pos:column="59">Attribute</name><argument_list pos:line="1635" pos:column="68">(<argument><expr><call><name pos:line="1635" pos:column="69">TEXT</name><argument_list pos:line="1635" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1635" pos:column="74">"startPos"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1635" pos:column="87">&amp;</op:operator><name><name pos:line="1635" pos:column="88">position</name><op:operator pos:line="1635" pos:column="96">.</op:operator><name pos:line="1635" pos:column="97">_startPos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1636" pos:column="33">(</op:operator><call><name><name pos:line="1636" pos:column="34">childNode</name><op:operator pos:line="1636" pos:column="43">-&gt;</op:operator><name pos:line="1636" pos:column="45">ToElement</name></name><argument_list pos:line="1636" pos:column="54">()</argument_list></call><op:operator pos:line="1636" pos:column="56">)</op:operator><op:operator pos:line="1636" pos:column="57">-&gt;</op:operator><call><name pos:line="1636" pos:column="59">Attribute</name><argument_list pos:line="1636" pos:column="68">(<argument><expr><call><name pos:line="1636" pos:column="69">TEXT</name><argument_list pos:line="1636" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1636" pos:column="74">"endPos"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1636" pos:column="85">&amp;</op:operator><name><name pos:line="1636" pos:column="86">position</name><op:operator pos:line="1636" pos:column="94">.</op:operator><name pos:line="1636" pos:column="95">_endPos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1637" pos:column="33">(</op:operator><call><name><name pos:line="1637" pos:column="34">childNode</name><op:operator pos:line="1637" pos:column="43">-&gt;</op:operator><name pos:line="1637" pos:column="45">ToElement</name></name><argument_list pos:line="1637" pos:column="54">()</argument_list></call><op:operator pos:line="1637" pos:column="56">)</op:operator><op:operator pos:line="1637" pos:column="57">-&gt;</op:operator><call><name pos:line="1637" pos:column="59">Attribute</name><argument_list pos:line="1637" pos:column="68">(<argument><expr><call><name pos:line="1637" pos:column="69">TEXT</name><argument_list pos:line="1637" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1637" pos:column="74">"selMode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1637" pos:column="86">&amp;</op:operator><name><name pos:line="1637" pos:column="87">position</name><op:operator pos:line="1637" pos:column="95">.</op:operator><name pos:line="1637" pos:column="96">_selMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1638" pos:column="33">(</op:operator><call><name><name pos:line="1638" pos:column="34">childNode</name><op:operator pos:line="1638" pos:column="43">-&gt;</op:operator><name pos:line="1638" pos:column="45">ToElement</name></name><argument_list pos:line="1638" pos:column="54">()</argument_list></call><op:operator pos:line="1638" pos:column="56">)</op:operator><op:operator pos:line="1638" pos:column="57">-&gt;</op:operator><call><name pos:line="1638" pos:column="59">Attribute</name><argument_list pos:line="1638" pos:column="68">(<argument><expr><call><name pos:line="1638" pos:column="69">TEXT</name><argument_list pos:line="1638" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1638" pos:column="74">"scrollWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1638" pos:column="90">&amp;</op:operator><name><name pos:line="1638" pos:column="91">position</name><op:operator pos:line="1638" pos:column="99">.</op:operator><name pos:line="1638" pos:column="100">_scrollWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><specifier pos:line="1640" pos:column="33">const</specifier> <name pos:line="1640" pos:column="39">TCHAR</name> <type:modifier pos:line="1640" pos:column="45">*</type:modifier></type><name pos:line="1640" pos:column="46">langName</name></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="1641" pos:column="33">langName</name> <op:operator pos:line="1641" pos:column="42">=</op:operator> <op:operator pos:line="1641" pos:column="44">(</op:operator><call><name><name pos:line="1641" pos:column="45">childNode</name><op:operator pos:line="1641" pos:column="54">-&gt;</op:operator><name pos:line="1641" pos:column="56">ToElement</name></name><argument_list pos:line="1641" pos:column="65">()</argument_list></call><op:operator pos:line="1641" pos:column="67">)</op:operator><op:operator pos:line="1641" pos:column="68">-&gt;</op:operator><call><name pos:line="1641" pos:column="70">Attribute</name><argument_list pos:line="1641" pos:column="79">(<argument><expr><call><name pos:line="1641" pos:column="80">TEXT</name><argument_list pos:line="1641" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="1641" pos:column="85">"lang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1642" pos:column="33">int</name></type> <name pos:line="1642" pos:column="37">encoding</name> <init pos:line="1642" pos:column="46">= <expr><op:operator pos:line="1642" pos:column="48">-</op:operator><lit:literal type="number" pos:line="1642" pos:column="49">1</lit:literal></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="1643" pos:column="33">const</specifier> <name pos:line="1643" pos:column="39">TCHAR</name> <type:modifier pos:line="1643" pos:column="45">*</type:modifier></type><name pos:line="1643" pos:column="46">encStr</name> <init pos:line="1643" pos:column="53">= <expr><op:operator pos:line="1643" pos:column="55">(</op:operator><call><name><name pos:line="1643" pos:column="56">childNode</name><op:operator pos:line="1643" pos:column="65">-&gt;</op:operator><name pos:line="1643" pos:column="67">ToElement</name></name><argument_list pos:line="1643" pos:column="76">()</argument_list></call><op:operator pos:line="1643" pos:column="78">)</op:operator><op:operator pos:line="1643" pos:column="79">-&gt;</op:operator><call><name pos:line="1643" pos:column="81">Attribute</name><argument_list pos:line="1643" pos:column="90">(<argument><expr><call><name pos:line="1643" pos:column="91">TEXT</name><argument_list pos:line="1643" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="1643" pos:column="96">"encoding"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1643" pos:column="109">&amp;</op:operator><name pos:line="1643" pos:column="110">encoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1644" pos:column="33">sessionFileInfo</name></type> <name pos:line="1644" pos:column="49">sfi</name><argument_list pos:line="1644" pos:column="52">(<argument><expr><name pos:line="1644" pos:column="53">fileName</name></expr></argument>, <argument><expr><name pos:line="1644" pos:column="63">langName</name></expr></argument>, <argument><expr><name pos:line="1644" pos:column="73">encStr</name><op:operator pos:line="1644" pos:column="79">?</op:operator><name pos:line="1644" pos:column="80">encoding</name><op:operator pos:line="1644" pos:column="88">:</op:operator><op:operator pos:line="1644" pos:column="89">-</op:operator><lit:literal type="number" pos:line="1644" pos:column="90">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1644" pos:column="93">position</name></expr></argument>)</argument_list></decl>;</decl_stmt>

				<for pos:line="1646" pos:column="33">for (<init><decl><type><name pos:line="1646" pos:column="38">TiXmlNode</name> <type:modifier pos:line="1646" pos:column="48">*</type:modifier></type><name pos:line="1646" pos:column="49">markNode</name> <init pos:line="1646" pos:column="58">= <expr><call><name><name pos:line="1646" pos:column="60">childNode</name><op:operator pos:line="1646" pos:column="69">-&gt;</op:operator><name pos:line="1646" pos:column="71">FirstChildElement</name></name><argument_list pos:line="1646" pos:column="88">(<argument><expr><call><name pos:line="1646" pos:column="89">TEXT</name><argument_list pos:line="1646" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="1646" pos:column="94">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
					<condition><expr><name pos:line="1647" pos:column="41">markNode</name></expr> ;</condition>
					<incr><expr><name pos:line="1648" pos:column="41">markNode</name> <op:operator pos:line="1648" pos:column="50">=</op:operator> <call><name><name pos:line="1648" pos:column="52">markNode</name><op:operator pos:line="1648" pos:column="60">-&gt;</op:operator><name pos:line="1648" pos:column="62">NextSibling</name></name><argument_list pos:line="1648" pos:column="73">(<argument><expr><call><name pos:line="1648" pos:column="74">TEXT</name><argument_list pos:line="1648" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="1648" pos:column="79">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
				<block pos:line="1649" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1650" pos:column="41">int</name></type> <name pos:line="1650" pos:column="45">lineNumber</name></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="1651" pos:column="41">const</specifier> <name pos:line="1651" pos:column="47">TCHAR</name> <type:modifier pos:line="1651" pos:column="53">*</type:modifier></type><name pos:line="1651" pos:column="54">lineNumberStr</name> <init pos:line="1651" pos:column="68">= <expr><op:operator pos:line="1651" pos:column="70">(</op:operator><call><name><name pos:line="1651" pos:column="71">markNode</name><op:operator pos:line="1651" pos:column="79">-&gt;</op:operator><name pos:line="1651" pos:column="81">ToElement</name></name><argument_list pos:line="1651" pos:column="90">()</argument_list></call><op:operator pos:line="1651" pos:column="92">)</op:operator><op:operator pos:line="1651" pos:column="93">-&gt;</op:operator><call><name pos:line="1651" pos:column="95">Attribute</name><argument_list pos:line="1651" pos:column="104">(<argument><expr><call><name pos:line="1651" pos:column="105">TEXT</name><argument_list pos:line="1651" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="1651" pos:column="110">"line"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1651" pos:column="119">&amp;</op:operator><name pos:line="1651" pos:column="120">lineNumber</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="1652" pos:column="41">if <condition pos:line="1652" pos:column="44">(<expr><name pos:line="1652" pos:column="45">lineNumberStr</name></expr>)</condition><then pos:line="1652" pos:column="59">
					<block pos:line="1653" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="1654" pos:column="49">sfi</name><op:operator pos:line="1654" pos:column="52">.</op:operator><name pos:line="1654" pos:column="53">marks</name><op:operator pos:line="1654" pos:column="58">.</op:operator><name pos:line="1654" pos:column="59">push_back</name></name><argument_list pos:line="1654" pos:column="68">(<argument><expr><name pos:line="1654" pos:column="69">lineNumber</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
				<expr_stmt><expr><call><name pos:line="1657" pos:column="33">(<type:modifier pos:line="1657" pos:column="34">*</type:modifier><name pos:line="1657" pos:column="35">ptrSession</name>)<op:operator pos:line="1657" pos:column="46">.</op:operator><name><name pos:line="1657" pos:column="47">_mainViewFiles</name><op:operator pos:line="1657" pos:column="61">.</op:operator><name pos:line="1657" pos:column="62">push_back</name></name></name><argument_list pos:line="1657" pos:column="71">(<argument><expr><name pos:line="1657" pos:column="72">sfi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></then></if>
	
	<decl_stmt><decl><type><name pos:line="1662" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1662" pos:column="19">*</type:modifier></type><name pos:line="1662" pos:column="20">subviewRoot</name> <init pos:line="1662" pos:column="32">= <expr><call><name><name pos:line="1662" pos:column="34">sessionRoot</name><op:operator pos:line="1662" pos:column="45">-&gt;</op:operator><name pos:line="1662" pos:column="47">FirstChildElement</name></name><argument_list pos:line="1662" pos:column="64">(<argument><expr><call><name pos:line="1662" pos:column="65">TEXT</name><argument_list pos:line="1662" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="1662" pos:column="70">"subView"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1663" pos:column="9">if <condition pos:line="1663" pos:column="12">(<expr><name pos:line="1663" pos:column="13">subviewRoot</name></expr>)</condition><then pos:line="1663" pos:column="25">
	<block pos:line="1664" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1665" pos:column="17">TiXmlElement</name> <type:modifier pos:line="1665" pos:column="30">*</type:modifier></type><name pos:line="1665" pos:column="31">actIndex</name> <init pos:line="1665" pos:column="40">= <expr><call><name><name pos:line="1665" pos:column="42">subviewRoot</name><op:operator pos:line="1665" pos:column="53">-&gt;</op:operator><name pos:line="1665" pos:column="55">ToElement</name></name><argument_list pos:line="1665" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1666" pos:column="17">str</name> <op:operator pos:line="1666" pos:column="21">=</op:operator> <call><name><name pos:line="1666" pos:column="23">actIndex</name><op:operator pos:line="1666" pos:column="31">-&gt;</op:operator><name pos:line="1666" pos:column="33">Attribute</name></name><argument_list pos:line="1666" pos:column="42">(<argument><expr><call><name pos:line="1666" pos:column="43">TEXT</name><argument_list pos:line="1666" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="1666" pos:column="48">"activeIndex"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1666" pos:column="64">(</op:operator><name pos:line="1666" pos:column="65">int</name> <op:operator pos:line="1666" pos:column="69">*</op:operator><op:operator pos:line="1666" pos:column="70">)</op:operator><op:operator pos:line="1666" pos:column="71">&amp;</op:operator><name pos:line="1666" pos:column="72">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1667" pos:column="17">if <condition pos:line="1667" pos:column="20">(<expr><name pos:line="1667" pos:column="21">str</name></expr>)</condition><then pos:line="1667" pos:column="25">
		<block pos:line="1668" pos:column="17">{
			<expr_stmt><expr><name pos:line="1669" pos:column="25">(<type:modifier pos:line="1669" pos:column="26">*</type:modifier><name pos:line="1669" pos:column="27">ptrSession</name>)<op:operator pos:line="1669" pos:column="38">.</op:operator><name pos:line="1669" pos:column="39">_activeSubIndex</name></name> <op:operator pos:line="1669" pos:column="55">=</op:operator> <name pos:line="1669" pos:column="57">index</name></expr>;</expr_stmt>
		}</block></then></if>
		<for pos:line="1671" pos:column="17">for (<init><decl><type><name pos:line="1671" pos:column="22">TiXmlNode</name> <type:modifier pos:line="1671" pos:column="32">*</type:modifier></type><name pos:line="1671" pos:column="33">childNode</name> <init pos:line="1671" pos:column="43">= <expr><call><name><name pos:line="1671" pos:column="45">subviewRoot</name><op:operator pos:line="1671" pos:column="56">-&gt;</op:operator><name pos:line="1671" pos:column="58">FirstChildElement</name></name><argument_list pos:line="1671" pos:column="75">(<argument><expr><call><name pos:line="1671" pos:column="76">TEXT</name><argument_list pos:line="1671" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="1671" pos:column="81">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
			<condition><expr><name pos:line="1672" pos:column="25">childNode</name></expr> ;</condition>
			<incr><expr><name pos:line="1673" pos:column="25">childNode</name> <op:operator pos:line="1673" pos:column="35">=</op:operator> <call><name><name pos:line="1673" pos:column="37">childNode</name><op:operator pos:line="1673" pos:column="46">-&gt;</op:operator><name pos:line="1673" pos:column="48">NextSibling</name></name><argument_list pos:line="1673" pos:column="59">(<argument><expr><call><name pos:line="1673" pos:column="60">TEXT</name><argument_list pos:line="1673" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1673" pos:column="65">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
		<block pos:line="1674" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="1675" pos:column="25">const</specifier> <name pos:line="1675" pos:column="31">TCHAR</name> <type:modifier pos:line="1675" pos:column="37">*</type:modifier></type><name pos:line="1675" pos:column="38">fileName</name> <init pos:line="1675" pos:column="47">= <expr><op:operator pos:line="1675" pos:column="49">(</op:operator><call><name><name pos:line="1675" pos:column="50">childNode</name><op:operator pos:line="1675" pos:column="59">-&gt;</op:operator><name pos:line="1675" pos:column="61">ToElement</name></name><argument_list pos:line="1675" pos:column="70">()</argument_list></call><op:operator pos:line="1675" pos:column="72">)</op:operator><op:operator pos:line="1675" pos:column="73">-&gt;</op:operator><call><name pos:line="1675" pos:column="75">Attribute</name><argument_list pos:line="1675" pos:column="84">(<argument><expr><call><name pos:line="1675" pos:column="85">TEXT</name><argument_list pos:line="1675" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="1675" pos:column="90">"filename"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1676" pos:column="25">if <condition pos:line="1676" pos:column="28">(<expr><name pos:line="1676" pos:column="29">fileName</name></expr>)</condition><then pos:line="1676" pos:column="38">
			<block pos:line="1677" pos:column="25">{

				<decl_stmt><decl><type><name pos:line="1679" pos:column="33">Position</name></type> <name pos:line="1679" pos:column="42">position</name></decl>;</decl_stmt>
				<expr_stmt><expr><op:operator pos:line="1680" pos:column="33">(</op:operator><call><name><name pos:line="1680" pos:column="34">childNode</name><op:operator pos:line="1680" pos:column="43">-&gt;</op:operator><name pos:line="1680" pos:column="45">ToElement</name></name><argument_list pos:line="1680" pos:column="54">()</argument_list></call><op:operator pos:line="1680" pos:column="56">)</op:operator><op:operator pos:line="1680" pos:column="57">-&gt;</op:operator><call><name pos:line="1680" pos:column="59">Attribute</name><argument_list pos:line="1680" pos:column="68">(<argument><expr><call><name pos:line="1680" pos:column="69">TEXT</name><argument_list pos:line="1680" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1680" pos:column="74">"firstVisibleLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1680" pos:column="95">&amp;</op:operator><name><name pos:line="1680" pos:column="96">position</name><op:operator pos:line="1680" pos:column="104">.</op:operator><name pos:line="1680" pos:column="105">_firstVisibleLine</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1681" pos:column="33">(</op:operator><call><name><name pos:line="1681" pos:column="34">childNode</name><op:operator pos:line="1681" pos:column="43">-&gt;</op:operator><name pos:line="1681" pos:column="45">ToElement</name></name><argument_list pos:line="1681" pos:column="54">()</argument_list></call><op:operator pos:line="1681" pos:column="56">)</op:operator><op:operator pos:line="1681" pos:column="57">-&gt;</op:operator><call><name pos:line="1681" pos:column="59">Attribute</name><argument_list pos:line="1681" pos:column="68">(<argument><expr><call><name pos:line="1681" pos:column="69">TEXT</name><argument_list pos:line="1681" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1681" pos:column="74">"xOffset"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1681" pos:column="86">&amp;</op:operator><name><name pos:line="1681" pos:column="87">position</name><op:operator pos:line="1681" pos:column="95">.</op:operator><name pos:line="1681" pos:column="96">_xOffset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1682" pos:column="33">(</op:operator><call><name><name pos:line="1682" pos:column="34">childNode</name><op:operator pos:line="1682" pos:column="43">-&gt;</op:operator><name pos:line="1682" pos:column="45">ToElement</name></name><argument_list pos:line="1682" pos:column="54">()</argument_list></call><op:operator pos:line="1682" pos:column="56">)</op:operator><op:operator pos:line="1682" pos:column="57">-&gt;</op:operator><call><name pos:line="1682" pos:column="59">Attribute</name><argument_list pos:line="1682" pos:column="68">(<argument><expr><call><name pos:line="1682" pos:column="69">TEXT</name><argument_list pos:line="1682" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1682" pos:column="74">"startPos"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1682" pos:column="87">&amp;</op:operator><name><name pos:line="1682" pos:column="88">position</name><op:operator pos:line="1682" pos:column="96">.</op:operator><name pos:line="1682" pos:column="97">_startPos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1683" pos:column="33">(</op:operator><call><name><name pos:line="1683" pos:column="34">childNode</name><op:operator pos:line="1683" pos:column="43">-&gt;</op:operator><name pos:line="1683" pos:column="45">ToElement</name></name><argument_list pos:line="1683" pos:column="54">()</argument_list></call><op:operator pos:line="1683" pos:column="56">)</op:operator><op:operator pos:line="1683" pos:column="57">-&gt;</op:operator><call><name pos:line="1683" pos:column="59">Attribute</name><argument_list pos:line="1683" pos:column="68">(<argument><expr><call><name pos:line="1683" pos:column="69">TEXT</name><argument_list pos:line="1683" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1683" pos:column="74">"endPos"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1683" pos:column="85">&amp;</op:operator><name><name pos:line="1683" pos:column="86">position</name><op:operator pos:line="1683" pos:column="94">.</op:operator><name pos:line="1683" pos:column="95">_endPos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1684" pos:column="33">(</op:operator><call><name><name pos:line="1684" pos:column="34">childNode</name><op:operator pos:line="1684" pos:column="43">-&gt;</op:operator><name pos:line="1684" pos:column="45">ToElement</name></name><argument_list pos:line="1684" pos:column="54">()</argument_list></call><op:operator pos:line="1684" pos:column="56">)</op:operator><op:operator pos:line="1684" pos:column="57">-&gt;</op:operator><call><name pos:line="1684" pos:column="59">Attribute</name><argument_list pos:line="1684" pos:column="68">(<argument><expr><call><name pos:line="1684" pos:column="69">TEXT</name><argument_list pos:line="1684" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1684" pos:column="74">"selMode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1684" pos:column="86">&amp;</op:operator><name><name pos:line="1684" pos:column="87">position</name><op:operator pos:line="1684" pos:column="95">.</op:operator><name pos:line="1684" pos:column="96">_selMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1685" pos:column="33">(</op:operator><call><name><name pos:line="1685" pos:column="34">childNode</name><op:operator pos:line="1685" pos:column="43">-&gt;</op:operator><name pos:line="1685" pos:column="45">ToElement</name></name><argument_list pos:line="1685" pos:column="54">()</argument_list></call><op:operator pos:line="1685" pos:column="56">)</op:operator><op:operator pos:line="1685" pos:column="57">-&gt;</op:operator><call><name pos:line="1685" pos:column="59">Attribute</name><argument_list pos:line="1685" pos:column="68">(<argument><expr><call><name pos:line="1685" pos:column="69">TEXT</name><argument_list pos:line="1685" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1685" pos:column="74">"scrollWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1685" pos:column="90">&amp;</op:operator><name><name pos:line="1685" pos:column="91">position</name><op:operator pos:line="1685" pos:column="99">.</op:operator><name pos:line="1685" pos:column="100">_scrollWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><specifier pos:line="1687" pos:column="33">const</specifier> <name pos:line="1687" pos:column="39">TCHAR</name> <type:modifier pos:line="1687" pos:column="45">*</type:modifier></type><name pos:line="1687" pos:column="46">langName</name></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="1688" pos:column="33">langName</name> <op:operator pos:line="1688" pos:column="42">=</op:operator> <op:operator pos:line="1688" pos:column="44">(</op:operator><call><name><name pos:line="1688" pos:column="45">childNode</name><op:operator pos:line="1688" pos:column="54">-&gt;</op:operator><name pos:line="1688" pos:column="56">ToElement</name></name><argument_list pos:line="1688" pos:column="65">()</argument_list></call><op:operator pos:line="1688" pos:column="67">)</op:operator><op:operator pos:line="1688" pos:column="68">-&gt;</op:operator><call><name pos:line="1688" pos:column="70">Attribute</name><argument_list pos:line="1688" pos:column="79">(<argument><expr><call><name pos:line="1688" pos:column="80">TEXT</name><argument_list pos:line="1688" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="1688" pos:column="85">"lang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1689" pos:column="33">int</name></type> <name pos:line="1689" pos:column="37">encoding</name> <init pos:line="1689" pos:column="46">= <expr><op:operator pos:line="1689" pos:column="48">-</op:operator><lit:literal type="number" pos:line="1689" pos:column="49">1</lit:literal></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><op:operator pos:line="1690" pos:column="33">(</op:operator><call><name><name pos:line="1690" pos:column="34">childNode</name><op:operator pos:line="1690" pos:column="43">-&gt;</op:operator><name pos:line="1690" pos:column="45">ToElement</name></name><argument_list pos:line="1690" pos:column="54">()</argument_list></call><op:operator pos:line="1690" pos:column="56">)</op:operator><op:operator pos:line="1690" pos:column="57">-&gt;</op:operator><call><name pos:line="1690" pos:column="59">Attribute</name><argument_list pos:line="1690" pos:column="68">(<argument><expr><call><name pos:line="1690" pos:column="69">TEXT</name><argument_list pos:line="1690" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1690" pos:column="74">"encoding"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1690" pos:column="87">&amp;</op:operator><name pos:line="1690" pos:column="88">encoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<function_decl><type><name pos:line="1692" pos:column="33">sessionFileInfo</name></type> <name pos:line="1692" pos:column="49">sfi</name><parameter_list pos:line="1692" pos:column="52">(<param><decl><type><name pos:line="1692" pos:column="53">fileName</name></type></decl></param>, <param><decl><type><name pos:line="1692" pos:column="63">langName</name></type></decl></param>, <param><decl><type><name pos:line="1692" pos:column="73">encoding</name></type></decl></param>, <param><decl><type><name pos:line="1692" pos:column="83">position</name></type></decl></param>)</parameter_list>;</function_decl>

				<for pos:line="1694" pos:column="33">for (<init><decl><type><name pos:line="1694" pos:column="38">TiXmlNode</name> <type:modifier pos:line="1694" pos:column="48">*</type:modifier></type><name pos:line="1694" pos:column="49">markNode</name> <init pos:line="1694" pos:column="58">= <expr><call><name><name pos:line="1694" pos:column="60">childNode</name><op:operator pos:line="1694" pos:column="69">-&gt;</op:operator><name pos:line="1694" pos:column="71">FirstChildElement</name></name><argument_list pos:line="1694" pos:column="88">(<argument><expr><call><name pos:line="1694" pos:column="89">TEXT</name><argument_list pos:line="1694" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="1694" pos:column="94">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
					<condition><expr><name pos:line="1695" pos:column="41">markNode</name></expr> ;</condition>
					<incr><expr><name pos:line="1696" pos:column="41">markNode</name> <op:operator pos:line="1696" pos:column="50">=</op:operator> <call><name><name pos:line="1696" pos:column="52">markNode</name><op:operator pos:line="1696" pos:column="60">-&gt;</op:operator><name pos:line="1696" pos:column="62">NextSibling</name></name><argument_list pos:line="1696" pos:column="73">(<argument><expr><call><name pos:line="1696" pos:column="74">TEXT</name><argument_list pos:line="1696" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="1696" pos:column="79">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
				<block pos:line="1697" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1698" pos:column="41">int</name></type> <name pos:line="1698" pos:column="45">lineNumber</name></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="1699" pos:column="41">const</specifier> <name pos:line="1699" pos:column="47">TCHAR</name> <type:modifier pos:line="1699" pos:column="53">*</type:modifier></type><name pos:line="1699" pos:column="54">lineNumberStr</name> <init pos:line="1699" pos:column="68">= <expr><op:operator pos:line="1699" pos:column="70">(</op:operator><call><name><name pos:line="1699" pos:column="71">markNode</name><op:operator pos:line="1699" pos:column="79">-&gt;</op:operator><name pos:line="1699" pos:column="81">ToElement</name></name><argument_list pos:line="1699" pos:column="90">()</argument_list></call><op:operator pos:line="1699" pos:column="92">)</op:operator><op:operator pos:line="1699" pos:column="93">-&gt;</op:operator><call><name pos:line="1699" pos:column="95">Attribute</name><argument_list pos:line="1699" pos:column="104">(<argument><expr><call><name pos:line="1699" pos:column="105">TEXT</name><argument_list pos:line="1699" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="1699" pos:column="110">"line"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1699" pos:column="119">&amp;</op:operator><name pos:line="1699" pos:column="120">lineNumber</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="1700" pos:column="41">if <condition pos:line="1700" pos:column="44">(<expr><name pos:line="1700" pos:column="45">lineNumberStr</name></expr>)</condition><then pos:line="1700" pos:column="59">
					<block pos:line="1701" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="1702" pos:column="49">sfi</name><op:operator pos:line="1702" pos:column="52">.</op:operator><name pos:line="1702" pos:column="53">marks</name><op:operator pos:line="1702" pos:column="58">.</op:operator><name pos:line="1702" pos:column="59">push_back</name></name><argument_list pos:line="1702" pos:column="68">(<argument><expr><name pos:line="1702" pos:column="69">lineNumber</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
				<expr_stmt><expr><call><name pos:line="1705" pos:column="33">(<type:modifier pos:line="1705" pos:column="34">*</type:modifier><name pos:line="1705" pos:column="35">ptrSession</name>)<op:operator pos:line="1705" pos:column="46">.</op:operator><name><name pos:line="1705" pos:column="47">_subViewFiles</name><op:operator pos:line="1705" pos:column="60">.</op:operator><name pos:line="1705" pos:column="61">push_back</name></name></name><argument_list pos:line="1705" pos:column="70">(<argument><expr><name pos:line="1705" pos:column="71">sfi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></then></if>

	
	<return pos:line="1711" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1711" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1714" pos:column="1">void</name></type> <name><name pos:line="1714" pos:column="6">NppParameters</name><op:operator pos:line="1714" pos:column="19">::</op:operator><name pos:line="1714" pos:column="21">feedFileListParameters</name></name><parameter_list pos:line="1714" pos:column="43">(<param><decl><type><name pos:line="1714" pos:column="44">TiXmlNode</name> <type:modifier pos:line="1714" pos:column="54">*</type:modifier></type><name pos:line="1714" pos:column="55">node</name></decl></param>)</parameter_list>
<block pos:line="1715" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1716" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1716" pos:column="19">*</type:modifier></type><name pos:line="1716" pos:column="20">historyRoot</name> <init pos:line="1716" pos:column="32">= <expr><call><name><name pos:line="1716" pos:column="34">node</name><op:operator pos:line="1716" pos:column="38">-&gt;</op:operator><name pos:line="1716" pos:column="40">FirstChildElement</name></name><argument_list pos:line="1716" pos:column="57">(<argument><expr><call><name pos:line="1716" pos:column="58">TEXT</name><argument_list pos:line="1716" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="1716" pos:column="63">"History"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1717" pos:column="9">if <condition pos:line="1717" pos:column="12">(<expr><op:operator pos:line="1717" pos:column="13">!</op:operator><name pos:line="1717" pos:column="14">historyRoot</name></expr>)</condition><then pos:line="1717" pos:column="26"> <return pos:line="1717" pos:column="27">return;</return></then></if>

	<comment type="line" pos:line="1719" pos:column="9">// nbMaxFile value</comment>
	<decl_stmt><decl><type><name pos:line="1720" pos:column="9">int</name></type> <name pos:line="1720" pos:column="13">nbMaxFile</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1721" pos:column="9">const</specifier> <name pos:line="1721" pos:column="15">TCHAR</name> <type:modifier pos:line="1721" pos:column="21">*</type:modifier></type><name pos:line="1721" pos:column="22">strVal</name> <init pos:line="1721" pos:column="29">= <expr><op:operator pos:line="1721" pos:column="31">(</op:operator><call><name><name pos:line="1721" pos:column="32">historyRoot</name><op:operator pos:line="1721" pos:column="43">-&gt;</op:operator><name pos:line="1721" pos:column="45">ToElement</name></name><argument_list pos:line="1721" pos:column="54">()</argument_list></call><op:operator pos:line="1721" pos:column="56">)</op:operator><op:operator pos:line="1721" pos:column="57">-&gt;</op:operator><call><name pos:line="1721" pos:column="59">Attribute</name><argument_list pos:line="1721" pos:column="68">(<argument><expr><call><name pos:line="1721" pos:column="69">TEXT</name><argument_list pos:line="1721" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1721" pos:column="74">"nbMaxFile"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1721" pos:column="88">&amp;</op:operator><name pos:line="1721" pos:column="89">nbMaxFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1722" pos:column="9">if <condition pos:line="1722" pos:column="12">(<expr><name pos:line="1722" pos:column="13">strVal</name> <op:operator pos:line="1722" pos:column="20">&amp;&amp;</op:operator> <op:operator pos:line="1722" pos:column="23">(</op:operator><name pos:line="1722" pos:column="24">nbMaxFile</name> <op:operator pos:line="1722" pos:column="34">&gt;=</op:operator> <lit:literal type="number" pos:line="1722" pos:column="37">0</lit:literal><op:operator pos:line="1722" pos:column="38">)</op:operator> <op:operator pos:line="1722" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="1722" pos:column="43">(</op:operator><name pos:line="1722" pos:column="44">nbMaxFile</name> <op:operator pos:line="1722" pos:column="54">&lt;=</op:operator> <lit:literal type="number" pos:line="1722" pos:column="57">50</lit:literal><op:operator pos:line="1722" pos:column="59">)</op:operator></expr>)</condition><then pos:line="1722" pos:column="61">
		<expr_stmt><expr><name pos:line="1723" pos:column="17">_nbMaxRecentFile</name> <op:operator pos:line="1723" pos:column="34">=</op:operator> <name pos:line="1723" pos:column="36">nbMaxFile</name></expr>;</expr_stmt></then></if>

	<comment type="line" pos:line="1725" pos:column="9">// customLen value</comment>
	<decl_stmt><decl><type><name pos:line="1726" pos:column="9">int</name></type> <name pos:line="1726" pos:column="13">customLen</name></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1727" pos:column="9">strVal</name> <op:operator pos:line="1727" pos:column="16">=</op:operator> <op:operator pos:line="1727" pos:column="18">(</op:operator><call><name><name pos:line="1727" pos:column="19">historyRoot</name><op:operator pos:line="1727" pos:column="30">-&gt;</op:operator><name pos:line="1727" pos:column="32">ToElement</name></name><argument_list pos:line="1727" pos:column="41">()</argument_list></call><op:operator pos:line="1727" pos:column="43">)</op:operator><op:operator pos:line="1727" pos:column="44">-&gt;</op:operator><call><name pos:line="1727" pos:column="46">Attribute</name><argument_list pos:line="1727" pos:column="55">(<argument><expr><call><name pos:line="1727" pos:column="56">TEXT</name><argument_list pos:line="1727" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1727" pos:column="61">"customLength"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1727" pos:column="78">&amp;</op:operator><name pos:line="1727" pos:column="79">customLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1728" pos:column="9">if <condition pos:line="1728" pos:column="12">(<expr><name pos:line="1728" pos:column="13">strVal</name></expr>)</condition><then pos:line="1728" pos:column="20">
		<expr_stmt><expr><name pos:line="1729" pos:column="17">_recentFileCustomLength</name> <op:operator pos:line="1729" pos:column="41">=</op:operator> <name pos:line="1729" pos:column="43">customLen</name></expr>;</expr_stmt></then></if>

	<comment type="line" pos:line="1731" pos:column="9">// inSubMenu value</comment>
	<expr_stmt><expr><name pos:line="1732" pos:column="9">strVal</name> <op:operator pos:line="1732" pos:column="16">=</op:operator> <op:operator pos:line="1732" pos:column="18">(</op:operator><call><name><name pos:line="1732" pos:column="19">historyRoot</name><op:operator pos:line="1732" pos:column="30">-&gt;</op:operator><name pos:line="1732" pos:column="32">ToElement</name></name><argument_list pos:line="1732" pos:column="41">()</argument_list></call><op:operator pos:line="1732" pos:column="43">)</op:operator><op:operator pos:line="1732" pos:column="44">-&gt;</op:operator><call><name pos:line="1732" pos:column="46">Attribute</name><argument_list pos:line="1732" pos:column="55">(<argument><expr><call><name pos:line="1732" pos:column="56">TEXT</name><argument_list pos:line="1732" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1732" pos:column="61">"inSubMenu"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1733" pos:column="9">if <condition pos:line="1733" pos:column="12">(<expr><call><name pos:line="1733" pos:column="13">lstrcmp</name><argument_list pos:line="1733" pos:column="20">(<argument><expr><name pos:line="1733" pos:column="21">strVal</name></expr></argument>, <argument><expr><call><name pos:line="1733" pos:column="29">TEXT</name><argument_list pos:line="1733" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="1733" pos:column="34">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1733" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="1733" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="1733" pos:column="47">
		<expr_stmt><expr><name pos:line="1734" pos:column="17">_putRecentFileInSubMenu</name> <op:operator pos:line="1734" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="1734" pos:column="43">true</lit:literal></expr>;</expr_stmt></then></if>

	<for pos:line="1736" pos:column="9">for (<init><decl><type><name pos:line="1736" pos:column="14">TiXmlNode</name> <type:modifier pos:line="1736" pos:column="24">*</type:modifier></type><name pos:line="1736" pos:column="25">childNode</name> <init pos:line="1736" pos:column="35">= <expr><call><name><name pos:line="1736" pos:column="37">historyRoot</name><op:operator pos:line="1736" pos:column="48">-&gt;</op:operator><name pos:line="1736" pos:column="50">FirstChildElement</name></name><argument_list pos:line="1736" pos:column="67">(<argument><expr><call><name pos:line="1736" pos:column="68">TEXT</name><argument_list pos:line="1736" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="1736" pos:column="73">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1737" pos:column="17">childNode</name> <op:operator pos:line="1737" pos:column="27">&amp;&amp;</op:operator> <op:operator pos:line="1737" pos:column="30">(</op:operator><name pos:line="1737" pos:column="31">_nbRecentFile</name> <op:operator pos:line="1737" pos:column="45">&lt;</op:operator> <name pos:line="1737" pos:column="47">NB_MAX_LRF_FILE</name><op:operator pos:line="1737" pos:column="62">)</op:operator></expr>;</condition>
		<incr><expr><name pos:line="1738" pos:column="17">childNode</name> <op:operator pos:line="1738" pos:column="27">=</op:operator> <call><name><name pos:line="1738" pos:column="29">childNode</name><op:operator pos:line="1738" pos:column="38">-&gt;</op:operator><name pos:line="1738" pos:column="40">NextSibling</name></name><argument_list pos:line="1738" pos:column="51">(<argument><expr><call><name pos:line="1738" pos:column="52">TEXT</name><argument_list pos:line="1738" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1738" pos:column="57">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1739" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="1740" pos:column="17">const</specifier> <name pos:line="1740" pos:column="23">TCHAR</name> <type:modifier pos:line="1740" pos:column="29">*</type:modifier></type><name pos:line="1740" pos:column="30">filePath</name> <init pos:line="1740" pos:column="39">= <expr><op:operator pos:line="1740" pos:column="41">(</op:operator><call><name><name pos:line="1740" pos:column="42">childNode</name><op:operator pos:line="1740" pos:column="51">-&gt;</op:operator><name pos:line="1740" pos:column="53">ToElement</name></name><argument_list pos:line="1740" pos:column="62">()</argument_list></call><op:operator pos:line="1740" pos:column="64">)</op:operator><op:operator pos:line="1740" pos:column="65">-&gt;</op:operator><call><name pos:line="1740" pos:column="67">Attribute</name><argument_list pos:line="1740" pos:column="76">(<argument><expr><call><name pos:line="1740" pos:column="77">TEXT</name><argument_list pos:line="1740" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="1740" pos:column="82">"filename"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1741" pos:column="17">if <condition pos:line="1741" pos:column="20">(<expr><name pos:line="1741" pos:column="21">filePath</name></expr>)</condition><then pos:line="1741" pos:column="30">
		<block pos:line="1742" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="1743" pos:column="25">_LRFileList</name><index pos:line="1743" pos:column="36">[<expr><name pos:line="1743" pos:column="37">_nbRecentFile</name></expr>]</index></name> <op:operator pos:line="1743" pos:column="52">=</op:operator> <op:operator pos:line="1743" pos:column="54">new</op:operator> <call><name pos:line="1743" pos:column="58">generic_string</name><argument_list pos:line="1743" pos:column="72">(<argument><expr><name pos:line="1743" pos:column="73">filePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1744" pos:column="25">_nbRecentFile</name><op:operator pos:line="1744" pos:column="38">++</op:operator></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="1749" pos:column="1">void</name></type> <name><name pos:line="1749" pos:column="6">NppParameters</name><op:operator pos:line="1749" pos:column="19">::</op:operator><name pos:line="1749" pos:column="21">feedProjectPanelsParameters</name></name><parameter_list pos:line="1749" pos:column="48">(<param><decl><type><name pos:line="1749" pos:column="49">TiXmlNode</name> <type:modifier pos:line="1749" pos:column="59">*</type:modifier></type><name pos:line="1749" pos:column="60">node</name></decl></param>)</parameter_list>
<block pos:line="1750" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1751" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1751" pos:column="19">*</type:modifier></type><name pos:line="1751" pos:column="20">projPanelRoot</name> <init pos:line="1751" pos:column="34">= <expr><call><name><name pos:line="1751" pos:column="36">node</name><op:operator pos:line="1751" pos:column="40">-&gt;</op:operator><name pos:line="1751" pos:column="42">FirstChildElement</name></name><argument_list pos:line="1751" pos:column="59">(<argument><expr><call><name pos:line="1751" pos:column="60">TEXT</name><argument_list pos:line="1751" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1751" pos:column="65">"ProjectPanels"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1752" pos:column="9">if <condition pos:line="1752" pos:column="12">(<expr><op:operator pos:line="1752" pos:column="13">!</op:operator><name pos:line="1752" pos:column="14">projPanelRoot</name></expr>)</condition><then pos:line="1752" pos:column="28"> <return pos:line="1752" pos:column="29">return;</return></then></if>
	
	<for pos:line="1754" pos:column="9">for (<init><decl><type><name pos:line="1754" pos:column="14">TiXmlNode</name> <type:modifier pos:line="1754" pos:column="24">*</type:modifier></type><name pos:line="1754" pos:column="25">childNode</name> <init pos:line="1754" pos:column="35">= <expr><call><name><name pos:line="1754" pos:column="37">projPanelRoot</name><op:operator pos:line="1754" pos:column="50">-&gt;</op:operator><name pos:line="1754" pos:column="52">FirstChildElement</name></name><argument_list pos:line="1754" pos:column="69">(<argument><expr><call><name pos:line="1754" pos:column="70">TEXT</name><argument_list pos:line="1754" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="1754" pos:column="75">"ProjectPanel"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1755" pos:column="17">childNode</name></expr>;</condition>
		<incr><expr><name pos:line="1756" pos:column="17">childNode</name> <op:operator pos:line="1756" pos:column="27">=</op:operator> <call><name><name pos:line="1756" pos:column="29">childNode</name><op:operator pos:line="1756" pos:column="38">-&gt;</op:operator><name pos:line="1756" pos:column="40">NextSibling</name></name><argument_list pos:line="1756" pos:column="51">(<argument><expr><call><name pos:line="1756" pos:column="52">TEXT</name><argument_list pos:line="1756" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1756" pos:column="57">"ProjectPanel"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1757" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1758" pos:column="17">int</name></type> <name pos:line="1758" pos:column="21">index</name> <init pos:line="1758" pos:column="27">= <expr><lit:literal type="number" pos:line="1758" pos:column="29">0</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1759" pos:column="17">const</specifier> <name pos:line="1759" pos:column="23">TCHAR</name> <type:modifier pos:line="1759" pos:column="29">*</type:modifier></type><name pos:line="1759" pos:column="30">idStr</name> <init pos:line="1759" pos:column="36">= <expr><op:operator pos:line="1759" pos:column="38">(</op:operator><call><name><name pos:line="1759" pos:column="39">childNode</name><op:operator pos:line="1759" pos:column="48">-&gt;</op:operator><name pos:line="1759" pos:column="50">ToElement</name></name><argument_list pos:line="1759" pos:column="59">()</argument_list></call><op:operator pos:line="1759" pos:column="61">)</op:operator><op:operator pos:line="1759" pos:column="62">-&gt;</op:operator><call><name pos:line="1759" pos:column="64">Attribute</name><argument_list pos:line="1759" pos:column="73">(<argument><expr><call><name pos:line="1759" pos:column="74">TEXT</name><argument_list pos:line="1759" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="1759" pos:column="79">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1759" pos:column="86">&amp;</op:operator><name pos:line="1759" pos:column="87">index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1760" pos:column="17">if <condition pos:line="1760" pos:column="20">(<expr><name pos:line="1760" pos:column="21">idStr</name> <op:operator pos:line="1760" pos:column="27">&amp;&amp;</op:operator> <op:operator pos:line="1760" pos:column="30">(</op:operator><name pos:line="1760" pos:column="31">index</name> <op:operator pos:line="1760" pos:column="37">&gt;=</op:operator> <lit:literal type="number" pos:line="1760" pos:column="40">0</lit:literal> <op:operator pos:line="1760" pos:column="42">&amp;&amp;</op:operator> <name pos:line="1760" pos:column="45">index</name> <op:operator pos:line="1760" pos:column="51">&lt;=</op:operator> <lit:literal type="number" pos:line="1760" pos:column="54">2</lit:literal><op:operator pos:line="1760" pos:column="55">)</op:operator></expr>)</condition><then pos:line="1760" pos:column="57">
		<block pos:line="1761" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="1762" pos:column="25">const</specifier> <name pos:line="1762" pos:column="31">TCHAR</name> <type:modifier pos:line="1762" pos:column="37">*</type:modifier></type><name pos:line="1762" pos:column="38">filePath</name> <init pos:line="1762" pos:column="47">= <expr><op:operator pos:line="1762" pos:column="49">(</op:operator><call><name><name pos:line="1762" pos:column="50">childNode</name><op:operator pos:line="1762" pos:column="59">-&gt;</op:operator><name pos:line="1762" pos:column="61">ToElement</name></name><argument_list pos:line="1762" pos:column="70">()</argument_list></call><op:operator pos:line="1762" pos:column="72">)</op:operator><op:operator pos:line="1762" pos:column="73">-&gt;</op:operator><call><name pos:line="1762" pos:column="75">Attribute</name><argument_list pos:line="1762" pos:column="84">(<argument><expr><call><name pos:line="1762" pos:column="85">TEXT</name><argument_list pos:line="1762" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="1762" pos:column="90">"workSpaceFile"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1763" pos:column="25">if <condition pos:line="1763" pos:column="28">(<expr><name pos:line="1763" pos:column="29">filePath</name></expr>)</condition><then pos:line="1763" pos:column="38">
			<block pos:line="1764" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="1765" pos:column="33">_workSpaceFilePathes</name><index pos:line="1765" pos:column="53">[<expr><name pos:line="1765" pos:column="54">index</name></expr>]</index></name> <op:operator pos:line="1765" pos:column="61">=</op:operator> <name pos:line="1765" pos:column="63">filePath</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="1771" pos:column="1">void</name></type> <name><name pos:line="1771" pos:column="6">NppParameters</name><op:operator pos:line="1771" pos:column="19">::</op:operator><name pos:line="1771" pos:column="21">feedFindHistoryParameters</name></name><parameter_list pos:line="1771" pos:column="46">(<param><decl><type><name pos:line="1771" pos:column="47">TiXmlNode</name> <type:modifier pos:line="1771" pos:column="57">*</type:modifier></type><name pos:line="1771" pos:column="58">node</name></decl></param>)</parameter_list>
<block pos:line="1772" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1773" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1773" pos:column="19">*</type:modifier></type><name pos:line="1773" pos:column="20">findHistoryRoot</name> <init pos:line="1773" pos:column="36">= <expr><call><name><name pos:line="1773" pos:column="38">node</name><op:operator pos:line="1773" pos:column="42">-&gt;</op:operator><name pos:line="1773" pos:column="44">FirstChildElement</name></name><argument_list pos:line="1773" pos:column="61">(<argument><expr><call><name pos:line="1773" pos:column="62">TEXT</name><argument_list pos:line="1773" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="1773" pos:column="67">"FindHistory"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1774" pos:column="9">if <condition pos:line="1774" pos:column="12">(<expr><op:operator pos:line="1774" pos:column="13">!</op:operator><name pos:line="1774" pos:column="14">findHistoryRoot</name></expr>)</condition><then pos:line="1774" pos:column="30"> <return pos:line="1774" pos:column="31">return;</return></then></if>

	<expr_stmt><expr><op:operator pos:line="1776" pos:column="9">(</op:operator><call><name><name pos:line="1776" pos:column="10">findHistoryRoot</name><op:operator pos:line="1776" pos:column="25">-&gt;</op:operator><name pos:line="1776" pos:column="27">ToElement</name></name><argument_list pos:line="1776" pos:column="36">()</argument_list></call><op:operator pos:line="1776" pos:column="38">)</op:operator><op:operator pos:line="1776" pos:column="39">-&gt;</op:operator><call><name pos:line="1776" pos:column="41">Attribute</name><argument_list pos:line="1776" pos:column="50">(<argument><expr><call><name pos:line="1776" pos:column="51">TEXT</name><argument_list pos:line="1776" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1776" pos:column="56">"nbMaxFindHistoryPath"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1776" pos:column="81">&amp;</op:operator><name><name pos:line="1776" pos:column="82">_findHistory</name><op:operator pos:line="1776" pos:column="94">.</op:operator><name pos:line="1776" pos:column="95">_nbMaxFindHistoryPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1777" pos:column="9">if <condition pos:line="1777" pos:column="12">(<expr><op:operator pos:line="1777" pos:column="13">(</op:operator><name><name pos:line="1777" pos:column="14">_findHistory</name><op:operator pos:line="1777" pos:column="26">.</op:operator><name pos:line="1777" pos:column="27">_nbMaxFindHistoryPath</name></name> <op:operator pos:line="1777" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="1777" pos:column="51">0</lit:literal><op:operator pos:line="1777" pos:column="52">)</op:operator> <op:operator pos:line="1777" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="1777" pos:column="57">(</op:operator><name><name pos:line="1777" pos:column="58">_findHistory</name><op:operator pos:line="1777" pos:column="70">.</op:operator><name pos:line="1777" pos:column="71">_nbMaxFindHistoryPath</name></name> <op:operator pos:line="1777" pos:column="93">&lt;=</op:operator> <name pos:line="1777" pos:column="96">NB_MAX_FINDHISTORY_PATH</name><op:operator pos:line="1777" pos:column="119">)</op:operator></expr>)</condition><then pos:line="1777" pos:column="121">
	<block pos:line="1778" pos:column="9">{
		<for pos:line="1779" pos:column="17">for (<init><decl><type><name pos:line="1779" pos:column="22">TiXmlNode</name> <type:modifier pos:line="1779" pos:column="32">*</type:modifier></type><name pos:line="1779" pos:column="33">childNode</name> <init pos:line="1779" pos:column="43">= <expr><call><name><name pos:line="1779" pos:column="45">findHistoryRoot</name><op:operator pos:line="1779" pos:column="60">-&gt;</op:operator><name pos:line="1779" pos:column="62">FirstChildElement</name></name><argument_list pos:line="1779" pos:column="79">(<argument><expr><call><name pos:line="1779" pos:column="80">TEXT</name><argument_list pos:line="1779" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="1779" pos:column="85">"Path"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
            <condition><expr><name pos:line="1780" pos:column="13">childNode</name> <op:operator pos:line="1780" pos:column="23">&amp;&amp;</op:operator> <op:operator pos:line="1780" pos:column="26">(</op:operator><call><name><name pos:line="1780" pos:column="27">_findHistory</name><op:operator pos:line="1780" pos:column="39">.</op:operator><name pos:line="1780" pos:column="40">_findHistoryPaths</name><op:operator pos:line="1780" pos:column="57">.</op:operator><name pos:line="1780" pos:column="58">size</name></name><argument_list pos:line="1780" pos:column="62">()</argument_list></call> <op:operator pos:line="1780" pos:column="65">&lt;</op:operator> <name pos:line="1780" pos:column="67">NB_MAX_FINDHISTORY_PATH</name><op:operator pos:line="1780" pos:column="90">)</op:operator></expr>;</condition>
			<incr><expr><name pos:line="1781" pos:column="25">childNode</name> <op:operator pos:line="1781" pos:column="35">=</op:operator> <call><name><name pos:line="1781" pos:column="37">childNode</name><op:operator pos:line="1781" pos:column="46">-&gt;</op:operator><name pos:line="1781" pos:column="48">NextSibling</name></name><argument_list pos:line="1781" pos:column="59">(<argument><expr><call><name pos:line="1781" pos:column="60">TEXT</name><argument_list pos:line="1781" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1781" pos:column="65">"Path"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
		<block pos:line="1782" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="1783" pos:column="25">const</specifier> <name pos:line="1783" pos:column="31">TCHAR</name> <type:modifier pos:line="1783" pos:column="37">*</type:modifier></type><name pos:line="1783" pos:column="38">filePath</name> <init pos:line="1783" pos:column="47">= <expr><op:operator pos:line="1783" pos:column="49">(</op:operator><call><name><name pos:line="1783" pos:column="50">childNode</name><op:operator pos:line="1783" pos:column="59">-&gt;</op:operator><name pos:line="1783" pos:column="61">ToElement</name></name><argument_list pos:line="1783" pos:column="70">()</argument_list></call><op:operator pos:line="1783" pos:column="72">)</op:operator><op:operator pos:line="1783" pos:column="73">-&gt;</op:operator><call><name pos:line="1783" pos:column="75">Attribute</name><argument_list pos:line="1783" pos:column="84">(<argument><expr><call><name pos:line="1783" pos:column="85">TEXT</name><argument_list pos:line="1783" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="1783" pos:column="90">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1784" pos:column="25">if <condition pos:line="1784" pos:column="28">(<expr><name pos:line="1784" pos:column="29">filePath</name></expr>)</condition><then pos:line="1784" pos:column="38">
			<block pos:line="1785" pos:column="25">{
                <expr_stmt><expr><call><name><name pos:line="1786" pos:column="17">_findHistory</name><op:operator pos:line="1786" pos:column="29">.</op:operator><name pos:line="1786" pos:column="30">_findHistoryPaths</name><op:operator pos:line="1786" pos:column="47">.</op:operator><name pos:line="1786" pos:column="48">push_back</name></name><argument_list pos:line="1786" pos:column="57">(<argument><expr><call><name pos:line="1786" pos:column="58">generic_string</name><argument_list pos:line="1786" pos:column="72">(<argument><expr><name pos:line="1786" pos:column="73">filePath</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></then></if>

	<expr_stmt><expr><op:operator pos:line="1791" pos:column="9">(</op:operator><call><name><name pos:line="1791" pos:column="10">findHistoryRoot</name><op:operator pos:line="1791" pos:column="25">-&gt;</op:operator><name pos:line="1791" pos:column="27">ToElement</name></name><argument_list pos:line="1791" pos:column="36">()</argument_list></call><op:operator pos:line="1791" pos:column="38">)</op:operator><op:operator pos:line="1791" pos:column="39">-&gt;</op:operator><call><name pos:line="1791" pos:column="41">Attribute</name><argument_list pos:line="1791" pos:column="50">(<argument><expr><call><name pos:line="1791" pos:column="51">TEXT</name><argument_list pos:line="1791" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1791" pos:column="56">"nbMaxFindHistoryFilter"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1791" pos:column="83">&amp;</op:operator><name><name pos:line="1791" pos:column="84">_findHistory</name><op:operator pos:line="1791" pos:column="96">.</op:operator><name pos:line="1791" pos:column="97">_nbMaxFindHistoryFilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1792" pos:column="9">if <condition pos:line="1792" pos:column="12">(<expr><op:operator pos:line="1792" pos:column="13">(</op:operator><name><name pos:line="1792" pos:column="14">_findHistory</name><op:operator pos:line="1792" pos:column="26">.</op:operator><name pos:line="1792" pos:column="27">_nbMaxFindHistoryFilter</name></name> <op:operator pos:line="1792" pos:column="51">&gt;</op:operator> <lit:literal type="number" pos:line="1792" pos:column="53">0</lit:literal><op:operator pos:line="1792" pos:column="54">)</op:operator> <op:operator pos:line="1792" pos:column="56">&amp;&amp;</op:operator> <op:operator pos:line="1792" pos:column="59">(</op:operator><name><name pos:line="1792" pos:column="60">_findHistory</name><op:operator pos:line="1792" pos:column="72">.</op:operator><name pos:line="1792" pos:column="73">_nbMaxFindHistoryFilter</name></name> <op:operator pos:line="1792" pos:column="97">&lt;=</op:operator> <name pos:line="1792" pos:column="100">NB_MAX_FINDHISTORY_FILTER</name><op:operator pos:line="1792" pos:column="125">)</op:operator></expr>)</condition><then pos:line="1792" pos:column="127">
	<block pos:line="1793" pos:column="9">{
		<for pos:line="1794" pos:column="17">for (<init><decl><type><name pos:line="1794" pos:column="22">TiXmlNode</name> <type:modifier pos:line="1794" pos:column="32">*</type:modifier></type><name pos:line="1794" pos:column="33">childNode</name> <init pos:line="1794" pos:column="43">= <expr><call><name><name pos:line="1794" pos:column="45">findHistoryRoot</name><op:operator pos:line="1794" pos:column="60">-&gt;</op:operator><name pos:line="1794" pos:column="62">FirstChildElement</name></name><argument_list pos:line="1794" pos:column="79">(<argument><expr><call><name pos:line="1794" pos:column="80">TEXT</name><argument_list pos:line="1794" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="1794" pos:column="85">"Filter"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
			<condition><expr><name pos:line="1795" pos:column="25">childNode</name> <op:operator pos:line="1795" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="1795" pos:column="38">(</op:operator><call><name><name pos:line="1795" pos:column="39">_findHistory</name><op:operator pos:line="1795" pos:column="51">.</op:operator><name pos:line="1795" pos:column="52">_findHistoryFilters</name><op:operator pos:line="1795" pos:column="71">.</op:operator><name pos:line="1795" pos:column="72">size</name></name><argument_list pos:line="1795" pos:column="76">()</argument_list></call> <op:operator pos:line="1795" pos:column="79">&lt;</op:operator> <name pos:line="1795" pos:column="81">NB_MAX_FINDHISTORY_FILTER</name><op:operator pos:line="1795" pos:column="106">)</op:operator></expr>;</condition>
			<incr><expr><name pos:line="1796" pos:column="25">childNode</name> <op:operator pos:line="1796" pos:column="35">=</op:operator> <call><name><name pos:line="1796" pos:column="37">childNode</name><op:operator pos:line="1796" pos:column="46">-&gt;</op:operator><name pos:line="1796" pos:column="48">NextSibling</name></name><argument_list pos:line="1796" pos:column="59">(<argument><expr><call><name pos:line="1796" pos:column="60">TEXT</name><argument_list pos:line="1796" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1796" pos:column="65">"Filter"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
		<block pos:line="1797" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="1798" pos:column="25">const</specifier> <name pos:line="1798" pos:column="31">TCHAR</name> <type:modifier pos:line="1798" pos:column="37">*</type:modifier></type><name pos:line="1798" pos:column="38">fileFilter</name> <init pos:line="1798" pos:column="49">= <expr><op:operator pos:line="1798" pos:column="51">(</op:operator><call><name><name pos:line="1798" pos:column="52">childNode</name><op:operator pos:line="1798" pos:column="61">-&gt;</op:operator><name pos:line="1798" pos:column="63">ToElement</name></name><argument_list pos:line="1798" pos:column="72">()</argument_list></call><op:operator pos:line="1798" pos:column="74">)</op:operator><op:operator pos:line="1798" pos:column="75">-&gt;</op:operator><call><name pos:line="1798" pos:column="77">Attribute</name><argument_list pos:line="1798" pos:column="86">(<argument><expr><call><name pos:line="1798" pos:column="87">TEXT</name><argument_list pos:line="1798" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="1798" pos:column="92">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1799" pos:column="25">if <condition pos:line="1799" pos:column="28">(<expr><name pos:line="1799" pos:column="29">fileFilter</name></expr>)</condition><then pos:line="1799" pos:column="40">
			<block pos:line="1800" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1801" pos:column="33">_findHistory</name><op:operator pos:line="1801" pos:column="45">.</op:operator><name pos:line="1801" pos:column="46">_findHistoryFilters</name><op:operator pos:line="1801" pos:column="65">.</op:operator><name pos:line="1801" pos:column="66">push_back</name></name><argument_list pos:line="1801" pos:column="75">(<argument><expr><call><name pos:line="1801" pos:column="76">generic_string</name><argument_list pos:line="1801" pos:column="90">(<argument><expr><name pos:line="1801" pos:column="91">fileFilter</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></then></if>

	<expr_stmt><expr><op:operator pos:line="1806" pos:column="9">(</op:operator><call><name><name pos:line="1806" pos:column="10">findHistoryRoot</name><op:operator pos:line="1806" pos:column="25">-&gt;</op:operator><name pos:line="1806" pos:column="27">ToElement</name></name><argument_list pos:line="1806" pos:column="36">()</argument_list></call><op:operator pos:line="1806" pos:column="38">)</op:operator><op:operator pos:line="1806" pos:column="39">-&gt;</op:operator><call><name pos:line="1806" pos:column="41">Attribute</name><argument_list pos:line="1806" pos:column="50">(<argument><expr><call><name pos:line="1806" pos:column="51">TEXT</name><argument_list pos:line="1806" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1806" pos:column="56">"nbMaxFindHistoryFind"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1806" pos:column="81">&amp;</op:operator><name><name pos:line="1806" pos:column="82">_findHistory</name><op:operator pos:line="1806" pos:column="94">.</op:operator><name pos:line="1806" pos:column="95">_nbMaxFindHistoryFind</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1807" pos:column="9">if <condition pos:line="1807" pos:column="12">(<expr><op:operator pos:line="1807" pos:column="13">(</op:operator><name><name pos:line="1807" pos:column="14">_findHistory</name><op:operator pos:line="1807" pos:column="26">.</op:operator><name pos:line="1807" pos:column="27">_nbMaxFindHistoryFind</name></name> <op:operator pos:line="1807" pos:column="49">&gt;</op:operator> <lit:literal type="number" pos:line="1807" pos:column="51">0</lit:literal><op:operator pos:line="1807" pos:column="52">)</op:operator> <op:operator pos:line="1807" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="1807" pos:column="57">(</op:operator><name><name pos:line="1807" pos:column="58">_findHistory</name><op:operator pos:line="1807" pos:column="70">.</op:operator><name pos:line="1807" pos:column="71">_nbMaxFindHistoryFind</name></name> <op:operator pos:line="1807" pos:column="93">&lt;=</op:operator> <name pos:line="1807" pos:column="96">NB_MAX_FINDHISTORY_FIND</name><op:operator pos:line="1807" pos:column="119">)</op:operator></expr>)</condition><then pos:line="1807" pos:column="121">
	<block pos:line="1808" pos:column="9">{
		<for pos:line="1809" pos:column="17">for (<init><decl><type><name pos:line="1809" pos:column="22">TiXmlNode</name> <type:modifier pos:line="1809" pos:column="32">*</type:modifier></type><name pos:line="1809" pos:column="33">childNode</name> <init pos:line="1809" pos:column="43">= <expr><call><name><name pos:line="1809" pos:column="45">findHistoryRoot</name><op:operator pos:line="1809" pos:column="60">-&gt;</op:operator><name pos:line="1809" pos:column="62">FirstChildElement</name></name><argument_list pos:line="1809" pos:column="79">(<argument><expr><call><name pos:line="1809" pos:column="80">TEXT</name><argument_list pos:line="1809" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="1809" pos:column="85">"Find"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
			<condition><expr><name pos:line="1810" pos:column="25">childNode</name> <op:operator pos:line="1810" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="1810" pos:column="38">(</op:operator><call><name><name pos:line="1810" pos:column="39">_findHistory</name><op:operator pos:line="1810" pos:column="51">.</op:operator><name pos:line="1810" pos:column="52">_findHistoryFinds</name><op:operator pos:line="1810" pos:column="69">.</op:operator><name pos:line="1810" pos:column="70">size</name></name><argument_list pos:line="1810" pos:column="74">()</argument_list></call> <op:operator pos:line="1810" pos:column="77">&lt;</op:operator> <name pos:line="1810" pos:column="79">NB_MAX_FINDHISTORY_FIND</name><op:operator pos:line="1810" pos:column="102">)</op:operator></expr>;</condition>
			<incr><expr><name pos:line="1811" pos:column="25">childNode</name> <op:operator pos:line="1811" pos:column="35">=</op:operator> <call><name><name pos:line="1811" pos:column="37">childNode</name><op:operator pos:line="1811" pos:column="46">-&gt;</op:operator><name pos:line="1811" pos:column="48">NextSibling</name></name><argument_list pos:line="1811" pos:column="59">(<argument><expr><call><name pos:line="1811" pos:column="60">TEXT</name><argument_list pos:line="1811" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1811" pos:column="65">"Find"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
		<block pos:line="1812" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="1813" pos:column="25">const</specifier> <name pos:line="1813" pos:column="31">TCHAR</name> <type:modifier pos:line="1813" pos:column="37">*</type:modifier></type><name pos:line="1813" pos:column="38">fileFind</name> <init pos:line="1813" pos:column="47">= <expr><op:operator pos:line="1813" pos:column="49">(</op:operator><call><name><name pos:line="1813" pos:column="50">childNode</name><op:operator pos:line="1813" pos:column="59">-&gt;</op:operator><name pos:line="1813" pos:column="61">ToElement</name></name><argument_list pos:line="1813" pos:column="70">()</argument_list></call><op:operator pos:line="1813" pos:column="72">)</op:operator><op:operator pos:line="1813" pos:column="73">-&gt;</op:operator><call><name pos:line="1813" pos:column="75">Attribute</name><argument_list pos:line="1813" pos:column="84">(<argument><expr><call><name pos:line="1813" pos:column="85">TEXT</name><argument_list pos:line="1813" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="1813" pos:column="90">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1814" pos:column="25">if <condition pos:line="1814" pos:column="28">(<expr><name pos:line="1814" pos:column="29">fileFind</name></expr>)</condition><then pos:line="1814" pos:column="38">
			<block pos:line="1815" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1816" pos:column="33">_findHistory</name><op:operator pos:line="1816" pos:column="45">.</op:operator><name pos:line="1816" pos:column="46">_findHistoryFinds</name><op:operator pos:line="1816" pos:column="63">.</op:operator><name pos:line="1816" pos:column="64">push_back</name></name><argument_list pos:line="1816" pos:column="73">(<argument><expr><call><name pos:line="1816" pos:column="74">generic_string</name><argument_list pos:line="1816" pos:column="88">(<argument><expr><name pos:line="1816" pos:column="89">fileFind</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></then></if>

	<expr_stmt><expr><op:operator pos:line="1821" pos:column="9">(</op:operator><call><name><name pos:line="1821" pos:column="10">findHistoryRoot</name><op:operator pos:line="1821" pos:column="25">-&gt;</op:operator><name pos:line="1821" pos:column="27">ToElement</name></name><argument_list pos:line="1821" pos:column="36">()</argument_list></call><op:operator pos:line="1821" pos:column="38">)</op:operator><op:operator pos:line="1821" pos:column="39">-&gt;</op:operator><call><name pos:line="1821" pos:column="41">Attribute</name><argument_list pos:line="1821" pos:column="50">(<argument><expr><call><name pos:line="1821" pos:column="51">TEXT</name><argument_list pos:line="1821" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1821" pos:column="56">"nbMaxFindHistoryReplace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1821" pos:column="84">&amp;</op:operator><name><name pos:line="1821" pos:column="85">_findHistory</name><op:operator pos:line="1821" pos:column="97">.</op:operator><name pos:line="1821" pos:column="98">_nbMaxFindHistoryReplace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1822" pos:column="9">if <condition pos:line="1822" pos:column="12">(<expr><op:operator pos:line="1822" pos:column="13">(</op:operator><name><name pos:line="1822" pos:column="14">_findHistory</name><op:operator pos:line="1822" pos:column="26">.</op:operator><name pos:line="1822" pos:column="27">_nbMaxFindHistoryReplace</name></name> <op:operator pos:line="1822" pos:column="52">&gt;</op:operator> <lit:literal type="number" pos:line="1822" pos:column="54">0</lit:literal><op:operator pos:line="1822" pos:column="55">)</op:operator> <op:operator pos:line="1822" pos:column="57">&amp;&amp;</op:operator> <op:operator pos:line="1822" pos:column="60">(</op:operator><name><name pos:line="1822" pos:column="61">_findHistory</name><op:operator pos:line="1822" pos:column="73">.</op:operator><name pos:line="1822" pos:column="74">_nbMaxFindHistoryReplace</name></name> <op:operator pos:line="1822" pos:column="99">&lt;=</op:operator> <name pos:line="1822" pos:column="102">NB_MAX_FINDHISTORY_REPLACE</name><op:operator pos:line="1822" pos:column="128">)</op:operator></expr>)</condition><then pos:line="1822" pos:column="130">
	<block pos:line="1823" pos:column="9">{
		<for pos:line="1824" pos:column="17">for (<init><decl><type><name pos:line="1824" pos:column="22">TiXmlNode</name> <type:modifier pos:line="1824" pos:column="32">*</type:modifier></type><name pos:line="1824" pos:column="33">childNode</name> <init pos:line="1824" pos:column="43">= <expr><call><name><name pos:line="1824" pos:column="45">findHistoryRoot</name><op:operator pos:line="1824" pos:column="60">-&gt;</op:operator><name pos:line="1824" pos:column="62">FirstChildElement</name></name><argument_list pos:line="1824" pos:column="79">(<argument><expr><call><name pos:line="1824" pos:column="80">TEXT</name><argument_list pos:line="1824" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="1824" pos:column="85">"Replace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
			<condition><expr><name pos:line="1825" pos:column="25">childNode</name> <op:operator pos:line="1825" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="1825" pos:column="38">(</op:operator><call><name><name pos:line="1825" pos:column="39">_findHistory</name><op:operator pos:line="1825" pos:column="51">.</op:operator><name pos:line="1825" pos:column="52">_findHistoryReplaces</name><op:operator pos:line="1825" pos:column="72">.</op:operator><name pos:line="1825" pos:column="73">size</name></name><argument_list pos:line="1825" pos:column="77">()</argument_list></call> <op:operator pos:line="1825" pos:column="80">&lt;</op:operator> <name pos:line="1825" pos:column="82">NB_MAX_FINDHISTORY_REPLACE</name><op:operator pos:line="1825" pos:column="108">)</op:operator></expr>;</condition>
			<incr><expr><name pos:line="1826" pos:column="25">childNode</name> <op:operator pos:line="1826" pos:column="35">=</op:operator> <call><name><name pos:line="1826" pos:column="37">childNode</name><op:operator pos:line="1826" pos:column="46">-&gt;</op:operator><name pos:line="1826" pos:column="48">NextSibling</name></name><argument_list pos:line="1826" pos:column="59">(<argument><expr><call><name pos:line="1826" pos:column="60">TEXT</name><argument_list pos:line="1826" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1826" pos:column="65">"Replace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
		<block pos:line="1827" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="1828" pos:column="25">const</specifier> <name pos:line="1828" pos:column="31">TCHAR</name> <type:modifier pos:line="1828" pos:column="37">*</type:modifier></type><name pos:line="1828" pos:column="38">fileReplace</name> <init pos:line="1828" pos:column="50">= <expr><op:operator pos:line="1828" pos:column="52">(</op:operator><call><name><name pos:line="1828" pos:column="53">childNode</name><op:operator pos:line="1828" pos:column="62">-&gt;</op:operator><name pos:line="1828" pos:column="64">ToElement</name></name><argument_list pos:line="1828" pos:column="73">()</argument_list></call><op:operator pos:line="1828" pos:column="75">)</op:operator><op:operator pos:line="1828" pos:column="76">-&gt;</op:operator><call><name pos:line="1828" pos:column="78">Attribute</name><argument_list pos:line="1828" pos:column="87">(<argument><expr><call><name pos:line="1828" pos:column="88">TEXT</name><argument_list pos:line="1828" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="1828" pos:column="93">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1829" pos:column="25">if <condition pos:line="1829" pos:column="28">(<expr><name pos:line="1829" pos:column="29">fileReplace</name></expr>)</condition><then pos:line="1829" pos:column="41">
			<block pos:line="1830" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1831" pos:column="33">_findHistory</name><op:operator pos:line="1831" pos:column="45">.</op:operator><name pos:line="1831" pos:column="46">_findHistoryReplaces</name><op:operator pos:line="1831" pos:column="66">.</op:operator><name pos:line="1831" pos:column="67">push_back</name></name><argument_list pos:line="1831" pos:column="76">(<argument><expr><call><name pos:line="1831" pos:column="77">generic_string</name><argument_list pos:line="1831" pos:column="91">(<argument><expr><name pos:line="1831" pos:column="92">fileReplace</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></for>
	}</block></then></if>

	<decl_stmt><decl><type><specifier pos:line="1836" pos:column="9">const</specifier> <name pos:line="1836" pos:column="15">TCHAR</name> <type:modifier pos:line="1836" pos:column="21">*</type:modifier></type><name pos:line="1836" pos:column="22">boolStr</name> <init pos:line="1836" pos:column="30">= <expr><op:operator pos:line="1836" pos:column="32">(</op:operator><call><name><name pos:line="1836" pos:column="33">findHistoryRoot</name><op:operator pos:line="1836" pos:column="48">-&gt;</op:operator><name pos:line="1836" pos:column="50">ToElement</name></name><argument_list pos:line="1836" pos:column="59">()</argument_list></call><op:operator pos:line="1836" pos:column="61">)</op:operator><op:operator pos:line="1836" pos:column="62">-&gt;</op:operator><call><name pos:line="1836" pos:column="64">Attribute</name><argument_list pos:line="1836" pos:column="73">(<argument><expr><call><name pos:line="1836" pos:column="74">TEXT</name><argument_list pos:line="1836" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="1836" pos:column="79">"matchWord"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1837" pos:column="9">if <condition pos:line="1837" pos:column="12">(<expr><name pos:line="1837" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1837" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1838" pos:column="17">_findHistory</name><op:operator pos:line="1838" pos:column="29">.</op:operator><name pos:line="1838" pos:column="30">_isMatchWord</name></name> <op:operator pos:line="1838" pos:column="43">=</op:operator> <op:operator pos:line="1838" pos:column="45">!</op:operator><call><name pos:line="1838" pos:column="46">lstrcmp</name><argument_list pos:line="1838" pos:column="53">(<argument><expr><call><name pos:line="1838" pos:column="54">TEXT</name><argument_list pos:line="1838" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1838" pos:column="59">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1838" pos:column="67">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1840" pos:column="9">boolStr</name> <op:operator pos:line="1840" pos:column="17">=</op:operator> <op:operator pos:line="1840" pos:column="19">(</op:operator><call><name><name pos:line="1840" pos:column="20">findHistoryRoot</name><op:operator pos:line="1840" pos:column="35">-&gt;</op:operator><name pos:line="1840" pos:column="37">ToElement</name></name><argument_list pos:line="1840" pos:column="46">()</argument_list></call><op:operator pos:line="1840" pos:column="48">)</op:operator><op:operator pos:line="1840" pos:column="49">-&gt;</op:operator><call><name pos:line="1840" pos:column="51">Attribute</name><argument_list pos:line="1840" pos:column="60">(<argument><expr><call><name pos:line="1840" pos:column="61">TEXT</name><argument_list pos:line="1840" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1840" pos:column="66">"matchCase"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1841" pos:column="9">if <condition pos:line="1841" pos:column="12">(<expr><name pos:line="1841" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1841" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1842" pos:column="17">_findHistory</name><op:operator pos:line="1842" pos:column="29">.</op:operator><name pos:line="1842" pos:column="30">_isMatchCase</name></name> <op:operator pos:line="1842" pos:column="43">=</op:operator> <op:operator pos:line="1842" pos:column="45">!</op:operator><call><name pos:line="1842" pos:column="46">lstrcmp</name><argument_list pos:line="1842" pos:column="53">(<argument><expr><call><name pos:line="1842" pos:column="54">TEXT</name><argument_list pos:line="1842" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1842" pos:column="59">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1842" pos:column="67">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1844" pos:column="9">boolStr</name> <op:operator pos:line="1844" pos:column="17">=</op:operator> <op:operator pos:line="1844" pos:column="19">(</op:operator><call><name><name pos:line="1844" pos:column="20">findHistoryRoot</name><op:operator pos:line="1844" pos:column="35">-&gt;</op:operator><name pos:line="1844" pos:column="37">ToElement</name></name><argument_list pos:line="1844" pos:column="46">()</argument_list></call><op:operator pos:line="1844" pos:column="48">)</op:operator><op:operator pos:line="1844" pos:column="49">-&gt;</op:operator><call><name pos:line="1844" pos:column="51">Attribute</name><argument_list pos:line="1844" pos:column="60">(<argument><expr><call><name pos:line="1844" pos:column="61">TEXT</name><argument_list pos:line="1844" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1844" pos:column="66">"wrap"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1845" pos:column="9">if <condition pos:line="1845" pos:column="12">(<expr><name pos:line="1845" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1845" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1846" pos:column="17">_findHistory</name><op:operator pos:line="1846" pos:column="29">.</op:operator><name pos:line="1846" pos:column="30">_isWrap</name></name> <op:operator pos:line="1846" pos:column="38">=</op:operator> <op:operator pos:line="1846" pos:column="40">!</op:operator><call><name pos:line="1846" pos:column="41">lstrcmp</name><argument_list pos:line="1846" pos:column="48">(<argument><expr><call><name pos:line="1846" pos:column="49">TEXT</name><argument_list pos:line="1846" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1846" pos:column="54">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1846" pos:column="62">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1848" pos:column="9">boolStr</name> <op:operator pos:line="1848" pos:column="17">=</op:operator> <op:operator pos:line="1848" pos:column="19">(</op:operator><call><name><name pos:line="1848" pos:column="20">findHistoryRoot</name><op:operator pos:line="1848" pos:column="35">-&gt;</op:operator><name pos:line="1848" pos:column="37">ToElement</name></name><argument_list pos:line="1848" pos:column="46">()</argument_list></call><op:operator pos:line="1848" pos:column="48">)</op:operator><op:operator pos:line="1848" pos:column="49">-&gt;</op:operator><call><name pos:line="1848" pos:column="51">Attribute</name><argument_list pos:line="1848" pos:column="60">(<argument><expr><call><name pos:line="1848" pos:column="61">TEXT</name><argument_list pos:line="1848" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1848" pos:column="66">"directionDown"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1849" pos:column="9">if <condition pos:line="1849" pos:column="12">(<expr><name pos:line="1849" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1849" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1850" pos:column="17">_findHistory</name><op:operator pos:line="1850" pos:column="29">.</op:operator><name pos:line="1850" pos:column="30">_isDirectionDown</name></name> <op:operator pos:line="1850" pos:column="47">=</op:operator> <op:operator pos:line="1850" pos:column="49">!</op:operator><call><name pos:line="1850" pos:column="50">lstrcmp</name><argument_list pos:line="1850" pos:column="57">(<argument><expr><call><name pos:line="1850" pos:column="58">TEXT</name><argument_list pos:line="1850" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="1850" pos:column="63">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1850" pos:column="71">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1852" pos:column="9">boolStr</name> <op:operator pos:line="1852" pos:column="17">=</op:operator> <op:operator pos:line="1852" pos:column="19">(</op:operator><call><name><name pos:line="1852" pos:column="20">findHistoryRoot</name><op:operator pos:line="1852" pos:column="35">-&gt;</op:operator><name pos:line="1852" pos:column="37">ToElement</name></name><argument_list pos:line="1852" pos:column="46">()</argument_list></call><op:operator pos:line="1852" pos:column="48">)</op:operator><op:operator pos:line="1852" pos:column="49">-&gt;</op:operator><call><name pos:line="1852" pos:column="51">Attribute</name><argument_list pos:line="1852" pos:column="60">(<argument><expr><call><name pos:line="1852" pos:column="61">TEXT</name><argument_list pos:line="1852" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1852" pos:column="66">"fifRecuisive"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1853" pos:column="9">if <condition pos:line="1853" pos:column="12">(<expr><name pos:line="1853" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1853" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1854" pos:column="17">_findHistory</name><op:operator pos:line="1854" pos:column="29">.</op:operator><name pos:line="1854" pos:column="30">_isFifRecuisive</name></name> <op:operator pos:line="1854" pos:column="46">=</op:operator> <op:operator pos:line="1854" pos:column="48">!</op:operator><call><name pos:line="1854" pos:column="49">lstrcmp</name><argument_list pos:line="1854" pos:column="56">(<argument><expr><call><name pos:line="1854" pos:column="57">TEXT</name><argument_list pos:line="1854" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="1854" pos:column="62">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1854" pos:column="70">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1856" pos:column="9">boolStr</name> <op:operator pos:line="1856" pos:column="17">=</op:operator> <op:operator pos:line="1856" pos:column="19">(</op:operator><call><name><name pos:line="1856" pos:column="20">findHistoryRoot</name><op:operator pos:line="1856" pos:column="35">-&gt;</op:operator><name pos:line="1856" pos:column="37">ToElement</name></name><argument_list pos:line="1856" pos:column="46">()</argument_list></call><op:operator pos:line="1856" pos:column="48">)</op:operator><op:operator pos:line="1856" pos:column="49">-&gt;</op:operator><call><name pos:line="1856" pos:column="51">Attribute</name><argument_list pos:line="1856" pos:column="60">(<argument><expr><call><name pos:line="1856" pos:column="61">TEXT</name><argument_list pos:line="1856" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1856" pos:column="66">"fifInHiddenFolder"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1857" pos:column="9">if <condition pos:line="1857" pos:column="12">(<expr><name pos:line="1857" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1857" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1858" pos:column="17">_findHistory</name><op:operator pos:line="1858" pos:column="29">.</op:operator><name pos:line="1858" pos:column="30">_isFifInHiddenFolder</name></name> <op:operator pos:line="1858" pos:column="51">=</op:operator> <op:operator pos:line="1858" pos:column="53">!</op:operator><call><name pos:line="1858" pos:column="54">lstrcmp</name><argument_list pos:line="1858" pos:column="61">(<argument><expr><call><name pos:line="1858" pos:column="62">TEXT</name><argument_list pos:line="1858" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="1858" pos:column="67">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1858" pos:column="75">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1860" pos:column="9">boolStr</name> <op:operator pos:line="1860" pos:column="17">=</op:operator> <op:operator pos:line="1860" pos:column="19">(</op:operator><call><name><name pos:line="1860" pos:column="20">findHistoryRoot</name><op:operator pos:line="1860" pos:column="35">-&gt;</op:operator><name pos:line="1860" pos:column="37">ToElement</name></name><argument_list pos:line="1860" pos:column="46">()</argument_list></call><op:operator pos:line="1860" pos:column="48">)</op:operator><op:operator pos:line="1860" pos:column="49">-&gt;</op:operator><call><name pos:line="1860" pos:column="51">Attribute</name><argument_list pos:line="1860" pos:column="60">(<argument><expr><call><name pos:line="1860" pos:column="61">TEXT</name><argument_list pos:line="1860" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1860" pos:column="66">"dlgAlwaysVisible"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1861" pos:column="9">if <condition pos:line="1861" pos:column="12">(<expr><name pos:line="1861" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1861" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1862" pos:column="17">_findHistory</name><op:operator pos:line="1862" pos:column="29">.</op:operator><name pos:line="1862" pos:column="30">_isDlgAlwaysVisible</name></name> <op:operator pos:line="1862" pos:column="50">=</op:operator> <op:operator pos:line="1862" pos:column="52">!</op:operator><call><name pos:line="1862" pos:column="53">lstrcmp</name><argument_list pos:line="1862" pos:column="60">(<argument><expr><call><name pos:line="1862" pos:column="61">TEXT</name><argument_list pos:line="1862" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1862" pos:column="66">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1862" pos:column="74">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1864" pos:column="9">boolStr</name> <op:operator pos:line="1864" pos:column="17">=</op:operator> <op:operator pos:line="1864" pos:column="19">(</op:operator><call><name><name pos:line="1864" pos:column="20">findHistoryRoot</name><op:operator pos:line="1864" pos:column="35">-&gt;</op:operator><name pos:line="1864" pos:column="37">ToElement</name></name><argument_list pos:line="1864" pos:column="46">()</argument_list></call><op:operator pos:line="1864" pos:column="48">)</op:operator><op:operator pos:line="1864" pos:column="49">-&gt;</op:operator><call><name pos:line="1864" pos:column="51">Attribute</name><argument_list pos:line="1864" pos:column="60">(<argument><expr><call><name pos:line="1864" pos:column="61">TEXT</name><argument_list pos:line="1864" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1864" pos:column="66">"fifFilterFollowsDoc"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1865" pos:column="9">if <condition pos:line="1865" pos:column="12">(<expr><name pos:line="1865" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1865" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1866" pos:column="17">_findHistory</name><op:operator pos:line="1866" pos:column="29">.</op:operator><name pos:line="1866" pos:column="30">_isFilterFollowDoc</name></name> <op:operator pos:line="1866" pos:column="49">=</op:operator> <op:operator pos:line="1866" pos:column="51">!</op:operator><call><name pos:line="1866" pos:column="52">lstrcmp</name><argument_list pos:line="1866" pos:column="59">(<argument><expr><call><name pos:line="1866" pos:column="60">TEXT</name><argument_list pos:line="1866" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1866" pos:column="65">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1866" pos:column="73">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1868" pos:column="9">boolStr</name> <op:operator pos:line="1868" pos:column="17">=</op:operator> <op:operator pos:line="1868" pos:column="19">(</op:operator><call><name><name pos:line="1868" pos:column="20">findHistoryRoot</name><op:operator pos:line="1868" pos:column="35">-&gt;</op:operator><name pos:line="1868" pos:column="37">ToElement</name></name><argument_list pos:line="1868" pos:column="46">()</argument_list></call><op:operator pos:line="1868" pos:column="48">)</op:operator><op:operator pos:line="1868" pos:column="49">-&gt;</op:operator><call><name pos:line="1868" pos:column="51">Attribute</name><argument_list pos:line="1868" pos:column="60">(<argument><expr><call><name pos:line="1868" pos:column="61">TEXT</name><argument_list pos:line="1868" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1868" pos:column="66">"fifFolderFollowsDoc"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1869" pos:column="9">if <condition pos:line="1869" pos:column="12">(<expr><name pos:line="1869" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1869" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1870" pos:column="17">_findHistory</name><op:operator pos:line="1870" pos:column="29">.</op:operator><name pos:line="1870" pos:column="30">_isFolderFollowDoc</name></name> <op:operator pos:line="1870" pos:column="49">=</op:operator> <op:operator pos:line="1870" pos:column="51">!</op:operator><call><name pos:line="1870" pos:column="52">lstrcmp</name><argument_list pos:line="1870" pos:column="59">(<argument><expr><call><name pos:line="1870" pos:column="60">TEXT</name><argument_list pos:line="1870" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1870" pos:column="65">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1870" pos:column="73">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="1872" pos:column="9">int</name></type> <name pos:line="1872" pos:column="13">mode</name> <init pos:line="1872" pos:column="18">= <expr><lit:literal type="number" pos:line="1872" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="1873" pos:column="9">boolStr</name> <op:operator pos:line="1873" pos:column="17">=</op:operator> <op:operator pos:line="1873" pos:column="19">(</op:operator><call><name><name pos:line="1873" pos:column="20">findHistoryRoot</name><op:operator pos:line="1873" pos:column="35">-&gt;</op:operator><name pos:line="1873" pos:column="37">ToElement</name></name><argument_list pos:line="1873" pos:column="46">()</argument_list></call><op:operator pos:line="1873" pos:column="48">)</op:operator><op:operator pos:line="1873" pos:column="49">-&gt;</op:operator><call><name pos:line="1873" pos:column="51">Attribute</name><argument_list pos:line="1873" pos:column="60">(<argument><expr><call><name pos:line="1873" pos:column="61">TEXT</name><argument_list pos:line="1873" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1873" pos:column="66">"searchMode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1873" pos:column="81">&amp;</op:operator><name pos:line="1873" pos:column="82">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1874" pos:column="9">if <condition pos:line="1874" pos:column="12">(<expr><name pos:line="1874" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1874" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1875" pos:column="17">_findHistory</name><op:operator pos:line="1875" pos:column="29">.</op:operator><name pos:line="1875" pos:column="30">_searchMode</name></name> <op:operator pos:line="1875" pos:column="42">=</op:operator> <op:operator pos:line="1875" pos:column="44">(</op:operator><name><name pos:line="1875" pos:column="45">FindHistory</name><op:operator pos:line="1875" pos:column="56">::</op:operator><name pos:line="1875" pos:column="58">searchMode</name></name><op:operator pos:line="1875" pos:column="68">)</op:operator><name pos:line="1875" pos:column="69">mode</name></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1877" pos:column="9">boolStr</name> <op:operator pos:line="1877" pos:column="17">=</op:operator> <op:operator pos:line="1877" pos:column="19">(</op:operator><call><name><name pos:line="1877" pos:column="20">findHistoryRoot</name><op:operator pos:line="1877" pos:column="35">-&gt;</op:operator><name pos:line="1877" pos:column="37">ToElement</name></name><argument_list pos:line="1877" pos:column="46">()</argument_list></call><op:operator pos:line="1877" pos:column="48">)</op:operator><op:operator pos:line="1877" pos:column="49">-&gt;</op:operator><call><name pos:line="1877" pos:column="51">Attribute</name><argument_list pos:line="1877" pos:column="60">(<argument><expr><call><name pos:line="1877" pos:column="61">TEXT</name><argument_list pos:line="1877" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1877" pos:column="66">"transparencyMode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1877" pos:column="87">&amp;</op:operator><name pos:line="1877" pos:column="88">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1878" pos:column="9">if <condition pos:line="1878" pos:column="12">(<expr><name pos:line="1878" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1878" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1879" pos:column="17">_findHistory</name><op:operator pos:line="1879" pos:column="29">.</op:operator><name pos:line="1879" pos:column="30">_transparencyMode</name></name> <op:operator pos:line="1879" pos:column="48">=</op:operator> <op:operator pos:line="1879" pos:column="50">(</op:operator><name><name pos:line="1879" pos:column="51">FindHistory</name><op:operator pos:line="1879" pos:column="62">::</op:operator><name pos:line="1879" pos:column="64">transparencyMode</name></name><op:operator pos:line="1879" pos:column="80">)</op:operator><name pos:line="1879" pos:column="81">mode</name></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><op:operator pos:line="1881" pos:column="9">(</op:operator><call><name><name pos:line="1881" pos:column="10">findHistoryRoot</name><op:operator pos:line="1881" pos:column="25">-&gt;</op:operator><name pos:line="1881" pos:column="27">ToElement</name></name><argument_list pos:line="1881" pos:column="36">()</argument_list></call><op:operator pos:line="1881" pos:column="38">)</op:operator><op:operator pos:line="1881" pos:column="39">-&gt;</op:operator><call><name pos:line="1881" pos:column="41">Attribute</name><argument_list pos:line="1881" pos:column="50">(<argument><expr><call><name pos:line="1881" pos:column="51">TEXT</name><argument_list pos:line="1881" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1881" pos:column="56">"transparency"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1881" pos:column="73">&amp;</op:operator><name><name pos:line="1881" pos:column="74">_findHistory</name><op:operator pos:line="1881" pos:column="86">.</op:operator><name pos:line="1881" pos:column="87">_transparency</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1882" pos:column="9">if <condition pos:line="1882" pos:column="12">(<expr><name><name pos:line="1882" pos:column="13">_findHistory</name><op:operator pos:line="1882" pos:column="25">.</op:operator><name pos:line="1882" pos:column="26">_transparency</name></name> <op:operator pos:line="1882" pos:column="40">&lt;=</op:operator> <lit:literal type="number" pos:line="1882" pos:column="43">0</lit:literal> <op:operator pos:line="1882" pos:column="45">||</op:operator> <name><name pos:line="1882" pos:column="48">_findHistory</name><op:operator pos:line="1882" pos:column="60">.</op:operator><name pos:line="1882" pos:column="61">_transparency</name></name> <op:operator pos:line="1882" pos:column="75">&gt;</op:operator> <lit:literal type="number" pos:line="1882" pos:column="77">200</lit:literal></expr>)</condition><then pos:line="1882" pos:column="81">
		<expr_stmt><expr><name><name pos:line="1883" pos:column="17">_findHistory</name><op:operator pos:line="1883" pos:column="29">.</op:operator><name pos:line="1883" pos:column="30">_transparency</name></name> <op:operator pos:line="1883" pos:column="44">=</op:operator> <lit:literal type="number" pos:line="1883" pos:column="46">150</lit:literal></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1885" pos:column="9">boolStr</name> <op:operator pos:line="1885" pos:column="17">=</op:operator> <op:operator pos:line="1885" pos:column="19">(</op:operator><call><name><name pos:line="1885" pos:column="20">findHistoryRoot</name><op:operator pos:line="1885" pos:column="35">-&gt;</op:operator><name pos:line="1885" pos:column="37">ToElement</name></name><argument_list pos:line="1885" pos:column="46">()</argument_list></call><op:operator pos:line="1885" pos:column="48">)</op:operator><op:operator pos:line="1885" pos:column="49">-&gt;</op:operator><call><name pos:line="1885" pos:column="51">Attribute</name><argument_list pos:line="1885" pos:column="60">(<argument><expr><call><name pos:line="1885" pos:column="61">TEXT</name><argument_list pos:line="1885" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1885" pos:column="66">"dotMatchesNewline"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1886" pos:column="9">if <condition pos:line="1886" pos:column="12">(<expr><name pos:line="1886" pos:column="13">boolStr</name></expr>)</condition><then pos:line="1886" pos:column="21">
		<expr_stmt><expr><name><name pos:line="1887" pos:column="17">_findHistory</name><op:operator pos:line="1887" pos:column="29">.</op:operator><name pos:line="1887" pos:column="30">_dotMatchesNewline</name></name> <op:operator pos:line="1887" pos:column="49">=</op:operator> <op:operator pos:line="1887" pos:column="51">!</op:operator><call><name pos:line="1887" pos:column="52">lstrcmp</name><argument_list pos:line="1887" pos:column="59">(<argument><expr><call><name pos:line="1887" pos:column="60">TEXT</name><argument_list pos:line="1887" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1887" pos:column="65">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1887" pos:column="73">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<function><type><name pos:line="1890" pos:column="1">void</name></type> <name><name pos:line="1890" pos:column="6">NppParameters</name><op:operator pos:line="1890" pos:column="19">::</op:operator><name pos:line="1890" pos:column="21">feedShortcut</name></name><parameter_list pos:line="1890" pos:column="33">(<param><decl><type><name pos:line="1890" pos:column="34">TiXmlNode</name> <type:modifier pos:line="1890" pos:column="44">*</type:modifier></type><name pos:line="1890" pos:column="45">node</name></decl></param>)</parameter_list>
<block pos:line="1891" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1892" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1892" pos:column="19">*</type:modifier></type><name pos:line="1892" pos:column="20">shortcutsRoot</name> <init pos:line="1892" pos:column="34">= <expr><call><name><name pos:line="1892" pos:column="36">node</name><op:operator pos:line="1892" pos:column="40">-&gt;</op:operator><name pos:line="1892" pos:column="42">FirstChildElement</name></name><argument_list pos:line="1892" pos:column="59">(<argument><expr><call><name pos:line="1892" pos:column="60">TEXT</name><argument_list pos:line="1892" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1892" pos:column="65">"InternalCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1893" pos:column="9">if <condition pos:line="1893" pos:column="12">(<expr><op:operator pos:line="1893" pos:column="13">!</op:operator><name pos:line="1893" pos:column="14">shortcutsRoot</name></expr>)</condition><then pos:line="1893" pos:column="28"> <return pos:line="1893" pos:column="29">return;</return></then></if>

	<for pos:line="1895" pos:column="9">for (<init><decl><type><name pos:line="1895" pos:column="14">TiXmlNode</name> <type:modifier pos:line="1895" pos:column="24">*</type:modifier></type><name pos:line="1895" pos:column="25">childNode</name> <init pos:line="1895" pos:column="35">= <expr><call><name><name pos:line="1895" pos:column="37">shortcutsRoot</name><op:operator pos:line="1895" pos:column="50">-&gt;</op:operator><name pos:line="1895" pos:column="52">FirstChildElement</name></name><argument_list pos:line="1895" pos:column="69">(<argument><expr><call><name pos:line="1895" pos:column="70">TEXT</name><argument_list pos:line="1895" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="1895" pos:column="75">"Shortcut"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1896" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1897" pos:column="17">childNode</name> <op:operator pos:line="1897" pos:column="27">=</op:operator> <call><name><name pos:line="1897" pos:column="29">childNode</name><op:operator pos:line="1897" pos:column="38">-&gt;</op:operator><name pos:line="1897" pos:column="40">NextSibling</name></name><argument_list pos:line="1897" pos:column="51">(<argument><expr><call><name pos:line="1897" pos:column="52">TEXT</name><argument_list pos:line="1897" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1897" pos:column="57">"Shortcut"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1898" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1899" pos:column="17">int</name></type> <name pos:line="1899" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1900" pos:column="17">const</specifier> <name pos:line="1900" pos:column="23">TCHAR</name> <type:modifier pos:line="1900" pos:column="29">*</type:modifier></type><name pos:line="1900" pos:column="30">idStr</name> <init pos:line="1900" pos:column="36">= <expr><op:operator pos:line="1900" pos:column="38">(</op:operator><call><name><name pos:line="1900" pos:column="39">childNode</name><op:operator pos:line="1900" pos:column="48">-&gt;</op:operator><name pos:line="1900" pos:column="50">ToElement</name></name><argument_list pos:line="1900" pos:column="59">()</argument_list></call><op:operator pos:line="1900" pos:column="61">)</op:operator><op:operator pos:line="1900" pos:column="62">-&gt;</op:operator><call><name pos:line="1900" pos:column="64">Attribute</name><argument_list pos:line="1900" pos:column="73">(<argument><expr><call><name pos:line="1900" pos:column="74">TEXT</name><argument_list pos:line="1900" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="1900" pos:column="79">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1900" pos:column="86">&amp;</op:operator><name pos:line="1900" pos:column="87">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1901" pos:column="17">if <condition pos:line="1901" pos:column="20">(<expr><name pos:line="1901" pos:column="21">idStr</name></expr>)</condition><then pos:line="1901" pos:column="27">
		<block pos:line="1902" pos:column="17">{
			<comment type="line" pos:line="1903" pos:column="25">//find the commandid that matches this Shortcut sc and alter it, push back its index in the modified list, if not present</comment>
			<decl_stmt><decl><type><name pos:line="1904" pos:column="25">int</name></type> <name pos:line="1904" pos:column="29">len</name> <init pos:line="1904" pos:column="33">= <expr><op:operator pos:line="1904" pos:column="35">(</op:operator><name pos:line="1904" pos:column="36">int</name><op:operator pos:line="1904" pos:column="39">)</op:operator><call><name><name pos:line="1904" pos:column="40">_shortcuts</name><op:operator pos:line="1904" pos:column="50">.</op:operator><name pos:line="1904" pos:column="51">size</name></name><argument_list pos:line="1904" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="1905" pos:column="25">for(<init><decl><type><name pos:line="1905" pos:column="29">int</name></type> <name pos:line="1905" pos:column="33">i</name> <init pos:line="1905" pos:column="35">= <expr><lit:literal type="number" pos:line="1905" pos:column="37">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="1905" pos:column="40">i</name> <op:operator pos:line="1905" pos:column="42">&lt;</op:operator> <name pos:line="1905" pos:column="44">len</name></expr>;</condition> <incr><expr><name pos:line="1905" pos:column="49">i</name><op:operator pos:line="1905" pos:column="50">++</op:operator></expr></incr>) 
			<block pos:line="1906" pos:column="25">{
				<if pos:line="1907" pos:column="33">if <condition pos:line="1907" pos:column="36">(<expr><name><name pos:line="1907" pos:column="37">_shortcuts</name><index pos:line="1907" pos:column="47">[<expr><name pos:line="1907" pos:column="48">i</name></expr>]</index></name><op:operator pos:line="1907" pos:column="50">.</op:operator><call><name pos:line="1907" pos:column="51">getID</name><argument_list pos:line="1907" pos:column="56">()</argument_list></call> <op:operator pos:line="1907" pos:column="59">==</op:operator> <op:operator pos:line="1907" pos:column="62">(</op:operator><name pos:line="1907" pos:column="63">unsigned</name> <name pos:line="1907" pos:column="72">long</name><op:operator pos:line="1907" pos:column="76">)</op:operator><name pos:line="1907" pos:column="77">id</name></expr>)</condition><then pos:line="1907" pos:column="80"> 
				<block pos:line="1908" pos:column="33">{	<comment type="line" pos:line="1908" pos:column="41">//found our match</comment>
					<expr_stmt><expr><call><name pos:line="1909" pos:column="41">getShortcuts</name><argument_list pos:line="1909" pos:column="53">(<argument><expr><name pos:line="1909" pos:column="54">childNode</name></expr></argument>, <argument><expr><name><name pos:line="1909" pos:column="65">_shortcuts</name><index pos:line="1909" pos:column="75">[<expr><name pos:line="1909" pos:column="76">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1910" pos:column="41">addUserModifiedIndex</name><argument_list pos:line="1910" pos:column="61">(<argument><expr><name pos:line="1910" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></for>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="1917" pos:column="1">void</name></type> <name><name pos:line="1917" pos:column="6">NppParameters</name><op:operator pos:line="1917" pos:column="19">::</op:operator><name pos:line="1917" pos:column="21">feedMacros</name></name><parameter_list pos:line="1917" pos:column="31">(<param><decl><type><name pos:line="1917" pos:column="32">TiXmlNode</name> <type:modifier pos:line="1917" pos:column="42">*</type:modifier></type><name pos:line="1917" pos:column="43">node</name></decl></param>)</parameter_list>
<block pos:line="1918" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1919" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1919" pos:column="19">*</type:modifier></type><name pos:line="1919" pos:column="20">macrosRoot</name> <init pos:line="1919" pos:column="31">= <expr><call><name><name pos:line="1919" pos:column="33">node</name><op:operator pos:line="1919" pos:column="37">-&gt;</op:operator><name pos:line="1919" pos:column="39">FirstChildElement</name></name><argument_list pos:line="1919" pos:column="56">(<argument><expr><call><name pos:line="1919" pos:column="57">TEXT</name><argument_list pos:line="1919" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="1919" pos:column="62">"Macros"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1920" pos:column="9">if <condition pos:line="1920" pos:column="12">(<expr><op:operator pos:line="1920" pos:column="13">!</op:operator><name pos:line="1920" pos:column="14">macrosRoot</name></expr>)</condition><then pos:line="1920" pos:column="25"> <return pos:line="1920" pos:column="26">return;</return></then></if>

	<for pos:line="1922" pos:column="9">for (<init><decl><type><name pos:line="1922" pos:column="14">TiXmlNode</name> <type:modifier pos:line="1922" pos:column="24">*</type:modifier></type><name pos:line="1922" pos:column="25">childNode</name> <init pos:line="1922" pos:column="35">= <expr><call><name><name pos:line="1922" pos:column="37">macrosRoot</name><op:operator pos:line="1922" pos:column="47">-&gt;</op:operator><name pos:line="1922" pos:column="49">FirstChildElement</name></name><argument_list pos:line="1922" pos:column="66">(<argument><expr><call><name pos:line="1922" pos:column="67">TEXT</name><argument_list pos:line="1922" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="1922" pos:column="72">"Macro"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1923" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1924" pos:column="17">childNode</name> <op:operator pos:line="1924" pos:column="27">=</op:operator> <call><name><name pos:line="1924" pos:column="29">childNode</name><op:operator pos:line="1924" pos:column="38">-&gt;</op:operator><name pos:line="1924" pos:column="40">NextSibling</name></name><argument_list pos:line="1924" pos:column="51">(<argument><expr><call><name pos:line="1924" pos:column="52">TEXT</name><argument_list pos:line="1924" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1924" pos:column="57">"Macro"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1925" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1926" pos:column="17">Shortcut</name></type> <name pos:line="1926" pos:column="26">sc</name></decl>;</decl_stmt>
		<if pos:line="1927" pos:column="17">if <condition pos:line="1927" pos:column="20">(<expr><call><name pos:line="1927" pos:column="21">getShortcuts</name><argument_list pos:line="1927" pos:column="33">(<argument><expr><name pos:line="1927" pos:column="34">childNode</name></expr></argument>, <argument><expr><name pos:line="1927" pos:column="45">sc</name></expr></argument>)</argument_list></call></expr>)</condition><then><comment type="line" pos:line="1927" pos:column="49">// &amp;&amp; sc.isValid())</comment>
		<block pos:line="1928" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1929" pos:column="25">Macro</name></type> <name pos:line="1929" pos:column="31">macro</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1930" pos:column="25">getActions</name><argument_list pos:line="1930" pos:column="35">(<argument><expr><name pos:line="1930" pos:column="36">childNode</name></expr></argument>, <argument><expr><name pos:line="1930" pos:column="47">macro</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="1931" pos:column="25">int</name></type> <name pos:line="1931" pos:column="29">cmdID</name> <init pos:line="1931" pos:column="35">= <expr><name pos:line="1931" pos:column="37">ID_MACRO</name> <op:operator pos:line="1931" pos:column="46">+</op:operator> <call><name><name pos:line="1931" pos:column="48">_macros</name><op:operator pos:line="1931" pos:column="55">.</op:operator><name pos:line="1931" pos:column="56">size</name></name><argument_list pos:line="1931" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<function_decl><type><name pos:line="1932" pos:column="25">MacroShortcut</name></type> <name pos:line="1932" pos:column="39">ms</name><parameter_list pos:line="1932" pos:column="41">(<param><decl><type><name pos:line="1932" pos:column="42">sc</name></type></decl></param>, <param><decl><type><name pos:line="1932" pos:column="46">macro</name></type></decl></param>, <param><decl><type><name pos:line="1932" pos:column="53">cmdID</name></type></decl></param>)</parameter_list>;</function_decl>
			<comment type="line" pos:line="1933" pos:column="25">//if (ms.isValid())</comment>
			<expr_stmt><expr><call><name><name pos:line="1934" pos:column="25">_macros</name><op:operator pos:line="1934" pos:column="32">.</op:operator><name pos:line="1934" pos:column="33">push_back</name></name><argument_list pos:line="1934" pos:column="42">(<argument><expr><name pos:line="1934" pos:column="43">ms</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
}</block></function>


<function><type><name pos:line="1940" pos:column="1">void</name></type> <name><name pos:line="1940" pos:column="6">NppParameters</name><op:operator pos:line="1940" pos:column="19">::</op:operator><name pos:line="1940" pos:column="21">getActions</name></name><parameter_list pos:line="1940" pos:column="31">(<param><decl><type><name pos:line="1940" pos:column="32">TiXmlNode</name> <type:modifier pos:line="1940" pos:column="42">*</type:modifier></type><name pos:line="1940" pos:column="43">node</name></decl></param>, <param><decl><type><name pos:line="1940" pos:column="49">Macro</name> <type:modifier pos:line="1940" pos:column="55">&amp;</type:modifier></type> <name pos:line="1940" pos:column="57">macro</name></decl></param>)</parameter_list>
<block pos:line="1941" pos:column="1">{
	<for pos:line="1942" pos:column="9">for (<init><decl><type><name pos:line="1942" pos:column="14">TiXmlNode</name> <type:modifier pos:line="1942" pos:column="24">*</type:modifier></type><name pos:line="1942" pos:column="25">childNode</name> <init pos:line="1942" pos:column="35">= <expr><call><name><name pos:line="1942" pos:column="37">node</name><op:operator pos:line="1942" pos:column="41">-&gt;</op:operator><name pos:line="1942" pos:column="43">FirstChildElement</name></name><argument_list pos:line="1942" pos:column="60">(<argument><expr><call><name pos:line="1942" pos:column="61">TEXT</name><argument_list pos:line="1942" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1942" pos:column="66">"Action"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1943" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1944" pos:column="17">childNode</name> <op:operator pos:line="1944" pos:column="27">=</op:operator> <call><name><name pos:line="1944" pos:column="29">childNode</name><op:operator pos:line="1944" pos:column="38">-&gt;</op:operator><name pos:line="1944" pos:column="40">NextSibling</name></name><argument_list pos:line="1944" pos:column="51">(<argument><expr><call><name pos:line="1944" pos:column="52">TEXT</name><argument_list pos:line="1944" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1944" pos:column="57">"Action"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1945" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1946" pos:column="17">int</name></type> <name pos:line="1946" pos:column="21">type</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1947" pos:column="17">const</specifier> <name pos:line="1947" pos:column="23">TCHAR</name> <type:modifier pos:line="1947" pos:column="29">*</type:modifier></type><name pos:line="1947" pos:column="30">typeStr</name> <init pos:line="1947" pos:column="38">= <expr><op:operator pos:line="1947" pos:column="40">(</op:operator><call><name><name pos:line="1947" pos:column="41">childNode</name><op:operator pos:line="1947" pos:column="50">-&gt;</op:operator><name pos:line="1947" pos:column="52">ToElement</name></name><argument_list pos:line="1947" pos:column="61">()</argument_list></call><op:operator pos:line="1947" pos:column="63">)</op:operator><op:operator pos:line="1947" pos:column="64">-&gt;</op:operator><call><name pos:line="1947" pos:column="66">Attribute</name><argument_list pos:line="1947" pos:column="75">(<argument><expr><call><name pos:line="1947" pos:column="76">TEXT</name><argument_list pos:line="1947" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="1947" pos:column="81">"type"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1947" pos:column="90">&amp;</op:operator><name pos:line="1947" pos:column="91">type</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1948" pos:column="17">if <condition pos:line="1948" pos:column="20">(<expr><op:operator pos:line="1948" pos:column="21">(</op:operator><op:operator pos:line="1948" pos:column="22">!</op:operator><name pos:line="1948" pos:column="23">typeStr</name><op:operator pos:line="1948" pos:column="30">)</op:operator> <op:operator pos:line="1948" pos:column="32">||</op:operator> <op:operator pos:line="1948" pos:column="35">(</op:operator><name pos:line="1948" pos:column="36">type</name> <op:operator pos:line="1948" pos:column="41">&gt;</op:operator> <lit:literal type="number" pos:line="1948" pos:column="43">3</lit:literal><op:operator pos:line="1948" pos:column="44">)</op:operator></expr>)</condition><then pos:line="1948" pos:column="46">
			<continue pos:line="1949" pos:column="25">continue;</continue></then></if>

		<decl_stmt><decl><type><name pos:line="1951" pos:column="17">int</name></type> <name pos:line="1951" pos:column="21">msg</name> <init pos:line="1951" pos:column="25">= <expr><lit:literal type="number" pos:line="1951" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><op:operator pos:line="1952" pos:column="17">(</op:operator><call><name><name pos:line="1952" pos:column="18">childNode</name><op:operator pos:line="1952" pos:column="27">-&gt;</op:operator><name pos:line="1952" pos:column="29">ToElement</name></name><argument_list pos:line="1952" pos:column="38">()</argument_list></call><op:operator pos:line="1952" pos:column="40">)</op:operator><op:operator pos:line="1952" pos:column="41">-&gt;</op:operator><call><name pos:line="1952" pos:column="43">Attribute</name><argument_list pos:line="1952" pos:column="52">(<argument><expr><call><name pos:line="1952" pos:column="53">TEXT</name><argument_list pos:line="1952" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="1952" pos:column="58">"message"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1952" pos:column="70">&amp;</op:operator><name pos:line="1952" pos:column="71">msg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="1954" pos:column="17">int</name></type> <name pos:line="1954" pos:column="21">wParam</name> <init pos:line="1954" pos:column="28">= <expr><lit:literal type="number" pos:line="1954" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><op:operator pos:line="1955" pos:column="17">(</op:operator><call><name><name pos:line="1955" pos:column="18">childNode</name><op:operator pos:line="1955" pos:column="27">-&gt;</op:operator><name pos:line="1955" pos:column="29">ToElement</name></name><argument_list pos:line="1955" pos:column="38">()</argument_list></call><op:operator pos:line="1955" pos:column="40">)</op:operator><op:operator pos:line="1955" pos:column="41">-&gt;</op:operator><call><name pos:line="1955" pos:column="43">Attribute</name><argument_list pos:line="1955" pos:column="52">(<argument><expr><call><name pos:line="1955" pos:column="53">TEXT</name><argument_list pos:line="1955" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="1955" pos:column="58">"wParam"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1955" pos:column="69">&amp;</op:operator><name pos:line="1955" pos:column="70">wParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="1957" pos:column="17">int</name></type> <name pos:line="1957" pos:column="21">lParam</name> <init pos:line="1957" pos:column="28">= <expr><lit:literal type="number" pos:line="1957" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><op:operator pos:line="1958" pos:column="17">(</op:operator><call><name><name pos:line="1958" pos:column="18">childNode</name><op:operator pos:line="1958" pos:column="27">-&gt;</op:operator><name pos:line="1958" pos:column="29">ToElement</name></name><argument_list pos:line="1958" pos:column="38">()</argument_list></call><op:operator pos:line="1958" pos:column="40">)</op:operator><op:operator pos:line="1958" pos:column="41">-&gt;</op:operator><call><name pos:line="1958" pos:column="43">Attribute</name><argument_list pos:line="1958" pos:column="52">(<argument><expr><call><name pos:line="1958" pos:column="53">TEXT</name><argument_list pos:line="1958" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="1958" pos:column="58">"lParam"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1958" pos:column="69">&amp;</op:operator><name pos:line="1958" pos:column="70">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><specifier pos:line="1960" pos:column="17">const</specifier> <name pos:line="1960" pos:column="23">TCHAR</name> <type:modifier pos:line="1960" pos:column="29">*</type:modifier></type><name pos:line="1960" pos:column="30">sParam</name> <init pos:line="1960" pos:column="37">= <expr><op:operator pos:line="1960" pos:column="39">(</op:operator><call><name><name pos:line="1960" pos:column="40">childNode</name><op:operator pos:line="1960" pos:column="49">-&gt;</op:operator><name pos:line="1960" pos:column="51">ToElement</name></name><argument_list pos:line="1960" pos:column="60">()</argument_list></call><op:operator pos:line="1960" pos:column="62">)</op:operator><op:operator pos:line="1960" pos:column="63">-&gt;</op:operator><call><name pos:line="1960" pos:column="65">Attribute</name><argument_list pos:line="1960" pos:column="74">(<argument><expr><call><name pos:line="1960" pos:column="75">TEXT</name><argument_list pos:line="1960" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="1960" pos:column="80">"sParam"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1961" pos:column="17">if <condition pos:line="1961" pos:column="20">(<expr><op:operator pos:line="1961" pos:column="21">!</op:operator><name pos:line="1961" pos:column="22">sParam</name></expr>)</condition><then pos:line="1961" pos:column="29">
			<expr_stmt><expr><name pos:line="1962" pos:column="25">sParam</name> <op:operator pos:line="1962" pos:column="32">=</op:operator> <call><name pos:line="1962" pos:column="34">TEXT</name><argument_list pos:line="1962" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="1962" pos:column="39">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<function_decl><type><name pos:line="1963" pos:column="17">recordedMacroStep</name></type> <name pos:line="1963" pos:column="35">step</name><parameter_list pos:line="1963" pos:column="39">(<param><decl><type><name pos:line="1963" pos:column="40">msg</name></type></decl></param>, <param><decl><type><name pos:line="1963" pos:column="45">wParam</name></type></decl></param>, <param><decl><type><name pos:line="1963" pos:column="53">lParam</name></type></decl></param>, <param><decl><type><name pos:line="1963" pos:column="61">sParam</name></type></decl></param>, <param><decl><type><name pos:line="1963" pos:column="69">type</name></type></decl></param>)</parameter_list>;</function_decl>
		<if pos:line="1964" pos:column="17">if <condition pos:line="1964" pos:column="20">(<expr><call><name><name pos:line="1964" pos:column="21">step</name><op:operator pos:line="1964" pos:column="25">.</op:operator><name pos:line="1964" pos:column="26">isValid</name></name><argument_list pos:line="1964" pos:column="33">()</argument_list></call></expr>)</condition><then pos:line="1964" pos:column="36">
			<expr_stmt><expr><call><name><name pos:line="1965" pos:column="25">macro</name><op:operator pos:line="1965" pos:column="30">.</op:operator><name pos:line="1965" pos:column="31">push_back</name></name><argument_list pos:line="1965" pos:column="40">(<argument><expr><name pos:line="1965" pos:column="41">step</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	}</block></for>
}</block></function>

<function><type><name pos:line="1970" pos:column="1">void</name></type> <name><name pos:line="1970" pos:column="6">NppParameters</name><op:operator pos:line="1970" pos:column="19">::</op:operator><name pos:line="1970" pos:column="21">feedUserCmds</name></name><parameter_list pos:line="1970" pos:column="33">(<param><decl><type><name pos:line="1970" pos:column="34">TiXmlNode</name> <type:modifier pos:line="1970" pos:column="44">*</type:modifier></type><name pos:line="1970" pos:column="45">node</name></decl></param>)</parameter_list>
<block pos:line="1971" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1972" pos:column="9">TiXmlNode</name> <type:modifier pos:line="1972" pos:column="19">*</type:modifier></type><name pos:line="1972" pos:column="20">userCmdsRoot</name> <init pos:line="1972" pos:column="33">= <expr><call><name><name pos:line="1972" pos:column="35">node</name><op:operator pos:line="1972" pos:column="39">-&gt;</op:operator><name pos:line="1972" pos:column="41">FirstChildElement</name></name><argument_list pos:line="1972" pos:column="58">(<argument><expr><call><name pos:line="1972" pos:column="59">TEXT</name><argument_list pos:line="1972" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="1972" pos:column="64">"UserDefinedCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1973" pos:column="9">if <condition pos:line="1973" pos:column="12">(<expr><op:operator pos:line="1973" pos:column="13">!</op:operator><name pos:line="1973" pos:column="14">userCmdsRoot</name></expr>)</condition><then pos:line="1973" pos:column="27"> <return pos:line="1973" pos:column="28">return;</return></then></if>

	<for pos:line="1975" pos:column="9">for (<init><decl><type><name pos:line="1975" pos:column="14">TiXmlNode</name> <type:modifier pos:line="1975" pos:column="24">*</type:modifier></type><name pos:line="1975" pos:column="25">childNode</name> <init pos:line="1975" pos:column="35">= <expr><call><name><name pos:line="1975" pos:column="37">userCmdsRoot</name><op:operator pos:line="1975" pos:column="49">-&gt;</op:operator><name pos:line="1975" pos:column="51">FirstChildElement</name></name><argument_list pos:line="1975" pos:column="68">(<argument><expr><call><name pos:line="1975" pos:column="69">TEXT</name><argument_list pos:line="1975" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1975" pos:column="74">"Command"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1976" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1977" pos:column="17">childNode</name> <op:operator pos:line="1977" pos:column="27">=</op:operator> <call><name><name pos:line="1977" pos:column="29">childNode</name><op:operator pos:line="1977" pos:column="38">-&gt;</op:operator><name pos:line="1977" pos:column="40">NextSibling</name></name><argument_list pos:line="1977" pos:column="51">(<argument><expr><call><name pos:line="1977" pos:column="52">TEXT</name><argument_list pos:line="1977" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1977" pos:column="57">"Command"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1978" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1979" pos:column="17">Shortcut</name></type> <name pos:line="1979" pos:column="26">sc</name></decl>;</decl_stmt>
		<if pos:line="1980" pos:column="17">if <condition pos:line="1980" pos:column="20">(<expr><call><name pos:line="1980" pos:column="21">getShortcuts</name><argument_list pos:line="1980" pos:column="33">(<argument><expr><name pos:line="1980" pos:column="34">childNode</name></expr></argument>, <argument><expr><name pos:line="1980" pos:column="45">sc</name></expr></argument>)</argument_list></call></expr>)</condition><then><comment type="line" pos:line="1980" pos:column="49">// &amp;&amp; sc.isValid())</comment>
		<block pos:line="1981" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1982" pos:column="25">TiXmlNode</name> <type:modifier pos:line="1982" pos:column="35">*</type:modifier></type><name pos:line="1982" pos:column="36">aNode</name> <init pos:line="1982" pos:column="42">= <expr><call><name><name pos:line="1982" pos:column="44">childNode</name><op:operator pos:line="1982" pos:column="53">-&gt;</op:operator><name pos:line="1982" pos:column="55">FirstChild</name></name><argument_list pos:line="1982" pos:column="65">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1983" pos:column="25">if <condition pos:line="1983" pos:column="28">(<expr><name pos:line="1983" pos:column="29">aNode</name></expr>)</condition><then pos:line="1983" pos:column="35">
			<block pos:line="1984" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="1985" pos:column="33">const</specifier> <name pos:line="1985" pos:column="39">TCHAR</name> <type:modifier pos:line="1985" pos:column="45">*</type:modifier></type><name pos:line="1985" pos:column="46">cmdStr</name> <init pos:line="1985" pos:column="53">= <expr><call><name><name pos:line="1985" pos:column="55">aNode</name><op:operator pos:line="1985" pos:column="60">-&gt;</op:operator><name pos:line="1985" pos:column="62">Value</name></name><argument_list pos:line="1985" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1986" pos:column="33">if <condition pos:line="1986" pos:column="36">(<expr><name pos:line="1986" pos:column="37">cmdStr</name></expr>)</condition><then pos:line="1986" pos:column="44">
				<block pos:line="1987" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1988" pos:column="41">int</name></type> <name pos:line="1988" pos:column="45">cmdID</name> <init pos:line="1988" pos:column="51">= <expr><name pos:line="1988" pos:column="53">ID_USER_CMD</name> <op:operator pos:line="1988" pos:column="65">+</op:operator> <call><name><name pos:line="1988" pos:column="67">_userCommands</name><op:operator pos:line="1988" pos:column="80">.</op:operator><name pos:line="1988" pos:column="81">size</name></name><argument_list pos:line="1988" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<function_decl><type><name pos:line="1989" pos:column="41">UserCommand</name></type> <name pos:line="1989" pos:column="53">uc</name><parameter_list pos:line="1989" pos:column="55">(<param><decl><type><name pos:line="1989" pos:column="56">sc</name></type></decl></param>, <param><decl><type><name pos:line="1989" pos:column="60">cmdStr</name></type></decl></param>, <param><decl><type><name pos:line="1989" pos:column="68">cmdID</name></type></decl></param>)</parameter_list>;</function_decl>
					<comment type="line" pos:line="1990" pos:column="41">//if (uc.isValid())</comment>
					<expr_stmt><expr><call><name><name pos:line="1991" pos:column="41">_userCommands</name><op:operator pos:line="1991" pos:column="54">.</op:operator><name pos:line="1991" pos:column="55">push_back</name></name><argument_list pos:line="1991" pos:column="64">(<argument><expr><name pos:line="1991" pos:column="65">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="1998" pos:column="1">void</name></type> <name><name pos:line="1998" pos:column="6">NppParameters</name><op:operator pos:line="1998" pos:column="19">::</op:operator><name pos:line="1998" pos:column="21">feedPluginCustomizedCmds</name></name><parameter_list pos:line="1998" pos:column="45">(<param><decl><type><name pos:line="1998" pos:column="46">TiXmlNode</name> <type:modifier pos:line="1998" pos:column="56">*</type:modifier></type><name pos:line="1998" pos:column="57">node</name></decl></param>)</parameter_list>
<block pos:line="1999" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2000" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2000" pos:column="19">*</type:modifier></type><name pos:line="2000" pos:column="20">pluginCustomizedCmdsRoot</name> <init pos:line="2000" pos:column="45">= <expr><call><name><name pos:line="2000" pos:column="47">node</name><op:operator pos:line="2000" pos:column="51">-&gt;</op:operator><name pos:line="2000" pos:column="53">FirstChildElement</name></name><argument_list pos:line="2000" pos:column="70">(<argument><expr><call><name pos:line="2000" pos:column="71">TEXT</name><argument_list pos:line="2000" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="2000" pos:column="76">"PluginCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2001" pos:column="9">if <condition pos:line="2001" pos:column="12">(<expr><op:operator pos:line="2001" pos:column="13">!</op:operator><name pos:line="2001" pos:column="14">pluginCustomizedCmdsRoot</name></expr>)</condition><then pos:line="2001" pos:column="39"> <return pos:line="2001" pos:column="40">return;</return></then></if>

	<for pos:line="2003" pos:column="9">for (<init><decl><type><name pos:line="2003" pos:column="14">TiXmlNode</name> <type:modifier pos:line="2003" pos:column="24">*</type:modifier></type><name pos:line="2003" pos:column="25">childNode</name> <init pos:line="2003" pos:column="35">= <expr><call><name><name pos:line="2003" pos:column="37">pluginCustomizedCmdsRoot</name><op:operator pos:line="2003" pos:column="61">-&gt;</op:operator><name pos:line="2003" pos:column="63">FirstChildElement</name></name><argument_list pos:line="2003" pos:column="80">(<argument><expr><call><name pos:line="2003" pos:column="81">TEXT</name><argument_list pos:line="2003" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="2003" pos:column="86">"PluginCommand"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="2004" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="2005" pos:column="17">childNode</name> <op:operator pos:line="2005" pos:column="27">=</op:operator> <call><name><name pos:line="2005" pos:column="29">childNode</name><op:operator pos:line="2005" pos:column="38">-&gt;</op:operator><name pos:line="2005" pos:column="40">NextSibling</name></name><argument_list pos:line="2005" pos:column="51">(<argument><expr><call><name pos:line="2005" pos:column="52">TEXT</name><argument_list pos:line="2005" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2005" pos:column="57">"PluginCommand"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="2006" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="2007" pos:column="17">const</specifier> <name pos:line="2007" pos:column="23">TCHAR</name> <type:modifier pos:line="2007" pos:column="29">*</type:modifier></type><name pos:line="2007" pos:column="30">moduleName</name> <init pos:line="2007" pos:column="41">= <expr><op:operator pos:line="2007" pos:column="43">(</op:operator><call><name><name pos:line="2007" pos:column="44">childNode</name><op:operator pos:line="2007" pos:column="53">-&gt;</op:operator><name pos:line="2007" pos:column="55">ToElement</name></name><argument_list pos:line="2007" pos:column="64">()</argument_list></call><op:operator pos:line="2007" pos:column="66">)</op:operator><op:operator pos:line="2007" pos:column="67">-&gt;</op:operator><call><name pos:line="2007" pos:column="69">Attribute</name><argument_list pos:line="2007" pos:column="78">(<argument><expr><call><name pos:line="2007" pos:column="79">TEXT</name><argument_list pos:line="2007" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="2007" pos:column="84">"moduleName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2008" pos:column="17">if <condition pos:line="2008" pos:column="20">(<expr><op:operator pos:line="2008" pos:column="21">!</op:operator><name pos:line="2008" pos:column="22">moduleName</name></expr>)</condition><then pos:line="2008" pos:column="33">
			<continue pos:line="2009" pos:column="25">continue;</continue></then></if>

		<decl_stmt><decl><type><name pos:line="2011" pos:column="17">int</name></type> <name pos:line="2011" pos:column="21">internalID</name> <init pos:line="2011" pos:column="32">= <expr><op:operator pos:line="2011" pos:column="34">-</op:operator><lit:literal type="number" pos:line="2011" pos:column="35">1</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2012" pos:column="17">const</specifier> <name pos:line="2012" pos:column="23">TCHAR</name> <type:modifier pos:line="2012" pos:column="29">*</type:modifier></type><name pos:line="2012" pos:column="30">internalIDStr</name> <init pos:line="2012" pos:column="44">= <expr><op:operator pos:line="2012" pos:column="46">(</op:operator><call><name><name pos:line="2012" pos:column="47">childNode</name><op:operator pos:line="2012" pos:column="56">-&gt;</op:operator><name pos:line="2012" pos:column="58">ToElement</name></name><argument_list pos:line="2012" pos:column="67">()</argument_list></call><op:operator pos:line="2012" pos:column="69">)</op:operator><op:operator pos:line="2012" pos:column="70">-&gt;</op:operator><call><name pos:line="2012" pos:column="72">Attribute</name><argument_list pos:line="2012" pos:column="81">(<argument><expr><call><name pos:line="2012" pos:column="82">TEXT</name><argument_list pos:line="2012" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="2012" pos:column="87">"internalID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2012" pos:column="102">&amp;</op:operator><name pos:line="2012" pos:column="103">internalID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="2014" pos:column="17">if <condition pos:line="2014" pos:column="20">(<expr><op:operator pos:line="2014" pos:column="21">!</op:operator><name pos:line="2014" pos:column="22">internalIDStr</name></expr>)</condition><then pos:line="2014" pos:column="36">
			<continue pos:line="2015" pos:column="25">continue;</continue></then></if>

		<comment type="line" pos:line="2017" pos:column="17">//Find the corresponding plugincommand and alter it, put the index in the list</comment>
		<decl_stmt><decl><type><name pos:line="2018" pos:column="17">int</name></type> <name pos:line="2018" pos:column="21">len</name> <init pos:line="2018" pos:column="25">= <expr><op:operator pos:line="2018" pos:column="27">(</op:operator><name pos:line="2018" pos:column="28">int</name><op:operator pos:line="2018" pos:column="31">)</op:operator><call><name><name pos:line="2018" pos:column="32">_pluginCommands</name><op:operator pos:line="2018" pos:column="47">.</op:operator><name pos:line="2018" pos:column="48">size</name></name><argument_list pos:line="2018" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="2019" pos:column="17">for(<init><decl><type><name pos:line="2019" pos:column="21">int</name></type> <name pos:line="2019" pos:column="25">i</name> <init pos:line="2019" pos:column="27">= <expr><lit:literal type="number" pos:line="2019" pos:column="29">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2019" pos:column="32">i</name> <op:operator pos:line="2019" pos:column="34">&lt;</op:operator> <name pos:line="2019" pos:column="36">len</name></expr>;</condition> <incr><expr><name pos:line="2019" pos:column="41">i</name><op:operator pos:line="2019" pos:column="42">++</op:operator></expr></incr>) 
		<block pos:line="2020" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2021" pos:column="25">PluginCmdShortcut</name> <type:modifier pos:line="2021" pos:column="43">&amp;</type:modifier></type> <name pos:line="2021" pos:column="45">pscOrig</name> <init pos:line="2021" pos:column="53">= <expr><name><name pos:line="2021" pos:column="55">_pluginCommands</name><index pos:line="2021" pos:column="70">[<expr><name pos:line="2021" pos:column="71">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<if pos:line="2022" pos:column="25">if <condition pos:line="2022" pos:column="28">(<expr><op:operator pos:line="2022" pos:column="29">!</op:operator><call><name pos:line="2022" pos:column="30">generic_strnicmp</name><argument_list pos:line="2022" pos:column="46">(<argument><expr><call><name><name pos:line="2022" pos:column="47">pscOrig</name><op:operator pos:line="2022" pos:column="54">.</op:operator><name pos:line="2022" pos:column="55">getModuleName</name></name><argument_list pos:line="2022" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2022" pos:column="72">moduleName</name></expr></argument>, <argument><expr><call><name pos:line="2022" pos:column="84">lstrlen</name><argument_list pos:line="2022" pos:column="91">(<argument><expr><name pos:line="2022" pos:column="92">moduleName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="2022" pos:column="105">&amp;&amp;</op:operator> <call><name><name pos:line="2022" pos:column="108">pscOrig</name><op:operator pos:line="2022" pos:column="115">.</op:operator><name pos:line="2022" pos:column="116">getInternalID</name></name><argument_list pos:line="2022" pos:column="129">()</argument_list></call> <op:operator pos:line="2022" pos:column="132">==</op:operator> <name pos:line="2022" pos:column="135">internalID</name></expr>)</condition><then pos:line="2022" pos:column="146"> 
			<block pos:line="2023" pos:column="25">{
				<comment type="line" pos:line="2024" pos:column="33">//Found matching command</comment>
				<expr_stmt><expr><call><name pos:line="2025" pos:column="33">getShortcuts</name><argument_list pos:line="2025" pos:column="45">(<argument><expr><name pos:line="2025" pos:column="46">childNode</name></expr></argument>, <argument><expr><name><name pos:line="2025" pos:column="57">_pluginCommands</name><index pos:line="2025" pos:column="72">[<expr><name pos:line="2025" pos:column="73">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="2026" pos:column="33">addPluginModifiedIndex</name><argument_list pos:line="2026" pos:column="55">(<argument><expr><name pos:line="2026" pos:column="56">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="2027" pos:column="33">break;</break>
			}</block></then></if>
		}</block></for>
	}</block></for>
}</block></function>

<function><type><name pos:line="2033" pos:column="1">void</name></type> <name><name pos:line="2033" pos:column="6">NppParameters</name><op:operator pos:line="2033" pos:column="19">::</op:operator><name pos:line="2033" pos:column="21">feedScintKeys</name></name><parameter_list pos:line="2033" pos:column="34">(<param><decl><type><name pos:line="2033" pos:column="35">TiXmlNode</name> <type:modifier pos:line="2033" pos:column="45">*</type:modifier></type><name pos:line="2033" pos:column="46">node</name></decl></param>)</parameter_list>
<block pos:line="2034" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2035" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2035" pos:column="19">*</type:modifier></type><name pos:line="2035" pos:column="20">scintKeysRoot</name> <init pos:line="2035" pos:column="34">= <expr><call><name><name pos:line="2035" pos:column="36">node</name><op:operator pos:line="2035" pos:column="40">-&gt;</op:operator><name pos:line="2035" pos:column="42">FirstChildElement</name></name><argument_list pos:line="2035" pos:column="59">(<argument><expr><call><name pos:line="2035" pos:column="60">TEXT</name><argument_list pos:line="2035" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2035" pos:column="65">"ScintillaKeys"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2036" pos:column="9">if <condition pos:line="2036" pos:column="12">(<expr><op:operator pos:line="2036" pos:column="13">!</op:operator><name pos:line="2036" pos:column="14">scintKeysRoot</name></expr>)</condition><then pos:line="2036" pos:column="28"> <return pos:line="2036" pos:column="29">return;</return></then></if>

	<for pos:line="2038" pos:column="9">for (<init><decl><type><name pos:line="2038" pos:column="14">TiXmlNode</name> <type:modifier pos:line="2038" pos:column="24">*</type:modifier></type><name pos:line="2038" pos:column="25">childNode</name> <init pos:line="2038" pos:column="35">= <expr><call><name><name pos:line="2038" pos:column="37">scintKeysRoot</name><op:operator pos:line="2038" pos:column="50">-&gt;</op:operator><name pos:line="2038" pos:column="52">FirstChildElement</name></name><argument_list pos:line="2038" pos:column="69">(<argument><expr><call><name pos:line="2038" pos:column="70">TEXT</name><argument_list pos:line="2038" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="2038" pos:column="75">"ScintKey"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="2039" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="2040" pos:column="17">childNode</name> <op:operator pos:line="2040" pos:column="27">=</op:operator> <call><name><name pos:line="2040" pos:column="29">childNode</name><op:operator pos:line="2040" pos:column="38">-&gt;</op:operator><name pos:line="2040" pos:column="40">NextSibling</name></name><argument_list pos:line="2040" pos:column="51">(<argument><expr><call><name pos:line="2040" pos:column="52">TEXT</name><argument_list pos:line="2040" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2040" pos:column="57">"ScintKey"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="2041" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2042" pos:column="17">int</name></type> <name pos:line="2042" pos:column="21">scintKey</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2043" pos:column="17">const</specifier> <name pos:line="2043" pos:column="23">TCHAR</name> <type:modifier pos:line="2043" pos:column="29">*</type:modifier></type><name pos:line="2043" pos:column="30">keyStr</name> <init pos:line="2043" pos:column="37">= <expr><op:operator pos:line="2043" pos:column="39">(</op:operator><call><name><name pos:line="2043" pos:column="40">childNode</name><op:operator pos:line="2043" pos:column="49">-&gt;</op:operator><name pos:line="2043" pos:column="51">ToElement</name></name><argument_list pos:line="2043" pos:column="60">()</argument_list></call><op:operator pos:line="2043" pos:column="62">)</op:operator><op:operator pos:line="2043" pos:column="63">-&gt;</op:operator><call><name pos:line="2043" pos:column="65">Attribute</name><argument_list pos:line="2043" pos:column="74">(<argument><expr><call><name pos:line="2043" pos:column="75">TEXT</name><argument_list pos:line="2043" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="2043" pos:column="80">"ScintID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2043" pos:column="92">&amp;</op:operator><name pos:line="2043" pos:column="93">scintKey</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2044" pos:column="17">if <condition pos:line="2044" pos:column="20">(<expr><op:operator pos:line="2044" pos:column="21">!</op:operator><name pos:line="2044" pos:column="22">keyStr</name></expr>)</condition><then pos:line="2044" pos:column="29">
			<continue pos:line="2045" pos:column="25">continue;</continue></then></if>

		<decl_stmt><decl><type><name pos:line="2047" pos:column="17">int</name></type> <name pos:line="2047" pos:column="21">menuID</name></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="2048" pos:column="17">keyStr</name> <op:operator pos:line="2048" pos:column="24">=</op:operator> <op:operator pos:line="2048" pos:column="26">(</op:operator><call><name><name pos:line="2048" pos:column="27">childNode</name><op:operator pos:line="2048" pos:column="36">-&gt;</op:operator><name pos:line="2048" pos:column="38">ToElement</name></name><argument_list pos:line="2048" pos:column="47">()</argument_list></call><op:operator pos:line="2048" pos:column="49">)</op:operator><op:operator pos:line="2048" pos:column="50">-&gt;</op:operator><call><name pos:line="2048" pos:column="52">Attribute</name><argument_list pos:line="2048" pos:column="61">(<argument><expr><call><name pos:line="2048" pos:column="62">TEXT</name><argument_list pos:line="2048" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2048" pos:column="67">"menuCmdID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2048" pos:column="81">&amp;</op:operator><name pos:line="2048" pos:column="82">menuID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2049" pos:column="17">if <condition pos:line="2049" pos:column="20">(<expr><op:operator pos:line="2049" pos:column="21">!</op:operator><name pos:line="2049" pos:column="22">keyStr</name></expr>)</condition><then pos:line="2049" pos:column="29">
			<continue pos:line="2050" pos:column="25">continue;</continue></then></if>
		
		<comment type="line" pos:line="2052" pos:column="17">//Find the corresponding scintillacommand and alter it, put the index in the list</comment>
		<decl_stmt><decl><type><name pos:line="2053" pos:column="17">size_t</name></type> <name pos:line="2053" pos:column="24">len</name> <init pos:line="2053" pos:column="28">= <expr><call><name><name pos:line="2053" pos:column="30">_scintillaKeyCommands</name><op:operator pos:line="2053" pos:column="51">.</op:operator><name pos:line="2053" pos:column="52">size</name></name><argument_list pos:line="2053" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="2054" pos:column="17">for(<init><decl><type><name pos:line="2054" pos:column="21">size_t</name></type> <name pos:line="2054" pos:column="28">i</name> <init pos:line="2054" pos:column="30">= <expr><lit:literal type="number" pos:line="2054" pos:column="32">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2054" pos:column="35">i</name> <op:operator pos:line="2054" pos:column="37">&lt;</op:operator> <name pos:line="2054" pos:column="39">len</name></expr>;</condition> <incr><expr><name pos:line="2054" pos:column="44">i</name><op:operator pos:line="2054" pos:column="45">++</op:operator></expr></incr>) 
		<block pos:line="2055" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2056" pos:column="25">ScintillaKeyMap</name> <type:modifier pos:line="2056" pos:column="41">&amp;</type:modifier></type> <name pos:line="2056" pos:column="43">skmOrig</name> <init pos:line="2056" pos:column="51">= <expr><name><name pos:line="2056" pos:column="53">_scintillaKeyCommands</name><index pos:line="2056" pos:column="74">[<expr><name pos:line="2056" pos:column="75">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<if pos:line="2057" pos:column="25">if <condition pos:line="2057" pos:column="28">(<expr><call><name><name pos:line="2057" pos:column="29">skmOrig</name><op:operator pos:line="2057" pos:column="36">.</op:operator><name pos:line="2057" pos:column="37">getScintillaKeyID</name></name><argument_list pos:line="2057" pos:column="54">()</argument_list></call> <op:operator pos:line="2057" pos:column="57">==</op:operator> <op:operator pos:line="2057" pos:column="60">(</op:operator><name pos:line="2057" pos:column="61">unsigned</name> <name pos:line="2057" pos:column="70">long</name><op:operator pos:line="2057" pos:column="74">)</op:operator><name pos:line="2057" pos:column="75">scintKey</name> <op:operator pos:line="2057" pos:column="84">&amp;&amp;</op:operator> <call><name><name pos:line="2057" pos:column="87">skmOrig</name><op:operator pos:line="2057" pos:column="94">.</op:operator><name pos:line="2057" pos:column="95">getMenuCmdID</name></name><argument_list pos:line="2057" pos:column="107">()</argument_list></call> <op:operator pos:line="2057" pos:column="110">==</op:operator> <name pos:line="2057" pos:column="113">menuID</name></expr>)</condition><then pos:line="2057" pos:column="120">
			<block pos:line="2058" pos:column="25">{
				<comment type="line" pos:line="2059" pos:column="33">//Found matching command</comment>
				<expr_stmt><expr><name><name pos:line="2060" pos:column="33">_scintillaKeyCommands</name><index pos:line="2060" pos:column="54">[<expr><name pos:line="2060" pos:column="55">i</name></expr>]</index></name><op:operator pos:line="2060" pos:column="57">.</op:operator><call><name pos:line="2060" pos:column="58">clearDups</name><argument_list pos:line="2060" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="2061" pos:column="33">getShortcuts</name><argument_list pos:line="2061" pos:column="45">(<argument><expr><name pos:line="2061" pos:column="46">childNode</name></expr></argument>, <argument><expr><name><name pos:line="2061" pos:column="57">_scintillaKeyCommands</name><index pos:line="2061" pos:column="78">[<expr><name pos:line="2061" pos:column="79">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="2062" pos:column="33">_scintillaKeyCommands</name><index pos:line="2062" pos:column="54">[<expr><name pos:line="2062" pos:column="55">i</name></expr>]</index></name><op:operator pos:line="2062" pos:column="57">.</op:operator><call><name pos:line="2062" pos:column="58">setKeyComboByIndex</name><argument_list pos:line="2062" pos:column="76">(<argument><expr><lit:literal type="number" pos:line="2062" pos:column="77">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="2062" pos:column="80">_scintillaKeyCommands</name><index pos:line="2062" pos:column="101">[<expr><name pos:line="2062" pos:column="102">i</name></expr>]</index></name><op:operator pos:line="2062" pos:column="104">.</op:operator><call><name pos:line="2062" pos:column="105">getKeyCombo</name><argument_list pos:line="2062" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="2063" pos:column="33">addScintillaModifiedIndex</name><argument_list pos:line="2063" pos:column="58">(<argument><expr><name pos:line="2063" pos:column="59">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="2064" pos:column="33">KeyCombo</name></type> <name pos:line="2064" pos:column="42">kc</name></decl>;</decl_stmt>
				<for pos:line="2065" pos:column="33">for (<init><decl><type><name pos:line="2065" pos:column="38">TiXmlNode</name> <type:modifier pos:line="2065" pos:column="48">*</type:modifier></type><name pos:line="2065" pos:column="49">nextNode</name> <init pos:line="2065" pos:column="58">= <expr><call><name><name pos:line="2065" pos:column="60">childNode</name><op:operator pos:line="2065" pos:column="69">-&gt;</op:operator><name pos:line="2065" pos:column="71">FirstChildElement</name></name><argument_list pos:line="2065" pos:column="88">(<argument><expr><call><name pos:line="2065" pos:column="89">TEXT</name><argument_list pos:line="2065" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="2065" pos:column="94">"NextKey"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
					<condition><expr><name pos:line="2066" pos:column="41">nextNode</name></expr> ;</condition>
					<incr><expr><name pos:line="2067" pos:column="41">nextNode</name> <op:operator pos:line="2067" pos:column="50">=</op:operator> <call><name><name pos:line="2067" pos:column="52">childNode</name><op:operator pos:line="2067" pos:column="61">-&gt;</op:operator><name pos:line="2067" pos:column="63">NextSibling</name></name><argument_list pos:line="2067" pos:column="74">(<argument><expr><call><name pos:line="2067" pos:column="75">TEXT</name><argument_list pos:line="2067" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="2067" pos:column="80">"NextKey"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
				<block pos:line="2068" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="2069" pos:column="41">const</specifier> <name pos:line="2069" pos:column="47">TCHAR</name> <type:modifier pos:line="2069" pos:column="53">*</type:modifier></type><name pos:line="2069" pos:column="54">str</name> <init pos:line="2069" pos:column="58">= <expr><op:operator pos:line="2069" pos:column="60">(</op:operator><call><name><name pos:line="2069" pos:column="61">nextNode</name><op:operator pos:line="2069" pos:column="69">-&gt;</op:operator><name pos:line="2069" pos:column="71">ToElement</name></name><argument_list pos:line="2069" pos:column="80">()</argument_list></call><op:operator pos:line="2069" pos:column="82">)</op:operator><op:operator pos:line="2069" pos:column="83">-&gt;</op:operator><call><name pos:line="2069" pos:column="85">Attribute</name><argument_list pos:line="2069" pos:column="94">(<argument><expr><call><name pos:line="2069" pos:column="95">TEXT</name><argument_list pos:line="2069" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="2069" pos:column="100">"Ctrl"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="2070" pos:column="41">if <condition pos:line="2070" pos:column="44">(<expr><op:operator pos:line="2070" pos:column="45">!</op:operator><name pos:line="2070" pos:column="46">str</name></expr>)</condition><then pos:line="2070" pos:column="50">
						<continue pos:line="2071" pos:column="49">continue;</continue></then></if>
					<expr_stmt><expr><name><name pos:line="2072" pos:column="41">kc</name><op:operator pos:line="2072" pos:column="43">.</op:operator><name pos:line="2072" pos:column="44">_isCtrl</name></name> <op:operator pos:line="2072" pos:column="52">=</op:operator> <op:operator pos:line="2072" pos:column="54">!</op:operator><call><name pos:line="2072" pos:column="55">lstrcmp</name><argument_list pos:line="2072" pos:column="62">(<argument><expr><call><name pos:line="2072" pos:column="63">TEXT</name><argument_list pos:line="2072" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="2072" pos:column="68">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2072" pos:column="76">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><name pos:line="2074" pos:column="41">str</name> <op:operator pos:line="2074" pos:column="45">=</op:operator> <op:operator pos:line="2074" pos:column="47">(</op:operator><call><name><name pos:line="2074" pos:column="48">nextNode</name><op:operator pos:line="2074" pos:column="56">-&gt;</op:operator><name pos:line="2074" pos:column="58">ToElement</name></name><argument_list pos:line="2074" pos:column="67">()</argument_list></call><op:operator pos:line="2074" pos:column="69">)</op:operator><op:operator pos:line="2074" pos:column="70">-&gt;</op:operator><call><name pos:line="2074" pos:column="72">Attribute</name><argument_list pos:line="2074" pos:column="81">(<argument><expr><call><name pos:line="2074" pos:column="82">TEXT</name><argument_list pos:line="2074" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="2074" pos:column="87">"Alt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="2075" pos:column="41">if <condition pos:line="2075" pos:column="44">(<expr><op:operator pos:line="2075" pos:column="45">!</op:operator><name pos:line="2075" pos:column="46">str</name></expr>)</condition><then pos:line="2075" pos:column="50">
						<continue pos:line="2076" pos:column="49">continue;</continue></then></if>
					<expr_stmt><expr><name><name pos:line="2077" pos:column="41">kc</name><op:operator pos:line="2077" pos:column="43">.</op:operator><name pos:line="2077" pos:column="44">_isAlt</name></name> <op:operator pos:line="2077" pos:column="51">=</op:operator> <op:operator pos:line="2077" pos:column="53">!</op:operator><call><name pos:line="2077" pos:column="54">lstrcmp</name><argument_list pos:line="2077" pos:column="61">(<argument><expr><call><name pos:line="2077" pos:column="62">TEXT</name><argument_list pos:line="2077" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2077" pos:column="67">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2077" pos:column="75">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><name pos:line="2079" pos:column="41">str</name> <op:operator pos:line="2079" pos:column="45">=</op:operator> <op:operator pos:line="2079" pos:column="47">(</op:operator><call><name><name pos:line="2079" pos:column="48">nextNode</name><op:operator pos:line="2079" pos:column="56">-&gt;</op:operator><name pos:line="2079" pos:column="58">ToElement</name></name><argument_list pos:line="2079" pos:column="67">()</argument_list></call><op:operator pos:line="2079" pos:column="69">)</op:operator><op:operator pos:line="2079" pos:column="70">-&gt;</op:operator><call><name pos:line="2079" pos:column="72">Attribute</name><argument_list pos:line="2079" pos:column="81">(<argument><expr><call><name pos:line="2079" pos:column="82">TEXT</name><argument_list pos:line="2079" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="2079" pos:column="87">"Shift"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="2080" pos:column="41">if <condition pos:line="2080" pos:column="44">(<expr><op:operator pos:line="2080" pos:column="45">!</op:operator><name pos:line="2080" pos:column="46">str</name></expr>)</condition><then pos:line="2080" pos:column="50">
						<continue pos:line="2081" pos:column="49">continue;</continue></then></if>
					<expr_stmt><expr><name><name pos:line="2082" pos:column="41">kc</name><op:operator pos:line="2082" pos:column="43">.</op:operator><name pos:line="2082" pos:column="44">_isShift</name></name> <op:operator pos:line="2082" pos:column="53">=</op:operator> <op:operator pos:line="2082" pos:column="55">!</op:operator><call><name pos:line="2082" pos:column="56">lstrcmp</name><argument_list pos:line="2082" pos:column="63">(<argument><expr><call><name pos:line="2082" pos:column="64">TEXT</name><argument_list pos:line="2082" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="2082" pos:column="69">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2082" pos:column="77">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<decl_stmt><decl><type><name pos:line="2084" pos:column="41">int</name></type> <name pos:line="2084" pos:column="45">key</name></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="2085" pos:column="41">str</name> <op:operator pos:line="2085" pos:column="45">=</op:operator> <op:operator pos:line="2085" pos:column="47">(</op:operator><call><name><name pos:line="2085" pos:column="48">nextNode</name><op:operator pos:line="2085" pos:column="56">-&gt;</op:operator><name pos:line="2085" pos:column="58">ToElement</name></name><argument_list pos:line="2085" pos:column="67">()</argument_list></call><op:operator pos:line="2085" pos:column="69">)</op:operator><op:operator pos:line="2085" pos:column="70">-&gt;</op:operator><call><name pos:line="2085" pos:column="72">Attribute</name><argument_list pos:line="2085" pos:column="81">(<argument><expr><call><name pos:line="2085" pos:column="82">TEXT</name><argument_list pos:line="2085" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="2085" pos:column="87">"Key"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2085" pos:column="95">&amp;</op:operator><name pos:line="2085" pos:column="96">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="2086" pos:column="41">if <condition pos:line="2086" pos:column="44">(<expr><op:operator pos:line="2086" pos:column="45">!</op:operator><name pos:line="2086" pos:column="46">str</name></expr>)</condition><then pos:line="2086" pos:column="50">
						<continue pos:line="2087" pos:column="49">continue;</continue></then></if>
					<expr_stmt><expr><name><name pos:line="2088" pos:column="41">kc</name><op:operator pos:line="2088" pos:column="43">.</op:operator><name pos:line="2088" pos:column="44">_key</name></name> <op:operator pos:line="2088" pos:column="49">=</op:operator> <op:operator pos:line="2088" pos:column="51">(</op:operator><name pos:line="2088" pos:column="52">unsigned</name> <name pos:line="2088" pos:column="61">char</name><op:operator pos:line="2088" pos:column="65">)</op:operator><name pos:line="2088" pos:column="66">key</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="2089" pos:column="41">_scintillaKeyCommands</name><index pos:line="2089" pos:column="62">[<expr><name pos:line="2089" pos:column="63">i</name></expr>]</index></name><op:operator pos:line="2089" pos:column="65">.</op:operator><call><name pos:line="2089" pos:column="66">addKeyCombo</name><argument_list pos:line="2089" pos:column="77">(<argument><expr><name pos:line="2089" pos:column="78">kc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></for>
				<break pos:line="2091" pos:column="33">break;</break>
			}</block></then></if>
		}</block></for>
	}</block></for>
}</block></function>

<function><type><name pos:line="2097" pos:column="1">bool</name></type> <name><name pos:line="2097" pos:column="6">NppParameters</name><op:operator pos:line="2097" pos:column="19">::</op:operator><name pos:line="2097" pos:column="21">feedBlacklist</name></name><parameter_list pos:line="2097" pos:column="34">(<param><decl><type><name pos:line="2097" pos:column="35">TiXmlNode</name> <type:modifier pos:line="2097" pos:column="45">*</type:modifier></type><name pos:line="2097" pos:column="46">node</name></decl></param>)</parameter_list>
<block pos:line="2098" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2099" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2099" pos:column="19">*</type:modifier></type><name pos:line="2099" pos:column="20">blackListRoot</name> <init pos:line="2099" pos:column="34">= <expr><call><name><name pos:line="2099" pos:column="36">node</name><op:operator pos:line="2099" pos:column="40">-&gt;</op:operator><name pos:line="2099" pos:column="42">FirstChildElement</name></name><argument_list pos:line="2099" pos:column="59">(<argument><expr><call><name pos:line="2099" pos:column="60">TEXT</name><argument_list pos:line="2099" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2099" pos:column="65">"PluginBlackList"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2100" pos:column="9">if <condition pos:line="2100" pos:column="12">(<expr><op:operator pos:line="2100" pos:column="13">!</op:operator><name pos:line="2100" pos:column="14">blackListRoot</name></expr>)</condition><then pos:line="2100" pos:column="28"> <return pos:line="2100" pos:column="29">return <expr><lit:literal type="boolean" pos:line="2100" pos:column="36">false</lit:literal></expr>;</return></then></if>

	<for pos:line="2102" pos:column="9">for (<init><decl><type><name pos:line="2102" pos:column="14">TiXmlNode</name> <type:modifier pos:line="2102" pos:column="24">*</type:modifier></type><name pos:line="2102" pos:column="25">childNode</name> <init pos:line="2102" pos:column="35">= <expr><call><name><name pos:line="2102" pos:column="37">blackListRoot</name><op:operator pos:line="2102" pos:column="50">-&gt;</op:operator><name pos:line="2102" pos:column="52">FirstChildElement</name></name><argument_list pos:line="2102" pos:column="69">(<argument><expr><call><name pos:line="2102" pos:column="70">TEXT</name><argument_list pos:line="2102" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="2102" pos:column="75">"Plugin"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="2103" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="2104" pos:column="17">childNode</name> <op:operator pos:line="2104" pos:column="27">=</op:operator> <call><name><name pos:line="2104" pos:column="29">childNode</name><op:operator pos:line="2104" pos:column="38">-&gt;</op:operator><name pos:line="2104" pos:column="40">NextSibling</name></name><argument_list pos:line="2104" pos:column="51">(<argument><expr><call><name pos:line="2104" pos:column="52">TEXT</name><argument_list pos:line="2104" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2104" pos:column="57">"Plugin"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="2105" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="2106" pos:column="9">const</specifier> <name pos:line="2106" pos:column="15">TCHAR</name> <type:modifier pos:line="2106" pos:column="21">*</type:modifier></type><name pos:line="2106" pos:column="22">name</name> <init pos:line="2106" pos:column="27">= <expr><op:operator pos:line="2106" pos:column="29">(</op:operator><call><name><name pos:line="2106" pos:column="30">childNode</name><op:operator pos:line="2106" pos:column="39">-&gt;</op:operator><name pos:line="2106" pos:column="41">ToElement</name></name><argument_list pos:line="2106" pos:column="50">()</argument_list></call><op:operator pos:line="2106" pos:column="52">)</op:operator><op:operator pos:line="2106" pos:column="53">-&gt;</op:operator><call><name pos:line="2106" pos:column="55">Attribute</name><argument_list pos:line="2106" pos:column="64">(<argument><expr><call><name pos:line="2106" pos:column="65">TEXT</name><argument_list pos:line="2106" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2106" pos:column="70">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <if pos:line="2107" pos:column="13">if <condition pos:line="2107" pos:column="16">(<expr><name pos:line="2107" pos:column="17">name</name></expr>)</condition><then pos:line="2107" pos:column="22">
        <block pos:line="2108" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="2109" pos:column="13">_blacklist</name><op:operator pos:line="2109" pos:column="23">.</op:operator><name pos:line="2109" pos:column="24">push_back</name></name><argument_list pos:line="2109" pos:column="33">(<argument><expr><name pos:line="2109" pos:column="34">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
    <return pos:line="2112" pos:column="5">return <expr><lit:literal type="boolean" pos:line="2112" pos:column="12">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2115" pos:column="1">bool</name></type> <name><name pos:line="2115" pos:column="6">NppParameters</name><op:operator pos:line="2115" pos:column="19">::</op:operator><name pos:line="2115" pos:column="21">getShortcuts</name></name><parameter_list pos:line="2115" pos:column="33">(<param><decl><type><name pos:line="2115" pos:column="34">TiXmlNode</name> <type:modifier pos:line="2115" pos:column="44">*</type:modifier></type><name pos:line="2115" pos:column="45">node</name></decl></param>, <param><decl><type><name pos:line="2115" pos:column="51">Shortcut</name> <type:modifier pos:line="2115" pos:column="60">&amp;</type:modifier></type> <name pos:line="2115" pos:column="62">sc</name></decl></param>)</parameter_list>
<block pos:line="2116" pos:column="1">{
	<if pos:line="2117" pos:column="9">if <condition pos:line="2117" pos:column="12">(<expr><op:operator pos:line="2117" pos:column="13">!</op:operator><name pos:line="2117" pos:column="14">node</name></expr>)</condition><then pos:line="2117" pos:column="19"> <return pos:line="2117" pos:column="20">return <expr><lit:literal type="boolean" pos:line="2117" pos:column="27">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><specifier pos:line="2119" pos:column="9">const</specifier> <name pos:line="2119" pos:column="15">TCHAR</name> <type:modifier pos:line="2119" pos:column="21">*</type:modifier></type><name pos:line="2119" pos:column="22">name</name> <init pos:line="2119" pos:column="27">= <expr><op:operator pos:line="2119" pos:column="29">(</op:operator><call><name><name pos:line="2119" pos:column="30">node</name><op:operator pos:line="2119" pos:column="34">-&gt;</op:operator><name pos:line="2119" pos:column="36">ToElement</name></name><argument_list pos:line="2119" pos:column="45">()</argument_list></call><op:operator pos:line="2119" pos:column="47">)</op:operator><op:operator pos:line="2119" pos:column="48">-&gt;</op:operator><call><name pos:line="2119" pos:column="50">Attribute</name><argument_list pos:line="2119" pos:column="59">(<argument><expr><call><name pos:line="2119" pos:column="60">TEXT</name><argument_list pos:line="2119" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2119" pos:column="65">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2120" pos:column="9">if <condition pos:line="2120" pos:column="12">(<expr><op:operator pos:line="2120" pos:column="13">!</op:operator><name pos:line="2120" pos:column="14">name</name></expr>)</condition><then pos:line="2120" pos:column="19">
		<expr_stmt><expr><name pos:line="2121" pos:column="17">name</name> <op:operator pos:line="2121" pos:column="22">=</op:operator> <call><name pos:line="2121" pos:column="24">TEXT</name><argument_list pos:line="2121" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="2121" pos:column="29">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="2123" pos:column="9">bool</name></type> <name pos:line="2123" pos:column="14">isCtrl</name> <init pos:line="2123" pos:column="21">= <expr><lit:literal type="boolean" pos:line="2123" pos:column="23">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2124" pos:column="9">const</specifier> <name pos:line="2124" pos:column="15">TCHAR</name> <type:modifier pos:line="2124" pos:column="21">*</type:modifier></type><name pos:line="2124" pos:column="22">isCtrlStr</name> <init pos:line="2124" pos:column="32">= <expr><op:operator pos:line="2124" pos:column="34">(</op:operator><call><name><name pos:line="2124" pos:column="35">node</name><op:operator pos:line="2124" pos:column="39">-&gt;</op:operator><name pos:line="2124" pos:column="41">ToElement</name></name><argument_list pos:line="2124" pos:column="50">()</argument_list></call><op:operator pos:line="2124" pos:column="52">)</op:operator><op:operator pos:line="2124" pos:column="53">-&gt;</op:operator><call><name pos:line="2124" pos:column="55">Attribute</name><argument_list pos:line="2124" pos:column="64">(<argument><expr><call><name pos:line="2124" pos:column="65">TEXT</name><argument_list pos:line="2124" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2124" pos:column="70">"Ctrl"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2125" pos:column="9">if <condition pos:line="2125" pos:column="12">(<expr><name pos:line="2125" pos:column="13">isCtrlStr</name></expr>)</condition><then pos:line="2125" pos:column="23">
		<expr_stmt><expr><name pos:line="2126" pos:column="17">isCtrl</name> <op:operator pos:line="2126" pos:column="24">=</op:operator> <op:operator pos:line="2126" pos:column="26">!</op:operator><call><name pos:line="2126" pos:column="27">lstrcmp</name><argument_list pos:line="2126" pos:column="34">(<argument><expr><call><name pos:line="2126" pos:column="35">TEXT</name><argument_list pos:line="2126" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="2126" pos:column="40">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2126" pos:column="48">isCtrlStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="2128" pos:column="9">bool</name></type> <name pos:line="2128" pos:column="14">isAlt</name> <init pos:line="2128" pos:column="20">= <expr><lit:literal type="boolean" pos:line="2128" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2129" pos:column="9">const</specifier> <name pos:line="2129" pos:column="15">TCHAR</name> <type:modifier pos:line="2129" pos:column="21">*</type:modifier></type><name pos:line="2129" pos:column="22">isAltStr</name> <init pos:line="2129" pos:column="31">= <expr><op:operator pos:line="2129" pos:column="33">(</op:operator><call><name><name pos:line="2129" pos:column="34">node</name><op:operator pos:line="2129" pos:column="38">-&gt;</op:operator><name pos:line="2129" pos:column="40">ToElement</name></name><argument_list pos:line="2129" pos:column="49">()</argument_list></call><op:operator pos:line="2129" pos:column="51">)</op:operator><op:operator pos:line="2129" pos:column="52">-&gt;</op:operator><call><name pos:line="2129" pos:column="54">Attribute</name><argument_list pos:line="2129" pos:column="63">(<argument><expr><call><name pos:line="2129" pos:column="64">TEXT</name><argument_list pos:line="2129" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="2129" pos:column="69">"Alt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2130" pos:column="9">if <condition pos:line="2130" pos:column="12">(<expr><name pos:line="2130" pos:column="13">isAltStr</name></expr>)</condition><then pos:line="2130" pos:column="22">
		<expr_stmt><expr><name pos:line="2131" pos:column="17">isAlt</name> <op:operator pos:line="2131" pos:column="23">=</op:operator> <op:operator pos:line="2131" pos:column="25">!</op:operator><call><name pos:line="2131" pos:column="26">lstrcmp</name><argument_list pos:line="2131" pos:column="33">(<argument><expr><call><name pos:line="2131" pos:column="34">TEXT</name><argument_list pos:line="2131" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="2131" pos:column="39">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2131" pos:column="47">isAltStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="2133" pos:column="9">bool</name></type> <name pos:line="2133" pos:column="14">isShift</name> <init pos:line="2133" pos:column="22">= <expr><lit:literal type="boolean" pos:line="2133" pos:column="24">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2134" pos:column="9">const</specifier> <name pos:line="2134" pos:column="15">TCHAR</name> <type:modifier pos:line="2134" pos:column="21">*</type:modifier></type><name pos:line="2134" pos:column="22">isShiftStr</name> <init pos:line="2134" pos:column="33">= <expr><op:operator pos:line="2134" pos:column="35">(</op:operator><call><name><name pos:line="2134" pos:column="36">node</name><op:operator pos:line="2134" pos:column="40">-&gt;</op:operator><name pos:line="2134" pos:column="42">ToElement</name></name><argument_list pos:line="2134" pos:column="51">()</argument_list></call><op:operator pos:line="2134" pos:column="53">)</op:operator><op:operator pos:line="2134" pos:column="54">-&gt;</op:operator><call><name pos:line="2134" pos:column="56">Attribute</name><argument_list pos:line="2134" pos:column="65">(<argument><expr><call><name pos:line="2134" pos:column="66">TEXT</name><argument_list pos:line="2134" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="2134" pos:column="71">"Shift"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2135" pos:column="9">if <condition pos:line="2135" pos:column="12">(<expr><name pos:line="2135" pos:column="13">isShiftStr</name></expr>)</condition><then pos:line="2135" pos:column="24">
		<expr_stmt><expr><name pos:line="2136" pos:column="17">isShift</name> <op:operator pos:line="2136" pos:column="25">=</op:operator> <op:operator pos:line="2136" pos:column="27">!</op:operator><call><name pos:line="2136" pos:column="28">lstrcmp</name><argument_list pos:line="2136" pos:column="35">(<argument><expr><call><name pos:line="2136" pos:column="36">TEXT</name><argument_list pos:line="2136" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="2136" pos:column="41">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2136" pos:column="49">isShiftStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><name pos:line="2138" pos:column="9">int</name></type> <name pos:line="2138" pos:column="13">key</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2139" pos:column="9">const</specifier> <name pos:line="2139" pos:column="15">TCHAR</name> <type:modifier pos:line="2139" pos:column="21">*</type:modifier></type><name pos:line="2139" pos:column="22">keyStr</name> <init pos:line="2139" pos:column="29">= <expr><op:operator pos:line="2139" pos:column="31">(</op:operator><call><name><name pos:line="2139" pos:column="32">node</name><op:operator pos:line="2139" pos:column="36">-&gt;</op:operator><name pos:line="2139" pos:column="38">ToElement</name></name><argument_list pos:line="2139" pos:column="47">()</argument_list></call><op:operator pos:line="2139" pos:column="49">)</op:operator><op:operator pos:line="2139" pos:column="50">-&gt;</op:operator><call><name pos:line="2139" pos:column="52">Attribute</name><argument_list pos:line="2139" pos:column="61">(<argument><expr><call><name pos:line="2139" pos:column="62">TEXT</name><argument_list pos:line="2139" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2139" pos:column="67">"Key"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2139" pos:column="75">&amp;</op:operator><name pos:line="2139" pos:column="76">key</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2140" pos:column="9">if <condition pos:line="2140" pos:column="12">(<expr><op:operator pos:line="2140" pos:column="13">!</op:operator><name pos:line="2140" pos:column="14">keyStr</name></expr>)</condition><then pos:line="2140" pos:column="21">
		<return pos:line="2141" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2141" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><name pos:line="2143" pos:column="9">sc</name> <op:operator pos:line="2143" pos:column="12">=</op:operator> <call><name pos:line="2143" pos:column="14">Shortcut</name><argument_list pos:line="2143" pos:column="22">(<argument><expr><name pos:line="2143" pos:column="23">name</name></expr></argument>, <argument><expr><name pos:line="2143" pos:column="29">isCtrl</name></expr></argument>, <argument><expr><name pos:line="2143" pos:column="37">isAlt</name></expr></argument>, <argument><expr><name pos:line="2143" pos:column="44">isShift</name></expr></argument>, <argument><expr><op:operator pos:line="2143" pos:column="53">(</op:operator><name pos:line="2143" pos:column="54">unsigned</name> <name pos:line="2143" pos:column="63">char</name><op:operator pos:line="2143" pos:column="67">)</op:operator><name pos:line="2143" pos:column="68">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2144" pos:column="9">return <expr><lit:literal type="boolean" pos:line="2144" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="2148" pos:column="1">bool</name></type> <name><name pos:line="2148" pos:column="6">NppParameters</name><op:operator pos:line="2148" pos:column="19">::</op:operator><name pos:line="2148" pos:column="21">feedUserLang</name></name><parameter_list pos:line="2148" pos:column="33">(<param><decl><type><name pos:line="2148" pos:column="34">TiXmlNode</name> <type:modifier pos:line="2148" pos:column="44">*</type:modifier></type><name pos:line="2148" pos:column="45">node</name></decl></param>)</parameter_list>
<block pos:line="2149" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="2150" pos:column="5">bool</name></type> <name pos:line="2150" pos:column="10">isEverythingOK</name> <init pos:line="2150" pos:column="25">= <expr><lit:literal type="boolean" pos:line="2150" pos:column="27">true</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2151" pos:column="5">bool</name></type> <name pos:line="2151" pos:column="10">hasFoundElement</name> <init pos:line="2151" pos:column="26">= <expr><lit:literal type="boolean" pos:line="2151" pos:column="28">false</lit:literal></expr></init></decl>;</decl_stmt>

	<for pos:line="2153" pos:column="9">for (<init><decl><type><name pos:line="2153" pos:column="14">TiXmlNode</name> <type:modifier pos:line="2153" pos:column="24">*</type:modifier></type><name pos:line="2153" pos:column="25">childNode</name> <init pos:line="2153" pos:column="35">= <expr><call><name><name pos:line="2153" pos:column="37">node</name><op:operator pos:line="2153" pos:column="41">-&gt;</op:operator><name pos:line="2153" pos:column="43">FirstChildElement</name></name><argument_list pos:line="2153" pos:column="60">(<argument><expr><call><name pos:line="2153" pos:column="61">TEXT</name><argument_list pos:line="2153" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="2153" pos:column="66">"UserLang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="2154" pos:column="17">childNode</name> <op:operator pos:line="2154" pos:column="27">&amp;&amp;</op:operator> <op:operator pos:line="2154" pos:column="30">(</op:operator><name pos:line="2154" pos:column="31">_nbUserLang</name> <op:operator pos:line="2154" pos:column="43">&lt;</op:operator> <name pos:line="2154" pos:column="45">NB_MAX_USER_LANG</name><op:operator pos:line="2154" pos:column="61">)</op:operator></expr>;</condition>
		<incr><expr><name pos:line="2155" pos:column="17">childNode</name> <op:operator pos:line="2155" pos:column="27">=</op:operator> <call><name><name pos:line="2155" pos:column="29">childNode</name><op:operator pos:line="2155" pos:column="38">-&gt;</op:operator><name pos:line="2155" pos:column="40">NextSibling</name></name><argument_list pos:line="2155" pos:column="51">(<argument><expr><call><name pos:line="2155" pos:column="52">TEXT</name><argument_list pos:line="2155" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2155" pos:column="57">"UserLang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="2156" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="2157" pos:column="17">const</specifier> <name pos:line="2157" pos:column="23">TCHAR</name> <type:modifier pos:line="2157" pos:column="29">*</type:modifier></type><name pos:line="2157" pos:column="30">name</name> <init pos:line="2157" pos:column="35">= <expr><op:operator pos:line="2157" pos:column="37">(</op:operator><call><name><name pos:line="2157" pos:column="38">childNode</name><op:operator pos:line="2157" pos:column="47">-&gt;</op:operator><name pos:line="2157" pos:column="49">ToElement</name></name><argument_list pos:line="2157" pos:column="58">()</argument_list></call><op:operator pos:line="2157" pos:column="60">)</op:operator><op:operator pos:line="2157" pos:column="61">-&gt;</op:operator><call><name pos:line="2157" pos:column="63">Attribute</name><argument_list pos:line="2157" pos:column="72">(<argument><expr><call><name pos:line="2157" pos:column="73">TEXT</name><argument_list pos:line="2157" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="2157" pos:column="78">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2158" pos:column="17">const</specifier> <name pos:line="2158" pos:column="23">TCHAR</name> <type:modifier pos:line="2158" pos:column="29">*</type:modifier></type><name pos:line="2158" pos:column="30">ext</name> <init pos:line="2158" pos:column="34">= <expr><op:operator pos:line="2158" pos:column="36">(</op:operator><call><name><name pos:line="2158" pos:column="37">childNode</name><op:operator pos:line="2158" pos:column="46">-&gt;</op:operator><name pos:line="2158" pos:column="48">ToElement</name></name><argument_list pos:line="2158" pos:column="57">()</argument_list></call><op:operator pos:line="2158" pos:column="59">)</op:operator><op:operator pos:line="2158" pos:column="60">-&gt;</op:operator><call><name pos:line="2158" pos:column="62">Attribute</name><argument_list pos:line="2158" pos:column="71">(<argument><expr><call><name pos:line="2158" pos:column="72">TEXT</name><argument_list pos:line="2158" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2158" pos:column="77">"ext"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2159" pos:column="17">const</specifier> <name pos:line="2159" pos:column="23">TCHAR</name> <type:modifier pos:line="2159" pos:column="29">*</type:modifier></type><name pos:line="2159" pos:column="30">udlVersion</name> <init pos:line="2159" pos:column="41">= <expr><op:operator pos:line="2159" pos:column="43">(</op:operator><call><name><name pos:line="2159" pos:column="44">childNode</name><op:operator pos:line="2159" pos:column="53">-&gt;</op:operator><name pos:line="2159" pos:column="55">ToElement</name></name><argument_list pos:line="2159" pos:column="64">()</argument_list></call><op:operator pos:line="2159" pos:column="66">)</op:operator><op:operator pos:line="2159" pos:column="67">-&gt;</op:operator><call><name pos:line="2159" pos:column="69">Attribute</name><argument_list pos:line="2159" pos:column="78">(<argument><expr><call><name pos:line="2159" pos:column="79">TEXT</name><argument_list pos:line="2159" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="2159" pos:column="84">"udlVersion"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="2160" pos:column="9">hasFoundElement</name> <op:operator pos:line="2160" pos:column="25">=</op:operator> <lit:literal type="boolean" pos:line="2160" pos:column="27">true</lit:literal></expr>;</expr_stmt>
		<try pos:line="2161" pos:column="17">try <block pos:line="2161" pos:column="21">{
			<if pos:line="2162" pos:column="25">if <condition pos:line="2162" pos:column="28">(<expr><op:operator pos:line="2162" pos:column="29">!</op:operator><name pos:line="2162" pos:column="30">name</name> <op:operator pos:line="2162" pos:column="35">||</op:operator> <op:operator pos:line="2162" pos:column="38">!</op:operator><name><name pos:line="2162" pos:column="39">name</name><index pos:line="2162" pos:column="43">[<expr><lit:literal type="number" pos:line="2162" pos:column="44">0</lit:literal></expr>]</index></name> <op:operator pos:line="2162" pos:column="47">||</op:operator> <op:operator pos:line="2162" pos:column="50">!</op:operator><name pos:line="2162" pos:column="51">ext</name></expr>)</condition><then pos:line="2162" pos:column="55">
				<throw pos:line="2163" pos:column="33">throw <expr><call><name><name pos:line="2163" pos:column="39">std</name><op:operator pos:line="2163" pos:column="42">::</op:operator><name pos:line="2163" pos:column="44">runtime_error</name></name><argument_list pos:line="2163" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2163" pos:column="58">"NppParameters::feedUserLang : UserLang name is missing"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<if pos:line="2165" pos:column="25">if <condition pos:line="2165" pos:column="28">(<expr><op:operator pos:line="2165" pos:column="29">!</op:operator><name pos:line="2165" pos:column="30">udlVersion</name></expr>)</condition><then pos:line="2165" pos:column="41">
				<expr_stmt><expr><name><name pos:line="2166" pos:column="33">_userLangArray</name><index pos:line="2166" pos:column="47">[<expr><name pos:line="2166" pos:column="48">_nbUserLang</name></expr>]</index></name> <op:operator pos:line="2166" pos:column="61">=</op:operator> <op:operator pos:line="2166" pos:column="63">new</op:operator> <call><name pos:line="2166" pos:column="67">UserLangContainer</name><argument_list pos:line="2166" pos:column="84">(<argument><expr><name pos:line="2166" pos:column="85">name</name></expr></argument>, <argument><expr><name pos:line="2166" pos:column="91">ext</name></expr></argument>, <argument><expr><call><name pos:line="2166" pos:column="96">TEXT</name><argument_list pos:line="2166" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="2166" pos:column="101">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="2167" pos:column="25">else
				<expr_stmt><expr><name><name pos:line="2168" pos:column="33">_userLangArray</name><index pos:line="2168" pos:column="47">[<expr><name pos:line="2168" pos:column="48">_nbUserLang</name></expr>]</index></name> <op:operator pos:line="2168" pos:column="61">=</op:operator> <op:operator pos:line="2168" pos:column="63">new</op:operator> <call><name pos:line="2168" pos:column="67">UserLangContainer</name><argument_list pos:line="2168" pos:column="84">(<argument><expr><name pos:line="2168" pos:column="85">name</name></expr></argument>, <argument><expr><name pos:line="2168" pos:column="91">ext</name></expr></argument>, <argument><expr><name pos:line="2168" pos:column="96">udlVersion</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			<expr_stmt><expr><name pos:line="2169" pos:column="25">_nbUserLang</name><op:operator pos:line="2169" pos:column="36">++</op:operator></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2171" pos:column="25">TiXmlNode</name> <type:modifier pos:line="2171" pos:column="35">*</type:modifier></type><name pos:line="2171" pos:column="36">settingsRoot</name> <init pos:line="2171" pos:column="49">= <expr><call><name><name pos:line="2171" pos:column="51">childNode</name><op:operator pos:line="2171" pos:column="60">-&gt;</op:operator><name pos:line="2171" pos:column="62">FirstChildElement</name></name><argument_list pos:line="2171" pos:column="79">(<argument><expr><call><name pos:line="2171" pos:column="80">TEXT</name><argument_list pos:line="2171" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="2171" pos:column="85">"Settings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2172" pos:column="25">if <condition pos:line="2172" pos:column="28">(<expr><op:operator pos:line="2172" pos:column="29">!</op:operator><name pos:line="2172" pos:column="30">settingsRoot</name></expr>)</condition><then pos:line="2172" pos:column="43"> 
				<throw pos:line="2173" pos:column="33">throw <expr><call><name><name pos:line="2173" pos:column="39">std</name><op:operator pos:line="2173" pos:column="42">::</op:operator><name pos:line="2173" pos:column="44">runtime_error</name></name><argument_list pos:line="2173" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2173" pos:column="58">"NppParameters::feedUserLang : Settings node is missing"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<expr_stmt><expr><call><name pos:line="2175" pos:column="25">feedUserSettings</name><argument_list pos:line="2175" pos:column="41">(<argument><expr><name pos:line="2175" pos:column="42">settingsRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2177" pos:column="25">TiXmlNode</name> <type:modifier pos:line="2177" pos:column="35">*</type:modifier></type><name pos:line="2177" pos:column="36">keywordListsRoot</name> <init pos:line="2177" pos:column="53">= <expr><call><name><name pos:line="2177" pos:column="55">childNode</name><op:operator pos:line="2177" pos:column="64">-&gt;</op:operator><name pos:line="2177" pos:column="66">FirstChildElement</name></name><argument_list pos:line="2177" pos:column="83">(<argument><expr><call><name pos:line="2177" pos:column="84">TEXT</name><argument_list pos:line="2177" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="2177" pos:column="89">"KeywordLists"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2178" pos:column="25">if <condition pos:line="2178" pos:column="28">(<expr><op:operator pos:line="2178" pos:column="29">!</op:operator><name pos:line="2178" pos:column="30">keywordListsRoot</name></expr>)</condition><then pos:line="2178" pos:column="47">
				<throw pos:line="2179" pos:column="33">throw <expr><call><name><name pos:line="2179" pos:column="39">std</name><op:operator pos:line="2179" pos:column="42">::</op:operator><name pos:line="2179" pos:column="44">runtime_error</name></name><argument_list pos:line="2179" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2179" pos:column="58">"NppParameters::feedUserLang : KeywordLists node is missing"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<expr_stmt><expr><call><name pos:line="2181" pos:column="25">feedUserKeywordList</name><argument_list pos:line="2181" pos:column="44">(<argument><expr><name pos:line="2181" pos:column="45">keywordListsRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2183" pos:column="25">TiXmlNode</name> <type:modifier pos:line="2183" pos:column="35">*</type:modifier></type><name pos:line="2183" pos:column="36">stylesRoot</name> <init pos:line="2183" pos:column="47">= <expr><call><name><name pos:line="2183" pos:column="49">childNode</name><op:operator pos:line="2183" pos:column="58">-&gt;</op:operator><name pos:line="2183" pos:column="60">FirstChildElement</name></name><argument_list pos:line="2183" pos:column="77">(<argument><expr><call><name pos:line="2183" pos:column="78">TEXT</name><argument_list pos:line="2183" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="2183" pos:column="83">"Styles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2184" pos:column="25">if <condition pos:line="2184" pos:column="28">(<expr><op:operator pos:line="2184" pos:column="29">!</op:operator><name pos:line="2184" pos:column="30">stylesRoot</name></expr>)</condition><then pos:line="2184" pos:column="41">
				<throw pos:line="2185" pos:column="33">throw <expr><call><name><name pos:line="2185" pos:column="39">std</name><op:operator pos:line="2185" pos:column="42">::</op:operator><name pos:line="2185" pos:column="44">runtime_error</name></name><argument_list pos:line="2185" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2185" pos:column="58">"NppParameters::feedUserLang : Styles node is missing"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

			<expr_stmt><expr><call><name pos:line="2187" pos:column="25">feedUserStyles</name><argument_list pos:line="2187" pos:column="39">(<argument><expr><name pos:line="2187" pos:column="40">stylesRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="2189" pos:column="25">// styles that were not read from xml file should get default values </comment>
			<for pos:line="2190" pos:column="25">for (<init><decl><type><name pos:line="2190" pos:column="30">int</name></type> <name pos:line="2190" pos:column="34">i</name><init pos:line="2190" pos:column="35">=<expr><lit:literal type="number" pos:line="2190" pos:column="36">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2190" pos:column="39">i</name><op:operator pos:line="2190" pos:column="40">&lt;</op:operator><name pos:line="2190" pos:column="41">SCE_USER_STYLE_TOTAL_STYLES</name></expr>;</condition> <incr><expr><op:operator pos:line="2190" pos:column="70">++</op:operator><name pos:line="2190" pos:column="72">i</name></expr></incr>)
			<block pos:line="2191" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2192" pos:column="33">Style</name> <type:modifier pos:line="2192" pos:column="39">&amp;</type:modifier></type> <name pos:line="2192" pos:column="41">style</name> <init pos:line="2192" pos:column="47">= <expr><name><name pos:line="2192" pos:column="49">_userLangArray</name><index pos:line="2192" pos:column="63">[<expr><name pos:line="2192" pos:column="64">_nbUserLang</name> <op:operator pos:line="2192" pos:column="76">-</op:operator> <lit:literal type="number" pos:line="2192" pos:column="78">1</lit:literal></expr>]</index></name><op:operator pos:line="2192" pos:column="80">-&gt;</op:operator><call><name><name pos:line="2192" pos:column="82">_styleArray</name><op:operator pos:line="2192" pos:column="93">.</op:operator><name pos:line="2192" pos:column="94">getStyler</name></name><argument_list pos:line="2192" pos:column="103">(<argument><expr><name pos:line="2192" pos:column="104">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="2193" pos:column="33">if <condition pos:line="2193" pos:column="36">(<expr><name><name pos:line="2193" pos:column="37">style</name><op:operator pos:line="2193" pos:column="42">.</op:operator><name pos:line="2193" pos:column="43">_styleID</name></name> <op:operator pos:line="2193" pos:column="52">==</op:operator> <op:operator pos:line="2193" pos:column="55">-</op:operator><lit:literal type="number" pos:line="2193" pos:column="56">1</lit:literal></expr>)</condition><then pos:line="2193" pos:column="58">
					<expr_stmt><expr><name><name pos:line="2194" pos:column="41">_userLangArray</name><index pos:line="2194" pos:column="55">[<expr><name pos:line="2194" pos:column="56">_nbUserLang</name> <op:operator pos:line="2194" pos:column="68">-</op:operator> <lit:literal type="number" pos:line="2194" pos:column="70">1</lit:literal></expr>]</index></name><op:operator pos:line="2194" pos:column="72">-&gt;</op:operator><call><name><name pos:line="2194" pos:column="74">_styleArray</name><op:operator pos:line="2194" pos:column="85">.</op:operator><name pos:line="2194" pos:column="86">addStyler</name></name><argument_list pos:line="2194" pos:column="95">(<argument><expr><name pos:line="2194" pos:column="96">i</name></expr></argument>, <argument><expr><name><name pos:line="2194" pos:column="99">styleNameMapper</name><index pos:line="2194" pos:column="114">[<expr><name pos:line="2194" pos:column="115">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></for>

		}</block> <catch pos:line="2197" pos:column="19">catch <parameter_list pos:line="2197" pos:column="25">(<param><decl><type><name><name pos:line="2197" pos:column="26">std</name><op:operator pos:line="2197" pos:column="29">::</op:operator><name pos:line="2197" pos:column="31">exception</name></name></type> <name pos:line="2197" pos:column="41">e</name></decl></param>)</parameter_list> <block pos:line="2197" pos:column="44">{
			<expr_stmt><expr><op:operator pos:line="2198" pos:column="25">delete</op:operator> <name><name pos:line="2198" pos:column="32">_userLangArray</name><index pos:line="2198" pos:column="46">[<expr><op:operator pos:line="2198" pos:column="47">--</op:operator><name pos:line="2198" pos:column="49">_nbUserLang</name></expr>]</index></name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="2199" pos:column="13">isEverythingOK</name> <op:operator pos:line="2199" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="2199" pos:column="30">false</lit:literal></expr>;</expr_stmt>
		}</block></catch></try>
	}</block></for>
    <if pos:line="2202" pos:column="5">if <condition pos:line="2202" pos:column="8">(<expr><name pos:line="2202" pos:column="9">isEverythingOK</name></expr>)</condition><then pos:line="2202" pos:column="24">
        <expr_stmt><expr><name pos:line="2203" pos:column="9">isEverythingOK</name> <op:operator pos:line="2203" pos:column="24">=</op:operator> <name pos:line="2203" pos:column="26">hasFoundElement</name></expr>;</expr_stmt></then></if>
    <return pos:line="2204" pos:column="5">return <expr><name pos:line="2204" pos:column="12">isEverythingOK</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2207" pos:column="1">bool</name></type> <name><name pos:line="2207" pos:column="6">NppParameters</name><op:operator pos:line="2207" pos:column="19">::</op:operator><name pos:line="2207" pos:column="21">importUDLFromFile</name></name><parameter_list pos:line="2207" pos:column="38">(<param><decl><type><name pos:line="2207" pos:column="39">generic_string</name></type> <name pos:line="2207" pos:column="54">sourceFile</name></decl></param>)</parameter_list>
<block pos:line="2208" pos:column="1">{
	<if pos:line="2209" pos:column="9">if <condition pos:line="2209" pos:column="12">(<expr><name pos:line="2209" pos:column="13">_nbImportedULD</name> <op:operator pos:line="2209" pos:column="28">&gt;=</op:operator> <name pos:line="2209" pos:column="31">NB_MAX_IMPORTED_UDL</name></expr>)</condition><then pos:line="2209" pos:column="51">
		<return pos:line="2210" pos:column="17">return <expr><lit:literal type="boolean" pos:line="2210" pos:column="24">false</lit:literal></expr>;</return></then></if>
	
    <decl_stmt><decl><type><name pos:line="2212" pos:column="5">TiXmlDocument</name> <type:modifier pos:line="2212" pos:column="19">*</type:modifier></type><name pos:line="2212" pos:column="20">pXmlUserLangDoc</name> <init pos:line="2212" pos:column="36">= <expr><op:operator pos:line="2212" pos:column="38">new</op:operator> <call><name pos:line="2212" pos:column="42">TiXmlDocument</name><argument_list pos:line="2212" pos:column="55">(<argument><expr><name pos:line="2212" pos:column="56">sourceFile</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2213" pos:column="9">bool</name></type> <name pos:line="2213" pos:column="14">loadOkay</name> <init pos:line="2213" pos:column="23">= <expr><call><name><name pos:line="2213" pos:column="25">pXmlUserLangDoc</name><op:operator pos:line="2213" pos:column="40">-&gt;</op:operator><name pos:line="2213" pos:column="42">LoadFile</name></name><argument_list pos:line="2213" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2214" pos:column="9">if <condition pos:line="2214" pos:column="12">(<expr><name pos:line="2214" pos:column="13">loadOkay</name></expr>)</condition><then pos:line="2214" pos:column="22">
	<block pos:line="2215" pos:column="9">{
		<expr_stmt><expr><name pos:line="2216" pos:column="17">loadOkay</name> <op:operator pos:line="2216" pos:column="26">=</op:operator> <call><name pos:line="2216" pos:column="28">getUserDefineLangsFromXmlTree</name><argument_list pos:line="2216" pos:column="57">(<argument><expr><name pos:line="2216" pos:column="58">pXmlUserLangDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
	<expr_stmt><expr><name><name pos:line="2218" pos:column="9">_importedULD</name><index pos:line="2218" pos:column="21">[<expr><name pos:line="2218" pos:column="22">_nbImportedULD</name><op:operator pos:line="2218" pos:column="36">++</op:operator></expr>]</index></name> <op:operator pos:line="2218" pos:column="40">=</op:operator> <name pos:line="2218" pos:column="42">pXmlUserLangDoc</name></expr>;</expr_stmt>
    <return pos:line="2219" pos:column="5">return <expr><name pos:line="2219" pos:column="12">loadOkay</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2222" pos:column="1">bool</name></type> <name><name pos:line="2222" pos:column="6">NppParameters</name><op:operator pos:line="2222" pos:column="19">::</op:operator><name pos:line="2222" pos:column="21">exportUDLToFile</name></name><parameter_list pos:line="2222" pos:column="36">(<param><decl><type><name pos:line="2222" pos:column="37">int</name></type> <name pos:line="2222" pos:column="41">langIndex2export</name></decl></param>, <param><decl><type><name pos:line="2222" pos:column="59">generic_string</name></type> <name pos:line="2222" pos:column="74">fileName2save</name></decl></param>)</parameter_list>
<block pos:line="2223" pos:column="1">{
    <if pos:line="2224" pos:column="5">if <condition pos:line="2224" pos:column="8">(<expr><name pos:line="2224" pos:column="9">langIndex2export</name> <op:operator pos:line="2224" pos:column="26">!=</op:operator> <op:operator pos:line="2224" pos:column="29">-</op:operator><lit:literal type="number" pos:line="2224" pos:column="30">1</lit:literal> <op:operator pos:line="2224" pos:column="32">&amp;&amp;</op:operator> <name pos:line="2224" pos:column="35">langIndex2export</name> <op:operator pos:line="2224" pos:column="52">&gt;=</op:operator> <name pos:line="2224" pos:column="55">_nbUserLang</name></expr>)</condition><then pos:line="2224" pos:column="67">
        <return pos:line="2225" pos:column="9">return <expr><lit:literal type="boolean" pos:line="2225" pos:column="16">false</lit:literal></expr>;</return></then></if>

    <decl_stmt><decl><type><name pos:line="2227" pos:column="5">TiXmlDocument</name> <type:modifier pos:line="2227" pos:column="19">*</type:modifier></type><name pos:line="2227" pos:column="20">pNewXmlUserLangDoc</name> <init pos:line="2227" pos:column="39">= <expr><op:operator pos:line="2227" pos:column="41">new</op:operator> <call><name pos:line="2227" pos:column="45">TiXmlDocument</name><argument_list pos:line="2227" pos:column="58">(<argument><expr><name pos:line="2227" pos:column="59">fileName2save</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2228" pos:column="5">TiXmlNode</name> <type:modifier pos:line="2228" pos:column="15">*</type:modifier></type><name pos:line="2228" pos:column="16">newRoot2export</name> <init pos:line="2228" pos:column="31">= <expr><call><name><name pos:line="2228" pos:column="33">pNewXmlUserLangDoc</name><op:operator pos:line="2228" pos:column="51">-&gt;</op:operator><name pos:line="2228" pos:column="53">InsertEndChild</name></name><argument_list pos:line="2228" pos:column="67">(<argument><expr><call><name pos:line="2228" pos:column="68">TiXmlElement</name><argument_list pos:line="2228" pos:column="80">(<argument><expr><call><name pos:line="2228" pos:column="81">TEXT</name><argument_list pos:line="2228" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="2228" pos:column="86">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="2230" pos:column="5">bool</name></type> <name pos:line="2230" pos:column="10">b</name> <init pos:line="2230" pos:column="12">= <expr><lit:literal type="boolean" pos:line="2230" pos:column="14">false</lit:literal></expr></init></decl>;</decl_stmt>
    
    <expr_stmt><expr><call><name pos:line="2232" pos:column="5">insertUserLang2Tree</name><argument_list pos:line="2232" pos:column="24">(<argument><expr><name pos:line="2232" pos:column="25">newRoot2export</name></expr></argument>, <argument><expr><name><name pos:line="2232" pos:column="41">_userLangArray</name><index pos:line="2232" pos:column="55">[<expr><name pos:line="2232" pos:column="56">langIndex2export</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><name pos:line="2233" pos:column="5">b</name> <op:operator pos:line="2233" pos:column="7">=</op:operator> <call><name><name pos:line="2233" pos:column="9">pNewXmlUserLangDoc</name><op:operator pos:line="2233" pos:column="27">-&gt;</op:operator><name pos:line="2233" pos:column="29">SaveFile</name></name><argument_list pos:line="2233" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
    
    <expr_stmt><expr><op:operator pos:line="2235" pos:column="5">delete</op:operator> <name pos:line="2235" pos:column="12">pNewXmlUserLangDoc</name></expr>;</expr_stmt>
    <return pos:line="2236" pos:column="5">return <expr><name pos:line="2236" pos:column="12">b</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2239" pos:column="1">LangType</name></type> <name><name pos:line="2239" pos:column="10">NppParameters</name><op:operator pos:line="2239" pos:column="23">::</op:operator><name pos:line="2239" pos:column="25">getLangFromExt</name></name><parameter_list pos:line="2239" pos:column="39">(<param><decl><type><specifier pos:line="2239" pos:column="40">const</specifier> <name pos:line="2239" pos:column="46">TCHAR</name> <type:modifier pos:line="2239" pos:column="52">*</type:modifier></type><name pos:line="2239" pos:column="53">ext</name></decl></param>)</parameter_list>
<block pos:line="2240" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2241" pos:column="9">int</name></type> <name pos:line="2241" pos:column="13">i</name> <init pos:line="2241" pos:column="15">= <expr><call><name pos:line="2241" pos:column="17">getNbLang</name><argument_list pos:line="2241" pos:column="26">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="2242" pos:column="9">i</name><op:operator pos:line="2242" pos:column="10">--</op:operator></expr>;</expr_stmt>
	<while pos:line="2243" pos:column="9">while <condition pos:line="2243" pos:column="15">(<expr><name pos:line="2243" pos:column="16">i</name> <op:operator pos:line="2243" pos:column="18">&gt;=</op:operator> <lit:literal type="number" pos:line="2243" pos:column="21">0</lit:literal></expr>)</condition>
	<block pos:line="2244" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2245" pos:column="17">Lang</name> <type:modifier pos:line="2245" pos:column="22">*</type:modifier></type><name pos:line="2245" pos:column="23">l</name> <init pos:line="2245" pos:column="25">= <expr><call><name pos:line="2245" pos:column="27">getLangFromIndex</name><argument_list pos:line="2245" pos:column="43">(<argument><expr><name pos:line="2245" pos:column="44">i</name><op:operator pos:line="2245" pos:column="45">--</op:operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><specifier pos:line="2247" pos:column="17">const</specifier> <name pos:line="2247" pos:column="23">TCHAR</name> <type:modifier pos:line="2247" pos:column="29">*</type:modifier></type><name pos:line="2247" pos:column="30">defList</name> <init pos:line="2247" pos:column="38">= <expr><call><name><name pos:line="2247" pos:column="40">l</name><op:operator pos:line="2247" pos:column="41">-&gt;</op:operator><name pos:line="2247" pos:column="43">getDefaultExtList</name></name><argument_list pos:line="2247" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2248" pos:column="17">const</specifier> <name pos:line="2248" pos:column="23">TCHAR</name> <type:modifier pos:line="2248" pos:column="29">*</type:modifier></type><name pos:line="2248" pos:column="30">userList</name> <init pos:line="2248" pos:column="39">= <expr><name pos:line="2248" pos:column="41">NULL</name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="2250" pos:column="17">LexerStylerArray</name> <type:modifier pos:line="2250" pos:column="34">&amp;</type:modifier></type><name pos:line="2250" pos:column="35">lsa</name> <init pos:line="2250" pos:column="39">= <expr><call><name pos:line="2250" pos:column="41">getLStylerArray</name><argument_list pos:line="2250" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2251" pos:column="17">const</specifier> <name pos:line="2251" pos:column="23">TCHAR</name> <type:modifier pos:line="2251" pos:column="29">*</type:modifier></type><name pos:line="2251" pos:column="30">lName</name> <init pos:line="2251" pos:column="36">= <expr><call><name><name pos:line="2251" pos:column="38">l</name><op:operator pos:line="2251" pos:column="39">-&gt;</op:operator><name pos:line="2251" pos:column="41">getLangName</name></name><argument_list pos:line="2251" pos:column="52">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2252" pos:column="17">LexerStyler</name> <type:modifier pos:line="2252" pos:column="29">*</type:modifier></type><name pos:line="2252" pos:column="30">pLS</name> <init pos:line="2252" pos:column="34">= <expr><call><name><name pos:line="2252" pos:column="36">lsa</name><op:operator pos:line="2252" pos:column="39">.</op:operator><name pos:line="2252" pos:column="40">getLexerStylerByName</name></name><argument_list pos:line="2252" pos:column="60">(<argument><expr><name pos:line="2252" pos:column="61">lName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="2254" pos:column="17">if <condition pos:line="2254" pos:column="20">(<expr><name pos:line="2254" pos:column="21">pLS</name></expr>)</condition><then pos:line="2254" pos:column="25">
			<expr_stmt><expr><name pos:line="2255" pos:column="25">userList</name> <op:operator pos:line="2255" pos:column="34">=</op:operator> <call><name><name pos:line="2255" pos:column="36">pLS</name><op:operator pos:line="2255" pos:column="39">-&gt;</op:operator><name pos:line="2255" pos:column="41">getLexerUserExt</name></name><argument_list pos:line="2255" pos:column="56">()</argument_list></call></expr>;</expr_stmt></then></if>

		<decl_stmt><decl><type><name pos:line="2257" pos:column="17">generic_string</name></type> <name pos:line="2257" pos:column="32">list</name><argument_list pos:line="2257" pos:column="36">(<argument><expr><call><name pos:line="2257" pos:column="37">TEXT</name><argument_list pos:line="2257" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="2257" pos:column="42">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<if pos:line="2258" pos:column="17">if <condition pos:line="2258" pos:column="20">(<expr><name pos:line="2258" pos:column="21">defList</name></expr>)</condition><then pos:line="2258" pos:column="29">
			<expr_stmt><expr><name pos:line="2259" pos:column="25">list</name> <op:operator pos:line="2259" pos:column="30">+=</op:operator> <name pos:line="2259" pos:column="33">defList</name></expr>;</expr_stmt></then></if>
		<if pos:line="2260" pos:column="17">if <condition pos:line="2260" pos:column="20">(<expr><name pos:line="2260" pos:column="21">userList</name></expr>)</condition><then pos:line="2260" pos:column="30">
		<block pos:line="2261" pos:column="17">{
			<expr_stmt><expr><name pos:line="2262" pos:column="25">list</name> <op:operator pos:line="2262" pos:column="30">+=</op:operator> <call><name pos:line="2262" pos:column="33">TEXT</name><argument_list pos:line="2262" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="2262" pos:column="38">" "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2263" pos:column="25">list</name> <op:operator pos:line="2263" pos:column="30">+=</op:operator> <name pos:line="2263" pos:column="33">userList</name></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="2265" pos:column="17">if <condition pos:line="2265" pos:column="20">(<expr><call><name pos:line="2265" pos:column="21">isInList</name><argument_list pos:line="2265" pos:column="29">(<argument><expr><name pos:line="2265" pos:column="30">ext</name></expr></argument>, <argument><expr><call><name><name pos:line="2265" pos:column="35">list</name><op:operator pos:line="2265" pos:column="39">.</op:operator><name pos:line="2265" pos:column="40">c_str</name></name><argument_list pos:line="2265" pos:column="45">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2265" pos:column="49">
			<return pos:line="2266" pos:column="25">return <expr><call><name><name pos:line="2266" pos:column="32">l</name><op:operator pos:line="2266" pos:column="33">-&gt;</op:operator><name pos:line="2266" pos:column="35">getLangID</name></name><argument_list pos:line="2266" pos:column="44">()</argument_list></call></expr>;</return></then></if>
	}</block></while>
	<return pos:line="2268" pos:column="9">return <expr><name pos:line="2268" pos:column="16">L_TEXT</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2271" pos:column="1">void</name></type> <name><name pos:line="2271" pos:column="6">NppParameters</name><op:operator pos:line="2271" pos:column="19">::</op:operator><name pos:line="2271" pos:column="21">writeUserDefinedLang</name></name><parameter_list pos:line="2271" pos:column="41">()</parameter_list>
<block pos:line="2272" pos:column="1">{
	<if pos:line="2273" pos:column="9">if <condition pos:line="2273" pos:column="12">(<expr><op:operator pos:line="2273" pos:column="13">!</op:operator><name pos:line="2273" pos:column="14">_pXmlUserLangDoc</name></expr>)</condition><then pos:line="2273" pos:column="31">
	<block pos:line="2274" pos:column="9">{
		<comment type="line" pos:line="2275" pos:column="17">//do the treatment</comment>
		<expr_stmt><expr><name pos:line="2276" pos:column="17">_pXmlUserLangDoc</name> <op:operator pos:line="2276" pos:column="34">=</op:operator> <op:operator pos:line="2276" pos:column="36">new</op:operator> <call><name pos:line="2276" pos:column="40">TiXmlDocument</name><argument_list pos:line="2276" pos:column="53">(<argument><expr><name pos:line="2276" pos:column="54">_userDefineLangPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="2279" pos:column="9">//before remove the branch, we allocate and copy the TCHAR * which will be destroyed</comment>
	<expr_stmt><expr><call><name pos:line="2280" pos:column="9">stylerStrOp</name><argument_list pos:line="2280" pos:column="20">(<argument><expr><name pos:line="2280" pos:column="21">DUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="2282" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2282" pos:column="19">*</type:modifier></type><name pos:line="2282" pos:column="20">root</name> <init pos:line="2282" pos:column="25">= <expr><call><name><name pos:line="2282" pos:column="27">_pXmlUserLangDoc</name><op:operator pos:line="2282" pos:column="43">-&gt;</op:operator><name pos:line="2282" pos:column="45">FirstChild</name></name><argument_list pos:line="2282" pos:column="55">(<argument><expr><call><name pos:line="2282" pos:column="56">TEXT</name><argument_list pos:line="2282" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="2282" pos:column="61">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2283" pos:column="9">if <condition pos:line="2283" pos:column="12">(<expr><name pos:line="2283" pos:column="13">root</name></expr>)</condition><then pos:line="2283" pos:column="18"> 
	<block pos:line="2284" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="2285" pos:column="17">_pXmlUserLangDoc</name><op:operator pos:line="2285" pos:column="33">-&gt;</op:operator><name pos:line="2285" pos:column="35">RemoveChild</name></name><argument_list pos:line="2285" pos:column="46">(<argument><expr><name pos:line="2285" pos:column="47">root</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<expr_stmt><expr><call><name><name pos:line="2288" pos:column="9">_pXmlUserLangDoc</name><op:operator pos:line="2288" pos:column="25">-&gt;</op:operator><name pos:line="2288" pos:column="27">InsertEndChild</name></name><argument_list pos:line="2288" pos:column="41">(<argument><expr><call><name pos:line="2288" pos:column="42">TiXmlElement</name><argument_list pos:line="2288" pos:column="54">(<argument><expr><call><name pos:line="2288" pos:column="55">TEXT</name><argument_list pos:line="2288" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2288" pos:column="60">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="2290" pos:column="9">root</name> <op:operator pos:line="2290" pos:column="14">=</op:operator> <call><name><name pos:line="2290" pos:column="16">_pXmlUserLangDoc</name><op:operator pos:line="2290" pos:column="32">-&gt;</op:operator><name pos:line="2290" pos:column="34">FirstChild</name></name><argument_list pos:line="2290" pos:column="44">(<argument><expr><call><name pos:line="2290" pos:column="45">TEXT</name><argument_list pos:line="2290" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="2290" pos:column="50">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:line="2292" pos:column="9">for (<init><decl><type><name pos:line="2292" pos:column="14">int</name></type> <name pos:line="2292" pos:column="18">i</name> <init pos:line="2292" pos:column="20">= <expr><lit:literal type="number" pos:line="2292" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2292" pos:column="26">i</name> <op:operator pos:line="2292" pos:column="28">&lt;</op:operator> <name pos:line="2292" pos:column="30">_nbUserLang</name></expr> ;</condition> <incr><expr><name pos:line="2292" pos:column="44">i</name><op:operator pos:line="2292" pos:column="45">++</op:operator></expr></incr>)
	<block pos:line="2293" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="2294" pos:column="17">insertUserLang2Tree</name><argument_list pos:line="2294" pos:column="36">(<argument><expr><name pos:line="2294" pos:column="37">root</name></expr></argument>, <argument><expr><name><name pos:line="2294" pos:column="43">_userLangArray</name><index pos:line="2294" pos:column="57">[<expr><name pos:line="2294" pos:column="58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="2296" pos:column="9">_pXmlUserLangDoc</name><op:operator pos:line="2296" pos:column="25">-&gt;</op:operator><name pos:line="2296" pos:column="27">SaveFile</name></name><argument_list pos:line="2296" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2297" pos:column="9">stylerStrOp</name><argument_list pos:line="2297" pos:column="20">(<argument><expr><name pos:line="2297" pos:column="21">FREE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="2301" pos:column="1">void</name></type> <name><name pos:line="2301" pos:column="6">NppParameters</name><op:operator pos:line="2301" pos:column="19">::</op:operator><name pos:line="2301" pos:column="21">insertCmd</name></name><parameter_list pos:line="2301" pos:column="30">(<param><decl><type><name pos:line="2301" pos:column="31">TiXmlNode</name> <type:modifier pos:line="2301" pos:column="41">*</type:modifier></type><name pos:line="2301" pos:column="42">shortcutsRoot</name></decl></param>, <param><decl><type><specifier pos:line="2301" pos:column="57">const</specifier> <name pos:line="2301" pos:column="63">CommandShortcut</name> <type:modifier pos:line="2301" pos:column="79">&amp;</type:modifier></type> <name pos:line="2301" pos:column="81">cmd</name></decl></param>)</parameter_list>
<block pos:line="2302" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="2303" pos:column="9">const</specifier> <name pos:line="2303" pos:column="15">KeyCombo</name> <type:modifier pos:line="2303" pos:column="24">&amp;</type:modifier></type> <name pos:line="2303" pos:column="26">key</name> <init pos:line="2303" pos:column="30">= <expr><call><name><name pos:line="2303" pos:column="32">cmd</name><op:operator pos:line="2303" pos:column="35">.</op:operator><name pos:line="2303" pos:column="36">getKeyCombo</name></name><argument_list pos:line="2303" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2304" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2304" pos:column="19">*</type:modifier></type><name pos:line="2304" pos:column="20">sc</name> <init pos:line="2304" pos:column="23">= <expr><call><name><name pos:line="2304" pos:column="25">shortcutsRoot</name><op:operator pos:line="2304" pos:column="38">-&gt;</op:operator><name pos:line="2304" pos:column="40">InsertEndChild</name></name><argument_list pos:line="2304" pos:column="54">(<argument><expr><call><name pos:line="2304" pos:column="55">TiXmlElement</name><argument_list pos:line="2304" pos:column="67">(<argument><expr><call><name pos:line="2304" pos:column="68">TEXT</name><argument_list pos:line="2304" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="2304" pos:column="73">"Shortcut"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="2305" pos:column="9">sc</name><op:operator pos:line="2305" pos:column="11">-&gt;</op:operator><name pos:line="2305" pos:column="13">ToElement</name></name><argument_list pos:line="2305" pos:column="22">()</argument_list></call><op:operator pos:line="2305" pos:column="24">-&gt;</op:operator><call><name pos:line="2305" pos:column="26">SetAttribute</name><argument_list pos:line="2305" pos:column="38">(<argument><expr><call><name pos:line="2305" pos:column="39">TEXT</name><argument_list pos:line="2305" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="2305" pos:column="44">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2305" pos:column="51">cmd</name><op:operator pos:line="2305" pos:column="54">.</op:operator><name pos:line="2305" pos:column="55">getID</name></name><argument_list pos:line="2305" pos:column="60">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2306" pos:column="9">sc</name><op:operator pos:line="2306" pos:column="11">-&gt;</op:operator><name pos:line="2306" pos:column="13">ToElement</name></name><argument_list pos:line="2306" pos:column="22">()</argument_list></call><op:operator pos:line="2306" pos:column="24">-&gt;</op:operator><call><name pos:line="2306" pos:column="26">SetAttribute</name><argument_list pos:line="2306" pos:column="38">(<argument><expr><call><name pos:line="2306" pos:column="39">TEXT</name><argument_list pos:line="2306" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="2306" pos:column="44">"Ctrl"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2306" pos:column="53">key</name><op:operator pos:line="2306" pos:column="56">.</op:operator><name pos:line="2306" pos:column="57">_isCtrl</name></name><op:operator pos:line="2306" pos:column="64">?</op:operator><call><name pos:line="2306" pos:column="65">TEXT</name><argument_list pos:line="2306" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2306" pos:column="70">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2306" pos:column="76">:</op:operator><call><name pos:line="2306" pos:column="77">TEXT</name><argument_list pos:line="2306" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="2306" pos:column="82">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2307" pos:column="9">sc</name><op:operator pos:line="2307" pos:column="11">-&gt;</op:operator><name pos:line="2307" pos:column="13">ToElement</name></name><argument_list pos:line="2307" pos:column="22">()</argument_list></call><op:operator pos:line="2307" pos:column="24">-&gt;</op:operator><call><name pos:line="2307" pos:column="26">SetAttribute</name><argument_list pos:line="2307" pos:column="38">(<argument><expr><call><name pos:line="2307" pos:column="39">TEXT</name><argument_list pos:line="2307" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="2307" pos:column="44">"Alt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2307" pos:column="52">key</name><op:operator pos:line="2307" pos:column="55">.</op:operator><name pos:line="2307" pos:column="56">_isAlt</name></name><op:operator pos:line="2307" pos:column="62">?</op:operator><call><name pos:line="2307" pos:column="63">TEXT</name><argument_list pos:line="2307" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="2307" pos:column="68">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2307" pos:column="74">:</op:operator><call><name pos:line="2307" pos:column="75">TEXT</name><argument_list pos:line="2307" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="2307" pos:column="80">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2308" pos:column="9">sc</name><op:operator pos:line="2308" pos:column="11">-&gt;</op:operator><name pos:line="2308" pos:column="13">ToElement</name></name><argument_list pos:line="2308" pos:column="22">()</argument_list></call><op:operator pos:line="2308" pos:column="24">-&gt;</op:operator><call><name pos:line="2308" pos:column="26">SetAttribute</name><argument_list pos:line="2308" pos:column="38">(<argument><expr><call><name pos:line="2308" pos:column="39">TEXT</name><argument_list pos:line="2308" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="2308" pos:column="44">"Shift"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2308" pos:column="54">key</name><op:operator pos:line="2308" pos:column="57">.</op:operator><name pos:line="2308" pos:column="58">_isShift</name></name><op:operator pos:line="2308" pos:column="66">?</op:operator><call><name pos:line="2308" pos:column="67">TEXT</name><argument_list pos:line="2308" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2308" pos:column="72">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2308" pos:column="78">:</op:operator><call><name pos:line="2308" pos:column="79">TEXT</name><argument_list pos:line="2308" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="2308" pos:column="84">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2309" pos:column="9">sc</name><op:operator pos:line="2309" pos:column="11">-&gt;</op:operator><name pos:line="2309" pos:column="13">ToElement</name></name><argument_list pos:line="2309" pos:column="22">()</argument_list></call><op:operator pos:line="2309" pos:column="24">-&gt;</op:operator><call><name pos:line="2309" pos:column="26">SetAttribute</name><argument_list pos:line="2309" pos:column="38">(<argument><expr><call><name pos:line="2309" pos:column="39">TEXT</name><argument_list pos:line="2309" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="2309" pos:column="44">"Key"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2309" pos:column="52">key</name><op:operator pos:line="2309" pos:column="55">.</op:operator><name pos:line="2309" pos:column="56">_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2312" pos:column="1">void</name></type> <name><name pos:line="2312" pos:column="6">NppParameters</name><op:operator pos:line="2312" pos:column="19">::</op:operator><name pos:line="2312" pos:column="21">insertMacro</name></name><parameter_list pos:line="2312" pos:column="32">(<param><decl><type><name pos:line="2312" pos:column="33">TiXmlNode</name> <type:modifier pos:line="2312" pos:column="43">*</type:modifier></type><name pos:line="2312" pos:column="44">macrosRoot</name></decl></param>, <param><decl><type><specifier pos:line="2312" pos:column="56">const</specifier> <name pos:line="2312" pos:column="62">MacroShortcut</name> <type:modifier pos:line="2312" pos:column="76">&amp;</type:modifier></type> <name pos:line="2312" pos:column="78">macro</name></decl></param>)</parameter_list>
<block pos:line="2313" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="2314" pos:column="9">const</specifier> <name pos:line="2314" pos:column="15">KeyCombo</name> <type:modifier pos:line="2314" pos:column="24">&amp;</type:modifier></type> <name pos:line="2314" pos:column="26">key</name> <init pos:line="2314" pos:column="30">= <expr><call><name><name pos:line="2314" pos:column="32">macro</name><op:operator pos:line="2314" pos:column="37">.</op:operator><name pos:line="2314" pos:column="38">getKeyCombo</name></name><argument_list pos:line="2314" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2315" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2315" pos:column="19">*</type:modifier></type><name pos:line="2315" pos:column="20">macroRoot</name> <init pos:line="2315" pos:column="30">= <expr><call><name><name pos:line="2315" pos:column="32">macrosRoot</name><op:operator pos:line="2315" pos:column="42">-&gt;</op:operator><name pos:line="2315" pos:column="44">InsertEndChild</name></name><argument_list pos:line="2315" pos:column="58">(<argument><expr><call><name pos:line="2315" pos:column="59">TiXmlElement</name><argument_list pos:line="2315" pos:column="71">(<argument><expr><call><name pos:line="2315" pos:column="72">TEXT</name><argument_list pos:line="2315" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2315" pos:column="77">"Macro"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="2316" pos:column="9">macroRoot</name><op:operator pos:line="2316" pos:column="18">-&gt;</op:operator><name pos:line="2316" pos:column="20">ToElement</name></name><argument_list pos:line="2316" pos:column="29">()</argument_list></call><op:operator pos:line="2316" pos:column="31">-&gt;</op:operator><call><name pos:line="2316" pos:column="33">SetAttribute</name><argument_list pos:line="2316" pos:column="45">(<argument><expr><call><name pos:line="2316" pos:column="46">TEXT</name><argument_list pos:line="2316" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2316" pos:column="51">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2316" pos:column="60">macro</name><op:operator pos:line="2316" pos:column="65">.</op:operator><name pos:line="2316" pos:column="66">getMenuName</name></name><argument_list pos:line="2316" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2317" pos:column="9">macroRoot</name><op:operator pos:line="2317" pos:column="18">-&gt;</op:operator><name pos:line="2317" pos:column="20">ToElement</name></name><argument_list pos:line="2317" pos:column="29">()</argument_list></call><op:operator pos:line="2317" pos:column="31">-&gt;</op:operator><call><name pos:line="2317" pos:column="33">SetAttribute</name><argument_list pos:line="2317" pos:column="45">(<argument><expr><call><name pos:line="2317" pos:column="46">TEXT</name><argument_list pos:line="2317" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2317" pos:column="51">"Ctrl"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2317" pos:column="60">key</name><op:operator pos:line="2317" pos:column="63">.</op:operator><name pos:line="2317" pos:column="64">_isCtrl</name></name><op:operator pos:line="2317" pos:column="71">?</op:operator><call><name pos:line="2317" pos:column="72">TEXT</name><argument_list pos:line="2317" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2317" pos:column="77">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2317" pos:column="83">:</op:operator><call><name pos:line="2317" pos:column="84">TEXT</name><argument_list pos:line="2317" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="2317" pos:column="89">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2318" pos:column="9">macroRoot</name><op:operator pos:line="2318" pos:column="18">-&gt;</op:operator><name pos:line="2318" pos:column="20">ToElement</name></name><argument_list pos:line="2318" pos:column="29">()</argument_list></call><op:operator pos:line="2318" pos:column="31">-&gt;</op:operator><call><name pos:line="2318" pos:column="33">SetAttribute</name><argument_list pos:line="2318" pos:column="45">(<argument><expr><call><name pos:line="2318" pos:column="46">TEXT</name><argument_list pos:line="2318" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2318" pos:column="51">"Alt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2318" pos:column="59">key</name><op:operator pos:line="2318" pos:column="62">.</op:operator><name pos:line="2318" pos:column="63">_isAlt</name></name><op:operator pos:line="2318" pos:column="69">?</op:operator><call><name pos:line="2318" pos:column="70">TEXT</name><argument_list pos:line="2318" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="2318" pos:column="75">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2318" pos:column="81">:</op:operator><call><name pos:line="2318" pos:column="82">TEXT</name><argument_list pos:line="2318" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="2318" pos:column="87">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2319" pos:column="9">macroRoot</name><op:operator pos:line="2319" pos:column="18">-&gt;</op:operator><name pos:line="2319" pos:column="20">ToElement</name></name><argument_list pos:line="2319" pos:column="29">()</argument_list></call><op:operator pos:line="2319" pos:column="31">-&gt;</op:operator><call><name pos:line="2319" pos:column="33">SetAttribute</name><argument_list pos:line="2319" pos:column="45">(<argument><expr><call><name pos:line="2319" pos:column="46">TEXT</name><argument_list pos:line="2319" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2319" pos:column="51">"Shift"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2319" pos:column="61">key</name><op:operator pos:line="2319" pos:column="64">.</op:operator><name pos:line="2319" pos:column="65">_isShift</name></name><op:operator pos:line="2319" pos:column="73">?</op:operator><call><name pos:line="2319" pos:column="74">TEXT</name><argument_list pos:line="2319" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="2319" pos:column="79">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2319" pos:column="85">:</op:operator><call><name pos:line="2319" pos:column="86">TEXT</name><argument_list pos:line="2319" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="2319" pos:column="91">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2320" pos:column="9">macroRoot</name><op:operator pos:line="2320" pos:column="18">-&gt;</op:operator><name pos:line="2320" pos:column="20">ToElement</name></name><argument_list pos:line="2320" pos:column="29">()</argument_list></call><op:operator pos:line="2320" pos:column="31">-&gt;</op:operator><call><name pos:line="2320" pos:column="33">SetAttribute</name><argument_list pos:line="2320" pos:column="45">(<argument><expr><call><name pos:line="2320" pos:column="46">TEXT</name><argument_list pos:line="2320" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2320" pos:column="51">"Key"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2320" pos:column="59">key</name><op:operator pos:line="2320" pos:column="62">.</op:operator><name pos:line="2320" pos:column="63">_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="2321" pos:column="9">for (<init><decl><type><name pos:line="2321" pos:column="14">size_t</name></type> <name pos:line="2321" pos:column="21">i</name> <init pos:line="2321" pos:column="23">= <expr><lit:literal type="number" pos:line="2321" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2321" pos:column="29">i</name> <op:operator pos:line="2321" pos:column="31">&lt;</op:operator> <call><name><name pos:line="2321" pos:column="33">macro</name><op:operator pos:line="2321" pos:column="38">.</op:operator><name pos:line="2321" pos:column="39">_macro</name><op:operator pos:line="2321" pos:column="45">.</op:operator><name pos:line="2321" pos:column="46">size</name></name><argument_list pos:line="2321" pos:column="50">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2321" pos:column="55">i</name><op:operator pos:line="2321" pos:column="56">++</op:operator></expr></incr>)
	<block pos:line="2322" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2323" pos:column="17">TiXmlNode</name> <type:modifier pos:line="2323" pos:column="27">*</type:modifier></type><name pos:line="2323" pos:column="28">actionNode</name> <init pos:line="2323" pos:column="39">= <expr><call><name><name pos:line="2323" pos:column="41">macroRoot</name><op:operator pos:line="2323" pos:column="50">-&gt;</op:operator><name pos:line="2323" pos:column="52">InsertEndChild</name></name><argument_list pos:line="2323" pos:column="66">(<argument><expr><call><name pos:line="2323" pos:column="67">TiXmlElement</name><argument_list pos:line="2323" pos:column="79">(<argument><expr><call><name pos:line="2323" pos:column="80">TEXT</name><argument_list pos:line="2323" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="2323" pos:column="85">"Action"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2324" pos:column="17">const</specifier> <name pos:line="2324" pos:column="23">recordedMacroStep</name> <type:modifier pos:line="2324" pos:column="41">&amp;</type:modifier></type> <name pos:line="2324" pos:column="43">action</name> <init pos:line="2324" pos:column="50">= <expr><name><name pos:line="2324" pos:column="52">macro</name><op:operator pos:line="2324" pos:column="57">.</op:operator><name pos:line="2324" pos:column="58">_macro</name><index pos:line="2324" pos:column="64">[<expr><name pos:line="2324" pos:column="65">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="2325" pos:column="17">actionNode</name><op:operator pos:line="2325" pos:column="27">-&gt;</op:operator><name pos:line="2325" pos:column="29">ToElement</name></name><argument_list pos:line="2325" pos:column="38">()</argument_list></call><op:operator pos:line="2325" pos:column="40">-&gt;</op:operator><call><name pos:line="2325" pos:column="42">SetAttribute</name><argument_list pos:line="2325" pos:column="54">(<argument><expr><call><name pos:line="2325" pos:column="55">TEXT</name><argument_list pos:line="2325" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2325" pos:column="60">"type"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2325" pos:column="69">action</name><op:operator pos:line="2325" pos:column="75">.</op:operator><name pos:line="2325" pos:column="76">MacroType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2326" pos:column="17">actionNode</name><op:operator pos:line="2326" pos:column="27">-&gt;</op:operator><name pos:line="2326" pos:column="29">ToElement</name></name><argument_list pos:line="2326" pos:column="38">()</argument_list></call><op:operator pos:line="2326" pos:column="40">-&gt;</op:operator><call><name pos:line="2326" pos:column="42">SetAttribute</name><argument_list pos:line="2326" pos:column="54">(<argument><expr><call><name pos:line="2326" pos:column="55">TEXT</name><argument_list pos:line="2326" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2326" pos:column="60">"message"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2326" pos:column="72">action</name><op:operator pos:line="2326" pos:column="78">.</op:operator><name pos:line="2326" pos:column="79">message</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2327" pos:column="17">actionNode</name><op:operator pos:line="2327" pos:column="27">-&gt;</op:operator><name pos:line="2327" pos:column="29">ToElement</name></name><argument_list pos:line="2327" pos:column="38">()</argument_list></call><op:operator pos:line="2327" pos:column="40">-&gt;</op:operator><call><name pos:line="2327" pos:column="42">SetAttribute</name><argument_list pos:line="2327" pos:column="54">(<argument><expr><call><name pos:line="2327" pos:column="55">TEXT</name><argument_list pos:line="2327" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2327" pos:column="60">"wParam"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2327" pos:column="71">action</name><op:operator pos:line="2327" pos:column="77">.</op:operator><name pos:line="2327" pos:column="78">wParameter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2328" pos:column="17">actionNode</name><op:operator pos:line="2328" pos:column="27">-&gt;</op:operator><name pos:line="2328" pos:column="29">ToElement</name></name><argument_list pos:line="2328" pos:column="38">()</argument_list></call><op:operator pos:line="2328" pos:column="40">-&gt;</op:operator><call><name pos:line="2328" pos:column="42">SetAttribute</name><argument_list pos:line="2328" pos:column="54">(<argument><expr><call><name pos:line="2328" pos:column="55">TEXT</name><argument_list pos:line="2328" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2328" pos:column="60">"lParam"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2328" pos:column="71">action</name><op:operator pos:line="2328" pos:column="77">.</op:operator><name pos:line="2328" pos:column="78">lParameter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="2329" pos:column="17">actionNode</name><op:operator pos:line="2329" pos:column="27">-&gt;</op:operator><name pos:line="2329" pos:column="29">ToElement</name></name><argument_list pos:line="2329" pos:column="38">()</argument_list></call><op:operator pos:line="2329" pos:column="40">-&gt;</op:operator><call><name pos:line="2329" pos:column="42">SetAttribute</name><argument_list pos:line="2329" pos:column="54">(<argument><expr><call><name pos:line="2329" pos:column="55">TEXT</name><argument_list pos:line="2329" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2329" pos:column="60">"sParam"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2329" pos:column="71">action</name><op:operator pos:line="2329" pos:column="77">.</op:operator><name pos:line="2329" pos:column="78">sParameter</name><op:operator pos:line="2329" pos:column="88">.</op:operator><name pos:line="2329" pos:column="89">c_str</name></name><argument_list pos:line="2329" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function>

<function><type><name pos:line="2333" pos:column="1">void</name></type> <name><name pos:line="2333" pos:column="6">NppParameters</name><op:operator pos:line="2333" pos:column="19">::</op:operator><name pos:line="2333" pos:column="21">insertUserCmd</name></name><parameter_list pos:line="2333" pos:column="34">(<param><decl><type><name pos:line="2333" pos:column="35">TiXmlNode</name> <type:modifier pos:line="2333" pos:column="45">*</type:modifier></type><name pos:line="2333" pos:column="46">userCmdRoot</name></decl></param>, <param><decl><type><specifier pos:line="2333" pos:column="59">const</specifier> <name pos:line="2333" pos:column="65">UserCommand</name> <type:modifier pos:line="2333" pos:column="77">&amp;</type:modifier></type> <name pos:line="2333" pos:column="79">userCmd</name></decl></param>)</parameter_list>
<block pos:line="2334" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="2335" pos:column="9">const</specifier> <name pos:line="2335" pos:column="15">KeyCombo</name> <type:modifier pos:line="2335" pos:column="24">&amp;</type:modifier></type> <name pos:line="2335" pos:column="26">key</name> <init pos:line="2335" pos:column="30">= <expr><call><name><name pos:line="2335" pos:column="32">userCmd</name><op:operator pos:line="2335" pos:column="39">.</op:operator><name pos:line="2335" pos:column="40">getKeyCombo</name></name><argument_list pos:line="2335" pos:column="51">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2336" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2336" pos:column="19">*</type:modifier></type><name pos:line="2336" pos:column="20">cmdRoot</name> <init pos:line="2336" pos:column="28">= <expr><call><name><name pos:line="2336" pos:column="30">userCmdRoot</name><op:operator pos:line="2336" pos:column="41">-&gt;</op:operator><name pos:line="2336" pos:column="43">InsertEndChild</name></name><argument_list pos:line="2336" pos:column="57">(<argument><expr><call><name pos:line="2336" pos:column="58">TiXmlElement</name><argument_list pos:line="2336" pos:column="70">(<argument><expr><call><name pos:line="2336" pos:column="71">TEXT</name><argument_list pos:line="2336" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="2336" pos:column="76">"Command"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="2337" pos:column="9">cmdRoot</name><op:operator pos:line="2337" pos:column="16">-&gt;</op:operator><name pos:line="2337" pos:column="18">ToElement</name></name><argument_list pos:line="2337" pos:column="27">()</argument_list></call><op:operator pos:line="2337" pos:column="29">-&gt;</op:operator><call><name pos:line="2337" pos:column="31">SetAttribute</name><argument_list pos:line="2337" pos:column="43">(<argument><expr><call><name pos:line="2337" pos:column="44">TEXT</name><argument_list pos:line="2337" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2337" pos:column="49">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2337" pos:column="58">userCmd</name><op:operator pos:line="2337" pos:column="65">.</op:operator><name pos:line="2337" pos:column="66">getMenuName</name></name><argument_list pos:line="2337" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2338" pos:column="9">cmdRoot</name><op:operator pos:line="2338" pos:column="16">-&gt;</op:operator><name pos:line="2338" pos:column="18">ToElement</name></name><argument_list pos:line="2338" pos:column="27">()</argument_list></call><op:operator pos:line="2338" pos:column="29">-&gt;</op:operator><call><name pos:line="2338" pos:column="31">SetAttribute</name><argument_list pos:line="2338" pos:column="43">(<argument><expr><call><name pos:line="2338" pos:column="44">TEXT</name><argument_list pos:line="2338" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2338" pos:column="49">"Ctrl"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2338" pos:column="58">key</name><op:operator pos:line="2338" pos:column="61">.</op:operator><name pos:line="2338" pos:column="62">_isCtrl</name></name><op:operator pos:line="2338" pos:column="69">?</op:operator><call><name pos:line="2338" pos:column="70">TEXT</name><argument_list pos:line="2338" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="2338" pos:column="75">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2338" pos:column="81">:</op:operator><call><name pos:line="2338" pos:column="82">TEXT</name><argument_list pos:line="2338" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="2338" pos:column="87">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2339" pos:column="9">cmdRoot</name><op:operator pos:line="2339" pos:column="16">-&gt;</op:operator><name pos:line="2339" pos:column="18">ToElement</name></name><argument_list pos:line="2339" pos:column="27">()</argument_list></call><op:operator pos:line="2339" pos:column="29">-&gt;</op:operator><call><name pos:line="2339" pos:column="31">SetAttribute</name><argument_list pos:line="2339" pos:column="43">(<argument><expr><call><name pos:line="2339" pos:column="44">TEXT</name><argument_list pos:line="2339" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2339" pos:column="49">"Alt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2339" pos:column="57">key</name><op:operator pos:line="2339" pos:column="60">.</op:operator><name pos:line="2339" pos:column="61">_isAlt</name></name><op:operator pos:line="2339" pos:column="67">?</op:operator><call><name pos:line="2339" pos:column="68">TEXT</name><argument_list pos:line="2339" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="2339" pos:column="73">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2339" pos:column="79">:</op:operator><call><name pos:line="2339" pos:column="80">TEXT</name><argument_list pos:line="2339" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="2339" pos:column="85">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2340" pos:column="9">cmdRoot</name><op:operator pos:line="2340" pos:column="16">-&gt;</op:operator><name pos:line="2340" pos:column="18">ToElement</name></name><argument_list pos:line="2340" pos:column="27">()</argument_list></call><op:operator pos:line="2340" pos:column="29">-&gt;</op:operator><call><name pos:line="2340" pos:column="31">SetAttribute</name><argument_list pos:line="2340" pos:column="43">(<argument><expr><call><name pos:line="2340" pos:column="44">TEXT</name><argument_list pos:line="2340" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2340" pos:column="49">"Shift"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2340" pos:column="59">key</name><op:operator pos:line="2340" pos:column="62">.</op:operator><name pos:line="2340" pos:column="63">_isShift</name></name><op:operator pos:line="2340" pos:column="71">?</op:operator><call><name pos:line="2340" pos:column="72">TEXT</name><argument_list pos:line="2340" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2340" pos:column="77">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2340" pos:column="83">:</op:operator><call><name pos:line="2340" pos:column="84">TEXT</name><argument_list pos:line="2340" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="2340" pos:column="89">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2341" pos:column="9">cmdRoot</name><op:operator pos:line="2341" pos:column="16">-&gt;</op:operator><name pos:line="2341" pos:column="18">ToElement</name></name><argument_list pos:line="2341" pos:column="27">()</argument_list></call><op:operator pos:line="2341" pos:column="29">-&gt;</op:operator><call><name pos:line="2341" pos:column="31">SetAttribute</name><argument_list pos:line="2341" pos:column="43">(<argument><expr><call><name pos:line="2341" pos:column="44">TEXT</name><argument_list pos:line="2341" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2341" pos:column="49">"Key"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2341" pos:column="57">key</name><op:operator pos:line="2341" pos:column="60">.</op:operator><name pos:line="2341" pos:column="61">_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2342" pos:column="9">cmdRoot</name><op:operator pos:line="2342" pos:column="16">-&gt;</op:operator><name pos:line="2342" pos:column="18">InsertEndChild</name></name><argument_list pos:line="2342" pos:column="32">(<argument><expr><call><name pos:line="2342" pos:column="33">TiXmlText</name><argument_list pos:line="2342" pos:column="42">(<argument><expr><call><name><name pos:line="2342" pos:column="43">userCmd</name><op:operator pos:line="2342" pos:column="50">.</op:operator><name pos:line="2342" pos:column="51">_cmd</name><op:operator pos:line="2342" pos:column="55">.</op:operator><name pos:line="2342" pos:column="56">c_str</name></name><argument_list pos:line="2342" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2345" pos:column="1">void</name></type> <name><name pos:line="2345" pos:column="6">NppParameters</name><op:operator pos:line="2345" pos:column="19">::</op:operator><name pos:line="2345" pos:column="21">insertPluginCmd</name></name><parameter_list pos:line="2345" pos:column="36">(<param><decl><type><name pos:line="2345" pos:column="37">TiXmlNode</name> <type:modifier pos:line="2345" pos:column="47">*</type:modifier></type><name pos:line="2345" pos:column="48">pluginCmdRoot</name></decl></param>, <param><decl><type><specifier pos:line="2345" pos:column="63">const</specifier> <name pos:line="2345" pos:column="69">PluginCmdShortcut</name> <type:modifier pos:line="2345" pos:column="87">&amp;</type:modifier></type> <name pos:line="2345" pos:column="89">pluginCmd</name></decl></param>)</parameter_list>
<block pos:line="2346" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="2347" pos:column="9">const</specifier> <name pos:line="2347" pos:column="15">KeyCombo</name> <type:modifier pos:line="2347" pos:column="24">&amp;</type:modifier></type> <name pos:line="2347" pos:column="26">key</name> <init pos:line="2347" pos:column="30">= <expr><call><name><name pos:line="2347" pos:column="32">pluginCmd</name><op:operator pos:line="2347" pos:column="41">.</op:operator><name pos:line="2347" pos:column="42">getKeyCombo</name></name><argument_list pos:line="2347" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2348" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2348" pos:column="19">*</type:modifier></type><name pos:line="2348" pos:column="20">pluginCmdNode</name> <init pos:line="2348" pos:column="34">= <expr><call><name><name pos:line="2348" pos:column="36">pluginCmdRoot</name><op:operator pos:line="2348" pos:column="49">-&gt;</op:operator><name pos:line="2348" pos:column="51">InsertEndChild</name></name><argument_list pos:line="2348" pos:column="65">(<argument><expr><call><name pos:line="2348" pos:column="66">TiXmlElement</name><argument_list pos:line="2348" pos:column="78">(<argument><expr><call><name pos:line="2348" pos:column="79">TEXT</name><argument_list pos:line="2348" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="2348" pos:column="84">"PluginCommand"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="2349" pos:column="9">pluginCmdNode</name><op:operator pos:line="2349" pos:column="22">-&gt;</op:operator><name pos:line="2349" pos:column="24">ToElement</name></name><argument_list pos:line="2349" pos:column="33">()</argument_list></call><op:operator pos:line="2349" pos:column="35">-&gt;</op:operator><call><name pos:line="2349" pos:column="37">SetAttribute</name><argument_list pos:line="2349" pos:column="49">(<argument><expr><call><name pos:line="2349" pos:column="50">TEXT</name><argument_list pos:line="2349" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2349" pos:column="55">"moduleName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2349" pos:column="70">pluginCmd</name><op:operator pos:line="2349" pos:column="79">.</op:operator><name pos:line="2349" pos:column="80">getModuleName</name></name><argument_list pos:line="2349" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2350" pos:column="9">pluginCmdNode</name><op:operator pos:line="2350" pos:column="22">-&gt;</op:operator><name pos:line="2350" pos:column="24">ToElement</name></name><argument_list pos:line="2350" pos:column="33">()</argument_list></call><op:operator pos:line="2350" pos:column="35">-&gt;</op:operator><call><name pos:line="2350" pos:column="37">SetAttribute</name><argument_list pos:line="2350" pos:column="49">(<argument><expr><call><name pos:line="2350" pos:column="50">TEXT</name><argument_list pos:line="2350" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2350" pos:column="55">"internalID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2350" pos:column="70">pluginCmd</name><op:operator pos:line="2350" pos:column="79">.</op:operator><name pos:line="2350" pos:column="80">getInternalID</name></name><argument_list pos:line="2350" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2351" pos:column="9">pluginCmdNode</name><op:operator pos:line="2351" pos:column="22">-&gt;</op:operator><name pos:line="2351" pos:column="24">ToElement</name></name><argument_list pos:line="2351" pos:column="33">()</argument_list></call><op:operator pos:line="2351" pos:column="35">-&gt;</op:operator><call><name pos:line="2351" pos:column="37">SetAttribute</name><argument_list pos:line="2351" pos:column="49">(<argument><expr><call><name pos:line="2351" pos:column="50">TEXT</name><argument_list pos:line="2351" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2351" pos:column="55">"Ctrl"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2351" pos:column="64">key</name><op:operator pos:line="2351" pos:column="67">.</op:operator><name pos:line="2351" pos:column="68">_isCtrl</name></name><op:operator pos:line="2351" pos:column="75">?</op:operator><call><name pos:line="2351" pos:column="76">TEXT</name><argument_list pos:line="2351" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="2351" pos:column="81">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2351" pos:column="87">:</op:operator><call><name pos:line="2351" pos:column="88">TEXT</name><argument_list pos:line="2351" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="2351" pos:column="93">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2352" pos:column="9">pluginCmdNode</name><op:operator pos:line="2352" pos:column="22">-&gt;</op:operator><name pos:line="2352" pos:column="24">ToElement</name></name><argument_list pos:line="2352" pos:column="33">()</argument_list></call><op:operator pos:line="2352" pos:column="35">-&gt;</op:operator><call><name pos:line="2352" pos:column="37">SetAttribute</name><argument_list pos:line="2352" pos:column="49">(<argument><expr><call><name pos:line="2352" pos:column="50">TEXT</name><argument_list pos:line="2352" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2352" pos:column="55">"Alt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2352" pos:column="63">key</name><op:operator pos:line="2352" pos:column="66">.</op:operator><name pos:line="2352" pos:column="67">_isAlt</name></name><op:operator pos:line="2352" pos:column="73">?</op:operator><call><name pos:line="2352" pos:column="74">TEXT</name><argument_list pos:line="2352" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="2352" pos:column="79">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2352" pos:column="85">:</op:operator><call><name pos:line="2352" pos:column="86">TEXT</name><argument_list pos:line="2352" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="2352" pos:column="91">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2353" pos:column="9">pluginCmdNode</name><op:operator pos:line="2353" pos:column="22">-&gt;</op:operator><name pos:line="2353" pos:column="24">ToElement</name></name><argument_list pos:line="2353" pos:column="33">()</argument_list></call><op:operator pos:line="2353" pos:column="35">-&gt;</op:operator><call><name pos:line="2353" pos:column="37">SetAttribute</name><argument_list pos:line="2353" pos:column="49">(<argument><expr><call><name pos:line="2353" pos:column="50">TEXT</name><argument_list pos:line="2353" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2353" pos:column="55">"Shift"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2353" pos:column="65">key</name><op:operator pos:line="2353" pos:column="68">.</op:operator><name pos:line="2353" pos:column="69">_isShift</name></name><op:operator pos:line="2353" pos:column="77">?</op:operator><call><name pos:line="2353" pos:column="78">TEXT</name><argument_list pos:line="2353" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="2353" pos:column="83">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2353" pos:column="89">:</op:operator><call><name pos:line="2353" pos:column="90">TEXT</name><argument_list pos:line="2353" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="2353" pos:column="95">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2354" pos:column="9">pluginCmdNode</name><op:operator pos:line="2354" pos:column="22">-&gt;</op:operator><name pos:line="2354" pos:column="24">ToElement</name></name><argument_list pos:line="2354" pos:column="33">()</argument_list></call><op:operator pos:line="2354" pos:column="35">-&gt;</op:operator><call><name pos:line="2354" pos:column="37">SetAttribute</name><argument_list pos:line="2354" pos:column="49">(<argument><expr><call><name pos:line="2354" pos:column="50">TEXT</name><argument_list pos:line="2354" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2354" pos:column="55">"Key"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2354" pos:column="63">key</name><op:operator pos:line="2354" pos:column="66">.</op:operator><name pos:line="2354" pos:column="67">_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2357" pos:column="1">void</name></type> <name><name pos:line="2357" pos:column="6">NppParameters</name><op:operator pos:line="2357" pos:column="19">::</op:operator><name pos:line="2357" pos:column="21">insertScintKey</name></name><parameter_list pos:line="2357" pos:column="35">(<param><decl><type><name pos:line="2357" pos:column="36">TiXmlNode</name> <type:modifier pos:line="2357" pos:column="46">*</type:modifier></type><name pos:line="2357" pos:column="47">scintKeyRoot</name></decl></param>, <param><decl><type><specifier pos:line="2357" pos:column="61">const</specifier> <name pos:line="2357" pos:column="67">ScintillaKeyMap</name> <type:modifier pos:line="2357" pos:column="83">&amp;</type:modifier></type> <name pos:line="2357" pos:column="85">scintKeyMap</name></decl></param>)</parameter_list>
<block pos:line="2358" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2359" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2359" pos:column="19">*</type:modifier></type><name pos:line="2359" pos:column="20">keyRoot</name> <init pos:line="2359" pos:column="28">= <expr><call><name><name pos:line="2359" pos:column="30">scintKeyRoot</name><op:operator pos:line="2359" pos:column="42">-&gt;</op:operator><name pos:line="2359" pos:column="44">InsertEndChild</name></name><argument_list pos:line="2359" pos:column="58">(<argument><expr><call><name pos:line="2359" pos:column="59">TiXmlElement</name><argument_list pos:line="2359" pos:column="71">(<argument><expr><call><name pos:line="2359" pos:column="72">TEXT</name><argument_list pos:line="2359" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2359" pos:column="77">"ScintKey"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="2360" pos:column="9">keyRoot</name><op:operator pos:line="2360" pos:column="16">-&gt;</op:operator><name pos:line="2360" pos:column="18">ToElement</name></name><argument_list pos:line="2360" pos:column="27">()</argument_list></call><op:operator pos:line="2360" pos:column="29">-&gt;</op:operator><call><name pos:line="2360" pos:column="31">SetAttribute</name><argument_list pos:line="2360" pos:column="43">(<argument><expr><call><name pos:line="2360" pos:column="44">TEXT</name><argument_list pos:line="2360" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2360" pos:column="49">"ScintID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2360" pos:column="61">scintKeyMap</name><op:operator pos:line="2360" pos:column="72">.</op:operator><name pos:line="2360" pos:column="73">getScintillaKeyID</name></name><argument_list pos:line="2360" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2361" pos:column="9">keyRoot</name><op:operator pos:line="2361" pos:column="16">-&gt;</op:operator><name pos:line="2361" pos:column="18">ToElement</name></name><argument_list pos:line="2361" pos:column="27">()</argument_list></call><op:operator pos:line="2361" pos:column="29">-&gt;</op:operator><call><name pos:line="2361" pos:column="31">SetAttribute</name><argument_list pos:line="2361" pos:column="43">(<argument><expr><call><name pos:line="2361" pos:column="44">TEXT</name><argument_list pos:line="2361" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2361" pos:column="49">"menuCmdID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2361" pos:column="63">scintKeyMap</name><op:operator pos:line="2361" pos:column="74">.</op:operator><name pos:line="2361" pos:column="75">getMenuCmdID</name></name><argument_list pos:line="2361" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="2363" pos:column="9">//Add main shortcut</comment>
	<decl_stmt><decl><type><name pos:line="2364" pos:column="9">KeyCombo</name></type> <name pos:line="2364" pos:column="18">key</name> <init pos:line="2364" pos:column="22">= <expr><call><name><name pos:line="2364" pos:column="24">scintKeyMap</name><op:operator pos:line="2364" pos:column="35">.</op:operator><name pos:line="2364" pos:column="36">getKeyComboByIndex</name></name><argument_list pos:line="2364" pos:column="54">(<argument><expr><lit:literal type="number" pos:line="2364" pos:column="55">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="2365" pos:column="9">keyRoot</name><op:operator pos:line="2365" pos:column="16">-&gt;</op:operator><name pos:line="2365" pos:column="18">ToElement</name></name><argument_list pos:line="2365" pos:column="27">()</argument_list></call><op:operator pos:line="2365" pos:column="29">-&gt;</op:operator><call><name pos:line="2365" pos:column="31">SetAttribute</name><argument_list pos:line="2365" pos:column="43">(<argument><expr><call><name pos:line="2365" pos:column="44">TEXT</name><argument_list pos:line="2365" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2365" pos:column="49">"Ctrl"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2365" pos:column="58">key</name><op:operator pos:line="2365" pos:column="61">.</op:operator><name pos:line="2365" pos:column="62">_isCtrl</name></name><op:operator pos:line="2365" pos:column="69">?</op:operator><call><name pos:line="2365" pos:column="70">TEXT</name><argument_list pos:line="2365" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="2365" pos:column="75">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2365" pos:column="81">:</op:operator><call><name pos:line="2365" pos:column="82">TEXT</name><argument_list pos:line="2365" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="2365" pos:column="87">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2366" pos:column="9">keyRoot</name><op:operator pos:line="2366" pos:column="16">-&gt;</op:operator><name pos:line="2366" pos:column="18">ToElement</name></name><argument_list pos:line="2366" pos:column="27">()</argument_list></call><op:operator pos:line="2366" pos:column="29">-&gt;</op:operator><call><name pos:line="2366" pos:column="31">SetAttribute</name><argument_list pos:line="2366" pos:column="43">(<argument><expr><call><name pos:line="2366" pos:column="44">TEXT</name><argument_list pos:line="2366" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2366" pos:column="49">"Alt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2366" pos:column="57">key</name><op:operator pos:line="2366" pos:column="60">.</op:operator><name pos:line="2366" pos:column="61">_isAlt</name></name><op:operator pos:line="2366" pos:column="67">?</op:operator><call><name pos:line="2366" pos:column="68">TEXT</name><argument_list pos:line="2366" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="2366" pos:column="73">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2366" pos:column="79">:</op:operator><call><name pos:line="2366" pos:column="80">TEXT</name><argument_list pos:line="2366" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="2366" pos:column="85">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2367" pos:column="9">keyRoot</name><op:operator pos:line="2367" pos:column="16">-&gt;</op:operator><name pos:line="2367" pos:column="18">ToElement</name></name><argument_list pos:line="2367" pos:column="27">()</argument_list></call><op:operator pos:line="2367" pos:column="29">-&gt;</op:operator><call><name pos:line="2367" pos:column="31">SetAttribute</name><argument_list pos:line="2367" pos:column="43">(<argument><expr><call><name pos:line="2367" pos:column="44">TEXT</name><argument_list pos:line="2367" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2367" pos:column="49">"Shift"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2367" pos:column="59">key</name><op:operator pos:line="2367" pos:column="62">.</op:operator><name pos:line="2367" pos:column="63">_isShift</name></name><op:operator pos:line="2367" pos:column="71">?</op:operator><call><name pos:line="2367" pos:column="72">TEXT</name><argument_list pos:line="2367" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2367" pos:column="77">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2367" pos:column="83">:</op:operator><call><name pos:line="2367" pos:column="84">TEXT</name><argument_list pos:line="2367" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="2367" pos:column="89">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2368" pos:column="9">keyRoot</name><op:operator pos:line="2368" pos:column="16">-&gt;</op:operator><name pos:line="2368" pos:column="18">ToElement</name></name><argument_list pos:line="2368" pos:column="27">()</argument_list></call><op:operator pos:line="2368" pos:column="29">-&gt;</op:operator><call><name pos:line="2368" pos:column="31">SetAttribute</name><argument_list pos:line="2368" pos:column="43">(<argument><expr><call><name pos:line="2368" pos:column="44">TEXT</name><argument_list pos:line="2368" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2368" pos:column="49">"Key"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2368" pos:column="57">key</name><op:operator pos:line="2368" pos:column="60">.</op:operator><name pos:line="2368" pos:column="61">_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="2370" pos:column="9">//Add additional shortcuts</comment>
	<decl_stmt><decl><type><name pos:line="2371" pos:column="9">size_t</name></type> <name pos:line="2371" pos:column="16">size</name> <init pos:line="2371" pos:column="21">= <expr><call><name><name pos:line="2371" pos:column="23">scintKeyMap</name><op:operator pos:line="2371" pos:column="34">.</op:operator><name pos:line="2371" pos:column="35">getSize</name></name><argument_list pos:line="2371" pos:column="42">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2372" pos:column="9">if <condition pos:line="2372" pos:column="12">(<expr><name pos:line="2372" pos:column="13">size</name> <op:operator pos:line="2372" pos:column="18">&gt;</op:operator> <lit:literal type="number" pos:line="2372" pos:column="20">1</lit:literal></expr>)</condition><then pos:line="2372" pos:column="22"> <block pos:line="2372" pos:column="23">{
		<decl_stmt><decl><type><name pos:line="2373" pos:column="17">TiXmlNode</name> <type:modifier pos:line="2373" pos:column="27">*</type:modifier></type> <name pos:line="2373" pos:column="29">keyNext</name></decl>;</decl_stmt>
		<for pos:line="2374" pos:column="17">for(<init><decl><type><name pos:line="2374" pos:column="21">size_t</name></type> <name pos:line="2374" pos:column="28">i</name> <init pos:line="2374" pos:column="30">= <expr><lit:literal type="number" pos:line="2374" pos:column="32">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2374" pos:column="35">i</name> <op:operator pos:line="2374" pos:column="37">&lt;</op:operator> <name pos:line="2374" pos:column="39">size</name></expr>;</condition> <incr><expr><name pos:line="2374" pos:column="45">i</name><op:operator pos:line="2374" pos:column="46">++</op:operator></expr></incr>) <block pos:line="2374" pos:column="50">{
			<expr_stmt><expr><name pos:line="2375" pos:column="25">keyNext</name> <op:operator pos:line="2375" pos:column="33">=</op:operator> <call><name><name pos:line="2375" pos:column="35">keyRoot</name><op:operator pos:line="2375" pos:column="42">-&gt;</op:operator><name pos:line="2375" pos:column="44">InsertEndChild</name></name><argument_list pos:line="2375" pos:column="58">(<argument><expr><call><name pos:line="2375" pos:column="59">TiXmlElement</name><argument_list pos:line="2375" pos:column="71">(<argument><expr><call><name pos:line="2375" pos:column="72">TEXT</name><argument_list pos:line="2375" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2375" pos:column="77">"NextKey"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2376" pos:column="25">key</name> <op:operator pos:line="2376" pos:column="29">=</op:operator> <call><name><name pos:line="2376" pos:column="31">scintKeyMap</name><op:operator pos:line="2376" pos:column="42">.</op:operator><name pos:line="2376" pos:column="43">getKeyComboByIndex</name></name><argument_list pos:line="2376" pos:column="61">(<argument><expr><name pos:line="2376" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2377" pos:column="25">keyNext</name><op:operator pos:line="2377" pos:column="32">-&gt;</op:operator><name pos:line="2377" pos:column="34">ToElement</name></name><argument_list pos:line="2377" pos:column="43">()</argument_list></call><op:operator pos:line="2377" pos:column="45">-&gt;</op:operator><call><name pos:line="2377" pos:column="47">SetAttribute</name><argument_list pos:line="2377" pos:column="59">(<argument><expr><call><name pos:line="2377" pos:column="60">TEXT</name><argument_list pos:line="2377" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2377" pos:column="65">"Ctrl"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2377" pos:column="74">key</name><op:operator pos:line="2377" pos:column="77">.</op:operator><name pos:line="2377" pos:column="78">_isCtrl</name></name><op:operator pos:line="2377" pos:column="85">?</op:operator><call><name pos:line="2377" pos:column="86">TEXT</name><argument_list pos:line="2377" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="2377" pos:column="91">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2377" pos:column="97">:</op:operator><call><name pos:line="2377" pos:column="98">TEXT</name><argument_list pos:line="2377" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="2377" pos:column="103">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2378" pos:column="25">keyNext</name><op:operator pos:line="2378" pos:column="32">-&gt;</op:operator><name pos:line="2378" pos:column="34">ToElement</name></name><argument_list pos:line="2378" pos:column="43">()</argument_list></call><op:operator pos:line="2378" pos:column="45">-&gt;</op:operator><call><name pos:line="2378" pos:column="47">SetAttribute</name><argument_list pos:line="2378" pos:column="59">(<argument><expr><call><name pos:line="2378" pos:column="60">TEXT</name><argument_list pos:line="2378" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2378" pos:column="65">"Alt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2378" pos:column="73">key</name><op:operator pos:line="2378" pos:column="76">.</op:operator><name pos:line="2378" pos:column="77">_isAlt</name></name><op:operator pos:line="2378" pos:column="83">?</op:operator><call><name pos:line="2378" pos:column="84">TEXT</name><argument_list pos:line="2378" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="2378" pos:column="89">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2378" pos:column="95">:</op:operator><call><name pos:line="2378" pos:column="96">TEXT</name><argument_list pos:line="2378" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="2378" pos:column="101">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2379" pos:column="25">keyNext</name><op:operator pos:line="2379" pos:column="32">-&gt;</op:operator><name pos:line="2379" pos:column="34">ToElement</name></name><argument_list pos:line="2379" pos:column="43">()</argument_list></call><op:operator pos:line="2379" pos:column="45">-&gt;</op:operator><call><name pos:line="2379" pos:column="47">SetAttribute</name><argument_list pos:line="2379" pos:column="59">(<argument><expr><call><name pos:line="2379" pos:column="60">TEXT</name><argument_list pos:line="2379" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2379" pos:column="65">"Shift"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2379" pos:column="75">key</name><op:operator pos:line="2379" pos:column="78">.</op:operator><name pos:line="2379" pos:column="79">_isShift</name></name><op:operator pos:line="2379" pos:column="87">?</op:operator><call><name pos:line="2379" pos:column="88">TEXT</name><argument_list pos:line="2379" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="2379" pos:column="93">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2379" pos:column="99">:</op:operator><call><name pos:line="2379" pos:column="100">TEXT</name><argument_list pos:line="2379" pos:column="104">(<argument><expr><lit:literal type="string" pos:line="2379" pos:column="105">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2380" pos:column="25">keyNext</name><op:operator pos:line="2380" pos:column="32">-&gt;</op:operator><name pos:line="2380" pos:column="34">ToElement</name></name><argument_list pos:line="2380" pos:column="43">()</argument_list></call><op:operator pos:line="2380" pos:column="45">-&gt;</op:operator><call><name pos:line="2380" pos:column="47">SetAttribute</name><argument_list pos:line="2380" pos:column="59">(<argument><expr><call><name pos:line="2380" pos:column="60">TEXT</name><argument_list pos:line="2380" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2380" pos:column="65">"Key"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2380" pos:column="73">key</name><op:operator pos:line="2380" pos:column="76">.</op:operator><name pos:line="2380" pos:column="77">_key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2385" pos:column="1">void</name></type> <name><name pos:line="2385" pos:column="6">NppParameters</name><op:operator pos:line="2385" pos:column="19">::</op:operator><name pos:line="2385" pos:column="21">writeSession</name></name><parameter_list pos:line="2385" pos:column="33">(<param><decl><type><specifier pos:line="2385" pos:column="34">const</specifier> <name pos:line="2385" pos:column="40">Session</name> <type:modifier pos:line="2385" pos:column="48">&amp;</type:modifier></type> <name pos:line="2385" pos:column="50">session</name></decl></param>, <param><decl><type><specifier pos:line="2385" pos:column="59">const</specifier> <name pos:line="2385" pos:column="65">TCHAR</name> <type:modifier pos:line="2385" pos:column="71">*</type:modifier></type><name pos:line="2385" pos:column="72">fileName</name></decl></param>)</parameter_list>
<block pos:line="2386" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="2387" pos:column="9">const</specifier> <name pos:line="2387" pos:column="15">TCHAR</name> <type:modifier pos:line="2387" pos:column="21">*</type:modifier></type><name pos:line="2387" pos:column="22">pathName</name> <init pos:line="2387" pos:column="31">= <expr><name pos:line="2387" pos:column="33">fileName</name><op:operator pos:line="2387" pos:column="41">?</op:operator><name pos:line="2387" pos:column="42">fileName</name><op:operator pos:line="2387" pos:column="50">:</op:operator><call><name><name pos:line="2387" pos:column="51">_sessionPath</name><op:operator pos:line="2387" pos:column="63">.</op:operator><name pos:line="2387" pos:column="64">c_str</name></name><argument_list pos:line="2387" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="2389" pos:column="9">_pXmlSessionDoc</name> <op:operator pos:line="2389" pos:column="25">=</op:operator> <op:operator pos:line="2389" pos:column="27">new</op:operator> <call><name pos:line="2389" pos:column="31">TiXmlDocument</name><argument_list pos:line="2389" pos:column="44">(<argument><expr><name pos:line="2389" pos:column="45">pathName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2390" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2390" pos:column="19">*</type:modifier></type><name pos:line="2390" pos:column="20">root</name> <init pos:line="2390" pos:column="25">= <expr><call><name><name pos:line="2390" pos:column="27">_pXmlSessionDoc</name><op:operator pos:line="2390" pos:column="42">-&gt;</op:operator><name pos:line="2390" pos:column="44">InsertEndChild</name></name><argument_list pos:line="2390" pos:column="58">(<argument><expr><call><name pos:line="2390" pos:column="59">TiXmlElement</name><argument_list pos:line="2390" pos:column="71">(<argument><expr><call><name pos:line="2390" pos:column="72">TEXT</name><argument_list pos:line="2390" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2390" pos:column="77">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="2392" pos:column="9">if <condition pos:line="2392" pos:column="12">(<expr><name pos:line="2392" pos:column="13">root</name></expr>)</condition><then pos:line="2392" pos:column="18">
	<block pos:line="2393" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2394" pos:column="17">TiXmlNode</name> <type:modifier pos:line="2394" pos:column="27">*</type:modifier></type><name pos:line="2394" pos:column="28">sessionNode</name> <init pos:line="2394" pos:column="40">= <expr><call><name><name pos:line="2394" pos:column="42">root</name><op:operator pos:line="2394" pos:column="46">-&gt;</op:operator><name pos:line="2394" pos:column="48">InsertEndChild</name></name><argument_list pos:line="2394" pos:column="62">(<argument><expr><call><name pos:line="2394" pos:column="63">TiXmlElement</name><argument_list pos:line="2394" pos:column="75">(<argument><expr><call><name pos:line="2394" pos:column="76">TEXT</name><argument_list pos:line="2394" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="2394" pos:column="81">"Session"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><op:operator pos:line="2395" pos:column="17">(</op:operator><call><name><name pos:line="2395" pos:column="18">sessionNode</name><op:operator pos:line="2395" pos:column="29">-&gt;</op:operator><name pos:line="2395" pos:column="31">ToElement</name></name><argument_list pos:line="2395" pos:column="40">()</argument_list></call><op:operator pos:line="2395" pos:column="42">)</op:operator><op:operator pos:line="2395" pos:column="43">-&gt;</op:operator><call><name pos:line="2395" pos:column="45">SetAttribute</name><argument_list pos:line="2395" pos:column="57">(<argument><expr><call><name pos:line="2395" pos:column="58">TEXT</name><argument_list pos:line="2395" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2395" pos:column="63">"activeView"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2395" pos:column="78">(</op:operator><name pos:line="2395" pos:column="79">int</name><op:operator pos:line="2395" pos:column="82">)</op:operator><name><name pos:line="2395" pos:column="83">session</name><op:operator pos:line="2395" pos:column="90">.</op:operator><name pos:line="2395" pos:column="91">_activeView</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="2397" pos:column="17">TiXmlNode</name> <type:modifier pos:line="2397" pos:column="27">*</type:modifier></type><name pos:line="2397" pos:column="28">mainViewNode</name> <init pos:line="2397" pos:column="41">= <expr><call><name><name pos:line="2397" pos:column="43">sessionNode</name><op:operator pos:line="2397" pos:column="54">-&gt;</op:operator><name pos:line="2397" pos:column="56">InsertEndChild</name></name><argument_list pos:line="2397" pos:column="70">(<argument><expr><call><name pos:line="2397" pos:column="71">TiXmlElement</name><argument_list pos:line="2397" pos:column="83">(<argument><expr><call><name pos:line="2397" pos:column="84">TEXT</name><argument_list pos:line="2397" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="2397" pos:column="89">"mainView"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><op:operator pos:line="2398" pos:column="17">(</op:operator><call><name><name pos:line="2398" pos:column="18">mainViewNode</name><op:operator pos:line="2398" pos:column="30">-&gt;</op:operator><name pos:line="2398" pos:column="32">ToElement</name></name><argument_list pos:line="2398" pos:column="41">()</argument_list></call><op:operator pos:line="2398" pos:column="43">)</op:operator><op:operator pos:line="2398" pos:column="44">-&gt;</op:operator><call><name pos:line="2398" pos:column="46">SetAttribute</name><argument_list pos:line="2398" pos:column="58">(<argument><expr><call><name pos:line="2398" pos:column="59">TEXT</name><argument_list pos:line="2398" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="2398" pos:column="64">"activeIndex"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2398" pos:column="80">(</op:operator><name pos:line="2398" pos:column="81">int</name><op:operator pos:line="2398" pos:column="84">)</op:operator><name><name pos:line="2398" pos:column="85">session</name><op:operator pos:line="2398" pos:column="92">.</op:operator><name pos:line="2398" pos:column="93">_activeMainIndex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="2399" pos:column="17">for (<init><decl><type><name pos:line="2399" pos:column="22">size_t</name></type> <name pos:line="2399" pos:column="29">i</name> <init pos:line="2399" pos:column="31">= <expr><lit:literal type="number" pos:line="2399" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2399" pos:column="37">i</name> <op:operator pos:line="2399" pos:column="39">&lt;</op:operator> <call><name><name pos:line="2399" pos:column="41">session</name><op:operator pos:line="2399" pos:column="48">.</op:operator><name pos:line="2399" pos:column="49">_mainViewFiles</name><op:operator pos:line="2399" pos:column="63">.</op:operator><name pos:line="2399" pos:column="64">size</name></name><argument_list pos:line="2399" pos:column="68">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2399" pos:column="73">i</name><op:operator pos:line="2399" pos:column="74">++</op:operator></expr></incr>)
		<block pos:line="2400" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2401" pos:column="25">TiXmlNode</name> <type:modifier pos:line="2401" pos:column="35">*</type:modifier></type><name pos:line="2401" pos:column="36">fileNameNode</name> <init pos:line="2401" pos:column="49">= <expr><call><name><name pos:line="2401" pos:column="51">mainViewNode</name><op:operator pos:line="2401" pos:column="63">-&gt;</op:operator><name pos:line="2401" pos:column="65">InsertEndChild</name></name><argument_list pos:line="2401" pos:column="79">(<argument><expr><call><name pos:line="2401" pos:column="80">TiXmlElement</name><argument_list pos:line="2401" pos:column="92">(<argument><expr><call><name pos:line="2401" pos:column="93">TEXT</name><argument_list pos:line="2401" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="2401" pos:column="98">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
			<expr_stmt><expr><op:operator pos:line="2403" pos:column="25">(</op:operator><call><name><name pos:line="2403" pos:column="26">fileNameNode</name><op:operator pos:line="2403" pos:column="38">-&gt;</op:operator><name pos:line="2403" pos:column="40">ToElement</name></name><argument_list pos:line="2403" pos:column="49">()</argument_list></call><op:operator pos:line="2403" pos:column="51">)</op:operator><op:operator pos:line="2403" pos:column="52">-&gt;</op:operator><call><name pos:line="2403" pos:column="54">SetAttribute</name><argument_list pos:line="2403" pos:column="66">(<argument><expr><call><name pos:line="2403" pos:column="67">TEXT</name><argument_list pos:line="2403" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2403" pos:column="72">"firstVisibleLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2403" pos:column="93">session</name><op:operator pos:line="2403" pos:column="100">.</op:operator><name pos:line="2403" pos:column="101">_mainViewFiles</name><index pos:line="2403" pos:column="115">[<expr><name pos:line="2403" pos:column="116">i</name></expr>]</index></name><op:operator pos:line="2403" pos:column="118">.</op:operator><name pos:line="2403" pos:column="119">_firstVisibleLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2404" pos:column="25">(</op:operator><call><name><name pos:line="2404" pos:column="26">fileNameNode</name><op:operator pos:line="2404" pos:column="38">-&gt;</op:operator><name pos:line="2404" pos:column="40">ToElement</name></name><argument_list pos:line="2404" pos:column="49">()</argument_list></call><op:operator pos:line="2404" pos:column="51">)</op:operator><op:operator pos:line="2404" pos:column="52">-&gt;</op:operator><call><name pos:line="2404" pos:column="54">SetAttribute</name><argument_list pos:line="2404" pos:column="66">(<argument><expr><call><name pos:line="2404" pos:column="67">TEXT</name><argument_list pos:line="2404" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2404" pos:column="72">"xOffset"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2404" pos:column="84">session</name><op:operator pos:line="2404" pos:column="91">.</op:operator><name pos:line="2404" pos:column="92">_mainViewFiles</name><index pos:line="2404" pos:column="106">[<expr><name pos:line="2404" pos:column="107">i</name></expr>]</index></name><op:operator pos:line="2404" pos:column="109">.</op:operator><name pos:line="2404" pos:column="110">_xOffset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2405" pos:column="25">(</op:operator><call><name><name pos:line="2405" pos:column="26">fileNameNode</name><op:operator pos:line="2405" pos:column="38">-&gt;</op:operator><name pos:line="2405" pos:column="40">ToElement</name></name><argument_list pos:line="2405" pos:column="49">()</argument_list></call><op:operator pos:line="2405" pos:column="51">)</op:operator><op:operator pos:line="2405" pos:column="52">-&gt;</op:operator><call><name pos:line="2405" pos:column="54">SetAttribute</name><argument_list pos:line="2405" pos:column="66">(<argument><expr><call><name pos:line="2405" pos:column="67">TEXT</name><argument_list pos:line="2405" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2405" pos:column="72">"scrollWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2405" pos:column="88">session</name><op:operator pos:line="2405" pos:column="95">.</op:operator><name pos:line="2405" pos:column="96">_mainViewFiles</name><index pos:line="2405" pos:column="110">[<expr><name pos:line="2405" pos:column="111">i</name></expr>]</index></name><op:operator pos:line="2405" pos:column="113">.</op:operator><name pos:line="2405" pos:column="114">_scrollWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2406" pos:column="25">(</op:operator><call><name><name pos:line="2406" pos:column="26">fileNameNode</name><op:operator pos:line="2406" pos:column="38">-&gt;</op:operator><name pos:line="2406" pos:column="40">ToElement</name></name><argument_list pos:line="2406" pos:column="49">()</argument_list></call><op:operator pos:line="2406" pos:column="51">)</op:operator><op:operator pos:line="2406" pos:column="52">-&gt;</op:operator><call><name pos:line="2406" pos:column="54">SetAttribute</name><argument_list pos:line="2406" pos:column="66">(<argument><expr><call><name pos:line="2406" pos:column="67">TEXT</name><argument_list pos:line="2406" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2406" pos:column="72">"startPos"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2406" pos:column="85">session</name><op:operator pos:line="2406" pos:column="92">.</op:operator><name pos:line="2406" pos:column="93">_mainViewFiles</name><index pos:line="2406" pos:column="107">[<expr><name pos:line="2406" pos:column="108">i</name></expr>]</index></name><op:operator pos:line="2406" pos:column="110">.</op:operator><name pos:line="2406" pos:column="111">_startPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2407" pos:column="25">(</op:operator><call><name><name pos:line="2407" pos:column="26">fileNameNode</name><op:operator pos:line="2407" pos:column="38">-&gt;</op:operator><name pos:line="2407" pos:column="40">ToElement</name></name><argument_list pos:line="2407" pos:column="49">()</argument_list></call><op:operator pos:line="2407" pos:column="51">)</op:operator><op:operator pos:line="2407" pos:column="52">-&gt;</op:operator><call><name pos:line="2407" pos:column="54">SetAttribute</name><argument_list pos:line="2407" pos:column="66">(<argument><expr><call><name pos:line="2407" pos:column="67">TEXT</name><argument_list pos:line="2407" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2407" pos:column="72">"endPos"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2407" pos:column="83">session</name><op:operator pos:line="2407" pos:column="90">.</op:operator><name pos:line="2407" pos:column="91">_mainViewFiles</name><index pos:line="2407" pos:column="105">[<expr><name pos:line="2407" pos:column="106">i</name></expr>]</index></name><op:operator pos:line="2407" pos:column="108">.</op:operator><name pos:line="2407" pos:column="109">_endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2408" pos:column="25">(</op:operator><call><name><name pos:line="2408" pos:column="26">fileNameNode</name><op:operator pos:line="2408" pos:column="38">-&gt;</op:operator><name pos:line="2408" pos:column="40">ToElement</name></name><argument_list pos:line="2408" pos:column="49">()</argument_list></call><op:operator pos:line="2408" pos:column="51">)</op:operator><op:operator pos:line="2408" pos:column="52">-&gt;</op:operator><call><name pos:line="2408" pos:column="54">SetAttribute</name><argument_list pos:line="2408" pos:column="66">(<argument><expr><call><name pos:line="2408" pos:column="67">TEXT</name><argument_list pos:line="2408" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2408" pos:column="72">"selMode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2408" pos:column="84">session</name><op:operator pos:line="2408" pos:column="91">.</op:operator><name pos:line="2408" pos:column="92">_mainViewFiles</name><index pos:line="2408" pos:column="106">[<expr><name pos:line="2408" pos:column="107">i</name></expr>]</index></name><op:operator pos:line="2408" pos:column="109">.</op:operator><name pos:line="2408" pos:column="110">_selMode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2409" pos:column="25">(</op:operator><call><name><name pos:line="2409" pos:column="26">fileNameNode</name><op:operator pos:line="2409" pos:column="38">-&gt;</op:operator><name pos:line="2409" pos:column="40">ToElement</name></name><argument_list pos:line="2409" pos:column="49">()</argument_list></call><op:operator pos:line="2409" pos:column="51">)</op:operator><op:operator pos:line="2409" pos:column="52">-&gt;</op:operator><call><name pos:line="2409" pos:column="54">SetAttribute</name><argument_list pos:line="2409" pos:column="66">(<argument><expr><call><name pos:line="2409" pos:column="67">TEXT</name><argument_list pos:line="2409" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2409" pos:column="72">"lang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2409" pos:column="81">session</name><op:operator pos:line="2409" pos:column="88">.</op:operator><name pos:line="2409" pos:column="89">_mainViewFiles</name><index pos:line="2409" pos:column="103">[<expr><name pos:line="2409" pos:column="104">i</name></expr>]</index></name><op:operator pos:line="2409" pos:column="106">.</op:operator><call><name><name pos:line="2409" pos:column="107">_langName</name><op:operator pos:line="2409" pos:column="116">.</op:operator><name pos:line="2409" pos:column="117">c_str</name></name><argument_list pos:line="2409" pos:column="122">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2410" pos:column="25">(</op:operator><call><name><name pos:line="2410" pos:column="26">fileNameNode</name><op:operator pos:line="2410" pos:column="38">-&gt;</op:operator><name pos:line="2410" pos:column="40">ToElement</name></name><argument_list pos:line="2410" pos:column="49">()</argument_list></call><op:operator pos:line="2410" pos:column="51">)</op:operator><op:operator pos:line="2410" pos:column="52">-&gt;</op:operator><call><name pos:line="2410" pos:column="54">SetAttribute</name><argument_list pos:line="2410" pos:column="66">(<argument><expr><call><name pos:line="2410" pos:column="67">TEXT</name><argument_list pos:line="2410" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2410" pos:column="72">"encoding"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2410" pos:column="85">session</name><op:operator pos:line="2410" pos:column="92">.</op:operator><name pos:line="2410" pos:column="93">_mainViewFiles</name><index pos:line="2410" pos:column="107">[<expr><name pos:line="2410" pos:column="108">i</name></expr>]</index></name><op:operator pos:line="2410" pos:column="110">.</op:operator><name pos:line="2410" pos:column="111">_encoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2411" pos:column="25">(</op:operator><call><name><name pos:line="2411" pos:column="26">fileNameNode</name><op:operator pos:line="2411" pos:column="38">-&gt;</op:operator><name pos:line="2411" pos:column="40">ToElement</name></name><argument_list pos:line="2411" pos:column="49">()</argument_list></call><op:operator pos:line="2411" pos:column="51">)</op:operator><op:operator pos:line="2411" pos:column="52">-&gt;</op:operator><call><name pos:line="2411" pos:column="54">SetAttribute</name><argument_list pos:line="2411" pos:column="66">(<argument><expr><call><name pos:line="2411" pos:column="67">TEXT</name><argument_list pos:line="2411" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2411" pos:column="72">"filename"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2411" pos:column="85">session</name><op:operator pos:line="2411" pos:column="92">.</op:operator><name pos:line="2411" pos:column="93">_mainViewFiles</name><index pos:line="2411" pos:column="107">[<expr><name pos:line="2411" pos:column="108">i</name></expr>]</index></name><op:operator pos:line="2411" pos:column="110">.</op:operator><call><name><name pos:line="2411" pos:column="111">_fileName</name><op:operator pos:line="2411" pos:column="120">.</op:operator><name pos:line="2411" pos:column="121">c_str</name></name><argument_list pos:line="2411" pos:column="126">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<for pos:line="2413" pos:column="25">for (<init><decl><type><name pos:line="2413" pos:column="30">size_t</name></type> <name pos:line="2413" pos:column="37">j</name> <init pos:line="2413" pos:column="39">= <expr><lit:literal type="number" pos:line="2413" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2413" pos:column="45">j</name> <op:operator pos:line="2413" pos:column="47">&lt;</op:operator> <name><name pos:line="2413" pos:column="49">session</name><op:operator pos:line="2413" pos:column="56">.</op:operator><name pos:line="2413" pos:column="57">_mainViewFiles</name><index pos:line="2413" pos:column="71">[<expr><name pos:line="2413" pos:column="72">i</name></expr>]</index></name><op:operator pos:line="2413" pos:column="74">.</op:operator><call><name><name pos:line="2413" pos:column="75">marks</name><op:operator pos:line="2413" pos:column="80">.</op:operator><name pos:line="2413" pos:column="81">size</name></name><argument_list pos:line="2413" pos:column="85">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2413" pos:column="90">j</name><op:operator pos:line="2413" pos:column="91">++</op:operator></expr></incr>)
			<block pos:line="2414" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2415" pos:column="33">size_t</name></type> <name pos:line="2415" pos:column="40">markLine</name> <init pos:line="2415" pos:column="49">= <expr><name><name pos:line="2415" pos:column="51">session</name><op:operator pos:line="2415" pos:column="58">.</op:operator><name pos:line="2415" pos:column="59">_mainViewFiles</name><index pos:line="2415" pos:column="73">[<expr><name pos:line="2415" pos:column="74">i</name></expr>]</index></name><op:operator pos:line="2415" pos:column="76">.</op:operator><name><name pos:line="2415" pos:column="77">marks</name><index pos:line="2415" pos:column="82">[<expr><name pos:line="2415" pos:column="83">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2416" pos:column="33">TiXmlNode</name> <type:modifier pos:line="2416" pos:column="43">*</type:modifier></type><name pos:line="2416" pos:column="44">markNode</name> <init pos:line="2416" pos:column="53">= <expr><call><name><name pos:line="2416" pos:column="55">fileNameNode</name><op:operator pos:line="2416" pos:column="67">-&gt;</op:operator><name pos:line="2416" pos:column="69">InsertEndChild</name></name><argument_list pos:line="2416" pos:column="83">(<argument><expr><call><name pos:line="2416" pos:column="84">TiXmlElement</name><argument_list pos:line="2416" pos:column="96">(<argument><expr><call><name pos:line="2416" pos:column="97">TEXT</name><argument_list pos:line="2416" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="2416" pos:column="102">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="2417" pos:column="33">markNode</name><op:operator pos:line="2417" pos:column="41">-&gt;</op:operator><name pos:line="2417" pos:column="43">ToElement</name></name><argument_list pos:line="2417" pos:column="52">()</argument_list></call><op:operator pos:line="2417" pos:column="54">-&gt;</op:operator><call><name pos:line="2417" pos:column="56">SetAttribute</name><argument_list pos:line="2417" pos:column="68">(<argument><expr><call><name pos:line="2417" pos:column="69">TEXT</name><argument_list pos:line="2417" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="2417" pos:column="74">"line"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2417" pos:column="83">markLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
		}</block></for>
		
		<decl_stmt><decl><type><name pos:line="2421" pos:column="17">TiXmlNode</name> <type:modifier pos:line="2421" pos:column="27">*</type:modifier></type><name pos:line="2421" pos:column="28">subViewNode</name> <init pos:line="2421" pos:column="40">= <expr><call><name><name pos:line="2421" pos:column="42">sessionNode</name><op:operator pos:line="2421" pos:column="53">-&gt;</op:operator><name pos:line="2421" pos:column="55">InsertEndChild</name></name><argument_list pos:line="2421" pos:column="69">(<argument><expr><call><name pos:line="2421" pos:column="70">TiXmlElement</name><argument_list pos:line="2421" pos:column="82">(<argument><expr><call><name pos:line="2421" pos:column="83">TEXT</name><argument_list pos:line="2421" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="2421" pos:column="88">"subView"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><op:operator pos:line="2422" pos:column="17">(</op:operator><call><name><name pos:line="2422" pos:column="18">subViewNode</name><op:operator pos:line="2422" pos:column="29">-&gt;</op:operator><name pos:line="2422" pos:column="31">ToElement</name></name><argument_list pos:line="2422" pos:column="40">()</argument_list></call><op:operator pos:line="2422" pos:column="42">)</op:operator><op:operator pos:line="2422" pos:column="43">-&gt;</op:operator><call><name pos:line="2422" pos:column="45">SetAttribute</name><argument_list pos:line="2422" pos:column="57">(<argument><expr><call><name pos:line="2422" pos:column="58">TEXT</name><argument_list pos:line="2422" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2422" pos:column="63">"activeIndex"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2422" pos:column="79">(</op:operator><name pos:line="2422" pos:column="80">int</name><op:operator pos:line="2422" pos:column="83">)</op:operator><name><name pos:line="2422" pos:column="84">session</name><op:operator pos:line="2422" pos:column="91">.</op:operator><name pos:line="2422" pos:column="92">_activeSubIndex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<for pos:line="2423" pos:column="17">for (<init><decl><type><name pos:line="2423" pos:column="22">size_t</name></type> <name pos:line="2423" pos:column="29">i</name> <init pos:line="2423" pos:column="31">= <expr><lit:literal type="number" pos:line="2423" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2423" pos:column="37">i</name> <op:operator pos:line="2423" pos:column="39">&lt;</op:operator> <call><name><name pos:line="2423" pos:column="41">session</name><op:operator pos:line="2423" pos:column="48">.</op:operator><name pos:line="2423" pos:column="49">_subViewFiles</name><op:operator pos:line="2423" pos:column="62">.</op:operator><name pos:line="2423" pos:column="63">size</name></name><argument_list pos:line="2423" pos:column="67">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2423" pos:column="72">i</name><op:operator pos:line="2423" pos:column="73">++</op:operator></expr></incr>)
		<block pos:line="2424" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2425" pos:column="25">TiXmlNode</name> <type:modifier pos:line="2425" pos:column="35">*</type:modifier></type><name pos:line="2425" pos:column="36">fileNameNode</name> <init pos:line="2425" pos:column="49">= <expr><call><name><name pos:line="2425" pos:column="51">subViewNode</name><op:operator pos:line="2425" pos:column="62">-&gt;</op:operator><name pos:line="2425" pos:column="64">InsertEndChild</name></name><argument_list pos:line="2425" pos:column="78">(<argument><expr><call><name pos:line="2425" pos:column="79">TiXmlElement</name><argument_list pos:line="2425" pos:column="91">(<argument><expr><call><name pos:line="2425" pos:column="92">TEXT</name><argument_list pos:line="2425" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="2425" pos:column="97">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<expr_stmt><expr><op:operator pos:line="2427" pos:column="25">(</op:operator><call><name><name pos:line="2427" pos:column="26">fileNameNode</name><op:operator pos:line="2427" pos:column="38">-&gt;</op:operator><name pos:line="2427" pos:column="40">ToElement</name></name><argument_list pos:line="2427" pos:column="49">()</argument_list></call><op:operator pos:line="2427" pos:column="51">)</op:operator><op:operator pos:line="2427" pos:column="52">-&gt;</op:operator><call><name pos:line="2427" pos:column="54">SetAttribute</name><argument_list pos:line="2427" pos:column="66">(<argument><expr><call><name pos:line="2427" pos:column="67">TEXT</name><argument_list pos:line="2427" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2427" pos:column="72">"firstVisibleLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2427" pos:column="93">session</name><op:operator pos:line="2427" pos:column="100">.</op:operator><name pos:line="2427" pos:column="101">_subViewFiles</name><index pos:line="2427" pos:column="114">[<expr><name pos:line="2427" pos:column="115">i</name></expr>]</index></name><op:operator pos:line="2427" pos:column="117">.</op:operator><name pos:line="2427" pos:column="118">_firstVisibleLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2428" pos:column="25">(</op:operator><call><name><name pos:line="2428" pos:column="26">fileNameNode</name><op:operator pos:line="2428" pos:column="38">-&gt;</op:operator><name pos:line="2428" pos:column="40">ToElement</name></name><argument_list pos:line="2428" pos:column="49">()</argument_list></call><op:operator pos:line="2428" pos:column="51">)</op:operator><op:operator pos:line="2428" pos:column="52">-&gt;</op:operator><call><name pos:line="2428" pos:column="54">SetAttribute</name><argument_list pos:line="2428" pos:column="66">(<argument><expr><call><name pos:line="2428" pos:column="67">TEXT</name><argument_list pos:line="2428" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2428" pos:column="72">"xOffset"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2428" pos:column="84">session</name><op:operator pos:line="2428" pos:column="91">.</op:operator><name pos:line="2428" pos:column="92">_subViewFiles</name><index pos:line="2428" pos:column="105">[<expr><name pos:line="2428" pos:column="106">i</name></expr>]</index></name><op:operator pos:line="2428" pos:column="108">.</op:operator><name pos:line="2428" pos:column="109">_xOffset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2429" pos:column="25">(</op:operator><call><name><name pos:line="2429" pos:column="26">fileNameNode</name><op:operator pos:line="2429" pos:column="38">-&gt;</op:operator><name pos:line="2429" pos:column="40">ToElement</name></name><argument_list pos:line="2429" pos:column="49">()</argument_list></call><op:operator pos:line="2429" pos:column="51">)</op:operator><op:operator pos:line="2429" pos:column="52">-&gt;</op:operator><call><name pos:line="2429" pos:column="54">SetAttribute</name><argument_list pos:line="2429" pos:column="66">(<argument><expr><call><name pos:line="2429" pos:column="67">TEXT</name><argument_list pos:line="2429" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2429" pos:column="72">"scrollWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2429" pos:column="88">session</name><op:operator pos:line="2429" pos:column="95">.</op:operator><name pos:line="2429" pos:column="96">_subViewFiles</name><index pos:line="2429" pos:column="109">[<expr><name pos:line="2429" pos:column="110">i</name></expr>]</index></name><op:operator pos:line="2429" pos:column="112">.</op:operator><name pos:line="2429" pos:column="113">_scrollWidth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2430" pos:column="25">(</op:operator><call><name><name pos:line="2430" pos:column="26">fileNameNode</name><op:operator pos:line="2430" pos:column="38">-&gt;</op:operator><name pos:line="2430" pos:column="40">ToElement</name></name><argument_list pos:line="2430" pos:column="49">()</argument_list></call><op:operator pos:line="2430" pos:column="51">)</op:operator><op:operator pos:line="2430" pos:column="52">-&gt;</op:operator><call><name pos:line="2430" pos:column="54">SetAttribute</name><argument_list pos:line="2430" pos:column="66">(<argument><expr><call><name pos:line="2430" pos:column="67">TEXT</name><argument_list pos:line="2430" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2430" pos:column="72">"startPos"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2430" pos:column="85">session</name><op:operator pos:line="2430" pos:column="92">.</op:operator><name pos:line="2430" pos:column="93">_subViewFiles</name><index pos:line="2430" pos:column="106">[<expr><name pos:line="2430" pos:column="107">i</name></expr>]</index></name><op:operator pos:line="2430" pos:column="109">.</op:operator><name pos:line="2430" pos:column="110">_startPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2431" pos:column="25">(</op:operator><call><name><name pos:line="2431" pos:column="26">fileNameNode</name><op:operator pos:line="2431" pos:column="38">-&gt;</op:operator><name pos:line="2431" pos:column="40">ToElement</name></name><argument_list pos:line="2431" pos:column="49">()</argument_list></call><op:operator pos:line="2431" pos:column="51">)</op:operator><op:operator pos:line="2431" pos:column="52">-&gt;</op:operator><call><name pos:line="2431" pos:column="54">SetAttribute</name><argument_list pos:line="2431" pos:column="66">(<argument><expr><call><name pos:line="2431" pos:column="67">TEXT</name><argument_list pos:line="2431" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2431" pos:column="72">"endPos"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2431" pos:column="83">session</name><op:operator pos:line="2431" pos:column="90">.</op:operator><name pos:line="2431" pos:column="91">_subViewFiles</name><index pos:line="2431" pos:column="104">[<expr><name pos:line="2431" pos:column="105">i</name></expr>]</index></name><op:operator pos:line="2431" pos:column="107">.</op:operator><name pos:line="2431" pos:column="108">_endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2432" pos:column="25">(</op:operator><call><name><name pos:line="2432" pos:column="26">fileNameNode</name><op:operator pos:line="2432" pos:column="38">-&gt;</op:operator><name pos:line="2432" pos:column="40">ToElement</name></name><argument_list pos:line="2432" pos:column="49">()</argument_list></call><op:operator pos:line="2432" pos:column="51">)</op:operator><op:operator pos:line="2432" pos:column="52">-&gt;</op:operator><call><name pos:line="2432" pos:column="54">SetAttribute</name><argument_list pos:line="2432" pos:column="66">(<argument><expr><call><name pos:line="2432" pos:column="67">TEXT</name><argument_list pos:line="2432" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2432" pos:column="72">"selMode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2432" pos:column="84">session</name><op:operator pos:line="2432" pos:column="91">.</op:operator><name pos:line="2432" pos:column="92">_subViewFiles</name><index pos:line="2432" pos:column="105">[<expr><name pos:line="2432" pos:column="106">i</name></expr>]</index></name><op:operator pos:line="2432" pos:column="108">.</op:operator><name pos:line="2432" pos:column="109">_selMode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2433" pos:column="25">(</op:operator><call><name><name pos:line="2433" pos:column="26">fileNameNode</name><op:operator pos:line="2433" pos:column="38">-&gt;</op:operator><name pos:line="2433" pos:column="40">ToElement</name></name><argument_list pos:line="2433" pos:column="49">()</argument_list></call><op:operator pos:line="2433" pos:column="51">)</op:operator><op:operator pos:line="2433" pos:column="52">-&gt;</op:operator><call><name pos:line="2433" pos:column="54">SetAttribute</name><argument_list pos:line="2433" pos:column="66">(<argument><expr><call><name pos:line="2433" pos:column="67">TEXT</name><argument_list pos:line="2433" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2433" pos:column="72">"lang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2433" pos:column="81">session</name><op:operator pos:line="2433" pos:column="88">.</op:operator><name pos:line="2433" pos:column="89">_subViewFiles</name><index pos:line="2433" pos:column="102">[<expr><name pos:line="2433" pos:column="103">i</name></expr>]</index></name><op:operator pos:line="2433" pos:column="105">.</op:operator><call><name><name pos:line="2433" pos:column="106">_langName</name><op:operator pos:line="2433" pos:column="115">.</op:operator><name pos:line="2433" pos:column="116">c_str</name></name><argument_list pos:line="2433" pos:column="121">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2434" pos:column="25">(</op:operator><call><name><name pos:line="2434" pos:column="26">fileNameNode</name><op:operator pos:line="2434" pos:column="38">-&gt;</op:operator><name pos:line="2434" pos:column="40">ToElement</name></name><argument_list pos:line="2434" pos:column="49">()</argument_list></call><op:operator pos:line="2434" pos:column="51">)</op:operator><op:operator pos:line="2434" pos:column="52">-&gt;</op:operator><call><name pos:line="2434" pos:column="54">SetAttribute</name><argument_list pos:line="2434" pos:column="66">(<argument><expr><call><name pos:line="2434" pos:column="67">TEXT</name><argument_list pos:line="2434" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2434" pos:column="72">"encoding"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2434" pos:column="85">session</name><op:operator pos:line="2434" pos:column="92">.</op:operator><name pos:line="2434" pos:column="93">_subViewFiles</name><index pos:line="2434" pos:column="106">[<expr><name pos:line="2434" pos:column="107">i</name></expr>]</index></name><op:operator pos:line="2434" pos:column="109">.</op:operator><name pos:line="2434" pos:column="110">_encoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="2435" pos:column="25">(</op:operator><call><name><name pos:line="2435" pos:column="26">fileNameNode</name><op:operator pos:line="2435" pos:column="38">-&gt;</op:operator><name pos:line="2435" pos:column="40">ToElement</name></name><argument_list pos:line="2435" pos:column="49">()</argument_list></call><op:operator pos:line="2435" pos:column="51">)</op:operator><op:operator pos:line="2435" pos:column="52">-&gt;</op:operator><call><name pos:line="2435" pos:column="54">SetAttribute</name><argument_list pos:line="2435" pos:column="66">(<argument><expr><call><name pos:line="2435" pos:column="67">TEXT</name><argument_list pos:line="2435" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2435" pos:column="72">"filename"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2435" pos:column="85">session</name><op:operator pos:line="2435" pos:column="92">.</op:operator><name pos:line="2435" pos:column="93">_subViewFiles</name><index pos:line="2435" pos:column="106">[<expr><name pos:line="2435" pos:column="107">i</name></expr>]</index></name><op:operator pos:line="2435" pos:column="109">.</op:operator><call><name><name pos:line="2435" pos:column="110">_fileName</name><op:operator pos:line="2435" pos:column="119">.</op:operator><name pos:line="2435" pos:column="120">c_str</name></name><argument_list pos:line="2435" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<for pos:line="2437" pos:column="25">for (<init><decl><type><name pos:line="2437" pos:column="30">size_t</name></type> <name pos:line="2437" pos:column="37">j</name> <init pos:line="2437" pos:column="39">= <expr><lit:literal type="number" pos:line="2437" pos:column="41">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2437" pos:column="45">j</name> <op:operator pos:line="2437" pos:column="47">&lt;</op:operator> <name><name pos:line="2437" pos:column="49">session</name><op:operator pos:line="2437" pos:column="56">.</op:operator><name pos:line="2437" pos:column="57">_subViewFiles</name><index pos:line="2437" pos:column="70">[<expr><name pos:line="2437" pos:column="71">i</name></expr>]</index></name><op:operator pos:line="2437" pos:column="73">.</op:operator><call><name><name pos:line="2437" pos:column="74">marks</name><op:operator pos:line="2437" pos:column="79">.</op:operator><name pos:line="2437" pos:column="80">size</name></name><argument_list pos:line="2437" pos:column="84">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2437" pos:column="89">j</name><op:operator pos:line="2437" pos:column="90">++</op:operator></expr></incr>)
			<block pos:line="2438" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2439" pos:column="33">size_t</name></type> <name pos:line="2439" pos:column="40">markLine</name> <init pos:line="2439" pos:column="49">= <expr><name><name pos:line="2439" pos:column="51">session</name><op:operator pos:line="2439" pos:column="58">.</op:operator><name pos:line="2439" pos:column="59">_subViewFiles</name><index pos:line="2439" pos:column="72">[<expr><name pos:line="2439" pos:column="73">i</name></expr>]</index></name><op:operator pos:line="2439" pos:column="75">.</op:operator><name><name pos:line="2439" pos:column="76">marks</name><index pos:line="2439" pos:column="81">[<expr><name pos:line="2439" pos:column="82">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2440" pos:column="33">TiXmlNode</name> <type:modifier pos:line="2440" pos:column="43">*</type:modifier></type><name pos:line="2440" pos:column="44">markNode</name> <init pos:line="2440" pos:column="53">= <expr><call><name><name pos:line="2440" pos:column="55">fileNameNode</name><op:operator pos:line="2440" pos:column="67">-&gt;</op:operator><name pos:line="2440" pos:column="69">InsertEndChild</name></name><argument_list pos:line="2440" pos:column="83">(<argument><expr><call><name pos:line="2440" pos:column="84">TiXmlElement</name><argument_list pos:line="2440" pos:column="96">(<argument><expr><call><name pos:line="2440" pos:column="97">TEXT</name><argument_list pos:line="2440" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="2440" pos:column="102">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="2441" pos:column="33">markNode</name><op:operator pos:line="2441" pos:column="41">-&gt;</op:operator><name pos:line="2441" pos:column="43">ToElement</name></name><argument_list pos:line="2441" pos:column="52">()</argument_list></call><op:operator pos:line="2441" pos:column="54">-&gt;</op:operator><call><name pos:line="2441" pos:column="56">SetAttribute</name><argument_list pos:line="2441" pos:column="68">(<argument><expr><call><name pos:line="2441" pos:column="69">TEXT</name><argument_list pos:line="2441" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="2441" pos:column="74">"line"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2441" pos:column="83">markLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></for>
		}</block></for>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="2445" pos:column="9">_pXmlSessionDoc</name><op:operator pos:line="2445" pos:column="24">-&gt;</op:operator><name pos:line="2445" pos:column="26">SaveFile</name></name><argument_list pos:line="2445" pos:column="34">()</argument_list></call></expr>;</expr_stmt>

}</block></function>

<function><type><name pos:line="2449" pos:column="1">void</name></type> <name><name pos:line="2449" pos:column="6">NppParameters</name><op:operator pos:line="2449" pos:column="19">::</op:operator><name pos:line="2449" pos:column="21">writeShortcuts</name></name><parameter_list pos:line="2449" pos:column="35">()</parameter_list>
<block pos:line="2450" pos:column="1">{
	<if pos:line="2451" pos:column="9">if <condition pos:line="2451" pos:column="12">(<expr><op:operator pos:line="2451" pos:column="13">!</op:operator><name pos:line="2451" pos:column="14">_pXmlShortcutDoc</name></expr>)</condition><then pos:line="2451" pos:column="31">
	<block pos:line="2452" pos:column="9">{
		<comment type="line" pos:line="2453" pos:column="17">//do the treatment</comment>
		<expr_stmt><expr><name pos:line="2454" pos:column="17">_pXmlShortcutDoc</name> <op:operator pos:line="2454" pos:column="34">=</op:operator> <op:operator pos:line="2454" pos:column="36">new</op:operator> <call><name pos:line="2454" pos:column="40">TiXmlDocument</name><argument_list pos:line="2454" pos:column="53">(<argument><expr><name pos:line="2454" pos:column="54">_shortcutsPath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="2457" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2457" pos:column="19">*</type:modifier></type><name pos:line="2457" pos:column="20">root</name> <init pos:line="2457" pos:column="25">= <expr><call><name><name pos:line="2457" pos:column="27">_pXmlShortcutDoc</name><op:operator pos:line="2457" pos:column="43">-&gt;</op:operator><name pos:line="2457" pos:column="45">FirstChild</name></name><argument_list pos:line="2457" pos:column="55">(<argument><expr><call><name pos:line="2457" pos:column="56">TEXT</name><argument_list pos:line="2457" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="2457" pos:column="61">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2458" pos:column="9">if <condition pos:line="2458" pos:column="12">(<expr><op:operator pos:line="2458" pos:column="13">!</op:operator><name pos:line="2458" pos:column="14">root</name></expr>)</condition><then pos:line="2458" pos:column="19">
	<block pos:line="2459" pos:column="9">{
		<expr_stmt><expr><name pos:line="2460" pos:column="17">root</name> <op:operator pos:line="2460" pos:column="22">=</op:operator> <call><name><name pos:line="2460" pos:column="24">_pXmlShortcutDoc</name><op:operator pos:line="2460" pos:column="40">-&gt;</op:operator><name pos:line="2460" pos:column="42">InsertEndChild</name></name><argument_list pos:line="2460" pos:column="56">(<argument><expr><call><name pos:line="2460" pos:column="57">TiXmlElement</name><argument_list pos:line="2460" pos:column="69">(<argument><expr><call><name pos:line="2460" pos:column="70">TEXT</name><argument_list pos:line="2460" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="2460" pos:column="75">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="2463" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2463" pos:column="19">*</type:modifier></type><name pos:line="2463" pos:column="20">cmdRoot</name> <init pos:line="2463" pos:column="28">= <expr><call><name><name pos:line="2463" pos:column="30">root</name><op:operator pos:line="2463" pos:column="34">-&gt;</op:operator><name pos:line="2463" pos:column="36">FirstChild</name></name><argument_list pos:line="2463" pos:column="46">(<argument><expr><call><name pos:line="2463" pos:column="47">TEXT</name><argument_list pos:line="2463" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="2463" pos:column="52">"InternalCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2464" pos:column="9">if <condition pos:line="2464" pos:column="12">(<expr><name pos:line="2464" pos:column="13">cmdRoot</name></expr>)</condition><then pos:line="2464" pos:column="21">
		<expr_stmt><expr><call><name><name pos:line="2465" pos:column="17">root</name><op:operator pos:line="2465" pos:column="21">-&gt;</op:operator><name pos:line="2465" pos:column="23">RemoveChild</name></name><argument_list pos:line="2465" pos:column="34">(<argument><expr><name pos:line="2465" pos:column="35">cmdRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="2467" pos:column="9">cmdRoot</name> <op:operator pos:line="2467" pos:column="17">=</op:operator> <call><name><name pos:line="2467" pos:column="19">root</name><op:operator pos:line="2467" pos:column="23">-&gt;</op:operator><name pos:line="2467" pos:column="25">InsertEndChild</name></name><argument_list pos:line="2467" pos:column="39">(<argument><expr><call><name pos:line="2467" pos:column="40">TiXmlElement</name><argument_list pos:line="2467" pos:column="52">(<argument><expr><call><name pos:line="2467" pos:column="53">TEXT</name><argument_list pos:line="2467" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2467" pos:column="58">"InternalCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="2468" pos:column="9">for (<init><decl><type><name pos:line="2468" pos:column="14">size_t</name></type> <name pos:line="2468" pos:column="21">i</name> <init pos:line="2468" pos:column="23">= <expr><lit:literal type="number" pos:line="2468" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2468" pos:column="29">i</name> <op:operator pos:line="2468" pos:column="31">&lt;</op:operator> <call><name><name pos:line="2468" pos:column="33">_customizedShortcuts</name><op:operator pos:line="2468" pos:column="53">.</op:operator><name pos:line="2468" pos:column="54">size</name></name><argument_list pos:line="2468" pos:column="58">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2468" pos:column="63">i</name><op:operator pos:line="2468" pos:column="64">++</op:operator></expr></incr>)
	<block pos:line="2469" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2470" pos:column="17">int</name></type> <name pos:line="2470" pos:column="21">index</name> <init pos:line="2470" pos:column="27">= <expr><name><name pos:line="2470" pos:column="29">_customizedShortcuts</name><index pos:line="2470" pos:column="49">[<expr><name pos:line="2470" pos:column="50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2471" pos:column="17">CommandShortcut</name></type> <name pos:line="2471" pos:column="33">csc</name> <init pos:line="2471" pos:column="37">= <expr><name><name pos:line="2471" pos:column="39">_shortcuts</name><index pos:line="2471" pos:column="49">[<expr><name pos:line="2471" pos:column="50">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="2472" pos:column="17">insertCmd</name><argument_list pos:line="2472" pos:column="26">(<argument><expr><name pos:line="2472" pos:column="27">cmdRoot</name></expr></argument>, <argument><expr><name pos:line="2472" pos:column="36">csc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="2475" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2475" pos:column="19">*</type:modifier></type><name pos:line="2475" pos:column="20">macrosRoot</name> <init pos:line="2475" pos:column="31">= <expr><call><name><name pos:line="2475" pos:column="33">root</name><op:operator pos:line="2475" pos:column="37">-&gt;</op:operator><name pos:line="2475" pos:column="39">FirstChild</name></name><argument_list pos:line="2475" pos:column="49">(<argument><expr><call><name pos:line="2475" pos:column="50">TEXT</name><argument_list pos:line="2475" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2475" pos:column="55">"Macros"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2476" pos:column="9">if <condition pos:line="2476" pos:column="12">(<expr><name pos:line="2476" pos:column="13">macrosRoot</name></expr>)</condition><then pos:line="2476" pos:column="24">
		<expr_stmt><expr><call><name><name pos:line="2477" pos:column="17">root</name><op:operator pos:line="2477" pos:column="21">-&gt;</op:operator><name pos:line="2477" pos:column="23">RemoveChild</name></name><argument_list pos:line="2477" pos:column="34">(<argument><expr><name pos:line="2477" pos:column="35">macrosRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="2479" pos:column="9">macrosRoot</name> <op:operator pos:line="2479" pos:column="20">=</op:operator> <call><name><name pos:line="2479" pos:column="22">root</name><op:operator pos:line="2479" pos:column="26">-&gt;</op:operator><name pos:line="2479" pos:column="28">InsertEndChild</name></name><argument_list pos:line="2479" pos:column="42">(<argument><expr><call><name pos:line="2479" pos:column="43">TiXmlElement</name><argument_list pos:line="2479" pos:column="55">(<argument><expr><call><name pos:line="2479" pos:column="56">TEXT</name><argument_list pos:line="2479" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="2479" pos:column="61">"Macros"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:line="2481" pos:column="9">for (<init><decl><type><name pos:line="2481" pos:column="14">size_t</name></type> <name pos:line="2481" pos:column="21">i</name> <init pos:line="2481" pos:column="23">= <expr><lit:literal type="number" pos:line="2481" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2481" pos:column="29">i</name> <op:operator pos:line="2481" pos:column="31">&lt;</op:operator> <call><name><name pos:line="2481" pos:column="33">_macros</name><op:operator pos:line="2481" pos:column="40">.</op:operator><name pos:line="2481" pos:column="41">size</name></name><argument_list pos:line="2481" pos:column="45">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2481" pos:column="50">i</name><op:operator pos:line="2481" pos:column="51">++</op:operator></expr></incr>)
	<block pos:line="2482" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="2483" pos:column="17">insertMacro</name><argument_list pos:line="2483" pos:column="28">(<argument><expr><name pos:line="2483" pos:column="29">macrosRoot</name></expr></argument>, <argument><expr><name><name pos:line="2483" pos:column="41">_macros</name><index pos:line="2483" pos:column="48">[<expr><name pos:line="2483" pos:column="49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="2486" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2486" pos:column="19">*</type:modifier></type><name pos:line="2486" pos:column="20">userCmdRoot</name> <init pos:line="2486" pos:column="32">= <expr><call><name><name pos:line="2486" pos:column="34">root</name><op:operator pos:line="2486" pos:column="38">-&gt;</op:operator><name pos:line="2486" pos:column="40">FirstChild</name></name><argument_list pos:line="2486" pos:column="50">(<argument><expr><call><name pos:line="2486" pos:column="51">TEXT</name><argument_list pos:line="2486" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="2486" pos:column="56">"UserDefinedCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2487" pos:column="9">if <condition pos:line="2487" pos:column="12">(<expr><name pos:line="2487" pos:column="13">userCmdRoot</name></expr>)</condition><then pos:line="2487" pos:column="25">
		<expr_stmt><expr><call><name><name pos:line="2488" pos:column="17">root</name><op:operator pos:line="2488" pos:column="21">-&gt;</op:operator><name pos:line="2488" pos:column="23">RemoveChild</name></name><argument_list pos:line="2488" pos:column="34">(<argument><expr><name pos:line="2488" pos:column="35">userCmdRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	
	<expr_stmt><expr><name pos:line="2490" pos:column="9">userCmdRoot</name> <op:operator pos:line="2490" pos:column="21">=</op:operator> <call><name><name pos:line="2490" pos:column="23">root</name><op:operator pos:line="2490" pos:column="27">-&gt;</op:operator><name pos:line="2490" pos:column="29">InsertEndChild</name></name><argument_list pos:line="2490" pos:column="43">(<argument><expr><call><name pos:line="2490" pos:column="44">TiXmlElement</name><argument_list pos:line="2490" pos:column="56">(<argument><expr><call><name pos:line="2490" pos:column="57">TEXT</name><argument_list pos:line="2490" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="2490" pos:column="62">"UserDefinedCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<for pos:line="2492" pos:column="9">for (<init><decl><type><name pos:line="2492" pos:column="14">size_t</name></type> <name pos:line="2492" pos:column="21">i</name> <init pos:line="2492" pos:column="23">= <expr><lit:literal type="number" pos:line="2492" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2492" pos:column="29">i</name> <op:operator pos:line="2492" pos:column="31">&lt;</op:operator> <call><name><name pos:line="2492" pos:column="33">_userCommands</name><op:operator pos:line="2492" pos:column="46">.</op:operator><name pos:line="2492" pos:column="47">size</name></name><argument_list pos:line="2492" pos:column="51">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2492" pos:column="56">i</name><op:operator pos:line="2492" pos:column="57">++</op:operator></expr></incr>)
	<block pos:line="2493" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="2494" pos:column="17">insertUserCmd</name><argument_list pos:line="2494" pos:column="30">(<argument><expr><name pos:line="2494" pos:column="31">userCmdRoot</name></expr></argument>, <argument><expr><name><name pos:line="2494" pos:column="44">_userCommands</name><index pos:line="2494" pos:column="57">[<expr><name pos:line="2494" pos:column="58">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="2497" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2497" pos:column="19">*</type:modifier></type><name pos:line="2497" pos:column="20">pluginCmdRoot</name> <init pos:line="2497" pos:column="34">= <expr><call><name><name pos:line="2497" pos:column="36">root</name><op:operator pos:line="2497" pos:column="40">-&gt;</op:operator><name pos:line="2497" pos:column="42">FirstChild</name></name><argument_list pos:line="2497" pos:column="52">(<argument><expr><call><name pos:line="2497" pos:column="53">TEXT</name><argument_list pos:line="2497" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2497" pos:column="58">"PluginCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2498" pos:column="9">if <condition pos:line="2498" pos:column="12">(<expr><name pos:line="2498" pos:column="13">pluginCmdRoot</name></expr>)</condition><then pos:line="2498" pos:column="27">
		<expr_stmt><expr><call><name><name pos:line="2499" pos:column="17">root</name><op:operator pos:line="2499" pos:column="21">-&gt;</op:operator><name pos:line="2499" pos:column="23">RemoveChild</name></name><argument_list pos:line="2499" pos:column="34">(<argument><expr><name pos:line="2499" pos:column="35">pluginCmdRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="2501" pos:column="9">pluginCmdRoot</name> <op:operator pos:line="2501" pos:column="23">=</op:operator> <call><name><name pos:line="2501" pos:column="25">root</name><op:operator pos:line="2501" pos:column="29">-&gt;</op:operator><name pos:line="2501" pos:column="31">InsertEndChild</name></name><argument_list pos:line="2501" pos:column="45">(<argument><expr><call><name pos:line="2501" pos:column="46">TiXmlElement</name><argument_list pos:line="2501" pos:column="58">(<argument><expr><call><name pos:line="2501" pos:column="59">TEXT</name><argument_list pos:line="2501" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="2501" pos:column="64">"PluginCommands"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="2502" pos:column="9">for (<init><decl><type><name pos:line="2502" pos:column="14">size_t</name></type> <name pos:line="2502" pos:column="21">i</name> <init pos:line="2502" pos:column="23">= <expr><lit:literal type="number" pos:line="2502" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2502" pos:column="29">i</name> <op:operator pos:line="2502" pos:column="31">&lt;</op:operator> <call><name><name pos:line="2502" pos:column="33">_pluginCustomizedCmds</name><op:operator pos:line="2502" pos:column="54">.</op:operator><name pos:line="2502" pos:column="55">size</name></name><argument_list pos:line="2502" pos:column="59">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2502" pos:column="64">i</name><op:operator pos:line="2502" pos:column="65">++</op:operator></expr></incr>)
	<block pos:line="2503" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="2504" pos:column="17">insertPluginCmd</name><argument_list pos:line="2504" pos:column="32">(<argument><expr><name pos:line="2504" pos:column="33">pluginCmdRoot</name></expr></argument>, <argument><expr><name><name pos:line="2504" pos:column="48">_pluginCommands</name><index pos:line="2504" pos:column="63">[<expr><name><name pos:line="2504" pos:column="64">_pluginCustomizedCmds</name><index pos:line="2504" pos:column="85">[<expr><name pos:line="2504" pos:column="86">i</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="2507" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2507" pos:column="19">*</type:modifier></type><name pos:line="2507" pos:column="20">scitillaKeyRoot</name> <init pos:line="2507" pos:column="36">= <expr><call><name><name pos:line="2507" pos:column="38">root</name><op:operator pos:line="2507" pos:column="42">-&gt;</op:operator><name pos:line="2507" pos:column="44">FirstChild</name></name><argument_list pos:line="2507" pos:column="54">(<argument><expr><call><name pos:line="2507" pos:column="55">TEXT</name><argument_list pos:line="2507" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2507" pos:column="60">"ScintillaKeys"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2508" pos:column="9">if <condition pos:line="2508" pos:column="12">(<expr><name pos:line="2508" pos:column="13">scitillaKeyRoot</name></expr>)</condition><then pos:line="2508" pos:column="29">
		<expr_stmt><expr><call><name><name pos:line="2509" pos:column="17">root</name><op:operator pos:line="2509" pos:column="21">-&gt;</op:operator><name pos:line="2509" pos:column="23">RemoveChild</name></name><argument_list pos:line="2509" pos:column="34">(<argument><expr><name pos:line="2509" pos:column="35">scitillaKeyRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="2511" pos:column="9">scitillaKeyRoot</name> <op:operator pos:line="2511" pos:column="25">=</op:operator> <call><name><name pos:line="2511" pos:column="27">root</name><op:operator pos:line="2511" pos:column="31">-&gt;</op:operator><name pos:line="2511" pos:column="33">InsertEndChild</name></name><argument_list pos:line="2511" pos:column="47">(<argument><expr><call><name pos:line="2511" pos:column="48">TiXmlElement</name><argument_list pos:line="2511" pos:column="60">(<argument><expr><call><name pos:line="2511" pos:column="61">TEXT</name><argument_list pos:line="2511" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="2511" pos:column="66">"ScintillaKeys"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="2512" pos:column="9">for (<init><decl><type><name pos:line="2512" pos:column="14">size_t</name></type> <name pos:line="2512" pos:column="21">i</name> <init pos:line="2512" pos:column="23">= <expr><lit:literal type="number" pos:line="2512" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2512" pos:column="29">i</name> <op:operator pos:line="2512" pos:column="31">&lt;</op:operator> <call><name><name pos:line="2512" pos:column="33">_scintillaModifiedKeyIndices</name><op:operator pos:line="2512" pos:column="61">.</op:operator><name pos:line="2512" pos:column="62">size</name></name><argument_list pos:line="2512" pos:column="66">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="2512" pos:column="71">i</name><op:operator pos:line="2512" pos:column="72">++</op:operator></expr></incr>)
	<block pos:line="2513" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="2514" pos:column="17">insertScintKey</name><argument_list pos:line="2514" pos:column="31">(<argument><expr><name pos:line="2514" pos:column="32">scitillaKeyRoot</name></expr></argument>, <argument><expr><name><name pos:line="2514" pos:column="49">_scintillaKeyCommands</name><index pos:line="2514" pos:column="70">[<expr><name><name pos:line="2514" pos:column="71">_scintillaModifiedKeyIndices</name><index pos:line="2514" pos:column="99">[<expr><name pos:line="2514" pos:column="100">i</name></expr>]</index></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name><name pos:line="2516" pos:column="9">_pXmlShortcutDoc</name><op:operator pos:line="2516" pos:column="25">-&gt;</op:operator><name pos:line="2516" pos:column="27">SaveFile</name></name><argument_list pos:line="2516" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2519" pos:column="1">int</name></type> <name><name pos:line="2519" pos:column="5">NppParameters</name><op:operator pos:line="2519" pos:column="18">::</op:operator><name pos:line="2519" pos:column="20">addUserLangToEnd</name></name><parameter_list pos:line="2519" pos:column="36">(<param><decl><type><specifier pos:line="2519" pos:column="37">const</specifier> <name pos:line="2519" pos:column="43">UserLangContainer</name> <type:modifier pos:line="2519" pos:column="61">&amp;</type:modifier></type> <name pos:line="2519" pos:column="63">userLang</name></decl></param>, <param><decl><type><specifier pos:line="2519" pos:column="73">const</specifier> <name pos:line="2519" pos:column="79">TCHAR</name> <type:modifier pos:line="2519" pos:column="85">*</type:modifier></type><name pos:line="2519" pos:column="86">newName</name></decl></param>)</parameter_list>
<block pos:line="2520" pos:column="1">{
	<if pos:line="2521" pos:column="9">if <condition pos:line="2521" pos:column="12">(<expr><call><name pos:line="2521" pos:column="13">isExistingUserLangName</name><argument_list pos:line="2521" pos:column="35">(<argument><expr><name pos:line="2521" pos:column="36">newName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2521" pos:column="45">
		<return pos:line="2522" pos:column="17">return <expr><op:operator pos:line="2522" pos:column="24">-</op:operator><lit:literal type="number" pos:line="2522" pos:column="25">1</lit:literal></expr>;</return></then></if>
	<expr_stmt><expr><name><name pos:line="2523" pos:column="9">_userLangArray</name><index pos:line="2523" pos:column="23">[<expr><name pos:line="2523" pos:column="24">_nbUserLang</name></expr>]</index></name> <op:operator pos:line="2523" pos:column="37">=</op:operator> <op:operator pos:line="2523" pos:column="39">new</op:operator> <call><name pos:line="2523" pos:column="43">UserLangContainer</name><argument_list pos:line="2523" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="2524" pos:column="9">*</op:operator><op:operator pos:line="2524" pos:column="10">(</op:operator><name><name pos:line="2524" pos:column="11">_userLangArray</name><index pos:line="2524" pos:column="25">[<expr><name pos:line="2524" pos:column="26">_nbUserLang</name></expr>]</index></name><op:operator pos:line="2524" pos:column="38">)</op:operator> <op:operator pos:line="2524" pos:column="40">=</op:operator> <name pos:line="2524" pos:column="42">userLang</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2525" pos:column="9">_userLangArray</name><index pos:line="2525" pos:column="23">[<expr><name pos:line="2525" pos:column="24">_nbUserLang</name></expr>]</index></name><op:operator pos:line="2525" pos:column="36">-&gt;</op:operator><name pos:line="2525" pos:column="38">_name</name> <op:operator pos:line="2525" pos:column="44">=</op:operator> <name pos:line="2525" pos:column="46">newName</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2526" pos:column="9">_nbUserLang</name><op:operator pos:line="2526" pos:column="20">++</op:operator></expr>;</expr_stmt>
	<return pos:line="2527" pos:column="9">return <expr><name pos:line="2527" pos:column="16">_nbUserLang</name><op:operator pos:line="2527" pos:column="27">-</op:operator><lit:literal type="number" pos:line="2527" pos:column="28">1</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2530" pos:column="1">void</name></type> <name><name pos:line="2530" pos:column="6">NppParameters</name><op:operator pos:line="2530" pos:column="19">::</op:operator><name pos:line="2530" pos:column="21">removeUserLang</name></name><parameter_list pos:line="2530" pos:column="35">(<param><decl><type><name pos:line="2530" pos:column="36">int</name></type> <name pos:line="2530" pos:column="40">index</name></decl></param>)</parameter_list>
<block pos:line="2531" pos:column="1">{
	<if pos:line="2532" pos:column="9">if <condition pos:line="2532" pos:column="12">(<expr><name pos:line="2532" pos:column="13">index</name> <op:operator pos:line="2532" pos:column="19">&gt;=</op:operator> <name pos:line="2532" pos:column="22">_nbUserLang</name></expr> )</condition><then pos:line="2532" pos:column="35">
		<return pos:line="2533" pos:column="17">return;</return></then></if>
	<expr_stmt><expr><op:operator pos:line="2534" pos:column="9">delete</op:operator> <name><name pos:line="2534" pos:column="16">_userLangArray</name><index pos:line="2534" pos:column="30">[<expr><name pos:line="2534" pos:column="31">index</name></expr>]</index></name></expr>;</expr_stmt>
	<for pos:line="2535" pos:column="9">for (<init><decl><type><name pos:line="2535" pos:column="14">int</name></type> <name pos:line="2535" pos:column="18">i</name> <init pos:line="2535" pos:column="20">= <expr><name pos:line="2535" pos:column="22">index</name></expr></init></decl> ;</init> <condition><expr><name pos:line="2535" pos:column="30">i</name> <op:operator pos:line="2535" pos:column="32">&lt;</op:operator> <op:operator pos:line="2535" pos:column="34">(</op:operator><name pos:line="2535" pos:column="35">_nbUserLang</name> <op:operator pos:line="2535" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="2535" pos:column="49">1</lit:literal><op:operator pos:line="2535" pos:column="50">)</op:operator></expr> ;</condition> <incr><expr><name pos:line="2535" pos:column="54">i</name><op:operator pos:line="2535" pos:column="55">++</op:operator></expr></incr>)
		<expr_stmt><expr><name><name pos:line="2536" pos:column="17">_userLangArray</name><index pos:line="2536" pos:column="31">[<expr><name pos:line="2536" pos:column="32">i</name></expr>]</index></name> <op:operator pos:line="2536" pos:column="35">=</op:operator> <name><name pos:line="2536" pos:column="37">_userLangArray</name><index pos:line="2536" pos:column="51">[<expr><name pos:line="2536" pos:column="52">i</name><op:operator pos:line="2536" pos:column="53">+</op:operator><lit:literal type="number" pos:line="2536" pos:column="54">1</lit:literal></expr>]</index></name></expr>;</expr_stmt></for>
	<expr_stmt><expr><name pos:line="2537" pos:column="9">_nbUserLang</name><op:operator pos:line="2537" pos:column="20">--</op:operator></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2540" pos:column="1">void</name></type> <name><name pos:line="2540" pos:column="6">NppParameters</name><op:operator pos:line="2540" pos:column="19">::</op:operator><name pos:line="2540" pos:column="21">feedUserSettings</name></name><parameter_list pos:line="2540" pos:column="37">(<param><decl><type><name pos:line="2540" pos:column="38">TiXmlNode</name> <type:modifier pos:line="2540" pos:column="48">*</type:modifier></type><name pos:line="2540" pos:column="49">settingsRoot</name></decl></param>)</parameter_list>
<block pos:line="2541" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="2542" pos:column="9">const</specifier> <name pos:line="2542" pos:column="15">TCHAR</name> <type:modifier pos:line="2542" pos:column="21">*</type:modifier></type><name pos:line="2542" pos:column="22">boolStr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2543" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2543" pos:column="19">*</type:modifier></type><name pos:line="2543" pos:column="20">globalSettingNode</name> <init pos:line="2543" pos:column="38">= <expr><call><name><name pos:line="2543" pos:column="40">settingsRoot</name><op:operator pos:line="2543" pos:column="52">-&gt;</op:operator><name pos:line="2543" pos:column="54">FirstChildElement</name></name><argument_list pos:line="2543" pos:column="71">(<argument><expr><call><name pos:line="2543" pos:column="72">TEXT</name><argument_list pos:line="2543" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2543" pos:column="77">"Global"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2544" pos:column="9">if <condition pos:line="2544" pos:column="12">(<expr><name pos:line="2544" pos:column="13">globalSettingNode</name></expr>)</condition><then pos:line="2544" pos:column="31">
	<block pos:line="2545" pos:column="9">{
		<expr_stmt><expr><name pos:line="2546" pos:column="17">boolStr</name> <op:operator pos:line="2546" pos:column="25">=</op:operator> <op:operator pos:line="2546" pos:column="27">(</op:operator><call><name><name pos:line="2546" pos:column="28">globalSettingNode</name><op:operator pos:line="2546" pos:column="45">-&gt;</op:operator><name pos:line="2546" pos:column="47">ToElement</name></name><argument_list pos:line="2546" pos:column="56">()</argument_list></call><op:operator pos:line="2546" pos:column="58">)</op:operator><op:operator pos:line="2546" pos:column="59">-&gt;</op:operator><call><name pos:line="2546" pos:column="61">Attribute</name><argument_list pos:line="2546" pos:column="70">(<argument><expr><call><name pos:line="2546" pos:column="71">TEXT</name><argument_list pos:line="2546" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="2546" pos:column="76">"caseIgnored"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2547" pos:column="17">if <condition pos:line="2547" pos:column="20">(<expr><name pos:line="2547" pos:column="21">boolStr</name></expr>)</condition><then pos:line="2547" pos:column="29">
            <expr_stmt><expr><name><name pos:line="2548" pos:column="13">_userLangArray</name><index pos:line="2548" pos:column="27">[<expr><name pos:line="2548" pos:column="28">_nbUserLang</name> <op:operator pos:line="2548" pos:column="40">-</op:operator> <lit:literal type="number" pos:line="2548" pos:column="42">1</lit:literal></expr>]</index></name><op:operator pos:line="2548" pos:column="44">-&gt;</op:operator><name pos:line="2548" pos:column="46">_isCaseIgnored</name> <op:operator pos:line="2548" pos:column="61">=</op:operator> <op:operator pos:line="2548" pos:column="63">!</op:operator><call><name pos:line="2548" pos:column="64">lstrcmp</name><argument_list pos:line="2548" pos:column="71">(<argument><expr><call><name pos:line="2548" pos:column="72">TEXT</name><argument_list pos:line="2548" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="2548" pos:column="77">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2548" pos:column="85">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<expr_stmt><expr><name pos:line="2550" pos:column="17">boolStr</name> <op:operator pos:line="2550" pos:column="25">=</op:operator> <op:operator pos:line="2550" pos:column="27">(</op:operator><call><name><name pos:line="2550" pos:column="28">globalSettingNode</name><op:operator pos:line="2550" pos:column="45">-&gt;</op:operator><name pos:line="2550" pos:column="47">ToElement</name></name><argument_list pos:line="2550" pos:column="56">()</argument_list></call><op:operator pos:line="2550" pos:column="58">)</op:operator><op:operator pos:line="2550" pos:column="59">-&gt;</op:operator><call><name pos:line="2550" pos:column="61">Attribute</name><argument_list pos:line="2550" pos:column="70">(<argument><expr><call><name pos:line="2550" pos:column="71">TEXT</name><argument_list pos:line="2550" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="2550" pos:column="76">"allowFoldOfComments"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2551" pos:column="17">if <condition pos:line="2551" pos:column="20">(<expr><name pos:line="2551" pos:column="21">boolStr</name></expr>)</condition><then pos:line="2551" pos:column="29">
            <expr_stmt><expr><name><name pos:line="2552" pos:column="13">_userLangArray</name><index pos:line="2552" pos:column="27">[<expr><name pos:line="2552" pos:column="28">_nbUserLang</name> <op:operator pos:line="2552" pos:column="40">-</op:operator> <lit:literal type="number" pos:line="2552" pos:column="42">1</lit:literal></expr>]</index></name><op:operator pos:line="2552" pos:column="44">-&gt;</op:operator><name pos:line="2552" pos:column="46">_allowFoldOfComments</name> <op:operator pos:line="2552" pos:column="67">=</op:operator> <op:operator pos:line="2552" pos:column="69">!</op:operator><call><name pos:line="2552" pos:column="70">lstrcmp</name><argument_list pos:line="2552" pos:column="77">(<argument><expr><call><name pos:line="2552" pos:column="78">TEXT</name><argument_list pos:line="2552" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="2552" pos:column="83">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2552" pos:column="91">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<expr_stmt><expr><name pos:line="2554" pos:column="17">boolStr</name> <op:operator pos:line="2554" pos:column="25">=</op:operator> <op:operator pos:line="2554" pos:column="27">(</op:operator><call><name><name pos:line="2554" pos:column="28">globalSettingNode</name><op:operator pos:line="2554" pos:column="45">-&gt;</op:operator><name pos:line="2554" pos:column="47">ToElement</name></name><argument_list pos:line="2554" pos:column="56">()</argument_list></call><op:operator pos:line="2554" pos:column="58">)</op:operator><op:operator pos:line="2554" pos:column="59">-&gt;</op:operator><call><name pos:line="2554" pos:column="61">Attribute</name><argument_list pos:line="2554" pos:column="70">(<argument><expr><call><name pos:line="2554" pos:column="71">TEXT</name><argument_list pos:line="2554" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="2554" pos:column="76">"forceLineCommentsAtBOL"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2555" pos:column="17">if <condition pos:line="2555" pos:column="20">(<expr><name pos:line="2555" pos:column="21">boolStr</name></expr>)</condition><then pos:line="2555" pos:column="29">
            <expr_stmt><expr><name><name pos:line="2556" pos:column="13">_userLangArray</name><index pos:line="2556" pos:column="27">[<expr><name pos:line="2556" pos:column="28">_nbUserLang</name> <op:operator pos:line="2556" pos:column="40">-</op:operator> <lit:literal type="number" pos:line="2556" pos:column="42">1</lit:literal></expr>]</index></name><op:operator pos:line="2556" pos:column="44">-&gt;</op:operator><name pos:line="2556" pos:column="46">_forceLineCommentsAtBOL</name> <op:operator pos:line="2556" pos:column="70">=</op:operator> <op:operator pos:line="2556" pos:column="72">!</op:operator><call><name pos:line="2556" pos:column="73">lstrcmp</name><argument_list pos:line="2556" pos:column="80">(<argument><expr><call><name pos:line="2556" pos:column="81">TEXT</name><argument_list pos:line="2556" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="2556" pos:column="86">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2556" pos:column="94">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<expr_stmt><expr><name pos:line="2558" pos:column="17">boolStr</name> <op:operator pos:line="2558" pos:column="25">=</op:operator> <op:operator pos:line="2558" pos:column="27">(</op:operator><call><name><name pos:line="2558" pos:column="28">globalSettingNode</name><op:operator pos:line="2558" pos:column="45">-&gt;</op:operator><name pos:line="2558" pos:column="47">ToElement</name></name><argument_list pos:line="2558" pos:column="56">()</argument_list></call><op:operator pos:line="2558" pos:column="58">)</op:operator><op:operator pos:line="2558" pos:column="59">-&gt;</op:operator><call><name pos:line="2558" pos:column="61">Attribute</name><argument_list pos:line="2558" pos:column="70">(<argument><expr><call><name pos:line="2558" pos:column="71">TEXT</name><argument_list pos:line="2558" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="2558" pos:column="76">"foldCompact"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2559" pos:column="17">if <condition pos:line="2559" pos:column="20">(<expr><name pos:line="2559" pos:column="21">boolStr</name></expr>)</condition><then pos:line="2559" pos:column="29">
            <expr_stmt><expr><name><name pos:line="2560" pos:column="13">_userLangArray</name><index pos:line="2560" pos:column="27">[<expr><name pos:line="2560" pos:column="28">_nbUserLang</name> <op:operator pos:line="2560" pos:column="40">-</op:operator> <lit:literal type="number" pos:line="2560" pos:column="42">1</lit:literal></expr>]</index></name><op:operator pos:line="2560" pos:column="44">-&gt;</op:operator><name pos:line="2560" pos:column="46">_foldCompact</name> <op:operator pos:line="2560" pos:column="59">=</op:operator> <op:operator pos:line="2560" pos:column="61">!</op:operator><call><name pos:line="2560" pos:column="62">lstrcmp</name><argument_list pos:line="2560" pos:column="69">(<argument><expr><call><name pos:line="2560" pos:column="70">TEXT</name><argument_list pos:line="2560" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="2560" pos:column="75">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2560" pos:column="83">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="2563" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2563" pos:column="19">*</type:modifier></type><name pos:line="2563" pos:column="20">prefixNode</name> <init pos:line="2563" pos:column="31">= <expr><call><name><name pos:line="2563" pos:column="33">settingsRoot</name><op:operator pos:line="2563" pos:column="45">-&gt;</op:operator><name pos:line="2563" pos:column="47">FirstChildElement</name></name><argument_list pos:line="2563" pos:column="64">(<argument><expr><call><name pos:line="2563" pos:column="65">TEXT</name><argument_list pos:line="2563" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2563" pos:column="70">"Prefix"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2564" pos:column="9">if <condition pos:line="2564" pos:column="12">(<expr><name pos:line="2564" pos:column="13">prefixNode</name></expr>)</condition><then pos:line="2564" pos:column="24">
	<block pos:line="2565" pos:column="9">{
        <decl_stmt><decl><type><specifier pos:line="2566" pos:column="9">const</specifier> <name pos:line="2566" pos:column="15">TCHAR</name> <type:modifier pos:line="2566" pos:column="21">*</type:modifier></type><name pos:line="2566" pos:column="22">udlVersion</name> <init pos:line="2566" pos:column="33">= <expr><name><name pos:line="2566" pos:column="35">_userLangArray</name><index pos:line="2566" pos:column="49">[<expr><name pos:line="2566" pos:column="50">_nbUserLang</name> <op:operator pos:line="2566" pos:column="62">-</op:operator> <lit:literal type="number" pos:line="2566" pos:column="64">1</lit:literal></expr>]</index></name><op:operator pos:line="2566" pos:column="66">-&gt;</op:operator><call><name><name pos:line="2566" pos:column="68">_udlVersion</name><op:operator pos:line="2566" pos:column="79">.</op:operator><name pos:line="2566" pos:column="80">c_str</name></name><argument_list pos:line="2566" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="2567" pos:column="9">if <condition pos:line="2567" pos:column="12">(<expr><op:operator pos:line="2567" pos:column="13">!</op:operator><call><name pos:line="2567" pos:column="14">lstrcmp</name><argument_list pos:line="2567" pos:column="21">(<argument><expr><name pos:line="2567" pos:column="22">udlVersion</name></expr></argument>, <argument><expr><call><name pos:line="2567" pos:column="34">TEXT</name><argument_list pos:line="2567" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="2567" pos:column="39">"2.0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2567" pos:column="47">
        <block pos:line="2568" pos:column="9">{
            <for pos:line="2569" pos:column="13">for (<init><decl><type><name pos:line="2569" pos:column="18">int</name></type> <name pos:line="2569" pos:column="22">i</name> <init pos:line="2569" pos:column="24">= <expr><lit:literal type="number" pos:line="2569" pos:column="26">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2569" pos:column="30">i</name> <op:operator pos:line="2569" pos:column="32">&lt;</op:operator> <name pos:line="2569" pos:column="34">SCE_USER_TOTAL_KEYWORD_GROUPS</name></expr> ;</condition> <incr><expr><name pos:line="2569" pos:column="66">i</name><op:operator pos:line="2569" pos:column="67">++</op:operator></expr></incr>)
            <block pos:line="2570" pos:column="13">{
                <expr_stmt><expr><name pos:line="2571" pos:column="17">boolStr</name> <op:operator pos:line="2571" pos:column="25">=</op:operator> <op:operator pos:line="2571" pos:column="27">(</op:operator><call><name><name pos:line="2571" pos:column="28">prefixNode</name><op:operator pos:line="2571" pos:column="38">-&gt;</op:operator><name pos:line="2571" pos:column="40">ToElement</name></name><argument_list pos:line="2571" pos:column="49">()</argument_list></call><op:operator pos:line="2571" pos:column="51">)</op:operator><op:operator pos:line="2571" pos:column="52">-&gt;</op:operator><call><name pos:line="2571" pos:column="54">Attribute</name><argument_list pos:line="2571" pos:column="63">(<argument><expr><name><name pos:line="2571" pos:column="64">keywordListMapper</name><index pos:line="2571" pos:column="81">[<expr><name pos:line="2571" pos:column="82">i</name><op:operator pos:line="2571" pos:column="83">+</op:operator><name pos:line="2571" pos:column="84">SCE_USER_KWLIST_KEYWORDS1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="2572" pos:column="17">if <condition pos:line="2572" pos:column="20">(<expr><name pos:line="2572" pos:column="21">boolStr</name></expr>)</condition><then pos:line="2572" pos:column="29">
                    <expr_stmt><expr><name><name pos:line="2573" pos:column="21">_userLangArray</name><index pos:line="2573" pos:column="35">[<expr><name pos:line="2573" pos:column="36">_nbUserLang</name> <op:operator pos:line="2573" pos:column="48">-</op:operator> <lit:literal type="number" pos:line="2573" pos:column="50">1</lit:literal></expr>]</index></name><op:operator pos:line="2573" pos:column="52">-&gt;</op:operator><name><name pos:line="2573" pos:column="54">_isPrefix</name><index pos:line="2573" pos:column="63">[<expr><name pos:line="2573" pos:column="64">i</name></expr>]</index></name> <op:operator pos:line="2573" pos:column="67">=</op:operator> <op:operator pos:line="2573" pos:column="69">!</op:operator><call><name pos:line="2573" pos:column="70">lstrcmp</name><argument_list pos:line="2573" pos:column="77">(<argument><expr><call><name pos:line="2573" pos:column="78">TEXT</name><argument_list pos:line="2573" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="2573" pos:column="83">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2573" pos:column="91">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></for>
        }</block></then>
        <else pos:line="2576" pos:column="9">else    <comment type="line" pos:line="2576" pos:column="17">// support for old style (pre 2.0)</comment>
        <block pos:line="2577" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="2578" pos:column="13">TCHAR</name></type> <name><name pos:line="2578" pos:column="19">names</name><index pos:line="2578" pos:column="24">[<expr><name pos:line="2578" pos:column="25">SCE_USER_TOTAL_KEYWORD_GROUPS</name></expr>]</index><index pos:line="2578" pos:column="55">[<expr><lit:literal type="number" pos:line="2578" pos:column="56">7</lit:literal></expr>]</index></name> <init pos:line="2578" pos:column="59">= <expr><block pos:line="2578" pos:column="61">{<expr><call><name pos:line="2578" pos:column="62">TEXT</name><argument_list pos:line="2578" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2578" pos:column="67">"words1"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="2578" pos:column="78">TEXT</name><argument_list pos:line="2578" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="2578" pos:column="83">"words2"</lit:literal></expr></argument>)</argument_list></call></expr>, <expr><call><name pos:line="2578" pos:column="94">TEXT</name><argument_list pos:line="2578" pos:column="98">(<argument><expr><lit:literal type="string" pos:line="2578" pos:column="99">"words3"</lit:literal></expr></argument>)</argument_list></call></expr>, <macro><name pos:line="2578" pos:column="110">TEXT</name><argument_list pos:line="2578" pos:column="114">(<argument pos:line="2578" pos:column="115">"words4"</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>
            <for pos:line="2579" pos:column="13">for (<init><decl><type><name pos:line="2579" pos:column="18">int</name></type> <name pos:line="2579" pos:column="22">i</name> <init pos:line="2579" pos:column="24">= <expr><lit:literal type="number" pos:line="2579" pos:column="26">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2579" pos:column="30">i</name> <op:operator pos:line="2579" pos:column="32">&lt;</op:operator> <lit:literal type="number" pos:line="2579" pos:column="34">4</lit:literal></expr> ;</condition> <incr><expr><name pos:line="2579" pos:column="38">i</name><op:operator pos:line="2579" pos:column="39">++</op:operator></expr></incr>)
            <block pos:line="2580" pos:column="13">{
                <expr_stmt><expr><name pos:line="2581" pos:column="17">boolStr</name> <op:operator pos:line="2581" pos:column="25">=</op:operator> <op:operator pos:line="2581" pos:column="27">(</op:operator><call><name><name pos:line="2581" pos:column="28">prefixNode</name><op:operator pos:line="2581" pos:column="38">-&gt;</op:operator><name pos:line="2581" pos:column="40">ToElement</name></name><argument_list pos:line="2581" pos:column="49">()</argument_list></call><op:operator pos:line="2581" pos:column="51">)</op:operator><op:operator pos:line="2581" pos:column="52">-&gt;</op:operator><call><name pos:line="2581" pos:column="54">Attribute</name><argument_list pos:line="2581" pos:column="63">(<argument><expr><name><name pos:line="2581" pos:column="64">names</name><index pos:line="2581" pos:column="69">[<expr><name pos:line="2581" pos:column="70">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="2582" pos:column="17">if <condition pos:line="2582" pos:column="20">(<expr><name pos:line="2582" pos:column="21">boolStr</name></expr>)</condition><then pos:line="2582" pos:column="29">
                    <expr_stmt><expr><name><name pos:line="2583" pos:column="21">_userLangArray</name><index pos:line="2583" pos:column="35">[<expr><name pos:line="2583" pos:column="36">_nbUserLang</name> <op:operator pos:line="2583" pos:column="48">-</op:operator> <lit:literal type="number" pos:line="2583" pos:column="50">1</lit:literal></expr>]</index></name><op:operator pos:line="2583" pos:column="52">-&gt;</op:operator><name><name pos:line="2583" pos:column="54">_isPrefix</name><index pos:line="2583" pos:column="63">[<expr><name pos:line="2583" pos:column="64">i</name></expr>]</index></name> <op:operator pos:line="2583" pos:column="67">=</op:operator> <op:operator pos:line="2583" pos:column="69">!</op:operator><call><name pos:line="2583" pos:column="70">lstrcmp</name><argument_list pos:line="2583" pos:column="77">(<argument><expr><call><name pos:line="2583" pos:column="78">TEXT</name><argument_list pos:line="2583" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="2583" pos:column="83">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2583" pos:column="91">boolStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></for>
        }</block></else></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2589" pos:column="1">void</name></type> <name><name pos:line="2589" pos:column="6">NppParameters</name><op:operator pos:line="2589" pos:column="19">::</op:operator><name pos:line="2589" pos:column="21">feedUserKeywordList</name></name><parameter_list pos:line="2589" pos:column="40">(<param><decl><type><name pos:line="2589" pos:column="41">TiXmlNode</name> <type:modifier pos:line="2589" pos:column="51">*</type:modifier></type><name pos:line="2589" pos:column="52">node</name></decl></param>)</parameter_list>
<block pos:line="2590" pos:column="1">{
	<for pos:line="2591" pos:column="9">for (<init><decl><type><name pos:line="2591" pos:column="14">TiXmlNode</name> <type:modifier pos:line="2591" pos:column="24">*</type:modifier></type><name pos:line="2591" pos:column="25">childNode</name> <init pos:line="2591" pos:column="35">= <expr><call><name><name pos:line="2591" pos:column="37">node</name><op:operator pos:line="2591" pos:column="41">-&gt;</op:operator><name pos:line="2591" pos:column="43">FirstChildElement</name></name><argument_list pos:line="2591" pos:column="60">(<argument><expr><call><name pos:line="2591" pos:column="61">TEXT</name><argument_list pos:line="2591" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="2591" pos:column="66">"Keywords"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="2592" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="2593" pos:column="17">childNode</name> <op:operator pos:line="2593" pos:column="27">=</op:operator> <call><name><name pos:line="2593" pos:column="29">childNode</name><op:operator pos:line="2593" pos:column="38">-&gt;</op:operator><name pos:line="2593" pos:column="40">NextSibling</name></name><argument_list pos:line="2593" pos:column="51">(<argument><expr><call><name pos:line="2593" pos:column="52">TEXT</name><argument_list pos:line="2593" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2593" pos:column="57">"Keywords"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="2594" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="2595" pos:column="17">const</specifier> <name pos:line="2595" pos:column="23">TCHAR</name> <type:modifier pos:line="2595" pos:column="29">*</type:modifier></type><name pos:line="2595" pos:column="30">keywordsName</name> <init pos:line="2595" pos:column="43">= <expr><op:operator pos:line="2595" pos:column="45">(</op:operator><call><name><name pos:line="2595" pos:column="46">childNode</name><op:operator pos:line="2595" pos:column="55">-&gt;</op:operator><name pos:line="2595" pos:column="57">ToElement</name></name><argument_list pos:line="2595" pos:column="66">()</argument_list></call><op:operator pos:line="2595" pos:column="68">)</op:operator><op:operator pos:line="2595" pos:column="69">-&gt;</op:operator><call><name pos:line="2595" pos:column="71">Attribute</name><argument_list pos:line="2595" pos:column="80">(<argument><expr><call><name pos:line="2595" pos:column="81">TEXT</name><argument_list pos:line="2595" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="2595" pos:column="86">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2596" pos:column="17">const</specifier> <name pos:line="2596" pos:column="23">TCHAR</name> <type:modifier pos:line="2596" pos:column="29">*</type:modifier></type><name pos:line="2596" pos:column="30">udlVersion</name> <init pos:line="2596" pos:column="41">= <expr><name><name pos:line="2596" pos:column="43">_userLangArray</name><index pos:line="2596" pos:column="57">[<expr><name pos:line="2596" pos:column="58">_nbUserLang</name> <op:operator pos:line="2596" pos:column="70">-</op:operator> <lit:literal type="number" pos:line="2596" pos:column="72">1</lit:literal></expr>]</index></name><op:operator pos:line="2596" pos:column="74">-&gt;</op:operator><call><name><name pos:line="2596" pos:column="76">_udlVersion</name><op:operator pos:line="2596" pos:column="87">.</op:operator><name pos:line="2596" pos:column="88">c_str</name></name><argument_list pos:line="2596" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2597" pos:column="17">TCHAR</name> <type:modifier pos:line="2597" pos:column="23">*</type:modifier></type><name pos:line="2597" pos:column="24">kwl</name> <init pos:line="2597" pos:column="28">= <expr><name pos:line="2597" pos:column="30">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="2599" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2599" pos:column="19">*</type:modifier></type><name pos:line="2599" pos:column="20">valueNode</name> <init pos:line="2599" pos:column="30">= <expr><call><name><name pos:line="2599" pos:column="32">childNode</name><op:operator pos:line="2599" pos:column="41">-&gt;</op:operator><name pos:line="2599" pos:column="43">FirstChild</name></name><argument_list pos:line="2599" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="2600" pos:column="9">if <condition pos:line="2600" pos:column="12">(<expr><name pos:line="2600" pos:column="13">valueNode</name></expr>)</condition><then pos:line="2600" pos:column="23">
        <block pos:line="2601" pos:column="9">{
            <if pos:line="2602" pos:column="13">if <condition pos:line="2602" pos:column="16">(<expr><op:operator pos:line="2602" pos:column="17">!</op:operator><call><name pos:line="2602" pos:column="18">lstrcmp</name><argument_list pos:line="2602" pos:column="25">(<argument><expr><name pos:line="2602" pos:column="26">udlVersion</name></expr></argument>, <argument><expr><call><name pos:line="2602" pos:column="38">TEXT</name><argument_list pos:line="2602" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="2602" pos:column="43">"2.0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2602" pos:column="51">
            <block pos:line="2603" pos:column="13">{
                <decl_stmt><decl><type><specifier pos:line="2604" pos:column="17">const</specifier> <name pos:line="2604" pos:column="23">int</name></type> <name pos:line="2604" pos:column="27">keywordsID</name> <init pos:line="2604" pos:column="38">= <expr><call><name pos:line="2604" pos:column="40">_tstoi</name><argument_list pos:line="2604" pos:column="46">(<argument><expr><op:operator pos:line="2604" pos:column="47">(</op:operator><call><name><name pos:line="2604" pos:column="48">childNode</name><op:operator pos:line="2604" pos:column="57">-&gt;</op:operator><name pos:line="2604" pos:column="59">ToElement</name></name><argument_list pos:line="2604" pos:column="68">()</argument_list></call><op:operator pos:line="2604" pos:column="70">)</op:operator><op:operator pos:line="2604" pos:column="71">-&gt;</op:operator><call><name pos:line="2604" pos:column="73">Attribute</name><argument_list pos:line="2604" pos:column="82">(<argument><expr><call><name pos:line="2604" pos:column="83">TEXT</name><argument_list pos:line="2604" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="2604" pos:column="88">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="2605" pos:column="17">kwl</name> <op:operator pos:line="2605" pos:column="21">=</op:operator> <op:operator pos:line="2605" pos:column="23">(</op:operator><name pos:line="2605" pos:column="24">valueNode</name><op:operator pos:line="2605" pos:column="33">)</op:operator><op:operator pos:line="2605" pos:column="34">?</op:operator><call><name><name pos:line="2605" pos:column="35">valueNode</name><op:operator pos:line="2605" pos:column="44">-&gt;</op:operator><name pos:line="2605" pos:column="46">Value</name></name><argument_list pos:line="2605" pos:column="51">()</argument_list></call><op:operator pos:line="2605" pos:column="53">:</op:operator><call><name pos:line="2605" pos:column="54">TEXT</name><argument_list pos:line="2605" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="2605" pos:column="59">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt><expr><call><name pos:line="2606" pos:column="17">lstrcpy</name><argument_list pos:line="2606" pos:column="24">(<argument><expr><name><name pos:line="2606" pos:column="25">_userLangArray</name><index pos:line="2606" pos:column="39">[<expr><name pos:line="2606" pos:column="40">_nbUserLang</name> <op:operator pos:line="2606" pos:column="52">-</op:operator> <lit:literal type="number" pos:line="2606" pos:column="54">1</lit:literal></expr>]</index></name><op:operator pos:line="2606" pos:column="56">-&gt;</op:operator><name><name pos:line="2606" pos:column="58">_keywordLists</name><index pos:line="2606" pos:column="71">[<expr><name pos:line="2606" pos:column="72">keywordsID</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="2606" pos:column="85">kwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="2608" pos:column="13">else    <comment type="line" pos:line="2608" pos:column="21">// support for old style (pre 2.0)</comment>
            <block pos:line="2609" pos:column="13">{
                <if pos:line="2610" pos:column="17">if <condition pos:line="2610" pos:column="20">(<expr><op:operator pos:line="2610" pos:column="21">!</op:operator><call><name pos:line="2610" pos:column="22">lstrcmp</name><argument_list pos:line="2610" pos:column="29">(<argument><expr><name pos:line="2610" pos:column="30">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2610" pos:column="44">TEXT</name><argument_list pos:line="2610" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2610" pos:column="49">"Delimiters"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2610" pos:column="64">
                <block pos:line="2611" pos:column="17">{
                    <decl_stmt><decl><type><name><name pos:line="2612" pos:column="21">basic_string</name><argument_list pos:line="2612" pos:column="33">&lt;<argument><expr><name pos:line="2612" pos:column="34">TCHAR</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="2612" pos:column="41">temp</name> <init pos:line="2612" pos:column="46">= <expr><call><name pos:line="2612" pos:column="48">TEXT</name><argument_list pos:line="2612" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="2612" pos:column="53">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name pos:line="2613" pos:column="21">kwl</name> <op:operator pos:line="2613" pos:column="25">=</op:operator> <op:operator pos:line="2613" pos:column="27">(</op:operator><name pos:line="2613" pos:column="28">valueNode</name><op:operator pos:line="2613" pos:column="37">)</op:operator><op:operator pos:line="2613" pos:column="38">?</op:operator><call><name><name pos:line="2613" pos:column="39">valueNode</name><op:operator pos:line="2613" pos:column="48">-&gt;</op:operator><name pos:line="2613" pos:column="50">Value</name></name><argument_list pos:line="2613" pos:column="55">()</argument_list></call><op:operator pos:line="2613" pos:column="57">:</op:operator><call><name pos:line="2613" pos:column="58">TEXT</name><argument_list pos:line="2613" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2613" pos:column="63">"000000"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    
                    <expr_stmt><expr><name pos:line="2615" pos:column="21">temp</name> <op:operator pos:line="2615" pos:column="26">+=</op:operator> <call><name pos:line="2615" pos:column="29">TEXT</name><argument_list pos:line="2615" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2615" pos:column="34">"00"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <if pos:line="2615" pos:column="45">if <condition pos:line="2615" pos:column="48">(<expr><name><name pos:line="2615" pos:column="49">kwl</name><index pos:line="2615" pos:column="52">[<expr><lit:literal type="number" pos:line="2615" pos:column="53">0</lit:literal></expr>]</index></name> <op:operator pos:line="2615" pos:column="56">!=</op:operator> <lit:literal type="char" pos:line="2615" pos:column="59">'0'</lit:literal></expr>)</condition><then pos:line="2615" pos:column="63"> <expr_stmt><expr><name pos:line="2615" pos:column="64">temp</name> <op:operator pos:line="2615" pos:column="69">+=</op:operator> <name><name pos:line="2615" pos:column="72">kwl</name><index pos:line="2615" pos:column="75">[<expr><lit:literal type="number" pos:line="2615" pos:column="76">0</lit:literal></expr>]</index></name></expr>;</expr_stmt></then></if>     <expr_stmt><expr><name pos:line="2615" pos:column="84">temp</name> <op:operator pos:line="2615" pos:column="89">+=</op:operator> <call><name pos:line="2615" pos:column="92">TEXT</name><argument_list pos:line="2615" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="2615" pos:column="97">" 01"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="2616" pos:column="21">temp</name> <op:operator pos:line="2616" pos:column="26">+=</op:operator> <call><name pos:line="2616" pos:column="29">TEXT</name><argument_list pos:line="2616" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2616" pos:column="34">" 02"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <if pos:line="2616" pos:column="45">if <condition pos:line="2616" pos:column="48">(<expr><name><name pos:line="2616" pos:column="49">kwl</name><index pos:line="2616" pos:column="52">[<expr><lit:literal type="number" pos:line="2616" pos:column="53">3</lit:literal></expr>]</index></name> <op:operator pos:line="2616" pos:column="56">!=</op:operator> <lit:literal type="char" pos:line="2616" pos:column="59">'0'</lit:literal></expr>)</condition><then pos:line="2616" pos:column="63"> <expr_stmt><expr><name pos:line="2616" pos:column="64">temp</name> <op:operator pos:line="2616" pos:column="69">+=</op:operator> <name><name pos:line="2616" pos:column="72">kwl</name><index pos:line="2616" pos:column="75">[<expr><lit:literal type="number" pos:line="2616" pos:column="76">3</lit:literal></expr>]</index></name></expr>;</expr_stmt></then></if> 
                    <expr_stmt><expr><name pos:line="2617" pos:column="21">temp</name> <op:operator pos:line="2617" pos:column="26">+=</op:operator> <call><name pos:line="2617" pos:column="29">TEXT</name><argument_list pos:line="2617" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2617" pos:column="34">" 03"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <if pos:line="2617" pos:column="45">if <condition pos:line="2617" pos:column="48">(<expr><name><name pos:line="2617" pos:column="49">kwl</name><index pos:line="2617" pos:column="52">[<expr><lit:literal type="number" pos:line="2617" pos:column="53">1</lit:literal></expr>]</index></name> <op:operator pos:line="2617" pos:column="56">!=</op:operator> <lit:literal type="char" pos:line="2617" pos:column="59">'0'</lit:literal></expr>)</condition><then pos:line="2617" pos:column="63"> <expr_stmt><expr><name pos:line="2617" pos:column="64">temp</name> <op:operator pos:line="2617" pos:column="69">+=</op:operator> <name><name pos:line="2617" pos:column="72">kwl</name><index pos:line="2617" pos:column="75">[<expr><lit:literal type="number" pos:line="2617" pos:column="76">1</lit:literal></expr>]</index></name></expr>;</expr_stmt></then></if>     <expr_stmt><expr><name pos:line="2617" pos:column="84">temp</name> <op:operator pos:line="2617" pos:column="89">+=</op:operator> <call><name pos:line="2617" pos:column="92">TEXT</name><argument_list pos:line="2617" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="2617" pos:column="97">" 04"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="2618" pos:column="21">temp</name> <op:operator pos:line="2618" pos:column="26">+=</op:operator> <call><name pos:line="2618" pos:column="29">TEXT</name><argument_list pos:line="2618" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2618" pos:column="34">" 05"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <if pos:line="2618" pos:column="45">if <condition pos:line="2618" pos:column="48">(<expr><name><name pos:line="2618" pos:column="49">kwl</name><index pos:line="2618" pos:column="52">[<expr><lit:literal type="number" pos:line="2618" pos:column="53">4</lit:literal></expr>]</index></name> <op:operator pos:line="2618" pos:column="56">!=</op:operator> <lit:literal type="char" pos:line="2618" pos:column="59">'0'</lit:literal></expr>)</condition><then pos:line="2618" pos:column="63"> <expr_stmt><expr><name pos:line="2618" pos:column="64">temp</name> <op:operator pos:line="2618" pos:column="69">+=</op:operator> <name><name pos:line="2618" pos:column="72">kwl</name><index pos:line="2618" pos:column="75">[<expr><lit:literal type="number" pos:line="2618" pos:column="76">4</lit:literal></expr>]</index></name></expr>;</expr_stmt></then></if> 
                    <expr_stmt><expr><name pos:line="2619" pos:column="21">temp</name> <op:operator pos:line="2619" pos:column="26">+=</op:operator> <call><name pos:line="2619" pos:column="29">TEXT</name><argument_list pos:line="2619" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2619" pos:column="34">" 06"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <if pos:line="2619" pos:column="45">if <condition pos:line="2619" pos:column="48">(<expr><name><name pos:line="2619" pos:column="49">kwl</name><index pos:line="2619" pos:column="52">[<expr><lit:literal type="number" pos:line="2619" pos:column="53">2</lit:literal></expr>]</index></name> <op:operator pos:line="2619" pos:column="56">!=</op:operator> <lit:literal type="char" pos:line="2619" pos:column="59">'0'</lit:literal></expr>)</condition><then pos:line="2619" pos:column="63"> <expr_stmt><expr><name pos:line="2619" pos:column="64">temp</name> <op:operator pos:line="2619" pos:column="69">+=</op:operator> <name><name pos:line="2619" pos:column="72">kwl</name><index pos:line="2619" pos:column="75">[<expr><lit:literal type="number" pos:line="2619" pos:column="76">2</lit:literal></expr>]</index></name></expr>;</expr_stmt></then></if>     <expr_stmt><expr><name pos:line="2619" pos:column="84">temp</name> <op:operator pos:line="2619" pos:column="89">+=</op:operator> <call><name pos:line="2619" pos:column="92">TEXT</name><argument_list pos:line="2619" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="2619" pos:column="97">" 07"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><name pos:line="2620" pos:column="21">temp</name> <op:operator pos:line="2620" pos:column="26">+=</op:operator> <call><name pos:line="2620" pos:column="29">TEXT</name><argument_list pos:line="2620" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2620" pos:column="34">" 08"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <if pos:line="2620" pos:column="45">if <condition pos:line="2620" pos:column="48">(<expr><name><name pos:line="2620" pos:column="49">kwl</name><index pos:line="2620" pos:column="52">[<expr><lit:literal type="number" pos:line="2620" pos:column="53">5</lit:literal></expr>]</index></name> <op:operator pos:line="2620" pos:column="56">!=</op:operator> <lit:literal type="char" pos:line="2620" pos:column="59">'0'</lit:literal></expr>)</condition><then pos:line="2620" pos:column="63"> <expr_stmt><expr><name pos:line="2620" pos:column="64">temp</name> <op:operator pos:line="2620" pos:column="69">+=</op:operator> <name><name pos:line="2620" pos:column="72">kwl</name><index pos:line="2620" pos:column="75">[<expr><lit:literal type="number" pos:line="2620" pos:column="76">5</lit:literal></expr>]</index></name></expr>;</expr_stmt></then></if>
                    
                    <expr_stmt><expr><name pos:line="2622" pos:column="21">temp</name> <op:operator pos:line="2622" pos:column="26">+=</op:operator> <call><name pos:line="2622" pos:column="29">TEXT</name><argument_list pos:line="2622" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2622" pos:column="34">" 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="2623" pos:column="21">lstrcpy</name><argument_list pos:line="2623" pos:column="28">(<argument><expr><name><name pos:line="2623" pos:column="29">_userLangArray</name><index pos:line="2623" pos:column="43">[<expr><name pos:line="2623" pos:column="44">_nbUserLang</name> <op:operator pos:line="2623" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="2623" pos:column="58">1</lit:literal></expr>]</index></name><op:operator pos:line="2623" pos:column="60">-&gt;</op:operator><name><name pos:line="2623" pos:column="62">_keywordLists</name><index pos:line="2623" pos:column="75">[<expr><name pos:line="2623" pos:column="76">SCE_USER_KWLIST_DELIMITERS</name></expr>]</index></name></expr></argument>, <argument><expr><call><name><name pos:line="2623" pos:column="105">temp</name><op:operator pos:line="2623" pos:column="109">.</op:operator><name pos:line="2623" pos:column="110">c_str</name></name><argument_list pos:line="2623" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="2625" pos:column="17">else <if pos:line="2625" pos:column="22">if <condition pos:line="2625" pos:column="25">(<expr><op:operator pos:line="2625" pos:column="26">!</op:operator><call><name pos:line="2625" pos:column="27">lstrcmp</name><argument_list pos:line="2625" pos:column="34">(<argument><expr><name pos:line="2625" pos:column="35">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2625" pos:column="49">TEXT</name><argument_list pos:line="2625" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2625" pos:column="54">"Operators"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2625" pos:column="68">
                <block pos:line="2626" pos:column="17">{
                    <expr_stmt><expr><name pos:line="2627" pos:column="21">kwl</name> <op:operator pos:line="2627" pos:column="25">=</op:operator> <op:operator pos:line="2627" pos:column="27">(</op:operator><name pos:line="2627" pos:column="28">valueNode</name><op:operator pos:line="2627" pos:column="37">)</op:operator><op:operator pos:line="2627" pos:column="38">?</op:operator><call><name><name pos:line="2627" pos:column="39">valueNode</name><op:operator pos:line="2627" pos:column="48">-&gt;</op:operator><name pos:line="2627" pos:column="50">Value</name></name><argument_list pos:line="2627" pos:column="55">()</argument_list></call><op:operator pos:line="2627" pos:column="57">:</op:operator><call><name pos:line="2627" pos:column="58">TEXT</name><argument_list pos:line="2627" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2627" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="2628" pos:column="21">lstrcpy</name><argument_list pos:line="2628" pos:column="28">(<argument><expr><name><name pos:line="2628" pos:column="29">_userLangArray</name><index pos:line="2628" pos:column="43">[<expr><name pos:line="2628" pos:column="44">_nbUserLang</name> <op:operator pos:line="2628" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="2628" pos:column="58">1</lit:literal></expr>]</index></name><op:operator pos:line="2628" pos:column="60">-&gt;</op:operator><name><name pos:line="2628" pos:column="62">_keywordLists</name><index pos:line="2628" pos:column="75">[<expr><name pos:line="2628" pos:column="76">SCE_USER_KWLIST_OPERATORS1</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="2628" pos:column="105">kwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="2630" pos:column="17">else <if pos:line="2630" pos:column="22">if <condition pos:line="2630" pos:column="25">(<expr><op:operator pos:line="2630" pos:column="26">!</op:operator><call><name pos:line="2630" pos:column="27">lstrcmp</name><argument_list pos:line="2630" pos:column="34">(<argument><expr><name pos:line="2630" pos:column="35">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2630" pos:column="49">TEXT</name><argument_list pos:line="2630" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2630" pos:column="54">"Folder+"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2630" pos:column="66">
                <block pos:line="2631" pos:column="17">{
                    <expr_stmt><expr><name pos:line="2632" pos:column="21">kwl</name> <op:operator pos:line="2632" pos:column="25">=</op:operator> <op:operator pos:line="2632" pos:column="27">(</op:operator><name pos:line="2632" pos:column="28">valueNode</name><op:operator pos:line="2632" pos:column="37">)</op:operator><op:operator pos:line="2632" pos:column="38">?</op:operator><call><name><name pos:line="2632" pos:column="39">valueNode</name><op:operator pos:line="2632" pos:column="48">-&gt;</op:operator><name pos:line="2632" pos:column="50">Value</name></name><argument_list pos:line="2632" pos:column="55">()</argument_list></call><op:operator pos:line="2632" pos:column="57">:</op:operator><call><name pos:line="2632" pos:column="58">TEXT</name><argument_list pos:line="2632" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2632" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="2633" pos:column="41">lstrcpy</name><argument_list pos:line="2633" pos:column="48">(<argument><expr><name><name pos:line="2633" pos:column="49">_userLangArray</name><index pos:line="2633" pos:column="63">[<expr><name pos:line="2633" pos:column="64">_nbUserLang</name> <op:operator pos:line="2633" pos:column="76">-</op:operator> <lit:literal type="number" pos:line="2633" pos:column="78">1</lit:literal></expr>]</index></name><op:operator pos:line="2633" pos:column="80">-&gt;</op:operator><name><name pos:line="2633" pos:column="82">_keywordLists</name><index pos:line="2633" pos:column="95">[<expr><name pos:line="2633" pos:column="96">SCE_USER_KWLIST_FOLDERS_IN_CODE1_OPEN</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="2633" pos:column="136">kwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="2635" pos:column="17">else <if pos:line="2635" pos:column="22">if <condition pos:line="2635" pos:column="25">(<expr><op:operator pos:line="2635" pos:column="26">!</op:operator><call><name pos:line="2635" pos:column="27">lstrcmp</name><argument_list pos:line="2635" pos:column="34">(<argument><expr><name pos:line="2635" pos:column="35">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2635" pos:column="49">TEXT</name><argument_list pos:line="2635" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2635" pos:column="54">"Folder-"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2635" pos:column="66">
                <block pos:line="2636" pos:column="17">{
                    <expr_stmt><expr><name pos:line="2637" pos:column="21">kwl</name> <op:operator pos:line="2637" pos:column="25">=</op:operator> <op:operator pos:line="2637" pos:column="27">(</op:operator><name pos:line="2637" pos:column="28">valueNode</name><op:operator pos:line="2637" pos:column="37">)</op:operator><op:operator pos:line="2637" pos:column="38">?</op:operator><call><name><name pos:line="2637" pos:column="39">valueNode</name><op:operator pos:line="2637" pos:column="48">-&gt;</op:operator><name pos:line="2637" pos:column="50">Value</name></name><argument_list pos:line="2637" pos:column="55">()</argument_list></call><op:operator pos:line="2637" pos:column="57">:</op:operator><call><name pos:line="2637" pos:column="58">TEXT</name><argument_list pos:line="2637" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2637" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="2638" pos:column="41">lstrcpy</name><argument_list pos:line="2638" pos:column="48">(<argument><expr><name><name pos:line="2638" pos:column="49">_userLangArray</name><index pos:line="2638" pos:column="63">[<expr><name pos:line="2638" pos:column="64">_nbUserLang</name> <op:operator pos:line="2638" pos:column="76">-</op:operator> <lit:literal type="number" pos:line="2638" pos:column="78">1</lit:literal></expr>]</index></name><op:operator pos:line="2638" pos:column="80">-&gt;</op:operator><name><name pos:line="2638" pos:column="82">_keywordLists</name><index pos:line="2638" pos:column="95">[<expr><name pos:line="2638" pos:column="96">SCE_USER_KWLIST_FOLDERS_IN_CODE1_CLOSE</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="2638" pos:column="137">kwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="2640" pos:column="17">else <if pos:line="2640" pos:column="22">if <condition pos:line="2640" pos:column="25">(<expr><op:operator pos:line="2640" pos:column="26">!</op:operator><call><name pos:line="2640" pos:column="27">lstrcmp</name><argument_list pos:line="2640" pos:column="34">(<argument><expr><name pos:line="2640" pos:column="35">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2640" pos:column="49">TEXT</name><argument_list pos:line="2640" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2640" pos:column="54">"Words1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2640" pos:column="65">
                <block pos:line="2641" pos:column="17">{
                    <expr_stmt><expr><name pos:line="2642" pos:column="21">kwl</name> <op:operator pos:line="2642" pos:column="25">=</op:operator> <op:operator pos:line="2642" pos:column="27">(</op:operator><name pos:line="2642" pos:column="28">valueNode</name><op:operator pos:line="2642" pos:column="37">)</op:operator><op:operator pos:line="2642" pos:column="38">?</op:operator><call><name><name pos:line="2642" pos:column="39">valueNode</name><op:operator pos:line="2642" pos:column="48">-&gt;</op:operator><name pos:line="2642" pos:column="50">Value</name></name><argument_list pos:line="2642" pos:column="55">()</argument_list></call><op:operator pos:line="2642" pos:column="57">:</op:operator><call><name pos:line="2642" pos:column="58">TEXT</name><argument_list pos:line="2642" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2642" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="2643" pos:column="21">lstrcpy</name><argument_list pos:line="2643" pos:column="28">(<argument><expr><name><name pos:line="2643" pos:column="29">_userLangArray</name><index pos:line="2643" pos:column="43">[<expr><name pos:line="2643" pos:column="44">_nbUserLang</name> <op:operator pos:line="2643" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="2643" pos:column="58">1</lit:literal></expr>]</index></name><op:operator pos:line="2643" pos:column="60">-&gt;</op:operator><name><name pos:line="2643" pos:column="62">_keywordLists</name><index pos:line="2643" pos:column="75">[<expr><name pos:line="2643" pos:column="76">SCE_USER_KWLIST_KEYWORDS1</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="104">kwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="2645" pos:column="17">else <if pos:line="2645" pos:column="22">if <condition pos:line="2645" pos:column="25">(<expr><op:operator pos:line="2645" pos:column="26">!</op:operator><call><name pos:line="2645" pos:column="27">lstrcmp</name><argument_list pos:line="2645" pos:column="34">(<argument><expr><name pos:line="2645" pos:column="35">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2645" pos:column="49">TEXT</name><argument_list pos:line="2645" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2645" pos:column="54">"Words2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2645" pos:column="65">
                <block pos:line="2646" pos:column="17">{
                    <expr_stmt><expr><name pos:line="2647" pos:column="21">kwl</name> <op:operator pos:line="2647" pos:column="25">=</op:operator> <op:operator pos:line="2647" pos:column="27">(</op:operator><name pos:line="2647" pos:column="28">valueNode</name><op:operator pos:line="2647" pos:column="37">)</op:operator><op:operator pos:line="2647" pos:column="38">?</op:operator><call><name><name pos:line="2647" pos:column="39">valueNode</name><op:operator pos:line="2647" pos:column="48">-&gt;</op:operator><name pos:line="2647" pos:column="50">Value</name></name><argument_list pos:line="2647" pos:column="55">()</argument_list></call><op:operator pos:line="2647" pos:column="57">:</op:operator><call><name pos:line="2647" pos:column="58">TEXT</name><argument_list pos:line="2647" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2647" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="2648" pos:column="21">lstrcpy</name><argument_list pos:line="2648" pos:column="28">(<argument><expr><name><name pos:line="2648" pos:column="29">_userLangArray</name><index pos:line="2648" pos:column="43">[<expr><name pos:line="2648" pos:column="44">_nbUserLang</name> <op:operator pos:line="2648" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="2648" pos:column="58">1</lit:literal></expr>]</index></name><op:operator pos:line="2648" pos:column="60">-&gt;</op:operator><name><name pos:line="2648" pos:column="62">_keywordLists</name><index pos:line="2648" pos:column="75">[<expr><name pos:line="2648" pos:column="76">SCE_USER_KWLIST_KEYWORDS2</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="2648" pos:column="104">kwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="2650" pos:column="17">else <if pos:line="2650" pos:column="22">if <condition pos:line="2650" pos:column="25">(<expr><op:operator pos:line="2650" pos:column="26">!</op:operator><call><name pos:line="2650" pos:column="27">lstrcmp</name><argument_list pos:line="2650" pos:column="34">(<argument><expr><name pos:line="2650" pos:column="35">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2650" pos:column="49">TEXT</name><argument_list pos:line="2650" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2650" pos:column="54">"Words3"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2650" pos:column="65">
                <block pos:line="2651" pos:column="17">{
                    <expr_stmt><expr><name pos:line="2652" pos:column="21">kwl</name> <op:operator pos:line="2652" pos:column="25">=</op:operator> <op:operator pos:line="2652" pos:column="27">(</op:operator><name pos:line="2652" pos:column="28">valueNode</name><op:operator pos:line="2652" pos:column="37">)</op:operator><op:operator pos:line="2652" pos:column="38">?</op:operator><call><name><name pos:line="2652" pos:column="39">valueNode</name><op:operator pos:line="2652" pos:column="48">-&gt;</op:operator><name pos:line="2652" pos:column="50">Value</name></name><argument_list pos:line="2652" pos:column="55">()</argument_list></call><op:operator pos:line="2652" pos:column="57">:</op:operator><call><name pos:line="2652" pos:column="58">TEXT</name><argument_list pos:line="2652" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2652" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="2653" pos:column="21">lstrcpy</name><argument_list pos:line="2653" pos:column="28">(<argument><expr><name><name pos:line="2653" pos:column="29">_userLangArray</name><index pos:line="2653" pos:column="43">[<expr><name pos:line="2653" pos:column="44">_nbUserLang</name> <op:operator pos:line="2653" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="2653" pos:column="58">1</lit:literal></expr>]</index></name><op:operator pos:line="2653" pos:column="60">-&gt;</op:operator><name><name pos:line="2653" pos:column="62">_keywordLists</name><index pos:line="2653" pos:column="75">[<expr><name pos:line="2653" pos:column="76">SCE_USER_KWLIST_KEYWORDS3</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="2653" pos:column="104">kwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="2655" pos:column="17">else <if pos:line="2655" pos:column="22">if <condition pos:line="2655" pos:column="25">(<expr><op:operator pos:line="2655" pos:column="26">!</op:operator><call><name pos:line="2655" pos:column="27">lstrcmp</name><argument_list pos:line="2655" pos:column="34">(<argument><expr><name pos:line="2655" pos:column="35">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2655" pos:column="49">TEXT</name><argument_list pos:line="2655" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2655" pos:column="54">"Words4"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2655" pos:column="65">
                <block pos:line="2656" pos:column="17">{
                    <expr_stmt><expr><name pos:line="2657" pos:column="21">kwl</name> <op:operator pos:line="2657" pos:column="25">=</op:operator> <op:operator pos:line="2657" pos:column="27">(</op:operator><name pos:line="2657" pos:column="28">valueNode</name><op:operator pos:line="2657" pos:column="37">)</op:operator><op:operator pos:line="2657" pos:column="38">?</op:operator><call><name><name pos:line="2657" pos:column="39">valueNode</name><op:operator pos:line="2657" pos:column="48">-&gt;</op:operator><name pos:line="2657" pos:column="50">Value</name></name><argument_list pos:line="2657" pos:column="55">()</argument_list></call><op:operator pos:line="2657" pos:column="57">:</op:operator><call><name pos:line="2657" pos:column="58">TEXT</name><argument_list pos:line="2657" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2657" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <expr_stmt><expr><call><name pos:line="2658" pos:column="21">lstrcpy</name><argument_list pos:line="2658" pos:column="28">(<argument><expr><name><name pos:line="2658" pos:column="29">_userLangArray</name><index pos:line="2658" pos:column="43">[<expr><name pos:line="2658" pos:column="44">_nbUserLang</name> <op:operator pos:line="2658" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="2658" pos:column="58">1</lit:literal></expr>]</index></name><op:operator pos:line="2658" pos:column="60">-&gt;</op:operator><name><name pos:line="2658" pos:column="62">_keywordLists</name><index pos:line="2658" pos:column="75">[<expr><name pos:line="2658" pos:column="76">SCE_USER_KWLIST_KEYWORDS4</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="2658" pos:column="104">kwl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="2660" pos:column="17">else <if pos:line="2660" pos:column="22">if <condition pos:line="2660" pos:column="25">(<expr><op:operator pos:line="2660" pos:column="26">!</op:operator><call><name pos:line="2660" pos:column="27">lstrcmp</name><argument_list pos:line="2660" pos:column="34">(<argument><expr><name pos:line="2660" pos:column="35">keywordsName</name></expr></argument>, <argument><expr><call><name pos:line="2660" pos:column="49">TEXT</name><argument_list pos:line="2660" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2660" pos:column="54">"Comment"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2660" pos:column="66">
                <block pos:line="2661" pos:column="17">{
                    <expr_stmt><expr><name pos:line="2662" pos:column="21">kwl</name> <op:operator pos:line="2662" pos:column="25">=</op:operator> <op:operator pos:line="2662" pos:column="27">(</op:operator><name pos:line="2662" pos:column="28">valueNode</name><op:operator pos:line="2662" pos:column="37">)</op:operator><op:operator pos:line="2662" pos:column="38">?</op:operator><call><name><name pos:line="2662" pos:column="39">valueNode</name><op:operator pos:line="2662" pos:column="48">-&gt;</op:operator><name pos:line="2662" pos:column="50">Value</name></name><argument_list pos:line="2662" pos:column="55">()</argument_list></call><op:operator pos:line="2662" pos:column="57">:</op:operator><call><name pos:line="2662" pos:column="58">TEXT</name><argument_list pos:line="2662" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2662" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <comment type="line" pos:line="2663" pos:column="21">//int len = _tcslen(kwl);</comment>
                    <decl_stmt><decl><type><name><name pos:line="2664" pos:column="21">basic_string</name><argument_list pos:line="2664" pos:column="33">&lt;<argument><expr><name pos:line="2664" pos:column="34">TCHAR</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="2664" pos:column="41">temp</name> <init pos:line="2664" pos:column="46">= <expr><call><name pos:line="2664" pos:column="48">TEXT</name><argument_list pos:line="2664" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="2664" pos:column="53">" "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    
                    <expr_stmt><expr><name pos:line="2666" pos:column="21">temp</name> <op:operator pos:line="2666" pos:column="26">+=</op:operator> <name pos:line="2666" pos:column="29">kwl</name></expr>;</expr_stmt>
                    <decl_stmt><decl><type><name pos:line="2667" pos:column="21">size_t</name></type> <name pos:line="2667" pos:column="28">pos</name> <init pos:line="2667" pos:column="32">= <expr><lit:literal type="number" pos:line="2667" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt>
                    
                    <expr_stmt><expr><name pos:line="2669" pos:column="21">pos</name> <op:operator pos:line="2669" pos:column="25">=</op:operator> <call><name><name pos:line="2669" pos:column="27">temp</name><op:operator pos:line="2669" pos:column="31">.</op:operator><name pos:line="2669" pos:column="32">find</name></name><argument_list pos:line="2669" pos:column="36">(<argument><expr><call><name pos:line="2669" pos:column="37">TEXT</name><argument_list pos:line="2669" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="2669" pos:column="42">" 0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <while pos:line="2670" pos:column="21">while <condition pos:line="2670" pos:column="27">(<expr><name pos:line="2670" pos:column="28">pos</name> <op:operator pos:line="2670" pos:column="32">!=</op:operator> <name><name pos:line="2670" pos:column="35">string</name><op:operator pos:line="2670" pos:column="41">::</op:operator><name pos:line="2670" pos:column="43">npos</name></name></expr>)</condition>
                    <block pos:line="2671" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="2672" pos:column="25">temp</name><op:operator pos:line="2672" pos:column="29">.</op:operator><name pos:line="2672" pos:column="30">replace</name></name><argument_list pos:line="2672" pos:column="37">(<argument><expr><name pos:line="2672" pos:column="38">pos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2672" pos:column="43">2</lit:literal></expr></argument>, <argument><expr><call><name pos:line="2672" pos:column="46">TEXT</name><argument_list pos:line="2672" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2672" pos:column="51">" 00"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="2673" pos:column="25">pos</name> <op:operator pos:line="2673" pos:column="29">=</op:operator> <call><name><name pos:line="2673" pos:column="31">temp</name><op:operator pos:line="2673" pos:column="35">.</op:operator><name pos:line="2673" pos:column="36">find</name></name><argument_list pos:line="2673" pos:column="40">(<argument><expr><call><name pos:line="2673" pos:column="41">TEXT</name><argument_list pos:line="2673" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="2673" pos:column="46">" 0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2673" pos:column="53">pos</name><op:operator pos:line="2673" pos:column="56">+</op:operator><lit:literal type="number" pos:line="2673" pos:column="57">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></while>
                    <expr_stmt><expr><name pos:line="2675" pos:column="21">pos</name> <op:operator pos:line="2675" pos:column="25">=</op:operator> <call><name><name pos:line="2675" pos:column="27">temp</name><op:operator pos:line="2675" pos:column="31">.</op:operator><name pos:line="2675" pos:column="32">find</name></name><argument_list pos:line="2675" pos:column="36">(<argument><expr><call><name pos:line="2675" pos:column="37">TEXT</name><argument_list pos:line="2675" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="2675" pos:column="42">" 1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <while pos:line="2676" pos:column="21">while <condition pos:line="2676" pos:column="27">(<expr><name pos:line="2676" pos:column="28">pos</name> <op:operator pos:line="2676" pos:column="32">!=</op:operator> <name><name pos:line="2676" pos:column="35">string</name><op:operator pos:line="2676" pos:column="41">::</op:operator><name pos:line="2676" pos:column="43">npos</name></name></expr>)</condition>
                    <block pos:line="2677" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="2678" pos:column="25">temp</name><op:operator pos:line="2678" pos:column="29">.</op:operator><name pos:line="2678" pos:column="30">replace</name></name><argument_list pos:line="2678" pos:column="37">(<argument><expr><name pos:line="2678" pos:column="38">pos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2678" pos:column="43">2</lit:literal></expr></argument>, <argument><expr><call><name pos:line="2678" pos:column="46">TEXT</name><argument_list pos:line="2678" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2678" pos:column="51">" 03"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="2679" pos:column="25">pos</name> <op:operator pos:line="2679" pos:column="29">=</op:operator> <call><name><name pos:line="2679" pos:column="31">temp</name><op:operator pos:line="2679" pos:column="35">.</op:operator><name pos:line="2679" pos:column="36">find</name></name><argument_list pos:line="2679" pos:column="40">(<argument><expr><call><name pos:line="2679" pos:column="41">TEXT</name><argument_list pos:line="2679" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="2679" pos:column="46">" 1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></while>
                    <expr_stmt><expr><name pos:line="2681" pos:column="21">pos</name> <op:operator pos:line="2681" pos:column="25">=</op:operator> <call><name><name pos:line="2681" pos:column="27">temp</name><op:operator pos:line="2681" pos:column="31">.</op:operator><name pos:line="2681" pos:column="32">find</name></name><argument_list pos:line="2681" pos:column="36">(<argument><expr><call><name pos:line="2681" pos:column="37">TEXT</name><argument_list pos:line="2681" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="2681" pos:column="42">" 2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <while pos:line="2682" pos:column="21">while <condition pos:line="2682" pos:column="27">(<expr><name pos:line="2682" pos:column="28">pos</name> <op:operator pos:line="2682" pos:column="32">!=</op:operator> <name><name pos:line="2682" pos:column="35">string</name><op:operator pos:line="2682" pos:column="41">::</op:operator><name pos:line="2682" pos:column="43">npos</name></name></expr>)</condition>
                    <block pos:line="2683" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="2684" pos:column="25">temp</name><op:operator pos:line="2684" pos:column="29">.</op:operator><name pos:line="2684" pos:column="30">replace</name></name><argument_list pos:line="2684" pos:column="37">(<argument><expr><name pos:line="2684" pos:column="38">pos</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2684" pos:column="43">2</lit:literal></expr></argument>, <argument><expr><call><name pos:line="2684" pos:column="46">TEXT</name><argument_list pos:line="2684" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2684" pos:column="51">" 04"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><name pos:line="2685" pos:column="25">pos</name> <op:operator pos:line="2685" pos:column="29">=</op:operator> <call><name><name pos:line="2685" pos:column="31">temp</name><op:operator pos:line="2685" pos:column="35">.</op:operator><name pos:line="2685" pos:column="36">find</name></name><argument_list pos:line="2685" pos:column="40">(<argument><expr><call><name pos:line="2685" pos:column="41">TEXT</name><argument_list pos:line="2685" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="2685" pos:column="46">" 2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></while>
                    
                    <expr_stmt><expr><name pos:line="2688" pos:column="21">temp</name> <op:operator pos:line="2688" pos:column="26">+=</op:operator> <call><name pos:line="2688" pos:column="29">TEXT</name><argument_list pos:line="2688" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="2688" pos:column="34">" 01 02"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="2689" pos:column="21">if <condition pos:line="2689" pos:column="24">(<expr><name><name pos:line="2689" pos:column="25">temp</name><index pos:line="2689" pos:column="29">[<expr><lit:literal type="number" pos:line="2689" pos:column="30">0</lit:literal></expr>]</index></name> <op:operator pos:line="2689" pos:column="33">==</op:operator> <lit:literal type="char" pos:line="2689" pos:column="36">' '</lit:literal></expr>)</condition><then pos:line="2689" pos:column="40">
                        <expr_stmt><expr><call><name><name pos:line="2690" pos:column="25">temp</name><op:operator pos:line="2690" pos:column="29">.</op:operator><name pos:line="2690" pos:column="30">erase</name></name><argument_list pos:line="2690" pos:column="35">(<argument><expr><lit:literal type="number" pos:line="2690" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2690" pos:column="39">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
                    
                    <expr_stmt><expr><call><name pos:line="2692" pos:column="21">lstrcpy</name><argument_list pos:line="2692" pos:column="28">(<argument><expr><name><name pos:line="2692" pos:column="29">_userLangArray</name><index pos:line="2692" pos:column="43">[<expr><name pos:line="2692" pos:column="44">_nbUserLang</name> <op:operator pos:line="2692" pos:column="56">-</op:operator> <lit:literal type="number" pos:line="2692" pos:column="58">1</lit:literal></expr>]</index></name><op:operator pos:line="2692" pos:column="60">-&gt;</op:operator><name><name pos:line="2692" pos:column="62">_keywordLists</name><index pos:line="2692" pos:column="75">[<expr><name pos:line="2692" pos:column="76">SCE_USER_KWLIST_COMMENTS</name></expr>]</index></name></expr></argument>, <argument><expr><call><name><name pos:line="2692" pos:column="103">temp</name><op:operator pos:line="2692" pos:column="107">.</op:operator><name pos:line="2692" pos:column="108">c_str</name></name><argument_list pos:line="2692" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                }</block></then></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if>
            }</block></else></if>
        }</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="2700" pos:column="1">void</name></type> <name><name pos:line="2700" pos:column="6">NppParameters</name><op:operator pos:line="2700" pos:column="19">::</op:operator><name pos:line="2700" pos:column="21">feedUserStyles</name></name><parameter_list pos:line="2700" pos:column="35">(<param><decl><type><name pos:line="2700" pos:column="36">TiXmlNode</name> <type:modifier pos:line="2700" pos:column="46">*</type:modifier></type><name pos:line="2700" pos:column="47">node</name></decl></param>)</parameter_list>
<block pos:line="2701" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2702" pos:column="9">bool</name></type> <name pos:line="2702" pos:column="14">oldVersion</name> <init pos:line="2702" pos:column="25">= <expr><lit:literal type="boolean" pos:line="2702" pos:column="27">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="2703" pos:column="9">const</specifier> <name pos:line="2703" pos:column="15">TCHAR</name> <type:modifier pos:line="2703" pos:column="21">*</type:modifier></type><name pos:line="2703" pos:column="22">udlVersion</name> <init pos:line="2703" pos:column="33">= <expr><name><name pos:line="2703" pos:column="35">_userLangArray</name><index pos:line="2703" pos:column="49">[<expr><name pos:line="2703" pos:column="50">_nbUserLang</name> <op:operator pos:line="2703" pos:column="62">-</op:operator> <lit:literal type="number" pos:line="2703" pos:column="64">1</lit:literal></expr>]</index></name><op:operator pos:line="2703" pos:column="66">-&gt;</op:operator><call><name><name pos:line="2703" pos:column="68">_udlVersion</name><op:operator pos:line="2703" pos:column="79">.</op:operator><name pos:line="2703" pos:column="80">c_str</name></name><argument_list pos:line="2703" pos:column="85">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2704" pos:column="9">if <condition pos:line="2704" pos:column="12">(<expr><call><name pos:line="2704" pos:column="13">lstrcmp</name><argument_list pos:line="2704" pos:column="20">(<argument><expr><name pos:line="2704" pos:column="21">udlVersion</name></expr></argument>, <argument><expr><call><name pos:line="2704" pos:column="33">TEXT</name><argument_list pos:line="2704" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="2704" pos:column="38">"2.0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2704" pos:column="46">
		<expr_stmt><expr><name pos:line="2705" pos:column="17">oldVersion</name> <op:operator pos:line="2705" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="2705" pos:column="30">true</lit:literal></expr>;</expr_stmt></then></if>

	<for pos:line="2707" pos:column="9">for (<init><decl><type><name pos:line="2707" pos:column="14">TiXmlNode</name> <type:modifier pos:line="2707" pos:column="24">*</type:modifier></type><name pos:line="2707" pos:column="25">childNode</name> <init pos:line="2707" pos:column="35">= <expr><call><name><name pos:line="2707" pos:column="37">node</name><op:operator pos:line="2707" pos:column="41">-&gt;</op:operator><name pos:line="2707" pos:column="43">FirstChildElement</name></name><argument_list pos:line="2707" pos:column="60">(<argument><expr><call><name pos:line="2707" pos:column="61">TEXT</name><argument_list pos:line="2707" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="2707" pos:column="66">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="2708" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="2709" pos:column="17">childNode</name> <op:operator pos:line="2709" pos:column="27">=</op:operator> <call><name><name pos:line="2709" pos:column="29">childNode</name><op:operator pos:line="2709" pos:column="38">-&gt;</op:operator><name pos:line="2709" pos:column="40">NextSibling</name></name><argument_list pos:line="2709" pos:column="51">(<argument><expr><call><name pos:line="2709" pos:column="52">TEXT</name><argument_list pos:line="2709" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2709" pos:column="57">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="2710" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2711" pos:column="17">int</name></type> <name pos:line="2711" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2712" pos:column="17">const</specifier> <name pos:line="2712" pos:column="23">TCHAR</name> <type:modifier pos:line="2712" pos:column="29">*</type:modifier></type><name pos:line="2712" pos:column="30">styleIDStr</name> <init pos:line="2712" pos:column="41">= <expr><op:operator pos:line="2712" pos:column="43">(</op:operator><call><name><name pos:line="2712" pos:column="44">childNode</name><op:operator pos:line="2712" pos:column="53">-&gt;</op:operator><name pos:line="2712" pos:column="55">ToElement</name></name><argument_list pos:line="2712" pos:column="64">()</argument_list></call><op:operator pos:line="2712" pos:column="66">)</op:operator><op:operator pos:line="2712" pos:column="67">-&gt;</op:operator><call><name pos:line="2712" pos:column="69">Attribute</name><argument_list pos:line="2712" pos:column="78">(<argument><expr><call><name pos:line="2712" pos:column="79">TEXT</name><argument_list pos:line="2712" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="2712" pos:column="84">"styleID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2712" pos:column="96">&amp;</op:operator><name pos:line="2712" pos:column="97">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2713" pos:column="17">if <condition pos:line="2713" pos:column="20">(<expr><name pos:line="2713" pos:column="21">oldVersion</name></expr>)</condition><then pos:line="2713" pos:column="32">
		<block pos:line="2714" pos:column="17">{
			<if pos:line="2715" pos:column="25">if <condition pos:line="2715" pos:column="28">(<expr><name pos:line="2715" pos:column="29">id</name> <op:operator pos:line="2715" pos:column="32">&gt;=</op:operator> <name pos:line="2715" pos:column="35">SCE_USER_STYLE_MAPPER_TOTAL</name></expr>)</condition><then pos:line="2715" pos:column="63">
				<continue pos:line="2716" pos:column="33">continue;</continue></then></if>

			<expr_stmt><expr><name pos:line="2718" pos:column="25">id</name> <op:operator pos:line="2718" pos:column="28">=</op:operator> <name><name pos:line="2718" pos:column="30">styleIdMApper</name><index pos:line="2718" pos:column="43">[<expr><name pos:line="2718" pos:column="44">id</name></expr>]</index></name></expr>;</expr_stmt>
			<if pos:line="2719" pos:column="25">if <condition pos:line="2719" pos:column="28">(<expr><name pos:line="2719" pos:column="29">id</name> <op:operator pos:line="2719" pos:column="32">==</op:operator> <op:operator pos:line="2719" pos:column="35">-</op:operator><lit:literal type="number" pos:line="2719" pos:column="36">1</lit:literal></expr>)</condition><then pos:line="2719" pos:column="38">
				<continue pos:line="2720" pos:column="33">continue;</continue></then></if>
		}</block></then></if>
		<if pos:line="2722" pos:column="17">if <condition pos:line="2722" pos:column="20">(<expr><name pos:line="2722" pos:column="21">styleIDStr</name></expr>)</condition><then pos:line="2722" pos:column="32">
		<block pos:line="2723" pos:column="17">{
			<if pos:line="2724" pos:column="25">if <condition pos:line="2724" pos:column="28">(<expr><name pos:line="2724" pos:column="29">id</name> <op:operator pos:line="2724" pos:column="32">&lt;</op:operator> <name pos:line="2724" pos:column="34">SCE_USER_STYLE_TOTAL_STYLES</name></expr>)</condition><then pos:line="2724" pos:column="62">
				<expr_stmt><expr><name><name pos:line="2725" pos:column="33">_userLangArray</name><index pos:line="2725" pos:column="47">[<expr><name pos:line="2725" pos:column="48">_nbUserLang</name> <op:operator pos:line="2725" pos:column="60">-</op:operator> <lit:literal type="number" pos:line="2725" pos:column="62">1</lit:literal></expr>]</index></name><op:operator pos:line="2725" pos:column="64">-&gt;</op:operator><call><name><name pos:line="2725" pos:column="66">_styleArray</name><op:operator pos:line="2725" pos:column="77">.</op:operator><name pos:line="2725" pos:column="78">addStyler</name></name><argument_list pos:line="2725" pos:column="87">(<argument><expr><op:operator pos:line="2725" pos:column="88">(</op:operator><name pos:line="2725" pos:column="89">id</name> <op:operator pos:line="2725" pos:column="92">|</op:operator> <name pos:line="2725" pos:column="94">L_USER</name> <op:operator pos:line="2725" pos:column="101">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="2725" pos:column="104">16</lit:literal><op:operator pos:line="2725" pos:column="106">)</op:operator></expr></argument>, <argument><expr><name pos:line="2725" pos:column="109">childNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="2730" pos:column="1">bool</name></type> <name><name pos:line="2730" pos:column="6">NppParameters</name><op:operator pos:line="2730" pos:column="19">::</op:operator><name pos:line="2730" pos:column="21">feedStylerArray</name></name><parameter_list pos:line="2730" pos:column="36">(<param><decl><type><name pos:line="2730" pos:column="37">TiXmlNode</name> <type:modifier pos:line="2730" pos:column="47">*</type:modifier></type><name pos:line="2730" pos:column="48">node</name></decl></param>)</parameter_list>
<block pos:line="2731" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="2732" pos:column="5">TiXmlNode</name> <type:modifier pos:line="2732" pos:column="15">*</type:modifier></type><name pos:line="2732" pos:column="16">styleRoot</name> <init pos:line="2732" pos:column="26">= <expr><call><name><name pos:line="2732" pos:column="28">node</name><op:operator pos:line="2732" pos:column="32">-&gt;</op:operator><name pos:line="2732" pos:column="34">FirstChildElement</name></name><argument_list pos:line="2732" pos:column="51">(<argument><expr><call><name pos:line="2732" pos:column="52">TEXT</name><argument_list pos:line="2732" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2732" pos:column="57">"LexerStyles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if pos:line="2733" pos:column="5">if <condition pos:line="2733" pos:column="8">(<expr><op:operator pos:line="2733" pos:column="9">!</op:operator><name pos:line="2733" pos:column="10">styleRoot</name></expr>)</condition><then pos:line="2733" pos:column="20"> <return pos:line="2733" pos:column="21">return <expr><lit:literal type="boolean" pos:line="2733" pos:column="28">false</lit:literal></expr>;</return></then></if>

    <comment type="line" pos:line="2735" pos:column="5">// For each lexer</comment>
    <for pos:line="2736" pos:column="5">for (<init><decl><type><name pos:line="2736" pos:column="10">TiXmlNode</name> <type:modifier pos:line="2736" pos:column="20">*</type:modifier></type><name pos:line="2736" pos:column="21">childNode</name> <init pos:line="2736" pos:column="31">= <expr><call><name><name pos:line="2736" pos:column="33">styleRoot</name><op:operator pos:line="2736" pos:column="42">-&gt;</op:operator><name pos:line="2736" pos:column="44">FirstChildElement</name></name><argument_list pos:line="2736" pos:column="61">(<argument><expr><call><name pos:line="2736" pos:column="62">TEXT</name><argument_list pos:line="2736" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2736" pos:column="67">"LexerType"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		 <condition><expr><name pos:line="2737" pos:column="18">childNode</name></expr> ;</condition>
		 <incr><expr><name pos:line="2738" pos:column="18">childNode</name> <op:operator pos:line="2738" pos:column="28">=</op:operator> <call><name><name pos:line="2738" pos:column="30">childNode</name><op:operator pos:line="2738" pos:column="39">-&gt;</op:operator><name pos:line="2738" pos:column="41">NextSibling</name></name><argument_list pos:line="2738" pos:column="52">(<argument><expr><call><name pos:line="2738" pos:column="53">TEXT</name><argument_list pos:line="2738" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2738" pos:column="58">"LexerType"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
    <block pos:line="2739" pos:column="5">{
     	<if pos:line="2740" pos:column="9">if <condition pos:line="2740" pos:column="12">(<expr><op:operator pos:line="2740" pos:column="13">!</op:operator><call><name><name pos:line="2740" pos:column="14">_lexerStylerArray</name><op:operator pos:line="2740" pos:column="31">.</op:operator><name pos:line="2740" pos:column="32">hasEnoughSpace</name></name><argument_list pos:line="2740" pos:column="46">()</argument_list></call></expr>)</condition><then pos:line="2740" pos:column="49"> <return pos:line="2740" pos:column="50">return <expr><lit:literal type="boolean" pos:line="2740" pos:column="57">false</lit:literal></expr>;</return></then></if>

	    <decl_stmt><decl><type><name pos:line="2742" pos:column="13">TiXmlElement</name> <type:modifier pos:line="2742" pos:column="26">*</type:modifier></type><name pos:line="2742" pos:column="27">element</name> <init pos:line="2742" pos:column="35">= <expr><call><name><name pos:line="2742" pos:column="37">childNode</name><op:operator pos:line="2742" pos:column="46">-&gt;</op:operator><name pos:line="2742" pos:column="48">ToElement</name></name><argument_list pos:line="2742" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><specifier pos:line="2743" pos:column="13">const</specifier> <name pos:line="2743" pos:column="19">TCHAR</name> <type:modifier pos:line="2743" pos:column="25">*</type:modifier></type><name pos:line="2743" pos:column="26">lexerName</name> <init pos:line="2743" pos:column="36">= <expr><call><name><name pos:line="2743" pos:column="38">element</name><op:operator pos:line="2743" pos:column="45">-&gt;</op:operator><name pos:line="2743" pos:column="47">Attribute</name></name><argument_list pos:line="2743" pos:column="56">(<argument><expr><call><name pos:line="2743" pos:column="57">TEXT</name><argument_list pos:line="2743" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="2743" pos:column="62">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2744" pos:column="17">const</specifier> <name pos:line="2744" pos:column="23">TCHAR</name> <type:modifier pos:line="2744" pos:column="29">*</type:modifier></type><name pos:line="2744" pos:column="30">lexerDesc</name> <init pos:line="2744" pos:column="40">= <expr><call><name><name pos:line="2744" pos:column="42">element</name><op:operator pos:line="2744" pos:column="49">-&gt;</op:operator><name pos:line="2744" pos:column="51">Attribute</name></name><argument_list pos:line="2744" pos:column="60">(<argument><expr><call><name pos:line="2744" pos:column="61">TEXT</name><argument_list pos:line="2744" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="2744" pos:column="66">"desc"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2745" pos:column="17">const</specifier> <name pos:line="2745" pos:column="23">TCHAR</name> <type:modifier pos:line="2745" pos:column="29">*</type:modifier></type><name pos:line="2745" pos:column="30">lexerUserExt</name> <init pos:line="2745" pos:column="43">= <expr><call><name><name pos:line="2745" pos:column="45">element</name><op:operator pos:line="2745" pos:column="52">-&gt;</op:operator><name pos:line="2745" pos:column="54">Attribute</name></name><argument_list pos:line="2745" pos:column="63">(<argument><expr><call><name pos:line="2745" pos:column="64">TEXT</name><argument_list pos:line="2745" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="2745" pos:column="69">"ext"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2746" pos:column="17">const</specifier> <name pos:line="2746" pos:column="23">TCHAR</name> <type:modifier pos:line="2746" pos:column="29">*</type:modifier></type><name pos:line="2746" pos:column="30">lexerExcluded</name> <init pos:line="2746" pos:column="44">= <expr><call><name><name pos:line="2746" pos:column="46">element</name><op:operator pos:line="2746" pos:column="53">-&gt;</op:operator><name pos:line="2746" pos:column="55">Attribute</name></name><argument_list pos:line="2746" pos:column="64">(<argument><expr><call><name pos:line="2746" pos:column="65">TEXT</name><argument_list pos:line="2746" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2746" pos:column="70">"excluded"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <if pos:line="2747" pos:column="13">if <condition pos:line="2747" pos:column="16">(<expr><name pos:line="2747" pos:column="17">lexerName</name></expr>)</condition><then pos:line="2747" pos:column="27">
	    <block pos:line="2748" pos:column="13">{
		    <expr_stmt><expr><call><name><name pos:line="2749" pos:column="21">_lexerStylerArray</name><op:operator pos:line="2749" pos:column="38">.</op:operator><name pos:line="2749" pos:column="39">addLexerStyler</name></name><argument_list pos:line="2749" pos:column="53">(<argument><expr><name pos:line="2749" pos:column="54">lexerName</name></expr></argument>, <argument><expr><name pos:line="2749" pos:column="65">lexerDesc</name></expr></argument>, <argument><expr><name pos:line="2749" pos:column="76">lexerUserExt</name></expr></argument>, <argument><expr><name pos:line="2749" pos:column="90">childNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2750" pos:column="25">if <condition pos:line="2750" pos:column="28">(<expr><name pos:line="2750" pos:column="29">lexerExcluded</name> <op:operator pos:line="2750" pos:column="43">!=</op:operator> <name pos:line="2750" pos:column="46">NULL</name> <op:operator pos:line="2750" pos:column="51">&amp;&amp;</op:operator> <op:operator pos:line="2750" pos:column="54">!</op:operator><call><name pos:line="2750" pos:column="55">lstrcmp</name><argument_list pos:line="2750" pos:column="62">(<argument><expr><name pos:line="2750" pos:column="63">lexerExcluded</name></expr></argument>, <argument><expr><call><name pos:line="2750" pos:column="78">TEXT</name><argument_list pos:line="2750" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="2750" pos:column="83">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2750" pos:column="91">
			<block pos:line="2751" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2752" pos:column="33">int</name></type> <name pos:line="2752" pos:column="37">index</name> <init pos:line="2752" pos:column="43">= <expr><call><name pos:line="2752" pos:column="45">getExternalLangIndexFromName</name><argument_list pos:line="2752" pos:column="73">(<argument><expr><name pos:line="2752" pos:column="74">lexerName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="2753" pos:column="33">if <condition pos:line="2753" pos:column="36">(<expr><name pos:line="2753" pos:column="37">index</name> <op:operator pos:line="2753" pos:column="43">!=</op:operator> <op:operator pos:line="2753" pos:column="46">-</op:operator><lit:literal type="number" pos:line="2753" pos:column="47">1</lit:literal></expr>)</condition><then pos:line="2753" pos:column="49">
					<expr_stmt><expr><call><name><name pos:line="2754" pos:column="41">_nppGUI</name><op:operator pos:line="2754" pos:column="48">.</op:operator><name pos:line="2754" pos:column="49">_excludedLangList</name><op:operator pos:line="2754" pos:column="66">.</op:operator><name pos:line="2754" pos:column="67">push_back</name></name><argument_list pos:line="2754" pos:column="76">(<argument><expr><call><name pos:line="2754" pos:column="77">LangMenuItem</name><argument_list pos:line="2754" pos:column="89">(<argument><expr><call pos:line="2754" pos:column="90">(<name pos:line="2754" pos:column="91">LangType</name>)<argument_list pos:line="2754" pos:column="100">(<argument><expr><name pos:line="2754" pos:column="101">index</name> <op:operator pos:line="2754" pos:column="107">+</op:operator> <name pos:line="2754" pos:column="109">L_EXTERNAL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></then></if>
	    }</block></then></if>
    }</block></for>

    <comment type="line" pos:line="2759" pos:column="5">// The global styles for all lexers</comment>
    <decl_stmt><decl><type><name pos:line="2760" pos:column="5">TiXmlNode</name> <type:modifier pos:line="2760" pos:column="15">*</type:modifier></type><name pos:line="2760" pos:column="16">globalStyleRoot</name> <init pos:line="2760" pos:column="32">= <expr><call><name><name pos:line="2760" pos:column="34">node</name><op:operator pos:line="2760" pos:column="38">-&gt;</op:operator><name pos:line="2760" pos:column="40">FirstChildElement</name></name><argument_list pos:line="2760" pos:column="57">(<argument><expr><call><name pos:line="2760" pos:column="58">TEXT</name><argument_list pos:line="2760" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2760" pos:column="63">"GlobalStyles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if pos:line="2761" pos:column="5">if <condition pos:line="2761" pos:column="8">(<expr><op:operator pos:line="2761" pos:column="9">!</op:operator><name pos:line="2761" pos:column="10">globalStyleRoot</name></expr>)</condition><then pos:line="2761" pos:column="26"> <return pos:line="2761" pos:column="27">return <expr><lit:literal type="boolean" pos:line="2761" pos:column="34">false</lit:literal></expr>;</return></then></if>

    <for pos:line="2763" pos:column="5">for (<init><decl><type><name pos:line="2763" pos:column="10">TiXmlNode</name> <type:modifier pos:line="2763" pos:column="20">*</type:modifier></type><name pos:line="2763" pos:column="21">childNode</name> <init pos:line="2763" pos:column="31">= <expr><call><name><name pos:line="2763" pos:column="33">globalStyleRoot</name><op:operator pos:line="2763" pos:column="48">-&gt;</op:operator><name pos:line="2763" pos:column="50">FirstChildElement</name></name><argument_list pos:line="2763" pos:column="67">(<argument><expr><call><name pos:line="2763" pos:column="68">TEXT</name><argument_list pos:line="2763" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="2763" pos:column="73">"WidgetStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		 <condition><expr><name pos:line="2764" pos:column="18">childNode</name></expr> ;</condition>
		 <incr><expr><name pos:line="2765" pos:column="18">childNode</name> <op:operator pos:line="2765" pos:column="28">=</op:operator> <call><name><name pos:line="2765" pos:column="30">childNode</name><op:operator pos:line="2765" pos:column="39">-&gt;</op:operator><name pos:line="2765" pos:column="41">NextSibling</name></name><argument_list pos:line="2765" pos:column="52">(<argument><expr><call><name pos:line="2765" pos:column="53">TEXT</name><argument_list pos:line="2765" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2765" pos:column="58">"WidgetStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
    <block pos:line="2766" pos:column="5">{
     	<if pos:line="2767" pos:column="9">if <condition pos:line="2767" pos:column="12">(<expr><op:operator pos:line="2767" pos:column="13">!</op:operator><call><name><name pos:line="2767" pos:column="14">_widgetStyleArray</name><op:operator pos:line="2767" pos:column="31">.</op:operator><name pos:line="2767" pos:column="32">hasEnoughSpace</name></name><argument_list pos:line="2767" pos:column="46">()</argument_list></call></expr>)</condition><then pos:line="2767" pos:column="49"> <return pos:line="2767" pos:column="50">return <expr><lit:literal type="boolean" pos:line="2767" pos:column="57">false</lit:literal></expr>;</return></then></if>

	    <decl_stmt><decl><type><name pos:line="2769" pos:column="13">TiXmlElement</name> <type:modifier pos:line="2769" pos:column="26">*</type:modifier></type><name pos:line="2769" pos:column="27">element</name> <init pos:line="2769" pos:column="35">= <expr><call><name><name pos:line="2769" pos:column="37">childNode</name><op:operator pos:line="2769" pos:column="46">-&gt;</op:operator><name pos:line="2769" pos:column="48">ToElement</name></name><argument_list pos:line="2769" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><specifier pos:line="2770" pos:column="13">const</specifier> <name pos:line="2770" pos:column="19">TCHAR</name> <type:modifier pos:line="2770" pos:column="25">*</type:modifier></type><name pos:line="2770" pos:column="26">styleIDStr</name> <init pos:line="2770" pos:column="37">= <expr><call><name><name pos:line="2770" pos:column="39">element</name><op:operator pos:line="2770" pos:column="46">-&gt;</op:operator><name pos:line="2770" pos:column="48">Attribute</name></name><argument_list pos:line="2770" pos:column="57">(<argument><expr><call><name pos:line="2770" pos:column="58">TEXT</name><argument_list pos:line="2770" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2770" pos:column="63">"styleID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt><decl><type><name pos:line="2772" pos:column="9">int</name></type> <name pos:line="2772" pos:column="13">styleID</name> <init pos:line="2772" pos:column="21">= <expr><op:operator pos:line="2772" pos:column="23">-</op:operator><lit:literal type="number" pos:line="2772" pos:column="24">1</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="2773" pos:column="17">if <condition pos:line="2773" pos:column="20">(<expr><op:operator pos:line="2773" pos:column="21">(</op:operator><name pos:line="2773" pos:column="22">styleID</name> <op:operator pos:line="2773" pos:column="30">=</op:operator> <call><name pos:line="2773" pos:column="32">decStrVal</name><argument_list pos:line="2773" pos:column="41">(<argument><expr><name pos:line="2773" pos:column="42">styleIDStr</name></expr></argument>)</argument_list></call><op:operator pos:line="2773" pos:column="53">)</op:operator> <op:operator pos:line="2773" pos:column="55">!=</op:operator> <op:operator pos:line="2773" pos:column="58">-</op:operator><lit:literal type="number" pos:line="2773" pos:column="59">1</lit:literal></expr>)</condition><then pos:line="2773" pos:column="61">
		<block pos:line="2774" pos:column="17">{
		    <expr_stmt><expr><call><name><name pos:line="2775" pos:column="21">_widgetStyleArray</name><op:operator pos:line="2775" pos:column="38">.</op:operator><name pos:line="2775" pos:column="39">addStyler</name></name><argument_list pos:line="2775" pos:column="48">(<argument><expr><name pos:line="2775" pos:column="49">styleID</name></expr></argument>, <argument><expr><name pos:line="2775" pos:column="58">childNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>
	<return pos:line="2778" pos:column="9">return <expr><lit:literal type="boolean" pos:line="2778" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2781" pos:column="1">void</name></type> <name><name pos:line="2781" pos:column="6">LexerStylerArray</name><op:operator pos:line="2781" pos:column="22">::</op:operator><name pos:line="2781" pos:column="24">addLexerStyler</name></name><parameter_list pos:line="2781" pos:column="38">(<param><decl><type><specifier pos:line="2781" pos:column="39">const</specifier> <name pos:line="2781" pos:column="45">TCHAR</name> <type:modifier pos:line="2781" pos:column="51">*</type:modifier></type><name pos:line="2781" pos:column="52">lexerName</name></decl></param>, <param><decl><type><specifier pos:line="2781" pos:column="63">const</specifier> <name pos:line="2781" pos:column="69">TCHAR</name> <type:modifier pos:line="2781" pos:column="75">*</type:modifier></type><name pos:line="2781" pos:column="76">lexerDesc</name></decl></param>, <param><decl><type><specifier pos:line="2781" pos:column="87">const</specifier> <name pos:line="2781" pos:column="93">TCHAR</name> <type:modifier pos:line="2781" pos:column="99">*</type:modifier></type><name pos:line="2781" pos:column="100">lexerUserExt</name></decl></param> , <param><decl><type><name pos:line="2781" pos:column="115">TiXmlNode</name> <type:modifier pos:line="2781" pos:column="125">*</type:modifier></type><name pos:line="2781" pos:column="126">lexerNode</name></decl></param>)</parameter_list>
<block pos:line="2782" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="2783" pos:column="5">LexerStyler</name> <type:modifier pos:line="2783" pos:column="17">&amp;</type:modifier></type> <name pos:line="2783" pos:column="19">ls</name> <init pos:line="2783" pos:column="22">= <expr><name><name pos:line="2783" pos:column="24">_lexerStylerArray</name><index pos:line="2783" pos:column="41">[<expr><name pos:line="2783" pos:column="42">_nbLexerStyler</name><op:operator pos:line="2783" pos:column="56">++</op:operator></expr>]</index></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="2784" pos:column="5">ls</name><op:operator pos:line="2784" pos:column="7">.</op:operator><name pos:line="2784" pos:column="8">setLexerName</name></name><argument_list pos:line="2784" pos:column="20">(<argument><expr><name pos:line="2784" pos:column="21">lexerName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="2785" pos:column="9">if <condition pos:line="2785" pos:column="12">(<expr><name pos:line="2785" pos:column="13">lexerDesc</name></expr>)</condition><then pos:line="2785" pos:column="23">
		<expr_stmt><expr><call><name><name pos:line="2786" pos:column="17">ls</name><op:operator pos:line="2786" pos:column="19">.</op:operator><name pos:line="2786" pos:column="20">setLexerDesc</name></name><argument_list pos:line="2786" pos:column="32">(<argument><expr><name pos:line="2786" pos:column="33">lexerDesc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="2788" pos:column="9">if <condition pos:line="2788" pos:column="12">(<expr><name pos:line="2788" pos:column="13">lexerUserExt</name></expr>)</condition><then pos:line="2788" pos:column="26">
		<expr_stmt><expr><call><name><name pos:line="2789" pos:column="17">ls</name><op:operator pos:line="2789" pos:column="19">.</op:operator><name pos:line="2789" pos:column="20">setLexerUserExt</name></name><argument_list pos:line="2789" pos:column="35">(<argument><expr><name pos:line="2789" pos:column="36">lexerUserExt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
    
    <for pos:line="2791" pos:column="5">for (<init><decl><type><name pos:line="2791" pos:column="10">TiXmlNode</name> <type:modifier pos:line="2791" pos:column="20">*</type:modifier></type><name pos:line="2791" pos:column="21">childNode</name> <init pos:line="2791" pos:column="31">= <expr><call><name><name pos:line="2791" pos:column="33">lexerNode</name><op:operator pos:line="2791" pos:column="42">-&gt;</op:operator><name pos:line="2791" pos:column="44">FirstChildElement</name></name><argument_list pos:line="2791" pos:column="61">(<argument><expr><call><name pos:line="2791" pos:column="62">TEXT</name><argument_list pos:line="2791" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2791" pos:column="67">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		 <condition><expr><name pos:line="2792" pos:column="18">childNode</name></expr> ;</condition>
		 <incr><expr><name pos:line="2793" pos:column="18">childNode</name> <op:operator pos:line="2793" pos:column="28">=</op:operator> <call><name><name pos:line="2793" pos:column="30">childNode</name><op:operator pos:line="2793" pos:column="39">-&gt;</op:operator><name pos:line="2793" pos:column="41">NextSibling</name></name><argument_list pos:line="2793" pos:column="52">(<argument><expr><call><name pos:line="2793" pos:column="53">TEXT</name><argument_list pos:line="2793" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2793" pos:column="58">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
    <block pos:line="2794" pos:column="5">{
	        
		<if pos:line="2796" pos:column="17">if <condition pos:line="2796" pos:column="20">(<expr><op:operator pos:line="2796" pos:column="21">!</op:operator><call><name><name pos:line="2796" pos:column="22">ls</name><op:operator pos:line="2796" pos:column="24">.</op:operator><name pos:line="2796" pos:column="25">hasEnoughSpace</name></name><argument_list pos:line="2796" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="2796" pos:column="42"> <return pos:line="2796" pos:column="43">return;</return></then></if>

		<decl_stmt><decl><type><name pos:line="2798" pos:column="17">TiXmlElement</name> <type:modifier pos:line="2798" pos:column="30">*</type:modifier></type><name pos:line="2798" pos:column="31">element</name> <init pos:line="2798" pos:column="39">= <expr><call><name><name pos:line="2798" pos:column="41">childNode</name><op:operator pos:line="2798" pos:column="50">-&gt;</op:operator><name pos:line="2798" pos:column="52">ToElement</name></name><argument_list pos:line="2798" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2799" pos:column="17">const</specifier> <name pos:line="2799" pos:column="23">TCHAR</name> <type:modifier pos:line="2799" pos:column="29">*</type:modifier></type><name pos:line="2799" pos:column="30">styleIDStr</name> <init pos:line="2799" pos:column="41">= <expr><call><name><name pos:line="2799" pos:column="43">element</name><op:operator pos:line="2799" pos:column="50">-&gt;</op:operator><name pos:line="2799" pos:column="52">Attribute</name></name><argument_list pos:line="2799" pos:column="61">(<argument><expr><call><name pos:line="2799" pos:column="62">TEXT</name><argument_list pos:line="2799" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2799" pos:column="67">"styleID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="2801" pos:column="17">if <condition pos:line="2801" pos:column="20">(<expr><name pos:line="2801" pos:column="21">styleIDStr</name></expr>)</condition><then pos:line="2801" pos:column="32">
		<block pos:line="2802" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2803" pos:column="25">int</name></type> <name pos:line="2803" pos:column="29">styleID</name> <init pos:line="2803" pos:column="37">= <expr><op:operator pos:line="2803" pos:column="39">-</op:operator><lit:literal type="number" pos:line="2803" pos:column="40">1</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="2804" pos:column="25">if <condition pos:line="2804" pos:column="28">(<expr><op:operator pos:line="2804" pos:column="29">(</op:operator><name pos:line="2804" pos:column="30">styleID</name> <op:operator pos:line="2804" pos:column="38">=</op:operator> <call><name pos:line="2804" pos:column="40">decStrVal</name><argument_list pos:line="2804" pos:column="49">(<argument><expr><name pos:line="2804" pos:column="50">styleIDStr</name></expr></argument>)</argument_list></call><op:operator pos:line="2804" pos:column="61">)</op:operator> <op:operator pos:line="2804" pos:column="63">!=</op:operator> <op:operator pos:line="2804" pos:column="66">-</op:operator><lit:literal type="number" pos:line="2804" pos:column="67">1</lit:literal></expr>)</condition><then pos:line="2804" pos:column="69">
			<block pos:line="2805" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="2806" pos:column="33">ls</name><op:operator pos:line="2806" pos:column="35">.</op:operator><name pos:line="2806" pos:column="36">addStyler</name></name><argument_list pos:line="2806" pos:column="45">(<argument><expr><name pos:line="2806" pos:column="46">styleID</name></expr></argument>, <argument><expr><name pos:line="2806" pos:column="55">childNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
    }</block></for>
}</block></function>

<function><type><name pos:line="2812" pos:column="1">void</name></type> <name><name pos:line="2812" pos:column="6">LexerStylerArray</name><op:operator pos:line="2812" pos:column="22">::</op:operator><name pos:line="2812" pos:column="24">eraseAll</name></name><parameter_list pos:line="2812" pos:column="32">()</parameter_list>
<block pos:line="2813" pos:column="1">{

	<for pos:line="2815" pos:column="9">for (<init><decl><type><name pos:line="2815" pos:column="14">int</name></type> <name pos:line="2815" pos:column="18">i</name> <init pos:line="2815" pos:column="20">= <expr><lit:literal type="number" pos:line="2815" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2815" pos:column="26">i</name> <op:operator pos:line="2815" pos:column="28">&lt;</op:operator> <name pos:line="2815" pos:column="30">_nbLexerStyler</name></expr> ;</condition> <incr><expr><name pos:line="2815" pos:column="47">i</name><op:operator pos:line="2815" pos:column="48">++</op:operator></expr></incr>)
	<block pos:line="2816" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="2817" pos:column="17">_lexerStylerArray</name><index pos:line="2817" pos:column="34">[<expr><name pos:line="2817" pos:column="35">i</name></expr>]</index></name><op:operator pos:line="2817" pos:column="37">.</op:operator><call><name pos:line="2817" pos:column="38">setNbStyler</name><argument_list pos:line="2817" pos:column="49">( <argument><expr><lit:literal type="number" pos:line="2817" pos:column="51">0</lit:literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><name pos:line="2820" pos:column="9">_nbLexerStyler</name> <op:operator pos:line="2820" pos:column="24">=</op:operator> <lit:literal type="number" pos:line="2820" pos:column="26">0</lit:literal></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2823" pos:column="1">void</name></type> <name><name pos:line="2823" pos:column="6">StyleArray</name><op:operator pos:line="2823" pos:column="16">::</op:operator><name pos:line="2823" pos:column="18">addStyler</name></name><parameter_list pos:line="2823" pos:column="27">(<param><decl><type><name pos:line="2823" pos:column="28">int</name></type> <name pos:line="2823" pos:column="32">styleID</name></decl></param>, <param><decl><type><name pos:line="2823" pos:column="41">TiXmlNode</name> <type:modifier pos:line="2823" pos:column="51">*</type:modifier></type><name pos:line="2823" pos:column="52">styleNode</name></decl></param>)</parameter_list>
<block pos:line="2824" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2825" pos:column="9">int</name></type> <name pos:line="2825" pos:column="13">index</name> <init pos:line="2825" pos:column="19">= <expr><name pos:line="2825" pos:column="21">_nbStyler</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2826" pos:column="9">bool</name></type> <name pos:line="2826" pos:column="14">isUser</name> <init pos:line="2826" pos:column="21">= <expr><name pos:line="2826" pos:column="23">styleID</name> <op:operator pos:line="2826" pos:column="31">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="2826" pos:column="34">16</lit:literal> <op:operator pos:line="2826" pos:column="37">==</op:operator> <name pos:line="2826" pos:column="40">L_USER</name></expr></init></decl>;</decl_stmt>
	<if pos:line="2827" pos:column="9">if <condition pos:line="2827" pos:column="12">(<expr><name pos:line="2827" pos:column="13">isUser</name></expr>)</condition><then pos:line="2827" pos:column="20">
	<block pos:line="2828" pos:column="9">{
		<expr_stmt><expr><name pos:line="2829" pos:column="17">styleID</name> <op:operator pos:line="2829" pos:column="25">=</op:operator> <op:operator pos:line="2829" pos:column="27">(</op:operator><name pos:line="2829" pos:column="28">styleID</name> <op:operator pos:line="2829" pos:column="36">&amp;</op:operator> <lit:literal type="number" pos:line="2829" pos:column="38">0xFFFF</lit:literal><op:operator pos:line="2829" pos:column="44">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2830" pos:column="17">index</name> <op:operator pos:line="2830" pos:column="23">=</op:operator> <name pos:line="2830" pos:column="25">styleID</name></expr>;</expr_stmt>
		<if pos:line="2831" pos:column="17">if <condition pos:line="2831" pos:column="20">(<expr><name pos:line="2831" pos:column="21">index</name> <op:operator pos:line="2831" pos:column="27">&gt;=</op:operator> <name pos:line="2831" pos:column="30">SCE_USER_STYLE_TOTAL_STYLES</name> <op:operator pos:line="2831" pos:column="58">||</op:operator> <name><name pos:line="2831" pos:column="61">_styleArray</name><index pos:line="2831" pos:column="72">[<expr><name pos:line="2831" pos:column="73">index</name></expr>]</index></name><op:operator pos:line="2831" pos:column="79">.</op:operator><name pos:line="2831" pos:column="80">_styleID</name> <op:operator pos:line="2831" pos:column="89">!=</op:operator> <op:operator pos:line="2831" pos:column="92">-</op:operator><lit:literal type="number" pos:line="2831" pos:column="93">1</lit:literal></expr>)</condition><then pos:line="2831" pos:column="95">
			<return pos:line="2832" pos:column="25">return;</return></then></if>
	}</block></then></if>

	<expr_stmt><expr><name><name pos:line="2835" pos:column="9">_styleArray</name><index pos:line="2835" pos:column="20">[<expr><name pos:line="2835" pos:column="21">index</name></expr>]</index></name><op:operator pos:line="2835" pos:column="27">.</op:operator><name pos:line="2835" pos:column="28">_styleID</name> <op:operator pos:line="2835" pos:column="37">=</op:operator> <name pos:line="2835" pos:column="39">styleID</name></expr>;</expr_stmt>
	
	<if pos:line="2837" pos:column="9">if <condition pos:line="2837" pos:column="12">(<expr><name pos:line="2837" pos:column="13">styleNode</name></expr>)</condition><then pos:line="2837" pos:column="23">
	<block pos:line="2838" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2839" pos:column="17">TiXmlElement</name> <type:modifier pos:line="2839" pos:column="30">*</type:modifier></type><name pos:line="2839" pos:column="31">element</name> <init pos:line="2839" pos:column="39">= <expr><call><name><name pos:line="2839" pos:column="41">styleNode</name><op:operator pos:line="2839" pos:column="50">-&gt;</op:operator><name pos:line="2839" pos:column="52">ToElement</name></name><argument_list pos:line="2839" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<comment type="line" pos:line="2841" pos:column="17">// TODO: translate to English</comment>
		<comment type="line" pos:line="2842" pos:column="17">// Pour _fgColor, _bgColor :</comment>
		<comment type="line" pos:line="2843" pos:column="17">// RGB() | (result &amp; 0xFF000000) c'est pour le cas de -1 (0xFFFFFFFF)</comment>
		<comment type="line" pos:line="2844" pos:column="17">// retournÃ© par hexStrVal(str)</comment>
		<decl_stmt><decl><type><specifier pos:line="2845" pos:column="17">const</specifier> <name pos:line="2845" pos:column="23">TCHAR</name> <type:modifier pos:line="2845" pos:column="29">*</type:modifier></type><name pos:line="2845" pos:column="30">str</name> <init pos:line="2845" pos:column="34">= <expr><call><name><name pos:line="2845" pos:column="36">element</name><op:operator pos:line="2845" pos:column="43">-&gt;</op:operator><name pos:line="2845" pos:column="45">Attribute</name></name><argument_list pos:line="2845" pos:column="54">(<argument><expr><call><name pos:line="2845" pos:column="55">TEXT</name><argument_list pos:line="2845" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2845" pos:column="60">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2846" pos:column="17">if <condition pos:line="2846" pos:column="20">(<expr><name pos:line="2846" pos:column="21">str</name></expr>)</condition><then pos:line="2846" pos:column="25">
		<block pos:line="2847" pos:column="17">{
			<if pos:line="2848" pos:column="25">if <condition pos:line="2848" pos:column="28">(<expr><name pos:line="2848" pos:column="29">isUser</name></expr>)</condition><then pos:line="2848" pos:column="36">
				<expr_stmt><expr><name><name pos:line="2849" pos:column="33">_styleArray</name><index pos:line="2849" pos:column="44">[<expr><name pos:line="2849" pos:column="45">index</name></expr>]</index></name><op:operator pos:line="2849" pos:column="51">.</op:operator><name pos:line="2849" pos:column="52">_styleDesc</name> <op:operator pos:line="2849" pos:column="63">=</op:operator> <name><name pos:line="2849" pos:column="65">styleNameMapper</name><index pos:line="2849" pos:column="80">[<expr><name pos:line="2849" pos:column="81">index</name></expr>]</index></name></expr>;</expr_stmt></then>
			<else pos:line="2850" pos:column="25">else
				<expr_stmt><expr><name><name pos:line="2851" pos:column="33">_styleArray</name><index pos:line="2851" pos:column="44">[<expr><name pos:line="2851" pos:column="45">index</name></expr>]</index></name><op:operator pos:line="2851" pos:column="51">.</op:operator><name pos:line="2851" pos:column="52">_styleDesc</name> <op:operator pos:line="2851" pos:column="63">=</op:operator> <name pos:line="2851" pos:column="65">str</name></expr>;</expr_stmt></else></if>
		}</block></then></if>

		<expr_stmt><expr><name pos:line="2854" pos:column="17">str</name> <op:operator pos:line="2854" pos:column="21">=</op:operator> <call><name><name pos:line="2854" pos:column="23">element</name><op:operator pos:line="2854" pos:column="30">-&gt;</op:operator><name pos:line="2854" pos:column="32">Attribute</name></name><argument_list pos:line="2854" pos:column="41">(<argument><expr><call><name pos:line="2854" pos:column="42">TEXT</name><argument_list pos:line="2854" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="2854" pos:column="47">"fgColor"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2855" pos:column="17">if <condition pos:line="2855" pos:column="20">(<expr><name pos:line="2855" pos:column="21">str</name></expr>)</condition><then pos:line="2855" pos:column="25">
		<block pos:line="2856" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2857" pos:column="25">unsigned</name> <name pos:line="2857" pos:column="34">long</name></type> <name pos:line="2857" pos:column="39">result</name> <init pos:line="2857" pos:column="46">= <expr><call><name pos:line="2857" pos:column="48">hexStrVal</name><argument_list pos:line="2857" pos:column="57">(<argument><expr><name pos:line="2857" pos:column="58">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="2858" pos:column="25">_styleArray</name><index pos:line="2858" pos:column="36">[<expr><name pos:line="2858" pos:column="37">index</name></expr>]</index></name><op:operator pos:line="2858" pos:column="43">.</op:operator><name pos:line="2858" pos:column="44">_fgColor</name> <op:operator pos:line="2858" pos:column="53">=</op:operator> <op:operator pos:line="2858" pos:column="55">(</op:operator><call><name pos:line="2858" pos:column="56">RGB</name><argument_list pos:line="2858" pos:column="59">(<argument><expr><op:operator pos:line="2858" pos:column="60">(</op:operator><name pos:line="2858" pos:column="61">result</name> <op:operator pos:line="2858" pos:column="68">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="2858" pos:column="71">16</lit:literal><op:operator pos:line="2858" pos:column="73">)</op:operator> <op:operator pos:line="2858" pos:column="75">&amp;</op:operator> <lit:literal type="number" pos:line="2858" pos:column="77">0xFF</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2858" pos:column="83">(</op:operator><name pos:line="2858" pos:column="84">result</name> <op:operator pos:line="2858" pos:column="91">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="2858" pos:column="94">8</lit:literal><op:operator pos:line="2858" pos:column="95">)</op:operator> <op:operator pos:line="2858" pos:column="97">&amp;</op:operator> <lit:literal type="number" pos:line="2858" pos:column="99">0xFF</lit:literal></expr></argument>, <argument><expr><name pos:line="2858" pos:column="105">result</name> <op:operator pos:line="2858" pos:column="112">&amp;</op:operator> <lit:literal type="number" pos:line="2858" pos:column="114">0xFF</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2858" pos:column="119">)</op:operator> <op:operator pos:line="2858" pos:column="121">|</op:operator> <op:operator pos:line="2858" pos:column="123">(</op:operator><name pos:line="2858" pos:column="124">result</name> <op:operator pos:line="2858" pos:column="131">&amp;</op:operator> <lit:literal type="number" pos:line="2858" pos:column="133">0xFF000000</lit:literal><op:operator pos:line="2858" pos:column="143">)</op:operator></expr>;</expr_stmt>
	            
		}</block></then></if>
		
		<expr_stmt><expr><name pos:line="2862" pos:column="17">str</name> <op:operator pos:line="2862" pos:column="21">=</op:operator> <call><name><name pos:line="2862" pos:column="23">element</name><op:operator pos:line="2862" pos:column="30">-&gt;</op:operator><name pos:line="2862" pos:column="32">Attribute</name></name><argument_list pos:line="2862" pos:column="41">(<argument><expr><call><name pos:line="2862" pos:column="42">TEXT</name><argument_list pos:line="2862" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="2862" pos:column="47">"bgColor"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2863" pos:column="17">if <condition pos:line="2863" pos:column="20">(<expr><name pos:line="2863" pos:column="21">str</name></expr>)</condition><then pos:line="2863" pos:column="25">
		<block pos:line="2864" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2865" pos:column="25">unsigned</name> <name pos:line="2865" pos:column="34">long</name></type> <name pos:line="2865" pos:column="39">result</name> <init pos:line="2865" pos:column="46">= <expr><call><name pos:line="2865" pos:column="48">hexStrVal</name><argument_list pos:line="2865" pos:column="57">(<argument><expr><name pos:line="2865" pos:column="58">str</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="2866" pos:column="25">_styleArray</name><index pos:line="2866" pos:column="36">[<expr><name pos:line="2866" pos:column="37">index</name></expr>]</index></name><op:operator pos:line="2866" pos:column="43">.</op:operator><name pos:line="2866" pos:column="44">_bgColor</name> <op:operator pos:line="2866" pos:column="53">=</op:operator> <op:operator pos:line="2866" pos:column="55">(</op:operator><call><name pos:line="2866" pos:column="56">RGB</name><argument_list pos:line="2866" pos:column="59">(<argument><expr><op:operator pos:line="2866" pos:column="60">(</op:operator><name pos:line="2866" pos:column="61">result</name> <op:operator pos:line="2866" pos:column="68">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="2866" pos:column="71">16</lit:literal><op:operator pos:line="2866" pos:column="73">)</op:operator> <op:operator pos:line="2866" pos:column="75">&amp;</op:operator> <lit:literal type="number" pos:line="2866" pos:column="77">0xFF</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2866" pos:column="83">(</op:operator><name pos:line="2866" pos:column="84">result</name> <op:operator pos:line="2866" pos:column="91">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="2866" pos:column="94">8</lit:literal><op:operator pos:line="2866" pos:column="95">)</op:operator> <op:operator pos:line="2866" pos:column="97">&amp;</op:operator> <lit:literal type="number" pos:line="2866" pos:column="99">0xFF</lit:literal></expr></argument>, <argument><expr><name pos:line="2866" pos:column="105">result</name> <op:operator pos:line="2866" pos:column="112">&amp;</op:operator> <lit:literal type="number" pos:line="2866" pos:column="114">0xFF</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2866" pos:column="119">)</op:operator> <op:operator pos:line="2866" pos:column="121">|</op:operator> <op:operator pos:line="2866" pos:column="123">(</op:operator><name pos:line="2866" pos:column="124">result</name> <op:operator pos:line="2866" pos:column="131">&amp;</op:operator> <lit:literal type="number" pos:line="2866" pos:column="133">0xFF000000</lit:literal><op:operator pos:line="2866" pos:column="143">)</op:operator></expr>;</expr_stmt>
		}</block></then></if>

		<expr_stmt><expr><name pos:line="2869" pos:column="17">str</name> <op:operator pos:line="2869" pos:column="21">=</op:operator> <call><name><name pos:line="2869" pos:column="23">element</name><op:operator pos:line="2869" pos:column="30">-&gt;</op:operator><name pos:line="2869" pos:column="32">Attribute</name></name><argument_list pos:line="2869" pos:column="41">(<argument><expr><call><name pos:line="2869" pos:column="42">TEXT</name><argument_list pos:line="2869" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="2869" pos:column="47">"colorStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2870" pos:column="17">if <condition pos:line="2870" pos:column="20">(<expr><name pos:line="2870" pos:column="21">str</name></expr>)</condition><then pos:line="2870" pos:column="25">
		<block pos:line="2871" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="2872" pos:column="25">_styleArray</name><index pos:line="2872" pos:column="36">[<expr><name pos:line="2872" pos:column="37">index</name></expr>]</index></name><op:operator pos:line="2872" pos:column="43">.</op:operator><name pos:line="2872" pos:column="44">_colorStyle</name> <op:operator pos:line="2872" pos:column="56">=</op:operator> <call><name pos:line="2872" pos:column="58">decStrVal</name><argument_list pos:line="2872" pos:column="67">(<argument><expr><name pos:line="2872" pos:column="68">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		
		<expr_stmt><expr><name pos:line="2875" pos:column="17">str</name> <op:operator pos:line="2875" pos:column="21">=</op:operator> <call><name><name pos:line="2875" pos:column="23">element</name><op:operator pos:line="2875" pos:column="30">-&gt;</op:operator><name pos:line="2875" pos:column="32">Attribute</name></name><argument_list pos:line="2875" pos:column="41">(<argument><expr><call><name pos:line="2875" pos:column="42">TEXT</name><argument_list pos:line="2875" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="2875" pos:column="47">"fontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="2876" pos:column="17">_styleArray</name><index pos:line="2876" pos:column="28">[<expr><name pos:line="2876" pos:column="29">index</name></expr>]</index></name><op:operator pos:line="2876" pos:column="35">.</op:operator><name pos:line="2876" pos:column="36">_fontName</name> <op:operator pos:line="2876" pos:column="46">=</op:operator> <name pos:line="2876" pos:column="48">str</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><name pos:line="2878" pos:column="17">str</name> <op:operator pos:line="2878" pos:column="21">=</op:operator> <call><name><name pos:line="2878" pos:column="23">element</name><op:operator pos:line="2878" pos:column="30">-&gt;</op:operator><name pos:line="2878" pos:column="32">Attribute</name></name><argument_list pos:line="2878" pos:column="41">(<argument><expr><call><name pos:line="2878" pos:column="42">TEXT</name><argument_list pos:line="2878" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="2878" pos:column="47">"fontStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2879" pos:column="17">if <condition pos:line="2879" pos:column="20">(<expr><name pos:line="2879" pos:column="21">str</name></expr>)</condition><then pos:line="2879" pos:column="25">
		<block pos:line="2880" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="2881" pos:column="25">_styleArray</name><index pos:line="2881" pos:column="36">[<expr><name pos:line="2881" pos:column="37">index</name></expr>]</index></name><op:operator pos:line="2881" pos:column="43">.</op:operator><name pos:line="2881" pos:column="44">_fontStyle</name> <op:operator pos:line="2881" pos:column="55">=</op:operator> <call><name pos:line="2881" pos:column="57">decStrVal</name><argument_list pos:line="2881" pos:column="66">(<argument><expr><name pos:line="2881" pos:column="67">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		
		<expr_stmt><expr><name pos:line="2884" pos:column="17">str</name> <op:operator pos:line="2884" pos:column="21">=</op:operator> <call><name><name pos:line="2884" pos:column="23">element</name><op:operator pos:line="2884" pos:column="30">-&gt;</op:operator><name pos:line="2884" pos:column="32">Attribute</name></name><argument_list pos:line="2884" pos:column="41">(<argument><expr><call><name pos:line="2884" pos:column="42">TEXT</name><argument_list pos:line="2884" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="2884" pos:column="47">"fontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2885" pos:column="17">if <condition pos:line="2885" pos:column="20">(<expr><name pos:line="2885" pos:column="21">str</name></expr>)</condition><then pos:line="2885" pos:column="25">
		<block pos:line="2886" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="2887" pos:column="25">_styleArray</name><index pos:line="2887" pos:column="36">[<expr><name pos:line="2887" pos:column="37">index</name></expr>]</index></name><op:operator pos:line="2887" pos:column="43">.</op:operator><name pos:line="2887" pos:column="44">_fontSize</name> <op:operator pos:line="2887" pos:column="54">=</op:operator> <call><name pos:line="2887" pos:column="56">decStrVal</name><argument_list pos:line="2887" pos:column="65">(<argument><expr><name pos:line="2887" pos:column="66">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="2889" pos:column="17">str</name> <op:operator pos:line="2889" pos:column="21">=</op:operator> <call><name><name pos:line="2889" pos:column="23">element</name><op:operator pos:line="2889" pos:column="30">-&gt;</op:operator><name pos:line="2889" pos:column="32">Attribute</name></name><argument_list pos:line="2889" pos:column="41">(<argument><expr><call><name pos:line="2889" pos:column="42">TEXT</name><argument_list pos:line="2889" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="2889" pos:column="47">"nesting"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="2891" pos:column="17">if <condition pos:line="2891" pos:column="20">(<expr><name pos:line="2891" pos:column="21">str</name></expr>)</condition><then pos:line="2891" pos:column="25">
		<block pos:line="2892" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="2893" pos:column="25">_styleArray</name><index pos:line="2893" pos:column="36">[<expr><name pos:line="2893" pos:column="37">index</name></expr>]</index></name><op:operator pos:line="2893" pos:column="43">.</op:operator><name pos:line="2893" pos:column="44">_nesting</name> <op:operator pos:line="2893" pos:column="53">=</op:operator> <call><name pos:line="2893" pos:column="55">decStrVal</name><argument_list pos:line="2893" pos:column="64">(<argument><expr><name pos:line="2893" pos:column="65">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<expr_stmt><expr><name pos:line="2896" pos:column="17">str</name> <op:operator pos:line="2896" pos:column="21">=</op:operator> <call><name><name pos:line="2896" pos:column="23">element</name><op:operator pos:line="2896" pos:column="30">-&gt;</op:operator><name pos:line="2896" pos:column="32">Attribute</name></name><argument_list pos:line="2896" pos:column="41">(<argument><expr><call><name pos:line="2896" pos:column="42">TEXT</name><argument_list pos:line="2896" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="2896" pos:column="47">"keywordClass"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="2897" pos:column="17">if <condition pos:line="2897" pos:column="20">(<expr><name pos:line="2897" pos:column="21">str</name></expr>)</condition><then pos:line="2897" pos:column="25">
		<block pos:line="2898" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="2899" pos:column="25">_styleArray</name><index pos:line="2899" pos:column="36">[<expr><name pos:line="2899" pos:column="37">index</name></expr>]</index></name><op:operator pos:line="2899" pos:column="43">.</op:operator><name pos:line="2899" pos:column="44">_keywordClass</name> <op:operator pos:line="2899" pos:column="58">=</op:operator> <call><name pos:line="2899" pos:column="60">getKwClassFromName</name><argument_list pos:line="2899" pos:column="78">(<argument><expr><name pos:line="2899" pos:column="79">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="2902" pos:column="17">TiXmlNode</name> <type:modifier pos:line="2902" pos:column="27">*</type:modifier></type><name pos:line="2902" pos:column="28">v</name> <init pos:line="2902" pos:column="30">= <expr><call><name><name pos:line="2902" pos:column="32">styleNode</name><op:operator pos:line="2902" pos:column="41">-&gt;</op:operator><name pos:line="2902" pos:column="43">FirstChild</name></name><argument_list pos:line="2902" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2903" pos:column="17">if <condition pos:line="2903" pos:column="20">(<expr><name pos:line="2903" pos:column="21">v</name></expr>)</condition><then pos:line="2903" pos:column="23">
		<block pos:line="2904" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="2905" pos:column="25">_styleArray</name><index pos:line="2905" pos:column="36">[<expr><name pos:line="2905" pos:column="37">index</name></expr>]</index></name><op:operator pos:line="2905" pos:column="43">.</op:operator><name pos:line="2905" pos:column="44">_keywords</name> <op:operator pos:line="2905" pos:column="54">=</op:operator> <op:operator pos:line="2905" pos:column="56">new</op:operator> <call><name pos:line="2905" pos:column="60">generic_string</name><argument_list pos:line="2905" pos:column="74">(<argument><expr><call><name><name pos:line="2905" pos:column="75">v</name><op:operator pos:line="2905" pos:column="76">-&gt;</op:operator><name pos:line="2905" pos:column="78">Value</name></name><argument_list pos:line="2905" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>
	<expr_stmt><expr><name pos:line="2908" pos:column="9">_nbStyler</name><op:operator pos:line="2908" pos:column="18">++</op:operator></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2911" pos:column="1">bool</name></type> <name><name pos:line="2911" pos:column="6">NppParameters</name><op:operator pos:line="2911" pos:column="19">::</op:operator><name pos:line="2911" pos:column="21">writeRecentFileHistorySettings</name></name><parameter_list pos:line="2911" pos:column="51">(<param><decl><type><name pos:line="2911" pos:column="52">int</name></type> <name pos:line="2911" pos:column="56">nbMaxFile</name></decl></param>)</parameter_list> <specifier pos:line="2911" pos:column="67">const</specifier>
<block pos:line="2912" pos:column="1">{
	<if pos:line="2913" pos:column="9">if <condition pos:line="2913" pos:column="12">(<expr><op:operator pos:line="2913" pos:column="13">!</op:operator><name pos:line="2913" pos:column="14">_pXmlUserDoc</name></expr>)</condition><then pos:line="2913" pos:column="27"> <return pos:line="2913" pos:column="28">return <expr><lit:literal type="boolean" pos:line="2913" pos:column="35">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="2915" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2915" pos:column="19">*</type:modifier></type><name pos:line="2915" pos:column="20">nppRoot</name> <init pos:line="2915" pos:column="28">= <expr><call><name><name pos:line="2915" pos:column="30">_pXmlUserDoc</name><op:operator pos:line="2915" pos:column="42">-&gt;</op:operator><name pos:line="2915" pos:column="44">FirstChild</name></name><argument_list pos:line="2915" pos:column="54">(<argument><expr><call><name pos:line="2915" pos:column="55">TEXT</name><argument_list pos:line="2915" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2915" pos:column="60">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2916" pos:column="9">if <condition pos:line="2916" pos:column="12">(<expr><op:operator pos:line="2916" pos:column="13">!</op:operator><name pos:line="2916" pos:column="14">nppRoot</name></expr>)</condition><then pos:line="2916" pos:column="22"> <return pos:line="2916" pos:column="23">return <expr><lit:literal type="boolean" pos:line="2916" pos:column="30">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="2918" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2918" pos:column="19">*</type:modifier></type><name pos:line="2918" pos:column="20">historyNode</name> <init pos:line="2918" pos:column="32">= <expr><call><name><name pos:line="2918" pos:column="34">nppRoot</name><op:operator pos:line="2918" pos:column="41">-&gt;</op:operator><name pos:line="2918" pos:column="43">FirstChildElement</name></name><argument_list pos:line="2918" pos:column="60">(<argument><expr><call><name pos:line="2918" pos:column="61">TEXT</name><argument_list pos:line="2918" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="2918" pos:column="66">"History"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2919" pos:column="9">if <condition pos:line="2919" pos:column="12">(<expr><op:operator pos:line="2919" pos:column="13">!</op:operator><name pos:line="2919" pos:column="14">historyNode</name></expr>)</condition><then pos:line="2919" pos:column="26"> <return pos:line="2919" pos:column="27">return <expr><lit:literal type="boolean" pos:line="2919" pos:column="34">false</lit:literal></expr>;</return></then></if>
		
	<expr_stmt><expr><op:operator pos:line="2921" pos:column="9">(</op:operator><call><name><name pos:line="2921" pos:column="10">historyNode</name><op:operator pos:line="2921" pos:column="21">-&gt;</op:operator><name pos:line="2921" pos:column="23">ToElement</name></name><argument_list pos:line="2921" pos:column="32">()</argument_list></call><op:operator pos:line="2921" pos:column="34">)</op:operator><op:operator pos:line="2921" pos:column="35">-&gt;</op:operator><call><name pos:line="2921" pos:column="37">SetAttribute</name><argument_list pos:line="2921" pos:column="49">(<argument><expr><call><name pos:line="2921" pos:column="50">TEXT</name><argument_list pos:line="2921" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2921" pos:column="55">"nbMaxFile"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2921" pos:column="69">nbMaxFile</name><op:operator pos:line="2921" pos:column="78">!=</op:operator><op:operator pos:line="2921" pos:column="80">-</op:operator><lit:literal type="number" pos:line="2921" pos:column="81">1</lit:literal><op:operator pos:line="2921" pos:column="82">?</op:operator><name pos:line="2921" pos:column="83">nbMaxFile</name><op:operator pos:line="2921" pos:column="92">:</op:operator><name pos:line="2921" pos:column="93">_nbMaxRecentFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="2922" pos:column="9">(</op:operator><call><name><name pos:line="2922" pos:column="10">historyNode</name><op:operator pos:line="2922" pos:column="21">-&gt;</op:operator><name pos:line="2922" pos:column="23">ToElement</name></name><argument_list pos:line="2922" pos:column="32">()</argument_list></call><op:operator pos:line="2922" pos:column="34">)</op:operator><op:operator pos:line="2922" pos:column="35">-&gt;</op:operator><call><name pos:line="2922" pos:column="37">SetAttribute</name><argument_list pos:line="2922" pos:column="49">(<argument><expr><call><name pos:line="2922" pos:column="50">TEXT</name><argument_list pos:line="2922" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2922" pos:column="55">"inSubMenu"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2922" pos:column="69">_putRecentFileInSubMenu</name><op:operator pos:line="2922" pos:column="92">?</op:operator><call><name pos:line="2922" pos:column="93">TEXT</name><argument_list pos:line="2922" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="2922" pos:column="98">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2922" pos:column="104">:</op:operator><call><name pos:line="2922" pos:column="105">TEXT</name><argument_list pos:line="2922" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="2922" pos:column="110">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="2923" pos:column="9">(</op:operator><call><name><name pos:line="2923" pos:column="10">historyNode</name><op:operator pos:line="2923" pos:column="21">-&gt;</op:operator><name pos:line="2923" pos:column="23">ToElement</name></name><argument_list pos:line="2923" pos:column="32">()</argument_list></call><op:operator pos:line="2923" pos:column="34">)</op:operator><op:operator pos:line="2923" pos:column="35">-&gt;</op:operator><call><name pos:line="2923" pos:column="37">SetAttribute</name><argument_list pos:line="2923" pos:column="49">(<argument><expr><call><name pos:line="2923" pos:column="50">TEXT</name><argument_list pos:line="2923" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="2923" pos:column="55">"customLength"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2923" pos:column="72">_recentFileCustomLength</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2924" pos:column="9">return <expr><lit:literal type="boolean" pos:line="2924" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2927" pos:column="1">bool</name></type> <name><name pos:line="2927" pos:column="6">NppParameters</name><op:operator pos:line="2927" pos:column="19">::</op:operator><name pos:line="2927" pos:column="21">writeProjectPanelsSettings</name></name><parameter_list pos:line="2927" pos:column="47">()</parameter_list> <specifier pos:line="2927" pos:column="50">const</specifier>
<block pos:line="2928" pos:column="1">{
	<if pos:line="2929" pos:column="9">if <condition pos:line="2929" pos:column="12">(<expr><op:operator pos:line="2929" pos:column="13">!</op:operator><name pos:line="2929" pos:column="14">_pXmlUserDoc</name></expr>)</condition><then pos:line="2929" pos:column="27"> <return pos:line="2929" pos:column="28">return <expr><lit:literal type="boolean" pos:line="2929" pos:column="35">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="2931" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2931" pos:column="19">*</type:modifier></type><name pos:line="2931" pos:column="20">nppRoot</name> <init pos:line="2931" pos:column="28">= <expr><call><name><name pos:line="2931" pos:column="30">_pXmlUserDoc</name><op:operator pos:line="2931" pos:column="42">-&gt;</op:operator><name pos:line="2931" pos:column="44">FirstChild</name></name><argument_list pos:line="2931" pos:column="54">(<argument><expr><call><name pos:line="2931" pos:column="55">TEXT</name><argument_list pos:line="2931" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2931" pos:column="60">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2932" pos:column="9">if <condition pos:line="2932" pos:column="12">(<expr><op:operator pos:line="2932" pos:column="13">!</op:operator><name pos:line="2932" pos:column="14">nppRoot</name></expr>)</condition><then pos:line="2932" pos:column="22"> <return pos:line="2932" pos:column="23">return <expr><lit:literal type="boolean" pos:line="2932" pos:column="30">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="2934" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2934" pos:column="19">*</type:modifier></type><name pos:line="2934" pos:column="20">projPanelRootNode</name> <init pos:line="2934" pos:column="38">= <expr><call><name><name pos:line="2934" pos:column="40">nppRoot</name><op:operator pos:line="2934" pos:column="47">-&gt;</op:operator><name pos:line="2934" pos:column="49">FirstChildElement</name></name><argument_list pos:line="2934" pos:column="66">(<argument><expr><call><name pos:line="2934" pos:column="67">TEXT</name><argument_list pos:line="2934" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2934" pos:column="72">"ProjectPanels"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2935" pos:column="9">if <condition pos:line="2935" pos:column="12">(<expr><name pos:line="2935" pos:column="13">projPanelRootNode</name></expr>)</condition><then pos:line="2935" pos:column="31">
	<block pos:line="2936" pos:column="9">{
		<comment type="line" pos:line="2937" pos:column="17">// Erase the Project Panel root</comment>
		<expr_stmt><expr><call><name><name pos:line="2938" pos:column="17">nppRoot</name><op:operator pos:line="2938" pos:column="24">-&gt;</op:operator><name pos:line="2938" pos:column="26">RemoveChild</name></name><argument_list pos:line="2938" pos:column="37">(<argument><expr><name pos:line="2938" pos:column="38">projPanelRootNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="2941" pos:column="9">// Create the Project Panel root</comment>
	<expr_stmt><expr><name pos:line="2942" pos:column="9">projPanelRootNode</name> <op:operator pos:line="2942" pos:column="27">=</op:operator> <op:operator pos:line="2942" pos:column="29">new</op:operator> <call><name pos:line="2942" pos:column="33">TiXmlElement</name><argument_list pos:line="2942" pos:column="45">(<argument><expr><call><name pos:line="2942" pos:column="46">TEXT</name><argument_list pos:line="2942" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2942" pos:column="51">"ProjectPanels"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="2944" pos:column="9">// Add 3 Project Panel parameters</comment>
	<for pos:line="2945" pos:column="9">for (<init><decl><type><name pos:line="2945" pos:column="14">int</name></type> <name pos:line="2945" pos:column="18">i</name> <init pos:line="2945" pos:column="20">= <expr><lit:literal type="number" pos:line="2945" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2945" pos:column="26">i</name> <op:operator pos:line="2945" pos:column="28">&lt;</op:operator> <lit:literal type="number" pos:line="2945" pos:column="30">3</lit:literal></expr> ;</condition> <incr><expr><name pos:line="2945" pos:column="34">i</name><op:operator pos:line="2945" pos:column="35">++</op:operator></expr></incr>)
	<block pos:line="2946" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2947" pos:column="17">TiXmlElement</name></type> <name pos:line="2947" pos:column="30">projPanelNode</name><argument_list pos:line="2947" pos:column="43">(<argument><expr><call><name pos:line="2947" pos:column="44">TEXT</name><argument_list pos:line="2947" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="2947" pos:column="49">"ProjectPanel"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><op:operator pos:line="2948" pos:column="17">(</op:operator><call><name><name pos:line="2948" pos:column="18">projPanelNode</name><op:operator pos:line="2948" pos:column="31">.</op:operator><name pos:line="2948" pos:column="32">ToElement</name></name><argument_list pos:line="2948" pos:column="41">()</argument_list></call><op:operator pos:line="2948" pos:column="43">)</op:operator><op:operator pos:line="2948" pos:column="44">-&gt;</op:operator><call><name pos:line="2948" pos:column="46">SetAttribute</name><argument_list pos:line="2948" pos:column="58">(<argument><expr><call><name pos:line="2948" pos:column="59">TEXT</name><argument_list pos:line="2948" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="2948" pos:column="64">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2948" pos:column="71">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><op:operator pos:line="2949" pos:column="17">(</op:operator><call><name><name pos:line="2949" pos:column="18">projPanelNode</name><op:operator pos:line="2949" pos:column="31">.</op:operator><name pos:line="2949" pos:column="32">ToElement</name></name><argument_list pos:line="2949" pos:column="41">()</argument_list></call><op:operator pos:line="2949" pos:column="43">)</op:operator><op:operator pos:line="2949" pos:column="44">-&gt;</op:operator><call><name pos:line="2949" pos:column="46">SetAttribute</name><argument_list pos:line="2949" pos:column="58">(<argument><expr><call><name pos:line="2949" pos:column="59">TEXT</name><argument_list pos:line="2949" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="2949" pos:column="64">"workSpaceFile"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2949" pos:column="82">_workSpaceFilePathes</name><index pos:line="2949" pos:column="102">[<expr><name pos:line="2949" pos:column="103">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><op:operator pos:line="2951" pos:column="17">(</op:operator><call><name><name pos:line="2951" pos:column="18">projPanelRootNode</name><op:operator pos:line="2951" pos:column="35">-&gt;</op:operator><name pos:line="2951" pos:column="37">ToElement</name></name><argument_list pos:line="2951" pos:column="46">()</argument_list></call><op:operator pos:line="2951" pos:column="48">)</op:operator><op:operator pos:line="2951" pos:column="49">-&gt;</op:operator><call><name pos:line="2951" pos:column="51">InsertEndChild</name><argument_list pos:line="2951" pos:column="65">(<argument><expr><name pos:line="2951" pos:column="66">projPanelNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<comment type="line" pos:line="2954" pos:column="9">// (Re)Insert the Project Panel root</comment>
	<expr_stmt><expr><op:operator pos:line="2955" pos:column="9">(</op:operator><call><name><name pos:line="2955" pos:column="10">nppRoot</name><op:operator pos:line="2955" pos:column="17">-&gt;</op:operator><name pos:line="2955" pos:column="19">ToElement</name></name><argument_list pos:line="2955" pos:column="28">()</argument_list></call><op:operator pos:line="2955" pos:column="30">)</op:operator><op:operator pos:line="2955" pos:column="31">-&gt;</op:operator><call><name pos:line="2955" pos:column="33">InsertEndChild</name><argument_list pos:line="2955" pos:column="47">(<argument><expr><op:operator pos:line="2955" pos:column="48">*</op:operator><name pos:line="2955" pos:column="49">projPanelRootNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2956" pos:column="9">return <expr><lit:literal type="boolean" pos:line="2956" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2959" pos:column="1">bool</name></type> <name><name pos:line="2959" pos:column="6">NppParameters</name><op:operator pos:line="2959" pos:column="19">::</op:operator><name pos:line="2959" pos:column="21">writeHistory</name></name><parameter_list pos:line="2959" pos:column="33">(<param><decl><type><specifier pos:line="2959" pos:column="34">const</specifier> <name pos:line="2959" pos:column="40">TCHAR</name> <type:modifier pos:line="2959" pos:column="46">*</type:modifier></type><name pos:line="2959" pos:column="47">fullpath</name></decl></param>)</parameter_list>
<block pos:line="2960" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2961" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2961" pos:column="19">*</type:modifier></type><name pos:line="2961" pos:column="20">nppRoot</name> <init pos:line="2961" pos:column="28">= <expr><call><name><name pos:line="2961" pos:column="30">_pXmlUserDoc</name><op:operator pos:line="2961" pos:column="42">-&gt;</op:operator><name pos:line="2961" pos:column="44">FirstChild</name></name><argument_list pos:line="2961" pos:column="54">(<argument><expr><call><name pos:line="2961" pos:column="55">TEXT</name><argument_list pos:line="2961" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="2961" pos:column="60">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2962" pos:column="9">if <condition pos:line="2962" pos:column="12">(<expr><op:operator pos:line="2962" pos:column="13">!</op:operator><name pos:line="2962" pos:column="14">nppRoot</name></expr>)</condition><then pos:line="2962" pos:column="22"> <return pos:line="2962" pos:column="23">return <expr><lit:literal type="boolean" pos:line="2962" pos:column="30">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="2964" pos:column="9">TiXmlNode</name> <type:modifier pos:line="2964" pos:column="19">*</type:modifier></type><name pos:line="2964" pos:column="20">historyNode</name> <init pos:line="2964" pos:column="32">= <expr><call><name><name pos:line="2964" pos:column="34">nppRoot</name><op:operator pos:line="2964" pos:column="41">-&gt;</op:operator><name pos:line="2964" pos:column="43">FirstChildElement</name></name><argument_list pos:line="2964" pos:column="60">(<argument><expr><call><name pos:line="2964" pos:column="61">TEXT</name><argument_list pos:line="2964" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="2964" pos:column="66">"History"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2965" pos:column="9">if <condition pos:line="2965" pos:column="12">(<expr><op:operator pos:line="2965" pos:column="13">!</op:operator><name pos:line="2965" pos:column="14">historyNode</name></expr>)</condition><then pos:line="2965" pos:column="26"> <return pos:line="2965" pos:column="27">return <expr><lit:literal type="boolean" pos:line="2965" pos:column="34">false</lit:literal></expr>;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="2967" pos:column="9">TiXmlElement</name></type> <name pos:line="2967" pos:column="22">recentFileNode</name><argument_list pos:line="2967" pos:column="36">(<argument><expr><call><name pos:line="2967" pos:column="37">TEXT</name><argument_list pos:line="2967" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="2967" pos:column="42">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="2968" pos:column="9">(</op:operator><call><name><name pos:line="2968" pos:column="10">recentFileNode</name><op:operator pos:line="2968" pos:column="24">.</op:operator><name pos:line="2968" pos:column="25">ToElement</name></name><argument_list pos:line="2968" pos:column="34">()</argument_list></call><op:operator pos:line="2968" pos:column="36">)</op:operator><op:operator pos:line="2968" pos:column="37">-&gt;</op:operator><call><name pos:line="2968" pos:column="39">SetAttribute</name><argument_list pos:line="2968" pos:column="51">(<argument><expr><call><name pos:line="2968" pos:column="52">TEXT</name><argument_list pos:line="2968" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="2968" pos:column="57">"filename"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2968" pos:column="70">fullpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><op:operator pos:line="2970" pos:column="9">(</op:operator><call><name><name pos:line="2970" pos:column="10">historyNode</name><op:operator pos:line="2970" pos:column="21">-&gt;</op:operator><name pos:line="2970" pos:column="23">ToElement</name></name><argument_list pos:line="2970" pos:column="32">()</argument_list></call><op:operator pos:line="2970" pos:column="34">)</op:operator><op:operator pos:line="2970" pos:column="35">-&gt;</op:operator><call><name pos:line="2970" pos:column="37">InsertEndChild</name><argument_list pos:line="2970" pos:column="51">(<argument><expr><name pos:line="2970" pos:column="52">recentFileNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="2971" pos:column="9">return <expr><lit:literal type="boolean" pos:line="2971" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="2974" pos:column="1">TiXmlNode</name> <type:modifier pos:line="2974" pos:column="11">*</type:modifier></type> <name><name pos:line="2974" pos:column="13">NppParameters</name><op:operator pos:line="2974" pos:column="26">::</op:operator><name pos:line="2974" pos:column="28">getChildElementByAttribut</name></name><parameter_list pos:line="2974" pos:column="53">(<param><decl><type><name pos:line="2974" pos:column="54">TiXmlNode</name> <type:modifier pos:line="2974" pos:column="64">*</type:modifier></type><name pos:line="2974" pos:column="65">pere</name></decl></param>, <param><decl><type><specifier pos:line="2974" pos:column="71">const</specifier> <name pos:line="2974" pos:column="77">TCHAR</name> <type:modifier pos:line="2974" pos:column="83">*</type:modifier></type><name pos:line="2974" pos:column="84">childName</name></decl></param>,\
			<param><decl><type><specifier pos:line="2975" pos:column="25">const</specifier> <name pos:line="2975" pos:column="31">TCHAR</name> <type:modifier pos:line="2975" pos:column="37">*</type:modifier></type><name pos:line="2975" pos:column="38">attributName</name></decl></param>, <param><decl><type><specifier pos:line="2975" pos:column="52">const</specifier> <name pos:line="2975" pos:column="58">TCHAR</name> <type:modifier pos:line="2975" pos:column="64">*</type:modifier></type><name pos:line="2975" pos:column="65">attributVal</name></decl></param>)</parameter_list> <specifier pos:line="2975" pos:column="78">const</specifier> 
<block pos:line="2976" pos:column="1">{
	<for pos:line="2977" pos:column="9">for (<init><decl><type><name pos:line="2977" pos:column="14">TiXmlNode</name> <type:modifier pos:line="2977" pos:column="24">*</type:modifier></type><name pos:line="2977" pos:column="25">childNode</name> <init pos:line="2977" pos:column="35">= <expr><call><name><name pos:line="2977" pos:column="37">pere</name><op:operator pos:line="2977" pos:column="41">-&gt;</op:operator><name pos:line="2977" pos:column="43">FirstChildElement</name></name><argument_list pos:line="2977" pos:column="60">(<argument><expr><name pos:line="2977" pos:column="61">childName</name></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="2978" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="2979" pos:column="17">childNode</name> <op:operator pos:line="2979" pos:column="27">=</op:operator> <call><name><name pos:line="2979" pos:column="29">childNode</name><op:operator pos:line="2979" pos:column="38">-&gt;</op:operator><name pos:line="2979" pos:column="40">NextSibling</name></name><argument_list pos:line="2979" pos:column="51">(<argument><expr><name pos:line="2979" pos:column="52">childName</name></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="2980" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2981" pos:column="17">TiXmlElement</name> <type:modifier pos:line="2981" pos:column="30">*</type:modifier></type><name pos:line="2981" pos:column="31">element</name> <init pos:line="2981" pos:column="39">= <expr><call><name><name pos:line="2981" pos:column="41">childNode</name><op:operator pos:line="2981" pos:column="50">-&gt;</op:operator><name pos:line="2981" pos:column="52">ToElement</name></name><argument_list pos:line="2981" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="2982" pos:column="17">const</specifier> <name pos:line="2982" pos:column="23">TCHAR</name> <type:modifier pos:line="2982" pos:column="29">*</type:modifier></type><name pos:line="2982" pos:column="30">val</name> <init pos:line="2982" pos:column="34">= <expr><call><name><name pos:line="2982" pos:column="36">element</name><op:operator pos:line="2982" pos:column="43">-&gt;</op:operator><name pos:line="2982" pos:column="45">Attribute</name></name><argument_list pos:line="2982" pos:column="54">(<argument><expr><name pos:line="2982" pos:column="55">attributName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2983" pos:column="17">if <condition pos:line="2983" pos:column="20">(<expr><name pos:line="2983" pos:column="21">val</name></expr>)</condition><then pos:line="2983" pos:column="25">
		<block pos:line="2984" pos:column="17">{
			<if pos:line="2985" pos:column="25">if <condition pos:line="2985" pos:column="28">(<expr><op:operator pos:line="2985" pos:column="29">!</op:operator><call><name pos:line="2985" pos:column="30">lstrcmp</name><argument_list pos:line="2985" pos:column="37">(<argument><expr><name pos:line="2985" pos:column="38">val</name></expr></argument>, <argument><expr><name pos:line="2985" pos:column="43">attributVal</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2985" pos:column="56">
				<return pos:line="2986" pos:column="33">return <expr><name pos:line="2986" pos:column="40">childNode</name></expr>;</return></then></if>
		}</block></then></if>
	}</block></for>
	<return pos:line="2989" pos:column="9">return <expr><name pos:line="2989" pos:column="16">NULL</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="2992" pos:column="1">// 2 restes : L_H, L_USER</comment>
<function><type><name pos:line="2993" pos:column="1">LangType</name></type> <name><name pos:line="2993" pos:column="10">NppParameters</name><op:operator pos:line="2993" pos:column="23">::</op:operator><name pos:line="2993" pos:column="25">getLangIDFromStr</name></name><parameter_list pos:line="2993" pos:column="41">(<param><decl><type><specifier pos:line="2993" pos:column="42">const</specifier> <name pos:line="2993" pos:column="48">TCHAR</name> <type:modifier pos:line="2993" pos:column="54">*</type:modifier></type><name pos:line="2993" pos:column="55">langName</name></decl></param>)</parameter_list>
<block pos:line="2994" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2995" pos:column="9">int</name></type> <name pos:line="2995" pos:column="13">lang</name> <init pos:line="2995" pos:column="18">= <expr><op:operator pos:line="2995" pos:column="20">(</op:operator><name pos:line="2995" pos:column="21">int</name><op:operator pos:line="2995" pos:column="24">)</op:operator><name pos:line="2995" pos:column="25">L_TEXT</name></expr></init></decl>;</decl_stmt>
	<for pos:line="2996" pos:column="9">for(<init pos:line="2996" pos:column="13">;</init> <condition><expr><name pos:line="2996" pos:column="15">lang</name> <op:operator pos:line="2996" pos:column="20">&lt;</op:operator> <name pos:line="2996" pos:column="22">L_EXTERNAL</name></expr>;</condition> <incr><expr><name pos:line="2996" pos:column="34">lang</name><op:operator pos:line="2996" pos:column="38">++</op:operator></expr></incr>) <block pos:line="2996" pos:column="42">{
		<decl_stmt><decl><type><specifier pos:line="2997" pos:column="17">const</specifier> <name pos:line="2997" pos:column="23">TCHAR</name> <type:modifier pos:line="2997" pos:column="29">*</type:modifier></type> <name pos:line="2997" pos:column="31">name</name> <init pos:line="2997" pos:column="36">= <expr><name><name pos:line="2997" pos:column="38">ScintillaEditView</name><op:operator pos:line="2997" pos:column="55">::</op:operator><name pos:line="2997" pos:column="57">langNames</name><index pos:line="2997" pos:column="66">[<expr><name pos:line="2997" pos:column="67">lang</name></expr>]</index></name><op:operator pos:line="2997" pos:column="72">.</op:operator><name pos:line="2997" pos:column="73">lexerName</name></expr></init></decl>;</decl_stmt>
		<if pos:line="2998" pos:column="17">if <condition pos:line="2998" pos:column="20">(<expr><op:operator pos:line="2998" pos:column="21">!</op:operator><call><name pos:line="2998" pos:column="22">lstrcmp</name><argument_list pos:line="2998" pos:column="29">(<argument><expr><name pos:line="2998" pos:column="30">name</name></expr></argument>, <argument><expr><name pos:line="2998" pos:column="36">langName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2998" pos:column="46"> <block pos:line="2998" pos:column="47">{	<comment type="line" pos:line="2998" pos:column="49">//found lang?</comment>
			<return pos:line="2999" pos:column="25">return <expr><op:operator pos:line="2999" pos:column="32">(</op:operator><name pos:line="2999" pos:column="33">LangType</name><op:operator pos:line="2999" pos:column="41">)</op:operator><name pos:line="2999" pos:column="42">lang</name></expr>;</return>
		}</block></then></if>
	}</block></for>

	<comment type="line" pos:line="3003" pos:column="9">//Cannot find language, check if its an external one</comment>

	<decl_stmt><decl><type><name pos:line="3005" pos:column="9">LangType</name></type> <name pos:line="3005" pos:column="18">l</name> <init pos:line="3005" pos:column="20">= <expr><op:operator pos:line="3005" pos:column="22">(</op:operator><name pos:line="3005" pos:column="23">LangType</name><op:operator pos:line="3005" pos:column="31">)</op:operator><name pos:line="3005" pos:column="32">lang</name></expr></init></decl>;</decl_stmt>
	<if pos:line="3006" pos:column="9">if <condition pos:line="3006" pos:column="12">(<expr><name pos:line="3006" pos:column="13">l</name> <op:operator pos:line="3006" pos:column="15">==</op:operator> <name pos:line="3006" pos:column="18">L_EXTERNAL</name></expr>)</condition><then pos:line="3006" pos:column="29"> <block pos:line="3006" pos:column="30">{	<comment type="line" pos:line="3006" pos:column="33">//try find external lexer</comment>
		<decl_stmt><decl><type><name pos:line="3007" pos:column="17">int</name></type> <name pos:line="3007" pos:column="21">id</name> <init pos:line="3007" pos:column="24">= <expr><call><name><name pos:line="3007" pos:column="26">_pSelf</name><op:operator pos:line="3007" pos:column="32">-&gt;</op:operator><name pos:line="3007" pos:column="34">getExternalLangIndexFromName</name></name><argument_list pos:line="3007" pos:column="62">(<argument><expr><name pos:line="3007" pos:column="63">langName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="3008" pos:column="17">if <condition pos:line="3008" pos:column="20">(<expr><name pos:line="3008" pos:column="21">id</name> <op:operator pos:line="3008" pos:column="24">!=</op:operator> <op:operator pos:line="3008" pos:column="27">-</op:operator><lit:literal type="number" pos:line="3008" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="3008" pos:column="30"> <return pos:line="3008" pos:column="31">return <expr><call pos:line="3008" pos:column="38">(<name pos:line="3008" pos:column="39">LangType</name>)<argument_list pos:line="3008" pos:column="48">(<argument><expr><name pos:line="3008" pos:column="49">id</name> <op:operator pos:line="3008" pos:column="52">+</op:operator> <name pos:line="3008" pos:column="54">L_EXTERNAL</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
	}</block></then></if>

	<return pos:line="3011" pos:column="9">return <expr><name pos:line="3011" pos:column="16">L_TEXT</name></expr>;</return>
}</block></function>

<function><type><name pos:line="3014" pos:column="1">void</name></type> <name><name pos:line="3014" pos:column="6">NppParameters</name><op:operator pos:line="3014" pos:column="19">::</op:operator><name pos:line="3014" pos:column="21">feedKeyWordsParameters</name></name><parameter_list pos:line="3014" pos:column="43">(<param><decl><type><name pos:line="3014" pos:column="44">TiXmlNode</name> <type:modifier pos:line="3014" pos:column="54">*</type:modifier></type><name pos:line="3014" pos:column="55">node</name></decl></param>)</parameter_list>
<block pos:line="3015" pos:column="1">{
	
	<decl_stmt><decl><type><name pos:line="3017" pos:column="9">TiXmlNode</name> <type:modifier pos:line="3017" pos:column="19">*</type:modifier></type><name pos:line="3017" pos:column="20">langRoot</name> <init pos:line="3017" pos:column="29">= <expr><call><name><name pos:line="3017" pos:column="31">node</name><op:operator pos:line="3017" pos:column="35">-&gt;</op:operator><name pos:line="3017" pos:column="37">FirstChildElement</name></name><argument_list pos:line="3017" pos:column="54">(<argument><expr><call><name pos:line="3017" pos:column="55">TEXT</name><argument_list pos:line="3017" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="3017" pos:column="60">"Languages"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3018" pos:column="9">if <condition pos:line="3018" pos:column="12">(<expr><op:operator pos:line="3018" pos:column="13">!</op:operator><name pos:line="3018" pos:column="14">langRoot</name></expr>)</condition><then pos:line="3018" pos:column="23"> <return pos:line="3018" pos:column="24">return;</return></then></if>

	<for pos:line="3020" pos:column="9">for (<init><decl><type><name pos:line="3020" pos:column="14">TiXmlNode</name> <type:modifier pos:line="3020" pos:column="24">*</type:modifier></type><name pos:line="3020" pos:column="25">langNode</name> <init pos:line="3020" pos:column="34">= <expr><call><name><name pos:line="3020" pos:column="36">langRoot</name><op:operator pos:line="3020" pos:column="44">-&gt;</op:operator><name pos:line="3020" pos:column="46">FirstChildElement</name></name><argument_list pos:line="3020" pos:column="63">(<argument><expr><call><name pos:line="3020" pos:column="64">TEXT</name><argument_list pos:line="3020" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3020" pos:column="69">"Language"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="3021" pos:column="17">langNode</name></expr> ;</condition>
		<incr><expr><name pos:line="3022" pos:column="17">langNode</name> <op:operator pos:line="3022" pos:column="26">=</op:operator> <call><name><name pos:line="3022" pos:column="28">langNode</name><op:operator pos:line="3022" pos:column="36">-&gt;</op:operator><name pos:line="3022" pos:column="38">NextSibling</name></name><argument_list pos:line="3022" pos:column="49">(<argument><expr><call><name pos:line="3022" pos:column="50">TEXT</name><argument_list pos:line="3022" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3022" pos:column="55">"Language"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="3023" pos:column="9">{
		<if pos:line="3024" pos:column="17">if <condition pos:line="3024" pos:column="20">(<expr><name pos:line="3024" pos:column="21">_nbLang</name> <op:operator pos:line="3024" pos:column="29">&lt;</op:operator> <name pos:line="3024" pos:column="31">NB_LANG</name></expr>)</condition><then pos:line="3024" pos:column="39">
		<block pos:line="3025" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3026" pos:column="25">TiXmlElement</name> <type:modifier pos:line="3026" pos:column="38">*</type:modifier></type><name pos:line="3026" pos:column="39">element</name> <init pos:line="3026" pos:column="47">= <expr><call><name><name pos:line="3026" pos:column="49">langNode</name><op:operator pos:line="3026" pos:column="57">-&gt;</op:operator><name pos:line="3026" pos:column="59">ToElement</name></name><argument_list pos:line="3026" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="3027" pos:column="25">const</specifier> <name pos:line="3027" pos:column="31">TCHAR</name> <type:modifier pos:line="3027" pos:column="37">*</type:modifier></type><name pos:line="3027" pos:column="38">name</name> <init pos:line="3027" pos:column="43">= <expr><call><name><name pos:line="3027" pos:column="45">element</name><op:operator pos:line="3027" pos:column="52">-&gt;</op:operator><name pos:line="3027" pos:column="54">Attribute</name></name><argument_list pos:line="3027" pos:column="63">(<argument><expr><call><name pos:line="3027" pos:column="64">TEXT</name><argument_list pos:line="3027" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3027" pos:column="69">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3028" pos:column="25">if <condition pos:line="3028" pos:column="28">(<expr><name pos:line="3028" pos:column="29">name</name></expr>)</condition><then pos:line="3028" pos:column="34">
			<block pos:line="3029" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3030" pos:column="33">_langList</name><index pos:line="3030" pos:column="42">[<expr><name pos:line="3030" pos:column="43">_nbLang</name></expr>]</index></name> <op:operator pos:line="3030" pos:column="52">=</op:operator> <op:operator pos:line="3030" pos:column="54">new</op:operator> <call><name pos:line="3030" pos:column="58">Lang</name><argument_list pos:line="3030" pos:column="62">(<argument><expr><call><name pos:line="3030" pos:column="63">getLangIDFromStr</name><argument_list pos:line="3030" pos:column="79">(<argument><expr><name pos:line="3030" pos:column="80">name</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="3030" pos:column="87">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3031" pos:column="33">_langList</name><index pos:line="3031" pos:column="42">[<expr><name pos:line="3031" pos:column="43">_nbLang</name></expr>]</index></name><op:operator pos:line="3031" pos:column="51">-&gt;</op:operator><call><name pos:line="3031" pos:column="53">setDefaultExtList</name><argument_list pos:line="3031" pos:column="70">(<argument><expr><call><name><name pos:line="3031" pos:column="71">element</name><op:operator pos:line="3031" pos:column="78">-&gt;</op:operator><name pos:line="3031" pos:column="80">Attribute</name></name><argument_list pos:line="3031" pos:column="89">(<argument><expr><call><name pos:line="3031" pos:column="90">TEXT</name><argument_list pos:line="3031" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="3031" pos:column="95">"ext"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3032" pos:column="33">_langList</name><index pos:line="3032" pos:column="42">[<expr><name pos:line="3032" pos:column="43">_nbLang</name></expr>]</index></name><op:operator pos:line="3032" pos:column="51">-&gt;</op:operator><call><name pos:line="3032" pos:column="53">setCommentLineSymbol</name><argument_list pos:line="3032" pos:column="73">(<argument><expr><call><name><name pos:line="3032" pos:column="74">element</name><op:operator pos:line="3032" pos:column="81">-&gt;</op:operator><name pos:line="3032" pos:column="83">Attribute</name></name><argument_list pos:line="3032" pos:column="92">(<argument><expr><call><name pos:line="3032" pos:column="93">TEXT</name><argument_list pos:line="3032" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="3032" pos:column="98">"commentLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3033" pos:column="33">_langList</name><index pos:line="3033" pos:column="42">[<expr><name pos:line="3033" pos:column="43">_nbLang</name></expr>]</index></name><op:operator pos:line="3033" pos:column="51">-&gt;</op:operator><call><name pos:line="3033" pos:column="53">setCommentStart</name><argument_list pos:line="3033" pos:column="68">(<argument><expr><call><name><name pos:line="3033" pos:column="69">element</name><op:operator pos:line="3033" pos:column="76">-&gt;</op:operator><name pos:line="3033" pos:column="78">Attribute</name></name><argument_list pos:line="3033" pos:column="87">(<argument><expr><call><name pos:line="3033" pos:column="88">TEXT</name><argument_list pos:line="3033" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="3033" pos:column="93">"commentStart"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="3034" pos:column="33">_langList</name><index pos:line="3034" pos:column="42">[<expr><name pos:line="3034" pos:column="43">_nbLang</name></expr>]</index></name><op:operator pos:line="3034" pos:column="51">-&gt;</op:operator><call><name pos:line="3034" pos:column="53">setCommentEnd</name><argument_list pos:line="3034" pos:column="66">(<argument><expr><call><name><name pos:line="3034" pos:column="67">element</name><op:operator pos:line="3034" pos:column="74">-&gt;</op:operator><name pos:line="3034" pos:column="76">Attribute</name></name><argument_list pos:line="3034" pos:column="85">(<argument><expr><call><name pos:line="3034" pos:column="86">TEXT</name><argument_list pos:line="3034" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="3034" pos:column="91">"commentEnd"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <decl_stmt><decl><type><name pos:line="3035" pos:column="17">int</name></type> <name pos:line="3035" pos:column="21">i</name></decl>;</decl_stmt>
                <if pos:line="3036" pos:column="17">if <condition pos:line="3036" pos:column="20">(<expr><call><name><name pos:line="3036" pos:column="21">element</name><op:operator pos:line="3036" pos:column="28">-&gt;</op:operator><name pos:line="3036" pos:column="30">Attribute</name></name><argument_list pos:line="3036" pos:column="39">(<argument><expr><call><name pos:line="3036" pos:column="40">TEXT</name><argument_list pos:line="3036" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="3036" pos:column="45">"tabSettings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3036" pos:column="61">&amp;</op:operator><name pos:line="3036" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3036" pos:column="65">
                    <expr_stmt><expr><name><name pos:line="3037" pos:column="21">_langList</name><index pos:line="3037" pos:column="30">[<expr><name pos:line="3037" pos:column="31">_nbLang</name></expr>]</index></name><op:operator pos:line="3037" pos:column="39">-&gt;</op:operator><call><name pos:line="3037" pos:column="41">setTabInfo</name><argument_list pos:line="3037" pos:column="51">(<argument><expr><name pos:line="3037" pos:column="52">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

				<for pos:line="3039" pos:column="33">for (<init><decl><type><name pos:line="3039" pos:column="38">TiXmlNode</name> <type:modifier pos:line="3039" pos:column="48">*</type:modifier></type><name pos:line="3039" pos:column="49">kwNode</name> <init pos:line="3039" pos:column="56">= <expr><call><name><name pos:line="3039" pos:column="58">langNode</name><op:operator pos:line="3039" pos:column="66">-&gt;</op:operator><name pos:line="3039" pos:column="68">FirstChildElement</name></name><argument_list pos:line="3039" pos:column="85">(<argument><expr><call><name pos:line="3039" pos:column="86">TEXT</name><argument_list pos:line="3039" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="3039" pos:column="91">"Keywords"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
					<condition><expr><name pos:line="3040" pos:column="41">kwNode</name></expr> ;</condition>
					<incr><expr><name pos:line="3041" pos:column="41">kwNode</name> <op:operator pos:line="3041" pos:column="48">=</op:operator> <call><name><name pos:line="3041" pos:column="50">kwNode</name><op:operator pos:line="3041" pos:column="56">-&gt;</op:operator><name pos:line="3041" pos:column="58">NextSibling</name></name><argument_list pos:line="3041" pos:column="69">(<argument><expr><call><name pos:line="3041" pos:column="70">TEXT</name><argument_list pos:line="3041" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="3041" pos:column="75">"Keywords"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
				<block pos:line="3042" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="3043" pos:column="41">const</specifier> <name pos:line="3043" pos:column="47">TCHAR</name> <type:modifier pos:line="3043" pos:column="53">*</type:modifier></type><name pos:line="3043" pos:column="54">indexName</name> <init pos:line="3043" pos:column="64">= <expr><op:operator pos:line="3043" pos:column="66">(</op:operator><call><name><name pos:line="3043" pos:column="67">kwNode</name><op:operator pos:line="3043" pos:column="73">-&gt;</op:operator><name pos:line="3043" pos:column="75">ToElement</name></name><argument_list pos:line="3043" pos:column="84">()</argument_list></call><op:operator pos:line="3043" pos:column="86">)</op:operator><op:operator pos:line="3043" pos:column="87">-&gt;</op:operator><call><name pos:line="3043" pos:column="89">Attribute</name><argument_list pos:line="3043" pos:column="98">(<argument><expr><call><name pos:line="3043" pos:column="99">TEXT</name><argument_list pos:line="3043" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="3043" pos:column="104">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="3044" pos:column="41">TiXmlNode</name> <type:modifier pos:line="3044" pos:column="51">*</type:modifier></type><name pos:line="3044" pos:column="52">kwVal</name> <init pos:line="3044" pos:column="58">= <expr><call><name><name pos:line="3044" pos:column="60">kwNode</name><op:operator pos:line="3044" pos:column="66">-&gt;</op:operator><name pos:line="3044" pos:column="68">FirstChild</name></name><argument_list pos:line="3044" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="3045" pos:column="41">const</specifier> <name pos:line="3045" pos:column="47">TCHAR</name> <type:modifier pos:line="3045" pos:column="53">*</type:modifier></type><name pos:line="3045" pos:column="54">keyWords</name> <init pos:line="3045" pos:column="63">= <expr><call><name pos:line="3045" pos:column="65">TEXT</name><argument_list pos:line="3045" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="3045" pos:column="70">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="3046" pos:column="41">if <condition pos:line="3046" pos:column="44">(<expr><op:operator pos:line="3046" pos:column="45">(</op:operator><name pos:line="3046" pos:column="46">indexName</name><op:operator pos:line="3046" pos:column="55">)</op:operator> <op:operator pos:line="3046" pos:column="57">&amp;&amp;</op:operator> <op:operator pos:line="3046" pos:column="60">(</op:operator><name pos:line="3046" pos:column="61">kwVal</name><op:operator pos:line="3046" pos:column="66">)</op:operator></expr>)</condition><then pos:line="3046" pos:column="68">
						<expr_stmt><expr><name pos:line="3047" pos:column="49">keyWords</name> <op:operator pos:line="3047" pos:column="58">=</op:operator> <call><name><name pos:line="3047" pos:column="60">kwVal</name><op:operator pos:line="3047" pos:column="65">-&gt;</op:operator><name pos:line="3047" pos:column="67">Value</name></name><argument_list pos:line="3047" pos:column="72">()</argument_list></call></expr>;</expr_stmt></then></if>

					<decl_stmt><decl><type><name pos:line="3049" pos:column="41">int</name></type> <name pos:line="3049" pos:column="45">i</name> <init pos:line="3049" pos:column="47">= <expr><call><name pos:line="3049" pos:column="49">getKwClassFromName</name><argument_list pos:line="3049" pos:column="67">(<argument><expr><name pos:line="3049" pos:column="68">indexName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<if pos:line="3051" pos:column="41">if <condition pos:line="3051" pos:column="44">(<expr><name pos:line="3051" pos:column="45">i</name> <op:operator pos:line="3051" pos:column="47">&gt;=</op:operator> <lit:literal type="number" pos:line="3051" pos:column="50">0</lit:literal> <op:operator pos:line="3051" pos:column="52">&amp;&amp;</op:operator> <name pos:line="3051" pos:column="55">i</name> <op:operator pos:line="3051" pos:column="57">&lt;=</op:operator> <name pos:line="3051" pos:column="60">KEYWORDSET_MAX</name></expr>)</condition><then pos:line="3051" pos:column="75">
						<expr_stmt><expr><name><name pos:line="3052" pos:column="49">_langList</name><index pos:line="3052" pos:column="58">[<expr><name pos:line="3052" pos:column="59">_nbLang</name></expr>]</index></name><op:operator pos:line="3052" pos:column="67">-&gt;</op:operator><call><name pos:line="3052" pos:column="69">setWords</name><argument_list pos:line="3052" pos:column="77">(<argument><expr><name pos:line="3052" pos:column="78">keyWords</name></expr></argument>, <argument><expr><name pos:line="3052" pos:column="88">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				}</block></for>
				<expr_stmt><expr><name pos:line="3054" pos:column="33">_nbLang</name><op:operator pos:line="3054" pos:column="40">++</op:operator></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
}</block></function>

<extern pos:line="3060" pos:column="1">extern <lit:literal type="string" pos:line="3060" pos:column="8">"C"</lit:literal> <block pos:line="3060" pos:column="12">{
<typedef pos:line="3061" pos:column="1">typedef <function_decl><type><name pos:line="3061" pos:column="9">DWORD</name></type> (<name pos:line="3061" pos:column="16">WINAPI</name> <type:modifier pos:line="3061" pos:column="23">*</type:modifier> <name pos:line="3061" pos:column="25">EESFUNC</name>) <parameter_list pos:line="3061" pos:column="34">(<param><decl><type><name pos:line="3061" pos:column="35">LPCTSTR</name></type></decl></param>, <param><decl><type><name pos:line="3061" pos:column="44">LPTSTR</name></type></decl></param>, <param><decl><type><name pos:line="3061" pos:column="52">DWORD</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
}</block></extern>

<function><type><name pos:line="3064" pos:column="1">void</name></type> <name><name pos:line="3064" pos:column="6">NppParameters</name><op:operator pos:line="3064" pos:column="19">::</op:operator><name pos:line="3064" pos:column="21">feedGUIParameters</name></name><parameter_list pos:line="3064" pos:column="38">(<param><decl><type><name pos:line="3064" pos:column="39">TiXmlNode</name> <type:modifier pos:line="3064" pos:column="49">*</type:modifier></type><name pos:line="3064" pos:column="50">node</name></decl></param>)</parameter_list>
<block pos:line="3065" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="3066" pos:column="9">TiXmlNode</name> <type:modifier pos:line="3066" pos:column="19">*</type:modifier></type><name pos:line="3066" pos:column="20">GUIRoot</name> <init pos:line="3066" pos:column="28">= <expr><call><name><name pos:line="3066" pos:column="30">node</name><op:operator pos:line="3066" pos:column="34">-&gt;</op:operator><name pos:line="3066" pos:column="36">FirstChildElement</name></name><argument_list pos:line="3066" pos:column="53">(<argument><expr><call><name pos:line="3066" pos:column="54">TEXT</name><argument_list pos:line="3066" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="3066" pos:column="59">"GUIConfigs"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3067" pos:column="9">if <condition pos:line="3067" pos:column="12">(<expr><op:operator pos:line="3067" pos:column="13">!</op:operator><name pos:line="3067" pos:column="14">GUIRoot</name></expr>)</condition><then pos:line="3067" pos:column="22"> <return pos:line="3067" pos:column="23">return;</return></then></if>

	<for pos:line="3069" pos:column="9">for (<init><decl><type><name pos:line="3069" pos:column="14">TiXmlNode</name> <type:modifier pos:line="3069" pos:column="24">*</type:modifier></type><name pos:line="3069" pos:column="25">childNode</name> <init pos:line="3069" pos:column="35">= <expr><call><name><name pos:line="3069" pos:column="37">GUIRoot</name><op:operator pos:line="3069" pos:column="44">-&gt;</op:operator><name pos:line="3069" pos:column="46">FirstChildElement</name></name><argument_list pos:line="3069" pos:column="63">(<argument><expr><call><name pos:line="3069" pos:column="64">TEXT</name><argument_list pos:line="3069" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3069" pos:column="69">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="3070" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="3071" pos:column="17">childNode</name> <op:operator pos:line="3071" pos:column="27">=</op:operator> <call><name><name pos:line="3071" pos:column="29">childNode</name><op:operator pos:line="3071" pos:column="38">-&gt;</op:operator><name pos:line="3071" pos:column="40">NextSibling</name></name><argument_list pos:line="3071" pos:column="51">(<argument><expr><call><name pos:line="3071" pos:column="52">TEXT</name><argument_list pos:line="3071" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3071" pos:column="57">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="3072" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="3073" pos:column="17">TiXmlElement</name> <type:modifier pos:line="3073" pos:column="30">*</type:modifier></type><name pos:line="3073" pos:column="31">element</name> <init pos:line="3073" pos:column="39">= <expr><call><name><name pos:line="3073" pos:column="41">childNode</name><op:operator pos:line="3073" pos:column="50">-&gt;</op:operator><name pos:line="3073" pos:column="52">ToElement</name></name><argument_list pos:line="3073" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="3074" pos:column="17">const</specifier> <name pos:line="3074" pos:column="23">TCHAR</name> <type:modifier pos:line="3074" pos:column="29">*</type:modifier></type><name pos:line="3074" pos:column="30">nm</name> <init pos:line="3074" pos:column="33">= <expr><call><name><name pos:line="3074" pos:column="35">element</name><op:operator pos:line="3074" pos:column="42">-&gt;</op:operator><name pos:line="3074" pos:column="44">Attribute</name></name><argument_list pos:line="3074" pos:column="53">(<argument><expr><call><name pos:line="3074" pos:column="54">TEXT</name><argument_list pos:line="3074" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="3074" pos:column="59">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="3075" pos:column="17">if <condition pos:line="3075" pos:column="20">(<expr><op:operator pos:line="3075" pos:column="21">!</op:operator><name pos:line="3075" pos:column="22">nm</name></expr>)</condition><then pos:line="3075" pos:column="25"> <continue pos:line="3075" pos:column="26">continue;</continue></then></if>

		<decl_stmt><decl><type><specifier pos:line="3077" pos:column="17">const</specifier> <name pos:line="3077" pos:column="23">TCHAR</name> <type:modifier pos:line="3077" pos:column="29">*</type:modifier></type><name pos:line="3077" pos:column="30">val</name></decl>;</decl_stmt>

		<if pos:line="3079" pos:column="17">if <condition pos:line="3079" pos:column="20">(<expr><op:operator pos:line="3079" pos:column="21">!</op:operator><call><name pos:line="3079" pos:column="22">lstrcmp</name><argument_list pos:line="3079" pos:column="29">(<argument><expr><name pos:line="3079" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3079" pos:column="34">TEXT</name><argument_list pos:line="3079" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3079" pos:column="39">"ToolBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3079" pos:column="51">
		<block pos:line="3080" pos:column="17">{
			<expr_stmt><expr><name pos:line="3081" pos:column="25">val</name> <op:operator pos:line="3081" pos:column="29">=</op:operator> <call><name><name pos:line="3081" pos:column="31">element</name><op:operator pos:line="3081" pos:column="38">-&gt;</op:operator><name pos:line="3081" pos:column="40">Attribute</name></name><argument_list pos:line="3081" pos:column="49">(<argument><expr><call><name pos:line="3081" pos:column="50">TEXT</name><argument_list pos:line="3081" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3081" pos:column="55">"visible"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3082" pos:column="25">if <condition pos:line="3082" pos:column="28">(<expr><name pos:line="3082" pos:column="29">val</name></expr>)</condition><then pos:line="3082" pos:column="33">
			<block pos:line="3083" pos:column="25">{
				<if pos:line="3084" pos:column="33">if <condition pos:line="3084" pos:column="36">(<expr><op:operator pos:line="3084" pos:column="37">!</op:operator><call><name pos:line="3084" pos:column="38">lstrcmp</name><argument_list pos:line="3084" pos:column="45">(<argument><expr><name pos:line="3084" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3084" pos:column="51">TEXT</name><argument_list pos:line="3084" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3084" pos:column="56">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3084" pos:column="63">
					<expr_stmt><expr><name><name pos:line="3085" pos:column="41">_nppGUI</name><op:operator pos:line="3085" pos:column="48">.</op:operator><name pos:line="3085" pos:column="49">_toolbarShow</name></name> <op:operator pos:line="3085" pos:column="62">=</op:operator> <lit:literal type="boolean" pos:line="3085" pos:column="64">false</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3086" pos:column="33">else<comment type="line" pos:line="3086" pos:column="37">// if (!lstrcmp(val, TEXT("yes")))</comment>
					<expr_stmt><expr><name><name pos:line="3087" pos:column="41">_nppGUI</name><op:operator pos:line="3087" pos:column="48">.</op:operator><name pos:line="3087" pos:column="49">_toolbarShow</name></name> <op:operator pos:line="3087" pos:column="62">=</op:operator> <lit:literal type="boolean" pos:line="3087" pos:column="64">true</lit:literal></expr>;</expr_stmt></else></if>
			}</block></then></if>
			<decl_stmt><decl><type><name pos:line="3089" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3089" pos:column="35">*</type:modifier></type><name pos:line="3089" pos:column="36">n</name> <init pos:line="3089" pos:column="38">= <expr><call><name><name pos:line="3089" pos:column="40">childNode</name><op:operator pos:line="3089" pos:column="49">-&gt;</op:operator><name pos:line="3089" pos:column="51">FirstChild</name></name><argument_list pos:line="3089" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3090" pos:column="25">if <condition pos:line="3090" pos:column="28">(<expr><name pos:line="3090" pos:column="29">n</name></expr>)</condition><then pos:line="3090" pos:column="31">
			<block pos:line="3091" pos:column="25">{
				<expr_stmt><expr><name pos:line="3092" pos:column="33">val</name> <op:operator pos:line="3092" pos:column="37">=</op:operator> <call><name><name pos:line="3092" pos:column="39">n</name><op:operator pos:line="3092" pos:column="40">-&gt;</op:operator><name pos:line="3092" pos:column="42">Value</name></name><argument_list pos:line="3092" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3093" pos:column="33">if <condition pos:line="3093" pos:column="36">(<expr><name pos:line="3093" pos:column="37">val</name></expr>)</condition><then pos:line="3093" pos:column="41">
				<block pos:line="3094" pos:column="33">{
					<if pos:line="3095" pos:column="41">if <condition pos:line="3095" pos:column="44">(<expr><op:operator pos:line="3095" pos:column="45">!</op:operator><call><name pos:line="3095" pos:column="46">lstrcmp</name><argument_list pos:line="3095" pos:column="53">(<argument><expr><name pos:line="3095" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3095" pos:column="59">TEXT</name><argument_list pos:line="3095" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3095" pos:column="64">"small"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3095" pos:column="74">
						<expr_stmt><expr><name><name pos:line="3096" pos:column="49">_nppGUI</name><op:operator pos:line="3096" pos:column="56">.</op:operator><name pos:line="3096" pos:column="57">_toolBarStatus</name></name> <op:operator pos:line="3096" pos:column="72">=</op:operator> <name pos:line="3096" pos:column="74">TB_SMALL</name></expr>;</expr_stmt></then>
					<else pos:line="3097" pos:column="41">else <if pos:line="3097" pos:column="46">if <condition pos:line="3097" pos:column="49">(<expr><op:operator pos:line="3097" pos:column="50">!</op:operator><call><name pos:line="3097" pos:column="51">lstrcmp</name><argument_list pos:line="3097" pos:column="58">(<argument><expr><name pos:line="3097" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3097" pos:column="64">TEXT</name><argument_list pos:line="3097" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3097" pos:column="69">"large"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3097" pos:column="79">
						<expr_stmt><expr><name><name pos:line="3098" pos:column="49">_nppGUI</name><op:operator pos:line="3098" pos:column="56">.</op:operator><name pos:line="3098" pos:column="57">_toolBarStatus</name></name> <op:operator pos:line="3098" pos:column="72">=</op:operator> <name pos:line="3098" pos:column="74">TB_LARGE</name></expr>;</expr_stmt></then>
					<else pos:line="3099" pos:column="41">else<comment type="line" pos:line="3099" pos:column="45">// if (!lstrcmp(val, TEXT("standard")))	//assume standard in all other cases</comment>
						<expr_stmt><expr><name><name pos:line="3100" pos:column="49">_nppGUI</name><op:operator pos:line="3100" pos:column="56">.</op:operator><name pos:line="3100" pos:column="57">_toolBarStatus</name></name> <op:operator pos:line="3100" pos:column="72">=</op:operator> <name pos:line="3100" pos:column="74">TB_STANDARD</name></expr>;</expr_stmt></else></if></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3104" pos:column="17">else <if pos:line="3104" pos:column="22">if <condition pos:line="3104" pos:column="25">(<expr><op:operator pos:line="3104" pos:column="26">!</op:operator><call><name pos:line="3104" pos:column="27">lstrcmp</name><argument_list pos:line="3104" pos:column="34">(<argument><expr><name pos:line="3104" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3104" pos:column="39">TEXT</name><argument_list pos:line="3104" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3104" pos:column="44">"StatusBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3104" pos:column="58">
		<block pos:line="3105" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3106" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3106" pos:column="35">*</type:modifier></type><name pos:line="3106" pos:column="36">n</name> <init pos:line="3106" pos:column="38">= <expr><call><name><name pos:line="3106" pos:column="40">childNode</name><op:operator pos:line="3106" pos:column="49">-&gt;</op:operator><name pos:line="3106" pos:column="51">FirstChild</name></name><argument_list pos:line="3106" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3107" pos:column="25">if <condition pos:line="3107" pos:column="28">(<expr><name pos:line="3107" pos:column="29">n</name></expr>)</condition><then pos:line="3107" pos:column="31">
			<block pos:line="3108" pos:column="25">{
				<expr_stmt><expr><name pos:line="3109" pos:column="33">val</name> <op:operator pos:line="3109" pos:column="37">=</op:operator> <call><name><name pos:line="3109" pos:column="39">n</name><op:operator pos:line="3109" pos:column="40">-&gt;</op:operator><name pos:line="3109" pos:column="42">Value</name></name><argument_list pos:line="3109" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3110" pos:column="33">if <condition pos:line="3110" pos:column="36">(<expr><name pos:line="3110" pos:column="37">val</name></expr>)</condition><then pos:line="3110" pos:column="41">
				<block pos:line="3111" pos:column="33">{
					<if pos:line="3112" pos:column="41">if <condition pos:line="3112" pos:column="44">(<expr><op:operator pos:line="3112" pos:column="45">!</op:operator><call><name pos:line="3112" pos:column="46">lstrcmp</name><argument_list pos:line="3112" pos:column="53">(<argument><expr><name pos:line="3112" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3112" pos:column="59">TEXT</name><argument_list pos:line="3112" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3112" pos:column="64">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3112" pos:column="73">
						<expr_stmt><expr><name><name pos:line="3113" pos:column="49">_nppGUI</name><op:operator pos:line="3113" pos:column="56">.</op:operator><name pos:line="3113" pos:column="57">_statusBarShow</name></name> <op:operator pos:line="3113" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="3113" pos:column="74">false</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3114" pos:column="41">else <if pos:line="3114" pos:column="46">if <condition pos:line="3114" pos:column="49">(<expr><op:operator pos:line="3114" pos:column="50">!</op:operator><call><name pos:line="3114" pos:column="51">lstrcmp</name><argument_list pos:line="3114" pos:column="58">(<argument><expr><name pos:line="3114" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3114" pos:column="64">TEXT</name><argument_list pos:line="3114" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3114" pos:column="69">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3114" pos:column="78">
						<expr_stmt><expr><name><name pos:line="3115" pos:column="49">_nppGUI</name><op:operator pos:line="3115" pos:column="56">.</op:operator><name pos:line="3115" pos:column="57">_statusBarShow</name></name> <op:operator pos:line="3115" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="3115" pos:column="74">true</lit:literal></expr>;</expr_stmt></then></if></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3119" pos:column="17">else <if pos:line="3119" pos:column="22">if <condition pos:line="3119" pos:column="25">(<expr><op:operator pos:line="3119" pos:column="26">!</op:operator><call><name pos:line="3119" pos:column="27">lstrcmp</name><argument_list pos:line="3119" pos:column="34">(<argument><expr><name pos:line="3119" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3119" pos:column="39">TEXT</name><argument_list pos:line="3119" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3119" pos:column="44">"MenuBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3119" pos:column="56">
		<block pos:line="3120" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3121" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3121" pos:column="35">*</type:modifier></type><name pos:line="3121" pos:column="36">n</name> <init pos:line="3121" pos:column="38">= <expr><call><name><name pos:line="3121" pos:column="40">childNode</name><op:operator pos:line="3121" pos:column="49">-&gt;</op:operator><name pos:line="3121" pos:column="51">FirstChild</name></name><argument_list pos:line="3121" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3122" pos:column="25">if <condition pos:line="3122" pos:column="28">(<expr><name pos:line="3122" pos:column="29">n</name></expr>)</condition><then pos:line="3122" pos:column="31">
			<block pos:line="3123" pos:column="25">{
				<expr_stmt><expr><name pos:line="3124" pos:column="33">val</name> <op:operator pos:line="3124" pos:column="37">=</op:operator> <call><name><name pos:line="3124" pos:column="39">n</name><op:operator pos:line="3124" pos:column="40">-&gt;</op:operator><name pos:line="3124" pos:column="42">Value</name></name><argument_list pos:line="3124" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3125" pos:column="33">if <condition pos:line="3125" pos:column="36">(<expr><name pos:line="3125" pos:column="37">val</name></expr>)</condition><then pos:line="3125" pos:column="41">
				<block pos:line="3126" pos:column="33">{
					<if pos:line="3127" pos:column="41">if <condition pos:line="3127" pos:column="44">(<expr><op:operator pos:line="3127" pos:column="45">!</op:operator><call><name pos:line="3127" pos:column="46">lstrcmp</name><argument_list pos:line="3127" pos:column="53">(<argument><expr><name pos:line="3127" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3127" pos:column="59">TEXT</name><argument_list pos:line="3127" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3127" pos:column="64">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3127" pos:column="73">
						<expr_stmt><expr><name><name pos:line="3128" pos:column="49">_nppGUI</name><op:operator pos:line="3128" pos:column="56">.</op:operator><name pos:line="3128" pos:column="57">_menuBarShow</name></name> <op:operator pos:line="3128" pos:column="70">=</op:operator> <lit:literal type="boolean" pos:line="3128" pos:column="72">false</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3129" pos:column="41">else <if pos:line="3129" pos:column="46">if <condition pos:line="3129" pos:column="49">(<expr><op:operator pos:line="3129" pos:column="50">!</op:operator><call><name pos:line="3129" pos:column="51">lstrcmp</name><argument_list pos:line="3129" pos:column="58">(<argument><expr><name pos:line="3129" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3129" pos:column="64">TEXT</name><argument_list pos:line="3129" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3129" pos:column="69">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3129" pos:column="78">
						<expr_stmt><expr><name><name pos:line="3130" pos:column="49">_nppGUI</name><op:operator pos:line="3130" pos:column="56">.</op:operator><name pos:line="3130" pos:column="57">_menuBarShow</name></name> <op:operator pos:line="3130" pos:column="70">=</op:operator> <lit:literal type="boolean" pos:line="3130" pos:column="72">true</lit:literal></expr>;</expr_stmt></then></if></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3134" pos:column="17">else <if pos:line="3134" pos:column="22">if <condition pos:line="3134" pos:column="25">(<expr><op:operator pos:line="3134" pos:column="26">!</op:operator><call><name pos:line="3134" pos:column="27">lstrcmp</name><argument_list pos:line="3134" pos:column="34">(<argument><expr><name pos:line="3134" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3134" pos:column="39">TEXT</name><argument_list pos:line="3134" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3134" pos:column="44">"TabBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3134" pos:column="55">
		<block pos:line="3135" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3136" pos:column="25">bool</name></type> <name pos:line="3136" pos:column="30">isFailed</name> <init pos:line="3136" pos:column="39">= <expr><lit:literal type="boolean" pos:line="3136" pos:column="41">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="3137" pos:column="25">int</name></type> <name pos:line="3137" pos:column="29">oldValue</name> <init pos:line="3137" pos:column="38">= <expr><name><name pos:line="3137" pos:column="40">_nppGUI</name><op:operator pos:line="3137" pos:column="47">.</op:operator><name pos:line="3137" pos:column="48">_tabStatus</name></name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="3138" pos:column="25">val</name> <op:operator pos:line="3138" pos:column="29">=</op:operator> <call><name><name pos:line="3138" pos:column="31">element</name><op:operator pos:line="3138" pos:column="38">-&gt;</op:operator><name pos:line="3138" pos:column="40">Attribute</name></name><argument_list pos:line="3138" pos:column="49">(<argument><expr><call><name pos:line="3138" pos:column="50">TEXT</name><argument_list pos:line="3138" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3138" pos:column="55">"dragAndDrop"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3139" pos:column="25">if <condition pos:line="3139" pos:column="28">(<expr><name pos:line="3139" pos:column="29">val</name></expr>)</condition><then pos:line="3139" pos:column="33">
			<block pos:line="3140" pos:column="25">{
				<if pos:line="3141" pos:column="33">if <condition pos:line="3141" pos:column="36">(<expr><op:operator pos:line="3141" pos:column="37">!</op:operator><call><name pos:line="3141" pos:column="38">lstrcmp</name><argument_list pos:line="3141" pos:column="45">(<argument><expr><name pos:line="3141" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3141" pos:column="51">TEXT</name><argument_list pos:line="3141" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3141" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3141" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3142" pos:column="41">_nppGUI</name><op:operator pos:line="3142" pos:column="48">.</op:operator><name pos:line="3142" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3142" pos:column="60">=</op:operator> <name pos:line="3142" pos:column="62">TAB_DRAGNDROP</name></expr>;</expr_stmt></then>
				<else pos:line="3143" pos:column="33">else <if pos:line="3143" pos:column="38">if <condition pos:line="3143" pos:column="41">(<expr><op:operator pos:line="3143" pos:column="42">!</op:operator><call><name pos:line="3143" pos:column="43">lstrcmp</name><argument_list pos:line="3143" pos:column="50">(<argument><expr><name pos:line="3143" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3143" pos:column="56">TEXT</name><argument_list pos:line="3143" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3143" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3143" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3144" pos:column="41">_nppGUI</name><op:operator pos:line="3144" pos:column="48">.</op:operator><name pos:line="3144" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3144" pos:column="60">=</op:operator> <lit:literal type="number" pos:line="3144" pos:column="62">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3145" pos:column="33">else
					<expr_stmt><expr><name pos:line="3146" pos:column="41">isFailed</name> <op:operator pos:line="3146" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3146" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3149" pos:column="25">val</name> <op:operator pos:line="3149" pos:column="29">=</op:operator> <call><name><name pos:line="3149" pos:column="31">element</name><op:operator pos:line="3149" pos:column="38">-&gt;</op:operator><name pos:line="3149" pos:column="40">Attribute</name></name><argument_list pos:line="3149" pos:column="49">(<argument><expr><call><name pos:line="3149" pos:column="50">TEXT</name><argument_list pos:line="3149" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3149" pos:column="55">"drawTopBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3150" pos:column="25">if <condition pos:line="3150" pos:column="28">(<expr><name pos:line="3150" pos:column="29">val</name></expr>)</condition><then pos:line="3150" pos:column="33">
			<block pos:line="3151" pos:column="25">{
				<if pos:line="3152" pos:column="33">if <condition pos:line="3152" pos:column="36">(<expr><op:operator pos:line="3152" pos:column="37">!</op:operator><call><name pos:line="3152" pos:column="38">lstrcmp</name><argument_list pos:line="3152" pos:column="45">(<argument><expr><name pos:line="3152" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3152" pos:column="51">TEXT</name><argument_list pos:line="3152" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3152" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3152" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3153" pos:column="41">_nppGUI</name><op:operator pos:line="3153" pos:column="48">.</op:operator><name pos:line="3153" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3153" pos:column="60">|=</op:operator> <name pos:line="3153" pos:column="63">TAB_DRAWTOPBAR</name></expr>;</expr_stmt></then>
				<else pos:line="3154" pos:column="33">else <if pos:line="3154" pos:column="38">if <condition pos:line="3154" pos:column="41">(<expr><op:operator pos:line="3154" pos:column="42">!</op:operator><call><name pos:line="3154" pos:column="43">lstrcmp</name><argument_list pos:line="3154" pos:column="50">(<argument><expr><name pos:line="3154" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3154" pos:column="56">TEXT</name><argument_list pos:line="3154" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3154" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3154" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3155" pos:column="41">_nppGUI</name><op:operator pos:line="3155" pos:column="48">.</op:operator><name pos:line="3155" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3155" pos:column="60">|=</op:operator> <lit:literal type="number" pos:line="3155" pos:column="63">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3156" pos:column="33">else
					<expr_stmt><expr><name pos:line="3157" pos:column="41">isFailed</name> <op:operator pos:line="3157" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3157" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3160" pos:column="25">val</name> <op:operator pos:line="3160" pos:column="29">=</op:operator> <call><name><name pos:line="3160" pos:column="31">element</name><op:operator pos:line="3160" pos:column="38">-&gt;</op:operator><name pos:line="3160" pos:column="40">Attribute</name></name><argument_list pos:line="3160" pos:column="49">(<argument><expr><call><name pos:line="3160" pos:column="50">TEXT</name><argument_list pos:line="3160" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3160" pos:column="55">"drawInactiveTab"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3161" pos:column="25">if <condition pos:line="3161" pos:column="28">(<expr><name pos:line="3161" pos:column="29">val</name></expr>)</condition><then pos:line="3161" pos:column="33">
			<block pos:line="3162" pos:column="25">{
				<if pos:line="3163" pos:column="33">if <condition pos:line="3163" pos:column="36">(<expr><op:operator pos:line="3163" pos:column="37">!</op:operator><call><name pos:line="3163" pos:column="38">lstrcmp</name><argument_list pos:line="3163" pos:column="45">(<argument><expr><name pos:line="3163" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3163" pos:column="51">TEXT</name><argument_list pos:line="3163" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3163" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3163" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3164" pos:column="41">_nppGUI</name><op:operator pos:line="3164" pos:column="48">.</op:operator><name pos:line="3164" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3164" pos:column="60">|=</op:operator> <name pos:line="3164" pos:column="63">TAB_DRAWINACTIVETAB</name></expr>;</expr_stmt></then>
				<else pos:line="3165" pos:column="33">else <if pos:line="3165" pos:column="38">if <condition pos:line="3165" pos:column="41">(<expr><op:operator pos:line="3165" pos:column="42">!</op:operator><call><name pos:line="3165" pos:column="43">lstrcmp</name><argument_list pos:line="3165" pos:column="50">(<argument><expr><name pos:line="3165" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3165" pos:column="56">TEXT</name><argument_list pos:line="3165" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3165" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3165" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3166" pos:column="41">_nppGUI</name><op:operator pos:line="3166" pos:column="48">.</op:operator><name pos:line="3166" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3166" pos:column="60">|=</op:operator> <lit:literal type="number" pos:line="3166" pos:column="63">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3167" pos:column="33">else
					<expr_stmt><expr><name pos:line="3168" pos:column="41">isFailed</name> <op:operator pos:line="3168" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3168" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3171" pos:column="25">val</name> <op:operator pos:line="3171" pos:column="29">=</op:operator> <call><name><name pos:line="3171" pos:column="31">element</name><op:operator pos:line="3171" pos:column="38">-&gt;</op:operator><name pos:line="3171" pos:column="40">Attribute</name></name><argument_list pos:line="3171" pos:column="49">(<argument><expr><call><name pos:line="3171" pos:column="50">TEXT</name><argument_list pos:line="3171" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3171" pos:column="55">"reduce"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3172" pos:column="25">if <condition pos:line="3172" pos:column="28">(<expr><name pos:line="3172" pos:column="29">val</name></expr>)</condition><then pos:line="3172" pos:column="33">
			<block pos:line="3173" pos:column="25">{
				<if pos:line="3174" pos:column="33">if <condition pos:line="3174" pos:column="36">(<expr><op:operator pos:line="3174" pos:column="37">!</op:operator><call><name pos:line="3174" pos:column="38">lstrcmp</name><argument_list pos:line="3174" pos:column="45">(<argument><expr><name pos:line="3174" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3174" pos:column="51">TEXT</name><argument_list pos:line="3174" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3174" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3174" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3175" pos:column="41">_nppGUI</name><op:operator pos:line="3175" pos:column="48">.</op:operator><name pos:line="3175" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3175" pos:column="60">|=</op:operator> <name pos:line="3175" pos:column="63">TAB_REDUCE</name></expr>;</expr_stmt></then>
				<else pos:line="3176" pos:column="33">else <if pos:line="3176" pos:column="38">if <condition pos:line="3176" pos:column="41">(<expr><op:operator pos:line="3176" pos:column="42">!</op:operator><call><name pos:line="3176" pos:column="43">lstrcmp</name><argument_list pos:line="3176" pos:column="50">(<argument><expr><name pos:line="3176" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3176" pos:column="56">TEXT</name><argument_list pos:line="3176" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3176" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3176" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3177" pos:column="41">_nppGUI</name><op:operator pos:line="3177" pos:column="48">.</op:operator><name pos:line="3177" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3177" pos:column="60">|=</op:operator> <lit:literal type="number" pos:line="3177" pos:column="63">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3178" pos:column="33">else
					<expr_stmt><expr><name pos:line="3179" pos:column="41">isFailed</name> <op:operator pos:line="3179" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3179" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3182" pos:column="25">val</name> <op:operator pos:line="3182" pos:column="29">=</op:operator> <call><name><name pos:line="3182" pos:column="31">element</name><op:operator pos:line="3182" pos:column="38">-&gt;</op:operator><name pos:line="3182" pos:column="40">Attribute</name></name><argument_list pos:line="3182" pos:column="49">(<argument><expr><call><name pos:line="3182" pos:column="50">TEXT</name><argument_list pos:line="3182" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3182" pos:column="55">"closeButton"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3183" pos:column="25">if <condition pos:line="3183" pos:column="28">(<expr><name pos:line="3183" pos:column="29">val</name></expr>)</condition><then pos:line="3183" pos:column="33">
			<block pos:line="3184" pos:column="25">{
				<if pos:line="3185" pos:column="33">if <condition pos:line="3185" pos:column="36">(<expr><op:operator pos:line="3185" pos:column="37">!</op:operator><call><name pos:line="3185" pos:column="38">lstrcmp</name><argument_list pos:line="3185" pos:column="45">(<argument><expr><name pos:line="3185" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3185" pos:column="51">TEXT</name><argument_list pos:line="3185" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3185" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3185" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3186" pos:column="41">_nppGUI</name><op:operator pos:line="3186" pos:column="48">.</op:operator><name pos:line="3186" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3186" pos:column="60">|=</op:operator> <name pos:line="3186" pos:column="63">TAB_CLOSEBUTTON</name></expr>;</expr_stmt></then>
				<else pos:line="3187" pos:column="33">else <if pos:line="3187" pos:column="38">if <condition pos:line="3187" pos:column="41">(<expr><op:operator pos:line="3187" pos:column="42">!</op:operator><call><name pos:line="3187" pos:column="43">lstrcmp</name><argument_list pos:line="3187" pos:column="50">(<argument><expr><name pos:line="3187" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3187" pos:column="56">TEXT</name><argument_list pos:line="3187" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3187" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3187" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3188" pos:column="41">_nppGUI</name><op:operator pos:line="3188" pos:column="48">.</op:operator><name pos:line="3188" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3188" pos:column="60">|=</op:operator> <lit:literal type="number" pos:line="3188" pos:column="63">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3189" pos:column="33">else
					<expr_stmt><expr><name pos:line="3190" pos:column="41">isFailed</name> <op:operator pos:line="3190" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3190" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3193" pos:column="25">val</name> <op:operator pos:line="3193" pos:column="29">=</op:operator> <call><name><name pos:line="3193" pos:column="31">element</name><op:operator pos:line="3193" pos:column="38">-&gt;</op:operator><name pos:line="3193" pos:column="40">Attribute</name></name><argument_list pos:line="3193" pos:column="49">(<argument><expr><call><name pos:line="3193" pos:column="50">TEXT</name><argument_list pos:line="3193" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3193" pos:column="55">"doubleClick2Close"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3194" pos:column="25">if <condition pos:line="3194" pos:column="28">(<expr><name pos:line="3194" pos:column="29">val</name></expr>)</condition><then pos:line="3194" pos:column="33">
			<block pos:line="3195" pos:column="25">{
				<if pos:line="3196" pos:column="33">if <condition pos:line="3196" pos:column="36">(<expr><op:operator pos:line="3196" pos:column="37">!</op:operator><call><name pos:line="3196" pos:column="38">lstrcmp</name><argument_list pos:line="3196" pos:column="45">(<argument><expr><name pos:line="3196" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3196" pos:column="51">TEXT</name><argument_list pos:line="3196" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3196" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3196" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3197" pos:column="41">_nppGUI</name><op:operator pos:line="3197" pos:column="48">.</op:operator><name pos:line="3197" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3197" pos:column="60">|=</op:operator> <name pos:line="3197" pos:column="63">TAB_DBCLK2CLOSE</name></expr>;</expr_stmt></then>
				<else pos:line="3198" pos:column="33">else <if pos:line="3198" pos:column="38">if <condition pos:line="3198" pos:column="41">(<expr><op:operator pos:line="3198" pos:column="42">!</op:operator><call><name pos:line="3198" pos:column="43">lstrcmp</name><argument_list pos:line="3198" pos:column="50">(<argument><expr><name pos:line="3198" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3198" pos:column="56">TEXT</name><argument_list pos:line="3198" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3198" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3198" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3199" pos:column="41">_nppGUI</name><op:operator pos:line="3199" pos:column="48">.</op:operator><name pos:line="3199" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3199" pos:column="60">|=</op:operator> <lit:literal type="number" pos:line="3199" pos:column="63">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3200" pos:column="33">else
					<expr_stmt><expr><name pos:line="3201" pos:column="41">isFailed</name> <op:operator pos:line="3201" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3201" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="3203" pos:column="25">val</name> <op:operator pos:line="3203" pos:column="29">=</op:operator> <call><name><name pos:line="3203" pos:column="31">element</name><op:operator pos:line="3203" pos:column="38">-&gt;</op:operator><name pos:line="3203" pos:column="40">Attribute</name></name><argument_list pos:line="3203" pos:column="49">(<argument><expr><call><name pos:line="3203" pos:column="50">TEXT</name><argument_list pos:line="3203" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3203" pos:column="55">"vertical"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3204" pos:column="25">if <condition pos:line="3204" pos:column="28">(<expr><name pos:line="3204" pos:column="29">val</name></expr>)</condition><then pos:line="3204" pos:column="33">
			<block pos:line="3205" pos:column="25">{
				<if pos:line="3206" pos:column="33">if <condition pos:line="3206" pos:column="36">(<expr><op:operator pos:line="3206" pos:column="37">!</op:operator><call><name pos:line="3206" pos:column="38">lstrcmp</name><argument_list pos:line="3206" pos:column="45">(<argument><expr><name pos:line="3206" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3206" pos:column="51">TEXT</name><argument_list pos:line="3206" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3206" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3206" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3207" pos:column="41">_nppGUI</name><op:operator pos:line="3207" pos:column="48">.</op:operator><name pos:line="3207" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3207" pos:column="60">|=</op:operator> <name pos:line="3207" pos:column="63">TAB_VERTICAL</name></expr>;</expr_stmt></then>
				<else pos:line="3208" pos:column="33">else <if pos:line="3208" pos:column="38">if <condition pos:line="3208" pos:column="41">(<expr><op:operator pos:line="3208" pos:column="42">!</op:operator><call><name pos:line="3208" pos:column="43">lstrcmp</name><argument_list pos:line="3208" pos:column="50">(<argument><expr><name pos:line="3208" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3208" pos:column="56">TEXT</name><argument_list pos:line="3208" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3208" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3208" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3209" pos:column="41">_nppGUI</name><op:operator pos:line="3209" pos:column="48">.</op:operator><name pos:line="3209" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3209" pos:column="60">|=</op:operator> <lit:literal type="number" pos:line="3209" pos:column="63">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3210" pos:column="33">else
					<expr_stmt><expr><name pos:line="3211" pos:column="41">isFailed</name> <op:operator pos:line="3211" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3211" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3214" pos:column="25">val</name> <op:operator pos:line="3214" pos:column="29">=</op:operator> <call><name><name pos:line="3214" pos:column="31">element</name><op:operator pos:line="3214" pos:column="38">-&gt;</op:operator><name pos:line="3214" pos:column="40">Attribute</name></name><argument_list pos:line="3214" pos:column="49">(<argument><expr><call><name pos:line="3214" pos:column="50">TEXT</name><argument_list pos:line="3214" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3214" pos:column="55">"multiLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3215" pos:column="25">if <condition pos:line="3215" pos:column="28">(<expr><name pos:line="3215" pos:column="29">val</name></expr>)</condition><then pos:line="3215" pos:column="33">
			<block pos:line="3216" pos:column="25">{
				<if pos:line="3217" pos:column="33">if <condition pos:line="3217" pos:column="36">(<expr><op:operator pos:line="3217" pos:column="37">!</op:operator><call><name pos:line="3217" pos:column="38">lstrcmp</name><argument_list pos:line="3217" pos:column="45">(<argument><expr><name pos:line="3217" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3217" pos:column="51">TEXT</name><argument_list pos:line="3217" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3217" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3217" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3218" pos:column="41">_nppGUI</name><op:operator pos:line="3218" pos:column="48">.</op:operator><name pos:line="3218" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3218" pos:column="60">|=</op:operator> <name pos:line="3218" pos:column="63">TAB_MULTILINE</name></expr>;</expr_stmt></then>
				<else pos:line="3219" pos:column="33">else <if pos:line="3219" pos:column="38">if <condition pos:line="3219" pos:column="41">(<expr><op:operator pos:line="3219" pos:column="42">!</op:operator><call><name pos:line="3219" pos:column="43">lstrcmp</name><argument_list pos:line="3219" pos:column="50">(<argument><expr><name pos:line="3219" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3219" pos:column="56">TEXT</name><argument_list pos:line="3219" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3219" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3219" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3220" pos:column="41">_nppGUI</name><op:operator pos:line="3220" pos:column="48">.</op:operator><name pos:line="3220" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3220" pos:column="60">|=</op:operator> <lit:literal type="number" pos:line="3220" pos:column="63">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3221" pos:column="33">else
					<expr_stmt><expr><name pos:line="3222" pos:column="41">isFailed</name> <op:operator pos:line="3222" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3222" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="3224" pos:column="25">val</name> <op:operator pos:line="3224" pos:column="29">=</op:operator> <call><name><name pos:line="3224" pos:column="31">element</name><op:operator pos:line="3224" pos:column="38">-&gt;</op:operator><name pos:line="3224" pos:column="40">Attribute</name></name><argument_list pos:line="3224" pos:column="49">(<argument><expr><call><name pos:line="3224" pos:column="50">TEXT</name><argument_list pos:line="3224" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3224" pos:column="55">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3225" pos:column="25">if <condition pos:line="3225" pos:column="28">(<expr><name pos:line="3225" pos:column="29">val</name></expr>)</condition><then pos:line="3225" pos:column="33">
			<block pos:line="3226" pos:column="25">{
				<if pos:line="3227" pos:column="33">if <condition pos:line="3227" pos:column="36">(<expr><op:operator pos:line="3227" pos:column="37">!</op:operator><call><name pos:line="3227" pos:column="38">lstrcmp</name><argument_list pos:line="3227" pos:column="45">(<argument><expr><name pos:line="3227" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3227" pos:column="51">TEXT</name><argument_list pos:line="3227" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3227" pos:column="56">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3227" pos:column="64">
					<expr_stmt><expr><name><name pos:line="3228" pos:column="41">_nppGUI</name><op:operator pos:line="3228" pos:column="48">.</op:operator><name pos:line="3228" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3228" pos:column="60">|=</op:operator> <name pos:line="3228" pos:column="63">TAB_HIDE</name></expr>;</expr_stmt></then>
				<else pos:line="3229" pos:column="33">else <if pos:line="3229" pos:column="38">if <condition pos:line="3229" pos:column="41">(<expr><op:operator pos:line="3229" pos:column="42">!</op:operator><call><name pos:line="3229" pos:column="43">lstrcmp</name><argument_list pos:line="3229" pos:column="50">(<argument><expr><name pos:line="3229" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3229" pos:column="56">TEXT</name><argument_list pos:line="3229" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3229" pos:column="61">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3229" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3230" pos:column="41">_nppGUI</name><op:operator pos:line="3230" pos:column="48">.</op:operator><name pos:line="3230" pos:column="49">_tabStatus</name></name> <op:operator pos:line="3230" pos:column="60">|=</op:operator> <lit:literal type="number" pos:line="3230" pos:column="63">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3231" pos:column="33">else
					<expr_stmt><expr><name pos:line="3232" pos:column="41">isFailed</name> <op:operator pos:line="3232" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3232" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>
			<if pos:line="3234" pos:column="25">if <condition pos:line="3234" pos:column="28">(<expr><name pos:line="3234" pos:column="29">isFailed</name></expr>)</condition><then pos:line="3234" pos:column="38">
				<expr_stmt><expr><name><name pos:line="3235" pos:column="33">_nppGUI</name><op:operator pos:line="3235" pos:column="40">.</op:operator><name pos:line="3235" pos:column="41">_tabStatus</name></name> <op:operator pos:line="3235" pos:column="52">=</op:operator> <name pos:line="3235" pos:column="54">oldValue</name></expr>;</expr_stmt></then></if>


		}</block></then>
		<else pos:line="3239" pos:column="17">else <if pos:line="3239" pos:column="22">if <condition pos:line="3239" pos:column="25">(<expr><op:operator pos:line="3239" pos:column="26">!</op:operator><call><name pos:line="3239" pos:column="27">lstrcmp</name><argument_list pos:line="3239" pos:column="34">(<argument><expr><name pos:line="3239" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3239" pos:column="39">TEXT</name><argument_list pos:line="3239" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3239" pos:column="44">"Auto-detection"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3239" pos:column="63">
		<block pos:line="3240" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3241" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3241" pos:column="35">*</type:modifier></type><name pos:line="3241" pos:column="36">n</name> <init pos:line="3241" pos:column="38">= <expr><call><name><name pos:line="3241" pos:column="40">childNode</name><op:operator pos:line="3241" pos:column="49">-&gt;</op:operator><name pos:line="3241" pos:column="51">FirstChild</name></name><argument_list pos:line="3241" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3242" pos:column="25">if <condition pos:line="3242" pos:column="28">(<expr><name pos:line="3242" pos:column="29">n</name></expr>)</condition><then pos:line="3242" pos:column="31">
			<block pos:line="3243" pos:column="25">{
				<expr_stmt><expr><name pos:line="3244" pos:column="33">val</name> <op:operator pos:line="3244" pos:column="37">=</op:operator> <call><name><name pos:line="3244" pos:column="39">n</name><op:operator pos:line="3244" pos:column="40">-&gt;</op:operator><name pos:line="3244" pos:column="42">Value</name></name><argument_list pos:line="3244" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3245" pos:column="33">if <condition pos:line="3245" pos:column="36">(<expr><name pos:line="3245" pos:column="37">val</name></expr>)</condition><then pos:line="3245" pos:column="41">
				<block pos:line="3246" pos:column="33">{
					<if pos:line="3247" pos:column="41">if <condition pos:line="3247" pos:column="44">(<expr><op:operator pos:line="3247" pos:column="45">!</op:operator><call><name pos:line="3247" pos:column="46">lstrcmp</name><argument_list pos:line="3247" pos:column="53">(<argument><expr><name pos:line="3247" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3247" pos:column="59">TEXT</name><argument_list pos:line="3247" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3247" pos:column="64">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3247" pos:column="72">
						<expr_stmt><expr><name><name pos:line="3248" pos:column="49">_nppGUI</name><op:operator pos:line="3248" pos:column="56">.</op:operator><name pos:line="3248" pos:column="57">_fileAutoDetection</name></name> <op:operator pos:line="3248" pos:column="76">=</op:operator> <name pos:line="3248" pos:column="78">cdEnabled</name></expr>;</expr_stmt></then>
					<else pos:line="3249" pos:column="41">else <if pos:line="3249" pos:column="46">if <condition pos:line="3249" pos:column="49">(<expr><op:operator pos:line="3249" pos:column="50">!</op:operator><call><name pos:line="3249" pos:column="51">lstrcmp</name><argument_list pos:line="3249" pos:column="58">(<argument><expr><name pos:line="3249" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3249" pos:column="64">TEXT</name><argument_list pos:line="3249" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3249" pos:column="69">"auto"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3249" pos:column="78">
            			<expr_stmt><expr><name><name pos:line="3250" pos:column="33">_nppGUI</name><op:operator pos:line="3250" pos:column="40">.</op:operator><name pos:line="3250" pos:column="41">_fileAutoDetection</name></name> <op:operator pos:line="3250" pos:column="60">=</op:operator> <name pos:line="3250" pos:column="62">cdAutoUpdate</name></expr>;</expr_stmt></then>
					<else pos:line="3251" pos:column="41">else <if pos:line="3251" pos:column="46">if <condition pos:line="3251" pos:column="49">(<expr><op:operator pos:line="3251" pos:column="50">!</op:operator><call><name pos:line="3251" pos:column="51">lstrcmp</name><argument_list pos:line="3251" pos:column="58">(<argument><expr><name pos:line="3251" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3251" pos:column="64">TEXT</name><argument_list pos:line="3251" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3251" pos:column="69">"Update2End"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3251" pos:column="84">
            			<expr_stmt><expr><name><name pos:line="3252" pos:column="33">_nppGUI</name><op:operator pos:line="3252" pos:column="40">.</op:operator><name pos:line="3252" pos:column="41">_fileAutoDetection</name></name> <op:operator pos:line="3252" pos:column="60">=</op:operator> <name pos:line="3252" pos:column="62">cdGo2end</name></expr>;</expr_stmt></then>
					<else pos:line="3253" pos:column="41">else <if pos:line="3253" pos:column="46">if <condition pos:line="3253" pos:column="49">(<expr><op:operator pos:line="3253" pos:column="50">!</op:operator><call><name pos:line="3253" pos:column="51">lstrcmp</name><argument_list pos:line="3253" pos:column="58">(<argument><expr><name pos:line="3253" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3253" pos:column="64">TEXT</name><argument_list pos:line="3253" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3253" pos:column="69">"autoUpdate2End"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3253" pos:column="88">
            			<expr_stmt><expr><name><name pos:line="3254" pos:column="33">_nppGUI</name><op:operator pos:line="3254" pos:column="40">.</op:operator><name pos:line="3254" pos:column="41">_fileAutoDetection</name></name> <op:operator pos:line="3254" pos:column="60">=</op:operator> <name pos:line="3254" pos:column="62">cdAutoUpdateGo2end</name></expr>;</expr_stmt></then>
         			<else pos:line="3255" pos:column="33">else <comment type="line" pos:line="3255" pos:column="38">//(!lstrcmp(val, TEXT("no")))</comment>
            			<expr_stmt><expr><name><name pos:line="3256" pos:column="33">_nppGUI</name><op:operator pos:line="3256" pos:column="40">.</op:operator><name pos:line="3256" pos:column="41">_fileAutoDetection</name></name> <op:operator pos:line="3256" pos:column="60">=</op:operator> <name pos:line="3256" pos:column="62">cdDisabled</name></expr>;</expr_stmt></else></if></else></if></else></if></else></if>

					<expr_stmt><expr><name><name pos:line="3258" pos:column="41">_nppGUI</name><op:operator pos:line="3258" pos:column="48">.</op:operator><name pos:line="3258" pos:column="49">_fileAutoDetectionOriginalValue</name></name> <op:operator pos:line="3258" pos:column="81">=</op:operator> <name><name pos:line="3258" pos:column="83">_nppGUI</name><op:operator pos:line="3258" pos:column="90">.</op:operator><name pos:line="3258" pos:column="91">_fileAutoDetection</name></name></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3263" pos:column="17">else <if pos:line="3263" pos:column="22">if <condition pos:line="3263" pos:column="25">(<expr><op:operator pos:line="3263" pos:column="26">!</op:operator><call><name pos:line="3263" pos:column="27">lstrcmp</name><argument_list pos:line="3263" pos:column="34">(<argument><expr><name pos:line="3263" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3263" pos:column="39">TEXT</name><argument_list pos:line="3263" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3263" pos:column="44">"TrayIcon"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3263" pos:column="57">
		<block pos:line="3264" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3265" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3265" pos:column="35">*</type:modifier></type><name pos:line="3265" pos:column="36">n</name> <init pos:line="3265" pos:column="38">= <expr><call><name><name pos:line="3265" pos:column="40">childNode</name><op:operator pos:line="3265" pos:column="49">-&gt;</op:operator><name pos:line="3265" pos:column="51">FirstChild</name></name><argument_list pos:line="3265" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3266" pos:column="25">if <condition pos:line="3266" pos:column="28">(<expr><name pos:line="3266" pos:column="29">n</name></expr>)</condition><then pos:line="3266" pos:column="31">
			<block pos:line="3267" pos:column="25">{
				<expr_stmt><expr><name pos:line="3268" pos:column="33">val</name> <op:operator pos:line="3268" pos:column="37">=</op:operator> <call><name><name pos:line="3268" pos:column="39">n</name><op:operator pos:line="3268" pos:column="40">-&gt;</op:operator><name pos:line="3268" pos:column="42">Value</name></name><argument_list pos:line="3268" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3269" pos:column="33">if <condition pos:line="3269" pos:column="36">(<expr><name pos:line="3269" pos:column="37">val</name></expr>)</condition><then pos:line="3269" pos:column="41">
				<block pos:line="3270" pos:column="33">{
					<if pos:line="3271" pos:column="41">if <condition pos:line="3271" pos:column="44">(<expr><op:operator pos:line="3271" pos:column="45">!</op:operator><call><name pos:line="3271" pos:column="46">lstrcmp</name><argument_list pos:line="3271" pos:column="53">(<argument><expr><name pos:line="3271" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3271" pos:column="59">TEXT</name><argument_list pos:line="3271" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3271" pos:column="64">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3271" pos:column="72">
						<expr_stmt><expr><name><name pos:line="3272" pos:column="49">_nppGUI</name><op:operator pos:line="3272" pos:column="56">.</op:operator><name pos:line="3272" pos:column="57">_isMinimizedToTray</name></name> <op:operator pos:line="3272" pos:column="76">=</op:operator> <lit:literal type="boolean" pos:line="3272" pos:column="78">true</lit:literal></expr>;</expr_stmt></then></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3276" pos:column="17">else <if pos:line="3276" pos:column="22">if <condition pos:line="3276" pos:column="25">(<expr><op:operator pos:line="3276" pos:column="26">!</op:operator><call><name pos:line="3276" pos:column="27">lstrcmp</name><argument_list pos:line="3276" pos:column="34">(<argument><expr><name pos:line="3276" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3276" pos:column="39">TEXT</name><argument_list pos:line="3276" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3276" pos:column="44">"RememberLastSession"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3276" pos:column="68">
		<block pos:line="3277" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3278" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3278" pos:column="35">*</type:modifier></type><name pos:line="3278" pos:column="36">n</name> <init pos:line="3278" pos:column="38">= <expr><call><name><name pos:line="3278" pos:column="40">childNode</name><op:operator pos:line="3278" pos:column="49">-&gt;</op:operator><name pos:line="3278" pos:column="51">FirstChild</name></name><argument_list pos:line="3278" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3279" pos:column="25">if <condition pos:line="3279" pos:column="28">(<expr><name pos:line="3279" pos:column="29">n</name></expr>)</condition><then pos:line="3279" pos:column="31">
			<block pos:line="3280" pos:column="25">{
				<expr_stmt><expr><name pos:line="3281" pos:column="33">val</name> <op:operator pos:line="3281" pos:column="37">=</op:operator> <call><name><name pos:line="3281" pos:column="39">n</name><op:operator pos:line="3281" pos:column="40">-&gt;</op:operator><name pos:line="3281" pos:column="42">Value</name></name><argument_list pos:line="3281" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3282" pos:column="33">if <condition pos:line="3282" pos:column="36">(<expr><name pos:line="3282" pos:column="37">val</name></expr>)</condition><then pos:line="3282" pos:column="41">
				<block pos:line="3283" pos:column="33">{
					<if pos:line="3284" pos:column="41">if <condition pos:line="3284" pos:column="44">(<expr><op:operator pos:line="3284" pos:column="45">!</op:operator><call><name pos:line="3284" pos:column="46">lstrcmp</name><argument_list pos:line="3284" pos:column="53">(<argument><expr><name pos:line="3284" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3284" pos:column="59">TEXT</name><argument_list pos:line="3284" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3284" pos:column="64">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3284" pos:column="72">
						<expr_stmt><expr><name><name pos:line="3285" pos:column="49">_nppGUI</name><op:operator pos:line="3285" pos:column="56">.</op:operator><name pos:line="3285" pos:column="57">_rememberLastSession</name></name> <op:operator pos:line="3285" pos:column="78">=</op:operator> <lit:literal type="boolean" pos:line="3285" pos:column="80">true</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3286" pos:column="41">else
						<expr_stmt><expr><name><name pos:line="3287" pos:column="49">_nppGUI</name><op:operator pos:line="3287" pos:column="56">.</op:operator><name pos:line="3287" pos:column="57">_rememberLastSession</name></name> <op:operator pos:line="3287" pos:column="78">=</op:operator> <lit:literal type="boolean" pos:line="3287" pos:column="80">false</lit:literal></expr>;</expr_stmt></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3292" pos:column="17">else <if pos:line="3292" pos:column="22">if <condition pos:line="3292" pos:column="25">(<expr><op:operator pos:line="3292" pos:column="26">!</op:operator><call><name pos:line="3292" pos:column="27">lstrcmp</name><argument_list pos:line="3292" pos:column="34">(<argument><expr><name pos:line="3292" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3292" pos:column="39">TEXT</name><argument_list pos:line="3292" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3292" pos:column="44">"MaitainIndent"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3292" pos:column="62">
		<block pos:line="3293" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3294" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3294" pos:column="35">*</type:modifier></type><name pos:line="3294" pos:column="36">n</name> <init pos:line="3294" pos:column="38">= <expr><call><name><name pos:line="3294" pos:column="40">childNode</name><op:operator pos:line="3294" pos:column="49">-&gt;</op:operator><name pos:line="3294" pos:column="51">FirstChild</name></name><argument_list pos:line="3294" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3295" pos:column="25">if <condition pos:line="3295" pos:column="28">(<expr><name pos:line="3295" pos:column="29">n</name></expr>)</condition><then pos:line="3295" pos:column="31">
			<block pos:line="3296" pos:column="25">{
				<expr_stmt><expr><name pos:line="3297" pos:column="33">val</name> <op:operator pos:line="3297" pos:column="37">=</op:operator> <call><name><name pos:line="3297" pos:column="39">n</name><op:operator pos:line="3297" pos:column="40">-&gt;</op:operator><name pos:line="3297" pos:column="42">Value</name></name><argument_list pos:line="3297" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3298" pos:column="33">if <condition pos:line="3298" pos:column="36">(<expr><name pos:line="3298" pos:column="37">val</name></expr>)</condition><then pos:line="3298" pos:column="41">
				<block pos:line="3299" pos:column="33">{
					<if pos:line="3300" pos:column="41">if <condition pos:line="3300" pos:column="44">(<expr><op:operator pos:line="3300" pos:column="45">!</op:operator><call><name pos:line="3300" pos:column="46">lstrcmp</name><argument_list pos:line="3300" pos:column="53">(<argument><expr><name pos:line="3300" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3300" pos:column="59">TEXT</name><argument_list pos:line="3300" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3300" pos:column="64">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3300" pos:column="72">
						<expr_stmt><expr><name><name pos:line="3301" pos:column="49">_nppGUI</name><op:operator pos:line="3301" pos:column="56">.</op:operator><name pos:line="3301" pos:column="57">_maitainIndent</name></name> <op:operator pos:line="3301" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="3301" pos:column="74">true</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3302" pos:column="41">else
						<expr_stmt><expr><name><name pos:line="3303" pos:column="49">_nppGUI</name><op:operator pos:line="3303" pos:column="56">.</op:operator><name pos:line="3303" pos:column="57">_maitainIndent</name></name> <op:operator pos:line="3303" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="3303" pos:column="74">false</lit:literal></expr>;</expr_stmt></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3308" pos:column="17">else <if pos:line="3308" pos:column="22">if <condition pos:line="3308" pos:column="25">(<expr><op:operator pos:line="3308" pos:column="26">!</op:operator><call><name pos:line="3308" pos:column="27">lstrcmp</name><argument_list pos:line="3308" pos:column="34">(<argument><expr><name pos:line="3308" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3308" pos:column="39">TEXT</name><argument_list pos:line="3308" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3308" pos:column="44">"SmartHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3308" pos:column="63">
		<block pos:line="3309" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3310" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3310" pos:column="35">*</type:modifier></type><name pos:line="3310" pos:column="36">n</name> <init pos:line="3310" pos:column="38">= <expr><call><name><name pos:line="3310" pos:column="40">childNode</name><op:operator pos:line="3310" pos:column="49">-&gt;</op:operator><name pos:line="3310" pos:column="51">FirstChild</name></name><argument_list pos:line="3310" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3311" pos:column="25">if <condition pos:line="3311" pos:column="28">(<expr><name pos:line="3311" pos:column="29">n</name></expr>)</condition><then pos:line="3311" pos:column="31">
			<block pos:line="3312" pos:column="25">{
				<expr_stmt><expr><name pos:line="3313" pos:column="33">val</name> <op:operator pos:line="3313" pos:column="37">=</op:operator> <call><name><name pos:line="3313" pos:column="39">n</name><op:operator pos:line="3313" pos:column="40">-&gt;</op:operator><name pos:line="3313" pos:column="42">Value</name></name><argument_list pos:line="3313" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3314" pos:column="33">if <condition pos:line="3314" pos:column="36">(<expr><name pos:line="3314" pos:column="37">val</name></expr>)</condition><then pos:line="3314" pos:column="41">
				<block pos:line="3315" pos:column="33">{
					<if pos:line="3316" pos:column="41">if <condition pos:line="3316" pos:column="44">(<expr><op:operator pos:line="3316" pos:column="45">!</op:operator><call><name pos:line="3316" pos:column="46">lstrcmp</name><argument_list pos:line="3316" pos:column="53">(<argument><expr><name pos:line="3316" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3316" pos:column="59">TEXT</name><argument_list pos:line="3316" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3316" pos:column="64">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3316" pos:column="72">
						<expr_stmt><expr><name><name pos:line="3317" pos:column="49">_nppGUI</name><op:operator pos:line="3317" pos:column="56">.</op:operator><name pos:line="3317" pos:column="57">_enableSmartHilite</name></name> <op:operator pos:line="3317" pos:column="76">=</op:operator> <lit:literal type="boolean" pos:line="3317" pos:column="78">true</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3318" pos:column="41">else
						<expr_stmt><expr><name><name pos:line="3319" pos:column="49">_nppGUI</name><op:operator pos:line="3319" pos:column="56">.</op:operator><name pos:line="3319" pos:column="57">_enableSmartHilite</name></name> <op:operator pos:line="3319" pos:column="76">=</op:operator> <lit:literal type="boolean" pos:line="3319" pos:column="78">false</lit:literal></expr>;</expr_stmt></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3324" pos:column="17">else <if pos:line="3324" pos:column="22">if <condition pos:line="3324" pos:column="25">(<expr><op:operator pos:line="3324" pos:column="26">!</op:operator><call><name pos:line="3324" pos:column="27">lstrcmp</name><argument_list pos:line="3324" pos:column="34">(<argument><expr><name pos:line="3324" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3324" pos:column="39">TEXT</name><argument_list pos:line="3324" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3324" pos:column="44">"SmartHighLightCaseSensitive"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3324" pos:column="76">
		<block pos:line="3325" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3326" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3326" pos:column="35">*</type:modifier></type><name pos:line="3326" pos:column="36">n</name> <init pos:line="3326" pos:column="38">= <expr><call><name><name pos:line="3326" pos:column="40">childNode</name><op:operator pos:line="3326" pos:column="49">-&gt;</op:operator><name pos:line="3326" pos:column="51">FirstChild</name></name><argument_list pos:line="3326" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3327" pos:column="25">if <condition pos:line="3327" pos:column="28">(<expr><name pos:line="3327" pos:column="29">n</name></expr>)</condition><then pos:line="3327" pos:column="31">
			<block pos:line="3328" pos:column="25">{
				<expr_stmt><expr><name pos:line="3329" pos:column="33">val</name> <op:operator pos:line="3329" pos:column="37">=</op:operator> <call><name><name pos:line="3329" pos:column="39">n</name><op:operator pos:line="3329" pos:column="40">-&gt;</op:operator><name pos:line="3329" pos:column="42">Value</name></name><argument_list pos:line="3329" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3330" pos:column="33">if <condition pos:line="3330" pos:column="36">(<expr><name pos:line="3330" pos:column="37">val</name></expr>)</condition><then pos:line="3330" pos:column="41">
				<block pos:line="3331" pos:column="33">{
					<if pos:line="3332" pos:column="41">if <condition pos:line="3332" pos:column="44">(<expr><op:operator pos:line="3332" pos:column="45">!</op:operator><call><name pos:line="3332" pos:column="46">lstrcmp</name><argument_list pos:line="3332" pos:column="53">(<argument><expr><name pos:line="3332" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3332" pos:column="59">TEXT</name><argument_list pos:line="3332" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3332" pos:column="64">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3332" pos:column="72">
						<expr_stmt><expr><name><name pos:line="3333" pos:column="49">_nppGUI</name><op:operator pos:line="3333" pos:column="56">.</op:operator><name pos:line="3333" pos:column="57">_smartHiliteCaseSensitive</name></name> <op:operator pos:line="3333" pos:column="83">=</op:operator> <lit:literal type="boolean" pos:line="3333" pos:column="85">true</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3334" pos:column="41">else
						<expr_stmt><expr><name><name pos:line="3335" pos:column="49">_nppGUI</name><op:operator pos:line="3335" pos:column="56">.</op:operator><name pos:line="3335" pos:column="57">_smartHiliteCaseSensitive</name></name> <op:operator pos:line="3335" pos:column="83">=</op:operator> <lit:literal type="boolean" pos:line="3335" pos:column="85">false</lit:literal></expr>;</expr_stmt></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3340" pos:column="17">else <if pos:line="3340" pos:column="22">if <condition pos:line="3340" pos:column="25">(<expr><op:operator pos:line="3340" pos:column="26">!</op:operator><call><name pos:line="3340" pos:column="27">lstrcmp</name><argument_list pos:line="3340" pos:column="34">(<argument><expr><name pos:line="3340" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3340" pos:column="39">TEXT</name><argument_list pos:line="3340" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3340" pos:column="44">"TagsMatchHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3340" pos:column="67">
		<block pos:line="3341" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3342" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3342" pos:column="35">*</type:modifier></type><name pos:line="3342" pos:column="36">n</name> <init pos:line="3342" pos:column="38">= <expr><call><name><name pos:line="3342" pos:column="40">childNode</name><op:operator pos:line="3342" pos:column="49">-&gt;</op:operator><name pos:line="3342" pos:column="51">FirstChild</name></name><argument_list pos:line="3342" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3343" pos:column="25">if <condition pos:line="3343" pos:column="28">(<expr><name pos:line="3343" pos:column="29">n</name></expr>)</condition><then pos:line="3343" pos:column="31">
			<block pos:line="3344" pos:column="25">{
				<expr_stmt><expr><name pos:line="3345" pos:column="33">val</name> <op:operator pos:line="3345" pos:column="37">=</op:operator> <call><name><name pos:line="3345" pos:column="39">n</name><op:operator pos:line="3345" pos:column="40">-&gt;</op:operator><name pos:line="3345" pos:column="42">Value</name></name><argument_list pos:line="3345" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3346" pos:column="33">if <condition pos:line="3346" pos:column="36">(<expr><name pos:line="3346" pos:column="37">val</name></expr>)</condition><then pos:line="3346" pos:column="41">
				<block pos:line="3347" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="3348" pos:column="41">_nppGUI</name><op:operator pos:line="3348" pos:column="48">.</op:operator><name pos:line="3348" pos:column="49">_enableTagsMatchHilite</name></name> <op:operator pos:line="3348" pos:column="72">=</op:operator> <op:operator pos:line="3348" pos:column="74">!</op:operator><call><name pos:line="3348" pos:column="75">lstrcmp</name><argument_list pos:line="3348" pos:column="82">(<argument><expr><name pos:line="3348" pos:column="83">val</name></expr></argument>, <argument><expr><call><name pos:line="3348" pos:column="88">TEXT</name><argument_list pos:line="3348" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="3348" pos:column="93">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><specifier pos:line="3349" pos:column="41">const</specifier> <name pos:line="3349" pos:column="47">TCHAR</name> <type:modifier pos:line="3349" pos:column="53">*</type:modifier></type><name pos:line="3349" pos:column="54">tahl</name> <init pos:line="3349" pos:column="59">= <expr><call><name><name pos:line="3349" pos:column="61">element</name><op:operator pos:line="3349" pos:column="68">-&gt;</op:operator><name pos:line="3349" pos:column="70">Attribute</name></name><argument_list pos:line="3349" pos:column="79">(<argument><expr><call><name pos:line="3349" pos:column="80">TEXT</name><argument_list pos:line="3349" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="3349" pos:column="85">"TagAttrHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="3350" pos:column="41">if <condition pos:line="3350" pos:column="44">(<expr><name pos:line="3350" pos:column="45">tahl</name></expr>)</condition><then pos:line="3350" pos:column="50"> 
						<expr_stmt><expr><name><name pos:line="3351" pos:column="49">_nppGUI</name><op:operator pos:line="3351" pos:column="56">.</op:operator><name pos:line="3351" pos:column="57">_enableTagAttrsHilite</name></name> <op:operator pos:line="3351" pos:column="79">=</op:operator> <op:operator pos:line="3351" pos:column="81">!</op:operator><call><name pos:line="3351" pos:column="82">lstrcmp</name><argument_list pos:line="3351" pos:column="89">(<argument><expr><name pos:line="3351" pos:column="90">tahl</name></expr></argument>, <argument><expr><call><name pos:line="3351" pos:column="96">TEXT</name><argument_list pos:line="3351" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="3351" pos:column="101">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

					<expr_stmt><expr><name pos:line="3353" pos:column="41">tahl</name> <op:operator pos:line="3353" pos:column="46">=</op:operator> <call><name><name pos:line="3353" pos:column="48">element</name><op:operator pos:line="3353" pos:column="55">-&gt;</op:operator><name pos:line="3353" pos:column="57">Attribute</name></name><argument_list pos:line="3353" pos:column="66">(<argument><expr><call><name pos:line="3353" pos:column="67">TEXT</name><argument_list pos:line="3353" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="3353" pos:column="72">"HighLightNonHtmlZone"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="3354" pos:column="41">if <condition pos:line="3354" pos:column="44">(<expr><name pos:line="3354" pos:column="45">tahl</name></expr>)</condition><then pos:line="3354" pos:column="50"> 
						<expr_stmt><expr><name><name pos:line="3355" pos:column="49">_nppGUI</name><op:operator pos:line="3355" pos:column="56">.</op:operator><name pos:line="3355" pos:column="57">_enableHiliteNonHTMLZone</name></name> <op:operator pos:line="3355" pos:column="82">=</op:operator> <op:operator pos:line="3355" pos:column="84">!</op:operator><call><name pos:line="3355" pos:column="85">lstrcmp</name><argument_list pos:line="3355" pos:column="92">(<argument><expr><name pos:line="3355" pos:column="93">tahl</name></expr></argument>, <argument><expr><call><name pos:line="3355" pos:column="99">TEXT</name><argument_list pos:line="3355" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="3355" pos:column="104">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3360" pos:column="17">else <if pos:line="3360" pos:column="22">if <condition pos:line="3360" pos:column="25">(<expr><op:operator pos:line="3360" pos:column="26">!</op:operator><call><name pos:line="3360" pos:column="27">lstrcmp</name><argument_list pos:line="3360" pos:column="34">(<argument><expr><name pos:line="3360" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3360" pos:column="39">TEXT</name><argument_list pos:line="3360" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3360" pos:column="44">"TaskList"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3360" pos:column="57">
		<block pos:line="3361" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3362" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3362" pos:column="35">*</type:modifier></type><name pos:line="3362" pos:column="36">n</name> <init pos:line="3362" pos:column="38">= <expr><call><name><name pos:line="3362" pos:column="40">childNode</name><op:operator pos:line="3362" pos:column="49">-&gt;</op:operator><name pos:line="3362" pos:column="51">FirstChild</name></name><argument_list pos:line="3362" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3363" pos:column="25">if <condition pos:line="3363" pos:column="28">(<expr><name pos:line="3363" pos:column="29">n</name></expr>)</condition><then pos:line="3363" pos:column="31">
			<block pos:line="3364" pos:column="25">{
				<expr_stmt><expr><name pos:line="3365" pos:column="33">val</name> <op:operator pos:line="3365" pos:column="37">=</op:operator> <call><name><name pos:line="3365" pos:column="39">n</name><op:operator pos:line="3365" pos:column="40">-&gt;</op:operator><name pos:line="3365" pos:column="42">Value</name></name><argument_list pos:line="3365" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3366" pos:column="33">if <condition pos:line="3366" pos:column="36">(<expr><name pos:line="3366" pos:column="37">val</name></expr>)</condition><then pos:line="3366" pos:column="41">
				<block pos:line="3367" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="3368" pos:column="41">_nppGUI</name><op:operator pos:line="3368" pos:column="48">.</op:operator><name pos:line="3368" pos:column="49">_doTaskList</name></name> <op:operator pos:line="3368" pos:column="61">=</op:operator> <op:operator pos:line="3368" pos:column="63">(</op:operator><op:operator pos:line="3368" pos:column="64">!</op:operator><call><name pos:line="3368" pos:column="65">lstrcmp</name><argument_list pos:line="3368" pos:column="72">(<argument><expr><name pos:line="3368" pos:column="73">val</name></expr></argument>, <argument><expr><call><name pos:line="3368" pos:column="78">TEXT</name><argument_list pos:line="3368" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="3368" pos:column="83">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="3368" pos:column="90">)</op:operator><op:operator pos:line="3368" pos:column="91">?</op:operator><lit:literal type="boolean" pos:line="3368" pos:column="92">true</lit:literal><op:operator pos:line="3368" pos:column="96">:</op:operator><lit:literal type="boolean" pos:line="3368" pos:column="97">false</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3373" pos:column="17">else <if pos:line="3373" pos:column="22">if <condition pos:line="3373" pos:column="25">(<expr><op:operator pos:line="3373" pos:column="26">!</op:operator><call><name pos:line="3373" pos:column="27">lstrcmp</name><argument_list pos:line="3373" pos:column="34">(<argument><expr><name pos:line="3373" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3373" pos:column="39">TEXT</name><argument_list pos:line="3373" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3373" pos:column="44">"MRU"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3373" pos:column="52">
		<block pos:line="3374" pos:column="17">{	
			<decl_stmt><decl><type><name pos:line="3375" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3375" pos:column="35">*</type:modifier></type><name pos:line="3375" pos:column="36">n</name> <init pos:line="3375" pos:column="38">= <expr><call><name><name pos:line="3375" pos:column="40">childNode</name><op:operator pos:line="3375" pos:column="49">-&gt;</op:operator><name pos:line="3375" pos:column="51">FirstChild</name></name><argument_list pos:line="3375" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3376" pos:column="25">if <condition pos:line="3376" pos:column="28">(<expr><name pos:line="3376" pos:column="29">n</name></expr>)</condition><then pos:line="3376" pos:column="31">
			<block pos:line="3377" pos:column="25">{
				<expr_stmt><expr><name pos:line="3378" pos:column="33">val</name> <op:operator pos:line="3378" pos:column="37">=</op:operator> <call><name><name pos:line="3378" pos:column="39">n</name><op:operator pos:line="3378" pos:column="40">-&gt;</op:operator><name pos:line="3378" pos:column="42">Value</name></name><argument_list pos:line="3378" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3379" pos:column="33">if <condition pos:line="3379" pos:column="36">(<expr><name pos:line="3379" pos:column="37">val</name></expr>)</condition><then pos:line="3379" pos:column="41">
				<block pos:line="3380" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="3381" pos:column="41">_nppGUI</name><op:operator pos:line="3381" pos:column="48">.</op:operator><name pos:line="3381" pos:column="49">_styleMRU</name></name> <op:operator pos:line="3381" pos:column="59">=</op:operator> <op:operator pos:line="3381" pos:column="61">(</op:operator><op:operator pos:line="3381" pos:column="62">!</op:operator><call><name pos:line="3381" pos:column="63">lstrcmp</name><argument_list pos:line="3381" pos:column="70">(<argument><expr><name pos:line="3381" pos:column="71">val</name></expr></argument>, <argument><expr><call><name pos:line="3381" pos:column="76">TEXT</name><argument_list pos:line="3381" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="3381" pos:column="81">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="3381" pos:column="88">)</op:operator><op:operator pos:line="3381" pos:column="89">?</op:operator><lit:literal type="boolean" pos:line="3381" pos:column="90">true</lit:literal><op:operator pos:line="3381" pos:column="94">:</op:operator><lit:literal type="boolean" pos:line="3381" pos:column="95">false</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3386" pos:column="17">else <if pos:line="3386" pos:column="22">if <condition pos:line="3386" pos:column="25">(<expr><op:operator pos:line="3386" pos:column="26">!</op:operator><call><name pos:line="3386" pos:column="27">lstrcmp</name><argument_list pos:line="3386" pos:column="34">(<argument><expr><name pos:line="3386" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3386" pos:column="39">TEXT</name><argument_list pos:line="3386" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3386" pos:column="44">"URL"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3386" pos:column="52">
		<block pos:line="3387" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3388" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3388" pos:column="35">*</type:modifier></type><name pos:line="3388" pos:column="36">n</name> <init pos:line="3388" pos:column="38">= <expr><call><name><name pos:line="3388" pos:column="40">childNode</name><op:operator pos:line="3388" pos:column="49">-&gt;</op:operator><name pos:line="3388" pos:column="51">FirstChild</name></name><argument_list pos:line="3388" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3389" pos:column="25">if <condition pos:line="3389" pos:column="28">(<expr><name pos:line="3389" pos:column="29">n</name></expr>)</condition><then pos:line="3389" pos:column="31">
			<block pos:line="3390" pos:column="25">{
				<expr_stmt><expr><name pos:line="3391" pos:column="33">val</name> <op:operator pos:line="3391" pos:column="37">=</op:operator> <call><name><name pos:line="3391" pos:column="39">n</name><op:operator pos:line="3391" pos:column="40">-&gt;</op:operator><name pos:line="3391" pos:column="42">Value</name></name><argument_list pos:line="3391" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3392" pos:column="33">if <condition pos:line="3392" pos:column="36">(<expr><name pos:line="3392" pos:column="37">val</name></expr>)</condition><then pos:line="3392" pos:column="41">
				<block pos:line="3393" pos:column="33">{
					<if pos:line="3394" pos:column="41">if <condition pos:line="3394" pos:column="44">(<expr><op:operator pos:line="3394" pos:column="45">!</op:operator><call><name pos:line="3394" pos:column="46">lstrcmp</name><argument_list pos:line="3394" pos:column="53">(<argument><expr><name pos:line="3394" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3394" pos:column="59">TEXT</name><argument_list pos:line="3394" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3394" pos:column="64">"1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3394" pos:column="70">
						<expr_stmt><expr><name><name pos:line="3395" pos:column="49">_nppGUI</name><op:operator pos:line="3395" pos:column="56">.</op:operator><name pos:line="3395" pos:column="57">_styleURL</name></name> <op:operator pos:line="3395" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="3395" pos:column="69">1</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3396" pos:column="41">else <if pos:line="3396" pos:column="46">if <condition pos:line="3396" pos:column="49">(<expr><op:operator pos:line="3396" pos:column="50">!</op:operator><call><name pos:line="3396" pos:column="51">lstrcmp</name><argument_list pos:line="3396" pos:column="58">(<argument><expr><name pos:line="3396" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3396" pos:column="64">TEXT</name><argument_list pos:line="3396" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3396" pos:column="69">"2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3396" pos:column="75">
						<expr_stmt><expr><name><name pos:line="3397" pos:column="49">_nppGUI</name><op:operator pos:line="3397" pos:column="56">.</op:operator><name pos:line="3397" pos:column="57">_styleURL</name></name> <op:operator pos:line="3397" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="3397" pos:column="69">2</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3398" pos:column="41">else
						<expr_stmt><expr><name><name pos:line="3399" pos:column="49">_nppGUI</name><op:operator pos:line="3399" pos:column="56">.</op:operator><name pos:line="3399" pos:column="57">_styleURL</name></name> <op:operator pos:line="3399" pos:column="67">=</op:operator> <lit:literal type="number" pos:line="3399" pos:column="69">0</lit:literal></expr>;</expr_stmt></else></if></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>

		<else pos:line="3404" pos:column="17">else <if pos:line="3404" pos:column="22">if <condition pos:line="3404" pos:column="25">(<expr><op:operator pos:line="3404" pos:column="26">!</op:operator><call><name pos:line="3404" pos:column="27">lstrcmp</name><argument_list pos:line="3404" pos:column="34">(<argument><expr><name pos:line="3404" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3404" pos:column="39">TEXT</name><argument_list pos:line="3404" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3404" pos:column="44">"CheckHistoryFiles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3404" pos:column="66">
		<block pos:line="3405" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3406" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3406" pos:column="35">*</type:modifier></type><name pos:line="3406" pos:column="36">n</name> <init pos:line="3406" pos:column="38">= <expr><call><name><name pos:line="3406" pos:column="40">childNode</name><op:operator pos:line="3406" pos:column="49">-&gt;</op:operator><name pos:line="3406" pos:column="51">FirstChild</name></name><argument_list pos:line="3406" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3407" pos:column="25">if <condition pos:line="3407" pos:column="28">(<expr><name pos:line="3407" pos:column="29">n</name></expr>)</condition><then pos:line="3407" pos:column="31">
			<block pos:line="3408" pos:column="25">{
				<expr_stmt><expr><name pos:line="3409" pos:column="33">val</name> <op:operator pos:line="3409" pos:column="37">=</op:operator> <call><name><name pos:line="3409" pos:column="39">n</name><op:operator pos:line="3409" pos:column="40">-&gt;</op:operator><name pos:line="3409" pos:column="42">Value</name></name><argument_list pos:line="3409" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3410" pos:column="33">if <condition pos:line="3410" pos:column="36">(<expr><name pos:line="3410" pos:column="37">val</name></expr>)</condition><then pos:line="3410" pos:column="41">
				<block pos:line="3411" pos:column="33">{
					<if pos:line="3412" pos:column="41">if <condition pos:line="3412" pos:column="44">(<expr><op:operator pos:line="3412" pos:column="45">!</op:operator><call><name pos:line="3412" pos:column="46">lstrcmp</name><argument_list pos:line="3412" pos:column="53">(<argument><expr><name pos:line="3412" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3412" pos:column="59">TEXT</name><argument_list pos:line="3412" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3412" pos:column="64">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3412" pos:column="71">
						<expr_stmt><expr><name><name pos:line="3413" pos:column="49">_nppGUI</name><op:operator pos:line="3413" pos:column="56">.</op:operator><name pos:line="3413" pos:column="57">_checkHistoryFiles</name></name> <op:operator pos:line="3413" pos:column="76">=</op:operator> <lit:literal type="boolean" pos:line="3413" pos:column="78">false</lit:literal></expr>;</expr_stmt></then></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3417" pos:column="17">else <if pos:line="3417" pos:column="22">if <condition pos:line="3417" pos:column="25">(<expr><op:operator pos:line="3417" pos:column="26">!</op:operator><call><name pos:line="3417" pos:column="27">lstrcmp</name><argument_list pos:line="3417" pos:column="34">(<argument><expr><name pos:line="3417" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3417" pos:column="39">TEXT</name><argument_list pos:line="3417" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3417" pos:column="44">"ScintillaViewsSplitter"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3417" pos:column="71">
		<block pos:line="3418" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3419" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3419" pos:column="35">*</type:modifier></type><name pos:line="3419" pos:column="36">n</name> <init pos:line="3419" pos:column="38">= <expr><call><name><name pos:line="3419" pos:column="40">childNode</name><op:operator pos:line="3419" pos:column="49">-&gt;</op:operator><name pos:line="3419" pos:column="51">FirstChild</name></name><argument_list pos:line="3419" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3420" pos:column="25">if <condition pos:line="3420" pos:column="28">(<expr><name pos:line="3420" pos:column="29">n</name></expr>)</condition><then pos:line="3420" pos:column="31">
			<block pos:line="3421" pos:column="25">{
				<expr_stmt><expr><name pos:line="3422" pos:column="33">val</name> <op:operator pos:line="3422" pos:column="37">=</op:operator> <call><name><name pos:line="3422" pos:column="39">n</name><op:operator pos:line="3422" pos:column="40">-&gt;</op:operator><name pos:line="3422" pos:column="42">Value</name></name><argument_list pos:line="3422" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3423" pos:column="33">if <condition pos:line="3423" pos:column="36">(<expr><name pos:line="3423" pos:column="37">val</name></expr>)</condition><then pos:line="3423" pos:column="41">
				<block pos:line="3424" pos:column="33">{
					<if pos:line="3425" pos:column="41">if <condition pos:line="3425" pos:column="44">(<expr><op:operator pos:line="3425" pos:column="45">!</op:operator><call><name pos:line="3425" pos:column="46">lstrcmp</name><argument_list pos:line="3425" pos:column="53">(<argument><expr><name pos:line="3425" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3425" pos:column="59">TEXT</name><argument_list pos:line="3425" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3425" pos:column="64">"vertical"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3425" pos:column="77">
						<expr_stmt><expr><name><name pos:line="3426" pos:column="49">_nppGUI</name><op:operator pos:line="3426" pos:column="56">.</op:operator><name pos:line="3426" pos:column="57">_splitterPos</name></name> <op:operator pos:line="3426" pos:column="70">=</op:operator> <name pos:line="3426" pos:column="72">POS_VERTICAL</name></expr>;</expr_stmt></then>
					<else pos:line="3427" pos:column="41">else <if pos:line="3427" pos:column="46">if <condition pos:line="3427" pos:column="49">(<expr><op:operator pos:line="3427" pos:column="50">!</op:operator><call><name pos:line="3427" pos:column="51">lstrcmp</name><argument_list pos:line="3427" pos:column="58">(<argument><expr><name pos:line="3427" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3427" pos:column="64">TEXT</name><argument_list pos:line="3427" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3427" pos:column="69">"horizontal"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3427" pos:column="84">
						<expr_stmt><expr><name><name pos:line="3428" pos:column="49">_nppGUI</name><op:operator pos:line="3428" pos:column="56">.</op:operator><name pos:line="3428" pos:column="57">_splitterPos</name></name> <op:operator pos:line="3428" pos:column="70">=</op:operator> <name pos:line="3428" pos:column="72">POS_HORIZOTAL</name></expr>;</expr_stmt></then></if></else></if>
				}</block></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3432" pos:column="17">else <if pos:line="3432" pos:column="22">if <condition pos:line="3432" pos:column="25">(<expr><op:operator pos:line="3432" pos:column="26">!</op:operator><call><name pos:line="3432" pos:column="27">lstrcmp</name><argument_list pos:line="3432" pos:column="34">(<argument><expr><name pos:line="3432" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3432" pos:column="39">TEXT</name><argument_list pos:line="3432" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3432" pos:column="44">"UserDefineDlg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3432" pos:column="62">
		<block pos:line="3433" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3434" pos:column="25">bool</name></type> <name pos:line="3434" pos:column="30">isFailed</name> <init pos:line="3434" pos:column="39">= <expr><lit:literal type="boolean" pos:line="3434" pos:column="41">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="3435" pos:column="25">int</name></type> <name pos:line="3435" pos:column="29">oldValue</name> <init pos:line="3435" pos:column="38">= <expr><name><name pos:line="3435" pos:column="40">_nppGUI</name><op:operator pos:line="3435" pos:column="47">.</op:operator><name pos:line="3435" pos:column="48">_userDefineDlgStatus</name></name></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="3437" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3437" pos:column="35">*</type:modifier></type><name pos:line="3437" pos:column="36">n</name> <init pos:line="3437" pos:column="38">= <expr><call><name><name pos:line="3437" pos:column="40">childNode</name><op:operator pos:line="3437" pos:column="49">-&gt;</op:operator><name pos:line="3437" pos:column="51">FirstChild</name></name><argument_list pos:line="3437" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3438" pos:column="25">if <condition pos:line="3438" pos:column="28">(<expr><name pos:line="3438" pos:column="29">n</name></expr>)</condition><then pos:line="3438" pos:column="31">
			<block pos:line="3439" pos:column="25">{
				<expr_stmt><expr><name pos:line="3440" pos:column="33">val</name> <op:operator pos:line="3440" pos:column="37">=</op:operator> <call><name><name pos:line="3440" pos:column="39">n</name><op:operator pos:line="3440" pos:column="40">-&gt;</op:operator><name pos:line="3440" pos:column="42">Value</name></name><argument_list pos:line="3440" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3441" pos:column="33">if <condition pos:line="3441" pos:column="36">(<expr><name pos:line="3441" pos:column="37">val</name></expr>)</condition><then pos:line="3441" pos:column="41"> 
				<block pos:line="3442" pos:column="33">{
					<if pos:line="3443" pos:column="41">if <condition pos:line="3443" pos:column="44">(<expr><op:operator pos:line="3443" pos:column="45">!</op:operator><call><name pos:line="3443" pos:column="46">lstrcmp</name><argument_list pos:line="3443" pos:column="53">(<argument><expr><name pos:line="3443" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="3443" pos:column="59">TEXT</name><argument_list pos:line="3443" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="3443" pos:column="64">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3443" pos:column="73">
						<expr_stmt><expr><name><name pos:line="3444" pos:column="49">_nppGUI</name><op:operator pos:line="3444" pos:column="56">.</op:operator><name pos:line="3444" pos:column="57">_userDefineDlgStatus</name></name> <op:operator pos:line="3444" pos:column="78">=</op:operator> <lit:literal type="number" pos:line="3444" pos:column="80">0</lit:literal></expr>;</expr_stmt></then>
					<else pos:line="3445" pos:column="41">else <if pos:line="3445" pos:column="46">if <condition pos:line="3445" pos:column="49">(<expr><op:operator pos:line="3445" pos:column="50">!</op:operator><call><name pos:line="3445" pos:column="51">lstrcmp</name><argument_list pos:line="3445" pos:column="58">(<argument><expr><name pos:line="3445" pos:column="59">val</name></expr></argument>, <argument><expr><call><name pos:line="3445" pos:column="64">TEXT</name><argument_list pos:line="3445" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3445" pos:column="69">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3445" pos:column="78">
						<expr_stmt><expr><name><name pos:line="3446" pos:column="49">_nppGUI</name><op:operator pos:line="3446" pos:column="56">.</op:operator><name pos:line="3446" pos:column="57">_userDefineDlgStatus</name></name> <op:operator pos:line="3446" pos:column="78">=</op:operator> <name pos:line="3446" pos:column="80">UDD_SHOW</name></expr>;</expr_stmt></then>
					<else pos:line="3447" pos:column="41">else 
						<expr_stmt><expr><name pos:line="3448" pos:column="49">isFailed</name> <op:operator pos:line="3448" pos:column="58">=</op:operator> <lit:literal type="boolean" pos:line="3448" pos:column="60">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
				}</block></then></if>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="3451" pos:column="25">val</name> <op:operator pos:line="3451" pos:column="29">=</op:operator> <call><name><name pos:line="3451" pos:column="31">element</name><op:operator pos:line="3451" pos:column="38">-&gt;</op:operator><name pos:line="3451" pos:column="40">Attribute</name></name><argument_list pos:line="3451" pos:column="49">(<argument><expr><call><name pos:line="3451" pos:column="50">TEXT</name><argument_list pos:line="3451" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3451" pos:column="55">"position"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3452" pos:column="25">if <condition pos:line="3452" pos:column="28">(<expr><name pos:line="3452" pos:column="29">val</name></expr>)</condition><then pos:line="3452" pos:column="33"> 
			<block pos:line="3453" pos:column="25">{
				<if pos:line="3454" pos:column="33">if <condition pos:line="3454" pos:column="36">(<expr><op:operator pos:line="3454" pos:column="37">!</op:operator><call><name pos:line="3454" pos:column="38">lstrcmp</name><argument_list pos:line="3454" pos:column="45">(<argument><expr><name pos:line="3454" pos:column="46">val</name></expr></argument>, <argument><expr><call><name pos:line="3454" pos:column="51">TEXT</name><argument_list pos:line="3454" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3454" pos:column="56">"docked"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3454" pos:column="67">
					<expr_stmt><expr><name><name pos:line="3455" pos:column="41">_nppGUI</name><op:operator pos:line="3455" pos:column="48">.</op:operator><name pos:line="3455" pos:column="49">_userDefineDlgStatus</name></name> <op:operator pos:line="3455" pos:column="70">|=</op:operator> <name pos:line="3455" pos:column="73">UDD_DOCKED</name></expr>;</expr_stmt></then>
				<else pos:line="3456" pos:column="33">else <if pos:line="3456" pos:column="38">if <condition pos:line="3456" pos:column="41">(<expr><op:operator pos:line="3456" pos:column="42">!</op:operator><call><name pos:line="3456" pos:column="43">lstrcmp</name><argument_list pos:line="3456" pos:column="50">(<argument><expr><name pos:line="3456" pos:column="51">val</name></expr></argument>, <argument><expr><call><name pos:line="3456" pos:column="56">TEXT</name><argument_list pos:line="3456" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3456" pos:column="61">"undocked"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3456" pos:column="74">
					<expr_stmt><expr><name><name pos:line="3457" pos:column="41">_nppGUI</name><op:operator pos:line="3457" pos:column="48">.</op:operator><name pos:line="3457" pos:column="49">_userDefineDlgStatus</name></name> <op:operator pos:line="3457" pos:column="70">|=</op:operator> <lit:literal type="number" pos:line="3457" pos:column="73">0</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3458" pos:column="33">else 
					<expr_stmt><expr><name pos:line="3459" pos:column="41">isFailed</name> <op:operator pos:line="3459" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3459" pos:column="52">true</lit:literal></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>
			<if pos:line="3461" pos:column="25">if <condition pos:line="3461" pos:column="28">(<expr><name pos:line="3461" pos:column="29">isFailed</name></expr>)</condition><then pos:line="3461" pos:column="38">
				<expr_stmt><expr><name><name pos:line="3462" pos:column="33">_nppGUI</name><op:operator pos:line="3462" pos:column="40">.</op:operator><name pos:line="3462" pos:column="41">_userDefineDlgStatus</name></name> <op:operator pos:line="3462" pos:column="62">=</op:operator> <name pos:line="3462" pos:column="64">oldValue</name></expr>;</expr_stmt></then></if>
		}</block></then>
		<else pos:line="3464" pos:column="17">else <if pos:line="3464" pos:column="22">if <condition pos:line="3464" pos:column="25">(<expr><op:operator pos:line="3464" pos:column="26">!</op:operator><call><name pos:line="3464" pos:column="27">lstrcmp</name><argument_list pos:line="3464" pos:column="34">(<argument><expr><name pos:line="3464" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3464" pos:column="39">TEXT</name><argument_list pos:line="3464" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3464" pos:column="44">"TabSetting"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3464" pos:column="59">
		<block pos:line="3465" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3466" pos:column="25">int</name></type> <name pos:line="3466" pos:column="29">i</name></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="3467" pos:column="25">val</name> <op:operator pos:line="3467" pos:column="29">=</op:operator> <call><name><name pos:line="3467" pos:column="31">element</name><op:operator pos:line="3467" pos:column="38">-&gt;</op:operator><name pos:line="3467" pos:column="40">Attribute</name></name><argument_list pos:line="3467" pos:column="49">(<argument><expr><call><name pos:line="3467" pos:column="50">TEXT</name><argument_list pos:line="3467" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3467" pos:column="55">"size"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3467" pos:column="64">&amp;</op:operator><name pos:line="3467" pos:column="65">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3468" pos:column="25">if <condition pos:line="3468" pos:column="28">(<expr><name pos:line="3468" pos:column="29">val</name></expr>)</condition><then pos:line="3468" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3469" pos:column="33">_nppGUI</name><op:operator pos:line="3469" pos:column="40">.</op:operator><name pos:line="3469" pos:column="41">_tabSize</name></name> <op:operator pos:line="3469" pos:column="50">=</op:operator> <name pos:line="3469" pos:column="52">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3471" pos:column="25">if <condition pos:line="3471" pos:column="28">(<expr><op:operator pos:line="3471" pos:column="29">(</op:operator><name><name pos:line="3471" pos:column="30">_nppGUI</name><op:operator pos:line="3471" pos:column="37">.</op:operator><name pos:line="3471" pos:column="38">_tabSize</name></name> <op:operator pos:line="3471" pos:column="47">==</op:operator> <op:operator pos:line="3471" pos:column="50">-</op:operator><lit:literal type="number" pos:line="3471" pos:column="51">1</lit:literal><op:operator pos:line="3471" pos:column="52">)</op:operator> <op:operator pos:line="3471" pos:column="54">||</op:operator> <op:operator pos:line="3471" pos:column="57">(</op:operator><name><name pos:line="3471" pos:column="58">_nppGUI</name><op:operator pos:line="3471" pos:column="65">.</op:operator><name pos:line="3471" pos:column="66">_tabSize</name></name> <op:operator pos:line="3471" pos:column="75">==</op:operator> <lit:literal type="number" pos:line="3471" pos:column="78">0</lit:literal><op:operator pos:line="3471" pos:column="79">)</op:operator></expr>)</condition><then pos:line="3471" pos:column="81">
				<expr_stmt><expr><name><name pos:line="3472" pos:column="33">_nppGUI</name><op:operator pos:line="3472" pos:column="40">.</op:operator><name pos:line="3472" pos:column="41">_tabSize</name></name> <op:operator pos:line="3472" pos:column="50">=</op:operator> <lit:literal type="number" pos:line="3472" pos:column="52">8</lit:literal></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3474" pos:column="25">val</name> <op:operator pos:line="3474" pos:column="29">=</op:operator> <call><name><name pos:line="3474" pos:column="31">element</name><op:operator pos:line="3474" pos:column="38">-&gt;</op:operator><name pos:line="3474" pos:column="40">Attribute</name></name><argument_list pos:line="3474" pos:column="49">(<argument><expr><call><name pos:line="3474" pos:column="50">TEXT</name><argument_list pos:line="3474" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3474" pos:column="55">"replaceBySpace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3475" pos:column="25">if <condition pos:line="3475" pos:column="28">(<expr><name pos:line="3475" pos:column="29">val</name></expr>)</condition><then pos:line="3475" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3476" pos:column="33">_nppGUI</name><op:operator pos:line="3476" pos:column="40">.</op:operator><name pos:line="3476" pos:column="41">_tabReplacedBySpace</name></name> <op:operator pos:line="3476" pos:column="61">=</op:operator> <op:operator pos:line="3476" pos:column="63">(</op:operator><op:operator pos:line="3476" pos:column="64">!</op:operator><call><name pos:line="3476" pos:column="65">lstrcmp</name><argument_list pos:line="3476" pos:column="72">(<argument><expr><name pos:line="3476" pos:column="73">val</name></expr></argument>, <argument><expr><call><name pos:line="3476" pos:column="78">TEXT</name><argument_list pos:line="3476" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="3476" pos:column="83">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="3476" pos:column="90">)</op:operator></expr>;</expr_stmt></then></if>
		}</block></then>

		<else pos:line="3479" pos:column="17">else <if pos:line="3479" pos:column="22">if <condition pos:line="3479" pos:column="25">(<expr><op:operator pos:line="3479" pos:column="26">!</op:operator><call><name pos:line="3479" pos:column="27">lstrcmp</name><argument_list pos:line="3479" pos:column="34">(<argument><expr><name pos:line="3479" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3479" pos:column="39">TEXT</name><argument_list pos:line="3479" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3479" pos:column="44">"Caret"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3479" pos:column="54">
		<block pos:line="3480" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3481" pos:column="25">int</name></type> <name pos:line="3481" pos:column="29">i</name></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="3482" pos:column="25">val</name> <op:operator pos:line="3482" pos:column="29">=</op:operator> <call><name><name pos:line="3482" pos:column="31">element</name><op:operator pos:line="3482" pos:column="38">-&gt;</op:operator><name pos:line="3482" pos:column="40">Attribute</name></name><argument_list pos:line="3482" pos:column="49">(<argument><expr><call><name pos:line="3482" pos:column="50">TEXT</name><argument_list pos:line="3482" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3482" pos:column="55">"width"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3482" pos:column="65">&amp;</op:operator><name pos:line="3482" pos:column="66">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3483" pos:column="25">if <condition pos:line="3483" pos:column="28">(<expr><name pos:line="3483" pos:column="29">val</name></expr>)</condition><then pos:line="3483" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3484" pos:column="33">_nppGUI</name><op:operator pos:line="3484" pos:column="40">.</op:operator><name pos:line="3484" pos:column="41">_caretWidth</name></name> <op:operator pos:line="3484" pos:column="53">=</op:operator> <name pos:line="3484" pos:column="55">i</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3486" pos:column="25">val</name> <op:operator pos:line="3486" pos:column="29">=</op:operator> <call><name><name pos:line="3486" pos:column="31">element</name><op:operator pos:line="3486" pos:column="38">-&gt;</op:operator><name pos:line="3486" pos:column="40">Attribute</name></name><argument_list pos:line="3486" pos:column="49">(<argument><expr><call><name pos:line="3486" pos:column="50">TEXT</name><argument_list pos:line="3486" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3486" pos:column="55">"blinkRate"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3486" pos:column="69">&amp;</op:operator><name pos:line="3486" pos:column="70">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3487" pos:column="25">if <condition pos:line="3487" pos:column="28">(<expr><name pos:line="3487" pos:column="29">val</name></expr>)</condition><then pos:line="3487" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3488" pos:column="33">_nppGUI</name><op:operator pos:line="3488" pos:column="40">.</op:operator><name pos:line="3488" pos:column="41">_caretBlinkRate</name></name> <op:operator pos:line="3488" pos:column="57">=</op:operator> <name pos:line="3488" pos:column="59">i</name></expr>;</expr_stmt></then></if>
		}</block></then>

        <else pos:line="3491" pos:column="9">else <if pos:line="3491" pos:column="14">if <condition pos:line="3491" pos:column="17">(<expr><op:operator pos:line="3491" pos:column="18">!</op:operator><call><name pos:line="3491" pos:column="19">lstrcmp</name><argument_list pos:line="3491" pos:column="26">(<argument><expr><name pos:line="3491" pos:column="27">nm</name></expr></argument>, <argument><expr><call><name pos:line="3491" pos:column="31">TEXT</name><argument_list pos:line="3491" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="3491" pos:column="36">"ScintillaGlobalSettings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3491" pos:column="64">
		<block pos:line="3492" pos:column="17">{
			<expr_stmt><expr><name pos:line="3493" pos:column="25">val</name> <op:operator pos:line="3493" pos:column="29">=</op:operator> <call><name><name pos:line="3493" pos:column="31">element</name><op:operator pos:line="3493" pos:column="38">-&gt;</op:operator><name pos:line="3493" pos:column="40">Attribute</name></name><argument_list pos:line="3493" pos:column="49">(<argument><expr><call><name pos:line="3493" pos:column="50">TEXT</name><argument_list pos:line="3493" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3493" pos:column="55">"enableMultiSelection"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3494" pos:column="25">if <condition pos:line="3494" pos:column="28">(<expr><name pos:line="3494" pos:column="29">val</name> <op:operator pos:line="3494" pos:column="33">&amp;&amp;</op:operator> <call><name pos:line="3494" pos:column="36">lstrcmp</name><argument_list pos:line="3494" pos:column="43">(<argument><expr><name pos:line="3494" pos:column="44">val</name></expr></argument>, <argument><expr><call><name pos:line="3494" pos:column="49">TEXT</name><argument_list pos:line="3494" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="3494" pos:column="54">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="3494" pos:column="62">==</op:operator> <lit:literal type="number" pos:line="3494" pos:column="65">0</lit:literal></expr>)</condition><then pos:line="3494" pos:column="67">
				<expr_stmt><expr><name><name pos:line="3495" pos:column="33">_nppGUI</name><op:operator pos:line="3495" pos:column="40">.</op:operator><name pos:line="3495" pos:column="41">_enableMultiSelection</name></name> <op:operator pos:line="3495" pos:column="63">=</op:operator> <lit:literal type="boolean" pos:line="3495" pos:column="65">true</lit:literal></expr>;</expr_stmt></then></if>
		}</block></then>

		<else pos:line="3498" pos:column="17">else <if pos:line="3498" pos:column="22">if <condition pos:line="3498" pos:column="25">(<expr><op:operator pos:line="3498" pos:column="26">!</op:operator><call><name pos:line="3498" pos:column="27">lstrcmp</name><argument_list pos:line="3498" pos:column="34">(<argument><expr><name pos:line="3498" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3498" pos:column="39">TEXT</name><argument_list pos:line="3498" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3498" pos:column="44">"AppPosition"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3498" pos:column="60">
		<block pos:line="3499" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3500" pos:column="25">RECT</name></type> <name pos:line="3500" pos:column="30">oldRect</name> <init pos:line="3500" pos:column="38">= <expr><name><name pos:line="3500" pos:column="40">_nppGUI</name><op:operator pos:line="3500" pos:column="47">.</op:operator><name pos:line="3500" pos:column="48">_appPos</name></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="3501" pos:column="25">bool</name></type> <name pos:line="3501" pos:column="30">fuckUp</name> <init pos:line="3501" pos:column="37">= <expr><lit:literal type="boolean" pos:line="3501" pos:column="39">true</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="3502" pos:column="25">int</name></type> <name pos:line="3502" pos:column="29">i</name></decl>;</decl_stmt>

			<if pos:line="3504" pos:column="25">if <condition pos:line="3504" pos:column="28">(<expr><call><name><name pos:line="3504" pos:column="29">element</name><op:operator pos:line="3504" pos:column="36">-&gt;</op:operator><name pos:line="3504" pos:column="38">Attribute</name></name><argument_list pos:line="3504" pos:column="47">(<argument><expr><call><name pos:line="3504" pos:column="48">TEXT</name><argument_list pos:line="3504" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3504" pos:column="53">"x"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3504" pos:column="59">&amp;</op:operator><name pos:line="3504" pos:column="60">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3504" pos:column="63">
			<block pos:line="3505" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3506" pos:column="33">_nppGUI</name><op:operator pos:line="3506" pos:column="40">.</op:operator><name pos:line="3506" pos:column="41">_appPos</name><op:operator pos:line="3506" pos:column="48">.</op:operator><name pos:line="3506" pos:column="49">left</name></name> <op:operator pos:line="3506" pos:column="54">=</op:operator> <name pos:line="3506" pos:column="56">i</name></expr>;</expr_stmt>

				<if pos:line="3508" pos:column="33">if <condition pos:line="3508" pos:column="36">(<expr><call><name><name pos:line="3508" pos:column="37">element</name><op:operator pos:line="3508" pos:column="44">-&gt;</op:operator><name pos:line="3508" pos:column="46">Attribute</name></name><argument_list pos:line="3508" pos:column="55">(<argument><expr><call><name pos:line="3508" pos:column="56">TEXT</name><argument_list pos:line="3508" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="3508" pos:column="61">"y"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3508" pos:column="67">&amp;</op:operator><name pos:line="3508" pos:column="68">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3508" pos:column="71">
				<block pos:line="3509" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="3510" pos:column="41">_nppGUI</name><op:operator pos:line="3510" pos:column="48">.</op:operator><name pos:line="3510" pos:column="49">_appPos</name><op:operator pos:line="3510" pos:column="56">.</op:operator><name pos:line="3510" pos:column="57">top</name></name> <op:operator pos:line="3510" pos:column="61">=</op:operator> <name pos:line="3510" pos:column="63">i</name></expr>;</expr_stmt>

					<if pos:line="3512" pos:column="41">if <condition pos:line="3512" pos:column="44">(<expr><call><name><name pos:line="3512" pos:column="45">element</name><op:operator pos:line="3512" pos:column="52">-&gt;</op:operator><name pos:line="3512" pos:column="54">Attribute</name></name><argument_list pos:line="3512" pos:column="63">(<argument><expr><call><name pos:line="3512" pos:column="64">TEXT</name><argument_list pos:line="3512" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3512" pos:column="69">"width"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3512" pos:column="79">&amp;</op:operator><name pos:line="3512" pos:column="80">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3512" pos:column="83">
					<block pos:line="3513" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="3514" pos:column="49">_nppGUI</name><op:operator pos:line="3514" pos:column="56">.</op:operator><name pos:line="3514" pos:column="57">_appPos</name><op:operator pos:line="3514" pos:column="64">.</op:operator><name pos:line="3514" pos:column="65">right</name></name> <op:operator pos:line="3514" pos:column="71">=</op:operator> <name pos:line="3514" pos:column="73">i</name></expr>;</expr_stmt>

						<if pos:line="3516" pos:column="49">if <condition pos:line="3516" pos:column="52">(<expr><call><name><name pos:line="3516" pos:column="53">element</name><op:operator pos:line="3516" pos:column="60">-&gt;</op:operator><name pos:line="3516" pos:column="62">Attribute</name></name><argument_list pos:line="3516" pos:column="71">(<argument><expr><call><name pos:line="3516" pos:column="72">TEXT</name><argument_list pos:line="3516" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="3516" pos:column="77">"height"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3516" pos:column="88">&amp;</op:operator><name pos:line="3516" pos:column="89">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3516" pos:column="92">
						<block pos:line="3517" pos:column="49">{
							<expr_stmt><expr><name><name pos:line="3518" pos:column="57">_nppGUI</name><op:operator pos:line="3518" pos:column="64">.</op:operator><name pos:line="3518" pos:column="65">_appPos</name><op:operator pos:line="3518" pos:column="72">.</op:operator><name pos:line="3518" pos:column="73">bottom</name></name> <op:operator pos:line="3518" pos:column="80">=</op:operator> <name pos:line="3518" pos:column="82">i</name></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="3519" pos:column="57">fuckUp</name> <op:operator pos:line="3519" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="3519" pos:column="66">false</lit:literal></expr>;</expr_stmt>
						}</block></then></if>
					}</block></then></if>
				}</block></then></if>
			}</block></then></if>
			<if pos:line="3524" pos:column="25">if <condition pos:line="3524" pos:column="28">(<expr><name pos:line="3524" pos:column="29">fuckUp</name></expr>)</condition><then pos:line="3524" pos:column="36">
				<expr_stmt><expr><name><name pos:line="3525" pos:column="33">_nppGUI</name><op:operator pos:line="3525" pos:column="40">.</op:operator><name pos:line="3525" pos:column="41">_appPos</name></name> <op:operator pos:line="3525" pos:column="49">=</op:operator> <name pos:line="3525" pos:column="51">oldRect</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3527" pos:column="25">val</name> <op:operator pos:line="3527" pos:column="29">=</op:operator> <call><name><name pos:line="3527" pos:column="31">element</name><op:operator pos:line="3527" pos:column="38">-&gt;</op:operator><name pos:line="3527" pos:column="40">Attribute</name></name><argument_list pos:line="3527" pos:column="49">(<argument><expr><call><name pos:line="3527" pos:column="50">TEXT</name><argument_list pos:line="3527" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3527" pos:column="55">"isMaximized"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3528" pos:column="25">if <condition pos:line="3528" pos:column="28">(<expr><name pos:line="3528" pos:column="29">val</name></expr>)</condition><then pos:line="3528" pos:column="33">
			<block pos:line="3529" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3530" pos:column="33">_nppGUI</name><op:operator pos:line="3530" pos:column="40">.</op:operator><name pos:line="3530" pos:column="41">_isMaximized</name></name> <op:operator pos:line="3530" pos:column="54">=</op:operator> <op:operator pos:line="3530" pos:column="56">(</op:operator><call><name pos:line="3530" pos:column="57">lstrcmp</name><argument_list pos:line="3530" pos:column="64">(<argument><expr><name pos:line="3530" pos:column="65">val</name></expr></argument>, <argument><expr><call><name pos:line="3530" pos:column="70">TEXT</name><argument_list pos:line="3530" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="3530" pos:column="75">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="3530" pos:column="83">==</op:operator> <lit:literal type="number" pos:line="3530" pos:column="86">0</lit:literal><op:operator pos:line="3530" pos:column="87">)</op:operator></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then>
		<else pos:line="3533" pos:column="17">else <if pos:line="3533" pos:column="22">if <condition pos:line="3533" pos:column="25">(<expr><op:operator pos:line="3533" pos:column="26">!</op:operator><call><name pos:line="3533" pos:column="27">lstrcmp</name><argument_list pos:line="3533" pos:column="34">(<argument><expr><name pos:line="3533" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3533" pos:column="39">TEXT</name><argument_list pos:line="3533" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3533" pos:column="44">"NewDocDefaultSettings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3533" pos:column="70">
		<block pos:line="3534" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3535" pos:column="25">int</name></type> <name pos:line="3535" pos:column="29">i</name></decl>;</decl_stmt>
			<if pos:line="3536" pos:column="25">if <condition pos:line="3536" pos:column="28">(<expr><call><name><name pos:line="3536" pos:column="29">element</name><op:operator pos:line="3536" pos:column="36">-&gt;</op:operator><name pos:line="3536" pos:column="38">Attribute</name></name><argument_list pos:line="3536" pos:column="47">(<argument><expr><call><name pos:line="3536" pos:column="48">TEXT</name><argument_list pos:line="3536" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3536" pos:column="53">"format"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3536" pos:column="64">&amp;</op:operator><name pos:line="3536" pos:column="65">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3536" pos:column="68">
				<expr_stmt><expr><name><name pos:line="3537" pos:column="33">_nppGUI</name><op:operator pos:line="3537" pos:column="40">.</op:operator><name pos:line="3537" pos:column="41">_newDocDefaultSettings</name><op:operator pos:line="3537" pos:column="63">.</op:operator><name pos:line="3537" pos:column="64">_format</name></name> <op:operator pos:line="3537" pos:column="72">=</op:operator> <op:operator pos:line="3537" pos:column="74">(</op:operator><name pos:line="3537" pos:column="75">formatType</name><op:operator pos:line="3537" pos:column="85">)</op:operator><name pos:line="3537" pos:column="86">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3539" pos:column="25">if <condition pos:line="3539" pos:column="28">(<expr><call><name><name pos:line="3539" pos:column="29">element</name><op:operator pos:line="3539" pos:column="36">-&gt;</op:operator><name pos:line="3539" pos:column="38">Attribute</name></name><argument_list pos:line="3539" pos:column="47">(<argument><expr><call><name pos:line="3539" pos:column="48">TEXT</name><argument_list pos:line="3539" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3539" pos:column="53">"encoding"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3539" pos:column="66">&amp;</op:operator><name pos:line="3539" pos:column="67">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3539" pos:column="70">
				<expr_stmt><expr><name><name pos:line="3540" pos:column="33">_nppGUI</name><op:operator pos:line="3540" pos:column="40">.</op:operator><name pos:line="3540" pos:column="41">_newDocDefaultSettings</name><op:operator pos:line="3540" pos:column="63">.</op:operator><name pos:line="3540" pos:column="64">_encoding</name></name> <op:operator pos:line="3540" pos:column="74">=</op:operator> <op:operator pos:line="3540" pos:column="76">(</op:operator><name pos:line="3540" pos:column="77">UniMode</name><op:operator pos:line="3540" pos:column="84">)</op:operator><name pos:line="3540" pos:column="85">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3542" pos:column="25">if <condition pos:line="3542" pos:column="28">(<expr><call><name><name pos:line="3542" pos:column="29">element</name><op:operator pos:line="3542" pos:column="36">-&gt;</op:operator><name pos:line="3542" pos:column="38">Attribute</name></name><argument_list pos:line="3542" pos:column="47">(<argument><expr><call><name pos:line="3542" pos:column="48">TEXT</name><argument_list pos:line="3542" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3542" pos:column="53">"lang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3542" pos:column="62">&amp;</op:operator><name pos:line="3542" pos:column="63">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3542" pos:column="66">
				<expr_stmt><expr><name><name pos:line="3543" pos:column="33">_nppGUI</name><op:operator pos:line="3543" pos:column="40">.</op:operator><name pos:line="3543" pos:column="41">_newDocDefaultSettings</name><op:operator pos:line="3543" pos:column="63">.</op:operator><name pos:line="3543" pos:column="64">_lang</name></name> <op:operator pos:line="3543" pos:column="70">=</op:operator> <op:operator pos:line="3543" pos:column="72">(</op:operator><name pos:line="3543" pos:column="73">LangType</name><op:operator pos:line="3543" pos:column="81">)</op:operator><name pos:line="3543" pos:column="82">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3545" pos:column="25">if <condition pos:line="3545" pos:column="28">(<expr><call><name><name pos:line="3545" pos:column="29">element</name><op:operator pos:line="3545" pos:column="36">-&gt;</op:operator><name pos:line="3545" pos:column="38">Attribute</name></name><argument_list pos:line="3545" pos:column="47">(<argument><expr><call><name pos:line="3545" pos:column="48">TEXT</name><argument_list pos:line="3545" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3545" pos:column="53">"codepage"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3545" pos:column="66">&amp;</op:operator><name pos:line="3545" pos:column="67">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3545" pos:column="70">
				<expr_stmt><expr><name><name pos:line="3546" pos:column="33">_nppGUI</name><op:operator pos:line="3546" pos:column="40">.</op:operator><name pos:line="3546" pos:column="41">_newDocDefaultSettings</name><op:operator pos:line="3546" pos:column="63">.</op:operator><name pos:line="3546" pos:column="64">_codepage</name></name> <op:operator pos:line="3546" pos:column="74">=</op:operator> <op:operator pos:line="3546" pos:column="76">(</op:operator><name pos:line="3546" pos:column="77">LangType</name><op:operator pos:line="3546" pos:column="85">)</op:operator><name pos:line="3546" pos:column="86">i</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3548" pos:column="25">val</name> <op:operator pos:line="3548" pos:column="29">=</op:operator> <call><name><name pos:line="3548" pos:column="31">element</name><op:operator pos:line="3548" pos:column="38">-&gt;</op:operator><name pos:line="3548" pos:column="40">Attribute</name></name><argument_list pos:line="3548" pos:column="49">(<argument><expr><call><name pos:line="3548" pos:column="50">TEXT</name><argument_list pos:line="3548" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3548" pos:column="55">"openAnsiAsUTF8"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3549" pos:column="25">if <condition pos:line="3549" pos:column="28">(<expr><name pos:line="3549" pos:column="29">val</name></expr>)</condition><then pos:line="3549" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3550" pos:column="33">_nppGUI</name><op:operator pos:line="3550" pos:column="40">.</op:operator><name pos:line="3550" pos:column="41">_newDocDefaultSettings</name><op:operator pos:line="3550" pos:column="63">.</op:operator><name pos:line="3550" pos:column="64">_openAnsiAsUtf8</name></name> <op:operator pos:line="3550" pos:column="80">=</op:operator> <op:operator pos:line="3550" pos:column="82">(</op:operator><call><name pos:line="3550" pos:column="83">lstrcmp</name><argument_list pos:line="3550" pos:column="90">(<argument><expr><name pos:line="3550" pos:column="91">val</name></expr></argument>, <argument><expr><call><name pos:line="3550" pos:column="96">TEXT</name><argument_list pos:line="3550" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="3550" pos:column="101">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="3550" pos:column="109">==</op:operator> <lit:literal type="number" pos:line="3550" pos:column="112">0</lit:literal><op:operator pos:line="3550" pos:column="113">)</op:operator></expr>;</expr_stmt></then></if>

		}</block></then>
		<else pos:line="3553" pos:column="17">else <if pos:line="3553" pos:column="22">if <condition pos:line="3553" pos:column="25">(<expr><op:operator pos:line="3553" pos:column="26">!</op:operator><call><name pos:line="3553" pos:column="27">lstrcmp</name><argument_list pos:line="3553" pos:column="34">(<argument><expr><name pos:line="3553" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3553" pos:column="39">TEXT</name><argument_list pos:line="3553" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3553" pos:column="44">"langsExcluded"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3553" pos:column="62">
		<block pos:line="3554" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3555" pos:column="25">int</name></type> <name pos:line="3555" pos:column="29">g0</name> <init pos:line="3555" pos:column="32">= <expr><lit:literal type="number" pos:line="3555" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="3555" pos:column="37">// up to  8</comment>
			<decl_stmt><decl><type><name pos:line="3556" pos:column="25">int</name></type> <name pos:line="3556" pos:column="29">g1</name> <init pos:line="3556" pos:column="32">= <expr><lit:literal type="number" pos:line="3556" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="3556" pos:column="37">// up to 16</comment>
			<decl_stmt><decl><type><name pos:line="3557" pos:column="25">int</name></type> <name pos:line="3557" pos:column="29">g2</name> <init pos:line="3557" pos:column="32">= <expr><lit:literal type="number" pos:line="3557" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="3557" pos:column="37">// up to 24</comment>
			<decl_stmt><decl><type><name pos:line="3558" pos:column="25">int</name></type> <name pos:line="3558" pos:column="29">g3</name> <init pos:line="3558" pos:column="32">= <expr><lit:literal type="number" pos:line="3558" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="3558" pos:column="37">// up to 32</comment>
			<decl_stmt><decl><type><name pos:line="3559" pos:column="25">int</name></type> <name pos:line="3559" pos:column="29">g4</name> <init pos:line="3559" pos:column="32">= <expr><lit:literal type="number" pos:line="3559" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="3559" pos:column="37">// up to 40</comment>
			<decl_stmt><decl><type><name pos:line="3560" pos:column="25">int</name></type> <name pos:line="3560" pos:column="29">g5</name> <init pos:line="3560" pos:column="32">= <expr><lit:literal type="number" pos:line="3560" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="3560" pos:column="37">// up to 48</comment>
			<decl_stmt><decl><type><name pos:line="3561" pos:column="25">int</name></type> <name pos:line="3561" pos:column="29">g6</name> <init pos:line="3561" pos:column="32">= <expr><lit:literal type="number" pos:line="3561" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="3561" pos:column="37">// up to 56</comment>
			<decl_stmt><decl><type><name pos:line="3562" pos:column="25">int</name></type> <name pos:line="3562" pos:column="29">g7</name> <init pos:line="3562" pos:column="32">= <expr><lit:literal type="number" pos:line="3562" pos:column="34">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="3562" pos:column="37">// up to 64</comment>
			<decl_stmt><decl><type><specifier pos:line="3563" pos:column="25">const</specifier> <name pos:line="3563" pos:column="31">int</name></type> <name pos:line="3563" pos:column="35">nbMax</name> <init pos:line="3563" pos:column="41">= <expr><lit:literal type="number" pos:line="3563" pos:column="43">64</lit:literal></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="3565" pos:column="25">int</name></type> <name pos:line="3565" pos:column="29">i</name></decl>;</decl_stmt>
			<if pos:line="3566" pos:column="25">if <condition pos:line="3566" pos:column="28">(<expr><call><name><name pos:line="3566" pos:column="29">element</name><op:operator pos:line="3566" pos:column="36">-&gt;</op:operator><name pos:line="3566" pos:column="38">Attribute</name></name><argument_list pos:line="3566" pos:column="47">(<argument><expr><call><name pos:line="3566" pos:column="48">TEXT</name><argument_list pos:line="3566" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3566" pos:column="53">"gr0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3566" pos:column="61">&amp;</op:operator><name pos:line="3566" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3566" pos:column="65">
				<if pos:line="3567" pos:column="33">if <condition pos:line="3567" pos:column="36">(<expr><name pos:line="3567" pos:column="37">i</name> <op:operator pos:line="3567" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="3567" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="3567" pos:column="46">
					<expr_stmt><expr><name pos:line="3568" pos:column="41">g0</name> <op:operator pos:line="3568" pos:column="44">=</op:operator> <name pos:line="3568" pos:column="46">i</name></expr>;</expr_stmt></then></if></then></if>
			<if pos:line="3569" pos:column="25">if <condition pos:line="3569" pos:column="28">(<expr><call><name><name pos:line="3569" pos:column="29">element</name><op:operator pos:line="3569" pos:column="36">-&gt;</op:operator><name pos:line="3569" pos:column="38">Attribute</name></name><argument_list pos:line="3569" pos:column="47">(<argument><expr><call><name pos:line="3569" pos:column="48">TEXT</name><argument_list pos:line="3569" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3569" pos:column="53">"gr1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3569" pos:column="61">&amp;</op:operator><name pos:line="3569" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3569" pos:column="65">
				<if pos:line="3570" pos:column="33">if <condition pos:line="3570" pos:column="36">(<expr><name pos:line="3570" pos:column="37">i</name> <op:operator pos:line="3570" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="3570" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="3570" pos:column="46">
					<expr_stmt><expr><name pos:line="3571" pos:column="41">g1</name> <op:operator pos:line="3571" pos:column="44">=</op:operator> <name pos:line="3571" pos:column="46">i</name></expr>;</expr_stmt></then></if></then></if>
			<if pos:line="3572" pos:column="25">if <condition pos:line="3572" pos:column="28">(<expr><call><name><name pos:line="3572" pos:column="29">element</name><op:operator pos:line="3572" pos:column="36">-&gt;</op:operator><name pos:line="3572" pos:column="38">Attribute</name></name><argument_list pos:line="3572" pos:column="47">(<argument><expr><call><name pos:line="3572" pos:column="48">TEXT</name><argument_list pos:line="3572" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3572" pos:column="53">"gr2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3572" pos:column="61">&amp;</op:operator><name pos:line="3572" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3572" pos:column="65">
				<if pos:line="3573" pos:column="33">if <condition pos:line="3573" pos:column="36">(<expr><name pos:line="3573" pos:column="37">i</name> <op:operator pos:line="3573" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="3573" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="3573" pos:column="46">
					<expr_stmt><expr><name pos:line="3574" pos:column="41">g2</name> <op:operator pos:line="3574" pos:column="44">=</op:operator> <name pos:line="3574" pos:column="46">i</name></expr>;</expr_stmt></then></if></then></if>
			<if pos:line="3575" pos:column="25">if <condition pos:line="3575" pos:column="28">(<expr><call><name><name pos:line="3575" pos:column="29">element</name><op:operator pos:line="3575" pos:column="36">-&gt;</op:operator><name pos:line="3575" pos:column="38">Attribute</name></name><argument_list pos:line="3575" pos:column="47">(<argument><expr><call><name pos:line="3575" pos:column="48">TEXT</name><argument_list pos:line="3575" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3575" pos:column="53">"gr3"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3575" pos:column="61">&amp;</op:operator><name pos:line="3575" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3575" pos:column="65">
				<if pos:line="3576" pos:column="33">if <condition pos:line="3576" pos:column="36">(<expr><name pos:line="3576" pos:column="37">i</name> <op:operator pos:line="3576" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="3576" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="3576" pos:column="46">
					<expr_stmt><expr><name pos:line="3577" pos:column="41">g3</name> <op:operator pos:line="3577" pos:column="44">=</op:operator> <name pos:line="3577" pos:column="46">i</name></expr>;</expr_stmt></then></if></then></if>
			<if pos:line="3578" pos:column="25">if <condition pos:line="3578" pos:column="28">(<expr><call><name><name pos:line="3578" pos:column="29">element</name><op:operator pos:line="3578" pos:column="36">-&gt;</op:operator><name pos:line="3578" pos:column="38">Attribute</name></name><argument_list pos:line="3578" pos:column="47">(<argument><expr><call><name pos:line="3578" pos:column="48">TEXT</name><argument_list pos:line="3578" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3578" pos:column="53">"gr4"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3578" pos:column="61">&amp;</op:operator><name pos:line="3578" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3578" pos:column="65">
				<if pos:line="3579" pos:column="33">if <condition pos:line="3579" pos:column="36">(<expr><name pos:line="3579" pos:column="37">i</name> <op:operator pos:line="3579" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="3579" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="3579" pos:column="46">
					<expr_stmt><expr><name pos:line="3580" pos:column="41">g4</name> <op:operator pos:line="3580" pos:column="44">=</op:operator> <name pos:line="3580" pos:column="46">i</name></expr>;</expr_stmt></then></if></then></if>
			<if pos:line="3581" pos:column="25">if <condition pos:line="3581" pos:column="28">(<expr><call><name><name pos:line="3581" pos:column="29">element</name><op:operator pos:line="3581" pos:column="36">-&gt;</op:operator><name pos:line="3581" pos:column="38">Attribute</name></name><argument_list pos:line="3581" pos:column="47">(<argument><expr><call><name pos:line="3581" pos:column="48">TEXT</name><argument_list pos:line="3581" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3581" pos:column="53">"gr5"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3581" pos:column="61">&amp;</op:operator><name pos:line="3581" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3581" pos:column="65">
				<if pos:line="3582" pos:column="33">if <condition pos:line="3582" pos:column="36">(<expr><name pos:line="3582" pos:column="37">i</name> <op:operator pos:line="3582" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="3582" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="3582" pos:column="46">
					<expr_stmt><expr><name pos:line="3583" pos:column="41">g5</name> <op:operator pos:line="3583" pos:column="44">=</op:operator> <name pos:line="3583" pos:column="46">i</name></expr>;</expr_stmt></then></if></then></if>
			<if pos:line="3584" pos:column="25">if <condition pos:line="3584" pos:column="28">(<expr><call><name><name pos:line="3584" pos:column="29">element</name><op:operator pos:line="3584" pos:column="36">-&gt;</op:operator><name pos:line="3584" pos:column="38">Attribute</name></name><argument_list pos:line="3584" pos:column="47">(<argument><expr><call><name pos:line="3584" pos:column="48">TEXT</name><argument_list pos:line="3584" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3584" pos:column="53">"gr6"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3584" pos:column="61">&amp;</op:operator><name pos:line="3584" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3584" pos:column="65">
				<if pos:line="3585" pos:column="33">if <condition pos:line="3585" pos:column="36">(<expr><name pos:line="3585" pos:column="37">i</name> <op:operator pos:line="3585" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="3585" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="3585" pos:column="46">
					<expr_stmt><expr><name pos:line="3586" pos:column="41">g6</name> <op:operator pos:line="3586" pos:column="44">=</op:operator> <name pos:line="3586" pos:column="46">i</name></expr>;</expr_stmt></then></if></then></if>
			<if pos:line="3587" pos:column="25">if <condition pos:line="3587" pos:column="28">(<expr><call><name><name pos:line="3587" pos:column="29">element</name><op:operator pos:line="3587" pos:column="36">-&gt;</op:operator><name pos:line="3587" pos:column="38">Attribute</name></name><argument_list pos:line="3587" pos:column="47">(<argument><expr><call><name pos:line="3587" pos:column="48">TEXT</name><argument_list pos:line="3587" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3587" pos:column="53">"gr7"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3587" pos:column="61">&amp;</op:operator><name pos:line="3587" pos:column="62">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3587" pos:column="65">
				<if pos:line="3588" pos:column="33">if <condition pos:line="3588" pos:column="36">(<expr><name pos:line="3588" pos:column="37">i</name> <op:operator pos:line="3588" pos:column="39">&lt;=</op:operator> <lit:literal type="number" pos:line="3588" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="3588" pos:column="46">
					<expr_stmt><expr><name pos:line="3589" pos:column="41">g7</name> <op:operator pos:line="3589" pos:column="44">=</op:operator> <name pos:line="3589" pos:column="46">i</name></expr>;</expr_stmt></then></if></then></if>

			<decl_stmt><decl><type><name pos:line="3591" pos:column="25">bool</name></type> <name><name pos:line="3591" pos:column="30">langArray</name><index pos:line="3591" pos:column="39">[<expr><name pos:line="3591" pos:column="40">nbMax</name></expr>]</index></name></decl>;</decl_stmt>
			<for pos:line="3592" pos:column="25">for (<init><decl><type><name pos:line="3592" pos:column="30">int</name></type> <name pos:line="3592" pos:column="34">i</name> <init pos:line="3592" pos:column="36">= <expr><lit:literal type="number" pos:line="3592" pos:column="38">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3592" pos:column="42">i</name> <op:operator pos:line="3592" pos:column="44">&lt;</op:operator> <name pos:line="3592" pos:column="46">nbMax</name></expr> ;</condition> <incr><expr><name pos:line="3592" pos:column="54">i</name><op:operator pos:line="3592" pos:column="55">++</op:operator></expr></incr>) <expr_stmt><expr><name><name pos:line="3592" pos:column="59">langArray</name><index pos:line="3592" pos:column="68">[<expr><name pos:line="3592" pos:column="69">i</name></expr>]</index></name> <op:operator pos:line="3592" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="3592" pos:column="74">false</lit:literal></expr>;</expr_stmt></for>
			
			<decl_stmt><decl><type><name pos:line="3594" pos:column="25">UCHAR</name></type> <name pos:line="3594" pos:column="31">mask</name> <init pos:line="3594" pos:column="36">= <expr><lit:literal type="number" pos:line="3594" pos:column="38">1</lit:literal></expr></init></decl>;</decl_stmt>
			<for pos:line="3595" pos:column="25">for (<init><decl><type><name pos:line="3595" pos:column="30">int</name></type> <name pos:line="3595" pos:column="34">i</name> <init pos:line="3595" pos:column="36">= <expr><lit:literal type="number" pos:line="3595" pos:column="38">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3595" pos:column="42">i</name> <op:operator pos:line="3595" pos:column="44">&lt;</op:operator> <lit:literal type="number" pos:line="3595" pos:column="46">8</lit:literal></expr> ;</condition> <incr><expr><name pos:line="3595" pos:column="50">i</name><op:operator pos:line="3595" pos:column="51">++</op:operator></expr></incr>) 
			<block pos:line="3596" pos:column="25">{
				<if pos:line="3597" pos:column="33">if <condition pos:line="3597" pos:column="36">(<expr><name pos:line="3597" pos:column="37">mask</name> <op:operator pos:line="3597" pos:column="42">&amp;</op:operator> <name pos:line="3597" pos:column="44">g0</name></expr>)</condition><then pos:line="3597" pos:column="47">
					<expr_stmt><expr><call><name><name pos:line="3598" pos:column="41">_nppGUI</name><op:operator pos:line="3598" pos:column="48">.</op:operator><name pos:line="3598" pos:column="49">_excludedLangList</name><op:operator pos:line="3598" pos:column="66">.</op:operator><name pos:line="3598" pos:column="67">push_back</name></name><argument_list pos:line="3598" pos:column="76">(<argument><expr><call><name pos:line="3598" pos:column="77">LangMenuItem</name><argument_list pos:line="3598" pos:column="89">(<argument><expr><op:operator pos:line="3598" pos:column="90">(</op:operator><name pos:line="3598" pos:column="91">LangType</name><op:operator pos:line="3598" pos:column="99">)</op:operator><name pos:line="3598" pos:column="100">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3599" pos:column="33">mask</name> <op:operator pos:line="3599" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="3599" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			}</block></for>

			<expr_stmt><expr><name pos:line="3602" pos:column="25">mask</name> <op:operator pos:line="3602" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="3602" pos:column="32">1</lit:literal></expr>;</expr_stmt>
			<for pos:line="3603" pos:column="25">for (<init><decl><type><name pos:line="3603" pos:column="30">int</name></type> <name pos:line="3603" pos:column="34">i</name> <init pos:line="3603" pos:column="36">= <expr><lit:literal type="number" pos:line="3603" pos:column="38">8</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3603" pos:column="42">i</name> <op:operator pos:line="3603" pos:column="44">&lt;</op:operator> <lit:literal type="number" pos:line="3603" pos:column="46">16</lit:literal></expr> ;</condition> <incr><expr><name pos:line="3603" pos:column="51">i</name><op:operator pos:line="3603" pos:column="52">++</op:operator></expr></incr>) 
			<block pos:line="3604" pos:column="25">{
				<if pos:line="3605" pos:column="33">if <condition pos:line="3605" pos:column="36">(<expr><name pos:line="3605" pos:column="37">mask</name> <op:operator pos:line="3605" pos:column="42">&amp;</op:operator> <name pos:line="3605" pos:column="44">g1</name></expr>)</condition><then pos:line="3605" pos:column="47">
					<expr_stmt><expr><call><name><name pos:line="3606" pos:column="41">_nppGUI</name><op:operator pos:line="3606" pos:column="48">.</op:operator><name pos:line="3606" pos:column="49">_excludedLangList</name><op:operator pos:line="3606" pos:column="66">.</op:operator><name pos:line="3606" pos:column="67">push_back</name></name><argument_list pos:line="3606" pos:column="76">(<argument><expr><call><name pos:line="3606" pos:column="77">LangMenuItem</name><argument_list pos:line="3606" pos:column="89">(<argument><expr><op:operator pos:line="3606" pos:column="90">(</op:operator><name pos:line="3606" pos:column="91">LangType</name><op:operator pos:line="3606" pos:column="99">)</op:operator><name pos:line="3606" pos:column="100">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3607" pos:column="33">mask</name> <op:operator pos:line="3607" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="3607" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			}</block></for>

			<expr_stmt><expr><name pos:line="3610" pos:column="25">mask</name> <op:operator pos:line="3610" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="3610" pos:column="32">1</lit:literal></expr>;</expr_stmt>
			<for pos:line="3611" pos:column="25">for (<init><decl><type><name pos:line="3611" pos:column="30">int</name></type> <name pos:line="3611" pos:column="34">i</name> <init pos:line="3611" pos:column="36">= <expr><lit:literal type="number" pos:line="3611" pos:column="38">16</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3611" pos:column="43">i</name> <op:operator pos:line="3611" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="3611" pos:column="47">24</lit:literal></expr> ;</condition> <incr><expr><name pos:line="3611" pos:column="52">i</name><op:operator pos:line="3611" pos:column="53">++</op:operator></expr></incr>) 
			<block pos:line="3612" pos:column="25">{
				<if pos:line="3613" pos:column="33">if <condition pos:line="3613" pos:column="36">(<expr><name pos:line="3613" pos:column="37">mask</name> <op:operator pos:line="3613" pos:column="42">&amp;</op:operator> <name pos:line="3613" pos:column="44">g2</name></expr>)</condition><then pos:line="3613" pos:column="47">
					<expr_stmt><expr><call><name><name pos:line="3614" pos:column="41">_nppGUI</name><op:operator pos:line="3614" pos:column="48">.</op:operator><name pos:line="3614" pos:column="49">_excludedLangList</name><op:operator pos:line="3614" pos:column="66">.</op:operator><name pos:line="3614" pos:column="67">push_back</name></name><argument_list pos:line="3614" pos:column="76">(<argument><expr><call><name pos:line="3614" pos:column="77">LangMenuItem</name><argument_list pos:line="3614" pos:column="89">(<argument><expr><op:operator pos:line="3614" pos:column="90">(</op:operator><name pos:line="3614" pos:column="91">LangType</name><op:operator pos:line="3614" pos:column="99">)</op:operator><name pos:line="3614" pos:column="100">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3615" pos:column="33">mask</name> <op:operator pos:line="3615" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="3615" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			}</block></for>

			<expr_stmt><expr><name pos:line="3618" pos:column="25">mask</name> <op:operator pos:line="3618" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="3618" pos:column="32">1</lit:literal></expr>;</expr_stmt>
			<for pos:line="3619" pos:column="25">for (<init><decl><type><name pos:line="3619" pos:column="30">int</name></type> <name pos:line="3619" pos:column="34">i</name> <init pos:line="3619" pos:column="36">= <expr><lit:literal type="number" pos:line="3619" pos:column="38">24</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3619" pos:column="43">i</name> <op:operator pos:line="3619" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="3619" pos:column="47">32</lit:literal></expr> ;</condition> <incr><expr><name pos:line="3619" pos:column="52">i</name><op:operator pos:line="3619" pos:column="53">++</op:operator></expr></incr>) 
			<block pos:line="3620" pos:column="25">{
				<if pos:line="3621" pos:column="33">if <condition pos:line="3621" pos:column="36">(<expr><name pos:line="3621" pos:column="37">mask</name> <op:operator pos:line="3621" pos:column="42">&amp;</op:operator> <name pos:line="3621" pos:column="44">g3</name></expr>)</condition><then pos:line="3621" pos:column="47">
					<expr_stmt><expr><call><name><name pos:line="3622" pos:column="41">_nppGUI</name><op:operator pos:line="3622" pos:column="48">.</op:operator><name pos:line="3622" pos:column="49">_excludedLangList</name><op:operator pos:line="3622" pos:column="66">.</op:operator><name pos:line="3622" pos:column="67">push_back</name></name><argument_list pos:line="3622" pos:column="76">(<argument><expr><call><name pos:line="3622" pos:column="77">LangMenuItem</name><argument_list pos:line="3622" pos:column="89">(<argument><expr><op:operator pos:line="3622" pos:column="90">(</op:operator><name pos:line="3622" pos:column="91">LangType</name><op:operator pos:line="3622" pos:column="99">)</op:operator><name pos:line="3622" pos:column="100">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3623" pos:column="33">mask</name> <op:operator pos:line="3623" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="3623" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			}</block></for>

			<expr_stmt><expr><name pos:line="3626" pos:column="25">mask</name> <op:operator pos:line="3626" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="3626" pos:column="32">1</lit:literal></expr>;</expr_stmt>
			<for pos:line="3627" pos:column="25">for (<init><decl><type><name pos:line="3627" pos:column="30">int</name></type> <name pos:line="3627" pos:column="34">i</name> <init pos:line="3627" pos:column="36">= <expr><lit:literal type="number" pos:line="3627" pos:column="38">32</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3627" pos:column="43">i</name> <op:operator pos:line="3627" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="3627" pos:column="47">40</lit:literal></expr> ;</condition> <incr><expr><name pos:line="3627" pos:column="52">i</name><op:operator pos:line="3627" pos:column="53">++</op:operator></expr></incr>) 
			<block pos:line="3628" pos:column="25">{
				<if pos:line="3629" pos:column="33">if <condition pos:line="3629" pos:column="36">(<expr><name pos:line="3629" pos:column="37">mask</name> <op:operator pos:line="3629" pos:column="42">&amp;</op:operator> <name pos:line="3629" pos:column="44">g4</name></expr>)</condition><then pos:line="3629" pos:column="47">
					<expr_stmt><expr><call><name><name pos:line="3630" pos:column="41">_nppGUI</name><op:operator pos:line="3630" pos:column="48">.</op:operator><name pos:line="3630" pos:column="49">_excludedLangList</name><op:operator pos:line="3630" pos:column="66">.</op:operator><name pos:line="3630" pos:column="67">push_back</name></name><argument_list pos:line="3630" pos:column="76">(<argument><expr><call><name pos:line="3630" pos:column="77">LangMenuItem</name><argument_list pos:line="3630" pos:column="89">(<argument><expr><op:operator pos:line="3630" pos:column="90">(</op:operator><name pos:line="3630" pos:column="91">LangType</name><op:operator pos:line="3630" pos:column="99">)</op:operator><name pos:line="3630" pos:column="100">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3631" pos:column="33">mask</name> <op:operator pos:line="3631" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="3631" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			}</block></for>

			<expr_stmt><expr><name pos:line="3634" pos:column="25">mask</name> <op:operator pos:line="3634" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="3634" pos:column="32">1</lit:literal></expr>;</expr_stmt>
			<for pos:line="3635" pos:column="25">for (<init><decl><type><name pos:line="3635" pos:column="30">int</name></type> <name pos:line="3635" pos:column="34">i</name> <init pos:line="3635" pos:column="36">= <expr><lit:literal type="number" pos:line="3635" pos:column="38">40</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3635" pos:column="43">i</name> <op:operator pos:line="3635" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="3635" pos:column="47">48</lit:literal></expr> ;</condition> <incr><expr><name pos:line="3635" pos:column="52">i</name><op:operator pos:line="3635" pos:column="53">++</op:operator></expr></incr>) 
			<block pos:line="3636" pos:column="25">{
				<if pos:line="3637" pos:column="33">if <condition pos:line="3637" pos:column="36">(<expr><name pos:line="3637" pos:column="37">mask</name> <op:operator pos:line="3637" pos:column="42">&amp;</op:operator> <name pos:line="3637" pos:column="44">g5</name></expr>)</condition><then pos:line="3637" pos:column="47">
					<expr_stmt><expr><call><name><name pos:line="3638" pos:column="41">_nppGUI</name><op:operator pos:line="3638" pos:column="48">.</op:operator><name pos:line="3638" pos:column="49">_excludedLangList</name><op:operator pos:line="3638" pos:column="66">.</op:operator><name pos:line="3638" pos:column="67">push_back</name></name><argument_list pos:line="3638" pos:column="76">(<argument><expr><call><name pos:line="3638" pos:column="77">LangMenuItem</name><argument_list pos:line="3638" pos:column="89">(<argument><expr><op:operator pos:line="3638" pos:column="90">(</op:operator><name pos:line="3638" pos:column="91">LangType</name><op:operator pos:line="3638" pos:column="99">)</op:operator><name pos:line="3638" pos:column="100">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3639" pos:column="33">mask</name> <op:operator pos:line="3639" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="3639" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			}</block></for>

			<expr_stmt><expr><name pos:line="3642" pos:column="25">mask</name> <op:operator pos:line="3642" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="3642" pos:column="32">1</lit:literal></expr>;</expr_stmt>
			<for pos:line="3643" pos:column="25">for (<init><decl><type><name pos:line="3643" pos:column="30">int</name></type> <name pos:line="3643" pos:column="34">i</name> <init pos:line="3643" pos:column="36">= <expr><lit:literal type="number" pos:line="3643" pos:column="38">48</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3643" pos:column="43">i</name> <op:operator pos:line="3643" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="3643" pos:column="47">56</lit:literal></expr> ;</condition> <incr><expr><name pos:line="3643" pos:column="52">i</name><op:operator pos:line="3643" pos:column="53">++</op:operator></expr></incr>) 
			<block pos:line="3644" pos:column="25">{
				<if pos:line="3645" pos:column="33">if <condition pos:line="3645" pos:column="36">(<expr><name pos:line="3645" pos:column="37">mask</name> <op:operator pos:line="3645" pos:column="42">&amp;</op:operator> <name pos:line="3645" pos:column="44">g6</name></expr>)</condition><then pos:line="3645" pos:column="47">
					<expr_stmt><expr><call><name><name pos:line="3646" pos:column="41">_nppGUI</name><op:operator pos:line="3646" pos:column="48">.</op:operator><name pos:line="3646" pos:column="49">_excludedLangList</name><op:operator pos:line="3646" pos:column="66">.</op:operator><name pos:line="3646" pos:column="67">push_back</name></name><argument_list pos:line="3646" pos:column="76">(<argument><expr><call><name pos:line="3646" pos:column="77">LangMenuItem</name><argument_list pos:line="3646" pos:column="89">(<argument><expr><op:operator pos:line="3646" pos:column="90">(</op:operator><name pos:line="3646" pos:column="91">LangType</name><op:operator pos:line="3646" pos:column="99">)</op:operator><name pos:line="3646" pos:column="100">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3647" pos:column="33">mask</name> <op:operator pos:line="3647" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="3647" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			}</block></for>

			<expr_stmt><expr><name pos:line="3650" pos:column="25">mask</name> <op:operator pos:line="3650" pos:column="30">=</op:operator> <lit:literal type="number" pos:line="3650" pos:column="32">1</lit:literal></expr>;</expr_stmt>
			<for pos:line="3651" pos:column="25">for (<init><decl><type><name pos:line="3651" pos:column="30">int</name></type> <name pos:line="3651" pos:column="34">i</name> <init pos:line="3651" pos:column="36">= <expr><lit:literal type="number" pos:line="3651" pos:column="38">56</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="3651" pos:column="43">i</name> <op:operator pos:line="3651" pos:column="45">&lt;</op:operator> <lit:literal type="number" pos:line="3651" pos:column="47">64</lit:literal></expr> ;</condition> <incr><expr><name pos:line="3651" pos:column="52">i</name><op:operator pos:line="3651" pos:column="53">++</op:operator></expr></incr>) 
			<block pos:line="3652" pos:column="25">{
				<if pos:line="3653" pos:column="33">if <condition pos:line="3653" pos:column="36">(<expr><name pos:line="3653" pos:column="37">mask</name> <op:operator pos:line="3653" pos:column="42">&amp;</op:operator> <name pos:line="3653" pos:column="44">g7</name></expr>)</condition><then pos:line="3653" pos:column="47">
					<expr_stmt><expr><call><name><name pos:line="3654" pos:column="41">_nppGUI</name><op:operator pos:line="3654" pos:column="48">.</op:operator><name pos:line="3654" pos:column="49">_excludedLangList</name><op:operator pos:line="3654" pos:column="66">.</op:operator><name pos:line="3654" pos:column="67">push_back</name></name><argument_list pos:line="3654" pos:column="76">(<argument><expr><call><name pos:line="3654" pos:column="77">LangMenuItem</name><argument_list pos:line="3654" pos:column="89">(<argument><expr><op:operator pos:line="3654" pos:column="90">(</op:operator><name pos:line="3654" pos:column="91">LangType</name><op:operator pos:line="3654" pos:column="99">)</op:operator><name pos:line="3654" pos:column="100">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				<expr_stmt><expr><name pos:line="3655" pos:column="33">mask</name> <op:operator pos:line="3655" pos:column="38">&lt;&lt;=</op:operator> <lit:literal type="number" pos:line="3655" pos:column="42">1</lit:literal></expr>;</expr_stmt>
			}</block></for>
			
			<expr_stmt><expr><name pos:line="3658" pos:column="25">val</name> <op:operator pos:line="3658" pos:column="29">=</op:operator> <call><name><name pos:line="3658" pos:column="31">element</name><op:operator pos:line="3658" pos:column="38">-&gt;</op:operator><name pos:line="3658" pos:column="40">Attribute</name></name><argument_list pos:line="3658" pos:column="49">(<argument><expr><call><name pos:line="3658" pos:column="50">TEXT</name><argument_list pos:line="3658" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3658" pos:column="55">"langMenuCompact"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3659" pos:column="25">if <condition pos:line="3659" pos:column="28">(<expr><name pos:line="3659" pos:column="29">val</name></expr>)</condition><then pos:line="3659" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3660" pos:column="33">_nppGUI</name><op:operator pos:line="3660" pos:column="40">.</op:operator><name pos:line="3660" pos:column="41">_isLangMenuCompact</name></name> <op:operator pos:line="3660" pos:column="60">=</op:operator> <op:operator pos:line="3660" pos:column="62">(</op:operator><op:operator pos:line="3660" pos:column="63">!</op:operator><call><name pos:line="3660" pos:column="64">lstrcmp</name><argument_list pos:line="3660" pos:column="71">(<argument><expr><name pos:line="3660" pos:column="72">val</name></expr></argument>, <argument><expr><call><name pos:line="3660" pos:column="77">TEXT</name><argument_list pos:line="3660" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="3660" pos:column="82">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="3660" pos:column="89">)</op:operator></expr>;</expr_stmt></then></if>
		}</block></then>

		<else pos:line="3663" pos:column="17">else <if pos:line="3663" pos:column="22">if <condition pos:line="3663" pos:column="25">(<expr><op:operator pos:line="3663" pos:column="26">!</op:operator><call><name pos:line="3663" pos:column="27">lstrcmp</name><argument_list pos:line="3663" pos:column="34">(<argument><expr><name pos:line="3663" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3663" pos:column="39">TEXT</name><argument_list pos:line="3663" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3663" pos:column="44">"Print"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3663" pos:column="54">
		<block pos:line="3664" pos:column="17">{
			<expr_stmt><expr><name pos:line="3665" pos:column="25">val</name> <op:operator pos:line="3665" pos:column="29">=</op:operator> <call><name><name pos:line="3665" pos:column="31">element</name><op:operator pos:line="3665" pos:column="38">-&gt;</op:operator><name pos:line="3665" pos:column="40">Attribute</name></name><argument_list pos:line="3665" pos:column="49">(<argument><expr><call><name pos:line="3665" pos:column="50">TEXT</name><argument_list pos:line="3665" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3665" pos:column="55">"lineNumber"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3666" pos:column="25">if <condition pos:line="3666" pos:column="28">(<expr><name pos:line="3666" pos:column="29">val</name></expr>)</condition><then pos:line="3666" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3667" pos:column="33">_nppGUI</name><op:operator pos:line="3667" pos:column="40">.</op:operator><name pos:line="3667" pos:column="41">_printSettings</name><op:operator pos:line="3667" pos:column="55">.</op:operator><name pos:line="3667" pos:column="56">_printLineNumber</name></name> <op:operator pos:line="3667" pos:column="73">=</op:operator> <op:operator pos:line="3667" pos:column="75">(</op:operator><op:operator pos:line="3667" pos:column="76">!</op:operator><call><name pos:line="3667" pos:column="77">lstrcmp</name><argument_list pos:line="3667" pos:column="84">(<argument><expr><name pos:line="3667" pos:column="85">val</name></expr></argument>, <argument><expr><call><name pos:line="3667" pos:column="90">TEXT</name><argument_list pos:line="3667" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="3667" pos:column="95">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="3667" pos:column="102">)</op:operator></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><name pos:line="3669" pos:column="25">int</name></type> <name pos:line="3669" pos:column="29">i</name></decl>;</decl_stmt>
			<if pos:line="3670" pos:column="25">if <condition pos:line="3670" pos:column="28">(<expr><call><name><name pos:line="3670" pos:column="29">element</name><op:operator pos:line="3670" pos:column="36">-&gt;</op:operator><name pos:line="3670" pos:column="38">Attribute</name></name><argument_list pos:line="3670" pos:column="47">(<argument><expr><call><name pos:line="3670" pos:column="48">TEXT</name><argument_list pos:line="3670" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3670" pos:column="53">"printOption"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3670" pos:column="69">&amp;</op:operator><name pos:line="3670" pos:column="70">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3670" pos:column="73">
				<expr_stmt><expr><name><name pos:line="3671" pos:column="33">_nppGUI</name><op:operator pos:line="3671" pos:column="40">.</op:operator><name pos:line="3671" pos:column="41">_printSettings</name><op:operator pos:line="3671" pos:column="55">.</op:operator><name pos:line="3671" pos:column="56">_printOption</name></name> <op:operator pos:line="3671" pos:column="69">=</op:operator> <name pos:line="3671" pos:column="71">i</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3673" pos:column="25">val</name> <op:operator pos:line="3673" pos:column="29">=</op:operator> <call><name><name pos:line="3673" pos:column="31">element</name><op:operator pos:line="3673" pos:column="38">-&gt;</op:operator><name pos:line="3673" pos:column="40">Attribute</name></name><argument_list pos:line="3673" pos:column="49">(<argument><expr><call><name pos:line="3673" pos:column="50">TEXT</name><argument_list pos:line="3673" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3673" pos:column="55">"headerLeft"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3674" pos:column="25">if <condition pos:line="3674" pos:column="28">(<expr><name pos:line="3674" pos:column="29">val</name></expr>)</condition><then pos:line="3674" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3675" pos:column="33">_nppGUI</name><op:operator pos:line="3675" pos:column="40">.</op:operator><name pos:line="3675" pos:column="41">_printSettings</name><op:operator pos:line="3675" pos:column="55">.</op:operator><name pos:line="3675" pos:column="56">_headerLeft</name></name> <op:operator pos:line="3675" pos:column="68">=</op:operator> <name pos:line="3675" pos:column="70">val</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3677" pos:column="25">val</name> <op:operator pos:line="3677" pos:column="29">=</op:operator> <call><name><name pos:line="3677" pos:column="31">element</name><op:operator pos:line="3677" pos:column="38">-&gt;</op:operator><name pos:line="3677" pos:column="40">Attribute</name></name><argument_list pos:line="3677" pos:column="49">(<argument><expr><call><name pos:line="3677" pos:column="50">TEXT</name><argument_list pos:line="3677" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3677" pos:column="55">"headerMiddle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3678" pos:column="25">if <condition pos:line="3678" pos:column="28">(<expr><name pos:line="3678" pos:column="29">val</name></expr>)</condition><then pos:line="3678" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3679" pos:column="33">_nppGUI</name><op:operator pos:line="3679" pos:column="40">.</op:operator><name pos:line="3679" pos:column="41">_printSettings</name><op:operator pos:line="3679" pos:column="55">.</op:operator><name pos:line="3679" pos:column="56">_headerMiddle</name></name> <op:operator pos:line="3679" pos:column="70">=</op:operator> <name pos:line="3679" pos:column="72">val</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3681" pos:column="25">val</name> <op:operator pos:line="3681" pos:column="29">=</op:operator> <call><name><name pos:line="3681" pos:column="31">element</name><op:operator pos:line="3681" pos:column="38">-&gt;</op:operator><name pos:line="3681" pos:column="40">Attribute</name></name><argument_list pos:line="3681" pos:column="49">(<argument><expr><call><name pos:line="3681" pos:column="50">TEXT</name><argument_list pos:line="3681" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3681" pos:column="55">"headerRight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3682" pos:column="25">if <condition pos:line="3682" pos:column="28">(<expr><name pos:line="3682" pos:column="29">val</name></expr>)</condition><then pos:line="3682" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3683" pos:column="33">_nppGUI</name><op:operator pos:line="3683" pos:column="40">.</op:operator><name pos:line="3683" pos:column="41">_printSettings</name><op:operator pos:line="3683" pos:column="55">.</op:operator><name pos:line="3683" pos:column="56">_headerRight</name></name> <op:operator pos:line="3683" pos:column="69">=</op:operator> <name pos:line="3683" pos:column="71">val</name></expr>;</expr_stmt></then></if>


			<expr_stmt><expr><name pos:line="3686" pos:column="25">val</name> <op:operator pos:line="3686" pos:column="29">=</op:operator> <call><name><name pos:line="3686" pos:column="31">element</name><op:operator pos:line="3686" pos:column="38">-&gt;</op:operator><name pos:line="3686" pos:column="40">Attribute</name></name><argument_list pos:line="3686" pos:column="49">(<argument><expr><call><name pos:line="3686" pos:column="50">TEXT</name><argument_list pos:line="3686" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3686" pos:column="55">"footerLeft"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3687" pos:column="25">if <condition pos:line="3687" pos:column="28">(<expr><name pos:line="3687" pos:column="29">val</name></expr>)</condition><then pos:line="3687" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3688" pos:column="33">_nppGUI</name><op:operator pos:line="3688" pos:column="40">.</op:operator><name pos:line="3688" pos:column="41">_printSettings</name><op:operator pos:line="3688" pos:column="55">.</op:operator><name pos:line="3688" pos:column="56">_footerLeft</name></name> <op:operator pos:line="3688" pos:column="68">=</op:operator> <name pos:line="3688" pos:column="70">val</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3690" pos:column="25">val</name> <op:operator pos:line="3690" pos:column="29">=</op:operator> <call><name><name pos:line="3690" pos:column="31">element</name><op:operator pos:line="3690" pos:column="38">-&gt;</op:operator><name pos:line="3690" pos:column="40">Attribute</name></name><argument_list pos:line="3690" pos:column="49">(<argument><expr><call><name pos:line="3690" pos:column="50">TEXT</name><argument_list pos:line="3690" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3690" pos:column="55">"footerMiddle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3691" pos:column="25">if <condition pos:line="3691" pos:column="28">(<expr><name pos:line="3691" pos:column="29">val</name></expr>)</condition><then pos:line="3691" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3692" pos:column="33">_nppGUI</name><op:operator pos:line="3692" pos:column="40">.</op:operator><name pos:line="3692" pos:column="41">_printSettings</name><op:operator pos:line="3692" pos:column="55">.</op:operator><name pos:line="3692" pos:column="56">_footerMiddle</name></name> <op:operator pos:line="3692" pos:column="70">=</op:operator> <name pos:line="3692" pos:column="72">val</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3694" pos:column="25">val</name> <op:operator pos:line="3694" pos:column="29">=</op:operator> <call><name><name pos:line="3694" pos:column="31">element</name><op:operator pos:line="3694" pos:column="38">-&gt;</op:operator><name pos:line="3694" pos:column="40">Attribute</name></name><argument_list pos:line="3694" pos:column="49">(<argument><expr><call><name pos:line="3694" pos:column="50">TEXT</name><argument_list pos:line="3694" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3694" pos:column="55">"footerRight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3695" pos:column="25">if <condition pos:line="3695" pos:column="28">(<expr><name pos:line="3695" pos:column="29">val</name></expr>)</condition><then pos:line="3695" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3696" pos:column="33">_nppGUI</name><op:operator pos:line="3696" pos:column="40">.</op:operator><name pos:line="3696" pos:column="41">_printSettings</name><op:operator pos:line="3696" pos:column="55">.</op:operator><name pos:line="3696" pos:column="56">_footerRight</name></name> <op:operator pos:line="3696" pos:column="69">=</op:operator> <name pos:line="3696" pos:column="71">val</name></expr>;</expr_stmt></then></if>


			<expr_stmt><expr><name pos:line="3699" pos:column="25">val</name> <op:operator pos:line="3699" pos:column="29">=</op:operator> <call><name><name pos:line="3699" pos:column="31">element</name><op:operator pos:line="3699" pos:column="38">-&gt;</op:operator><name pos:line="3699" pos:column="40">Attribute</name></name><argument_list pos:line="3699" pos:column="49">(<argument><expr><call><name pos:line="3699" pos:column="50">TEXT</name><argument_list pos:line="3699" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3699" pos:column="55">"headerFontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3700" pos:column="25">if <condition pos:line="3700" pos:column="28">(<expr><name pos:line="3700" pos:column="29">val</name></expr>)</condition><then pos:line="3700" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3701" pos:column="33">_nppGUI</name><op:operator pos:line="3701" pos:column="40">.</op:operator><name pos:line="3701" pos:column="41">_printSettings</name><op:operator pos:line="3701" pos:column="55">.</op:operator><name pos:line="3701" pos:column="56">_headerFontName</name></name> <op:operator pos:line="3701" pos:column="72">=</op:operator> <name pos:line="3701" pos:column="74">val</name></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><name pos:line="3703" pos:column="25">val</name> <op:operator pos:line="3703" pos:column="29">=</op:operator> <call><name><name pos:line="3703" pos:column="31">element</name><op:operator pos:line="3703" pos:column="38">-&gt;</op:operator><name pos:line="3703" pos:column="40">Attribute</name></name><argument_list pos:line="3703" pos:column="49">(<argument><expr><call><name pos:line="3703" pos:column="50">TEXT</name><argument_list pos:line="3703" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="3703" pos:column="55">"footerFontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3704" pos:column="25">if <condition pos:line="3704" pos:column="28">(<expr><name pos:line="3704" pos:column="29">val</name></expr>)</condition><then pos:line="3704" pos:column="33">
				<expr_stmt><expr><name><name pos:line="3705" pos:column="33">_nppGUI</name><op:operator pos:line="3705" pos:column="40">.</op:operator><name pos:line="3705" pos:column="41">_printSettings</name><op:operator pos:line="3705" pos:column="55">.</op:operator><name pos:line="3705" pos:column="56">_footerFontName</name></name> <op:operator pos:line="3705" pos:column="72">=</op:operator> <name pos:line="3705" pos:column="74">val</name></expr>;</expr_stmt></then></if>

			<if pos:line="3707" pos:column="25">if <condition pos:line="3707" pos:column="28">(<expr><call><name><name pos:line="3707" pos:column="29">element</name><op:operator pos:line="3707" pos:column="36">-&gt;</op:operator><name pos:line="3707" pos:column="38">Attribute</name></name><argument_list pos:line="3707" pos:column="47">(<argument><expr><call><name pos:line="3707" pos:column="48">TEXT</name><argument_list pos:line="3707" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3707" pos:column="53">"headerFontStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3707" pos:column="73">&amp;</op:operator><name pos:line="3707" pos:column="74">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3707" pos:column="77">
				<expr_stmt><expr><name><name pos:line="3708" pos:column="33">_nppGUI</name><op:operator pos:line="3708" pos:column="40">.</op:operator><name pos:line="3708" pos:column="41">_printSettings</name><op:operator pos:line="3708" pos:column="55">.</op:operator><name pos:line="3708" pos:column="56">_headerFontStyle</name></name> <op:operator pos:line="3708" pos:column="73">=</op:operator> <name pos:line="3708" pos:column="75">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3710" pos:column="25">if <condition pos:line="3710" pos:column="28">(<expr><call><name><name pos:line="3710" pos:column="29">element</name><op:operator pos:line="3710" pos:column="36">-&gt;</op:operator><name pos:line="3710" pos:column="38">Attribute</name></name><argument_list pos:line="3710" pos:column="47">(<argument><expr><call><name pos:line="3710" pos:column="48">TEXT</name><argument_list pos:line="3710" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3710" pos:column="53">"footerFontStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3710" pos:column="73">&amp;</op:operator><name pos:line="3710" pos:column="74">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3710" pos:column="77">
				<expr_stmt><expr><name><name pos:line="3711" pos:column="33">_nppGUI</name><op:operator pos:line="3711" pos:column="40">.</op:operator><name pos:line="3711" pos:column="41">_printSettings</name><op:operator pos:line="3711" pos:column="55">.</op:operator><name pos:line="3711" pos:column="56">_footerFontStyle</name></name> <op:operator pos:line="3711" pos:column="73">=</op:operator> <name pos:line="3711" pos:column="75">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3713" pos:column="25">if <condition pos:line="3713" pos:column="28">(<expr><call><name><name pos:line="3713" pos:column="29">element</name><op:operator pos:line="3713" pos:column="36">-&gt;</op:operator><name pos:line="3713" pos:column="38">Attribute</name></name><argument_list pos:line="3713" pos:column="47">(<argument><expr><call><name pos:line="3713" pos:column="48">TEXT</name><argument_list pos:line="3713" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3713" pos:column="53">"headerFontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3713" pos:column="72">&amp;</op:operator><name pos:line="3713" pos:column="73">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3713" pos:column="76">
				<expr_stmt><expr><name><name pos:line="3714" pos:column="33">_nppGUI</name><op:operator pos:line="3714" pos:column="40">.</op:operator><name pos:line="3714" pos:column="41">_printSettings</name><op:operator pos:line="3714" pos:column="55">.</op:operator><name pos:line="3714" pos:column="56">_headerFontSize</name></name> <op:operator pos:line="3714" pos:column="72">=</op:operator> <name pos:line="3714" pos:column="74">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3716" pos:column="25">if <condition pos:line="3716" pos:column="28">(<expr><call><name><name pos:line="3716" pos:column="29">element</name><op:operator pos:line="3716" pos:column="36">-&gt;</op:operator><name pos:line="3716" pos:column="38">Attribute</name></name><argument_list pos:line="3716" pos:column="47">(<argument><expr><call><name pos:line="3716" pos:column="48">TEXT</name><argument_list pos:line="3716" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3716" pos:column="53">"footerFontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3716" pos:column="72">&amp;</op:operator><name pos:line="3716" pos:column="73">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3716" pos:column="76">
				<expr_stmt><expr><name><name pos:line="3717" pos:column="33">_nppGUI</name><op:operator pos:line="3717" pos:column="40">.</op:operator><name pos:line="3717" pos:column="41">_printSettings</name><op:operator pos:line="3717" pos:column="55">.</op:operator><name pos:line="3717" pos:column="56">_footerFontSize</name></name> <op:operator pos:line="3717" pos:column="72">=</op:operator> <name pos:line="3717" pos:column="74">i</name></expr>;</expr_stmt></then></if>


			<if pos:line="3720" pos:column="25">if <condition pos:line="3720" pos:column="28">(<expr><call><name><name pos:line="3720" pos:column="29">element</name><op:operator pos:line="3720" pos:column="36">-&gt;</op:operator><name pos:line="3720" pos:column="38">Attribute</name></name><argument_list pos:line="3720" pos:column="47">(<argument><expr><call><name pos:line="3720" pos:column="48">TEXT</name><argument_list pos:line="3720" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3720" pos:column="53">"margeLeft"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3720" pos:column="67">&amp;</op:operator><name pos:line="3720" pos:column="68">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3720" pos:column="71">
				<expr_stmt><expr><name><name pos:line="3721" pos:column="33">_nppGUI</name><op:operator pos:line="3721" pos:column="40">.</op:operator><name pos:line="3721" pos:column="41">_printSettings</name><op:operator pos:line="3721" pos:column="55">.</op:operator><name pos:line="3721" pos:column="56">_marge</name><op:operator pos:line="3721" pos:column="62">.</op:operator><name pos:line="3721" pos:column="63">left</name></name> <op:operator pos:line="3721" pos:column="68">=</op:operator> <name pos:line="3721" pos:column="70">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3723" pos:column="25">if <condition pos:line="3723" pos:column="28">(<expr><call><name><name pos:line="3723" pos:column="29">element</name><op:operator pos:line="3723" pos:column="36">-&gt;</op:operator><name pos:line="3723" pos:column="38">Attribute</name></name><argument_list pos:line="3723" pos:column="47">(<argument><expr><call><name pos:line="3723" pos:column="48">TEXT</name><argument_list pos:line="3723" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3723" pos:column="53">"margeTop"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3723" pos:column="66">&amp;</op:operator><name pos:line="3723" pos:column="67">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3723" pos:column="70">
				<expr_stmt><expr><name><name pos:line="3724" pos:column="33">_nppGUI</name><op:operator pos:line="3724" pos:column="40">.</op:operator><name pos:line="3724" pos:column="41">_printSettings</name><op:operator pos:line="3724" pos:column="55">.</op:operator><name pos:line="3724" pos:column="56">_marge</name><op:operator pos:line="3724" pos:column="62">.</op:operator><name pos:line="3724" pos:column="63">top</name></name> <op:operator pos:line="3724" pos:column="67">=</op:operator> <name pos:line="3724" pos:column="69">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3726" pos:column="25">if <condition pos:line="3726" pos:column="28">(<expr><call><name><name pos:line="3726" pos:column="29">element</name><op:operator pos:line="3726" pos:column="36">-&gt;</op:operator><name pos:line="3726" pos:column="38">Attribute</name></name><argument_list pos:line="3726" pos:column="47">(<argument><expr><call><name pos:line="3726" pos:column="48">TEXT</name><argument_list pos:line="3726" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3726" pos:column="53">"margeRight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3726" pos:column="68">&amp;</op:operator><name pos:line="3726" pos:column="69">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3726" pos:column="72">
				<expr_stmt><expr><name><name pos:line="3727" pos:column="33">_nppGUI</name><op:operator pos:line="3727" pos:column="40">.</op:operator><name pos:line="3727" pos:column="41">_printSettings</name><op:operator pos:line="3727" pos:column="55">.</op:operator><name pos:line="3727" pos:column="56">_marge</name><op:operator pos:line="3727" pos:column="62">.</op:operator><name pos:line="3727" pos:column="63">right</name></name> <op:operator pos:line="3727" pos:column="69">=</op:operator> <name pos:line="3727" pos:column="71">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3729" pos:column="25">if <condition pos:line="3729" pos:column="28">(<expr><call><name><name pos:line="3729" pos:column="29">element</name><op:operator pos:line="3729" pos:column="36">-&gt;</op:operator><name pos:line="3729" pos:column="38">Attribute</name></name><argument_list pos:line="3729" pos:column="47">(<argument><expr><call><name pos:line="3729" pos:column="48">TEXT</name><argument_list pos:line="3729" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3729" pos:column="53">"margeBottom"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3729" pos:column="69">&amp;</op:operator><name pos:line="3729" pos:column="70">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3729" pos:column="73">
				<expr_stmt><expr><name><name pos:line="3730" pos:column="33">_nppGUI</name><op:operator pos:line="3730" pos:column="40">.</op:operator><name pos:line="3730" pos:column="41">_printSettings</name><op:operator pos:line="3730" pos:column="55">.</op:operator><name pos:line="3730" pos:column="56">_marge</name><op:operator pos:line="3730" pos:column="62">.</op:operator><name pos:line="3730" pos:column="63">bottom</name></name> <op:operator pos:line="3730" pos:column="70">=</op:operator> <name pos:line="3730" pos:column="72">i</name></expr>;</expr_stmt></then></if>
		}</block></then>

		<else pos:line="3733" pos:column="17">else <if pos:line="3733" pos:column="22">if <condition pos:line="3733" pos:column="25">(<expr><op:operator pos:line="3733" pos:column="26">!</op:operator><call><name pos:line="3733" pos:column="27">lstrcmp</name><argument_list pos:line="3733" pos:column="34">(<argument><expr><name pos:line="3733" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3733" pos:column="39">TEXT</name><argument_list pos:line="3733" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3733" pos:column="44">"ScintillaPrimaryView"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3733" pos:column="69">
		<block pos:line="3734" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="3735" pos:column="25">feedScintillaParam</name><argument_list pos:line="3735" pos:column="43">(<argument><expr><name pos:line="3735" pos:column="44">element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>

		<else pos:line="3738" pos:column="17">else <if pos:line="3738" pos:column="22">if <condition pos:line="3738" pos:column="25">(<expr><op:operator pos:line="3738" pos:column="26">!</op:operator><call><name pos:line="3738" pos:column="27">lstrcmp</name><argument_list pos:line="3738" pos:column="34">(<argument><expr><name pos:line="3738" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3738" pos:column="39">TEXT</name><argument_list pos:line="3738" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3738" pos:column="44">"Backup"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3738" pos:column="55">
		<block pos:line="3739" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3740" pos:column="25">int</name></type> <name pos:line="3740" pos:column="29">i</name></decl>;</decl_stmt>
			<if pos:line="3741" pos:column="25">if <condition pos:line="3741" pos:column="28">(<expr><call><name><name pos:line="3741" pos:column="29">element</name><op:operator pos:line="3741" pos:column="36">-&gt;</op:operator><name pos:line="3741" pos:column="38">Attribute</name></name><argument_list pos:line="3741" pos:column="47">(<argument><expr><call><name pos:line="3741" pos:column="48">TEXT</name><argument_list pos:line="3741" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3741" pos:column="53">"action"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3741" pos:column="64">&amp;</op:operator><name pos:line="3741" pos:column="65">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3741" pos:column="68">
				<expr_stmt><expr><name><name pos:line="3742" pos:column="33">_nppGUI</name><op:operator pos:line="3742" pos:column="40">.</op:operator><name pos:line="3742" pos:column="41">_backup</name></name> <op:operator pos:line="3742" pos:column="49">=</op:operator> <op:operator pos:line="3742" pos:column="51">(</op:operator><name pos:line="3742" pos:column="52">BackupFeature</name><op:operator pos:line="3742" pos:column="65">)</op:operator><name pos:line="3742" pos:column="66">i</name></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><specifier pos:line="3744" pos:column="25">const</specifier> <name pos:line="3744" pos:column="31">TCHAR</name> <type:modifier pos:line="3744" pos:column="37">*</type:modifier></type><name pos:line="3744" pos:column="38">bDir</name> <init pos:line="3744" pos:column="43">= <expr><call><name><name pos:line="3744" pos:column="45">element</name><op:operator pos:line="3744" pos:column="52">-&gt;</op:operator><name pos:line="3744" pos:column="54">Attribute</name></name><argument_list pos:line="3744" pos:column="63">(<argument><expr><call><name pos:line="3744" pos:column="64">TEXT</name><argument_list pos:line="3744" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3744" pos:column="69">"useCustumDir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3745" pos:column="25">if <condition pos:line="3745" pos:column="28">(<expr><name pos:line="3745" pos:column="29">bDir</name> <op:operator pos:line="3745" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="3745" pos:column="37">!</op:operator><call><name pos:line="3745" pos:column="38">lstrcmp</name><argument_list pos:line="3745" pos:column="45">(<argument><expr><name pos:line="3745" pos:column="46">bDir</name></expr></argument>, <argument><expr><call><name pos:line="3745" pos:column="52">TEXT</name><argument_list pos:line="3745" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3745" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3745" pos:column="65"> 
			<block pos:line="3746" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3747" pos:column="33">_nppGUI</name><op:operator pos:line="3747" pos:column="40">.</op:operator><name pos:line="3747" pos:column="41">_useDir</name></name> <op:operator pos:line="3747" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="3747" pos:column="51">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			<decl_stmt><decl><type><specifier pos:line="3749" pos:column="25">const</specifier> <name pos:line="3749" pos:column="31">TCHAR</name> <type:modifier pos:line="3749" pos:column="37">*</type:modifier></type><name pos:line="3749" pos:column="38">pDir</name> <init pos:line="3749" pos:column="43">= <expr><call><name><name pos:line="3749" pos:column="45">element</name><op:operator pos:line="3749" pos:column="52">-&gt;</op:operator><name pos:line="3749" pos:column="54">Attribute</name></name><argument_list pos:line="3749" pos:column="63">(<argument><expr><call><name pos:line="3749" pos:column="64">TEXT</name><argument_list pos:line="3749" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3749" pos:column="69">"dir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3750" pos:column="25">if <condition pos:line="3750" pos:column="28">(<expr><name pos:line="3750" pos:column="29">pDir</name></expr>)</condition><then pos:line="3750" pos:column="34">
				<expr_stmt><expr><name><name pos:line="3751" pos:column="33">_nppGUI</name><op:operator pos:line="3751" pos:column="40">.</op:operator><name pos:line="3751" pos:column="41">_backupDir</name></name> <op:operator pos:line="3751" pos:column="52">=</op:operator> <name pos:line="3751" pos:column="54">pDir</name></expr>;</expr_stmt></then></if>
		}</block></then>
		<else pos:line="3753" pos:column="17">else <if pos:line="3753" pos:column="22">if <condition pos:line="3753" pos:column="25">(<expr><op:operator pos:line="3753" pos:column="26">!</op:operator><call><name pos:line="3753" pos:column="27">lstrcmp</name><argument_list pos:line="3753" pos:column="34">(<argument><expr><name pos:line="3753" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3753" pos:column="39">TEXT</name><argument_list pos:line="3753" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3753" pos:column="44">"DockingManager"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3753" pos:column="63">
		<block pos:line="3754" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="3755" pos:column="25">feedDockingManager</name><argument_list pos:line="3755" pos:column="43">(<argument><expr><name pos:line="3755" pos:column="44">element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		
		<else pos:line="3758" pos:column="17">else <if pos:line="3758" pos:column="22">if <condition pos:line="3758" pos:column="25">(<expr><op:operator pos:line="3758" pos:column="26">!</op:operator><call><name pos:line="3758" pos:column="27">lstrcmp</name><argument_list pos:line="3758" pos:column="34">(<argument><expr><name pos:line="3758" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3758" pos:column="39">TEXT</name><argument_list pos:line="3758" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3758" pos:column="44">"globalOverride"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3758" pos:column="63">
		<block pos:line="3759" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="3760" pos:column="25">const</specifier> <name pos:line="3760" pos:column="31">TCHAR</name> <type:modifier pos:line="3760" pos:column="37">*</type:modifier></type><name pos:line="3760" pos:column="38">bDir</name> <init pos:line="3760" pos:column="43">= <expr><call><name><name pos:line="3760" pos:column="45">element</name><op:operator pos:line="3760" pos:column="52">-&gt;</op:operator><name pos:line="3760" pos:column="54">Attribute</name></name><argument_list pos:line="3760" pos:column="63">(<argument><expr><call><name pos:line="3760" pos:column="64">TEXT</name><argument_list pos:line="3760" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3760" pos:column="69">"fg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3761" pos:column="25">if <condition pos:line="3761" pos:column="28">(<expr><name pos:line="3761" pos:column="29">bDir</name> <op:operator pos:line="3761" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="3761" pos:column="37">!</op:operator><call><name pos:line="3761" pos:column="38">lstrcmp</name><argument_list pos:line="3761" pos:column="45">(<argument><expr><name pos:line="3761" pos:column="46">bDir</name></expr></argument>, <argument><expr><call><name pos:line="3761" pos:column="52">TEXT</name><argument_list pos:line="3761" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3761" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3761" pos:column="65"> 
			<block pos:line="3762" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3763" pos:column="33">_nppGUI</name><op:operator pos:line="3763" pos:column="40">.</op:operator><name pos:line="3763" pos:column="41">_globalOverride</name><op:operator pos:line="3763" pos:column="56">.</op:operator><name pos:line="3763" pos:column="57">enableFg</name></name> <op:operator pos:line="3763" pos:column="66">=</op:operator> <lit:literal type="boolean" pos:line="3763" pos:column="68">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3766" pos:column="25">bDir</name> <op:operator pos:line="3766" pos:column="30">=</op:operator> <call><name><name pos:line="3766" pos:column="32">element</name><op:operator pos:line="3766" pos:column="39">-&gt;</op:operator><name pos:line="3766" pos:column="41">Attribute</name></name><argument_list pos:line="3766" pos:column="50">(<argument><expr><call><name pos:line="3766" pos:column="51">TEXT</name><argument_list pos:line="3766" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3766" pos:column="56">"bg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3767" pos:column="25">if <condition pos:line="3767" pos:column="28">(<expr><name pos:line="3767" pos:column="29">bDir</name> <op:operator pos:line="3767" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="3767" pos:column="37">!</op:operator><call><name pos:line="3767" pos:column="38">lstrcmp</name><argument_list pos:line="3767" pos:column="45">(<argument><expr><name pos:line="3767" pos:column="46">bDir</name></expr></argument>, <argument><expr><call><name pos:line="3767" pos:column="52">TEXT</name><argument_list pos:line="3767" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3767" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3767" pos:column="65"> 
			<block pos:line="3768" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3769" pos:column="33">_nppGUI</name><op:operator pos:line="3769" pos:column="40">.</op:operator><name pos:line="3769" pos:column="41">_globalOverride</name><op:operator pos:line="3769" pos:column="56">.</op:operator><name pos:line="3769" pos:column="57">enableBg</name></name> <op:operator pos:line="3769" pos:column="66">=</op:operator> <lit:literal type="boolean" pos:line="3769" pos:column="68">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3772" pos:column="25">bDir</name> <op:operator pos:line="3772" pos:column="30">=</op:operator> <call><name><name pos:line="3772" pos:column="32">element</name><op:operator pos:line="3772" pos:column="39">-&gt;</op:operator><name pos:line="3772" pos:column="41">Attribute</name></name><argument_list pos:line="3772" pos:column="50">(<argument><expr><call><name pos:line="3772" pos:column="51">TEXT</name><argument_list pos:line="3772" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3772" pos:column="56">"font"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3773" pos:column="25">if <condition pos:line="3773" pos:column="28">(<expr><name pos:line="3773" pos:column="29">bDir</name> <op:operator pos:line="3773" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="3773" pos:column="37">!</op:operator><call><name pos:line="3773" pos:column="38">lstrcmp</name><argument_list pos:line="3773" pos:column="45">(<argument><expr><name pos:line="3773" pos:column="46">bDir</name></expr></argument>, <argument><expr><call><name pos:line="3773" pos:column="52">TEXT</name><argument_list pos:line="3773" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3773" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3773" pos:column="65"> 
			<block pos:line="3774" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3775" pos:column="33">_nppGUI</name><op:operator pos:line="3775" pos:column="40">.</op:operator><name pos:line="3775" pos:column="41">_globalOverride</name><op:operator pos:line="3775" pos:column="56">.</op:operator><name pos:line="3775" pos:column="57">enableFont</name></name> <op:operator pos:line="3775" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="3775" pos:column="70">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3778" pos:column="25">bDir</name> <op:operator pos:line="3778" pos:column="30">=</op:operator> <call><name><name pos:line="3778" pos:column="32">element</name><op:operator pos:line="3778" pos:column="39">-&gt;</op:operator><name pos:line="3778" pos:column="41">Attribute</name></name><argument_list pos:line="3778" pos:column="50">(<argument><expr><call><name pos:line="3778" pos:column="51">TEXT</name><argument_list pos:line="3778" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3778" pos:column="56">"fontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3779" pos:column="25">if <condition pos:line="3779" pos:column="28">(<expr><name pos:line="3779" pos:column="29">bDir</name> <op:operator pos:line="3779" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="3779" pos:column="37">!</op:operator><call><name pos:line="3779" pos:column="38">lstrcmp</name><argument_list pos:line="3779" pos:column="45">(<argument><expr><name pos:line="3779" pos:column="46">bDir</name></expr></argument>, <argument><expr><call><name pos:line="3779" pos:column="52">TEXT</name><argument_list pos:line="3779" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3779" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3779" pos:column="65"> 
			<block pos:line="3780" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3781" pos:column="33">_nppGUI</name><op:operator pos:line="3781" pos:column="40">.</op:operator><name pos:line="3781" pos:column="41">_globalOverride</name><op:operator pos:line="3781" pos:column="56">.</op:operator><name pos:line="3781" pos:column="57">enableFontSize</name></name> <op:operator pos:line="3781" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="3781" pos:column="74">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3784" pos:column="25">bDir</name> <op:operator pos:line="3784" pos:column="30">=</op:operator> <call><name><name pos:line="3784" pos:column="32">element</name><op:operator pos:line="3784" pos:column="39">-&gt;</op:operator><name pos:line="3784" pos:column="41">Attribute</name></name><argument_list pos:line="3784" pos:column="50">(<argument><expr><call><name pos:line="3784" pos:column="51">TEXT</name><argument_list pos:line="3784" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3784" pos:column="56">"bold"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3785" pos:column="25">if <condition pos:line="3785" pos:column="28">(<expr><name pos:line="3785" pos:column="29">bDir</name> <op:operator pos:line="3785" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="3785" pos:column="37">!</op:operator><call><name pos:line="3785" pos:column="38">lstrcmp</name><argument_list pos:line="3785" pos:column="45">(<argument><expr><name pos:line="3785" pos:column="46">bDir</name></expr></argument>, <argument><expr><call><name pos:line="3785" pos:column="52">TEXT</name><argument_list pos:line="3785" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3785" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3785" pos:column="65"> 
			<block pos:line="3786" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3787" pos:column="33">_nppGUI</name><op:operator pos:line="3787" pos:column="40">.</op:operator><name pos:line="3787" pos:column="41">_globalOverride</name><op:operator pos:line="3787" pos:column="56">.</op:operator><name pos:line="3787" pos:column="57">enableBold</name></name> <op:operator pos:line="3787" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="3787" pos:column="70">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3790" pos:column="25">bDir</name> <op:operator pos:line="3790" pos:column="30">=</op:operator> <call><name><name pos:line="3790" pos:column="32">element</name><op:operator pos:line="3790" pos:column="39">-&gt;</op:operator><name pos:line="3790" pos:column="41">Attribute</name></name><argument_list pos:line="3790" pos:column="50">(<argument><expr><call><name pos:line="3790" pos:column="51">TEXT</name><argument_list pos:line="3790" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3790" pos:column="56">"italic"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3791" pos:column="25">if <condition pos:line="3791" pos:column="28">(<expr><name pos:line="3791" pos:column="29">bDir</name> <op:operator pos:line="3791" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="3791" pos:column="37">!</op:operator><call><name pos:line="3791" pos:column="38">lstrcmp</name><argument_list pos:line="3791" pos:column="45">(<argument><expr><name pos:line="3791" pos:column="46">bDir</name></expr></argument>, <argument><expr><call><name pos:line="3791" pos:column="52">TEXT</name><argument_list pos:line="3791" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3791" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3791" pos:column="65"> 
			<block pos:line="3792" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3793" pos:column="33">_nppGUI</name><op:operator pos:line="3793" pos:column="40">.</op:operator><name pos:line="3793" pos:column="41">_globalOverride</name><op:operator pos:line="3793" pos:column="56">.</op:operator><name pos:line="3793" pos:column="57">enableItalic</name></name> <op:operator pos:line="3793" pos:column="70">=</op:operator> <lit:literal type="boolean" pos:line="3793" pos:column="72">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><name pos:line="3796" pos:column="25">bDir</name> <op:operator pos:line="3796" pos:column="30">=</op:operator> <call><name><name pos:line="3796" pos:column="32">element</name><op:operator pos:line="3796" pos:column="39">-&gt;</op:operator><name pos:line="3796" pos:column="41">Attribute</name></name><argument_list pos:line="3796" pos:column="50">(<argument><expr><call><name pos:line="3796" pos:column="51">TEXT</name><argument_list pos:line="3796" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="3796" pos:column="56">"underline"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="3797" pos:column="25">if <condition pos:line="3797" pos:column="28">(<expr><name pos:line="3797" pos:column="29">bDir</name> <op:operator pos:line="3797" pos:column="34">&amp;&amp;</op:operator> <op:operator pos:line="3797" pos:column="37">!</op:operator><call><name pos:line="3797" pos:column="38">lstrcmp</name><argument_list pos:line="3797" pos:column="45">(<argument><expr><name pos:line="3797" pos:column="46">bDir</name></expr></argument>, <argument><expr><call><name pos:line="3797" pos:column="52">TEXT</name><argument_list pos:line="3797" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3797" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3797" pos:column="65"> 
			<block pos:line="3798" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3799" pos:column="33">_nppGUI</name><op:operator pos:line="3799" pos:column="40">.</op:operator><name pos:line="3799" pos:column="41">_globalOverride</name><op:operator pos:line="3799" pos:column="56">.</op:operator><name pos:line="3799" pos:column="57">enableUnderLine</name></name> <op:operator pos:line="3799" pos:column="73">=</op:operator> <lit:literal type="boolean" pos:line="3799" pos:column="75">true</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
		}</block></then>
		<else pos:line="3802" pos:column="17">else <if pos:line="3802" pos:column="22">if <condition pos:line="3802" pos:column="25">(<expr><op:operator pos:line="3802" pos:column="26">!</op:operator><call><name pos:line="3802" pos:column="27">lstrcmp</name><argument_list pos:line="3802" pos:column="34">(<argument><expr><name pos:line="3802" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3802" pos:column="39">TEXT</name><argument_list pos:line="3802" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3802" pos:column="44">"auto-completion"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3802" pos:column="64">
		<block pos:line="3803" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3804" pos:column="25">int</name></type> <name pos:line="3804" pos:column="29">i</name></decl>;</decl_stmt>
			<if pos:line="3805" pos:column="25">if <condition pos:line="3805" pos:column="28">(<expr><call><name><name pos:line="3805" pos:column="29">element</name><op:operator pos:line="3805" pos:column="36">-&gt;</op:operator><name pos:line="3805" pos:column="38">Attribute</name></name><argument_list pos:line="3805" pos:column="47">(<argument><expr><call><name pos:line="3805" pos:column="48">TEXT</name><argument_list pos:line="3805" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3805" pos:column="53">"autoCAction"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3805" pos:column="69">&amp;</op:operator><name pos:line="3805" pos:column="70">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3805" pos:column="73">
				<expr_stmt><expr><name><name pos:line="3806" pos:column="33">_nppGUI</name><op:operator pos:line="3806" pos:column="40">.</op:operator><name pos:line="3806" pos:column="41">_autocStatus</name></name> <op:operator pos:line="3806" pos:column="54">=</op:operator> <op:operator pos:line="3806" pos:column="56">(</op:operator><name><name pos:line="3806" pos:column="57">NppGUI</name><op:operator pos:line="3806" pos:column="63">::</op:operator><name pos:line="3806" pos:column="65">AutocStatus</name></name><op:operator pos:line="3806" pos:column="76">)</op:operator><name pos:line="3806" pos:column="77">i</name></expr>;</expr_stmt></then></if>

			<if pos:line="3808" pos:column="25">if <condition pos:line="3808" pos:column="28">(<expr><call><name><name pos:line="3808" pos:column="29">element</name><op:operator pos:line="3808" pos:column="36">-&gt;</op:operator><name pos:line="3808" pos:column="38">Attribute</name></name><argument_list pos:line="3808" pos:column="47">(<argument><expr><call><name pos:line="3808" pos:column="48">TEXT</name><argument_list pos:line="3808" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="3808" pos:column="53">"triggerFromNbChar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3808" pos:column="75">&amp;</op:operator><name pos:line="3808" pos:column="76">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3808" pos:column="79">
				<expr_stmt><expr><name><name pos:line="3809" pos:column="33">_nppGUI</name><op:operator pos:line="3809" pos:column="40">.</op:operator><name pos:line="3809" pos:column="41">_autocFromLen</name></name> <op:operator pos:line="3809" pos:column="55">=</op:operator> <name pos:line="3809" pos:column="57">i</name></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><specifier pos:line="3811" pos:column="25">const</specifier> <name pos:line="3811" pos:column="31">TCHAR</name> <type:modifier pos:line="3811" pos:column="37">*</type:modifier></type> <name pos:line="3811" pos:column="39">funcParams</name> <init pos:line="3811" pos:column="50">= <expr><call><name><name pos:line="3811" pos:column="52">element</name><op:operator pos:line="3811" pos:column="59">-&gt;</op:operator><name pos:line="3811" pos:column="61">Attribute</name></name><argument_list pos:line="3811" pos:column="70">(<argument><expr><call><name pos:line="3811" pos:column="71">TEXT</name><argument_list pos:line="3811" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="3811" pos:column="76">"funcParams"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3812" pos:column="25">if <condition pos:line="3812" pos:column="28">(<expr><name pos:line="3812" pos:column="29">funcParams</name> <op:operator pos:line="3812" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="3812" pos:column="43">!</op:operator><call><name pos:line="3812" pos:column="44">lstrcmp</name><argument_list pos:line="3812" pos:column="51">(<argument><expr><name pos:line="3812" pos:column="52">funcParams</name></expr></argument>, <argument><expr><call><name pos:line="3812" pos:column="64">TEXT</name><argument_list pos:line="3812" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="3812" pos:column="69">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3812" pos:column="77"> 
			<block pos:line="3813" pos:column="25">{
				<expr_stmt><expr><name><name pos:line="3814" pos:column="33">_nppGUI</name><op:operator pos:line="3814" pos:column="40">.</op:operator><name pos:line="3814" pos:column="41">_funcParams</name></name> <op:operator pos:line="3814" pos:column="53">=</op:operator> <lit:literal type="boolean" pos:line="3814" pos:column="55">true</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
		}</block></then>
		<else pos:line="3817" pos:column="17">else <if pos:line="3817" pos:column="22">if <condition pos:line="3817" pos:column="25">(<expr><op:operator pos:line="3817" pos:column="26">!</op:operator><call><name pos:line="3817" pos:column="27">lstrcmp</name><argument_list pos:line="3817" pos:column="34">(<argument><expr><name pos:line="3817" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3817" pos:column="39">TEXT</name><argument_list pos:line="3817" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3817" pos:column="44">"sessionExt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3817" pos:column="59">
		<block pos:line="3818" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3819" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3819" pos:column="35">*</type:modifier></type><name pos:line="3819" pos:column="36">n</name> <init pos:line="3819" pos:column="38">= <expr><call><name><name pos:line="3819" pos:column="40">childNode</name><op:operator pos:line="3819" pos:column="49">-&gt;</op:operator><name pos:line="3819" pos:column="51">FirstChild</name></name><argument_list pos:line="3819" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3820" pos:column="25">if <condition pos:line="3820" pos:column="28">(<expr><name pos:line="3820" pos:column="29">n</name></expr>)</condition><then pos:line="3820" pos:column="31">
			<block pos:line="3821" pos:column="25">{
				<expr_stmt><expr><name pos:line="3822" pos:column="33">val</name> <op:operator pos:line="3822" pos:column="37">=</op:operator> <call><name><name pos:line="3822" pos:column="39">n</name><op:operator pos:line="3822" pos:column="40">-&gt;</op:operator><name pos:line="3822" pos:column="42">Value</name></name><argument_list pos:line="3822" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3823" pos:column="33">if <condition pos:line="3823" pos:column="36">(<expr><name pos:line="3823" pos:column="37">val</name></expr>)</condition><then pos:line="3823" pos:column="41">
					<expr_stmt><expr><name><name pos:line="3824" pos:column="41">_nppGUI</name><op:operator pos:line="3824" pos:column="48">.</op:operator><name pos:line="3824" pos:column="49">_definedSessionExt</name></name> <op:operator pos:line="3824" pos:column="68">=</op:operator> <name pos:line="3824" pos:column="70">val</name></expr>;</expr_stmt></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3827" pos:column="17">else <if pos:line="3827" pos:column="22">if <condition pos:line="3827" pos:column="25">(<expr><op:operator pos:line="3827" pos:column="26">!</op:operator><call><name pos:line="3827" pos:column="27">lstrcmp</name><argument_list pos:line="3827" pos:column="34">(<argument><expr><name pos:line="3827" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3827" pos:column="39">TEXT</name><argument_list pos:line="3827" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3827" pos:column="44">"noUpdate"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3827" pos:column="57">
		<block pos:line="3828" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="3829" pos:column="25">TiXmlNode</name> <type:modifier pos:line="3829" pos:column="35">*</type:modifier></type><name pos:line="3829" pos:column="36">n</name> <init pos:line="3829" pos:column="38">= <expr><call><name><name pos:line="3829" pos:column="40">childNode</name><op:operator pos:line="3829" pos:column="49">-&gt;</op:operator><name pos:line="3829" pos:column="51">FirstChild</name></name><argument_list pos:line="3829" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3830" pos:column="25">if <condition pos:line="3830" pos:column="28">(<expr><name pos:line="3830" pos:column="29">n</name></expr>)</condition><then pos:line="3830" pos:column="31">
			<block pos:line="3831" pos:column="25">{
				<expr_stmt><expr><name pos:line="3832" pos:column="33">val</name> <op:operator pos:line="3832" pos:column="37">=</op:operator> <call><name><name pos:line="3832" pos:column="39">n</name><op:operator pos:line="3832" pos:column="40">-&gt;</op:operator><name pos:line="3832" pos:column="42">Value</name></name><argument_list pos:line="3832" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="3833" pos:column="33">if <condition pos:line="3833" pos:column="36">(<expr><name pos:line="3833" pos:column="37">val</name></expr>)</condition><then pos:line="3833" pos:column="41">
				<block pos:line="3834" pos:column="33">{
                    <expr_stmt><expr><name><name pos:line="3835" pos:column="21">_nppGUI</name><op:operator pos:line="3835" pos:column="28">.</op:operator><name pos:line="3835" pos:column="29">_autoUpdateOpt</name><op:operator pos:line="3835" pos:column="43">.</op:operator><name pos:line="3835" pos:column="44">_doAutoUpdate</name></name> <op:operator pos:line="3835" pos:column="58">=</op:operator> <op:operator pos:line="3835" pos:column="60">(</op:operator><op:operator pos:line="3835" pos:column="61">!</op:operator><call><name pos:line="3835" pos:column="62">lstrcmp</name><argument_list pos:line="3835" pos:column="69">(<argument><expr><name pos:line="3835" pos:column="70">val</name></expr></argument>, <argument><expr><call><name pos:line="3835" pos:column="75">TEXT</name><argument_list pos:line="3835" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="3835" pos:column="80">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="3835" pos:column="87">)</op:operator><op:operator pos:line="3835" pos:column="88">?</op:operator><lit:literal type="boolean" pos:line="3835" pos:column="89">false</lit:literal><op:operator pos:line="3835" pos:column="94">:</op:operator><lit:literal type="boolean" pos:line="3835" pos:column="95">true</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
                
                <decl_stmt><decl><type><name pos:line="3838" pos:column="17">int</name></type> <name pos:line="3838" pos:column="21">i</name></decl>;</decl_stmt>
                <expr_stmt><expr><name pos:line="3839" pos:column="17">val</name> <op:operator pos:line="3839" pos:column="21">=</op:operator> <call><name><name pos:line="3839" pos:column="23">element</name><op:operator pos:line="3839" pos:column="30">-&gt;</op:operator><name pos:line="3839" pos:column="32">Attribute</name></name><argument_list pos:line="3839" pos:column="41">(<argument><expr><call><name pos:line="3839" pos:column="42">TEXT</name><argument_list pos:line="3839" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="3839" pos:column="47">"intervalDays"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="3839" pos:column="64">&amp;</op:operator><name pos:line="3839" pos:column="65">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="3840" pos:column="17">if <condition pos:line="3840" pos:column="20">(<expr><name pos:line="3840" pos:column="21">val</name></expr>)</condition><then pos:line="3840" pos:column="25">
				<block pos:line="3841" pos:column="33">{
                    <expr_stmt><expr><name><name pos:line="3842" pos:column="21">_nppGUI</name><op:operator pos:line="3842" pos:column="28">.</op:operator><name pos:line="3842" pos:column="29">_autoUpdateOpt</name><op:operator pos:line="3842" pos:column="43">.</op:operator><name pos:line="3842" pos:column="44">_intervalDays</name></name> <op:operator pos:line="3842" pos:column="58">=</op:operator> <name pos:line="3842" pos:column="60">i</name></expr>;</expr_stmt>
				}</block></then></if>

                <expr_stmt><expr><name pos:line="3845" pos:column="17">val</name> <op:operator pos:line="3845" pos:column="21">=</op:operator> <call><name><name pos:line="3845" pos:column="23">element</name><op:operator pos:line="3845" pos:column="30">-&gt;</op:operator><name pos:line="3845" pos:column="32">Attribute</name></name><argument_list pos:line="3845" pos:column="41">(<argument><expr><call><name pos:line="3845" pos:column="42">TEXT</name><argument_list pos:line="3845" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="3845" pos:column="47">"nextUpdateDate"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if pos:line="3846" pos:column="17">if <condition pos:line="3846" pos:column="20">(<expr><name pos:line="3846" pos:column="21">val</name></expr>)</condition><then pos:line="3846" pos:column="25">
				<block pos:line="3847" pos:column="33">{
                    <expr_stmt><expr><name><name pos:line="3848" pos:column="21">_nppGUI</name><op:operator pos:line="3848" pos:column="28">.</op:operator><name pos:line="3848" pos:column="29">_autoUpdateOpt</name><op:operator pos:line="3848" pos:column="43">.</op:operator><name pos:line="3848" pos:column="44">_nextUpdateDate</name></name> <op:operator pos:line="3848" pos:column="60">=</op:operator> <call><name pos:line="3848" pos:column="62">Date</name><argument_list pos:line="3848" pos:column="66">(<argument><expr><name pos:line="3848" pos:column="67">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3852" pos:column="17">else <if pos:line="3852" pos:column="22">if <condition pos:line="3852" pos:column="25">(<expr><op:operator pos:line="3852" pos:column="26">!</op:operator><call><name pos:line="3852" pos:column="27">lstrcmp</name><argument_list pos:line="3852" pos:column="34">(<argument><expr><name pos:line="3852" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3852" pos:column="39">TEXT</name><argument_list pos:line="3852" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3852" pos:column="44">"openSaveDir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3852" pos:column="60">
		<block pos:line="3853" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="3854" pos:column="25">const</specifier> <name pos:line="3854" pos:column="31">TCHAR</name> <type:modifier pos:line="3854" pos:column="37">*</type:modifier></type> <name pos:line="3854" pos:column="39">value</name> <init pos:line="3854" pos:column="45">= <expr><call><name><name pos:line="3854" pos:column="47">element</name><op:operator pos:line="3854" pos:column="54">-&gt;</op:operator><name pos:line="3854" pos:column="56">Attribute</name></name><argument_list pos:line="3854" pos:column="65">(<argument><expr><call><name pos:line="3854" pos:column="66">TEXT</name><argument_list pos:line="3854" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="3854" pos:column="71">"value"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3855" pos:column="25">if <condition pos:line="3855" pos:column="28">(<expr><name pos:line="3855" pos:column="29">value</name> <op:operator pos:line="3855" pos:column="35">&amp;&amp;</op:operator> <name><name pos:line="3855" pos:column="38">value</name><index pos:line="3855" pos:column="43">[<expr><lit:literal type="number" pos:line="3855" pos:column="44">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="3855" pos:column="47">
			<block pos:line="3856" pos:column="25">{
				<if pos:line="3857" pos:column="33">if <condition pos:line="3857" pos:column="36">(<expr><call><name pos:line="3857" pos:column="37">lstrcmp</name><argument_list pos:line="3857" pos:column="44">(<argument><expr><name pos:line="3857" pos:column="45">value</name></expr></argument>, <argument><expr><call><name pos:line="3857" pos:column="52">TEXT</name><argument_list pos:line="3857" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3857" pos:column="57">"1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="3857" pos:column="63">==</op:operator> <lit:literal type="number" pos:line="3857" pos:column="66">0</lit:literal></expr>)</condition><then pos:line="3857" pos:column="68">
					<expr_stmt><expr><name><name pos:line="3858" pos:column="41">_nppGUI</name><op:operator pos:line="3858" pos:column="48">.</op:operator><name pos:line="3858" pos:column="49">_openSaveDir</name></name> <op:operator pos:line="3858" pos:column="62">=</op:operator> <name pos:line="3858" pos:column="64">dir_last</name></expr>;</expr_stmt></then>
				<else pos:line="3859" pos:column="33">else <if pos:line="3859" pos:column="38">if <condition pos:line="3859" pos:column="41">(<expr><call><name pos:line="3859" pos:column="42">lstrcmp</name><argument_list pos:line="3859" pos:column="49">(<argument><expr><name pos:line="3859" pos:column="50">value</name></expr></argument>, <argument><expr><call><name pos:line="3859" pos:column="57">TEXT</name><argument_list pos:line="3859" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="3859" pos:column="62">"2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="3859" pos:column="68">==</op:operator> <lit:literal type="number" pos:line="3859" pos:column="71">0</lit:literal></expr>)</condition><then pos:line="3859" pos:column="73">
					<expr_stmt><expr><name><name pos:line="3860" pos:column="41">_nppGUI</name><op:operator pos:line="3860" pos:column="48">.</op:operator><name pos:line="3860" pos:column="49">_openSaveDir</name></name> <op:operator pos:line="3860" pos:column="62">=</op:operator> <name pos:line="3860" pos:column="64">dir_userDef</name></expr>;</expr_stmt></then>
				<else pos:line="3861" pos:column="33">else
					<expr_stmt><expr><name><name pos:line="3862" pos:column="41">_nppGUI</name><op:operator pos:line="3862" pos:column="48">.</op:operator><name pos:line="3862" pos:column="49">_openSaveDir</name></name> <op:operator pos:line="3862" pos:column="62">=</op:operator> <name pos:line="3862" pos:column="64">dir_followCurrent</name></expr>;</expr_stmt></else></if></else></if>
			}</block></then></if>
			<decl_stmt><decl><type><specifier pos:line="3864" pos:column="25">const</specifier> <name pos:line="3864" pos:column="31">TCHAR</name> <type:modifier pos:line="3864" pos:column="37">*</type:modifier></type> <name pos:line="3864" pos:column="39">path</name> <init pos:line="3864" pos:column="44">= <expr><call><name><name pos:line="3864" pos:column="46">element</name><op:operator pos:line="3864" pos:column="53">-&gt;</op:operator><name pos:line="3864" pos:column="55">Attribute</name></name><argument_list pos:line="3864" pos:column="64">(<argument><expr><call><name pos:line="3864" pos:column="65">TEXT</name><argument_list pos:line="3864" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="3864" pos:column="70">"defaultDirPath"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3865" pos:column="25">if <condition pos:line="3865" pos:column="28">(<expr><name pos:line="3865" pos:column="29">path</name> <op:operator pos:line="3865" pos:column="34">&amp;&amp;</op:operator> <name><name pos:line="3865" pos:column="37">path</name><index pos:line="3865" pos:column="41">[<expr><lit:literal type="number" pos:line="3865" pos:column="42">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="3865" pos:column="45">
			<block pos:line="3866" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="3867" pos:column="33">lstrcpyn</name><argument_list pos:line="3867" pos:column="41">(<argument><expr><name><name pos:line="3867" pos:column="42">_nppGUI</name><op:operator pos:line="3867" pos:column="49">.</op:operator><name pos:line="3867" pos:column="50">_defaultDir</name></name></expr></argument>, <argument><expr><name pos:line="3867" pos:column="63">path</name></expr></argument>, <argument><expr><name pos:line="3867" pos:column="69">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="3868" pos:column="33">::</op:operator><name pos:line="3868" pos:column="35">ExpandEnvironmentStrings</name></name><argument_list pos:line="3868" pos:column="59">(<argument><expr><name><name pos:line="3868" pos:column="60">_nppGUI</name><op:operator pos:line="3868" pos:column="67">.</op:operator><name pos:line="3868" pos:column="68">_defaultDir</name></name></expr></argument>, <argument><expr><name><name pos:line="3868" pos:column="81">_nppGUI</name><op:operator pos:line="3868" pos:column="88">.</op:operator><name pos:line="3868" pos:column="89">_defaultDirExp</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="3868" pos:column="105">500</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
 		}</block></then>
		<else pos:line="3871" pos:column="17">else <if pos:line="3871" pos:column="22">if <condition pos:line="3871" pos:column="25">(<expr><op:operator pos:line="3871" pos:column="26">!</op:operator><call><name pos:line="3871" pos:column="27">lstrcmp</name><argument_list pos:line="3871" pos:column="34">(<argument><expr><name pos:line="3871" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3871" pos:column="39">TEXT</name><argument_list pos:line="3871" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3871" pos:column="44">"titleBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3871" pos:column="57">
		<block pos:line="3872" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="3873" pos:column="25">const</specifier> <name pos:line="3873" pos:column="31">TCHAR</name> <type:modifier pos:line="3873" pos:column="37">*</type:modifier></type> <name pos:line="3873" pos:column="39">value</name> <init pos:line="3873" pos:column="45">= <expr><call><name><name pos:line="3873" pos:column="47">element</name><op:operator pos:line="3873" pos:column="54">-&gt;</op:operator><name pos:line="3873" pos:column="56">Attribute</name></name><argument_list pos:line="3873" pos:column="65">(<argument><expr><call><name pos:line="3873" pos:column="66">TEXT</name><argument_list pos:line="3873" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="3873" pos:column="71">"short"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="3874" pos:column="25">_nppGUI</name><op:operator pos:line="3874" pos:column="32">.</op:operator><name pos:line="3874" pos:column="33">_shortTitlebar</name></name> <op:operator pos:line="3874" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="3874" pos:column="50">false</lit:literal></expr>;</expr_stmt>	<comment type="line" pos:line="3874" pos:column="57">//default state</comment>
			<if pos:line="3875" pos:column="25">if <condition pos:line="3875" pos:column="28">(<expr><name pos:line="3875" pos:column="29">value</name> <op:operator pos:line="3875" pos:column="35">&amp;&amp;</op:operator> <name><name pos:line="3875" pos:column="38">value</name><index pos:line="3875" pos:column="43">[<expr><lit:literal type="number" pos:line="3875" pos:column="44">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="3875" pos:column="47">
			<block pos:line="3876" pos:column="25">{
				<if pos:line="3877" pos:column="33">if <condition pos:line="3877" pos:column="36">(<expr><call><name pos:line="3877" pos:column="37">lstrcmp</name><argument_list pos:line="3877" pos:column="44">(<argument><expr><name pos:line="3877" pos:column="45">value</name></expr></argument>, <argument><expr><call><name pos:line="3877" pos:column="52">TEXT</name><argument_list pos:line="3877" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="3877" pos:column="57">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="3877" pos:column="65">==</op:operator> <lit:literal type="number" pos:line="3877" pos:column="68">0</lit:literal></expr>)</condition><then pos:line="3877" pos:column="70">
					<expr_stmt><expr><name><name pos:line="3878" pos:column="41">_nppGUI</name><op:operator pos:line="3878" pos:column="48">.</op:operator><name pos:line="3878" pos:column="49">_shortTitlebar</name></name> <op:operator pos:line="3878" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="3878" pos:column="66">true</lit:literal></expr>;</expr_stmt></then>
				<else pos:line="3879" pos:column="33">else <if pos:line="3879" pos:column="38">if <condition pos:line="3879" pos:column="41">(<expr><call><name pos:line="3879" pos:column="42">lstrcmp</name><argument_list pos:line="3879" pos:column="49">(<argument><expr><name pos:line="3879" pos:column="50">value</name></expr></argument>, <argument><expr><call><name pos:line="3879" pos:column="57">TEXT</name><argument_list pos:line="3879" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="3879" pos:column="62">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="3879" pos:column="69">==</op:operator> <lit:literal type="number" pos:line="3879" pos:column="72">0</lit:literal></expr>)</condition><then pos:line="3879" pos:column="74">
					<expr_stmt><expr><name><name pos:line="3880" pos:column="41">_nppGUI</name><op:operator pos:line="3880" pos:column="48">.</op:operator><name pos:line="3880" pos:column="49">_shortTitlebar</name></name> <op:operator pos:line="3880" pos:column="64">=</op:operator> <lit:literal type="boolean" pos:line="3880" pos:column="66">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="3883" pos:column="17">else <if pos:line="3883" pos:column="22">if <condition pos:line="3883" pos:column="25">(<expr><op:operator pos:line="3883" pos:column="26">!</op:operator><call><name pos:line="3883" pos:column="27">lstrcmp</name><argument_list pos:line="3883" pos:column="34">(<argument><expr><name pos:line="3883" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3883" pos:column="39">TEXT</name><argument_list pos:line="3883" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3883" pos:column="44">"stylerTheme"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3883" pos:column="60">
		<block pos:line="3884" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="3885" pos:column="25">const</specifier> <name pos:line="3885" pos:column="31">TCHAR</name> <type:modifier pos:line="3885" pos:column="37">*</type:modifier></type><name pos:line="3885" pos:column="38">themePath</name> <init pos:line="3885" pos:column="48">= <expr><call><name><name pos:line="3885" pos:column="50">element</name><op:operator pos:line="3885" pos:column="57">-&gt;</op:operator><name pos:line="3885" pos:column="59">Attribute</name></name><argument_list pos:line="3885" pos:column="68">(<argument><expr><call><name pos:line="3885" pos:column="69">TEXT</name><argument_list pos:line="3885" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="3885" pos:column="74">"path"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="3886" pos:column="25">if <condition pos:line="3886" pos:column="28">(<expr><name pos:line="3886" pos:column="29">themePath</name> <op:operator pos:line="3886" pos:column="39">!=</op:operator> <name pos:line="3886" pos:column="42">NULL</name> <op:operator pos:line="3886" pos:column="47">&amp;&amp;</op:operator> <name><name pos:line="3886" pos:column="50">themePath</name><index pos:line="3886" pos:column="59">[<expr><lit:literal type="number" pos:line="3886" pos:column="60">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="3886" pos:column="63">
				<expr_stmt><expr><call><name><name pos:line="3887" pos:column="33">_nppGUI</name><op:operator pos:line="3887" pos:column="40">.</op:operator><name pos:line="3887" pos:column="41">_themeName</name><op:operator pos:line="3887" pos:column="51">.</op:operator><name pos:line="3887" pos:column="52">assign</name></name><argument_list pos:line="3887" pos:column="58">(<argument><expr><name pos:line="3887" pos:column="59">themePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="3892" pos:column="1">void</name></type> <name><name pos:line="3892" pos:column="6">NppParameters</name><op:operator pos:line="3892" pos:column="19">::</op:operator><name pos:line="3892" pos:column="21">feedScintillaParam</name></name><parameter_list pos:line="3892" pos:column="39">(<param><decl><type><name pos:line="3892" pos:column="40">TiXmlNode</name> <type:modifier pos:line="3892" pos:column="50">*</type:modifier></type><name pos:line="3892" pos:column="51">node</name></decl></param>)</parameter_list>
<block pos:line="3893" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3894" pos:column="5">TiXmlElement</name> <type:modifier pos:line="3894" pos:column="18">*</type:modifier></type><name pos:line="3894" pos:column="19">element</name> <init pos:line="3894" pos:column="27">= <expr><call><name><name pos:line="3894" pos:column="29">node</name><op:operator pos:line="3894" pos:column="33">-&gt;</op:operator><name pos:line="3894" pos:column="35">ToElement</name></name><argument_list pos:line="3894" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:line="3896" pos:column="5">// Line Number Margin</comment>
    <decl_stmt><decl><type><specifier pos:line="3897" pos:column="5">const</specifier> <name pos:line="3897" pos:column="11">TCHAR</name> <type:modifier pos:line="3897" pos:column="17">*</type:modifier></type><name pos:line="3897" pos:column="18">nm</name> <init pos:line="3897" pos:column="21">= <expr><call><name><name pos:line="3897" pos:column="23">element</name><op:operator pos:line="3897" pos:column="30">-&gt;</op:operator><name pos:line="3897" pos:column="32">Attribute</name></name><argument_list pos:line="3897" pos:column="41">(<argument><expr><call><name pos:line="3897" pos:column="42">TEXT</name><argument_list pos:line="3897" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="3897" pos:column="47">"lineNumberMargin"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="3898" pos:column="9">if <condition pos:line="3898" pos:column="12">(<expr><name pos:line="3898" pos:column="13">nm</name></expr>)</condition><then pos:line="3898" pos:column="16"> 
	<block pos:line="3899" pos:column="9">{
		<if pos:line="3900" pos:column="17">if <condition pos:line="3900" pos:column="20">(<expr><op:operator pos:line="3900" pos:column="21">!</op:operator><call><name pos:line="3900" pos:column="22">lstrcmp</name><argument_list pos:line="3900" pos:column="29">(<argument><expr><name pos:line="3900" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3900" pos:column="34">TEXT</name><argument_list pos:line="3900" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3900" pos:column="39">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3900" pos:column="48">
			<expr_stmt><expr><name><name pos:line="3901" pos:column="25">_svp</name><op:operator pos:line="3901" pos:column="29">.</op:operator><name pos:line="3901" pos:column="30">_lineNumberMarginShow</name></name> <op:operator pos:line="3901" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="3901" pos:column="54">true</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="3902" pos:column="17">else <if pos:line="3902" pos:column="22">if <condition pos:line="3902" pos:column="25">(<expr><op:operator pos:line="3902" pos:column="26">!</op:operator><call><name pos:line="3902" pos:column="27">lstrcmp</name><argument_list pos:line="3902" pos:column="34">(<argument><expr><name pos:line="3902" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3902" pos:column="39">TEXT</name><argument_list pos:line="3902" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3902" pos:column="44">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3902" pos:column="53">
			<expr_stmt><expr><name><name pos:line="3903" pos:column="25">_svp</name><op:operator pos:line="3903" pos:column="29">.</op:operator><name pos:line="3903" pos:column="30">_lineNumberMarginShow</name></name> <op:operator pos:line="3903" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="3903" pos:column="54">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
	}</block></then></if>

	<comment type="line" pos:line="3906" pos:column="9">// Bookmark Margin</comment>
	<expr_stmt><expr><name pos:line="3907" pos:column="9">nm</name> <op:operator pos:line="3907" pos:column="12">=</op:operator> <call><name><name pos:line="3907" pos:column="14">element</name><op:operator pos:line="3907" pos:column="21">-&gt;</op:operator><name pos:line="3907" pos:column="23">Attribute</name></name><argument_list pos:line="3907" pos:column="32">(<argument><expr><call><name pos:line="3907" pos:column="33">TEXT</name><argument_list pos:line="3907" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="3907" pos:column="38">"bookMarkMargin"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3908" pos:column="9">if <condition pos:line="3908" pos:column="12">(<expr><name pos:line="3908" pos:column="13">nm</name></expr>)</condition><then pos:line="3908" pos:column="16"> 
	<block pos:line="3909" pos:column="9">{

		<if pos:line="3911" pos:column="17">if <condition pos:line="3911" pos:column="20">(<expr><op:operator pos:line="3911" pos:column="21">!</op:operator><call><name pos:line="3911" pos:column="22">lstrcmp</name><argument_list pos:line="3911" pos:column="29">(<argument><expr><name pos:line="3911" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3911" pos:column="34">TEXT</name><argument_list pos:line="3911" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3911" pos:column="39">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3911" pos:column="48">
			<expr_stmt><expr><name><name pos:line="3912" pos:column="25">_svp</name><op:operator pos:line="3912" pos:column="29">.</op:operator><name pos:line="3912" pos:column="30">_bookMarkMarginShow</name></name> <op:operator pos:line="3912" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3912" pos:column="52">true</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="3913" pos:column="17">else <if pos:line="3913" pos:column="22">if <condition pos:line="3913" pos:column="25">(<expr><op:operator pos:line="3913" pos:column="26">!</op:operator><call><name pos:line="3913" pos:column="27">lstrcmp</name><argument_list pos:line="3913" pos:column="34">(<argument><expr><name pos:line="3913" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3913" pos:column="39">TEXT</name><argument_list pos:line="3913" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3913" pos:column="44">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3913" pos:column="53">
			<expr_stmt><expr><name><name pos:line="3914" pos:column="25">_svp</name><op:operator pos:line="3914" pos:column="29">.</op:operator><name pos:line="3914" pos:column="30">_bookMarkMarginShow</name></name> <op:operator pos:line="3914" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3914" pos:column="52">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
	}</block></then></if>
<comment type="block" pos:line="3916" pos:column="1">/*
	// doc change state Margin
	nm = element-&gt;Attribute(TEXT("docChangeStateMargin"));
	if (nm) 
	{

		if (!lstrcmp(nm, TEXT("show")))
			_svp._docChangeStateMarginShow = true;
		else if (!lstrcmp(nm, TEXT("hide")))
			_svp._docChangeStateMarginShow = false;
	}
*/</comment>
    <comment type="line" pos:line="3928" pos:column="5">// Indent GuideLine </comment>
    <expr_stmt><expr><name pos:line="3929" pos:column="5">nm</name> <op:operator pos:line="3929" pos:column="8">=</op:operator> <call><name><name pos:line="3929" pos:column="10">element</name><op:operator pos:line="3929" pos:column="17">-&gt;</op:operator><name pos:line="3929" pos:column="19">Attribute</name></name><argument_list pos:line="3929" pos:column="28">(<argument><expr><call><name pos:line="3929" pos:column="29">TEXT</name><argument_list pos:line="3929" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="3929" pos:column="34">"indentGuideLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3930" pos:column="9">if <condition pos:line="3930" pos:column="12">(<expr><name pos:line="3930" pos:column="13">nm</name></expr>)</condition><then pos:line="3930" pos:column="16">
	<block pos:line="3931" pos:column="9">{
		<if pos:line="3932" pos:column="17">if <condition pos:line="3932" pos:column="20">(<expr><op:operator pos:line="3932" pos:column="21">!</op:operator><call><name pos:line="3932" pos:column="22">lstrcmp</name><argument_list pos:line="3932" pos:column="29">(<argument><expr><name pos:line="3932" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3932" pos:column="34">TEXT</name><argument_list pos:line="3932" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3932" pos:column="39">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3932" pos:column="48">
			<expr_stmt><expr><name><name pos:line="3933" pos:column="25">_svp</name><op:operator pos:line="3933" pos:column="29">.</op:operator><name pos:line="3933" pos:column="30">_indentGuideLineShow</name></name> <op:operator pos:line="3933" pos:column="51">=</op:operator> <lit:literal type="boolean" pos:line="3933" pos:column="53">true</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="3934" pos:column="17">else <if pos:line="3934" pos:column="22">if <condition pos:line="3934" pos:column="25">(<expr><op:operator pos:line="3934" pos:column="26">!</op:operator><call><name pos:line="3934" pos:column="27">lstrcmp</name><argument_list pos:line="3934" pos:column="34">(<argument><expr><name pos:line="3934" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3934" pos:column="39">TEXT</name><argument_list pos:line="3934" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3934" pos:column="44">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3934" pos:column="53">
			<expr_stmt><expr><name><name pos:line="3935" pos:column="25">_svp</name><op:operator pos:line="3935" pos:column="29">.</op:operator><name pos:line="3935" pos:column="30">_indentGuideLineShow</name></name><op:operator pos:line="3935" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="3935" pos:column="52">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
	}</block></then></if>

    <comment type="line" pos:line="3938" pos:column="5">// Folder Mark Style</comment>
    <expr_stmt><expr><name pos:line="3939" pos:column="5">nm</name> <op:operator pos:line="3939" pos:column="8">=</op:operator> <call><name><name pos:line="3939" pos:column="10">element</name><op:operator pos:line="3939" pos:column="17">-&gt;</op:operator><name pos:line="3939" pos:column="19">Attribute</name></name><argument_list pos:line="3939" pos:column="28">(<argument><expr><call><name pos:line="3939" pos:column="29">TEXT</name><argument_list pos:line="3939" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="3939" pos:column="34">"folderMarkStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3940" pos:column="9">if <condition pos:line="3940" pos:column="12">(<expr><name pos:line="3940" pos:column="13">nm</name></expr>)</condition><then pos:line="3940" pos:column="16">
	<block pos:line="3941" pos:column="9">{
		<if pos:line="3942" pos:column="17">if <condition pos:line="3942" pos:column="20">(<expr><op:operator pos:line="3942" pos:column="21">!</op:operator><call><name pos:line="3942" pos:column="22">lstrcmp</name><argument_list pos:line="3942" pos:column="29">(<argument><expr><name pos:line="3942" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3942" pos:column="34">TEXT</name><argument_list pos:line="3942" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3942" pos:column="39">"box"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3942" pos:column="47">
			<expr_stmt><expr><name><name pos:line="3943" pos:column="25">_svp</name><op:operator pos:line="3943" pos:column="29">.</op:operator><name pos:line="3943" pos:column="30">_folderStyle</name></name> <op:operator pos:line="3943" pos:column="43">=</op:operator> <name pos:line="3943" pos:column="45">FOLDER_STYLE_BOX</name></expr>;</expr_stmt></then>
		<else pos:line="3944" pos:column="17">else <if pos:line="3944" pos:column="22">if <condition pos:line="3944" pos:column="25">(<expr><op:operator pos:line="3944" pos:column="26">!</op:operator><call><name pos:line="3944" pos:column="27">lstrcmp</name><argument_list pos:line="3944" pos:column="34">(<argument><expr><name pos:line="3944" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3944" pos:column="39">TEXT</name><argument_list pos:line="3944" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3944" pos:column="44">"circle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3944" pos:column="55">
			<expr_stmt><expr><name><name pos:line="3945" pos:column="25">_svp</name><op:operator pos:line="3945" pos:column="29">.</op:operator><name pos:line="3945" pos:column="30">_folderStyle</name></name> <op:operator pos:line="3945" pos:column="43">=</op:operator> <name pos:line="3945" pos:column="45">FOLDER_STYLE_CIRCLE</name></expr>;</expr_stmt></then>
		<else pos:line="3946" pos:column="17">else <if pos:line="3946" pos:column="22">if <condition pos:line="3946" pos:column="25">(<expr><op:operator pos:line="3946" pos:column="26">!</op:operator><call><name pos:line="3946" pos:column="27">lstrcmp</name><argument_list pos:line="3946" pos:column="34">(<argument><expr><name pos:line="3946" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3946" pos:column="39">TEXT</name><argument_list pos:line="3946" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3946" pos:column="44">"arrow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3946" pos:column="54">
			<expr_stmt><expr><name><name pos:line="3947" pos:column="25">_svp</name><op:operator pos:line="3947" pos:column="29">.</op:operator><name pos:line="3947" pos:column="30">_folderStyle</name></name> <op:operator pos:line="3947" pos:column="43">=</op:operator> <name pos:line="3947" pos:column="45">FOLDER_STYLE_ARROW</name></expr>;</expr_stmt></then>
		<else pos:line="3948" pos:column="17">else <if pos:line="3948" pos:column="22">if <condition pos:line="3948" pos:column="25">(<expr><op:operator pos:line="3948" pos:column="26">!</op:operator><call><name pos:line="3948" pos:column="27">lstrcmp</name><argument_list pos:line="3948" pos:column="34">(<argument><expr><name pos:line="3948" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3948" pos:column="39">TEXT</name><argument_list pos:line="3948" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3948" pos:column="44">"simple"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3948" pos:column="55">
			<expr_stmt><expr><name><name pos:line="3949" pos:column="25">_svp</name><op:operator pos:line="3949" pos:column="29">.</op:operator><name pos:line="3949" pos:column="30">_folderStyle</name></name> <op:operator pos:line="3949" pos:column="43">=</op:operator> <name pos:line="3949" pos:column="45">FOLDER_STYLE_SIMPLE</name></expr>;</expr_stmt></then>
		<else pos:line="3950" pos:column="17">else <if pos:line="3950" pos:column="22">if <condition pos:line="3950" pos:column="25">(<expr><op:operator pos:line="3950" pos:column="26">!</op:operator><call><name pos:line="3950" pos:column="27">lstrcmp</name><argument_list pos:line="3950" pos:column="34">(<argument><expr><name pos:line="3950" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3950" pos:column="39">TEXT</name><argument_list pos:line="3950" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3950" pos:column="44">"none"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3950" pos:column="53">
			<expr_stmt><expr><name><name pos:line="3951" pos:column="25">_svp</name><op:operator pos:line="3951" pos:column="29">.</op:operator><name pos:line="3951" pos:column="30">_folderStyle</name></name> <op:operator pos:line="3951" pos:column="43">=</op:operator> <name pos:line="3951" pos:column="45">FOLDER_STYLE_NONE</name></expr>;</expr_stmt></then></if></else></if></else></if></else></if></else></if>
	}</block></then></if>

	<comment type="line" pos:line="3954" pos:column="9">// Line Wrap method</comment>
	<expr_stmt><expr><name pos:line="3955" pos:column="9">nm</name> <op:operator pos:line="3955" pos:column="12">=</op:operator> <call><name><name pos:line="3955" pos:column="14">element</name><op:operator pos:line="3955" pos:column="21">-&gt;</op:operator><name pos:line="3955" pos:column="23">Attribute</name></name><argument_list pos:line="3955" pos:column="32">(<argument><expr><call><name pos:line="3955" pos:column="33">TEXT</name><argument_list pos:line="3955" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="3955" pos:column="38">"lineWrapMethod"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3956" pos:column="9">if <condition pos:line="3956" pos:column="12">(<expr><name pos:line="3956" pos:column="13">nm</name></expr>)</condition><then pos:line="3956" pos:column="16">
	<block pos:line="3957" pos:column="9">{
		<if pos:line="3958" pos:column="17">if <condition pos:line="3958" pos:column="20">(<expr><op:operator pos:line="3958" pos:column="21">!</op:operator><call><name pos:line="3958" pos:column="22">lstrcmp</name><argument_list pos:line="3958" pos:column="29">(<argument><expr><name pos:line="3958" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3958" pos:column="34">TEXT</name><argument_list pos:line="3958" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3958" pos:column="39">"default"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3958" pos:column="51">
			<expr_stmt><expr><name><name pos:line="3959" pos:column="25">_svp</name><op:operator pos:line="3959" pos:column="29">.</op:operator><name pos:line="3959" pos:column="30">_lineWrapMethod</name></name> <op:operator pos:line="3959" pos:column="46">=</op:operator> <name pos:line="3959" pos:column="48">LINEWRAP_DEFAULT</name></expr>;</expr_stmt></then>
		<else pos:line="3960" pos:column="17">else <if pos:line="3960" pos:column="22">if <condition pos:line="3960" pos:column="25">(<expr><op:operator pos:line="3960" pos:column="26">!</op:operator><call><name pos:line="3960" pos:column="27">lstrcmp</name><argument_list pos:line="3960" pos:column="34">(<argument><expr><name pos:line="3960" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3960" pos:column="39">TEXT</name><argument_list pos:line="3960" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3960" pos:column="44">"aligned"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3960" pos:column="56">
			<expr_stmt><expr><name><name pos:line="3961" pos:column="25">_svp</name><op:operator pos:line="3961" pos:column="29">.</op:operator><name pos:line="3961" pos:column="30">_lineWrapMethod</name></name> <op:operator pos:line="3961" pos:column="46">=</op:operator> <name pos:line="3961" pos:column="48">LINEWRAP_ALIGNED</name></expr>;</expr_stmt></then>
		<else pos:line="3962" pos:column="17">else <if pos:line="3962" pos:column="22">if <condition pos:line="3962" pos:column="25">(<expr><op:operator pos:line="3962" pos:column="26">!</op:operator><call><name pos:line="3962" pos:column="27">lstrcmp</name><argument_list pos:line="3962" pos:column="34">(<argument><expr><name pos:line="3962" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3962" pos:column="39">TEXT</name><argument_list pos:line="3962" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3962" pos:column="44">"indent"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3962" pos:column="55">
			<expr_stmt><expr><name><name pos:line="3963" pos:column="25">_svp</name><op:operator pos:line="3963" pos:column="29">.</op:operator><name pos:line="3963" pos:column="30">_lineWrapMethod</name></name> <op:operator pos:line="3963" pos:column="46">=</op:operator> <name pos:line="3963" pos:column="48">LINEWRAP_INDENT</name></expr>;</expr_stmt></then></if></else></if></else></if>
	}</block></then></if>

    <comment type="line" pos:line="3966" pos:column="5">// Current Line Highlighting State</comment>
    <expr_stmt><expr><name pos:line="3967" pos:column="5">nm</name> <op:operator pos:line="3967" pos:column="8">=</op:operator> <call><name><name pos:line="3967" pos:column="10">element</name><op:operator pos:line="3967" pos:column="17">-&gt;</op:operator><name pos:line="3967" pos:column="19">Attribute</name></name><argument_list pos:line="3967" pos:column="28">(<argument><expr><call><name pos:line="3967" pos:column="29">TEXT</name><argument_list pos:line="3967" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="3967" pos:column="34">"currentLineHilitingShow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3968" pos:column="9">if <condition pos:line="3968" pos:column="12">(<expr><name pos:line="3968" pos:column="13">nm</name></expr>)</condition><then pos:line="3968" pos:column="16">
	<block pos:line="3969" pos:column="9">{
		<if pos:line="3970" pos:column="17">if <condition pos:line="3970" pos:column="20">(<expr><op:operator pos:line="3970" pos:column="21">!</op:operator><call><name pos:line="3970" pos:column="22">lstrcmp</name><argument_list pos:line="3970" pos:column="29">(<argument><expr><name pos:line="3970" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3970" pos:column="34">TEXT</name><argument_list pos:line="3970" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3970" pos:column="39">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3970" pos:column="48">
			<expr_stmt><expr><name><name pos:line="3971" pos:column="25">_svp</name><op:operator pos:line="3971" pos:column="29">.</op:operator><name pos:line="3971" pos:column="30">_currentLineHilitingShow</name></name> <op:operator pos:line="3971" pos:column="55">=</op:operator> <lit:literal type="boolean" pos:line="3971" pos:column="57">true</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="3972" pos:column="17">else <if pos:line="3972" pos:column="22">if <condition pos:line="3972" pos:column="25">(<expr><op:operator pos:line="3972" pos:column="26">!</op:operator><call><name pos:line="3972" pos:column="27">lstrcmp</name><argument_list pos:line="3972" pos:column="34">(<argument><expr><name pos:line="3972" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3972" pos:column="39">TEXT</name><argument_list pos:line="3972" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3972" pos:column="44">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3972" pos:column="53">
			<expr_stmt><expr><name><name pos:line="3973" pos:column="25">_svp</name><op:operator pos:line="3973" pos:column="29">.</op:operator><name pos:line="3973" pos:column="30">_currentLineHilitingShow</name></name> <op:operator pos:line="3973" pos:column="55">=</op:operator> <lit:literal type="boolean" pos:line="3973" pos:column="57">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
	}</block></then></if>

    <comment type="line" pos:line="3976" pos:column="5">// Current wrap symbol visibility State</comment>
    <expr_stmt><expr><name pos:line="3977" pos:column="5">nm</name> <op:operator pos:line="3977" pos:column="8">=</op:operator> <call><name><name pos:line="3977" pos:column="10">element</name><op:operator pos:line="3977" pos:column="17">-&gt;</op:operator><name pos:line="3977" pos:column="19">Attribute</name></name><argument_list pos:line="3977" pos:column="28">(<argument><expr><call><name pos:line="3977" pos:column="29">TEXT</name><argument_list pos:line="3977" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="3977" pos:column="34">"wrapSymbolShow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3978" pos:column="9">if <condition pos:line="3978" pos:column="12">(<expr><name pos:line="3978" pos:column="13">nm</name></expr>)</condition><then pos:line="3978" pos:column="16">
	<block pos:line="3979" pos:column="9">{
		<if pos:line="3980" pos:column="17">if <condition pos:line="3980" pos:column="20">(<expr><op:operator pos:line="3980" pos:column="21">!</op:operator><call><name pos:line="3980" pos:column="22">lstrcmp</name><argument_list pos:line="3980" pos:column="29">(<argument><expr><name pos:line="3980" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3980" pos:column="34">TEXT</name><argument_list pos:line="3980" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3980" pos:column="39">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3980" pos:column="48">
			<expr_stmt><expr><name><name pos:line="3981" pos:column="25">_svp</name><op:operator pos:line="3981" pos:column="29">.</op:operator><name pos:line="3981" pos:column="30">_wrapSymbolShow</name></name> <op:operator pos:line="3981" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="3981" pos:column="48">true</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="3982" pos:column="17">else <if pos:line="3982" pos:column="22">if <condition pos:line="3982" pos:column="25">(<expr><op:operator pos:line="3982" pos:column="26">!</op:operator><call><name pos:line="3982" pos:column="27">lstrcmp</name><argument_list pos:line="3982" pos:column="34">(<argument><expr><name pos:line="3982" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3982" pos:column="39">TEXT</name><argument_list pos:line="3982" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3982" pos:column="44">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3982" pos:column="53">
			<expr_stmt><expr><name><name pos:line="3983" pos:column="25">_svp</name><op:operator pos:line="3983" pos:column="29">.</op:operator><name pos:line="3983" pos:column="30">_wrapSymbolShow</name></name> <op:operator pos:line="3983" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="3983" pos:column="48">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
	}</block></then></if>

	<comment type="line" pos:line="3986" pos:column="9">// Do Wrap</comment>
    <expr_stmt><expr><name pos:line="3987" pos:column="5">nm</name> <op:operator pos:line="3987" pos:column="8">=</op:operator> <call><name><name pos:line="3987" pos:column="10">element</name><op:operator pos:line="3987" pos:column="17">-&gt;</op:operator><name pos:line="3987" pos:column="19">Attribute</name></name><argument_list pos:line="3987" pos:column="28">(<argument><expr><call><name pos:line="3987" pos:column="29">TEXT</name><argument_list pos:line="3987" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="3987" pos:column="34">"Wrap"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3988" pos:column="9">if <condition pos:line="3988" pos:column="12">(<expr><name pos:line="3988" pos:column="13">nm</name></expr>)</condition><then pos:line="3988" pos:column="16">
	<block pos:line="3989" pos:column="9">{
		<if pos:line="3990" pos:column="17">if <condition pos:line="3990" pos:column="20">(<expr><op:operator pos:line="3990" pos:column="21">!</op:operator><call><name pos:line="3990" pos:column="22">lstrcmp</name><argument_list pos:line="3990" pos:column="29">(<argument><expr><name pos:line="3990" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="3990" pos:column="34">TEXT</name><argument_list pos:line="3990" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="3990" pos:column="39">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3990" pos:column="47">
			<expr_stmt><expr><name><name pos:line="3991" pos:column="25">_svp</name><op:operator pos:line="3991" pos:column="29">.</op:operator><name pos:line="3991" pos:column="30">_doWrap</name></name> <op:operator pos:line="3991" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="3991" pos:column="40">true</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="3992" pos:column="17">else <if pos:line="3992" pos:column="22">if <condition pos:line="3992" pos:column="25">(<expr><op:operator pos:line="3992" pos:column="26">!</op:operator><call><name pos:line="3992" pos:column="27">lstrcmp</name><argument_list pos:line="3992" pos:column="34">(<argument><expr><name pos:line="3992" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="3992" pos:column="39">TEXT</name><argument_list pos:line="3992" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="3992" pos:column="44">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="3992" pos:column="51">
			<expr_stmt><expr><name><name pos:line="3993" pos:column="25">_svp</name><op:operator pos:line="3993" pos:column="29">.</op:operator><name pos:line="3993" pos:column="30">_doWrap</name></name> <op:operator pos:line="3993" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="3993" pos:column="40">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
	}</block></then></if>

	<comment type="line" pos:line="3996" pos:column="9">// Do Edge</comment>
    <expr_stmt><expr><name pos:line="3997" pos:column="5">nm</name> <op:operator pos:line="3997" pos:column="8">=</op:operator> <call><name><name pos:line="3997" pos:column="10">element</name><op:operator pos:line="3997" pos:column="17">-&gt;</op:operator><name pos:line="3997" pos:column="19">Attribute</name></name><argument_list pos:line="3997" pos:column="28">(<argument><expr><call><name pos:line="3997" pos:column="29">TEXT</name><argument_list pos:line="3997" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="3997" pos:column="34">"edge"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="3998" pos:column="9">if <condition pos:line="3998" pos:column="12">(<expr><name pos:line="3998" pos:column="13">nm</name></expr>)</condition><then pos:line="3998" pos:column="16">
	<block pos:line="3999" pos:column="9">{
		<if pos:line="4000" pos:column="17">if <condition pos:line="4000" pos:column="20">(<expr><op:operator pos:line="4000" pos:column="21">!</op:operator><call><name pos:line="4000" pos:column="22">lstrcmp</name><argument_list pos:line="4000" pos:column="29">(<argument><expr><name pos:line="4000" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="4000" pos:column="34">TEXT</name><argument_list pos:line="4000" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="4000" pos:column="39">"background"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4000" pos:column="54">
			<expr_stmt><expr><name><name pos:line="4001" pos:column="25">_svp</name><op:operator pos:line="4001" pos:column="29">.</op:operator><name pos:line="4001" pos:column="30">_edgeMode</name></name> <op:operator pos:line="4001" pos:column="40">=</op:operator> <name pos:line="4001" pos:column="42">EDGE_BACKGROUND</name></expr>;</expr_stmt></then>
		<else pos:line="4002" pos:column="17">else <if pos:line="4002" pos:column="22">if <condition pos:line="4002" pos:column="25">(<expr><op:operator pos:line="4002" pos:column="26">!</op:operator><call><name pos:line="4002" pos:column="27">lstrcmp</name><argument_list pos:line="4002" pos:column="34">(<argument><expr><name pos:line="4002" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4002" pos:column="39">TEXT</name><argument_list pos:line="4002" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4002" pos:column="44">"line"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4002" pos:column="53">
			<expr_stmt><expr><name><name pos:line="4003" pos:column="25">_svp</name><op:operator pos:line="4003" pos:column="29">.</op:operator><name pos:line="4003" pos:column="30">_edgeMode</name></name> <op:operator pos:line="4003" pos:column="40">=</op:operator> <name pos:line="4003" pos:column="42">EDGE_LINE</name></expr>;</expr_stmt></then>
		<else pos:line="4004" pos:column="17">else
			<expr_stmt><expr><name><name pos:line="4005" pos:column="25">_svp</name><op:operator pos:line="4005" pos:column="29">.</op:operator><name pos:line="4005" pos:column="30">_edgeMode</name></name> <op:operator pos:line="4005" pos:column="40">=</op:operator> <name pos:line="4005" pos:column="42">EDGE_NONE</name></expr>;</expr_stmt></else></if></else></if>
	}</block></then></if>
	
	<decl_stmt><decl><type><name pos:line="4008" pos:column="9">int</name></type> <name pos:line="4008" pos:column="13">val</name></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="4009" pos:column="9">nm</name> <op:operator pos:line="4009" pos:column="12">=</op:operator> <call><name><name pos:line="4009" pos:column="14">element</name><op:operator pos:line="4009" pos:column="21">-&gt;</op:operator><name pos:line="4009" pos:column="23">Attribute</name></name><argument_list pos:line="4009" pos:column="32">(<argument><expr><call><name pos:line="4009" pos:column="33">TEXT</name><argument_list pos:line="4009" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="4009" pos:column="38">"edgeNbColumn"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4009" pos:column="55">&amp;</op:operator><name pos:line="4009" pos:column="56">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4010" pos:column="9">if <condition pos:line="4010" pos:column="12">(<expr><name pos:line="4010" pos:column="13">nm</name></expr>)</condition><then pos:line="4010" pos:column="16">
	<block pos:line="4011" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="4012" pos:column="17">_svp</name><op:operator pos:line="4012" pos:column="21">.</op:operator><name pos:line="4012" pos:column="22">_edgeNbColumn</name></name> <op:operator pos:line="4012" pos:column="36">=</op:operator> <name pos:line="4012" pos:column="38">val</name></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="4015" pos:column="9">nm</name> <op:operator pos:line="4015" pos:column="12">=</op:operator> <call><name><name pos:line="4015" pos:column="14">element</name><op:operator pos:line="4015" pos:column="21">-&gt;</op:operator><name pos:line="4015" pos:column="23">Attribute</name></name><argument_list pos:line="4015" pos:column="32">(<argument><expr><call><name pos:line="4015" pos:column="33">TEXT</name><argument_list pos:line="4015" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="4015" pos:column="38">"zoom"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4015" pos:column="47">&amp;</op:operator><name pos:line="4015" pos:column="48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4016" pos:column="9">if <condition pos:line="4016" pos:column="12">(<expr><name pos:line="4016" pos:column="13">nm</name></expr>)</condition><then pos:line="4016" pos:column="16">
	<block pos:line="4017" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="4018" pos:column="17">_svp</name><op:operator pos:line="4018" pos:column="21">.</op:operator><name pos:line="4018" pos:column="22">_zoom</name></name> <op:operator pos:line="4018" pos:column="28">=</op:operator> <name pos:line="4018" pos:column="30">val</name></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="4021" pos:column="9">nm</name> <op:operator pos:line="4021" pos:column="12">=</op:operator> <call><name><name pos:line="4021" pos:column="14">element</name><op:operator pos:line="4021" pos:column="21">-&gt;</op:operator><name pos:line="4021" pos:column="23">Attribute</name></name><argument_list pos:line="4021" pos:column="32">(<argument><expr><call><name pos:line="4021" pos:column="33">TEXT</name><argument_list pos:line="4021" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="4021" pos:column="38">"zoom2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4021" pos:column="48">&amp;</op:operator><name pos:line="4021" pos:column="49">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4022" pos:column="9">if <condition pos:line="4022" pos:column="12">(<expr><name pos:line="4022" pos:column="13">nm</name></expr>)</condition><then pos:line="4022" pos:column="16">
	<block pos:line="4023" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="4024" pos:column="17">_svp</name><op:operator pos:line="4024" pos:column="21">.</op:operator><name pos:line="4024" pos:column="22">_zoom2</name></name> <op:operator pos:line="4024" pos:column="29">=</op:operator> <name pos:line="4024" pos:column="31">val</name></expr>;</expr_stmt>
	}</block></then></if>

	<comment type="line" pos:line="4027" pos:column="9">// White Space visibility State</comment>
    <expr_stmt><expr><name pos:line="4028" pos:column="5">nm</name> <op:operator pos:line="4028" pos:column="8">=</op:operator> <call><name><name pos:line="4028" pos:column="10">element</name><op:operator pos:line="4028" pos:column="17">-&gt;</op:operator><name pos:line="4028" pos:column="19">Attribute</name></name><argument_list pos:line="4028" pos:column="28">(<argument><expr><call><name pos:line="4028" pos:column="29">TEXT</name><argument_list pos:line="4028" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="4028" pos:column="34">"whiteSpaceShow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4029" pos:column="9">if <condition pos:line="4029" pos:column="12">(<expr><name pos:line="4029" pos:column="13">nm</name></expr>)</condition><then pos:line="4029" pos:column="16">
	<block pos:line="4030" pos:column="9">{
		<if pos:line="4031" pos:column="17">if <condition pos:line="4031" pos:column="20">(<expr><op:operator pos:line="4031" pos:column="21">!</op:operator><call><name pos:line="4031" pos:column="22">lstrcmp</name><argument_list pos:line="4031" pos:column="29">(<argument><expr><name pos:line="4031" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="4031" pos:column="34">TEXT</name><argument_list pos:line="4031" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="4031" pos:column="39">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4031" pos:column="48">
			<expr_stmt><expr><name><name pos:line="4032" pos:column="25">_svp</name><op:operator pos:line="4032" pos:column="29">.</op:operator><name pos:line="4032" pos:column="30">_whiteSpaceShow</name></name> <op:operator pos:line="4032" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="4032" pos:column="48">true</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="4033" pos:column="17">else <if pos:line="4033" pos:column="22">if <condition pos:line="4033" pos:column="25">(<expr><op:operator pos:line="4033" pos:column="26">!</op:operator><call><name pos:line="4033" pos:column="27">lstrcmp</name><argument_list pos:line="4033" pos:column="34">(<argument><expr><name pos:line="4033" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4033" pos:column="39">TEXT</name><argument_list pos:line="4033" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4033" pos:column="44">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4033" pos:column="53">
			<expr_stmt><expr><name><name pos:line="4034" pos:column="25">_svp</name><op:operator pos:line="4034" pos:column="29">.</op:operator><name pos:line="4034" pos:column="30">_whiteSpaceShow</name></name> <op:operator pos:line="4034" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="4034" pos:column="48">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
	}</block></then></if>

	<comment type="line" pos:line="4037" pos:column="9">// EOL visibility State</comment>
    <expr_stmt><expr><name pos:line="4038" pos:column="5">nm</name> <op:operator pos:line="4038" pos:column="8">=</op:operator> <call><name><name pos:line="4038" pos:column="10">element</name><op:operator pos:line="4038" pos:column="17">-&gt;</op:operator><name pos:line="4038" pos:column="19">Attribute</name></name><argument_list pos:line="4038" pos:column="28">(<argument><expr><call><name pos:line="4038" pos:column="29">TEXT</name><argument_list pos:line="4038" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="4038" pos:column="34">"eolShow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4039" pos:column="9">if <condition pos:line="4039" pos:column="12">(<expr><name pos:line="4039" pos:column="13">nm</name></expr>)</condition><then pos:line="4039" pos:column="16">
	<block pos:line="4040" pos:column="9">{
		<if pos:line="4041" pos:column="17">if <condition pos:line="4041" pos:column="20">(<expr><op:operator pos:line="4041" pos:column="21">!</op:operator><call><name pos:line="4041" pos:column="22">lstrcmp</name><argument_list pos:line="4041" pos:column="29">(<argument><expr><name pos:line="4041" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="4041" pos:column="34">TEXT</name><argument_list pos:line="4041" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="4041" pos:column="39">"show"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4041" pos:column="48">
			<expr_stmt><expr><name><name pos:line="4042" pos:column="25">_svp</name><op:operator pos:line="4042" pos:column="29">.</op:operator><name pos:line="4042" pos:column="30">_eolShow</name></name> <op:operator pos:line="4042" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="4042" pos:column="41">true</lit:literal></expr>;</expr_stmt></then>
		<else pos:line="4043" pos:column="17">else <if pos:line="4043" pos:column="22">if <condition pos:line="4043" pos:column="25">(<expr><op:operator pos:line="4043" pos:column="26">!</op:operator><call><name pos:line="4043" pos:column="27">lstrcmp</name><argument_list pos:line="4043" pos:column="34">(<argument><expr><name pos:line="4043" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4043" pos:column="39">TEXT</name><argument_list pos:line="4043" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4043" pos:column="44">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4043" pos:column="53">
			<expr_stmt><expr><name><name pos:line="4044" pos:column="25">_svp</name><op:operator pos:line="4044" pos:column="29">.</op:operator><name pos:line="4044" pos:column="30">_eolShow</name></name> <op:operator pos:line="4044" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="4044" pos:column="41">false</lit:literal></expr>;</expr_stmt></then></if></else></if>
	}</block></then></if>
	
	<expr_stmt><expr><name pos:line="4047" pos:column="9">nm</name> <op:operator pos:line="4047" pos:column="12">=</op:operator> <call><name><name pos:line="4047" pos:column="14">element</name><op:operator pos:line="4047" pos:column="21">-&gt;</op:operator><name pos:line="4047" pos:column="23">Attribute</name></name><argument_list pos:line="4047" pos:column="32">(<argument><expr><call><name pos:line="4047" pos:column="33">TEXT</name><argument_list pos:line="4047" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="4047" pos:column="38">"borderWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4047" pos:column="54">&amp;</op:operator><name pos:line="4047" pos:column="55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="4048" pos:column="9">if <condition pos:line="4048" pos:column="12">(<expr><name pos:line="4048" pos:column="13">nm</name></expr>)</condition><then pos:line="4048" pos:column="16">
	<block pos:line="4049" pos:column="9">{
		<if pos:line="4050" pos:column="17">if <condition pos:line="4050" pos:column="20">(<expr><name pos:line="4050" pos:column="21">val</name> <op:operator pos:line="4050" pos:column="25">&gt;=</op:operator> <lit:literal type="number" pos:line="4050" pos:column="28">0</lit:literal> <op:operator pos:line="4050" pos:column="30">&amp;&amp;</op:operator> <name pos:line="4050" pos:column="33">val</name> <op:operator pos:line="4050" pos:column="37">&lt;=</op:operator> <lit:literal type="number" pos:line="4050" pos:column="40">30</lit:literal></expr>)</condition><then pos:line="4050" pos:column="43">
			<expr_stmt><expr><name><name pos:line="4051" pos:column="25">_svp</name><op:operator pos:line="4051" pos:column="29">.</op:operator><name pos:line="4051" pos:column="30">_borderWidth</name></name> <op:operator pos:line="4051" pos:column="43">=</op:operator> <name pos:line="4051" pos:column="45">val</name></expr>;</expr_stmt></then></if>
	}</block></then></if>
}</block></function>


<function><type><name pos:line="4056" pos:column="1">void</name></type> <name><name pos:line="4056" pos:column="6">NppParameters</name><op:operator pos:line="4056" pos:column="19">::</op:operator><name pos:line="4056" pos:column="21">feedDockingManager</name></name><parameter_list pos:line="4056" pos:column="39">(<param><decl><type><name pos:line="4056" pos:column="40">TiXmlNode</name> <type:modifier pos:line="4056" pos:column="50">*</type:modifier></type><name pos:line="4056" pos:column="51">node</name></decl></param>)</parameter_list>
<block pos:line="4057" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4058" pos:column="5">TiXmlElement</name> <type:modifier pos:line="4058" pos:column="18">*</type:modifier></type><name pos:line="4058" pos:column="19">element</name> <init pos:line="4058" pos:column="27">= <expr><call><name><name pos:line="4058" pos:column="29">node</name><op:operator pos:line="4058" pos:column="33">-&gt;</op:operator><name pos:line="4058" pos:column="35">ToElement</name></name><argument_list pos:line="4058" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt><decl><type><name pos:line="4060" pos:column="5">int</name></type> <name pos:line="4060" pos:column="9">i</name></decl>;</decl_stmt>
	<if pos:line="4061" pos:column="9">if <condition pos:line="4061" pos:column="12">(<expr><call><name><name pos:line="4061" pos:column="13">element</name><op:operator pos:line="4061" pos:column="20">-&gt;</op:operator><name pos:line="4061" pos:column="22">Attribute</name></name><argument_list pos:line="4061" pos:column="31">(<argument><expr><call><name pos:line="4061" pos:column="32">TEXT</name><argument_list pos:line="4061" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4061" pos:column="37">"leftWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4061" pos:column="51">&amp;</op:operator><name pos:line="4061" pos:column="52">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4061" pos:column="55">
		<expr_stmt><expr><name><name pos:line="4062" pos:column="17">_nppGUI</name><op:operator pos:line="4062" pos:column="24">.</op:operator><name pos:line="4062" pos:column="25">_dockingData</name><op:operator pos:line="4062" pos:column="37">.</op:operator><name pos:line="4062" pos:column="38">_leftWidth</name></name> <op:operator pos:line="4062" pos:column="49">=</op:operator> <name pos:line="4062" pos:column="51">i</name></expr>;</expr_stmt></then></if>

	<if pos:line="4064" pos:column="9">if <condition pos:line="4064" pos:column="12">(<expr><call><name><name pos:line="4064" pos:column="13">element</name><op:operator pos:line="4064" pos:column="20">-&gt;</op:operator><name pos:line="4064" pos:column="22">Attribute</name></name><argument_list pos:line="4064" pos:column="31">(<argument><expr><call><name pos:line="4064" pos:column="32">TEXT</name><argument_list pos:line="4064" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4064" pos:column="37">"rightWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4064" pos:column="52">&amp;</op:operator><name pos:line="4064" pos:column="53">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4064" pos:column="56">
		<expr_stmt><expr><name><name pos:line="4065" pos:column="17">_nppGUI</name><op:operator pos:line="4065" pos:column="24">.</op:operator><name pos:line="4065" pos:column="25">_dockingData</name><op:operator pos:line="4065" pos:column="37">.</op:operator><name pos:line="4065" pos:column="38">_rightWidth</name></name> <op:operator pos:line="4065" pos:column="50">=</op:operator> <name pos:line="4065" pos:column="52">i</name></expr>;</expr_stmt></then></if>

	<if pos:line="4067" pos:column="9">if <condition pos:line="4067" pos:column="12">(<expr><call><name><name pos:line="4067" pos:column="13">element</name><op:operator pos:line="4067" pos:column="20">-&gt;</op:operator><name pos:line="4067" pos:column="22">Attribute</name></name><argument_list pos:line="4067" pos:column="31">(<argument><expr><call><name pos:line="4067" pos:column="32">TEXT</name><argument_list pos:line="4067" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4067" pos:column="37">"topHeight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4067" pos:column="51">&amp;</op:operator><name pos:line="4067" pos:column="52">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4067" pos:column="55">
		<expr_stmt><expr><name><name pos:line="4068" pos:column="17">_nppGUI</name><op:operator pos:line="4068" pos:column="24">.</op:operator><name pos:line="4068" pos:column="25">_dockingData</name><op:operator pos:line="4068" pos:column="37">.</op:operator><name pos:line="4068" pos:column="38">_topHeight</name></name> <op:operator pos:line="4068" pos:column="49">=</op:operator> <name pos:line="4068" pos:column="51">i</name></expr>;</expr_stmt></then></if>

	<if pos:line="4070" pos:column="9">if <condition pos:line="4070" pos:column="12">(<expr><call><name><name pos:line="4070" pos:column="13">element</name><op:operator pos:line="4070" pos:column="20">-&gt;</op:operator><name pos:line="4070" pos:column="22">Attribute</name></name><argument_list pos:line="4070" pos:column="31">(<argument><expr><call><name pos:line="4070" pos:column="32">TEXT</name><argument_list pos:line="4070" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4070" pos:column="37">"bottomHeight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4070" pos:column="54">&amp;</op:operator><name pos:line="4070" pos:column="55">i</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4070" pos:column="58">
		<expr_stmt><expr><name><name pos:line="4071" pos:column="17">_nppGUI</name><op:operator pos:line="4071" pos:column="24">.</op:operator><name pos:line="4071" pos:column="25">_dockingData</name><op:operator pos:line="4071" pos:column="37">.</op:operator><name pos:line="4071" pos:column="38">_bottomHight</name></name> <op:operator pos:line="4071" pos:column="51">=</op:operator> <name pos:line="4071" pos:column="53">i</name></expr>;</expr_stmt></then></if>

	

	<for pos:line="4075" pos:column="9">for (<init><decl><type><name pos:line="4075" pos:column="14">TiXmlNode</name> <type:modifier pos:line="4075" pos:column="24">*</type:modifier></type><name pos:line="4075" pos:column="25">childNode</name> <init pos:line="4075" pos:column="35">= <expr><call><name><name pos:line="4075" pos:column="37">node</name><op:operator pos:line="4075" pos:column="41">-&gt;</op:operator><name pos:line="4075" pos:column="43">FirstChildElement</name></name><argument_list pos:line="4075" pos:column="60">(<argument><expr><call><name pos:line="4075" pos:column="61">TEXT</name><argument_list pos:line="4075" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="4075" pos:column="66">"FloatingWindow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="4076" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="4077" pos:column="17">childNode</name> <op:operator pos:line="4077" pos:column="27">=</op:operator> <call><name><name pos:line="4077" pos:column="29">childNode</name><op:operator pos:line="4077" pos:column="38">-&gt;</op:operator><name pos:line="4077" pos:column="40">NextSibling</name></name><argument_list pos:line="4077" pos:column="51">(<argument><expr><call><name pos:line="4077" pos:column="52">TEXT</name><argument_list pos:line="4077" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="4077" pos:column="57">"FloatingWindow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="4078" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4079" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4079" pos:column="30">*</type:modifier></type><name pos:line="4079" pos:column="31">floatElement</name> <init pos:line="4079" pos:column="44">= <expr><call><name><name pos:line="4079" pos:column="46">childNode</name><op:operator pos:line="4079" pos:column="55">-&gt;</op:operator><name pos:line="4079" pos:column="57">ToElement</name></name><argument_list pos:line="4079" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4080" pos:column="17">int</name></type> <name pos:line="4080" pos:column="21">cont</name></decl>;</decl_stmt>
		<if pos:line="4081" pos:column="17">if <condition pos:line="4081" pos:column="20">(<expr><call><name><name pos:line="4081" pos:column="21">floatElement</name><op:operator pos:line="4081" pos:column="33">-&gt;</op:operator><name pos:line="4081" pos:column="35">Attribute</name></name><argument_list pos:line="4081" pos:column="44">(<argument><expr><call><name pos:line="4081" pos:column="45">TEXT</name><argument_list pos:line="4081" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="4081" pos:column="50">"cont"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4081" pos:column="59">&amp;</op:operator><name pos:line="4081" pos:column="60">cont</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4081" pos:column="66">
		<block pos:line="4082" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="4083" pos:column="25">int</name></type> <name pos:line="4083" pos:column="29">x</name> <init pos:line="4083" pos:column="31">= <expr><lit:literal type="number" pos:line="4083" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4084" pos:column="25">int</name></type> <name pos:line="4084" pos:column="29">y</name> <init pos:line="4084" pos:column="31">= <expr><lit:literal type="number" pos:line="4084" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4085" pos:column="25">int</name></type> <name pos:line="4085" pos:column="29">w</name> <init pos:line="4085" pos:column="31">= <expr><lit:literal type="number" pos:line="4085" pos:column="33">100</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4086" pos:column="25">int</name></type> <name pos:line="4086" pos:column="29">h</name> <init pos:line="4086" pos:column="31">= <expr><lit:literal type="number" pos:line="4086" pos:column="33">100</lit:literal></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="4088" pos:column="25">floatElement</name><op:operator pos:line="4088" pos:column="37">-&gt;</op:operator><name pos:line="4088" pos:column="39">Attribute</name></name><argument_list pos:line="4088" pos:column="48">(<argument><expr><call><name pos:line="4088" pos:column="49">TEXT</name><argument_list pos:line="4088" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="4088" pos:column="54">"x"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4088" pos:column="60">&amp;</op:operator><name pos:line="4088" pos:column="61">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4089" pos:column="25">floatElement</name><op:operator pos:line="4089" pos:column="37">-&gt;</op:operator><name pos:line="4089" pos:column="39">Attribute</name></name><argument_list pos:line="4089" pos:column="48">(<argument><expr><call><name pos:line="4089" pos:column="49">TEXT</name><argument_list pos:line="4089" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="4089" pos:column="54">"y"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4089" pos:column="60">&amp;</op:operator><name pos:line="4089" pos:column="61">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4090" pos:column="25">floatElement</name><op:operator pos:line="4090" pos:column="37">-&gt;</op:operator><name pos:line="4090" pos:column="39">Attribute</name></name><argument_list pos:line="4090" pos:column="48">(<argument><expr><call><name pos:line="4090" pos:column="49">TEXT</name><argument_list pos:line="4090" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="4090" pos:column="54">"width"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4090" pos:column="64">&amp;</op:operator><name pos:line="4090" pos:column="65">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4091" pos:column="25">floatElement</name><op:operator pos:line="4091" pos:column="37">-&gt;</op:operator><name pos:line="4091" pos:column="39">Attribute</name></name><argument_list pos:line="4091" pos:column="48">(<argument><expr><call><name pos:line="4091" pos:column="49">TEXT</name><argument_list pos:line="4091" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="4091" pos:column="54">"height"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4091" pos:column="65">&amp;</op:operator><name pos:line="4091" pos:column="66">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4092" pos:column="25">_nppGUI</name><op:operator pos:line="4092" pos:column="32">.</op:operator><name pos:line="4092" pos:column="33">_dockingData</name><op:operator pos:line="4092" pos:column="45">.</op:operator><name pos:line="4092" pos:column="46">_flaotingWindowInfo</name><op:operator pos:line="4092" pos:column="65">.</op:operator><name pos:line="4092" pos:column="66">push_back</name></name><argument_list pos:line="4092" pos:column="75">(<argument><expr><call><name pos:line="4092" pos:column="76">FloatingWindowInfo</name><argument_list pos:line="4092" pos:column="94">(<argument><expr><name pos:line="4092" pos:column="95">cont</name></expr></argument>, <argument><expr><name pos:line="4092" pos:column="101">x</name></expr></argument>, <argument><expr><name pos:line="4092" pos:column="104">y</name></expr></argument>, <argument><expr><name pos:line="4092" pos:column="107">w</name></expr></argument>, <argument><expr><name pos:line="4092" pos:column="110">h</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<for pos:line="4096" pos:column="9">for (<init><decl><type><name pos:line="4096" pos:column="14">TiXmlNode</name> <type:modifier pos:line="4096" pos:column="24">*</type:modifier></type><name pos:line="4096" pos:column="25">childNode</name> <init pos:line="4096" pos:column="35">= <expr><call><name><name pos:line="4096" pos:column="37">node</name><op:operator pos:line="4096" pos:column="41">-&gt;</op:operator><name pos:line="4096" pos:column="43">FirstChildElement</name></name><argument_list pos:line="4096" pos:column="60">(<argument><expr><call><name pos:line="4096" pos:column="61">TEXT</name><argument_list pos:line="4096" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="4096" pos:column="66">"PluginDlg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="4097" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="4098" pos:column="17">childNode</name> <op:operator pos:line="4098" pos:column="27">=</op:operator> <call><name><name pos:line="4098" pos:column="29">childNode</name><op:operator pos:line="4098" pos:column="38">-&gt;</op:operator><name pos:line="4098" pos:column="40">NextSibling</name></name><argument_list pos:line="4098" pos:column="51">(<argument><expr><call><name pos:line="4098" pos:column="52">TEXT</name><argument_list pos:line="4098" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="4098" pos:column="57">"PluginDlg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="4099" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4100" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4100" pos:column="30">*</type:modifier></type><name pos:line="4100" pos:column="31">dlgElement</name> <init pos:line="4100" pos:column="42">= <expr><call><name><name pos:line="4100" pos:column="44">childNode</name><op:operator pos:line="4100" pos:column="53">-&gt;</op:operator><name pos:line="4100" pos:column="55">ToElement</name></name><argument_list pos:line="4100" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="4101" pos:column="17">const</specifier> <name pos:line="4101" pos:column="23">TCHAR</name> <type:modifier pos:line="4101" pos:column="29">*</type:modifier></type><name pos:line="4101" pos:column="30">name</name> <init pos:line="4101" pos:column="35">= <expr><call><name><name pos:line="4101" pos:column="37">dlgElement</name><op:operator pos:line="4101" pos:column="47">-&gt;</op:operator><name pos:line="4101" pos:column="49">Attribute</name></name><argument_list pos:line="4101" pos:column="58">(<argument><expr><call><name pos:line="4101" pos:column="59">TEXT</name><argument_list pos:line="4101" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="4101" pos:column="64">"pluginName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="4103" pos:column="17">int</name></type> <name pos:line="4103" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="4104" pos:column="17">const</specifier> <name pos:line="4104" pos:column="23">TCHAR</name> <type:modifier pos:line="4104" pos:column="29">*</type:modifier></type><name pos:line="4104" pos:column="30">idStr</name> <init pos:line="4104" pos:column="36">= <expr><call><name><name pos:line="4104" pos:column="38">dlgElement</name><op:operator pos:line="4104" pos:column="48">-&gt;</op:operator><name pos:line="4104" pos:column="50">Attribute</name></name><argument_list pos:line="4104" pos:column="59">(<argument><expr><call><name pos:line="4104" pos:column="60">TEXT</name><argument_list pos:line="4104" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="4104" pos:column="65">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4104" pos:column="72">&amp;</op:operator><name pos:line="4104" pos:column="73">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4105" pos:column="17">if <condition pos:line="4105" pos:column="20">(<expr><name pos:line="4105" pos:column="21">name</name> <op:operator pos:line="4105" pos:column="26">&amp;&amp;</op:operator> <name pos:line="4105" pos:column="29">idStr</name></expr>)</condition><then pos:line="4105" pos:column="35">
		<block pos:line="4106" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="4107" pos:column="25">int</name></type> <name pos:line="4107" pos:column="29">curr</name> <init pos:line="4107" pos:column="34">= <expr><lit:literal type="number" pos:line="4107" pos:column="36">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4107" pos:column="39">// on left</comment>
			<decl_stmt><decl><type><name pos:line="4108" pos:column="25">int</name></type> <name pos:line="4108" pos:column="29">prev</name> <init pos:line="4108" pos:column="34">= <expr><lit:literal type="number" pos:line="4108" pos:column="36">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4108" pos:column="39">// on left</comment>

			<expr_stmt><expr><call><name><name pos:line="4110" pos:column="25">dlgElement</name><op:operator pos:line="4110" pos:column="35">-&gt;</op:operator><name pos:line="4110" pos:column="37">Attribute</name></name><argument_list pos:line="4110" pos:column="46">(<argument><expr><call><name pos:line="4110" pos:column="47">TEXT</name><argument_list pos:line="4110" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4110" pos:column="52">"curr"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4110" pos:column="61">&amp;</op:operator><name pos:line="4110" pos:column="62">curr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4111" pos:column="25">dlgElement</name><op:operator pos:line="4111" pos:column="35">-&gt;</op:operator><name pos:line="4111" pos:column="37">Attribute</name></name><argument_list pos:line="4111" pos:column="46">(<argument><expr><call><name pos:line="4111" pos:column="47">TEXT</name><argument_list pos:line="4111" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4111" pos:column="52">"prev"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4111" pos:column="61">&amp;</op:operator><name pos:line="4111" pos:column="62">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="4113" pos:column="25">bool</name></type> <name pos:line="4113" pos:column="30">isVisible</name> <init pos:line="4113" pos:column="40">= <expr><lit:literal type="boolean" pos:line="4113" pos:column="42">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="4114" pos:column="25">const</specifier> <name pos:line="4114" pos:column="31">TCHAR</name> <type:modifier pos:line="4114" pos:column="37">*</type:modifier></type><name pos:line="4114" pos:column="38">val</name> <init pos:line="4114" pos:column="42">= <expr><call><name><name pos:line="4114" pos:column="44">dlgElement</name><op:operator pos:line="4114" pos:column="54">-&gt;</op:operator><name pos:line="4114" pos:column="56">Attribute</name></name><argument_list pos:line="4114" pos:column="65">(<argument><expr><call><name pos:line="4114" pos:column="66">TEXT</name><argument_list pos:line="4114" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="4114" pos:column="71">"isVisible"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4115" pos:column="25">if <condition pos:line="4115" pos:column="28">(<expr><name pos:line="4115" pos:column="29">val</name></expr>)</condition><then pos:line="4115" pos:column="33">
			<block pos:line="4116" pos:column="25">{
				<expr_stmt><expr><name pos:line="4117" pos:column="33">isVisible</name> <op:operator pos:line="4117" pos:column="43">=</op:operator> <op:operator pos:line="4117" pos:column="45">(</op:operator><call><name pos:line="4117" pos:column="46">lstrcmp</name><argument_list pos:line="4117" pos:column="53">(<argument><expr><name pos:line="4117" pos:column="54">val</name></expr></argument>, <argument><expr><call><name pos:line="4117" pos:column="59">TEXT</name><argument_list pos:line="4117" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="4117" pos:column="64">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="4117" pos:column="72">==</op:operator> <lit:literal type="number" pos:line="4117" pos:column="75">0</lit:literal><op:operator pos:line="4117" pos:column="76">)</op:operator></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><call><name><name pos:line="4120" pos:column="25">_nppGUI</name><op:operator pos:line="4120" pos:column="32">.</op:operator><name pos:line="4120" pos:column="33">_dockingData</name><op:operator pos:line="4120" pos:column="45">.</op:operator><name pos:line="4120" pos:column="46">_pluginDockInfo</name><op:operator pos:line="4120" pos:column="61">.</op:operator><name pos:line="4120" pos:column="62">push_back</name></name><argument_list pos:line="4120" pos:column="71">(<argument><expr><call><name pos:line="4120" pos:column="72">PluginDlgDockingInfo</name><argument_list pos:line="4120" pos:column="92">(<argument><expr><name pos:line="4120" pos:column="93">name</name></expr></argument>, <argument><expr><name pos:line="4120" pos:column="99">id</name></expr></argument>, <argument><expr><name pos:line="4120" pos:column="103">curr</name></expr></argument>, <argument><expr><name pos:line="4120" pos:column="109">prev</name></expr></argument>, <argument><expr><name pos:line="4120" pos:column="115">isVisible</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<for pos:line="4124" pos:column="9">for (<init><decl><type><name pos:line="4124" pos:column="14">TiXmlNode</name> <type:modifier pos:line="4124" pos:column="24">*</type:modifier></type><name pos:line="4124" pos:column="25">childNode</name> <init pos:line="4124" pos:column="35">= <expr><call><name><name pos:line="4124" pos:column="37">node</name><op:operator pos:line="4124" pos:column="41">-&gt;</op:operator><name pos:line="4124" pos:column="43">FirstChildElement</name></name><argument_list pos:line="4124" pos:column="60">(<argument><expr><call><name pos:line="4124" pos:column="61">TEXT</name><argument_list pos:line="4124" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="4124" pos:column="66">"ActiveTabs"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="4125" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="4126" pos:column="17">childNode</name> <op:operator pos:line="4126" pos:column="27">=</op:operator> <call><name><name pos:line="4126" pos:column="29">childNode</name><op:operator pos:line="4126" pos:column="38">-&gt;</op:operator><name pos:line="4126" pos:column="40">NextSibling</name></name><argument_list pos:line="4126" pos:column="51">(<argument><expr><call><name pos:line="4126" pos:column="52">TEXT</name><argument_list pos:line="4126" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="4126" pos:column="57">"ActiveTabs"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="4127" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4128" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4128" pos:column="30">*</type:modifier></type><name pos:line="4128" pos:column="31">dlgElement</name> <init pos:line="4128" pos:column="42">= <expr><call><name><name pos:line="4128" pos:column="44">childNode</name><op:operator pos:line="4128" pos:column="53">-&gt;</op:operator><name pos:line="4128" pos:column="55">ToElement</name></name><argument_list pos:line="4128" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>
	
		<decl_stmt><decl><type><name pos:line="4130" pos:column="17">int</name></type> <name pos:line="4130" pos:column="21">cont</name></decl>;</decl_stmt>
		<if pos:line="4131" pos:column="17">if <condition pos:line="4131" pos:column="20">(<expr><call><name><name pos:line="4131" pos:column="21">dlgElement</name><op:operator pos:line="4131" pos:column="31">-&gt;</op:operator><name pos:line="4131" pos:column="33">Attribute</name></name><argument_list pos:line="4131" pos:column="42">(<argument><expr><call><name pos:line="4131" pos:column="43">TEXT</name><argument_list pos:line="4131" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="4131" pos:column="48">"cont"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4131" pos:column="57">&amp;</op:operator><name pos:line="4131" pos:column="58">cont</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4131" pos:column="64">
		<block pos:line="4132" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="4133" pos:column="25">int</name></type> <name pos:line="4133" pos:column="29">activeTab</name> <init pos:line="4133" pos:column="39">= <expr><lit:literal type="number" pos:line="4133" pos:column="41">0</lit:literal></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="4134" pos:column="25">dlgElement</name><op:operator pos:line="4134" pos:column="35">-&gt;</op:operator><name pos:line="4134" pos:column="37">Attribute</name></name><argument_list pos:line="4134" pos:column="46">(<argument><expr><call><name pos:line="4134" pos:column="47">TEXT</name><argument_list pos:line="4134" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4134" pos:column="52">"activeTab"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="4134" pos:column="66">&amp;</op:operator><name pos:line="4134" pos:column="67">activeTab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4135" pos:column="25">_nppGUI</name><op:operator pos:line="4135" pos:column="32">.</op:operator><name pos:line="4135" pos:column="33">_dockingData</name><op:operator pos:line="4135" pos:column="45">.</op:operator><name pos:line="4135" pos:column="46">_containerTabInfo</name><op:operator pos:line="4135" pos:column="63">.</op:operator><name pos:line="4135" pos:column="64">push_back</name></name><argument_list pos:line="4135" pos:column="73">(<argument><expr><call><name pos:line="4135" pos:column="74">ContainerTabInfo</name><argument_list pos:line="4135" pos:column="90">(<argument><expr><name pos:line="4135" pos:column="91">cont</name></expr></argument>, <argument><expr><name pos:line="4135" pos:column="97">activeTab</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="4140" pos:column="1">bool</name></type> <name><name pos:line="4140" pos:column="6">NppParameters</name><op:operator pos:line="4140" pos:column="19">::</op:operator><name pos:line="4140" pos:column="21">writeScintillaParams</name></name><parameter_list pos:line="4140" pos:column="41">(<param><decl><type><specifier pos:line="4140" pos:column="42">const</specifier> <name pos:line="4140" pos:column="48">ScintillaViewParams</name> <type:modifier pos:line="4140" pos:column="68">&amp;</type:modifier></type> <name pos:line="4140" pos:column="70">svp</name></decl></param>)</parameter_list> 
<block pos:line="4141" pos:column="1">{
	<if pos:line="4142" pos:column="9">if <condition pos:line="4142" pos:column="12">(<expr><op:operator pos:line="4142" pos:column="13">!</op:operator><name pos:line="4142" pos:column="14">_pXmlUserDoc</name></expr>)</condition><then pos:line="4142" pos:column="27"> <return pos:line="4142" pos:column="28">return <expr><lit:literal type="boolean" pos:line="4142" pos:column="35">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><specifier pos:line="4144" pos:column="9">const</specifier> <name pos:line="4144" pos:column="15">TCHAR</name> <type:modifier pos:line="4144" pos:column="21">*</type:modifier></type><name pos:line="4144" pos:column="22">pViewName</name> <init pos:line="4144" pos:column="32">= <expr><call><name pos:line="4144" pos:column="34">TEXT</name><argument_list pos:line="4144" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="4144" pos:column="39">"ScintillaPrimaryView"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4145" pos:column="9">TiXmlNode</name> <type:modifier pos:line="4145" pos:column="19">*</type:modifier></type><name pos:line="4145" pos:column="20">nppRoot</name> <init pos:line="4145" pos:column="28">= <expr><call><name><name pos:line="4145" pos:column="30">_pXmlUserDoc</name><op:operator pos:line="4145" pos:column="42">-&gt;</op:operator><name pos:line="4145" pos:column="44">FirstChild</name></name><argument_list pos:line="4145" pos:column="54">(<argument><expr><call><name pos:line="4145" pos:column="55">TEXT</name><argument_list pos:line="4145" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="4145" pos:column="60">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4146" pos:column="9">if <condition pos:line="4146" pos:column="12">(<expr><op:operator pos:line="4146" pos:column="13">!</op:operator><name pos:line="4146" pos:column="14">nppRoot</name></expr>)</condition><then pos:line="4146" pos:column="22"> <return pos:line="4146" pos:column="23">return <expr><lit:literal type="boolean" pos:line="4146" pos:column="30">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4148" pos:column="9">TiXmlNode</name> <type:modifier pos:line="4148" pos:column="19">*</type:modifier></type><name pos:line="4148" pos:column="20">configsRoot</name> <init pos:line="4148" pos:column="32">= <expr><call><name><name pos:line="4148" pos:column="34">nppRoot</name><op:operator pos:line="4148" pos:column="41">-&gt;</op:operator><name pos:line="4148" pos:column="43">FirstChildElement</name></name><argument_list pos:line="4148" pos:column="60">(<argument><expr><call><name pos:line="4148" pos:column="61">TEXT</name><argument_list pos:line="4148" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="4148" pos:column="66">"GUIConfigs"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4149" pos:column="9">if <condition pos:line="4149" pos:column="12">(<expr><op:operator pos:line="4149" pos:column="13">!</op:operator><name pos:line="4149" pos:column="14">configsRoot</name></expr>)</condition><then pos:line="4149" pos:column="26"> <return pos:line="4149" pos:column="27">return <expr><lit:literal type="boolean" pos:line="4149" pos:column="34">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4151" pos:column="9">TiXmlNode</name> <type:modifier pos:line="4151" pos:column="19">*</type:modifier></type><name pos:line="4151" pos:column="20">scintNode</name> <init pos:line="4151" pos:column="30">= <expr><call><name pos:line="4151" pos:column="32">getChildElementByAttribut</name><argument_list pos:line="4151" pos:column="57">(<argument><expr><name pos:line="4151" pos:column="58">configsRoot</name></expr></argument>, <argument><expr><call><name pos:line="4151" pos:column="71">TEXT</name><argument_list pos:line="4151" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="4151" pos:column="76">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4151" pos:column="90">TEXT</name><argument_list pos:line="4151" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="4151" pos:column="95">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4151" pos:column="104">pViewName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4152" pos:column="9">if <condition pos:line="4152" pos:column="12">(<expr><op:operator pos:line="4152" pos:column="13">!</op:operator><name pos:line="4152" pos:column="14">scintNode</name></expr>)</condition><then pos:line="4152" pos:column="24"> <return pos:line="4152" pos:column="25">return <expr><lit:literal type="boolean" pos:line="4152" pos:column="32">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><op:operator pos:line="4154" pos:column="9">(</op:operator><call><name><name pos:line="4154" pos:column="10">scintNode</name><op:operator pos:line="4154" pos:column="19">-&gt;</op:operator><name pos:line="4154" pos:column="21">ToElement</name></name><argument_list pos:line="4154" pos:column="30">()</argument_list></call><op:operator pos:line="4154" pos:column="32">)</op:operator><op:operator pos:line="4154" pos:column="33">-&gt;</op:operator><call><name pos:line="4154" pos:column="35">SetAttribute</name><argument_list pos:line="4154" pos:column="47">(<argument><expr><call><name pos:line="4154" pos:column="48">TEXT</name><argument_list pos:line="4154" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4154" pos:column="53">"lineNumberMargin"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4154" pos:column="74">svp</name><op:operator pos:line="4154" pos:column="77">.</op:operator><name pos:line="4154" pos:column="78">_lineNumberMarginShow</name></name><op:operator pos:line="4154" pos:column="99">?</op:operator><call><name pos:line="4154" pos:column="100">TEXT</name><argument_list pos:line="4154" pos:column="104">(<argument><expr><lit:literal type="string" pos:line="4154" pos:column="105">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4154" pos:column="112">:</op:operator><call><name pos:line="4154" pos:column="113">TEXT</name><argument_list pos:line="4154" pos:column="117">(<argument><expr><lit:literal type="string" pos:line="4154" pos:column="118">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4155" pos:column="9">(</op:operator><call><name><name pos:line="4155" pos:column="10">scintNode</name><op:operator pos:line="4155" pos:column="19">-&gt;</op:operator><name pos:line="4155" pos:column="21">ToElement</name></name><argument_list pos:line="4155" pos:column="30">()</argument_list></call><op:operator pos:line="4155" pos:column="32">)</op:operator><op:operator pos:line="4155" pos:column="33">-&gt;</op:operator><call><name pos:line="4155" pos:column="35">SetAttribute</name><argument_list pos:line="4155" pos:column="47">(<argument><expr><call><name pos:line="4155" pos:column="48">TEXT</name><argument_list pos:line="4155" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4155" pos:column="53">"bookMarkMargin"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4155" pos:column="72">svp</name><op:operator pos:line="4155" pos:column="75">.</op:operator><name pos:line="4155" pos:column="76">_bookMarkMarginShow</name></name><op:operator pos:line="4155" pos:column="95">?</op:operator><call><name pos:line="4155" pos:column="96">TEXT</name><argument_list pos:line="4155" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="4155" pos:column="101">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4155" pos:column="108">:</op:operator><call><name pos:line="4155" pos:column="109">TEXT</name><argument_list pos:line="4155" pos:column="113">(<argument><expr><lit:literal type="string" pos:line="4155" pos:column="114">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="4156" pos:column="9">//(scintNode-&gt;ToElement())-&gt;SetAttribute(TEXT("docChangeStateMargin"), svp._docChangeStateMarginShow?TEXT("show"):TEXT("hide"));</comment>
	<expr_stmt><expr><op:operator pos:line="4157" pos:column="9">(</op:operator><call><name><name pos:line="4157" pos:column="10">scintNode</name><op:operator pos:line="4157" pos:column="19">-&gt;</op:operator><name pos:line="4157" pos:column="21">ToElement</name></name><argument_list pos:line="4157" pos:column="30">()</argument_list></call><op:operator pos:line="4157" pos:column="32">)</op:operator><op:operator pos:line="4157" pos:column="33">-&gt;</op:operator><call><name pos:line="4157" pos:column="35">SetAttribute</name><argument_list pos:line="4157" pos:column="47">(<argument><expr><call><name pos:line="4157" pos:column="48">TEXT</name><argument_list pos:line="4157" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4157" pos:column="53">"indentGuideLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4157" pos:column="73">svp</name><op:operator pos:line="4157" pos:column="76">.</op:operator><name pos:line="4157" pos:column="77">_indentGuideLineShow</name></name><op:operator pos:line="4157" pos:column="97">?</op:operator><call><name pos:line="4157" pos:column="98">TEXT</name><argument_list pos:line="4157" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="4157" pos:column="103">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4157" pos:column="110">:</op:operator><call><name pos:line="4157" pos:column="111">TEXT</name><argument_list pos:line="4157" pos:column="115">(<argument><expr><lit:literal type="string" pos:line="4157" pos:column="116">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><specifier pos:line="4158" pos:column="9">const</specifier> <name pos:line="4158" pos:column="15">TCHAR</name> <type:modifier pos:line="4158" pos:column="21">*</type:modifier></type><name pos:line="4158" pos:column="22">pFolderStyleStr</name> <init pos:line="4158" pos:column="38">= <expr><op:operator pos:line="4158" pos:column="40">(</op:operator><name><name pos:line="4158" pos:column="41">svp</name><op:operator pos:line="4158" pos:column="44">.</op:operator><name pos:line="4158" pos:column="45">_folderStyle</name></name> <op:operator pos:line="4158" pos:column="58">==</op:operator> <name pos:line="4158" pos:column="61">FOLDER_STYLE_SIMPLE</name><op:operator pos:line="4158" pos:column="80">)</op:operator><op:operator pos:line="4158" pos:column="81">?</op:operator><call><name pos:line="4158" pos:column="82">TEXT</name><argument_list pos:line="4158" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="4158" pos:column="87">"simple"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4158" pos:column="96">:</op:operator>
									<op:operator pos:line="4159" pos:column="73">(</op:operator><name><name pos:line="4159" pos:column="74">svp</name><op:operator pos:line="4159" pos:column="77">.</op:operator><name pos:line="4159" pos:column="78">_folderStyle</name></name> <op:operator pos:line="4159" pos:column="91">==</op:operator> <name pos:line="4159" pos:column="94">FOLDER_STYLE_ARROW</name><op:operator pos:line="4159" pos:column="112">)</op:operator><op:operator pos:line="4159" pos:column="113">?</op:operator><call><name pos:line="4159" pos:column="114">TEXT</name><argument_list pos:line="4159" pos:column="118">(<argument><expr><lit:literal type="string" pos:line="4159" pos:column="119">"arrow"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4159" pos:column="127">:</op:operator>
										<op:operator pos:line="4160" pos:column="81">(</op:operator><name><name pos:line="4160" pos:column="82">svp</name><op:operator pos:line="4160" pos:column="85">.</op:operator><name pos:line="4160" pos:column="86">_folderStyle</name></name> <op:operator pos:line="4160" pos:column="99">==</op:operator> <name pos:line="4160" pos:column="102">FOLDER_STYLE_CIRCLE</name><op:operator pos:line="4160" pos:column="121">)</op:operator><op:operator pos:line="4160" pos:column="122">?</op:operator><call><name pos:line="4160" pos:column="123">TEXT</name><argument_list pos:line="4160" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="4160" pos:column="128">"circle"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4160" pos:column="137">:</op:operator>
										<op:operator pos:line="4161" pos:column="81">(</op:operator><name><name pos:line="4161" pos:column="82">svp</name><op:operator pos:line="4161" pos:column="85">.</op:operator><name pos:line="4161" pos:column="86">_folderStyle</name></name> <op:operator pos:line="4161" pos:column="99">==</op:operator> <name pos:line="4161" pos:column="102">FOLDER_STYLE_NONE</name><op:operator pos:line="4161" pos:column="119">)</op:operator><op:operator pos:line="4161" pos:column="120">?</op:operator><call><name pos:line="4161" pos:column="121">TEXT</name><argument_list pos:line="4161" pos:column="125">(<argument><expr><lit:literal type="string" pos:line="4161" pos:column="126">"none"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4161" pos:column="133">:</op:operator><call><name pos:line="4161" pos:column="134">TEXT</name><argument_list pos:line="4161" pos:column="138">(<argument><expr><lit:literal type="string" pos:line="4161" pos:column="139">"box"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="4162" pos:column="9">(</op:operator><call><name><name pos:line="4162" pos:column="10">scintNode</name><op:operator pos:line="4162" pos:column="19">-&gt;</op:operator><name pos:line="4162" pos:column="21">ToElement</name></name><argument_list pos:line="4162" pos:column="30">()</argument_list></call><op:operator pos:line="4162" pos:column="32">)</op:operator><op:operator pos:line="4162" pos:column="33">-&gt;</op:operator><call><name pos:line="4162" pos:column="35">SetAttribute</name><argument_list pos:line="4162" pos:column="47">(<argument><expr><call><name pos:line="4162" pos:column="48">TEXT</name><argument_list pos:line="4162" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4162" pos:column="53">"folderMarkStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4162" pos:column="73">pFolderStyleStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><specifier pos:line="4164" pos:column="9">const</specifier> <name pos:line="4164" pos:column="15">TCHAR</name> <type:modifier pos:line="4164" pos:column="21">*</type:modifier></type><name pos:line="4164" pos:column="22">pWrapMethodStr</name> <init pos:line="4164" pos:column="37">= <expr><op:operator pos:line="4164" pos:column="39">(</op:operator><name><name pos:line="4164" pos:column="40">svp</name><op:operator pos:line="4164" pos:column="43">.</op:operator><name pos:line="4164" pos:column="44">_lineWrapMethod</name></name> <op:operator pos:line="4164" pos:column="60">==</op:operator> <name pos:line="4164" pos:column="63">LINEWRAP_ALIGNED</name><op:operator pos:line="4164" pos:column="79">)</op:operator><op:operator pos:line="4164" pos:column="80">?</op:operator><call><name pos:line="4164" pos:column="81">TEXT</name><argument_list pos:line="4164" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="4164" pos:column="86">"aligned"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4164" pos:column="96">:</op:operator>
								<op:operator pos:line="4165" pos:column="65">(</op:operator><name><name pos:line="4165" pos:column="66">svp</name><op:operator pos:line="4165" pos:column="69">.</op:operator><name pos:line="4165" pos:column="70">_lineWrapMethod</name></name> <op:operator pos:line="4165" pos:column="86">==</op:operator> <name pos:line="4165" pos:column="89">LINEWRAP_INDENT</name><op:operator pos:line="4165" pos:column="104">)</op:operator><op:operator pos:line="4165" pos:column="105">?</op:operator><call><name pos:line="4165" pos:column="106">TEXT</name><argument_list pos:line="4165" pos:column="110">(<argument><expr><lit:literal type="string" pos:line="4165" pos:column="111">"indent"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4165" pos:column="120">:</op:operator><call><name pos:line="4165" pos:column="121">TEXT</name><argument_list pos:line="4165" pos:column="125">(<argument><expr><lit:literal type="string" pos:line="4165" pos:column="126">"default"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="4166" pos:column="9">(</op:operator><call><name><name pos:line="4166" pos:column="10">scintNode</name><op:operator pos:line="4166" pos:column="19">-&gt;</op:operator><name pos:line="4166" pos:column="21">ToElement</name></name><argument_list pos:line="4166" pos:column="30">()</argument_list></call><op:operator pos:line="4166" pos:column="32">)</op:operator><op:operator pos:line="4166" pos:column="33">-&gt;</op:operator><call><name pos:line="4166" pos:column="35">SetAttribute</name><argument_list pos:line="4166" pos:column="47">(<argument><expr><call><name pos:line="4166" pos:column="48">TEXT</name><argument_list pos:line="4166" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4166" pos:column="53">"lineWrapMethod"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4166" pos:column="72">pWrapMethodStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><op:operator pos:line="4168" pos:column="9">(</op:operator><call><name><name pos:line="4168" pos:column="10">scintNode</name><op:operator pos:line="4168" pos:column="19">-&gt;</op:operator><name pos:line="4168" pos:column="21">ToElement</name></name><argument_list pos:line="4168" pos:column="30">()</argument_list></call><op:operator pos:line="4168" pos:column="32">)</op:operator><op:operator pos:line="4168" pos:column="33">-&gt;</op:operator><call><name pos:line="4168" pos:column="35">SetAttribute</name><argument_list pos:line="4168" pos:column="47">(<argument><expr><call><name pos:line="4168" pos:column="48">TEXT</name><argument_list pos:line="4168" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4168" pos:column="53">"currentLineHilitingShow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4168" pos:column="81">svp</name><op:operator pos:line="4168" pos:column="84">.</op:operator><name pos:line="4168" pos:column="85">_currentLineHilitingShow</name></name><op:operator pos:line="4168" pos:column="109">?</op:operator><call><name pos:line="4168" pos:column="110">TEXT</name><argument_list pos:line="4168" pos:column="114">(<argument><expr><lit:literal type="string" pos:line="4168" pos:column="115">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4168" pos:column="122">:</op:operator><call><name pos:line="4168" pos:column="123">TEXT</name><argument_list pos:line="4168" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="4168" pos:column="128">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4169" pos:column="9">(</op:operator><call><name><name pos:line="4169" pos:column="10">scintNode</name><op:operator pos:line="4169" pos:column="19">-&gt;</op:operator><name pos:line="4169" pos:column="21">ToElement</name></name><argument_list pos:line="4169" pos:column="30">()</argument_list></call><op:operator pos:line="4169" pos:column="32">)</op:operator><op:operator pos:line="4169" pos:column="33">-&gt;</op:operator><call><name pos:line="4169" pos:column="35">SetAttribute</name><argument_list pos:line="4169" pos:column="47">(<argument><expr><call><name pos:line="4169" pos:column="48">TEXT</name><argument_list pos:line="4169" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4169" pos:column="53">"wrapSymbolShow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4169" pos:column="72">svp</name><op:operator pos:line="4169" pos:column="75">.</op:operator><name pos:line="4169" pos:column="76">_wrapSymbolShow</name></name><op:operator pos:line="4169" pos:column="91">?</op:operator><call><name pos:line="4169" pos:column="92">TEXT</name><argument_list pos:line="4169" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="4169" pos:column="97">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4169" pos:column="104">:</op:operator><call><name pos:line="4169" pos:column="105">TEXT</name><argument_list pos:line="4169" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="4169" pos:column="110">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4170" pos:column="9">(</op:operator><call><name><name pos:line="4170" pos:column="10">scintNode</name><op:operator pos:line="4170" pos:column="19">-&gt;</op:operator><name pos:line="4170" pos:column="21">ToElement</name></name><argument_list pos:line="4170" pos:column="30">()</argument_list></call><op:operator pos:line="4170" pos:column="32">)</op:operator><op:operator pos:line="4170" pos:column="33">-&gt;</op:operator><call><name pos:line="4170" pos:column="35">SetAttribute</name><argument_list pos:line="4170" pos:column="47">(<argument><expr><call><name pos:line="4170" pos:column="48">TEXT</name><argument_list pos:line="4170" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4170" pos:column="53">"Wrap"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4170" pos:column="62">svp</name><op:operator pos:line="4170" pos:column="65">.</op:operator><name pos:line="4170" pos:column="66">_doWrap</name></name><op:operator pos:line="4170" pos:column="73">?</op:operator><call><name pos:line="4170" pos:column="74">TEXT</name><argument_list pos:line="4170" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="4170" pos:column="79">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4170" pos:column="85">:</op:operator><call><name pos:line="4170" pos:column="86">TEXT</name><argument_list pos:line="4170" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="4170" pos:column="91">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="4171" pos:column="9">TCHAR</name> <type:modifier pos:line="4171" pos:column="15">*</type:modifier></type><name pos:line="4171" pos:column="16">edgeStr</name> <init pos:line="4171" pos:column="24">= <expr><name pos:line="4171" pos:column="26">NULL</name></expr></init></decl>;</decl_stmt>
	<if pos:line="4172" pos:column="9">if <condition pos:line="4172" pos:column="12">(<expr><name><name pos:line="4172" pos:column="13">svp</name><op:operator pos:line="4172" pos:column="16">.</op:operator><name pos:line="4172" pos:column="17">_edgeMode</name></name> <op:operator pos:line="4172" pos:column="27">==</op:operator> <name pos:line="4172" pos:column="30">EDGE_NONE</name></expr>)</condition><then pos:line="4172" pos:column="40">
		<expr_stmt><expr><name pos:line="4173" pos:column="17">edgeStr</name> <op:operator pos:line="4173" pos:column="25">=</op:operator> <call><name pos:line="4173" pos:column="27">TEXT</name><argument_list pos:line="4173" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="4173" pos:column="32">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="4174" pos:column="9">else <if pos:line="4174" pos:column="14">if <condition pos:line="4174" pos:column="17">(<expr><name><name pos:line="4174" pos:column="18">svp</name><op:operator pos:line="4174" pos:column="21">.</op:operator><name pos:line="4174" pos:column="22">_edgeMode</name></name> <op:operator pos:line="4174" pos:column="32">==</op:operator> <name pos:line="4174" pos:column="35">EDGE_LINE</name></expr>)</condition><then pos:line="4174" pos:column="45">
		<expr_stmt><expr><name pos:line="4175" pos:column="17">edgeStr</name> <op:operator pos:line="4175" pos:column="25">=</op:operator> <call><name pos:line="4175" pos:column="27">TEXT</name><argument_list pos:line="4175" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="4175" pos:column="32">"line"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="4176" pos:column="9">else
		<expr_stmt><expr><name pos:line="4177" pos:column="17">edgeStr</name> <op:operator pos:line="4177" pos:column="25">=</op:operator> <call><name pos:line="4177" pos:column="27">TEXT</name><argument_list pos:line="4177" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="4177" pos:column="32">"background"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if></else></if>
	<expr_stmt><expr><op:operator pos:line="4178" pos:column="9">(</op:operator><call><name><name pos:line="4178" pos:column="10">scintNode</name><op:operator pos:line="4178" pos:column="19">-&gt;</op:operator><name pos:line="4178" pos:column="21">ToElement</name></name><argument_list pos:line="4178" pos:column="30">()</argument_list></call><op:operator pos:line="4178" pos:column="32">)</op:operator><op:operator pos:line="4178" pos:column="33">-&gt;</op:operator><call><name pos:line="4178" pos:column="35">SetAttribute</name><argument_list pos:line="4178" pos:column="47">(<argument><expr><call><name pos:line="4178" pos:column="48">TEXT</name><argument_list pos:line="4178" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4178" pos:column="53">"edge"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4178" pos:column="62">edgeStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4179" pos:column="9">(</op:operator><call><name><name pos:line="4179" pos:column="10">scintNode</name><op:operator pos:line="4179" pos:column="19">-&gt;</op:operator><name pos:line="4179" pos:column="21">ToElement</name></name><argument_list pos:line="4179" pos:column="30">()</argument_list></call><op:operator pos:line="4179" pos:column="32">)</op:operator><op:operator pos:line="4179" pos:column="33">-&gt;</op:operator><call><name pos:line="4179" pos:column="35">SetAttribute</name><argument_list pos:line="4179" pos:column="47">(<argument><expr><call><name pos:line="4179" pos:column="48">TEXT</name><argument_list pos:line="4179" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4179" pos:column="53">"edgeNbColumn"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4179" pos:column="70">svp</name><op:operator pos:line="4179" pos:column="73">.</op:operator><name pos:line="4179" pos:column="74">_edgeNbColumn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4180" pos:column="9">(</op:operator><call><name><name pos:line="4180" pos:column="10">scintNode</name><op:operator pos:line="4180" pos:column="19">-&gt;</op:operator><name pos:line="4180" pos:column="21">ToElement</name></name><argument_list pos:line="4180" pos:column="30">()</argument_list></call><op:operator pos:line="4180" pos:column="32">)</op:operator><op:operator pos:line="4180" pos:column="33">-&gt;</op:operator><call><name pos:line="4180" pos:column="35">SetAttribute</name><argument_list pos:line="4180" pos:column="47">(<argument><expr><call><name pos:line="4180" pos:column="48">TEXT</name><argument_list pos:line="4180" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4180" pos:column="53">"zoom"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4180" pos:column="62">svp</name><op:operator pos:line="4180" pos:column="65">.</op:operator><name pos:line="4180" pos:column="66">_zoom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4181" pos:column="9">(</op:operator><call><name><name pos:line="4181" pos:column="10">scintNode</name><op:operator pos:line="4181" pos:column="19">-&gt;</op:operator><name pos:line="4181" pos:column="21">ToElement</name></name><argument_list pos:line="4181" pos:column="30">()</argument_list></call><op:operator pos:line="4181" pos:column="32">)</op:operator><op:operator pos:line="4181" pos:column="33">-&gt;</op:operator><call><name pos:line="4181" pos:column="35">SetAttribute</name><argument_list pos:line="4181" pos:column="47">(<argument><expr><call><name pos:line="4181" pos:column="48">TEXT</name><argument_list pos:line="4181" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4181" pos:column="53">"zoom2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4181" pos:column="63">svp</name><op:operator pos:line="4181" pos:column="66">.</op:operator><name pos:line="4181" pos:column="67">_zoom2</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4182" pos:column="9">(</op:operator><call><name><name pos:line="4182" pos:column="10">scintNode</name><op:operator pos:line="4182" pos:column="19">-&gt;</op:operator><name pos:line="4182" pos:column="21">ToElement</name></name><argument_list pos:line="4182" pos:column="30">()</argument_list></call><op:operator pos:line="4182" pos:column="32">)</op:operator><op:operator pos:line="4182" pos:column="33">-&gt;</op:operator><call><name pos:line="4182" pos:column="35">SetAttribute</name><argument_list pos:line="4182" pos:column="47">(<argument><expr><call><name pos:line="4182" pos:column="48">TEXT</name><argument_list pos:line="4182" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4182" pos:column="53">"whiteSpaceShow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4182" pos:column="72">svp</name><op:operator pos:line="4182" pos:column="75">.</op:operator><name pos:line="4182" pos:column="76">_whiteSpaceShow</name></name><op:operator pos:line="4182" pos:column="91">?</op:operator><call><name pos:line="4182" pos:column="92">TEXT</name><argument_list pos:line="4182" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="4182" pos:column="97">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4182" pos:column="104">:</op:operator><call><name pos:line="4182" pos:column="105">TEXT</name><argument_list pos:line="4182" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="4182" pos:column="110">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4183" pos:column="9">(</op:operator><call><name><name pos:line="4183" pos:column="10">scintNode</name><op:operator pos:line="4183" pos:column="19">-&gt;</op:operator><name pos:line="4183" pos:column="21">ToElement</name></name><argument_list pos:line="4183" pos:column="30">()</argument_list></call><op:operator pos:line="4183" pos:column="32">)</op:operator><op:operator pos:line="4183" pos:column="33">-&gt;</op:operator><call><name pos:line="4183" pos:column="35">SetAttribute</name><argument_list pos:line="4183" pos:column="47">(<argument><expr><call><name pos:line="4183" pos:column="48">TEXT</name><argument_list pos:line="4183" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4183" pos:column="53">"eolShow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4183" pos:column="65">svp</name><op:operator pos:line="4183" pos:column="68">.</op:operator><name pos:line="4183" pos:column="69">_eolShow</name></name><op:operator pos:line="4183" pos:column="77">?</op:operator><call><name pos:line="4183" pos:column="78">TEXT</name><argument_list pos:line="4183" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="4183" pos:column="83">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4183" pos:column="90">:</op:operator><call><name pos:line="4183" pos:column="91">TEXT</name><argument_list pos:line="4183" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="4183" pos:column="96">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4184" pos:column="9">(</op:operator><call><name><name pos:line="4184" pos:column="10">scintNode</name><op:operator pos:line="4184" pos:column="19">-&gt;</op:operator><name pos:line="4184" pos:column="21">ToElement</name></name><argument_list pos:line="4184" pos:column="30">()</argument_list></call><op:operator pos:line="4184" pos:column="32">)</op:operator><op:operator pos:line="4184" pos:column="33">-&gt;</op:operator><call><name pos:line="4184" pos:column="35">SetAttribute</name><argument_list pos:line="4184" pos:column="47">(<argument><expr><call><name pos:line="4184" pos:column="48">TEXT</name><argument_list pos:line="4184" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4184" pos:column="53">"borderWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4184" pos:column="69">svp</name><op:operator pos:line="4184" pos:column="72">.</op:operator><name pos:line="4184" pos:column="73">_borderWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4185" pos:column="9">return <expr><lit:literal type="boolean" pos:line="4185" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="4188" pos:column="1">bool</name></type> <name><name pos:line="4188" pos:column="6">NppParameters</name><op:operator pos:line="4188" pos:column="19">::</op:operator><name pos:line="4188" pos:column="21">writeGUIParams</name></name><parameter_list pos:line="4188" pos:column="35">()</parameter_list>
<block pos:line="4189" pos:column="1">{
	<if pos:line="4190" pos:column="9">if <condition pos:line="4190" pos:column="12">(<expr><op:operator pos:line="4190" pos:column="13">!</op:operator><name pos:line="4190" pos:column="14">_pXmlUserDoc</name></expr>)</condition><then pos:line="4190" pos:column="27"> <return pos:line="4190" pos:column="28">return <expr><lit:literal type="boolean" pos:line="4190" pos:column="35">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4192" pos:column="9">TiXmlNode</name> <type:modifier pos:line="4192" pos:column="19">*</type:modifier></type><name pos:line="4192" pos:column="20">nppRoot</name> <init pos:line="4192" pos:column="28">= <expr><call><name><name pos:line="4192" pos:column="30">_pXmlUserDoc</name><op:operator pos:line="4192" pos:column="42">-&gt;</op:operator><name pos:line="4192" pos:column="44">FirstChild</name></name><argument_list pos:line="4192" pos:column="54">(<argument><expr><call><name pos:line="4192" pos:column="55">TEXT</name><argument_list pos:line="4192" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="4192" pos:column="60">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4193" pos:column="9">if <condition pos:line="4193" pos:column="12">(<expr><op:operator pos:line="4193" pos:column="13">!</op:operator><name pos:line="4193" pos:column="14">nppRoot</name></expr>)</condition><then pos:line="4193" pos:column="22"> <return pos:line="4193" pos:column="23">return <expr><lit:literal type="boolean" pos:line="4193" pos:column="30">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4195" pos:column="9">TiXmlNode</name> <type:modifier pos:line="4195" pos:column="19">*</type:modifier></type><name pos:line="4195" pos:column="20">GUIRoot</name> <init pos:line="4195" pos:column="28">= <expr><call><name><name pos:line="4195" pos:column="30">nppRoot</name><op:operator pos:line="4195" pos:column="37">-&gt;</op:operator><name pos:line="4195" pos:column="39">FirstChildElement</name></name><argument_list pos:line="4195" pos:column="56">(<argument><expr><call><name pos:line="4195" pos:column="57">TEXT</name><argument_list pos:line="4195" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="4195" pos:column="62">"GUIConfigs"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4196" pos:column="9">if <condition pos:line="4196" pos:column="12">(<expr><op:operator pos:line="4196" pos:column="13">!</op:operator><name pos:line="4196" pos:column="14">GUIRoot</name></expr>)</condition><then pos:line="4196" pos:column="22"> <return pos:line="4196" pos:column="23">return <expr><lit:literal type="boolean" pos:line="4196" pos:column="30">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4198" pos:column="9">bool</name></type> <name pos:line="4198" pos:column="14">autoDetectionExist</name> <init pos:line="4198" pos:column="33">= <expr><lit:literal type="boolean" pos:line="4198" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4199" pos:column="9">bool</name></type> <name pos:line="4199" pos:column="14">checkHistoryFilesExist</name> <init pos:line="4199" pos:column="37">= <expr><lit:literal type="boolean" pos:line="4199" pos:column="39">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4200" pos:column="9">bool</name></type> <name pos:line="4200" pos:column="14">trayIconExist</name> <init pos:line="4200" pos:column="28">= <expr><lit:literal type="boolean" pos:line="4200" pos:column="30">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4201" pos:column="9">bool</name></type> <name pos:line="4201" pos:column="14">rememberLastSessionExist</name> <init pos:line="4201" pos:column="39">= <expr><lit:literal type="boolean" pos:line="4201" pos:column="41">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4202" pos:column="9">bool</name></type> <name pos:line="4202" pos:column="14">newDocDefaultSettingsExist</name> <init pos:line="4202" pos:column="41">= <expr><lit:literal type="boolean" pos:line="4202" pos:column="43">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4203" pos:column="9">bool</name></type> <name pos:line="4203" pos:column="14">langsExcludedLstExist</name> <init pos:line="4203" pos:column="36">= <expr><lit:literal type="boolean" pos:line="4203" pos:column="38">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4204" pos:column="9">bool</name></type> <name pos:line="4204" pos:column="14">printSettingExist</name> <init pos:line="4204" pos:column="32">= <expr><lit:literal type="boolean" pos:line="4204" pos:column="34">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4205" pos:column="9">bool</name></type> <name pos:line="4205" pos:column="14">doTaskListExist</name> <init pos:line="4205" pos:column="30">= <expr><lit:literal type="boolean" pos:line="4205" pos:column="32">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4206" pos:column="9">bool</name></type> <name pos:line="4206" pos:column="14">maitainIndentExist</name> <init pos:line="4206" pos:column="33">= <expr><lit:literal type="boolean" pos:line="4206" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4207" pos:column="9">bool</name></type> <name pos:line="4207" pos:column="14">MRUExist</name> <init pos:line="4207" pos:column="23">= <expr><lit:literal type="boolean" pos:line="4207" pos:column="25">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4208" pos:column="9">bool</name></type> <name pos:line="4208" pos:column="14">backExist</name> <init pos:line="4208" pos:column="24">= <expr><lit:literal type="boolean" pos:line="4208" pos:column="26">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4209" pos:column="9">bool</name></type> <name pos:line="4209" pos:column="14">URLExist</name> <init pos:line="4209" pos:column="23">= <expr><lit:literal type="boolean" pos:line="4209" pos:column="25">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4210" pos:column="9">bool</name></type> <name pos:line="4210" pos:column="14">globalOverrideExist</name> <init pos:line="4210" pos:column="34">= <expr><lit:literal type="boolean" pos:line="4210" pos:column="36">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4211" pos:column="9">bool</name></type> <name pos:line="4211" pos:column="14">autocExist</name> <init pos:line="4211" pos:column="25">= <expr><lit:literal type="boolean" pos:line="4211" pos:column="27">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4212" pos:column="9">bool</name></type> <name pos:line="4212" pos:column="14">sessionExtExist</name> <init pos:line="4212" pos:column="30">= <expr><lit:literal type="boolean" pos:line="4212" pos:column="32">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4213" pos:column="9">bool</name></type> <name pos:line="4213" pos:column="14">noUpdateExist</name> <init pos:line="4213" pos:column="28">= <expr><lit:literal type="boolean" pos:line="4213" pos:column="30">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4214" pos:column="9">bool</name></type> <name pos:line="4214" pos:column="14">menuBarExist</name> <init pos:line="4214" pos:column="27">= <expr><lit:literal type="boolean" pos:line="4214" pos:column="29">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4215" pos:column="9">bool</name></type> <name pos:line="4215" pos:column="14">smartHighLightExist</name> <init pos:line="4215" pos:column="34">= <expr><lit:literal type="boolean" pos:line="4215" pos:column="36">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4216" pos:column="9">bool</name></type> <name pos:line="4216" pos:column="14">smartHighLightCaseSensitiveExist</name> <init pos:line="4216" pos:column="47">= <expr><lit:literal type="boolean" pos:line="4216" pos:column="49">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4217" pos:column="9">bool</name></type> <name pos:line="4217" pos:column="14">tagsMatchHighLightExist</name> <init pos:line="4217" pos:column="38">= <expr><lit:literal type="boolean" pos:line="4217" pos:column="40">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4218" pos:column="9">bool</name></type> <name pos:line="4218" pos:column="14">caretExist</name> <init pos:line="4218" pos:column="25">= <expr><lit:literal type="boolean" pos:line="4218" pos:column="27">false</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="4219" pos:column="5">bool</name></type> <name pos:line="4219" pos:column="10">ScintillaGlobalSettingsExist</name> <init pos:line="4219" pos:column="39">= <expr><lit:literal type="boolean" pos:line="4219" pos:column="41">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4220" pos:column="9">bool</name></type> <name pos:line="4220" pos:column="14">openSaveDirExist</name> <init pos:line="4220" pos:column="31">= <expr><lit:literal type="boolean" pos:line="4220" pos:column="33">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4221" pos:column="9">bool</name></type> <name pos:line="4221" pos:column="14">titleBarExist</name> <init pos:line="4221" pos:column="28">= <expr><lit:literal type="boolean" pos:line="4221" pos:column="30">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4222" pos:column="9">bool</name></type> <name pos:line="4222" pos:column="14">stylerThemeExist</name> <init pos:line="4222" pos:column="31">= <expr><lit:literal type="boolean" pos:line="4222" pos:column="33">false</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="4224" pos:column="9">TiXmlNode</name> <type:modifier pos:line="4224" pos:column="19">*</type:modifier></type><name pos:line="4224" pos:column="20">dockingParamNode</name> <init pos:line="4224" pos:column="37">= <expr><name pos:line="4224" pos:column="39">NULL</name></expr></init></decl>;</decl_stmt>

	<for pos:line="4226" pos:column="9">for (<init><decl><type><name pos:line="4226" pos:column="14">TiXmlNode</name> <type:modifier pos:line="4226" pos:column="24">*</type:modifier></type><name pos:line="4226" pos:column="25">childNode</name> <init pos:line="4226" pos:column="35">= <expr><call><name><name pos:line="4226" pos:column="37">GUIRoot</name><op:operator pos:line="4226" pos:column="44">-&gt;</op:operator><name pos:line="4226" pos:column="46">FirstChildElement</name></name><argument_list pos:line="4226" pos:column="63">(<argument><expr><call><name pos:line="4226" pos:column="64">TEXT</name><argument_list pos:line="4226" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="4226" pos:column="69">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="4227" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="4228" pos:column="17">childNode</name> <op:operator pos:line="4228" pos:column="27">=</op:operator> <call><name><name pos:line="4228" pos:column="29">childNode</name><op:operator pos:line="4228" pos:column="38">-&gt;</op:operator><name pos:line="4228" pos:column="40">NextSibling</name></name><argument_list pos:line="4228" pos:column="51">(<argument><expr><call><name pos:line="4228" pos:column="52">TEXT</name><argument_list pos:line="4228" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="4228" pos:column="57">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="4229" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4230" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4230" pos:column="30">*</type:modifier></type><name pos:line="4230" pos:column="31">element</name> <init pos:line="4230" pos:column="39">= <expr><call><name><name pos:line="4230" pos:column="41">childNode</name><op:operator pos:line="4230" pos:column="50">-&gt;</op:operator><name pos:line="4230" pos:column="52">ToElement</name></name><argument_list pos:line="4230" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="4231" pos:column="17">const</specifier> <name pos:line="4231" pos:column="23">TCHAR</name> <type:modifier pos:line="4231" pos:column="29">*</type:modifier></type><name pos:line="4231" pos:column="30">nm</name> <init pos:line="4231" pos:column="33">= <expr><call><name><name pos:line="4231" pos:column="35">element</name><op:operator pos:line="4231" pos:column="42">-&gt;</op:operator><name pos:line="4231" pos:column="44">Attribute</name></name><argument_list pos:line="4231" pos:column="53">(<argument><expr><call><name pos:line="4231" pos:column="54">TEXT</name><argument_list pos:line="4231" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4231" pos:column="59">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4232" pos:column="17">if <condition pos:line="4232" pos:column="20">(<expr><op:operator pos:line="4232" pos:column="21">!</op:operator><name pos:line="4232" pos:column="22">nm</name></expr>)</condition><then pos:line="4232" pos:column="25"> <continue pos:line="4232" pos:column="26">continue;</continue></then></if>

		<if pos:line="4234" pos:column="17">if <condition pos:line="4234" pos:column="20">(<expr><op:operator pos:line="4234" pos:column="21">!</op:operator><call><name pos:line="4234" pos:column="22">lstrcmp</name><argument_list pos:line="4234" pos:column="29">(<argument><expr><name pos:line="4234" pos:column="30">nm</name></expr></argument>, <argument><expr><call><name pos:line="4234" pos:column="34">TEXT</name><argument_list pos:line="4234" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="4234" pos:column="39">"ToolBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4234" pos:column="51">
		<block pos:line="4235" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="4236" pos:column="25">const</specifier> <name pos:line="4236" pos:column="31">TCHAR</name> <type:modifier pos:line="4236" pos:column="37">*</type:modifier></type><name pos:line="4236" pos:column="38">pStr</name> <init pos:line="4236" pos:column="43">= <expr><op:operator pos:line="4236" pos:column="45">(</op:operator><name><name pos:line="4236" pos:column="46">_nppGUI</name><op:operator pos:line="4236" pos:column="53">.</op:operator><name pos:line="4236" pos:column="54">_toolbarShow</name></name><op:operator pos:line="4236" pos:column="66">)</op:operator><op:operator pos:line="4236" pos:column="67">?</op:operator><call><name pos:line="4236" pos:column="68">TEXT</name><argument_list pos:line="4236" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="4236" pos:column="73">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4236" pos:column="79">:</op:operator><call><name pos:line="4236" pos:column="80">TEXT</name><argument_list pos:line="4236" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="4236" pos:column="85">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="4237" pos:column="25">element</name><op:operator pos:line="4237" pos:column="32">-&gt;</op:operator><name pos:line="4237" pos:column="34">SetAttribute</name></name><argument_list pos:line="4237" pos:column="46">(<argument><expr><call><name pos:line="4237" pos:column="47">TEXT</name><argument_list pos:line="4237" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4237" pos:column="52">"visible"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4237" pos:column="64">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4239" pos:column="25">pStr</name> <op:operator pos:line="4239" pos:column="30">=</op:operator> <name><name pos:line="4239" pos:column="32">_nppGUI</name><op:operator pos:line="4239" pos:column="39">.</op:operator><name pos:line="4239" pos:column="40">_toolBarStatus</name></name> <op:operator pos:line="4239" pos:column="55">==</op:operator> <name pos:line="4239" pos:column="58">TB_SMALL</name><op:operator pos:line="4239" pos:column="66">?</op:operator><call><name pos:line="4239" pos:column="67">TEXT</name><argument_list pos:line="4239" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="4239" pos:column="72">"small"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4239" pos:column="80">:</op:operator><op:operator pos:line="4239" pos:column="81">(</op:operator><name><name pos:line="4239" pos:column="82">_nppGUI</name><op:operator pos:line="4239" pos:column="89">.</op:operator><name pos:line="4239" pos:column="90">_toolBarStatus</name></name> <op:operator pos:line="4239" pos:column="105">==</op:operator> <name pos:line="4239" pos:column="108">TB_STANDARD</name><op:operator pos:line="4239" pos:column="119">?</op:operator><call><name pos:line="4239" pos:column="120">TEXT</name><argument_list pos:line="4239" pos:column="124">(<argument><expr><lit:literal type="string" pos:line="4239" pos:column="125">"standard"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4239" pos:column="136">:</op:operator><call><name pos:line="4239" pos:column="137">TEXT</name><argument_list pos:line="4239" pos:column="141">(<argument><expr><lit:literal type="string" pos:line="4239" pos:column="142">"large"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4239" pos:column="150">)</op:operator></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="4240" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4240" pos:column="35">*</type:modifier></type><name pos:line="4240" pos:column="36">n</name> <init pos:line="4240" pos:column="38">= <expr><call><name><name pos:line="4240" pos:column="40">childNode</name><op:operator pos:line="4240" pos:column="49">-&gt;</op:operator><name pos:line="4240" pos:column="51">FirstChild</name></name><argument_list pos:line="4240" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4241" pos:column="25">if <condition pos:line="4241" pos:column="28">(<expr><name pos:line="4241" pos:column="29">n</name></expr>)</condition><then pos:line="4241" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4242" pos:column="33">n</name><op:operator pos:line="4242" pos:column="34">-&gt;</op:operator><name pos:line="4242" pos:column="36">SetValue</name></name><argument_list pos:line="4242" pos:column="44">(<argument><expr><name pos:line="4242" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4243" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4244" pos:column="33">childNode</name><op:operator pos:line="4244" pos:column="42">-&gt;</op:operator><name pos:line="4244" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4244" pos:column="58">(<argument><expr><call><name pos:line="4244" pos:column="59">TiXmlText</name><argument_list pos:line="4244" pos:column="68">(<argument><expr><name pos:line="4244" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4246" pos:column="17">else <if pos:line="4246" pos:column="22">if <condition pos:line="4246" pos:column="25">(<expr><op:operator pos:line="4246" pos:column="26">!</op:operator><call><name pos:line="4246" pos:column="27">lstrcmp</name><argument_list pos:line="4246" pos:column="34">(<argument><expr><name pos:line="4246" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4246" pos:column="39">TEXT</name><argument_list pos:line="4246" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4246" pos:column="44">"StatusBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4246" pos:column="58">
		<block pos:line="4247" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="4248" pos:column="25">const</specifier> <name pos:line="4248" pos:column="31">TCHAR</name> <type:modifier pos:line="4248" pos:column="37">*</type:modifier></type><name pos:line="4248" pos:column="38">pStr</name> <init pos:line="4248" pos:column="43">= <expr><name><name pos:line="4248" pos:column="45">_nppGUI</name><op:operator pos:line="4248" pos:column="52">.</op:operator><name pos:line="4248" pos:column="53">_statusBarShow</name></name><op:operator pos:line="4248" pos:column="67">?</op:operator><call><name pos:line="4248" pos:column="68">TEXT</name><argument_list pos:line="4248" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="4248" pos:column="73">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4248" pos:column="80">:</op:operator><call><name pos:line="4248" pos:column="81">TEXT</name><argument_list pos:line="4248" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="4248" pos:column="86">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4249" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4249" pos:column="35">*</type:modifier></type><name pos:line="4249" pos:column="36">n</name> <init pos:line="4249" pos:column="38">= <expr><call><name><name pos:line="4249" pos:column="40">childNode</name><op:operator pos:line="4249" pos:column="49">-&gt;</op:operator><name pos:line="4249" pos:column="51">FirstChild</name></name><argument_list pos:line="4249" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4250" pos:column="25">if <condition pos:line="4250" pos:column="28">(<expr><name pos:line="4250" pos:column="29">n</name></expr>)</condition><then pos:line="4250" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4251" pos:column="33">n</name><op:operator pos:line="4251" pos:column="34">-&gt;</op:operator><name pos:line="4251" pos:column="36">SetValue</name></name><argument_list pos:line="4251" pos:column="44">(<argument><expr><name pos:line="4251" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4252" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4253" pos:column="33">childNode</name><op:operator pos:line="4253" pos:column="42">-&gt;</op:operator><name pos:line="4253" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4253" pos:column="58">(<argument><expr><call><name pos:line="4253" pos:column="59">TiXmlText</name><argument_list pos:line="4253" pos:column="68">(<argument><expr><name pos:line="4253" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4255" pos:column="17">else <if pos:line="4255" pos:column="22">if <condition pos:line="4255" pos:column="25">(<expr><op:operator pos:line="4255" pos:column="26">!</op:operator><call><name pos:line="4255" pos:column="27">lstrcmp</name><argument_list pos:line="4255" pos:column="34">(<argument><expr><name pos:line="4255" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4255" pos:column="39">TEXT</name><argument_list pos:line="4255" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4255" pos:column="44">"MenuBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4255" pos:column="56">
		<block pos:line="4256" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="4257" pos:column="25">const</specifier> <name pos:line="4257" pos:column="31">TCHAR</name> <type:modifier pos:line="4257" pos:column="37">*</type:modifier></type><name pos:line="4257" pos:column="38">pStr</name> <init pos:line="4257" pos:column="43">= <expr><name><name pos:line="4257" pos:column="45">_nppGUI</name><op:operator pos:line="4257" pos:column="52">.</op:operator><name pos:line="4257" pos:column="53">_menuBarShow</name></name><op:operator pos:line="4257" pos:column="65">?</op:operator><call><name pos:line="4257" pos:column="66">TEXT</name><argument_list pos:line="4257" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="4257" pos:column="71">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4257" pos:column="78">:</op:operator><call><name pos:line="4257" pos:column="79">TEXT</name><argument_list pos:line="4257" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="4257" pos:column="84">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4258" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4258" pos:column="35">*</type:modifier></type><name pos:line="4258" pos:column="36">n</name> <init pos:line="4258" pos:column="38">= <expr><call><name><name pos:line="4258" pos:column="40">childNode</name><op:operator pos:line="4258" pos:column="49">-&gt;</op:operator><name pos:line="4258" pos:column="51">FirstChild</name></name><argument_list pos:line="4258" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4259" pos:column="25">if <condition pos:line="4259" pos:column="28">(<expr><name pos:line="4259" pos:column="29">n</name></expr>)</condition><then pos:line="4259" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4260" pos:column="33">n</name><op:operator pos:line="4260" pos:column="34">-&gt;</op:operator><name pos:line="4260" pos:column="36">SetValue</name></name><argument_list pos:line="4260" pos:column="44">(<argument><expr><name pos:line="4260" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4261" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4262" pos:column="33">childNode</name><op:operator pos:line="4262" pos:column="42">-&gt;</op:operator><name pos:line="4262" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4262" pos:column="58">(<argument><expr><call><name pos:line="4262" pos:column="59">TiXmlText</name><argument_list pos:line="4262" pos:column="68">(<argument><expr><name pos:line="4262" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

			<expr_stmt><expr><name pos:line="4264" pos:column="25">menuBarExist</name> <op:operator pos:line="4264" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="4264" pos:column="40">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4266" pos:column="17">else <if pos:line="4266" pos:column="22">if <condition pos:line="4266" pos:column="25">(<expr><op:operator pos:line="4266" pos:column="26">!</op:operator><call><name pos:line="4266" pos:column="27">lstrcmp</name><argument_list pos:line="4266" pos:column="34">(<argument><expr><name pos:line="4266" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4266" pos:column="39">TEXT</name><argument_list pos:line="4266" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4266" pos:column="44">"TabBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4266" pos:column="55">
		<block pos:line="4267" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="4268" pos:column="25">const</specifier> <name pos:line="4268" pos:column="31">TCHAR</name> <type:modifier pos:line="4268" pos:column="37">*</type:modifier></type><name pos:line="4268" pos:column="38">pStr</name> <init pos:line="4268" pos:column="43">= <expr><op:operator pos:line="4268" pos:column="45">(</op:operator><name><name pos:line="4268" pos:column="46">_nppGUI</name><op:operator pos:line="4268" pos:column="53">.</op:operator><name pos:line="4268" pos:column="54">_tabStatus</name></name> <op:operator pos:line="4268" pos:column="65">&amp;</op:operator> <name pos:line="4268" pos:column="67">TAB_DRAWTOPBAR</name><op:operator pos:line="4268" pos:column="81">)</op:operator><op:operator pos:line="4268" pos:column="82">?</op:operator><call><name pos:line="4268" pos:column="83">TEXT</name><argument_list pos:line="4268" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="4268" pos:column="88">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4268" pos:column="94">:</op:operator><call><name pos:line="4268" pos:column="95">TEXT</name><argument_list pos:line="4268" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="4268" pos:column="100">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="4269" pos:column="25">element</name><op:operator pos:line="4269" pos:column="32">-&gt;</op:operator><name pos:line="4269" pos:column="34">SetAttribute</name></name><argument_list pos:line="4269" pos:column="46">(<argument><expr><call><name pos:line="4269" pos:column="47">TEXT</name><argument_list pos:line="4269" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4269" pos:column="52">"dragAndDrop"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4269" pos:column="68">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4271" pos:column="25">pStr</name> <op:operator pos:line="4271" pos:column="30">=</op:operator> <op:operator pos:line="4271" pos:column="32">(</op:operator><name><name pos:line="4271" pos:column="33">_nppGUI</name><op:operator pos:line="4271" pos:column="40">.</op:operator><name pos:line="4271" pos:column="41">_tabStatus</name></name> <op:operator pos:line="4271" pos:column="52">&amp;</op:operator> <name pos:line="4271" pos:column="54">TAB_DRAGNDROP</name><op:operator pos:line="4271" pos:column="67">)</op:operator><op:operator pos:line="4271" pos:column="68">?</op:operator><call><name pos:line="4271" pos:column="69">TEXT</name><argument_list pos:line="4271" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="4271" pos:column="74">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4271" pos:column="80">:</op:operator><call><name pos:line="4271" pos:column="81">TEXT</name><argument_list pos:line="4271" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="4271" pos:column="86">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4272" pos:column="25">element</name><op:operator pos:line="4272" pos:column="32">-&gt;</op:operator><name pos:line="4272" pos:column="34">SetAttribute</name></name><argument_list pos:line="4272" pos:column="46">(<argument><expr><call><name pos:line="4272" pos:column="47">TEXT</name><argument_list pos:line="4272" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4272" pos:column="52">"drawTopBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4272" pos:column="67">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4274" pos:column="25">pStr</name> <op:operator pos:line="4274" pos:column="30">=</op:operator> <op:operator pos:line="4274" pos:column="32">(</op:operator><name><name pos:line="4274" pos:column="33">_nppGUI</name><op:operator pos:line="4274" pos:column="40">.</op:operator><name pos:line="4274" pos:column="41">_tabStatus</name></name> <op:operator pos:line="4274" pos:column="52">&amp;</op:operator> <name pos:line="4274" pos:column="54">TAB_DRAWINACTIVETAB</name><op:operator pos:line="4274" pos:column="73">)</op:operator><op:operator pos:line="4274" pos:column="74">?</op:operator><call><name pos:line="4274" pos:column="75">TEXT</name><argument_list pos:line="4274" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="4274" pos:column="80">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4274" pos:column="86">:</op:operator><call><name pos:line="4274" pos:column="87">TEXT</name><argument_list pos:line="4274" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="4274" pos:column="92">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4275" pos:column="25">element</name><op:operator pos:line="4275" pos:column="32">-&gt;</op:operator><name pos:line="4275" pos:column="34">SetAttribute</name></name><argument_list pos:line="4275" pos:column="46">(<argument><expr><call><name pos:line="4275" pos:column="47">TEXT</name><argument_list pos:line="4275" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4275" pos:column="52">"drawInactiveTab"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4275" pos:column="72">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4277" pos:column="25">pStr</name> <op:operator pos:line="4277" pos:column="30">=</op:operator> <op:operator pos:line="4277" pos:column="32">(</op:operator><name><name pos:line="4277" pos:column="33">_nppGUI</name><op:operator pos:line="4277" pos:column="40">.</op:operator><name pos:line="4277" pos:column="41">_tabStatus</name></name> <op:operator pos:line="4277" pos:column="52">&amp;</op:operator> <name pos:line="4277" pos:column="54">TAB_REDUCE</name><op:operator pos:line="4277" pos:column="64">)</op:operator><op:operator pos:line="4277" pos:column="65">?</op:operator><call><name pos:line="4277" pos:column="66">TEXT</name><argument_list pos:line="4277" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="4277" pos:column="71">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4277" pos:column="77">:</op:operator><call><name pos:line="4277" pos:column="78">TEXT</name><argument_list pos:line="4277" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="4277" pos:column="83">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4278" pos:column="25">element</name><op:operator pos:line="4278" pos:column="32">-&gt;</op:operator><name pos:line="4278" pos:column="34">SetAttribute</name></name><argument_list pos:line="4278" pos:column="46">(<argument><expr><call><name pos:line="4278" pos:column="47">TEXT</name><argument_list pos:line="4278" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4278" pos:column="52">"reduce"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4278" pos:column="63">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4280" pos:column="25">pStr</name> <op:operator pos:line="4280" pos:column="30">=</op:operator> <op:operator pos:line="4280" pos:column="32">(</op:operator><name><name pos:line="4280" pos:column="33">_nppGUI</name><op:operator pos:line="4280" pos:column="40">.</op:operator><name pos:line="4280" pos:column="41">_tabStatus</name></name> <op:operator pos:line="4280" pos:column="52">&amp;</op:operator> <name pos:line="4280" pos:column="54">TAB_CLOSEBUTTON</name><op:operator pos:line="4280" pos:column="69">)</op:operator><op:operator pos:line="4280" pos:column="70">?</op:operator><call><name pos:line="4280" pos:column="71">TEXT</name><argument_list pos:line="4280" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="4280" pos:column="76">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4280" pos:column="82">:</op:operator><call><name pos:line="4280" pos:column="83">TEXT</name><argument_list pos:line="4280" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="4280" pos:column="88">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4281" pos:column="25">element</name><op:operator pos:line="4281" pos:column="32">-&gt;</op:operator><name pos:line="4281" pos:column="34">SetAttribute</name></name><argument_list pos:line="4281" pos:column="46">(<argument><expr><call><name pos:line="4281" pos:column="47">TEXT</name><argument_list pos:line="4281" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4281" pos:column="52">"closeButton"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4281" pos:column="68">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4283" pos:column="25">pStr</name> <op:operator pos:line="4283" pos:column="30">=</op:operator> <op:operator pos:line="4283" pos:column="32">(</op:operator><name><name pos:line="4283" pos:column="33">_nppGUI</name><op:operator pos:line="4283" pos:column="40">.</op:operator><name pos:line="4283" pos:column="41">_tabStatus</name></name> <op:operator pos:line="4283" pos:column="52">&amp;</op:operator> <name pos:line="4283" pos:column="54">TAB_DBCLK2CLOSE</name><op:operator pos:line="4283" pos:column="69">)</op:operator><op:operator pos:line="4283" pos:column="70">?</op:operator><call><name pos:line="4283" pos:column="71">TEXT</name><argument_list pos:line="4283" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="4283" pos:column="76">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4283" pos:column="82">:</op:operator><call><name pos:line="4283" pos:column="83">TEXT</name><argument_list pos:line="4283" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="4283" pos:column="88">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4284" pos:column="25">element</name><op:operator pos:line="4284" pos:column="32">-&gt;</op:operator><name pos:line="4284" pos:column="34">SetAttribute</name></name><argument_list pos:line="4284" pos:column="46">(<argument><expr><call><name pos:line="4284" pos:column="47">TEXT</name><argument_list pos:line="4284" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4284" pos:column="52">"doubleClick2Close"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4284" pos:column="74">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4286" pos:column="25">pStr</name> <op:operator pos:line="4286" pos:column="30">=</op:operator> <op:operator pos:line="4286" pos:column="32">(</op:operator><name><name pos:line="4286" pos:column="33">_nppGUI</name><op:operator pos:line="4286" pos:column="40">.</op:operator><name pos:line="4286" pos:column="41">_tabStatus</name></name> <op:operator pos:line="4286" pos:column="52">&amp;</op:operator> <name pos:line="4286" pos:column="54">TAB_VERTICAL</name><op:operator pos:line="4286" pos:column="66">)</op:operator><op:operator pos:line="4286" pos:column="67">?</op:operator><call><name pos:line="4286" pos:column="68">TEXT</name><argument_list pos:line="4286" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="4286" pos:column="73">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4286" pos:column="79">:</op:operator><call><name pos:line="4286" pos:column="80">TEXT</name><argument_list pos:line="4286" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="4286" pos:column="85">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4287" pos:column="25">element</name><op:operator pos:line="4287" pos:column="32">-&gt;</op:operator><name pos:line="4287" pos:column="34">SetAttribute</name></name><argument_list pos:line="4287" pos:column="46">(<argument><expr><call><name pos:line="4287" pos:column="47">TEXT</name><argument_list pos:line="4287" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4287" pos:column="52">"vertical"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4287" pos:column="65">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>			
			
			<expr_stmt><expr><name pos:line="4289" pos:column="25">pStr</name> <op:operator pos:line="4289" pos:column="30">=</op:operator> <op:operator pos:line="4289" pos:column="32">(</op:operator><name><name pos:line="4289" pos:column="33">_nppGUI</name><op:operator pos:line="4289" pos:column="40">.</op:operator><name pos:line="4289" pos:column="41">_tabStatus</name></name> <op:operator pos:line="4289" pos:column="52">&amp;</op:operator> <name pos:line="4289" pos:column="54">TAB_MULTILINE</name><op:operator pos:line="4289" pos:column="67">)</op:operator><op:operator pos:line="4289" pos:column="68">?</op:operator><call><name pos:line="4289" pos:column="69">TEXT</name><argument_list pos:line="4289" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="4289" pos:column="74">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4289" pos:column="80">:</op:operator><call><name pos:line="4289" pos:column="81">TEXT</name><argument_list pos:line="4289" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="4289" pos:column="86">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4290" pos:column="25">element</name><op:operator pos:line="4290" pos:column="32">-&gt;</op:operator><name pos:line="4290" pos:column="34">SetAttribute</name></name><argument_list pos:line="4290" pos:column="46">(<argument><expr><call><name pos:line="4290" pos:column="47">TEXT</name><argument_list pos:line="4290" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4290" pos:column="52">"multiLine"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4290" pos:column="66">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4292" pos:column="25">pStr</name> <op:operator pos:line="4292" pos:column="30">=</op:operator> <op:operator pos:line="4292" pos:column="32">(</op:operator><name><name pos:line="4292" pos:column="33">_nppGUI</name><op:operator pos:line="4292" pos:column="40">.</op:operator><name pos:line="4292" pos:column="41">_tabStatus</name></name> <op:operator pos:line="4292" pos:column="52">&amp;</op:operator> <name pos:line="4292" pos:column="54">TAB_HIDE</name><op:operator pos:line="4292" pos:column="62">)</op:operator><op:operator pos:line="4292" pos:column="63">?</op:operator><call><name pos:line="4292" pos:column="64">TEXT</name><argument_list pos:line="4292" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="4292" pos:column="69">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4292" pos:column="75">:</op:operator><call><name pos:line="4292" pos:column="76">TEXT</name><argument_list pos:line="4292" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="4292" pos:column="81">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4293" pos:column="25">element</name><op:operator pos:line="4293" pos:column="32">-&gt;</op:operator><name pos:line="4293" pos:column="34">SetAttribute</name></name><argument_list pos:line="4293" pos:column="46">(<argument><expr><call><name pos:line="4293" pos:column="47">TEXT</name><argument_list pos:line="4293" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4293" pos:column="52">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4293" pos:column="61">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		}</block></then>
		<else pos:line="4296" pos:column="17">else <if pos:line="4296" pos:column="22">if <condition pos:line="4296" pos:column="25">(<expr><op:operator pos:line="4296" pos:column="26">!</op:operator><call><name pos:line="4296" pos:column="27">lstrcmp</name><argument_list pos:line="4296" pos:column="34">(<argument><expr><name pos:line="4296" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4296" pos:column="39">TEXT</name><argument_list pos:line="4296" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4296" pos:column="44">"ScintillaViewsSplitter"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4296" pos:column="71">
		<block pos:line="4297" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="4298" pos:column="25">const</specifier> <name pos:line="4298" pos:column="31">TCHAR</name> <type:modifier pos:line="4298" pos:column="37">*</type:modifier></type><name pos:line="4298" pos:column="38">pStr</name> <init pos:line="4298" pos:column="43">= <expr><name><name pos:line="4298" pos:column="45">_nppGUI</name><op:operator pos:line="4298" pos:column="52">.</op:operator><name pos:line="4298" pos:column="53">_splitterPos</name></name> <op:operator pos:line="4298" pos:column="66">==</op:operator> <name pos:line="4298" pos:column="69">POS_VERTICAL</name><op:operator pos:line="4298" pos:column="81">?</op:operator><call><name pos:line="4298" pos:column="82">TEXT</name><argument_list pos:line="4298" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="4298" pos:column="87">"vertical"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4298" pos:column="98">:</op:operator><call><name pos:line="4298" pos:column="99">TEXT</name><argument_list pos:line="4298" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="4298" pos:column="104">"horizontal"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4299" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4299" pos:column="35">*</type:modifier></type><name pos:line="4299" pos:column="36">n</name> <init pos:line="4299" pos:column="38">= <expr><call><name><name pos:line="4299" pos:column="40">childNode</name><op:operator pos:line="4299" pos:column="49">-&gt;</op:operator><name pos:line="4299" pos:column="51">FirstChild</name></name><argument_list pos:line="4299" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4300" pos:column="25">if <condition pos:line="4300" pos:column="28">(<expr><name pos:line="4300" pos:column="29">n</name></expr>)</condition><then pos:line="4300" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4301" pos:column="33">n</name><op:operator pos:line="4301" pos:column="34">-&gt;</op:operator><name pos:line="4301" pos:column="36">SetValue</name></name><argument_list pos:line="4301" pos:column="44">(<argument><expr><name pos:line="4301" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4302" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4303" pos:column="33">childNode</name><op:operator pos:line="4303" pos:column="42">-&gt;</op:operator><name pos:line="4303" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4303" pos:column="58">(<argument><expr><call><name pos:line="4303" pos:column="59">TiXmlText</name><argument_list pos:line="4303" pos:column="68">(<argument><expr><name pos:line="4303" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4305" pos:column="17">else <if pos:line="4305" pos:column="22">if <condition pos:line="4305" pos:column="25">(<expr><op:operator pos:line="4305" pos:column="26">!</op:operator><call><name pos:line="4305" pos:column="27">lstrcmp</name><argument_list pos:line="4305" pos:column="34">(<argument><expr><name pos:line="4305" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4305" pos:column="39">TEXT</name><argument_list pos:line="4305" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4305" pos:column="44">"UserDefineDlg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4305" pos:column="62">
		<block pos:line="4306" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="4307" pos:column="25">const</specifier> <name pos:line="4307" pos:column="31">TCHAR</name> <type:modifier pos:line="4307" pos:column="37">*</type:modifier></type><name pos:line="4307" pos:column="38">pStr</name> <init pos:line="4307" pos:column="43">= <expr><name><name pos:line="4307" pos:column="45">_nppGUI</name><op:operator pos:line="4307" pos:column="52">.</op:operator><name pos:line="4307" pos:column="53">_userDefineDlgStatus</name></name> <op:operator pos:line="4307" pos:column="74">&amp;</op:operator> <name pos:line="4307" pos:column="76">UDD_SHOW</name><op:operator pos:line="4307" pos:column="84">?</op:operator><call><name pos:line="4307" pos:column="85">TEXT</name><argument_list pos:line="4307" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="4307" pos:column="90">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4307" pos:column="97">:</op:operator><call><name pos:line="4307" pos:column="98">TEXT</name><argument_list pos:line="4307" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="4307" pos:column="103">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4308" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4308" pos:column="35">*</type:modifier></type><name pos:line="4308" pos:column="36">n</name> <init pos:line="4308" pos:column="38">= <expr><call><name><name pos:line="4308" pos:column="40">childNode</name><op:operator pos:line="4308" pos:column="49">-&gt;</op:operator><name pos:line="4308" pos:column="51">FirstChild</name></name><argument_list pos:line="4308" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4309" pos:column="25">if <condition pos:line="4309" pos:column="28">(<expr><name pos:line="4309" pos:column="29">n</name></expr>)</condition><then pos:line="4309" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4310" pos:column="33">n</name><op:operator pos:line="4310" pos:column="34">-&gt;</op:operator><name pos:line="4310" pos:column="36">SetValue</name></name><argument_list pos:line="4310" pos:column="44">(<argument><expr><name pos:line="4310" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4311" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4312" pos:column="33">childNode</name><op:operator pos:line="4312" pos:column="42">-&gt;</op:operator><name pos:line="4312" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4312" pos:column="58">(<argument><expr><call><name pos:line="4312" pos:column="59">TiXmlText</name><argument_list pos:line="4312" pos:column="68">(<argument><expr><name pos:line="4312" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
			
			<expr_stmt><expr><name pos:line="4314" pos:column="25">pStr</name> <op:operator pos:line="4314" pos:column="30">=</op:operator> <op:operator pos:line="4314" pos:column="32">(</op:operator><name><name pos:line="4314" pos:column="33">_nppGUI</name><op:operator pos:line="4314" pos:column="40">.</op:operator><name pos:line="4314" pos:column="41">_userDefineDlgStatus</name></name> <op:operator pos:line="4314" pos:column="62">&amp;</op:operator> <name pos:line="4314" pos:column="64">UDD_DOCKED</name><op:operator pos:line="4314" pos:column="74">)</op:operator><op:operator pos:line="4314" pos:column="75">?</op:operator><call><name pos:line="4314" pos:column="76">TEXT</name><argument_list pos:line="4314" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="4314" pos:column="81">"docked"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4314" pos:column="90">:</op:operator><call><name pos:line="4314" pos:column="91">TEXT</name><argument_list pos:line="4314" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="4314" pos:column="96">"undocked"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4315" pos:column="25">element</name><op:operator pos:line="4315" pos:column="32">-&gt;</op:operator><name pos:line="4315" pos:column="34">SetAttribute</name></name><argument_list pos:line="4315" pos:column="46">(<argument><expr><call><name pos:line="4315" pos:column="47">TEXT</name><argument_list pos:line="4315" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4315" pos:column="52">"position"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4315" pos:column="65">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4317" pos:column="17">else <if pos:line="4317" pos:column="22">if <condition pos:line="4317" pos:column="25">(<expr><op:operator pos:line="4317" pos:column="26">!</op:operator><call><name pos:line="4317" pos:column="27">lstrcmp</name><argument_list pos:line="4317" pos:column="34">(<argument><expr><name pos:line="4317" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4317" pos:column="39">TEXT</name><argument_list pos:line="4317" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4317" pos:column="44">"TabSetting"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4317" pos:column="59">
		<block pos:line="4318" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="4319" pos:column="25">const</specifier> <name pos:line="4319" pos:column="31">TCHAR</name> <type:modifier pos:line="4319" pos:column="37">*</type:modifier></type><name pos:line="4319" pos:column="38">pStr</name> <init pos:line="4319" pos:column="43">= <expr><name><name pos:line="4319" pos:column="45">_nppGUI</name><op:operator pos:line="4319" pos:column="52">.</op:operator><name pos:line="4319" pos:column="53">_tabReplacedBySpace</name></name><op:operator pos:line="4319" pos:column="72">?</op:operator><call><name pos:line="4319" pos:column="73">TEXT</name><argument_list pos:line="4319" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="4319" pos:column="78">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4319" pos:column="84">:</op:operator><call><name pos:line="4319" pos:column="85">TEXT</name><argument_list pos:line="4319" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="4319" pos:column="90">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="4320" pos:column="25">element</name><op:operator pos:line="4320" pos:column="32">-&gt;</op:operator><name pos:line="4320" pos:column="34">SetAttribute</name></name><argument_list pos:line="4320" pos:column="46">(<argument><expr><call><name pos:line="4320" pos:column="47">TEXT</name><argument_list pos:line="4320" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4320" pos:column="52">"replaceBySpace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4320" pos:column="71">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4321" pos:column="25">element</name><op:operator pos:line="4321" pos:column="32">-&gt;</op:operator><name pos:line="4321" pos:column="34">SetAttribute</name></name><argument_list pos:line="4321" pos:column="46">(<argument><expr><call><name pos:line="4321" pos:column="47">TEXT</name><argument_list pos:line="4321" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4321" pos:column="52">"size"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4321" pos:column="61">_nppGUI</name><op:operator pos:line="4321" pos:column="68">.</op:operator><name pos:line="4321" pos:column="69">_tabSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4323" pos:column="17">else <if pos:line="4323" pos:column="22">if <condition pos:line="4323" pos:column="25">(<expr><op:operator pos:line="4323" pos:column="26">!</op:operator><call><name pos:line="4323" pos:column="27">lstrcmp</name><argument_list pos:line="4323" pos:column="34">(<argument><expr><name pos:line="4323" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4323" pos:column="39">TEXT</name><argument_list pos:line="4323" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4323" pos:column="44">"Caret"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4323" pos:column="54">
		<block pos:line="4324" pos:column="17">{
			<expr_stmt><expr><name pos:line="4325" pos:column="25">caretExist</name> <op:operator pos:line="4325" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="4325" pos:column="38">true</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4326" pos:column="25">element</name><op:operator pos:line="4326" pos:column="32">-&gt;</op:operator><name pos:line="4326" pos:column="34">SetAttribute</name></name><argument_list pos:line="4326" pos:column="46">(<argument><expr><call><name pos:line="4326" pos:column="47">TEXT</name><argument_list pos:line="4326" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4326" pos:column="52">"width"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4326" pos:column="62">_nppGUI</name><op:operator pos:line="4326" pos:column="69">.</op:operator><name pos:line="4326" pos:column="70">_caretWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4327" pos:column="25">element</name><op:operator pos:line="4327" pos:column="32">-&gt;</op:operator><name pos:line="4327" pos:column="34">SetAttribute</name></name><argument_list pos:line="4327" pos:column="46">(<argument><expr><call><name pos:line="4327" pos:column="47">TEXT</name><argument_list pos:line="4327" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4327" pos:column="52">"blinkRate"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4327" pos:column="66">_nppGUI</name><op:operator pos:line="4327" pos:column="73">.</op:operator><name pos:line="4327" pos:column="74">_caretBlinkRate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
        <else pos:line="4329" pos:column="9">else <if pos:line="4329" pos:column="14">if <condition pos:line="4329" pos:column="17">(<expr><op:operator pos:line="4329" pos:column="18">!</op:operator><call><name pos:line="4329" pos:column="19">lstrcmp</name><argument_list pos:line="4329" pos:column="26">(<argument><expr><name pos:line="4329" pos:column="27">nm</name></expr></argument>, <argument><expr><call><name pos:line="4329" pos:column="31">TEXT</name><argument_list pos:line="4329" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4329" pos:column="36">"ScintillaGlobalSettings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4329" pos:column="64">
		<block pos:line="4330" pos:column="17">{
			<expr_stmt><expr><name pos:line="4331" pos:column="25">ScintillaGlobalSettingsExist</name> <op:operator pos:line="4331" pos:column="54">=</op:operator> <lit:literal type="boolean" pos:line="4331" pos:column="56">true</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="4332" pos:column="13">element</name><op:operator pos:line="4332" pos:column="20">-&gt;</op:operator><name pos:line="4332" pos:column="22">SetAttribute</name></name><argument_list pos:line="4332" pos:column="34">(<argument><expr><call><name pos:line="4332" pos:column="35">TEXT</name><argument_list pos:line="4332" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="4332" pos:column="40">"enableMultiSelection"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4332" pos:column="65">_nppGUI</name><op:operator pos:line="4332" pos:column="72">.</op:operator><name pos:line="4332" pos:column="73">_enableMultiSelection</name></name><op:operator pos:line="4332" pos:column="94">?</op:operator><call><name pos:line="4332" pos:column="95">TEXT</name><argument_list pos:line="4332" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="4332" pos:column="100">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4332" pos:column="106">:</op:operator><call><name pos:line="4332" pos:column="107">TEXT</name><argument_list pos:line="4332" pos:column="111">(<argument><expr><lit:literal type="string" pos:line="4332" pos:column="112">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4334" pos:column="17">else <if pos:line="4334" pos:column="22">if <condition pos:line="4334" pos:column="25">(<expr><op:operator pos:line="4334" pos:column="26">!</op:operator><call><name pos:line="4334" pos:column="27">lstrcmp</name><argument_list pos:line="4334" pos:column="34">(<argument><expr><name pos:line="4334" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4334" pos:column="39">TEXT</name><argument_list pos:line="4334" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4334" pos:column="44">"Auto-detection"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4334" pos:column="63">
		<block pos:line="4335" pos:column="17">{
			<expr_stmt><expr><name pos:line="4336" pos:column="25">autoDetectionExist</name> <op:operator pos:line="4336" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="4336" pos:column="46">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4337" pos:column="25">const</specifier> <name pos:line="4337" pos:column="31">TCHAR</name> <type:modifier pos:line="4337" pos:column="37">*</type:modifier></type><name pos:line="4337" pos:column="38">pStr</name> <init pos:line="4337" pos:column="43">= <expr><call><name pos:line="4337" pos:column="45">TEXT</name><argument_list pos:line="4337" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="4337" pos:column="50">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<switch pos:line="4338" pos:column="25">switch <condition pos:line="4338" pos:column="32">(<expr><name><name pos:line="4338" pos:column="33">_nppGUI</name><op:operator pos:line="4338" pos:column="40">.</op:operator><name pos:line="4338" pos:column="41">_fileAutoDetection</name></name></expr>)</condition>
			<block pos:line="4339" pos:column="25">{
				<case pos:line="4340" pos:column="33">case <expr><name pos:line="4340" pos:column="38">cdEnabled</name></expr>:
					<expr_stmt><expr><name pos:line="4341" pos:column="41">pStr</name> <op:operator pos:line="4341" pos:column="46">=</op:operator> <call><name pos:line="4341" pos:column="48">TEXT</name><argument_list pos:line="4341" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4341" pos:column="53">"yes"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="4342" pos:column="41">break;</break>
				</case><case pos:line="4343" pos:column="33">case <expr><name pos:line="4343" pos:column="38">cdAutoUpdate</name></expr>:
					<expr_stmt><expr><name pos:line="4344" pos:column="41">pStr</name> <op:operator pos:line="4344" pos:column="46">=</op:operator> <call><name pos:line="4344" pos:column="48">TEXT</name><argument_list pos:line="4344" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4344" pos:column="53">"auto"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="4345" pos:column="41">break;</break>
				</case><case pos:line="4346" pos:column="33">case <expr><name pos:line="4346" pos:column="38">cdGo2end</name></expr>:
					<expr_stmt><expr><name pos:line="4347" pos:column="41">pStr</name> <op:operator pos:line="4347" pos:column="46">=</op:operator> <call><name pos:line="4347" pos:column="48">TEXT</name><argument_list pos:line="4347" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4347" pos:column="53">"Update2End"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="4348" pos:column="41">break;</break>
				</case><case pos:line="4349" pos:column="33">case <expr><name pos:line="4349" pos:column="38">cdAutoUpdateGo2end</name></expr>:
					<expr_stmt><expr><name pos:line="4350" pos:column="41">pStr</name> <op:operator pos:line="4350" pos:column="46">=</op:operator> <call><name pos:line="4350" pos:column="48">TEXT</name><argument_list pos:line="4350" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4350" pos:column="53">"autoUpdate2End"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="4351" pos:column="41">break;</break>
			</case>}</block></switch>
			<decl_stmt><decl><type><name pos:line="4353" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4353" pos:column="35">*</type:modifier></type><name pos:line="4353" pos:column="36">n</name> <init pos:line="4353" pos:column="38">= <expr><call><name><name pos:line="4353" pos:column="40">childNode</name><op:operator pos:line="4353" pos:column="49">-&gt;</op:operator><name pos:line="4353" pos:column="51">FirstChild</name></name><argument_list pos:line="4353" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4354" pos:column="25">if <condition pos:line="4354" pos:column="28">(<expr><name pos:line="4354" pos:column="29">n</name></expr>)</condition><then pos:line="4354" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4355" pos:column="33">n</name><op:operator pos:line="4355" pos:column="34">-&gt;</op:operator><name pos:line="4355" pos:column="36">SetValue</name></name><argument_list pos:line="4355" pos:column="44">(<argument><expr><name pos:line="4355" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4356" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4357" pos:column="33">childNode</name><op:operator pos:line="4357" pos:column="42">-&gt;</op:operator><name pos:line="4357" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4357" pos:column="58">(<argument><expr><call><name pos:line="4357" pos:column="59">TiXmlText</name><argument_list pos:line="4357" pos:column="68">(<argument><expr><name pos:line="4357" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4359" pos:column="17">else <if pos:line="4359" pos:column="22">if <condition pos:line="4359" pos:column="25">(<expr><op:operator pos:line="4359" pos:column="26">!</op:operator><call><name pos:line="4359" pos:column="27">lstrcmp</name><argument_list pos:line="4359" pos:column="34">(<argument><expr><name pos:line="4359" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4359" pos:column="39">TEXT</name><argument_list pos:line="4359" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4359" pos:column="44">"TrayIcon"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4359" pos:column="57">
		<block pos:line="4360" pos:column="17">{
			<expr_stmt><expr><name pos:line="4361" pos:column="25">trayIconExist</name> <op:operator pos:line="4361" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="4361" pos:column="41">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4362" pos:column="25">const</specifier> <name pos:line="4362" pos:column="31">TCHAR</name> <type:modifier pos:line="4362" pos:column="37">*</type:modifier></type><name pos:line="4362" pos:column="38">pStr</name> <init pos:line="4362" pos:column="43">= <expr><name><name pos:line="4362" pos:column="45">_nppGUI</name><op:operator pos:line="4362" pos:column="52">.</op:operator><name pos:line="4362" pos:column="53">_isMinimizedToTray</name></name><op:operator pos:line="4362" pos:column="71">?</op:operator><call><name pos:line="4362" pos:column="72">TEXT</name><argument_list pos:line="4362" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="4362" pos:column="77">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4362" pos:column="83">:</op:operator><call><name pos:line="4362" pos:column="84">TEXT</name><argument_list pos:line="4362" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="4362" pos:column="89">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4363" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4363" pos:column="35">*</type:modifier></type><name pos:line="4363" pos:column="36">n</name> <init pos:line="4363" pos:column="38">= <expr><call><name><name pos:line="4363" pos:column="40">childNode</name><op:operator pos:line="4363" pos:column="49">-&gt;</op:operator><name pos:line="4363" pos:column="51">FirstChild</name></name><argument_list pos:line="4363" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4364" pos:column="25">if <condition pos:line="4364" pos:column="28">(<expr><name pos:line="4364" pos:column="29">n</name></expr>)</condition><then pos:line="4364" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4365" pos:column="33">n</name><op:operator pos:line="4365" pos:column="34">-&gt;</op:operator><name pos:line="4365" pos:column="36">SetValue</name></name><argument_list pos:line="4365" pos:column="44">(<argument><expr><name pos:line="4365" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4366" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4367" pos:column="33">childNode</name><op:operator pos:line="4367" pos:column="42">-&gt;</op:operator><name pos:line="4367" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4367" pos:column="58">(<argument><expr><call><name pos:line="4367" pos:column="59">TiXmlText</name><argument_list pos:line="4367" pos:column="68">(<argument><expr><name pos:line="4367" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4369" pos:column="17">else <if pos:line="4369" pos:column="22">if <condition pos:line="4369" pos:column="25">(<expr><op:operator pos:line="4369" pos:column="26">!</op:operator><call><name pos:line="4369" pos:column="27">lstrcmp</name><argument_list pos:line="4369" pos:column="34">(<argument><expr><name pos:line="4369" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4369" pos:column="39">TEXT</name><argument_list pos:line="4369" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4369" pos:column="44">"RememberLastSession"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4369" pos:column="68">
		<block pos:line="4370" pos:column="17">{
			<expr_stmt><expr><name pos:line="4371" pos:column="25">rememberLastSessionExist</name> <op:operator pos:line="4371" pos:column="50">=</op:operator> <lit:literal type="boolean" pos:line="4371" pos:column="52">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4372" pos:column="25">const</specifier> <name pos:line="4372" pos:column="31">TCHAR</name> <type:modifier pos:line="4372" pos:column="37">*</type:modifier></type><name pos:line="4372" pos:column="38">pStr</name> <init pos:line="4372" pos:column="43">= <expr><name><name pos:line="4372" pos:column="45">_nppGUI</name><op:operator pos:line="4372" pos:column="52">.</op:operator><name pos:line="4372" pos:column="53">_rememberLastSession</name></name><op:operator pos:line="4372" pos:column="73">?</op:operator><call><name pos:line="4372" pos:column="74">TEXT</name><argument_list pos:line="4372" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="4372" pos:column="79">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4372" pos:column="85">:</op:operator><call><name pos:line="4372" pos:column="86">TEXT</name><argument_list pos:line="4372" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="4372" pos:column="91">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4373" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4373" pos:column="35">*</type:modifier></type><name pos:line="4373" pos:column="36">n</name> <init pos:line="4373" pos:column="38">= <expr><call><name><name pos:line="4373" pos:column="40">childNode</name><op:operator pos:line="4373" pos:column="49">-&gt;</op:operator><name pos:line="4373" pos:column="51">FirstChild</name></name><argument_list pos:line="4373" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4374" pos:column="25">if <condition pos:line="4374" pos:column="28">(<expr><name pos:line="4374" pos:column="29">n</name></expr>)</condition><then pos:line="4374" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4375" pos:column="33">n</name><op:operator pos:line="4375" pos:column="34">-&gt;</op:operator><name pos:line="4375" pos:column="36">SetValue</name></name><argument_list pos:line="4375" pos:column="44">(<argument><expr><name pos:line="4375" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4376" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4377" pos:column="33">childNode</name><op:operator pos:line="4377" pos:column="42">-&gt;</op:operator><name pos:line="4377" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4377" pos:column="58">(<argument><expr><call><name pos:line="4377" pos:column="59">TiXmlText</name><argument_list pos:line="4377" pos:column="68">(<argument><expr><name pos:line="4377" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>

		<else pos:line="4380" pos:column="17">else <if pos:line="4380" pos:column="22">if <condition pos:line="4380" pos:column="25">(<expr><op:operator pos:line="4380" pos:column="26">!</op:operator><call><name pos:line="4380" pos:column="27">lstrcmp</name><argument_list pos:line="4380" pos:column="34">(<argument><expr><name pos:line="4380" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4380" pos:column="39">TEXT</name><argument_list pos:line="4380" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4380" pos:column="44">"MaitainIndent"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4380" pos:column="62">
		<block pos:line="4381" pos:column="17">{
			<expr_stmt><expr><name pos:line="4382" pos:column="25">maitainIndentExist</name> <op:operator pos:line="4382" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="4382" pos:column="46">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4383" pos:column="25">const</specifier> <name pos:line="4383" pos:column="31">TCHAR</name> <type:modifier pos:line="4383" pos:column="37">*</type:modifier></type><name pos:line="4383" pos:column="38">pStr</name> <init pos:line="4383" pos:column="43">= <expr><name><name pos:line="4383" pos:column="45">_nppGUI</name><op:operator pos:line="4383" pos:column="52">.</op:operator><name pos:line="4383" pos:column="53">_maitainIndent</name></name><op:operator pos:line="4383" pos:column="67">?</op:operator><call><name pos:line="4383" pos:column="68">TEXT</name><argument_list pos:line="4383" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="4383" pos:column="73">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4383" pos:column="79">:</op:operator><call><name pos:line="4383" pos:column="80">TEXT</name><argument_list pos:line="4383" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="4383" pos:column="85">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4384" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4384" pos:column="35">*</type:modifier></type><name pos:line="4384" pos:column="36">n</name> <init pos:line="4384" pos:column="38">= <expr><call><name><name pos:line="4384" pos:column="40">childNode</name><op:operator pos:line="4384" pos:column="49">-&gt;</op:operator><name pos:line="4384" pos:column="51">FirstChild</name></name><argument_list pos:line="4384" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4385" pos:column="25">if <condition pos:line="4385" pos:column="28">(<expr><name pos:line="4385" pos:column="29">n</name></expr>)</condition><then pos:line="4385" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4386" pos:column="33">n</name><op:operator pos:line="4386" pos:column="34">-&gt;</op:operator><name pos:line="4386" pos:column="36">SetValue</name></name><argument_list pos:line="4386" pos:column="44">(<argument><expr><name pos:line="4386" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4387" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4388" pos:column="33">childNode</name><op:operator pos:line="4388" pos:column="42">-&gt;</op:operator><name pos:line="4388" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4388" pos:column="58">(<argument><expr><call><name pos:line="4388" pos:column="59">TiXmlText</name><argument_list pos:line="4388" pos:column="68">(<argument><expr><name pos:line="4388" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4390" pos:column="17">else <if pos:line="4390" pos:column="22">if <condition pos:line="4390" pos:column="25">(<expr><op:operator pos:line="4390" pos:column="26">!</op:operator><call><name pos:line="4390" pos:column="27">lstrcmp</name><argument_list pos:line="4390" pos:column="34">(<argument><expr><name pos:line="4390" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4390" pos:column="39">TEXT</name><argument_list pos:line="4390" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4390" pos:column="44">"SmartHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4390" pos:column="63">
		<block pos:line="4391" pos:column="17">{
			<expr_stmt><expr><name pos:line="4392" pos:column="25">smartHighLightExist</name> <op:operator pos:line="4392" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="4392" pos:column="47">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4393" pos:column="25">const</specifier> <name pos:line="4393" pos:column="31">TCHAR</name> <type:modifier pos:line="4393" pos:column="37">*</type:modifier></type><name pos:line="4393" pos:column="38">pStr</name> <init pos:line="4393" pos:column="43">= <expr><name><name pos:line="4393" pos:column="45">_nppGUI</name><op:operator pos:line="4393" pos:column="52">.</op:operator><name pos:line="4393" pos:column="53">_enableSmartHilite</name></name><op:operator pos:line="4393" pos:column="71">?</op:operator><call><name pos:line="4393" pos:column="72">TEXT</name><argument_list pos:line="4393" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="4393" pos:column="77">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4393" pos:column="83">:</op:operator><call><name pos:line="4393" pos:column="84">TEXT</name><argument_list pos:line="4393" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="4393" pos:column="89">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4394" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4394" pos:column="35">*</type:modifier></type><name pos:line="4394" pos:column="36">n</name> <init pos:line="4394" pos:column="38">= <expr><call><name><name pos:line="4394" pos:column="40">childNode</name><op:operator pos:line="4394" pos:column="49">-&gt;</op:operator><name pos:line="4394" pos:column="51">FirstChild</name></name><argument_list pos:line="4394" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4395" pos:column="25">if <condition pos:line="4395" pos:column="28">(<expr><name pos:line="4395" pos:column="29">n</name></expr>)</condition><then pos:line="4395" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4396" pos:column="33">n</name><op:operator pos:line="4396" pos:column="34">-&gt;</op:operator><name pos:line="4396" pos:column="36">SetValue</name></name><argument_list pos:line="4396" pos:column="44">(<argument><expr><name pos:line="4396" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4397" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4398" pos:column="33">childNode</name><op:operator pos:line="4398" pos:column="42">-&gt;</op:operator><name pos:line="4398" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4398" pos:column="58">(<argument><expr><call><name pos:line="4398" pos:column="59">TiXmlText</name><argument_list pos:line="4398" pos:column="68">(<argument><expr><name pos:line="4398" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4400" pos:column="17">else <if pos:line="4400" pos:column="22">if <condition pos:line="4400" pos:column="25">(<expr><op:operator pos:line="4400" pos:column="26">!</op:operator><call><name pos:line="4400" pos:column="27">lstrcmp</name><argument_list pos:line="4400" pos:column="34">(<argument><expr><name pos:line="4400" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4400" pos:column="39">TEXT</name><argument_list pos:line="4400" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4400" pos:column="44">"SmartHighLightCaseSensitive"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4400" pos:column="76">
		<block pos:line="4401" pos:column="17">{
			<expr_stmt><expr><name pos:line="4402" pos:column="25">smartHighLightCaseSensitiveExist</name> <op:operator pos:line="4402" pos:column="58">=</op:operator> <lit:literal type="boolean" pos:line="4402" pos:column="60">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4403" pos:column="25">const</specifier> <name pos:line="4403" pos:column="31">TCHAR</name> <type:modifier pos:line="4403" pos:column="37">*</type:modifier></type><name pos:line="4403" pos:column="38">pStr</name> <init pos:line="4403" pos:column="43">= <expr><name><name pos:line="4403" pos:column="45">_nppGUI</name><op:operator pos:line="4403" pos:column="52">.</op:operator><name pos:line="4403" pos:column="53">_smartHiliteCaseSensitive</name></name><op:operator pos:line="4403" pos:column="78">?</op:operator><call><name pos:line="4403" pos:column="79">TEXT</name><argument_list pos:line="4403" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="4403" pos:column="84">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4403" pos:column="90">:</op:operator><call><name pos:line="4403" pos:column="91">TEXT</name><argument_list pos:line="4403" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="4403" pos:column="96">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4404" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4404" pos:column="35">*</type:modifier></type><name pos:line="4404" pos:column="36">n</name> <init pos:line="4404" pos:column="38">= <expr><call><name><name pos:line="4404" pos:column="40">childNode</name><op:operator pos:line="4404" pos:column="49">-&gt;</op:operator><name pos:line="4404" pos:column="51">FirstChild</name></name><argument_list pos:line="4404" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4405" pos:column="25">if <condition pos:line="4405" pos:column="28">(<expr><name pos:line="4405" pos:column="29">n</name></expr>)</condition><then pos:line="4405" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4406" pos:column="33">n</name><op:operator pos:line="4406" pos:column="34">-&gt;</op:operator><name pos:line="4406" pos:column="36">SetValue</name></name><argument_list pos:line="4406" pos:column="44">(<argument><expr><name pos:line="4406" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4407" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4408" pos:column="33">childNode</name><op:operator pos:line="4408" pos:column="42">-&gt;</op:operator><name pos:line="4408" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4408" pos:column="58">(<argument><expr><call><name pos:line="4408" pos:column="59">TiXmlText</name><argument_list pos:line="4408" pos:column="68">(<argument><expr><name pos:line="4408" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>

		<else pos:line="4411" pos:column="17">else <if pos:line="4411" pos:column="22">if <condition pos:line="4411" pos:column="25">(<expr><op:operator pos:line="4411" pos:column="26">!</op:operator><call><name pos:line="4411" pos:column="27">lstrcmp</name><argument_list pos:line="4411" pos:column="34">(<argument><expr><name pos:line="4411" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4411" pos:column="39">TEXT</name><argument_list pos:line="4411" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4411" pos:column="44">"TagsMatchHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4411" pos:column="67">
		<block pos:line="4412" pos:column="17">{
			<expr_stmt><expr><name pos:line="4413" pos:column="25">tagsMatchHighLightExist</name> <op:operator pos:line="4413" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="4413" pos:column="51">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4414" pos:column="25">const</specifier> <name pos:line="4414" pos:column="31">TCHAR</name> <type:modifier pos:line="4414" pos:column="37">*</type:modifier></type><name pos:line="4414" pos:column="38">pStr</name> <init pos:line="4414" pos:column="43">= <expr><name><name pos:line="4414" pos:column="45">_nppGUI</name><op:operator pos:line="4414" pos:column="52">.</op:operator><name pos:line="4414" pos:column="53">_enableTagsMatchHilite</name></name><op:operator pos:line="4414" pos:column="75">?</op:operator><call><name pos:line="4414" pos:column="76">TEXT</name><argument_list pos:line="4414" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="4414" pos:column="81">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4414" pos:column="87">:</op:operator><call><name pos:line="4414" pos:column="88">TEXT</name><argument_list pos:line="4414" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4414" pos:column="93">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="4415" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4415" pos:column="35">*</type:modifier></type><name pos:line="4415" pos:column="36">n</name> <init pos:line="4415" pos:column="38">= <expr><call><name><name pos:line="4415" pos:column="40">childNode</name><op:operator pos:line="4415" pos:column="49">-&gt;</op:operator><name pos:line="4415" pos:column="51">FirstChild</name></name><argument_list pos:line="4415" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4416" pos:column="25">if <condition pos:line="4416" pos:column="28">(<expr><name pos:line="4416" pos:column="29">n</name></expr>)</condition><then pos:line="4416" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4417" pos:column="33">n</name><op:operator pos:line="4417" pos:column="34">-&gt;</op:operator><name pos:line="4417" pos:column="36">SetValue</name></name><argument_list pos:line="4417" pos:column="44">(<argument><expr><name pos:line="4417" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4418" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4419" pos:column="33">childNode</name><op:operator pos:line="4419" pos:column="42">-&gt;</op:operator><name pos:line="4419" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4419" pos:column="58">(<argument><expr><call><name pos:line="4419" pos:column="59">TiXmlText</name><argument_list pos:line="4419" pos:column="68">(<argument><expr><name pos:line="4419" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

			<expr_stmt><expr><op:operator pos:line="4421" pos:column="25">(</op:operator><call><name><name pos:line="4421" pos:column="26">childNode</name><op:operator pos:line="4421" pos:column="35">-&gt;</op:operator><name pos:line="4421" pos:column="37">ToElement</name></name><argument_list pos:line="4421" pos:column="46">()</argument_list></call><op:operator pos:line="4421" pos:column="48">)</op:operator><op:operator pos:line="4421" pos:column="49">-&gt;</op:operator><call><name pos:line="4421" pos:column="51">SetAttribute</name><argument_list pos:line="4421" pos:column="63">(<argument><expr><call><name pos:line="4421" pos:column="64">TEXT</name><argument_list pos:line="4421" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="4421" pos:column="69">"TagAttrHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4421" pos:column="90">_nppGUI</name><op:operator pos:line="4421" pos:column="97">.</op:operator><name pos:line="4421" pos:column="98">_enableTagAttrsHilite</name></name><op:operator pos:line="4421" pos:column="119">?</op:operator><call><name pos:line="4421" pos:column="120">TEXT</name><argument_list pos:line="4421" pos:column="124">(<argument><expr><lit:literal type="string" pos:line="4421" pos:column="125">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4421" pos:column="131">:</op:operator><call><name pos:line="4421" pos:column="132">TEXT</name><argument_list pos:line="4421" pos:column="136">(<argument><expr><lit:literal type="string" pos:line="4421" pos:column="137">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><op:operator pos:line="4422" pos:column="25">(</op:operator><call><name><name pos:line="4422" pos:column="26">childNode</name><op:operator pos:line="4422" pos:column="35">-&gt;</op:operator><name pos:line="4422" pos:column="37">ToElement</name></name><argument_list pos:line="4422" pos:column="46">()</argument_list></call><op:operator pos:line="4422" pos:column="48">)</op:operator><op:operator pos:line="4422" pos:column="49">-&gt;</op:operator><call><name pos:line="4422" pos:column="51">SetAttribute</name><argument_list pos:line="4422" pos:column="63">(<argument><expr><call><name pos:line="4422" pos:column="64">TEXT</name><argument_list pos:line="4422" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="4422" pos:column="69">"HighLightNonHtmlZone"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4422" pos:column="94">_nppGUI</name><op:operator pos:line="4422" pos:column="101">.</op:operator><name pos:line="4422" pos:column="102">_enableHiliteNonHTMLZone</name></name><op:operator pos:line="4422" pos:column="126">?</op:operator><call><name pos:line="4422" pos:column="127">TEXT</name><argument_list pos:line="4422" pos:column="131">(<argument><expr><lit:literal type="string" pos:line="4422" pos:column="132">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4422" pos:column="138">:</op:operator><call><name pos:line="4422" pos:column="139">TEXT</name><argument_list pos:line="4422" pos:column="143">(<argument><expr><lit:literal type="string" pos:line="4422" pos:column="144">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>

		<else pos:line="4425" pos:column="17">else <if pos:line="4425" pos:column="22">if <condition pos:line="4425" pos:column="25">(<expr><op:operator pos:line="4425" pos:column="26">!</op:operator><call><name pos:line="4425" pos:column="27">lstrcmp</name><argument_list pos:line="4425" pos:column="34">(<argument><expr><name pos:line="4425" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4425" pos:column="39">TEXT</name><argument_list pos:line="4425" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4425" pos:column="44">"TaskList"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4425" pos:column="57">
		<block pos:line="4426" pos:column="17">{
			<expr_stmt><expr><name pos:line="4427" pos:column="25">doTaskListExist</name> <op:operator pos:line="4427" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="4427" pos:column="43">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4428" pos:column="25">const</specifier> <name pos:line="4428" pos:column="31">TCHAR</name> <type:modifier pos:line="4428" pos:column="37">*</type:modifier></type><name pos:line="4428" pos:column="38">pStr</name> <init pos:line="4428" pos:column="43">= <expr><name><name pos:line="4428" pos:column="45">_nppGUI</name><op:operator pos:line="4428" pos:column="52">.</op:operator><name pos:line="4428" pos:column="53">_doTaskList</name></name><op:operator pos:line="4428" pos:column="64">?</op:operator><call><name pos:line="4428" pos:column="65">TEXT</name><argument_list pos:line="4428" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="4428" pos:column="70">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4428" pos:column="76">:</op:operator><call><name pos:line="4428" pos:column="77">TEXT</name><argument_list pos:line="4428" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="4428" pos:column="82">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="4430" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4430" pos:column="35">*</type:modifier></type><name pos:line="4430" pos:column="36">n</name> <init pos:line="4430" pos:column="38">= <expr><call><name><name pos:line="4430" pos:column="40">childNode</name><op:operator pos:line="4430" pos:column="49">-&gt;</op:operator><name pos:line="4430" pos:column="51">FirstChild</name></name><argument_list pos:line="4430" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4431" pos:column="25">if <condition pos:line="4431" pos:column="28">(<expr><name pos:line="4431" pos:column="29">n</name></expr>)</condition><then pos:line="4431" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4432" pos:column="33">n</name><op:operator pos:line="4432" pos:column="34">-&gt;</op:operator><name pos:line="4432" pos:column="36">SetValue</name></name><argument_list pos:line="4432" pos:column="44">(<argument><expr><name pos:line="4432" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4433" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4434" pos:column="33">childNode</name><op:operator pos:line="4434" pos:column="42">-&gt;</op:operator><name pos:line="4434" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4434" pos:column="58">(<argument><expr><call><name pos:line="4434" pos:column="59">TiXmlText</name><argument_list pos:line="4434" pos:column="68">(<argument><expr><name pos:line="4434" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4436" pos:column="17">else <if pos:line="4436" pos:column="22">if <condition pos:line="4436" pos:column="25">(<expr><op:operator pos:line="4436" pos:column="26">!</op:operator><call><name pos:line="4436" pos:column="27">lstrcmp</name><argument_list pos:line="4436" pos:column="34">(<argument><expr><name pos:line="4436" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4436" pos:column="39">TEXT</name><argument_list pos:line="4436" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4436" pos:column="44">"CheckHistoryFiles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4436" pos:column="66">
		<block pos:line="4437" pos:column="17">{
			<expr_stmt><expr><name pos:line="4438" pos:column="25">checkHistoryFilesExist</name> <op:operator pos:line="4438" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="4438" pos:column="50">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4439" pos:column="25">const</specifier> <name pos:line="4439" pos:column="31">TCHAR</name> <type:modifier pos:line="4439" pos:column="37">*</type:modifier></type><name pos:line="4439" pos:column="38">pStr</name> <init pos:line="4439" pos:column="43">= <expr><name><name pos:line="4439" pos:column="45">_nppGUI</name><op:operator pos:line="4439" pos:column="52">.</op:operator><name pos:line="4439" pos:column="53">_checkHistoryFiles</name></name><op:operator pos:line="4439" pos:column="71">?</op:operator><call><name pos:line="4439" pos:column="72">TEXT</name><argument_list pos:line="4439" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="4439" pos:column="77">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4439" pos:column="83">:</op:operator><call><name pos:line="4439" pos:column="84">TEXT</name><argument_list pos:line="4439" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="4439" pos:column="89">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="4441" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4441" pos:column="35">*</type:modifier></type><name pos:line="4441" pos:column="36">n</name> <init pos:line="4441" pos:column="38">= <expr><call><name><name pos:line="4441" pos:column="40">childNode</name><op:operator pos:line="4441" pos:column="49">-&gt;</op:operator><name pos:line="4441" pos:column="51">FirstChild</name></name><argument_list pos:line="4441" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4442" pos:column="25">if <condition pos:line="4442" pos:column="28">(<expr><name pos:line="4442" pos:column="29">n</name></expr>)</condition><then pos:line="4442" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4443" pos:column="33">n</name><op:operator pos:line="4443" pos:column="34">-&gt;</op:operator><name pos:line="4443" pos:column="36">SetValue</name></name><argument_list pos:line="4443" pos:column="44">(<argument><expr><name pos:line="4443" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4444" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4445" pos:column="33">childNode</name><op:operator pos:line="4445" pos:column="42">-&gt;</op:operator><name pos:line="4445" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4445" pos:column="58">(<argument><expr><call><name pos:line="4445" pos:column="59">TiXmlText</name><argument_list pos:line="4445" pos:column="68">(<argument><expr><name pos:line="4445" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4447" pos:column="17">else <if pos:line="4447" pos:column="22">if <condition pos:line="4447" pos:column="25">(<expr><op:operator pos:line="4447" pos:column="26">!</op:operator><call><name pos:line="4447" pos:column="27">lstrcmp</name><argument_list pos:line="4447" pos:column="34">(<argument><expr><name pos:line="4447" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4447" pos:column="39">TEXT</name><argument_list pos:line="4447" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4447" pos:column="44">"AppPosition"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4447" pos:column="60">
		<block pos:line="4448" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="4449" pos:column="25">element</name><op:operator pos:line="4449" pos:column="32">-&gt;</op:operator><name pos:line="4449" pos:column="34">SetAttribute</name></name><argument_list pos:line="4449" pos:column="46">(<argument><expr><call><name pos:line="4449" pos:column="47">TEXT</name><argument_list pos:line="4449" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4449" pos:column="52">"x"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4449" pos:column="58">_nppGUI</name><op:operator pos:line="4449" pos:column="65">.</op:operator><name pos:line="4449" pos:column="66">_appPos</name><op:operator pos:line="4449" pos:column="73">.</op:operator><name pos:line="4449" pos:column="74">left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4450" pos:column="25">element</name><op:operator pos:line="4450" pos:column="32">-&gt;</op:operator><name pos:line="4450" pos:column="34">SetAttribute</name></name><argument_list pos:line="4450" pos:column="46">(<argument><expr><call><name pos:line="4450" pos:column="47">TEXT</name><argument_list pos:line="4450" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4450" pos:column="52">"y"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4450" pos:column="58">_nppGUI</name><op:operator pos:line="4450" pos:column="65">.</op:operator><name pos:line="4450" pos:column="66">_appPos</name><op:operator pos:line="4450" pos:column="73">.</op:operator><name pos:line="4450" pos:column="74">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4451" pos:column="25">element</name><op:operator pos:line="4451" pos:column="32">-&gt;</op:operator><name pos:line="4451" pos:column="34">SetAttribute</name></name><argument_list pos:line="4451" pos:column="46">(<argument><expr><call><name pos:line="4451" pos:column="47">TEXT</name><argument_list pos:line="4451" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4451" pos:column="52">"width"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4451" pos:column="62">_nppGUI</name><op:operator pos:line="4451" pos:column="69">.</op:operator><name pos:line="4451" pos:column="70">_appPos</name><op:operator pos:line="4451" pos:column="77">.</op:operator><name pos:line="4451" pos:column="78">right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4452" pos:column="25">element</name><op:operator pos:line="4452" pos:column="32">-&gt;</op:operator><name pos:line="4452" pos:column="34">SetAttribute</name></name><argument_list pos:line="4452" pos:column="46">(<argument><expr><call><name pos:line="4452" pos:column="47">TEXT</name><argument_list pos:line="4452" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4452" pos:column="52">"height"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4452" pos:column="63">_nppGUI</name><op:operator pos:line="4452" pos:column="70">.</op:operator><name pos:line="4452" pos:column="71">_appPos</name><op:operator pos:line="4452" pos:column="78">.</op:operator><name pos:line="4452" pos:column="79">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4453" pos:column="25">element</name><op:operator pos:line="4453" pos:column="32">-&gt;</op:operator><name pos:line="4453" pos:column="34">SetAttribute</name></name><argument_list pos:line="4453" pos:column="46">(<argument><expr><call><name pos:line="4453" pos:column="47">TEXT</name><argument_list pos:line="4453" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4453" pos:column="52">"isMaximized"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4453" pos:column="68">_nppGUI</name><op:operator pos:line="4453" pos:column="75">.</op:operator><name pos:line="4453" pos:column="76">_isMaximized</name></name><op:operator pos:line="4453" pos:column="88">?</op:operator><call><name pos:line="4453" pos:column="89">TEXT</name><argument_list pos:line="4453" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="4453" pos:column="94">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4453" pos:column="100">:</op:operator><call><name pos:line="4453" pos:column="101">TEXT</name><argument_list pos:line="4453" pos:column="105">(<argument><expr><lit:literal type="string" pos:line="4453" pos:column="106">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4455" pos:column="17">else <if pos:line="4455" pos:column="22">if <condition pos:line="4455" pos:column="25">(<expr><op:operator pos:line="4455" pos:column="26">!</op:operator><call><name pos:line="4455" pos:column="27">lstrcmp</name><argument_list pos:line="4455" pos:column="34">(<argument><expr><name pos:line="4455" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4455" pos:column="39">TEXT</name><argument_list pos:line="4455" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4455" pos:column="44">"NewDocDefaultSettings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4455" pos:column="70">
		<block pos:line="4456" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="4457" pos:column="25">element</name><op:operator pos:line="4457" pos:column="32">-&gt;</op:operator><name pos:line="4457" pos:column="34">SetAttribute</name></name><argument_list pos:line="4457" pos:column="46">(<argument><expr><call><name pos:line="4457" pos:column="47">TEXT</name><argument_list pos:line="4457" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4457" pos:column="52">"format"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4457" pos:column="63">_nppGUI</name><op:operator pos:line="4457" pos:column="70">.</op:operator><name pos:line="4457" pos:column="71">_newDocDefaultSettings</name><op:operator pos:line="4457" pos:column="93">.</op:operator><name pos:line="4457" pos:column="94">_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4458" pos:column="25">element</name><op:operator pos:line="4458" pos:column="32">-&gt;</op:operator><name pos:line="4458" pos:column="34">SetAttribute</name></name><argument_list pos:line="4458" pos:column="46">(<argument><expr><call><name pos:line="4458" pos:column="47">TEXT</name><argument_list pos:line="4458" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4458" pos:column="52">"encoding"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4458" pos:column="65">_nppGUI</name><op:operator pos:line="4458" pos:column="72">.</op:operator><name pos:line="4458" pos:column="73">_newDocDefaultSettings</name><op:operator pos:line="4458" pos:column="95">.</op:operator><name pos:line="4458" pos:column="96">_encoding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4459" pos:column="25">element</name><op:operator pos:line="4459" pos:column="32">-&gt;</op:operator><name pos:line="4459" pos:column="34">SetAttribute</name></name><argument_list pos:line="4459" pos:column="46">(<argument><expr><call><name pos:line="4459" pos:column="47">TEXT</name><argument_list pos:line="4459" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4459" pos:column="52">"lang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4459" pos:column="61">_nppGUI</name><op:operator pos:line="4459" pos:column="68">.</op:operator><name pos:line="4459" pos:column="69">_newDocDefaultSettings</name><op:operator pos:line="4459" pos:column="91">.</op:operator><name pos:line="4459" pos:column="92">_lang</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4460" pos:column="25">element</name><op:operator pos:line="4460" pos:column="32">-&gt;</op:operator><name pos:line="4460" pos:column="34">SetAttribute</name></name><argument_list pos:line="4460" pos:column="46">(<argument><expr><call><name pos:line="4460" pos:column="47">TEXT</name><argument_list pos:line="4460" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4460" pos:column="52">"codepage"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4460" pos:column="65">_nppGUI</name><op:operator pos:line="4460" pos:column="72">.</op:operator><name pos:line="4460" pos:column="73">_newDocDefaultSettings</name><op:operator pos:line="4460" pos:column="95">.</op:operator><name pos:line="4460" pos:column="96">_codepage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4461" pos:column="25">element</name><op:operator pos:line="4461" pos:column="32">-&gt;</op:operator><name pos:line="4461" pos:column="34">SetAttribute</name></name><argument_list pos:line="4461" pos:column="46">(<argument><expr><call><name pos:line="4461" pos:column="47">TEXT</name><argument_list pos:line="4461" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4461" pos:column="52">"openAnsiAsUTF8"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4461" pos:column="71">_nppGUI</name><op:operator pos:line="4461" pos:column="78">.</op:operator><name pos:line="4461" pos:column="79">_newDocDefaultSettings</name><op:operator pos:line="4461" pos:column="101">.</op:operator><name pos:line="4461" pos:column="102">_openAnsiAsUtf8</name></name><op:operator pos:line="4461" pos:column="117">?</op:operator><call><name pos:line="4461" pos:column="118">TEXT</name><argument_list pos:line="4461" pos:column="122">(<argument><expr><lit:literal type="string" pos:line="4461" pos:column="123">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4461" pos:column="129">:</op:operator><call><name pos:line="4461" pos:column="130">TEXT</name><argument_list pos:line="4461" pos:column="134">(<argument><expr><lit:literal type="string" pos:line="4461" pos:column="135">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4462" pos:column="25">newDocDefaultSettingsExist</name> <op:operator pos:line="4462" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="4462" pos:column="54">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4464" pos:column="17">else <if pos:line="4464" pos:column="22">if <condition pos:line="4464" pos:column="25">(<expr><op:operator pos:line="4464" pos:column="26">!</op:operator><call><name pos:line="4464" pos:column="27">lstrcmp</name><argument_list pos:line="4464" pos:column="34">(<argument><expr><name pos:line="4464" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4464" pos:column="39">TEXT</name><argument_list pos:line="4464" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4464" pos:column="44">"langsExcluded"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4464" pos:column="62">
		<block pos:line="4465" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="4466" pos:column="25">writeExcludedLangList</name><argument_list pos:line="4466" pos:column="46">(<argument><expr><name pos:line="4466" pos:column="47">element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4467" pos:column="25">element</name><op:operator pos:line="4467" pos:column="32">-&gt;</op:operator><name pos:line="4467" pos:column="34">SetAttribute</name></name><argument_list pos:line="4467" pos:column="46">(<argument><expr><call><name pos:line="4467" pos:column="47">TEXT</name><argument_list pos:line="4467" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4467" pos:column="52">"langMenuCompact"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4467" pos:column="72">_nppGUI</name><op:operator pos:line="4467" pos:column="79">.</op:operator><name pos:line="4467" pos:column="80">_isLangMenuCompact</name></name><op:operator pos:line="4467" pos:column="98">?</op:operator><call><name pos:line="4467" pos:column="99">TEXT</name><argument_list pos:line="4467" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="4467" pos:column="104">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4467" pos:column="110">:</op:operator><call><name pos:line="4467" pos:column="111">TEXT</name><argument_list pos:line="4467" pos:column="115">(<argument><expr><lit:literal type="string" pos:line="4467" pos:column="116">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4468" pos:column="25">langsExcludedLstExist</name> <op:operator pos:line="4468" pos:column="47">=</op:operator> <lit:literal type="boolean" pos:line="4468" pos:column="49">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4470" pos:column="17">else <if pos:line="4470" pos:column="22">if <condition pos:line="4470" pos:column="25">(<expr><op:operator pos:line="4470" pos:column="26">!</op:operator><call><name pos:line="4470" pos:column="27">lstrcmp</name><argument_list pos:line="4470" pos:column="34">(<argument><expr><name pos:line="4470" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4470" pos:column="39">TEXT</name><argument_list pos:line="4470" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4470" pos:column="44">"Print"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4470" pos:column="54">
		<block pos:line="4471" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="4472" pos:column="25">writePrintSetting</name><argument_list pos:line="4472" pos:column="42">(<argument><expr><name pos:line="4472" pos:column="43">element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4473" pos:column="25">printSettingExist</name> <op:operator pos:line="4473" pos:column="43">=</op:operator> <lit:literal type="boolean" pos:line="4473" pos:column="45">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4475" pos:column="17">else <if pos:line="4475" pos:column="22">if <condition pos:line="4475" pos:column="25">(<expr><op:operator pos:line="4475" pos:column="26">!</op:operator><call><name pos:line="4475" pos:column="27">lstrcmp</name><argument_list pos:line="4475" pos:column="34">(<argument><expr><name pos:line="4475" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4475" pos:column="39">TEXT</name><argument_list pos:line="4475" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4475" pos:column="44">"Backup"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4475" pos:column="55">
		<block pos:line="4476" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="4477" pos:column="25">element</name><op:operator pos:line="4477" pos:column="32">-&gt;</op:operator><name pos:line="4477" pos:column="34">SetAttribute</name></name><argument_list pos:line="4477" pos:column="46">(<argument><expr><call><name pos:line="4477" pos:column="47">TEXT</name><argument_list pos:line="4477" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4477" pos:column="52">"action"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4477" pos:column="63">_nppGUI</name><op:operator pos:line="4477" pos:column="70">.</op:operator><name pos:line="4477" pos:column="71">_backup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4478" pos:column="25">element</name><op:operator pos:line="4478" pos:column="32">-&gt;</op:operator><name pos:line="4478" pos:column="34">SetAttribute</name></name><argument_list pos:line="4478" pos:column="46">(<argument><expr><call><name pos:line="4478" pos:column="47">TEXT</name><argument_list pos:line="4478" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4478" pos:column="52">"useCustumDir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4478" pos:column="69">_nppGUI</name><op:operator pos:line="4478" pos:column="76">.</op:operator><name pos:line="4478" pos:column="77">_useDir</name></name><op:operator pos:line="4478" pos:column="84">?</op:operator><call><name pos:line="4478" pos:column="85">TEXT</name><argument_list pos:line="4478" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="4478" pos:column="90">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4478" pos:column="96">:</op:operator><call><name pos:line="4478" pos:column="97">TEXT</name><argument_list pos:line="4478" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="4478" pos:column="102">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4479" pos:column="25">element</name><op:operator pos:line="4479" pos:column="32">-&gt;</op:operator><name pos:line="4479" pos:column="34">SetAttribute</name></name><argument_list pos:line="4479" pos:column="46">(<argument><expr><call><name pos:line="4479" pos:column="47">TEXT</name><argument_list pos:line="4479" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4479" pos:column="52">"dir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4479" pos:column="60">_nppGUI</name><op:operator pos:line="4479" pos:column="67">.</op:operator><name pos:line="4479" pos:column="68">_backupDir</name><op:operator pos:line="4479" pos:column="78">.</op:operator><name pos:line="4479" pos:column="79">c_str</name></name><argument_list pos:line="4479" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="4480" pos:column="25">backExist</name> <op:operator pos:line="4480" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="4480" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4482" pos:column="17">else <if pos:line="4482" pos:column="22">if <condition pos:line="4482" pos:column="25">(<expr><op:operator pos:line="4482" pos:column="26">!</op:operator><call><name pos:line="4482" pos:column="27">lstrcmp</name><argument_list pos:line="4482" pos:column="34">(<argument><expr><name pos:line="4482" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4482" pos:column="39">TEXT</name><argument_list pos:line="4482" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4482" pos:column="44">"MRU"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4482" pos:column="52">
		<block pos:line="4483" pos:column="17">{
			<expr_stmt><expr><name pos:line="4484" pos:column="25">MRUExist</name> <op:operator pos:line="4484" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="4484" pos:column="36">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4485" pos:column="25">const</specifier> <name pos:line="4485" pos:column="31">TCHAR</name> <type:modifier pos:line="4485" pos:column="37">*</type:modifier></type><name pos:line="4485" pos:column="38">pStr</name> <init pos:line="4485" pos:column="43">= <expr><name><name pos:line="4485" pos:column="45">_nppGUI</name><op:operator pos:line="4485" pos:column="52">.</op:operator><name pos:line="4485" pos:column="53">_styleMRU</name></name><op:operator pos:line="4485" pos:column="62">?</op:operator><call><name pos:line="4485" pos:column="63">TEXT</name><argument_list pos:line="4485" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="4485" pos:column="68">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4485" pos:column="74">:</op:operator><call><name pos:line="4485" pos:column="75">TEXT</name><argument_list pos:line="4485" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="4485" pos:column="80">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name pos:line="4487" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4487" pos:column="35">*</type:modifier></type><name pos:line="4487" pos:column="36">n</name> <init pos:line="4487" pos:column="38">= <expr><call><name><name pos:line="4487" pos:column="40">childNode</name><op:operator pos:line="4487" pos:column="49">-&gt;</op:operator><name pos:line="4487" pos:column="51">FirstChild</name></name><argument_list pos:line="4487" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4488" pos:column="25">if <condition pos:line="4488" pos:column="28">(<expr><name pos:line="4488" pos:column="29">n</name></expr>)</condition><then pos:line="4488" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4489" pos:column="33">n</name><op:operator pos:line="4489" pos:column="34">-&gt;</op:operator><name pos:line="4489" pos:column="36">SetValue</name></name><argument_list pos:line="4489" pos:column="44">(<argument><expr><name pos:line="4489" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4490" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4491" pos:column="33">childNode</name><op:operator pos:line="4491" pos:column="42">-&gt;</op:operator><name pos:line="4491" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4491" pos:column="58">(<argument><expr><call><name pos:line="4491" pos:column="59">TiXmlText</name><argument_list pos:line="4491" pos:column="68">(<argument><expr><name pos:line="4491" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4493" pos:column="17">else <if pos:line="4493" pos:column="22">if <condition pos:line="4493" pos:column="25">(<expr><op:operator pos:line="4493" pos:column="26">!</op:operator><call><name pos:line="4493" pos:column="27">lstrcmp</name><argument_list pos:line="4493" pos:column="34">(<argument><expr><name pos:line="4493" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4493" pos:column="39">TEXT</name><argument_list pos:line="4493" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4493" pos:column="44">"URL"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4493" pos:column="52">
		<block pos:line="4494" pos:column="17">{
			<expr_stmt><expr><name pos:line="4495" pos:column="25">URLExist</name> <op:operator pos:line="4495" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="4495" pos:column="36">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4496" pos:column="25">const</specifier> <name pos:line="4496" pos:column="31">TCHAR</name> <type:modifier pos:line="4496" pos:column="37">*</type:modifier></type><name pos:line="4496" pos:column="38">pStr</name> <init pos:line="4496" pos:column="43">= <expr><call><name pos:line="4496" pos:column="45">TEXT</name><argument_list pos:line="4496" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="4496" pos:column="50">"0"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4497" pos:column="25">if <condition pos:line="4497" pos:column="28">(<expr><name><name pos:line="4497" pos:column="29">_nppGUI</name><op:operator pos:line="4497" pos:column="36">.</op:operator><name pos:line="4497" pos:column="37">_styleURL</name></name> <op:operator pos:line="4497" pos:column="47">==</op:operator> <lit:literal type="number" pos:line="4497" pos:column="50">1</lit:literal></expr>)</condition><then pos:line="4497" pos:column="52">
				<expr_stmt><expr><name pos:line="4498" pos:column="33">pStr</name> <op:operator pos:line="4498" pos:column="38">=</op:operator> <call><name pos:line="4498" pos:column="40">TEXT</name><argument_list pos:line="4498" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="4498" pos:column="45">"1"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4499" pos:column="25">else <if pos:line="4499" pos:column="30">if <condition pos:line="4499" pos:column="33">(<expr><name><name pos:line="4499" pos:column="34">_nppGUI</name><op:operator pos:line="4499" pos:column="41">.</op:operator><name pos:line="4499" pos:column="42">_styleURL</name></name> <op:operator pos:line="4499" pos:column="52">==</op:operator> <lit:literal type="number" pos:line="4499" pos:column="55">2</lit:literal></expr>)</condition><then pos:line="4499" pos:column="57">
				<expr_stmt><expr><name pos:line="4500" pos:column="33">pStr</name> <op:operator pos:line="4500" pos:column="38">=</op:operator> <call><name pos:line="4500" pos:column="40">TEXT</name><argument_list pos:line="4500" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="4500" pos:column="45">"2"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>

			<decl_stmt><decl><type><name pos:line="4502" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4502" pos:column="35">*</type:modifier></type><name pos:line="4502" pos:column="36">n</name> <init pos:line="4502" pos:column="38">= <expr><call><name><name pos:line="4502" pos:column="40">childNode</name><op:operator pos:line="4502" pos:column="49">-&gt;</op:operator><name pos:line="4502" pos:column="51">FirstChild</name></name><argument_list pos:line="4502" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4503" pos:column="25">if <condition pos:line="4503" pos:column="28">(<expr><name pos:line="4503" pos:column="29">n</name></expr>)</condition><then pos:line="4503" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4504" pos:column="33">n</name><op:operator pos:line="4504" pos:column="34">-&gt;</op:operator><name pos:line="4504" pos:column="36">SetValue</name></name><argument_list pos:line="4504" pos:column="44">(<argument><expr><name pos:line="4504" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4505" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4506" pos:column="33">childNode</name><op:operator pos:line="4506" pos:column="42">-&gt;</op:operator><name pos:line="4506" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4506" pos:column="58">(<argument><expr><call><name pos:line="4506" pos:column="59">TiXmlText</name><argument_list pos:line="4506" pos:column="68">(<argument><expr><name pos:line="4506" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4508" pos:column="17">else <if pos:line="4508" pos:column="22">if <condition pos:line="4508" pos:column="25">(<expr><op:operator pos:line="4508" pos:column="26">!</op:operator><call><name pos:line="4508" pos:column="27">lstrcmp</name><argument_list pos:line="4508" pos:column="34">(<argument><expr><name pos:line="4508" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4508" pos:column="39">TEXT</name><argument_list pos:line="4508" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4508" pos:column="44">"DockingManager"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4508" pos:column="63">
		<block pos:line="4509" pos:column="17">{
			<expr_stmt><expr><name pos:line="4510" pos:column="25">dockingParamNode</name> <op:operator pos:line="4510" pos:column="42">=</op:operator> <name pos:line="4510" pos:column="44">childNode</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4512" pos:column="17">else <if pos:line="4512" pos:column="22">if <condition pos:line="4512" pos:column="25">(<expr><op:operator pos:line="4512" pos:column="26">!</op:operator><call><name pos:line="4512" pos:column="27">lstrcmp</name><argument_list pos:line="4512" pos:column="34">(<argument><expr><name pos:line="4512" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4512" pos:column="39">TEXT</name><argument_list pos:line="4512" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4512" pos:column="44">"globalOverride"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4512" pos:column="63">
		<block pos:line="4513" pos:column="17">{
			<expr_stmt><expr><name pos:line="4514" pos:column="25">globalOverrideExist</name> <op:operator pos:line="4514" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="4514" pos:column="47">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4515" pos:column="25">const</specifier> <name pos:line="4515" pos:column="31">TCHAR</name> <type:modifier pos:line="4515" pos:column="37">*</type:modifier></type><name pos:line="4515" pos:column="38">pStr</name> <init pos:line="4515" pos:column="43">= <expr><name><name pos:line="4515" pos:column="45">_nppGUI</name><op:operator pos:line="4515" pos:column="52">.</op:operator><name pos:line="4515" pos:column="53">_globalOverride</name><op:operator pos:line="4515" pos:column="68">.</op:operator><name pos:line="4515" pos:column="69">enableFg</name></name><op:operator pos:line="4515" pos:column="77">?</op:operator><call><name pos:line="4515" pos:column="78">TEXT</name><argument_list pos:line="4515" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="4515" pos:column="83">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4515" pos:column="89">:</op:operator><call><name pos:line="4515" pos:column="90">TEXT</name><argument_list pos:line="4515" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="4515" pos:column="95">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="4516" pos:column="25">element</name><op:operator pos:line="4516" pos:column="32">-&gt;</op:operator><name pos:line="4516" pos:column="34">SetAttribute</name></name><argument_list pos:line="4516" pos:column="46">(<argument><expr><call><name pos:line="4516" pos:column="47">TEXT</name><argument_list pos:line="4516" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4516" pos:column="52">"fg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4516" pos:column="59">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4518" pos:column="25">pStr</name> <op:operator pos:line="4518" pos:column="30">=</op:operator> <op:operator pos:line="4518" pos:column="32">(</op:operator><name><name pos:line="4518" pos:column="33">_nppGUI</name><op:operator pos:line="4518" pos:column="40">.</op:operator><name pos:line="4518" pos:column="41">_globalOverride</name><op:operator pos:line="4518" pos:column="56">.</op:operator><name pos:line="4518" pos:column="57">enableBg</name></name><op:operator pos:line="4518" pos:column="65">)</op:operator><op:operator pos:line="4518" pos:column="66">?</op:operator><call><name pos:line="4518" pos:column="67">TEXT</name><argument_list pos:line="4518" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="4518" pos:column="72">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4518" pos:column="78">:</op:operator><call><name pos:line="4518" pos:column="79">TEXT</name><argument_list pos:line="4518" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="4518" pos:column="84">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4519" pos:column="25">element</name><op:operator pos:line="4519" pos:column="32">-&gt;</op:operator><name pos:line="4519" pos:column="34">SetAttribute</name></name><argument_list pos:line="4519" pos:column="46">(<argument><expr><call><name pos:line="4519" pos:column="47">TEXT</name><argument_list pos:line="4519" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4519" pos:column="52">"bg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4519" pos:column="59">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4521" pos:column="25">pStr</name> <op:operator pos:line="4521" pos:column="30">=</op:operator> <name><name pos:line="4521" pos:column="32">_nppGUI</name><op:operator pos:line="4521" pos:column="39">.</op:operator><name pos:line="4521" pos:column="40">_globalOverride</name><op:operator pos:line="4521" pos:column="55">.</op:operator><name pos:line="4521" pos:column="56">enableFont</name></name><op:operator pos:line="4521" pos:column="66">?</op:operator><call><name pos:line="4521" pos:column="67">TEXT</name><argument_list pos:line="4521" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="4521" pos:column="72">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4521" pos:column="78">:</op:operator><call><name pos:line="4521" pos:column="79">TEXT</name><argument_list pos:line="4521" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="4521" pos:column="84">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4522" pos:column="25">element</name><op:operator pos:line="4522" pos:column="32">-&gt;</op:operator><name pos:line="4522" pos:column="34">SetAttribute</name></name><argument_list pos:line="4522" pos:column="46">(<argument><expr><call><name pos:line="4522" pos:column="47">TEXT</name><argument_list pos:line="4522" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4522" pos:column="52">"font"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4522" pos:column="61">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4524" pos:column="25">pStr</name> <op:operator pos:line="4524" pos:column="30">=</op:operator> <name><name pos:line="4524" pos:column="32">_nppGUI</name><op:operator pos:line="4524" pos:column="39">.</op:operator><name pos:line="4524" pos:column="40">_globalOverride</name><op:operator pos:line="4524" pos:column="55">.</op:operator><name pos:line="4524" pos:column="56">enableFontSize</name></name><op:operator pos:line="4524" pos:column="70">?</op:operator><call><name pos:line="4524" pos:column="71">TEXT</name><argument_list pos:line="4524" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="4524" pos:column="76">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4524" pos:column="82">:</op:operator><call><name pos:line="4524" pos:column="83">TEXT</name><argument_list pos:line="4524" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="4524" pos:column="88">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4525" pos:column="25">element</name><op:operator pos:line="4525" pos:column="32">-&gt;</op:operator><name pos:line="4525" pos:column="34">SetAttribute</name></name><argument_list pos:line="4525" pos:column="46">(<argument><expr><call><name pos:line="4525" pos:column="47">TEXT</name><argument_list pos:line="4525" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4525" pos:column="52">"fontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4525" pos:column="65">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4527" pos:column="25">pStr</name> <op:operator pos:line="4527" pos:column="30">=</op:operator> <name><name pos:line="4527" pos:column="32">_nppGUI</name><op:operator pos:line="4527" pos:column="39">.</op:operator><name pos:line="4527" pos:column="40">_globalOverride</name><op:operator pos:line="4527" pos:column="55">.</op:operator><name pos:line="4527" pos:column="56">enableBold</name></name><op:operator pos:line="4527" pos:column="66">?</op:operator><call><name pos:line="4527" pos:column="67">TEXT</name><argument_list pos:line="4527" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="4527" pos:column="72">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4527" pos:column="78">:</op:operator><call><name pos:line="4527" pos:column="79">TEXT</name><argument_list pos:line="4527" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="4527" pos:column="84">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4528" pos:column="25">element</name><op:operator pos:line="4528" pos:column="32">-&gt;</op:operator><name pos:line="4528" pos:column="34">SetAttribute</name></name><argument_list pos:line="4528" pos:column="46">(<argument><expr><call><name pos:line="4528" pos:column="47">TEXT</name><argument_list pos:line="4528" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4528" pos:column="52">"bold"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4528" pos:column="61">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4530" pos:column="25">pStr</name> <op:operator pos:line="4530" pos:column="30">=</op:operator> <name><name pos:line="4530" pos:column="32">_nppGUI</name><op:operator pos:line="4530" pos:column="39">.</op:operator><name pos:line="4530" pos:column="40">_globalOverride</name><op:operator pos:line="4530" pos:column="55">.</op:operator><name pos:line="4530" pos:column="56">enableItalic</name></name><op:operator pos:line="4530" pos:column="68">?</op:operator><call><name pos:line="4530" pos:column="69">TEXT</name><argument_list pos:line="4530" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="4530" pos:column="74">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4530" pos:column="80">:</op:operator><call><name pos:line="4530" pos:column="81">TEXT</name><argument_list pos:line="4530" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="4530" pos:column="86">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4531" pos:column="25">element</name><op:operator pos:line="4531" pos:column="32">-&gt;</op:operator><name pos:line="4531" pos:column="34">SetAttribute</name></name><argument_list pos:line="4531" pos:column="46">(<argument><expr><call><name pos:line="4531" pos:column="47">TEXT</name><argument_list pos:line="4531" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4531" pos:column="52">"italic"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4531" pos:column="63">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name pos:line="4533" pos:column="25">pStr</name> <op:operator pos:line="4533" pos:column="30">=</op:operator> <name><name pos:line="4533" pos:column="32">_nppGUI</name><op:operator pos:line="4533" pos:column="39">.</op:operator><name pos:line="4533" pos:column="40">_globalOverride</name><op:operator pos:line="4533" pos:column="55">.</op:operator><name pos:line="4533" pos:column="56">enableUnderLine</name></name><op:operator pos:line="4533" pos:column="71">?</op:operator><call><name pos:line="4533" pos:column="72">TEXT</name><argument_list pos:line="4533" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="4533" pos:column="77">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4533" pos:column="83">:</op:operator><call><name pos:line="4533" pos:column="84">TEXT</name><argument_list pos:line="4533" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="4533" pos:column="89">"no"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4534" pos:column="25">element</name><op:operator pos:line="4534" pos:column="32">-&gt;</op:operator><name pos:line="4534" pos:column="34">SetAttribute</name></name><argument_list pos:line="4534" pos:column="46">(<argument><expr><call><name pos:line="4534" pos:column="47">TEXT</name><argument_list pos:line="4534" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4534" pos:column="52">"underline"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4534" pos:column="66">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4536" pos:column="17">else <if pos:line="4536" pos:column="22">if <condition pos:line="4536" pos:column="25">(<expr><op:operator pos:line="4536" pos:column="26">!</op:operator><call><name pos:line="4536" pos:column="27">lstrcmp</name><argument_list pos:line="4536" pos:column="34">(<argument><expr><name pos:line="4536" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4536" pos:column="39">TEXT</name><argument_list pos:line="4536" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4536" pos:column="44">"auto-completion"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4536" pos:column="64">
		<block pos:line="4537" pos:column="17">{
			<expr_stmt><expr><name pos:line="4538" pos:column="25">autocExist</name> <op:operator pos:line="4538" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="4538" pos:column="38">true</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4539" pos:column="25">element</name><op:operator pos:line="4539" pos:column="32">-&gt;</op:operator><name pos:line="4539" pos:column="34">SetAttribute</name></name><argument_list pos:line="4539" pos:column="46">(<argument><expr><call><name pos:line="4539" pos:column="47">TEXT</name><argument_list pos:line="4539" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4539" pos:column="52">"autoCAction"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4539" pos:column="68">_nppGUI</name><op:operator pos:line="4539" pos:column="75">.</op:operator><name pos:line="4539" pos:column="76">_autocStatus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4540" pos:column="25">element</name><op:operator pos:line="4540" pos:column="32">-&gt;</op:operator><name pos:line="4540" pos:column="34">SetAttribute</name></name><argument_list pos:line="4540" pos:column="46">(<argument><expr><call><name pos:line="4540" pos:column="47">TEXT</name><argument_list pos:line="4540" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4540" pos:column="52">"triggerFromNbChar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4540" pos:column="74">_nppGUI</name><op:operator pos:line="4540" pos:column="81">.</op:operator><name pos:line="4540" pos:column="82">_autocFromLen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4541" pos:column="25">const</specifier> <name pos:line="4541" pos:column="31">TCHAR</name> <type:modifier pos:line="4541" pos:column="37">*</type:modifier></type> <name pos:line="4541" pos:column="39">pStr</name> <init pos:line="4541" pos:column="44">= <expr><name><name pos:line="4541" pos:column="46">_nppGUI</name><op:operator pos:line="4541" pos:column="53">.</op:operator><name pos:line="4541" pos:column="54">_funcParams</name></name><op:operator pos:line="4541" pos:column="65">?</op:operator><call><name pos:line="4541" pos:column="66">TEXT</name><argument_list pos:line="4541" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="4541" pos:column="71">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4541" pos:column="77">:</op:operator><call><name pos:line="4541" pos:column="78">TEXT</name><argument_list pos:line="4541" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="4541" pos:column="83">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="4542" pos:column="25">element</name><op:operator pos:line="4542" pos:column="32">-&gt;</op:operator><name pos:line="4542" pos:column="34">SetAttribute</name></name><argument_list pos:line="4542" pos:column="46">(<argument><expr><call><name pos:line="4542" pos:column="47">TEXT</name><argument_list pos:line="4542" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4542" pos:column="52">"funcParams"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4542" pos:column="67">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4544" pos:column="17">else <if pos:line="4544" pos:column="22">if <condition pos:line="4544" pos:column="25">(<expr><op:operator pos:line="4544" pos:column="26">!</op:operator><call><name pos:line="4544" pos:column="27">lstrcmp</name><argument_list pos:line="4544" pos:column="34">(<argument><expr><name pos:line="4544" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4544" pos:column="39">TEXT</name><argument_list pos:line="4544" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4544" pos:column="44">"sessionExt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4544" pos:column="59">
		<block pos:line="4545" pos:column="17">{
			<expr_stmt><expr><name pos:line="4546" pos:column="25">sessionExtExist</name> <op:operator pos:line="4546" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="4546" pos:column="43">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="4547" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4547" pos:column="35">*</type:modifier></type><name pos:line="4547" pos:column="36">n</name> <init pos:line="4547" pos:column="38">= <expr><call><name><name pos:line="4547" pos:column="40">childNode</name><op:operator pos:line="4547" pos:column="49">-&gt;</op:operator><name pos:line="4547" pos:column="51">FirstChild</name></name><argument_list pos:line="4547" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4548" pos:column="25">if <condition pos:line="4548" pos:column="28">(<expr><name pos:line="4548" pos:column="29">n</name></expr>)</condition><then pos:line="4548" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4549" pos:column="33">n</name><op:operator pos:line="4549" pos:column="34">-&gt;</op:operator><name pos:line="4549" pos:column="36">SetValue</name></name><argument_list pos:line="4549" pos:column="44">(<argument><expr><call><name><name pos:line="4549" pos:column="45">_nppGUI</name><op:operator pos:line="4549" pos:column="52">.</op:operator><name pos:line="4549" pos:column="53">_definedSessionExt</name><op:operator pos:line="4549" pos:column="71">.</op:operator><name pos:line="4549" pos:column="72">c_str</name></name><argument_list pos:line="4549" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4550" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4551" pos:column="33">childNode</name><op:operator pos:line="4551" pos:column="42">-&gt;</op:operator><name pos:line="4551" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4551" pos:column="58">(<argument><expr><call><name pos:line="4551" pos:column="59">TiXmlText</name><argument_list pos:line="4551" pos:column="68">(<argument><expr><call><name><name pos:line="4551" pos:column="69">_nppGUI</name><op:operator pos:line="4551" pos:column="76">.</op:operator><name pos:line="4551" pos:column="77">_definedSessionExt</name><op:operator pos:line="4551" pos:column="95">.</op:operator><name pos:line="4551" pos:column="96">c_str</name></name><argument_list pos:line="4551" pos:column="101">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4553" pos:column="17">else <if pos:line="4553" pos:column="22">if <condition pos:line="4553" pos:column="25">(<expr><op:operator pos:line="4553" pos:column="26">!</op:operator><call><name pos:line="4553" pos:column="27">lstrcmp</name><argument_list pos:line="4553" pos:column="34">(<argument><expr><name pos:line="4553" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4553" pos:column="39">TEXT</name><argument_list pos:line="4553" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4553" pos:column="44">"noUpdate"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4553" pos:column="57">
		<block pos:line="4554" pos:column="17">{
			<expr_stmt><expr><name pos:line="4555" pos:column="25">noUpdateExist</name> <op:operator pos:line="4555" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="4555" pos:column="41">true</lit:literal></expr>;</expr_stmt>
            <decl_stmt><decl><type><specifier pos:line="4556" pos:column="13">const</specifier> <name pos:line="4556" pos:column="19">TCHAR</name> <type:modifier pos:line="4556" pos:column="25">*</type:modifier></type><name pos:line="4556" pos:column="26">pStr</name> <init pos:line="4556" pos:column="31">= <expr><name><name pos:line="4556" pos:column="33">_nppGUI</name><op:operator pos:line="4556" pos:column="40">.</op:operator><name pos:line="4556" pos:column="41">_autoUpdateOpt</name><op:operator pos:line="4556" pos:column="55">.</op:operator><name pos:line="4556" pos:column="56">_doAutoUpdate</name></name><op:operator pos:line="4556" pos:column="69">?</op:operator><call><name pos:line="4556" pos:column="70">TEXT</name><argument_list pos:line="4556" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="4556" pos:column="75">"no"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4556" pos:column="80">:</op:operator><call><name pos:line="4556" pos:column="81">TEXT</name><argument_list pos:line="4556" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="4556" pos:column="86">"yes"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
            <expr_stmt><expr><call><name><name pos:line="4558" pos:column="13">element</name><op:operator pos:line="4558" pos:column="20">-&gt;</op:operator><name pos:line="4558" pos:column="22">SetAttribute</name></name><argument_list pos:line="4558" pos:column="34">(<argument><expr><call><name pos:line="4558" pos:column="35">TEXT</name><argument_list pos:line="4558" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="4558" pos:column="40">"intervalDays"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4558" pos:column="57">_nppGUI</name><op:operator pos:line="4558" pos:column="64">.</op:operator><name pos:line="4558" pos:column="65">_autoUpdateOpt</name><op:operator pos:line="4558" pos:column="79">.</op:operator><name pos:line="4558" pos:column="80">_intervalDays</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="4559" pos:column="13">element</name><op:operator pos:line="4559" pos:column="20">-&gt;</op:operator><name pos:line="4559" pos:column="22">SetAttribute</name></name><argument_list pos:line="4559" pos:column="34">(<argument><expr><call><name pos:line="4559" pos:column="35">TEXT</name><argument_list pos:line="4559" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="4559" pos:column="40">"nextUpdateDate"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4559" pos:column="59">_nppGUI</name><op:operator pos:line="4559" pos:column="66">.</op:operator><name pos:line="4559" pos:column="67">_autoUpdateOpt</name><op:operator pos:line="4559" pos:column="81">.</op:operator><name pos:line="4559" pos:column="82">_nextUpdateDate</name><op:operator pos:line="4559" pos:column="97">.</op:operator><name pos:line="4559" pos:column="98">toString</name></name><argument_list pos:line="4559" pos:column="106">()</argument_list></call><op:operator pos:line="4559" pos:column="108">.</op:operator><call><name pos:line="4559" pos:column="109">c_str</name><argument_list pos:line="4559" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<decl_stmt><decl><type><name pos:line="4561" pos:column="25">TiXmlNode</name> <type:modifier pos:line="4561" pos:column="35">*</type:modifier></type><name pos:line="4561" pos:column="36">n</name> <init pos:line="4561" pos:column="38">= <expr><call><name><name pos:line="4561" pos:column="40">childNode</name><op:operator pos:line="4561" pos:column="49">-&gt;</op:operator><name pos:line="4561" pos:column="51">FirstChild</name></name><argument_list pos:line="4561" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="4562" pos:column="25">if <condition pos:line="4562" pos:column="28">(<expr><name pos:line="4562" pos:column="29">n</name></expr>)</condition><then pos:line="4562" pos:column="31">
				<expr_stmt><expr><call><name><name pos:line="4563" pos:column="33">n</name><op:operator pos:line="4563" pos:column="34">-&gt;</op:operator><name pos:line="4563" pos:column="36">SetValue</name></name><argument_list pos:line="4563" pos:column="44">(<argument><expr><name pos:line="4563" pos:column="45">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="4564" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="4565" pos:column="33">childNode</name><op:operator pos:line="4565" pos:column="42">-&gt;</op:operator><name pos:line="4565" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4565" pos:column="58">(<argument><expr><call><name pos:line="4565" pos:column="59">TiXmlText</name><argument_list pos:line="4565" pos:column="68">(<argument><expr><name pos:line="4565" pos:column="69">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then>
		<else pos:line="4567" pos:column="17">else <if pos:line="4567" pos:column="22">if <condition pos:line="4567" pos:column="25">(<expr><op:operator pos:line="4567" pos:column="26">!</op:operator><call><name pos:line="4567" pos:column="27">lstrcmp</name><argument_list pos:line="4567" pos:column="34">(<argument><expr><name pos:line="4567" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4567" pos:column="39">TEXT</name><argument_list pos:line="4567" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4567" pos:column="44">"openSaveDir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4567" pos:column="60">
		<block pos:line="4568" pos:column="17">{
			<expr_stmt><expr><name pos:line="4569" pos:column="25">openSaveDirExist</name> <op:operator pos:line="4569" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="4569" pos:column="44">true</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4570" pos:column="25">element</name><op:operator pos:line="4570" pos:column="32">-&gt;</op:operator><name pos:line="4570" pos:column="34">SetAttribute</name></name><argument_list pos:line="4570" pos:column="46">(<argument><expr><call><name pos:line="4570" pos:column="47">TEXT</name><argument_list pos:line="4570" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4570" pos:column="52">"value"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4570" pos:column="62">_nppGUI</name><op:operator pos:line="4570" pos:column="69">.</op:operator><name pos:line="4570" pos:column="70">_openSaveDir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4571" pos:column="25">element</name><op:operator pos:line="4571" pos:column="32">-&gt;</op:operator><name pos:line="4571" pos:column="34">SetAttribute</name></name><argument_list pos:line="4571" pos:column="46">(<argument><expr><call><name pos:line="4571" pos:column="47">TEXT</name><argument_list pos:line="4571" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4571" pos:column="52">"defaultDirPath"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4571" pos:column="71">_nppGUI</name><op:operator pos:line="4571" pos:column="78">.</op:operator><name pos:line="4571" pos:column="79">_defaultDir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="4573" pos:column="17">else <if pos:line="4573" pos:column="22">if <condition pos:line="4573" pos:column="25">(<expr><op:operator pos:line="4573" pos:column="26">!</op:operator><call><name pos:line="4573" pos:column="27">lstrcmp</name><argument_list pos:line="4573" pos:column="34">(<argument><expr><name pos:line="4573" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4573" pos:column="39">TEXT</name><argument_list pos:line="4573" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4573" pos:column="44">"titleBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4573" pos:column="57">
		<block pos:line="4574" pos:column="17">{
			<expr_stmt><expr><name pos:line="4575" pos:column="25">titleBarExist</name> <op:operator pos:line="4575" pos:column="39">=</op:operator> <lit:literal type="boolean" pos:line="4575" pos:column="41">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><specifier pos:line="4576" pos:column="25">const</specifier> <name pos:line="4576" pos:column="31">TCHAR</name> <type:modifier pos:line="4576" pos:column="37">*</type:modifier></type><name pos:line="4576" pos:column="38">pStr</name> <init pos:line="4576" pos:column="43">= <expr><op:operator pos:line="4576" pos:column="45">(</op:operator><name><name pos:line="4576" pos:column="46">_nppGUI</name><op:operator pos:line="4576" pos:column="53">.</op:operator><name pos:line="4576" pos:column="54">_shortTitlebar</name></name><op:operator pos:line="4576" pos:column="68">)</op:operator><op:operator pos:line="4576" pos:column="69">?</op:operator><call><name pos:line="4576" pos:column="70">TEXT</name><argument_list pos:line="4576" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="4576" pos:column="75">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4576" pos:column="81">:</op:operator><call><name pos:line="4576" pos:column="82">TEXT</name><argument_list pos:line="4576" pos:column="86">(<argument><expr><lit:literal type="string" pos:line="4576" pos:column="87">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="4577" pos:column="25">element</name><op:operator pos:line="4577" pos:column="32">-&gt;</op:operator><name pos:line="4577" pos:column="34">SetAttribute</name></name><argument_list pos:line="4577" pos:column="46">(<argument><expr><call><name pos:line="4577" pos:column="47">TEXT</name><argument_list pos:line="4577" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4577" pos:column="52">"short"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4577" pos:column="62">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="4579" pos:column="25">//pStr = (_nppGUI._showDirty)?TEXT("yes"):TEXT("no");</comment>
			<comment type="line" pos:line="4580" pos:column="25">//element-&gt;SetAttribute(TEXT("showDirty"), pStr);</comment>
		}</block></then>
		<else pos:line="4582" pos:column="17">else <if pos:line="4582" pos:column="22">if <condition pos:line="4582" pos:column="25">(<expr><op:operator pos:line="4582" pos:column="26">!</op:operator><call><name pos:line="4582" pos:column="27">lstrcmp</name><argument_list pos:line="4582" pos:column="34">(<argument><expr><name pos:line="4582" pos:column="35">nm</name></expr></argument>, <argument><expr><call><name pos:line="4582" pos:column="39">TEXT</name><argument_list pos:line="4582" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="4582" pos:column="44">"stylerTheme"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="4582" pos:column="60">
		<block pos:line="4583" pos:column="17">{
			<expr_stmt><expr><name pos:line="4584" pos:column="25">stylerThemeExist</name> <op:operator pos:line="4584" pos:column="42">=</op:operator> <lit:literal type="boolean" pos:line="4584" pos:column="44">true</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="4585" pos:column="25">element</name><op:operator pos:line="4585" pos:column="32">-&gt;</op:operator><name pos:line="4585" pos:column="34">SetAttribute</name></name><argument_list pos:line="4585" pos:column="46">(<argument><expr><call><name pos:line="4585" pos:column="47">TEXT</name><argument_list pos:line="4585" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="4585" pos:column="52">"path"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4585" pos:column="61">_nppGUI</name><op:operator pos:line="4585" pos:column="68">.</op:operator><name pos:line="4585" pos:column="69">_themeName</name><op:operator pos:line="4585" pos:column="79">.</op:operator><name pos:line="4585" pos:column="80">c_str</name></name><argument_list pos:line="4585" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if>
	}</block></for>

	<if pos:line="4589" pos:column="9">if <condition pos:line="4589" pos:column="12">(<expr><op:operator pos:line="4589" pos:column="13">!</op:operator><name pos:line="4589" pos:column="14">noUpdateExist</name></expr>)</condition><then pos:line="4589" pos:column="28">
	<block pos:line="4590" pos:column="9">{
        <expr_stmt><expr><call><name pos:line="4591" pos:column="9">insertGUIConfigBoolNode</name><argument_list pos:line="4591" pos:column="32">(<argument><expr><name pos:line="4591" pos:column="33">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4591" pos:column="42">TEXT</name><argument_list pos:line="4591" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="4591" pos:column="47">"noUpdate"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4591" pos:column="60">_nppGUI</name><op:operator pos:line="4591" pos:column="67">.</op:operator><name pos:line="4591" pos:column="68">_autoUpdateOpt</name><op:operator pos:line="4591" pos:column="82">.</op:operator><name pos:line="4591" pos:column="83">_doAutoUpdate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4594" pos:column="9">if <condition pos:line="4594" pos:column="12">(<expr><op:operator pos:line="4594" pos:column="13">!</op:operator><name pos:line="4594" pos:column="14">autoDetectionExist</name></expr>)</condition><then pos:line="4594" pos:column="33">
	<block pos:line="4595" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="4596" pos:column="17">const</specifier> <name pos:line="4596" pos:column="23">TCHAR</name> <type:modifier pos:line="4596" pos:column="29">*</type:modifier></type><name pos:line="4596" pos:column="30">pStr</name> <init pos:line="4596" pos:column="35">= <expr><call><name pos:line="4596" pos:column="37">TEXT</name><argument_list pos:line="4596" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4596" pos:column="42">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<switch pos:line="4597" pos:column="17">switch <condition pos:line="4597" pos:column="24">(<expr><name><name pos:line="4597" pos:column="25">_nppGUI</name><op:operator pos:line="4597" pos:column="32">.</op:operator><name pos:line="4597" pos:column="33">_fileAutoDetection</name></name></expr>)</condition>
		<block pos:line="4598" pos:column="17">{
			<case pos:line="4599" pos:column="25">case <expr><name pos:line="4599" pos:column="30">cdEnabled</name></expr>:
				<expr_stmt><expr><name pos:line="4600" pos:column="33">pStr</name> <op:operator pos:line="4600" pos:column="38">=</op:operator> <call><name pos:line="4600" pos:column="40">TEXT</name><argument_list pos:line="4600" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="4600" pos:column="45">"yes"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="4601" pos:column="33">break;</break>
			</case><case pos:line="4602" pos:column="25">case <expr><name pos:line="4602" pos:column="30">cdAutoUpdate</name></expr>:
				<expr_stmt><expr><name pos:line="4603" pos:column="33">pStr</name> <op:operator pos:line="4603" pos:column="38">=</op:operator> <call><name pos:line="4603" pos:column="40">TEXT</name><argument_list pos:line="4603" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="4603" pos:column="45">"auto"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="4604" pos:column="33">break;</break>
			</case><case pos:line="4605" pos:column="25">case <expr><name pos:line="4605" pos:column="30">cdGo2end</name></expr>:
				<expr_stmt><expr><name pos:line="4606" pos:column="33">pStr</name> <op:operator pos:line="4606" pos:column="38">=</op:operator> <call><name pos:line="4606" pos:column="40">TEXT</name><argument_list pos:line="4606" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="4606" pos:column="45">"Update2End"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="4607" pos:column="33">break;</break>
			</case><case pos:line="4608" pos:column="25">case <expr><name pos:line="4608" pos:column="30">cdAutoUpdateGo2end</name></expr>:
				<expr_stmt><expr><name pos:line="4609" pos:column="33">pStr</name> <op:operator pos:line="4609" pos:column="38">=</op:operator> <call><name pos:line="4609" pos:column="40">TEXT</name><argument_list pos:line="4609" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="4609" pos:column="45">"autoUpdate2End"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="4610" pos:column="33">break;</break>
		</case>}</block></switch>
		<decl_stmt><decl><type><name pos:line="4612" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4612" pos:column="30">*</type:modifier></type><name pos:line="4612" pos:column="31">GUIConfigElement</name> <init pos:line="4612" pos:column="48">= <expr><op:operator pos:line="4612" pos:column="50">(</op:operator><call><name><name pos:line="4612" pos:column="51">GUIRoot</name><op:operator pos:line="4612" pos:column="58">-&gt;</op:operator><name pos:line="4612" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4612" pos:column="74">(<argument><expr><call><name pos:line="4612" pos:column="75">TiXmlElement</name><argument_list pos:line="4612" pos:column="87">(<argument><expr><call><name pos:line="4612" pos:column="88">TEXT</name><argument_list pos:line="4612" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4612" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4612" pos:column="107">)</op:operator><op:operator pos:line="4612" pos:column="108">-&gt;</op:operator><call><name pos:line="4612" pos:column="110">ToElement</name><argument_list pos:line="4612" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4613" pos:column="17">GUIConfigElement</name><op:operator pos:line="4613" pos:column="33">-&gt;</op:operator><name pos:line="4613" pos:column="35">SetAttribute</name></name><argument_list pos:line="4613" pos:column="47">(<argument><expr><call><name pos:line="4613" pos:column="48">TEXT</name><argument_list pos:line="4613" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4613" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4613" pos:column="62">TEXT</name><argument_list pos:line="4613" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4613" pos:column="67">"Auto-detection"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4614" pos:column="17">GUIConfigElement</name><op:operator pos:line="4614" pos:column="33">-&gt;</op:operator><name pos:line="4614" pos:column="35">InsertEndChild</name></name><argument_list pos:line="4614" pos:column="49">(<argument><expr><call><name pos:line="4614" pos:column="50">TiXmlText</name><argument_list pos:line="4614" pos:column="59">(<argument><expr><name pos:line="4614" pos:column="60">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4616" pos:column="9">if <condition pos:line="4616" pos:column="12">(<expr><op:operator pos:line="4616" pos:column="13">!</op:operator><name pos:line="4616" pos:column="14">checkHistoryFilesExist</name></expr>)</condition><then pos:line="4616" pos:column="37">
	<block pos:line="4617" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4618" pos:column="17">insertGUIConfigBoolNode</name><argument_list pos:line="4618" pos:column="40">(<argument><expr><name pos:line="4618" pos:column="41">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4618" pos:column="50">TEXT</name><argument_list pos:line="4618" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="4618" pos:column="55">"CheckHistoryFiles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4618" pos:column="77">_nppGUI</name><op:operator pos:line="4618" pos:column="84">.</op:operator><name pos:line="4618" pos:column="85">_checkHistoryFiles</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4620" pos:column="9">if <condition pos:line="4620" pos:column="12">(<expr><op:operator pos:line="4620" pos:column="13">!</op:operator><name pos:line="4620" pos:column="14">trayIconExist</name></expr>)</condition><then pos:line="4620" pos:column="28">
	<block pos:line="4621" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4622" pos:column="17">insertGUIConfigBoolNode</name><argument_list pos:line="4622" pos:column="40">(<argument><expr><name pos:line="4622" pos:column="41">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4622" pos:column="50">TEXT</name><argument_list pos:line="4622" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="4622" pos:column="55">"TrayIcon"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4622" pos:column="68">_nppGUI</name><op:operator pos:line="4622" pos:column="75">.</op:operator><name pos:line="4622" pos:column="76">_isMinimizedToTray</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<if pos:line="4625" pos:column="9">if <condition pos:line="4625" pos:column="12">(<expr><op:operator pos:line="4625" pos:column="13">!</op:operator><name pos:line="4625" pos:column="14">maitainIndentExist</name></expr>)</condition><then pos:line="4625" pos:column="33">
	<block pos:line="4626" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4627" pos:column="17">insertGUIConfigBoolNode</name><argument_list pos:line="4627" pos:column="40">(<argument><expr><name pos:line="4627" pos:column="41">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4627" pos:column="50">TEXT</name><argument_list pos:line="4627" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="4627" pos:column="55">"MaitainIndent"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4627" pos:column="73">_nppGUI</name><op:operator pos:line="4627" pos:column="80">.</op:operator><name pos:line="4627" pos:column="81">_maitainIndent</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4630" pos:column="9">if <condition pos:line="4630" pos:column="12">(<expr><op:operator pos:line="4630" pos:column="13">!</op:operator><name pos:line="4630" pos:column="14">smartHighLightExist</name></expr>)</condition><then pos:line="4630" pos:column="34">
	<block pos:line="4631" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4632" pos:column="17">insertGUIConfigBoolNode</name><argument_list pos:line="4632" pos:column="40">(<argument><expr><name pos:line="4632" pos:column="41">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4632" pos:column="50">TEXT</name><argument_list pos:line="4632" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="4632" pos:column="55">"SmartHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4632" pos:column="74">_nppGUI</name><op:operator pos:line="4632" pos:column="81">.</op:operator><name pos:line="4632" pos:column="82">_enableSmartHilite</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4634" pos:column="9">if<condition pos:line="4634" pos:column="11">( <expr><op:operator pos:line="4634" pos:column="13">!</op:operator><name pos:line="4634" pos:column="14">smartHighLightCaseSensitiveExist</name></expr>)</condition><then pos:line="4634" pos:column="47">
	<block pos:line="4635" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4636" pos:column="17">insertGUIConfigBoolNode</name><argument_list pos:line="4636" pos:column="40">(<argument><expr><name pos:line="4636" pos:column="41">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4636" pos:column="50">TEXT</name><argument_list pos:line="4636" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="4636" pos:column="55">"SmartHighLightCaseSensitive"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4636" pos:column="87">_nppGUI</name><op:operator pos:line="4636" pos:column="94">.</op:operator><name pos:line="4636" pos:column="95">_smartHiliteCaseSensitive</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4638" pos:column="9">if <condition pos:line="4638" pos:column="12">(<expr><op:operator pos:line="4638" pos:column="13">!</op:operator><name pos:line="4638" pos:column="14">tagsMatchHighLightExist</name></expr>)</condition><then pos:line="4638" pos:column="38">
	<block pos:line="4639" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4640" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4640" pos:column="30">*</type:modifier></type> <name pos:line="4640" pos:column="32">ele</name> <init pos:line="4640" pos:column="36">= <expr><call><name pos:line="4640" pos:column="38">insertGUIConfigBoolNode</name><argument_list pos:line="4640" pos:column="61">(<argument><expr><name pos:line="4640" pos:column="62">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4640" pos:column="71">TEXT</name><argument_list pos:line="4640" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="4640" pos:column="76">"TagsMatchHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4640" pos:column="99">_nppGUI</name><op:operator pos:line="4640" pos:column="106">.</op:operator><name pos:line="4640" pos:column="107">_enableTagsMatchHilite</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4641" pos:column="17">ele</name><op:operator pos:line="4641" pos:column="20">-&gt;</op:operator><name pos:line="4641" pos:column="22">SetAttribute</name></name><argument_list pos:line="4641" pos:column="34">(<argument><expr><call><name pos:line="4641" pos:column="35">TEXT</name><argument_list pos:line="4641" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="4641" pos:column="40">"TagAttrHighLight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4641" pos:column="61">_nppGUI</name><op:operator pos:line="4641" pos:column="68">.</op:operator><name pos:line="4641" pos:column="69">_enableTagAttrsHilite</name></name><op:operator pos:line="4641" pos:column="90">?</op:operator><call><name pos:line="4641" pos:column="91">TEXT</name><argument_list pos:line="4641" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="4641" pos:column="96">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4641" pos:column="102">:</op:operator><call><name pos:line="4641" pos:column="103">TEXT</name><argument_list pos:line="4641" pos:column="107">(<argument><expr><lit:literal type="string" pos:line="4641" pos:column="108">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4642" pos:column="17">ele</name><op:operator pos:line="4642" pos:column="20">-&gt;</op:operator><name pos:line="4642" pos:column="22">SetAttribute</name></name><argument_list pos:line="4642" pos:column="34">(<argument><expr><call><name pos:line="4642" pos:column="35">TEXT</name><argument_list pos:line="4642" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="4642" pos:column="40">"HighLightNonHtmlZone"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4642" pos:column="65">_nppGUI</name><op:operator pos:line="4642" pos:column="72">.</op:operator><name pos:line="4642" pos:column="73">_enableHiliteNonHTMLZone</name></name><op:operator pos:line="4642" pos:column="97">?</op:operator><call><name pos:line="4642" pos:column="98">TEXT</name><argument_list pos:line="4642" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="4642" pos:column="103">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4642" pos:column="109">:</op:operator><call><name pos:line="4642" pos:column="110">TEXT</name><argument_list pos:line="4642" pos:column="114">(<argument><expr><lit:literal type="string" pos:line="4642" pos:column="115">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4644" pos:column="9">if <condition pos:line="4644" pos:column="12">(<expr><op:operator pos:line="4644" pos:column="13">!</op:operator><name pos:line="4644" pos:column="14">rememberLastSessionExist</name></expr>)</condition><then pos:line="4644" pos:column="39">
	<block pos:line="4645" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4646" pos:column="17">insertGUIConfigBoolNode</name><argument_list pos:line="4646" pos:column="40">(<argument><expr><name pos:line="4646" pos:column="41">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4646" pos:column="50">TEXT</name><argument_list pos:line="4646" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="4646" pos:column="55">"RememberLastSession"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4646" pos:column="79">_nppGUI</name><op:operator pos:line="4646" pos:column="86">.</op:operator><name pos:line="4646" pos:column="87">_rememberLastSession</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4649" pos:column="9">if <condition pos:line="4649" pos:column="12">(<expr><op:operator pos:line="4649" pos:column="13">!</op:operator><name pos:line="4649" pos:column="14">newDocDefaultSettingsExist</name></expr>)</condition><then pos:line="4649" pos:column="41">
	<block pos:line="4650" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4651" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4651" pos:column="30">*</type:modifier></type><name pos:line="4651" pos:column="31">GUIConfigElement</name> <init pos:line="4651" pos:column="48">= <expr><op:operator pos:line="4651" pos:column="50">(</op:operator><call><name><name pos:line="4651" pos:column="51">GUIRoot</name><op:operator pos:line="4651" pos:column="58">-&gt;</op:operator><name pos:line="4651" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4651" pos:column="74">(<argument><expr><call><name pos:line="4651" pos:column="75">TiXmlElement</name><argument_list pos:line="4651" pos:column="87">(<argument><expr><call><name pos:line="4651" pos:column="88">TEXT</name><argument_list pos:line="4651" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4651" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4651" pos:column="107">)</op:operator><op:operator pos:line="4651" pos:column="108">-&gt;</op:operator><call><name pos:line="4651" pos:column="110">ToElement</name><argument_list pos:line="4651" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4652" pos:column="17">GUIConfigElement</name><op:operator pos:line="4652" pos:column="33">-&gt;</op:operator><name pos:line="4652" pos:column="35">SetAttribute</name></name><argument_list pos:line="4652" pos:column="47">(<argument><expr><call><name pos:line="4652" pos:column="48">TEXT</name><argument_list pos:line="4652" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4652" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4652" pos:column="62">TEXT</name><argument_list pos:line="4652" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4652" pos:column="67">"NewDocDefaultSettings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4653" pos:column="17">GUIConfigElement</name><op:operator pos:line="4653" pos:column="33">-&gt;</op:operator><name pos:line="4653" pos:column="35">SetAttribute</name></name><argument_list pos:line="4653" pos:column="47">(<argument><expr><call><name pos:line="4653" pos:column="48">TEXT</name><argument_list pos:line="4653" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4653" pos:column="53">"format"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4653" pos:column="64">_nppGUI</name><op:operator pos:line="4653" pos:column="71">.</op:operator><name pos:line="4653" pos:column="72">_newDocDefaultSettings</name><op:operator pos:line="4653" pos:column="94">.</op:operator><name pos:line="4653" pos:column="95">_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4654" pos:column="17">GUIConfigElement</name><op:operator pos:line="4654" pos:column="33">-&gt;</op:operator><name pos:line="4654" pos:column="35">SetAttribute</name></name><argument_list pos:line="4654" pos:column="47">(<argument><expr><call><name pos:line="4654" pos:column="48">TEXT</name><argument_list pos:line="4654" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4654" pos:column="53">"encoding"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4654" pos:column="66">_nppGUI</name><op:operator pos:line="4654" pos:column="73">.</op:operator><name pos:line="4654" pos:column="74">_newDocDefaultSettings</name><op:operator pos:line="4654" pos:column="96">.</op:operator><name pos:line="4654" pos:column="97">_encoding</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4655" pos:column="17">GUIConfigElement</name><op:operator pos:line="4655" pos:column="33">-&gt;</op:operator><name pos:line="4655" pos:column="35">SetAttribute</name></name><argument_list pos:line="4655" pos:column="47">(<argument><expr><call><name pos:line="4655" pos:column="48">TEXT</name><argument_list pos:line="4655" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4655" pos:column="53">"lang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4655" pos:column="62">_nppGUI</name><op:operator pos:line="4655" pos:column="69">.</op:operator><name pos:line="4655" pos:column="70">_newDocDefaultSettings</name><op:operator pos:line="4655" pos:column="92">.</op:operator><name pos:line="4655" pos:column="93">_lang</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4656" pos:column="17">GUIConfigElement</name><op:operator pos:line="4656" pos:column="33">-&gt;</op:operator><name pos:line="4656" pos:column="35">SetAttribute</name></name><argument_list pos:line="4656" pos:column="47">(<argument><expr><call><name pos:line="4656" pos:column="48">TEXT</name><argument_list pos:line="4656" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4656" pos:column="53">"codepage"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4656" pos:column="66">_nppGUI</name><op:operator pos:line="4656" pos:column="73">.</op:operator><name pos:line="4656" pos:column="74">_newDocDefaultSettings</name><op:operator pos:line="4656" pos:column="96">.</op:operator><name pos:line="4656" pos:column="97">_codepage</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4657" pos:column="17">GUIConfigElement</name><op:operator pos:line="4657" pos:column="33">-&gt;</op:operator><name pos:line="4657" pos:column="35">SetAttribute</name></name><argument_list pos:line="4657" pos:column="47">(<argument><expr><call><name pos:line="4657" pos:column="48">TEXT</name><argument_list pos:line="4657" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4657" pos:column="53">"openAnsiAsUTF8"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4657" pos:column="72">_nppGUI</name><op:operator pos:line="4657" pos:column="79">.</op:operator><name pos:line="4657" pos:column="80">_newDocDefaultSettings</name><op:operator pos:line="4657" pos:column="102">.</op:operator><name pos:line="4657" pos:column="103">_openAnsiAsUtf8</name></name><op:operator pos:line="4657" pos:column="118">?</op:operator><call><name pos:line="4657" pos:column="119">TEXT</name><argument_list pos:line="4657" pos:column="123">(<argument><expr><lit:literal type="string" pos:line="4657" pos:column="124">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4657" pos:column="130">:</op:operator><call><name pos:line="4657" pos:column="131">TEXT</name><argument_list pos:line="4657" pos:column="135">(<argument><expr><lit:literal type="string" pos:line="4657" pos:column="136">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4660" pos:column="9">if <condition pos:line="4660" pos:column="12">(<expr><op:operator pos:line="4660" pos:column="13">!</op:operator><name pos:line="4660" pos:column="14">langsExcludedLstExist</name></expr>)</condition><then pos:line="4660" pos:column="36">
	<block pos:line="4661" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4662" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4662" pos:column="30">*</type:modifier></type><name pos:line="4662" pos:column="31">GUIConfigElement</name> <init pos:line="4662" pos:column="48">= <expr><op:operator pos:line="4662" pos:column="50">(</op:operator><call><name><name pos:line="4662" pos:column="51">GUIRoot</name><op:operator pos:line="4662" pos:column="58">-&gt;</op:operator><name pos:line="4662" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4662" pos:column="74">(<argument><expr><call><name pos:line="4662" pos:column="75">TiXmlElement</name><argument_list pos:line="4662" pos:column="87">(<argument><expr><call><name pos:line="4662" pos:column="88">TEXT</name><argument_list pos:line="4662" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4662" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4662" pos:column="107">)</op:operator><op:operator pos:line="4662" pos:column="108">-&gt;</op:operator><call><name pos:line="4662" pos:column="110">ToElement</name><argument_list pos:line="4662" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4663" pos:column="17">GUIConfigElement</name><op:operator pos:line="4663" pos:column="33">-&gt;</op:operator><name pos:line="4663" pos:column="35">SetAttribute</name></name><argument_list pos:line="4663" pos:column="47">(<argument><expr><call><name pos:line="4663" pos:column="48">TEXT</name><argument_list pos:line="4663" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4663" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4663" pos:column="62">TEXT</name><argument_list pos:line="4663" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4663" pos:column="67">"langsExcluded"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4664" pos:column="17">writeExcludedLangList</name><argument_list pos:line="4664" pos:column="38">(<argument><expr><name pos:line="4664" pos:column="39">GUIConfigElement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4665" pos:column="17">GUIConfigElement</name><op:operator pos:line="4665" pos:column="33">-&gt;</op:operator><name pos:line="4665" pos:column="35">SetAttribute</name></name><argument_list pos:line="4665" pos:column="47">(<argument><expr><call><name pos:line="4665" pos:column="48">TEXT</name><argument_list pos:line="4665" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4665" pos:column="53">"langMenuCompact"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4665" pos:column="73">_nppGUI</name><op:operator pos:line="4665" pos:column="80">.</op:operator><name pos:line="4665" pos:column="81">_isLangMenuCompact</name></name><op:operator pos:line="4665" pos:column="99">?</op:operator><call><name pos:line="4665" pos:column="100">TEXT</name><argument_list pos:line="4665" pos:column="104">(<argument><expr><lit:literal type="string" pos:line="4665" pos:column="105">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4665" pos:column="111">:</op:operator><call><name pos:line="4665" pos:column="112">TEXT</name><argument_list pos:line="4665" pos:column="116">(<argument><expr><lit:literal type="string" pos:line="4665" pos:column="117">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4668" pos:column="9">if <condition pos:line="4668" pos:column="12">(<expr><op:operator pos:line="4668" pos:column="13">!</op:operator><name pos:line="4668" pos:column="14">printSettingExist</name></expr>)</condition><then pos:line="4668" pos:column="32">
	<block pos:line="4669" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4670" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4670" pos:column="30">*</type:modifier></type><name pos:line="4670" pos:column="31">GUIConfigElement</name> <init pos:line="4670" pos:column="48">= <expr><op:operator pos:line="4670" pos:column="50">(</op:operator><call><name><name pos:line="4670" pos:column="51">GUIRoot</name><op:operator pos:line="4670" pos:column="58">-&gt;</op:operator><name pos:line="4670" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4670" pos:column="74">(<argument><expr><call><name pos:line="4670" pos:column="75">TiXmlElement</name><argument_list pos:line="4670" pos:column="87">(<argument><expr><call><name pos:line="4670" pos:column="88">TEXT</name><argument_list pos:line="4670" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4670" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4670" pos:column="107">)</op:operator><op:operator pos:line="4670" pos:column="108">-&gt;</op:operator><call><name pos:line="4670" pos:column="110">ToElement</name><argument_list pos:line="4670" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4671" pos:column="17">GUIConfigElement</name><op:operator pos:line="4671" pos:column="33">-&gt;</op:operator><name pos:line="4671" pos:column="35">SetAttribute</name></name><argument_list pos:line="4671" pos:column="47">(<argument><expr><call><name pos:line="4671" pos:column="48">TEXT</name><argument_list pos:line="4671" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4671" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4671" pos:column="62">TEXT</name><argument_list pos:line="4671" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4671" pos:column="67">"Print"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="4672" pos:column="17">writePrintSetting</name><argument_list pos:line="4672" pos:column="34">(<argument><expr><name pos:line="4672" pos:column="35">GUIConfigElement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4674" pos:column="9">if <condition pos:line="4674" pos:column="12">(<expr><op:operator pos:line="4674" pos:column="13">!</op:operator><name pos:line="4674" pos:column="14">backExist</name></expr>)</condition><then pos:line="4674" pos:column="24">
	<block pos:line="4675" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4676" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4676" pos:column="30">*</type:modifier></type><name pos:line="4676" pos:column="31">GUIConfigElement</name> <init pos:line="4676" pos:column="48">= <expr><op:operator pos:line="4676" pos:column="50">(</op:operator><call><name><name pos:line="4676" pos:column="51">GUIRoot</name><op:operator pos:line="4676" pos:column="58">-&gt;</op:operator><name pos:line="4676" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4676" pos:column="74">(<argument><expr><call><name pos:line="4676" pos:column="75">TiXmlElement</name><argument_list pos:line="4676" pos:column="87">(<argument><expr><call><name pos:line="4676" pos:column="88">TEXT</name><argument_list pos:line="4676" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4676" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4676" pos:column="107">)</op:operator><op:operator pos:line="4676" pos:column="108">-&gt;</op:operator><call><name pos:line="4676" pos:column="110">ToElement</name><argument_list pos:line="4676" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4677" pos:column="17">GUIConfigElement</name><op:operator pos:line="4677" pos:column="33">-&gt;</op:operator><name pos:line="4677" pos:column="35">SetAttribute</name></name><argument_list pos:line="4677" pos:column="47">(<argument><expr><call><name pos:line="4677" pos:column="48">TEXT</name><argument_list pos:line="4677" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4677" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4677" pos:column="62">TEXT</name><argument_list pos:line="4677" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4677" pos:column="67">"Backup"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4678" pos:column="17">GUIConfigElement</name><op:operator pos:line="4678" pos:column="33">-&gt;</op:operator><name pos:line="4678" pos:column="35">SetAttribute</name></name><argument_list pos:line="4678" pos:column="47">(<argument><expr><call><name pos:line="4678" pos:column="48">TEXT</name><argument_list pos:line="4678" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4678" pos:column="53">"action"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4678" pos:column="64">_nppGUI</name><op:operator pos:line="4678" pos:column="71">.</op:operator><name pos:line="4678" pos:column="72">_backup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4679" pos:column="17">GUIConfigElement</name><op:operator pos:line="4679" pos:column="33">-&gt;</op:operator><name pos:line="4679" pos:column="35">SetAttribute</name></name><argument_list pos:line="4679" pos:column="47">(<argument><expr><call><name pos:line="4679" pos:column="48">TEXT</name><argument_list pos:line="4679" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4679" pos:column="53">"useCustumDir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4679" pos:column="70">_nppGUI</name><op:operator pos:line="4679" pos:column="77">.</op:operator><name pos:line="4679" pos:column="78">_useDir</name></name><op:operator pos:line="4679" pos:column="85">?</op:operator><call><name pos:line="4679" pos:column="86">TEXT</name><argument_list pos:line="4679" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="4679" pos:column="91">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4679" pos:column="97">:</op:operator><call><name pos:line="4679" pos:column="98">TEXT</name><argument_list pos:line="4679" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="4679" pos:column="103">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4680" pos:column="17">GUIConfigElement</name><op:operator pos:line="4680" pos:column="33">-&gt;</op:operator><name pos:line="4680" pos:column="35">SetAttribute</name></name><argument_list pos:line="4680" pos:column="47">(<argument><expr><call><name pos:line="4680" pos:column="48">TEXT</name><argument_list pos:line="4680" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4680" pos:column="53">"dir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4680" pos:column="61">_nppGUI</name><op:operator pos:line="4680" pos:column="68">.</op:operator><name pos:line="4680" pos:column="69">_backupDir</name><op:operator pos:line="4680" pos:column="79">.</op:operator><name pos:line="4680" pos:column="80">c_str</name></name><argument_list pos:line="4680" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4683" pos:column="9">if <condition pos:line="4683" pos:column="12">(<expr><op:operator pos:line="4683" pos:column="13">!</op:operator><name pos:line="4683" pos:column="14">doTaskListExist</name></expr>)</condition><then pos:line="4683" pos:column="30">
	<block pos:line="4684" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4685" pos:column="17">insertGUIConfigBoolNode</name><argument_list pos:line="4685" pos:column="40">(<argument><expr><name pos:line="4685" pos:column="41">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4685" pos:column="50">TEXT</name><argument_list pos:line="4685" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="4685" pos:column="55">"TaskList"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4685" pos:column="68">_nppGUI</name><op:operator pos:line="4685" pos:column="75">.</op:operator><name pos:line="4685" pos:column="76">_doTaskList</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4688" pos:column="9">if <condition pos:line="4688" pos:column="12">(<expr><op:operator pos:line="4688" pos:column="13">!</op:operator><name pos:line="4688" pos:column="14">MRUExist</name></expr>)</condition><then pos:line="4688" pos:column="23">
	<block pos:line="4689" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="4690" pos:column="17">insertGUIConfigBoolNode</name><argument_list pos:line="4690" pos:column="40">(<argument><expr><name pos:line="4690" pos:column="41">GUIRoot</name></expr></argument>, <argument><expr><call><name pos:line="4690" pos:column="50">TEXT</name><argument_list pos:line="4690" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="4690" pos:column="55">"MRU"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4690" pos:column="63">_nppGUI</name><op:operator pos:line="4690" pos:column="70">.</op:operator><name pos:line="4690" pos:column="71">_styleMRU</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4693" pos:column="9">if <condition pos:line="4693" pos:column="12">(<expr><op:operator pos:line="4693" pos:column="13">!</op:operator><name pos:line="4693" pos:column="14">URLExist</name></expr>)</condition><then pos:line="4693" pos:column="23">
	<block pos:line="4694" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="4695" pos:column="17">const</specifier> <name pos:line="4695" pos:column="23">TCHAR</name> <type:modifier pos:line="4695" pos:column="29">*</type:modifier></type><name pos:line="4695" pos:column="30">pStr</name> <init pos:line="4695" pos:column="35">= <expr><call><name pos:line="4695" pos:column="37">TEXT</name><argument_list pos:line="4695" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4695" pos:column="42">"0"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="4696" pos:column="17">if <condition pos:line="4696" pos:column="20">(<expr><name><name pos:line="4696" pos:column="21">_nppGUI</name><op:operator pos:line="4696" pos:column="28">.</op:operator><name pos:line="4696" pos:column="29">_styleURL</name></name> <op:operator pos:line="4696" pos:column="39">==</op:operator> <lit:literal type="number" pos:line="4696" pos:column="42">1</lit:literal></expr>)</condition><then pos:line="4696" pos:column="44">
			<expr_stmt><expr><name pos:line="4697" pos:column="25">pStr</name> <op:operator pos:line="4697" pos:column="30">=</op:operator> <call><name pos:line="4697" pos:column="32">TEXT</name><argument_list pos:line="4697" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4697" pos:column="37">"1"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="4698" pos:column="17">else <if pos:line="4698" pos:column="22">if <condition pos:line="4698" pos:column="25">(<expr><name><name pos:line="4698" pos:column="26">_nppGUI</name><op:operator pos:line="4698" pos:column="33">.</op:operator><name pos:line="4698" pos:column="34">_styleURL</name></name> <op:operator pos:line="4698" pos:column="44">==</op:operator> <lit:literal type="number" pos:line="4698" pos:column="47">2</lit:literal></expr>)</condition><then pos:line="4698" pos:column="49">
			<expr_stmt><expr><name pos:line="4699" pos:column="25">pStr</name> <op:operator pos:line="4699" pos:column="30">=</op:operator> <call><name pos:line="4699" pos:column="32">TEXT</name><argument_list pos:line="4699" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="4699" pos:column="37">"2"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>

		<decl_stmt><decl><type><name pos:line="4701" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4701" pos:column="30">*</type:modifier></type><name pos:line="4701" pos:column="31">GUIConfigElement</name> <init pos:line="4701" pos:column="48">= <expr><op:operator pos:line="4701" pos:column="50">(</op:operator><call><name><name pos:line="4701" pos:column="51">GUIRoot</name><op:operator pos:line="4701" pos:column="58">-&gt;</op:operator><name pos:line="4701" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4701" pos:column="74">(<argument><expr><call><name pos:line="4701" pos:column="75">TiXmlElement</name><argument_list pos:line="4701" pos:column="87">(<argument><expr><call><name pos:line="4701" pos:column="88">TEXT</name><argument_list pos:line="4701" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4701" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4701" pos:column="107">)</op:operator><op:operator pos:line="4701" pos:column="108">-&gt;</op:operator><call><name pos:line="4701" pos:column="110">ToElement</name><argument_list pos:line="4701" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4702" pos:column="17">GUIConfigElement</name><op:operator pos:line="4702" pos:column="33">-&gt;</op:operator><name pos:line="4702" pos:column="35">SetAttribute</name></name><argument_list pos:line="4702" pos:column="47">(<argument><expr><call><name pos:line="4702" pos:column="48">TEXT</name><argument_list pos:line="4702" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4702" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4702" pos:column="62">TEXT</name><argument_list pos:line="4702" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4702" pos:column="67">"URL"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4703" pos:column="17">GUIConfigElement</name><op:operator pos:line="4703" pos:column="33">-&gt;</op:operator><name pos:line="4703" pos:column="35">InsertEndChild</name></name><argument_list pos:line="4703" pos:column="49">(<argument><expr><call><name pos:line="4703" pos:column="50">TiXmlText</name><argument_list pos:line="4703" pos:column="59">(<argument><expr><name pos:line="4703" pos:column="60">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<if pos:line="4706" pos:column="9">if <condition pos:line="4706" pos:column="12">(<expr><op:operator pos:line="4706" pos:column="13">!</op:operator><name pos:line="4706" pos:column="14">globalOverrideExist</name></expr>)</condition><then pos:line="4706" pos:column="34">
	<block pos:line="4707" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4708" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4708" pos:column="30">*</type:modifier></type><name pos:line="4708" pos:column="31">GUIConfigElement</name> <init pos:line="4708" pos:column="48">= <expr><op:operator pos:line="4708" pos:column="50">(</op:operator><call><name><name pos:line="4708" pos:column="51">GUIRoot</name><op:operator pos:line="4708" pos:column="58">-&gt;</op:operator><name pos:line="4708" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4708" pos:column="74">(<argument><expr><call><name pos:line="4708" pos:column="75">TiXmlElement</name><argument_list pos:line="4708" pos:column="87">(<argument><expr><call><name pos:line="4708" pos:column="88">TEXT</name><argument_list pos:line="4708" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4708" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4708" pos:column="107">)</op:operator><op:operator pos:line="4708" pos:column="108">-&gt;</op:operator><call><name pos:line="4708" pos:column="110">ToElement</name><argument_list pos:line="4708" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4709" pos:column="17">GUIConfigElement</name><op:operator pos:line="4709" pos:column="33">-&gt;</op:operator><name pos:line="4709" pos:column="35">SetAttribute</name></name><argument_list pos:line="4709" pos:column="47">(<argument><expr><call><name pos:line="4709" pos:column="48">TEXT</name><argument_list pos:line="4709" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4709" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4709" pos:column="62">TEXT</name><argument_list pos:line="4709" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4709" pos:column="67">"globalOverride"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4710" pos:column="17">GUIConfigElement</name><op:operator pos:line="4710" pos:column="33">-&gt;</op:operator><name pos:line="4710" pos:column="35">SetAttribute</name></name><argument_list pos:line="4710" pos:column="47">(<argument><expr><call><name pos:line="4710" pos:column="48">TEXT</name><argument_list pos:line="4710" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4710" pos:column="53">"fg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4710" pos:column="60">_nppGUI</name><op:operator pos:line="4710" pos:column="67">.</op:operator><name pos:line="4710" pos:column="68">_globalOverride</name><op:operator pos:line="4710" pos:column="83">.</op:operator><name pos:line="4710" pos:column="84">enableFg</name></name><op:operator pos:line="4710" pos:column="92">?</op:operator><call><name pos:line="4710" pos:column="93">TEXT</name><argument_list pos:line="4710" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="4710" pos:column="98">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4710" pos:column="104">:</op:operator><call><name pos:line="4710" pos:column="105">TEXT</name><argument_list pos:line="4710" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="4710" pos:column="110">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4711" pos:column="17">GUIConfigElement</name><op:operator pos:line="4711" pos:column="33">-&gt;</op:operator><name pos:line="4711" pos:column="35">SetAttribute</name></name><argument_list pos:line="4711" pos:column="47">(<argument><expr><call><name pos:line="4711" pos:column="48">TEXT</name><argument_list pos:line="4711" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4711" pos:column="53">"bg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4711" pos:column="60">_nppGUI</name><op:operator pos:line="4711" pos:column="67">.</op:operator><name pos:line="4711" pos:column="68">_globalOverride</name><op:operator pos:line="4711" pos:column="83">.</op:operator><name pos:line="4711" pos:column="84">enableBg</name></name><op:operator pos:line="4711" pos:column="92">?</op:operator><call><name pos:line="4711" pos:column="93">TEXT</name><argument_list pos:line="4711" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="4711" pos:column="98">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4711" pos:column="104">:</op:operator><call><name pos:line="4711" pos:column="105">TEXT</name><argument_list pos:line="4711" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="4711" pos:column="110">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4712" pos:column="17">GUIConfigElement</name><op:operator pos:line="4712" pos:column="33">-&gt;</op:operator><name pos:line="4712" pos:column="35">SetAttribute</name></name><argument_list pos:line="4712" pos:column="47">(<argument><expr><call><name pos:line="4712" pos:column="48">TEXT</name><argument_list pos:line="4712" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4712" pos:column="53">"font"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4712" pos:column="62">_nppGUI</name><op:operator pos:line="4712" pos:column="69">.</op:operator><name pos:line="4712" pos:column="70">_globalOverride</name><op:operator pos:line="4712" pos:column="85">.</op:operator><name pos:line="4712" pos:column="86">enableFont</name></name><op:operator pos:line="4712" pos:column="96">?</op:operator><call><name pos:line="4712" pos:column="97">TEXT</name><argument_list pos:line="4712" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="4712" pos:column="102">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4712" pos:column="108">:</op:operator><call><name pos:line="4712" pos:column="109">TEXT</name><argument_list pos:line="4712" pos:column="113">(<argument><expr><lit:literal type="string" pos:line="4712" pos:column="114">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4713" pos:column="17">GUIConfigElement</name><op:operator pos:line="4713" pos:column="33">-&gt;</op:operator><name pos:line="4713" pos:column="35">SetAttribute</name></name><argument_list pos:line="4713" pos:column="47">(<argument><expr><call><name pos:line="4713" pos:column="48">TEXT</name><argument_list pos:line="4713" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4713" pos:column="53">"fontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4713" pos:column="66">_nppGUI</name><op:operator pos:line="4713" pos:column="73">.</op:operator><name pos:line="4713" pos:column="74">_globalOverride</name><op:operator pos:line="4713" pos:column="89">.</op:operator><name pos:line="4713" pos:column="90">enableFontSize</name></name><op:operator pos:line="4713" pos:column="104">?</op:operator><call><name pos:line="4713" pos:column="105">TEXT</name><argument_list pos:line="4713" pos:column="109">(<argument><expr><lit:literal type="string" pos:line="4713" pos:column="110">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4713" pos:column="116">:</op:operator><call><name pos:line="4713" pos:column="117">TEXT</name><argument_list pos:line="4713" pos:column="121">(<argument><expr><lit:literal type="string" pos:line="4713" pos:column="122">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4714" pos:column="17">GUIConfigElement</name><op:operator pos:line="4714" pos:column="33">-&gt;</op:operator><name pos:line="4714" pos:column="35">SetAttribute</name></name><argument_list pos:line="4714" pos:column="47">(<argument><expr><call><name pos:line="4714" pos:column="48">TEXT</name><argument_list pos:line="4714" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4714" pos:column="53">"bold"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4714" pos:column="62">_nppGUI</name><op:operator pos:line="4714" pos:column="69">.</op:operator><name pos:line="4714" pos:column="70">_globalOverride</name><op:operator pos:line="4714" pos:column="85">.</op:operator><name pos:line="4714" pos:column="86">enableBold</name></name><op:operator pos:line="4714" pos:column="96">?</op:operator><call><name pos:line="4714" pos:column="97">TEXT</name><argument_list pos:line="4714" pos:column="101">(<argument><expr><lit:literal type="string" pos:line="4714" pos:column="102">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4714" pos:column="108">:</op:operator><call><name pos:line="4714" pos:column="109">TEXT</name><argument_list pos:line="4714" pos:column="113">(<argument><expr><lit:literal type="string" pos:line="4714" pos:column="114">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4715" pos:column="17">GUIConfigElement</name><op:operator pos:line="4715" pos:column="33">-&gt;</op:operator><name pos:line="4715" pos:column="35">SetAttribute</name></name><argument_list pos:line="4715" pos:column="47">(<argument><expr><call><name pos:line="4715" pos:column="48">TEXT</name><argument_list pos:line="4715" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4715" pos:column="53">"italic"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4715" pos:column="64">_nppGUI</name><op:operator pos:line="4715" pos:column="71">.</op:operator><name pos:line="4715" pos:column="72">_globalOverride</name><op:operator pos:line="4715" pos:column="87">.</op:operator><name pos:line="4715" pos:column="88">enableItalic</name></name><op:operator pos:line="4715" pos:column="100">?</op:operator><call><name pos:line="4715" pos:column="101">TEXT</name><argument_list pos:line="4715" pos:column="105">(<argument><expr><lit:literal type="string" pos:line="4715" pos:column="106">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4715" pos:column="112">:</op:operator><call><name pos:line="4715" pos:column="113">TEXT</name><argument_list pos:line="4715" pos:column="117">(<argument><expr><lit:literal type="string" pos:line="4715" pos:column="118">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4716" pos:column="17">GUIConfigElement</name><op:operator pos:line="4716" pos:column="33">-&gt;</op:operator><name pos:line="4716" pos:column="35">SetAttribute</name></name><argument_list pos:line="4716" pos:column="47">(<argument><expr><call><name pos:line="4716" pos:column="48">TEXT</name><argument_list pos:line="4716" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4716" pos:column="53">"underline"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4716" pos:column="67">_nppGUI</name><op:operator pos:line="4716" pos:column="74">.</op:operator><name pos:line="4716" pos:column="75">_globalOverride</name><op:operator pos:line="4716" pos:column="90">.</op:operator><name pos:line="4716" pos:column="91">enableUnderLine</name></name><op:operator pos:line="4716" pos:column="106">?</op:operator><call><name pos:line="4716" pos:column="107">TEXT</name><argument_list pos:line="4716" pos:column="111">(<argument><expr><lit:literal type="string" pos:line="4716" pos:column="112">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4716" pos:column="118">:</op:operator><call><name pos:line="4716" pos:column="119">TEXT</name><argument_list pos:line="4716" pos:column="123">(<argument><expr><lit:literal type="string" pos:line="4716" pos:column="124">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<if pos:line="4719" pos:column="9">if <condition pos:line="4719" pos:column="12">(<expr><op:operator pos:line="4719" pos:column="13">!</op:operator><name pos:line="4719" pos:column="14">autocExist</name></expr>)</condition><then pos:line="4719" pos:column="25">
	<block pos:line="4720" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4721" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4721" pos:column="30">*</type:modifier></type><name pos:line="4721" pos:column="31">GUIConfigElement</name> <init pos:line="4721" pos:column="48">= <expr><op:operator pos:line="4721" pos:column="50">(</op:operator><call><name><name pos:line="4721" pos:column="51">GUIRoot</name><op:operator pos:line="4721" pos:column="58">-&gt;</op:operator><name pos:line="4721" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4721" pos:column="74">(<argument><expr><call><name pos:line="4721" pos:column="75">TiXmlElement</name><argument_list pos:line="4721" pos:column="87">(<argument><expr><call><name pos:line="4721" pos:column="88">TEXT</name><argument_list pos:line="4721" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4721" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4721" pos:column="107">)</op:operator><op:operator pos:line="4721" pos:column="108">-&gt;</op:operator><call><name pos:line="4721" pos:column="110">ToElement</name><argument_list pos:line="4721" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4722" pos:column="17">GUIConfigElement</name><op:operator pos:line="4722" pos:column="33">-&gt;</op:operator><name pos:line="4722" pos:column="35">SetAttribute</name></name><argument_list pos:line="4722" pos:column="47">(<argument><expr><call><name pos:line="4722" pos:column="48">TEXT</name><argument_list pos:line="4722" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4722" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4722" pos:column="62">TEXT</name><argument_list pos:line="4722" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4722" pos:column="67">"auto-completion"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4723" pos:column="17">GUIConfigElement</name><op:operator pos:line="4723" pos:column="33">-&gt;</op:operator><name pos:line="4723" pos:column="35">SetAttribute</name></name><argument_list pos:line="4723" pos:column="47">(<argument><expr><call><name pos:line="4723" pos:column="48">TEXT</name><argument_list pos:line="4723" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4723" pos:column="53">"autoCAction"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4723" pos:column="69">_nppGUI</name><op:operator pos:line="4723" pos:column="76">.</op:operator><name pos:line="4723" pos:column="77">_autocStatus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4724" pos:column="17">GUIConfigElement</name><op:operator pos:line="4724" pos:column="33">-&gt;</op:operator><name pos:line="4724" pos:column="35">SetAttribute</name></name><argument_list pos:line="4724" pos:column="47">(<argument><expr><call><name pos:line="4724" pos:column="48">TEXT</name><argument_list pos:line="4724" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4724" pos:column="53">"triggerFromNbChar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4724" pos:column="75">_nppGUI</name><op:operator pos:line="4724" pos:column="82">.</op:operator><name pos:line="4724" pos:column="83">_autocFromLen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier pos:line="4725" pos:column="17">const</specifier> <name pos:line="4725" pos:column="23">TCHAR</name> <type:modifier pos:line="4725" pos:column="29">*</type:modifier></type> <name pos:line="4725" pos:column="31">pStr</name> <init pos:line="4725" pos:column="36">= <expr><name><name pos:line="4725" pos:column="38">_nppGUI</name><op:operator pos:line="4725" pos:column="45">.</op:operator><name pos:line="4725" pos:column="46">_funcParams</name></name><op:operator pos:line="4725" pos:column="57">?</op:operator><call><name pos:line="4725" pos:column="58">TEXT</name><argument_list pos:line="4725" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="4725" pos:column="63">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4725" pos:column="69">:</op:operator><call><name pos:line="4725" pos:column="70">TEXT</name><argument_list pos:line="4725" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="4725" pos:column="75">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4726" pos:column="17">GUIConfigElement</name><op:operator pos:line="4726" pos:column="33">-&gt;</op:operator><name pos:line="4726" pos:column="35">SetAttribute</name></name><argument_list pos:line="4726" pos:column="47">(<argument><expr><call><name pos:line="4726" pos:column="48">TEXT</name><argument_list pos:line="4726" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4726" pos:column="53">"funcParams"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4726" pos:column="68">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="4727" pos:column="17">autocExist</name> <op:operator pos:line="4727" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="4727" pos:column="30">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4730" pos:column="9">if <condition pos:line="4730" pos:column="12">(<expr><name pos:line="4730" pos:column="13">dockingParamNode</name></expr>)</condition><then pos:line="4730" pos:column="30">
	<block pos:line="4731" pos:column="9">{
		<comment type="line" pos:line="4732" pos:column="17">// Rase tout</comment>
		<expr_stmt><expr><call><name><name pos:line="4733" pos:column="17">GUIRoot</name><op:operator pos:line="4733" pos:column="24">-&gt;</op:operator><name pos:line="4733" pos:column="26">RemoveChild</name></name><argument_list pos:line="4733" pos:column="37">(<argument><expr><name pos:line="4733" pos:column="38">dockingParamNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4736" pos:column="9">if <condition pos:line="4736" pos:column="12">(<expr><op:operator pos:line="4736" pos:column="13">!</op:operator><name pos:line="4736" pos:column="14">sessionExtExist</name></expr>)</condition><then pos:line="4736" pos:column="30">
	<block pos:line="4737" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4738" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4738" pos:column="30">*</type:modifier></type><name pos:line="4738" pos:column="31">GUIConfigElement</name> <init pos:line="4738" pos:column="48">= <expr><op:operator pos:line="4738" pos:column="50">(</op:operator><call><name><name pos:line="4738" pos:column="51">GUIRoot</name><op:operator pos:line="4738" pos:column="58">-&gt;</op:operator><name pos:line="4738" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4738" pos:column="74">(<argument><expr><call><name pos:line="4738" pos:column="75">TiXmlElement</name><argument_list pos:line="4738" pos:column="87">(<argument><expr><call><name pos:line="4738" pos:column="88">TEXT</name><argument_list pos:line="4738" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4738" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4738" pos:column="107">)</op:operator><op:operator pos:line="4738" pos:column="108">-&gt;</op:operator><call><name pos:line="4738" pos:column="110">ToElement</name><argument_list pos:line="4738" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4739" pos:column="17">GUIConfigElement</name><op:operator pos:line="4739" pos:column="33">-&gt;</op:operator><name pos:line="4739" pos:column="35">SetAttribute</name></name><argument_list pos:line="4739" pos:column="47">(<argument><expr><call><name pos:line="4739" pos:column="48">TEXT</name><argument_list pos:line="4739" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4739" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4739" pos:column="62">TEXT</name><argument_list pos:line="4739" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4739" pos:column="67">"sessionExt"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4740" pos:column="17">GUIConfigElement</name><op:operator pos:line="4740" pos:column="33">-&gt;</op:operator><name pos:line="4740" pos:column="35">InsertEndChild</name></name><argument_list pos:line="4740" pos:column="49">(<argument><expr><call><name pos:line="4740" pos:column="50">TiXmlText</name><argument_list pos:line="4740" pos:column="59">(<argument><expr><call><name><name pos:line="4740" pos:column="60">_nppGUI</name><op:operator pos:line="4740" pos:column="67">.</op:operator><name pos:line="4740" pos:column="68">_definedSessionExt</name><op:operator pos:line="4740" pos:column="86">.</op:operator><name pos:line="4740" pos:column="87">c_str</name></name><argument_list pos:line="4740" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<if pos:line="4743" pos:column="9">if <condition pos:line="4743" pos:column="12">(<expr><op:operator pos:line="4743" pos:column="13">!</op:operator><name pos:line="4743" pos:column="14">menuBarExist</name></expr>)</condition><then pos:line="4743" pos:column="27">
	<block pos:line="4744" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4745" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4745" pos:column="30">*</type:modifier></type><name pos:line="4745" pos:column="31">GUIConfigElement</name> <init pos:line="4745" pos:column="48">= <expr><op:operator pos:line="4745" pos:column="50">(</op:operator><call><name><name pos:line="4745" pos:column="51">GUIRoot</name><op:operator pos:line="4745" pos:column="58">-&gt;</op:operator><name pos:line="4745" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4745" pos:column="74">(<argument><expr><call><name pos:line="4745" pos:column="75">TiXmlElement</name><argument_list pos:line="4745" pos:column="87">(<argument><expr><call><name pos:line="4745" pos:column="88">TEXT</name><argument_list pos:line="4745" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4745" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4745" pos:column="107">)</op:operator><op:operator pos:line="4745" pos:column="108">-&gt;</op:operator><call><name pos:line="4745" pos:column="110">ToElement</name><argument_list pos:line="4745" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4746" pos:column="17">GUIConfigElement</name><op:operator pos:line="4746" pos:column="33">-&gt;</op:operator><name pos:line="4746" pos:column="35">SetAttribute</name></name><argument_list pos:line="4746" pos:column="47">(<argument><expr><call><name pos:line="4746" pos:column="48">TEXT</name><argument_list pos:line="4746" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4746" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4746" pos:column="62">TEXT</name><argument_list pos:line="4746" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4746" pos:column="67">"MenuBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4747" pos:column="17">GUIConfigElement</name><op:operator pos:line="4747" pos:column="33">-&gt;</op:operator><name pos:line="4747" pos:column="35">InsertEndChild</name></name><argument_list pos:line="4747" pos:column="49">(<argument><expr><call><name pos:line="4747" pos:column="50">TiXmlText</name><argument_list pos:line="4747" pos:column="59">(<argument><expr><name><name pos:line="4747" pos:column="60">_nppGUI</name><op:operator pos:line="4747" pos:column="67">.</op:operator><name pos:line="4747" pos:column="68">_menuBarShow</name></name><op:operator pos:line="4747" pos:column="80">?</op:operator><call><name pos:line="4747" pos:column="81">TEXT</name><argument_list pos:line="4747" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="4747" pos:column="86">"show"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4747" pos:column="93">:</op:operator><call><name pos:line="4747" pos:column="94">TEXT</name><argument_list pos:line="4747" pos:column="98">(<argument><expr><lit:literal type="string" pos:line="4747" pos:column="99">"hide"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4750" pos:column="9">if <condition pos:line="4750" pos:column="12">(<expr><op:operator pos:line="4750" pos:column="13">!</op:operator><name pos:line="4750" pos:column="14">caretExist</name></expr>)</condition><then pos:line="4750" pos:column="25">
	<block pos:line="4751" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4752" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4752" pos:column="30">*</type:modifier></type><name pos:line="4752" pos:column="31">GUIConfigElement</name> <init pos:line="4752" pos:column="48">= <expr><op:operator pos:line="4752" pos:column="50">(</op:operator><call><name><name pos:line="4752" pos:column="51">GUIRoot</name><op:operator pos:line="4752" pos:column="58">-&gt;</op:operator><name pos:line="4752" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4752" pos:column="74">(<argument><expr><call><name pos:line="4752" pos:column="75">TiXmlElement</name><argument_list pos:line="4752" pos:column="87">(<argument><expr><call><name pos:line="4752" pos:column="88">TEXT</name><argument_list pos:line="4752" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4752" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4752" pos:column="107">)</op:operator><op:operator pos:line="4752" pos:column="108">-&gt;</op:operator><call><name pos:line="4752" pos:column="110">ToElement</name><argument_list pos:line="4752" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4753" pos:column="17">GUIConfigElement</name><op:operator pos:line="4753" pos:column="33">-&gt;</op:operator><name pos:line="4753" pos:column="35">SetAttribute</name></name><argument_list pos:line="4753" pos:column="47">(<argument><expr><call><name pos:line="4753" pos:column="48">TEXT</name><argument_list pos:line="4753" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4753" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4753" pos:column="62">TEXT</name><argument_list pos:line="4753" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4753" pos:column="67">"Caret"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4754" pos:column="17">GUIConfigElement</name><op:operator pos:line="4754" pos:column="33">-&gt;</op:operator><name pos:line="4754" pos:column="35">SetAttribute</name></name><argument_list pos:line="4754" pos:column="47">(<argument><expr><call><name pos:line="4754" pos:column="48">TEXT</name><argument_list pos:line="4754" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4754" pos:column="53">"width"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4754" pos:column="63">_nppGUI</name><op:operator pos:line="4754" pos:column="70">.</op:operator><name pos:line="4754" pos:column="71">_caretWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4755" pos:column="17">GUIConfigElement</name><op:operator pos:line="4755" pos:column="33">-&gt;</op:operator><name pos:line="4755" pos:column="35">SetAttribute</name></name><argument_list pos:line="4755" pos:column="47">(<argument><expr><call><name pos:line="4755" pos:column="48">TEXT</name><argument_list pos:line="4755" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4755" pos:column="53">"blinkRate"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4755" pos:column="67">_nppGUI</name><op:operator pos:line="4755" pos:column="74">.</op:operator><name pos:line="4755" pos:column="75">_caretBlinkRate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

    <if pos:line="4758" pos:column="5">if <condition pos:line="4758" pos:column="8">(<expr><op:operator pos:line="4758" pos:column="9">!</op:operator><name pos:line="4758" pos:column="10">ScintillaGlobalSettingsExist</name></expr>)</condition><then pos:line="4758" pos:column="39">
    <block pos:line="4759" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="4760" pos:column="9">TiXmlElement</name> <type:modifier pos:line="4760" pos:column="22">*</type:modifier></type><name pos:line="4760" pos:column="23">GUIConfigElement</name> <init pos:line="4760" pos:column="40">= <expr><op:operator pos:line="4760" pos:column="42">(</op:operator><call><name><name pos:line="4760" pos:column="43">GUIRoot</name><op:operator pos:line="4760" pos:column="50">-&gt;</op:operator><name pos:line="4760" pos:column="52">InsertEndChild</name></name><argument_list pos:line="4760" pos:column="66">(<argument><expr><call><name pos:line="4760" pos:column="67">TiXmlElement</name><argument_list pos:line="4760" pos:column="79">(<argument><expr><call><name pos:line="4760" pos:column="80">TEXT</name><argument_list pos:line="4760" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="4760" pos:column="85">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4760" pos:column="99">)</op:operator><op:operator pos:line="4760" pos:column="100">-&gt;</op:operator><call><name pos:line="4760" pos:column="102">ToElement</name><argument_list pos:line="4760" pos:column="111">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4761" pos:column="17">GUIConfigElement</name><op:operator pos:line="4761" pos:column="33">-&gt;</op:operator><name pos:line="4761" pos:column="35">SetAttribute</name></name><argument_list pos:line="4761" pos:column="47">(<argument><expr><call><name pos:line="4761" pos:column="48">TEXT</name><argument_list pos:line="4761" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4761" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4761" pos:column="62">TEXT</name><argument_list pos:line="4761" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4761" pos:column="67">"ScintillaGlobalSettings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="4762" pos:column="9">GUIConfigElement</name><op:operator pos:line="4762" pos:column="25">-&gt;</op:operator><name pos:line="4762" pos:column="27">SetAttribute</name></name><argument_list pos:line="4762" pos:column="39">(<argument><expr><call><name pos:line="4762" pos:column="40">TEXT</name><argument_list pos:line="4762" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="4762" pos:column="45">"enableMultiSelection"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4762" pos:column="70">_nppGUI</name><op:operator pos:line="4762" pos:column="77">.</op:operator><name pos:line="4762" pos:column="78">_enableMultiSelection</name></name><op:operator pos:line="4762" pos:column="99">?</op:operator><call><name pos:line="4762" pos:column="100">TEXT</name><argument_list pos:line="4762" pos:column="104">(<argument><expr><lit:literal type="string" pos:line="4762" pos:column="105">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4762" pos:column="111">:</op:operator><call><name pos:line="4762" pos:column="112">TEXT</name><argument_list pos:line="4762" pos:column="116">(<argument><expr><lit:literal type="string" pos:line="4762" pos:column="117">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

	<if pos:line="4765" pos:column="9">if <condition pos:line="4765" pos:column="12">(<expr><op:operator pos:line="4765" pos:column="13">!</op:operator><name pos:line="4765" pos:column="14">openSaveDirExist</name></expr>)</condition><then pos:line="4765" pos:column="31">
	<block pos:line="4766" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4767" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4767" pos:column="30">*</type:modifier></type><name pos:line="4767" pos:column="31">GUIConfigElement</name> <init pos:line="4767" pos:column="48">= <expr><op:operator pos:line="4767" pos:column="50">(</op:operator><call><name><name pos:line="4767" pos:column="51">GUIRoot</name><op:operator pos:line="4767" pos:column="58">-&gt;</op:operator><name pos:line="4767" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4767" pos:column="74">(<argument><expr><call><name pos:line="4767" pos:column="75">TiXmlElement</name><argument_list pos:line="4767" pos:column="87">(<argument><expr><call><name pos:line="4767" pos:column="88">TEXT</name><argument_list pos:line="4767" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4767" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4767" pos:column="107">)</op:operator><op:operator pos:line="4767" pos:column="108">-&gt;</op:operator><call><name pos:line="4767" pos:column="110">ToElement</name><argument_list pos:line="4767" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4768" pos:column="17">GUIConfigElement</name><op:operator pos:line="4768" pos:column="33">-&gt;</op:operator><name pos:line="4768" pos:column="35">SetAttribute</name></name><argument_list pos:line="4768" pos:column="47">(<argument><expr><call><name pos:line="4768" pos:column="48">TEXT</name><argument_list pos:line="4768" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4768" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4768" pos:column="62">TEXT</name><argument_list pos:line="4768" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4768" pos:column="67">"openSaveDir"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4769" pos:column="17">GUIConfigElement</name><op:operator pos:line="4769" pos:column="33">-&gt;</op:operator><name pos:line="4769" pos:column="35">SetAttribute</name></name><argument_list pos:line="4769" pos:column="47">(<argument><expr><call><name pos:line="4769" pos:column="48">TEXT</name><argument_list pos:line="4769" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4769" pos:column="53">"value"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4769" pos:column="63">_nppGUI</name><op:operator pos:line="4769" pos:column="70">.</op:operator><name pos:line="4769" pos:column="71">_openSaveDir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4770" pos:column="17">GUIConfigElement</name><op:operator pos:line="4770" pos:column="33">-&gt;</op:operator><name pos:line="4770" pos:column="35">SetAttribute</name></name><argument_list pos:line="4770" pos:column="47">(<argument><expr><call><name pos:line="4770" pos:column="48">TEXT</name><argument_list pos:line="4770" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4770" pos:column="53">"defaultDirPath"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4770" pos:column="72">_nppGUI</name><op:operator pos:line="4770" pos:column="79">.</op:operator><name pos:line="4770" pos:column="80">_defaultDir</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="4773" pos:column="9">if <condition pos:line="4773" pos:column="12">(<expr><op:operator pos:line="4773" pos:column="13">!</op:operator><name pos:line="4773" pos:column="14">titleBarExist</name></expr>)</condition><then pos:line="4773" pos:column="28">
	<block pos:line="4774" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4775" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4775" pos:column="30">*</type:modifier></type><name pos:line="4775" pos:column="31">GUIConfigElement</name> <init pos:line="4775" pos:column="48">= <expr><op:operator pos:line="4775" pos:column="50">(</op:operator><call><name><name pos:line="4775" pos:column="51">GUIRoot</name><op:operator pos:line="4775" pos:column="58">-&gt;</op:operator><name pos:line="4775" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4775" pos:column="74">(<argument><expr><call><name pos:line="4775" pos:column="75">TiXmlElement</name><argument_list pos:line="4775" pos:column="87">(<argument><expr><call><name pos:line="4775" pos:column="88">TEXT</name><argument_list pos:line="4775" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4775" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4775" pos:column="107">)</op:operator><op:operator pos:line="4775" pos:column="108">-&gt;</op:operator><call><name pos:line="4775" pos:column="110">ToElement</name><argument_list pos:line="4775" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4776" pos:column="17">GUIConfigElement</name><op:operator pos:line="4776" pos:column="33">-&gt;</op:operator><name pos:line="4776" pos:column="35">SetAttribute</name></name><argument_list pos:line="4776" pos:column="47">(<argument><expr><call><name pos:line="4776" pos:column="48">TEXT</name><argument_list pos:line="4776" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4776" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4776" pos:column="62">TEXT</name><argument_list pos:line="4776" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4776" pos:column="67">"titleBar"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier pos:line="4777" pos:column="17">const</specifier> <name pos:line="4777" pos:column="23">TCHAR</name> <type:modifier pos:line="4777" pos:column="29">*</type:modifier></type><name pos:line="4777" pos:column="30">pStr</name> <init pos:line="4777" pos:column="35">= <expr><op:operator pos:line="4777" pos:column="37">(</op:operator><name><name pos:line="4777" pos:column="38">_nppGUI</name><op:operator pos:line="4777" pos:column="45">.</op:operator><name pos:line="4777" pos:column="46">_shortTitlebar</name></name><op:operator pos:line="4777" pos:column="60">)</op:operator><op:operator pos:line="4777" pos:column="61">?</op:operator><call><name pos:line="4777" pos:column="62">TEXT</name><argument_list pos:line="4777" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4777" pos:column="67">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4777" pos:column="73">:</op:operator><call><name pos:line="4777" pos:column="74">TEXT</name><argument_list pos:line="4777" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="4777" pos:column="79">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4778" pos:column="17">GUIConfigElement</name><op:operator pos:line="4778" pos:column="33">-&gt;</op:operator><name pos:line="4778" pos:column="35">SetAttribute</name></name><argument_list pos:line="4778" pos:column="47">(<argument><expr><call><name pos:line="4778" pos:column="48">TEXT</name><argument_list pos:line="4778" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4778" pos:column="53">"short"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4778" pos:column="63">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="4780" pos:column="9">if <condition pos:line="4780" pos:column="12">(<expr><op:operator pos:line="4780" pos:column="13">!</op:operator><name pos:line="4780" pos:column="14">stylerThemeExist</name></expr>)</condition><then pos:line="4780" pos:column="31">
	<block pos:line="4781" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4782" pos:column="17">TiXmlElement</name> <type:modifier pos:line="4782" pos:column="30">*</type:modifier></type><name pos:line="4782" pos:column="31">GUIConfigElement</name> <init pos:line="4782" pos:column="48">= <expr><op:operator pos:line="4782" pos:column="50">(</op:operator><call><name><name pos:line="4782" pos:column="51">GUIRoot</name><op:operator pos:line="4782" pos:column="58">-&gt;</op:operator><name pos:line="4782" pos:column="60">InsertEndChild</name></name><argument_list pos:line="4782" pos:column="74">(<argument><expr><call><name pos:line="4782" pos:column="75">TiXmlElement</name><argument_list pos:line="4782" pos:column="87">(<argument><expr><call><name pos:line="4782" pos:column="88">TEXT</name><argument_list pos:line="4782" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="4782" pos:column="93">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4782" pos:column="107">)</op:operator><op:operator pos:line="4782" pos:column="108">-&gt;</op:operator><call><name pos:line="4782" pos:column="110">ToElement</name><argument_list pos:line="4782" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4783" pos:column="17">GUIConfigElement</name><op:operator pos:line="4783" pos:column="33">-&gt;</op:operator><name pos:line="4783" pos:column="35">SetAttribute</name></name><argument_list pos:line="4783" pos:column="47">(<argument><expr><call><name pos:line="4783" pos:column="48">TEXT</name><argument_list pos:line="4783" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4783" pos:column="53">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4783" pos:column="62">TEXT</name><argument_list pos:line="4783" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="4783" pos:column="67">"stylerTheme"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4784" pos:column="17">GUIConfigElement</name><op:operator pos:line="4784" pos:column="33">-&gt;</op:operator><name pos:line="4784" pos:column="35">SetAttribute</name></name><argument_list pos:line="4784" pos:column="47">(<argument><expr><call><name pos:line="4784" pos:column="48">TEXT</name><argument_list pos:line="4784" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="4784" pos:column="53">"path"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4784" pos:column="62">_nppGUI</name><op:operator pos:line="4784" pos:column="69">.</op:operator><name pos:line="4784" pos:column="70">_themeName</name><op:operator pos:line="4784" pos:column="80">.</op:operator><name pos:line="4784" pos:column="81">c_str</name></name><argument_list pos:line="4784" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="4787" pos:column="9">insertDockingParamNode</name><argument_list pos:line="4787" pos:column="31">(<argument><expr><name pos:line="4787" pos:column="32">GUIRoot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="4788" pos:column="9">return <expr><lit:literal type="boolean" pos:line="4788" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="4791" pos:column="1">bool</name></type> <name><name pos:line="4791" pos:column="6">NppParameters</name><op:operator pos:line="4791" pos:column="19">::</op:operator><name pos:line="4791" pos:column="21">writeFindHistory</name></name><parameter_list pos:line="4791" pos:column="37">()</parameter_list>
<block pos:line="4792" pos:column="1">{
	<if pos:line="4793" pos:column="9">if <condition pos:line="4793" pos:column="12">(<expr><op:operator pos:line="4793" pos:column="13">!</op:operator><name pos:line="4793" pos:column="14">_pXmlUserDoc</name></expr>)</condition><then pos:line="4793" pos:column="27"> <return pos:line="4793" pos:column="28">return <expr><lit:literal type="boolean" pos:line="4793" pos:column="35">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4795" pos:column="9">TiXmlNode</name> <type:modifier pos:line="4795" pos:column="19">*</type:modifier></type><name pos:line="4795" pos:column="20">nppRoot</name> <init pos:line="4795" pos:column="28">= <expr><call><name><name pos:line="4795" pos:column="30">_pXmlUserDoc</name><op:operator pos:line="4795" pos:column="42">-&gt;</op:operator><name pos:line="4795" pos:column="44">FirstChild</name></name><argument_list pos:line="4795" pos:column="54">(<argument><expr><call><name pos:line="4795" pos:column="55">TEXT</name><argument_list pos:line="4795" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="4795" pos:column="60">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4796" pos:column="9">if <condition pos:line="4796" pos:column="12">(<expr><op:operator pos:line="4796" pos:column="13">!</op:operator><name pos:line="4796" pos:column="14">nppRoot</name></expr>)</condition><then pos:line="4796" pos:column="22"> <return pos:line="4796" pos:column="23">return <expr><lit:literal type="boolean" pos:line="4796" pos:column="30">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="4798" pos:column="9">TiXmlNode</name> <type:modifier pos:line="4798" pos:column="19">*</type:modifier></type><name pos:line="4798" pos:column="20">findHistoryRoot</name> <init pos:line="4798" pos:column="36">= <expr><call><name><name pos:line="4798" pos:column="38">nppRoot</name><op:operator pos:line="4798" pos:column="45">-&gt;</op:operator><name pos:line="4798" pos:column="47">FirstChildElement</name></name><argument_list pos:line="4798" pos:column="64">(<argument><expr><call><name pos:line="4798" pos:column="65">TEXT</name><argument_list pos:line="4798" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="4798" pos:column="70">"FindHistory"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="4799" pos:column="9">if <condition pos:line="4799" pos:column="12">(<expr><op:operator pos:line="4799" pos:column="13">!</op:operator><name pos:line="4799" pos:column="14">findHistoryRoot</name></expr>)</condition><then pos:line="4799" pos:column="30">
	<block pos:line="4800" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4801" pos:column="17">TiXmlElement</name></type> <name pos:line="4801" pos:column="30">element</name><argument_list pos:line="4801" pos:column="37">(<argument><expr><call><name pos:line="4801" pos:column="38">TEXT</name><argument_list pos:line="4801" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="4801" pos:column="43">"FindHistory"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="4802" pos:column="17">findHistoryRoot</name> <op:operator pos:line="4802" pos:column="33">=</op:operator> <call><name><name pos:line="4802" pos:column="35">nppRoot</name><op:operator pos:line="4802" pos:column="42">-&gt;</op:operator><name pos:line="4802" pos:column="44">InsertEndChild</name></name><argument_list pos:line="4802" pos:column="58">(<argument><expr><name pos:line="4802" pos:column="59">element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="4804" pos:column="9">findHistoryRoot</name><op:operator pos:line="4804" pos:column="24">-&gt;</op:operator><name pos:line="4804" pos:column="26">Clear</name></name><argument_list pos:line="4804" pos:column="31">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><op:operator pos:line="4806" pos:column="9">(</op:operator><call><name><name pos:line="4806" pos:column="10">findHistoryRoot</name><op:operator pos:line="4806" pos:column="25">-&gt;</op:operator><name pos:line="4806" pos:column="27">ToElement</name></name><argument_list pos:line="4806" pos:column="36">()</argument_list></call><op:operator pos:line="4806" pos:column="38">)</op:operator><op:operator pos:line="4806" pos:column="39">-&gt;</op:operator><call><name pos:line="4806" pos:column="41">SetAttribute</name><argument_list pos:line="4806" pos:column="53">(<argument><expr><call><name pos:line="4806" pos:column="54">TEXT</name><argument_list pos:line="4806" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4806" pos:column="59">"nbMaxFindHistoryPath"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,    <argument><expr><name><name pos:line="4806" pos:column="87">_findHistory</name><op:operator pos:line="4806" pos:column="99">.</op:operator><name pos:line="4806" pos:column="100">_nbMaxFindHistoryPath</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4807" pos:column="9">(</op:operator><call><name><name pos:line="4807" pos:column="10">findHistoryRoot</name><op:operator pos:line="4807" pos:column="25">-&gt;</op:operator><name pos:line="4807" pos:column="27">ToElement</name></name><argument_list pos:line="4807" pos:column="36">()</argument_list></call><op:operator pos:line="4807" pos:column="38">)</op:operator><op:operator pos:line="4807" pos:column="39">-&gt;</op:operator><call><name pos:line="4807" pos:column="41">SetAttribute</name><argument_list pos:line="4807" pos:column="53">(<argument><expr><call><name pos:line="4807" pos:column="54">TEXT</name><argument_list pos:line="4807" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4807" pos:column="59">"nbMaxFindHistoryFilter"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,  <argument><expr><name><name pos:line="4807" pos:column="87">_findHistory</name><op:operator pos:line="4807" pos:column="99">.</op:operator><name pos:line="4807" pos:column="100">_nbMaxFindHistoryFilter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4808" pos:column="9">(</op:operator><call><name><name pos:line="4808" pos:column="10">findHistoryRoot</name><op:operator pos:line="4808" pos:column="25">-&gt;</op:operator><name pos:line="4808" pos:column="27">ToElement</name></name><argument_list pos:line="4808" pos:column="36">()</argument_list></call><op:operator pos:line="4808" pos:column="38">)</op:operator><op:operator pos:line="4808" pos:column="39">-&gt;</op:operator><call><name pos:line="4808" pos:column="41">SetAttribute</name><argument_list pos:line="4808" pos:column="53">(<argument><expr><call><name pos:line="4808" pos:column="54">TEXT</name><argument_list pos:line="4808" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4808" pos:column="59">"nbMaxFindHistoryFind"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,    <argument><expr><name><name pos:line="4808" pos:column="87">_findHistory</name><op:operator pos:line="4808" pos:column="99">.</op:operator><name pos:line="4808" pos:column="100">_nbMaxFindHistoryFind</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4809" pos:column="9">(</op:operator><call><name><name pos:line="4809" pos:column="10">findHistoryRoot</name><op:operator pos:line="4809" pos:column="25">-&gt;</op:operator><name pos:line="4809" pos:column="27">ToElement</name></name><argument_list pos:line="4809" pos:column="36">()</argument_list></call><op:operator pos:line="4809" pos:column="38">)</op:operator><op:operator pos:line="4809" pos:column="39">-&gt;</op:operator><call><name pos:line="4809" pos:column="41">SetAttribute</name><argument_list pos:line="4809" pos:column="53">(<argument><expr><call><name pos:line="4809" pos:column="54">TEXT</name><argument_list pos:line="4809" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4809" pos:column="59">"nbMaxFindHistoryReplace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4809" pos:column="87">_findHistory</name><op:operator pos:line="4809" pos:column="99">.</op:operator><name pos:line="4809" pos:column="100">_nbMaxFindHistoryReplace</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><op:operator pos:line="4811" pos:column="9">(</op:operator><call><name><name pos:line="4811" pos:column="10">findHistoryRoot</name><op:operator pos:line="4811" pos:column="25">-&gt;</op:operator><name pos:line="4811" pos:column="27">ToElement</name></name><argument_list pos:line="4811" pos:column="36">()</argument_list></call><op:operator pos:line="4811" pos:column="38">)</op:operator><op:operator pos:line="4811" pos:column="39">-&gt;</op:operator><call><name pos:line="4811" pos:column="41">SetAttribute</name><argument_list pos:line="4811" pos:column="53">(<argument><expr><call><name pos:line="4811" pos:column="54">TEXT</name><argument_list pos:line="4811" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4811" pos:column="59">"matchWord"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,				<argument><expr><name><name pos:line="4811" pos:column="97">_findHistory</name><op:operator pos:line="4811" pos:column="109">.</op:operator><name pos:line="4811" pos:column="110">_isMatchWord</name></name><op:operator pos:line="4811" pos:column="122">?</op:operator><call><name pos:line="4811" pos:column="123">TEXT</name><argument_list pos:line="4811" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="4811" pos:column="128">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4811" pos:column="134">:</op:operator><call><name pos:line="4811" pos:column="135">TEXT</name><argument_list pos:line="4811" pos:column="139">(<argument><expr><lit:literal type="string" pos:line="4811" pos:column="140">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4812" pos:column="9">(</op:operator><call><name><name pos:line="4812" pos:column="10">findHistoryRoot</name><op:operator pos:line="4812" pos:column="25">-&gt;</op:operator><name pos:line="4812" pos:column="27">ToElement</name></name><argument_list pos:line="4812" pos:column="36">()</argument_list></call><op:operator pos:line="4812" pos:column="38">)</op:operator><op:operator pos:line="4812" pos:column="39">-&gt;</op:operator><call><name pos:line="4812" pos:column="41">SetAttribute</name><argument_list pos:line="4812" pos:column="53">(<argument><expr><call><name pos:line="4812" pos:column="54">TEXT</name><argument_list pos:line="4812" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4812" pos:column="59">"matchCase"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,				<argument><expr><name><name pos:line="4812" pos:column="97">_findHistory</name><op:operator pos:line="4812" pos:column="109">.</op:operator><name pos:line="4812" pos:column="110">_isMatchCase</name></name><op:operator pos:line="4812" pos:column="122">?</op:operator><call><name pos:line="4812" pos:column="123">TEXT</name><argument_list pos:line="4812" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="4812" pos:column="128">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4812" pos:column="134">:</op:operator><call><name pos:line="4812" pos:column="135">TEXT</name><argument_list pos:line="4812" pos:column="139">(<argument><expr><lit:literal type="string" pos:line="4812" pos:column="140">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4813" pos:column="9">(</op:operator><call><name><name pos:line="4813" pos:column="10">findHistoryRoot</name><op:operator pos:line="4813" pos:column="25">-&gt;</op:operator><name pos:line="4813" pos:column="27">ToElement</name></name><argument_list pos:line="4813" pos:column="36">()</argument_list></call><op:operator pos:line="4813" pos:column="38">)</op:operator><op:operator pos:line="4813" pos:column="39">-&gt;</op:operator><call><name pos:line="4813" pos:column="41">SetAttribute</name><argument_list pos:line="4813" pos:column="53">(<argument><expr><call><name pos:line="4813" pos:column="54">TEXT</name><argument_list pos:line="4813" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4813" pos:column="59">"wrap"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,					<argument><expr><name><name pos:line="4813" pos:column="105">_findHistory</name><op:operator pos:line="4813" pos:column="117">.</op:operator><name pos:line="4813" pos:column="118">_isWrap</name></name><op:operator pos:line="4813" pos:column="125">?</op:operator><call><name pos:line="4813" pos:column="126">TEXT</name><argument_list pos:line="4813" pos:column="130">(<argument><expr><lit:literal type="string" pos:line="4813" pos:column="131">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4813" pos:column="137">:</op:operator><call><name pos:line="4813" pos:column="138">TEXT</name><argument_list pos:line="4813" pos:column="142">(<argument><expr><lit:literal type="string" pos:line="4813" pos:column="143">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4814" pos:column="9">(</op:operator><call><name><name pos:line="4814" pos:column="10">findHistoryRoot</name><op:operator pos:line="4814" pos:column="25">-&gt;</op:operator><name pos:line="4814" pos:column="27">ToElement</name></name><argument_list pos:line="4814" pos:column="36">()</argument_list></call><op:operator pos:line="4814" pos:column="38">)</op:operator><op:operator pos:line="4814" pos:column="39">-&gt;</op:operator><call><name pos:line="4814" pos:column="41">SetAttribute</name><argument_list pos:line="4814" pos:column="53">(<argument><expr><call><name pos:line="4814" pos:column="54">TEXT</name><argument_list pos:line="4814" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4814" pos:column="59">"directionDown"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,			<argument><expr><name><name pos:line="4814" pos:column="97">_findHistory</name><op:operator pos:line="4814" pos:column="109">.</op:operator><name pos:line="4814" pos:column="110">_isDirectionDown</name></name><op:operator pos:line="4814" pos:column="126">?</op:operator><call><name pos:line="4814" pos:column="127">TEXT</name><argument_list pos:line="4814" pos:column="131">(<argument><expr><lit:literal type="string" pos:line="4814" pos:column="132">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4814" pos:column="138">:</op:operator><call><name pos:line="4814" pos:column="139">TEXT</name><argument_list pos:line="4814" pos:column="143">(<argument><expr><lit:literal type="string" pos:line="4814" pos:column="144">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><op:operator pos:line="4816" pos:column="9">(</op:operator><call><name><name pos:line="4816" pos:column="10">findHistoryRoot</name><op:operator pos:line="4816" pos:column="25">-&gt;</op:operator><name pos:line="4816" pos:column="27">ToElement</name></name><argument_list pos:line="4816" pos:column="36">()</argument_list></call><op:operator pos:line="4816" pos:column="38">)</op:operator><op:operator pos:line="4816" pos:column="39">-&gt;</op:operator><call><name pos:line="4816" pos:column="41">SetAttribute</name><argument_list pos:line="4816" pos:column="53">(<argument><expr><call><name pos:line="4816" pos:column="54">TEXT</name><argument_list pos:line="4816" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4816" pos:column="59">"fifRecuisive"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,			<argument><expr><name><name pos:line="4816" pos:column="97">_findHistory</name><op:operator pos:line="4816" pos:column="109">.</op:operator><name pos:line="4816" pos:column="110">_isFifRecuisive</name></name><op:operator pos:line="4816" pos:column="125">?</op:operator><call><name pos:line="4816" pos:column="126">TEXT</name><argument_list pos:line="4816" pos:column="130">(<argument><expr><lit:literal type="string" pos:line="4816" pos:column="131">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4816" pos:column="137">:</op:operator><call><name pos:line="4816" pos:column="138">TEXT</name><argument_list pos:line="4816" pos:column="142">(<argument><expr><lit:literal type="string" pos:line="4816" pos:column="143">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4817" pos:column="9">(</op:operator><call><name><name pos:line="4817" pos:column="10">findHistoryRoot</name><op:operator pos:line="4817" pos:column="25">-&gt;</op:operator><name pos:line="4817" pos:column="27">ToElement</name></name><argument_list pos:line="4817" pos:column="36">()</argument_list></call><op:operator pos:line="4817" pos:column="38">)</op:operator><op:operator pos:line="4817" pos:column="39">-&gt;</op:operator><call><name pos:line="4817" pos:column="41">SetAttribute</name><argument_list pos:line="4817" pos:column="53">(<argument><expr><call><name pos:line="4817" pos:column="54">TEXT</name><argument_list pos:line="4817" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4817" pos:column="59">"fifInHiddenFolder"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,		<argument><expr><name><name pos:line="4817" pos:column="89">_findHistory</name><op:operator pos:line="4817" pos:column="101">.</op:operator><name pos:line="4817" pos:column="102">_isFifInHiddenFolder</name></name><op:operator pos:line="4817" pos:column="122">?</op:operator><call><name pos:line="4817" pos:column="123">TEXT</name><argument_list pos:line="4817" pos:column="127">(<argument><expr><lit:literal type="string" pos:line="4817" pos:column="128">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4817" pos:column="134">:</op:operator><call><name pos:line="4817" pos:column="135">TEXT</name><argument_list pos:line="4817" pos:column="139">(<argument><expr><lit:literal type="string" pos:line="4817" pos:column="140">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4818" pos:column="9">(</op:operator><call><name><name pos:line="4818" pos:column="10">findHistoryRoot</name><op:operator pos:line="4818" pos:column="25">-&gt;</op:operator><name pos:line="4818" pos:column="27">ToElement</name></name><argument_list pos:line="4818" pos:column="36">()</argument_list></call><op:operator pos:line="4818" pos:column="38">)</op:operator><op:operator pos:line="4818" pos:column="39">-&gt;</op:operator><call><name pos:line="4818" pos:column="41">SetAttribute</name><argument_list pos:line="4818" pos:column="53">(<argument><expr><call><name pos:line="4818" pos:column="54">TEXT</name><argument_list pos:line="4818" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4818" pos:column="59">"dlgAlwaysVisible"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,		<argument><expr><name><name pos:line="4818" pos:column="89">_findHistory</name><op:operator pos:line="4818" pos:column="101">.</op:operator><name pos:line="4818" pos:column="102">_isDlgAlwaysVisible</name></name><op:operator pos:line="4818" pos:column="121">?</op:operator><call><name pos:line="4818" pos:column="122">TEXT</name><argument_list pos:line="4818" pos:column="126">(<argument><expr><lit:literal type="string" pos:line="4818" pos:column="127">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4818" pos:column="133">:</op:operator><call><name pos:line="4818" pos:column="134">TEXT</name><argument_list pos:line="4818" pos:column="138">(<argument><expr><lit:literal type="string" pos:line="4818" pos:column="139">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4819" pos:column="9">(</op:operator><call><name><name pos:line="4819" pos:column="10">findHistoryRoot</name><op:operator pos:line="4819" pos:column="25">-&gt;</op:operator><name pos:line="4819" pos:column="27">ToElement</name></name><argument_list pos:line="4819" pos:column="36">()</argument_list></call><op:operator pos:line="4819" pos:column="38">)</op:operator><op:operator pos:line="4819" pos:column="39">-&gt;</op:operator><call><name pos:line="4819" pos:column="41">SetAttribute</name><argument_list pos:line="4819" pos:column="53">(<argument><expr><call><name pos:line="4819" pos:column="54">TEXT</name><argument_list pos:line="4819" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4819" pos:column="59">"fifFilterFollowsDoc"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,	<argument><expr><name><name pos:line="4819" pos:column="89">_findHistory</name><op:operator pos:line="4819" pos:column="101">.</op:operator><name pos:line="4819" pos:column="102">_isFilterFollowDoc</name></name><op:operator pos:line="4819" pos:column="120">?</op:operator><call><name pos:line="4819" pos:column="121">TEXT</name><argument_list pos:line="4819" pos:column="125">(<argument><expr><lit:literal type="string" pos:line="4819" pos:column="126">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4819" pos:column="132">:</op:operator><call><name pos:line="4819" pos:column="133">TEXT</name><argument_list pos:line="4819" pos:column="137">(<argument><expr><lit:literal type="string" pos:line="4819" pos:column="138">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4820" pos:column="9">(</op:operator><call><name><name pos:line="4820" pos:column="10">findHistoryRoot</name><op:operator pos:line="4820" pos:column="25">-&gt;</op:operator><name pos:line="4820" pos:column="27">ToElement</name></name><argument_list pos:line="4820" pos:column="36">()</argument_list></call><op:operator pos:line="4820" pos:column="38">)</op:operator><op:operator pos:line="4820" pos:column="39">-&gt;</op:operator><call><name pos:line="4820" pos:column="41">SetAttribute</name><argument_list pos:line="4820" pos:column="53">(<argument><expr><call><name pos:line="4820" pos:column="54">TEXT</name><argument_list pos:line="4820" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4820" pos:column="59">"fifFolderFollowsDoc"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,	<argument><expr><name><name pos:line="4820" pos:column="89">_findHistory</name><op:operator pos:line="4820" pos:column="101">.</op:operator><name pos:line="4820" pos:column="102">_isFolderFollowDoc</name></name><op:operator pos:line="4820" pos:column="120">?</op:operator><call><name pos:line="4820" pos:column="121">TEXT</name><argument_list pos:line="4820" pos:column="125">(<argument><expr><lit:literal type="string" pos:line="4820" pos:column="126">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4820" pos:column="132">:</op:operator><call><name pos:line="4820" pos:column="133">TEXT</name><argument_list pos:line="4820" pos:column="137">(<argument><expr><lit:literal type="string" pos:line="4820" pos:column="138">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><op:operator pos:line="4822" pos:column="9">(</op:operator><call><name><name pos:line="4822" pos:column="10">findHistoryRoot</name><op:operator pos:line="4822" pos:column="25">-&gt;</op:operator><name pos:line="4822" pos:column="27">ToElement</name></name><argument_list pos:line="4822" pos:column="36">()</argument_list></call><op:operator pos:line="4822" pos:column="38">)</op:operator><op:operator pos:line="4822" pos:column="39">-&gt;</op:operator><call><name pos:line="4822" pos:column="41">SetAttribute</name><argument_list pos:line="4822" pos:column="53">(<argument><expr><call><name pos:line="4822" pos:column="54">TEXT</name><argument_list pos:line="4822" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4822" pos:column="59">"searchMode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4822" pos:column="74">_findHistory</name><op:operator pos:line="4822" pos:column="86">.</op:operator><name pos:line="4822" pos:column="87">_searchMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4823" pos:column="9">(</op:operator><call><name><name pos:line="4823" pos:column="10">findHistoryRoot</name><op:operator pos:line="4823" pos:column="25">-&gt;</op:operator><name pos:line="4823" pos:column="27">ToElement</name></name><argument_list pos:line="4823" pos:column="36">()</argument_list></call><op:operator pos:line="4823" pos:column="38">)</op:operator><op:operator pos:line="4823" pos:column="39">-&gt;</op:operator><call><name pos:line="4823" pos:column="41">SetAttribute</name><argument_list pos:line="4823" pos:column="53">(<argument><expr><call><name pos:line="4823" pos:column="54">TEXT</name><argument_list pos:line="4823" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4823" pos:column="59">"transparencyMode"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4823" pos:column="80">_findHistory</name><op:operator pos:line="4823" pos:column="92">.</op:operator><name pos:line="4823" pos:column="93">_transparencyMode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4824" pos:column="9">(</op:operator><call><name><name pos:line="4824" pos:column="10">findHistoryRoot</name><op:operator pos:line="4824" pos:column="25">-&gt;</op:operator><name pos:line="4824" pos:column="27">ToElement</name></name><argument_list pos:line="4824" pos:column="36">()</argument_list></call><op:operator pos:line="4824" pos:column="38">)</op:operator><op:operator pos:line="4824" pos:column="39">-&gt;</op:operator><call><name pos:line="4824" pos:column="41">SetAttribute</name><argument_list pos:line="4824" pos:column="53">(<argument><expr><call><name pos:line="4824" pos:column="54">TEXT</name><argument_list pos:line="4824" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4824" pos:column="59">"transparency"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4824" pos:column="76">_findHistory</name><op:operator pos:line="4824" pos:column="88">.</op:operator><name pos:line="4824" pos:column="89">_transparency</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="4825" pos:column="9">(</op:operator><call><name><name pos:line="4825" pos:column="10">findHistoryRoot</name><op:operator pos:line="4825" pos:column="25">-&gt;</op:operator><name pos:line="4825" pos:column="27">ToElement</name></name><argument_list pos:line="4825" pos:column="36">()</argument_list></call><op:operator pos:line="4825" pos:column="38">)</op:operator><op:operator pos:line="4825" pos:column="39">-&gt;</op:operator><call><name pos:line="4825" pos:column="41">SetAttribute</name><argument_list pos:line="4825" pos:column="53">(<argument><expr><call><name pos:line="4825" pos:column="54">TEXT</name><argument_list pos:line="4825" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="4825" pos:column="59">"dotMatchesNewline"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,		<argument><expr><name><name pos:line="4825" pos:column="89">_findHistory</name><op:operator pos:line="4825" pos:column="101">.</op:operator><name pos:line="4825" pos:column="102">_dotMatchesNewline</name></name><op:operator pos:line="4825" pos:column="120">?</op:operator><call><name pos:line="4825" pos:column="121">TEXT</name><argument_list pos:line="4825" pos:column="125">(<argument><expr><lit:literal type="string" pos:line="4825" pos:column="126">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4825" pos:column="132">:</op:operator><call><name pos:line="4825" pos:column="133">TEXT</name><argument_list pos:line="4825" pos:column="137">(<argument><expr><lit:literal type="string" pos:line="4825" pos:column="138">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="4827" pos:column="9">TiXmlElement</name></type> <name pos:line="4827" pos:column="22">hist_element</name><argument_list pos:line="4827" pos:column="34">(<argument><expr><call><name pos:line="4827" pos:column="35">TEXT</name><argument_list pos:line="4827" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="4827" pos:column="40">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="4829" pos:column="9">hist_element</name><op:operator pos:line="4829" pos:column="21">.</op:operator><name pos:line="4829" pos:column="22">SetValue</name></name><argument_list pos:line="4829" pos:column="30">(<argument><expr><call><name pos:line="4829" pos:column="31">TEXT</name><argument_list pos:line="4829" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4829" pos:column="36">"Path"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:line="4830" pos:column="5">for (<init><decl><type><name pos:line="4830" pos:column="10">size_t</name></type> <name pos:line="4830" pos:column="17">i</name> <init pos:line="4830" pos:column="19">= <expr><lit:literal type="number" pos:line="4830" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4830" pos:column="24">i</name> <op:operator pos:line="4830" pos:column="26">&lt;</op:operator> <call><name><name pos:line="4830" pos:column="28">_findHistory</name><op:operator pos:line="4830" pos:column="40">.</op:operator><name pos:line="4830" pos:column="41">_findHistoryPaths</name><op:operator pos:line="4830" pos:column="58">.</op:operator><name pos:line="4830" pos:column="59">size</name></name><argument_list pos:line="4830" pos:column="63">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4830" pos:column="67">i</name><op:operator pos:line="4830" pos:column="68">++</op:operator></expr></incr>)
	<block pos:line="4831" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="4832" pos:column="17">(</op:operator><call><name><name pos:line="4832" pos:column="18">hist_element</name><op:operator pos:line="4832" pos:column="30">.</op:operator><name pos:line="4832" pos:column="31">ToElement</name></name><argument_list pos:line="4832" pos:column="40">()</argument_list></call><op:operator pos:line="4832" pos:column="42">)</op:operator><op:operator pos:line="4832" pos:column="43">-&gt;</op:operator><call><name pos:line="4832" pos:column="45">SetAttribute</name><argument_list pos:line="4832" pos:column="57">(<argument><expr><call><name pos:line="4832" pos:column="58">TEXT</name><argument_list pos:line="4832" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="4832" pos:column="63">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4832" pos:column="72">_findHistory</name><op:operator pos:line="4832" pos:column="84">.</op:operator><name pos:line="4832" pos:column="85">_findHistoryPaths</name><index pos:line="4832" pos:column="102">[<expr><name pos:line="4832" pos:column="103">i</name></expr>]</index></name><op:operator pos:line="4832" pos:column="105">.</op:operator><call><name pos:line="4832" pos:column="106">c_str</name><argument_list pos:line="4832" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4833" pos:column="17">findHistoryRoot</name><op:operator pos:line="4833" pos:column="32">-&gt;</op:operator><name pos:line="4833" pos:column="34">InsertEndChild</name></name><argument_list pos:line="4833" pos:column="48">(<argument><expr><name pos:line="4833" pos:column="49">hist_element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="4836" pos:column="9">hist_element</name><op:operator pos:line="4836" pos:column="21">.</op:operator><name pos:line="4836" pos:column="22">SetValue</name></name><argument_list pos:line="4836" pos:column="30">(<argument><expr><call><name pos:line="4836" pos:column="31">TEXT</name><argument_list pos:line="4836" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4836" pos:column="36">"Filter"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="4837" pos:column="9">for (<init><decl><type><name pos:line="4837" pos:column="14">size_t</name></type> <name pos:line="4837" pos:column="21">i</name> <init pos:line="4837" pos:column="23">= <expr><lit:literal type="number" pos:line="4837" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4837" pos:column="28">i</name> <op:operator pos:line="4837" pos:column="30">&lt;</op:operator> <call><name><name pos:line="4837" pos:column="32">_findHistory</name><op:operator pos:line="4837" pos:column="44">.</op:operator><name pos:line="4837" pos:column="45">_findHistoryFilters</name><op:operator pos:line="4837" pos:column="64">.</op:operator><name pos:line="4837" pos:column="65">size</name></name><argument_list pos:line="4837" pos:column="69">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4837" pos:column="73">i</name><op:operator pos:line="4837" pos:column="74">++</op:operator></expr></incr>)
	<block pos:line="4838" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="4839" pos:column="17">(</op:operator><call><name><name pos:line="4839" pos:column="18">hist_element</name><op:operator pos:line="4839" pos:column="30">.</op:operator><name pos:line="4839" pos:column="31">ToElement</name></name><argument_list pos:line="4839" pos:column="40">()</argument_list></call><op:operator pos:line="4839" pos:column="42">)</op:operator><op:operator pos:line="4839" pos:column="43">-&gt;</op:operator><call><name pos:line="4839" pos:column="45">SetAttribute</name><argument_list pos:line="4839" pos:column="57">(<argument><expr><call><name pos:line="4839" pos:column="58">TEXT</name><argument_list pos:line="4839" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="4839" pos:column="63">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4839" pos:column="72">_findHistory</name><op:operator pos:line="4839" pos:column="84">.</op:operator><name pos:line="4839" pos:column="85">_findHistoryFilters</name><index pos:line="4839" pos:column="104">[<expr><name pos:line="4839" pos:column="105">i</name></expr>]</index></name><op:operator pos:line="4839" pos:column="107">.</op:operator><call><name pos:line="4839" pos:column="108">c_str</name><argument_list pos:line="4839" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4840" pos:column="17">findHistoryRoot</name><op:operator pos:line="4840" pos:column="32">-&gt;</op:operator><name pos:line="4840" pos:column="34">InsertEndChild</name></name><argument_list pos:line="4840" pos:column="48">(<argument><expr><name pos:line="4840" pos:column="49">hist_element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="4843" pos:column="9">hist_element</name><op:operator pos:line="4843" pos:column="21">.</op:operator><name pos:line="4843" pos:column="22">SetValue</name></name><argument_list pos:line="4843" pos:column="30">(<argument><expr><call><name pos:line="4843" pos:column="31">TEXT</name><argument_list pos:line="4843" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4843" pos:column="36">"Find"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="4844" pos:column="9">for (<init><decl><type><name pos:line="4844" pos:column="14">size_t</name></type> <name pos:line="4844" pos:column="21">i</name> <init pos:line="4844" pos:column="23">= <expr><lit:literal type="number" pos:line="4844" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4844" pos:column="28">i</name> <op:operator pos:line="4844" pos:column="30">&lt;</op:operator> <call><name><name pos:line="4844" pos:column="32">_findHistory</name><op:operator pos:line="4844" pos:column="44">.</op:operator><name pos:line="4844" pos:column="45">_findHistoryFinds</name><op:operator pos:line="4844" pos:column="62">.</op:operator><name pos:line="4844" pos:column="63">size</name></name><argument_list pos:line="4844" pos:column="67">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4844" pos:column="71">i</name><op:operator pos:line="4844" pos:column="72">++</op:operator></expr></incr>)
	<block pos:line="4845" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="4846" pos:column="17">(</op:operator><call><name><name pos:line="4846" pos:column="18">hist_element</name><op:operator pos:line="4846" pos:column="30">.</op:operator><name pos:line="4846" pos:column="31">ToElement</name></name><argument_list pos:line="4846" pos:column="40">()</argument_list></call><op:operator pos:line="4846" pos:column="42">)</op:operator><op:operator pos:line="4846" pos:column="43">-&gt;</op:operator><call><name pos:line="4846" pos:column="45">SetAttribute</name><argument_list pos:line="4846" pos:column="57">(<argument><expr><call><name pos:line="4846" pos:column="58">TEXT</name><argument_list pos:line="4846" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="4846" pos:column="63">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4846" pos:column="72">_findHistory</name><op:operator pos:line="4846" pos:column="84">.</op:operator><name pos:line="4846" pos:column="85">_findHistoryFinds</name><index pos:line="4846" pos:column="102">[<expr><name pos:line="4846" pos:column="103">i</name></expr>]</index></name><op:operator pos:line="4846" pos:column="105">.</op:operator><call><name pos:line="4846" pos:column="106">c_str</name><argument_list pos:line="4846" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4847" pos:column="17">findHistoryRoot</name><op:operator pos:line="4847" pos:column="32">-&gt;</op:operator><name pos:line="4847" pos:column="34">InsertEndChild</name></name><argument_list pos:line="4847" pos:column="48">(<argument><expr><name pos:line="4847" pos:column="49">hist_element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="4850" pos:column="9">hist_element</name><op:operator pos:line="4850" pos:column="21">.</op:operator><name pos:line="4850" pos:column="22">SetValue</name></name><argument_list pos:line="4850" pos:column="30">(<argument><expr><call><name pos:line="4850" pos:column="31">TEXT</name><argument_list pos:line="4850" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4850" pos:column="36">"Replace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="4851" pos:column="9">for (<init><decl><type><name pos:line="4851" pos:column="14">size_t</name></type> <name pos:line="4851" pos:column="21">i</name> <init pos:line="4851" pos:column="23">= <expr><lit:literal type="number" pos:line="4851" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="4851" pos:column="28">i</name> <op:operator pos:line="4851" pos:column="30">&lt;</op:operator> <call><name><name pos:line="4851" pos:column="32">_findHistory</name><op:operator pos:line="4851" pos:column="44">.</op:operator><name pos:line="4851" pos:column="45">_findHistoryReplaces</name><op:operator pos:line="4851" pos:column="65">.</op:operator><name pos:line="4851" pos:column="66">size</name></name><argument_list pos:line="4851" pos:column="70">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="4851" pos:column="74">i</name><op:operator pos:line="4851" pos:column="75">++</op:operator></expr></incr>)
	<block pos:line="4852" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="4853" pos:column="17">(</op:operator><call><name><name pos:line="4853" pos:column="18">hist_element</name><op:operator pos:line="4853" pos:column="30">.</op:operator><name pos:line="4853" pos:column="31">ToElement</name></name><argument_list pos:line="4853" pos:column="40">()</argument_list></call><op:operator pos:line="4853" pos:column="42">)</op:operator><op:operator pos:line="4853" pos:column="43">-&gt;</op:operator><call><name pos:line="4853" pos:column="45">SetAttribute</name><argument_list pos:line="4853" pos:column="57">(<argument><expr><call><name pos:line="4853" pos:column="58">TEXT</name><argument_list pos:line="4853" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="4853" pos:column="63">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4853" pos:column="72">_findHistory</name><op:operator pos:line="4853" pos:column="84">.</op:operator><name pos:line="4853" pos:column="85">_findHistoryReplaces</name><index pos:line="4853" pos:column="105">[<expr><name pos:line="4853" pos:column="106">i</name></expr>]</index></name><op:operator pos:line="4853" pos:column="108">.</op:operator><call><name pos:line="4853" pos:column="109">c_str</name><argument_list pos:line="4853" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4854" pos:column="17">findHistoryRoot</name><op:operator pos:line="4854" pos:column="32">-&gt;</op:operator><name pos:line="4854" pos:column="34">InsertEndChild</name></name><argument_list pos:line="4854" pos:column="48">(<argument><expr><name pos:line="4854" pos:column="49">hist_element</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<return pos:line="4857" pos:column="9">return <expr><lit:literal type="boolean" pos:line="4857" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="4860" pos:column="1">void</name></type> <name><name pos:line="4860" pos:column="6">NppParameters</name><op:operator pos:line="4860" pos:column="19">::</op:operator><name pos:line="4860" pos:column="21">insertDockingParamNode</name></name><parameter_list pos:line="4860" pos:column="43">(<param><decl><type><name pos:line="4860" pos:column="44">TiXmlNode</name> <type:modifier pos:line="4860" pos:column="54">*</type:modifier></type><name pos:line="4860" pos:column="55">GUIRoot</name></decl></param>)</parameter_list>
<block pos:line="4861" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4862" pos:column="9">TiXmlElement</name></type> <name pos:line="4862" pos:column="22">DMNode</name><argument_list pos:line="4862" pos:column="28">(<argument><expr><call><name pos:line="4862" pos:column="29">TEXT</name><argument_list pos:line="4862" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="4862" pos:column="34">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4863" pos:column="9">DMNode</name><op:operator pos:line="4863" pos:column="15">.</op:operator><name pos:line="4863" pos:column="16">SetAttribute</name></name><argument_list pos:line="4863" pos:column="28">(<argument><expr><call><name pos:line="4863" pos:column="29">TEXT</name><argument_list pos:line="4863" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="4863" pos:column="34">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="4863" pos:column="43">TEXT</name><argument_list pos:line="4863" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="4863" pos:column="48">"DockingManager"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4864" pos:column="9">DMNode</name><op:operator pos:line="4864" pos:column="15">.</op:operator><name pos:line="4864" pos:column="16">SetAttribute</name></name><argument_list pos:line="4864" pos:column="28">(<argument><expr><call><name pos:line="4864" pos:column="29">TEXT</name><argument_list pos:line="4864" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="4864" pos:column="34">"leftWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4864" pos:column="48">_nppGUI</name><op:operator pos:line="4864" pos:column="55">.</op:operator><name pos:line="4864" pos:column="56">_dockingData</name><op:operator pos:line="4864" pos:column="68">.</op:operator><name pos:line="4864" pos:column="69">_leftWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4865" pos:column="9">DMNode</name><op:operator pos:line="4865" pos:column="15">.</op:operator><name pos:line="4865" pos:column="16">SetAttribute</name></name><argument_list pos:line="4865" pos:column="28">(<argument><expr><call><name pos:line="4865" pos:column="29">TEXT</name><argument_list pos:line="4865" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="4865" pos:column="34">"rightWidth"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4865" pos:column="49">_nppGUI</name><op:operator pos:line="4865" pos:column="56">.</op:operator><name pos:line="4865" pos:column="57">_dockingData</name><op:operator pos:line="4865" pos:column="69">.</op:operator><name pos:line="4865" pos:column="70">_rightWidth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4866" pos:column="9">DMNode</name><op:operator pos:line="4866" pos:column="15">.</op:operator><name pos:line="4866" pos:column="16">SetAttribute</name></name><argument_list pos:line="4866" pos:column="28">(<argument><expr><call><name pos:line="4866" pos:column="29">TEXT</name><argument_list pos:line="4866" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="4866" pos:column="34">"topHeight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4866" pos:column="48">_nppGUI</name><op:operator pos:line="4866" pos:column="55">.</op:operator><name pos:line="4866" pos:column="56">_dockingData</name><op:operator pos:line="4866" pos:column="68">.</op:operator><name pos:line="4866" pos:column="69">_topHeight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4867" pos:column="9">DMNode</name><op:operator pos:line="4867" pos:column="15">.</op:operator><name pos:line="4867" pos:column="16">SetAttribute</name></name><argument_list pos:line="4867" pos:column="28">(<argument><expr><call><name pos:line="4867" pos:column="29">TEXT</name><argument_list pos:line="4867" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="4867" pos:column="34">"bottomHeight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4867" pos:column="51">_nppGUI</name><op:operator pos:line="4867" pos:column="58">.</op:operator><name pos:line="4867" pos:column="59">_dockingData</name><op:operator pos:line="4867" pos:column="71">.</op:operator><name pos:line="4867" pos:column="72">_bottomHight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<for pos:line="4869" pos:column="9">for (<init><decl><type><name pos:line="4869" pos:column="14">size_t</name></type> <name pos:line="4869" pos:column="21">i</name> <init pos:line="4869" pos:column="23">= <expr><lit:literal type="number" pos:line="4869" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4869" pos:column="29">i</name> <op:operator pos:line="4869" pos:column="31">&lt;</op:operator> <call><name><name pos:line="4869" pos:column="33">_nppGUI</name><op:operator pos:line="4869" pos:column="40">.</op:operator><name pos:line="4869" pos:column="41">_dockingData</name><op:operator pos:line="4869" pos:column="53">.</op:operator><name pos:line="4869" pos:column="54">_flaotingWindowInfo</name><op:operator pos:line="4869" pos:column="73">.</op:operator><name pos:line="4869" pos:column="74">size</name></name><argument_list pos:line="4869" pos:column="78">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="4869" pos:column="83">i</name><op:operator pos:line="4869" pos:column="84">++</op:operator></expr></incr>)
	<block pos:line="4870" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4871" pos:column="17">FloatingWindowInfo</name> <type:modifier pos:line="4871" pos:column="36">&amp;</type:modifier></type> <name pos:line="4871" pos:column="38">fwi</name> <init pos:line="4871" pos:column="42">= <expr><name><name pos:line="4871" pos:column="44">_nppGUI</name><op:operator pos:line="4871" pos:column="51">.</op:operator><name pos:line="4871" pos:column="52">_dockingData</name><op:operator pos:line="4871" pos:column="64">.</op:operator><name pos:line="4871" pos:column="65">_flaotingWindowInfo</name><index pos:line="4871" pos:column="84">[<expr><name pos:line="4871" pos:column="85">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4872" pos:column="17">TiXmlElement</name></type> <name pos:line="4872" pos:column="30">FWNode</name><argument_list pos:line="4872" pos:column="36">(<argument><expr><call><name pos:line="4872" pos:column="37">TEXT</name><argument_list pos:line="4872" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4872" pos:column="42">"FloatingWindow"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4873" pos:column="17">FWNode</name><op:operator pos:line="4873" pos:column="23">.</op:operator><name pos:line="4873" pos:column="24">SetAttribute</name></name><argument_list pos:line="4873" pos:column="36">(<argument><expr><call><name pos:line="4873" pos:column="37">TEXT</name><argument_list pos:line="4873" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4873" pos:column="42">"cont"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4873" pos:column="51">fwi</name><op:operator pos:line="4873" pos:column="54">.</op:operator><name pos:line="4873" pos:column="55">_cont</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4874" pos:column="17">FWNode</name><op:operator pos:line="4874" pos:column="23">.</op:operator><name pos:line="4874" pos:column="24">SetAttribute</name></name><argument_list pos:line="4874" pos:column="36">(<argument><expr><call><name pos:line="4874" pos:column="37">TEXT</name><argument_list pos:line="4874" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4874" pos:column="42">"x"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4874" pos:column="48">fwi</name><op:operator pos:line="4874" pos:column="51">.</op:operator><name pos:line="4874" pos:column="52">_pos</name><op:operator pos:line="4874" pos:column="56">.</op:operator><name pos:line="4874" pos:column="57">left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4875" pos:column="17">FWNode</name><op:operator pos:line="4875" pos:column="23">.</op:operator><name pos:line="4875" pos:column="24">SetAttribute</name></name><argument_list pos:line="4875" pos:column="36">(<argument><expr><call><name pos:line="4875" pos:column="37">TEXT</name><argument_list pos:line="4875" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4875" pos:column="42">"y"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4875" pos:column="48">fwi</name><op:operator pos:line="4875" pos:column="51">.</op:operator><name pos:line="4875" pos:column="52">_pos</name><op:operator pos:line="4875" pos:column="56">.</op:operator><name pos:line="4875" pos:column="57">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4876" pos:column="17">FWNode</name><op:operator pos:line="4876" pos:column="23">.</op:operator><name pos:line="4876" pos:column="24">SetAttribute</name></name><argument_list pos:line="4876" pos:column="36">(<argument><expr><call><name pos:line="4876" pos:column="37">TEXT</name><argument_list pos:line="4876" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4876" pos:column="42">"width"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4876" pos:column="52">fwi</name><op:operator pos:line="4876" pos:column="55">.</op:operator><name pos:line="4876" pos:column="56">_pos</name><op:operator pos:line="4876" pos:column="60">.</op:operator><name pos:line="4876" pos:column="61">right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4877" pos:column="17">FWNode</name><op:operator pos:line="4877" pos:column="23">.</op:operator><name pos:line="4877" pos:column="24">SetAttribute</name></name><argument_list pos:line="4877" pos:column="36">(<argument><expr><call><name pos:line="4877" pos:column="37">TEXT</name><argument_list pos:line="4877" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4877" pos:column="42">"height"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4877" pos:column="53">fwi</name><op:operator pos:line="4877" pos:column="56">.</op:operator><name pos:line="4877" pos:column="57">_pos</name><op:operator pos:line="4877" pos:column="61">.</op:operator><name pos:line="4877" pos:column="62">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="4879" pos:column="17">DMNode</name><op:operator pos:line="4879" pos:column="23">.</op:operator><name pos:line="4879" pos:column="24">InsertEndChild</name></name><argument_list pos:line="4879" pos:column="38">(<argument><expr><name pos:line="4879" pos:column="39">FWNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<for pos:line="4882" pos:column="9">for (<init><decl><type><name pos:line="4882" pos:column="14">size_t</name></type> <name pos:line="4882" pos:column="21">i</name> <init pos:line="4882" pos:column="23">= <expr><lit:literal type="number" pos:line="4882" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4882" pos:column="29">i</name> <op:operator pos:line="4882" pos:column="31">&lt;</op:operator> <call><name><name pos:line="4882" pos:column="33">_nppGUI</name><op:operator pos:line="4882" pos:column="40">.</op:operator><name pos:line="4882" pos:column="41">_dockingData</name><op:operator pos:line="4882" pos:column="53">.</op:operator><name pos:line="4882" pos:column="54">_pluginDockInfo</name><op:operator pos:line="4882" pos:column="69">.</op:operator><name pos:line="4882" pos:column="70">size</name></name><argument_list pos:line="4882" pos:column="74">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="4882" pos:column="79">i</name><op:operator pos:line="4882" pos:column="80">++</op:operator></expr></incr>)
	<block pos:line="4883" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4884" pos:column="17">PluginDlgDockingInfo</name> <type:modifier pos:line="4884" pos:column="38">&amp;</type:modifier></type> <name pos:line="4884" pos:column="40">pdi</name> <init pos:line="4884" pos:column="44">= <expr><name><name pos:line="4884" pos:column="46">_nppGUI</name><op:operator pos:line="4884" pos:column="53">.</op:operator><name pos:line="4884" pos:column="54">_dockingData</name><op:operator pos:line="4884" pos:column="66">.</op:operator><name pos:line="4884" pos:column="67">_pluginDockInfo</name><index pos:line="4884" pos:column="82">[<expr><name pos:line="4884" pos:column="83">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4885" pos:column="17">TiXmlElement</name></type> <name pos:line="4885" pos:column="30">PDNode</name><argument_list pos:line="4885" pos:column="36">(<argument><expr><call><name pos:line="4885" pos:column="37">TEXT</name><argument_list pos:line="4885" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4885" pos:column="42">"PluginDlg"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4886" pos:column="17">PDNode</name><op:operator pos:line="4886" pos:column="23">.</op:operator><name pos:line="4886" pos:column="24">SetAttribute</name></name><argument_list pos:line="4886" pos:column="36">(<argument><expr><call><name pos:line="4886" pos:column="37">TEXT</name><argument_list pos:line="4886" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4886" pos:column="42">"pluginName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4886" pos:column="57">pdi</name><op:operator pos:line="4886" pos:column="60">.</op:operator><name pos:line="4886" pos:column="61">_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4887" pos:column="17">PDNode</name><op:operator pos:line="4887" pos:column="23">.</op:operator><name pos:line="4887" pos:column="24">SetAttribute</name></name><argument_list pos:line="4887" pos:column="36">(<argument><expr><call><name pos:line="4887" pos:column="37">TEXT</name><argument_list pos:line="4887" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4887" pos:column="42">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4887" pos:column="49">pdi</name><op:operator pos:line="4887" pos:column="52">.</op:operator><name pos:line="4887" pos:column="53">_internalID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4888" pos:column="17">PDNode</name><op:operator pos:line="4888" pos:column="23">.</op:operator><name pos:line="4888" pos:column="24">SetAttribute</name></name><argument_list pos:line="4888" pos:column="36">(<argument><expr><call><name pos:line="4888" pos:column="37">TEXT</name><argument_list pos:line="4888" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4888" pos:column="42">"curr"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4888" pos:column="51">pdi</name><op:operator pos:line="4888" pos:column="54">.</op:operator><name pos:line="4888" pos:column="55">_currContainer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4889" pos:column="17">PDNode</name><op:operator pos:line="4889" pos:column="23">.</op:operator><name pos:line="4889" pos:column="24">SetAttribute</name></name><argument_list pos:line="4889" pos:column="36">(<argument><expr><call><name pos:line="4889" pos:column="37">TEXT</name><argument_list pos:line="4889" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4889" pos:column="42">"prev"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4889" pos:column="51">pdi</name><op:operator pos:line="4889" pos:column="54">.</op:operator><name pos:line="4889" pos:column="55">_prevContainer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4890" pos:column="17">PDNode</name><op:operator pos:line="4890" pos:column="23">.</op:operator><name pos:line="4890" pos:column="24">SetAttribute</name></name><argument_list pos:line="4890" pos:column="36">(<argument><expr><call><name pos:line="4890" pos:column="37">TEXT</name><argument_list pos:line="4890" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4890" pos:column="42">"isVisible"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4890" pos:column="56">pdi</name><op:operator pos:line="4890" pos:column="59">.</op:operator><name pos:line="4890" pos:column="60">_isVisible</name></name><op:operator pos:line="4890" pos:column="70">?</op:operator><call><name pos:line="4890" pos:column="71">TEXT</name><argument_list pos:line="4890" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="4890" pos:column="76">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4890" pos:column="82">:</op:operator><call><name pos:line="4890" pos:column="83">TEXT</name><argument_list pos:line="4890" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="4890" pos:column="88">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="4892" pos:column="17">DMNode</name><op:operator pos:line="4892" pos:column="23">.</op:operator><name pos:line="4892" pos:column="24">InsertEndChild</name></name><argument_list pos:line="4892" pos:column="38">(<argument><expr><name pos:line="4892" pos:column="39">PDNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<for pos:line="4895" pos:column="9">for (<init><decl><type><name pos:line="4895" pos:column="14">size_t</name></type> <name pos:line="4895" pos:column="21">i</name> <init pos:line="4895" pos:column="23">= <expr><lit:literal type="number" pos:line="4895" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4895" pos:column="29">i</name> <op:operator pos:line="4895" pos:column="31">&lt;</op:operator> <call><name><name pos:line="4895" pos:column="33">_nppGUI</name><op:operator pos:line="4895" pos:column="40">.</op:operator><name pos:line="4895" pos:column="41">_dockingData</name><op:operator pos:line="4895" pos:column="53">.</op:operator><name pos:line="4895" pos:column="54">_containerTabInfo</name><op:operator pos:line="4895" pos:column="71">.</op:operator><name pos:line="4895" pos:column="72">size</name></name><argument_list pos:line="4895" pos:column="76">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="4895" pos:column="81">i</name><op:operator pos:line="4895" pos:column="82">++</op:operator></expr></incr>)
	<block pos:line="4896" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4897" pos:column="17">ContainerTabInfo</name> <type:modifier pos:line="4897" pos:column="34">&amp;</type:modifier></type> <name pos:line="4897" pos:column="36">cti</name> <init pos:line="4897" pos:column="40">= <expr><name><name pos:line="4897" pos:column="42">_nppGUI</name><op:operator pos:line="4897" pos:column="49">.</op:operator><name pos:line="4897" pos:column="50">_dockingData</name><op:operator pos:line="4897" pos:column="62">.</op:operator><name pos:line="4897" pos:column="63">_containerTabInfo</name><index pos:line="4897" pos:column="80">[<expr><name pos:line="4897" pos:column="81">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4898" pos:column="17">TiXmlElement</name></type> <name pos:line="4898" pos:column="30">CTNode</name><argument_list pos:line="4898" pos:column="36">(<argument><expr><call><name pos:line="4898" pos:column="37">TEXT</name><argument_list pos:line="4898" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4898" pos:column="42">"ActiveTabs"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="4899" pos:column="17">CTNode</name><op:operator pos:line="4899" pos:column="23">.</op:operator><name pos:line="4899" pos:column="24">SetAttribute</name></name><argument_list pos:line="4899" pos:column="36">(<argument><expr><call><name pos:line="4899" pos:column="37">TEXT</name><argument_list pos:line="4899" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4899" pos:column="42">"cont"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4899" pos:column="51">cti</name><op:operator pos:line="4899" pos:column="54">.</op:operator><name pos:line="4899" pos:column="55">_cont</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4900" pos:column="17">CTNode</name><op:operator pos:line="4900" pos:column="23">.</op:operator><name pos:line="4900" pos:column="24">SetAttribute</name></name><argument_list pos:line="4900" pos:column="36">(<argument><expr><call><name pos:line="4900" pos:column="37">TEXT</name><argument_list pos:line="4900" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="4900" pos:column="42">"activeTab"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4900" pos:column="56">cti</name><op:operator pos:line="4900" pos:column="59">.</op:operator><name pos:line="4900" pos:column="60">_activeTab</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="4901" pos:column="17">DMNode</name><op:operator pos:line="4901" pos:column="23">.</op:operator><name pos:line="4901" pos:column="24">InsertEndChild</name></name><argument_list pos:line="4901" pos:column="38">(<argument><expr><name pos:line="4901" pos:column="39">CTNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="4904" pos:column="9">GUIRoot</name><op:operator pos:line="4904" pos:column="16">-&gt;</op:operator><name pos:line="4904" pos:column="18">InsertEndChild</name></name><argument_list pos:line="4904" pos:column="32">(<argument><expr><name pos:line="4904" pos:column="33">DMNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4907" pos:column="1">void</name></type> <name><name pos:line="4907" pos:column="6">NppParameters</name><op:operator pos:line="4907" pos:column="19">::</op:operator><name pos:line="4907" pos:column="21">writePrintSetting</name></name><parameter_list pos:line="4907" pos:column="38">(<param><decl><type><name pos:line="4907" pos:column="39">TiXmlElement</name> <type:modifier pos:line="4907" pos:column="52">*</type:modifier></type><name pos:line="4907" pos:column="53">element</name></decl></param>)</parameter_list>
<block pos:line="4908" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4909" pos:column="9">const</specifier> <name pos:line="4909" pos:column="15">TCHAR</name> <type:modifier pos:line="4909" pos:column="21">*</type:modifier></type><name pos:line="4909" pos:column="22">pStr</name> <init pos:line="4909" pos:column="27">= <expr><name><name pos:line="4909" pos:column="29">_nppGUI</name><op:operator pos:line="4909" pos:column="36">.</op:operator><name pos:line="4909" pos:column="37">_printSettings</name><op:operator pos:line="4909" pos:column="51">.</op:operator><name pos:line="4909" pos:column="52">_printLineNumber</name></name><op:operator pos:line="4909" pos:column="68">?</op:operator><call><name pos:line="4909" pos:column="69">TEXT</name><argument_list pos:line="4909" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="4909" pos:column="74">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4909" pos:column="80">:</op:operator><call><name pos:line="4909" pos:column="81">TEXT</name><argument_list pos:line="4909" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="4909" pos:column="86">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4910" pos:column="9">element</name><op:operator pos:line="4910" pos:column="16">-&gt;</op:operator><name pos:line="4910" pos:column="18">SetAttribute</name></name><argument_list pos:line="4910" pos:column="30">(<argument><expr><call><name pos:line="4910" pos:column="31">TEXT</name><argument_list pos:line="4910" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4910" pos:column="36">"lineNumber"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4910" pos:column="51">pStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="4912" pos:column="9">element</name><op:operator pos:line="4912" pos:column="16">-&gt;</op:operator><name pos:line="4912" pos:column="18">SetAttribute</name></name><argument_list pos:line="4912" pos:column="30">(<argument><expr><call><name pos:line="4912" pos:column="31">TEXT</name><argument_list pos:line="4912" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4912" pos:column="36">"printOption"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4912" pos:column="52">_nppGUI</name><op:operator pos:line="4912" pos:column="59">.</op:operator><name pos:line="4912" pos:column="60">_printSettings</name><op:operator pos:line="4912" pos:column="74">.</op:operator><name pos:line="4912" pos:column="75">_printOption</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="4914" pos:column="9">element</name><op:operator pos:line="4914" pos:column="16">-&gt;</op:operator><name pos:line="4914" pos:column="18">SetAttribute</name></name><argument_list pos:line="4914" pos:column="30">(<argument><expr><call><name pos:line="4914" pos:column="31">TEXT</name><argument_list pos:line="4914" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4914" pos:column="36">"headerLeft"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4914" pos:column="51">_nppGUI</name><op:operator pos:line="4914" pos:column="58">.</op:operator><name pos:line="4914" pos:column="59">_printSettings</name><op:operator pos:line="4914" pos:column="73">.</op:operator><name pos:line="4914" pos:column="74">_headerLeft</name><op:operator pos:line="4914" pos:column="85">.</op:operator><name pos:line="4914" pos:column="86">c_str</name></name><argument_list pos:line="4914" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4915" pos:column="9">element</name><op:operator pos:line="4915" pos:column="16">-&gt;</op:operator><name pos:line="4915" pos:column="18">SetAttribute</name></name><argument_list pos:line="4915" pos:column="30">(<argument><expr><call><name pos:line="4915" pos:column="31">TEXT</name><argument_list pos:line="4915" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4915" pos:column="36">"headerMiddle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4915" pos:column="53">_nppGUI</name><op:operator pos:line="4915" pos:column="60">.</op:operator><name pos:line="4915" pos:column="61">_printSettings</name><op:operator pos:line="4915" pos:column="75">.</op:operator><name pos:line="4915" pos:column="76">_headerMiddle</name><op:operator pos:line="4915" pos:column="89">.</op:operator><name pos:line="4915" pos:column="90">c_str</name></name><argument_list pos:line="4915" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4916" pos:column="9">element</name><op:operator pos:line="4916" pos:column="16">-&gt;</op:operator><name pos:line="4916" pos:column="18">SetAttribute</name></name><argument_list pos:line="4916" pos:column="30">(<argument><expr><call><name pos:line="4916" pos:column="31">TEXT</name><argument_list pos:line="4916" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4916" pos:column="36">"headerRight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4916" pos:column="52">_nppGUI</name><op:operator pos:line="4916" pos:column="59">.</op:operator><name pos:line="4916" pos:column="60">_printSettings</name><op:operator pos:line="4916" pos:column="74">.</op:operator><name pos:line="4916" pos:column="75">_headerRight</name><op:operator pos:line="4916" pos:column="87">.</op:operator><name pos:line="4916" pos:column="88">c_str</name></name><argument_list pos:line="4916" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4917" pos:column="9">element</name><op:operator pos:line="4917" pos:column="16">-&gt;</op:operator><name pos:line="4917" pos:column="18">SetAttribute</name></name><argument_list pos:line="4917" pos:column="30">(<argument><expr><call><name pos:line="4917" pos:column="31">TEXT</name><argument_list pos:line="4917" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4917" pos:column="36">"footerLeft"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4917" pos:column="51">_nppGUI</name><op:operator pos:line="4917" pos:column="58">.</op:operator><name pos:line="4917" pos:column="59">_printSettings</name><op:operator pos:line="4917" pos:column="73">.</op:operator><name pos:line="4917" pos:column="74">_footerLeft</name><op:operator pos:line="4917" pos:column="85">.</op:operator><name pos:line="4917" pos:column="86">c_str</name></name><argument_list pos:line="4917" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4918" pos:column="9">element</name><op:operator pos:line="4918" pos:column="16">-&gt;</op:operator><name pos:line="4918" pos:column="18">SetAttribute</name></name><argument_list pos:line="4918" pos:column="30">(<argument><expr><call><name pos:line="4918" pos:column="31">TEXT</name><argument_list pos:line="4918" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4918" pos:column="36">"footerMiddle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4918" pos:column="53">_nppGUI</name><op:operator pos:line="4918" pos:column="60">.</op:operator><name pos:line="4918" pos:column="61">_printSettings</name><op:operator pos:line="4918" pos:column="75">.</op:operator><name pos:line="4918" pos:column="76">_footerMiddle</name><op:operator pos:line="4918" pos:column="89">.</op:operator><name pos:line="4918" pos:column="90">c_str</name></name><argument_list pos:line="4918" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4919" pos:column="9">element</name><op:operator pos:line="4919" pos:column="16">-&gt;</op:operator><name pos:line="4919" pos:column="18">SetAttribute</name></name><argument_list pos:line="4919" pos:column="30">(<argument><expr><call><name pos:line="4919" pos:column="31">TEXT</name><argument_list pos:line="4919" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4919" pos:column="36">"footerRight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4919" pos:column="52">_nppGUI</name><op:operator pos:line="4919" pos:column="59">.</op:operator><name pos:line="4919" pos:column="60">_printSettings</name><op:operator pos:line="4919" pos:column="74">.</op:operator><name pos:line="4919" pos:column="75">_footerRight</name><op:operator pos:line="4919" pos:column="87">.</op:operator><name pos:line="4919" pos:column="88">c_str</name></name><argument_list pos:line="4919" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="4921" pos:column="9">element</name><op:operator pos:line="4921" pos:column="16">-&gt;</op:operator><name pos:line="4921" pos:column="18">SetAttribute</name></name><argument_list pos:line="4921" pos:column="30">(<argument><expr><call><name pos:line="4921" pos:column="31">TEXT</name><argument_list pos:line="4921" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4921" pos:column="36">"headerFontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4921" pos:column="55">_nppGUI</name><op:operator pos:line="4921" pos:column="62">.</op:operator><name pos:line="4921" pos:column="63">_printSettings</name><op:operator pos:line="4921" pos:column="77">.</op:operator><name pos:line="4921" pos:column="78">_headerFontName</name><op:operator pos:line="4921" pos:column="93">.</op:operator><name pos:line="4921" pos:column="94">c_str</name></name><argument_list pos:line="4921" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4922" pos:column="9">element</name><op:operator pos:line="4922" pos:column="16">-&gt;</op:operator><name pos:line="4922" pos:column="18">SetAttribute</name></name><argument_list pos:line="4922" pos:column="30">(<argument><expr><call><name pos:line="4922" pos:column="31">TEXT</name><argument_list pos:line="4922" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4922" pos:column="36">"headerFontStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4922" pos:column="56">_nppGUI</name><op:operator pos:line="4922" pos:column="63">.</op:operator><name pos:line="4922" pos:column="64">_printSettings</name><op:operator pos:line="4922" pos:column="78">.</op:operator><name pos:line="4922" pos:column="79">_headerFontStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4923" pos:column="9">element</name><op:operator pos:line="4923" pos:column="16">-&gt;</op:operator><name pos:line="4923" pos:column="18">SetAttribute</name></name><argument_list pos:line="4923" pos:column="30">(<argument><expr><call><name pos:line="4923" pos:column="31">TEXT</name><argument_list pos:line="4923" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4923" pos:column="36">"headerFontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4923" pos:column="55">_nppGUI</name><op:operator pos:line="4923" pos:column="62">.</op:operator><name pos:line="4923" pos:column="63">_printSettings</name><op:operator pos:line="4923" pos:column="77">.</op:operator><name pos:line="4923" pos:column="78">_headerFontSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4924" pos:column="9">element</name><op:operator pos:line="4924" pos:column="16">-&gt;</op:operator><name pos:line="4924" pos:column="18">SetAttribute</name></name><argument_list pos:line="4924" pos:column="30">(<argument><expr><call><name pos:line="4924" pos:column="31">TEXT</name><argument_list pos:line="4924" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4924" pos:column="36">"footerFontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4924" pos:column="55">_nppGUI</name><op:operator pos:line="4924" pos:column="62">.</op:operator><name pos:line="4924" pos:column="63">_printSettings</name><op:operator pos:line="4924" pos:column="77">.</op:operator><name pos:line="4924" pos:column="78">_footerFontName</name><op:operator pos:line="4924" pos:column="93">.</op:operator><name pos:line="4924" pos:column="94">c_str</name></name><argument_list pos:line="4924" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4925" pos:column="9">element</name><op:operator pos:line="4925" pos:column="16">-&gt;</op:operator><name pos:line="4925" pos:column="18">SetAttribute</name></name><argument_list pos:line="4925" pos:column="30">(<argument><expr><call><name pos:line="4925" pos:column="31">TEXT</name><argument_list pos:line="4925" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4925" pos:column="36">"footerFontStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4925" pos:column="56">_nppGUI</name><op:operator pos:line="4925" pos:column="63">.</op:operator><name pos:line="4925" pos:column="64">_printSettings</name><op:operator pos:line="4925" pos:column="78">.</op:operator><name pos:line="4925" pos:column="79">_footerFontStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4926" pos:column="9">element</name><op:operator pos:line="4926" pos:column="16">-&gt;</op:operator><name pos:line="4926" pos:column="18">SetAttribute</name></name><argument_list pos:line="4926" pos:column="30">(<argument><expr><call><name pos:line="4926" pos:column="31">TEXT</name><argument_list pos:line="4926" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4926" pos:column="36">"footerFontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4926" pos:column="55">_nppGUI</name><op:operator pos:line="4926" pos:column="62">.</op:operator><name pos:line="4926" pos:column="63">_printSettings</name><op:operator pos:line="4926" pos:column="77">.</op:operator><name pos:line="4926" pos:column="78">_footerFontSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="4928" pos:column="9">element</name><op:operator pos:line="4928" pos:column="16">-&gt;</op:operator><name pos:line="4928" pos:column="18">SetAttribute</name></name><argument_list pos:line="4928" pos:column="30">(<argument><expr><call><name pos:line="4928" pos:column="31">TEXT</name><argument_list pos:line="4928" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4928" pos:column="36">"margeLeft"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4928" pos:column="50">_nppGUI</name><op:operator pos:line="4928" pos:column="57">.</op:operator><name pos:line="4928" pos:column="58">_printSettings</name><op:operator pos:line="4928" pos:column="72">.</op:operator><name pos:line="4928" pos:column="73">_marge</name><op:operator pos:line="4928" pos:column="79">.</op:operator><name pos:line="4928" pos:column="80">left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4929" pos:column="9">element</name><op:operator pos:line="4929" pos:column="16">-&gt;</op:operator><name pos:line="4929" pos:column="18">SetAttribute</name></name><argument_list pos:line="4929" pos:column="30">(<argument><expr><call><name pos:line="4929" pos:column="31">TEXT</name><argument_list pos:line="4929" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4929" pos:column="36">"margeRight"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4929" pos:column="51">_nppGUI</name><op:operator pos:line="4929" pos:column="58">.</op:operator><name pos:line="4929" pos:column="59">_printSettings</name><op:operator pos:line="4929" pos:column="73">.</op:operator><name pos:line="4929" pos:column="74">_marge</name><op:operator pos:line="4929" pos:column="80">.</op:operator><name pos:line="4929" pos:column="81">right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4930" pos:column="9">element</name><op:operator pos:line="4930" pos:column="16">-&gt;</op:operator><name pos:line="4930" pos:column="18">SetAttribute</name></name><argument_list pos:line="4930" pos:column="30">(<argument><expr><call><name pos:line="4930" pos:column="31">TEXT</name><argument_list pos:line="4930" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4930" pos:column="36">"margeTop"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4930" pos:column="49">_nppGUI</name><op:operator pos:line="4930" pos:column="56">.</op:operator><name pos:line="4930" pos:column="57">_printSettings</name><op:operator pos:line="4930" pos:column="71">.</op:operator><name pos:line="4930" pos:column="72">_marge</name><op:operator pos:line="4930" pos:column="78">.</op:operator><name pos:line="4930" pos:column="79">top</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4931" pos:column="9">element</name><op:operator pos:line="4931" pos:column="16">-&gt;</op:operator><name pos:line="4931" pos:column="18">SetAttribute</name></name><argument_list pos:line="4931" pos:column="30">(<argument><expr><call><name pos:line="4931" pos:column="31">TEXT</name><argument_list pos:line="4931" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4931" pos:column="36">"margeBottom"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4931" pos:column="52">_nppGUI</name><op:operator pos:line="4931" pos:column="59">.</op:operator><name pos:line="4931" pos:column="60">_printSettings</name><op:operator pos:line="4931" pos:column="74">.</op:operator><name pos:line="4931" pos:column="75">_marge</name><op:operator pos:line="4931" pos:column="81">.</op:operator><name pos:line="4931" pos:column="82">bottom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4934" pos:column="1">void</name></type> <name><name pos:line="4934" pos:column="6">NppParameters</name><op:operator pos:line="4934" pos:column="19">::</op:operator><name pos:line="4934" pos:column="21">writeExcludedLangList</name></name><parameter_list pos:line="4934" pos:column="42">(<param><decl><type><name pos:line="4934" pos:column="43">TiXmlElement</name> <type:modifier pos:line="4934" pos:column="56">*</type:modifier></type><name pos:line="4934" pos:column="57">element</name></decl></param>)</parameter_list>
<block pos:line="4935" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="4936" pos:column="9">int</name></type> <name pos:line="4936" pos:column="13">g0</name> <init pos:line="4936" pos:column="16">= <expr><lit:literal type="number" pos:line="4936" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4936" pos:column="21">// up to  8</comment>
	<decl_stmt><decl><type><name pos:line="4937" pos:column="9">int</name></type> <name pos:line="4937" pos:column="13">g1</name> <init pos:line="4937" pos:column="16">= <expr><lit:literal type="number" pos:line="4937" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4937" pos:column="21">// up to 16</comment>
	<decl_stmt><decl><type><name pos:line="4938" pos:column="9">int</name></type> <name pos:line="4938" pos:column="13">g2</name> <init pos:line="4938" pos:column="16">= <expr><lit:literal type="number" pos:line="4938" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4938" pos:column="21">// up to 24</comment>
	<decl_stmt><decl><type><name pos:line="4939" pos:column="9">int</name></type> <name pos:line="4939" pos:column="13">g3</name> <init pos:line="4939" pos:column="16">= <expr><lit:literal type="number" pos:line="4939" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4939" pos:column="21">// up to 32</comment>
	<decl_stmt><decl><type><name pos:line="4940" pos:column="9">int</name></type> <name pos:line="4940" pos:column="13">g4</name> <init pos:line="4940" pos:column="16">= <expr><lit:literal type="number" pos:line="4940" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4940" pos:column="21">// up to 40</comment>
	<decl_stmt><decl><type><name pos:line="4941" pos:column="9">int</name></type> <name pos:line="4941" pos:column="13">g5</name> <init pos:line="4941" pos:column="16">= <expr><lit:literal type="number" pos:line="4941" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4941" pos:column="21">// up to 48</comment>
	<decl_stmt><decl><type><name pos:line="4942" pos:column="9">int</name></type> <name pos:line="4942" pos:column="13">g6</name> <init pos:line="4942" pos:column="16">= <expr><lit:literal type="number" pos:line="4942" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4942" pos:column="21">// up to 56</comment>
	<decl_stmt><decl><type><name pos:line="4943" pos:column="9">int</name></type> <name pos:line="4943" pos:column="13">g7</name> <init pos:line="4943" pos:column="16">= <expr><lit:literal type="number" pos:line="4943" pos:column="18">0</lit:literal></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="4943" pos:column="21">// up to 64</comment>

	<for pos:line="4945" pos:column="9">for (<init><decl><type><name pos:line="4945" pos:column="14">size_t</name></type> <name pos:line="4945" pos:column="21">i</name> <init pos:line="4945" pos:column="23">= <expr><lit:literal type="number" pos:line="4945" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="4945" pos:column="29">i</name> <op:operator pos:line="4945" pos:column="31">&lt;</op:operator> <call><name><name pos:line="4945" pos:column="33">_nppGUI</name><op:operator pos:line="4945" pos:column="40">.</op:operator><name pos:line="4945" pos:column="41">_excludedLangList</name><op:operator pos:line="4945" pos:column="58">.</op:operator><name pos:line="4945" pos:column="59">size</name></name><argument_list pos:line="4945" pos:column="63">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="4945" pos:column="68">i</name><op:operator pos:line="4945" pos:column="69">++</op:operator></expr></incr>)
	<block pos:line="4946" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="4947" pos:column="17">LangType</name></type> <name pos:line="4947" pos:column="26">langType</name> <init pos:line="4947" pos:column="35">= <expr><name><name pos:line="4947" pos:column="37">_nppGUI</name><op:operator pos:line="4947" pos:column="44">.</op:operator><name pos:line="4947" pos:column="45">_excludedLangList</name><index pos:line="4947" pos:column="62">[<expr><name pos:line="4947" pos:column="63">i</name></expr>]</index></name><op:operator pos:line="4947" pos:column="65">.</op:operator><name pos:line="4947" pos:column="66">_langType</name></expr></init></decl>;</decl_stmt>
		<if pos:line="4948" pos:column="17">if <condition pos:line="4948" pos:column="20">(<expr><name pos:line="4948" pos:column="21">langType</name> <op:operator pos:line="4948" pos:column="30">&gt;=</op:operator> <name pos:line="4948" pos:column="33">L_EXTERNAL</name> <op:operator pos:line="4948" pos:column="44">&amp;&amp;</op:operator> <name pos:line="4948" pos:column="47">langType</name> <op:operator pos:line="4948" pos:column="56">&lt;</op:operator> <name pos:line="4948" pos:column="58">L_END</name></expr>)</condition><then pos:line="4948" pos:column="64">
			<continue pos:line="4949" pos:column="25">continue;</continue></then></if>

		<decl_stmt><decl><type><name pos:line="4951" pos:column="17">int</name></type> <name pos:line="4951" pos:column="21">nGrp</name> <init pos:line="4951" pos:column="26">= <expr><name pos:line="4951" pos:column="28">langType</name> <op:operator pos:line="4951" pos:column="37">/</op:operator> <lit:literal type="number" pos:line="4951" pos:column="39">8</lit:literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="4952" pos:column="17">int</name></type> <name pos:line="4952" pos:column="21">nMask</name> <init pos:line="4952" pos:column="27">= <expr><lit:literal type="number" pos:line="4952" pos:column="29">1</lit:literal> <op:operator pos:line="4952" pos:column="31">&lt;&lt;</op:operator> <name pos:line="4952" pos:column="34">langType</name> <op:operator pos:line="4952" pos:column="43">%</op:operator> <lit:literal type="number" pos:line="4952" pos:column="45">8</lit:literal></expr></init></decl>;</decl_stmt>


		<switch pos:line="4955" pos:column="17">switch <condition pos:line="4955" pos:column="24">(<expr><name pos:line="4955" pos:column="25">nGrp</name></expr>)</condition>
		<block pos:line="4956" pos:column="17">{
			<case pos:line="4957" pos:column="25">case <expr><lit:literal type="number" pos:line="4957" pos:column="30">0</lit:literal></expr> :
				<expr_stmt><expr><name pos:line="4958" pos:column="33">g0</name> <op:operator pos:line="4958" pos:column="36">|=</op:operator> <name pos:line="4958" pos:column="39">nMask</name></expr>;</expr_stmt>
				<break pos:line="4959" pos:column="33">break;</break>
			</case><case pos:line="4960" pos:column="25">case <expr><lit:literal type="number" pos:line="4960" pos:column="30">1</lit:literal></expr> :
				<expr_stmt><expr><name pos:line="4961" pos:column="33">g1</name> <op:operator pos:line="4961" pos:column="36">|=</op:operator> <name pos:line="4961" pos:column="39">nMask</name></expr>;</expr_stmt>
				<break pos:line="4962" pos:column="33">break;</break>
			</case><case pos:line="4963" pos:column="25">case <expr><lit:literal type="number" pos:line="4963" pos:column="30">2</lit:literal></expr> :
				<expr_stmt><expr><name pos:line="4964" pos:column="33">g2</name> <op:operator pos:line="4964" pos:column="36">|=</op:operator> <name pos:line="4964" pos:column="39">nMask</name></expr>;</expr_stmt>
				<break pos:line="4965" pos:column="33">break;</break>
			</case><case pos:line="4966" pos:column="25">case <expr><lit:literal type="number" pos:line="4966" pos:column="30">3</lit:literal></expr> :
				<expr_stmt><expr><name pos:line="4967" pos:column="33">g3</name> <op:operator pos:line="4967" pos:column="36">|=</op:operator> <name pos:line="4967" pos:column="39">nMask</name></expr>;</expr_stmt>
				<break pos:line="4968" pos:column="33">break;</break>
			</case><case pos:line="4969" pos:column="25">case <expr><lit:literal type="number" pos:line="4969" pos:column="30">4</lit:literal></expr> :
				<expr_stmt><expr><name pos:line="4970" pos:column="33">g4</name> <op:operator pos:line="4970" pos:column="36">|=</op:operator> <name pos:line="4970" pos:column="39">nMask</name></expr>;</expr_stmt>
				<break pos:line="4971" pos:column="33">break;</break>
			</case><case pos:line="4972" pos:column="25">case <expr><lit:literal type="number" pos:line="4972" pos:column="30">5</lit:literal></expr> :
				<expr_stmt><expr><name pos:line="4973" pos:column="33">g5</name> <op:operator pos:line="4973" pos:column="36">|=</op:operator> <name pos:line="4973" pos:column="39">nMask</name></expr>;</expr_stmt>
				<break pos:line="4974" pos:column="33">break;</break>
			</case><case pos:line="4975" pos:column="25">case <expr><lit:literal type="number" pos:line="4975" pos:column="30">6</lit:literal></expr> :
				<expr_stmt><expr><name pos:line="4976" pos:column="33">g6</name> <op:operator pos:line="4976" pos:column="36">|=</op:operator> <name pos:line="4976" pos:column="39">nMask</name></expr>;</expr_stmt>
				<break pos:line="4977" pos:column="33">break;</break>
			</case><case pos:line="4978" pos:column="25">case <expr><lit:literal type="number" pos:line="4978" pos:column="30">7</lit:literal></expr> :
				<expr_stmt><expr><name pos:line="4979" pos:column="33">g7</name> <op:operator pos:line="4979" pos:column="36">|=</op:operator> <name pos:line="4979" pos:column="39">nMask</name></expr>;</expr_stmt>
				<break pos:line="4980" pos:column="33">break;</break>
		</case>}</block></switch>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="4984" pos:column="9">element</name><op:operator pos:line="4984" pos:column="16">-&gt;</op:operator><name pos:line="4984" pos:column="18">SetAttribute</name></name><argument_list pos:line="4984" pos:column="30">(<argument><expr><call><name pos:line="4984" pos:column="31">TEXT</name><argument_list pos:line="4984" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4984" pos:column="36">"gr0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4984" pos:column="44">g0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4985" pos:column="9">element</name><op:operator pos:line="4985" pos:column="16">-&gt;</op:operator><name pos:line="4985" pos:column="18">SetAttribute</name></name><argument_list pos:line="4985" pos:column="30">(<argument><expr><call><name pos:line="4985" pos:column="31">TEXT</name><argument_list pos:line="4985" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4985" pos:column="36">"gr1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4985" pos:column="44">g1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4986" pos:column="9">element</name><op:operator pos:line="4986" pos:column="16">-&gt;</op:operator><name pos:line="4986" pos:column="18">SetAttribute</name></name><argument_list pos:line="4986" pos:column="30">(<argument><expr><call><name pos:line="4986" pos:column="31">TEXT</name><argument_list pos:line="4986" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4986" pos:column="36">"gr2"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4986" pos:column="44">g2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4987" pos:column="9">element</name><op:operator pos:line="4987" pos:column="16">-&gt;</op:operator><name pos:line="4987" pos:column="18">SetAttribute</name></name><argument_list pos:line="4987" pos:column="30">(<argument><expr><call><name pos:line="4987" pos:column="31">TEXT</name><argument_list pos:line="4987" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4987" pos:column="36">"gr3"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4987" pos:column="44">g3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4988" pos:column="9">element</name><op:operator pos:line="4988" pos:column="16">-&gt;</op:operator><name pos:line="4988" pos:column="18">SetAttribute</name></name><argument_list pos:line="4988" pos:column="30">(<argument><expr><call><name pos:line="4988" pos:column="31">TEXT</name><argument_list pos:line="4988" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4988" pos:column="36">"gr4"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4988" pos:column="44">g4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4989" pos:column="9">element</name><op:operator pos:line="4989" pos:column="16">-&gt;</op:operator><name pos:line="4989" pos:column="18">SetAttribute</name></name><argument_list pos:line="4989" pos:column="30">(<argument><expr><call><name pos:line="4989" pos:column="31">TEXT</name><argument_list pos:line="4989" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4989" pos:column="36">"gr5"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4989" pos:column="44">g5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4990" pos:column="9">element</name><op:operator pos:line="4990" pos:column="16">-&gt;</op:operator><name pos:line="4990" pos:column="18">SetAttribute</name></name><argument_list pos:line="4990" pos:column="30">(<argument><expr><call><name pos:line="4990" pos:column="31">TEXT</name><argument_list pos:line="4990" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4990" pos:column="36">"gr6"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4990" pos:column="44">g6</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4991" pos:column="9">element</name><op:operator pos:line="4991" pos:column="16">-&gt;</op:operator><name pos:line="4991" pos:column="18">SetAttribute</name></name><argument_list pos:line="4991" pos:column="30">(<argument><expr><call><name pos:line="4991" pos:column="31">TEXT</name><argument_list pos:line="4991" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="4991" pos:column="36">"gr7"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4991" pos:column="44">g7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="4994" pos:column="1">TiXmlElement</name> <type:modifier pos:line="4994" pos:column="14">*</type:modifier></type> <name><name pos:line="4994" pos:column="16">NppParameters</name><op:operator pos:line="4994" pos:column="29">::</op:operator><name pos:line="4994" pos:column="31">insertGUIConfigBoolNode</name></name><parameter_list pos:line="4994" pos:column="54">(<param><decl><type><name pos:line="4994" pos:column="55">TiXmlNode</name> <type:modifier pos:line="4994" pos:column="65">*</type:modifier></type><name pos:line="4994" pos:column="66">r2w</name></decl></param>, <param><decl><type><specifier pos:line="4994" pos:column="71">const</specifier> <name pos:line="4994" pos:column="77">TCHAR</name> <type:modifier pos:line="4994" pos:column="83">*</type:modifier></type><name pos:line="4994" pos:column="84">name</name></decl></param>, <param><decl><type><name pos:line="4994" pos:column="90">bool</name></type> <name pos:line="4994" pos:column="95">bVal</name></decl></param>)</parameter_list>
<block pos:line="4995" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="4996" pos:column="9">const</specifier> <name pos:line="4996" pos:column="15">TCHAR</name> <type:modifier pos:line="4996" pos:column="21">*</type:modifier></type><name pos:line="4996" pos:column="22">pStr</name> <init pos:line="4996" pos:column="27">= <expr><name pos:line="4996" pos:column="29">bVal</name><op:operator pos:line="4996" pos:column="33">?</op:operator><call><name pos:line="4996" pos:column="34">TEXT</name><argument_list pos:line="4996" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="4996" pos:column="39">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="4996" pos:column="45">:</op:operator><call><name pos:line="4996" pos:column="46">TEXT</name><argument_list pos:line="4996" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="4996" pos:column="51">"no"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="4997" pos:column="9">TiXmlElement</name> <type:modifier pos:line="4997" pos:column="22">*</type:modifier></type><name pos:line="4997" pos:column="23">GUIConfigElement</name> <init pos:line="4997" pos:column="40">= <expr><op:operator pos:line="4997" pos:column="42">(</op:operator><call><name><name pos:line="4997" pos:column="43">r2w</name><op:operator pos:line="4997" pos:column="46">-&gt;</op:operator><name pos:line="4997" pos:column="48">InsertEndChild</name></name><argument_list pos:line="4997" pos:column="62">(<argument><expr><call><name pos:line="4997" pos:column="63">TiXmlElement</name><argument_list pos:line="4997" pos:column="75">(<argument><expr><call><name pos:line="4997" pos:column="76">TEXT</name><argument_list pos:line="4997" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="4997" pos:column="81">"GUIConfig"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="4997" pos:column="95">)</op:operator><op:operator pos:line="4997" pos:column="96">-&gt;</op:operator><call><name pos:line="4997" pos:column="98">ToElement</name><argument_list pos:line="4997" pos:column="107">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="4998" pos:column="9">GUIConfigElement</name><op:operator pos:line="4998" pos:column="25">-&gt;</op:operator><name pos:line="4998" pos:column="27">SetAttribute</name></name><argument_list pos:line="4998" pos:column="39">(<argument><expr><call><name pos:line="4998" pos:column="40">TEXT</name><argument_list pos:line="4998" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="4998" pos:column="45">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="4998" pos:column="54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="4999" pos:column="9">GUIConfigElement</name><op:operator pos:line="4999" pos:column="25">-&gt;</op:operator><name pos:line="4999" pos:column="27">InsertEndChild</name></name><argument_list pos:line="4999" pos:column="41">(<argument><expr><call><name pos:line="4999" pos:column="42">TiXmlText</name><argument_list pos:line="4999" pos:column="51">(<argument><expr><name pos:line="4999" pos:column="52">pStr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="5000" pos:column="9">return <expr><name pos:line="5000" pos:column="16">GUIConfigElement</name></expr>;</return>
}</block></function>

<function><type><name pos:line="5003" pos:column="1">int</name></type> <name pos:line="5003" pos:column="5">RGB2int</name><parameter_list pos:line="5003" pos:column="12">(<param><decl><type><name pos:line="5003" pos:column="13">COLORREF</name></type> <name pos:line="5003" pos:column="22">color</name></decl></param>)</parameter_list> <block pos:line="5003" pos:column="29">{
    <return pos:line="5004" pos:column="5">return <expr><op:operator pos:line="5004" pos:column="12">(</op:operator><op:operator pos:line="5004" pos:column="13">(</op:operator><op:operator pos:line="5004" pos:column="14">(</op:operator><op:operator pos:line="5004" pos:column="15">(</op:operator><op:operator pos:line="5004" pos:column="16">(</op:operator><name pos:line="5004" pos:column="17">DWORD</name><op:operator pos:line="5004" pos:column="22">)</op:operator><name pos:line="5004" pos:column="23">color</name><op:operator pos:line="5004" pos:column="28">)</op:operator> <op:operator pos:line="5004" pos:column="30">&amp;</op:operator> <lit:literal type="number" pos:line="5004" pos:column="32">0x0000FF</lit:literal><op:operator pos:line="5004" pos:column="40">)</op:operator> <op:operator pos:line="5004" pos:column="42">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="5004" pos:column="45">16</lit:literal><op:operator pos:line="5004" pos:column="47">)</op:operator> <op:operator pos:line="5004" pos:column="49">|</op:operator> <op:operator pos:line="5004" pos:column="51">(</op:operator><op:operator pos:line="5004" pos:column="52">(</op:operator><op:operator pos:line="5004" pos:column="53">(</op:operator><op:operator pos:line="5004" pos:column="54">(</op:operator><name pos:line="5004" pos:column="55">DWORD</name><op:operator pos:line="5004" pos:column="60">)</op:operator><name pos:line="5004" pos:column="61">color</name><op:operator pos:line="5004" pos:column="66">)</op:operator> <op:operator pos:line="5004" pos:column="68">&amp;</op:operator> <lit:literal type="number" pos:line="5004" pos:column="70">0x00FF00</lit:literal><op:operator pos:line="5004" pos:column="78">)</op:operator><op:operator pos:line="5004" pos:column="79">)</op:operator> <op:operator pos:line="5004" pos:column="81">|</op:operator> <op:operator pos:line="5004" pos:column="83">(</op:operator><op:operator pos:line="5004" pos:column="84">(</op:operator><op:operator pos:line="5004" pos:column="85">(</op:operator><op:operator pos:line="5004" pos:column="86">(</op:operator><name pos:line="5004" pos:column="87">DWORD</name><op:operator pos:line="5004" pos:column="92">)</op:operator><name pos:line="5004" pos:column="93">color</name><op:operator pos:line="5004" pos:column="98">)</op:operator> <op:operator pos:line="5004" pos:column="100">&amp;</op:operator> <lit:literal type="number" pos:line="5004" pos:column="102">0xFF0000</lit:literal><op:operator pos:line="5004" pos:column="110">)</op:operator> <op:operator pos:line="5004" pos:column="112">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="5004" pos:column="115">16</lit:literal><op:operator pos:line="5004" pos:column="117">)</op:operator><op:operator pos:line="5004" pos:column="118">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="5007" pos:column="1">int</name></type> <name><name pos:line="5007" pos:column="5">NppParameters</name><op:operator pos:line="5007" pos:column="18">::</op:operator><name pos:line="5007" pos:column="20">langTypeToCommandID</name></name><parameter_list pos:line="5007" pos:column="39">(<param><decl><type><name pos:line="5007" pos:column="40">LangType</name></type> <name pos:line="5007" pos:column="49">lt</name></decl></param>)</parameter_list> <specifier pos:line="5007" pos:column="53">const</specifier> 
<block pos:line="5008" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5009" pos:column="9">int</name></type> <name pos:line="5009" pos:column="13">id</name></decl>;</decl_stmt>
	<switch pos:line="5010" pos:column="9">switch <condition pos:line="5010" pos:column="16">(<expr><name pos:line="5010" pos:column="17">lt</name></expr>)</condition>
	<block pos:line="5011" pos:column="9">{
		<case pos:line="5012" pos:column="17">case <expr><name pos:line="5012" pos:column="22">L_C</name></expr> :	
			<expr_stmt><expr><name pos:line="5013" pos:column="25">id</name> <op:operator pos:line="5013" pos:column="28">=</op:operator> <name pos:line="5013" pos:column="30">IDM_LANG_C</name></expr>;</expr_stmt> <break pos:line="5013" pos:column="42">break;</break>
		</case><case pos:line="5014" pos:column="17">case <expr><name pos:line="5014" pos:column="22">L_CPP</name></expr> :
			<expr_stmt><expr><name pos:line="5015" pos:column="25">id</name> <op:operator pos:line="5015" pos:column="28">=</op:operator> <name pos:line="5015" pos:column="30">IDM_LANG_CPP</name></expr>;</expr_stmt> <break pos:line="5015" pos:column="44">break;</break>
		</case><case pos:line="5016" pos:column="17">case <expr><name pos:line="5016" pos:column="22">L_JAVA</name></expr> :
			<expr_stmt><expr><name pos:line="5017" pos:column="25">id</name> <op:operator pos:line="5017" pos:column="28">=</op:operator> <name pos:line="5017" pos:column="30">IDM_LANG_JAVA</name></expr>;</expr_stmt>	<break pos:line="5017" pos:column="49">break;</break>
		</case><case pos:line="5018" pos:column="17">case <expr><name pos:line="5018" pos:column="22">L_CS</name></expr> :
			<expr_stmt><expr><name pos:line="5019" pos:column="25">id</name> <op:operator pos:line="5019" pos:column="28">=</op:operator> <name pos:line="5019" pos:column="30">IDM_LANG_CS</name></expr>;</expr_stmt> <break pos:line="5019" pos:column="43">break;</break>
		</case><case pos:line="5020" pos:column="17">case <expr><name pos:line="5020" pos:column="22">L_OBJC</name></expr> :
			<expr_stmt><expr><name pos:line="5021" pos:column="25">id</name> <op:operator pos:line="5021" pos:column="28">=</op:operator> <name pos:line="5021" pos:column="30">IDM_LANG_OBJC</name></expr>;</expr_stmt>	<break pos:line="5021" pos:column="49">break;</break>
		</case><case pos:line="5022" pos:column="17">case <expr><name pos:line="5022" pos:column="22">L_HTML</name></expr> :
			<expr_stmt><expr><name pos:line="5023" pos:column="25">id</name> <op:operator pos:line="5023" pos:column="28">=</op:operator> <name pos:line="5023" pos:column="30">IDM_LANG_HTML</name></expr>;</expr_stmt>	<break pos:line="5023" pos:column="49">break;</break>
		</case><case pos:line="5024" pos:column="17">case <expr><name pos:line="5024" pos:column="22">L_XML</name></expr> : 
			<expr_stmt><expr><name pos:line="5025" pos:column="25">id</name> <op:operator pos:line="5025" pos:column="28">=</op:operator> <name pos:line="5025" pos:column="30">IDM_LANG_XML</name></expr>;</expr_stmt> <break pos:line="5025" pos:column="44">break;</break>
		</case><case pos:line="5026" pos:column="17">case <expr><name pos:line="5026" pos:column="22">L_JS</name></expr> :
			<expr_stmt><expr><name pos:line="5027" pos:column="25">id</name> <op:operator pos:line="5027" pos:column="28">=</op:operator> <name pos:line="5027" pos:column="30">IDM_LANG_JS</name></expr>;</expr_stmt> <break pos:line="5027" pos:column="43">break;</break>
		</case><case pos:line="5028" pos:column="17">case <expr><name pos:line="5028" pos:column="22">L_PHP</name></expr> :
			<expr_stmt><expr><name pos:line="5029" pos:column="25">id</name> <op:operator pos:line="5029" pos:column="28">=</op:operator> <name pos:line="5029" pos:column="30">IDM_LANG_PHP</name></expr>;</expr_stmt> <break pos:line="5029" pos:column="44">break;</break>
		</case><case pos:line="5030" pos:column="17">case <expr><name pos:line="5030" pos:column="22">L_ASP</name></expr> :
			<expr_stmt><expr><name pos:line="5031" pos:column="25">id</name> <op:operator pos:line="5031" pos:column="28">=</op:operator> <name pos:line="5031" pos:column="30">IDM_LANG_ASP</name></expr>;</expr_stmt> <break pos:line="5031" pos:column="44">break;</break>
        </case><case pos:line="5032" pos:column="9">case <expr><name pos:line="5032" pos:column="14">L_JSP</name></expr> :
			<expr_stmt><expr><name pos:line="5033" pos:column="25">id</name> <op:operator pos:line="5033" pos:column="28">=</op:operator> <name pos:line="5033" pos:column="30">IDM_LANG_JSP</name></expr>;</expr_stmt> <break pos:line="5033" pos:column="44">break;</break>
		</case><case pos:line="5034" pos:column="17">case <expr><name pos:line="5034" pos:column="22">L_CSS</name></expr> :
			<expr_stmt><expr><name pos:line="5035" pos:column="25">id</name> <op:operator pos:line="5035" pos:column="28">=</op:operator> <name pos:line="5035" pos:column="30">IDM_LANG_CSS</name></expr>;</expr_stmt> <break pos:line="5035" pos:column="44">break;</break>
		</case><case pos:line="5036" pos:column="17">case <expr><name pos:line="5036" pos:column="22">L_LUA</name></expr> :
			<expr_stmt><expr><name pos:line="5037" pos:column="25">id</name> <op:operator pos:line="5037" pos:column="28">=</op:operator> <name pos:line="5037" pos:column="30">IDM_LANG_LUA</name></expr>;</expr_stmt> <break pos:line="5037" pos:column="44">break;</break>
		</case><case pos:line="5038" pos:column="17">case <expr><name pos:line="5038" pos:column="22">L_PERL</name></expr> :
			<expr_stmt><expr><name pos:line="5039" pos:column="25">id</name> <op:operator pos:line="5039" pos:column="28">=</op:operator> <name pos:line="5039" pos:column="30">IDM_LANG_PERL</name></expr>;</expr_stmt> <break pos:line="5039" pos:column="45">break;</break>
		</case><case pos:line="5040" pos:column="17">case <expr><name pos:line="5040" pos:column="22">L_PYTHON</name></expr> :
			<expr_stmt><expr><name pos:line="5041" pos:column="25">id</name> <op:operator pos:line="5041" pos:column="28">=</op:operator> <name pos:line="5041" pos:column="30">IDM_LANG_PYTHON</name></expr>;</expr_stmt> <break pos:line="5041" pos:column="47">break;</break>
		</case><case pos:line="5042" pos:column="17">case <expr><name pos:line="5042" pos:column="22">L_BATCH</name></expr> :
			<expr_stmt><expr><name pos:line="5043" pos:column="25">id</name> <op:operator pos:line="5043" pos:column="28">=</op:operator> <name pos:line="5043" pos:column="30">IDM_LANG_BATCH</name></expr>;</expr_stmt> <break pos:line="5043" pos:column="46">break;</break>
		</case><case pos:line="5044" pos:column="17">case <expr><name pos:line="5044" pos:column="22">L_PASCAL</name></expr> :
			<expr_stmt><expr><name pos:line="5045" pos:column="25">id</name> <op:operator pos:line="5045" pos:column="28">=</op:operator> <name pos:line="5045" pos:column="30">IDM_LANG_PASCAL</name></expr>;</expr_stmt> <break pos:line="5045" pos:column="47">break;</break>
		</case><case pos:line="5046" pos:column="17">case <expr><name pos:line="5046" pos:column="22">L_MAKEFILE</name></expr> :
			<expr_stmt><expr><name pos:line="5047" pos:column="25">id</name> <op:operator pos:line="5047" pos:column="28">=</op:operator> <name pos:line="5047" pos:column="30">IDM_LANG_MAKEFILE</name></expr>;</expr_stmt>	<break pos:line="5047" pos:column="49">break;</break>
		</case><case pos:line="5048" pos:column="17">case <expr><name pos:line="5048" pos:column="22">L_INI</name></expr> :
			<expr_stmt><expr><name pos:line="5049" pos:column="25">id</name> <op:operator pos:line="5049" pos:column="28">=</op:operator> <name pos:line="5049" pos:column="30">IDM_LANG_INI</name></expr>;</expr_stmt> <break pos:line="5049" pos:column="44">break;</break>
		</case><case pos:line="5050" pos:column="17">case <expr><name pos:line="5050" pos:column="22">L_ASCII</name></expr> :
			<expr_stmt><expr><name pos:line="5051" pos:column="25">id</name> <op:operator pos:line="5051" pos:column="28">=</op:operator> <name pos:line="5051" pos:column="30">IDM_LANG_ASCII</name></expr>;</expr_stmt> <break pos:line="5051" pos:column="46">break;</break>
		</case><case pos:line="5052" pos:column="17">case <expr><name pos:line="5052" pos:column="22">L_RC</name></expr> :
			<expr_stmt><expr><name pos:line="5053" pos:column="25">id</name> <op:operator pos:line="5053" pos:column="28">=</op:operator> <name pos:line="5053" pos:column="30">IDM_LANG_RC</name></expr>;</expr_stmt> <break pos:line="5053" pos:column="43">break;</break>
		</case><case pos:line="5054" pos:column="17">case <expr><name pos:line="5054" pos:column="22">L_TEX</name></expr> :
			<expr_stmt><expr><name pos:line="5055" pos:column="25">id</name> <op:operator pos:line="5055" pos:column="28">=</op:operator> <name pos:line="5055" pos:column="30">IDM_LANG_TEX</name></expr>;</expr_stmt> <break pos:line="5055" pos:column="44">break;</break>
		</case><case pos:line="5056" pos:column="17">case <expr><name pos:line="5056" pos:column="22">L_FORTRAN</name></expr> : 
			<expr_stmt><expr><name pos:line="5057" pos:column="25">id</name> <op:operator pos:line="5057" pos:column="28">=</op:operator> <name pos:line="5057" pos:column="30">IDM_LANG_FORTRAN</name></expr>;</expr_stmt> <break pos:line="5057" pos:column="48">break;</break>
		</case><case pos:line="5058" pos:column="17">case <expr><name pos:line="5058" pos:column="22">L_BASH</name></expr> : 
			<expr_stmt><expr><name pos:line="5059" pos:column="25">id</name> <op:operator pos:line="5059" pos:column="28">=</op:operator> <name pos:line="5059" pos:column="30">IDM_LANG_BASH</name></expr>;</expr_stmt> <break pos:line="5059" pos:column="45">break;</break>
		</case><case pos:line="5060" pos:column="17">case <expr><name pos:line="5060" pos:column="22">L_FLASH</name></expr> :
			<expr_stmt><expr><name pos:line="5061" pos:column="25">id</name> <op:operator pos:line="5061" pos:column="28">=</op:operator> <name pos:line="5061" pos:column="30">IDM_LANG_FLASH</name></expr>;</expr_stmt> <break pos:line="5061" pos:column="46">break;</break>
		</case><case pos:line="5062" pos:column="17">case <expr><name pos:line="5062" pos:column="22">L_NSIS</name></expr> :
			<expr_stmt><expr><name pos:line="5063" pos:column="25">id</name> <op:operator pos:line="5063" pos:column="28">=</op:operator> <name pos:line="5063" pos:column="30">IDM_LANG_NSIS</name></expr>;</expr_stmt> <break pos:line="5063" pos:column="45">break;</break>
		</case><case pos:line="5064" pos:column="17">case <expr><name pos:line="5064" pos:column="22">L_USER</name></expr> :
			<expr_stmt><expr><name pos:line="5065" pos:column="25">id</name> <op:operator pos:line="5065" pos:column="28">=</op:operator> <name pos:line="5065" pos:column="30">IDM_LANG_USER</name></expr>;</expr_stmt> <break pos:line="5065" pos:column="45">break;</break>
        </case><case pos:line="5066" pos:column="9">case <expr><name pos:line="5066" pos:column="14">L_SQL</name></expr> :
            <expr_stmt><expr><name pos:line="5067" pos:column="13">id</name> <op:operator pos:line="5067" pos:column="16">=</op:operator> <name pos:line="5067" pos:column="18">IDM_LANG_SQL</name></expr>;</expr_stmt> <break pos:line="5067" pos:column="32">break;</break>
        </case><case pos:line="5068" pos:column="9">case <expr><name pos:line="5068" pos:column="14">L_VB</name></expr> :
            <expr_stmt><expr><name pos:line="5069" pos:column="13">id</name> <op:operator pos:line="5069" pos:column="16">=</op:operator> <name pos:line="5069" pos:column="18">IDM_LANG_VB</name></expr>;</expr_stmt> <break pos:line="5069" pos:column="31">break;</break>
		</case><case pos:line="5070" pos:column="17">case <expr><name pos:line="5070" pos:column="22">L_TCL</name></expr> :
            <expr_stmt><expr><name pos:line="5071" pos:column="13">id</name> <op:operator pos:line="5071" pos:column="16">=</op:operator> <name pos:line="5071" pos:column="18">IDM_LANG_TCL</name></expr>;</expr_stmt> <break pos:line="5071" pos:column="32">break;</break>

		</case><case pos:line="5073" pos:column="17">case <expr><name pos:line="5073" pos:column="22">L_LISP</name></expr> :
            <expr_stmt><expr><name pos:line="5074" pos:column="13">id</name> <op:operator pos:line="5074" pos:column="16">=</op:operator> <name pos:line="5074" pos:column="18">IDM_LANG_LISP</name></expr>;</expr_stmt> <break pos:line="5074" pos:column="33">break;</break>
		</case><case pos:line="5075" pos:column="17">case <expr><name pos:line="5075" pos:column="22">L_SCHEME</name></expr> :
            <expr_stmt><expr><name pos:line="5076" pos:column="13">id</name> <op:operator pos:line="5076" pos:column="16">=</op:operator> <name pos:line="5076" pos:column="18">IDM_LANG_SCHEME</name></expr>;</expr_stmt> <break pos:line="5076" pos:column="35">break;</break>
		</case><case pos:line="5077" pos:column="17">case <expr><name pos:line="5077" pos:column="22">L_ASM</name></expr> :
            <expr_stmt><expr><name pos:line="5078" pos:column="13">id</name> <op:operator pos:line="5078" pos:column="16">=</op:operator> <name pos:line="5078" pos:column="18">IDM_LANG_ASM</name></expr>;</expr_stmt> <break pos:line="5078" pos:column="32">break;</break>
		</case><case pos:line="5079" pos:column="17">case <expr><name pos:line="5079" pos:column="22">L_DIFF</name></expr> :
            <expr_stmt><expr><name pos:line="5080" pos:column="13">id</name> <op:operator pos:line="5080" pos:column="16">=</op:operator> <name pos:line="5080" pos:column="18">IDM_LANG_DIFF</name></expr>;</expr_stmt> <break pos:line="5080" pos:column="33">break;</break>
		</case><case pos:line="5081" pos:column="17">case <expr><name pos:line="5081" pos:column="22">L_PROPS</name></expr> :
            <expr_stmt><expr><name pos:line="5082" pos:column="13">id</name> <op:operator pos:line="5082" pos:column="16">=</op:operator> <name pos:line="5082" pos:column="18">IDM_LANG_PROPS</name></expr>;</expr_stmt> <break pos:line="5082" pos:column="34">break;</break>
		</case><case pos:line="5083" pos:column="17">case <expr><name pos:line="5083" pos:column="22">L_PS</name></expr> :
            <expr_stmt><expr><name pos:line="5084" pos:column="13">id</name> <op:operator pos:line="5084" pos:column="16">=</op:operator> <name pos:line="5084" pos:column="18">IDM_LANG_PS</name></expr>;</expr_stmt> <break pos:line="5084" pos:column="31">break;</break>
		</case><case pos:line="5085" pos:column="17">case <expr><name pos:line="5085" pos:column="22">L_RUBY</name></expr> :
            <expr_stmt><expr><name pos:line="5086" pos:column="13">id</name> <op:operator pos:line="5086" pos:column="16">=</op:operator> <name pos:line="5086" pos:column="18">IDM_LANG_RUBY</name></expr>;</expr_stmt> <break pos:line="5086" pos:column="33">break;</break>
		</case><case pos:line="5087" pos:column="17">case <expr><name pos:line="5087" pos:column="22">L_SMALLTALK</name></expr> :
            <expr_stmt><expr><name pos:line="5088" pos:column="13">id</name> <op:operator pos:line="5088" pos:column="16">=</op:operator> <name pos:line="5088" pos:column="18">IDM_LANG_SMALLTALK</name></expr>;</expr_stmt> <break pos:line="5088" pos:column="38">break;</break>
		</case><case pos:line="5089" pos:column="17">case <expr><name pos:line="5089" pos:column="22">L_VHDL</name></expr> :
            <expr_stmt><expr><name pos:line="5090" pos:column="13">id</name> <op:operator pos:line="5090" pos:column="16">=</op:operator> <name pos:line="5090" pos:column="18">IDM_LANG_VHDL</name></expr>;</expr_stmt> <break pos:line="5090" pos:column="33">break;</break>

		</case><case pos:line="5092" pos:column="17">case <expr><name pos:line="5092" pos:column="22">L_ADA</name></expr> :
            <expr_stmt><expr><name pos:line="5093" pos:column="13">id</name> <op:operator pos:line="5093" pos:column="16">=</op:operator> <name pos:line="5093" pos:column="18">IDM_LANG_ADA</name></expr>;</expr_stmt> <break pos:line="5093" pos:column="32">break;</break>
		</case><case pos:line="5094" pos:column="17">case <expr><name pos:line="5094" pos:column="22">L_MATLAB</name></expr> :
            <expr_stmt><expr><name pos:line="5095" pos:column="13">id</name> <op:operator pos:line="5095" pos:column="16">=</op:operator> <name pos:line="5095" pos:column="18">IDM_LANG_MATLAB</name></expr>;</expr_stmt> <break pos:line="5095" pos:column="35">break;</break>

		</case><case pos:line="5097" pos:column="17">case <expr><name pos:line="5097" pos:column="22">L_HASKELL</name></expr> :
            <expr_stmt><expr><name pos:line="5098" pos:column="13">id</name> <op:operator pos:line="5098" pos:column="16">=</op:operator> <name pos:line="5098" pos:column="18">IDM_LANG_HASKELL</name></expr>;</expr_stmt> <break pos:line="5098" pos:column="36">break;</break>

		</case><case pos:line="5100" pos:column="17">case <expr><name pos:line="5100" pos:column="22">L_KIX</name></expr> :
            <expr_stmt><expr><name pos:line="5101" pos:column="13">id</name> <op:operator pos:line="5101" pos:column="16">=</op:operator> <name pos:line="5101" pos:column="18">IDM_LANG_KIX</name></expr>;</expr_stmt> <break pos:line="5101" pos:column="32">break;</break>
		</case><case pos:line="5102" pos:column="17">case <expr><name pos:line="5102" pos:column="22">L_AU3</name></expr> :
            <expr_stmt><expr><name pos:line="5103" pos:column="13">id</name> <op:operator pos:line="5103" pos:column="16">=</op:operator> <name pos:line="5103" pos:column="18">IDM_LANG_AU3</name></expr>;</expr_stmt> <break pos:line="5103" pos:column="32">break;</break>
		</case><case pos:line="5104" pos:column="17">case <expr><name pos:line="5104" pos:column="22">L_VERILOG</name></expr> :
            <expr_stmt><expr><name pos:line="5105" pos:column="13">id</name> <op:operator pos:line="5105" pos:column="16">=</op:operator> <name pos:line="5105" pos:column="18">IDM_LANG_VERILOG</name></expr>;</expr_stmt> <break pos:line="5105" pos:column="36">break;</break>
		</case><case pos:line="5106" pos:column="17">case <expr><name pos:line="5106" pos:column="22">L_CAML</name></expr> :
            <expr_stmt><expr><name pos:line="5107" pos:column="13">id</name> <op:operator pos:line="5107" pos:column="16">=</op:operator> <name pos:line="5107" pos:column="18">IDM_LANG_CAML</name></expr>;</expr_stmt> <break pos:line="5107" pos:column="33">break;</break>

		</case><case pos:line="5109" pos:column="17">case <expr><name pos:line="5109" pos:column="22">L_INNO</name></expr> :
            <expr_stmt><expr><name pos:line="5110" pos:column="13">id</name> <op:operator pos:line="5110" pos:column="16">=</op:operator> <name pos:line="5110" pos:column="18">IDM_LANG_INNO</name></expr>;</expr_stmt> <break pos:line="5110" pos:column="33">break;</break>

		</case><case pos:line="5112" pos:column="17">case <expr><name pos:line="5112" pos:column="22">L_CMAKE</name></expr> :
            <expr_stmt><expr><name pos:line="5113" pos:column="13">id</name> <op:operator pos:line="5113" pos:column="16">=</op:operator> <name pos:line="5113" pos:column="18">IDM_LANG_CMAKE</name></expr>;</expr_stmt> <break pos:line="5113" pos:column="34">break;</break>

		</case><case pos:line="5115" pos:column="17">case <expr><name pos:line="5115" pos:column="22">L_YAML</name></expr> :
            <expr_stmt><expr><name pos:line="5116" pos:column="13">id</name> <op:operator pos:line="5116" pos:column="16">=</op:operator> <name pos:line="5116" pos:column="18">IDM_LANG_YAML</name></expr>;</expr_stmt> <break pos:line="5116" pos:column="33">break;</break>

		</case><case pos:line="5118" pos:column="17">case <expr><name pos:line="5118" pos:column="22">L_COBOL</name></expr> :
            <expr_stmt><expr><name pos:line="5119" pos:column="13">id</name> <op:operator pos:line="5119" pos:column="16">=</op:operator> <name pos:line="5119" pos:column="18">IDM_LANG_COBOL</name></expr>;</expr_stmt> <break pos:line="5119" pos:column="34">break;</break>

		</case><case pos:line="5121" pos:column="17">case <expr><name pos:line="5121" pos:column="22">L_D</name></expr> :
            <expr_stmt><expr><name pos:line="5122" pos:column="13">id</name> <op:operator pos:line="5122" pos:column="16">=</op:operator> <name pos:line="5122" pos:column="18">IDM_LANG_D</name></expr>;</expr_stmt> <break pos:line="5122" pos:column="30">break;</break>

		</case><case pos:line="5124" pos:column="17">case <expr><name pos:line="5124" pos:column="22">L_GUI4CLI</name></expr> :
            <expr_stmt><expr><name pos:line="5125" pos:column="13">id</name> <op:operator pos:line="5125" pos:column="16">=</op:operator> <name pos:line="5125" pos:column="18">IDM_LANG_GUI4CLI</name></expr>;</expr_stmt> <break pos:line="5125" pos:column="36">break;</break>

		</case><case pos:line="5127" pos:column="17">case <expr><name pos:line="5127" pos:column="22">L_POWERSHELL</name></expr> :
            <expr_stmt><expr><name pos:line="5128" pos:column="13">id</name> <op:operator pos:line="5128" pos:column="16">=</op:operator> <name pos:line="5128" pos:column="18">IDM_LANG_POWERSHELL</name></expr>;</expr_stmt> <break pos:line="5128" pos:column="39">break;</break>

		</case><case pos:line="5130" pos:column="17">case <expr><name pos:line="5130" pos:column="22">L_R</name></expr> :
            <expr_stmt><expr><name pos:line="5131" pos:column="13">id</name> <op:operator pos:line="5131" pos:column="16">=</op:operator> <name pos:line="5131" pos:column="18">IDM_LANG_R</name></expr>;</expr_stmt> <break pos:line="5131" pos:column="30">break;</break>

		</case><case pos:line="5133" pos:column="17">case <expr><name pos:line="5133" pos:column="22">L_SEARCHRESULT</name></expr> :
			<expr_stmt><expr><name pos:line="5134" pos:column="25">id</name> <op:operator pos:line="5134" pos:column="28">=</op:operator> <op:operator pos:line="5134" pos:column="30">-</op:operator><lit:literal type="number" pos:line="5134" pos:column="31">1</lit:literal></expr>;</expr_stmt>	<break pos:line="5134" pos:column="41">break;</break>

		</case><case pos:line="5136" pos:column="17">case <expr><name pos:line="5136" pos:column="22">L_TEXT</name></expr> :
			<expr_stmt><expr><name pos:line="5137" pos:column="25">id</name> <op:operator pos:line="5137" pos:column="28">=</op:operator> <name pos:line="5137" pos:column="30">IDM_LANG_TEXT</name></expr>;</expr_stmt>	<break pos:line="5137" pos:column="49">break;</break>

		</case><default pos:line="5139" pos:column="17">default :
			<if pos:line="5140" pos:column="25">if<condition pos:line="5140" pos:column="27">(<expr><name pos:line="5140" pos:column="28">lt</name> <op:operator pos:line="5140" pos:column="31">&gt;=</op:operator> <name pos:line="5140" pos:column="34">L_EXTERNAL</name> <op:operator pos:line="5140" pos:column="45">&amp;&amp;</op:operator> <name pos:line="5140" pos:column="48">lt</name> <op:operator pos:line="5140" pos:column="51">&lt;</op:operator> <name pos:line="5140" pos:column="53">L_END</name></expr>)</condition><then pos:line="5140" pos:column="59">
				<expr_stmt><expr><name pos:line="5141" pos:column="33">id</name> <op:operator pos:line="5141" pos:column="36">=</op:operator> <name pos:line="5141" pos:column="38">lt</name> <op:operator pos:line="5141" pos:column="41">-</op:operator> <name pos:line="5141" pos:column="43">L_EXTERNAL</name> <op:operator pos:line="5141" pos:column="54">+</op:operator> <name pos:line="5141" pos:column="56">IDM_LANG_EXTERNAL</name></expr>;</expr_stmt></then>
			<else pos:line="5142" pos:column="25">else
				<expr_stmt><expr><name pos:line="5143" pos:column="33">id</name> <op:operator pos:line="5143" pos:column="36">=</op:operator> <name pos:line="5143" pos:column="38">IDM_LANG_TEXT</name></expr>;</expr_stmt></else></if>
	</default>}</block></switch>
	<return pos:line="5145" pos:column="9">return <expr><name pos:line="5145" pos:column="16">id</name></expr>;</return>
}</block></function>

<function><type><name pos:line="5148" pos:column="1">void</name></type> <name><name pos:line="5148" pos:column="6">NppParameters</name><op:operator pos:line="5148" pos:column="19">::</op:operator><name pos:line="5148" pos:column="21">writeStyles</name></name><parameter_list pos:line="5148" pos:column="32">(<param><decl><type><name pos:line="5148" pos:column="33">LexerStylerArray</name> <type:modifier pos:line="5148" pos:column="50">&amp;</type:modifier></type> <name pos:line="5148" pos:column="52">lexersStylers</name></decl></param>, <param><decl><type><name pos:line="5148" pos:column="67">StyleArray</name> <type:modifier pos:line="5148" pos:column="78">&amp;</type:modifier></type> <name pos:line="5148" pos:column="80">globalStylers</name></decl></param>)</parameter_list>
<block pos:line="5149" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5150" pos:column="9">TiXmlNode</name> <type:modifier pos:line="5150" pos:column="19">*</type:modifier></type><name pos:line="5150" pos:column="20">lexersRoot</name> <init pos:line="5150" pos:column="31">= <expr><op:operator pos:line="5150" pos:column="33">(</op:operator><call><name><name pos:line="5150" pos:column="34">_pXmlUserStylerDoc</name><op:operator pos:line="5150" pos:column="52">-&gt;</op:operator><name pos:line="5150" pos:column="54">FirstChild</name></name><argument_list pos:line="5150" pos:column="64">(<argument><expr><call><name pos:line="5150" pos:column="65">TEXT</name><argument_list pos:line="5150" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="5150" pos:column="70">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5150" pos:column="85">)</op:operator><op:operator pos:line="5150" pos:column="86">-&gt;</op:operator><call><name pos:line="5150" pos:column="88">FirstChildElement</name><argument_list pos:line="5150" pos:column="105">(<argument><expr><call><name pos:line="5150" pos:column="106">TEXT</name><argument_list pos:line="5150" pos:column="110">(<argument><expr><lit:literal type="string" pos:line="5150" pos:column="111">"LexerStyles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="5151" pos:column="9">for (<init><decl><type><name pos:line="5151" pos:column="14">TiXmlNode</name> <type:modifier pos:line="5151" pos:column="24">*</type:modifier></type><name pos:line="5151" pos:column="25">childNode</name> <init pos:line="5151" pos:column="35">= <expr><call><name><name pos:line="5151" pos:column="37">lexersRoot</name><op:operator pos:line="5151" pos:column="47">-&gt;</op:operator><name pos:line="5151" pos:column="49">FirstChildElement</name></name><argument_list pos:line="5151" pos:column="66">(<argument><expr><call><name pos:line="5151" pos:column="67">TEXT</name><argument_list pos:line="5151" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="5151" pos:column="72">"LexerType"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="5152" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="5153" pos:column="17">childNode</name> <op:operator pos:line="5153" pos:column="27">=</op:operator> <call><name><name pos:line="5153" pos:column="29">childNode</name><op:operator pos:line="5153" pos:column="38">-&gt;</op:operator><name pos:line="5153" pos:column="40">NextSibling</name></name><argument_list pos:line="5153" pos:column="51">(<argument><expr><call><name pos:line="5153" pos:column="52">TEXT</name><argument_list pos:line="5153" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5153" pos:column="57">"LexerType"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="5154" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5155" pos:column="17">TiXmlElement</name> <type:modifier pos:line="5155" pos:column="30">*</type:modifier></type><name pos:line="5155" pos:column="31">element</name> <init pos:line="5155" pos:column="39">= <expr><call><name><name pos:line="5155" pos:column="41">childNode</name><op:operator pos:line="5155" pos:column="50">-&gt;</op:operator><name pos:line="5155" pos:column="52">ToElement</name></name><argument_list pos:line="5155" pos:column="61">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="5156" pos:column="17">const</specifier> <name pos:line="5156" pos:column="23">TCHAR</name> <type:modifier pos:line="5156" pos:column="29">*</type:modifier></type><name pos:line="5156" pos:column="30">nm</name> <init pos:line="5156" pos:column="33">= <expr><call><name><name pos:line="5156" pos:column="35">element</name><op:operator pos:line="5156" pos:column="42">-&gt;</op:operator><name pos:line="5156" pos:column="44">Attribute</name></name><argument_list pos:line="5156" pos:column="53">(<argument><expr><call><name pos:line="5156" pos:column="54">TEXT</name><argument_list pos:line="5156" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="5156" pos:column="59">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<decl_stmt><decl><type><name pos:line="5158" pos:column="17">LexerStyler</name> <type:modifier pos:line="5158" pos:column="29">*</type:modifier></type><name pos:line="5158" pos:column="30">pLs</name> <init pos:line="5158" pos:column="34">= <expr><call><name><name pos:line="5158" pos:column="36">_lexerStylerArray</name><op:operator pos:line="5158" pos:column="53">.</op:operator><name pos:line="5158" pos:column="54">getLexerStylerByName</name></name><argument_list pos:line="5158" pos:column="74">(<argument><expr><name pos:line="5158" pos:column="75">nm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="5159" pos:column="9">LexerStyler</name> <type:modifier pos:line="5159" pos:column="21">*</type:modifier></type><name pos:line="5159" pos:column="22">pLs2</name> <init pos:line="5159" pos:column="27">= <expr><call><name><name pos:line="5159" pos:column="29">lexersStylers</name><op:operator pos:line="5159" pos:column="42">.</op:operator><name pos:line="5159" pos:column="43">getLexerStylerByName</name></name><argument_list pos:line="5159" pos:column="63">(<argument><expr><name pos:line="5159" pos:column="64">nm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="5161" pos:column="17">if <condition pos:line="5161" pos:column="20">(<expr><name pos:line="5161" pos:column="21">pLs</name></expr>)</condition><then pos:line="5161" pos:column="25"> 
		<block pos:line="5162" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="5163" pos:column="25">const</specifier> <name pos:line="5163" pos:column="31">TCHAR</name> <type:modifier pos:line="5163" pos:column="37">*</type:modifier></type><name pos:line="5163" pos:column="38">extStr</name> <init pos:line="5163" pos:column="45">= <expr><call><name><name pos:line="5163" pos:column="47">pLs</name><op:operator pos:line="5163" pos:column="50">-&gt;</op:operator><name pos:line="5163" pos:column="52">getLexerUserExt</name></name><argument_list pos:line="5163" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="5164" pos:column="25">element</name><op:operator pos:line="5164" pos:column="32">-&gt;</op:operator><name pos:line="5164" pos:column="34">SetAttribute</name></name><argument_list pos:line="5164" pos:column="46">(<argument><expr><call><name pos:line="5164" pos:column="47">TEXT</name><argument_list pos:line="5164" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="5164" pos:column="52">"ext"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5164" pos:column="60">extStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<for pos:line="5165" pos:column="25">for (<init><decl><type><name pos:line="5165" pos:column="30">TiXmlNode</name> <type:modifier pos:line="5165" pos:column="40">*</type:modifier></type><name pos:line="5165" pos:column="41">grChildNode</name> <init pos:line="5165" pos:column="53">= <expr><call><name><name pos:line="5165" pos:column="55">childNode</name><op:operator pos:line="5165" pos:column="64">-&gt;</op:operator><name pos:line="5165" pos:column="66">FirstChildElement</name></name><argument_list pos:line="5165" pos:column="83">(<argument><expr><call><name pos:line="5165" pos:column="84">TEXT</name><argument_list pos:line="5165" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="5165" pos:column="89">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
					<condition><expr><name pos:line="5166" pos:column="41">grChildNode</name></expr> ;</condition>
					<incr><expr><name pos:line="5167" pos:column="41">grChildNode</name> <op:operator pos:line="5167" pos:column="53">=</op:operator> <call><name><name pos:line="5167" pos:column="55">grChildNode</name><op:operator pos:line="5167" pos:column="66">-&gt;</op:operator><name pos:line="5167" pos:column="68">NextSibling</name></name><argument_list pos:line="5167" pos:column="79">(<argument><expr><call><name pos:line="5167" pos:column="80">TEXT</name><argument_list pos:line="5167" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="5167" pos:column="85">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
			<block pos:line="5168" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="5169" pos:column="33">TiXmlElement</name> <type:modifier pos:line="5169" pos:column="46">*</type:modifier></type><name pos:line="5169" pos:column="47">grElement</name> <init pos:line="5169" pos:column="57">= <expr><call><name><name pos:line="5169" pos:column="59">grChildNode</name><op:operator pos:line="5169" pos:column="70">-&gt;</op:operator><name pos:line="5169" pos:column="72">ToElement</name></name><argument_list pos:line="5169" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="5170" pos:column="17">const</specifier> <name pos:line="5170" pos:column="23">TCHAR</name> <type:modifier pos:line="5170" pos:column="29">*</type:modifier></type><name pos:line="5170" pos:column="30">styleName</name> <init pos:line="5170" pos:column="40">= <expr><call><name><name pos:line="5170" pos:column="42">grElement</name><op:operator pos:line="5170" pos:column="51">-&gt;</op:operator><name pos:line="5170" pos:column="53">Attribute</name></name><argument_list pos:line="5170" pos:column="62">(<argument><expr><call><name pos:line="5170" pos:column="63">TEXT</name><argument_list pos:line="5170" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="5170" pos:column="68">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt><decl><type><name pos:line="5172" pos:column="17">int</name></type> <name pos:line="5172" pos:column="21">i</name> <init pos:line="5172" pos:column="23">= <expr><call><name><name pos:line="5172" pos:column="25">pLs</name><op:operator pos:line="5172" pos:column="28">-&gt;</op:operator><name pos:line="5172" pos:column="30">getStylerIndexByName</name></name><argument_list pos:line="5172" pos:column="50">(<argument><expr><name pos:line="5172" pos:column="51">styleName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="5173" pos:column="17">if <condition pos:line="5173" pos:column="20">(<expr><name pos:line="5173" pos:column="21">i</name> <op:operator pos:line="5173" pos:column="23">!=</op:operator> <op:operator pos:line="5173" pos:column="26">-</op:operator><lit:literal type="number" pos:line="5173" pos:column="27">1</lit:literal></expr>)</condition><then pos:line="5173" pos:column="29">
				<block pos:line="5174" pos:column="33">{
                    <decl_stmt><decl><type><name pos:line="5175" pos:column="21">Style</name> <type:modifier pos:line="5175" pos:column="27">&amp;</type:modifier></type> <name pos:line="5175" pos:column="29">style</name> <init pos:line="5175" pos:column="35">= <expr><call><name><name pos:line="5175" pos:column="37">pLs</name><op:operator pos:line="5175" pos:column="40">-&gt;</op:operator><name pos:line="5175" pos:column="42">getStyler</name></name><argument_list pos:line="5175" pos:column="51">(<argument><expr><name pos:line="5175" pos:column="52">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="5176" pos:column="21">Style</name> <type:modifier pos:line="5176" pos:column="27">&amp;</type:modifier></type> <name pos:line="5176" pos:column="29">style2Sync</name> <init pos:line="5176" pos:column="40">= <expr><call><name><name pos:line="5176" pos:column="42">pLs2</name><op:operator pos:line="5176" pos:column="46">-&gt;</op:operator><name pos:line="5176" pos:column="48">getStyler</name></name><argument_list pos:line="5176" pos:column="57">(<argument><expr><name pos:line="5176" pos:column="58">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt><expr><call><name pos:line="5178" pos:column="21">writeStyle2Element</name><argument_list pos:line="5178" pos:column="39">(<argument><expr><name pos:line="5178" pos:column="40">style</name></expr></argument>, <argument><expr><name pos:line="5178" pos:column="47">style2Sync</name></expr></argument>, <argument><expr><name pos:line="5178" pos:column="59">grElement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then></if>
			}</block></for>
		}</block></then></if>
	}</block></for>
	
	<for pos:line="5184" pos:column="9">for(<init><decl><type><name pos:line="5184" pos:column="13">size_t</name></type> <name pos:line="5184" pos:column="20">x</name> <init pos:line="5184" pos:column="22">= <expr><lit:literal type="number" pos:line="5184" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5184" pos:column="27">x</name> <op:operator pos:line="5184" pos:column="29">&lt;</op:operator> <call><name><name pos:line="5184" pos:column="31">_pXmlExternalLexerDoc</name><op:operator pos:line="5184" pos:column="52">.</op:operator><name pos:line="5184" pos:column="53">size</name></name><argument_list pos:line="5184" pos:column="57">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="5184" pos:column="61">x</name><op:operator pos:line="5184" pos:column="62">++</op:operator></expr></incr>)
	<block pos:line="5185" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5186" pos:column="17">TiXmlNode</name> <type:modifier pos:line="5186" pos:column="27">*</type:modifier></type><name pos:line="5186" pos:column="28">lexersRoot</name> <init pos:line="5186" pos:column="39">= <expr><op:operator pos:line="5186" pos:column="41">(</op:operator> <name><name pos:line="5186" pos:column="43">_pXmlExternalLexerDoc</name><index pos:line="5186" pos:column="64">[<expr><name pos:line="5186" pos:column="65">x</name></expr>]</index></name><op:operator pos:line="5186" pos:column="67">-&gt;</op:operator><call><name pos:line="5186" pos:column="69">FirstChild</name><argument_list pos:line="5186" pos:column="79">(<argument><expr><call><name pos:line="5186" pos:column="80">TEXT</name><argument_list pos:line="5186" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="5186" pos:column="85">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5186" pos:column="100">)</op:operator><op:operator pos:line="5186" pos:column="101">-&gt;</op:operator><call><name pos:line="5186" pos:column="103">FirstChildElement</name><argument_list pos:line="5186" pos:column="120">(<argument><expr><call><name pos:line="5186" pos:column="121">TEXT</name><argument_list pos:line="5186" pos:column="125">(<argument><expr><lit:literal type="string" pos:line="5186" pos:column="126">"LexerStyles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="5187" pos:column="17">for (<init><decl><type><name pos:line="5187" pos:column="22">TiXmlNode</name> <type:modifier pos:line="5187" pos:column="32">*</type:modifier></type><name pos:line="5187" pos:column="33">childNode</name> <init pos:line="5187" pos:column="43">= <expr><call><name><name pos:line="5187" pos:column="45">lexersRoot</name><op:operator pos:line="5187" pos:column="55">-&gt;</op:operator><name pos:line="5187" pos:column="57">FirstChildElement</name></name><argument_list pos:line="5187" pos:column="74">(<argument><expr><call><name pos:line="5187" pos:column="75">TEXT</name><argument_list pos:line="5187" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="5187" pos:column="80">"LexerType"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
			<condition><expr><name pos:line="5188" pos:column="25">childNode</name></expr> ;</condition>
			<incr><expr><name pos:line="5189" pos:column="25">childNode</name> <op:operator pos:line="5189" pos:column="35">=</op:operator> <call><name><name pos:line="5189" pos:column="37">childNode</name><op:operator pos:line="5189" pos:column="46">-&gt;</op:operator><name pos:line="5189" pos:column="48">NextSibling</name></name><argument_list pos:line="5189" pos:column="59">(<argument><expr><call><name pos:line="5189" pos:column="60">TEXT</name><argument_list pos:line="5189" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="5189" pos:column="65">"LexerType"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
		<block pos:line="5190" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="5191" pos:column="25">TiXmlElement</name> <type:modifier pos:line="5191" pos:column="38">*</type:modifier></type><name pos:line="5191" pos:column="39">element</name> <init pos:line="5191" pos:column="47">= <expr><call><name><name pos:line="5191" pos:column="49">childNode</name><op:operator pos:line="5191" pos:column="58">-&gt;</op:operator><name pos:line="5191" pos:column="60">ToElement</name></name><argument_list pos:line="5191" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="5192" pos:column="25">const</specifier> <name pos:line="5192" pos:column="31">TCHAR</name> <type:modifier pos:line="5192" pos:column="37">*</type:modifier></type><name pos:line="5192" pos:column="38">nm</name> <init pos:line="5192" pos:column="41">= <expr><call><name><name pos:line="5192" pos:column="43">element</name><op:operator pos:line="5192" pos:column="50">-&gt;</op:operator><name pos:line="5192" pos:column="52">Attribute</name></name><argument_list pos:line="5192" pos:column="61">(<argument><expr><call><name pos:line="5192" pos:column="62">TEXT</name><argument_list pos:line="5192" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="5192" pos:column="67">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name pos:line="5194" pos:column="25">LexerStyler</name> <type:modifier pos:line="5194" pos:column="37">*</type:modifier></type><name pos:line="5194" pos:column="38">pLs</name> <init pos:line="5194" pos:column="42">= <expr><call><name><name pos:line="5194" pos:column="44">_lexerStylerArray</name><op:operator pos:line="5194" pos:column="61">.</op:operator><name pos:line="5194" pos:column="62">getLexerStylerByName</name></name><argument_list pos:line="5194" pos:column="82">(<argument><expr><name pos:line="5194" pos:column="83">nm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5195" pos:column="25">LexerStyler</name> <type:modifier pos:line="5195" pos:column="37">*</type:modifier></type><name pos:line="5195" pos:column="38">pLs2</name> <init pos:line="5195" pos:column="43">= <expr><call><name><name pos:line="5195" pos:column="45">lexersStylers</name><op:operator pos:line="5195" pos:column="58">.</op:operator><name pos:line="5195" pos:column="59">getLexerStylerByName</name></name><argument_list pos:line="5195" pos:column="79">(<argument><expr><name pos:line="5195" pos:column="80">nm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="5197" pos:column="25">if <condition pos:line="5197" pos:column="28">(<expr><name pos:line="5197" pos:column="29">pLs</name></expr>)</condition><then pos:line="5197" pos:column="33"> 
			<block pos:line="5198" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="5199" pos:column="33">const</specifier> <name pos:line="5199" pos:column="39">TCHAR</name> <type:modifier pos:line="5199" pos:column="45">*</type:modifier></type><name pos:line="5199" pos:column="46">extStr</name> <init pos:line="5199" pos:column="53">= <expr><call><name><name pos:line="5199" pos:column="55">pLs</name><op:operator pos:line="5199" pos:column="58">-&gt;</op:operator><name pos:line="5199" pos:column="60">getLexerUserExt</name></name><argument_list pos:line="5199" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="5200" pos:column="33">element</name><op:operator pos:line="5200" pos:column="40">-&gt;</op:operator><name pos:line="5200" pos:column="42">SetAttribute</name></name><argument_list pos:line="5200" pos:column="54">(<argument><expr><call><name pos:line="5200" pos:column="55">TEXT</name><argument_list pos:line="5200" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="5200" pos:column="60">"ext"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5200" pos:column="68">extStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<for pos:line="5202" pos:column="33">for (<init><decl><type><name pos:line="5202" pos:column="38">TiXmlNode</name> <type:modifier pos:line="5202" pos:column="48">*</type:modifier></type><name pos:line="5202" pos:column="49">grChildNode</name> <init pos:line="5202" pos:column="61">= <expr><call><name><name pos:line="5202" pos:column="63">childNode</name><op:operator pos:line="5202" pos:column="72">-&gt;</op:operator><name pos:line="5202" pos:column="74">FirstChildElement</name></name><argument_list pos:line="5202" pos:column="91">(<argument><expr><call><name pos:line="5202" pos:column="92">TEXT</name><argument_list pos:line="5202" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="5202" pos:column="97">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
						<condition><expr><name pos:line="5203" pos:column="49">grChildNode</name></expr> ;</condition>
						<incr><expr><name pos:line="5204" pos:column="49">grChildNode</name> <op:operator pos:line="5204" pos:column="61">=</op:operator> <call><name><name pos:line="5204" pos:column="63">grChildNode</name><op:operator pos:line="5204" pos:column="74">-&gt;</op:operator><name pos:line="5204" pos:column="76">NextSibling</name></name><argument_list pos:line="5204" pos:column="87">(<argument><expr><call><name pos:line="5204" pos:column="88">TEXT</name><argument_list pos:line="5204" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="5204" pos:column="93">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
				<block pos:line="5205" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="5206" pos:column="41">TiXmlElement</name> <type:modifier pos:line="5206" pos:column="54">*</type:modifier></type><name pos:line="5206" pos:column="55">grElement</name> <init pos:line="5206" pos:column="65">= <expr><call><name><name pos:line="5206" pos:column="67">grChildNode</name><op:operator pos:line="5206" pos:column="78">-&gt;</op:operator><name pos:line="5206" pos:column="80">ToElement</name></name><argument_list pos:line="5206" pos:column="89">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="5207" pos:column="41">const</specifier> <name pos:line="5207" pos:column="47">TCHAR</name> <type:modifier pos:line="5207" pos:column="53">*</type:modifier></type><name pos:line="5207" pos:column="54">styleName</name> <init pos:line="5207" pos:column="64">= <expr><call><name><name pos:line="5207" pos:column="66">grElement</name><op:operator pos:line="5207" pos:column="75">-&gt;</op:operator><name pos:line="5207" pos:column="77">Attribute</name></name><argument_list pos:line="5207" pos:column="86">(<argument><expr><call><name pos:line="5207" pos:column="87">TEXT</name><argument_list pos:line="5207" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="5207" pos:column="92">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<decl_stmt><decl><type><name pos:line="5209" pos:column="41">int</name></type> <name pos:line="5209" pos:column="45">i</name> <init pos:line="5209" pos:column="47">= <expr><call><name><name pos:line="5209" pos:column="49">pLs</name><op:operator pos:line="5209" pos:column="52">-&gt;</op:operator><name pos:line="5209" pos:column="54">getStylerIndexByName</name></name><argument_list pos:line="5209" pos:column="74">(<argument><expr><name pos:line="5209" pos:column="75">styleName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="5210" pos:column="41">if <condition pos:line="5210" pos:column="44">(<expr><name pos:line="5210" pos:column="45">i</name> <op:operator pos:line="5210" pos:column="47">!=</op:operator> <op:operator pos:line="5210" pos:column="50">-</op:operator><lit:literal type="number" pos:line="5210" pos:column="51">1</lit:literal></expr>)</condition><then pos:line="5210" pos:column="53">
					<block pos:line="5211" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="5212" pos:column="49">Style</name> <type:modifier pos:line="5212" pos:column="55">&amp;</type:modifier></type> <name pos:line="5212" pos:column="57">style</name> <init pos:line="5212" pos:column="63">= <expr><call><name><name pos:line="5212" pos:column="65">pLs</name><op:operator pos:line="5212" pos:column="68">-&gt;</op:operator><name pos:line="5212" pos:column="70">getStyler</name></name><argument_list pos:line="5212" pos:column="79">(<argument><expr><name pos:line="5212" pos:column="80">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="5213" pos:column="49">Style</name> <type:modifier pos:line="5213" pos:column="55">&amp;</type:modifier></type> <name pos:line="5213" pos:column="57">style2Sync</name> <init pos:line="5213" pos:column="68">= <expr><call><name><name pos:line="5213" pos:column="70">pLs2</name><op:operator pos:line="5213" pos:column="74">-&gt;</op:operator><name pos:line="5213" pos:column="76">getStyler</name></name><argument_list pos:line="5213" pos:column="85">(<argument><expr><name pos:line="5213" pos:column="86">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

						<expr_stmt><expr><call><name pos:line="5215" pos:column="49">writeStyle2Element</name><argument_list pos:line="5215" pos:column="67">(<argument><expr><name pos:line="5215" pos:column="68">style</name></expr></argument>, <argument><expr><name pos:line="5215" pos:column="75">style2Sync</name></expr></argument>, <argument><expr><name pos:line="5215" pos:column="87">grElement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
			}</block></then></if>
		}</block></for>
		<expr_stmt><expr><name><name pos:line="5220" pos:column="17">_pXmlExternalLexerDoc</name><index pos:line="5220" pos:column="38">[<expr><name pos:line="5220" pos:column="39">x</name></expr>]</index></name><op:operator pos:line="5220" pos:column="41">-&gt;</op:operator><call><name pos:line="5220" pos:column="43">SaveFile</name><argument_list pos:line="5220" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="5223" pos:column="9">TiXmlNode</name> <type:modifier pos:line="5223" pos:column="19">*</type:modifier></type><name pos:line="5223" pos:column="20">globalStylesRoot</name> <init pos:line="5223" pos:column="37">= <expr><op:operator pos:line="5223" pos:column="39">(</op:operator><call><name><name pos:line="5223" pos:column="40">_pXmlUserStylerDoc</name><op:operator pos:line="5223" pos:column="58">-&gt;</op:operator><name pos:line="5223" pos:column="60">FirstChild</name></name><argument_list pos:line="5223" pos:column="70">(<argument><expr><call><name pos:line="5223" pos:column="71">TEXT</name><argument_list pos:line="5223" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="5223" pos:column="76">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5223" pos:column="91">)</op:operator><op:operator pos:line="5223" pos:column="92">-&gt;</op:operator><call><name pos:line="5223" pos:column="94">FirstChildElement</name><argument_list pos:line="5223" pos:column="111">(<argument><expr><call><name pos:line="5223" pos:column="112">TEXT</name><argument_list pos:line="5223" pos:column="116">(<argument><expr><lit:literal type="string" pos:line="5223" pos:column="117">"GlobalStyles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <for pos:line="5225" pos:column="5">for (<init><decl><type><name pos:line="5225" pos:column="10">TiXmlNode</name> <type:modifier pos:line="5225" pos:column="20">*</type:modifier></type><name pos:line="5225" pos:column="21">childNode</name> <init pos:line="5225" pos:column="31">= <expr><call><name><name pos:line="5225" pos:column="33">globalStylesRoot</name><op:operator pos:line="5225" pos:column="49">-&gt;</op:operator><name pos:line="5225" pos:column="51">FirstChildElement</name></name><argument_list pos:line="5225" pos:column="68">(<argument><expr><call><name pos:line="5225" pos:column="69">TEXT</name><argument_list pos:line="5225" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="5225" pos:column="74">"WidgetStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="5226" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="5227" pos:column="17">childNode</name> <op:operator pos:line="5227" pos:column="27">=</op:operator> <call><name><name pos:line="5227" pos:column="29">childNode</name><op:operator pos:line="5227" pos:column="38">-&gt;</op:operator><name pos:line="5227" pos:column="40">NextSibling</name></name><argument_list pos:line="5227" pos:column="51">(<argument><expr><call><name pos:line="5227" pos:column="52">TEXT</name><argument_list pos:line="5227" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5227" pos:column="57">"WidgetStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
    <block pos:line="5228" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="5229" pos:column="9">TiXmlElement</name> <type:modifier pos:line="5229" pos:column="22">*</type:modifier></type><name pos:line="5229" pos:column="23">pElement</name> <init pos:line="5229" pos:column="32">= <expr><call><name><name pos:line="5229" pos:column="34">childNode</name><op:operator pos:line="5229" pos:column="43">-&gt;</op:operator><name pos:line="5229" pos:column="45">ToElement</name></name><argument_list pos:line="5229" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="5230" pos:column="9">const</specifier> <name pos:line="5230" pos:column="15">TCHAR</name> <type:modifier pos:line="5230" pos:column="21">*</type:modifier></type><name pos:line="5230" pos:column="22">styleName</name> <init pos:line="5230" pos:column="32">= <expr><call><name><name pos:line="5230" pos:column="34">pElement</name><op:operator pos:line="5230" pos:column="42">-&gt;</op:operator><name pos:line="5230" pos:column="44">Attribute</name></name><argument_list pos:line="5230" pos:column="53">(<argument><expr><call><name pos:line="5230" pos:column="54">TEXT</name><argument_list pos:line="5230" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="5230" pos:column="59">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="5231" pos:column="9">int</name></type> <name pos:line="5231" pos:column="13">i</name> <init pos:line="5231" pos:column="15">= <expr><call><name><name pos:line="5231" pos:column="17">_widgetStyleArray</name><op:operator pos:line="5231" pos:column="34">.</op:operator><name pos:line="5231" pos:column="35">getStylerIndexByName</name></name><argument_list pos:line="5231" pos:column="55">(<argument><expr><name pos:line="5231" pos:column="56">styleName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if pos:line="5233" pos:column="9">if <condition pos:line="5233" pos:column="12">(<expr><name pos:line="5233" pos:column="13">i</name> <op:operator pos:line="5233" pos:column="15">!=</op:operator> <op:operator pos:line="5233" pos:column="18">-</op:operator><lit:literal type="number" pos:line="5233" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="5233" pos:column="21">
		<block pos:line="5234" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="5235" pos:column="13">Style</name> <type:modifier pos:line="5235" pos:column="19">&amp;</type:modifier></type> <name pos:line="5235" pos:column="21">style</name> <init pos:line="5235" pos:column="27">= <expr><call><name><name pos:line="5235" pos:column="29">_widgetStyleArray</name><op:operator pos:line="5235" pos:column="46">.</op:operator><name pos:line="5235" pos:column="47">getStyler</name></name><argument_list pos:line="5235" pos:column="56">(<argument><expr><name pos:line="5235" pos:column="57">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="5236" pos:column="13">Style</name> <type:modifier pos:line="5236" pos:column="19">&amp;</type:modifier></type> <name pos:line="5236" pos:column="21">style2Sync</name> <init pos:line="5236" pos:column="32">= <expr><call><name><name pos:line="5236" pos:column="34">globalStylers</name><op:operator pos:line="5236" pos:column="47">.</op:operator><name pos:line="5236" pos:column="48">getStyler</name></name><argument_list pos:line="5236" pos:column="57">(<argument><expr><name pos:line="5236" pos:column="58">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt><expr><call><name pos:line="5238" pos:column="13">writeStyle2Element</name><argument_list pos:line="5238" pos:column="31">(<argument><expr><name pos:line="5238" pos:column="32">style</name></expr></argument>, <argument><expr><name pos:line="5238" pos:column="39">style2Sync</name></expr></argument>, <argument><expr><name pos:line="5238" pos:column="51">pElement</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></for>

	<expr_stmt><expr><call><name><name pos:line="5242" pos:column="9">_pXmlUserStylerDoc</name><op:operator pos:line="5242" pos:column="27">-&gt;</op:operator><name pos:line="5242" pos:column="29">SaveFile</name></name><argument_list pos:line="5242" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="5246" pos:column="1">bool</name></type> <name><name pos:line="5246" pos:column="6">NppParameters</name><op:operator pos:line="5246" pos:column="19">::</op:operator><name pos:line="5246" pos:column="21">insertTabInfo</name></name><parameter_list pos:line="5246" pos:column="34">(<param><decl><type><specifier pos:line="5246" pos:column="35">const</specifier> <name pos:line="5246" pos:column="41">TCHAR</name> <type:modifier pos:line="5246" pos:column="47">*</type:modifier></type><name pos:line="5246" pos:column="48">langName</name></decl></param>, <param><decl><type><name pos:line="5246" pos:column="58">int</name></type> <name pos:line="5246" pos:column="62">tabInfo</name></decl></param>)</parameter_list>
<block pos:line="5247" pos:column="1">{
    <if pos:line="5248" pos:column="5">if <condition pos:line="5248" pos:column="8">(<expr><op:operator pos:line="5248" pos:column="9">!</op:operator><name pos:line="5248" pos:column="10">_pXmlDoc</name></expr>)</condition><then pos:line="5248" pos:column="19"> <return pos:line="5248" pos:column="20">return <expr><lit:literal type="boolean" pos:line="5248" pos:column="27">false</lit:literal></expr>;</return></then></if>
    <decl_stmt><decl><type><name pos:line="5249" pos:column="5">TiXmlNode</name> <type:modifier pos:line="5249" pos:column="15">*</type:modifier></type><name pos:line="5249" pos:column="16">langRoot</name> <init pos:line="5249" pos:column="25">= <expr><op:operator pos:line="5249" pos:column="27">(</op:operator><call><name><name pos:line="5249" pos:column="28">_pXmlDoc</name><op:operator pos:line="5249" pos:column="36">-&gt;</op:operator><name pos:line="5249" pos:column="38">FirstChild</name></name><argument_list pos:line="5249" pos:column="48">(<argument><expr><call><name pos:line="5249" pos:column="49">TEXT</name><argument_list pos:line="5249" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="5249" pos:column="54">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5249" pos:column="69">)</op:operator><op:operator pos:line="5249" pos:column="70">-&gt;</op:operator><call><name pos:line="5249" pos:column="72">FirstChildElement</name><argument_list pos:line="5249" pos:column="89">(<argument><expr><call><name pos:line="5249" pos:column="90">TEXT</name><argument_list pos:line="5249" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="5249" pos:column="95">"Languages"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:line="5250" pos:column="5">for (<init><decl><type><name pos:line="5250" pos:column="10">TiXmlNode</name> <type:modifier pos:line="5250" pos:column="20">*</type:modifier></type><name pos:line="5250" pos:column="21">childNode</name> <init pos:line="5250" pos:column="31">= <expr><call><name><name pos:line="5250" pos:column="33">langRoot</name><op:operator pos:line="5250" pos:column="41">-&gt;</op:operator><name pos:line="5250" pos:column="43">FirstChildElement</name></name><argument_list pos:line="5250" pos:column="60">(<argument><expr><call><name pos:line="5250" pos:column="61">TEXT</name><argument_list pos:line="5250" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="5250" pos:column="66">"Language"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="5251" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="5252" pos:column="17">childNode</name> <op:operator pos:line="5252" pos:column="27">=</op:operator> <call><name><name pos:line="5252" pos:column="29">childNode</name><op:operator pos:line="5252" pos:column="38">-&gt;</op:operator><name pos:line="5252" pos:column="40">NextSibling</name></name><argument_list pos:line="5252" pos:column="51">(<argument><expr><call><name pos:line="5252" pos:column="52">TEXT</name><argument_list pos:line="5252" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5252" pos:column="57">"Language"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="5253" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="5254" pos:column="9">TiXmlElement</name> <type:modifier pos:line="5254" pos:column="22">*</type:modifier></type><name pos:line="5254" pos:column="23">element</name> <init pos:line="5254" pos:column="31">= <expr><call><name><name pos:line="5254" pos:column="33">childNode</name><op:operator pos:line="5254" pos:column="42">-&gt;</op:operator><name pos:line="5254" pos:column="44">ToElement</name></name><argument_list pos:line="5254" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="5255" pos:column="17">const</specifier> <name pos:line="5255" pos:column="23">TCHAR</name> <type:modifier pos:line="5255" pos:column="29">*</type:modifier></type><name pos:line="5255" pos:column="30">nm</name> <init pos:line="5255" pos:column="33">= <expr><call><name><name pos:line="5255" pos:column="35">element</name><op:operator pos:line="5255" pos:column="42">-&gt;</op:operator><name pos:line="5255" pos:column="44">Attribute</name></name><argument_list pos:line="5255" pos:column="53">(<argument><expr><call><name pos:line="5255" pos:column="54">TEXT</name><argument_list pos:line="5255" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="5255" pos:column="59">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="5256" pos:column="9">if <condition pos:line="5256" pos:column="12">(<expr><name pos:line="5256" pos:column="13">nm</name> <op:operator pos:line="5256" pos:column="16">&amp;&amp;</op:operator> <call><name pos:line="5256" pos:column="19">lstrcmp</name><argument_list pos:line="5256" pos:column="26">(<argument><expr><name pos:line="5256" pos:column="27">langName</name></expr></argument>, <argument><expr><name pos:line="5256" pos:column="37">nm</name></expr></argument>)</argument_list></call> <op:operator pos:line="5256" pos:column="41">==</op:operator> <lit:literal type="number" pos:line="5256" pos:column="44">0</lit:literal></expr>)</condition><then pos:line="5256" pos:column="46">
        <block pos:line="5257" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="5258" pos:column="13">childNode</name><op:operator pos:line="5258" pos:column="22">-&gt;</op:operator><name pos:line="5258" pos:column="24">ToElement</name></name><argument_list pos:line="5258" pos:column="33">()</argument_list></call><op:operator pos:line="5258" pos:column="35">-&gt;</op:operator><call><name pos:line="5258" pos:column="37">SetAttribute</name><argument_list pos:line="5258" pos:column="49">(<argument><expr><call><name pos:line="5258" pos:column="50">TEXT</name><argument_list pos:line="5258" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="5258" pos:column="55">"tabSettings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5258" pos:column="71">tabInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="5259" pos:column="25">_pXmlDoc</name><op:operator pos:line="5259" pos:column="33">-&gt;</op:operator><name pos:line="5259" pos:column="35">SaveFile</name></name><argument_list pos:line="5259" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            <return pos:line="5260" pos:column="13">return <expr><lit:literal type="boolean" pos:line="5260" pos:column="20">true</lit:literal></expr>;</return>
        }</block></then></if>
    }</block></for>
    <return pos:line="5263" pos:column="5">return <expr><lit:literal type="boolean" pos:line="5263" pos:column="12">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="5266" pos:column="1">void</name></type> <name><name pos:line="5266" pos:column="6">NppParameters</name><op:operator pos:line="5266" pos:column="19">::</op:operator><name pos:line="5266" pos:column="21">writeStyle2Element</name></name><parameter_list pos:line="5266" pos:column="39">(<param><decl><type><name pos:line="5266" pos:column="40">Style</name> <type:modifier pos:line="5266" pos:column="46">&amp;</type:modifier></type> <name pos:line="5266" pos:column="48">style2Write</name></decl></param>, <param><decl><type><name pos:line="5266" pos:column="61">Style</name> <type:modifier pos:line="5266" pos:column="67">&amp;</type:modifier></type> <name pos:line="5266" pos:column="69">style2Sync</name></decl></param>, <param><decl><type><name pos:line="5266" pos:column="81">TiXmlElement</name> <type:modifier pos:line="5266" pos:column="94">*</type:modifier></type><name pos:line="5266" pos:column="95">element</name></decl></param>)</parameter_list>
<block pos:line="5267" pos:column="1">{
    <if pos:line="5268" pos:column="5">if <condition pos:line="5268" pos:column="8">(<expr><call><name pos:line="5268" pos:column="9">HIBYTE</name><argument_list pos:line="5268" pos:column="15">(<argument><expr><call><name pos:line="5268" pos:column="16">HIWORD</name><argument_list pos:line="5268" pos:column="22">(<argument><expr><name><name pos:line="5268" pos:column="23">style2Write</name><op:operator pos:line="5268" pos:column="34">.</op:operator><name pos:line="5268" pos:column="35">_fgColor</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5268" pos:column="46">!=</op:operator> <lit:literal type="number" pos:line="5268" pos:column="49">0xFF</lit:literal></expr>)</condition><then pos:line="5268" pos:column="54">
    <block pos:line="5269" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="5270" pos:column="9">int</name></type> <name pos:line="5270" pos:column="13">rgbVal</name> <init pos:line="5270" pos:column="20">= <expr><call><name pos:line="5270" pos:column="22">RGB2int</name><argument_list pos:line="5270" pos:column="29">(<argument><expr><name><name pos:line="5270" pos:column="30">style2Write</name><op:operator pos:line="5270" pos:column="41">.</op:operator><name pos:line="5270" pos:column="42">_fgColor</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name pos:line="5271" pos:column="13">TCHAR</name></type> <name><name pos:line="5271" pos:column="19">fgStr</name><index pos:line="5271" pos:column="24">[<expr><lit:literal type="number" pos:line="5271" pos:column="25">7</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	    <expr_stmt><expr><call><name pos:line="5272" pos:column="13">wsprintf</name><argument_list pos:line="5272" pos:column="21">(<argument><expr><name pos:line="5272" pos:column="22">fgStr</name></expr></argument>, <argument><expr><call><name pos:line="5272" pos:column="29">TEXT</name><argument_list pos:line="5272" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="5272" pos:column="34">"%.6X"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5272" pos:column="43">rgbVal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><call><name><name pos:line="5273" pos:column="13">element</name><op:operator pos:line="5273" pos:column="20">-&gt;</op:operator><name pos:line="5273" pos:column="22">SetAttribute</name></name><argument_list pos:line="5273" pos:column="34">(<argument><expr><call><name pos:line="5273" pos:column="35">TEXT</name><argument_list pos:line="5273" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="5273" pos:column="40">"fgColor"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5273" pos:column="52">fgStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if pos:line="5276" pos:column="5">if <condition pos:line="5276" pos:column="8">(<expr><call><name pos:line="5276" pos:column="9">HIBYTE</name><argument_list pos:line="5276" pos:column="15">(<argument><expr><call><name pos:line="5276" pos:column="16">HIWORD</name><argument_list pos:line="5276" pos:column="22">(<argument><expr><name><name pos:line="5276" pos:column="23">style2Write</name><op:operator pos:line="5276" pos:column="34">.</op:operator><name pos:line="5276" pos:column="35">_bgColor</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="5276" pos:column="46">!=</op:operator> <lit:literal type="number" pos:line="5276" pos:column="49">0xFF</lit:literal></expr>)</condition><then pos:line="5276" pos:column="54">
    <block pos:line="5277" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="5278" pos:column="9">int</name></type> <name pos:line="5278" pos:column="13">rgbVal</name> <init pos:line="5278" pos:column="20">= <expr><call><name pos:line="5278" pos:column="22">RGB2int</name><argument_list pos:line="5278" pos:column="29">(<argument><expr><name><name pos:line="5278" pos:column="30">style2Write</name><op:operator pos:line="5278" pos:column="41">.</op:operator><name pos:line="5278" pos:column="42">_bgColor</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	    <decl_stmt><decl><type><name pos:line="5279" pos:column="13">TCHAR</name></type> <name><name pos:line="5279" pos:column="19">bgStr</name><index pos:line="5279" pos:column="24">[<expr><lit:literal type="number" pos:line="5279" pos:column="25">7</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	    <expr_stmt><expr><call><name pos:line="5280" pos:column="13">wsprintf</name><argument_list pos:line="5280" pos:column="21">(<argument><expr><name pos:line="5280" pos:column="22">bgStr</name></expr></argument>, <argument><expr><call><name pos:line="5280" pos:column="29">TEXT</name><argument_list pos:line="5280" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="5280" pos:column="34">"%.6X"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5280" pos:column="43">rgbVal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><call><name><name pos:line="5281" pos:column="13">element</name><op:operator pos:line="5281" pos:column="20">-&gt;</op:operator><name pos:line="5281" pos:column="22">SetAttribute</name></name><argument_list pos:line="5281" pos:column="34">(<argument><expr><call><name pos:line="5281" pos:column="35">TEXT</name><argument_list pos:line="5281" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="5281" pos:column="40">"bgColor"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5281" pos:column="52">bgStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

	<if pos:line="5284" pos:column="9">if <condition pos:line="5284" pos:column="12">(<expr><name><name pos:line="5284" pos:column="13">style2Write</name><op:operator pos:line="5284" pos:column="24">.</op:operator><name pos:line="5284" pos:column="25">_colorStyle</name></name> <op:operator pos:line="5284" pos:column="37">!=</op:operator> <name pos:line="5284" pos:column="40">COLORSTYLE_ALL</name></expr>)</condition><then pos:line="5284" pos:column="55">
    <block pos:line="5285" pos:column="5">{
	    <expr_stmt><expr><call><name><name pos:line="5286" pos:column="13">element</name><op:operator pos:line="5286" pos:column="20">-&gt;</op:operator><name pos:line="5286" pos:column="22">SetAttribute</name></name><argument_list pos:line="5286" pos:column="34">(<argument><expr><call><name pos:line="5286" pos:column="35">TEXT</name><argument_list pos:line="5286" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="5286" pos:column="40">"colorStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5286" pos:column="55">style2Write</name><op:operator pos:line="5286" pos:column="66">.</op:operator><name pos:line="5286" pos:column="67">_colorStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

    <if pos:line="5289" pos:column="5">if <condition pos:line="5289" pos:column="8">(<expr><name><name pos:line="5289" pos:column="9">style2Write</name><op:operator pos:line="5289" pos:column="20">.</op:operator><name pos:line="5289" pos:column="21">_fontName</name></name></expr>)</condition><then pos:line="5289" pos:column="31">
    <block pos:line="5290" pos:column="5">{
        <decl_stmt><decl><type><specifier pos:line="5291" pos:column="9">const</specifier> <name pos:line="5291" pos:column="15">TCHAR</name> <type:modifier pos:line="5291" pos:column="21">*</type:modifier></type><name pos:line="5291" pos:column="22">oldFontName</name> <init pos:line="5291" pos:column="34">= <expr><call><name><name pos:line="5291" pos:column="36">element</name><op:operator pos:line="5291" pos:column="43">-&gt;</op:operator><name pos:line="5291" pos:column="45">Attribute</name></name><argument_list pos:line="5291" pos:column="54">(<argument><expr><call><name pos:line="5291" pos:column="55">TEXT</name><argument_list pos:line="5291" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="5291" pos:column="60">"fontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="5292" pos:column="9">if <condition pos:line="5292" pos:column="12">(<expr><call><name pos:line="5292" pos:column="13">lstrcmp</name><argument_list pos:line="5292" pos:column="20">(<argument><expr><name pos:line="5292" pos:column="21">oldFontName</name></expr></argument>, <argument><expr><name><name pos:line="5292" pos:column="34">style2Write</name><op:operator pos:line="5292" pos:column="45">.</op:operator><name pos:line="5292" pos:column="46">_fontName</name></name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="5292" pos:column="57">
        <block pos:line="5293" pos:column="9">{
		    <expr_stmt><expr><call><name><name pos:line="5294" pos:column="21">element</name><op:operator pos:line="5294" pos:column="28">-&gt;</op:operator><name pos:line="5294" pos:column="30">SetAttribute</name></name><argument_list pos:line="5294" pos:column="42">(<argument><expr><call><name pos:line="5294" pos:column="43">TEXT</name><argument_list pos:line="5294" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="5294" pos:column="48">"fontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5294" pos:column="61">style2Write</name><op:operator pos:line="5294" pos:column="72">.</op:operator><name pos:line="5294" pos:column="73">_fontName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="5295" pos:column="13">style2Sync</name><op:operator pos:line="5295" pos:column="23">.</op:operator><name pos:line="5295" pos:column="24">_fontName</name></name> <op:operator pos:line="5295" pos:column="34">=</op:operator> <name><name pos:line="5295" pos:column="36">style2Write</name><op:operator pos:line="5295" pos:column="47">.</op:operator><name pos:line="5295" pos:column="48">_fontName</name></name> <op:operator pos:line="5295" pos:column="58">=</op:operator> <call><name><name pos:line="5295" pos:column="60">element</name><op:operator pos:line="5295" pos:column="67">-&gt;</op:operator><name pos:line="5295" pos:column="69">Attribute</name></name><argument_list pos:line="5295" pos:column="78">(<argument><expr><call><name pos:line="5295" pos:column="79">TEXT</name><argument_list pos:line="5295" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="5295" pos:column="84">"fontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if>
    }</block></then></if>

    <if pos:line="5299" pos:column="5">if <condition pos:line="5299" pos:column="8">(<expr><name><name pos:line="5299" pos:column="9">style2Write</name><op:operator pos:line="5299" pos:column="20">.</op:operator><name pos:line="5299" pos:column="21">_fontSize</name></name> <op:operator pos:line="5299" pos:column="31">!=</op:operator> <name pos:line="5299" pos:column="34">STYLE_NOT_USED</name></expr>)</condition><then pos:line="5299" pos:column="49">
    <block pos:line="5300" pos:column="5">{
        <if pos:line="5301" pos:column="9">if <condition pos:line="5301" pos:column="12">(<expr><op:operator pos:line="5301" pos:column="13">!</op:operator><name><name pos:line="5301" pos:column="14">style2Write</name><op:operator pos:line="5301" pos:column="25">.</op:operator><name pos:line="5301" pos:column="26">_fontSize</name></name></expr>)</condition><then pos:line="5301" pos:column="36">
            <expr_stmt><expr><call><name><name pos:line="5302" pos:column="13">element</name><op:operator pos:line="5302" pos:column="20">-&gt;</op:operator><name pos:line="5302" pos:column="22">SetAttribute</name></name><argument_list pos:line="5302" pos:column="34">(<argument><expr><call><name pos:line="5302" pos:column="35">TEXT</name><argument_list pos:line="5302" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="5302" pos:column="40">"fontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="5302" pos:column="53">TEXT</name><argument_list pos:line="5302" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="5302" pos:column="58">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
        <else pos:line="5303" pos:column="9">else
		    <expr_stmt><expr><call><name><name pos:line="5304" pos:column="21">element</name><op:operator pos:line="5304" pos:column="28">-&gt;</op:operator><name pos:line="5304" pos:column="30">SetAttribute</name></name><argument_list pos:line="5304" pos:column="42">(<argument><expr><call><name pos:line="5304" pos:column="43">TEXT</name><argument_list pos:line="5304" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="5304" pos:column="48">"fontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5304" pos:column="61">style2Write</name><op:operator pos:line="5304" pos:column="72">.</op:operator><name pos:line="5304" pos:column="73">_fontSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
    }</block></then></if>

    <if pos:line="5307" pos:column="5">if <condition pos:line="5307" pos:column="8">(<expr><name><name pos:line="5307" pos:column="9">style2Write</name><op:operator pos:line="5307" pos:column="20">.</op:operator><name pos:line="5307" pos:column="21">_fontStyle</name></name> <op:operator pos:line="5307" pos:column="32">!=</op:operator> <name pos:line="5307" pos:column="35">STYLE_NOT_USED</name></expr>)</condition><then pos:line="5307" pos:column="50">
    <block pos:line="5308" pos:column="5">{
	    <expr_stmt><expr><call><name><name pos:line="5309" pos:column="13">element</name><op:operator pos:line="5309" pos:column="20">-&gt;</op:operator><name pos:line="5309" pos:column="22">SetAttribute</name></name><argument_list pos:line="5309" pos:column="34">(<argument><expr><call><name pos:line="5309" pos:column="35">TEXT</name><argument_list pos:line="5309" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="5309" pos:column="40">"fontStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5309" pos:column="54">style2Write</name><op:operator pos:line="5309" pos:column="65">.</op:operator><name pos:line="5309" pos:column="66">_fontStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

	
	<if pos:line="5313" pos:column="9">if <condition pos:line="5313" pos:column="12">(<expr><name><name pos:line="5313" pos:column="13">style2Write</name><op:operator pos:line="5313" pos:column="24">.</op:operator><name pos:line="5313" pos:column="25">_keywords</name></name></expr>)</condition><then pos:line="5313" pos:column="35">
    <block pos:line="5314" pos:column="5">{	
		<decl_stmt><decl><type><name pos:line="5315" pos:column="17">TiXmlNode</name> <type:modifier pos:line="5315" pos:column="27">*</type:modifier></type><name pos:line="5315" pos:column="28">teteDeNoeud</name> <init pos:line="5315" pos:column="40">= <expr><call><name><name pos:line="5315" pos:column="42">element</name><op:operator pos:line="5315" pos:column="49">-&gt;</op:operator><name pos:line="5315" pos:column="51">LastChild</name></name><argument_list pos:line="5315" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="5317" pos:column="17">if <condition pos:line="5317" pos:column="20">(<expr><name pos:line="5317" pos:column="21">teteDeNoeud</name></expr>)</condition><then pos:line="5317" pos:column="33">
			<expr_stmt><expr><call><name><name pos:line="5318" pos:column="25">teteDeNoeud</name><op:operator pos:line="5318" pos:column="36">-&gt;</op:operator><name pos:line="5318" pos:column="38">SetValue</name></name><argument_list pos:line="5318" pos:column="46">(<argument><expr><call><name><name pos:line="5318" pos:column="47">style2Write</name><op:operator pos:line="5318" pos:column="58">.</op:operator><name pos:line="5318" pos:column="59">_keywords</name><op:operator pos:line="5318" pos:column="68">-&gt;</op:operator><name pos:line="5318" pos:column="70">c_str</name></name><argument_list pos:line="5318" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="5319" pos:column="17">else 
			<expr_stmt><expr><call><name><name pos:line="5320" pos:column="25">element</name><op:operator pos:line="5320" pos:column="32">-&gt;</op:operator><name pos:line="5320" pos:column="34">InsertEndChild</name></name><argument_list pos:line="5320" pos:column="48">(<argument><expr><call><name pos:line="5320" pos:column="49">TiXmlText</name><argument_list pos:line="5320" pos:column="58">(<argument><expr><call><name><name pos:line="5320" pos:column="59">style2Write</name><op:operator pos:line="5320" pos:column="70">.</op:operator><name pos:line="5320" pos:column="71">_keywords</name><op:operator pos:line="5320" pos:column="80">-&gt;</op:operator><name pos:line="5320" pos:column="82">c_str</name></name><argument_list pos:line="5320" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
    }</block></then></if>
}</block></function>

<function><type><name pos:line="5324" pos:column="1">void</name></type> <name><name pos:line="5324" pos:column="6">NppParameters</name><op:operator pos:line="5324" pos:column="19">::</op:operator><name pos:line="5324" pos:column="21">insertUserLang2Tree</name></name><parameter_list pos:line="5324" pos:column="40">(<param><decl><type><name pos:line="5324" pos:column="41">TiXmlNode</name> <type:modifier pos:line="5324" pos:column="51">*</type:modifier></type><name pos:line="5324" pos:column="52">node</name></decl></param>, <param><decl><type><name pos:line="5324" pos:column="58">UserLangContainer</name> <type:modifier pos:line="5324" pos:column="76">*</type:modifier></type><name pos:line="5324" pos:column="77">userLang</name></decl></param>)</parameter_list> 
<block pos:line="5325" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5326" pos:column="9">TiXmlElement</name> <type:modifier pos:line="5326" pos:column="22">*</type:modifier></type><name pos:line="5326" pos:column="23">rootElement</name> <init pos:line="5326" pos:column="35">= <expr><op:operator pos:line="5326" pos:column="37">(</op:operator><call><name><name pos:line="5326" pos:column="38">node</name><op:operator pos:line="5326" pos:column="42">-&gt;</op:operator><name pos:line="5326" pos:column="44">InsertEndChild</name></name><argument_list pos:line="5326" pos:column="58">(<argument><expr><call><name pos:line="5326" pos:column="59">TiXmlElement</name><argument_list pos:line="5326" pos:column="71">(<argument><expr><call><name pos:line="5326" pos:column="72">TEXT</name><argument_list pos:line="5326" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="5326" pos:column="77">"UserLang"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5326" pos:column="90">)</op:operator><op:operator pos:line="5326" pos:column="91">-&gt;</op:operator><call><name pos:line="5326" pos:column="93">ToElement</name><argument_list pos:line="5326" pos:column="102">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="5328" pos:column="9">rootElement</name><op:operator pos:line="5328" pos:column="20">-&gt;</op:operator><name pos:line="5328" pos:column="22">SetAttribute</name></name><argument_list pos:line="5328" pos:column="34">(<argument><expr><call><name pos:line="5328" pos:column="35">TEXT</name><argument_list pos:line="5328" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="5328" pos:column="40">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5328" pos:column="49">userLang</name><op:operator pos:line="5328" pos:column="57">-&gt;</op:operator><name pos:line="5328" pos:column="59">_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="5329" pos:column="9">rootElement</name><op:operator pos:line="5329" pos:column="20">-&gt;</op:operator><name pos:line="5329" pos:column="22">SetAttribute</name></name><argument_list pos:line="5329" pos:column="34">(<argument><expr><call><name pos:line="5329" pos:column="35">TEXT</name><argument_list pos:line="5329" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="5329" pos:column="40">"ext"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5329" pos:column="48">userLang</name><op:operator pos:line="5329" pos:column="56">-&gt;</op:operator><name pos:line="5329" pos:column="58">_ext</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="5330" pos:column="9">rootElement</name><op:operator pos:line="5330" pos:column="20">-&gt;</op:operator><name pos:line="5330" pos:column="22">SetAttribute</name></name><argument_list pos:line="5330" pos:column="34">(<argument><expr><call><name pos:line="5330" pos:column="35">TEXT</name><argument_list pos:line="5330" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="5330" pos:column="40">"udlVersion"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="5330" pos:column="55">TEXT</name><argument_list pos:line="5330" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="5330" pos:column="60">"2.0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="5331" pos:column="9">TiXmlElement</name> <type:modifier pos:line="5331" pos:column="22">*</type:modifier></type><name pos:line="5331" pos:column="23">settingsElement</name> <init pos:line="5331" pos:column="39">= <expr><op:operator pos:line="5331" pos:column="41">(</op:operator><call><name><name pos:line="5331" pos:column="42">rootElement</name><op:operator pos:line="5331" pos:column="53">-&gt;</op:operator><name pos:line="5331" pos:column="55">InsertEndChild</name></name><argument_list pos:line="5331" pos:column="69">(<argument><expr><call><name pos:line="5331" pos:column="70">TiXmlElement</name><argument_list pos:line="5331" pos:column="82">(<argument><expr><call><name pos:line="5331" pos:column="83">TEXT</name><argument_list pos:line="5331" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="5331" pos:column="88">"Settings"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5331" pos:column="101">)</op:operator><op:operator pos:line="5331" pos:column="102">-&gt;</op:operator><call><name pos:line="5331" pos:column="104">ToElement</name><argument_list pos:line="5331" pos:column="113">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<block pos:line="5332" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5333" pos:column="17">TiXmlElement</name> <type:modifier pos:line="5333" pos:column="30">*</type:modifier></type><name pos:line="5333" pos:column="31">globalElement</name> <init pos:line="5333" pos:column="45">= <expr><op:operator pos:line="5333" pos:column="47">(</op:operator><call><name><name pos:line="5333" pos:column="48">settingsElement</name><op:operator pos:line="5333" pos:column="63">-&gt;</op:operator><name pos:line="5333" pos:column="65">InsertEndChild</name></name><argument_list pos:line="5333" pos:column="79">(<argument><expr><call><name pos:line="5333" pos:column="80">TiXmlElement</name><argument_list pos:line="5333" pos:column="92">(<argument><expr><call><name pos:line="5333" pos:column="93">TEXT</name><argument_list pos:line="5333" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="5333" pos:column="98">"Global"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5333" pos:column="109">)</op:operator><op:operator pos:line="5333" pos:column="110">-&gt;</op:operator><call><name pos:line="5333" pos:column="112">ToElement</name><argument_list pos:line="5333" pos:column="121">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="5334" pos:column="17">globalElement</name><op:operator pos:line="5334" pos:column="30">-&gt;</op:operator><name pos:line="5334" pos:column="32">SetAttribute</name></name><argument_list pos:line="5334" pos:column="44">(<argument><expr><call><name pos:line="5334" pos:column="45">TEXT</name><argument_list pos:line="5334" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="5334" pos:column="50">"caseIgnored"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,			<argument><expr><name><name pos:line="5334" pos:column="89">userLang</name><op:operator pos:line="5334" pos:column="97">-&gt;</op:operator><name pos:line="5334" pos:column="99">_isCaseIgnored</name></name> <op:operator pos:line="5334" pos:column="114">?</op:operator> <call><name pos:line="5334" pos:column="116">TEXT</name><argument_list pos:line="5334" pos:column="120">(<argument><expr><lit:literal type="string" pos:line="5334" pos:column="121">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="5334" pos:column="127">:</op:operator><call><name pos:line="5334" pos:column="128">TEXT</name><argument_list pos:line="5334" pos:column="132">(<argument><expr><lit:literal type="string" pos:line="5334" pos:column="133">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5335" pos:column="17">globalElement</name><op:operator pos:line="5335" pos:column="30">-&gt;</op:operator><name pos:line="5335" pos:column="32">SetAttribute</name></name><argument_list pos:line="5335" pos:column="44">(<argument><expr><call><name pos:line="5335" pos:column="45">TEXT</name><argument_list pos:line="5335" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="5335" pos:column="50">"allowFoldOfComments"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,	<argument><expr><name><name pos:line="5335" pos:column="81">userLang</name><op:operator pos:line="5335" pos:column="89">-&gt;</op:operator><name pos:line="5335" pos:column="91">_allowFoldOfComments</name></name> <op:operator pos:line="5335" pos:column="112">?</op:operator> <call><name pos:line="5335" pos:column="114">TEXT</name><argument_list pos:line="5335" pos:column="118">(<argument><expr><lit:literal type="string" pos:line="5335" pos:column="119">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="5335" pos:column="125">:</op:operator><call><name pos:line="5335" pos:column="126">TEXT</name><argument_list pos:line="5335" pos:column="130">(<argument><expr><lit:literal type="string" pos:line="5335" pos:column="131">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5336" pos:column="17">globalElement</name><op:operator pos:line="5336" pos:column="30">-&gt;</op:operator><name pos:line="5336" pos:column="32">SetAttribute</name></name><argument_list pos:line="5336" pos:column="44">(<argument><expr><call><name pos:line="5336" pos:column="45">TEXT</name><argument_list pos:line="5336" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="5336" pos:column="50">"forceLineCommentsAtBOL"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5336" pos:column="77">userLang</name><op:operator pos:line="5336" pos:column="85">-&gt;</op:operator><name pos:line="5336" pos:column="87">_forceLineCommentsAtBOL</name></name> <op:operator pos:line="5336" pos:column="111">?</op:operator> <call><name pos:line="5336" pos:column="113">TEXT</name><argument_list pos:line="5336" pos:column="117">(<argument><expr><lit:literal type="string" pos:line="5336" pos:column="118">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="5336" pos:column="124">:</op:operator><call><name pos:line="5336" pos:column="125">TEXT</name><argument_list pos:line="5336" pos:column="129">(<argument><expr><lit:literal type="string" pos:line="5336" pos:column="130">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5337" pos:column="17">globalElement</name><op:operator pos:line="5337" pos:column="30">-&gt;</op:operator><name pos:line="5337" pos:column="32">SetAttribute</name></name><argument_list pos:line="5337" pos:column="44">(<argument><expr><call><name pos:line="5337" pos:column="45">TEXT</name><argument_list pos:line="5337" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="5337" pos:column="50">"foldCompact"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,			<argument><expr><name><name pos:line="5337" pos:column="89">userLang</name><op:operator pos:line="5337" pos:column="97">-&gt;</op:operator><name pos:line="5337" pos:column="99">_foldCompact</name></name> <op:operator pos:line="5337" pos:column="112">?</op:operator> <call><name pos:line="5337" pos:column="114">TEXT</name><argument_list pos:line="5337" pos:column="118">(<argument><expr><lit:literal type="string" pos:line="5337" pos:column="119">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="5337" pos:column="125">:</op:operator><call><name pos:line="5337" pos:column="126">TEXT</name><argument_list pos:line="5337" pos:column="130">(<argument><expr><lit:literal type="string" pos:line="5337" pos:column="131">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="5339" pos:column="17">TiXmlElement</name> <type:modifier pos:line="5339" pos:column="30">*</type:modifier></type><name pos:line="5339" pos:column="31">prefixElement</name> <init pos:line="5339" pos:column="45">= <expr><op:operator pos:line="5339" pos:column="47">(</op:operator><call><name><name pos:line="5339" pos:column="48">settingsElement</name><op:operator pos:line="5339" pos:column="63">-&gt;</op:operator><name pos:line="5339" pos:column="65">InsertEndChild</name></name><argument_list pos:line="5339" pos:column="79">(<argument><expr><call><name pos:line="5339" pos:column="80">TiXmlElement</name><argument_list pos:line="5339" pos:column="92">(<argument><expr><call><name pos:line="5339" pos:column="93">TEXT</name><argument_list pos:line="5339" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="5339" pos:column="98">"Prefix"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5339" pos:column="109">)</op:operator><op:operator pos:line="5339" pos:column="110">-&gt;</op:operator><call><name pos:line="5339" pos:column="112">ToElement</name><argument_list pos:line="5339" pos:column="121">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="5340" pos:column="17">for (<init><decl><type><name pos:line="5340" pos:column="22">int</name></type> <name pos:line="5340" pos:column="26">i</name> <init pos:line="5340" pos:column="28">= <expr><lit:literal type="number" pos:line="5340" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="5340" pos:column="34">i</name> <op:operator pos:line="5340" pos:column="36">&lt;</op:operator> <name pos:line="5340" pos:column="38">SCE_USER_TOTAL_KEYWORD_GROUPS</name></expr> ;</condition> <incr><expr><name pos:line="5340" pos:column="70">i</name><op:operator pos:line="5340" pos:column="71">++</op:operator></expr></incr>)
			<expr_stmt><expr><call><name><name pos:line="5341" pos:column="25">prefixElement</name><op:operator pos:line="5341" pos:column="38">-&gt;</op:operator><name pos:line="5341" pos:column="40">SetAttribute</name></name><argument_list pos:line="5341" pos:column="52">(<argument><expr><name><name pos:line="5341" pos:column="53">keywordListMapper</name><index pos:line="5341" pos:column="70">[<expr><name pos:line="5341" pos:column="71">i</name><op:operator pos:line="5341" pos:column="72">+</op:operator><name pos:line="5341" pos:column="73">SCE_USER_KWLIST_KEYWORDS1</name></expr>]</index></name></expr></argument>, <argument><expr><name><name pos:line="5341" pos:column="101">userLang</name><op:operator pos:line="5341" pos:column="109">-&gt;</op:operator><name pos:line="5341" pos:column="111">_isPrefix</name><index pos:line="5341" pos:column="120">[<expr><name pos:line="5341" pos:column="121">i</name></expr>]</index></name><op:operator pos:line="5341" pos:column="123">?</op:operator><call><name pos:line="5341" pos:column="124">TEXT</name><argument_list pos:line="5341" pos:column="128">(<argument><expr><lit:literal type="string" pos:line="5341" pos:column="129">"yes"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="5341" pos:column="135">:</op:operator><call><name pos:line="5341" pos:column="136">TEXT</name><argument_list pos:line="5341" pos:column="140">(<argument><expr><lit:literal type="string" pos:line="5341" pos:column="141">"no"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>
	}</block>

	<decl_stmt><decl><type><name pos:line="5344" pos:column="9">TiXmlElement</name> <type:modifier pos:line="5344" pos:column="22">*</type:modifier></type><name pos:line="5344" pos:column="23">kwlElement</name> <init pos:line="5344" pos:column="34">= <expr><op:operator pos:line="5344" pos:column="36">(</op:operator><call><name><name pos:line="5344" pos:column="37">rootElement</name><op:operator pos:line="5344" pos:column="48">-&gt;</op:operator><name pos:line="5344" pos:column="50">InsertEndChild</name></name><argument_list pos:line="5344" pos:column="64">(<argument><expr><call><name pos:line="5344" pos:column="65">TiXmlElement</name><argument_list pos:line="5344" pos:column="77">(<argument><expr><call><name pos:line="5344" pos:column="78">TEXT</name><argument_list pos:line="5344" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="5344" pos:column="83">"KeywordLists"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5344" pos:column="100">)</op:operator><op:operator pos:line="5344" pos:column="101">-&gt;</op:operator><call><name pos:line="5344" pos:column="103">ToElement</name><argument_list pos:line="5344" pos:column="112">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<for pos:line="5346" pos:column="9">for (<init><decl><type><name pos:line="5346" pos:column="14">int</name></type> <name pos:line="5346" pos:column="18">i</name> <init pos:line="5346" pos:column="20">= <expr><lit:literal type="number" pos:line="5346" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="5346" pos:column="26">i</name> <op:operator pos:line="5346" pos:column="28">&lt;</op:operator> <name pos:line="5346" pos:column="30">SCE_USER_KWLIST_TOTAL</name></expr> ;</condition> <incr><expr><name pos:line="5346" pos:column="54">i</name><op:operator pos:line="5346" pos:column="55">++</op:operator></expr></incr>)
	<block pos:line="5347" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5348" pos:column="17">TiXmlElement</name> <type:modifier pos:line="5348" pos:column="30">*</type:modifier></type><name pos:line="5348" pos:column="31">kwElement</name> <init pos:line="5348" pos:column="41">= <expr><op:operator pos:line="5348" pos:column="43">(</op:operator><call><name><name pos:line="5348" pos:column="44">kwlElement</name><op:operator pos:line="5348" pos:column="54">-&gt;</op:operator><name pos:line="5348" pos:column="56">InsertEndChild</name></name><argument_list pos:line="5348" pos:column="70">(<argument><expr><call><name pos:line="5348" pos:column="71">TiXmlElement</name><argument_list pos:line="5348" pos:column="83">(<argument><expr><call><name pos:line="5348" pos:column="84">TEXT</name><argument_list pos:line="5348" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="5348" pos:column="89">"Keywords"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5348" pos:column="102">)</op:operator><op:operator pos:line="5348" pos:column="103">-&gt;</op:operator><call><name pos:line="5348" pos:column="105">ToElement</name><argument_list pos:line="5348" pos:column="114">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="5349" pos:column="17">kwElement</name><op:operator pos:line="5349" pos:column="26">-&gt;</op:operator><name pos:line="5349" pos:column="28">SetAttribute</name></name><argument_list pos:line="5349" pos:column="40">(<argument><expr><call><name pos:line="5349" pos:column="41">TEXT</name><argument_list pos:line="5349" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="5349" pos:column="46">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5349" pos:column="55">keywordListMapper</name><index pos:line="5349" pos:column="72">[<expr><name pos:line="5349" pos:column="73">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5350" pos:column="17">kwElement</name><op:operator pos:line="5350" pos:column="26">-&gt;</op:operator><name pos:line="5350" pos:column="28">SetAttribute</name></name><argument_list pos:line="5350" pos:column="40">(<argument><expr><call><name pos:line="5350" pos:column="41">TEXT</name><argument_list pos:line="5350" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="5350" pos:column="46">"id"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5350" pos:column="53">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="5351" pos:column="17">kwElement</name><op:operator pos:line="5351" pos:column="26">-&gt;</op:operator><name pos:line="5351" pos:column="28">InsertEndChild</name></name><argument_list pos:line="5351" pos:column="42">(<argument><expr><call><name pos:line="5351" pos:column="43">TiXmlText</name><argument_list pos:line="5351" pos:column="52">(<argument><expr><name><name pos:line="5351" pos:column="53">userLang</name><op:operator pos:line="5351" pos:column="61">-&gt;</op:operator><name pos:line="5351" pos:column="63">_keywordLists</name><index pos:line="5351" pos:column="76">[<expr><name pos:line="5351" pos:column="77">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="5354" pos:column="9">TiXmlElement</name> <type:modifier pos:line="5354" pos:column="22">*</type:modifier></type><name pos:line="5354" pos:column="23">styleRootElement</name> <init pos:line="5354" pos:column="40">= <expr><op:operator pos:line="5354" pos:column="42">(</op:operator><call><name><name pos:line="5354" pos:column="43">rootElement</name><op:operator pos:line="5354" pos:column="54">-&gt;</op:operator><name pos:line="5354" pos:column="56">InsertEndChild</name></name><argument_list pos:line="5354" pos:column="70">(<argument><expr><call><name pos:line="5354" pos:column="71">TiXmlElement</name><argument_list pos:line="5354" pos:column="83">(<argument><expr><call><name pos:line="5354" pos:column="84">TEXT</name><argument_list pos:line="5354" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="5354" pos:column="89">"Styles"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5354" pos:column="100">)</op:operator><op:operator pos:line="5354" pos:column="101">-&gt;</op:operator><call><name pos:line="5354" pos:column="103">ToElement</name><argument_list pos:line="5354" pos:column="112">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="5356" pos:column="9">//for (int i = 0 ; i &lt; userLang-&gt;_styleArray.getNbStyler() ; i++)</comment>
	<for pos:line="5357" pos:column="9">for (<init><decl><type><name pos:line="5357" pos:column="14">int</name></type> <name pos:line="5357" pos:column="18">i</name> <init pos:line="5357" pos:column="20">= <expr><lit:literal type="number" pos:line="5357" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="5357" pos:column="26">i</name> <op:operator pos:line="5357" pos:column="28">&lt;</op:operator> <name pos:line="5357" pos:column="30">SCE_USER_STYLE_TOTAL_STYLES</name></expr> ;</condition> <incr><expr><name pos:line="5357" pos:column="60">i</name><op:operator pos:line="5357" pos:column="61">++</op:operator></expr></incr>)
	<block pos:line="5358" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5359" pos:column="17">TiXmlElement</name> <type:modifier pos:line="5359" pos:column="30">*</type:modifier></type><name pos:line="5359" pos:column="31">styleElement</name> <init pos:line="5359" pos:column="44">= <expr><op:operator pos:line="5359" pos:column="46">(</op:operator><call><name><name pos:line="5359" pos:column="47">styleRootElement</name><op:operator pos:line="5359" pos:column="63">-&gt;</op:operator><name pos:line="5359" pos:column="65">InsertEndChild</name></name><argument_list pos:line="5359" pos:column="79">(<argument><expr><call><name pos:line="5359" pos:column="80">TiXmlElement</name><argument_list pos:line="5359" pos:column="92">(<argument><expr><call><name pos:line="5359" pos:column="93">TEXT</name><argument_list pos:line="5359" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="5359" pos:column="98">"WordsStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="5359" pos:column="113">)</op:operator><op:operator pos:line="5359" pos:column="114">-&gt;</op:operator><call><name pos:line="5359" pos:column="116">ToElement</name><argument_list pos:line="5359" pos:column="125">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="5360" pos:column="17">Style</name></type> <name pos:line="5360" pos:column="23">style2Write</name> <init pos:line="5360" pos:column="35">= <expr><call><name><name pos:line="5360" pos:column="37">userLang</name><op:operator pos:line="5360" pos:column="45">-&gt;</op:operator><name pos:line="5360" pos:column="47">_styleArray</name><op:operator pos:line="5360" pos:column="58">.</op:operator><name pos:line="5360" pos:column="59">getStyler</name></name><argument_list pos:line="5360" pos:column="68">(<argument><expr><name pos:line="5360" pos:column="69">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="5362" pos:column="17">if <condition pos:line="5362" pos:column="20">(<expr><name><name pos:line="5362" pos:column="21">style2Write</name><op:operator pos:line="5362" pos:column="32">.</op:operator><name pos:line="5362" pos:column="33">_styleID</name></name> <op:operator pos:line="5362" pos:column="42">==</op:operator> <op:operator pos:line="5362" pos:column="45">-</op:operator><lit:literal type="number" pos:line="5362" pos:column="46">1</lit:literal></expr>)</condition><then pos:line="5362" pos:column="48">
			<continue pos:line="5363" pos:column="25">continue;</continue></then></if>
			
		<expr_stmt><expr><call><name><name pos:line="5365" pos:column="17">styleElement</name><op:operator pos:line="5365" pos:column="29">-&gt;</op:operator><name pos:line="5365" pos:column="31">SetAttribute</name></name><argument_list pos:line="5365" pos:column="43">(<argument><expr><call><name pos:line="5365" pos:column="44">TEXT</name><argument_list pos:line="5365" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="5365" pos:column="49">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5365" pos:column="58">style2Write</name><op:operator pos:line="5365" pos:column="69">.</op:operator><name pos:line="5365" pos:column="70">_styleDesc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="5367" pos:column="17">styleElement</name><op:operator pos:line="5367" pos:column="29">-&gt;</op:operator><name pos:line="5367" pos:column="31">SetAttribute</name></name><argument_list pos:line="5367" pos:column="43">(<argument><expr><call><name pos:line="5367" pos:column="44">TEXT</name><argument_list pos:line="5367" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="5367" pos:column="49">"styleID"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5367" pos:column="61">style2Write</name><op:operator pos:line="5367" pos:column="72">.</op:operator><name pos:line="5367" pos:column="73">_styleID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="5369" pos:column="17">//if (HIBYTE(HIWORD(style2Write._fgColor)) != 0xFF)</comment>
		<block pos:line="5370" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="5371" pos:column="25">int</name></type> <name pos:line="5371" pos:column="29">rgbVal</name> <init pos:line="5371" pos:column="36">= <expr><call><name pos:line="5371" pos:column="38">RGB2int</name><argument_list pos:line="5371" pos:column="45">(<argument><expr><name><name pos:line="5371" pos:column="46">style2Write</name><op:operator pos:line="5371" pos:column="57">.</op:operator><name pos:line="5371" pos:column="58">_fgColor</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5372" pos:column="25">TCHAR</name></type> <name><name pos:line="5372" pos:column="31">fgStr</name><index pos:line="5372" pos:column="36">[<expr><lit:literal type="number" pos:line="5372" pos:column="37">7</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="5373" pos:column="25">wsprintf</name><argument_list pos:line="5373" pos:column="33">(<argument><expr><name pos:line="5373" pos:column="34">fgStr</name></expr></argument>, <argument><expr><call><name pos:line="5373" pos:column="41">TEXT</name><argument_list pos:line="5373" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="5373" pos:column="46">"%.6X"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5373" pos:column="55">rgbVal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="5374" pos:column="25">styleElement</name><op:operator pos:line="5374" pos:column="37">-&gt;</op:operator><name pos:line="5374" pos:column="39">SetAttribute</name></name><argument_list pos:line="5374" pos:column="51">(<argument><expr><call><name pos:line="5374" pos:column="52">TEXT</name><argument_list pos:line="5374" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5374" pos:column="57">"fgColor"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5374" pos:column="69">fgStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>

		<comment type="line" pos:line="5377" pos:column="17">//if (HIBYTE(HIWORD(style2Write._bgColor)) != 0xFF)</comment>
		<block pos:line="5378" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="5379" pos:column="25">int</name></type> <name pos:line="5379" pos:column="29">rgbVal</name> <init pos:line="5379" pos:column="36">= <expr><call><name pos:line="5379" pos:column="38">RGB2int</name><argument_list pos:line="5379" pos:column="45">(<argument><expr><name><name pos:line="5379" pos:column="46">style2Write</name><op:operator pos:line="5379" pos:column="57">.</op:operator><name pos:line="5379" pos:column="58">_bgColor</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="5380" pos:column="25">TCHAR</name></type> <name><name pos:line="5380" pos:column="31">bgStr</name><index pos:line="5380" pos:column="36">[<expr><lit:literal type="number" pos:line="5380" pos:column="37">7</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="5381" pos:column="25">wsprintf</name><argument_list pos:line="5381" pos:column="33">(<argument><expr><name pos:line="5381" pos:column="34">bgStr</name></expr></argument>, <argument><expr><call><name pos:line="5381" pos:column="41">TEXT</name><argument_list pos:line="5381" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="5381" pos:column="46">"%.6X"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5381" pos:column="55">rgbVal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="5382" pos:column="25">styleElement</name><op:operator pos:line="5382" pos:column="37">-&gt;</op:operator><name pos:line="5382" pos:column="39">SetAttribute</name></name><argument_list pos:line="5382" pos:column="51">(<argument><expr><call><name pos:line="5382" pos:column="52">TEXT</name><argument_list pos:line="5382" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5382" pos:column="57">"bgColor"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="5382" pos:column="69">bgStr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>

		<if pos:line="5385" pos:column="17">if <condition pos:line="5385" pos:column="20">(<expr><name><name pos:line="5385" pos:column="21">style2Write</name><op:operator pos:line="5385" pos:column="32">.</op:operator><name pos:line="5385" pos:column="33">_colorStyle</name></name> <op:operator pos:line="5385" pos:column="45">!=</op:operator> <name pos:line="5385" pos:column="48">COLORSTYLE_ALL</name></expr>)</condition><then pos:line="5385" pos:column="63">
		<block pos:line="5386" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="5387" pos:column="25">styleElement</name><op:operator pos:line="5387" pos:column="37">-&gt;</op:operator><name pos:line="5387" pos:column="39">SetAttribute</name></name><argument_list pos:line="5387" pos:column="51">(<argument><expr><call><name pos:line="5387" pos:column="52">TEXT</name><argument_list pos:line="5387" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5387" pos:column="57">"colorStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5387" pos:column="72">style2Write</name><op:operator pos:line="5387" pos:column="83">.</op:operator><name pos:line="5387" pos:column="84">_colorStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="5390" pos:column="17">if <condition pos:line="5390" pos:column="20">(<expr><name><name pos:line="5390" pos:column="21">style2Write</name><op:operator pos:line="5390" pos:column="32">.</op:operator><name pos:line="5390" pos:column="33">_fontName</name></name></expr>)</condition><then pos:line="5390" pos:column="43">
		<block pos:line="5391" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="5392" pos:column="25">styleElement</name><op:operator pos:line="5392" pos:column="37">-&gt;</op:operator><name pos:line="5392" pos:column="39">SetAttribute</name></name><argument_list pos:line="5392" pos:column="51">(<argument><expr><call><name pos:line="5392" pos:column="52">TEXT</name><argument_list pos:line="5392" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5392" pos:column="57">"fontName"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5392" pos:column="70">style2Write</name><op:operator pos:line="5392" pos:column="81">.</op:operator><name pos:line="5392" pos:column="82">_fontName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="5395" pos:column="17">if <condition pos:line="5395" pos:column="20">(<expr><name><name pos:line="5395" pos:column="21">style2Write</name><op:operator pos:line="5395" pos:column="32">.</op:operator><name pos:line="5395" pos:column="33">_fontStyle</name></name> <op:operator pos:line="5395" pos:column="44">==</op:operator> <name pos:line="5395" pos:column="47">STYLE_NOT_USED</name></expr>)</condition><then pos:line="5395" pos:column="62">
		<block pos:line="5396" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="5397" pos:column="25">styleElement</name><op:operator pos:line="5397" pos:column="37">-&gt;</op:operator><name pos:line="5397" pos:column="39">SetAttribute</name></name><argument_list pos:line="5397" pos:column="51">(<argument><expr><call><name pos:line="5397" pos:column="52">TEXT</name><argument_list pos:line="5397" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5397" pos:column="57">"fontStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="5397" pos:column="71">TEXT</name><argument_list pos:line="5397" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="5397" pos:column="76">"0"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="5399" pos:column="17">else
		<block pos:line="5400" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="5401" pos:column="25">styleElement</name><op:operator pos:line="5401" pos:column="37">-&gt;</op:operator><name pos:line="5401" pos:column="39">SetAttribute</name></name><argument_list pos:line="5401" pos:column="51">(<argument><expr><call><name pos:line="5401" pos:column="52">TEXT</name><argument_list pos:line="5401" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="5401" pos:column="57">"fontStyle"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5401" pos:column="71">style2Write</name><op:operator pos:line="5401" pos:column="82">.</op:operator><name pos:line="5401" pos:column="83">_fontStyle</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>

		<if pos:line="5404" pos:column="17">if <condition pos:line="5404" pos:column="20">(<expr><name><name pos:line="5404" pos:column="21">style2Write</name><op:operator pos:line="5404" pos:column="32">.</op:operator><name pos:line="5404" pos:column="33">_fontSize</name></name> <op:operator pos:line="5404" pos:column="43">!=</op:operator> <name pos:line="5404" pos:column="46">STYLE_NOT_USED</name></expr>)</condition><then pos:line="5404" pos:column="61">
		<block pos:line="5405" pos:column="17">{
			<if pos:line="5406" pos:column="25">if <condition pos:line="5406" pos:column="28">(<expr><op:operator pos:line="5406" pos:column="29">!</op:operator><name><name pos:line="5406" pos:column="30">style2Write</name><op:operator pos:line="5406" pos:column="41">.</op:operator><name pos:line="5406" pos:column="42">_fontSize</name></name></expr>)</condition><then pos:line="5406" pos:column="52">
				<expr_stmt><expr><call><name><name pos:line="5407" pos:column="33">styleElement</name><op:operator pos:line="5407" pos:column="45">-&gt;</op:operator><name pos:line="5407" pos:column="47">SetAttribute</name></name><argument_list pos:line="5407" pos:column="59">(<argument><expr><call><name pos:line="5407" pos:column="60">TEXT</name><argument_list pos:line="5407" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="5407" pos:column="65">"fontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="5407" pos:column="78">TEXT</name><argument_list pos:line="5407" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="5407" pos:column="83">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="5408" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="5409" pos:column="33">styleElement</name><op:operator pos:line="5409" pos:column="45">-&gt;</op:operator><name pos:line="5409" pos:column="47">SetAttribute</name></name><argument_list pos:line="5409" pos:column="59">(<argument><expr><call><name pos:line="5409" pos:column="60">TEXT</name><argument_list pos:line="5409" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="5409" pos:column="65">"fontSize"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5409" pos:column="78">style2Write</name><op:operator pos:line="5409" pos:column="89">.</op:operator><name pos:line="5409" pos:column="90">_fontSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then></if>
		
		<expr_stmt><expr><call><name><name pos:line="5412" pos:column="17">styleElement</name><op:operator pos:line="5412" pos:column="29">-&gt;</op:operator><name pos:line="5412" pos:column="31">SetAttribute</name></name><argument_list pos:line="5412" pos:column="43">(<argument><expr><call><name pos:line="5412" pos:column="44">TEXT</name><argument_list pos:line="5412" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="5412" pos:column="49">"nesting"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5412" pos:column="61">style2Write</name><op:operator pos:line="5412" pos:column="72">.</op:operator><name pos:line="5412" pos:column="73">_nesting</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function>

<function><type><name pos:line="5416" pos:column="1">void</name></type> <name><name pos:line="5416" pos:column="6">NppParameters</name><op:operator pos:line="5416" pos:column="19">::</op:operator><name pos:line="5416" pos:column="21">stylerStrOp</name></name><parameter_list pos:line="5416" pos:column="32">(<param><decl><type><name pos:line="5416" pos:column="33">bool</name></type> <name pos:line="5416" pos:column="38">op</name></decl></param>)</parameter_list> 
<block pos:line="5417" pos:column="1">{
	<for pos:line="5418" pos:column="9">for (<init><decl><type><name pos:line="5418" pos:column="14">int</name></type> <name pos:line="5418" pos:column="18">i</name> <init pos:line="5418" pos:column="20">= <expr><lit:literal type="number" pos:line="5418" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="5418" pos:column="26">i</name> <op:operator pos:line="5418" pos:column="28">&lt;</op:operator> <name pos:line="5418" pos:column="30">_nbUserLang</name></expr> ;</condition> <incr><expr><name pos:line="5418" pos:column="44">i</name><op:operator pos:line="5418" pos:column="45">++</op:operator></expr></incr>)
	<block pos:line="5419" pos:column="9">{
		<comment type="line" pos:line="5420" pos:column="17">//int nbStyler = _userLangArray[i]-&gt;_styleArray.getNbStyler();</comment>
		<comment type="line" pos:line="5421" pos:column="17">//for (int j = 0 ; j &lt; nbStyler ; j++)</comment>
		<for pos:line="5422" pos:column="17">for (<init><decl><type><name pos:line="5422" pos:column="22">int</name></type> <name pos:line="5422" pos:column="26">j</name> <init pos:line="5422" pos:column="28">= <expr><lit:literal type="number" pos:line="5422" pos:column="30">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="5422" pos:column="34">j</name> <op:operator pos:line="5422" pos:column="36">&lt;</op:operator> <name pos:line="5422" pos:column="38">SCE_USER_STYLE_TOTAL_STYLES</name></expr> ;</condition> <incr><expr><name pos:line="5422" pos:column="68">j</name><op:operator pos:line="5422" pos:column="69">++</op:operator></expr></incr>)
		<block pos:line="5423" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="5424" pos:column="25">Style</name> <type:modifier pos:line="5424" pos:column="31">&amp;</type:modifier></type> <name pos:line="5424" pos:column="33">style</name> <init pos:line="5424" pos:column="39">= <expr><name><name pos:line="5424" pos:column="41">_userLangArray</name><index pos:line="5424" pos:column="55">[<expr><name pos:line="5424" pos:column="56">i</name></expr>]</index></name><op:operator pos:line="5424" pos:column="58">-&gt;</op:operator><call><name><name pos:line="5424" pos:column="60">_styleArray</name><op:operator pos:line="5424" pos:column="71">.</op:operator><name pos:line="5424" pos:column="72">getStyler</name></name><argument_list pos:line="5424" pos:column="81">(<argument><expr><name pos:line="5424" pos:column="82">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<if pos:line="5426" pos:column="25">if <condition pos:line="5426" pos:column="28">(<expr><name pos:line="5426" pos:column="29">op</name> <op:operator pos:line="5426" pos:column="32">==</op:operator> <name pos:line="5426" pos:column="35">DUP</name></expr>)</condition><then pos:line="5426" pos:column="39">
			<block pos:line="5427" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="5428" pos:column="33">TCHAR</name> <type:modifier pos:line="5428" pos:column="39">*</type:modifier></type><name pos:line="5428" pos:column="40">str</name> <init pos:line="5428" pos:column="44">= <expr><op:operator pos:line="5428" pos:column="46">new</op:operator> <name><name pos:line="5428" pos:column="50">TCHAR</name><index pos:line="5428" pos:column="55">[<expr><call><name pos:line="5428" pos:column="56">lstrlen</name><argument_list pos:line="5428" pos:column="63">(<argument><expr><name><name pos:line="5428" pos:column="64">style</name><op:operator pos:line="5428" pos:column="69">.</op:operator><name pos:line="5428" pos:column="70">_styleDesc</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="5428" pos:column="82">+</op:operator> <lit:literal type="number" pos:line="5428" pos:column="84">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="5429" pos:column="33">style</name><op:operator pos:line="5429" pos:column="38">.</op:operator><name pos:line="5429" pos:column="39">_styleDesc</name></name> <op:operator pos:line="5429" pos:column="50">=</op:operator> <call><name pos:line="5429" pos:column="52">lstrcpy</name><argument_list pos:line="5429" pos:column="59">(<argument><expr><name pos:line="5429" pos:column="60">str</name></expr></argument>, <argument><expr><name><name pos:line="5429" pos:column="65">style</name><op:operator pos:line="5429" pos:column="70">.</op:operator><name pos:line="5429" pos:column="71">_styleDesc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="5430" pos:column="33">if <condition pos:line="5430" pos:column="36">(<expr><name><name pos:line="5430" pos:column="37">style</name><op:operator pos:line="5430" pos:column="42">.</op:operator><name pos:line="5430" pos:column="43">_fontName</name></name></expr>)</condition><then pos:line="5430" pos:column="53">
				<block pos:line="5431" pos:column="33">{
					<expr_stmt><expr><name pos:line="5432" pos:column="41">str</name> <op:operator pos:line="5432" pos:column="45">=</op:operator> <op:operator pos:line="5432" pos:column="47">new</op:operator> <name><name pos:line="5432" pos:column="51">TCHAR</name><index pos:line="5432" pos:column="56">[<expr><call><name pos:line="5432" pos:column="57">lstrlen</name><argument_list pos:line="5432" pos:column="64">(<argument><expr><name><name pos:line="5432" pos:column="65">style</name><op:operator pos:line="5432" pos:column="70">.</op:operator><name pos:line="5432" pos:column="71">_fontName</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="5432" pos:column="82">+</op:operator> <lit:literal type="number" pos:line="5432" pos:column="84">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="5433" pos:column="41">style</name><op:operator pos:line="5433" pos:column="46">.</op:operator><name pos:line="5433" pos:column="47">_fontName</name></name> <op:operator pos:line="5433" pos:column="57">=</op:operator> <call><name pos:line="5433" pos:column="59">lstrcpy</name><argument_list pos:line="5433" pos:column="66">(<argument><expr><name pos:line="5433" pos:column="67">str</name></expr></argument>, <argument><expr><name><name pos:line="5433" pos:column="72">style</name><op:operator pos:line="5433" pos:column="77">.</op:operator><name pos:line="5433" pos:column="78">_fontName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="5435" pos:column="33">else
				<block pos:line="5436" pos:column="33">{
					<expr_stmt><expr><name pos:line="5437" pos:column="41">str</name> <op:operator pos:line="5437" pos:column="45">=</op:operator> <op:operator pos:line="5437" pos:column="47">new</op:operator> <name><name pos:line="5437" pos:column="51">TCHAR</name><index pos:line="5437" pos:column="56">[<expr><lit:literal type="number" pos:line="5437" pos:column="57">2</lit:literal></expr>]</index></name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="5438" pos:column="41">str</name><index pos:line="5438" pos:column="44">[<expr><lit:literal type="number" pos:line="5438" pos:column="45">0</lit:literal></expr>]</index></name> <op:operator pos:line="5438" pos:column="48">=</op:operator> <name><name pos:line="5438" pos:column="50">str</name><index pos:line="5438" pos:column="53">[<expr><lit:literal type="number" pos:line="5438" pos:column="54">1</lit:literal></expr>]</index></name> <op:operator pos:line="5438" pos:column="57">=</op:operator> <lit:literal type="char" pos:line="5438" pos:column="59">'\0'</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="5439" pos:column="41">style</name><op:operator pos:line="5439" pos:column="46">.</op:operator><name pos:line="5439" pos:column="47">_fontName</name></name> <op:operator pos:line="5439" pos:column="57">=</op:operator> <name pos:line="5439" pos:column="59">str</name></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then>
			<else pos:line="5442" pos:column="25">else
			<block pos:line="5443" pos:column="25">{
				<expr_stmt><expr><op:operator pos:line="5444" pos:column="33">delete</op:operator> <index pos:line="5444" pos:column="40">[]</index> <name><name pos:line="5444" pos:column="43">style</name><op:operator pos:line="5444" pos:column="48">.</op:operator><name pos:line="5444" pos:column="49">_styleDesc</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="5445" pos:column="33">delete</op:operator> <index pos:line="5445" pos:column="40">[]</index> <name><name pos:line="5445" pos:column="43">style</name><op:operator pos:line="5445" pos:column="48">.</op:operator><name pos:line="5445" pos:column="49">_fontName</name></name></expr>;</expr_stmt>
			}</block></else></if>
		}</block></for>
	}</block></for>
}</block></function>

<function><type><name pos:line="5451" pos:column="1">void</name></type> <name><name pos:line="5451" pos:column="6">NppParameters</name><op:operator pos:line="5451" pos:column="19">::</op:operator><name pos:line="5451" pos:column="21">addUserModifiedIndex</name></name><parameter_list pos:line="5451" pos:column="41">(<param><decl><type><name pos:line="5451" pos:column="42">int</name></type> <name pos:line="5451" pos:column="46">index</name></decl></param>)</parameter_list> 
<block pos:line="5452" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5453" pos:column="9">size_t</name></type> <name pos:line="5453" pos:column="16">len</name> <init pos:line="5453" pos:column="20">= <expr><call><name><name pos:line="5453" pos:column="22">_customizedShortcuts</name><op:operator pos:line="5453" pos:column="42">.</op:operator><name pos:line="5453" pos:column="43">size</name></name><argument_list pos:line="5453" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5454" pos:column="9">bool</name></type> <name pos:line="5454" pos:column="14">found</name> <init pos:line="5454" pos:column="20">= <expr><lit:literal type="boolean" pos:line="5454" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="5455" pos:column="9">for(<init><decl><type><name pos:line="5455" pos:column="13">size_t</name></type> <name pos:line="5455" pos:column="20">i</name> <init pos:line="5455" pos:column="22">= <expr><lit:literal type="number" pos:line="5455" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5455" pos:column="27">i</name> <op:operator pos:line="5455" pos:column="29">&lt;</op:operator> <name pos:line="5455" pos:column="31">len</name></expr>;</condition> <incr><expr><name pos:line="5455" pos:column="36">i</name><op:operator pos:line="5455" pos:column="37">++</op:operator></expr></incr>) 
	<block pos:line="5456" pos:column="9">{
		<if pos:line="5457" pos:column="17">if <condition pos:line="5457" pos:column="20">(<expr><name><name pos:line="5457" pos:column="21">_customizedShortcuts</name><index pos:line="5457" pos:column="41">[<expr><name pos:line="5457" pos:column="42">i</name></expr>]</index></name> <op:operator pos:line="5457" pos:column="45">==</op:operator> <name pos:line="5457" pos:column="48">index</name></expr>)</condition><then pos:line="5457" pos:column="54"> 
		<block pos:line="5458" pos:column="17">{
			<expr_stmt><expr><name pos:line="5459" pos:column="25">found</name> <op:operator pos:line="5459" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="5459" pos:column="33">true</lit:literal></expr>;</expr_stmt>
			<break pos:line="5460" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
	<if pos:line="5463" pos:column="9">if <condition pos:line="5463" pos:column="12">(<expr><op:operator pos:line="5463" pos:column="13">!</op:operator><name pos:line="5463" pos:column="14">found</name></expr>)</condition><then pos:line="5463" pos:column="20"> 
	<block pos:line="5464" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="5465" pos:column="17">_customizedShortcuts</name><op:operator pos:line="5465" pos:column="37">.</op:operator><name pos:line="5465" pos:column="38">push_back</name></name><argument_list pos:line="5465" pos:column="47">(<argument><expr><name pos:line="5465" pos:column="48">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="5469" pos:column="1">void</name></type> <name><name pos:line="5469" pos:column="6">NppParameters</name><op:operator pos:line="5469" pos:column="19">::</op:operator><name pos:line="5469" pos:column="21">addPluginModifiedIndex</name></name><parameter_list pos:line="5469" pos:column="43">(<param><decl><type><name pos:line="5469" pos:column="44">int</name></type> <name pos:line="5469" pos:column="48">index</name></decl></param>)</parameter_list> 
<block pos:line="5470" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5471" pos:column="9">size_t</name></type> <name pos:line="5471" pos:column="16">len</name> <init pos:line="5471" pos:column="20">= <expr><call><name><name pos:line="5471" pos:column="22">_pluginCustomizedCmds</name><op:operator pos:line="5471" pos:column="43">.</op:operator><name pos:line="5471" pos:column="44">size</name></name><argument_list pos:line="5471" pos:column="48">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5472" pos:column="9">bool</name></type> <name pos:line="5472" pos:column="14">found</name> <init pos:line="5472" pos:column="20">= <expr><lit:literal type="boolean" pos:line="5472" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="5473" pos:column="9">for(<init><decl><type><name pos:line="5473" pos:column="13">size_t</name></type> <name pos:line="5473" pos:column="20">i</name> <init pos:line="5473" pos:column="22">= <expr><lit:literal type="number" pos:line="5473" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5473" pos:column="27">i</name> <op:operator pos:line="5473" pos:column="29">&lt;</op:operator> <name pos:line="5473" pos:column="31">len</name></expr>;</condition> <incr><expr><name pos:line="5473" pos:column="36">i</name><op:operator pos:line="5473" pos:column="37">++</op:operator></expr></incr>) 
	<block pos:line="5474" pos:column="9">{
		<if pos:line="5475" pos:column="17">if <condition pos:line="5475" pos:column="20">(<expr><name><name pos:line="5475" pos:column="21">_pluginCustomizedCmds</name><index pos:line="5475" pos:column="42">[<expr><name pos:line="5475" pos:column="43">i</name></expr>]</index></name> <op:operator pos:line="5475" pos:column="46">==</op:operator> <name pos:line="5475" pos:column="49">index</name></expr>)</condition><then pos:line="5475" pos:column="55"> 
		<block pos:line="5476" pos:column="17">{
			<expr_stmt><expr><name pos:line="5477" pos:column="25">found</name> <op:operator pos:line="5477" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="5477" pos:column="33">true</lit:literal></expr>;</expr_stmt>
			<break pos:line="5478" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
	<if pos:line="5481" pos:column="9">if <condition pos:line="5481" pos:column="12">(<expr><op:operator pos:line="5481" pos:column="13">!</op:operator><name pos:line="5481" pos:column="14">found</name></expr>)</condition><then pos:line="5481" pos:column="20"> 
	<block pos:line="5482" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="5483" pos:column="17">_pluginCustomizedCmds</name><op:operator pos:line="5483" pos:column="38">.</op:operator><name pos:line="5483" pos:column="39">push_back</name></name><argument_list pos:line="5483" pos:column="48">(<argument><expr><name pos:line="5483" pos:column="49">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="5487" pos:column="1">void</name></type> <name><name pos:line="5487" pos:column="6">NppParameters</name><op:operator pos:line="5487" pos:column="19">::</op:operator><name pos:line="5487" pos:column="21">addScintillaModifiedIndex</name></name><parameter_list pos:line="5487" pos:column="46">(<param><decl><type><name pos:line="5487" pos:column="47">int</name></type> <name pos:line="5487" pos:column="51">index</name></decl></param>)</parameter_list> 
<block pos:line="5488" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5489" pos:column="9">size_t</name></type> <name pos:line="5489" pos:column="16">len</name> <init pos:line="5489" pos:column="20">= <expr><call><name><name pos:line="5489" pos:column="22">_scintillaModifiedKeyIndices</name><op:operator pos:line="5489" pos:column="50">.</op:operator><name pos:line="5489" pos:column="51">size</name></name><argument_list pos:line="5489" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="5490" pos:column="9">bool</name></type> <name pos:line="5490" pos:column="14">found</name> <init pos:line="5490" pos:column="20">= <expr><lit:literal type="boolean" pos:line="5490" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="5491" pos:column="9">for(<init><decl><type><name pos:line="5491" pos:column="13">size_t</name></type> <name pos:line="5491" pos:column="20">i</name> <init pos:line="5491" pos:column="22">= <expr><lit:literal type="number" pos:line="5491" pos:column="24">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="5491" pos:column="27">i</name> <op:operator pos:line="5491" pos:column="29">&lt;</op:operator> <name pos:line="5491" pos:column="31">len</name></expr>;</condition> <incr><expr><name pos:line="5491" pos:column="36">i</name><op:operator pos:line="5491" pos:column="37">++</op:operator></expr></incr>) 
	<block pos:line="5492" pos:column="9">{
		<if pos:line="5493" pos:column="17">if <condition pos:line="5493" pos:column="20">(<expr><name><name pos:line="5493" pos:column="21">_scintillaModifiedKeyIndices</name><index pos:line="5493" pos:column="49">[<expr><name pos:line="5493" pos:column="50">i</name></expr>]</index></name> <op:operator pos:line="5493" pos:column="53">==</op:operator> <name pos:line="5493" pos:column="56">index</name></expr>)</condition><then pos:line="5493" pos:column="62"> 
		<block pos:line="5494" pos:column="17">{
			<expr_stmt><expr><name pos:line="5495" pos:column="25">found</name> <op:operator pos:line="5495" pos:column="31">=</op:operator> <lit:literal type="boolean" pos:line="5495" pos:column="33">true</lit:literal></expr>;</expr_stmt>
			<break pos:line="5496" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
	<if pos:line="5499" pos:column="9">if <condition pos:line="5499" pos:column="12">(<expr><op:operator pos:line="5499" pos:column="13">!</op:operator><name pos:line="5499" pos:column="14">found</name></expr>)</condition><then pos:line="5499" pos:column="20"> 
	<block pos:line="5500" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="5501" pos:column="17">_scintillaModifiedKeyIndices</name><op:operator pos:line="5501" pos:column="45">.</op:operator><name pos:line="5501" pos:column="46">push_back</name></name><argument_list pos:line="5501" pos:column="55">(<argument><expr><name pos:line="5501" pos:column="56">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="5505" pos:column="1">void</name></type> <name><name pos:line="5505" pos:column="6">NppParameters</name><op:operator pos:line="5505" pos:column="19">::</op:operator><name pos:line="5505" pos:column="21">safeWow64EnableWow64FsRedirection</name></name><parameter_list pos:line="5505" pos:column="54">(<param><decl><type><name pos:line="5505" pos:column="55">BOOL</name></type> <name pos:line="5505" pos:column="60">Wow64FsEnableRedirection</name></decl></param>)</parameter_list>
<block pos:line="5506" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="5507" pos:column="9">HMODULE</name></type> <name pos:line="5507" pos:column="17">kernel</name> <init pos:line="5507" pos:column="24">= <expr><call><name pos:line="5507" pos:column="26">GetModuleHandle</name><argument_list pos:line="5507" pos:column="41">(<argument><expr><call><name pos:line="5507" pos:column="42">TEXT</name><argument_list pos:line="5507" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="5507" pos:column="47">"kernel32"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="5508" pos:column="9">if <condition pos:line="5508" pos:column="12">(<expr><name pos:line="5508" pos:column="13">kernel</name></expr>)</condition><then pos:line="5508" pos:column="20">
	<block pos:line="5509" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="5510" pos:column="17">BOOL</name></type> <name pos:line="5510" pos:column="22">isWow64</name> <init pos:line="5510" pos:column="30">= <expr><name pos:line="5510" pos:column="32">FALSE</name></expr></init></decl>;</decl_stmt>
		<typedef pos:line="5511" pos:column="17">typedef <function_decl><type><name pos:line="5511" pos:column="25">BOOL</name></type> (<name pos:line="5511" pos:column="31">WINAPI</name> <type:modifier pos:line="5511" pos:column="38">*</type:modifier><name pos:line="5511" pos:column="39">LPFN_ISWOW64PROCESS</name>) <parameter_list pos:line="5511" pos:column="60">(<param><decl><type><name pos:line="5511" pos:column="61">HANDLE</name></type></decl></param>, <param><decl><type><name pos:line="5511" pos:column="69">PBOOL</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
		<decl_stmt><decl><type><name pos:line="5512" pos:column="17">LPFN_ISWOW64PROCESS</name></type> <name pos:line="5512" pos:column="37">IsWow64ProcessFunc</name> <init pos:line="5512" pos:column="56">= <expr><op:operator pos:line="5512" pos:column="58">(</op:operator><name pos:line="5512" pos:column="59">LPFN_ISWOW64PROCESS</name><op:operator pos:line="5512" pos:column="78">)</op:operator> <call><name pos:line="5512" pos:column="80">GetProcAddress</name><argument_list pos:line="5512" pos:column="94">(<argument><expr><name pos:line="5512" pos:column="95">kernel</name></expr></argument>,<argument><expr><lit:literal type="string" pos:line="5512" pos:column="102">"IsWow64Process"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="5514" pos:column="17">if <condition pos:line="5514" pos:column="20">(<expr><name pos:line="5514" pos:column="21">IsWow64ProcessFunc</name></expr>)</condition><then pos:line="5514" pos:column="40">
		<block pos:line="5515" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="5516" pos:column="25">IsWow64ProcessFunc</name><argument_list pos:line="5516" pos:column="43">(<argument><expr><call><name pos:line="5516" pos:column="44">GetCurrentProcess</name><argument_list pos:line="5516" pos:column="61">()</argument_list></call></expr></argument>,<argument><expr><op:operator pos:line="5516" pos:column="64">&amp;</op:operator><name pos:line="5516" pos:column="65">isWow64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="5518" pos:column="25">if <condition pos:line="5518" pos:column="28">(<expr><name pos:line="5518" pos:column="29">isWow64</name></expr>)</condition><then pos:line="5518" pos:column="37">
			<block pos:line="5519" pos:column="25">{
				<typedef pos:line="5520" pos:column="33">typedef <function_decl><type><name pos:line="5520" pos:column="41">BOOL</name></type> (<name pos:line="5520" pos:column="47">WINAPI</name> <type:modifier pos:line="5520" pos:column="54">*</type:modifier><name pos:line="5520" pos:column="55">LPFN_WOW64ENABLEWOW64FSREDIRECTION</name>)<parameter_list pos:line="5520" pos:column="90">(<param><decl><type><name pos:line="5520" pos:column="91">BOOL</name></type></decl></param>)</parameter_list>;</function_decl></typedef>
				<decl_stmt><decl><type><name pos:line="5521" pos:column="33">LPFN_WOW64ENABLEWOW64FSREDIRECTION</name></type> <name pos:line="5521" pos:column="68">Wow64EnableWow64FsRedirectionFunc</name> <init pos:line="5521" pos:column="102">= <expr><op:operator pos:line="5521" pos:column="104">(</op:operator><name pos:line="5521" pos:column="105">LPFN_WOW64ENABLEWOW64FSREDIRECTION</name><op:operator pos:line="5521" pos:column="139">)</op:operator><call><name pos:line="5521" pos:column="140">GetProcAddress</name><argument_list pos:line="5521" pos:column="154">(<argument><expr><name pos:line="5521" pos:column="155">kernel</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="5521" pos:column="163">"Wow64EnableWow64FsRedirection"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="5522" pos:column="33">if <condition pos:line="5522" pos:column="36">(<expr><name pos:line="5522" pos:column="37">Wow64EnableWow64FsRedirectionFunc</name></expr>)</condition><then pos:line="5522" pos:column="71">
				<block pos:line="5523" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="5524" pos:column="41">Wow64EnableWow64FsRedirectionFunc</name><argument_list pos:line="5524" pos:column="74">(<argument><expr><name pos:line="5524" pos:column="75">Wow64FsEnableRedirection</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
}</block></function>
</unit>
