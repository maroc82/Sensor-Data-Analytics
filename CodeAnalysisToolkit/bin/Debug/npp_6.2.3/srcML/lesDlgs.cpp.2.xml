<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\lesDlgs.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"lesDlgs.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"resource.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"menuCmdID.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="34" pos:column="1">void</name></type> <name><name pos:line="34" pos:column="6">ValueDlg</name><op:operator pos:line="34" pos:column="14">::</op:operator><name pos:line="34" pos:column="16">init</name></name><parameter_list pos:line="34" pos:column="20">(<param><decl><type><name pos:line="34" pos:column="21">HINSTANCE</name></type> <name pos:line="34" pos:column="31">hInst</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="38">HWND</name></type> <name pos:line="34" pos:column="43">parent</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="51">int</name></type> <name pos:line="34" pos:column="55">valueToSet</name></decl></param>, <param><decl><type><specifier pos:line="34" pos:column="67">const</specifier> <name pos:line="34" pos:column="73">TCHAR</name> <type:modifier pos:line="34" pos:column="79">*</type:modifier></type><name pos:line="34" pos:column="80">text</name></decl></param>)</parameter_list> 
<block pos:line="35" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="36" pos:column="9">Window</name><op:operator pos:line="36" pos:column="15">::</op:operator><name pos:line="36" pos:column="17">init</name></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="36" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="37" pos:column="9">_defaultValue</name> <op:operator pos:line="37" pos:column="23">=</op:operator> <name pos:line="37" pos:column="25">valueToSet</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="38" pos:column="9">_name</name> <op:operator pos:line="38" pos:column="15">=</op:operator> <name pos:line="38" pos:column="17">text</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="41" pos:column="1">int</name></type> <name><name pos:line="41" pos:column="5">ValueDlg</name><op:operator pos:line="41" pos:column="13">::</op:operator><name pos:line="41" pos:column="15">doDialog</name></name><parameter_list pos:line="41" pos:column="23">(<param><decl><type><name pos:line="41" pos:column="24">POINT</name></type> <name pos:line="41" pos:column="30">p</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="33">bool</name></type> <name pos:line="41" pos:column="38">isRTL</name></decl></param>)</parameter_list> 
<block pos:line="42" pos:column="1">{
	<expr_stmt><expr><name pos:line="43" pos:column="9">_p</name> <op:operator pos:line="43" pos:column="12">=</op:operator> <name pos:line="43" pos:column="14">p</name></expr>;</expr_stmt>
	<if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">isRTL</name></expr>)</condition><then pos:line="44" pos:column="19">
	<block pos:line="45" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="46" pos:column="17">DLGTEMPLATE</name> <type:modifier pos:line="46" pos:column="29">*</type:modifier></type><name pos:line="46" pos:column="30">pMyDlgTemplate</name> <init pos:line="46" pos:column="45">= <expr><name pos:line="46" pos:column="47">NULL</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="47" pos:column="17">HGLOBAL</name></type> <name pos:line="47" pos:column="25">hMyDlgTemplate</name> <init pos:line="47" pos:column="40">= <expr><call><name pos:line="47" pos:column="42">makeRTLResource</name><argument_list pos:line="47" pos:column="57">(<argument><expr><name pos:line="47" pos:column="58">IDD_VALUE_DLG</name></expr></argument>, <argument><expr><op:operator pos:line="47" pos:column="73">&amp;</op:operator><name pos:line="47" pos:column="74">pMyDlgTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">int</name></type> <name pos:line="48" pos:column="21">result</name> <init pos:line="48" pos:column="28">= <expr><call><name><op:operator pos:line="48" pos:column="30">::</op:operator><name pos:line="48" pos:column="32">DialogBoxIndirectParam</name></name><argument_list pos:line="48" pos:column="54">(<argument><expr><name pos:line="48" pos:column="55">_hInst</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="63">pMyDlgTemplate</name></expr></argument>, <argument><expr><name pos:line="48" pos:column="79">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="48" pos:column="90">(</op:operator><name pos:line="48" pos:column="91">DLGPROC</name><op:operator pos:line="48" pos:column="98">)</op:operator><name pos:line="48" pos:column="99">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="48" pos:column="108">(</op:operator><name pos:line="48" pos:column="109">LPARAM</name><op:operator pos:line="48" pos:column="115">)</op:operator><name pos:line="48" pos:column="116">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="49" pos:column="17">::</op:operator><name pos:line="49" pos:column="19">GlobalFree</name></name><argument_list pos:line="49" pos:column="29">(<argument><expr><name pos:line="49" pos:column="30">hMyDlgTemplate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="50" pos:column="17">return <expr><name pos:line="50" pos:column="24">result</name></expr>;</return>
	}</block></then></if>
	<return pos:line="52" pos:column="9">return <expr><call><name><op:operator pos:line="52" pos:column="16">::</op:operator><name pos:line="52" pos:column="18">DialogBoxParam</name></name><argument_list pos:line="52" pos:column="32">(<argument><expr><name pos:line="52" pos:column="33">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="52" pos:column="41">MAKEINTRESOURCE</name><argument_list pos:line="52" pos:column="56">(<argument><expr><name pos:line="52" pos:column="57">IDD_VALUE_DLG</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="52" pos:column="73">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="52" pos:column="84">(</op:operator><name pos:line="52" pos:column="85">DLGPROC</name><op:operator pos:line="52" pos:column="92">)</op:operator><name pos:line="52" pos:column="93">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="52" pos:column="102">(</op:operator><name pos:line="52" pos:column="103">LPARAM</name><op:operator pos:line="52" pos:column="109">)</op:operator><name pos:line="52" pos:column="110">this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>


<function><type><name pos:line="56" pos:column="1">int</name></type> <name><name pos:line="56" pos:column="5">ValueDlg</name><op:operator pos:line="56" pos:column="13">::</op:operator><name pos:line="56" pos:column="15">reSizeValueBox</name></name><parameter_list pos:line="56" pos:column="29">()</parameter_list>
<block pos:line="57" pos:column="1">{
	<if pos:line="58" pos:column="9">if <condition pos:line="58" pos:column="12">(<expr><name pos:line="58" pos:column="13">_nbNumber</name> <op:operator pos:line="58" pos:column="23">==</op:operator> <name pos:line="58" pos:column="26">DEFAULT_NB_NUMBER</name></expr>)</condition><then pos:line="58" pos:column="44"> <return pos:line="58" pos:column="45">return <expr><lit:literal type="number" pos:line="58" pos:column="52">0</lit:literal></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="59" pos:column="9">RECT</name></type> <name pos:line="59" pos:column="14">rect</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="60" pos:column="9">POINT</name></type> <name pos:line="60" pos:column="15">p</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="62" pos:column="9">HWND</name></type> <name pos:line="62" pos:column="14">hEdit</name> <init pos:line="62" pos:column="20">= <expr><call><name><op:operator pos:line="62" pos:column="22">::</op:operator><name pos:line="62" pos:column="24">GetDlgItem</name></name><argument_list pos:line="62" pos:column="34">(<argument><expr><name pos:line="62" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="62" pos:column="43">IDC_VALUE_EDIT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="64" pos:column="9">//get screen coordonnees (x,y)</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="65" pos:column="9">::</op:operator><name pos:line="65" pos:column="11">GetWindowRect</name></name><argument_list pos:line="65" pos:column="24">(<argument><expr><name pos:line="65" pos:column="25">hEdit</name></expr></argument>, <argument><expr><op:operator pos:line="65" pos:column="32">&amp;</op:operator><name pos:line="65" pos:column="33">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="66" pos:column="9">int</name></type> <name pos:line="66" pos:column="13">w</name> <init pos:line="66" pos:column="15">= <expr><name><name pos:line="66" pos:column="17">rect</name><op:operator pos:line="66" pos:column="21">.</op:operator><name pos:line="66" pos:column="22">right</name></name> <op:operator pos:line="66" pos:column="28">-</op:operator> <name><name pos:line="66" pos:column="30">rect</name><op:operator pos:line="66" pos:column="34">.</op:operator><name pos:line="66" pos:column="35">left</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="67" pos:column="9">int</name></type> <name pos:line="67" pos:column="13">h</name> <init pos:line="67" pos:column="15">= <expr><name><name pos:line="67" pos:column="17">rect</name><op:operator pos:line="67" pos:column="21">.</op:operator><name pos:line="67" pos:column="22">bottom</name></name> <op:operator pos:line="67" pos:column="29">-</op:operator> <name><name pos:line="67" pos:column="31">rect</name><op:operator pos:line="67" pos:column="35">.</op:operator><name pos:line="67" pos:column="36">top</name></name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="69" pos:column="9">p</name><op:operator pos:line="69" pos:column="10">.</op:operator><name pos:line="69" pos:column="11">x</name></name> <op:operator pos:line="69" pos:column="13">=</op:operator> <name><name pos:line="69" pos:column="15">rect</name><op:operator pos:line="69" pos:column="19">.</op:operator><name pos:line="69" pos:column="20">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="70" pos:column="9">p</name><op:operator pos:line="70" pos:column="10">.</op:operator><name pos:line="70" pos:column="11">y</name></name> <op:operator pos:line="70" pos:column="13">=</op:operator> <name><name pos:line="70" pos:column="15">rect</name><op:operator pos:line="70" pos:column="19">.</op:operator><name pos:line="70" pos:column="20">top</name></name></expr>;</expr_stmt>

	<comment type="line" pos:line="72" pos:column="9">// convert screen coordonnees to client coordonnees</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="73" pos:column="9">::</op:operator><name pos:line="73" pos:column="11">ScreenToClient</name></name><argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="73" pos:column="34">&amp;</op:operator><name pos:line="73" pos:column="35">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="75" pos:column="9">int</name></type> <name pos:line="75" pos:column="13">unit</name> <init pos:line="75" pos:column="18">= <expr><name pos:line="75" pos:column="20">w</name> <op:operator pos:line="75" pos:column="22">/</op:operator> <op:operator pos:line="75" pos:column="24">(</op:operator><name pos:line="75" pos:column="25">DEFAULT_NB_NUMBER</name> <op:operator pos:line="75" pos:column="43">+</op:operator> <lit:literal type="number" pos:line="75" pos:column="45">2</lit:literal><op:operator pos:line="75" pos:column="46">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="76" pos:column="9">int</name></type> <name pos:line="76" pos:column="13">extraSize</name> <init pos:line="76" pos:column="23">= <expr><op:operator pos:line="76" pos:column="25">(</op:operator><name pos:line="76" pos:column="26">_nbNumber</name><op:operator pos:line="76" pos:column="35">-</op:operator><name pos:line="76" pos:column="36">DEFAULT_NB_NUMBER</name><op:operator pos:line="76" pos:column="53">)</op:operator><op:operator pos:line="76" pos:column="54">*</op:operator><name pos:line="76" pos:column="55">unit</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="77" pos:column="9">::</op:operator><name pos:line="77" pos:column="11">MoveWindow</name></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">hEdit</name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="29">p</name><op:operator pos:line="77" pos:column="30">.</op:operator><name pos:line="77" pos:column="31">x</name></name></expr></argument>, <argument><expr><name><name pos:line="77" pos:column="34">p</name><op:operator pos:line="77" pos:column="35">.</op:operator><name pos:line="77" pos:column="36">y</name></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="39">w</name> <op:operator pos:line="77" pos:column="41">+</op:operator> <name pos:line="77" pos:column="43">extraSize</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="54">h</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="57">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:line="79" pos:column="9">return <expr><name pos:line="79" pos:column="16">extraSize</name></expr>;</return>
}</block></function>

<function><type><name pos:line="82" pos:column="1">BOOL</name> <name pos:line="82" pos:column="6">CALLBACK</name></type> <name><name pos:line="82" pos:column="15">ValueDlg</name><op:operator pos:line="82" pos:column="23">::</op:operator><name pos:line="82" pos:column="25">run_dlgProc</name></name><parameter_list pos:line="82" pos:column="36">(<param><decl><type><name pos:line="82" pos:column="37">UINT</name></type> <name pos:line="82" pos:column="42">Message</name></decl></param>, <param><decl><type><name pos:line="82" pos:column="51">WPARAM</name></type> <name pos:line="82" pos:column="58">wParam</name></decl></param>, <param><decl><type><name pos:line="82" pos:column="66">LPARAM</name></type></decl></param>)</parameter_list> 
<block pos:line="83" pos:column="1">{
	<switch pos:line="84" pos:column="9">switch <condition pos:line="84" pos:column="16">(<expr><name pos:line="84" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="85" pos:column="9">{
		<case pos:line="86" pos:column="17">case <expr><name pos:line="86" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="87" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="88" pos:column="25">::</op:operator><name pos:line="88" pos:column="27">SetDlgItemText</name></name><argument_list pos:line="88" pos:column="41">(<argument><expr><name pos:line="88" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="50">IDC_VALUE_STATIC</name></expr></argument>, <argument><expr><call><name><name pos:line="88" pos:column="68">_name</name><op:operator pos:line="88" pos:column="73">.</op:operator><name pos:line="88" pos:column="74">c_str</name></name><argument_list pos:line="88" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="89" pos:column="25">::</op:operator><name pos:line="89" pos:column="27">SetDlgItemInt</name></name><argument_list pos:line="89" pos:column="40">(<argument><expr><name pos:line="89" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="49">IDC_VALUE_EDIT</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="65">_defaultValue</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="80">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="91" pos:column="25">RECT</name></type> <name pos:line="91" pos:column="30">rc</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="92" pos:column="25">::</op:operator><name pos:line="92" pos:column="27">GetClientRect</name></name><argument_list pos:line="92" pos:column="40">(<argument><expr><name pos:line="92" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="92" pos:column="49">&amp;</op:operator><name pos:line="92" pos:column="50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="93" pos:column="25">int</name></type> <name pos:line="93" pos:column="29">size</name> <init pos:line="93" pos:column="34">= <expr><call><name pos:line="93" pos:column="36">reSizeValueBox</name><argument_list pos:line="93" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="94" pos:column="25">::</op:operator><name pos:line="94" pos:column="27">MoveWindow</name></name><argument_list pos:line="94" pos:column="37">(<argument><expr><name pos:line="94" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="46">_p</name><op:operator pos:line="94" pos:column="48">.</op:operator><name pos:line="94" pos:column="49">x</name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="52">_p</name><op:operator pos:line="94" pos:column="54">.</op:operator><name pos:line="94" pos:column="55">y</name></name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="58">rc</name><op:operator pos:line="94" pos:column="60">.</op:operator><name pos:line="94" pos:column="61">right</name></name> <op:operator pos:line="94" pos:column="67">-</op:operator> <name><name pos:line="94" pos:column="69">rc</name><op:operator pos:line="94" pos:column="71">.</op:operator><name pos:line="94" pos:column="72">left</name></name> <op:operator pos:line="94" pos:column="77">+</op:operator> <name pos:line="94" pos:column="79">size</name></expr></argument>, <argument><expr><name><name pos:line="94" pos:column="85">rc</name><op:operator pos:line="94" pos:column="87">.</op:operator><name pos:line="94" pos:column="88">bottom</name></name> <op:operator pos:line="94" pos:column="95">-</op:operator> <name><name pos:line="94" pos:column="97">rc</name><op:operator pos:line="94" pos:column="99">.</op:operator><name pos:line="94" pos:column="100">top</name></name> <op:operator pos:line="94" pos:column="104">+</op:operator> <lit:literal type="number" pos:line="94" pos:column="106">30</lit:literal></expr></argument>, <argument><expr><name pos:line="94" pos:column="110">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<return pos:line="96" pos:column="25">return <expr><name pos:line="96" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="99" pos:column="17">case <expr><name pos:line="99" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="100" pos:column="17">{
			<switch pos:line="101" pos:column="25">switch <condition pos:line="101" pos:column="32">(<expr><name pos:line="101" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="102" pos:column="25">{
				<case pos:line="103" pos:column="33">case <expr><name pos:line="103" pos:column="38">IDOK</name></expr> :
				<block pos:line="104" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="105" pos:column="41">int</name></type> <name pos:line="105" pos:column="45">i</name> <init pos:line="105" pos:column="47">= <expr><call><name><op:operator pos:line="105" pos:column="49">::</op:operator><name pos:line="105" pos:column="51">GetDlgItemInt</name></name><argument_list pos:line="105" pos:column="64">(<argument><expr><name pos:line="105" pos:column="65">_hSelf</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="73">IDC_VALUE_EDIT</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="89">NULL</name></expr></argument>, <argument><expr><name pos:line="105" pos:column="95">FALSE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="106" pos:column="41">::</op:operator><name pos:line="106" pos:column="43">EndDialog</name></name><argument_list pos:line="106" pos:column="52">(<argument><expr><name pos:line="106" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="106" pos:column="61">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="107" pos:column="41">return <expr><name pos:line="107" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="110" pos:column="33">case <expr><name pos:line="110" pos:column="38">IDCANCEL</name></expr> :
					<expr_stmt><expr><call><name><op:operator pos:line="111" pos:column="41">::</op:operator><name pos:line="111" pos:column="43">EndDialog</name></name><argument_list pos:line="111" pos:column="52">(<argument><expr><name pos:line="111" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="111" pos:column="61">-</op:operator><lit:literal type="number" pos:line="111" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="112" pos:column="41">return <expr><name pos:line="112" pos:column="48">TRUE</name></expr>;</return>

				</case><default pos:line="114" pos:column="33">default:
					<return pos:line="115" pos:column="41">return <expr><name pos:line="115" pos:column="48">FALSE</name></expr>;</return>
			</default>}</block></switch>
		}</block>
		</case><default pos:line="118" pos:column="17">default :
			<return pos:line="119" pos:column="25">return <expr><name pos:line="119" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>
}</block></function>



<function><type><name pos:line="125" pos:column="1">BOOL</name> <name pos:line="125" pos:column="6">CALLBACK</name></type> <name><name pos:line="125" pos:column="15">ButtonDlg</name><op:operator pos:line="125" pos:column="24">::</op:operator><name pos:line="125" pos:column="26">run_dlgProc</name></name><parameter_list pos:line="125" pos:column="37">(<param><decl><type><name pos:line="125" pos:column="38">UINT</name></type> <name pos:line="125" pos:column="43">Message</name></decl></param>, <param><decl><type><name pos:line="125" pos:column="52">WPARAM</name></type> <name pos:line="125" pos:column="59">wParam</name></decl></param>, <param><decl><type><name pos:line="125" pos:column="67">LPARAM</name></type></decl></param>)</parameter_list> 
<block pos:line="126" pos:column="1">{
	<switch pos:line="127" pos:column="9">switch <condition pos:line="127" pos:column="16">(<expr><name pos:line="127" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="128" pos:column="9">{
		<case pos:line="129" pos:column="17">case <expr><name pos:line="129" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="130" pos:column="17">{
			<return pos:line="131" pos:column="25">return <expr><name pos:line="131" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="134" pos:column="17">case <expr><name pos:line="134" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="135" pos:column="17">{
			<switch pos:line="136" pos:column="25">switch <condition pos:line="136" pos:column="32">(<expr><name pos:line="136" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="137" pos:column="25">{
				<case pos:line="138" pos:column="33">case <expr><name pos:line="138" pos:column="38">IDC_RESTORE_BUTTON</name></expr> :
				<block pos:line="139" pos:column="33">{
                    <decl_stmt><decl><type><name pos:line="140" pos:column="21">int</name></type> <name pos:line="140" pos:column="25">bs</name> <init pos:line="140" pos:column="28">= <expr><call><name pos:line="140" pos:column="30">getButtonStatus</name><argument_list pos:line="140" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="141" pos:column="21">bool</name></type> <name pos:line="141" pos:column="26">isFullScreen</name> <init pos:line="141" pos:column="39">= <expr><op:operator pos:line="141" pos:column="41">(</op:operator><name pos:line="141" pos:column="42">bs</name> <op:operator pos:line="141" pos:column="45">&amp;</op:operator> <name pos:line="141" pos:column="47">buttonStatus_fullscreen</name><op:operator pos:line="141" pos:column="70">)</op:operator> <op:operator pos:line="141" pos:column="72">!=</op:operator> <lit:literal type="number" pos:line="141" pos:column="75">0</lit:literal></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="142" pos:column="21">bool</name></type> <name pos:line="142" pos:column="26">isPostIt</name> <init pos:line="142" pos:column="35">= <expr><op:operator pos:line="142" pos:column="37">(</op:operator><name pos:line="142" pos:column="38">bs</name> <op:operator pos:line="142" pos:column="41">&amp;</op:operator> <name pos:line="142" pos:column="43">buttonStatus_postit</name><op:operator pos:line="142" pos:column="62">)</op:operator> <op:operator pos:line="142" pos:column="64">!=</op:operator> <lit:literal type="number" pos:line="142" pos:column="67">0</lit:literal></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="143" pos:column="21">int</name></type> <name pos:line="143" pos:column="25">cmd</name> <init pos:line="143" pos:column="29">= <expr><lit:literal type="number" pos:line="143" pos:column="31">0</lit:literal></expr></init></decl>;</decl_stmt>
                    <if pos:line="144" pos:column="21">if <condition pos:line="144" pos:column="24">(<expr><name pos:line="144" pos:column="25">isFullScreen</name> <op:operator pos:line="144" pos:column="38">&amp;&amp;</op:operator> <name pos:line="144" pos:column="41">isPostIt</name></expr>)</condition><then pos:line="144" pos:column="50">
                    <block pos:line="145" pos:column="21">{
                        <comment type="line" pos:line="146" pos:column="25">// remove postit firstly</comment>
                        <expr_stmt><expr><name pos:line="147" pos:column="25">cmd</name> <op:operator pos:line="147" pos:column="29">=</op:operator> <name pos:line="147" pos:column="31">IDM_VIEW_POSTIT</name></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="149" pos:column="21">else <if pos:line="149" pos:column="26">if <condition pos:line="149" pos:column="29">(<expr><name pos:line="149" pos:column="30">isFullScreen</name></expr>)</condition><then pos:line="149" pos:column="43">
                    <block pos:line="150" pos:column="21">{
                        <expr_stmt><expr><name pos:line="151" pos:column="25">cmd</name> <op:operator pos:line="151" pos:column="29">=</op:operator> <name pos:line="151" pos:column="31">IDM_VIEW_FULLSCREENTOGGLE</name></expr>;</expr_stmt>
                    }</block></then>
                    <else pos:line="153" pos:column="21">else <if pos:line="153" pos:column="26">if <condition pos:line="153" pos:column="29">(<expr><name pos:line="153" pos:column="30">isPostIt</name></expr>)</condition><then pos:line="153" pos:column="39">
                    <block pos:line="154" pos:column="21">{
                        <expr_stmt><expr><name pos:line="155" pos:column="25">cmd</name> <op:operator pos:line="155" pos:column="29">=</op:operator> <name pos:line="155" pos:column="31">IDM_VIEW_POSTIT</name></expr>;</expr_stmt>
                    }</block></then></if></else></if></else></if>
                    <expr_stmt><expr><call><name><op:operator pos:line="157" pos:column="21">::</op:operator><name pos:line="157" pos:column="23">SendMessage</name></name><argument_list pos:line="157" pos:column="34">(<argument><expr><name pos:line="157" pos:column="35">_hParent</name></expr></argument>, <argument><expr><name pos:line="157" pos:column="45">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="157" pos:column="57">cmd</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="157" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="158" pos:column="41">display</name><argument_list pos:line="158" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="158" pos:column="49">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="159" pos:column="41">return <expr><name pos:line="159" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><default pos:line="162" pos:column="33">default:
					<return pos:line="163" pos:column="41">return <expr><name pos:line="163" pos:column="48">FALSE</name></expr>;</return>
			</default>}</block></switch>
		}</block>
		</case><default pos:line="166" pos:column="17">default :
			<return pos:line="167" pos:column="25">return <expr><name pos:line="167" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>
}</block></function>




<function><type><name pos:line="174" pos:column="1">void</name></type> <name><name pos:line="174" pos:column="6">ButtonDlg</name><op:operator pos:line="174" pos:column="15">::</op:operator><name pos:line="174" pos:column="17">doDialog</name></name><parameter_list pos:line="174" pos:column="25">(<param><decl><type><name pos:line="174" pos:column="26">bool</name></type> <name pos:line="174" pos:column="31">isRTL</name></decl></param>)</parameter_list> 
<block pos:line="175" pos:column="1">{
    <if pos:line="176" pos:column="5">if <condition pos:line="176" pos:column="8">(<expr><op:operator pos:line="176" pos:column="9">!</op:operator><call><name pos:line="176" pos:column="10">isCreated</name><argument_list pos:line="176" pos:column="19">()</argument_list></call></expr>)</condition><then pos:line="176" pos:column="22">
			<expr_stmt><expr><call><name pos:line="177" pos:column="25">create</name><argument_list pos:line="177" pos:column="31">(<argument><expr><name pos:line="177" pos:column="32">IDD_BUTTON_DLG</name></expr></argument>, <argument><expr><name pos:line="177" pos:column="48">isRTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name pos:line="178" pos:column="9">display</name><argument_list pos:line="178" pos:column="16">()</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
