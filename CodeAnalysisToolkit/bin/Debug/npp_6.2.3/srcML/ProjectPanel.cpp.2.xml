<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ProjectPanel\ProjectPanel.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"ProjectPanel.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"resource.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"tinyxml.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"FileDialog.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"localization.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>

<cpp:define pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="37" pos:column="9">CX_BITMAP</name></cpp:macro>         <cpp:value pos:line="37" pos:column="27">16</cpp:value></cpp:define>
<cpp:define pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="38" pos:column="9">CY_BITMAP</name></cpp:macro>         <cpp:value pos:line="38" pos:column="27">16</cpp:value></cpp:define>

<cpp:define pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="40" pos:column="9">INDEX_CLEAN_ROOT</name></cpp:macro>     <cpp:value pos:line="40" pos:column="30">0</cpp:value></cpp:define>
<cpp:define pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="41" pos:column="9">INDEX_DIRTY_ROOT</name></cpp:macro>     <cpp:value pos:line="41" pos:column="30">1</cpp:value></cpp:define>
<cpp:define pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="42" pos:column="9">INDEX_PROJECT</name></cpp:macro>        <cpp:value pos:line="42" pos:column="30">2</cpp:value></cpp:define>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">INDEX_OPEN_NODE</name></cpp:macro>	     <cpp:value pos:line="43" pos:column="30">3</cpp:value></cpp:define>
<cpp:define pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="44" pos:column="9">INDEX_CLOSED_NODE</name></cpp:macro>    <cpp:value pos:line="44" pos:column="30">4</cpp:value></cpp:define>
<cpp:define pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="45" pos:column="9">INDEX_LEAF</name></cpp:macro>           <cpp:value pos:line="45" pos:column="30">5</cpp:value></cpp:define>
<cpp:define pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="46" pos:column="9">INDEX_LEAF_INVALID</name></cpp:macro>   <cpp:value pos:line="46" pos:column="30">6</cpp:value></cpp:define>

<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="48" pos:column="9">GET_X_LPARAM</name><parameter_list pos:line="48" pos:column="21">(<param><type><name pos:line="48" pos:column="22">lp</name></type></param>)</parameter_list></cpp:macro>                        <cpp:value pos:line="48" pos:column="49">((int)(short)LOWORD(lp))</cpp:value></cpp:define>
<cpp:define pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="49" pos:column="9">GET_Y_LPARAM</name><parameter_list pos:line="49" pos:column="21">(<param><type><name pos:line="49" pos:column="22">lp</name></type></param>)</parameter_list></cpp:macro>                        <cpp:value pos:line="49" pos:column="49">((int)(short)HIWORD(lp))</cpp:value></cpp:define>

<function><type><name pos:line="51" pos:column="1">BOOL</name> <name pos:line="51" pos:column="6">CALLBACK</name></type> <name><name pos:line="51" pos:column="15">ProjectPanel</name><op:operator pos:line="51" pos:column="27">::</op:operator><name pos:line="51" pos:column="29">run_dlgProc</name></name><parameter_list pos:line="51" pos:column="40">(<param><decl><type><name pos:line="51" pos:column="41">UINT</name></type> <name pos:line="51" pos:column="46">message</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="55">WPARAM</name></type> <name pos:line="51" pos:column="62">wParam</name></decl></param>, <param><decl><type><name pos:line="51" pos:column="70">LPARAM</name></type> <name pos:line="51" pos:column="77">lParam</name></decl></param>)</parameter_list>
<block pos:line="52" pos:column="1">{
    <switch pos:line="53" pos:column="5">switch <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">message</name></expr>)</condition>
    <block pos:line="54" pos:column="5">{
        <case pos:line="55" pos:column="9">case <expr><name pos:line="55" pos:column="14">WM_INITDIALOG</name></expr> :
        <block pos:line="56" pos:column="9">{
			<expr_stmt><expr><call><name><name pos:line="57" pos:column="25">ProjectPanel</name><op:operator pos:line="57" pos:column="37">::</op:operator><name pos:line="57" pos:column="39">initMenus</name></name><argument_list pos:line="57" pos:column="48">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="59" pos:column="25">// Create toolbar menu</comment>
			<decl_stmt><decl><type><name pos:line="60" pos:column="25">int</name></type> <name pos:line="60" pos:column="29">style</name> <init pos:line="60" pos:column="35">= <expr><name pos:line="60" pos:column="37">WS_CHILD</name> <op:operator pos:line="60" pos:column="46">|</op:operator> <name pos:line="60" pos:column="48">WS_VISIBLE</name> <op:operator pos:line="60" pos:column="59">|</op:operator> <name pos:line="60" pos:column="61">CCS_ADJUSTABLE</name> <op:operator pos:line="60" pos:column="76">|</op:operator> <name pos:line="60" pos:column="78">TBSTYLE_AUTOSIZE</name> <op:operator pos:line="60" pos:column="95">|</op:operator> <name pos:line="60" pos:column="97">TBSTYLE_FLAT</name> <op:operator pos:line="60" pos:column="110">|</op:operator> <name pos:line="60" pos:column="112">TBSTYLE_LIST</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="61" pos:column="25">_hToolbarMenu</name> <op:operator pos:line="61" pos:column="39">=</op:operator> <call><name pos:line="61" pos:column="41">CreateWindowEx</name><argument_list pos:line="61" pos:column="55">(<argument><expr><lit:literal type="number" pos:line="61" pos:column="56">0</lit:literal></expr></argument>,<argument><expr><name pos:line="61" pos:column="58">TOOLBARCLASSNAME</name></expr></argument>,<argument><expr><name pos:line="61" pos:column="75">NULL</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="81">style</name></expr></argument>,
								   <argument><expr><lit:literal type="number" pos:line="62" pos:column="68">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="62" pos:column="70">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="62" pos:column="72">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="62" pos:column="74">0</lit:literal></expr></argument>,<argument><expr><name pos:line="62" pos:column="76">_hSelf</name></expr></argument>,<argument><expr><op:operator pos:line="62" pos:column="83">(</op:operator><name pos:line="62" pos:column="84">HMENU</name><op:operator pos:line="62" pos:column="89">)</op:operator><lit:literal type="number" pos:line="62" pos:column="90">0</lit:literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="93">_hInst</name></expr></argument>, <argument><expr><name pos:line="62" pos:column="101">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="63" pos:column="25">TBBUTTON</name></type> <name><name pos:line="63" pos:column="34">tbButtons</name><index pos:line="63" pos:column="43">[<expr><lit:literal type="number" pos:line="63" pos:column="44">2</lit:literal></expr>]</index></name></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="65" pos:column="25">NativeLangSpeaker</name> <type:modifier pos:line="65" pos:column="43">*</type:modifier></type><name pos:line="65" pos:column="44">pNativeSpeaker</name> <init pos:line="65" pos:column="59">= <expr><op:operator pos:line="65" pos:column="61">(</op:operator><call><name><name pos:line="65" pos:column="62">NppParameters</name><op:operator pos:line="65" pos:column="75">::</op:operator><name pos:line="65" pos:column="77">getInstance</name></name><argument_list pos:line="65" pos:column="88">()</argument_list></call><op:operator pos:line="65" pos:column="90">)</op:operator><op:operator pos:line="65" pos:column="91">-&gt;</op:operator><call><name pos:line="65" pos:column="93">getNativeLangSpeaker</name><argument_list pos:line="65" pos:column="113">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="66" pos:column="25">generic_string</name></type> <name pos:line="66" pos:column="40">workspace_entry</name> <init pos:line="66" pos:column="56">= <expr><call><name><name pos:line="66" pos:column="58">pNativeSpeaker</name><op:operator pos:line="66" pos:column="72">-&gt;</op:operator><name pos:line="66" pos:column="74">getProjectPanelLangMenuStr</name></name><argument_list pos:line="66" pos:column="100">(<argument><expr><lit:literal type="string" pos:line="66" pos:column="101">"Entries"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="66" pos:column="112">0</lit:literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="115">PM_WORKSPACEMENUENTRY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="67" pos:column="25">generic_string</name></type> <name pos:line="67" pos:column="40">edit_entry</name> <init pos:line="67" pos:column="51">= <expr><call><name><name pos:line="67" pos:column="53">pNativeSpeaker</name><op:operator pos:line="67" pos:column="67">-&gt;</op:operator><name pos:line="67" pos:column="69">getProjectPanelLangMenuStr</name></name><argument_list pos:line="67" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="96">"Entries"</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="67" pos:column="107">1</lit:literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="110">PM_EDITMENUENTRY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><name><name pos:line="69" pos:column="25">tbButtons</name><index pos:line="69" pos:column="34">[<expr><lit:literal type="number" pos:line="69" pos:column="35">0</lit:literal></expr>]</index></name><op:operator pos:line="69" pos:column="37">.</op:operator><name pos:line="69" pos:column="38">idCommand</name> <op:operator pos:line="69" pos:column="48">=</op:operator> <name pos:line="69" pos:column="50">IDB_PROJECT_BTN</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="70" pos:column="25">tbButtons</name><index pos:line="70" pos:column="34">[<expr><lit:literal type="number" pos:line="70" pos:column="35">0</lit:literal></expr>]</index></name><op:operator pos:line="70" pos:column="37">.</op:operator><name pos:line="70" pos:column="38">iBitmap</name> <op:operator pos:line="70" pos:column="46">=</op:operator> <name pos:line="70" pos:column="48">I_IMAGENONE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="71" pos:column="25">tbButtons</name><index pos:line="71" pos:column="34">[<expr><lit:literal type="number" pos:line="71" pos:column="35">0</lit:literal></expr>]</index></name><op:operator pos:line="71" pos:column="37">.</op:operator><name pos:line="71" pos:column="38">fsState</name> <op:operator pos:line="71" pos:column="46">=</op:operator> <name pos:line="71" pos:column="48">TBSTATE_ENABLED</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="72" pos:column="25">tbButtons</name><index pos:line="72" pos:column="34">[<expr><lit:literal type="number" pos:line="72" pos:column="35">0</lit:literal></expr>]</index></name><op:operator pos:line="72" pos:column="37">.</op:operator><name pos:line="72" pos:column="38">fsStyle</name> <op:operator pos:line="72" pos:column="46">=</op:operator> <name pos:line="72" pos:column="48">BTNS_BUTTON</name> <op:operator pos:line="72" pos:column="60">|</op:operator> <name pos:line="72" pos:column="62">BTNS_AUTOSIZE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="73" pos:column="25">tbButtons</name><index pos:line="73" pos:column="34">[<expr><lit:literal type="number" pos:line="73" pos:column="35">0</lit:literal></expr>]</index></name><op:operator pos:line="73" pos:column="37">.</op:operator><name pos:line="73" pos:column="38">iString</name> <op:operator pos:line="73" pos:column="46">=</op:operator> <op:operator pos:line="73" pos:column="48">(</op:operator><name pos:line="73" pos:column="49">INT_PTR</name><op:operator pos:line="73" pos:column="56">)</op:operator><call><name><name pos:line="73" pos:column="57">workspace_entry</name><op:operator pos:line="73" pos:column="72">.</op:operator><name pos:line="73" pos:column="73">c_str</name></name><argument_list pos:line="73" pos:column="78">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="75" pos:column="25">tbButtons</name><index pos:line="75" pos:column="34">[<expr><lit:literal type="number" pos:line="75" pos:column="35">1</lit:literal></expr>]</index></name><op:operator pos:line="75" pos:column="37">.</op:operator><name pos:line="75" pos:column="38">idCommand</name> <op:operator pos:line="75" pos:column="48">=</op:operator> <name pos:line="75" pos:column="50">IDB_EDIT_BTN</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="76" pos:column="25">tbButtons</name><index pos:line="76" pos:column="34">[<expr><lit:literal type="number" pos:line="76" pos:column="35">1</lit:literal></expr>]</index></name><op:operator pos:line="76" pos:column="37">.</op:operator><name pos:line="76" pos:column="38">iBitmap</name> <op:operator pos:line="76" pos:column="46">=</op:operator> <name pos:line="76" pos:column="48">I_IMAGENONE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="77" pos:column="25">tbButtons</name><index pos:line="77" pos:column="34">[<expr><lit:literal type="number" pos:line="77" pos:column="35">1</lit:literal></expr>]</index></name><op:operator pos:line="77" pos:column="37">.</op:operator><name pos:line="77" pos:column="38">fsState</name> <op:operator pos:line="77" pos:column="46">=</op:operator> <name pos:line="77" pos:column="48">TBSTATE_ENABLED</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="78" pos:column="25">tbButtons</name><index pos:line="78" pos:column="34">[<expr><lit:literal type="number" pos:line="78" pos:column="35">1</lit:literal></expr>]</index></name><op:operator pos:line="78" pos:column="37">.</op:operator><name pos:line="78" pos:column="38">fsStyle</name> <op:operator pos:line="78" pos:column="46">=</op:operator> <name pos:line="78" pos:column="48">BTNS_BUTTON</name> <op:operator pos:line="78" pos:column="60">|</op:operator> <name pos:line="78" pos:column="62">BTNS_AUTOSIZE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="79" pos:column="25">tbButtons</name><index pos:line="79" pos:column="34">[<expr><lit:literal type="number" pos:line="79" pos:column="35">1</lit:literal></expr>]</index></name><op:operator pos:line="79" pos:column="37">.</op:operator><name pos:line="79" pos:column="38">iString</name> <op:operator pos:line="79" pos:column="46">=</op:operator> <op:operator pos:line="79" pos:column="48">(</op:operator><name pos:line="79" pos:column="49">INT_PTR</name><op:operator pos:line="79" pos:column="56">)</op:operator><call><name><name pos:line="79" pos:column="57">edit_entry</name><op:operator pos:line="79" pos:column="67">.</op:operator><name pos:line="79" pos:column="68">c_str</name></name><argument_list pos:line="79" pos:column="73">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="81" pos:column="25">SendMessage</name><argument_list pos:line="81" pos:column="36">(<argument><expr><name pos:line="81" pos:column="37">_hToolbarMenu</name></expr></argument>, <argument><expr><name pos:line="81" pos:column="52">TB_BUTTONSTRUCTSIZE</name></expr></argument>, <argument><expr><op:operator pos:line="81" pos:column="73">(</op:operator><name pos:line="81" pos:column="74">WPARAM</name><op:operator pos:line="81" pos:column="80">)</op:operator><sizeof pos:line="81" pos:column="81">sizeof<argument_list pos:line="81" pos:column="87">(<argument><expr><name pos:line="81" pos:column="88">TBBUTTON</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument><expr><lit:literal type="number" pos:line="81" pos:column="99">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="82" pos:column="25">SendMessage</name><argument_list pos:line="82" pos:column="36">(<argument><expr><name pos:line="82" pos:column="37">_hToolbarMenu</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="52">TB_ADDBUTTONS</name></expr></argument>,       <argument><expr><op:operator pos:line="82" pos:column="73">(</op:operator><name pos:line="82" pos:column="74">WPARAM</name><op:operator pos:line="82" pos:column="80">)</op:operator><sizeof pos:line="82" pos:column="81">sizeof<argument_list pos:line="82" pos:column="87">(<argument><expr><name pos:line="82" pos:column="88">tbButtons</name></expr></argument>)</argument_list></sizeof> <op:operator pos:line="82" pos:column="99">/</op:operator> <sizeof pos:line="82" pos:column="101">sizeof<argument_list pos:line="82" pos:column="107">(<argument><expr><name pos:line="82" pos:column="108">TBBUTTON</name></expr></argument>)</argument_list></sizeof></expr></argument>,       <argument><expr><op:operator pos:line="82" pos:column="125">(</op:operator><name pos:line="82" pos:column="126">LPARAM</name><op:operator pos:line="82" pos:column="132">)</op:operator><op:operator pos:line="82" pos:column="133">&amp;</op:operator><name pos:line="82" pos:column="134">tbButtons</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="83" pos:column="25">SendMessage</name><argument_list pos:line="83" pos:column="36">(<argument><expr><name pos:line="83" pos:column="37">_hToolbarMenu</name></expr></argument>, <argument><expr><name pos:line="83" pos:column="52">TB_AUTOSIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="83" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="83" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">ShowWindow</name><argument_list pos:line="84" pos:column="35">(<argument><expr><name pos:line="84" pos:column="36">_hToolbarMenu</name></expr></argument>, <argument><expr><name pos:line="84" pos:column="51">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="86" pos:column="25">_treeView</name><op:operator pos:line="86" pos:column="34">.</op:operator><name pos:line="86" pos:column="35">init</name></name><argument_list pos:line="86" pos:column="39">(<argument><expr><name pos:line="86" pos:column="40">_hInst</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="48">_hSelf</name></expr></argument>, <argument><expr><name pos:line="86" pos:column="56">ID_PROJECTTREEVIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="88" pos:column="25">setImageList</name><argument_list pos:line="88" pos:column="37">(<argument><expr><name pos:line="88" pos:column="38">IDI_PROJECT_WORKSPACE</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="61">IDI_PROJECT_WORKSPACEDIRTY</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="89">IDI_PROJECT_PROJECT</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="110">IDI_PROJECT_FOLDEROPEN</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="134">IDI_PROJECT_FOLDERCLOSE</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="159">IDI_PROJECT_FILE</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="177">IDI_PROJECT_FILEINVALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="89" pos:column="25">_treeView</name><op:operator pos:line="89" pos:column="34">.</op:operator><name pos:line="89" pos:column="35">addCanNotDropInList</name></name><argument_list pos:line="89" pos:column="54">(<argument><expr><name pos:line="89" pos:column="55">INDEX_LEAF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="90" pos:column="25">_treeView</name><op:operator pos:line="90" pos:column="34">.</op:operator><name pos:line="90" pos:column="35">addCanNotDropInList</name></name><argument_list pos:line="90" pos:column="54">(<argument><expr><name pos:line="90" pos:column="55">INDEX_LEAF_INVALID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="92" pos:column="25">_treeView</name><op:operator pos:line="92" pos:column="34">.</op:operator><name pos:line="92" pos:column="35">addCanNotDragOutList</name></name><argument_list pos:line="92" pos:column="55">(<argument><expr><name pos:line="92" pos:column="56">INDEX_CLEAN_ROOT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="93" pos:column="25">_treeView</name><op:operator pos:line="93" pos:column="34">.</op:operator><name pos:line="93" pos:column="35">addCanNotDragOutList</name></name><argument_list pos:line="93" pos:column="55">(<argument><expr><name pos:line="93" pos:column="56">INDEX_DIRTY_ROOT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="94" pos:column="25">_treeView</name><op:operator pos:line="94" pos:column="34">.</op:operator><name pos:line="94" pos:column="35">addCanNotDragOutList</name></name><argument_list pos:line="94" pos:column="55">(<argument><expr><name pos:line="94" pos:column="56">INDEX_PROJECT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="96" pos:column="25">_treeView</name><op:operator pos:line="96" pos:column="34">.</op:operator><name pos:line="96" pos:column="35">display</name></name><argument_list pos:line="96" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<if pos:line="97" pos:column="25">if <condition pos:line="97" pos:column="28">(<expr><op:operator pos:line="97" pos:column="29">!</op:operator><call><name pos:line="97" pos:column="30">openWorkSpace</name><argument_list pos:line="97" pos:column="43">(<argument><expr><call><name><name pos:line="97" pos:column="44">_workSpaceFilePath</name><op:operator pos:line="97" pos:column="62">.</op:operator><name pos:line="97" pos:column="63">c_str</name></name><argument_list pos:line="97" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="97" pos:column="72">
				<expr_stmt><expr><call><name pos:line="98" pos:column="33">newWorkSpace</name><argument_list pos:line="98" pos:column="45">()</argument_list></call></expr>;</expr_stmt></then></if>

            <return pos:line="100" pos:column="13">return <expr><name pos:line="100" pos:column="20">TRUE</name></expr>;</return>
        }</block>

		
		</case><case pos:line="104" pos:column="17">case <expr><name pos:line="104" pos:column="22">WM_MOUSEMOVE</name></expr>:
			<if pos:line="105" pos:column="25">if <condition pos:line="105" pos:column="28">(<expr><call><name><name pos:line="105" pos:column="29">_treeView</name><op:operator pos:line="105" pos:column="38">.</op:operator><name pos:line="105" pos:column="39">isDragging</name></name><argument_list pos:line="105" pos:column="49">()</argument_list></call></expr>)</condition><then pos:line="105" pos:column="52">
				<expr_stmt><expr><call><name><name pos:line="106" pos:column="33">_treeView</name><op:operator pos:line="106" pos:column="42">.</op:operator><name pos:line="106" pos:column="43">dragItem</name></name><argument_list pos:line="106" pos:column="51">(<argument><expr><name pos:line="106" pos:column="52">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="106" pos:column="60">LOWORD</name><argument_list pos:line="106" pos:column="66">(<argument><expr><name pos:line="106" pos:column="67">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="106" pos:column="76">HIWORD</name><argument_list pos:line="106" pos:column="82">(<argument><expr><name pos:line="106" pos:column="83">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="107" pos:column="25">break;</break>
		</case><case pos:line="108" pos:column="17">case <expr><name pos:line="108" pos:column="22">WM_LBUTTONUP</name></expr>:
			<if pos:line="109" pos:column="25">if <condition pos:line="109" pos:column="28">(<expr><call><name><name pos:line="109" pos:column="29">_treeView</name><op:operator pos:line="109" pos:column="38">.</op:operator><name pos:line="109" pos:column="39">isDragging</name></name><argument_list pos:line="109" pos:column="49">()</argument_list></call></expr>)</condition><then pos:line="109" pos:column="52">
				<if pos:line="110" pos:column="33">if <condition pos:line="110" pos:column="36">(<expr><call><name><name pos:line="110" pos:column="37">_treeView</name><op:operator pos:line="110" pos:column="46">.</op:operator><name pos:line="110" pos:column="47">dropItem</name></name><argument_list pos:line="110" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="110" pos:column="58">
					<expr_stmt><expr><call><name pos:line="111" pos:column="41">setWorkSpaceDirty</name><argument_list pos:line="111" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="111" pos:column="59">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></then></if>
			<break pos:line="112" pos:column="25">break;</break>

		</case><case pos:line="114" pos:column="17">case <expr><name pos:line="114" pos:column="22">WM_NOTIFY</name></expr>:
		<block pos:line="115" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="116" pos:column="25">notified</name><argument_list pos:line="116" pos:column="33">(<argument><expr><op:operator pos:line="116" pos:column="34">(</op:operator><name pos:line="116" pos:column="35">LPNMHDR</name><op:operator pos:line="116" pos:column="42">)</op:operator><name pos:line="116" pos:column="43">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<return pos:line="118" pos:column="17">return <expr><name pos:line="118" pos:column="24">TRUE</name></expr>;</return>

        </case><case pos:line="120" pos:column="9">case <expr><name pos:line="120" pos:column="14">WM_SIZE</name></expr>:
        <block pos:line="121" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="122" pos:column="13">int</name></type> <name pos:line="122" pos:column="17">width</name> <init pos:line="122" pos:column="23">= <expr><call><name pos:line="122" pos:column="25">LOWORD</name><argument_list pos:line="122" pos:column="31">(<argument><expr><name pos:line="122" pos:column="32">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="123" pos:column="13">int</name></type> <name pos:line="123" pos:column="17">height</name> <init pos:line="123" pos:column="24">= <expr><call><name pos:line="123" pos:column="26">HIWORD</name><argument_list pos:line="123" pos:column="32">(<argument><expr><name pos:line="123" pos:column="33">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="124" pos:column="13">RECT</name></type> <name pos:line="124" pos:column="18">toolbarMenuRect</name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><op:operator pos:line="125" pos:column="13">::</op:operator><name pos:line="125" pos:column="15">GetClientRect</name></name><argument_list pos:line="125" pos:column="28">(<argument><expr><name pos:line="125" pos:column="29">_hToolbarMenu</name></expr></argument>, <argument><expr><op:operator pos:line="125" pos:column="44">&amp;</op:operator><name pos:line="125" pos:column="45">toolbarMenuRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><call><name><op:operator pos:line="127" pos:column="13">::</op:operator><name pos:line="127" pos:column="15">MoveWindow</name></name><argument_list pos:line="127" pos:column="25">(<argument><expr><name pos:line="127" pos:column="26">_hToolbarMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="127" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="127" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><name pos:line="127" pos:column="47">width</name></expr></argument>, <argument><expr><name><name pos:line="127" pos:column="54">toolbarMenuRect</name><op:operator pos:line="127" pos:column="69">.</op:operator><name pos:line="127" pos:column="70">bottom</name></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="78">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="129" pos:column="25">HWND</name></type> <name pos:line="129" pos:column="30">hwnd</name> <init pos:line="129" pos:column="35">= <expr><call><name><name pos:line="129" pos:column="37">_treeView</name><op:operator pos:line="129" pos:column="46">.</op:operator><name pos:line="129" pos:column="47">getHSelf</name></name><argument_list pos:line="129" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="130" pos:column="25">if <condition pos:line="130" pos:column="28">(<expr><name pos:line="130" pos:column="29">hwnd</name></expr>)</condition><then pos:line="130" pos:column="34">
				<expr_stmt><expr><call><name><op:operator pos:line="131" pos:column="33">::</op:operator><name pos:line="131" pos:column="35">MoveWindow</name></name><argument_list pos:line="131" pos:column="45">(<argument><expr><name pos:line="131" pos:column="46">hwnd</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="131" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="131" pos:column="55">toolbarMenuRect</name><op:operator pos:line="131" pos:column="70">.</op:operator><name pos:line="131" pos:column="71">bottom</name></name> <op:operator pos:line="131" pos:column="78">+</op:operator> <lit:literal type="number" pos:line="131" pos:column="80">2</lit:literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="83">width</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="90">height</name> <op:operator pos:line="131" pos:column="97">-</op:operator> <name><name pos:line="131" pos:column="99">toolbarMenuRect</name><op:operator pos:line="131" pos:column="114">.</op:operator><name pos:line="131" pos:column="115">bottom</name></name> <op:operator pos:line="131" pos:column="122">-</op:operator> <lit:literal type="number" pos:line="131" pos:column="124">2</lit:literal></expr></argument>, <argument><expr><name pos:line="131" pos:column="127">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            <break pos:line="132" pos:column="13">break;</break>
        }</block>

        </case><case pos:line="135" pos:column="9">case <expr><name pos:line="135" pos:column="14">WM_CONTEXTMENU</name></expr>:
			<if pos:line="136" pos:column="25">if <condition pos:line="136" pos:column="28">(<expr><op:operator pos:line="136" pos:column="29">!</op:operator><call><name><name pos:line="136" pos:column="30">_treeView</name><op:operator pos:line="136" pos:column="39">.</op:operator><name pos:line="136" pos:column="40">isDragging</name></name><argument_list pos:line="136" pos:column="50">()</argument_list></call></expr>)</condition><then pos:line="136" pos:column="53">
				<expr_stmt><expr><call><name pos:line="137" pos:column="33">showContextMenu</name><argument_list pos:line="137" pos:column="48">(<argument><expr><call><name pos:line="137" pos:column="49">GET_X_LPARAM</name><argument_list pos:line="137" pos:column="61">(<argument><expr><name pos:line="137" pos:column="62">lParam</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="137" pos:column="71">GET_Y_LPARAM</name><argument_list pos:line="137" pos:column="83">(<argument><expr><name pos:line="137" pos:column="84">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        <return pos:line="138" pos:column="9">return <expr><name pos:line="138" pos:column="16">TRUE</name></expr>;</return>

		</case><case pos:line="140" pos:column="17">case <expr><name pos:line="140" pos:column="22">WM_COMMAND</name></expr>:
		<block pos:line="141" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="142" pos:column="25">popupMenuCmd</name><argument_list pos:line="142" pos:column="37">(<argument><expr><call><name pos:line="142" pos:column="38">LOWORD</name><argument_list pos:line="142" pos:column="44">(<argument><expr><name pos:line="142" pos:column="45">wParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="143" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="146" pos:column="17">case <expr><name pos:line="146" pos:column="22">WM_DESTROY</name></expr>:
        <block pos:line="147" pos:column="9">{
			<expr_stmt><expr><call><name><name pos:line="148" pos:column="25">_treeView</name><op:operator pos:line="148" pos:column="34">.</op:operator><name pos:line="148" pos:column="35">destroy</name></name><argument_list pos:line="148" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="149" pos:column="25">destroyMenus</name><argument_list pos:line="149" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="150" pos:column="25">::</op:operator><name pos:line="150" pos:column="27">DestroyWindow</name></name><argument_list pos:line="150" pos:column="40">(<argument><expr><name pos:line="150" pos:column="41">_hToolbarMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:line="151" pos:column="13">break;</break>
        }</block>
		</case><case pos:line="153" pos:column="17">case <expr><name pos:line="153" pos:column="22">WM_KEYDOWN</name></expr>:
			<comment type="line" pos:line="154" pos:column="25">//if (wParam == VK_F2)</comment>
			<block pos:line="155" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="156" pos:column="33">::</op:operator><name pos:line="156" pos:column="35">MessageBoxA</name></name><argument_list pos:line="156" pos:column="46">(<argument><expr><name pos:line="156" pos:column="47">NULL</name></expr></argument>,<argument><expr><lit:literal type="string" pos:line="156" pos:column="52">"vkF2"</lit:literal></expr></argument>,<argument><expr><lit:literal type="string" pos:line="156" pos:column="59">""</lit:literal></expr></argument>,<argument><expr><name pos:line="156" pos:column="62">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
			<break pos:line="158" pos:column="25">break;</break>

        </case><default pos:line="160" pos:column="9">default :
            <return pos:line="161" pos:column="13">return <expr><call><name><name pos:line="161" pos:column="20">DockingDlgInterface</name><op:operator pos:line="161" pos:column="39">::</op:operator><name pos:line="161" pos:column="41">run_dlgProc</name></name><argument_list pos:line="161" pos:column="52">(<argument><expr><name pos:line="161" pos:column="53">message</name></expr></argument>, <argument><expr><name pos:line="161" pos:column="62">wParam</name></expr></argument>, <argument><expr><name pos:line="161" pos:column="70">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
    </default>}</block></switch>
	<return pos:line="163" pos:column="9">return <expr><call><name><name pos:line="163" pos:column="16">DockingDlgInterface</name><op:operator pos:line="163" pos:column="35">::</op:operator><name pos:line="163" pos:column="37">run_dlgProc</name></name><argument_list pos:line="163" pos:column="48">(<argument><expr><name pos:line="163" pos:column="49">message</name></expr></argument>, <argument><expr><name pos:line="163" pos:column="58">wParam</name></expr></argument>, <argument><expr><name pos:line="163" pos:column="66">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="166" pos:column="1">void</name></type> <name><name pos:line="166" pos:column="6">ProjectPanel</name><op:operator pos:line="166" pos:column="18">::</op:operator><name pos:line="166" pos:column="20">checkIfNeedSave</name></name><parameter_list pos:line="166" pos:column="35">(<param><decl><type><specifier pos:line="166" pos:column="36">const</specifier> <name pos:line="166" pos:column="42">TCHAR</name> <type:modifier pos:line="166" pos:column="48">*</type:modifier></type><name pos:line="166" pos:column="49">title</name></decl></param>)</parameter_list>
<block pos:line="167" pos:column="1">{
	<if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name pos:line="168" pos:column="13">_isDirty</name></expr>)</condition><then pos:line="168" pos:column="22">
	<block pos:line="169" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="170" pos:column="17">display</name><argument_list pos:line="170" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="171" pos:column="17">int</name></type> <name pos:line="171" pos:column="21">res</name> <init pos:line="171" pos:column="25">= <expr><call><name><op:operator pos:line="171" pos:column="27">::</op:operator><name pos:line="171" pos:column="29">MessageBox</name></name><argument_list pos:line="171" pos:column="39">(<argument><expr><name pos:line="171" pos:column="40">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="171" pos:column="48">TEXT</name><argument_list pos:line="171" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="171" pos:column="53">"The workspace was modified. Do you want to save it?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="171" pos:column="109">title</name></expr></argument>, <argument><expr><name pos:line="171" pos:column="116">MB_YESNO</name> <op:operator pos:line="171" pos:column="125">|</op:operator> <name pos:line="171" pos:column="127">MB_ICONQUESTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="172" pos:column="17">if <condition pos:line="172" pos:column="20">(<expr><name pos:line="172" pos:column="21">res</name> <op:operator pos:line="172" pos:column="25">==</op:operator> <name pos:line="172" pos:column="28">IDYES</name></expr>)</condition><then pos:line="172" pos:column="34">
		<block pos:line="173" pos:column="17">{
			<if pos:line="174" pos:column="25">if <condition pos:line="174" pos:column="28">(<expr><op:operator pos:line="174" pos:column="29">!</op:operator><call><name pos:line="174" pos:column="30">saveWorkSpace</name><argument_list pos:line="174" pos:column="43">()</argument_list></call></expr>)</condition><then pos:line="174" pos:column="46">
				<expr_stmt><expr><call><name><op:operator pos:line="175" pos:column="33">::</op:operator><name pos:line="175" pos:column="35">MessageBox</name></name><argument_list pos:line="175" pos:column="45">(<argument><expr><name pos:line="175" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="175" pos:column="54">TEXT</name><argument_list pos:line="175" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="175" pos:column="59">"Your workspace was not saved."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="175" pos:column="93">title</name></expr></argument>, <argument><expr><name pos:line="175" pos:column="100">MB_OK</name> <op:operator pos:line="175" pos:column="106">|</op:operator> <name pos:line="175" pos:column="108">MB_ICONERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
		<comment type="line" pos:line="177" pos:column="17">//else if (res == IDNO)</comment>
			<comment type="line" pos:line="178" pos:column="25">// Don't save so do nothing here</comment>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="182" pos:column="1">void</name></type> <name><name pos:line="182" pos:column="6">ProjectPanel</name><op:operator pos:line="182" pos:column="18">::</op:operator><name pos:line="182" pos:column="20">initMenus</name></name><parameter_list pos:line="182" pos:column="29">()</parameter_list>
<block pos:line="183" pos:column="1">{
	<expr_stmt><expr><name pos:line="184" pos:column="9">_hWorkSpaceMenu</name> <op:operator pos:line="184" pos:column="25">=</op:operator> <call><name><op:operator pos:line="184" pos:column="27">::</op:operator><name pos:line="184" pos:column="29">CreatePopupMenu</name></name><argument_list pos:line="184" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name pos:line="186" pos:column="9">NativeLangSpeaker</name> <type:modifier pos:line="186" pos:column="27">*</type:modifier></type><name pos:line="186" pos:column="28">pNativeSpeaker</name> <init pos:line="186" pos:column="43">= <expr><op:operator pos:line="186" pos:column="45">(</op:operator><call><name><name pos:line="186" pos:column="46">NppParameters</name><op:operator pos:line="186" pos:column="59">::</op:operator><name pos:line="186" pos:column="61">getInstance</name></name><argument_list pos:line="186" pos:column="72">()</argument_list></call><op:operator pos:line="186" pos:column="74">)</op:operator><op:operator pos:line="186" pos:column="75">-&gt;</op:operator><call><name pos:line="186" pos:column="77">getNativeLangSpeaker</name><argument_list pos:line="186" pos:column="97">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="188" pos:column="9">generic_string</name></type> <name pos:line="188" pos:column="24">new_workspace</name> <init pos:line="188" pos:column="38">= <expr><call><name><name pos:line="188" pos:column="40">pNativeSpeaker</name><op:operator pos:line="188" pos:column="54">-&gt;</op:operator><name pos:line="188" pos:column="56">getProjectPanelLangMenuStr</name></name><argument_list pos:line="188" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="188" pos:column="83">"WorkspaceMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="100">IDM_PROJECT_NEWWS</name></expr></argument>, <argument><expr><name pos:line="188" pos:column="119">PM_NEWWORKSPACE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="189" pos:column="9">generic_string</name></type> <name pos:line="189" pos:column="24">open_workspace</name> <init pos:line="189" pos:column="39">= <expr><call><name><name pos:line="189" pos:column="41">pNativeSpeaker</name><op:operator pos:line="189" pos:column="55">-&gt;</op:operator><name pos:line="189" pos:column="57">getProjectPanelLangMenuStr</name></name><argument_list pos:line="189" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="189" pos:column="84">"WorkspaceMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="189" pos:column="101">IDM_PROJECT_OPENWS</name></expr></argument>, <argument><expr><name pos:line="189" pos:column="121">PM_OPENWORKSPACE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="190" pos:column="9">generic_string</name></type> <name pos:line="190" pos:column="24">reload_workspace</name> <init pos:line="190" pos:column="41">= <expr><call><name><name pos:line="190" pos:column="43">pNativeSpeaker</name><op:operator pos:line="190" pos:column="57">-&gt;</op:operator><name pos:line="190" pos:column="59">getProjectPanelLangMenuStr</name></name><argument_list pos:line="190" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="190" pos:column="86">"WorkspaceMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="190" pos:column="103">IDM_PROJECT_RELOADWS</name></expr></argument>, <argument><expr><name pos:line="190" pos:column="125">PM_RELOADWORKSPACE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="191" pos:column="9">generic_string</name></type> <name pos:line="191" pos:column="24">save_workspace</name> <init pos:line="191" pos:column="39">= <expr><call><name><name pos:line="191" pos:column="41">pNativeSpeaker</name><op:operator pos:line="191" pos:column="55">-&gt;</op:operator><name pos:line="191" pos:column="57">getProjectPanelLangMenuStr</name></name><argument_list pos:line="191" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="191" pos:column="84">"WorkspaceMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="191" pos:column="101">IDM_PROJECT_SAVEWS</name></expr></argument>, <argument><expr><name pos:line="191" pos:column="121">PM_SAVEWORKSPACE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="192" pos:column="9">generic_string</name></type> <name pos:line="192" pos:column="24">saveas_workspace</name> <init pos:line="192" pos:column="41">= <expr><call><name><name pos:line="192" pos:column="43">pNativeSpeaker</name><op:operator pos:line="192" pos:column="57">-&gt;</op:operator><name pos:line="192" pos:column="59">getProjectPanelLangMenuStr</name></name><argument_list pos:line="192" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="192" pos:column="86">"WorkspaceMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="192" pos:column="103">IDM_PROJECT_SAVEASWS</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="125">PM_SAVEASWORKSPACE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="193" pos:column="9">generic_string</name></type> <name pos:line="193" pos:column="24">saveacopyas_workspace</name> <init pos:line="193" pos:column="46">= <expr><call><name><name pos:line="193" pos:column="48">pNativeSpeaker</name><op:operator pos:line="193" pos:column="62">-&gt;</op:operator><name pos:line="193" pos:column="64">getProjectPanelLangMenuStr</name></name><argument_list pos:line="193" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="193" pos:column="91">"WorkspaceMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="193" pos:column="108">IDM_PROJECT_SAVEACOPYASWS</name></expr></argument>, <argument><expr><name pos:line="193" pos:column="135">PM_SAVEACOPYASWORKSPACE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="194" pos:column="9">generic_string</name></type> <name pos:line="194" pos:column="24">newproject_workspace</name> <init pos:line="194" pos:column="45">= <expr><call><name><name pos:line="194" pos:column="47">pNativeSpeaker</name><op:operator pos:line="194" pos:column="61">-&gt;</op:operator><name pos:line="194" pos:column="63">getProjectPanelLangMenuStr</name></name><argument_list pos:line="194" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="194" pos:column="90">"WorkspaceMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="194" pos:column="107">IDM_PROJECT_NEWPROJECT</name></expr></argument>, <argument><expr><name pos:line="194" pos:column="131">PM_NEWPROJECTWORKSPACE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="196" pos:column="9">::</op:operator><name pos:line="196" pos:column="11">InsertMenu</name></name><argument_list pos:line="196" pos:column="21">(<argument><expr><name pos:line="196" pos:column="22">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="196" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="196" pos:column="42">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="196" pos:column="56">IDM_PROJECT_NEWWS</name></expr></argument>, <argument><expr><call><name><name pos:line="196" pos:column="75">new_workspace</name><op:operator pos:line="196" pos:column="88">.</op:operator><name pos:line="196" pos:column="89">c_str</name></name><argument_list pos:line="196" pos:column="94">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="197" pos:column="9">::</op:operator><name pos:line="197" pos:column="11">InsertMenu</name></name><argument_list pos:line="197" pos:column="21">(<argument><expr><name pos:line="197" pos:column="22">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="197" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="197" pos:column="42">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="197" pos:column="56">IDM_PROJECT_OPENWS</name></expr></argument>, <argument><expr><call><name><name pos:line="197" pos:column="76">open_workspace</name><op:operator pos:line="197" pos:column="90">.</op:operator><name pos:line="197" pos:column="91">c_str</name></name><argument_list pos:line="197" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="198" pos:column="9">::</op:operator><name pos:line="198" pos:column="11">InsertMenu</name></name><argument_list pos:line="198" pos:column="21">(<argument><expr><name pos:line="198" pos:column="22">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="198" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="198" pos:column="42">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="198" pos:column="56">IDM_PROJECT_RELOADWS</name></expr></argument>, <argument><expr><call><name><name pos:line="198" pos:column="78">reload_workspace</name><op:operator pos:line="198" pos:column="94">.</op:operator><name pos:line="198" pos:column="95">c_str</name></name><argument_list pos:line="198" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="199" pos:column="9">::</op:operator><name pos:line="199" pos:column="11">InsertMenu</name></name><argument_list pos:line="199" pos:column="21">(<argument><expr><name pos:line="199" pos:column="22">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="199" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="199" pos:column="42">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="199" pos:column="56">IDM_PROJECT_SAVEWS</name></expr></argument>, <argument><expr><call><name><name pos:line="199" pos:column="76">save_workspace</name><op:operator pos:line="199" pos:column="90">.</op:operator><name pos:line="199" pos:column="91">c_str</name></name><argument_list pos:line="199" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="200" pos:column="9">::</op:operator><name pos:line="200" pos:column="11">InsertMenu</name></name><argument_list pos:line="200" pos:column="21">(<argument><expr><name pos:line="200" pos:column="22">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="200" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="200" pos:column="42">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="200" pos:column="56">IDM_PROJECT_SAVEASWS</name></expr></argument>, <argument><expr><call><name><name pos:line="200" pos:column="78">saveas_workspace</name><op:operator pos:line="200" pos:column="94">.</op:operator><name pos:line="200" pos:column="95">c_str</name></name><argument_list pos:line="200" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="201" pos:column="9">::</op:operator><name pos:line="201" pos:column="11">InsertMenu</name></name><argument_list pos:line="201" pos:column="21">(<argument><expr><name pos:line="201" pos:column="22">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="201" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="201" pos:column="42">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="201" pos:column="56">IDM_PROJECT_SAVEACOPYASWS</name></expr></argument>, <argument><expr><call><name><name pos:line="201" pos:column="83">saveacopyas_workspace</name><op:operator pos:line="201" pos:column="104">.</op:operator><name pos:line="201" pos:column="105">c_str</name></name><argument_list pos:line="201" pos:column="110">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="202" pos:column="9">::</op:operator><name pos:line="202" pos:column="11">InsertMenu</name></name><argument_list pos:line="202" pos:column="21">(<argument><expr><name pos:line="202" pos:column="22">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="202" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="42">MF_BYCOMMAND</name></expr></argument>, <argument><expr><op:operator pos:line="202" pos:column="56">(</op:operator><name pos:line="202" pos:column="57">UINT</name><op:operator pos:line="202" pos:column="61">)</op:operator><op:operator pos:line="202" pos:column="62">-</op:operator><lit:literal type="number" pos:line="202" pos:column="63">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="202" pos:column="66">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="203" pos:column="9">::</op:operator><name pos:line="203" pos:column="11">InsertMenu</name></name><argument_list pos:line="203" pos:column="21">(<argument><expr><name pos:line="203" pos:column="22">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="203" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="203" pos:column="42">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="203" pos:column="56">IDM_PROJECT_NEWPROJECT</name></expr></argument>, <argument><expr><call><name><name pos:line="203" pos:column="80">newproject_workspace</name><op:operator pos:line="203" pos:column="100">.</op:operator><name pos:line="203" pos:column="101">c_str</name></name><argument_list pos:line="203" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="205" pos:column="9">generic_string</name></type> <name pos:line="205" pos:column="24">edit_moveup</name> <init pos:line="205" pos:column="36">= <expr><call><name><name pos:line="205" pos:column="38">pNativeSpeaker</name><op:operator pos:line="205" pos:column="52">-&gt;</op:operator><name pos:line="205" pos:column="54">getProjectPanelLangMenuStr</name></name><argument_list pos:line="205" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="205" pos:column="81">"ProjectMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="205" pos:column="96">IDM_PROJECT_MOVEUP</name></expr></argument>, <argument><expr><name pos:line="205" pos:column="116">PM_MOVEUPENTRY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="206" pos:column="9">generic_string</name></type> <name pos:line="206" pos:column="24">edit_movedown</name> <init pos:line="206" pos:column="38">= <expr><call><name><name pos:line="206" pos:column="40">pNativeSpeaker</name><op:operator pos:line="206" pos:column="54">-&gt;</op:operator><name pos:line="206" pos:column="56">getProjectPanelLangMenuStr</name></name><argument_list pos:line="206" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="206" pos:column="83">"ProjectMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="206" pos:column="98">IDM_PROJECT_MOVEDOWN</name></expr></argument>, <argument><expr><name pos:line="206" pos:column="120">PM_MOVEDOWNENTRY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="207" pos:column="9">generic_string</name></type> <name pos:line="207" pos:column="24">edit_rename</name> <init pos:line="207" pos:column="36">= <expr><call><name><name pos:line="207" pos:column="38">pNativeSpeaker</name><op:operator pos:line="207" pos:column="52">-&gt;</op:operator><name pos:line="207" pos:column="54">getProjectPanelLangMenuStr</name></name><argument_list pos:line="207" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="207" pos:column="81">"ProjectMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="207" pos:column="96">IDM_PROJECT_RENAME</name></expr></argument>, <argument><expr><name pos:line="207" pos:column="116">PM_EDITRENAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="208" pos:column="9">generic_string</name></type> <name pos:line="208" pos:column="24">edit_addfolder</name> <init pos:line="208" pos:column="39">= <expr><call><name><name pos:line="208" pos:column="41">pNativeSpeaker</name><op:operator pos:line="208" pos:column="55">-&gt;</op:operator><name pos:line="208" pos:column="57">getProjectPanelLangMenuStr</name></name><argument_list pos:line="208" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="208" pos:column="84">"ProjectMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="208" pos:column="99">IDM_PROJECT_NEWFOLDER</name></expr></argument>, <argument><expr><name pos:line="208" pos:column="122">PM_EDITNEWFOLDER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="209" pos:column="9">generic_string</name></type> <name pos:line="209" pos:column="24">edit_addfiles</name> <init pos:line="209" pos:column="38">= <expr><call><name><name pos:line="209" pos:column="40">pNativeSpeaker</name><op:operator pos:line="209" pos:column="54">-&gt;</op:operator><name pos:line="209" pos:column="56">getProjectPanelLangMenuStr</name></name><argument_list pos:line="209" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="209" pos:column="83">"ProjectMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="209" pos:column="98">IDM_PROJECT_ADDFILES</name></expr></argument>, <argument><expr><name pos:line="209" pos:column="120">PM_EDITADDFILES</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="210" pos:column="9">generic_string</name></type> <name pos:line="210" pos:column="24">edit_addfilesRecursive</name> <init pos:line="210" pos:column="47">= <expr><call><name><name pos:line="210" pos:column="49">pNativeSpeaker</name><op:operator pos:line="210" pos:column="63">-&gt;</op:operator><name pos:line="210" pos:column="65">getProjectPanelLangMenuStr</name></name><argument_list pos:line="210" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="210" pos:column="92">"ProjectMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="210" pos:column="107">IDM_PROJECT_ADDFILESRECUSIVELY</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="139">PM_EDITADDFILESRECUSIVELY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="211" pos:column="9">generic_string</name></type> <name pos:line="211" pos:column="24">edit_remove</name> <init pos:line="211" pos:column="36">= <expr><call><name><name pos:line="211" pos:column="38">pNativeSpeaker</name><op:operator pos:line="211" pos:column="52">-&gt;</op:operator><name pos:line="211" pos:column="54">getProjectPanelLangMenuStr</name></name><argument_list pos:line="211" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="211" pos:column="81">"ProjectMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="211" pos:column="96">IDM_PROJECT_DELETEFOLDER</name></expr></argument>, <argument><expr><name pos:line="211" pos:column="122">PM_EDITREMOVE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="213" pos:column="9">_hProjectMenu</name> <op:operator pos:line="213" pos:column="23">=</op:operator> <call><name><op:operator pos:line="213" pos:column="25">::</op:operator><name pos:line="213" pos:column="27">CreatePopupMenu</name></name><argument_list pos:line="213" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="214" pos:column="9">::</op:operator><name pos:line="214" pos:column="11">InsertMenu</name></name><argument_list pos:line="214" pos:column="21">(<argument><expr><name pos:line="214" pos:column="22">_hProjectMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="214" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name pos:line="214" pos:column="40">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="214" pos:column="54">IDM_PROJECT_MOVEUP</name></expr></argument>, <argument><expr><call><name><name pos:line="214" pos:column="74">edit_moveup</name><op:operator pos:line="214" pos:column="85">.</op:operator><name pos:line="214" pos:column="86">c_str</name></name><argument_list pos:line="214" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="215" pos:column="9">::</op:operator><name pos:line="215" pos:column="11">InsertMenu</name></name><argument_list pos:line="215" pos:column="21">(<argument><expr><name pos:line="215" pos:column="22">_hProjectMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="215" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="40">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="54">IDM_PROJECT_MOVEDOWN</name></expr></argument>, <argument><expr><call><name><name pos:line="215" pos:column="76">edit_movedown</name><op:operator pos:line="215" pos:column="89">.</op:operator><name pos:line="215" pos:column="90">c_str</name></name><argument_list pos:line="215" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="216" pos:column="9">::</op:operator><name pos:line="216" pos:column="11">InsertMenu</name></name><argument_list pos:line="216" pos:column="21">(<argument><expr><name pos:line="216" pos:column="22">_hProjectMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="216" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name pos:line="216" pos:column="40">MF_BYCOMMAND</name></expr></argument>, <argument><expr><call><name pos:line="216" pos:column="54">UINT</name><argument_list pos:line="216" pos:column="58">(<argument><expr><op:operator pos:line="216" pos:column="59">-</op:operator><lit:literal type="number" pos:line="216" pos:column="60">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="216" pos:column="64">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="217" pos:column="9">::</op:operator><name pos:line="217" pos:column="11">InsertMenu</name></name><argument_list pos:line="217" pos:column="21">(<argument><expr><name pos:line="217" pos:column="22">_hProjectMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="217" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="40">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="217" pos:column="54">IDM_PROJECT_RENAME</name></expr></argument>, <argument><expr><call><name><name pos:line="217" pos:column="74">edit_rename</name><op:operator pos:line="217" pos:column="85">.</op:operator><name pos:line="217" pos:column="86">c_str</name></name><argument_list pos:line="217" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="218" pos:column="9">::</op:operator><name pos:line="218" pos:column="11">InsertMenu</name></name><argument_list pos:line="218" pos:column="21">(<argument><expr><name pos:line="218" pos:column="22">_hProjectMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="218" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name pos:line="218" pos:column="40">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="54">IDM_PROJECT_NEWFOLDER</name></expr></argument>, <argument><expr><call><name><name pos:line="218" pos:column="77">edit_addfolder</name><op:operator pos:line="218" pos:column="91">.</op:operator><name pos:line="218" pos:column="92">c_str</name></name><argument_list pos:line="218" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="219" pos:column="9">::</op:operator><name pos:line="219" pos:column="11">InsertMenu</name></name><argument_list pos:line="219" pos:column="21">(<argument><expr><name pos:line="219" pos:column="22">_hProjectMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="219" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name pos:line="219" pos:column="40">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="219" pos:column="54">IDM_PROJECT_ADDFILES</name></expr></argument>, <argument><expr><call><name><name pos:line="219" pos:column="76">edit_addfiles</name><op:operator pos:line="219" pos:column="89">.</op:operator><name pos:line="219" pos:column="90">c_str</name></name><argument_list pos:line="219" pos:column="95">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="220" pos:column="9">::</op:operator><name pos:line="220" pos:column="11">InsertMenu</name></name><argument_list pos:line="220" pos:column="21">(<argument><expr><name pos:line="220" pos:column="22">_hProjectMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="220" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name pos:line="220" pos:column="40">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="220" pos:column="54">IDM_PROJECT_ADDFILESRECUSIVELY</name></expr></argument>, <argument><expr><call><name><name pos:line="220" pos:column="86">edit_addfilesRecursive</name><op:operator pos:line="220" pos:column="108">.</op:operator><name pos:line="220" pos:column="109">c_str</name></name><argument_list pos:line="220" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="221" pos:column="9">::</op:operator><name pos:line="221" pos:column="11">InsertMenu</name></name><argument_list pos:line="221" pos:column="21">(<argument><expr><name pos:line="221" pos:column="22">_hProjectMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="221" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><name pos:line="221" pos:column="40">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="221" pos:column="54">IDM_PROJECT_DELETEFOLDER</name></expr></argument>, <argument><expr><call><name><name pos:line="221" pos:column="80">edit_remove</name><op:operator pos:line="221" pos:column="91">.</op:operator><name pos:line="221" pos:column="92">c_str</name></name><argument_list pos:line="221" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="223" pos:column="9">edit_moveup</name> <op:operator pos:line="223" pos:column="21">=</op:operator> <call><name><name pos:line="223" pos:column="23">pNativeSpeaker</name><op:operator pos:line="223" pos:column="37">-&gt;</op:operator><name pos:line="223" pos:column="39">getProjectPanelLangMenuStr</name></name><argument_list pos:line="223" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="223" pos:column="66">"FolderMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="223" pos:column="80">IDM_PROJECT_MOVEUP</name></expr></argument>, <argument><expr><name pos:line="223" pos:column="100">PM_MOVEUPENTRY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="224" pos:column="9">edit_movedown</name> <op:operator pos:line="224" pos:column="23">=</op:operator> <call><name><name pos:line="224" pos:column="25">pNativeSpeaker</name><op:operator pos:line="224" pos:column="39">-&gt;</op:operator><name pos:line="224" pos:column="41">getProjectPanelLangMenuStr</name></name><argument_list pos:line="224" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="224" pos:column="68">"FolderMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="224" pos:column="82">IDM_PROJECT_MOVEDOWN</name></expr></argument>, <argument><expr><name pos:line="224" pos:column="104">PM_MOVEDOWNENTRY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="225" pos:column="9">edit_rename</name> <op:operator pos:line="225" pos:column="21">=</op:operator> <call><name><name pos:line="225" pos:column="23">pNativeSpeaker</name><op:operator pos:line="225" pos:column="37">-&gt;</op:operator><name pos:line="225" pos:column="39">getProjectPanelLangMenuStr</name></name><argument_list pos:line="225" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="225" pos:column="66">"FolderMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="225" pos:column="80">IDM_PROJECT_RENAME</name></expr></argument>, <argument><expr><name pos:line="225" pos:column="100">PM_EDITRENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="226" pos:column="9">edit_addfolder</name> <op:operator pos:line="226" pos:column="24">=</op:operator> <call><name><name pos:line="226" pos:column="26">pNativeSpeaker</name><op:operator pos:line="226" pos:column="40">-&gt;</op:operator><name pos:line="226" pos:column="42">getProjectPanelLangMenuStr</name></name><argument_list pos:line="226" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="226" pos:column="69">"FolderMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="83">IDM_PROJECT_NEWFOLDER</name></expr></argument>, <argument><expr><name pos:line="226" pos:column="106">PM_EDITNEWFOLDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="227" pos:column="9">edit_addfiles</name> <op:operator pos:line="227" pos:column="23">=</op:operator> <call><name><name pos:line="227" pos:column="25">pNativeSpeaker</name><op:operator pos:line="227" pos:column="39">-&gt;</op:operator><name pos:line="227" pos:column="41">getProjectPanelLangMenuStr</name></name><argument_list pos:line="227" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="227" pos:column="68">"FolderMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="227" pos:column="82">IDM_PROJECT_ADDFILES</name></expr></argument>, <argument><expr><name pos:line="227" pos:column="104">PM_EDITADDFILES</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="228" pos:column="9">edit_addfilesRecursive</name> <op:operator pos:line="228" pos:column="32">=</op:operator> <call><name><name pos:line="228" pos:column="34">pNativeSpeaker</name><op:operator pos:line="228" pos:column="48">-&gt;</op:operator><name pos:line="228" pos:column="50">getProjectPanelLangMenuStr</name></name><argument_list pos:line="228" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="228" pos:column="77">"FolderMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="228" pos:column="91">IDM_PROJECT_ADDFILESRECUSIVELY</name></expr></argument>, <argument><expr><name pos:line="228" pos:column="123">PM_EDITADDFILESRECUSIVELY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="229" pos:column="9">edit_remove</name> <op:operator pos:line="229" pos:column="21">=</op:operator> <call><name><name pos:line="229" pos:column="23">pNativeSpeaker</name><op:operator pos:line="229" pos:column="37">-&gt;</op:operator><name pos:line="229" pos:column="39">getProjectPanelLangMenuStr</name></name><argument_list pos:line="229" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="229" pos:column="66">"FolderMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="229" pos:column="80">IDM_PROJECT_DELETEFOLDER</name></expr></argument>, <argument><expr><name pos:line="229" pos:column="106">PM_EDITREMOVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="231" pos:column="9">_hFolderMenu</name> <op:operator pos:line="231" pos:column="22">=</op:operator> <call><name><op:operator pos:line="231" pos:column="24">::</op:operator><name pos:line="231" pos:column="26">CreatePopupMenu</name></name><argument_list pos:line="231" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="232" pos:column="9">::</op:operator><name pos:line="232" pos:column="11">InsertMenu</name></name><argument_list pos:line="232" pos:column="21">(<argument><expr><name pos:line="232" pos:column="22">_hFolderMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="232" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="232" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="53">IDM_PROJECT_MOVEUP</name></expr></argument>,        <argument><expr><call><name><name pos:line="232" pos:column="80">edit_moveup</name><op:operator pos:line="232" pos:column="91">.</op:operator><name pos:line="232" pos:column="92">c_str</name></name><argument_list pos:line="232" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="233" pos:column="9">::</op:operator><name pos:line="233" pos:column="11">InsertMenu</name></name><argument_list pos:line="233" pos:column="21">(<argument><expr><name pos:line="233" pos:column="22">_hFolderMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="233" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="233" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="233" pos:column="53">IDM_PROJECT_MOVEDOWN</name></expr></argument>,      <argument><expr><call><name><name pos:line="233" pos:column="80">edit_movedown</name><op:operator pos:line="233" pos:column="93">.</op:operator><name pos:line="233" pos:column="94">c_str</name></name><argument_list pos:line="233" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="234" pos:column="9">::</op:operator><name pos:line="234" pos:column="11">InsertMenu</name></name><argument_list pos:line="234" pos:column="21">(<argument><expr><name pos:line="234" pos:column="22">_hFolderMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="234" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="234" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><call><name pos:line="234" pos:column="53">UINT</name><argument_list pos:line="234" pos:column="57">(<argument><expr><op:operator pos:line="234" pos:column="58">-</op:operator><lit:literal type="number" pos:line="234" pos:column="59">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="234" pos:column="63">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="235" pos:column="9">::</op:operator><name pos:line="235" pos:column="11">InsertMenu</name></name><argument_list pos:line="235" pos:column="21">(<argument><expr><name pos:line="235" pos:column="22">_hFolderMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="235" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="235" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="235" pos:column="53">IDM_PROJECT_RENAME</name></expr></argument>,        <argument><expr><call><name><name pos:line="235" pos:column="80">edit_rename</name><op:operator pos:line="235" pos:column="91">.</op:operator><name pos:line="235" pos:column="92">c_str</name></name><argument_list pos:line="235" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="236" pos:column="9">::</op:operator><name pos:line="236" pos:column="11">InsertMenu</name></name><argument_list pos:line="236" pos:column="21">(<argument><expr><name pos:line="236" pos:column="22">_hFolderMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="236" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="236" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="53">IDM_PROJECT_NEWFOLDER</name></expr></argument>,     <argument><expr><call><name><name pos:line="236" pos:column="80">edit_addfolder</name><op:operator pos:line="236" pos:column="94">.</op:operator><name pos:line="236" pos:column="95">c_str</name></name><argument_list pos:line="236" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="237" pos:column="9">::</op:operator><name pos:line="237" pos:column="11">InsertMenu</name></name><argument_list pos:line="237" pos:column="21">(<argument><expr><name pos:line="237" pos:column="22">_hFolderMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="237" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="237" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="237" pos:column="53">IDM_PROJECT_ADDFILES</name></expr></argument>,      <argument><expr><call><name><name pos:line="237" pos:column="80">edit_addfiles</name><op:operator pos:line="237" pos:column="93">.</op:operator><name pos:line="237" pos:column="94">c_str</name></name><argument_list pos:line="237" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="238" pos:column="9">::</op:operator><name pos:line="238" pos:column="11">InsertMenu</name></name><argument_list pos:line="238" pos:column="21">(<argument><expr><name pos:line="238" pos:column="22">_hFolderMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="238" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="238" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="238" pos:column="53">IDM_PROJECT_ADDFILESRECUSIVELY</name></expr></argument>, <argument><expr><call><name><name pos:line="238" pos:column="85">edit_addfilesRecursive</name><op:operator pos:line="238" pos:column="107">.</op:operator><name pos:line="238" pos:column="108">c_str</name></name><argument_list pos:line="238" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="239" pos:column="9">::</op:operator><name pos:line="239" pos:column="11">InsertMenu</name></name><argument_list pos:line="239" pos:column="21">(<argument><expr><name pos:line="239" pos:column="22">_hFolderMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="239" pos:column="36">0</lit:literal></expr></argument>, <argument><expr><name pos:line="239" pos:column="39">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="239" pos:column="53">IDM_PROJECT_DELETEFOLDER</name></expr></argument>,  <argument><expr><call><name><name pos:line="239" pos:column="80">edit_remove</name><op:operator pos:line="239" pos:column="91">.</op:operator><name pos:line="239" pos:column="92">c_str</name></name><argument_list pos:line="239" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="241" pos:column="9">edit_moveup</name> <op:operator pos:line="241" pos:column="21">=</op:operator> <call><name><name pos:line="241" pos:column="23">pNativeSpeaker</name><op:operator pos:line="241" pos:column="37">-&gt;</op:operator><name pos:line="241" pos:column="39">getProjectPanelLangMenuStr</name></name><argument_list pos:line="241" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="241" pos:column="66">"FileMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="241" pos:column="78">IDM_PROJECT_MOVEUP</name></expr></argument>, <argument><expr><name pos:line="241" pos:column="98">PM_MOVEUPENTRY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="242" pos:column="9">edit_movedown</name> <op:operator pos:line="242" pos:column="23">=</op:operator> <call><name><name pos:line="242" pos:column="25">pNativeSpeaker</name><op:operator pos:line="242" pos:column="39">-&gt;</op:operator><name pos:line="242" pos:column="41">getProjectPanelLangMenuStr</name></name><argument_list pos:line="242" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="242" pos:column="68">"FileMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="242" pos:column="80">IDM_PROJECT_MOVEDOWN</name></expr></argument>, <argument><expr><name pos:line="242" pos:column="102">PM_MOVEDOWNENTRY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="243" pos:column="9">edit_rename</name> <op:operator pos:line="243" pos:column="21">=</op:operator> <call><name><name pos:line="243" pos:column="23">pNativeSpeaker</name><op:operator pos:line="243" pos:column="37">-&gt;</op:operator><name pos:line="243" pos:column="39">getProjectPanelLangMenuStr</name></name><argument_list pos:line="243" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="243" pos:column="66">"FileMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="243" pos:column="78">IDM_PROJECT_RENAME</name></expr></argument>, <argument><expr><name pos:line="243" pos:column="98">PM_EDITRENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="244" pos:column="9">edit_remove</name> <op:operator pos:line="244" pos:column="21">=</op:operator> <call><name><name pos:line="244" pos:column="23">pNativeSpeaker</name><op:operator pos:line="244" pos:column="37">-&gt;</op:operator><name pos:line="244" pos:column="39">getProjectPanelLangMenuStr</name></name><argument_list pos:line="244" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="244" pos:column="66">"FileMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="244" pos:column="78">IDM_PROJECT_DELETEFILE</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="102">PM_EDITREMOVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="245" pos:column="9">generic_string</name></type> <name pos:line="245" pos:column="24">edit_modifyfile</name> <init pos:line="245" pos:column="40">= <expr><call><name><name pos:line="245" pos:column="42">pNativeSpeaker</name><op:operator pos:line="245" pos:column="56">-&gt;</op:operator><name pos:line="245" pos:column="58">getProjectPanelLangMenuStr</name></name><argument_list pos:line="245" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="245" pos:column="85">"FileMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="245" pos:column="97">IDM_PROJECT_MODIFYFILEPATH</name></expr></argument>, <argument><expr><name pos:line="245" pos:column="125">PM_EDITMODIFYFILE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="247" pos:column="9">_hFileMenu</name> <op:operator pos:line="247" pos:column="20">=</op:operator> <call><name><op:operator pos:line="247" pos:column="22">::</op:operator><name pos:line="247" pos:column="24">CreatePopupMenu</name></name><argument_list pos:line="247" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="248" pos:column="9">::</op:operator><name pos:line="248" pos:column="11">InsertMenu</name></name><argument_list pos:line="248" pos:column="21">(<argument><expr><name pos:line="248" pos:column="22">_hFileMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="248" pos:column="34">0</lit:literal></expr></argument>, <argument><expr><name pos:line="248" pos:column="37">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="248" pos:column="51">IDM_PROJECT_MOVEUP</name></expr></argument>, <argument><expr><call><name><name pos:line="248" pos:column="71">edit_moveup</name><op:operator pos:line="248" pos:column="82">.</op:operator><name pos:line="248" pos:column="83">c_str</name></name><argument_list pos:line="248" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="249" pos:column="9">::</op:operator><name pos:line="249" pos:column="11">InsertMenu</name></name><argument_list pos:line="249" pos:column="21">(<argument><expr><name pos:line="249" pos:column="22">_hFileMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="249" pos:column="34">0</lit:literal></expr></argument>, <argument><expr><name pos:line="249" pos:column="37">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="249" pos:column="51">IDM_PROJECT_MOVEDOWN</name></expr></argument>, <argument><expr><call><name><name pos:line="249" pos:column="73">edit_movedown</name><op:operator pos:line="249" pos:column="86">.</op:operator><name pos:line="249" pos:column="87">c_str</name></name><argument_list pos:line="249" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="250" pos:column="9">::</op:operator><name pos:line="250" pos:column="11">InsertMenu</name></name><argument_list pos:line="250" pos:column="21">(<argument><expr><name pos:line="250" pos:column="22">_hFileMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="250" pos:column="34">0</lit:literal></expr></argument>, <argument><expr><name pos:line="250" pos:column="37">MF_BYCOMMAND</name></expr></argument>, <argument><expr><call><name pos:line="250" pos:column="51">UINT</name><argument_list pos:line="250" pos:column="55">(<argument><expr><op:operator pos:line="250" pos:column="56">-</op:operator><lit:literal type="number" pos:line="250" pos:column="57">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="250" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="251" pos:column="9">::</op:operator><name pos:line="251" pos:column="11">InsertMenu</name></name><argument_list pos:line="251" pos:column="21">(<argument><expr><name pos:line="251" pos:column="22">_hFileMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="251" pos:column="34">0</lit:literal></expr></argument>, <argument><expr><name pos:line="251" pos:column="37">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="251" pos:column="51">IDM_PROJECT_RENAME</name></expr></argument>, <argument><expr><call><name><name pos:line="251" pos:column="71">edit_rename</name><op:operator pos:line="251" pos:column="82">.</op:operator><name pos:line="251" pos:column="83">c_str</name></name><argument_list pos:line="251" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="252" pos:column="9">::</op:operator><name pos:line="252" pos:column="11">InsertMenu</name></name><argument_list pos:line="252" pos:column="21">(<argument><expr><name pos:line="252" pos:column="22">_hFileMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="252" pos:column="34">0</lit:literal></expr></argument>, <argument><expr><name pos:line="252" pos:column="37">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="252" pos:column="51">IDM_PROJECT_DELETEFILE</name></expr></argument>, <argument><expr><call><name><name pos:line="252" pos:column="75">edit_remove</name><op:operator pos:line="252" pos:column="86">.</op:operator><name pos:line="252" pos:column="87">c_str</name></name><argument_list pos:line="252" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="253" pos:column="9">::</op:operator><name pos:line="253" pos:column="11">InsertMenu</name></name><argument_list pos:line="253" pos:column="21">(<argument><expr><name pos:line="253" pos:column="22">_hFileMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="253" pos:column="34">0</lit:literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="37">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="253" pos:column="51">IDM_PROJECT_MODIFYFILEPATH</name></expr></argument>, <argument><expr><call><name><name pos:line="253" pos:column="79">edit_modifyfile</name><op:operator pos:line="253" pos:column="94">.</op:operator><name pos:line="253" pos:column="95">c_str</name></name><argument_list pos:line="253" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="257" pos:column="1">BOOL</name></type> <name><name pos:line="257" pos:column="6">ProjectPanel</name><op:operator pos:line="257" pos:column="18">::</op:operator><name pos:line="257" pos:column="20">setImageList</name></name><parameter_list pos:line="257" pos:column="32">(<param><decl><type><name pos:line="257" pos:column="33">int</name></type> <name pos:line="257" pos:column="37">root_clean_id</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="52">int</name></type> <name pos:line="257" pos:column="56">root_dirty_id</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="71">int</name></type> <name pos:line="257" pos:column="75">project_id</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="87">int</name></type> <name pos:line="257" pos:column="91">open_node_id</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="105">int</name></type> <name pos:line="257" pos:column="109">closed_node_id</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="125">int</name></type> <name pos:line="257" pos:column="129">leaf_id</name></decl></param>, <param><decl><type><name pos:line="257" pos:column="138">int</name></type> <name pos:line="257" pos:column="142">ivalid_leaf_id</name></decl></param>)</parameter_list> 
<block pos:line="258" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="259" pos:column="9">int</name></type> <name pos:line="259" pos:column="13">i</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="260" pos:column="9">HBITMAP</name></type> <name pos:line="260" pos:column="17">hbmp</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="262" pos:column="9">const</specifier> <name pos:line="262" pos:column="15">int</name></type> <name pos:line="262" pos:column="19">nbBitmaps</name> <init pos:line="262" pos:column="29">= <expr><lit:literal type="number" pos:line="262" pos:column="31">7</lit:literal></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="264" pos:column="9">// Creation of image list</comment>
	<if pos:line="265" pos:column="9">if <condition pos:line="265" pos:column="12">(<expr><op:operator pos:line="265" pos:column="13">(</op:operator><name pos:line="265" pos:column="14">_hImaLst</name> <op:operator pos:line="265" pos:column="23">=</op:operator> <call><name pos:line="265" pos:column="25">ImageList_Create</name><argument_list pos:line="265" pos:column="41">(<argument><expr><name pos:line="265" pos:column="42">CX_BITMAP</name></expr></argument>, <argument><expr><name pos:line="265" pos:column="53">CY_BITMAP</name></expr></argument>, <argument><expr><name pos:line="265" pos:column="64">ILC_COLOR32</name> <op:operator pos:line="265" pos:column="76">|</op:operator> <name pos:line="265" pos:column="78">ILC_MASK</name></expr></argument>, <argument><expr><name pos:line="265" pos:column="88">nbBitmaps</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="265" pos:column="99">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="265" pos:column="101">)</op:operator> <op:operator pos:line="265" pos:column="103">==</op:operator> <name pos:line="265" pos:column="106">NULL</name></expr>)</condition><then pos:line="265" pos:column="111"> 
		<return pos:line="266" pos:column="17">return <expr><name pos:line="266" pos:column="24">FALSE</name></expr>;</return></then></if>

	<comment type="line" pos:line="268" pos:column="9">// Add the bmp in the list</comment>
	<expr_stmt><expr><name pos:line="269" pos:column="9">hbmp</name> <op:operator pos:line="269" pos:column="14">=</op:operator> <call><name pos:line="269" pos:column="16">LoadBitmap</name><argument_list pos:line="269" pos:column="26">(<argument><expr><name pos:line="269" pos:column="27">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="269" pos:column="35">MAKEINTRESOURCE</name><argument_list pos:line="269" pos:column="50">(<argument><expr><name pos:line="269" pos:column="51">root_clean_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="270" pos:column="9">if<condition pos:line="270" pos:column="11">(<expr><name pos:line="270" pos:column="12">hbmp</name> <op:operator pos:line="270" pos:column="17">==</op:operator> <name pos:line="270" pos:column="20">NULL</name></expr>)</condition><then pos:line="270" pos:column="25">
		<return pos:line="271" pos:column="17">return <expr><name pos:line="271" pos:column="24">FALSE</name></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="272" pos:column="9">i</name> <op:operator pos:line="272" pos:column="11">=</op:operator><call><name pos:line="272" pos:column="12">ImageList_Add</name><argument_list pos:line="272" pos:column="25">(<argument><expr><name pos:line="272" pos:column="26">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="272" pos:column="36">hbmp</name></expr></argument>, <argument><expr><op:operator pos:line="272" pos:column="42">(</op:operator><name pos:line="272" pos:column="43">HBITMAP</name><op:operator pos:line="272" pos:column="50">)</op:operator><name pos:line="272" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="273" pos:column="9">DeleteObject</name><argument_list pos:line="273" pos:column="21">(<argument><expr><name pos:line="273" pos:column="22">hbmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="275" pos:column="9">hbmp</name> <op:operator pos:line="275" pos:column="14">=</op:operator> <call><name pos:line="275" pos:column="16">LoadBitmap</name><argument_list pos:line="275" pos:column="26">(<argument><expr><name pos:line="275" pos:column="27">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="275" pos:column="35">MAKEINTRESOURCE</name><argument_list pos:line="275" pos:column="50">(<argument><expr><name pos:line="275" pos:column="51">root_dirty_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="276" pos:column="9">if<condition pos:line="276" pos:column="11">(<expr><name pos:line="276" pos:column="12">hbmp</name> <op:operator pos:line="276" pos:column="17">==</op:operator> <name pos:line="276" pos:column="20">NULL</name></expr>)</condition><then pos:line="276" pos:column="25">
		<return pos:line="277" pos:column="17">return <expr><name pos:line="277" pos:column="24">FALSE</name></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="278" pos:column="9">i</name> <op:operator pos:line="278" pos:column="11">=</op:operator><call><name pos:line="278" pos:column="12">ImageList_Add</name><argument_list pos:line="278" pos:column="25">(<argument><expr><name pos:line="278" pos:column="26">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="278" pos:column="36">hbmp</name></expr></argument>, <argument><expr><op:operator pos:line="278" pos:column="42">(</op:operator><name pos:line="278" pos:column="43">HBITMAP</name><op:operator pos:line="278" pos:column="50">)</op:operator><name pos:line="278" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="279" pos:column="9">DeleteObject</name><argument_list pos:line="279" pos:column="21">(<argument><expr><name pos:line="279" pos:column="22">hbmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="281" pos:column="9">hbmp</name> <op:operator pos:line="281" pos:column="14">=</op:operator> <call><name pos:line="281" pos:column="16">LoadBitmap</name><argument_list pos:line="281" pos:column="26">(<argument><expr><name pos:line="281" pos:column="27">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="281" pos:column="35">MAKEINTRESOURCE</name><argument_list pos:line="281" pos:column="50">(<argument><expr><name pos:line="281" pos:column="51">project_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="282" pos:column="9">if<condition pos:line="282" pos:column="11">(<expr><name pos:line="282" pos:column="12">hbmp</name> <op:operator pos:line="282" pos:column="17">==</op:operator> <name pos:line="282" pos:column="20">NULL</name></expr>)</condition><then pos:line="282" pos:column="25">
		<return pos:line="283" pos:column="17">return <expr><name pos:line="283" pos:column="24">FALSE</name></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="284" pos:column="9">i</name> <op:operator pos:line="284" pos:column="11">=</op:operator><call><name pos:line="284" pos:column="12">ImageList_Add</name><argument_list pos:line="284" pos:column="25">(<argument><expr><name pos:line="284" pos:column="26">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="284" pos:column="36">hbmp</name></expr></argument>, <argument><expr><op:operator pos:line="284" pos:column="42">(</op:operator><name pos:line="284" pos:column="43">HBITMAP</name><op:operator pos:line="284" pos:column="50">)</op:operator><name pos:line="284" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="285" pos:column="9">DeleteObject</name><argument_list pos:line="285" pos:column="21">(<argument><expr><name pos:line="285" pos:column="22">hbmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="287" pos:column="9">hbmp</name> <op:operator pos:line="287" pos:column="14">=</op:operator> <call><name pos:line="287" pos:column="16">LoadBitmap</name><argument_list pos:line="287" pos:column="26">(<argument><expr><name pos:line="287" pos:column="27">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="287" pos:column="35">MAKEINTRESOURCE</name><argument_list pos:line="287" pos:column="50">(<argument><expr><name pos:line="287" pos:column="51">open_node_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="288" pos:column="9">if<condition pos:line="288" pos:column="11">(<expr><name pos:line="288" pos:column="12">hbmp</name> <op:operator pos:line="288" pos:column="17">==</op:operator> <name pos:line="288" pos:column="20">NULL</name></expr>)</condition><then pos:line="288" pos:column="25">
		<return pos:line="289" pos:column="17">return <expr><name pos:line="289" pos:column="24">FALSE</name></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="290" pos:column="9">i</name> <op:operator pos:line="290" pos:column="11">=</op:operator><call><name pos:line="290" pos:column="12">ImageList_Add</name><argument_list pos:line="290" pos:column="25">(<argument><expr><name pos:line="290" pos:column="26">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="290" pos:column="36">hbmp</name></expr></argument>, <argument><expr><op:operator pos:line="290" pos:column="42">(</op:operator><name pos:line="290" pos:column="43">HBITMAP</name><op:operator pos:line="290" pos:column="50">)</op:operator><name pos:line="290" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="291" pos:column="9">DeleteObject</name><argument_list pos:line="291" pos:column="21">(<argument><expr><name pos:line="291" pos:column="22">hbmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="293" pos:column="9">hbmp</name> <op:operator pos:line="293" pos:column="14">=</op:operator> <call><name pos:line="293" pos:column="16">LoadBitmap</name><argument_list pos:line="293" pos:column="26">(<argument><expr><name pos:line="293" pos:column="27">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="293" pos:column="35">MAKEINTRESOURCE</name><argument_list pos:line="293" pos:column="50">(<argument><expr><name pos:line="293" pos:column="51">closed_node_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="294" pos:column="9">if<condition pos:line="294" pos:column="11">(<expr><name pos:line="294" pos:column="12">hbmp</name> <op:operator pos:line="294" pos:column="17">==</op:operator> <name pos:line="294" pos:column="20">NULL</name></expr>)</condition><then pos:line="294" pos:column="25">
		<return pos:line="295" pos:column="17">return <expr><name pos:line="295" pos:column="24">FALSE</name></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="296" pos:column="9">i</name> <op:operator pos:line="296" pos:column="11">=</op:operator><call><name pos:line="296" pos:column="12">ImageList_Add</name><argument_list pos:line="296" pos:column="25">(<argument><expr><name pos:line="296" pos:column="26">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="296" pos:column="36">hbmp</name></expr></argument>, <argument><expr><op:operator pos:line="296" pos:column="42">(</op:operator><name pos:line="296" pos:column="43">HBITMAP</name><op:operator pos:line="296" pos:column="50">)</op:operator><name pos:line="296" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="297" pos:column="9">DeleteObject</name><argument_list pos:line="297" pos:column="21">(<argument><expr><name pos:line="297" pos:column="22">hbmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="299" pos:column="9">hbmp</name> <op:operator pos:line="299" pos:column="14">=</op:operator> <call><name pos:line="299" pos:column="16">LoadBitmap</name><argument_list pos:line="299" pos:column="26">(<argument><expr><name pos:line="299" pos:column="27">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="299" pos:column="35">MAKEINTRESOURCE</name><argument_list pos:line="299" pos:column="50">(<argument><expr><name pos:line="299" pos:column="51">leaf_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="300" pos:column="9">if<condition pos:line="300" pos:column="11">(<expr><name pos:line="300" pos:column="12">hbmp</name> <op:operator pos:line="300" pos:column="17">==</op:operator> <name pos:line="300" pos:column="20">NULL</name></expr>)</condition><then pos:line="300" pos:column="25">
		<return pos:line="301" pos:column="17">return <expr><name pos:line="301" pos:column="24">FALSE</name></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="302" pos:column="9">i</name> <op:operator pos:line="302" pos:column="11">=</op:operator><call><name pos:line="302" pos:column="12">ImageList_Add</name><argument_list pos:line="302" pos:column="25">(<argument><expr><name pos:line="302" pos:column="26">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="302" pos:column="36">hbmp</name></expr></argument>, <argument><expr><op:operator pos:line="302" pos:column="42">(</op:operator><name pos:line="302" pos:column="43">HBITMAP</name><op:operator pos:line="302" pos:column="50">)</op:operator><name pos:line="302" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="303" pos:column="9">DeleteObject</name><argument_list pos:line="303" pos:column="21">(<argument><expr><name pos:line="303" pos:column="22">hbmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="305" pos:column="9">hbmp</name> <op:operator pos:line="305" pos:column="14">=</op:operator> <call><name pos:line="305" pos:column="16">LoadBitmap</name><argument_list pos:line="305" pos:column="26">(<argument><expr><name pos:line="305" pos:column="27">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="305" pos:column="35">MAKEINTRESOURCE</name><argument_list pos:line="305" pos:column="50">(<argument><expr><name pos:line="305" pos:column="51">ivalid_leaf_id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="306" pos:column="9">if<condition pos:line="306" pos:column="11">(<expr><name pos:line="306" pos:column="12">hbmp</name> <op:operator pos:line="306" pos:column="17">==</op:operator> <name pos:line="306" pos:column="20">NULL</name></expr>)</condition><then pos:line="306" pos:column="25">
		<return pos:line="307" pos:column="17">return <expr><name pos:line="307" pos:column="24">FALSE</name></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="308" pos:column="9">i</name> <op:operator pos:line="308" pos:column="11">=</op:operator><call><name pos:line="308" pos:column="12">ImageList_Add</name><argument_list pos:line="308" pos:column="25">(<argument><expr><name pos:line="308" pos:column="26">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="308" pos:column="36">hbmp</name></expr></argument>, <argument><expr><op:operator pos:line="308" pos:column="42">(</op:operator><name pos:line="308" pos:column="43">HBITMAP</name><op:operator pos:line="308" pos:column="50">)</op:operator><name pos:line="308" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="309" pos:column="9">DeleteObject</name><argument_list pos:line="309" pos:column="21">(<argument><expr><name pos:line="309" pos:column="22">hbmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="311" pos:column="9">if <condition pos:line="311" pos:column="12">(<expr><call><name pos:line="311" pos:column="13">ImageList_GetImageCount</name><argument_list pos:line="311" pos:column="36">(<argument><expr><name pos:line="311" pos:column="37">_hImaLst</name></expr></argument>)</argument_list></call> <op:operator pos:line="311" pos:column="47">&lt;</op:operator> <name pos:line="311" pos:column="49">nbBitmaps</name></expr>)</condition><then pos:line="311" pos:column="59">
		<return pos:line="312" pos:column="17">return <expr><name pos:line="312" pos:column="24">FALSE</name></expr>;</return></then></if>

	<comment type="line" pos:line="314" pos:column="9">// Set image list to the tree view</comment>
  <expr_stmt><expr><call><name pos:line="315" pos:column="3">TreeView_SetImageList</name><argument_list pos:line="315" pos:column="24">(<argument><expr><call><name><name pos:line="315" pos:column="25">_treeView</name><op:operator pos:line="315" pos:column="34">.</op:operator><name pos:line="315" pos:column="35">getHSelf</name></name><argument_list pos:line="315" pos:column="43">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="315" pos:column="47">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="315" pos:column="57">TVSIL_NORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:line="317" pos:column="9">return <expr><name pos:line="317" pos:column="16">TRUE</name></expr>;</return>
}</block></function>


<function><type><name pos:line="321" pos:column="1">void</name></type> <name><name pos:line="321" pos:column="6">ProjectPanel</name><op:operator pos:line="321" pos:column="18">::</op:operator><name pos:line="321" pos:column="20">destroyMenus</name></name><parameter_list pos:line="321" pos:column="32">()</parameter_list> 
<block pos:line="322" pos:column="1">{
	<expr_stmt><expr><call><name><op:operator pos:line="323" pos:column="9">::</op:operator><name pos:line="323" pos:column="11">DestroyMenu</name></name><argument_list pos:line="323" pos:column="22">(<argument><expr><name pos:line="323" pos:column="23">_hWorkSpaceMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="324" pos:column="9">::</op:operator><name pos:line="324" pos:column="11">DestroyMenu</name></name><argument_list pos:line="324" pos:column="22">(<argument><expr><name pos:line="324" pos:column="23">_hProjectMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="325" pos:column="9">::</op:operator><name pos:line="325" pos:column="11">DestroyMenu</name></name><argument_list pos:line="325" pos:column="22">(<argument><expr><name pos:line="325" pos:column="23">_hFolderMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="326" pos:column="9">::</op:operator><name pos:line="326" pos:column="11">DestroyMenu</name></name><argument_list pos:line="326" pos:column="22">(<argument><expr><name pos:line="326" pos:column="23">_hFileMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="329" pos:column="1">bool</name></type> <name><name pos:line="329" pos:column="6">ProjectPanel</name><op:operator pos:line="329" pos:column="18">::</op:operator><name pos:line="329" pos:column="20">openWorkSpace</name></name><parameter_list pos:line="329" pos:column="33">(<param><decl><type><specifier pos:line="329" pos:column="34">const</specifier> <name pos:line="329" pos:column="40">TCHAR</name> <type:modifier pos:line="329" pos:column="46">*</type:modifier></type><name pos:line="329" pos:column="47">projectFileName</name></decl></param>)</parameter_list>
<block pos:line="330" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="331" pos:column="9">TiXmlDocument</name> <type:modifier pos:line="331" pos:column="23">*</type:modifier></type><name pos:line="331" pos:column="24">pXmlDocProject</name> <init pos:line="331" pos:column="39">= <expr><op:operator pos:line="331" pos:column="41">new</op:operator> <call><name pos:line="331" pos:column="45">TiXmlDocument</name><argument_list pos:line="331" pos:column="58">(<argument><expr><name pos:line="331" pos:column="59">projectFileName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="332" pos:column="9">bool</name></type> <name pos:line="332" pos:column="14">loadOkay</name> <init pos:line="332" pos:column="23">= <expr><call><name><name pos:line="332" pos:column="25">pXmlDocProject</name><op:operator pos:line="332" pos:column="39">-&gt;</op:operator><name pos:line="332" pos:column="41">LoadFile</name></name><argument_list pos:line="332" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="333" pos:column="9">if <condition pos:line="333" pos:column="12">(<expr><op:operator pos:line="333" pos:column="13">!</op:operator><name pos:line="333" pos:column="14">loadOkay</name></expr>)</condition><then pos:line="333" pos:column="23">
		<return pos:line="334" pos:column="17">return <expr><lit:literal type="boolean" pos:line="334" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="336" pos:column="9">TiXmlNode</name> <type:modifier pos:line="336" pos:column="19">*</type:modifier></type><name pos:line="336" pos:column="20">root</name> <init pos:line="336" pos:column="25">= <expr><call><name><name pos:line="336" pos:column="27">pXmlDocProject</name><op:operator pos:line="336" pos:column="41">-&gt;</op:operator><name pos:line="336" pos:column="43">FirstChild</name></name><argument_list pos:line="336" pos:column="53">(<argument><expr><call><name pos:line="336" pos:column="54">TEXT</name><argument_list pos:line="336" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="336" pos:column="59">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="337" pos:column="9">if <condition pos:line="337" pos:column="12">(<expr><op:operator pos:line="337" pos:column="13">!</op:operator><name pos:line="337" pos:column="14">root</name></expr>)</condition><then pos:line="337" pos:column="19"> 
		<return pos:line="338" pos:column="17">return <expr><lit:literal type="boolean" pos:line="338" pos:column="24">false</lit:literal></expr>;</return></then></if>


	<decl_stmt><decl><type><name pos:line="341" pos:column="9">TiXmlNode</name> <type:modifier pos:line="341" pos:column="19">*</type:modifier></type><name pos:line="341" pos:column="20">childNode</name> <init pos:line="341" pos:column="30">= <expr><call><name><name pos:line="341" pos:column="32">root</name><op:operator pos:line="341" pos:column="36">-&gt;</op:operator><name pos:line="341" pos:column="38">FirstChildElement</name></name><argument_list pos:line="341" pos:column="55">(<argument><expr><call><name pos:line="341" pos:column="56">TEXT</name><argument_list pos:line="341" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="341" pos:column="61">"Project"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="342" pos:column="9">if <condition pos:line="342" pos:column="12">(<expr><op:operator pos:line="342" pos:column="13">!</op:operator><name pos:line="342" pos:column="14">childNode</name></expr>)</condition><then pos:line="342" pos:column="24"> 
		<return pos:line="343" pos:column="17">return <expr><lit:literal type="boolean" pos:line="343" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<if pos:line="345" pos:column="9">if <condition pos:line="345" pos:column="12">(<expr><op:operator pos:line="345" pos:column="13">!</op:operator><call><name><op:operator pos:line="345" pos:column="14">::</op:operator><name pos:line="345" pos:column="16">PathFileExists</name></name><argument_list pos:line="345" pos:column="30">(<argument><expr><name pos:line="345" pos:column="31">projectFileName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="345" pos:column="48">
		<return pos:line="346" pos:column="17">return <expr><lit:literal type="boolean" pos:line="346" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><call><name><name pos:line="348" pos:column="9">_treeView</name><op:operator pos:line="348" pos:column="18">.</op:operator><name pos:line="348" pos:column="19">removeAllItems</name></name><argument_list pos:line="348" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="349" pos:column="9">_workSpaceFilePath</name> <op:operator pos:line="349" pos:column="28">=</op:operator> <name pos:line="349" pos:column="30">projectFileName</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="351" pos:column="9">NativeLangSpeaker</name> <type:modifier pos:line="351" pos:column="27">*</type:modifier></type><name pos:line="351" pos:column="28">pNativeSpeaker</name> <init pos:line="351" pos:column="43">= <expr><op:operator pos:line="351" pos:column="45">(</op:operator><call><name><name pos:line="351" pos:column="46">NppParameters</name><op:operator pos:line="351" pos:column="59">::</op:operator><name pos:line="351" pos:column="61">getInstance</name></name><argument_list pos:line="351" pos:column="72">()</argument_list></call><op:operator pos:line="351" pos:column="74">)</op:operator><op:operator pos:line="351" pos:column="75">-&gt;</op:operator><call><name pos:line="351" pos:column="77">getNativeLangSpeaker</name><argument_list pos:line="351" pos:column="97">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="352" pos:column="9">generic_string</name></type> <name pos:line="352" pos:column="24">workspace</name> <init pos:line="352" pos:column="34">= <expr><call><name><name pos:line="352" pos:column="36">pNativeSpeaker</name><op:operator pos:line="352" pos:column="50">-&gt;</op:operator><name pos:line="352" pos:column="52">getProjectPanelLangStr</name></name><argument_list pos:line="352" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="352" pos:column="75">"WorkspaceRootName"</lit:literal></expr></argument>, <argument><expr><name pos:line="352" pos:column="96">PM_WORKSPACEROOTNAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="353" pos:column="9">HTREEITEM</name></type> <name pos:line="353" pos:column="19">rootItem</name> <init pos:line="353" pos:column="28">= <expr><call><name><name pos:line="353" pos:column="30">_treeView</name><op:operator pos:line="353" pos:column="39">.</op:operator><name pos:line="353" pos:column="40">addItem</name></name><argument_list pos:line="353" pos:column="47">(<argument><expr><call><name><name pos:line="353" pos:column="48">workspace</name><op:operator pos:line="353" pos:column="57">.</op:operator><name pos:line="353" pos:column="58">c_str</name></name><argument_list pos:line="353" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="353" pos:column="67">TVI_ROOT</name></expr></argument>, <argument><expr><name pos:line="353" pos:column="77">INDEX_CLEAN_ROOT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<for pos:line="355" pos:column="9">for ( <init pos:line="355" pos:column="15">;</init> <condition><expr><name pos:line="355" pos:column="17">childNode</name></expr> ;</condition> <incr><expr><name pos:line="355" pos:column="29">childNode</name> <op:operator pos:line="355" pos:column="39">=</op:operator> <call><name><name pos:line="355" pos:column="41">childNode</name><op:operator pos:line="355" pos:column="50">-&gt;</op:operator><name pos:line="355" pos:column="52">NextSibling</name></name><argument_list pos:line="355" pos:column="63">(<argument><expr><call><name pos:line="355" pos:column="64">TEXT</name><argument_list pos:line="355" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="355" pos:column="69">"Project"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="356" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="357" pos:column="17">HTREEITEM</name></type> <name pos:line="357" pos:column="27">projectItem</name> <init pos:line="357" pos:column="39">= <expr><call><name><name pos:line="357" pos:column="41">_treeView</name><op:operator pos:line="357" pos:column="50">.</op:operator><name pos:line="357" pos:column="51">addItem</name></name><argument_list pos:line="357" pos:column="58">(<argument><expr><op:operator pos:line="357" pos:column="59">(</op:operator><call><name><name pos:line="357" pos:column="60">childNode</name><op:operator pos:line="357" pos:column="69">-&gt;</op:operator><name pos:line="357" pos:column="71">ToElement</name></name><argument_list pos:line="357" pos:column="80">()</argument_list></call><op:operator pos:line="357" pos:column="82">)</op:operator><op:operator pos:line="357" pos:column="83">-&gt;</op:operator><call><name pos:line="357" pos:column="85">Attribute</name><argument_list pos:line="357" pos:column="94">(<argument><expr><call><name pos:line="357" pos:column="95">TEXT</name><argument_list pos:line="357" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="357" pos:column="100">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="357" pos:column="110">rootItem</name></expr></argument>, <argument><expr><name pos:line="357" pos:column="120">INDEX_PROJECT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="358" pos:column="17">buildTreeFrom</name><argument_list pos:line="358" pos:column="30">(<argument><expr><name pos:line="358" pos:column="31">childNode</name></expr></argument>, <argument><expr><name pos:line="358" pos:column="42">projectItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name pos:line="360" pos:column="9">setWorkSpaceDirty</name><argument_list pos:line="360" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="360" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="361" pos:column="9">_treeView</name><op:operator pos:line="361" pos:column="18">.</op:operator><name pos:line="361" pos:column="19">expand</name></name><argument_list pos:line="361" pos:column="25">(<argument><expr><name pos:line="361" pos:column="26">rootItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><op:operator pos:line="363" pos:column="9">delete</op:operator> <name pos:line="363" pos:column="16">pXmlDocProject</name></expr>;</expr_stmt>
	<return pos:line="364" pos:column="9">return <expr><name pos:line="364" pos:column="16">loadOkay</name></expr>;</return>
}</block></function>

<function><type><name pos:line="367" pos:column="1">void</name></type> <name><name pos:line="367" pos:column="6">ProjectPanel</name><op:operator pos:line="367" pos:column="18">::</op:operator><name pos:line="367" pos:column="20">newWorkSpace</name></name><parameter_list pos:line="367" pos:column="32">()</parameter_list>
<block pos:line="368" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="369" pos:column="9">NativeLangSpeaker</name> <type:modifier pos:line="369" pos:column="27">*</type:modifier></type><name pos:line="369" pos:column="28">pNativeSpeaker</name> <init pos:line="369" pos:column="43">= <expr><op:operator pos:line="369" pos:column="45">(</op:operator><call><name><name pos:line="369" pos:column="46">NppParameters</name><op:operator pos:line="369" pos:column="59">::</op:operator><name pos:line="369" pos:column="61">getInstance</name></name><argument_list pos:line="369" pos:column="72">()</argument_list></call><op:operator pos:line="369" pos:column="74">)</op:operator><op:operator pos:line="369" pos:column="75">-&gt;</op:operator><call><name pos:line="369" pos:column="77">getNativeLangSpeaker</name><argument_list pos:line="369" pos:column="97">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="370" pos:column="9">generic_string</name></type> <name pos:line="370" pos:column="24">workspace</name> <init pos:line="370" pos:column="34">= <expr><call><name><name pos:line="370" pos:column="36">pNativeSpeaker</name><op:operator pos:line="370" pos:column="50">-&gt;</op:operator><name pos:line="370" pos:column="52">getProjectPanelLangStr</name></name><argument_list pos:line="370" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="370" pos:column="75">"WorkspaceRootName"</lit:literal></expr></argument>, <argument><expr><name pos:line="370" pos:column="96">PM_WORKSPACEROOTNAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="371" pos:column="9">_treeView</name><op:operator pos:line="371" pos:column="18">.</op:operator><name pos:line="371" pos:column="19">addItem</name></name><argument_list pos:line="371" pos:column="26">(<argument><expr><call><name><name pos:line="371" pos:column="27">workspace</name><op:operator pos:line="371" pos:column="36">.</op:operator><name pos:line="371" pos:column="37">c_str</name></name><argument_list pos:line="371" pos:column="42">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="371" pos:column="46">TVI_ROOT</name></expr></argument>, <argument><expr><name pos:line="371" pos:column="56">INDEX_CLEAN_ROOT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="372" pos:column="9">setWorkSpaceDirty</name><argument_list pos:line="372" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="372" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="373" pos:column="9">_workSpaceFilePath</name> <op:operator pos:line="373" pos:column="28">=</op:operator> <call><name pos:line="373" pos:column="30">TEXT</name><argument_list pos:line="373" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="373" pos:column="35">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="376" pos:column="1">bool</name></type> <name><name pos:line="376" pos:column="6">ProjectPanel</name><op:operator pos:line="376" pos:column="18">::</op:operator><name pos:line="376" pos:column="20">saveWorkSpace</name></name><parameter_list pos:line="376" pos:column="33">()</parameter_list>
<block pos:line="377" pos:column="1">{
	<if pos:line="378" pos:column="9">if <condition pos:line="378" pos:column="12">(<expr><name pos:line="378" pos:column="13">_workSpaceFilePath</name> <op:operator pos:line="378" pos:column="32">==</op:operator> <call><name pos:line="378" pos:column="35">TEXT</name><argument_list pos:line="378" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="378" pos:column="40">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="378" pos:column="44">
	<block pos:line="379" pos:column="9">{
		<return pos:line="380" pos:column="17">return <expr><call><name pos:line="380" pos:column="24">saveWorkSpaceAs</name><argument_list pos:line="380" pos:column="39">(<argument><expr><lit:literal type="boolean" pos:line="380" pos:column="40">false</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></then>
	<else pos:line="382" pos:column="9">else
	<block pos:line="383" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="384" pos:column="17">writeWorkSpace</name><argument_list pos:line="384" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="385" pos:column="17">setWorkSpaceDirty</name><argument_list pos:line="385" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="385" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="386" pos:column="17">_isDirty</name> <op:operator pos:line="386" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="386" pos:column="28">false</lit:literal></expr>;</expr_stmt>
		<return pos:line="387" pos:column="17">return <expr><lit:literal type="boolean" pos:line="387" pos:column="24">true</lit:literal></expr>;</return>
	}</block></else></if> 
}</block></function>

<function><type><name pos:line="391" pos:column="1">bool</name></type> <name><name pos:line="391" pos:column="6">ProjectPanel</name><op:operator pos:line="391" pos:column="18">::</op:operator><name pos:line="391" pos:column="20">writeWorkSpace</name></name><parameter_list pos:line="391" pos:column="34">(<param><decl><type><name pos:line="391" pos:column="35">TCHAR</name> <type:modifier pos:line="391" pos:column="41">*</type:modifier></type><name pos:line="391" pos:column="42">projectFileName</name></decl></param>)</parameter_list>
<block pos:line="392" pos:column="1">{
    <comment type="line" pos:line="393" pos:column="5">//write &lt;NotepadPlus&gt;: use the default file name if new file name is not given</comment>
	<decl_stmt><decl><type><specifier pos:line="394" pos:column="9">const</specifier> <name pos:line="394" pos:column="15">TCHAR</name> <type:modifier pos:line="394" pos:column="21">*</type:modifier></type> <name pos:line="394" pos:column="23">fn2write</name> <init pos:line="394" pos:column="32">= <expr><name pos:line="394" pos:column="34">projectFileName</name><op:operator pos:line="394" pos:column="49">?</op:operator><name pos:line="394" pos:column="50">projectFileName</name><op:operator pos:line="394" pos:column="65">:</op:operator><call><name><name pos:line="394" pos:column="66">_workSpaceFilePath</name><op:operator pos:line="394" pos:column="84">.</op:operator><name pos:line="394" pos:column="85">c_str</name></name><argument_list pos:line="394" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<function_decl><type><name pos:line="395" pos:column="9">TiXmlDocument</name></type> <name pos:line="395" pos:column="23">projDoc</name><parameter_list pos:line="395" pos:column="30">(<param><decl><type><name pos:line="395" pos:column="31">fn2write</name></type></decl></param>)</parameter_list>;</function_decl>
    <decl_stmt><decl><type><name pos:line="396" pos:column="5">TiXmlNode</name> <type:modifier pos:line="396" pos:column="15">*</type:modifier></type><name pos:line="396" pos:column="16">root</name> <init pos:line="396" pos:column="21">= <expr><call><name><name pos:line="396" pos:column="23">projDoc</name><op:operator pos:line="396" pos:column="30">.</op:operator><name pos:line="396" pos:column="31">InsertEndChild</name></name><argument_list pos:line="396" pos:column="45">(<argument><expr><call><name pos:line="396" pos:column="46">TiXmlElement</name><argument_list pos:line="396" pos:column="58">(<argument><expr><call><name pos:line="396" pos:column="59">TEXT</name><argument_list pos:line="396" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="396" pos:column="64">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="398" pos:column="9">TCHAR</name></type> <name><name pos:line="398" pos:column="15">textBuffer</name><index pos:line="398" pos:column="25">[<expr><name pos:line="398" pos:column="26">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="399" pos:column="9">TVITEM</name></type> <name pos:line="399" pos:column="16">tvItem</name></decl>;</decl_stmt>
    <expr_stmt><expr><name><name pos:line="400" pos:column="5">tvItem</name><op:operator pos:line="400" pos:column="11">.</op:operator><name pos:line="400" pos:column="12">mask</name></name> <op:operator pos:line="400" pos:column="17">=</op:operator> <name pos:line="400" pos:column="19">TVIF_TEXT</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="401" pos:column="5">tvItem</name><op:operator pos:line="401" pos:column="11">.</op:operator><name pos:line="401" pos:column="12">pszText</name></name> <op:operator pos:line="401" pos:column="20">=</op:operator> <name pos:line="401" pos:column="22">textBuffer</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="402" pos:column="5">tvItem</name><op:operator pos:line="402" pos:column="11">.</op:operator><name pos:line="402" pos:column="12">cchTextMax</name></name> <op:operator pos:line="402" pos:column="23">=</op:operator> <name pos:line="402" pos:column="25">MAX_PATH</name></expr>;</expr_stmt>

    <comment type="line" pos:line="404" pos:column="5">//for each project, write &lt;Project&gt;</comment>
    <decl_stmt><decl><type><name pos:line="405" pos:column="5">HTREEITEM</name></type> <name pos:line="405" pos:column="15">tvRoot</name> <init pos:line="405" pos:column="22">= <expr><call><name><name pos:line="405" pos:column="24">_treeView</name><op:operator pos:line="405" pos:column="33">.</op:operator><name pos:line="405" pos:column="34">getRoot</name></name><argument_list pos:line="405" pos:column="41">()</argument_list></call></expr></init></decl>;</decl_stmt>
    <if pos:line="406" pos:column="5">if <condition pos:line="406" pos:column="8">(<expr><op:operator pos:line="406" pos:column="9">!</op:operator><name pos:line="406" pos:column="10">tvRoot</name></expr>)</condition><then pos:line="406" pos:column="17">
      <return pos:line="407" pos:column="7">return <expr><lit:literal type="boolean" pos:line="407" pos:column="14">false</lit:literal></expr>;</return></then></if>

    <for pos:line="409" pos:column="5">for (<init><decl><type><name pos:line="409" pos:column="10">HTREEITEM</name></type> <name pos:line="409" pos:column="20">tvProj</name> <init pos:line="409" pos:column="27">= <expr><call><name><name pos:line="409" pos:column="29">_treeView</name><op:operator pos:line="409" pos:column="38">.</op:operator><name pos:line="409" pos:column="39">getChildFrom</name></name><argument_list pos:line="409" pos:column="51">(<argument><expr><name pos:line="409" pos:column="52">tvRoot</name></expr></argument>)</argument_list></call></expr></init></decl>;</init>
        <condition><expr><name pos:line="410" pos:column="9">tvProj</name> <op:operator pos:line="410" pos:column="16">!=</op:operator> <name pos:line="410" pos:column="19">NULL</name></expr>;</condition>
        <incr><expr><name pos:line="411" pos:column="9">tvProj</name> <op:operator pos:line="411" pos:column="16">=</op:operator> <call><name><name pos:line="411" pos:column="18">_treeView</name><op:operator pos:line="411" pos:column="27">.</op:operator><name pos:line="411" pos:column="28">getNextSibling</name></name><argument_list pos:line="411" pos:column="42">(<argument><expr><name pos:line="411" pos:column="43">tvProj</name></expr></argument>)</argument_list></call></expr></incr>)
    <block pos:line="412" pos:column="5">{        
        <expr_stmt><expr><name><name pos:line="413" pos:column="9">tvItem</name><op:operator pos:line="413" pos:column="15">.</op:operator><name pos:line="413" pos:column="16">hItem</name></name> <op:operator pos:line="413" pos:column="22">=</op:operator> <name pos:line="413" pos:column="24">tvProj</name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="414" pos:column="9">SendMessage</name><argument_list pos:line="414" pos:column="20">(<argument><expr><call><name><name pos:line="414" pos:column="21">_treeView</name><op:operator pos:line="414" pos:column="30">.</op:operator><name pos:line="414" pos:column="31">getHSelf</name></name><argument_list pos:line="414" pos:column="39">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="414" pos:column="43">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="414" pos:column="56">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="414" pos:column="58">(</op:operator><name pos:line="414" pos:column="59">LPARAM</name><op:operator pos:line="414" pos:column="65">)</op:operator><op:operator pos:line="414" pos:column="66">&amp;</op:operator><name pos:line="414" pos:column="67">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="line" pos:line="415" pos:column="9">//printStr(tvItem.pszText);</comment>

		<decl_stmt><decl><type><name pos:line="417" pos:column="17">TiXmlNode</name> <type:modifier pos:line="417" pos:column="27">*</type:modifier></type><name pos:line="417" pos:column="28">projRoot</name> <init pos:line="417" pos:column="37">= <expr><call><name><name pos:line="417" pos:column="39">root</name><op:operator pos:line="417" pos:column="43">-&gt;</op:operator><name pos:line="417" pos:column="45">InsertEndChild</name></name><argument_list pos:line="417" pos:column="59">(<argument><expr><call><name pos:line="417" pos:column="60">TiXmlElement</name><argument_list pos:line="417" pos:column="72">(<argument><expr><call><name pos:line="417" pos:column="73">TEXT</name><argument_list pos:line="417" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="417" pos:column="78">"Project"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="418" pos:column="17">projRoot</name><op:operator pos:line="418" pos:column="25">-&gt;</op:operator><name pos:line="418" pos:column="27">ToElement</name></name><argument_list pos:line="418" pos:column="36">()</argument_list></call><op:operator pos:line="418" pos:column="38">-&gt;</op:operator><call><name pos:line="418" pos:column="40">SetAttribute</name><argument_list pos:line="418" pos:column="52">(<argument><expr><call><name pos:line="418" pos:column="53">TEXT</name><argument_list pos:line="418" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="418" pos:column="58">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="418" pos:column="67">tvItem</name><op:operator pos:line="418" pos:column="73">.</op:operator><name pos:line="418" pos:column="74">pszText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="419" pos:column="17">buildProjectXml</name><argument_list pos:line="419" pos:column="32">(<argument><expr><name pos:line="419" pos:column="33">projRoot</name></expr></argument>, <argument><expr><name pos:line="419" pos:column="43">tvProj</name></expr></argument>, <argument><expr><name pos:line="419" pos:column="51">fn2write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></for>
    <expr_stmt><expr><call><name><name pos:line="421" pos:column="5">projDoc</name><op:operator pos:line="421" pos:column="12">.</op:operator><name pos:line="421" pos:column="13">SaveFile</name></name><argument_list pos:line="421" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
	<return pos:line="422" pos:column="9">return <expr><lit:literal type="boolean" pos:line="422" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="425" pos:column="1">void</name></type> <name><name pos:line="425" pos:column="6">ProjectPanel</name><op:operator pos:line="425" pos:column="18">::</op:operator><name pos:line="425" pos:column="20">buildProjectXml</name></name><parameter_list pos:line="425" pos:column="35">(<param><decl><type><name pos:line="425" pos:column="36">TiXmlNode</name> <type:modifier pos:line="425" pos:column="46">*</type:modifier></type><name pos:line="425" pos:column="47">node</name></decl></param>, <param><decl><type><name pos:line="425" pos:column="53">HTREEITEM</name></type> <name pos:line="425" pos:column="63">hItem</name></decl></param>, <param><decl><type><specifier pos:line="425" pos:column="70">const</specifier> <name pos:line="425" pos:column="76">TCHAR</name><type:modifier pos:line="425" pos:column="81">*</type:modifier></type> <name pos:line="425" pos:column="83">fn2write</name></decl></param>)</parameter_list>
<block pos:line="426" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="427" pos:column="9">TCHAR</name></type> <name><name pos:line="427" pos:column="15">textBuffer</name><index pos:line="427" pos:column="25">[<expr><name pos:line="427" pos:column="26">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="428" pos:column="9">TVITEM</name></type> <name pos:line="428" pos:column="16">tvItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="429" pos:column="9">tvItem</name><op:operator pos:line="429" pos:column="15">.</op:operator><name pos:line="429" pos:column="16">mask</name></name> <op:operator pos:line="429" pos:column="21">=</op:operator> <name pos:line="429" pos:column="23">TVIF_TEXT</name> <op:operator pos:line="429" pos:column="33">|</op:operator> <name pos:line="429" pos:column="35">TVIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="430" pos:column="9">tvItem</name><op:operator pos:line="430" pos:column="15">.</op:operator><name pos:line="430" pos:column="16">pszText</name></name> <op:operator pos:line="430" pos:column="24">=</op:operator> <name pos:line="430" pos:column="26">textBuffer</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="431" pos:column="9">tvItem</name><op:operator pos:line="431" pos:column="15">.</op:operator><name pos:line="431" pos:column="16">cchTextMax</name></name> <op:operator pos:line="431" pos:column="27">=</op:operator> <name pos:line="431" pos:column="29">MAX_PATH</name></expr>;</expr_stmt>

    <for pos:line="433" pos:column="5">for (<init><decl><type><name pos:line="433" pos:column="10">HTREEITEM</name></type> <name pos:line="433" pos:column="20">hItemNode</name> <init pos:line="433" pos:column="30">= <expr><call><name><name pos:line="433" pos:column="32">_treeView</name><op:operator pos:line="433" pos:column="41">.</op:operator><name pos:line="433" pos:column="42">getChildFrom</name></name><argument_list pos:line="433" pos:column="54">(<argument><expr><name pos:line="433" pos:column="55">hItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="434" pos:column="17">hItemNode</name> <op:operator pos:line="434" pos:column="27">!=</op:operator> <name pos:line="434" pos:column="30">NULL</name></expr>;</condition>
		<incr><expr><name pos:line="435" pos:column="17">hItemNode</name> <op:operator pos:line="435" pos:column="27">=</op:operator> <call><name><name pos:line="435" pos:column="29">_treeView</name><op:operator pos:line="435" pos:column="38">.</op:operator><name pos:line="435" pos:column="39">getNextSibling</name></name><argument_list pos:line="435" pos:column="53">(<argument><expr><name pos:line="435" pos:column="54">hItemNode</name></expr></argument>)</argument_list></call></expr></incr>)
	<block pos:line="436" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="437" pos:column="17">tvItem</name><op:operator pos:line="437" pos:column="23">.</op:operator><name pos:line="437" pos:column="24">hItem</name></name> <op:operator pos:line="437" pos:column="30">=</op:operator> <name pos:line="437" pos:column="32">hItemNode</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="438" pos:column="17">SendMessage</name><argument_list pos:line="438" pos:column="28">(<argument><expr><call><name><name pos:line="438" pos:column="29">_treeView</name><op:operator pos:line="438" pos:column="38">.</op:operator><name pos:line="438" pos:column="39">getHSelf</name></name><argument_list pos:line="438" pos:column="47">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="438" pos:column="51">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="438" pos:column="64">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="438" pos:column="66">(</op:operator><name pos:line="438" pos:column="67">LPARAM</name><op:operator pos:line="438" pos:column="73">)</op:operator><op:operator pos:line="438" pos:column="74">&amp;</op:operator><name pos:line="438" pos:column="75">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="439" pos:column="17">if <condition pos:line="439" pos:column="20">(<expr><name><name pos:line="439" pos:column="21">tvItem</name><op:operator pos:line="439" pos:column="27">.</op:operator><name pos:line="439" pos:column="28">lParam</name></name> <op:operator pos:line="439" pos:column="35">!=</op:operator> <name pos:line="439" pos:column="38">NULL</name></expr>)</condition><then pos:line="439" pos:column="43">
		<block pos:line="440" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="441" pos:column="25">generic_string</name> <type:modifier pos:line="441" pos:column="40">*</type:modifier></type><name pos:line="441" pos:column="41">fn</name> <init pos:line="441" pos:column="44">= <expr><op:operator pos:line="441" pos:column="46">(</op:operator><name pos:line="441" pos:column="47">generic_string</name> <op:operator pos:line="441" pos:column="62">*</op:operator><op:operator pos:line="441" pos:column="63">)</op:operator><name><name pos:line="441" pos:column="64">tvItem</name><op:operator pos:line="441" pos:column="70">.</op:operator><name pos:line="441" pos:column="71">lParam</name></name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="442" pos:column="25">generic_string</name></type> <name pos:line="442" pos:column="40">newFn</name> <init pos:line="442" pos:column="46">= <expr><call><name pos:line="442" pos:column="48">getRelativePath</name><argument_list pos:line="442" pos:column="63">(<argument><expr><op:operator pos:line="442" pos:column="64">*</op:operator><name pos:line="442" pos:column="65">fn</name></expr></argument>, <argument><expr><name pos:line="442" pos:column="69">fn2write</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="443" pos:column="25">TiXmlNode</name> <type:modifier pos:line="443" pos:column="35">*</type:modifier></type><name pos:line="443" pos:column="36">fileLeaf</name> <init pos:line="443" pos:column="45">= <expr><call><name><name pos:line="443" pos:column="47">node</name><op:operator pos:line="443" pos:column="51">-&gt;</op:operator><name pos:line="443" pos:column="53">InsertEndChild</name></name><argument_list pos:line="443" pos:column="67">(<argument><expr><call><name pos:line="443" pos:column="68">TiXmlElement</name><argument_list pos:line="443" pos:column="80">(<argument><expr><call><name pos:line="443" pos:column="81">TEXT</name><argument_list pos:line="443" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="443" pos:column="86">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="444" pos:column="25">fileLeaf</name><op:operator pos:line="444" pos:column="33">-&gt;</op:operator><name pos:line="444" pos:column="35">ToElement</name></name><argument_list pos:line="444" pos:column="44">()</argument_list></call><op:operator pos:line="444" pos:column="46">-&gt;</op:operator><call><name pos:line="444" pos:column="48">SetAttribute</name><argument_list pos:line="444" pos:column="60">(<argument><expr><call><name pos:line="444" pos:column="61">TEXT</name><argument_list pos:line="444" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="444" pos:column="66">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="444" pos:column="75">newFn</name><op:operator pos:line="444" pos:column="80">.</op:operator><name pos:line="444" pos:column="81">c_str</name></name><argument_list pos:line="444" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="446" pos:column="17">else
		<block pos:line="447" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="448" pos:column="25">TiXmlNode</name> <type:modifier pos:line="448" pos:column="35">*</type:modifier></type><name pos:line="448" pos:column="36">folderNode</name> <init pos:line="448" pos:column="47">= <expr><call><name><name pos:line="448" pos:column="49">node</name><op:operator pos:line="448" pos:column="53">-&gt;</op:operator><name pos:line="448" pos:column="55">InsertEndChild</name></name><argument_list pos:line="448" pos:column="69">(<argument><expr><call><name pos:line="448" pos:column="70">TiXmlElement</name><argument_list pos:line="448" pos:column="82">(<argument><expr><call><name pos:line="448" pos:column="83">TEXT</name><argument_list pos:line="448" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="448" pos:column="88">"Folder"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="449" pos:column="25">folderNode</name><op:operator pos:line="449" pos:column="35">-&gt;</op:operator><name pos:line="449" pos:column="37">ToElement</name></name><argument_list pos:line="449" pos:column="46">()</argument_list></call><op:operator pos:line="449" pos:column="48">-&gt;</op:operator><call><name pos:line="449" pos:column="50">SetAttribute</name><argument_list pos:line="449" pos:column="62">(<argument><expr><call><name pos:line="449" pos:column="63">TEXT</name><argument_list pos:line="449" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="449" pos:column="68">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="449" pos:column="77">tvItem</name><op:operator pos:line="449" pos:column="83">.</op:operator><name pos:line="449" pos:column="84">pszText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="450" pos:column="25">buildProjectXml</name><argument_list pos:line="450" pos:column="40">(<argument><expr><name pos:line="450" pos:column="41">folderNode</name></expr></argument>, <argument><expr><name pos:line="450" pos:column="53">hItemNode</name></expr></argument>, <argument><expr><name pos:line="450" pos:column="64">fn2write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="455" pos:column="1">generic_string</name></type> <name><name pos:line="455" pos:column="16">ProjectPanel</name><op:operator pos:line="455" pos:column="28">::</op:operator><name pos:line="455" pos:column="30">getRelativePath</name></name><parameter_list pos:line="455" pos:column="45">(<param><decl><type><specifier pos:line="455" pos:column="46">const</specifier> <name pos:line="455" pos:column="52">generic_string</name> <type:modifier pos:line="455" pos:column="67">&amp;</type:modifier></type> <name pos:line="455" pos:column="69">filePath</name></decl></param>, <param><decl><type><specifier pos:line="455" pos:column="79">const</specifier> <name pos:line="455" pos:column="85">TCHAR</name> <type:modifier pos:line="455" pos:column="91">*</type:modifier></type><name pos:line="455" pos:column="92">workSpaceFileName</name></decl></param>)</parameter_list>
<block pos:line="456" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="457" pos:column="9">TCHAR</name></type> <name><name pos:line="457" pos:column="15">wsfn</name><index pos:line="457" pos:column="19">[<expr><name pos:line="457" pos:column="20">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="458" pos:column="9">lstrcpy</name><argument_list pos:line="458" pos:column="16">(<argument><expr><name pos:line="458" pos:column="17">wsfn</name></expr></argument>, <argument><expr><name pos:line="458" pos:column="23">workSpaceFileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="459" pos:column="9">::</op:operator><name pos:line="459" pos:column="11">PathRemoveFileSpec</name></name><argument_list pos:line="459" pos:column="29">(<argument><expr><name pos:line="459" pos:column="30">wsfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="461" pos:column="9">size_t</name></type> <name pos:line="461" pos:column="16">pos_found</name> <init pos:line="461" pos:column="26">= <expr><call><name><name pos:line="461" pos:column="28">filePath</name><op:operator pos:line="461" pos:column="36">.</op:operator><name pos:line="461" pos:column="37">find</name></name><argument_list pos:line="461" pos:column="41">(<argument><expr><name pos:line="461" pos:column="42">wsfn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="462" pos:column="9">if <condition pos:line="462" pos:column="12">(<expr><name pos:line="462" pos:column="13">pos_found</name> <op:operator pos:line="462" pos:column="23">==</op:operator> <name><name pos:line="462" pos:column="26">generic_string</name><op:operator pos:line="462" pos:column="40">::</op:operator><name pos:line="462" pos:column="42">npos</name></name></expr>)</condition><then pos:line="462" pos:column="47">
		<return pos:line="463" pos:column="17">return <expr><name pos:line="463" pos:column="24">filePath</name></expr>;</return></then></if>
	<decl_stmt><decl><type><specifier pos:line="464" pos:column="9">const</specifier> <name pos:line="464" pos:column="15">TCHAR</name> <type:modifier pos:line="464" pos:column="21">*</type:modifier></type><name pos:line="464" pos:column="22">relativeFile</name> <init pos:line="464" pos:column="35">= <expr><call><name><name pos:line="464" pos:column="37">filePath</name><op:operator pos:line="464" pos:column="45">.</op:operator><name pos:line="464" pos:column="46">c_str</name></name><argument_list pos:line="464" pos:column="51">()</argument_list></call> <op:operator pos:line="464" pos:column="54">+</op:operator> <call><name pos:line="464" pos:column="56">lstrlen</name><argument_list pos:line="464" pos:column="63">(<argument><expr><name pos:line="464" pos:column="64">wsfn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="465" pos:column="9">if <condition pos:line="465" pos:column="12">(<expr><name><name pos:line="465" pos:column="13">relativeFile</name><index pos:line="465" pos:column="25">[<expr><lit:literal type="number" pos:line="465" pos:column="26">0</lit:literal></expr>]</index></name> <op:operator pos:line="465" pos:column="29">==</op:operator> <lit:literal type="char" pos:line="465" pos:column="32">'\\'</lit:literal></expr>)</condition><then pos:line="465" pos:column="37">
		<expr_stmt><expr><name pos:line="466" pos:column="17">relativeFile</name><op:operator pos:line="466" pos:column="29">++</op:operator></expr>;</expr_stmt></then></if>
	<return pos:line="467" pos:column="9">return <expr><name pos:line="467" pos:column="16">relativeFile</name></expr>;</return>
}</block></function>

<function><type><name pos:line="470" pos:column="1">bool</name></type> <name><name pos:line="470" pos:column="6">ProjectPanel</name><op:operator pos:line="470" pos:column="18">::</op:operator><name pos:line="470" pos:column="20">buildTreeFrom</name></name><parameter_list pos:line="470" pos:column="33">(<param><decl><type><name pos:line="470" pos:column="34">TiXmlNode</name> <type:modifier pos:line="470" pos:column="44">*</type:modifier></type><name pos:line="470" pos:column="45">projectRoot</name></decl></param>, <param><decl><type><name pos:line="470" pos:column="58">HTREEITEM</name></type> <name pos:line="470" pos:column="68">hParentItem</name></decl></param>)</parameter_list>
<block pos:line="471" pos:column="1">{
	<for pos:line="472" pos:column="9">for (<init><decl><type><name pos:line="472" pos:column="14">TiXmlNode</name> <type:modifier pos:line="472" pos:column="24">*</type:modifier></type><name pos:line="472" pos:column="25">childNode</name> <init pos:line="472" pos:column="35">= <expr><call><name><name pos:line="472" pos:column="37">projectRoot</name><op:operator pos:line="472" pos:column="48">-&gt;</op:operator><name pos:line="472" pos:column="50">FirstChildElement</name></name><argument_list pos:line="472" pos:column="67">()</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="473" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="474" pos:column="17">childNode</name> <op:operator pos:line="474" pos:column="27">=</op:operator> <call><name><name pos:line="474" pos:column="29">childNode</name><op:operator pos:line="474" pos:column="38">-&gt;</op:operator><name pos:line="474" pos:column="40">NextSibling</name></name><argument_list pos:line="474" pos:column="51">()</argument_list></call></expr></incr>)
	<block pos:line="475" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="476" pos:column="17">const</specifier> <name pos:line="476" pos:column="23">TCHAR</name> <type:modifier pos:line="476" pos:column="29">*</type:modifier></type><name pos:line="476" pos:column="30">v</name> <init pos:line="476" pos:column="32">= <expr><call><name><name pos:line="476" pos:column="34">childNode</name><op:operator pos:line="476" pos:column="43">-&gt;</op:operator><name pos:line="476" pos:column="45">Value</name></name><argument_list pos:line="476" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="477" pos:column="17">if <condition pos:line="477" pos:column="20">(<expr><call><name pos:line="477" pos:column="21">lstrcmp</name><argument_list pos:line="477" pos:column="28">(<argument><expr><call><name pos:line="477" pos:column="29">TEXT</name><argument_list pos:line="477" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="477" pos:column="34">"Folder"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="477" pos:column="45">v</name></expr></argument>)</argument_list></call> <op:operator pos:line="477" pos:column="48">==</op:operator> <lit:literal type="number" pos:line="477" pos:column="51">0</lit:literal></expr>)</condition><then pos:line="477" pos:column="53">
		<block pos:line="478" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="479" pos:column="25">HTREEITEM</name></type> <name pos:line="479" pos:column="35">addedItem</name> <init pos:line="479" pos:column="45">= <expr><call><name><name pos:line="479" pos:column="47">_treeView</name><op:operator pos:line="479" pos:column="56">.</op:operator><name pos:line="479" pos:column="57">addItem</name></name><argument_list pos:line="479" pos:column="64">(<argument><expr><op:operator pos:line="479" pos:column="65">(</op:operator><call><name><name pos:line="479" pos:column="66">childNode</name><op:operator pos:line="479" pos:column="75">-&gt;</op:operator><name pos:line="479" pos:column="77">ToElement</name></name><argument_list pos:line="479" pos:column="86">()</argument_list></call><op:operator pos:line="479" pos:column="88">)</op:operator><op:operator pos:line="479" pos:column="89">-&gt;</op:operator><call><name pos:line="479" pos:column="91">Attribute</name><argument_list pos:line="479" pos:column="100">(<argument><expr><call><name pos:line="479" pos:column="101">TEXT</name><argument_list pos:line="479" pos:column="105">(<argument><expr><lit:literal type="string" pos:line="479" pos:column="106">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="479" pos:column="116">hParentItem</name></expr></argument>, <argument><expr><name pos:line="479" pos:column="129">INDEX_CLOSED_NODE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="480" pos:column="25">if <condition pos:line="480" pos:column="28">(<expr><op:operator pos:line="480" pos:column="29">!</op:operator><call><name><name pos:line="480" pos:column="30">childNode</name><op:operator pos:line="480" pos:column="39">-&gt;</op:operator><name pos:line="480" pos:column="41">NoChildren</name></name><argument_list pos:line="480" pos:column="51">()</argument_list></call></expr>)</condition><then pos:line="480" pos:column="54">
			<block pos:line="481" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="482" pos:column="33">bool</name></type> <name pos:line="482" pos:column="38">isOK</name> <init pos:line="482" pos:column="43">= <expr><call><name pos:line="482" pos:column="45">buildTreeFrom</name><argument_list pos:line="482" pos:column="58">(<argument><expr><name pos:line="482" pos:column="59">childNode</name></expr></argument>, <argument><expr><name pos:line="482" pos:column="70">addedItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="483" pos:column="33">if <condition pos:line="483" pos:column="36">(<expr><op:operator pos:line="483" pos:column="37">!</op:operator><name pos:line="483" pos:column="38">isOK</name></expr>)</condition><then pos:line="483" pos:column="43">
					<return pos:line="484" pos:column="41">return <expr><lit:literal type="boolean" pos:line="484" pos:column="48">false</lit:literal></expr>;</return></then></if>
			}</block></then></if>
		}</block></then>
		<else pos:line="487" pos:column="17">else <if pos:line="487" pos:column="22">if <condition pos:line="487" pos:column="25">(<expr><call><name pos:line="487" pos:column="26">lstrcmp</name><argument_list pos:line="487" pos:column="33">(<argument><expr><call><name pos:line="487" pos:column="34">TEXT</name><argument_list pos:line="487" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="487" pos:column="39">"File"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="487" pos:column="48">v</name></expr></argument>)</argument_list></call> <op:operator pos:line="487" pos:column="51">==</op:operator> <lit:literal type="number" pos:line="487" pos:column="54">0</lit:literal></expr>)</condition><then pos:line="487" pos:column="56">
		<block pos:line="488" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="489" pos:column="25">const</specifier> <name pos:line="489" pos:column="31">TCHAR</name> <type:modifier pos:line="489" pos:column="37">*</type:modifier></type><name pos:line="489" pos:column="38">strValue</name> <init pos:line="489" pos:column="47">= <expr><op:operator pos:line="489" pos:column="49">(</op:operator><call><name><name pos:line="489" pos:column="50">childNode</name><op:operator pos:line="489" pos:column="59">-&gt;</op:operator><name pos:line="489" pos:column="61">ToElement</name></name><argument_list pos:line="489" pos:column="70">()</argument_list></call><op:operator pos:line="489" pos:column="72">)</op:operator><op:operator pos:line="489" pos:column="73">-&gt;</op:operator><call><name pos:line="489" pos:column="75">Attribute</name><argument_list pos:line="489" pos:column="84">(<argument><expr><call><name pos:line="489" pos:column="85">TEXT</name><argument_list pos:line="489" pos:column="89">(<argument><expr><lit:literal type="string" pos:line="489" pos:column="90">"name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="490" pos:column="25">generic_string</name></type> <name pos:line="490" pos:column="40">fullPath</name> <init pos:line="490" pos:column="49">= <expr><call><name pos:line="490" pos:column="51">getAbsoluteFilePath</name><argument_list pos:line="490" pos:column="70">(<argument><expr><name pos:line="490" pos:column="71">strValue</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="491" pos:column="25">TCHAR</name> <type:modifier pos:line="491" pos:column="31">*</type:modifier></type><name pos:line="491" pos:column="32">strValueLabel</name> <init pos:line="491" pos:column="46">= <expr><call><name><op:operator pos:line="491" pos:column="48">::</op:operator><name pos:line="491" pos:column="50">PathFindFileName</name></name><argument_list pos:line="491" pos:column="66">(<argument><expr><name pos:line="491" pos:column="67">strValue</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="492" pos:column="25">int</name></type> <name pos:line="492" pos:column="29">iImage</name> <init pos:line="492" pos:column="36">= <expr><call><name><op:operator pos:line="492" pos:column="38">::</op:operator><name pos:line="492" pos:column="40">PathFileExists</name></name><argument_list pos:line="492" pos:column="54">(<argument><expr><call><name><name pos:line="492" pos:column="55">fullPath</name><op:operator pos:line="492" pos:column="63">.</op:operator><name pos:line="492" pos:column="64">c_str</name></name><argument_list pos:line="492" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="492" pos:column="72">?</op:operator><name pos:line="492" pos:column="73">INDEX_LEAF</name><op:operator pos:line="492" pos:column="83">:</op:operator><name pos:line="492" pos:column="84">INDEX_LEAF_INVALID</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="493" pos:column="25">_treeView</name><op:operator pos:line="493" pos:column="34">.</op:operator><name pos:line="493" pos:column="35">addItem</name></name><argument_list pos:line="493" pos:column="42">(<argument><expr><name pos:line="493" pos:column="43">strValueLabel</name></expr></argument>, <argument><expr><name pos:line="493" pos:column="58">hParentItem</name></expr></argument>, <argument><expr><name pos:line="493" pos:column="71">iImage</name></expr></argument>, <argument><expr><call><name><name pos:line="493" pos:column="79">fullPath</name><op:operator pos:line="493" pos:column="87">.</op:operator><name pos:line="493" pos:column="88">c_str</name></name><argument_list pos:line="493" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if></else></if>
	}</block></for>
	<return pos:line="496" pos:column="9">return <expr><lit:literal type="boolean" pos:line="496" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="499" pos:column="1">generic_string</name></type> <name><name pos:line="499" pos:column="16">ProjectPanel</name><op:operator pos:line="499" pos:column="28">::</op:operator><name pos:line="499" pos:column="30">getAbsoluteFilePath</name></name><parameter_list pos:line="499" pos:column="49">(<param><decl><type><specifier pos:line="499" pos:column="50">const</specifier> <name pos:line="499" pos:column="56">TCHAR</name> <type:modifier pos:line="499" pos:column="62">*</type:modifier></type> <name pos:line="499" pos:column="64">relativePath</name></decl></param>)</parameter_list>
<block pos:line="500" pos:column="1">{
	<if pos:line="501" pos:column="9">if <condition pos:line="501" pos:column="12">(<expr><op:operator pos:line="501" pos:column="13">!</op:operator><call><name><op:operator pos:line="501" pos:column="14">::</op:operator><name pos:line="501" pos:column="16">PathIsRelative</name></name><argument_list pos:line="501" pos:column="30">(<argument><expr><name pos:line="501" pos:column="31">relativePath</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="501" pos:column="45">
		<return pos:line="502" pos:column="17">return <expr><name pos:line="502" pos:column="24">relativePath</name></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="504" pos:column="9">TCHAR</name></type> <name><name pos:line="504" pos:column="15">absolutePath</name><index pos:line="504" pos:column="27">[<expr><name pos:line="504" pos:column="28">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="505" pos:column="9">lstrcpy</name><argument_list pos:line="505" pos:column="16">(<argument><expr><name pos:line="505" pos:column="17">absolutePath</name></expr></argument>, <argument><expr><call><name><name pos:line="505" pos:column="31">_workSpaceFilePath</name><op:operator pos:line="505" pos:column="49">.</op:operator><name pos:line="505" pos:column="50">c_str</name></name><argument_list pos:line="505" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="506" pos:column="9">::</op:operator><name pos:line="506" pos:column="11">PathRemoveFileSpec</name></name><argument_list pos:line="506" pos:column="29">(<argument><expr><name pos:line="506" pos:column="30">absolutePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="507" pos:column="9">::</op:operator><name pos:line="507" pos:column="11">PathAppend</name></name><argument_list pos:line="507" pos:column="21">(<argument><expr><name pos:line="507" pos:column="22">absolutePath</name></expr></argument>, <argument><expr><name pos:line="507" pos:column="36">relativePath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="508" pos:column="9">return <expr><name pos:line="508" pos:column="16">absolutePath</name></expr>;</return>
}</block></function>

<function><type><name pos:line="511" pos:column="1">void</name></type> <name><name pos:line="511" pos:column="6">ProjectPanel</name><op:operator pos:line="511" pos:column="18">::</op:operator><name pos:line="511" pos:column="20">openSelectFile</name></name><parameter_list pos:line="511" pos:column="34">()</parameter_list>
<block pos:line="512" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="513" pos:column="9">TVITEM</name></type> <name pos:line="513" pos:column="16">tvItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="514" pos:column="9">tvItem</name><op:operator pos:line="514" pos:column="15">.</op:operator><name pos:line="514" pos:column="16">mask</name></name> <op:operator pos:line="514" pos:column="21">=</op:operator> <name pos:line="514" pos:column="23">TVIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="515" pos:column="9">tvItem</name><op:operator pos:line="515" pos:column="15">.</op:operator><name pos:line="515" pos:column="16">hItem</name></name> <op:operator pos:line="515" pos:column="22">=</op:operator> <call><name><name pos:line="515" pos:column="24">_treeView</name><op:operator pos:line="515" pos:column="33">.</op:operator><name pos:line="515" pos:column="34">getSelection</name></name><argument_list pos:line="515" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="516" pos:column="9">::</op:operator><name pos:line="516" pos:column="11">SendMessage</name></name><argument_list pos:line="516" pos:column="22">(<argument><expr><call><name><name pos:line="516" pos:column="23">_treeView</name><op:operator pos:line="516" pos:column="32">.</op:operator><name pos:line="516" pos:column="33">getHSelf</name></name><argument_list pos:line="516" pos:column="41">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="516" pos:column="45">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="516" pos:column="58">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="516" pos:column="60">(</op:operator><name pos:line="516" pos:column="61">LPARAM</name><op:operator pos:line="516" pos:column="67">)</op:operator><op:operator pos:line="516" pos:column="68">&amp;</op:operator><name pos:line="516" pos:column="69">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="518" pos:column="9">NodeType</name></type> <name pos:line="518" pos:column="18">nType</name> <init pos:line="518" pos:column="24">= <expr><call><name pos:line="518" pos:column="26">getNodeType</name><argument_list pos:line="518" pos:column="37">(<argument><expr><name><name pos:line="518" pos:column="38">tvItem</name><op:operator pos:line="518" pos:column="44">.</op:operator><name pos:line="518" pos:column="45">hItem</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="519" pos:column="9">generic_string</name> <type:modifier pos:line="519" pos:column="24">*</type:modifier></type><name pos:line="519" pos:column="25">fn</name> <init pos:line="519" pos:column="28">= <expr><op:operator pos:line="519" pos:column="30">(</op:operator><name pos:line="519" pos:column="31">generic_string</name> <op:operator pos:line="519" pos:column="46">*</op:operator><op:operator pos:line="519" pos:column="47">)</op:operator><name><name pos:line="519" pos:column="48">tvItem</name><op:operator pos:line="519" pos:column="54">.</op:operator><name pos:line="519" pos:column="55">lParam</name></name></expr></init></decl>;</decl_stmt>
	<if pos:line="520" pos:column="9">if <condition pos:line="520" pos:column="12">(<expr><name pos:line="520" pos:column="13">nType</name> <op:operator pos:line="520" pos:column="19">==</op:operator> <name pos:line="520" pos:column="22">nodeType_file</name> <op:operator pos:line="520" pos:column="36">&amp;&amp;</op:operator> <name pos:line="520" pos:column="39">fn</name></expr>)</condition><then pos:line="520" pos:column="42">
	<block pos:line="521" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="522" pos:column="17">tvItem</name><op:operator pos:line="522" pos:column="23">.</op:operator><name pos:line="522" pos:column="24">mask</name></name> <op:operator pos:line="522" pos:column="29">=</op:operator> <name pos:line="522" pos:column="31">TVIF_IMAGE</name> <op:operator pos:line="522" pos:column="42">|</op:operator> <name pos:line="522" pos:column="44">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
		<if pos:line="523" pos:column="17">if <condition pos:line="523" pos:column="20">(<expr><call><name><op:operator pos:line="523" pos:column="21">::</op:operator><name pos:line="523" pos:column="23">PathFileExists</name></name><argument_list pos:line="523" pos:column="37">(<argument><expr><call><name><name pos:line="523" pos:column="38">fn</name><op:operator pos:line="523" pos:column="40">-&gt;</op:operator><name pos:line="523" pos:column="42">c_str</name></name><argument_list pos:line="523" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="523" pos:column="51">
		<block pos:line="524" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="525" pos:column="25">::</op:operator><name pos:line="525" pos:column="27">SendMessage</name></name><argument_list pos:line="525" pos:column="38">(<argument><expr><name pos:line="525" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="525" pos:column="49">NPPM_DOOPEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="525" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><call pos:line="525" pos:column="65">(<name pos:line="525" pos:column="66">LPARAM</name>)<argument_list pos:line="525" pos:column="73">(<argument><expr><call><name><name pos:line="525" pos:column="74">fn</name><op:operator pos:line="525" pos:column="76">-&gt;</op:operator><name pos:line="525" pos:column="78">c_str</name></name><argument_list pos:line="525" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="526" pos:column="25">tvItem</name><op:operator pos:line="526" pos:column="31">.</op:operator><name pos:line="526" pos:column="32">iImage</name></name> <op:operator pos:line="526" pos:column="39">=</op:operator> <name pos:line="526" pos:column="41">INDEX_LEAF</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="527" pos:column="25">tvItem</name><op:operator pos:line="527" pos:column="31">.</op:operator><name pos:line="527" pos:column="32">iSelectedImage</name></name> <op:operator pos:line="527" pos:column="47">=</op:operator> <name pos:line="527" pos:column="49">INDEX_LEAF</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="529" pos:column="17">else
		<block pos:line="530" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="531" pos:column="25">tvItem</name><op:operator pos:line="531" pos:column="31">.</op:operator><name pos:line="531" pos:column="32">iImage</name></name> <op:operator pos:line="531" pos:column="39">=</op:operator> <name pos:line="531" pos:column="41">INDEX_LEAF_INVALID</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="532" pos:column="25">tvItem</name><op:operator pos:line="532" pos:column="31">.</op:operator><name pos:line="532" pos:column="32">iSelectedImage</name></name> <op:operator pos:line="532" pos:column="47">=</op:operator> <name pos:line="532" pos:column="49">INDEX_LEAF_INVALID</name></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name pos:line="534" pos:column="17">TreeView_SetItem</name><argument_list pos:line="534" pos:column="33">(<argument><expr><call><name><name pos:line="534" pos:column="34">_treeView</name><op:operator pos:line="534" pos:column="43">.</op:operator><name pos:line="534" pos:column="44">getHSelf</name></name><argument_list pos:line="534" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="534" pos:column="56">&amp;</op:operator><name pos:line="534" pos:column="57">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>


<function><type><name pos:line="539" pos:column="1">void</name></type> <name><name pos:line="539" pos:column="6">ProjectPanel</name><op:operator pos:line="539" pos:column="18">::</op:operator><name pos:line="539" pos:column="20">notified</name></name><parameter_list pos:line="539" pos:column="28">(<param><decl><type><name pos:line="539" pos:column="29">LPNMHDR</name></type> <name pos:line="539" pos:column="37">notification</name></decl></param>)</parameter_list>
<block pos:line="540" pos:column="1">{
	<if pos:line="541" pos:column="9">if<condition pos:line="541" pos:column="11">(<expr><op:operator pos:line="541" pos:column="12">(</op:operator><name><name pos:line="541" pos:column="13">notification</name><op:operator pos:line="541" pos:column="25">-&gt;</op:operator><name pos:line="541" pos:column="27">hwndFrom</name></name> <op:operator pos:line="541" pos:column="36">==</op:operator> <call><name><name pos:line="541" pos:column="39">_treeView</name><op:operator pos:line="541" pos:column="48">.</op:operator><name pos:line="541" pos:column="49">getHSelf</name></name><argument_list pos:line="541" pos:column="57">()</argument_list></call><op:operator pos:line="541" pos:column="59">)</op:operator></expr>)</condition><then pos:line="541" pos:column="61">
	<block pos:line="542" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="543" pos:column="17">TCHAR</name></type> <name><name pos:line="543" pos:column="23">textBuffer</name><index pos:line="543" pos:column="33">[<expr><name pos:line="543" pos:column="34">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="544" pos:column="17">TVITEM</name></type> <name pos:line="544" pos:column="24">tvItem</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="545" pos:column="17">tvItem</name><op:operator pos:line="545" pos:column="23">.</op:operator><name pos:line="545" pos:column="24">mask</name></name> <op:operator pos:line="545" pos:column="29">=</op:operator> <name pos:line="545" pos:column="31">TVIF_TEXT</name> <op:operator pos:line="545" pos:column="41">|</op:operator> <name pos:line="545" pos:column="43">TVIF_PARAM</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="546" pos:column="17">tvItem</name><op:operator pos:line="546" pos:column="23">.</op:operator><name pos:line="546" pos:column="24">pszText</name></name> <op:operator pos:line="546" pos:column="32">=</op:operator> <name pos:line="546" pos:column="34">textBuffer</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="547" pos:column="17">tvItem</name><op:operator pos:line="547" pos:column="23">.</op:operator><name pos:line="547" pos:column="24">cchTextMax</name></name> <op:operator pos:line="547" pos:column="35">=</op:operator> <name pos:line="547" pos:column="37">MAX_PATH</name></expr>;</expr_stmt>

		<switch pos:line="549" pos:column="17">switch <condition pos:line="549" pos:column="24">(<expr><name><name pos:line="549" pos:column="25">notification</name><op:operator pos:line="549" pos:column="37">-&gt;</op:operator><name pos:line="549" pos:column="39">code</name></name></expr>)</condition>
		<block pos:line="550" pos:column="17">{
			<case pos:line="551" pos:column="25">case <expr><name pos:line="551" pos:column="30">NM_DBLCLK</name></expr>:
			<block pos:line="552" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="553" pos:column="33">openSelectFile</name><argument_list pos:line="553" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			}</block>
			<break pos:line="555" pos:column="25">break;</break>
	
			</case><case pos:line="557" pos:column="25">case <expr><name pos:line="557" pos:column="30">TVN_ENDLABELEDIT</name></expr>:
			<block pos:line="558" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="559" pos:column="33">LPNMTVDISPINFO</name></type> <name pos:line="559" pos:column="48">tvnotif</name> <init pos:line="559" pos:column="56">= <expr><op:operator pos:line="559" pos:column="58">(</op:operator><name pos:line="559" pos:column="59">LPNMTVDISPINFO</name><op:operator pos:line="559" pos:column="73">)</op:operator><name pos:line="559" pos:column="74">notification</name></expr></init></decl>;</decl_stmt>
				<if pos:line="560" pos:column="33">if <condition pos:line="560" pos:column="36">(<expr><op:operator pos:line="560" pos:column="37">!</op:operator><name><name pos:line="560" pos:column="38">tvnotif</name><op:operator pos:line="560" pos:column="45">-&gt;</op:operator><name pos:line="560" pos:column="47">item</name><op:operator pos:line="560" pos:column="51">.</op:operator><name pos:line="560" pos:column="52">pszText</name></name></expr>)</condition><then pos:line="560" pos:column="60">
					<return pos:line="561" pos:column="41">return;</return></then></if>
				<if pos:line="562" pos:column="33">if <condition pos:line="562" pos:column="36">(<expr><call><name pos:line="562" pos:column="37">getNodeType</name><argument_list pos:line="562" pos:column="48">(<argument><expr><name><name pos:line="562" pos:column="49">tvnotif</name><op:operator pos:line="562" pos:column="56">-&gt;</op:operator><name pos:line="562" pos:column="58">item</name><op:operator pos:line="562" pos:column="62">.</op:operator><name pos:line="562" pos:column="63">hItem</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="562" pos:column="70">==</op:operator> <name pos:line="562" pos:column="73">nodeType_root</name></expr>)</condition><then pos:line="562" pos:column="87">
					<return pos:line="563" pos:column="41">return;</return></then></if>

				<comment type="line" pos:line="565" pos:column="33">// Processing for only File case</comment>
				<if pos:line="566" pos:column="33">if <condition pos:line="566" pos:column="36">(<expr><name><name pos:line="566" pos:column="37">tvnotif</name><op:operator pos:line="566" pos:column="44">-&gt;</op:operator><name pos:line="566" pos:column="46">item</name><op:operator pos:line="566" pos:column="50">.</op:operator><name pos:line="566" pos:column="51">lParam</name></name></expr>)</condition><then pos:line="566" pos:column="58"> 
				<block pos:line="567" pos:column="33">{
					<comment type="line" pos:line="568" pos:column="41">// Get the old label</comment>
					<expr_stmt><expr><name><name pos:line="569" pos:column="41">tvItem</name><op:operator pos:line="569" pos:column="47">.</op:operator><name pos:line="569" pos:column="48">hItem</name></name> <op:operator pos:line="569" pos:column="54">=</op:operator> <call><name><name pos:line="569" pos:column="56">_treeView</name><op:operator pos:line="569" pos:column="65">.</op:operator><name pos:line="569" pos:column="66">getSelection</name></name><argument_list pos:line="569" pos:column="78">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="570" pos:column="41">::</op:operator><name pos:line="570" pos:column="43">SendMessage</name></name><argument_list pos:line="570" pos:column="54">(<argument><expr><call><name><name pos:line="570" pos:column="55">_treeView</name><op:operator pos:line="570" pos:column="64">.</op:operator><name pos:line="570" pos:column="65">getHSelf</name></name><argument_list pos:line="570" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="570" pos:column="77">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="570" pos:column="90">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="570" pos:column="92">(</op:operator><name pos:line="570" pos:column="93">LPARAM</name><op:operator pos:line="570" pos:column="99">)</op:operator><op:operator pos:line="570" pos:column="100">&amp;</op:operator><name pos:line="570" pos:column="101">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="571" pos:column="41">size_t</name></type> <name pos:line="571" pos:column="48">len</name> <init pos:line="571" pos:column="52">= <expr><call><name pos:line="571" pos:column="54">lstrlen</name><argument_list pos:line="571" pos:column="61">(<argument><expr><name><name pos:line="571" pos:column="62">tvItem</name><op:operator pos:line="571" pos:column="68">.</op:operator><name pos:line="571" pos:column="69">pszText</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<comment type="line" pos:line="573" pos:column="41">// Find the position of old label in File path</comment>
					<decl_stmt><decl><type><name pos:line="574" pos:column="41">generic_string</name> <type:modifier pos:line="574" pos:column="56">*</type:modifier></type><name pos:line="574" pos:column="57">filePath</name> <init pos:line="574" pos:column="66">= <expr><op:operator pos:line="574" pos:column="68">(</op:operator><name pos:line="574" pos:column="69">generic_string</name> <op:operator pos:line="574" pos:column="84">*</op:operator><op:operator pos:line="574" pos:column="85">)</op:operator><name><name pos:line="574" pos:column="86">tvnotif</name><op:operator pos:line="574" pos:column="93">-&gt;</op:operator><name pos:line="574" pos:column="95">item</name><op:operator pos:line="574" pos:column="99">.</op:operator><name pos:line="574" pos:column="100">lParam</name></name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="575" pos:column="41">size_t</name></type> <name pos:line="575" pos:column="48">found</name> <init pos:line="575" pos:column="54">= <expr><call><name><name pos:line="575" pos:column="56">filePath</name><op:operator pos:line="575" pos:column="64">-&gt;</op:operator><name pos:line="575" pos:column="66">rfind</name></name><argument_list pos:line="575" pos:column="71">(<argument><expr><name><name pos:line="575" pos:column="72">tvItem</name><op:operator pos:line="575" pos:column="78">.</op:operator><name pos:line="575" pos:column="79">pszText</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<comment type="line" pos:line="577" pos:column="41">// If found the old label, replace it with the modified one</comment>
					<if pos:line="578" pos:column="41">if <condition pos:line="578" pos:column="44">(<expr><name pos:line="578" pos:column="45">found</name> <op:operator pos:line="578" pos:column="51">!=</op:operator> <name><name pos:line="578" pos:column="54">generic_string</name><op:operator pos:line="578" pos:column="68">::</op:operator><name pos:line="578" pos:column="70">npos</name></name></expr>)</condition><then pos:line="578" pos:column="75">
						<expr_stmt><expr><call><name><name pos:line="579" pos:column="49">filePath</name><op:operator pos:line="579" pos:column="57">-&gt;</op:operator><name pos:line="579" pos:column="59">replace</name></name><argument_list pos:line="579" pos:column="66">(<argument><expr><name pos:line="579" pos:column="67">found</name></expr></argument>, <argument><expr><name pos:line="579" pos:column="74">len</name></expr></argument>, <argument><expr><name><name pos:line="579" pos:column="79">tvnotif</name><op:operator pos:line="579" pos:column="86">-&gt;</op:operator><name pos:line="579" pos:column="88">item</name><op:operator pos:line="579" pos:column="92">.</op:operator><name pos:line="579" pos:column="93">pszText</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

					<comment type="line" pos:line="581" pos:column="41">// Check the validity of modified file path</comment>
					<expr_stmt><expr><name><name pos:line="582" pos:column="41">tvItem</name><op:operator pos:line="582" pos:column="47">.</op:operator><name pos:line="582" pos:column="48">mask</name></name> <op:operator pos:line="582" pos:column="53">=</op:operator> <name pos:line="582" pos:column="55">TVIF_IMAGE</name> <op:operator pos:line="582" pos:column="66">|</op:operator> <name pos:line="582" pos:column="68">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
					<if pos:line="583" pos:column="41">if <condition pos:line="583" pos:column="44">(<expr><call><name><op:operator pos:line="583" pos:column="45">::</op:operator><name pos:line="583" pos:column="47">PathFileExists</name></name><argument_list pos:line="583" pos:column="61">(<argument><expr><call><name><name pos:line="583" pos:column="62">filePath</name><op:operator pos:line="583" pos:column="70">-&gt;</op:operator><name pos:line="583" pos:column="72">c_str</name></name><argument_list pos:line="583" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="583" pos:column="81">
					<block pos:line="584" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="585" pos:column="49">tvItem</name><op:operator pos:line="585" pos:column="55">.</op:operator><name pos:line="585" pos:column="56">iImage</name></name> <op:operator pos:line="585" pos:column="63">=</op:operator> <name pos:line="585" pos:column="65">INDEX_LEAF</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="586" pos:column="49">tvItem</name><op:operator pos:line="586" pos:column="55">.</op:operator><name pos:line="586" pos:column="56">iSelectedImage</name></name> <op:operator pos:line="586" pos:column="71">=</op:operator> <name pos:line="586" pos:column="73">INDEX_LEAF</name></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="588" pos:column="41">else
					<block pos:line="589" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="590" pos:column="49">tvItem</name><op:operator pos:line="590" pos:column="55">.</op:operator><name pos:line="590" pos:column="56">iImage</name></name> <op:operator pos:line="590" pos:column="63">=</op:operator> <name pos:line="590" pos:column="65">INDEX_LEAF_INVALID</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="591" pos:column="49">tvItem</name><op:operator pos:line="591" pos:column="55">.</op:operator><name pos:line="591" pos:column="56">iSelectedImage</name></name> <op:operator pos:line="591" pos:column="71">=</op:operator> <name pos:line="591" pos:column="73">INDEX_LEAF_INVALID</name></expr>;</expr_stmt>
					}</block></else></if>
					<expr_stmt><expr><call><name pos:line="593" pos:column="41">TreeView_SetItem</name><argument_list pos:line="593" pos:column="57">(<argument><expr><call><name><name pos:line="593" pos:column="58">_treeView</name><op:operator pos:line="593" pos:column="67">.</op:operator><name pos:line="593" pos:column="68">getHSelf</name></name><argument_list pos:line="593" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="593" pos:column="80">&amp;</op:operator><name pos:line="593" pos:column="81">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>

				<comment type="line" pos:line="596" pos:column="33">// For File, Folder and Project</comment>
				<expr_stmt><expr><call><name><op:operator pos:line="597" pos:column="33">::</op:operator><name pos:line="597" pos:column="35">SendMessage</name></name><argument_list pos:line="597" pos:column="46">(<argument><expr><call><name><name pos:line="597" pos:column="47">_treeView</name><op:operator pos:line="597" pos:column="56">.</op:operator><name pos:line="597" pos:column="57">getHSelf</name></name><argument_list pos:line="597" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="597" pos:column="69">TVM_SETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="597" pos:column="82">0</lit:literal></expr></argument>,<argument><expr><call pos:line="597" pos:column="84">(<name pos:line="597" pos:column="85">LPARAM</name>)<argument_list pos:line="597" pos:column="92">(<argument><expr><op:operator pos:line="597" pos:column="93">&amp;</op:operator><op:operator pos:line="597" pos:column="94">(</op:operator><name><name pos:line="597" pos:column="95">tvnotif</name><op:operator pos:line="597" pos:column="102">-&gt;</op:operator><name pos:line="597" pos:column="104">item</name></name><op:operator pos:line="597" pos:column="108">)</op:operator></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="598" pos:column="33">setWorkSpaceDirty</name><argument_list pos:line="598" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="598" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
			<break pos:line="600" pos:column="25">break;</break>

			</case><case pos:line="602" pos:column="25">case <expr><name pos:line="602" pos:column="30">TVN_GETINFOTIP</name></expr>:
			<block pos:line="603" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="604" pos:column="33">LPNMTVGETINFOTIP</name></type> <name pos:line="604" pos:column="50">lpGetInfoTip</name> <init pos:line="604" pos:column="63">= <expr><op:operator pos:line="604" pos:column="65">(</op:operator><name pos:line="604" pos:column="66">LPNMTVGETINFOTIP</name><op:operator pos:line="604" pos:column="82">)</op:operator><name pos:line="604" pos:column="83">notification</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="605" pos:column="33">generic_string</name> <type:modifier pos:line="605" pos:column="48">*</type:modifier></type><name pos:line="605" pos:column="49">str</name> <init pos:line="605" pos:column="53">= <expr><name pos:line="605" pos:column="55">NULL</name></expr></init></decl> ;</decl_stmt>

				<if pos:line="607" pos:column="33">if <condition pos:line="607" pos:column="36">(<expr><call><name><name pos:line="607" pos:column="37">_treeView</name><op:operator pos:line="607" pos:column="46">.</op:operator><name pos:line="607" pos:column="47">getRoot</name></name><argument_list pos:line="607" pos:column="54">()</argument_list></call> <op:operator pos:line="607" pos:column="57">==</op:operator> <name><name pos:line="607" pos:column="60">lpGetInfoTip</name><op:operator pos:line="607" pos:column="72">-&gt;</op:operator><name pos:line="607" pos:column="74">hItem</name></name></expr>)</condition><then pos:line="607" pos:column="80">
				<block pos:line="608" pos:column="33">{
					<expr_stmt><expr><name pos:line="609" pos:column="41">str</name> <op:operator pos:line="609" pos:column="45">=</op:operator> <op:operator pos:line="609" pos:column="47">&amp;</op:operator><name pos:line="609" pos:column="48">_workSpaceFilePath</name></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="611" pos:column="33">else
				<block pos:line="612" pos:column="33">{
					<expr_stmt><expr><name pos:line="613" pos:column="41">str</name> <op:operator pos:line="613" pos:column="45">=</op:operator> <op:operator pos:line="613" pos:column="47">(</op:operator><name pos:line="613" pos:column="48">generic_string</name> <op:operator pos:line="613" pos:column="63">*</op:operator><op:operator pos:line="613" pos:column="64">)</op:operator><name><name pos:line="613" pos:column="65">lpGetInfoTip</name><op:operator pos:line="613" pos:column="77">-&gt;</op:operator><name pos:line="613" pos:column="79">lParam</name></name></expr>;</expr_stmt>
					<if pos:line="614" pos:column="41">if <condition pos:line="614" pos:column="44">(<expr><op:operator pos:line="614" pos:column="45">!</op:operator><name pos:line="614" pos:column="46">str</name></expr>)</condition><then pos:line="614" pos:column="50">
						<return pos:line="615" pos:column="49">return;</return></then></if>
				}</block></else></if>
				<expr_stmt><expr><name><name pos:line="617" pos:column="33">lpGetInfoTip</name><op:operator pos:line="617" pos:column="45">-&gt;</op:operator><name pos:line="617" pos:column="47">pszText</name></name> <op:operator pos:line="617" pos:column="55">=</op:operator> <op:operator pos:line="617" pos:column="57">(</op:operator><name pos:line="617" pos:column="58">LPTSTR</name><op:operator pos:line="617" pos:column="64">)</op:operator><call><name><name pos:line="617" pos:column="65">str</name><op:operator pos:line="617" pos:column="68">-&gt;</op:operator><name pos:line="617" pos:column="70">c_str</name></name><argument_list pos:line="617" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="618" pos:column="33">lpGetInfoTip</name><op:operator pos:line="618" pos:column="45">-&gt;</op:operator><name pos:line="618" pos:column="47">cchTextMax</name></name> <op:operator pos:line="618" pos:column="58">=</op:operator> <call><name><name pos:line="618" pos:column="60">str</name><op:operator pos:line="618" pos:column="63">-&gt;</op:operator><name pos:line="618" pos:column="65">size</name></name><argument_list pos:line="618" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
			}</block>
			<break pos:line="620" pos:column="25">break;</break>

			</case><case pos:line="622" pos:column="25">case <expr><name pos:line="622" pos:column="30">TVN_KEYDOWN</name></expr>:
			<block pos:line="623" pos:column="25">{
				<comment type="line" pos:line="624" pos:column="33">//tvItem.hItem = _treeView.getSelection();</comment>
				<comment type="line" pos:line="625" pos:column="33">//::SendMessage(_treeView.getHSelf(), TVM_GETITEM, 0,(LPARAM)&amp;tvItem);</comment>
				<decl_stmt><decl><type><name pos:line="626" pos:column="33">LPNMTVKEYDOWN</name></type> <name pos:line="626" pos:column="47">ptvkd</name> <init pos:line="626" pos:column="53">= <expr><op:operator pos:line="626" pos:column="55">(</op:operator><name pos:line="626" pos:column="56">LPNMTVKEYDOWN</name><op:operator pos:line="626" pos:column="69">)</op:operator><name pos:line="626" pos:column="70">notification</name></expr></init></decl>;</decl_stmt>
				
				<if pos:line="628" pos:column="33">if <condition pos:line="628" pos:column="36">(<expr><name><name pos:line="628" pos:column="37">ptvkd</name><op:operator pos:line="628" pos:column="42">-&gt;</op:operator><name pos:line="628" pos:column="44">wVKey</name></name> <op:operator pos:line="628" pos:column="50">==</op:operator> <name pos:line="628" pos:column="53">VK_DELETE</name></expr>)</condition><then pos:line="628" pos:column="63">
				<block pos:line="629" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="630" pos:column="41">HTREEITEM</name></type> <name pos:line="630" pos:column="51">hItem</name> <init pos:line="630" pos:column="57">= <expr><call><name><name pos:line="630" pos:column="59">_treeView</name><op:operator pos:line="630" pos:column="68">.</op:operator><name pos:line="630" pos:column="69">getSelection</name></name><argument_list pos:line="630" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="631" pos:column="41">NodeType</name></type> <name pos:line="631" pos:column="50">nType</name> <init pos:line="631" pos:column="56">= <expr><call><name pos:line="631" pos:column="58">getNodeType</name><argument_list pos:line="631" pos:column="69">(<argument><expr><name pos:line="631" pos:column="70">hItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="632" pos:column="41">if <condition pos:line="632" pos:column="44">(<expr><name pos:line="632" pos:column="45">nType</name> <op:operator pos:line="632" pos:column="51">==</op:operator> <name pos:line="632" pos:column="54">nodeType_project</name> <op:operator pos:line="632" pos:column="71">||</op:operator> <name pos:line="632" pos:column="74">nType</name> <op:operator pos:line="632" pos:column="80">==</op:operator> <name pos:line="632" pos:column="83">nodeType_folder</name></expr>)</condition><then pos:line="632" pos:column="99">
						<expr_stmt><expr><call><name pos:line="633" pos:column="49">popupMenuCmd</name><argument_list pos:line="633" pos:column="61">(<argument><expr><name pos:line="633" pos:column="62">IDM_PROJECT_DELETEFOLDER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
					<else pos:line="634" pos:column="41">else <if pos:line="634" pos:column="46">if <condition pos:line="634" pos:column="49">(<expr><name pos:line="634" pos:column="50">nType</name> <op:operator pos:line="634" pos:column="56">==</op:operator> <name pos:line="634" pos:column="59">nodeType_file</name></expr>)</condition><then pos:line="634" pos:column="73">
						<expr_stmt><expr><call><name pos:line="635" pos:column="49">popupMenuCmd</name><argument_list pos:line="635" pos:column="61">(<argument><expr><name pos:line="635" pos:column="62">IDM_PROJECT_DELETEFILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
				}</block></then>
				<else pos:line="637" pos:column="33">else <if pos:line="637" pos:column="38">if <condition pos:line="637" pos:column="41">(<expr><name><name pos:line="637" pos:column="42">ptvkd</name><op:operator pos:line="637" pos:column="47">-&gt;</op:operator><name pos:line="637" pos:column="49">wVKey</name></name> <op:operator pos:line="637" pos:column="55">==</op:operator> <name pos:line="637" pos:column="58">VK_RETURN</name></expr>)</condition><then pos:line="637" pos:column="68">
				<block pos:line="638" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="639" pos:column="41">HTREEITEM</name></type> <name pos:line="639" pos:column="51">hItem</name> <init pos:line="639" pos:column="57">= <expr><call><name><name pos:line="639" pos:column="59">_treeView</name><op:operator pos:line="639" pos:column="68">.</op:operator><name pos:line="639" pos:column="69">getSelection</name></name><argument_list pos:line="639" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="640" pos:column="41">NodeType</name></type> <name pos:line="640" pos:column="50">nType</name> <init pos:line="640" pos:column="56">= <expr><call><name pos:line="640" pos:column="58">getNodeType</name><argument_list pos:line="640" pos:column="69">(<argument><expr><name pos:line="640" pos:column="70">hItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="641" pos:column="41">if <condition pos:line="641" pos:column="44">(<expr><name pos:line="641" pos:column="45">nType</name> <op:operator pos:line="641" pos:column="51">==</op:operator> <name pos:line="641" pos:column="54">nodeType_file</name></expr>)</condition><then pos:line="641" pos:column="68">
						<expr_stmt><expr><call><name pos:line="642" pos:column="49">openSelectFile</name><argument_list pos:line="642" pos:column="63">()</argument_list></call></expr>;</expr_stmt></then>
					<else pos:line="643" pos:column="41">else
						<expr_stmt><expr><call><name><name pos:line="644" pos:column="49">_treeView</name><op:operator pos:line="644" pos:column="58">.</op:operator><name pos:line="644" pos:column="59">toggleExpandCollapse</name></name><argument_list pos:line="644" pos:column="79">(<argument><expr><name pos:line="644" pos:column="80">hItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
				}</block></then>
				<else pos:line="646" pos:column="33">else <if pos:line="646" pos:column="38">if <condition pos:line="646" pos:column="41">(<expr><name><name pos:line="646" pos:column="42">ptvkd</name><op:operator pos:line="646" pos:column="47">-&gt;</op:operator><name pos:line="646" pos:column="49">wVKey</name></name> <op:operator pos:line="646" pos:column="55">==</op:operator> <name pos:line="646" pos:column="58">VK_UP</name></expr>)</condition><then pos:line="646" pos:column="64">
				<block pos:line="647" pos:column="33">{
					<if pos:line="648" pos:column="41">if <condition pos:line="648" pos:column="44">(<expr><lit:literal type="number" pos:line="648" pos:column="45">0x80</lit:literal> <op:operator pos:line="648" pos:column="50">&amp;</op:operator> <call><name pos:line="648" pos:column="52">GetKeyState</name><argument_list pos:line="648" pos:column="63">(<argument><expr><name pos:line="648" pos:column="64">VK_CONTROL</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="648" pos:column="76">
					<block pos:line="649" pos:column="41">{
						<expr_stmt><expr><call><name pos:line="650" pos:column="49">popupMenuCmd</name><argument_list pos:line="650" pos:column="61">(<argument><expr><name pos:line="650" pos:column="62">IDM_PROJECT_MOVEUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then>
				<else pos:line="653" pos:column="33">else <if pos:line="653" pos:column="38">if <condition pos:line="653" pos:column="41">(<expr><name><name pos:line="653" pos:column="42">ptvkd</name><op:operator pos:line="653" pos:column="47">-&gt;</op:operator><name pos:line="653" pos:column="49">wVKey</name></name> <op:operator pos:line="653" pos:column="55">==</op:operator> <name pos:line="653" pos:column="58">VK_DOWN</name></expr>)</condition><then pos:line="653" pos:column="66">
				<block pos:line="654" pos:column="33">{
					<if pos:line="655" pos:column="41">if <condition pos:line="655" pos:column="44">(<expr><lit:literal type="number" pos:line="655" pos:column="45">0x80</lit:literal> <op:operator pos:line="655" pos:column="50">&amp;</op:operator> <call><name pos:line="655" pos:column="52">GetKeyState</name><argument_list pos:line="655" pos:column="63">(<argument><expr><name pos:line="655" pos:column="64">VK_CONTROL</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="655" pos:column="76">
					<block pos:line="656" pos:column="41">{
						<expr_stmt><expr><call><name pos:line="657" pos:column="49">popupMenuCmd</name><argument_list pos:line="657" pos:column="61">(<argument><expr><name pos:line="657" pos:column="62">IDM_PROJECT_MOVEDOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></then>
				<else pos:line="660" pos:column="33">else <if pos:line="660" pos:column="38">if <condition pos:line="660" pos:column="41">(<expr><name><name pos:line="660" pos:column="42">ptvkd</name><op:operator pos:line="660" pos:column="47">-&gt;</op:operator><name pos:line="660" pos:column="49">wVKey</name></name> <op:operator pos:line="660" pos:column="55">==</op:operator> <name pos:line="660" pos:column="58">VK_F2</name></expr>)</condition><then pos:line="660" pos:column="64">
					<expr_stmt><expr><call><name pos:line="661" pos:column="41">popupMenuCmd</name><argument_list pos:line="661" pos:column="53">(<argument><expr><name pos:line="661" pos:column="54">IDM_PROJECT_RENAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if></else></if></else></if></else></if>
				
			}</block>
			<break pos:line="664" pos:column="25">break;</break>

			</case><case pos:line="666" pos:column="25">case <expr><name pos:line="666" pos:column="30">TVN_ITEMEXPANDED</name></expr>:
			<block pos:line="667" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="668" pos:column="33">LPNMTREEVIEW</name></type> <name pos:line="668" pos:column="46">nmtv</name> <init pos:line="668" pos:column="51">= <expr><op:operator pos:line="668" pos:column="53">(</op:operator><name pos:line="668" pos:column="54">LPNMTREEVIEW</name><op:operator pos:line="668" pos:column="66">)</op:operator><name pos:line="668" pos:column="67">notification</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="669" pos:column="33">tvItem</name><op:operator pos:line="669" pos:column="39">.</op:operator><name pos:line="669" pos:column="40">hItem</name></name> <op:operator pos:line="669" pos:column="46">=</op:operator> <name><name pos:line="669" pos:column="48">nmtv</name><op:operator pos:line="669" pos:column="52">-&gt;</op:operator><name pos:line="669" pos:column="54">itemNew</name><op:operator pos:line="669" pos:column="61">.</op:operator><name pos:line="669" pos:column="62">hItem</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="670" pos:column="33">tvItem</name><op:operator pos:line="670" pos:column="39">.</op:operator><name pos:line="670" pos:column="40">mask</name></name> <op:operator pos:line="670" pos:column="45">=</op:operator> <name pos:line="670" pos:column="47">TVIF_IMAGE</name> <op:operator pos:line="670" pos:column="58">|</op:operator> <name pos:line="670" pos:column="60">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>

				<if pos:line="672" pos:column="33">if <condition pos:line="672" pos:column="36">(<expr><call><name pos:line="672" pos:column="37">getNodeType</name><argument_list pos:line="672" pos:column="48">(<argument><expr><name><name pos:line="672" pos:column="49">nmtv</name><op:operator pos:line="672" pos:column="53">-&gt;</op:operator><name pos:line="672" pos:column="55">itemNew</name><op:operator pos:line="672" pos:column="62">.</op:operator><name pos:line="672" pos:column="63">hItem</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="672" pos:column="70">==</op:operator> <name pos:line="672" pos:column="73">nodeType_folder</name></expr>)</condition><then pos:line="672" pos:column="89">
				<block pos:line="673" pos:column="33">{
					<if pos:line="674" pos:column="41">if <condition pos:line="674" pos:column="44">(<expr><name><name pos:line="674" pos:column="45">nmtv</name><op:operator pos:line="674" pos:column="49">-&gt;</op:operator><name pos:line="674" pos:column="51">action</name></name> <op:operator pos:line="674" pos:column="58">==</op:operator> <name pos:line="674" pos:column="61">TVE_COLLAPSE</name></expr>)</condition><then pos:line="674" pos:column="74">
					<block pos:line="675" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="676" pos:column="49">_treeView</name><op:operator pos:line="676" pos:column="58">.</op:operator><name pos:line="676" pos:column="59">setItemImage</name></name><argument_list pos:line="676" pos:column="71">(<argument><expr><name><name pos:line="676" pos:column="72">nmtv</name><op:operator pos:line="676" pos:column="76">-&gt;</op:operator><name pos:line="676" pos:column="78">itemNew</name><op:operator pos:line="676" pos:column="85">.</op:operator><name pos:line="676" pos:column="86">hItem</name></name></expr></argument>, <argument><expr><name pos:line="676" pos:column="93">INDEX_CLOSED_NODE</name></expr></argument>, <argument><expr><name pos:line="676" pos:column="112">INDEX_CLOSED_NODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="678" pos:column="41">else <if pos:line="678" pos:column="46">if <condition pos:line="678" pos:column="49">(<expr><name><name pos:line="678" pos:column="50">nmtv</name><op:operator pos:line="678" pos:column="54">-&gt;</op:operator><name pos:line="678" pos:column="56">action</name></name> <op:operator pos:line="678" pos:column="63">==</op:operator> <name pos:line="678" pos:column="66">TVE_EXPAND</name></expr>)</condition><then pos:line="678" pos:column="77">
					<block pos:line="679" pos:column="41">{
						<expr_stmt><expr><call><name><name pos:line="680" pos:column="49">_treeView</name><op:operator pos:line="680" pos:column="58">.</op:operator><name pos:line="680" pos:column="59">setItemImage</name></name><argument_list pos:line="680" pos:column="71">(<argument><expr><name><name pos:line="680" pos:column="72">nmtv</name><op:operator pos:line="680" pos:column="76">-&gt;</op:operator><name pos:line="680" pos:column="78">itemNew</name><op:operator pos:line="680" pos:column="85">.</op:operator><name pos:line="680" pos:column="86">hItem</name></name></expr></argument>, <argument><expr><name pos:line="680" pos:column="93">INDEX_OPEN_NODE</name></expr></argument>, <argument><expr><name pos:line="680" pos:column="110">INDEX_OPEN_NODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if></else></if>
				}</block></then></if>
			}</block>
			<break pos:line="684" pos:column="25">break;</break>

			</case><case pos:line="686" pos:column="25">case <expr><name pos:line="686" pos:column="30">TVN_BEGINDRAG</name></expr>:
			<block pos:line="687" pos:column="25">{
				<comment type="line" pos:line="688" pos:column="33">//printStr(TEXT("hello"));</comment>
				<expr_stmt><expr><call><name><name pos:line="689" pos:column="33">_treeView</name><op:operator pos:line="689" pos:column="42">.</op:operator><name pos:line="689" pos:column="43">beginDrag</name></name><argument_list pos:line="689" pos:column="52">(<argument><expr><op:operator pos:line="689" pos:column="53">(</op:operator><name pos:line="689" pos:column="54">LPNMTREEVIEW</name><op:operator pos:line="689" pos:column="66">)</op:operator><name pos:line="689" pos:column="67">notification</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
			}</block>
			<break pos:line="692" pos:column="25">break;</break>
		</case>}</block></switch>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="697" pos:column="1">void</name></type> <name><name pos:line="697" pos:column="6">ProjectPanel</name><op:operator pos:line="697" pos:column="18">::</op:operator><name pos:line="697" pos:column="20">setWorkSpaceDirty</name></name><parameter_list pos:line="697" pos:column="37">(<param><decl><type><name pos:line="697" pos:column="38">bool</name></type> <name pos:line="697" pos:column="43">isDirty</name></decl></param>)</parameter_list>
<block pos:line="698" pos:column="1">{
	<expr_stmt><expr><name pos:line="699" pos:column="9">_isDirty</name> <op:operator pos:line="699" pos:column="18">=</op:operator> <name pos:line="699" pos:column="20">isDirty</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="700" pos:column="9">int</name></type> <name pos:line="700" pos:column="13">iImg</name> <init pos:line="700" pos:column="18">= <expr><name pos:line="700" pos:column="20">_isDirty</name><op:operator pos:line="700" pos:column="28">?</op:operator><name pos:line="700" pos:column="29">INDEX_DIRTY_ROOT</name><op:operator pos:line="700" pos:column="45">:</op:operator><name pos:line="700" pos:column="46">INDEX_CLEAN_ROOT</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="701" pos:column="9">_treeView</name><op:operator pos:line="701" pos:column="18">.</op:operator><name pos:line="701" pos:column="19">setItemImage</name></name><argument_list pos:line="701" pos:column="31">(<argument><expr><call><name><name pos:line="701" pos:column="32">_treeView</name><op:operator pos:line="701" pos:column="41">.</op:operator><name pos:line="701" pos:column="42">getRoot</name></name><argument_list pos:line="701" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="701" pos:column="53">iImg</name></expr></argument>, <argument><expr><name pos:line="701" pos:column="59">iImg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="704" pos:column="1">NodeType</name></type> <name><name pos:line="704" pos:column="10">ProjectPanel</name><op:operator pos:line="704" pos:column="22">::</op:operator><name pos:line="704" pos:column="24">getNodeType</name></name><parameter_list pos:line="704" pos:column="35">(<param><decl><type><name pos:line="704" pos:column="36">HTREEITEM</name></type> <name pos:line="704" pos:column="46">hItem</name></decl></param>)</parameter_list>
<block pos:line="705" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="706" pos:column="9">TVITEM</name></type> <name pos:line="706" pos:column="16">tvItem</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="707" pos:column="9">tvItem</name><op:operator pos:line="707" pos:column="15">.</op:operator><name pos:line="707" pos:column="16">hItem</name></name> <op:operator pos:line="707" pos:column="22">=</op:operator> <name pos:line="707" pos:column="24">hItem</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="708" pos:column="9">tvItem</name><op:operator pos:line="708" pos:column="15">.</op:operator><name pos:line="708" pos:column="16">mask</name></name> <op:operator pos:line="708" pos:column="21">=</op:operator> <name pos:line="708" pos:column="23">TVIF_IMAGE</name> <op:operator pos:line="708" pos:column="34">|</op:operator> <name pos:line="708" pos:column="36">TVIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="709" pos:column="9">SendMessage</name><argument_list pos:line="709" pos:column="20">(<argument><expr><call><name><name pos:line="709" pos:column="21">_treeView</name><op:operator pos:line="709" pos:column="30">.</op:operator><name pos:line="709" pos:column="31">getHSelf</name></name><argument_list pos:line="709" pos:column="39">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="709" pos:column="43">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="709" pos:column="56">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="709" pos:column="58">(</op:operator><name pos:line="709" pos:column="59">LPARAM</name><op:operator pos:line="709" pos:column="65">)</op:operator><op:operator pos:line="709" pos:column="66">&amp;</op:operator><name pos:line="709" pos:column="67">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="711" pos:column="9">// Root</comment>
	<if pos:line="712" pos:column="9">if <condition pos:line="712" pos:column="12">(<expr><name><name pos:line="712" pos:column="13">tvItem</name><op:operator pos:line="712" pos:column="19">.</op:operator><name pos:line="712" pos:column="20">iImage</name></name> <op:operator pos:line="712" pos:column="27">==</op:operator> <name pos:line="712" pos:column="30">INDEX_CLEAN_ROOT</name> <op:operator pos:line="712" pos:column="47">||</op:operator> <name><name pos:line="712" pos:column="50">tvItem</name><op:operator pos:line="712" pos:column="56">.</op:operator><name pos:line="712" pos:column="57">iImage</name></name> <op:operator pos:line="712" pos:column="64">==</op:operator> <name pos:line="712" pos:column="67">INDEX_DIRTY_ROOT</name></expr>)</condition><then pos:line="712" pos:column="84">
	<block pos:line="713" pos:column="9">{
		<return pos:line="714" pos:column="17">return <expr><name pos:line="714" pos:column="24">nodeType_root</name></expr>;</return>
	}</block></then>
	<comment type="line" pos:line="716" pos:column="9">// Project</comment>
	<else pos:line="717" pos:column="9">else <if pos:line="717" pos:column="14">if <condition pos:line="717" pos:column="17">(<expr><name><name pos:line="717" pos:column="18">tvItem</name><op:operator pos:line="717" pos:column="24">.</op:operator><name pos:line="717" pos:column="25">iImage</name></name> <op:operator pos:line="717" pos:column="32">==</op:operator> <name pos:line="717" pos:column="35">INDEX_PROJECT</name></expr>)</condition><then pos:line="717" pos:column="49">
	<block pos:line="718" pos:column="9">{
		<return pos:line="719" pos:column="17">return <expr><name pos:line="719" pos:column="24">nodeType_project</name></expr>;</return>
	}</block></then>
	<comment type="line" pos:line="721" pos:column="9">// Folder</comment>
	<else pos:line="722" pos:column="9">else <if pos:line="722" pos:column="14">if <condition pos:line="722" pos:column="17">(<expr><name><name pos:line="722" pos:column="18">tvItem</name><op:operator pos:line="722" pos:column="24">.</op:operator><name pos:line="722" pos:column="25">lParam</name></name> <op:operator pos:line="722" pos:column="32">==</op:operator> <name pos:line="722" pos:column="35">NULL</name></expr>)</condition><then pos:line="722" pos:column="40">
	<block pos:line="723" pos:column="9">{
		<return pos:line="724" pos:column="17">return <expr><name pos:line="724" pos:column="24">nodeType_folder</name></expr>;</return>
	}</block></then>
	<comment type="line" pos:line="726" pos:column="9">// File</comment>
	<else pos:line="727" pos:column="9">else
	<block pos:line="728" pos:column="9">{
		<return pos:line="729" pos:column="17">return <expr><name pos:line="729" pos:column="24">nodeType_file</name></expr>;</return>
	}</block></else></if></else></if></else></if>
}</block></function>

<function><type><name pos:line="733" pos:column="1">void</name></type> <name><name pos:line="733" pos:column="6">ProjectPanel</name><op:operator pos:line="733" pos:column="18">::</op:operator><name pos:line="733" pos:column="20">showContextMenu</name></name><parameter_list pos:line="733" pos:column="35">(<param><decl><type><name pos:line="733" pos:column="36">int</name></type> <name pos:line="733" pos:column="40">x</name></decl></param>, <param><decl><type><name pos:line="733" pos:column="43">int</name></type> <name pos:line="733" pos:column="47">y</name></decl></param>)</parameter_list>
<block pos:line="734" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="735" pos:column="9">TVHITTESTINFO</name></type> <name pos:line="735" pos:column="23">tvHitInfo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="736" pos:column="9">HTREEITEM</name></type> <name pos:line="736" pos:column="19">hTreeItem</name></decl>;</decl_stmt>

	<comment type="line" pos:line="738" pos:column="9">// Detect if the given position is on the element TVITEM</comment>
	<expr_stmt><expr><name><name pos:line="739" pos:column="9">tvHitInfo</name><op:operator pos:line="739" pos:column="18">.</op:operator><name pos:line="739" pos:column="19">pt</name><op:operator pos:line="739" pos:column="21">.</op:operator><name pos:line="739" pos:column="22">x</name></name> <op:operator pos:line="739" pos:column="24">=</op:operator> <name pos:line="739" pos:column="26">x</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="740" pos:column="9">tvHitInfo</name><op:operator pos:line="740" pos:column="18">.</op:operator><name pos:line="740" pos:column="19">pt</name><op:operator pos:line="740" pos:column="21">.</op:operator><name pos:line="740" pos:column="22">y</name></name> <op:operator pos:line="740" pos:column="24">=</op:operator> <name pos:line="740" pos:column="26">y</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="741" pos:column="9">tvHitInfo</name><op:operator pos:line="741" pos:column="18">.</op:operator><name pos:line="741" pos:column="19">flags</name></name> <op:operator pos:line="741" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="741" pos:column="27">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="742" pos:column="9">ScreenToClient</name><argument_list pos:line="742" pos:column="23">(<argument><expr><call><name><name pos:line="742" pos:column="24">_treeView</name><op:operator pos:line="742" pos:column="33">.</op:operator><name pos:line="742" pos:column="34">getHSelf</name></name><argument_list pos:line="742" pos:column="42">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="742" pos:column="46">&amp;</op:operator><op:operator pos:line="742" pos:column="47">(</op:operator><name><name pos:line="742" pos:column="48">tvHitInfo</name><op:operator pos:line="742" pos:column="57">.</op:operator><name pos:line="742" pos:column="58">pt</name></name><op:operator pos:line="742" pos:column="60">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="743" pos:column="9">hTreeItem</name> <op:operator pos:line="743" pos:column="19">=</op:operator> <call><name pos:line="743" pos:column="21">TreeView_HitTest</name><argument_list pos:line="743" pos:column="37">(<argument><expr><call><name><name pos:line="743" pos:column="38">_treeView</name><op:operator pos:line="743" pos:column="47">.</op:operator><name pos:line="743" pos:column="48">getHSelf</name></name><argument_list pos:line="743" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="743" pos:column="60">&amp;</op:operator><name pos:line="743" pos:column="61">tvHitInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="745" pos:column="9">if<condition pos:line="745" pos:column="11">(<expr><name><name pos:line="745" pos:column="12">tvHitInfo</name><op:operator pos:line="745" pos:column="21">.</op:operator><name pos:line="745" pos:column="22">hItem</name></name> <op:operator pos:line="745" pos:column="28">!=</op:operator> <name pos:line="745" pos:column="31">NULL</name></expr>)</condition><then pos:line="745" pos:column="36">
	<block pos:line="746" pos:column="9">{
		<comment type="line" pos:line="747" pos:column="17">// Make item selected</comment>
		<expr_stmt><expr><call><name><name pos:line="748" pos:column="17">_treeView</name><op:operator pos:line="748" pos:column="26">.</op:operator><name pos:line="748" pos:column="27">selectItem</name></name><argument_list pos:line="748" pos:column="37">(<argument><expr><name><name pos:line="748" pos:column="38">tvHitInfo</name><op:operator pos:line="748" pos:column="47">.</op:operator><name pos:line="748" pos:column="48">hItem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="750" pos:column="17">// get clicked item type</comment>
		<decl_stmt><decl><type><name pos:line="751" pos:column="17">NodeType</name></type> <name pos:line="751" pos:column="26">nodeType</name> <init pos:line="751" pos:column="35">= <expr><call><name pos:line="751" pos:column="37">getNodeType</name><argument_list pos:line="751" pos:column="48">(<argument><expr><name><name pos:line="751" pos:column="49">tvHitInfo</name><op:operator pos:line="751" pos:column="58">.</op:operator><name pos:line="751" pos:column="59">hItem</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="752" pos:column="17">HMENU</name></type> <name pos:line="752" pos:column="23">hMenu</name> <init pos:line="752" pos:column="29">= <expr><name pos:line="752" pos:column="31">NULL</name></expr></init></decl>;</decl_stmt>
		<if pos:line="753" pos:column="17">if <condition pos:line="753" pos:column="20">(<expr><name pos:line="753" pos:column="21">nodeType</name> <op:operator pos:line="753" pos:column="30">==</op:operator> <name pos:line="753" pos:column="33">nodeType_root</name></expr>)</condition><then pos:line="753" pos:column="47">
			<expr_stmt><expr><name pos:line="754" pos:column="25">hMenu</name> <op:operator pos:line="754" pos:column="31">=</op:operator> <name pos:line="754" pos:column="33">_hWorkSpaceMenu</name></expr>;</expr_stmt></then>
		<else pos:line="755" pos:column="17">else <if pos:line="755" pos:column="22">if <condition pos:line="755" pos:column="25">(<expr><name pos:line="755" pos:column="26">nodeType</name> <op:operator pos:line="755" pos:column="35">==</op:operator> <name pos:line="755" pos:column="38">nodeType_project</name></expr>)</condition><then pos:line="755" pos:column="55">
			<expr_stmt><expr><name pos:line="756" pos:column="25">hMenu</name> <op:operator pos:line="756" pos:column="31">=</op:operator> <name pos:line="756" pos:column="33">_hProjectMenu</name></expr>;</expr_stmt></then>
		<else pos:line="757" pos:column="17">else <if pos:line="757" pos:column="22">if <condition pos:line="757" pos:column="25">(<expr><name pos:line="757" pos:column="26">nodeType</name> <op:operator pos:line="757" pos:column="35">==</op:operator> <name pos:line="757" pos:column="38">nodeType_folder</name></expr>)</condition><then pos:line="757" pos:column="54">
			<expr_stmt><expr><name pos:line="758" pos:column="25">hMenu</name> <op:operator pos:line="758" pos:column="31">=</op:operator> <name pos:line="758" pos:column="33">_hFolderMenu</name></expr>;</expr_stmt></then>
		<else pos:line="759" pos:column="17">else <comment type="line" pos:line="759" pos:column="22">//nodeType_file</comment>
			<expr_stmt><expr><name pos:line="760" pos:column="25">hMenu</name> <op:operator pos:line="760" pos:column="31">=</op:operator> <name pos:line="760" pos:column="33">_hFileMenu</name></expr>;</expr_stmt></else></if></else></if></else></if>
		<expr_stmt><expr><call><name pos:line="761" pos:column="17">TrackPopupMenu</name><argument_list pos:line="761" pos:column="31">(<argument><expr><name pos:line="761" pos:column="32">hMenu</name></expr></argument>, <argument><expr><name pos:line="761" pos:column="39">TPM_LEFTALIGN</name></expr></argument>, <argument><expr><name pos:line="761" pos:column="54">x</name></expr></argument>, <argument><expr><name pos:line="761" pos:column="57">y</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="761" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><name pos:line="761" pos:column="63">_hSelf</name></expr></argument>, <argument><expr><name pos:line="761" pos:column="71">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="765" pos:column="1">POINT</name></type> <name><name pos:line="765" pos:column="7">ProjectPanel</name><op:operator pos:line="765" pos:column="19">::</op:operator><name pos:line="765" pos:column="21">getMenuDisplyPoint</name></name><parameter_list pos:line="765" pos:column="39">(<param><decl><type><name pos:line="765" pos:column="40">int</name></type> <name pos:line="765" pos:column="44">iButton</name></decl></param>)</parameter_list>
<block pos:line="766" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="767" pos:column="9">POINT</name></type> <name pos:line="767" pos:column="15">p</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="768" pos:column="9">RECT</name></type> <name pos:line="768" pos:column="14">btnRect</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="769" pos:column="9">SendMessage</name><argument_list pos:line="769" pos:column="20">(<argument><expr><name pos:line="769" pos:column="21">_hToolbarMenu</name></expr></argument>, <argument><expr><name pos:line="769" pos:column="36">TB_GETITEMRECT</name></expr></argument>, <argument><expr><name pos:line="769" pos:column="52">iButton</name></expr></argument>, <argument><expr><op:operator pos:line="769" pos:column="61">(</op:operator><name pos:line="769" pos:column="62">LPARAM</name><op:operator pos:line="769" pos:column="68">)</op:operator><op:operator pos:line="769" pos:column="69">&amp;</op:operator><name pos:line="769" pos:column="70">btnRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="771" pos:column="9">p</name><op:operator pos:line="771" pos:column="10">.</op:operator><name pos:line="771" pos:column="11">x</name></name> <op:operator pos:line="771" pos:column="13">=</op:operator> <name><name pos:line="771" pos:column="15">btnRect</name><op:operator pos:line="771" pos:column="22">.</op:operator><name pos:line="771" pos:column="23">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="772" pos:column="9">p</name><op:operator pos:line="772" pos:column="10">.</op:operator><name pos:line="772" pos:column="11">y</name></name> <op:operator pos:line="772" pos:column="13">=</op:operator> <name><name pos:line="772" pos:column="15">btnRect</name><op:operator pos:line="772" pos:column="22">.</op:operator><name pos:line="772" pos:column="23">top</name></name> <op:operator pos:line="772" pos:column="27">+</op:operator> <name><name pos:line="772" pos:column="29">btnRect</name><op:operator pos:line="772" pos:column="36">.</op:operator><name pos:line="772" pos:column="37">bottom</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="773" pos:column="9">ClientToScreen</name><argument_list pos:line="773" pos:column="23">(<argument><expr><name pos:line="773" pos:column="24">_hToolbarMenu</name></expr></argument>, <argument><expr><op:operator pos:line="773" pos:column="39">&amp;</op:operator><name pos:line="773" pos:column="40">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<return pos:line="774" pos:column="9">return <expr><name pos:line="774" pos:column="16">p</name></expr>;</return>
}</block></function>

<function><type><name pos:line="777" pos:column="1">HTREEITEM</name></type> <name><name pos:line="777" pos:column="11">ProjectPanel</name><op:operator pos:line="777" pos:column="23">::</op:operator><name pos:line="777" pos:column="25">addFolder</name></name><parameter_list pos:line="777" pos:column="34">(<param><decl><type><name pos:line="777" pos:column="35">HTREEITEM</name></type> <name pos:line="777" pos:column="45">hTreeItem</name></decl></param>, <param><decl><type><specifier pos:line="777" pos:column="56">const</specifier> <name pos:line="777" pos:column="62">TCHAR</name> <type:modifier pos:line="777" pos:column="68">*</type:modifier></type><name pos:line="777" pos:column="69">folderName</name></decl></param>)</parameter_list>
<block pos:line="778" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="779" pos:column="9">HTREEITEM</name></type> <name pos:line="779" pos:column="19">addedItem</name> <init pos:line="779" pos:column="29">= <expr><call><name><name pos:line="779" pos:column="31">_treeView</name><op:operator pos:line="779" pos:column="40">.</op:operator><name pos:line="779" pos:column="41">addItem</name></name><argument_list pos:line="779" pos:column="48">(<argument><expr><name pos:line="779" pos:column="49">folderName</name></expr></argument>, <argument><expr><name pos:line="779" pos:column="61">hTreeItem</name></expr></argument>, <argument><expr><name pos:line="779" pos:column="72">INDEX_CLOSED_NODE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<expr_stmt><expr><call><name pos:line="781" pos:column="9">TreeView_Expand</name><argument_list pos:line="781" pos:column="24">(<argument><expr><call><name><name pos:line="781" pos:column="25">_treeView</name><op:operator pos:line="781" pos:column="34">.</op:operator><name pos:line="781" pos:column="35">getHSelf</name></name><argument_list pos:line="781" pos:column="43">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="781" pos:column="47">hTreeItem</name></expr></argument>, <argument><expr><name pos:line="781" pos:column="58">TVE_EXPAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="782" pos:column="9">TreeView_EditLabel</name><argument_list pos:line="782" pos:column="27">(<argument><expr><call><name><name pos:line="782" pos:column="28">_treeView</name><op:operator pos:line="782" pos:column="37">.</op:operator><name pos:line="782" pos:column="38">getHSelf</name></name><argument_list pos:line="782" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="782" pos:column="50">addedItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="783" pos:column="9">if <condition pos:line="783" pos:column="12">(<expr><call><name pos:line="783" pos:column="13">getNodeType</name><argument_list pos:line="783" pos:column="24">(<argument><expr><name pos:line="783" pos:column="25">hTreeItem</name></expr></argument>)</argument_list></call> <op:operator pos:line="783" pos:column="36">==</op:operator> <name pos:line="783" pos:column="39">nodeType_folder</name></expr>)</condition><then pos:line="783" pos:column="55">
		<expr_stmt><expr><call><name><name pos:line="784" pos:column="17">_treeView</name><op:operator pos:line="784" pos:column="26">.</op:operator><name pos:line="784" pos:column="27">setItemImage</name></name><argument_list pos:line="784" pos:column="39">(<argument><expr><name pos:line="784" pos:column="40">hTreeItem</name></expr></argument>, <argument><expr><name pos:line="784" pos:column="51">INDEX_OPEN_NODE</name></expr></argument>, <argument><expr><name pos:line="784" pos:column="68">INDEX_OPEN_NODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<return pos:line="786" pos:column="9">return <expr><name pos:line="786" pos:column="16">addedItem</name></expr>;</return>
}</block></function>

<function><type><name pos:line="789" pos:column="1">void</name></type> <name><name pos:line="789" pos:column="6">ProjectPanel</name><op:operator pos:line="789" pos:column="18">::</op:operator><name pos:line="789" pos:column="20">popupMenuCmd</name></name><parameter_list pos:line="789" pos:column="32">(<param><decl><type><name pos:line="789" pos:column="33">int</name></type> <name pos:line="789" pos:column="37">cmdID</name></decl></param>)</parameter_list>
<block pos:line="790" pos:column="1">{
	<comment type="line" pos:line="791" pos:column="9">// get selected item handle</comment>
	<decl_stmt><decl><type><name pos:line="792" pos:column="9">HTREEITEM</name></type> <name pos:line="792" pos:column="19">hTreeItem</name> <init pos:line="792" pos:column="29">= <expr><call><name><name pos:line="792" pos:column="31">_treeView</name><op:operator pos:line="792" pos:column="40">.</op:operator><name pos:line="792" pos:column="41">getSelection</name></name><argument_list pos:line="792" pos:column="53">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="793" pos:column="9">if <condition pos:line="793" pos:column="12">(<expr><op:operator pos:line="793" pos:column="13">!</op:operator><name pos:line="793" pos:column="14">hTreeItem</name></expr>)</condition><then pos:line="793" pos:column="24">
		<return pos:line="794" pos:column="17">return;</return></then></if>

	<switch pos:line="796" pos:column="9">switch <condition pos:line="796" pos:column="16">(<expr><name pos:line="796" pos:column="17">cmdID</name></expr>)</condition>
	<block pos:line="797" pos:column="9">{
		<comment type="line" pos:line="798" pos:column="17">//</comment>
		<comment type="line" pos:line="799" pos:column="17">// Toolbar menu buttons</comment>
		<comment type="line" pos:line="800" pos:column="17">//</comment>
		<case pos:line="801" pos:column="17">case <expr><name pos:line="801" pos:column="22">IDB_PROJECT_BTN</name></expr>:
		<block pos:line="802" pos:column="17">{
		  <decl_stmt><decl><type><name pos:line="803" pos:column="19">POINT</name></type> <name pos:line="803" pos:column="25">p</name> <init pos:line="803" pos:column="27">= <expr><call><name pos:line="803" pos:column="29">getMenuDisplyPoint</name><argument_list pos:line="803" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="803" pos:column="48">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		  <expr_stmt><expr><call><name pos:line="804" pos:column="19">TrackPopupMenu</name><argument_list pos:line="804" pos:column="33">(<argument><expr><name pos:line="804" pos:column="34">_hWorkSpaceMenu</name></expr></argument>, <argument><expr><name pos:line="804" pos:column="51">TPM_LEFTALIGN</name></expr></argument>, <argument><expr><name><name pos:line="804" pos:column="66">p</name><op:operator pos:line="804" pos:column="67">.</op:operator><name pos:line="804" pos:column="68">x</name></name></expr></argument>, <argument><expr><name><name pos:line="804" pos:column="71">p</name><op:operator pos:line="804" pos:column="72">.</op:operator><name pos:line="804" pos:column="73">y</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="804" pos:column="76">0</lit:literal></expr></argument>, <argument><expr><name pos:line="804" pos:column="79">_hSelf</name></expr></argument>, <argument><expr><name pos:line="804" pos:column="87">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="806" pos:column="17">break;</break>

		</case><case pos:line="808" pos:column="17">case <expr><name pos:line="808" pos:column="22">IDB_EDIT_BTN</name></expr>:
		<block pos:line="809" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="810" pos:column="25">POINT</name></type> <name pos:line="810" pos:column="31">p</name> <init pos:line="810" pos:column="33">= <expr><call><name pos:line="810" pos:column="35">getMenuDisplyPoint</name><argument_list pos:line="810" pos:column="53">(<argument><expr><lit:literal type="number" pos:line="810" pos:column="54">1</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="811" pos:column="25">HMENU</name></type> <name pos:line="811" pos:column="31">hMenu</name> <init pos:line="811" pos:column="37">= <expr><name pos:line="811" pos:column="39">NULL</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="812" pos:column="25">NodeType</name></type> <name pos:line="812" pos:column="34">nodeType</name> <init pos:line="812" pos:column="43">= <expr><call><name pos:line="812" pos:column="45">getNodeType</name><argument_list pos:line="812" pos:column="56">(<argument><expr><name pos:line="812" pos:column="57">hTreeItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="813" pos:column="25">if <condition pos:line="813" pos:column="28">(<expr><name pos:line="813" pos:column="29">nodeType</name> <op:operator pos:line="813" pos:column="38">==</op:operator> <name pos:line="813" pos:column="41">nodeType_project</name></expr>)</condition><then pos:line="813" pos:column="58">
				<expr_stmt><expr><name pos:line="814" pos:column="33">hMenu</name> <op:operator pos:line="814" pos:column="39">=</op:operator> <name pos:line="814" pos:column="41">_hProjectMenu</name></expr>;</expr_stmt></then>
			<else pos:line="815" pos:column="25">else <if pos:line="815" pos:column="30">if <condition pos:line="815" pos:column="33">(<expr><name pos:line="815" pos:column="34">nodeType</name> <op:operator pos:line="815" pos:column="43">==</op:operator> <name pos:line="815" pos:column="46">nodeType_folder</name></expr>)</condition><then pos:line="815" pos:column="62">
				<expr_stmt><expr><name pos:line="816" pos:column="33">hMenu</name> <op:operator pos:line="816" pos:column="39">=</op:operator> <name pos:line="816" pos:column="41">_hFolderMenu</name></expr>;</expr_stmt></then>
			<else pos:line="817" pos:column="25">else <if pos:line="817" pos:column="30">if <condition pos:line="817" pos:column="33">(<expr><name pos:line="817" pos:column="34">nodeType</name> <op:operator pos:line="817" pos:column="43">==</op:operator> <name pos:line="817" pos:column="46">nodeType_file</name></expr>)</condition><then pos:line="817" pos:column="60">
				<expr_stmt><expr><name pos:line="818" pos:column="33">hMenu</name> <op:operator pos:line="818" pos:column="39">=</op:operator> <name pos:line="818" pos:column="41">_hFileMenu</name></expr>;</expr_stmt></then></if></else></if></else></if>
			<if pos:line="819" pos:column="25">if <condition pos:line="819" pos:column="28">(<expr><name pos:line="819" pos:column="29">hMenu</name></expr>)</condition><then pos:line="819" pos:column="35">
				<expr_stmt><expr><call><name pos:line="820" pos:column="33">TrackPopupMenu</name><argument_list pos:line="820" pos:column="47">(<argument><expr><name pos:line="820" pos:column="48">hMenu</name></expr></argument>, <argument><expr><name pos:line="820" pos:column="55">TPM_LEFTALIGN</name></expr></argument>, <argument><expr><name><name pos:line="820" pos:column="70">p</name><op:operator pos:line="820" pos:column="71">.</op:operator><name pos:line="820" pos:column="72">x</name></name></expr></argument>, <argument><expr><name><name pos:line="820" pos:column="75">p</name><op:operator pos:line="820" pos:column="76">.</op:operator><name pos:line="820" pos:column="77">y</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="820" pos:column="80">0</lit:literal></expr></argument>, <argument><expr><name pos:line="820" pos:column="83">_hSelf</name></expr></argument>, <argument><expr><name pos:line="820" pos:column="91">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="822" pos:column="17">break;</break>

		<comment type="line" pos:line="824" pos:column="17">//</comment>
		<comment type="line" pos:line="825" pos:column="17">// Toolbar menu commands</comment>
		<comment type="line" pos:line="826" pos:column="17">//</comment>
		</case><case pos:line="827" pos:column="17">case <expr><name pos:line="827" pos:column="22">IDM_PROJECT_NEWPROJECT</name></expr> :
		<block pos:line="828" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="829" pos:column="25">HTREEITEM</name></type> <name pos:line="829" pos:column="35">root</name> <init pos:line="829" pos:column="40">= <expr><call><name><name pos:line="829" pos:column="42">_treeView</name><op:operator pos:line="829" pos:column="51">.</op:operator><name pos:line="829" pos:column="52">getRoot</name></name><argument_list pos:line="829" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="831" pos:column="25">NativeLangSpeaker</name> <type:modifier pos:line="831" pos:column="43">*</type:modifier></type><name pos:line="831" pos:column="44">pNativeSpeaker</name> <init pos:line="831" pos:column="59">= <expr><op:operator pos:line="831" pos:column="61">(</op:operator><call><name><name pos:line="831" pos:column="62">NppParameters</name><op:operator pos:line="831" pos:column="75">::</op:operator><name pos:line="831" pos:column="77">getInstance</name></name><argument_list pos:line="831" pos:column="88">()</argument_list></call><op:operator pos:line="831" pos:column="90">)</op:operator><op:operator pos:line="831" pos:column="91">-&gt;</op:operator><call><name pos:line="831" pos:column="93">getNativeLangSpeaker</name><argument_list pos:line="831" pos:column="113">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="832" pos:column="25">generic_string</name></type> <name pos:line="832" pos:column="40">newProjectLabel</name> <init pos:line="832" pos:column="56">= <expr><call><name><name pos:line="832" pos:column="58">pNativeSpeaker</name><op:operator pos:line="832" pos:column="72">-&gt;</op:operator><name pos:line="832" pos:column="74">getProjectPanelLangStr</name></name><argument_list pos:line="832" pos:column="96">(<argument><expr><lit:literal type="string" pos:line="832" pos:column="97">"NewProjectName"</lit:literal></expr></argument>, <argument><expr><name pos:line="832" pos:column="115">PM_NEWPROJECTNAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="833" pos:column="25">HTREEITEM</name></type> <name pos:line="833" pos:column="35">addedItem</name> <init pos:line="833" pos:column="45">= <expr><call><name><name pos:line="833" pos:column="47">_treeView</name><op:operator pos:line="833" pos:column="56">.</op:operator><name pos:line="833" pos:column="57">addItem</name></name><argument_list pos:line="833" pos:column="64">(<argument><expr><call><name><name pos:line="833" pos:column="65">newProjectLabel</name><op:operator pos:line="833" pos:column="80">.</op:operator><name pos:line="833" pos:column="81">c_str</name></name><argument_list pos:line="833" pos:column="86">()</argument_list></call></expr></argument>,  <argument><expr><name pos:line="833" pos:column="91">root</name></expr></argument>, <argument><expr><name pos:line="833" pos:column="97">INDEX_PROJECT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="834" pos:column="25">setWorkSpaceDirty</name><argument_list pos:line="834" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="834" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="835" pos:column="25">_treeView</name><op:operator pos:line="835" pos:column="34">.</op:operator><name pos:line="835" pos:column="35">expand</name></name><argument_list pos:line="835" pos:column="41">(<argument><expr><name pos:line="835" pos:column="42">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="836" pos:column="25">TreeView_EditLabel</name><argument_list pos:line="836" pos:column="43">(<argument><expr><call><name><name pos:line="836" pos:column="44">_treeView</name><op:operator pos:line="836" pos:column="53">.</op:operator><name pos:line="836" pos:column="54">getHSelf</name></name><argument_list pos:line="836" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="836" pos:column="66">addedItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="838" pos:column="17">break;</break>

		</case><case pos:line="840" pos:column="17">case <expr><name pos:line="840" pos:column="22">IDM_PROJECT_NEWWS</name></expr> :
		<block pos:line="841" pos:column="17">{
			<if pos:line="842" pos:column="25">if <condition pos:line="842" pos:column="28">(<expr><name pos:line="842" pos:column="29">_isDirty</name></expr>)</condition><then pos:line="842" pos:column="38">
			<block pos:line="843" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="844" pos:column="33">int</name></type> <name pos:line="844" pos:column="37">res</name> <init pos:line="844" pos:column="41">= <expr><call><name><op:operator pos:line="844" pos:column="43">::</op:operator><name pos:line="844" pos:column="45">MessageBox</name></name><argument_list pos:line="844" pos:column="55">(<argument><expr><name pos:line="844" pos:column="56">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="844" pos:column="64">TEXT</name><argument_list pos:line="844" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="844" pos:column="69">"The current workspace was modified. Do you want to save the current project?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="844" pos:column="150">TEXT</name><argument_list pos:line="844" pos:column="154">(<argument><expr><lit:literal type="string" pos:line="844" pos:column="155">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="844" pos:column="160">MB_YESNOCANCEL</name> <op:operator pos:line="844" pos:column="175">|</op:operator> <name pos:line="844" pos:column="177">MB_ICONQUESTION</name> <op:operator pos:line="844" pos:column="193">|</op:operator> <name pos:line="844" pos:column="195">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="845" pos:column="33">if <condition pos:line="845" pos:column="36">(<expr><name pos:line="845" pos:column="37">res</name> <op:operator pos:line="845" pos:column="41">==</op:operator> <name pos:line="845" pos:column="44">IDYES</name></expr>)</condition><then pos:line="845" pos:column="50">
				<block pos:line="846" pos:column="33">{
					<if pos:line="847" pos:column="41">if <condition pos:line="847" pos:column="44">(<expr><op:operator pos:line="847" pos:column="45">!</op:operator><call><name pos:line="847" pos:column="46">saveWorkSpace</name><argument_list pos:line="847" pos:column="59">()</argument_list></call></expr>)</condition><then pos:line="847" pos:column="62">
						<return pos:line="848" pos:column="49">return;</return></then></if>
				}</block></then>
				<else pos:line="850" pos:column="33">else <if pos:line="850" pos:column="38">if <condition pos:line="850" pos:column="41">(<expr><name pos:line="850" pos:column="42">res</name> <op:operator pos:line="850" pos:column="46">==</op:operator> <name pos:line="850" pos:column="49">IDNO</name></expr>)</condition><then pos:line="850" pos:column="54">
				<block pos:line="851" pos:column="33">{
					<comment type="line" pos:line="852" pos:column="41">// Don't save so do nothing here</comment>
				}</block></then>
				<else pos:line="854" pos:column="33">else <if pos:line="854" pos:column="38">if <condition pos:line="854" pos:column="41">(<expr><name pos:line="854" pos:column="42">res</name> <op:operator pos:line="854" pos:column="46">==</op:operator> <name pos:line="854" pos:column="49">IDCANCEL</name></expr>)</condition><then pos:line="854" pos:column="58"> 
				<block pos:line="855" pos:column="33">{
					<comment type="line" pos:line="856" pos:column="41">// User cancels action "New Workspace" so we interrupt here</comment>
					<return pos:line="857" pos:column="41">return;</return>
				}</block></then></if></else></if></else></if>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="860" pos:column="25">_treeView</name><op:operator pos:line="860" pos:column="34">.</op:operator><name pos:line="860" pos:column="35">removeAllItems</name></name><argument_list pos:line="860" pos:column="49">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="861" pos:column="25">newWorkSpace</name><argument_list pos:line="861" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="863" pos:column="17">break;</break>

		</case><case pos:line="865" pos:column="17">case <expr><name pos:line="865" pos:column="22">IDM_PROJECT_RENAME</name></expr> :
			<expr_stmt><expr><call><name pos:line="866" pos:column="25">TreeView_EditLabel</name><argument_list pos:line="866" pos:column="43">(<argument><expr><call><name><name pos:line="866" pos:column="44">_treeView</name><op:operator pos:line="866" pos:column="53">.</op:operator><name pos:line="866" pos:column="54">getHSelf</name></name><argument_list pos:line="866" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="866" pos:column="66">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="867" pos:column="17">break;</break>

		</case><case pos:line="869" pos:column="17">case <expr><name pos:line="869" pos:column="22">IDM_PROJECT_NEWFOLDER</name></expr> :
		<block pos:line="870" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="871" pos:column="25">NativeLangSpeaker</name> <type:modifier pos:line="871" pos:column="43">*</type:modifier></type><name pos:line="871" pos:column="44">pNativeSpeaker</name> <init pos:line="871" pos:column="59">= <expr><op:operator pos:line="871" pos:column="61">(</op:operator><call><name><name pos:line="871" pos:column="62">NppParameters</name><op:operator pos:line="871" pos:column="75">::</op:operator><name pos:line="871" pos:column="77">getInstance</name></name><argument_list pos:line="871" pos:column="88">()</argument_list></call><op:operator pos:line="871" pos:column="90">)</op:operator><op:operator pos:line="871" pos:column="91">-&gt;</op:operator><call><name pos:line="871" pos:column="93">getNativeLangSpeaker</name><argument_list pos:line="871" pos:column="113">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="872" pos:column="25">generic_string</name></type> <name pos:line="872" pos:column="40">newFolderLabel</name> <init pos:line="872" pos:column="55">= <expr><call><name><name pos:line="872" pos:column="57">pNativeSpeaker</name><op:operator pos:line="872" pos:column="71">-&gt;</op:operator><name pos:line="872" pos:column="73">getProjectPanelLangStr</name></name><argument_list pos:line="872" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="872" pos:column="96">"NewFolderName"</lit:literal></expr></argument>, <argument><expr><name pos:line="872" pos:column="113">PM_NEWFOLDERNAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="873" pos:column="25">addFolder</name><argument_list pos:line="873" pos:column="34">(<argument><expr><name pos:line="873" pos:column="35">hTreeItem</name></expr></argument>, <argument><expr><call><name><name pos:line="873" pos:column="46">newFolderLabel</name><op:operator pos:line="873" pos:column="60">.</op:operator><name pos:line="873" pos:column="61">c_str</name></name><argument_list pos:line="873" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="874" pos:column="25">setWorkSpaceDirty</name><argument_list pos:line="874" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="874" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="876" pos:column="17">break;</break>

		</case><case pos:line="878" pos:column="17">case <expr><name pos:line="878" pos:column="22">IDM_PROJECT_MOVEDOWN</name></expr> :
		<block pos:line="879" pos:column="17">{
			<if pos:line="880" pos:column="25">if <condition pos:line="880" pos:column="28">(<expr><call><name><name pos:line="880" pos:column="29">_treeView</name><op:operator pos:line="880" pos:column="38">.</op:operator><name pos:line="880" pos:column="39">moveDown</name></name><argument_list pos:line="880" pos:column="47">(<argument><expr><name pos:line="880" pos:column="48">hTreeItem</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="880" pos:column="59">
				<expr_stmt><expr><call><name pos:line="881" pos:column="33">setWorkSpaceDirty</name><argument_list pos:line="881" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="881" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="883" pos:column="17">break;</break>

		</case><case pos:line="885" pos:column="17">case <expr><name pos:line="885" pos:column="22">IDM_PROJECT_MOVEUP</name></expr> :
		<block pos:line="886" pos:column="17">{
			<if pos:line="887" pos:column="25">if <condition pos:line="887" pos:column="28">(<expr><call><name><name pos:line="887" pos:column="29">_treeView</name><op:operator pos:line="887" pos:column="38">.</op:operator><name pos:line="887" pos:column="39">moveUp</name></name><argument_list pos:line="887" pos:column="45">(<argument><expr><name pos:line="887" pos:column="46">hTreeItem</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="887" pos:column="57">
				<expr_stmt><expr><call><name pos:line="888" pos:column="33">setWorkSpaceDirty</name><argument_list pos:line="888" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="888" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="890" pos:column="17">break;</break>

		</case><case pos:line="892" pos:column="17">case <expr><name pos:line="892" pos:column="22">IDM_PROJECT_ADDFILES</name></expr> :
		<block pos:line="893" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="894" pos:column="25">addFiles</name><argument_list pos:line="894" pos:column="33">(<argument><expr><name pos:line="894" pos:column="34">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="895" pos:column="25">if <condition pos:line="895" pos:column="28">(<expr><call><name pos:line="895" pos:column="29">getNodeType</name><argument_list pos:line="895" pos:column="40">(<argument><expr><name pos:line="895" pos:column="41">hTreeItem</name></expr></argument>)</argument_list></call> <op:operator pos:line="895" pos:column="52">==</op:operator> <name pos:line="895" pos:column="55">nodeType_folder</name></expr>)</condition><then pos:line="895" pos:column="71">
				<expr_stmt><expr><call><name><name pos:line="896" pos:column="33">_treeView</name><op:operator pos:line="896" pos:column="42">.</op:operator><name pos:line="896" pos:column="43">setItemImage</name></name><argument_list pos:line="896" pos:column="55">(<argument><expr><name pos:line="896" pos:column="56">hTreeItem</name></expr></argument>, <argument><expr><name pos:line="896" pos:column="67">INDEX_OPEN_NODE</name></expr></argument>, <argument><expr><name pos:line="896" pos:column="84">INDEX_OPEN_NODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="898" pos:column="17">break;</break>

		</case><case pos:line="900" pos:column="17">case <expr><name pos:line="900" pos:column="22">IDM_PROJECT_ADDFILESRECUSIVELY</name></expr> :
		<block pos:line="901" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="902" pos:column="25">addFilesFromDirectory</name><argument_list pos:line="902" pos:column="46">(<argument><expr><name pos:line="902" pos:column="47">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="903" pos:column="25">if <condition pos:line="903" pos:column="28">(<expr><call><name pos:line="903" pos:column="29">getNodeType</name><argument_list pos:line="903" pos:column="40">(<argument><expr><name pos:line="903" pos:column="41">hTreeItem</name></expr></argument>)</argument_list></call> <op:operator pos:line="903" pos:column="52">==</op:operator> <name pos:line="903" pos:column="55">nodeType_folder</name></expr>)</condition><then pos:line="903" pos:column="71">
				<expr_stmt><expr><call><name><name pos:line="904" pos:column="33">_treeView</name><op:operator pos:line="904" pos:column="42">.</op:operator><name pos:line="904" pos:column="43">setItemImage</name></name><argument_list pos:line="904" pos:column="55">(<argument><expr><name pos:line="904" pos:column="56">hTreeItem</name></expr></argument>, <argument><expr><name pos:line="904" pos:column="67">INDEX_OPEN_NODE</name></expr></argument>, <argument><expr><name pos:line="904" pos:column="84">INDEX_OPEN_NODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="906" pos:column="17">break;</break>

		</case><case pos:line="908" pos:column="17">case <expr><name pos:line="908" pos:column="22">IDM_PROJECT_OPENWS</name></expr>:
		<block pos:line="909" pos:column="17">{
			<if pos:line="910" pos:column="25">if <condition pos:line="910" pos:column="28">(<expr><name pos:line="910" pos:column="29">_isDirty</name></expr>)</condition><then pos:line="910" pos:column="38">
			<block pos:line="911" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="912" pos:column="33">int</name></type> <name pos:line="912" pos:column="37">res</name> <init pos:line="912" pos:column="41">= <expr><call><name><op:operator pos:line="912" pos:column="43">::</op:operator><name pos:line="912" pos:column="45">MessageBox</name></name><argument_list pos:line="912" pos:column="55">(<argument><expr><name pos:line="912" pos:column="56">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="912" pos:column="64">TEXT</name><argument_list pos:line="912" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="912" pos:column="69">"The current workspace was modified. Do you want to save the current project?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="912" pos:column="150">TEXT</name><argument_list pos:line="912" pos:column="154">(<argument><expr><lit:literal type="string" pos:line="912" pos:column="155">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="912" pos:column="160">MB_YESNOCANCEL</name> <op:operator pos:line="912" pos:column="175">|</op:operator> <name pos:line="912" pos:column="177">MB_ICONQUESTION</name> <op:operator pos:line="912" pos:column="193">|</op:operator> <name pos:line="912" pos:column="195">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="913" pos:column="33">if <condition pos:line="913" pos:column="36">(<expr><name pos:line="913" pos:column="37">res</name> <op:operator pos:line="913" pos:column="41">==</op:operator> <name pos:line="913" pos:column="44">IDYES</name></expr>)</condition><then pos:line="913" pos:column="50">
				<block pos:line="914" pos:column="33">{
					<if pos:line="915" pos:column="41">if <condition pos:line="915" pos:column="44">(<expr><op:operator pos:line="915" pos:column="45">!</op:operator><call><name pos:line="915" pos:column="46">saveWorkSpace</name><argument_list pos:line="915" pos:column="59">()</argument_list></call></expr>)</condition><then pos:line="915" pos:column="62">
						<return pos:line="916" pos:column="49">return;</return></then></if>
				}</block></then>
				<else pos:line="918" pos:column="33">else <if pos:line="918" pos:column="38">if <condition pos:line="918" pos:column="41">(<expr><name pos:line="918" pos:column="42">res</name> <op:operator pos:line="918" pos:column="46">==</op:operator> <name pos:line="918" pos:column="49">IDNO</name></expr>)</condition><then pos:line="918" pos:column="54">
				<block pos:line="919" pos:column="33">{
					<comment type="line" pos:line="920" pos:column="41">// Don't save so do nothing here</comment>
				}</block></then>
				<else pos:line="922" pos:column="33">else <if pos:line="922" pos:column="38">if <condition pos:line="922" pos:column="41">(<expr><name pos:line="922" pos:column="42">res</name> <op:operator pos:line="922" pos:column="46">==</op:operator> <name pos:line="922" pos:column="49">IDCANCEL</name></expr>)</condition><then pos:line="922" pos:column="58"> 
				<block pos:line="923" pos:column="33">{
					<comment type="line" pos:line="924" pos:column="41">// User cancels action "New Workspace" so we interrupt here</comment>
					<return pos:line="925" pos:column="41">return;</return>
				}</block></then></if></else></if></else></if>
			}</block></then></if>

			<decl_stmt><decl><type><name pos:line="929" pos:column="25">FileDialog</name></type> <name pos:line="929" pos:column="36">fDlg</name><argument_list pos:line="929" pos:column="40">(<argument><expr><name pos:line="929" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="929" pos:column="49">::</op:operator><name pos:line="929" pos:column="51">GetModuleHandle</name></name><argument_list pos:line="929" pos:column="66">(<argument><expr><name pos:line="929" pos:column="67">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="930" pos:column="25">fDlg</name><op:operator pos:line="930" pos:column="29">.</op:operator><name pos:line="930" pos:column="30">setExtFilter</name></name><argument_list pos:line="930" pos:column="42">(<argument><expr><call><name pos:line="930" pos:column="43">TEXT</name><argument_list pos:line="930" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="930" pos:column="48">"All types"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="930" pos:column="62">TEXT</name><argument_list pos:line="930" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="930" pos:column="67">".*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="930" pos:column="74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="931" pos:column="25">if <condition pos:line="931" pos:column="28">(<decl><type><name pos:line="931" pos:column="29">TCHAR</name> <type:modifier pos:line="931" pos:column="35">*</type:modifier></type><name pos:line="931" pos:column="36">fn</name> <init pos:line="931" pos:column="39">= <expr><call><name><name pos:line="931" pos:column="41">fDlg</name><op:operator pos:line="931" pos:column="45">.</op:operator><name pos:line="931" pos:column="46">doOpenSingleFileDlg</name></name><argument_list pos:line="931" pos:column="65">()</argument_list></call></expr></init></decl>)</condition><then pos:line="931" pos:column="68">
			<block pos:line="932" pos:column="25">{
				<if pos:line="933" pos:column="33">if <condition pos:line="933" pos:column="36">(<expr><op:operator pos:line="933" pos:column="37">!</op:operator><call><name pos:line="933" pos:column="38">openWorkSpace</name><argument_list pos:line="933" pos:column="51">(<argument><expr><name pos:line="933" pos:column="52">fn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="933" pos:column="56">
				<block pos:line="934" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="935" pos:column="41">::</op:operator><name pos:line="935" pos:column="43">MessageBox</name></name><argument_list pos:line="935" pos:column="53">(<argument><expr><name pos:line="935" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="935" pos:column="62">TEXT</name><argument_list pos:line="935" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="935" pos:column="67">"Opening Workspace failed.\rIt seems the file to open is not valid project file."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="935" pos:column="151">TEXT</name><argument_list pos:line="935" pos:column="155">(<argument><expr><lit:literal type="string" pos:line="935" pos:column="156">"Open Workspace"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="935" pos:column="175">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="936" pos:column="41">return;</return>
				}</block></then></if>
			}</block></then></if>
		}</block>
		<break pos:line="940" pos:column="17">break;</break>

		</case><case pos:line="942" pos:column="17">case <expr><name pos:line="942" pos:column="22">IDM_PROJECT_RELOADWS</name></expr>:
		<block pos:line="943" pos:column="17">{
			<if pos:line="944" pos:column="25">if <condition pos:line="944" pos:column="28">(<expr><name pos:line="944" pos:column="29">_isDirty</name></expr>)</condition><then pos:line="944" pos:column="38">
			<block pos:line="945" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="946" pos:column="33">int</name></type> <name pos:line="946" pos:column="37">res</name> <init pos:line="946" pos:column="41">= <expr><call><name><op:operator pos:line="946" pos:column="43">::</op:operator><name pos:line="946" pos:column="45">MessageBox</name></name><argument_list pos:line="946" pos:column="55">(<argument><expr><name pos:line="946" pos:column="56">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="946" pos:column="64">TEXT</name><argument_list pos:line="946" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="946" pos:column="69">"The current workspace was modified. Reload will discard all modification.\rDo you want to continue?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="946" pos:column="173">TEXT</name><argument_list pos:line="946" pos:column="177">(<argument><expr><lit:literal type="string" pos:line="946" pos:column="178">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="946" pos:column="183">MB_YESNO</name> <op:operator pos:line="946" pos:column="192">|</op:operator> <name pos:line="946" pos:column="194">MB_ICONQUESTION</name> <op:operator pos:line="946" pos:column="210">|</op:operator> <name pos:line="946" pos:column="212">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="947" pos:column="33">if <condition pos:line="947" pos:column="36">(<expr><name pos:line="947" pos:column="37">res</name> <op:operator pos:line="947" pos:column="41">==</op:operator> <name pos:line="947" pos:column="44">IDYES</name></expr>)</condition><then pos:line="947" pos:column="50">
				<block pos:line="948" pos:column="33">{
					<comment type="line" pos:line="949" pos:column="41">// Do nothing</comment>
				}</block></then>
				<else pos:line="951" pos:column="33">else <if pos:line="951" pos:column="38">if <condition pos:line="951" pos:column="41">(<expr><name pos:line="951" pos:column="42">res</name> <op:operator pos:line="951" pos:column="46">==</op:operator> <name pos:line="951" pos:column="49">IDNO</name></expr>)</condition><then pos:line="951" pos:column="54">
				<block pos:line="952" pos:column="33">{
					<return pos:line="953" pos:column="41">return;</return>
				}</block></then></if></else></if>
			}</block></then></if>

			<if pos:line="957" pos:column="25">if <condition pos:line="957" pos:column="28">(<expr><call><name><op:operator pos:line="957" pos:column="29">::</op:operator><name pos:line="957" pos:column="31">PathFileExists</name></name><argument_list pos:line="957" pos:column="45">(<argument><expr><call><name><name pos:line="957" pos:column="46">_workSpaceFilePath</name><op:operator pos:line="957" pos:column="64">.</op:operator><name pos:line="957" pos:column="65">c_str</name></name><argument_list pos:line="957" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="957" pos:column="74">
			<block pos:line="958" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="959" pos:column="33">openWorkSpace</name><argument_list pos:line="959" pos:column="46">(<argument><expr><call><name><name pos:line="959" pos:column="47">_workSpaceFilePath</name><op:operator pos:line="959" pos:column="65">.</op:operator><name pos:line="959" pos:column="66">c_str</name></name><argument_list pos:line="959" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="961" pos:column="25">else
			<block pos:line="962" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="963" pos:column="33">::</op:operator><name pos:line="963" pos:column="35">MessageBox</name></name><argument_list pos:line="963" pos:column="45">(<argument><expr><name pos:line="963" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="963" pos:column="54">TEXT</name><argument_list pos:line="963" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="963" pos:column="59">"Can not find file to reload"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="963" pos:column="91">TEXT</name><argument_list pos:line="963" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="963" pos:column="96">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="963" pos:column="101">MB_OK</name> <op:operator pos:line="963" pos:column="107">|</op:operator> <name pos:line="963" pos:column="109">MB_ICONEXCLAMATION</name> <op:operator pos:line="963" pos:column="128">|</op:operator> <name pos:line="963" pos:column="130">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block>
		<break pos:line="966" pos:column="17">break;</break>

		</case><case pos:line="968" pos:column="17">case <expr><name pos:line="968" pos:column="22">IDM_PROJECT_SAVEWS</name></expr>:
			<expr_stmt><expr><call><name pos:line="969" pos:column="25">saveWorkSpace</name><argument_list pos:line="969" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<break pos:line="970" pos:column="17">break;</break>

		</case><case pos:line="972" pos:column="17">case <expr><name pos:line="972" pos:column="22">IDM_PROJECT_SAVEACOPYASWS</name></expr>:
		</case><case pos:line="973" pos:column="17">case <expr><name pos:line="973" pos:column="22">IDM_PROJECT_SAVEASWS</name></expr>:
		<block pos:line="974" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="975" pos:column="25">saveWorkSpaceAs</name><argument_list pos:line="975" pos:column="40">(<argument><expr><name pos:line="975" pos:column="41">cmdID</name> <op:operator pos:line="975" pos:column="47">==</op:operator> <name pos:line="975" pos:column="50">IDM_PROJECT_SAVEACOPYASWS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="977" pos:column="17">break;</break>

		</case><case pos:line="979" pos:column="17">case <expr><name pos:line="979" pos:column="22">IDM_PROJECT_DELETEFOLDER</name></expr> :
		<block pos:line="980" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="981" pos:column="25">HTREEITEM</name></type> <name pos:line="981" pos:column="35">parent</name> <init pos:line="981" pos:column="42">= <expr><call><name><name pos:line="981" pos:column="44">_treeView</name><op:operator pos:line="981" pos:column="53">.</op:operator><name pos:line="981" pos:column="54">getParent</name></name><argument_list pos:line="981" pos:column="63">(<argument><expr><name pos:line="981" pos:column="64">hTreeItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="983" pos:column="25">if <condition pos:line="983" pos:column="28">(<expr><call><name><name pos:line="983" pos:column="29">_treeView</name><op:operator pos:line="983" pos:column="38">.</op:operator><name pos:line="983" pos:column="39">getChildFrom</name></name><argument_list pos:line="983" pos:column="51">(<argument><expr><name pos:line="983" pos:column="52">hTreeItem</name></expr></argument>)</argument_list></call> <op:operator pos:line="983" pos:column="63">!=</op:operator> <name pos:line="983" pos:column="66">NULL</name></expr>)</condition><then pos:line="983" pos:column="71">
			<block pos:line="984" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="985" pos:column="33">TCHAR</name></type> <name><name pos:line="985" pos:column="39">str2display</name><index pos:line="985" pos:column="50">[<expr><name pos:line="985" pos:column="51">MAX_PATH</name></expr>]</index></name> <init pos:line="985" pos:column="61">= <expr><call><name pos:line="985" pos:column="63">TEXT</name><argument_list pos:line="985" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="985" pos:column="68">"All the sub-items will be removed.\rAre you sure to remove this folder from the project?"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="986" pos:column="33">if <condition pos:line="986" pos:column="36">(<expr><call><name><op:operator pos:line="986" pos:column="37">::</op:operator><name pos:line="986" pos:column="39">MessageBox</name></name><argument_list pos:line="986" pos:column="49">(<argument><expr><name pos:line="986" pos:column="50">_hSelf</name></expr></argument>, <argument><expr><name pos:line="986" pos:column="58">str2display</name></expr></argument>, <argument><expr><call><name pos:line="986" pos:column="71">TEXT</name><argument_list pos:line="986" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="986" pos:column="76">"Remove folder from projet"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="986" pos:column="106">MB_YESNO</name></expr></argument>)</argument_list></call> <op:operator pos:line="986" pos:column="116">==</op:operator> <name pos:line="986" pos:column="119">IDYES</name></expr>)</condition><then pos:line="986" pos:column="125">
				<block pos:line="987" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="988" pos:column="41">_treeView</name><op:operator pos:line="988" pos:column="50">.</op:operator><name pos:line="988" pos:column="51">removeItem</name></name><argument_list pos:line="988" pos:column="61">(<argument><expr><name pos:line="988" pos:column="62">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="989" pos:column="41">setWorkSpaceDirty</name><argument_list pos:line="989" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="989" pos:column="59">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then>
			<else pos:line="992" pos:column="25">else
			<block pos:line="993" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="994" pos:column="33">_treeView</name><op:operator pos:line="994" pos:column="42">.</op:operator><name pos:line="994" pos:column="43">removeItem</name></name><argument_list pos:line="994" pos:column="53">(<argument><expr><name pos:line="994" pos:column="54">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="995" pos:column="33">setWorkSpaceDirty</name><argument_list pos:line="995" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="995" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
			<if pos:line="997" pos:column="25">if <condition pos:line="997" pos:column="28">(<expr><call><name pos:line="997" pos:column="29">getNodeType</name><argument_list pos:line="997" pos:column="40">(<argument><expr><name pos:line="997" pos:column="41">parent</name></expr></argument>)</argument_list></call> <op:operator pos:line="997" pos:column="49">==</op:operator> <name pos:line="997" pos:column="52">nodeType_folder</name></expr>)</condition><then pos:line="997" pos:column="68">
				<expr_stmt><expr><call><name><name pos:line="998" pos:column="33">_treeView</name><op:operator pos:line="998" pos:column="42">.</op:operator><name pos:line="998" pos:column="43">setItemImage</name></name><argument_list pos:line="998" pos:column="55">(<argument><expr><name pos:line="998" pos:column="56">parent</name></expr></argument>, <argument><expr><name pos:line="998" pos:column="64">INDEX_CLOSED_NODE</name></expr></argument>, <argument><expr><name pos:line="998" pos:column="83">INDEX_CLOSED_NODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="1000" pos:column="17">break;</break>

		</case><case pos:line="1002" pos:column="17">case <expr><name pos:line="1002" pos:column="22">IDM_PROJECT_DELETEFILE</name></expr> :
		<block pos:line="1003" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1004" pos:column="25">HTREEITEM</name></type> <name pos:line="1004" pos:column="35">parent</name> <init pos:line="1004" pos:column="42">= <expr><call><name><name pos:line="1004" pos:column="44">_treeView</name><op:operator pos:line="1004" pos:column="53">.</op:operator><name pos:line="1004" pos:column="54">getParent</name></name><argument_list pos:line="1004" pos:column="63">(<argument><expr><name pos:line="1004" pos:column="64">hTreeItem</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="1006" pos:column="25">TCHAR</name></type> <name><name pos:line="1006" pos:column="31">str2display</name><index pos:line="1006" pos:column="42">[<expr><name pos:line="1006" pos:column="43">MAX_PATH</name></expr>]</index></name> <init pos:line="1006" pos:column="53">= <expr><call><name pos:line="1006" pos:column="55">TEXT</name><argument_list pos:line="1006" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1006" pos:column="60">"Are you sure to remove this file from the project?"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1007" pos:column="25">if <condition pos:line="1007" pos:column="28">(<expr><call><name><op:operator pos:line="1007" pos:column="29">::</op:operator><name pos:line="1007" pos:column="31">MessageBox</name></name><argument_list pos:line="1007" pos:column="41">(<argument><expr><name pos:line="1007" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1007" pos:column="50">str2display</name></expr></argument>, <argument><expr><call><name pos:line="1007" pos:column="63">TEXT</name><argument_list pos:line="1007" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="1007" pos:column="68">"Remove file from projet"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1007" pos:column="96">MB_YESNO</name></expr></argument>)</argument_list></call> <op:operator pos:line="1007" pos:column="106">==</op:operator> <name pos:line="1007" pos:column="109">IDYES</name></expr>)</condition><then pos:line="1007" pos:column="115">
			<block pos:line="1008" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1009" pos:column="33">_treeView</name><op:operator pos:line="1009" pos:column="42">.</op:operator><name pos:line="1009" pos:column="43">removeItem</name></name><argument_list pos:line="1009" pos:column="53">(<argument><expr><name pos:line="1009" pos:column="54">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1010" pos:column="33">setWorkSpaceDirty</name><argument_list pos:line="1010" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="1010" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="1011" pos:column="33">if <condition pos:line="1011" pos:column="36">(<expr><call><name pos:line="1011" pos:column="37">getNodeType</name><argument_list pos:line="1011" pos:column="48">(<argument><expr><name pos:line="1011" pos:column="49">parent</name></expr></argument>)</argument_list></call> <op:operator pos:line="1011" pos:column="57">==</op:operator> <name pos:line="1011" pos:column="60">nodeType_folder</name></expr>)</condition><then pos:line="1011" pos:column="76">
					<expr_stmt><expr><call><name><name pos:line="1012" pos:column="41">_treeView</name><op:operator pos:line="1012" pos:column="50">.</op:operator><name pos:line="1012" pos:column="51">setItemImage</name></name><argument_list pos:line="1012" pos:column="63">(<argument><expr><name pos:line="1012" pos:column="64">parent</name></expr></argument>, <argument><expr><name pos:line="1012" pos:column="72">INDEX_CLOSED_NODE</name></expr></argument>, <argument><expr><name pos:line="1012" pos:column="91">INDEX_CLOSED_NODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></then></if>
		}</block>
		<break pos:line="1015" pos:column="17">break;</break>

		</case><case pos:line="1017" pos:column="17">case <expr><name pos:line="1017" pos:column="22">IDM_PROJECT_MODIFYFILEPATH</name></expr> :
		<block pos:line="1018" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1019" pos:column="25">FileRelocalizerDlg</name></type> <name pos:line="1019" pos:column="44">fileRelocalizerDlg</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1020" pos:column="25">fileRelocalizerDlg</name><op:operator pos:line="1020" pos:column="43">.</op:operator><name pos:line="1020" pos:column="44">init</name></name><argument_list pos:line="1020" pos:column="48">(<argument><expr><name pos:line="1020" pos:column="49">_hInst</name></expr></argument>, <argument><expr><name pos:line="1020" pos:column="57">_hParent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="1022" pos:column="25">TCHAR</name></type> <name><name pos:line="1022" pos:column="31">textBuffer</name><index pos:line="1022" pos:column="41">[<expr><name pos:line="1022" pos:column="42">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1023" pos:column="25">TVITEM</name></type> <name pos:line="1023" pos:column="32">tvItem</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1024" pos:column="25">tvItem</name><op:operator pos:line="1024" pos:column="31">.</op:operator><name pos:line="1024" pos:column="32">hItem</name></name> <op:operator pos:line="1024" pos:column="38">=</op:operator> <name pos:line="1024" pos:column="40">hTreeItem</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1025" pos:column="25">tvItem</name><op:operator pos:line="1025" pos:column="31">.</op:operator><name pos:line="1025" pos:column="32">mask</name></name> <op:operator pos:line="1025" pos:column="37">=</op:operator> <name pos:line="1025" pos:column="39">TVIF_TEXT</name> <op:operator pos:line="1025" pos:column="49">|</op:operator> <name pos:line="1025" pos:column="51">TVIF_PARAM</name> <op:operator pos:line="1025" pos:column="62">|</op:operator> <name pos:line="1025" pos:column="64">TVIF_IMAGE</name> <op:operator pos:line="1025" pos:column="75">|</op:operator> <name pos:line="1025" pos:column="77">TVIF_SELECTEDIMAGE</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1026" pos:column="25">tvItem</name><op:operator pos:line="1026" pos:column="31">.</op:operator><name pos:line="1026" pos:column="32">pszText</name></name> <op:operator pos:line="1026" pos:column="40">=</op:operator> <name pos:line="1026" pos:column="42">textBuffer</name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1027" pos:column="25">tvItem</name><op:operator pos:line="1027" pos:column="31">.</op:operator><name pos:line="1027" pos:column="32">cchTextMax</name></name> <op:operator pos:line="1027" pos:column="43">=</op:operator> <name pos:line="1027" pos:column="45">MAX_PATH</name></expr>;</expr_stmt>
			
			<expr_stmt><expr><call><name pos:line="1029" pos:column="25">SendMessage</name><argument_list pos:line="1029" pos:column="36">(<argument><expr><call><name><name pos:line="1029" pos:column="37">_treeView</name><op:operator pos:line="1029" pos:column="46">.</op:operator><name pos:line="1029" pos:column="47">getHSelf</name></name><argument_list pos:line="1029" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1029" pos:column="59">TVM_GETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1029" pos:column="72">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="1029" pos:column="74">(</op:operator><name pos:line="1029" pos:column="75">LPARAM</name><op:operator pos:line="1029" pos:column="81">)</op:operator><op:operator pos:line="1029" pos:column="82">&amp;</op:operator><name pos:line="1029" pos:column="83">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1030" pos:column="25">if <condition pos:line="1030" pos:column="28">(<expr><op:operator pos:line="1030" pos:column="29">!</op:operator><name><name pos:line="1030" pos:column="30">tvItem</name><op:operator pos:line="1030" pos:column="36">.</op:operator><name pos:line="1030" pos:column="37">lParam</name></name></expr>)</condition><then pos:line="1030" pos:column="44">
				<return pos:line="1031" pos:column="33">return;</return></then></if>
			<decl_stmt><decl><type><name pos:line="1032" pos:column="25">generic_string</name> <type:modifier pos:line="1032" pos:column="40">*</type:modifier></type> <name pos:line="1032" pos:column="42">fn</name> <init pos:line="1032" pos:column="45">= <expr><op:operator pos:line="1032" pos:column="47">(</op:operator><name pos:line="1032" pos:column="48">generic_string</name> <op:operator pos:line="1032" pos:column="63">*</op:operator><op:operator pos:line="1032" pos:column="64">)</op:operator><name><name pos:line="1032" pos:column="65">tvItem</name><op:operator pos:line="1032" pos:column="71">.</op:operator><name pos:line="1032" pos:column="72">lParam</name></name></expr></init></decl>;</decl_stmt>

			<if pos:line="1034" pos:column="25">if <condition pos:line="1034" pos:column="28">(<expr><call><name><name pos:line="1034" pos:column="29">fileRelocalizerDlg</name><op:operator pos:line="1034" pos:column="47">.</op:operator><name pos:line="1034" pos:column="48">doDialog</name></name><argument_list pos:line="1034" pos:column="56">(<argument><expr><call><name><name pos:line="1034" pos:column="57">fn</name><op:operator pos:line="1034" pos:column="59">-&gt;</op:operator><name pos:line="1034" pos:column="61">c_str</name></name><argument_list pos:line="1034" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="1034" pos:column="70">==</op:operator> <lit:literal type="number" pos:line="1034" pos:column="73">0</lit:literal></expr>)</condition><then pos:line="1034" pos:column="75">
			<block pos:line="1035" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1036" pos:column="33">generic_string</name></type> <name pos:line="1036" pos:column="48">newValue</name> <init pos:line="1036" pos:column="57">= <expr><call><name><name pos:line="1036" pos:column="59">fileRelocalizerDlg</name><op:operator pos:line="1036" pos:column="77">.</op:operator><name pos:line="1036" pos:column="78">getFullFilePath</name></name><argument_list pos:line="1036" pos:column="93">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1037" pos:column="33">if <condition pos:line="1037" pos:column="36">(<expr><op:operator pos:line="1037" pos:column="37">*</op:operator><name pos:line="1037" pos:column="38">fn</name> <op:operator pos:line="1037" pos:column="41">==</op:operator> <name pos:line="1037" pos:column="44">newValue</name></expr>)</condition><then pos:line="1037" pos:column="53">
					<return pos:line="1038" pos:column="41">return;</return></then></if>

				<expr_stmt><expr><op:operator pos:line="1040" pos:column="33">*</op:operator><name pos:line="1040" pos:column="34">fn</name> <op:operator pos:line="1040" pos:column="37">=</op:operator> <name pos:line="1040" pos:column="39">newValue</name></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1041" pos:column="33">TCHAR</name> <type:modifier pos:line="1041" pos:column="39">*</type:modifier></type><name pos:line="1041" pos:column="40">strValueLabel</name> <init pos:line="1041" pos:column="54">= <expr><call><name><op:operator pos:line="1041" pos:column="56">::</op:operator><name pos:line="1041" pos:column="58">PathFindFileName</name></name><argument_list pos:line="1041" pos:column="74">(<argument><expr><call><name><name pos:line="1041" pos:column="75">fn</name><op:operator pos:line="1041" pos:column="77">-&gt;</op:operator><name pos:line="1041" pos:column="79">c_str</name></name><argument_list pos:line="1041" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="1042" pos:column="33">lstrcpy</name><argument_list pos:line="1042" pos:column="40">(<argument><expr><name pos:line="1042" pos:column="41">textBuffer</name></expr></argument>, <argument><expr><name pos:line="1042" pos:column="53">strValueLabel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1043" pos:column="33">int</name></type> <name pos:line="1043" pos:column="37">iImage</name> <init pos:line="1043" pos:column="44">= <expr><call><name><op:operator pos:line="1043" pos:column="46">::</op:operator><name pos:line="1043" pos:column="48">PathFileExists</name></name><argument_list pos:line="1043" pos:column="62">(<argument><expr><call><name><name pos:line="1043" pos:column="63">fn</name><op:operator pos:line="1043" pos:column="65">-&gt;</op:operator><name pos:line="1043" pos:column="67">c_str</name></name><argument_list pos:line="1043" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1043" pos:column="75">?</op:operator><name pos:line="1043" pos:column="76">INDEX_LEAF</name><op:operator pos:line="1043" pos:column="86">:</op:operator><name pos:line="1043" pos:column="87">INDEX_LEAF_INVALID</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1044" pos:column="33">tvItem</name><op:operator pos:line="1044" pos:column="39">.</op:operator><name pos:line="1044" pos:column="40">iImage</name></name> <op:operator pos:line="1044" pos:column="47">=</op:operator> <name><name pos:line="1044" pos:column="49">tvItem</name><op:operator pos:line="1044" pos:column="55">.</op:operator><name pos:line="1044" pos:column="56">iSelectedImage</name></name> <op:operator pos:line="1044" pos:column="71">=</op:operator> <name pos:line="1044" pos:column="73">iImage</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1045" pos:column="33">SendMessage</name><argument_list pos:line="1045" pos:column="44">(<argument><expr><call><name><name pos:line="1045" pos:column="45">_treeView</name><op:operator pos:line="1045" pos:column="54">.</op:operator><name pos:line="1045" pos:column="55">getHSelf</name></name><argument_list pos:line="1045" pos:column="63">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1045" pos:column="67">TVM_SETITEM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1045" pos:column="80">0</lit:literal></expr></argument>,<argument><expr><op:operator pos:line="1045" pos:column="82">(</op:operator><name pos:line="1045" pos:column="83">LPARAM</name><op:operator pos:line="1045" pos:column="89">)</op:operator><op:operator pos:line="1045" pos:column="90">&amp;</op:operator><name pos:line="1045" pos:column="91">tvItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1046" pos:column="33">setWorkSpaceDirty</name><argument_list pos:line="1046" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="1046" pos:column="51">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block>
		<break pos:line="1049" pos:column="17">break;</break>
	</case>}</block></switch>
}</block></function>

<function><type><name pos:line="1053" pos:column="1">bool</name></type> <name><name pos:line="1053" pos:column="6">ProjectPanel</name><op:operator pos:line="1053" pos:column="18">::</op:operator><name pos:line="1053" pos:column="20">saveWorkSpaceAs</name></name><parameter_list pos:line="1053" pos:column="35">(<param><decl><type><name pos:line="1053" pos:column="36">bool</name></type> <name pos:line="1053" pos:column="41">saveCopyAs</name></decl></param>)</parameter_list>
<block pos:line="1054" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1055" pos:column="9">FileDialog</name></type> <name pos:line="1055" pos:column="20">fDlg</name><argument_list pos:line="1055" pos:column="24">(<argument><expr><name pos:line="1055" pos:column="25">_hSelf</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="1055" pos:column="33">::</op:operator><name pos:line="1055" pos:column="35">GetModuleHandle</name></name><argument_list pos:line="1055" pos:column="50">(<argument><expr><name pos:line="1055" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1056" pos:column="9">fDlg</name><op:operator pos:line="1056" pos:column="13">.</op:operator><name pos:line="1056" pos:column="14">setExtFilter</name></name><argument_list pos:line="1056" pos:column="26">(<argument><expr><call><name pos:line="1056" pos:column="27">TEXT</name><argument_list pos:line="1056" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="1056" pos:column="32">"All types"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1056" pos:column="46">TEXT</name><argument_list pos:line="1056" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1056" pos:column="51">".*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1056" pos:column="58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1058" pos:column="9">if <condition pos:line="1058" pos:column="12">(<decl><type><name pos:line="1058" pos:column="13">TCHAR</name> <type:modifier pos:line="1058" pos:column="19">*</type:modifier></type><name pos:line="1058" pos:column="20">fn</name> <init pos:line="1058" pos:column="23">= <expr><call><name><name pos:line="1058" pos:column="25">fDlg</name><op:operator pos:line="1058" pos:column="29">.</op:operator><name pos:line="1058" pos:column="30">doSaveDlg</name></name><argument_list pos:line="1058" pos:column="39">()</argument_list></call></expr></init></decl>)</condition><then pos:line="1058" pos:column="42">
	<block pos:line="1059" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="1060" pos:column="17">writeWorkSpace</name><argument_list pos:line="1060" pos:column="31">(<argument><expr><name pos:line="1060" pos:column="32">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1061" pos:column="17">if <condition pos:line="1061" pos:column="20">(<expr><op:operator pos:line="1061" pos:column="21">!</op:operator><name pos:line="1061" pos:column="22">saveCopyAs</name></expr>)</condition><then pos:line="1061" pos:column="33">
		<block pos:line="1062" pos:column="17">{
			<expr_stmt><expr><name pos:line="1063" pos:column="25">_workSpaceFilePath</name> <op:operator pos:line="1063" pos:column="44">=</op:operator> <name pos:line="1063" pos:column="46">fn</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1064" pos:column="25">setWorkSpaceDirty</name><argument_list pos:line="1064" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="1064" pos:column="43">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<return pos:line="1066" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1066" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="1068" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1068" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1071" pos:column="1">void</name></type> <name><name pos:line="1071" pos:column="6">ProjectPanel</name><op:operator pos:line="1071" pos:column="18">::</op:operator><name pos:line="1071" pos:column="20">addFiles</name></name><parameter_list pos:line="1071" pos:column="28">(<param><decl><type><name pos:line="1071" pos:column="29">HTREEITEM</name></type> <name pos:line="1071" pos:column="39">hTreeItem</name></decl></param>)</parameter_list>
<block pos:line="1072" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1073" pos:column="9">FileDialog</name></type> <name pos:line="1073" pos:column="20">fDlg</name><argument_list pos:line="1073" pos:column="24">(<argument><expr><name pos:line="1073" pos:column="25">_hSelf</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="1073" pos:column="33">::</op:operator><name pos:line="1073" pos:column="35">GetModuleHandle</name></name><argument_list pos:line="1073" pos:column="50">(<argument><expr><name pos:line="1073" pos:column="51">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1074" pos:column="9">fDlg</name><op:operator pos:line="1074" pos:column="13">.</op:operator><name pos:line="1074" pos:column="14">setExtFilter</name></name><argument_list pos:line="1074" pos:column="26">(<argument><expr><call><name pos:line="1074" pos:column="27">TEXT</name><argument_list pos:line="1074" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="1074" pos:column="32">"All types"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1074" pos:column="46">TEXT</name><argument_list pos:line="1074" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1074" pos:column="51">".*"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1074" pos:column="58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1076" pos:column="9">if <condition pos:line="1076" pos:column="12">(<decl><type><name pos:line="1076" pos:column="13">stringVector</name> <type:modifier pos:line="1076" pos:column="26">*</type:modifier></type><name pos:line="1076" pos:column="27">pfns</name> <init pos:line="1076" pos:column="32">= <expr><call><name><name pos:line="1076" pos:column="34">fDlg</name><op:operator pos:line="1076" pos:column="38">.</op:operator><name pos:line="1076" pos:column="39">doOpenMultiFilesDlg</name></name><argument_list pos:line="1076" pos:column="58">()</argument_list></call></expr></init></decl>)</condition><then pos:line="1076" pos:column="61">
	<block pos:line="1077" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1078" pos:column="17">size_t</name></type> <name pos:line="1078" pos:column="24">sz</name> <init pos:line="1078" pos:column="27">= <expr><call><name><name pos:line="1078" pos:column="29">pfns</name><op:operator pos:line="1078" pos:column="33">-&gt;</op:operator><name pos:line="1078" pos:column="35">size</name></name><argument_list pos:line="1078" pos:column="39">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<for pos:line="1079" pos:column="17">for (<init><decl><type><name pos:line="1079" pos:column="22">size_t</name></type> <name pos:line="1079" pos:column="29">i</name> <init pos:line="1079" pos:column="31">= <expr><lit:literal type="number" pos:line="1079" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1079" pos:column="37">i</name> <op:operator pos:line="1079" pos:column="39">&lt;</op:operator> <name pos:line="1079" pos:column="41">sz</name></expr> ;</condition> <incr><expr><name pos:line="1079" pos:column="46">i</name><op:operator pos:line="1079" pos:column="47">++</op:operator></expr></incr>)
		<block pos:line="1080" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1081" pos:column="25">TCHAR</name> <type:modifier pos:line="1081" pos:column="31">*</type:modifier></type><name pos:line="1081" pos:column="32">strValueLabel</name> <init pos:line="1081" pos:column="46">= <expr><call><name><op:operator pos:line="1081" pos:column="48">::</op:operator><name pos:line="1081" pos:column="50">PathFindFileName</name></name><argument_list pos:line="1081" pos:column="66">(<argument><expr><call><name><name pos:line="1081" pos:column="67">pfns</name><op:operator pos:line="1081" pos:column="71">-&gt;</op:operator><name pos:line="1081" pos:column="73">at</name></name><argument_list pos:line="1081" pos:column="75">(<argument><expr><name pos:line="1081" pos:column="76">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1081" pos:column="78">.</op:operator><call><name pos:line="1081" pos:column="79">c_str</name><argument_list pos:line="1081" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1082" pos:column="25">_treeView</name><op:operator pos:line="1082" pos:column="34">.</op:operator><name pos:line="1082" pos:column="35">addItem</name></name><argument_list pos:line="1082" pos:column="42">(<argument><expr><name pos:line="1082" pos:column="43">strValueLabel</name></expr></argument>, <argument><expr><name pos:line="1082" pos:column="58">hTreeItem</name></expr></argument>, <argument><expr><name pos:line="1082" pos:column="69">INDEX_LEAF</name></expr></argument>, <argument><expr><call><name><name pos:line="1082" pos:column="81">pfns</name><op:operator pos:line="1082" pos:column="85">-&gt;</op:operator><name pos:line="1082" pos:column="87">at</name></name><argument_list pos:line="1082" pos:column="89">(<argument><expr><name pos:line="1082" pos:column="90">i</name></expr></argument>)</argument_list></call><op:operator pos:line="1082" pos:column="92">.</op:operator><call><name pos:line="1082" pos:column="93">c_str</name><argument_list pos:line="1082" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<expr_stmt><expr><call><name><name pos:line="1084" pos:column="17">_treeView</name><op:operator pos:line="1084" pos:column="26">.</op:operator><name pos:line="1084" pos:column="27">expand</name></name><argument_list pos:line="1084" pos:column="33">(<argument><expr><name pos:line="1084" pos:column="34">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1085" pos:column="17">setWorkSpaceDirty</name><argument_list pos:line="1085" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="1085" pos:column="35">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1089" pos:column="1">void</name></type> <name><name pos:line="1089" pos:column="6">ProjectPanel</name><op:operator pos:line="1089" pos:column="18">::</op:operator><name pos:line="1089" pos:column="20">recursiveAddFilesFrom</name></name><parameter_list pos:line="1089" pos:column="41">(<param><decl><type><specifier pos:line="1089" pos:column="42">const</specifier> <name pos:line="1089" pos:column="48">TCHAR</name> <type:modifier pos:line="1089" pos:column="54">*</type:modifier></type><name pos:line="1089" pos:column="55">folderPath</name></decl></param>, <param><decl><type><name pos:line="1089" pos:column="67">HTREEITEM</name></type> <name pos:line="1089" pos:column="77">hTreeItem</name></decl></param>)</parameter_list>
<block pos:line="1090" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1091" pos:column="9">bool</name></type> <name pos:line="1091" pos:column="14">isRecursive</name> <init pos:line="1091" pos:column="26">= <expr><lit:literal type="boolean" pos:line="1091" pos:column="28">true</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1092" pos:column="9">bool</name></type> <name pos:line="1092" pos:column="14">isInHiddenDir</name> <init pos:line="1092" pos:column="28">= <expr><lit:literal type="boolean" pos:line="1092" pos:column="30">false</lit:literal></expr></init></decl>;</decl_stmt>
	<function_decl><type><name pos:line="1093" pos:column="9">generic_string</name></type> <name pos:line="1093" pos:column="24">dirFilter</name><parameter_list pos:line="1093" pos:column="33">(<param><decl><type><name pos:line="1093" pos:column="34">folderPath</name></type></decl></param>)</parameter_list>;</function_decl>
	<if pos:line="1094" pos:column="9">if <condition pos:line="1094" pos:column="12">(<expr><name><name pos:line="1094" pos:column="13">folderPath</name><index pos:line="1094" pos:column="23">[<expr><call><name pos:line="1094" pos:column="24">lstrlen</name><argument_list pos:line="1094" pos:column="31">(<argument><expr><name pos:line="1094" pos:column="32">folderPath</name></expr></argument>)</argument_list></call><op:operator pos:line="1094" pos:column="43">-</op:operator><lit:literal type="number" pos:line="1094" pos:column="44">1</lit:literal></expr>]</index></name> <op:operator pos:line="1094" pos:column="47">!=</op:operator> <lit:literal type="char" pos:line="1094" pos:column="50">'\\'</lit:literal></expr>)</condition><then pos:line="1094" pos:column="55">
		<expr_stmt><expr><name pos:line="1095" pos:column="17">dirFilter</name> <op:operator pos:line="1095" pos:column="27">+=</op:operator> <call><name pos:line="1095" pos:column="30">TEXT</name><argument_list pos:line="1095" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1095" pos:column="35">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1097" pos:column="9">dirFilter</name> <op:operator pos:line="1097" pos:column="19">+=</op:operator> <call><name pos:line="1097" pos:column="22">TEXT</name><argument_list pos:line="1097" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="1097" pos:column="27">"*.*"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1098" pos:column="9">WIN32_FIND_DATA</name></type> <name pos:line="1098" pos:column="25">foundData</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="1099" pos:column="9">std</name><op:operator pos:line="1099" pos:column="12">::</op:operator><name><name pos:line="1099" pos:column="14">vector</name><argument_list pos:line="1099" pos:column="20">&lt;<argument><expr><name pos:line="1099" pos:column="21">generic_string</name></expr></argument>&gt;</argument_list></name></name></type> <name pos:line="1099" pos:column="37">files</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1101" pos:column="9">HANDLE</name></type> <name pos:line="1101" pos:column="16">hFile</name> <init pos:line="1101" pos:column="22">= <expr><call><name><op:operator pos:line="1101" pos:column="24">::</op:operator><name pos:line="1101" pos:column="26">FindFirstFile</name></name><argument_list pos:line="1101" pos:column="39">(<argument><expr><call><name><name pos:line="1101" pos:column="40">dirFilter</name><op:operator pos:line="1101" pos:column="49">.</op:operator><name pos:line="1101" pos:column="50">c_str</name></name><argument_list pos:line="1101" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1101" pos:column="59">&amp;</op:operator><name pos:line="1101" pos:column="60">foundData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<do pos:line="1103" pos:column="9">do <block pos:line="1103" pos:column="12">{
		<if pos:line="1104" pos:column="17">if <condition pos:line="1104" pos:column="20">(<expr><name pos:line="1104" pos:column="21">hFile</name> <op:operator pos:line="1104" pos:column="27">==</op:operator> <name pos:line="1104" pos:column="30">INVALID_HANDLE_VALUE</name></expr>)</condition><then pos:line="1104" pos:column="51">
			<break pos:line="1105" pos:column="25">break;</break></then></if>

		<if pos:line="1107" pos:column="17">if <condition pos:line="1107" pos:column="20">(<expr><name><name pos:line="1107" pos:column="21">foundData</name><op:operator pos:line="1107" pos:column="30">.</op:operator><name pos:line="1107" pos:column="31">dwFileAttributes</name></name> <op:operator pos:line="1107" pos:column="48">&amp;</op:operator> <name pos:line="1107" pos:column="50">FILE_ATTRIBUTE_DIRECTORY</name></expr>)</condition><then pos:line="1107" pos:column="75">
		<block pos:line="1108" pos:column="17">{
			<if pos:line="1109" pos:column="25">if <condition pos:line="1109" pos:column="28">(<expr><op:operator pos:line="1109" pos:column="29">!</op:operator><name pos:line="1109" pos:column="30">isInHiddenDir</name> <op:operator pos:line="1109" pos:column="44">&amp;&amp;</op:operator> <op:operator pos:line="1109" pos:column="47">(</op:operator><name><name pos:line="1109" pos:column="48">foundData</name><op:operator pos:line="1109" pos:column="57">.</op:operator><name pos:line="1109" pos:column="58">dwFileAttributes</name></name> <op:operator pos:line="1109" pos:column="75">&amp;</op:operator> <name pos:line="1109" pos:column="77">FILE_ATTRIBUTE_HIDDEN</name><op:operator pos:line="1109" pos:column="98">)</op:operator></expr>)</condition><then pos:line="1109" pos:column="100">
			<block pos:line="1110" pos:column="25">{
				<comment type="line" pos:line="1111" pos:column="33">// do nothing</comment>
			}</block></then>
			<else pos:line="1113" pos:column="25">else <if pos:line="1113" pos:column="30">if <condition pos:line="1113" pos:column="33">(<expr><name pos:line="1113" pos:column="34">isRecursive</name></expr>)</condition><then pos:line="1113" pos:column="46">
			<block pos:line="1114" pos:column="25">{
				<if pos:line="1115" pos:column="33">if <condition pos:line="1115" pos:column="36">(<expr><op:operator pos:line="1115" pos:column="37">(</op:operator><call><name pos:line="1115" pos:column="38">lstrcmp</name><argument_list pos:line="1115" pos:column="45">(<argument><expr><name><name pos:line="1115" pos:column="46">foundData</name><op:operator pos:line="1115" pos:column="55">.</op:operator><name pos:line="1115" pos:column="56">cFileName</name></name></expr></argument>, <argument><expr><call><name pos:line="1115" pos:column="67">TEXT</name><argument_list pos:line="1115" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="1115" pos:column="72">"."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1115" pos:column="77">)</op:operator> <op:operator pos:line="1115" pos:column="79">&amp;&amp;</op:operator> <op:operator pos:line="1115" pos:column="82">(</op:operator><call><name pos:line="1115" pos:column="83">lstrcmp</name><argument_list pos:line="1115" pos:column="90">(<argument><expr><name><name pos:line="1115" pos:column="91">foundData</name><op:operator pos:line="1115" pos:column="100">.</op:operator><name pos:line="1115" pos:column="101">cFileName</name></name></expr></argument>, <argument><expr><call><name pos:line="1115" pos:column="112">TEXT</name><argument_list pos:line="1115" pos:column="116">(<argument><expr><lit:literal type="string" pos:line="1115" pos:column="117">".."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><op:operator pos:line="1115" pos:column="123">)</op:operator></expr>)</condition><then pos:line="1115" pos:column="125">
				<block pos:line="1116" pos:column="33">{
					<function_decl><type><name pos:line="1117" pos:column="41">generic_string</name></type> <name pos:line="1117" pos:column="56">pathDir</name><parameter_list pos:line="1117" pos:column="63">(<param><decl><type><name pos:line="1117" pos:column="64">folderPath</name></type></decl></param>)</parameter_list>;</function_decl>
					<if pos:line="1118" pos:column="41">if <condition pos:line="1118" pos:column="44">(<expr><name><name pos:line="1118" pos:column="45">folderPath</name><index pos:line="1118" pos:column="55">[<expr><call><name pos:line="1118" pos:column="56">lstrlen</name><argument_list pos:line="1118" pos:column="63">(<argument><expr><name pos:line="1118" pos:column="64">folderPath</name></expr></argument>)</argument_list></call><op:operator pos:line="1118" pos:column="75">-</op:operator><lit:literal type="number" pos:line="1118" pos:column="76">1</lit:literal></expr>]</index></name> <op:operator pos:line="1118" pos:column="79">!=</op:operator> <lit:literal type="char" pos:line="1118" pos:column="82">'\\'</lit:literal></expr>)</condition><then pos:line="1118" pos:column="87">
						<expr_stmt><expr><name pos:line="1119" pos:column="49">pathDir</name> <op:operator pos:line="1119" pos:column="57">+=</op:operator> <call><name pos:line="1119" pos:column="60">TEXT</name><argument_list pos:line="1119" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1119" pos:column="65">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><name pos:line="1120" pos:column="41">pathDir</name> <op:operator pos:line="1120" pos:column="49">+=</op:operator> <name><name pos:line="1120" pos:column="52">foundData</name><op:operator pos:line="1120" pos:column="61">.</op:operator><name pos:line="1120" pos:column="62">cFileName</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1121" pos:column="41">pathDir</name> <op:operator pos:line="1121" pos:column="49">+=</op:operator> <call><name pos:line="1121" pos:column="52">TEXT</name><argument_list pos:line="1121" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1121" pos:column="57">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="1122" pos:column="41">HTREEITEM</name></type> <name pos:line="1122" pos:column="51">addedItem</name> <init pos:line="1122" pos:column="61">= <expr><call><name pos:line="1122" pos:column="63">addFolder</name><argument_list pos:line="1122" pos:column="72">(<argument><expr><name pos:line="1122" pos:column="73">hTreeItem</name></expr></argument>, <argument><expr><name><name pos:line="1122" pos:column="84">foundData</name><op:operator pos:line="1122" pos:column="93">.</op:operator><name pos:line="1122" pos:column="94">cFileName</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="1123" pos:column="41">recursiveAddFilesFrom</name><argument_list pos:line="1123" pos:column="62">(<argument><expr><call><name><name pos:line="1123" pos:column="63">pathDir</name><op:operator pos:line="1123" pos:column="70">.</op:operator><name pos:line="1123" pos:column="71">c_str</name></name><argument_list pos:line="1123" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1123" pos:column="80">addedItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if></else></if>
		}</block></then>
		<else pos:line="1127" pos:column="17">else
		<block pos:line="1128" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1129" pos:column="25">files</name><op:operator pos:line="1129" pos:column="30">.</op:operator><name pos:line="1129" pos:column="31">push_back</name></name><argument_list pos:line="1129" pos:column="40">(<argument><expr><name><name pos:line="1129" pos:column="41">foundData</name><op:operator pos:line="1129" pos:column="50">.</op:operator><name pos:line="1129" pos:column="51">cFileName</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block> while <condition pos:line="1131" pos:column="17">(<expr><call><name><op:operator pos:line="1131" pos:column="18">::</op:operator><name pos:line="1131" pos:column="20">FindNextFile</name></name><argument_list pos:line="1131" pos:column="32">(<argument><expr><name pos:line="1131" pos:column="33">hFile</name></expr></argument>, <argument><expr><op:operator pos:line="1131" pos:column="40">&amp;</op:operator><name pos:line="1131" pos:column="41">foundData</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>
	
	<for pos:line="1133" pos:column="9">for (<init><decl><type><name pos:line="1133" pos:column="14">size_t</name></type> <name pos:line="1133" pos:column="21">i</name> <init pos:line="1133" pos:column="23">= <expr><lit:literal type="number" pos:line="1133" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1133" pos:column="29">i</name> <op:operator pos:line="1133" pos:column="31">&lt;</op:operator> <call><name><name pos:line="1133" pos:column="33">files</name><op:operator pos:line="1133" pos:column="38">.</op:operator><name pos:line="1133" pos:column="39">size</name></name><argument_list pos:line="1133" pos:column="43">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1133" pos:column="48">i</name><op:operator pos:line="1133" pos:column="49">++</op:operator></expr></incr>)
	<block pos:line="1134" pos:column="9">{
		<function_decl><type><name pos:line="1135" pos:column="17">generic_string</name></type> <name pos:line="1135" pos:column="32">pathFile</name><parameter_list pos:line="1135" pos:column="40">(<param><decl><type><name pos:line="1135" pos:column="41">folderPath</name></type></decl></param>)</parameter_list>;</function_decl>
		<if pos:line="1136" pos:column="17">if <condition pos:line="1136" pos:column="20">(<expr><name><name pos:line="1136" pos:column="21">folderPath</name><index pos:line="1136" pos:column="31">[<expr><call><name pos:line="1136" pos:column="32">lstrlen</name><argument_list pos:line="1136" pos:column="39">(<argument><expr><name pos:line="1136" pos:column="40">folderPath</name></expr></argument>)</argument_list></call><op:operator pos:line="1136" pos:column="51">-</op:operator><lit:literal type="number" pos:line="1136" pos:column="52">1</lit:literal></expr>]</index></name> <op:operator pos:line="1136" pos:column="55">!=</op:operator> <lit:literal type="char" pos:line="1136" pos:column="58">'\\'</lit:literal></expr>)</condition><then pos:line="1136" pos:column="63">
			<expr_stmt><expr><name pos:line="1137" pos:column="25">pathFile</name> <op:operator pos:line="1137" pos:column="34">+=</op:operator> <call><name pos:line="1137" pos:column="37">TEXT</name><argument_list pos:line="1137" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="1137" pos:column="42">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="1138" pos:column="17">pathFile</name> <op:operator pos:line="1138" pos:column="26">+=</op:operator> <name><name pos:line="1138" pos:column="29">files</name><index pos:line="1138" pos:column="34">[<expr><name pos:line="1138" pos:column="35">i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1139" pos:column="17">_treeView</name><op:operator pos:line="1139" pos:column="26">.</op:operator><name pos:line="1139" pos:column="27">addItem</name></name><argument_list pos:line="1139" pos:column="34">(<argument><expr><name><name pos:line="1139" pos:column="35">files</name><index pos:line="1139" pos:column="40">[<expr><name pos:line="1139" pos:column="41">i</name></expr>]</index></name><op:operator pos:line="1139" pos:column="43">.</op:operator><call><name pos:line="1139" pos:column="44">c_str</name><argument_list pos:line="1139" pos:column="49">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1139" pos:column="53">hTreeItem</name></expr></argument>, <argument><expr><name pos:line="1139" pos:column="64">INDEX_LEAF</name></expr></argument>, <argument><expr><call><name><name pos:line="1139" pos:column="76">pathFile</name><op:operator pos:line="1139" pos:column="84">.</op:operator><name pos:line="1139" pos:column="85">c_str</name></name><argument_list pos:line="1139" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<expr_stmt><expr><call><name><op:operator pos:line="1142" pos:column="9">::</op:operator><name pos:line="1142" pos:column="11">FindClose</name></name><argument_list pos:line="1142" pos:column="20">(<argument><expr><name pos:line="1142" pos:column="21">hFile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1145" pos:column="1">void</name></type> <name><name pos:line="1145" pos:column="6">ProjectPanel</name><op:operator pos:line="1145" pos:column="18">::</op:operator><name pos:line="1145" pos:column="20">addFilesFromDirectory</name></name><parameter_list pos:line="1145" pos:column="41">(<param><decl><type><name pos:line="1145" pos:column="42">HTREEITEM</name></type> <name pos:line="1145" pos:column="52">hTreeItem</name></decl></param>)</parameter_list>
<block pos:line="1146" pos:column="1">{
	<if pos:line="1147" pos:column="9">if <condition pos:line="1147" pos:column="12">(<expr><name pos:line="1147" pos:column="13">_selDirOfFilesFromDirDlg</name> <op:operator pos:line="1147" pos:column="38">==</op:operator> <call><name pos:line="1147" pos:column="41">TEXT</name><argument_list pos:line="1147" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1147" pos:column="46">""</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1147" pos:column="50">&amp;&amp;</op:operator> <name pos:line="1147" pos:column="53">_workSpaceFilePath</name> <op:operator pos:line="1147" pos:column="72">!=</op:operator> <call><name pos:line="1147" pos:column="75">TEXT</name><argument_list pos:line="1147" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="1147" pos:column="80">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1147" pos:column="84">
	<block pos:line="1148" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1149" pos:column="17">TCHAR</name></type> <name><name pos:line="1149" pos:column="23">dir</name><index pos:line="1149" pos:column="26">[<expr><name pos:line="1149" pos:column="27">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="1150" pos:column="17">lstrcpy</name><argument_list pos:line="1150" pos:column="24">(<argument><expr><name pos:line="1150" pos:column="25">dir</name></expr></argument>, <argument><expr><call><name><name pos:line="1150" pos:column="30">_workSpaceFilePath</name><op:operator pos:line="1150" pos:column="48">.</op:operator><name pos:line="1150" pos:column="49">c_str</name></name><argument_list pos:line="1150" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1151" pos:column="17">::</op:operator><name pos:line="1151" pos:column="19">PathRemoveFileSpec</name></name><argument_list pos:line="1151" pos:column="37">(<argument><expr><name pos:line="1151" pos:column="38">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1152" pos:column="17">_selDirOfFilesFromDirDlg</name> <op:operator pos:line="1152" pos:column="42">=</op:operator> <name pos:line="1152" pos:column="44">dir</name></expr>;</expr_stmt>
	}</block></then></if>
	<decl_stmt><decl><type><name pos:line="1154" pos:column="9">generic_string</name></type> <name pos:line="1154" pos:column="24">dirPath</name></decl>;</decl_stmt>
	<if pos:line="1155" pos:column="9">if <condition pos:line="1155" pos:column="12">(<expr><name pos:line="1155" pos:column="13">_selDirOfFilesFromDirDlg</name> <op:operator pos:line="1155" pos:column="38">!=</op:operator> <call><name pos:line="1155" pos:column="41">TEXT</name><argument_list pos:line="1155" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1155" pos:column="46">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1155" pos:column="50">
		<expr_stmt><expr><name pos:line="1156" pos:column="17">dirPath</name> <op:operator pos:line="1156" pos:column="25">=</op:operator> <call><name pos:line="1156" pos:column="27">getFolderName</name><argument_list pos:line="1156" pos:column="40">(<argument><expr><name pos:line="1156" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><call><name><name pos:line="1156" pos:column="49">_selDirOfFilesFromDirDlg</name><op:operator pos:line="1156" pos:column="73">.</op:operator><name pos:line="1156" pos:column="74">c_str</name></name><argument_list pos:line="1156" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="1157" pos:column="9">else
		<expr_stmt><expr><name pos:line="1158" pos:column="17">dirPath</name> <op:operator pos:line="1158" pos:column="25">=</op:operator> <call><name pos:line="1158" pos:column="27">getFolderName</name><argument_list pos:line="1158" pos:column="40">(<argument><expr><name pos:line="1158" pos:column="41">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

	<if pos:line="1160" pos:column="9">if <condition pos:line="1160" pos:column="12">(<expr><name pos:line="1160" pos:column="13">dirPath</name> <op:operator pos:line="1160" pos:column="21">!=</op:operator> <call><name pos:line="1160" pos:column="24">TEXT</name><argument_list pos:line="1160" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="1160" pos:column="29">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1160" pos:column="33">
	<block pos:line="1161" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="1162" pos:column="17">recursiveAddFilesFrom</name><argument_list pos:line="1162" pos:column="38">(<argument><expr><call><name><name pos:line="1162" pos:column="39">dirPath</name><op:operator pos:line="1162" pos:column="46">.</op:operator><name pos:line="1162" pos:column="47">c_str</name></name><argument_list pos:line="1162" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1162" pos:column="56">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1163" pos:column="17">_treeView</name><op:operator pos:line="1163" pos:column="26">.</op:operator><name pos:line="1163" pos:column="27">expand</name></name><argument_list pos:line="1163" pos:column="33">(<argument><expr><name pos:line="1163" pos:column="34">hTreeItem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1164" pos:column="17">setWorkSpaceDirty</name><argument_list pos:line="1164" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="1164" pos:column="35">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1165" pos:column="17">_selDirOfFilesFromDirDlg</name> <op:operator pos:line="1165" pos:column="42">=</op:operator> <name pos:line="1165" pos:column="44">dirPath</name></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="1169" pos:column="1">BOOL</name> <name pos:line="1169" pos:column="6">CALLBACK</name></type> <name><name pos:line="1169" pos:column="15">FileRelocalizerDlg</name><op:operator pos:line="1169" pos:column="33">::</op:operator><name pos:line="1169" pos:column="35">run_dlgProc</name></name><parameter_list pos:line="1169" pos:column="46">(<param><decl><type><name pos:line="1169" pos:column="47">UINT</name></type> <name pos:line="1169" pos:column="52">Message</name></decl></param>, <param><decl><type><name pos:line="1169" pos:column="61">WPARAM</name></type> <name pos:line="1169" pos:column="68">wParam</name></decl></param>, <param><decl><type><name pos:line="1169" pos:column="76">LPARAM</name></type></decl></param>)</parameter_list> 
<block pos:line="1170" pos:column="1">{
	<switch pos:line="1171" pos:column="9">switch <condition pos:line="1171" pos:column="16">(<expr><name pos:line="1171" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="1172" pos:column="9">{
		<case pos:line="1173" pos:column="17">case <expr><name pos:line="1173" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="1174" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1175" pos:column="25">goToCenter</name><argument_list pos:line="1175" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1176" pos:column="25">::</op:operator><name pos:line="1176" pos:column="27">SetDlgItemText</name></name><argument_list pos:line="1176" pos:column="41">(<argument><expr><name pos:line="1176" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1176" pos:column="50">IDC_EDIT_FILEFULLPATHNAME</name></expr></argument>, <argument><expr><call><name><name pos:line="1176" pos:column="77">_fullFilePath</name><op:operator pos:line="1176" pos:column="90">.</op:operator><name pos:line="1176" pos:column="91">c_str</name></name><argument_list pos:line="1176" pos:column="96">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="1177" pos:column="25">return <expr><name pos:line="1177" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="1179" pos:column="17">case <expr><name pos:line="1179" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="1180" pos:column="17">{
			<switch pos:line="1181" pos:column="25">switch <condition pos:line="1181" pos:column="32">(<expr><name pos:line="1181" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="1182" pos:column="25">{
				<case pos:line="1183" pos:column="33">case <expr><name pos:line="1183" pos:column="38">IDOK</name></expr> :
				<block pos:line="1184" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1185" pos:column="41">TCHAR</name></type> <name><name pos:line="1185" pos:column="47">textBuf</name><index pos:line="1185" pos:column="54">[<expr><name pos:line="1185" pos:column="55">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="1186" pos:column="41">::</op:operator><name pos:line="1186" pos:column="43">GetDlgItemText</name></name><argument_list pos:line="1186" pos:column="57">(<argument><expr><name pos:line="1186" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1186" pos:column="66">IDC_EDIT_FILEFULLPATHNAME</name></expr></argument>, <argument><expr><name pos:line="1186" pos:column="93">textBuf</name></expr></argument>, <argument><expr><name pos:line="1186" pos:column="102">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1187" pos:column="41">_fullFilePath</name> <op:operator pos:line="1187" pos:column="55">=</op:operator> <name pos:line="1187" pos:column="57">textBuf</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="1188" pos:column="41">::</op:operator><name pos:line="1188" pos:column="43">EndDialog</name></name><argument_list pos:line="1188" pos:column="52">(<argument><expr><name pos:line="1188" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1188" pos:column="61">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block>
				<return pos:line="1190" pos:column="33">return <expr><name pos:line="1190" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="1192" pos:column="33">case <expr><name pos:line="1192" pos:column="38">IDCANCEL</name></expr> :
					<expr_stmt><expr><call><name><op:operator pos:line="1193" pos:column="41">::</op:operator><name pos:line="1193" pos:column="43">EndDialog</name></name><argument_list pos:line="1193" pos:column="52">(<argument><expr><name pos:line="1193" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="1193" pos:column="61">-</op:operator><lit:literal type="number" pos:line="1193" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="1194" pos:column="33">return <expr><name pos:line="1194" pos:column="40">TRUE</name></expr>;</return>

				</case><default pos:line="1196" pos:column="33">default:
					<return pos:line="1197" pos:column="41">return <expr><name pos:line="1197" pos:column="48">FALSE</name></expr>;</return>
			</default>}</block></switch>
		}</block>
		</case><default pos:line="1200" pos:column="17">default :
			<return pos:line="1201" pos:column="25">return <expr><name pos:line="1201" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="1205" pos:column="1">int</name></type> <name><name pos:line="1205" pos:column="5">FileRelocalizerDlg</name><op:operator pos:line="1205" pos:column="23">::</op:operator><name pos:line="1205" pos:column="25">doDialog</name></name><parameter_list pos:line="1205" pos:column="33">(<param><decl><type><specifier pos:line="1205" pos:column="34">const</specifier> <name pos:line="1205" pos:column="40">TCHAR</name> <type:modifier pos:line="1205" pos:column="46">*</type:modifier></type><name pos:line="1205" pos:column="47">fn</name></decl></param>, <param><decl><type><name pos:line="1205" pos:column="51">bool</name></type> <name pos:line="1205" pos:column="56">isRTL</name></decl></param>)</parameter_list> 
<block pos:line="1206" pos:column="1">{
	<expr_stmt><expr><name pos:line="1207" pos:column="9">_fullFilePath</name> <op:operator pos:line="1207" pos:column="23">=</op:operator> <name pos:line="1207" pos:column="25">fn</name></expr>;</expr_stmt>

	<if pos:line="1209" pos:column="9">if <condition pos:line="1209" pos:column="12">(<expr><name pos:line="1209" pos:column="13">isRTL</name></expr>)</condition><then pos:line="1209" pos:column="19">
	<block pos:line="1210" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1211" pos:column="17">DLGTEMPLATE</name> <type:modifier pos:line="1211" pos:column="29">*</type:modifier></type><name pos:line="1211" pos:column="30">pMyDlgTemplate</name> <init pos:line="1211" pos:column="45">= <expr><name pos:line="1211" pos:column="47">NULL</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1212" pos:column="17">HGLOBAL</name></type> <name pos:line="1212" pos:column="25">hMyDlgTemplate</name> <init pos:line="1212" pos:column="40">= <expr><call><name pos:line="1212" pos:column="42">makeRTLResource</name><argument_list pos:line="1212" pos:column="57">(<argument><expr><name pos:line="1212" pos:column="58">IDD_FILERELOCALIZER_DIALOG</name></expr></argument>, <argument><expr><op:operator pos:line="1212" pos:column="86">&amp;</op:operator><name pos:line="1212" pos:column="87">pMyDlgTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1213" pos:column="17">int</name></type> <name pos:line="1213" pos:column="21">result</name> <init pos:line="1213" pos:column="28">= <expr><call><name><op:operator pos:line="1213" pos:column="30">::</op:operator><name pos:line="1213" pos:column="32">DialogBoxIndirectParam</name></name><argument_list pos:line="1213" pos:column="54">(<argument><expr><name pos:line="1213" pos:column="55">_hInst</name></expr></argument>, <argument><expr><name pos:line="1213" pos:column="63">pMyDlgTemplate</name></expr></argument>, <argument><expr><name pos:line="1213" pos:column="79">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="1213" pos:column="90">(</op:operator><name pos:line="1213" pos:column="91">DLGPROC</name><op:operator pos:line="1213" pos:column="98">)</op:operator><name pos:line="1213" pos:column="99">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="1213" pos:column="108">(</op:operator><name pos:line="1213" pos:column="109">LPARAM</name><op:operator pos:line="1213" pos:column="115">)</op:operator><name pos:line="1213" pos:column="116">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1214" pos:column="17">::</op:operator><name pos:line="1214" pos:column="19">GlobalFree</name></name><argument_list pos:line="1214" pos:column="29">(<argument><expr><name pos:line="1214" pos:column="30">hMyDlgTemplate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="1215" pos:column="17">return <expr><name pos:line="1215" pos:column="24">result</name></expr>;</return>
	}</block></then></if>
	<return pos:line="1217" pos:column="9">return <expr><call><name><op:operator pos:line="1217" pos:column="16">::</op:operator><name pos:line="1217" pos:column="18">DialogBoxParam</name></name><argument_list pos:line="1217" pos:column="32">(<argument><expr><name pos:line="1217" pos:column="33">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="1217" pos:column="41">MAKEINTRESOURCE</name><argument_list pos:line="1217" pos:column="56">(<argument><expr><name pos:line="1217" pos:column="57">IDD_FILERELOCALIZER_DIALOG</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1217" pos:column="86">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="1217" pos:column="97">(</op:operator><name pos:line="1217" pos:column="98">DLGPROC</name><op:operator pos:line="1217" pos:column="105">)</op:operator><name pos:line="1217" pos:column="106">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="1217" pos:column="115">(</op:operator><name pos:line="1217" pos:column="116">LPARAM</name><op:operator pos:line="1217" pos:column="122">)</op:operator><name pos:line="1217" pos:column="123">this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

</unit>
