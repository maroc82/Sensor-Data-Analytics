<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\shortcut\shortcut.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">SHORTCUTS_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">SHORTCUTS_H</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">IDD_SHORTCUT_DLG</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"shortcutRc.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="34" pos:column="8">//IDD_SHORTCUT_DLG</comment>

<cpp:ifndef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifndef</cpp:directive> <name pos:line="36" pos:column="9">SCINTILLA_H</name></cpp:ifndef>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"Scintilla.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="38" pos:column="8">//SCINTILLA_H</comment>

<using pos:line="40" pos:column="1">using namespace <name pos:line="40" pos:column="17">std</name>;</using>

<decl_stmt><decl><type><specifier pos:line="42" pos:column="1">const</specifier> <name pos:line="42" pos:column="7">size_t</name></type> <name pos:line="42" pos:column="14">nameLenMax</name> <init pos:line="42" pos:column="25">= <expr><lit:literal type="number" pos:line="42" pos:column="27">64</lit:literal></expr></init></decl>;</decl_stmt>

<class_decl pos:line="44" pos:column="1">class <name pos:line="44" pos:column="7">NppParameters</name>;</class_decl>

<function_decl><type><name pos:line="46" pos:column="1">void</name></type> <name pos:line="46" pos:column="6">getKeyStrFromVal</name><parameter_list pos:line="46" pos:column="22">(<param><decl><type><name pos:line="46" pos:column="23">UCHAR</name></type> <name pos:line="46" pos:column="29">keyVal</name></decl></param>, <param><decl><type><name pos:line="46" pos:column="37">generic_string</name> <type:modifier pos:line="46" pos:column="52">&amp;</type:modifier></type> <name pos:line="46" pos:column="54">str</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="47" pos:column="1">void</name></type> <name pos:line="47" pos:column="6">getNameStrFromCmd</name><parameter_list pos:line="47" pos:column="23">(<param><decl><type><name pos:line="47" pos:column="24">DWORD</name></type> <name pos:line="47" pos:column="30">cmd</name></decl></param>, <param><decl><type><name pos:line="47" pos:column="35">generic_string</name> <type:modifier pos:line="47" pos:column="50">&amp;</type:modifier></type> <name pos:line="47" pos:column="52">str</name></decl></param>)</parameter_list>;</function_decl>
<function><type><specifier pos:line="48" pos:column="1">static</specifier> <name pos:line="48" pos:column="8">int</name></type> <name pos:line="48" pos:column="12">keyTranslate</name><parameter_list pos:line="48" pos:column="24">(<param><decl><type><name pos:line="48" pos:column="25">int</name></type> <name pos:line="48" pos:column="29">keyIn</name></decl></param>)</parameter_list> <block pos:line="48" pos:column="36">{
	<switch pos:line="49" pos:column="9">switch <condition pos:line="49" pos:column="16">(<expr><name pos:line="49" pos:column="17">keyIn</name></expr>)</condition> <block pos:line="49" pos:column="24">{
		<case pos:line="50" pos:column="17">case <expr><name pos:line="50" pos:column="22">VK_DOWN</name></expr>:		<return pos:line="50" pos:column="41">return <expr><name pos:line="50" pos:column="48">SCK_DOWN</name></expr>;</return>
		</case><case pos:line="51" pos:column="17">case <expr><name pos:line="51" pos:column="22">VK_UP</name></expr>:			<return pos:line="51" pos:column="49">return <expr><name pos:line="51" pos:column="56">SCK_UP</name></expr>;</return>
		</case><case pos:line="52" pos:column="17">case <expr><name pos:line="52" pos:column="22">VK_LEFT</name></expr>:		<return pos:line="52" pos:column="41">return <expr><name pos:line="52" pos:column="48">SCK_LEFT</name></expr>;</return>
		</case><case pos:line="53" pos:column="17">case <expr><name pos:line="53" pos:column="22">VK_RIGHT</name></expr>:		<return pos:line="53" pos:column="41">return <expr><name pos:line="53" pos:column="48">SCK_RIGHT</name></expr>;</return>
		</case><case pos:line="54" pos:column="17">case <expr><name pos:line="54" pos:column="22">VK_HOME</name></expr>:		<return pos:line="54" pos:column="41">return <expr><name pos:line="54" pos:column="48">SCK_HOME</name></expr>;</return>
		</case><case pos:line="55" pos:column="17">case <expr><name pos:line="55" pos:column="22">VK_END</name></expr>:		<return pos:line="55" pos:column="41">return <expr><name pos:line="55" pos:column="48">SCK_END</name></expr>;</return>
		</case><case pos:line="56" pos:column="17">case <expr><name pos:line="56" pos:column="22">VK_PRIOR</name></expr>:		<return pos:line="56" pos:column="41">return <expr><name pos:line="56" pos:column="48">SCK_PRIOR</name></expr>;</return>
		</case><case pos:line="57" pos:column="17">case <expr><name pos:line="57" pos:column="22">VK_NEXT</name></expr>:		<return pos:line="57" pos:column="41">return <expr><name pos:line="57" pos:column="48">SCK_NEXT</name></expr>;</return>
		</case><case pos:line="58" pos:column="17">case <expr><name pos:line="58" pos:column="22">VK_DELETE</name></expr>:		<return pos:line="58" pos:column="41">return <expr><name pos:line="58" pos:column="48">SCK_DELETE</name></expr>;</return>
		</case><case pos:line="59" pos:column="17">case <expr><name pos:line="59" pos:column="22">VK_INSERT</name></expr>:		<return pos:line="59" pos:column="41">return <expr><name pos:line="59" pos:column="48">SCK_INSERT</name></expr>;</return>
		</case><case pos:line="60" pos:column="17">case <expr><name pos:line="60" pos:column="22">VK_ESCAPE</name></expr>:		<return pos:line="60" pos:column="41">return <expr><name pos:line="60" pos:column="48">SCK_ESCAPE</name></expr>;</return>
		</case><case pos:line="61" pos:column="17">case <expr><name pos:line="61" pos:column="22">VK_BACK</name></expr>:		<return pos:line="61" pos:column="41">return <expr><name pos:line="61" pos:column="48">SCK_BACK</name></expr>;</return>
		</case><case pos:line="62" pos:column="17">case <expr><name pos:line="62" pos:column="22">VK_TAB</name></expr>:		<return pos:line="62" pos:column="41">return <expr><name pos:line="62" pos:column="48">SCK_TAB</name></expr>;</return>
		</case><case pos:line="63" pos:column="17">case <expr><name pos:line="63" pos:column="22">VK_RETURN</name></expr>:		<return pos:line="63" pos:column="41">return <expr><name pos:line="63" pos:column="48">SCK_RETURN</name></expr>;</return>
		</case><case pos:line="64" pos:column="17">case <expr><name pos:line="64" pos:column="22">VK_ADD</name></expr>:		<return pos:line="64" pos:column="41">return <expr><name pos:line="64" pos:column="48">SCK_ADD</name></expr>;</return>
		</case><case pos:line="65" pos:column="17">case <expr><name pos:line="65" pos:column="22">VK_SUBTRACT</name></expr>:	<return pos:line="65" pos:column="41">return <expr><name pos:line="65" pos:column="48">SCK_SUBTRACT</name></expr>;</return>
		</case><case pos:line="66" pos:column="17">case <expr><name pos:line="66" pos:column="22">VK_DIVIDE</name></expr>:		<return pos:line="66" pos:column="41">return <expr><name pos:line="66" pos:column="48">SCK_DIVIDE</name></expr>;</return>
		</case><case pos:line="67" pos:column="17">case <expr><name pos:line="67" pos:column="22">VK_OEM_2</name></expr>:		<return pos:line="67" pos:column="41">return <expr><lit:literal type="char" pos:line="67" pos:column="48">'/'</lit:literal></expr>;</return>
		</case><case pos:line="68" pos:column="17">case <expr><name pos:line="68" pos:column="22">VK_OEM_3</name></expr>:		<return pos:line="68" pos:column="41">return <expr><lit:literal type="char" pos:line="68" pos:column="48">'`'</lit:literal></expr>;</return>
		</case><case pos:line="69" pos:column="17">case <expr><name pos:line="69" pos:column="22">VK_OEM_4</name></expr>:		<return pos:line="69" pos:column="41">return <expr><lit:literal type="char" pos:line="69" pos:column="48">'['</lit:literal></expr>;</return>
		</case><case pos:line="70" pos:column="17">case <expr><name pos:line="70" pos:column="22">VK_OEM_5</name></expr>:		<return pos:line="70" pos:column="41">return <expr><lit:literal type="char" pos:line="70" pos:column="48">'\\'</lit:literal></expr>;</return>
		</case><case pos:line="71" pos:column="17">case <expr><name pos:line="71" pos:column="22">VK_OEM_6</name></expr>:		<return pos:line="71" pos:column="41">return <expr><lit:literal type="char" pos:line="71" pos:column="48">']'</lit:literal></expr>;</return>
		</case><default pos:line="72" pos:column="17">default:			<return pos:line="72" pos:column="49">return <expr><name pos:line="72" pos:column="56">keyIn</name></expr>;</return>
	</default>}</block></switch>
}</block></function><empty_stmt pos:line="74" pos:column="2">;</empty_stmt>

<struct pos:line="76" pos:column="1">struct <name pos:line="76" pos:column="8">KeyCombo</name> <block pos:line="76" pos:column="17">{<public type="default" pos:line="76" pos:column="18">
	<decl_stmt><decl><type><name pos:line="77" pos:column="9">bool</name></type> <name pos:line="77" pos:column="14">_isCtrl</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="78" pos:column="9">bool</name></type> <name pos:line="78" pos:column="14">_isAlt</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="79" pos:column="9">bool</name></type> <name pos:line="79" pos:column="14">_isShift</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="80" pos:column="9">UCHAR</name></type> <name pos:line="80" pos:column="15">_key</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<class pos:line="83" pos:column="1">class <name pos:line="83" pos:column="7">Shortcut</name>  <super pos:line="83" pos:column="17">: <specifier pos:line="83" pos:column="19">public</specifier> <name pos:line="83" pos:column="26">StaticDialog</name></super> <block pos:line="83" pos:column="39">{<private type="default" pos:line="83" pos:column="40">
</private><public pos:line="84" pos:column="1">public:
	<constructor><name pos:line="85" pos:column="9">Shortcut</name><parameter_list pos:line="85" pos:column="17">()</parameter_list><member_list pos:line="85" pos:column="19">: <call><name pos:line="85" pos:column="21">_canModifyName</name><argument_list pos:line="85" pos:column="35">(<argument><expr><lit:literal type="boolean" pos:line="85" pos:column="36">false</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="85" pos:column="43">{
		<expr_stmt><expr><call><name pos:line="86" pos:column="17">setName</name><argument_list pos:line="86" pos:column="24">(<argument><expr><call><name pos:line="86" pos:column="25">TEXT</name><argument_list pos:line="86" pos:column="29">(<argument><expr><lit:literal type="string" pos:line="86" pos:column="30">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="87" pos:column="17">_keyCombo</name><op:operator pos:line="87" pos:column="26">.</op:operator><name pos:line="87" pos:column="27">_isCtrl</name></name> <op:operator pos:line="87" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="87" pos:column="37">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="88" pos:column="17">_keyCombo</name><op:operator pos:line="88" pos:column="26">.</op:operator><name pos:line="88" pos:column="27">_isAlt</name></name> <op:operator pos:line="88" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="88" pos:column="36">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="89" pos:column="17">_keyCombo</name><op:operator pos:line="89" pos:column="26">.</op:operator><name pos:line="89" pos:column="27">_isShift</name></name> <op:operator pos:line="89" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="89" pos:column="38">false</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="90" pos:column="17">_keyCombo</name><op:operator pos:line="90" pos:column="26">.</op:operator><name pos:line="90" pos:column="27">_key</name></name> <op:operator pos:line="90" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="90" pos:column="34">0</lit:literal></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="91" pos:column="10">;</empty_stmt>

	<constructor><name pos:line="93" pos:column="9">Shortcut</name><parameter_list pos:line="93" pos:column="17">(<param><decl><type><specifier pos:line="93" pos:column="18">const</specifier> <name pos:line="93" pos:column="24">TCHAR</name> <type:modifier pos:line="93" pos:column="30">*</type:modifier></type><name pos:line="93" pos:column="31">name</name></decl></param>, <param><decl><type><name pos:line="93" pos:column="37">bool</name></type> <name pos:line="93" pos:column="42">isCtrl</name></decl></param>, <param><decl><type><name pos:line="93" pos:column="50">bool</name></type> <name pos:line="93" pos:column="55">isAlt</name></decl></param>, <param><decl><type><name pos:line="93" pos:column="62">bool</name></type> <name pos:line="93" pos:column="67">isShift</name></decl></param>, <param><decl><type><name pos:line="93" pos:column="76">UCHAR</name></type> <name pos:line="93" pos:column="82">key</name></decl></param>)</parameter_list> <member_list pos:line="93" pos:column="87">: <call><name pos:line="93" pos:column="89">_canModifyName</name><argument_list pos:line="93" pos:column="103">(<argument><expr><lit:literal type="boolean" pos:line="93" pos:column="104">false</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="93" pos:column="111">{
		<expr_stmt><expr><name><name pos:line="94" pos:column="17">_name</name><index pos:line="94" pos:column="22">[<expr><lit:literal type="number" pos:line="94" pos:column="23">0</lit:literal></expr>]</index></name> <op:operator pos:line="94" pos:column="26">=</op:operator> <lit:literal type="char" pos:line="94" pos:column="28">'\0'</lit:literal></expr>;</expr_stmt>
		<if pos:line="95" pos:column="17">if <condition pos:line="95" pos:column="20">(<expr><name pos:line="95" pos:column="21">name</name></expr>)</condition><then pos:line="95" pos:column="26"> <block pos:line="95" pos:column="27">{
			<expr_stmt><expr><call><name pos:line="96" pos:column="25">setName</name><argument_list pos:line="96" pos:column="32">(<argument><expr><name pos:line="96" pos:column="33">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then> <else pos:line="97" pos:column="19">else <block pos:line="97" pos:column="24">{
			<expr_stmt><expr><call><name pos:line="98" pos:column="25">setName</name><argument_list pos:line="98" pos:column="32">(<argument><expr><call><name pos:line="98" pos:column="33">TEXT</name><argument_list pos:line="98" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="98" pos:column="38">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name><name pos:line="100" pos:column="17">_keyCombo</name><op:operator pos:line="100" pos:column="26">.</op:operator><name pos:line="100" pos:column="27">_isCtrl</name></name> <op:operator pos:line="100" pos:column="35">=</op:operator> <name pos:line="100" pos:column="37">isCtrl</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="101" pos:column="17">_keyCombo</name><op:operator pos:line="101" pos:column="26">.</op:operator><name pos:line="101" pos:column="27">_isAlt</name></name> <op:operator pos:line="101" pos:column="34">=</op:operator> <name pos:line="101" pos:column="36">isAlt</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="102" pos:column="17">_keyCombo</name><op:operator pos:line="102" pos:column="26">.</op:operator><name pos:line="102" pos:column="27">_isShift</name></name> <op:operator pos:line="102" pos:column="36">=</op:operator> <name pos:line="102" pos:column="38">isShift</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="103" pos:column="17">_keyCombo</name><op:operator pos:line="103" pos:column="26">.</op:operator><name pos:line="103" pos:column="27">_key</name></name> <op:operator pos:line="103" pos:column="32">=</op:operator> <name pos:line="103" pos:column="34">key</name></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="104" pos:column="10">;</empty_stmt>

	<constructor><name pos:line="106" pos:column="9">Shortcut</name><parameter_list pos:line="106" pos:column="17">(<param><decl><type><specifier pos:line="106" pos:column="18">const</specifier> <name pos:line="106" pos:column="24">Shortcut</name> <type:modifier pos:line="106" pos:column="33">&amp;</type:modifier></type> <name pos:line="106" pos:column="35">sc</name></decl></param>)</parameter_list> <block pos:line="106" pos:column="39">{
		<expr_stmt><expr><call><name pos:line="107" pos:column="17">setName</name><argument_list pos:line="107" pos:column="24">(<argument><expr><call><name><name pos:line="107" pos:column="25">sc</name><op:operator pos:line="107" pos:column="27">.</op:operator><name pos:line="107" pos:column="28">getMenuName</name></name><argument_list pos:line="107" pos:column="39">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="108" pos:column="17">_keyCombo</name> <op:operator pos:line="108" pos:column="27">=</op:operator> <name><name pos:line="108" pos:column="29">sc</name><op:operator pos:line="108" pos:column="31">.</op:operator><name pos:line="108" pos:column="32">_keyCombo</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="109" pos:column="17">_canModifyName</name> <op:operator pos:line="109" pos:column="32">=</op:operator> <name><name pos:line="109" pos:column="34">sc</name><op:operator pos:line="109" pos:column="36">.</op:operator><name pos:line="109" pos:column="37">_canModifyName</name></name></expr>;</expr_stmt>
	}</block></constructor>

	<function><type><name pos:line="112" pos:column="9">BYTE</name></type> <name pos:line="112" pos:column="14">getAcceleratorModifiers</name><parameter_list pos:line="112" pos:column="37">()</parameter_list> <block pos:line="112" pos:column="40">{
		<return pos:line="113" pos:column="17">return <expr><op:operator pos:line="113" pos:column="24">(</op:operator> <name pos:line="113" pos:column="26">FVIRTKEY</name> <op:operator pos:line="113" pos:column="35">|</op:operator> <op:operator pos:line="113" pos:column="37">(</op:operator><name><name pos:line="113" pos:column="38">_keyCombo</name><op:operator pos:line="113" pos:column="47">.</op:operator><name pos:line="113" pos:column="48">_isCtrl</name></name><op:operator pos:line="113" pos:column="55">?</op:operator><name pos:line="113" pos:column="56">FCONTROL</name><op:operator pos:line="113" pos:column="64">:</op:operator><lit:literal type="number" pos:line="113" pos:column="65">0</lit:literal><op:operator pos:line="113" pos:column="66">)</op:operator> <op:operator pos:line="113" pos:column="68">|</op:operator> <op:operator pos:line="113" pos:column="70">(</op:operator><name><name pos:line="113" pos:column="71">_keyCombo</name><op:operator pos:line="113" pos:column="80">.</op:operator><name pos:line="113" pos:column="81">_isAlt</name></name><op:operator pos:line="113" pos:column="87">?</op:operator><name pos:line="113" pos:column="88">FALT</name><op:operator pos:line="113" pos:column="92">:</op:operator><lit:literal type="number" pos:line="113" pos:column="93">0</lit:literal><op:operator pos:line="113" pos:column="94">)</op:operator> <op:operator pos:line="113" pos:column="96">|</op:operator> <op:operator pos:line="113" pos:column="98">(</op:operator><name><name pos:line="113" pos:column="99">_keyCombo</name><op:operator pos:line="113" pos:column="108">.</op:operator><name pos:line="113" pos:column="109">_isShift</name></name><op:operator pos:line="113" pos:column="117">?</op:operator><name pos:line="113" pos:column="118">FSHIFT</name><op:operator pos:line="113" pos:column="124">:</op:operator><lit:literal type="number" pos:line="113" pos:column="125">0</lit:literal><op:operator pos:line="113" pos:column="126">)</op:operator> <op:operator pos:line="113" pos:column="128">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="114" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="116" pos:column="9">Shortcut</name> <type:modifier pos:line="116" pos:column="18">&amp;</type:modifier></type> <name pos:line="116" pos:column="20">operator=</name><parameter_list pos:line="116" pos:column="29">(<param><decl><type><specifier pos:line="116" pos:column="30">const</specifier> <name pos:line="116" pos:column="36">Shortcut</name> <type:modifier pos:line="116" pos:column="45">&amp;</type:modifier></type> <name pos:line="116" pos:column="47">sc</name></decl></param>)</parameter_list> <block pos:line="116" pos:column="51">{
		<comment type="line" pos:line="117" pos:column="17">//Do not allow setting empty names</comment>
		<comment type="line" pos:line="118" pos:column="17">//So either we have an empty name or the other name has to be set</comment>
		<if pos:line="119" pos:column="17">if <condition pos:line="119" pos:column="20">(<expr><name><name pos:line="119" pos:column="21">_name</name><index pos:line="119" pos:column="26">[<expr><lit:literal type="number" pos:line="119" pos:column="27">0</lit:literal></expr>]</index></name> <op:operator pos:line="119" pos:column="30">==</op:operator> <lit:literal type="number" pos:line="119" pos:column="33">0</lit:literal> <op:operator pos:line="119" pos:column="35">||</op:operator> <name><name pos:line="119" pos:column="38">sc</name><op:operator pos:line="119" pos:column="40">.</op:operator><name pos:line="119" pos:column="41">_name</name><index pos:line="119" pos:column="46">[<expr><lit:literal type="number" pos:line="119" pos:column="47">0</lit:literal></expr>]</index></name> <op:operator pos:line="119" pos:column="50">!=</op:operator> <lit:literal type="number" pos:line="119" pos:column="53">0</lit:literal></expr>)</condition><then pos:line="119" pos:column="55"> <block pos:line="119" pos:column="56">{
			<expr_stmt><expr><call><name pos:line="120" pos:column="25">setName</name><argument_list pos:line="120" pos:column="32">(<argument><expr><call><name><name pos:line="120" pos:column="33">sc</name><op:operator pos:line="120" pos:column="35">.</op:operator><name pos:line="120" pos:column="36">getMenuName</name></name><argument_list pos:line="120" pos:column="47">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><name pos:line="122" pos:column="17">_keyCombo</name> <op:operator pos:line="122" pos:column="27">=</op:operator> <name><name pos:line="122" pos:column="29">sc</name><op:operator pos:line="122" pos:column="31">.</op:operator><name pos:line="122" pos:column="32">_keyCombo</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="123" pos:column="17">this</name><op:operator pos:line="123" pos:column="21">-&gt;</op:operator><name pos:line="123" pos:column="23">_canModifyName</name></name> <op:operator pos:line="123" pos:column="38">=</op:operator> <name><name pos:line="123" pos:column="40">sc</name><op:operator pos:line="123" pos:column="42">.</op:operator><name pos:line="123" pos:column="43">_canModifyName</name></name></expr>;</expr_stmt>
		<return pos:line="124" pos:column="17">return <expr><op:operator pos:line="124" pos:column="24">*</op:operator><name pos:line="124" pos:column="25">this</name></expr>;</return>
	}</block></function>
	<function><type><specifier pos:line="126" pos:column="9">friend</specifier> <specifier pos:line="126" pos:column="16">inline</specifier> <specifier pos:line="126" pos:column="23">const</specifier> <name pos:line="126" pos:column="29">bool</name></type> <name pos:line="126" pos:column="34">operator==</name><parameter_list pos:line="126" pos:column="44">(<param><decl><type><specifier pos:line="126" pos:column="45">const</specifier> <name pos:line="126" pos:column="51">Shortcut</name> <type:modifier pos:line="126" pos:column="60">&amp;</type:modifier></type> <name pos:line="126" pos:column="62">a</name></decl></param>, <param><decl><type><specifier pos:line="126" pos:column="65">const</specifier> <name pos:line="126" pos:column="71">Shortcut</name> <type:modifier pos:line="126" pos:column="80">&amp;</type:modifier></type> <name pos:line="126" pos:column="82">b</name></decl></param>)</parameter_list> <block pos:line="126" pos:column="85">{
		<return pos:line="127" pos:column="17">return <expr><op:operator pos:line="127" pos:column="24">(</op:operator><op:operator pos:line="127" pos:column="25">(</op:operator><call><name pos:line="127" pos:column="26">lstrcmp</name><argument_list pos:line="127" pos:column="33">(<argument><expr><call><name><name pos:line="127" pos:column="34">a</name><op:operator pos:line="127" pos:column="35">.</op:operator><name pos:line="127" pos:column="36">getMenuName</name></name><argument_list pos:line="127" pos:column="47">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="127" pos:column="51">b</name><op:operator pos:line="127" pos:column="52">.</op:operator><name pos:line="127" pos:column="53">getMenuName</name></name><argument_list pos:line="127" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="127" pos:column="68">==</op:operator> <lit:literal type="number" pos:line="127" pos:column="71">0</lit:literal><op:operator pos:line="127" pos:column="72">)</op:operator> <op:operator pos:line="127" pos:column="74">&amp;&amp;</op:operator> 
			<op:operator pos:line="128" pos:column="25">(</op:operator><name><name pos:line="128" pos:column="26">a</name><op:operator pos:line="128" pos:column="27">.</op:operator><name pos:line="128" pos:column="28">_keyCombo</name><op:operator pos:line="128" pos:column="37">.</op:operator><name pos:line="128" pos:column="38">_isCtrl</name></name> <op:operator pos:line="128" pos:column="46">==</op:operator> <name><name pos:line="128" pos:column="49">b</name><op:operator pos:line="128" pos:column="50">.</op:operator><name pos:line="128" pos:column="51">_keyCombo</name><op:operator pos:line="128" pos:column="60">.</op:operator><name pos:line="128" pos:column="61">_isCtrl</name></name><op:operator pos:line="128" pos:column="68">)</op:operator> <op:operator pos:line="128" pos:column="70">&amp;&amp;</op:operator> 
			<op:operator pos:line="129" pos:column="25">(</op:operator><name><name pos:line="129" pos:column="26">a</name><op:operator pos:line="129" pos:column="27">.</op:operator><name pos:line="129" pos:column="28">_keyCombo</name><op:operator pos:line="129" pos:column="37">.</op:operator><name pos:line="129" pos:column="38">_isAlt</name></name> <op:operator pos:line="129" pos:column="45">==</op:operator> <name><name pos:line="129" pos:column="48">b</name><op:operator pos:line="129" pos:column="49">.</op:operator><name pos:line="129" pos:column="50">_keyCombo</name><op:operator pos:line="129" pos:column="59">.</op:operator><name pos:line="129" pos:column="60">_isAlt</name></name><op:operator pos:line="129" pos:column="66">)</op:operator> <op:operator pos:line="129" pos:column="68">&amp;&amp;</op:operator> 
			<op:operator pos:line="130" pos:column="25">(</op:operator><name><name pos:line="130" pos:column="26">a</name><op:operator pos:line="130" pos:column="27">.</op:operator><name pos:line="130" pos:column="28">_keyCombo</name><op:operator pos:line="130" pos:column="37">.</op:operator><name pos:line="130" pos:column="38">_isShift</name></name> <op:operator pos:line="130" pos:column="47">==</op:operator> <name><name pos:line="130" pos:column="50">b</name><op:operator pos:line="130" pos:column="51">.</op:operator><name pos:line="130" pos:column="52">_keyCombo</name><op:operator pos:line="130" pos:column="61">.</op:operator><name pos:line="130" pos:column="62">_isShift</name></name><op:operator pos:line="130" pos:column="70">)</op:operator> <op:operator pos:line="130" pos:column="72">&amp;&amp;</op:operator> 
			<op:operator pos:line="131" pos:column="25">(</op:operator><name><name pos:line="131" pos:column="26">a</name><op:operator pos:line="131" pos:column="27">.</op:operator><name pos:line="131" pos:column="28">_keyCombo</name><op:operator pos:line="131" pos:column="37">.</op:operator><name pos:line="131" pos:column="38">_key</name></name> <op:operator pos:line="131" pos:column="43">==</op:operator> <name><name pos:line="131" pos:column="46">b</name><op:operator pos:line="131" pos:column="47">.</op:operator><name pos:line="131" pos:column="48">_keyCombo</name><op:operator pos:line="131" pos:column="57">.</op:operator><name pos:line="131" pos:column="58">_key</name></name><op:operator pos:line="131" pos:column="62">)</op:operator>
			<op:operator pos:line="132" pos:column="25">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="133" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="135" pos:column="9">friend</specifier> <specifier pos:line="135" pos:column="16">inline</specifier> <specifier pos:line="135" pos:column="23">const</specifier> <name pos:line="135" pos:column="29">bool</name></type> <name pos:line="135" pos:column="34">operator!=</name><parameter_list pos:line="135" pos:column="44">(<param><decl><type><specifier pos:line="135" pos:column="45">const</specifier> <name pos:line="135" pos:column="51">Shortcut</name> <type:modifier pos:line="135" pos:column="60">&amp;</type:modifier></type> <name pos:line="135" pos:column="62">a</name></decl></param>, <param><decl><type><specifier pos:line="135" pos:column="65">const</specifier> <name pos:line="135" pos:column="71">Shortcut</name> <type:modifier pos:line="135" pos:column="80">&amp;</type:modifier></type> <name pos:line="135" pos:column="82">b</name></decl></param>)</parameter_list> <block pos:line="135" pos:column="85">{
		<return pos:line="136" pos:column="17">return <expr><op:operator pos:line="136" pos:column="24">!</op:operator><op:operator pos:line="136" pos:column="25">(</op:operator><name pos:line="136" pos:column="26">a</name> <op:operator pos:line="136" pos:column="28">==</op:operator> <name pos:line="136" pos:column="31">b</name><op:operator pos:line="136" pos:column="32">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="137" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="139" pos:column="9">virtual</specifier> <name pos:line="139" pos:column="17">int</name></type> <name pos:line="139" pos:column="21">doDialog</name><parameter_list pos:line="139" pos:column="29">()</parameter_list> <block pos:line="139" pos:column="32">{
		<return pos:line="140" pos:column="17">return <expr><call><name><op:operator pos:line="140" pos:column="24">::</op:operator><name pos:line="140" pos:column="26">DialogBoxParam</name></name><argument_list pos:line="140" pos:column="40">(<argument><expr><name pos:line="140" pos:column="41">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="140" pos:column="49">MAKEINTRESOURCE</name><argument_list pos:line="140" pos:column="64">(<argument><expr><name pos:line="140" pos:column="65">IDD_SHORTCUT_DLG</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="140" pos:column="84">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="140" pos:column="95">(</op:operator><name pos:line="140" pos:column="96">DLGPROC</name><op:operator pos:line="140" pos:column="103">)</op:operator><name pos:line="140" pos:column="104">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="140" pos:column="113">(</op:operator><name pos:line="140" pos:column="114">LPARAM</name><op:operator pos:line="140" pos:column="120">)</op:operator><name pos:line="140" pos:column="121">this</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function><empty_stmt pos:line="141" pos:column="6">;</empty_stmt>

	<function><type><specifier pos:line="143" pos:column="9">virtual</specifier> <name pos:line="143" pos:column="17">bool</name></type> <name pos:line="143" pos:column="22">isValid</name><parameter_list pos:line="143" pos:column="29">()</parameter_list> <specifier pos:line="143" pos:column="32">const</specifier> <block pos:line="143" pos:column="38">{ <comment type="line" pos:line="143" pos:column="40">//valid should only be used in cases where the shortcut isEnabled().</comment>
		<if pos:line="144" pos:column="17">if <condition pos:line="144" pos:column="20">(<expr><name><name pos:line="144" pos:column="21">_keyCombo</name><op:operator pos:line="144" pos:column="30">.</op:operator><name pos:line="144" pos:column="31">_key</name></name> <op:operator pos:line="144" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="144" pos:column="39">0</lit:literal></expr>)</condition><then pos:line="144" pos:column="41">
			<return pos:line="145" pos:column="25">return <expr><lit:literal type="boolean" pos:line="145" pos:column="32">true</lit:literal></expr>;</return></then></if>	<comment type="line" pos:line="145" pos:column="41">//disabled _keyCombo always valid, just disabled</comment>

		<comment type="line" pos:line="147" pos:column="17">//These keys need a modifier, else invalid</comment>
		<if pos:line="148" pos:column="17">if <condition pos:line="148" pos:column="20">( <expr><op:operator pos:line="148" pos:column="22">(</op:operator><op:operator pos:line="148" pos:column="23">(</op:operator><name><name pos:line="148" pos:column="24">_keyCombo</name><op:operator pos:line="148" pos:column="33">.</op:operator><name pos:line="148" pos:column="34">_key</name></name> <op:operator pos:line="148" pos:column="39">&gt;=</op:operator> <lit:literal type="char" pos:line="148" pos:column="42">'A'</lit:literal><op:operator pos:line="148" pos:column="45">)</op:operator> <op:operator pos:line="148" pos:column="47">&amp;&amp;</op:operator> <op:operator pos:line="148" pos:column="50">(</op:operator><name><name pos:line="148" pos:column="51">_keyCombo</name><op:operator pos:line="148" pos:column="60">.</op:operator><name pos:line="148" pos:column="61">_key</name></name> <op:operator pos:line="148" pos:column="66">&lt;=</op:operator> <lit:literal type="char" pos:line="148" pos:column="69">'Z'</lit:literal><op:operator pos:line="148" pos:column="72">)</op:operator><op:operator pos:line="148" pos:column="73">)</op:operator> <op:operator pos:line="148" pos:column="75">||</op:operator> <op:operator pos:line="148" pos:column="78">(</op:operator><op:operator pos:line="148" pos:column="79">(</op:operator><name><name pos:line="148" pos:column="80">_keyCombo</name><op:operator pos:line="148" pos:column="89">.</op:operator><name pos:line="148" pos:column="90">_key</name></name> <op:operator pos:line="148" pos:column="95">&gt;=</op:operator> <lit:literal type="char" pos:line="148" pos:column="98">'0'</lit:literal><op:operator pos:line="148" pos:column="101">)</op:operator> <op:operator pos:line="148" pos:column="103">&amp;&amp;</op:operator> <op:operator pos:line="148" pos:column="106">(</op:operator><name><name pos:line="148" pos:column="107">_keyCombo</name><op:operator pos:line="148" pos:column="116">.</op:operator><name pos:line="148" pos:column="117">_key</name></name> <op:operator pos:line="148" pos:column="122">&lt;=</op:operator> <lit:literal type="char" pos:line="148" pos:column="125">'9'</lit:literal><op:operator pos:line="148" pos:column="128">)</op:operator><op:operator pos:line="148" pos:column="129">)</op:operator> <op:operator pos:line="148" pos:column="131">||</op:operator> <name><name pos:line="148" pos:column="134">_keyCombo</name><op:operator pos:line="148" pos:column="143">.</op:operator><name pos:line="148" pos:column="144">_key</name></name> <op:operator pos:line="148" pos:column="149">==</op:operator> <name pos:line="148" pos:column="152">VK_SPACE</name> <op:operator pos:line="148" pos:column="161">||</op:operator> <name><name pos:line="148" pos:column="164">_keyCombo</name><op:operator pos:line="148" pos:column="173">.</op:operator><name pos:line="148" pos:column="174">_key</name></name> <op:operator pos:line="148" pos:column="179">==</op:operator> <name pos:line="148" pos:column="182">VK_CAPITAL</name> <op:operator pos:line="148" pos:column="193">||</op:operator> <name><name pos:line="148" pos:column="196">_keyCombo</name><op:operator pos:line="148" pos:column="205">.</op:operator><name pos:line="148" pos:column="206">_key</name></name> <op:operator pos:line="148" pos:column="211">==</op:operator> <name pos:line="148" pos:column="214">VK_BACK</name> <op:operator pos:line="148" pos:column="222">||</op:operator> <name><name pos:line="148" pos:column="225">_keyCombo</name><op:operator pos:line="148" pos:column="234">.</op:operator><name pos:line="148" pos:column="235">_key</name></name> <op:operator pos:line="148" pos:column="240">==</op:operator> <name pos:line="148" pos:column="243">VK_RETURN</name></expr>)</condition><then pos:line="148" pos:column="253"> <block pos:line="148" pos:column="254">{
			<return pos:line="149" pos:column="25">return <expr><op:operator pos:line="149" pos:column="32">(</op:operator><op:operator pos:line="149" pos:column="33">(</op:operator><name><name pos:line="149" pos:column="34">_keyCombo</name><op:operator pos:line="149" pos:column="43">.</op:operator><name pos:line="149" pos:column="44">_isCtrl</name></name><op:operator pos:line="149" pos:column="51">)</op:operator> <op:operator pos:line="149" pos:column="53">||</op:operator> <op:operator pos:line="149" pos:column="56">(</op:operator><name><name pos:line="149" pos:column="57">_keyCombo</name><op:operator pos:line="149" pos:column="66">.</op:operator><name pos:line="149" pos:column="67">_isAlt</name></name><op:operator pos:line="149" pos:column="73">)</op:operator><op:operator pos:line="149" pos:column="74">)</op:operator></expr>;</return>
		}</block></then></if>
		<comment type="line" pos:line="151" pos:column="17">// the remaining keys are always valid</comment>
		<return pos:line="152" pos:column="17">return <expr><lit:literal type="boolean" pos:line="152" pos:column="24">true</lit:literal></expr>;</return>
	}</block></function><empty_stmt pos:line="153" pos:column="10">;</empty_stmt>
	<function><type><specifier pos:line="154" pos:column="9">virtual</specifier> <name pos:line="154" pos:column="17">bool</name></type> <name pos:line="154" pos:column="22">isEnabled</name><parameter_list pos:line="154" pos:column="31">()</parameter_list> <specifier pos:line="154" pos:column="34">const</specifier> <block pos:line="154" pos:column="40">{	<comment type="line" pos:line="154" pos:column="49">//true if _keyCombo != 0, false if _keyCombo == 0, in which case no accelerator should be made</comment>
		<return pos:line="155" pos:column="17">return <expr><op:operator pos:line="155" pos:column="24">(</op:operator><name><name pos:line="155" pos:column="25">_keyCombo</name><op:operator pos:line="155" pos:column="34">.</op:operator><name pos:line="155" pos:column="35">_key</name></name> <op:operator pos:line="155" pos:column="40">!=</op:operator> <lit:literal type="number" pos:line="155" pos:column="43">0</lit:literal><op:operator pos:line="155" pos:column="44">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="156" pos:column="10">;</empty_stmt>

	<function_decl><type><specifier pos:line="158" pos:column="9">virtual</specifier> <name pos:line="158" pos:column="17">generic_string</name></type> <name pos:line="158" pos:column="32">toString</name><parameter_list pos:line="158" pos:column="40">()</parameter_list> <specifier pos:line="158" pos:column="43">const</specifier>;</function_decl>					<comment type="line" pos:line="158" pos:column="89">//the hotkey part</comment>
	<function><type><name pos:line="159" pos:column="9">generic_string</name></type> <name pos:line="159" pos:column="24">toMenuItemString</name><parameter_list pos:line="159" pos:column="40">()</parameter_list> <specifier pos:line="159" pos:column="43">const</specifier> <block pos:line="159" pos:column="49">{					<comment type="line" pos:line="159" pos:column="89">//generic_string suitable for menu</comment>
		<decl_stmt><decl><type><name pos:line="160" pos:column="17">generic_string</name></type> <name pos:line="160" pos:column="32">str</name> <init pos:line="160" pos:column="36">= <expr><name pos:line="160" pos:column="38">_menuName</name></expr></init></decl>;</decl_stmt>
		<if pos:line="161" pos:column="17">if<condition pos:line="161" pos:column="19">(<expr><call><name pos:line="161" pos:column="20">isEnabled</name><argument_list pos:line="161" pos:column="29">()</argument_list></call></expr>)</condition><then pos:line="161" pos:column="32">
		<block pos:line="162" pos:column="17">{
			<expr_stmt><expr><name pos:line="163" pos:column="25">str</name> <op:operator pos:line="163" pos:column="29">+=</op:operator> <call><name pos:line="163" pos:column="32">TEXT</name><argument_list pos:line="163" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="163" pos:column="37">"\t"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="164" pos:column="25">str</name> <op:operator pos:line="164" pos:column="29">+=</op:operator> <call><name pos:line="164" pos:column="32">toString</name><argument_list pos:line="164" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<return pos:line="166" pos:column="17">return <expr><name pos:line="166" pos:column="24">str</name></expr>;</return>
	}</block></function><empty_stmt pos:line="167" pos:column="10">;</empty_stmt>
	<function><type><specifier pos:line="168" pos:column="9">const</specifier> <name pos:line="168" pos:column="15">KeyCombo</name> <type:modifier pos:line="168" pos:column="24">&amp;</type:modifier></type> <name pos:line="168" pos:column="26">getKeyCombo</name><parameter_list pos:line="168" pos:column="37">()</parameter_list> <specifier pos:line="168" pos:column="40">const</specifier> <block pos:line="168" pos:column="46">{
		<return pos:line="169" pos:column="17">return <expr><name pos:line="169" pos:column="24">_keyCombo</name></expr>;</return>
	}</block></function><empty_stmt pos:line="170" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="172" pos:column="9">const</specifier> <name pos:line="172" pos:column="15">TCHAR</name> <type:modifier pos:line="172" pos:column="21">*</type:modifier></type> <name pos:line="172" pos:column="23">getName</name><parameter_list pos:line="172" pos:column="30">()</parameter_list> <specifier pos:line="172" pos:column="33">const</specifier> <block pos:line="172" pos:column="39">{
		<return pos:line="173" pos:column="17">return <expr><name pos:line="173" pos:column="24">_name</name></expr>;</return>
	}</block></function><empty_stmt pos:line="174" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="176" pos:column="9">const</specifier> <name pos:line="176" pos:column="15">TCHAR</name> <type:modifier pos:line="176" pos:column="21">*</type:modifier></type> <name pos:line="176" pos:column="23">getMenuName</name><parameter_list pos:line="176" pos:column="34">()</parameter_list> <specifier pos:line="176" pos:column="37">const</specifier> <block pos:line="176" pos:column="43">{
		<return pos:line="177" pos:column="17">return <expr><name pos:line="177" pos:column="24">_menuName</name></expr>;</return>
	}</block></function>

	<function_decl><type><name pos:line="180" pos:column="9">void</name></type> <name pos:line="180" pos:column="14">setName</name><parameter_list pos:line="180" pos:column="21">(<param><decl><type><specifier pos:line="180" pos:column="22">const</specifier> <name pos:line="180" pos:column="28">TCHAR</name> <type:modifier pos:line="180" pos:column="34">*</type:modifier></type> <name pos:line="180" pos:column="36">name</name></decl></param>)</parameter_list>;</function_decl>

</public><protected pos:line="182" pos:column="1">protected :
	<decl_stmt><decl><type><name pos:line="183" pos:column="9">KeyCombo</name></type> <name pos:line="183" pos:column="18">_keyCombo</name></decl>;</decl_stmt>
	<function_decl><type><specifier pos:line="184" pos:column="9">virtual</specifier> <name pos:line="184" pos:column="17">BOOL</name> <name pos:line="184" pos:column="22">CALLBACK</name></type> <name pos:line="184" pos:column="31">run_dlgProc</name><parameter_list pos:line="184" pos:column="42">(<param><decl><type><name pos:line="184" pos:column="43">UINT</name></type> <name pos:line="184" pos:column="48">Message</name></decl></param>, <param><decl><type><name pos:line="184" pos:column="57">WPARAM</name></type> <name pos:line="184" pos:column="64">wParam</name></decl></param>, <param><decl><type><name pos:line="184" pos:column="72">LPARAM</name></type> <name pos:line="184" pos:column="79">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="185" pos:column="9">bool</name></type> <name pos:line="185" pos:column="14">_canModifyName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="186" pos:column="9">TCHAR</name></type> <name><name pos:line="186" pos:column="15">_name</name><index pos:line="186" pos:column="20">[<expr><name pos:line="186" pos:column="21">nameLenMax</name></expr>]</index></name></decl>;</decl_stmt>		<comment type="line" pos:line="186" pos:column="49">//normal name is plain text (for display purposes)</comment>
	<decl_stmt><decl><type><name pos:line="187" pos:column="9">TCHAR</name></type> <name><name pos:line="187" pos:column="15">_menuName</name><index pos:line="187" pos:column="24">[<expr><name pos:line="187" pos:column="25">nameLenMax</name></expr>]</index></name></decl>;</decl_stmt>	<comment type="line" pos:line="187" pos:column="41">//menu name has ampersands for quick keys</comment>
</protected>}</block>;</class>
		 
<class pos:line="190" pos:column="1">class <name pos:line="190" pos:column="7">CommandShortcut</name> <super pos:line="190" pos:column="23">: <specifier pos:line="190" pos:column="25">public</specifier> <name pos:line="190" pos:column="32">Shortcut</name></super> <block pos:line="190" pos:column="41">{<private type="default" pos:line="190" pos:column="42">
</private><public pos:line="191" pos:column="1">public:
	<constructor><name pos:line="192" pos:column="9">CommandShortcut</name><parameter_list pos:line="192" pos:column="24">(<param><decl><type><name pos:line="192" pos:column="25">Shortcut</name></type> <name pos:line="192" pos:column="34">sc</name></decl></param>, <param><decl><type><name pos:line="192" pos:column="38">long</name></type> <name pos:line="192" pos:column="43">id</name></decl></param>)</parameter_list> <member_list pos:line="192" pos:column="47">:	<call><name pos:line="192" pos:column="49">Shortcut</name><argument_list pos:line="192" pos:column="57">(<argument><expr><name pos:line="192" pos:column="58">sc</name></expr></argument>)</argument_list></call><op:operator pos:line="192" pos:column="61">,</op:operator> <call><name pos:line="192" pos:column="63">_id</name><argument_list pos:line="192" pos:column="66">(<argument><expr><name pos:line="192" pos:column="67">id</name></expr></argument>)</argument_list></call> </member_list><block pos:line="192" pos:column="71">{}</block></constructor><empty_stmt pos:line="192" pos:column="73">;</empty_stmt>
	<function><type><name pos:line="193" pos:column="9">unsigned</name> <name pos:line="193" pos:column="18">long</name></type> <name pos:line="193" pos:column="23">getID</name><parameter_list pos:line="193" pos:column="28">()</parameter_list> <specifier pos:line="193" pos:column="31">const</specifier> <block pos:line="193" pos:column="37">{<return pos:line="193" pos:column="38">return <expr><name pos:line="193" pos:column="45">_id</name></expr>;</return>}</block></function><empty_stmt pos:line="193" pos:column="50">;</empty_stmt>
	<function><type><name pos:line="194" pos:column="9">void</name></type> <name pos:line="194" pos:column="14">setID</name><parameter_list pos:line="194" pos:column="19">(<param><decl><type><name pos:line="194" pos:column="20">unsigned</name> <name pos:line="194" pos:column="29">long</name></type> <name pos:line="194" pos:column="34">id</name></decl></param>)</parameter_list> <block pos:line="194" pos:column="38">{ <expr_stmt><expr><name pos:line="194" pos:column="40">_id</name> <op:operator pos:line="194" pos:column="44">=</op:operator> <name pos:line="194" pos:column="46">id</name></expr>;</expr_stmt>}</block></function><empty_stmt pos:line="194" pos:column="50">;</empty_stmt>

</public><private pos:line="196" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="197" pos:column="9">unsigned</name> <name pos:line="197" pos:column="18">long</name></type> <name pos:line="197" pos:column="23">_id</name></decl>;</decl_stmt>
</private>}</block>;</class>


<class pos:line="201" pos:column="1">class <name pos:line="201" pos:column="7">ScintillaKeyMap</name> <super pos:line="201" pos:column="23">: <specifier pos:line="201" pos:column="25">public</specifier> <name pos:line="201" pos:column="32">Shortcut</name></super> <block pos:line="201" pos:column="41">{<private type="default" pos:line="201" pos:column="42">
</private><public pos:line="202" pos:column="1">public:
	<constructor><name pos:line="203" pos:column="9">ScintillaKeyMap</name><parameter_list pos:line="203" pos:column="24">(<param><decl><type><name pos:line="203" pos:column="25">Shortcut</name></type> <name pos:line="203" pos:column="34">sc</name></decl></param>, <param><decl><type><name pos:line="203" pos:column="38">unsigned</name> <name pos:line="203" pos:column="47">long</name></type> <name pos:line="203" pos:column="52">scintillaKeyID</name></decl></param>, <param><decl><type><name pos:line="203" pos:column="68">unsigned</name> <name pos:line="203" pos:column="77">long</name></type> <name pos:line="203" pos:column="82">id</name></decl></param>)</parameter_list><member_list pos:line="203" pos:column="85">: <call><name pos:line="203" pos:column="87">Shortcut</name><argument_list pos:line="203" pos:column="95">(<argument><expr><name pos:line="203" pos:column="96">sc</name></expr></argument>)</argument_list></call><op:operator pos:line="203" pos:column="99">,</op:operator> <call><name pos:line="203" pos:column="101">_menuCmdID</name><argument_list pos:line="203" pos:column="111">(<argument><expr><name pos:line="203" pos:column="112">id</name></expr></argument>)</argument_list></call><op:operator pos:line="203" pos:column="115">,</op:operator> <call><name pos:line="203" pos:column="117">_scintillaKeyID</name><argument_list pos:line="203" pos:column="132">(<argument><expr><name pos:line="203" pos:column="133">scintillaKeyID</name></expr></argument>)</argument_list></call> </member_list><block pos:line="203" pos:column="149">{
		<expr_stmt><expr><call><name><name pos:line="204" pos:column="17">_keyCombos</name><op:operator pos:line="204" pos:column="27">.</op:operator><name pos:line="204" pos:column="28">clear</name></name><argument_list pos:line="204" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="205" pos:column="17">_keyCombos</name><op:operator pos:line="205" pos:column="27">.</op:operator><name pos:line="205" pos:column="28">push_back</name></name><argument_list pos:line="205" pos:column="37">(<argument><expr><name pos:line="205" pos:column="38">_keyCombo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="206" pos:column="17">_keyCombo</name><op:operator pos:line="206" pos:column="26">.</op:operator><name pos:line="206" pos:column="27">_key</name></name> <op:operator pos:line="206" pos:column="32">=</op:operator> <lit:literal type="number" pos:line="206" pos:column="34">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="207" pos:column="17">size</name> <op:operator pos:line="207" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="207" pos:column="24">1</lit:literal></expr>;</expr_stmt>
	}</block></constructor><empty_stmt pos:line="208" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="209" pos:column="9">unsigned</name> <name pos:line="209" pos:column="18">long</name></type> <name pos:line="209" pos:column="23">getScintillaKeyID</name><parameter_list pos:line="209" pos:column="40">()</parameter_list> <specifier pos:line="209" pos:column="43">const</specifier> <block pos:line="209" pos:column="49">{<return pos:line="209" pos:column="50">return <expr><name pos:line="209" pos:column="57">_scintillaKeyID</name></expr>;</return>}</block></function><empty_stmt pos:line="209" pos:column="74">;</empty_stmt>
	<function><type><name pos:line="210" pos:column="9">int</name></type> <name pos:line="210" pos:column="13">getMenuCmdID</name><parameter_list pos:line="210" pos:column="25">()</parameter_list> <specifier pos:line="210" pos:column="28">const</specifier> <block pos:line="210" pos:column="34">{<return pos:line="210" pos:column="35">return <expr><name pos:line="210" pos:column="42">_menuCmdID</name></expr>;</return>}</block></function><empty_stmt pos:line="210" pos:column="54">;</empty_stmt>
	<function><type><name pos:line="211" pos:column="9">int</name></type> <name pos:line="211" pos:column="13">toKeyDef</name><parameter_list pos:line="211" pos:column="21">(<param><decl><type><name pos:line="211" pos:column="22">int</name></type> <name pos:line="211" pos:column="26">index</name></decl></param>)</parameter_list> <specifier pos:line="211" pos:column="33">const</specifier> <block pos:line="211" pos:column="39">{
		<decl_stmt><decl><type><name pos:line="212" pos:column="17">KeyCombo</name></type> <name pos:line="212" pos:column="26">kc</name> <init pos:line="212" pos:column="29">= <expr><name><name pos:line="212" pos:column="31">_keyCombos</name><index pos:line="212" pos:column="41">[<expr><name pos:line="212" pos:column="42">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="213" pos:column="17">int</name></type> <name pos:line="213" pos:column="21">keymod</name> <init pos:line="213" pos:column="28">= <expr><op:operator pos:line="213" pos:column="30">(</op:operator><name><name pos:line="213" pos:column="31">kc</name><op:operator pos:line="213" pos:column="33">.</op:operator><name pos:line="213" pos:column="34">_isCtrl</name></name><op:operator pos:line="213" pos:column="41">?</op:operator><name pos:line="213" pos:column="42">SCMOD_CTRL</name><op:operator pos:line="213" pos:column="52">:</op:operator><lit:literal type="number" pos:line="213" pos:column="53">0</lit:literal><op:operator pos:line="213" pos:column="54">)</op:operator> <op:operator pos:line="213" pos:column="56">|</op:operator> <op:operator pos:line="213" pos:column="58">(</op:operator><name><name pos:line="213" pos:column="59">kc</name><op:operator pos:line="213" pos:column="61">.</op:operator><name pos:line="213" pos:column="62">_isAlt</name></name><op:operator pos:line="213" pos:column="68">?</op:operator><name pos:line="213" pos:column="69">SCMOD_ALT</name><op:operator pos:line="213" pos:column="78">:</op:operator><lit:literal type="number" pos:line="213" pos:column="79">0</lit:literal><op:operator pos:line="213" pos:column="80">)</op:operator> <op:operator pos:line="213" pos:column="82">|</op:operator> <op:operator pos:line="213" pos:column="84">(</op:operator><name><name pos:line="213" pos:column="85">kc</name><op:operator pos:line="213" pos:column="87">.</op:operator><name pos:line="213" pos:column="88">_isShift</name></name><op:operator pos:line="213" pos:column="96">?</op:operator><name pos:line="213" pos:column="97">SCMOD_SHIFT</name><op:operator pos:line="213" pos:column="108">:</op:operator><lit:literal type="number" pos:line="213" pos:column="109">0</lit:literal><op:operator pos:line="213" pos:column="110">)</op:operator></expr></init></decl>;</decl_stmt>
		<return pos:line="214" pos:column="17">return <expr><call><name pos:line="214" pos:column="24">keyTranslate</name><argument_list pos:line="214" pos:column="36">(<argument><expr><op:operator pos:line="214" pos:column="37">(</op:operator><name pos:line="214" pos:column="38">int</name><op:operator pos:line="214" pos:column="41">)</op:operator><name><name pos:line="214" pos:column="42">kc</name><op:operator pos:line="214" pos:column="44">.</op:operator><name pos:line="214" pos:column="45">_key</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="214" pos:column="51">+</op:operator> <op:operator pos:line="214" pos:column="53">(</op:operator><name pos:line="214" pos:column="54">keymod</name> <op:operator pos:line="214" pos:column="61">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="214" pos:column="64">16</lit:literal><op:operator pos:line="214" pos:column="66">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="215" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="217" pos:column="9">KeyCombo</name></type> <name pos:line="217" pos:column="18">getKeyComboByIndex</name><parameter_list pos:line="217" pos:column="36">(<param><decl><type><name pos:line="217" pos:column="37">int</name></type> <name pos:line="217" pos:column="41">index</name></decl></param>)</parameter_list> <specifier pos:line="217" pos:column="48">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="218" pos:column="9">void</name></type> <name><name pos:line="218" pos:column="14">ScintillaKeyMap</name><op:operator pos:line="218" pos:column="29">::</op:operator><name pos:line="218" pos:column="31">setKeyComboByIndex</name></name><parameter_list pos:line="218" pos:column="49">(<param><decl><type><name pos:line="218" pos:column="50">int</name></type> <name pos:line="218" pos:column="54">index</name></decl></param>, <param><decl><type><name pos:line="218" pos:column="61">KeyCombo</name></type> <name pos:line="218" pos:column="70">combo</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="219" pos:column="9">void</name></type> <name pos:line="219" pos:column="14">removeKeyComboByIndex</name><parameter_list pos:line="219" pos:column="35">(<param><decl><type><name pos:line="219" pos:column="36">int</name></type> <name pos:line="219" pos:column="40">index</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="220" pos:column="9">void</name></type> <name pos:line="220" pos:column="14">clearDups</name><parameter_list pos:line="220" pos:column="23">()</parameter_list> <block pos:line="220" pos:column="26">{
		<if pos:line="221" pos:column="17">if <condition pos:line="221" pos:column="20">(<expr><name pos:line="221" pos:column="21">size</name> <op:operator pos:line="221" pos:column="26">&gt;</op:operator> <lit:literal type="number" pos:line="221" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="221" pos:column="30">
			<expr_stmt><expr><call><name><name pos:line="222" pos:column="25">_keyCombos</name><op:operator pos:line="222" pos:column="35">.</op:operator><name pos:line="222" pos:column="36">erase</name></name><argument_list pos:line="222" pos:column="41">(<argument><expr><call><name><name pos:line="222" pos:column="42">_keyCombos</name><op:operator pos:line="222" pos:column="52">.</op:operator><name pos:line="222" pos:column="53">begin</name></name><argument_list pos:line="222" pos:column="58">()</argument_list></call><op:operator pos:line="222" pos:column="60">+</op:operator><lit:literal type="number" pos:line="222" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="222" pos:column="64">_keyCombos</name><op:operator pos:line="222" pos:column="74">.</op:operator><name pos:line="222" pos:column="75">end</name></name><argument_list pos:line="222" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="223" pos:column="17">size</name> <op:operator pos:line="223" pos:column="22">=</op:operator> <lit:literal type="number" pos:line="223" pos:column="24">1</lit:literal></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="224" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="225" pos:column="9">int</name></type> <name pos:line="225" pos:column="13">addKeyCombo</name><parameter_list pos:line="225" pos:column="24">(<param><decl><type><name pos:line="225" pos:column="25">KeyCombo</name></type> <name pos:line="225" pos:column="34">combo</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="226" pos:column="9">bool</name></type> <name pos:line="226" pos:column="14">isEnabled</name><parameter_list pos:line="226" pos:column="23">()</parameter_list> <specifier pos:line="226" pos:column="26">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="227" pos:column="9">size_t</name></type> <name pos:line="227" pos:column="16">getSize</name><parameter_list pos:line="227" pos:column="23">()</parameter_list> <specifier pos:line="227" pos:column="26">const</specifier>;</function_decl>

	<function_decl><type><name pos:line="229" pos:column="9">generic_string</name></type> <name pos:line="229" pos:column="24">toString</name><parameter_list pos:line="229" pos:column="32">()</parameter_list> <specifier pos:line="229" pos:column="35">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="230" pos:column="9">generic_string</name></type> <name pos:line="230" pos:column="24">toString</name><parameter_list pos:line="230" pos:column="32">(<param><decl><type><name pos:line="230" pos:column="33">int</name></type> <name pos:line="230" pos:column="37">index</name></decl></param>)</parameter_list> <specifier pos:line="230" pos:column="44">const</specifier>;</function_decl>

	<function><type><name pos:line="232" pos:column="9">int</name></type> <name pos:line="232" pos:column="13">doDialog</name><parameter_list pos:line="232" pos:column="21">()</parameter_list> <block pos:line="232" pos:column="24">{
		<return pos:line="233" pos:column="17">return <expr><call><name><op:operator pos:line="233" pos:column="24">::</op:operator><name pos:line="233" pos:column="26">DialogBoxParam</name></name><argument_list pos:line="233" pos:column="40">(<argument><expr><name pos:line="233" pos:column="41">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="233" pos:column="49">MAKEINTRESOURCE</name><argument_list pos:line="233" pos:column="64">(<argument><expr><name pos:line="233" pos:column="65">IDD_SHORTCUTSCINT_DLG</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="233" pos:column="89">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="233" pos:column="100">(</op:operator><name pos:line="233" pos:column="101">DLGPROC</name><op:operator pos:line="233" pos:column="108">)</op:operator><name pos:line="233" pos:column="109">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="233" pos:column="118">(</op:operator><name pos:line="233" pos:column="119">LPARAM</name><op:operator pos:line="233" pos:column="125">)</op:operator><name pos:line="233" pos:column="126">this</name></expr></argument>)</argument_list></call></expr>;</return>
    }</block></function><empty_stmt pos:line="234" pos:column="6">;</empty_stmt>

	<comment type="line" pos:line="236" pos:column="9">//only compares the internal KeyCombos, nothing else</comment>
	<function><type><specifier pos:line="237" pos:column="9">friend</specifier> <specifier pos:line="237" pos:column="16">inline</specifier> <specifier pos:line="237" pos:column="23">const</specifier> <name pos:line="237" pos:column="29">bool</name></type> <name pos:line="237" pos:column="34">operator==</name><parameter_list pos:line="237" pos:column="44">(<param><decl><type><specifier pos:line="237" pos:column="45">const</specifier> <name pos:line="237" pos:column="51">ScintillaKeyMap</name> <type:modifier pos:line="237" pos:column="67">&amp;</type:modifier></type> <name pos:line="237" pos:column="69">a</name></decl></param>, <param><decl><type><specifier pos:line="237" pos:column="72">const</specifier> <name pos:line="237" pos:column="78">ScintillaKeyMap</name> <type:modifier pos:line="237" pos:column="94">&amp;</type:modifier></type> <name pos:line="237" pos:column="96">b</name></decl></param>)</parameter_list> <block pos:line="237" pos:column="99">{
		<decl_stmt><decl><type><name pos:line="238" pos:column="17">bool</name></type> <name pos:line="238" pos:column="22">equal</name> <init pos:line="238" pos:column="28">= <expr><name><name pos:line="238" pos:column="30">a</name><op:operator pos:line="238" pos:column="31">.</op:operator><name pos:line="238" pos:column="32">size</name></name> <op:operator pos:line="238" pos:column="37">==</op:operator> <name><name pos:line="238" pos:column="40">b</name><op:operator pos:line="238" pos:column="41">.</op:operator><name pos:line="238" pos:column="42">size</name></name></expr></init></decl>;</decl_stmt>
		<if pos:line="239" pos:column="17">if <condition pos:line="239" pos:column="20">(<expr><op:operator pos:line="239" pos:column="21">!</op:operator><name pos:line="239" pos:column="22">equal</name></expr>)</condition><then pos:line="239" pos:column="28">
			<return pos:line="240" pos:column="25">return <expr><lit:literal type="boolean" pos:line="240" pos:column="32">false</lit:literal></expr>;</return></then></if>
		<decl_stmt><decl><type><name pos:line="241" pos:column="17">size_t</name></type> <name pos:line="241" pos:column="24">i</name> <init pos:line="241" pos:column="26">= <expr><lit:literal type="number" pos:line="241" pos:column="28">0</lit:literal></expr></init></decl>;</decl_stmt>
		<while pos:line="242" pos:column="17">while<condition pos:line="242" pos:column="22">(<expr><name pos:line="242" pos:column="23">equal</name> <op:operator pos:line="242" pos:column="29">&amp;&amp;</op:operator> <op:operator pos:line="242" pos:column="32">(</op:operator><name pos:line="242" pos:column="33">i</name> <op:operator pos:line="242" pos:column="35">&lt;</op:operator> <name><name pos:line="242" pos:column="37">a</name><op:operator pos:line="242" pos:column="38">.</op:operator><name pos:line="242" pos:column="39">size</name></name><op:operator pos:line="242" pos:column="43">)</op:operator></expr>)</condition> <block pos:line="242" pos:column="46">{
			<expr_stmt><expr><name pos:line="243" pos:column="25">equal</name> <op:operator pos:line="243" pos:column="31">=</op:operator> 
				<op:operator pos:line="244" pos:column="33">(</op:operator><name><name pos:line="244" pos:column="34">a</name><op:operator pos:line="244" pos:column="35">.</op:operator><name pos:line="244" pos:column="36">_keyCombos</name><index pos:line="244" pos:column="46">[<expr><name pos:line="244" pos:column="47">i</name></expr>]</index></name><op:operator pos:line="244" pos:column="49">.</op:operator><name pos:line="244" pos:column="50">_isCtrl</name>	<op:operator pos:line="244" pos:column="65">==</op:operator> <name><name pos:line="244" pos:column="68">b</name><op:operator pos:line="244" pos:column="69">.</op:operator><name pos:line="244" pos:column="70">_keyCombos</name><index pos:line="244" pos:column="80">[<expr><name pos:line="244" pos:column="81">i</name></expr>]</index></name><op:operator pos:line="244" pos:column="83">.</op:operator><name pos:line="244" pos:column="84">_isCtrl</name><op:operator pos:line="244" pos:column="91">)</op:operator> <op:operator pos:line="244" pos:column="93">&amp;&amp;</op:operator> 
				<op:operator pos:line="245" pos:column="33">(</op:operator><name><name pos:line="245" pos:column="34">a</name><op:operator pos:line="245" pos:column="35">.</op:operator><name pos:line="245" pos:column="36">_keyCombos</name><index pos:line="245" pos:column="46">[<expr><name pos:line="245" pos:column="47">i</name></expr>]</index></name><op:operator pos:line="245" pos:column="49">.</op:operator><name pos:line="245" pos:column="50">_isAlt</name>		<op:operator pos:line="245" pos:column="65">==</op:operator> <name><name pos:line="245" pos:column="68">b</name><op:operator pos:line="245" pos:column="69">.</op:operator><name pos:line="245" pos:column="70">_keyCombos</name><index pos:line="245" pos:column="80">[<expr><name pos:line="245" pos:column="81">i</name></expr>]</index></name><op:operator pos:line="245" pos:column="83">.</op:operator><name pos:line="245" pos:column="84">_isAlt</name><op:operator pos:line="245" pos:column="90">)</op:operator> <op:operator pos:line="245" pos:column="92">&amp;&amp;</op:operator> 
				<op:operator pos:line="246" pos:column="33">(</op:operator><name><name pos:line="246" pos:column="34">a</name><op:operator pos:line="246" pos:column="35">.</op:operator><name pos:line="246" pos:column="36">_keyCombos</name><index pos:line="246" pos:column="46">[<expr><name pos:line="246" pos:column="47">i</name></expr>]</index></name><op:operator pos:line="246" pos:column="49">.</op:operator><name pos:line="246" pos:column="50">_isShift</name>	<op:operator pos:line="246" pos:column="65">==</op:operator> <name><name pos:line="246" pos:column="68">b</name><op:operator pos:line="246" pos:column="69">.</op:operator><name pos:line="246" pos:column="70">_keyCombos</name><index pos:line="246" pos:column="80">[<expr><name pos:line="246" pos:column="81">i</name></expr>]</index></name><op:operator pos:line="246" pos:column="83">.</op:operator><name pos:line="246" pos:column="84">_isShift</name><op:operator pos:line="246" pos:column="92">)</op:operator> <op:operator pos:line="246" pos:column="94">&amp;&amp;</op:operator> 
				<op:operator pos:line="247" pos:column="33">(</op:operator><name><name pos:line="247" pos:column="34">a</name><op:operator pos:line="247" pos:column="35">.</op:operator><name pos:line="247" pos:column="36">_keyCombos</name><index pos:line="247" pos:column="46">[<expr><name pos:line="247" pos:column="47">i</name></expr>]</index></name><op:operator pos:line="247" pos:column="49">.</op:operator><name pos:line="247" pos:column="50">_key</name>		<op:operator pos:line="247" pos:column="65">==</op:operator> <name><name pos:line="247" pos:column="68">b</name><op:operator pos:line="247" pos:column="69">.</op:operator><name pos:line="247" pos:column="70">_keyCombos</name><index pos:line="247" pos:column="80">[<expr><name pos:line="247" pos:column="81">i</name></expr>]</index></name><op:operator pos:line="247" pos:column="83">.</op:operator><name pos:line="247" pos:column="84">_key</name><op:operator pos:line="247" pos:column="88">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="248" pos:column="25">i</name><op:operator pos:line="248" pos:column="26">++</op:operator></expr>;</expr_stmt>
		}</block></while>
		<return pos:line="250" pos:column="17">return <expr><name pos:line="250" pos:column="24">equal</name></expr>;</return>
	}</block></function><empty_stmt pos:line="251" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="253" pos:column="9">friend</specifier> <specifier pos:line="253" pos:column="16">inline</specifier> <specifier pos:line="253" pos:column="23">const</specifier> <name pos:line="253" pos:column="29">bool</name></type> <name pos:line="253" pos:column="34">operator!=</name><parameter_list pos:line="253" pos:column="44">(<param><decl><type><specifier pos:line="253" pos:column="45">const</specifier> <name pos:line="253" pos:column="51">ScintillaKeyMap</name> <type:modifier pos:line="253" pos:column="67">&amp;</type:modifier></type> <name pos:line="253" pos:column="69">a</name></decl></param>, <param><decl><type><specifier pos:line="253" pos:column="72">const</specifier> <name pos:line="253" pos:column="78">ScintillaKeyMap</name> <type:modifier pos:line="253" pos:column="94">&amp;</type:modifier></type> <name pos:line="253" pos:column="96">b</name></decl></param>)</parameter_list> <block pos:line="253" pos:column="99">{
		<return pos:line="254" pos:column="17">return <expr><op:operator pos:line="254" pos:column="24">!</op:operator><op:operator pos:line="254" pos:column="25">(</op:operator><name pos:line="254" pos:column="26">a</name> <op:operator pos:line="254" pos:column="28">==</op:operator> <name pos:line="254" pos:column="31">b</name><op:operator pos:line="254" pos:column="32">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="255" pos:column="10">;</empty_stmt>

</public><private pos:line="257" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="258" pos:column="9">unsigned</name> <name pos:line="258" pos:column="18">long</name></type> <name pos:line="258" pos:column="23">_scintillaKeyID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="259" pos:column="9">int</name></type> <name pos:line="259" pos:column="13">_menuCmdID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="260" pos:column="9">vector</name><argument_list pos:line="260" pos:column="15">&lt;<argument><expr><name pos:line="260" pos:column="16">KeyCombo</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="260" pos:column="26">_keyCombos</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="261" pos:column="9">size_t</name></type> <name pos:line="261" pos:column="16">size</name></decl>;</decl_stmt>
	<function_decl><type><name pos:line="262" pos:column="9">void</name></type> <name pos:line="262" pos:column="14">applyToCurrentIndex</name><parameter_list pos:line="262" pos:column="33">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="263" pos:column="9">void</name></type> <name pos:line="263" pos:column="14">validateDialog</name><parameter_list pos:line="263" pos:column="28">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="264" pos:column="9">void</name></type> <name pos:line="264" pos:column="14">showCurrentSettings</name><parameter_list pos:line="264" pos:column="33">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="265" pos:column="9">void</name></type> <name pos:line="265" pos:column="14">updateListItem</name><parameter_list pos:line="265" pos:column="28">(<param><decl><type><name pos:line="265" pos:column="29">int</name></type> <name pos:line="265" pos:column="33">index</name></decl></param>)</parameter_list>;</function_decl>
</private><protected pos:line="266" pos:column="1">protected :
	<function_decl><type><name pos:line="267" pos:column="9">BOOL</name> <name pos:line="267" pos:column="14">CALLBACK</name></type> <name pos:line="267" pos:column="23">run_dlgProc</name><parameter_list pos:line="267" pos:column="34">(<param><decl><type><name pos:line="267" pos:column="35">UINT</name></type> <name pos:line="267" pos:column="40">Message</name></decl></param>, <param><decl><type><name pos:line="267" pos:column="49">WPARAM</name></type> <name pos:line="267" pos:column="56">wParam</name></decl></param>, <param><decl><type><name pos:line="267" pos:column="64">LPARAM</name></type> <name pos:line="267" pos:column="71">lParam</name></decl></param>)</parameter_list>;</function_decl>
</protected>}</block>;</class>


<class_decl pos:line="271" pos:column="1">class <name pos:line="271" pos:column="7">Window</name>;</class_decl>
<class_decl pos:line="272" pos:column="1">class <name pos:line="272" pos:column="7">ScintillaEditView</name>;</class_decl>

<struct pos:line="274" pos:column="1">struct <name pos:line="274" pos:column="8">recordedMacroStep</name> <block pos:line="274" pos:column="26">{<public type="default" pos:line="274" pos:column="27">
	<enum pos:line="275" pos:column="9">enum <name pos:line="275" pos:column="14">MacroTypeIndex</name> <block pos:line="275" pos:column="29">{<decl><name pos:line="275" pos:column="30">mtUseLParameter</name></decl><op:operator pos:line="275" pos:column="45">,</op:operator> <decl><name pos:line="275" pos:column="47">mtUseSParameter</name></decl><op:operator pos:line="275" pos:column="62">,</op:operator> <decl><name pos:line="275" pos:column="64">mtMenuCommand</name></decl><op:operator pos:line="275" pos:column="77">,</op:operator> <decl><name pos:line="275" pos:column="79">mtSavedSnR</name></decl>}</block>;</enum>
	
	<decl_stmt><decl><type><name pos:line="277" pos:column="9">int</name></type> <name pos:line="277" pos:column="13">message</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="278" pos:column="9">long</name></type> <name pos:line="278" pos:column="14">wParameter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="279" pos:column="9">long</name></type> <name pos:line="279" pos:column="14">lParameter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="280" pos:column="9">generic_string</name></type> <name pos:line="280" pos:column="24">sParameter</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="281" pos:column="9">MacroTypeIndex</name></type> <name pos:line="281" pos:column="24">MacroType</name></decl>;</decl_stmt>
	
	<constructor_decl><name pos:line="283" pos:column="9">recordedMacroStep</name><parameter_list pos:line="283" pos:column="26">(<param><decl><type><name pos:line="283" pos:column="27">int</name></type> <name pos:line="283" pos:column="31">iMessage</name></decl></param>, <param><decl><type><name pos:line="283" pos:column="41">long</name></type> <name pos:line="283" pos:column="46">wParam</name></decl></param>, <param><decl><type><name pos:line="283" pos:column="54">long</name></type> <name pos:line="283" pos:column="59">lParam</name></decl></param>, <param><decl><type><name pos:line="283" pos:column="67">int</name></type> <name pos:line="283" pos:column="71">codepage</name></decl></param>)</parameter_list>;</constructor_decl>
	<constructor><name pos:line="284" pos:column="9">recordedMacroStep</name><parameter_list pos:line="284" pos:column="26">(<param><decl><type><name pos:line="284" pos:column="27">int</name></type> <name pos:line="284" pos:column="31">iCommandID</name></decl></param>)</parameter_list> <member_list pos:line="284" pos:column="43">: <call><name pos:line="284" pos:column="45">message</name><argument_list pos:line="284" pos:column="52">(<argument><expr><lit:literal type="number" pos:line="284" pos:column="53">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="284" pos:column="55">,</op:operator> <call><name pos:line="284" pos:column="57">wParameter</name><argument_list pos:line="284" pos:column="67">(<argument><expr><name pos:line="284" pos:column="68">iCommandID</name></expr></argument>)</argument_list></call><op:operator pos:line="284" pos:column="79">,</op:operator> <call><name pos:line="284" pos:column="81">lParameter</name><argument_list pos:line="284" pos:column="91">(<argument><expr><lit:literal type="number" pos:line="284" pos:column="92">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="284" pos:column="94">,</op:operator> <call><name pos:line="284" pos:column="96">MacroType</name><argument_list pos:line="284" pos:column="105">(<argument><expr><name pos:line="284" pos:column="106">mtMenuCommand</name></expr></argument>)</argument_list></call> </member_list><block pos:line="284" pos:column="121">{}</block></constructor><empty_stmt pos:line="284" pos:column="123">;</empty_stmt>

	<constructor><name pos:line="286" pos:column="9">recordedMacroStep</name><parameter_list pos:line="286" pos:column="26">(<param><decl><type><name pos:line="286" pos:column="27">int</name></type> <name pos:line="286" pos:column="31">iMessage</name></decl></param>, <param><decl><type><name pos:line="286" pos:column="41">long</name></type> <name pos:line="286" pos:column="46">wParam</name></decl></param>, <param><decl><type><name pos:line="286" pos:column="54">long</name></type> <name pos:line="286" pos:column="59">lParam</name></decl></param>, <param><decl><type><specifier pos:line="286" pos:column="67">const</specifier> <name pos:line="286" pos:column="73">TCHAR</name> <type:modifier pos:line="286" pos:column="79">*</type:modifier></type><name pos:line="286" pos:column="80">sParam</name></decl></param>, <param><decl><type><name pos:line="286" pos:column="88">int</name></type> <name pos:line="286" pos:column="92">type</name></decl></param>)</parameter_list>
		<member_list pos:line="287" pos:column="17">: <call><name pos:line="287" pos:column="19">message</name><argument_list pos:line="287" pos:column="26">(<argument><expr><name pos:line="287" pos:column="27">iMessage</name></expr></argument>)</argument_list></call><op:operator pos:line="287" pos:column="36">,</op:operator> <call><name pos:line="287" pos:column="38">wParameter</name><argument_list pos:line="287" pos:column="48">(<argument><expr><name pos:line="287" pos:column="49">wParam</name></expr></argument>)</argument_list></call><op:operator pos:line="287" pos:column="56">,</op:operator> <call><name pos:line="287" pos:column="58">lParameter</name><argument_list pos:line="287" pos:column="68">(<argument><expr><name pos:line="287" pos:column="69">lParam</name></expr></argument>)</argument_list></call><op:operator pos:line="287" pos:column="76">,</op:operator> <call><name pos:line="287" pos:column="78">MacroType</name><argument_list pos:line="287" pos:column="87">(<argument><expr><call><name pos:line="287" pos:column="88">MacroTypeIndex</name><argument_list pos:line="287" pos:column="102">(<argument><expr><name pos:line="287" pos:column="103">type</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></member_list><block pos:line="287" pos:column="109">{
			<expr_stmt><expr><name pos:line="288" pos:column="25">sParameter</name> <op:operator pos:line="288" pos:column="36">=</op:operator> <op:operator pos:line="288" pos:column="38">(</op:operator><name pos:line="288" pos:column="39">sParam</name><op:operator pos:line="288" pos:column="45">)</op:operator><op:operator pos:line="288" pos:column="46">?</op:operator><call><name pos:line="288" pos:column="47">generic_string</name><argument_list pos:line="288" pos:column="61">(<argument><expr><name pos:line="288" pos:column="62">sParam</name></expr></argument>)</argument_list></call><op:operator pos:line="288" pos:column="69">:</op:operator><call><name pos:line="288" pos:column="70">TEXT</name><argument_list pos:line="288" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="288" pos:column="75">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
	}</block></constructor><empty_stmt pos:line="289" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="291" pos:column="9">bool</name></type> <name pos:line="291" pos:column="14">isValid</name><parameter_list pos:line="291" pos:column="21">()</parameter_list> <specifier pos:line="291" pos:column="24">const</specifier> <block pos:line="291" pos:column="30">{
		<return pos:line="292" pos:column="17">return <expr><lit:literal type="boolean" pos:line="292" pos:column="24">true</lit:literal></expr>;</return>
	}</block></function><empty_stmt pos:line="293" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="294" pos:column="9">bool</name></type> <name pos:line="294" pos:column="14">isPlayable</name><parameter_list pos:line="294" pos:column="24">()</parameter_list> <specifier pos:line="294" pos:column="27">const</specifier> <block pos:line="294" pos:column="33">{<return pos:line="294" pos:column="34">return <expr><name pos:line="294" pos:column="41">MacroType</name> <op:operator pos:line="294" pos:column="51">&lt;=</op:operator> <name pos:line="294" pos:column="54">mtMenuCommand</name></expr>;</return>}</block></function><empty_stmt pos:line="294" pos:column="69">;</empty_stmt>

	<function_decl><type><name pos:line="296" pos:column="9">void</name></type> <name pos:line="296" pos:column="14">PlayBack</name><parameter_list pos:line="296" pos:column="22">(<param><decl><type><name pos:line="296" pos:column="23">Window</name><type:modifier pos:line="296" pos:column="29">*</type:modifier></type> <name pos:line="296" pos:column="31">pNotepad</name></decl></param>, <param><decl><type><name pos:line="296" pos:column="41">ScintillaEditView</name> <type:modifier pos:line="296" pos:column="59">*</type:modifier></type><name pos:line="296" pos:column="60">pEditView</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</struct>

<typedef pos:line="299" pos:column="1">typedef <type><name><name pos:line="299" pos:column="9">vector</name><argument_list pos:line="299" pos:column="15">&lt;<argument><expr><name pos:line="299" pos:column="16">recordedMacroStep</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="299" pos:column="35">Macro</name>;</typedef>

<class pos:line="301" pos:column="1">class <name pos:line="301" pos:column="7">MacroShortcut</name> <super pos:line="301" pos:column="21">: <specifier pos:line="301" pos:column="23">public</specifier> <name pos:line="301" pos:column="30">CommandShortcut</name></super> <block pos:line="301" pos:column="46">{<private type="default" pos:line="301" pos:column="47">
<class_decl><specifier pos:line="302" pos:column="1">friend</specifier> class <name pos:line="302" pos:column="14">NppParameters</name>;</class_decl>
</private><public pos:line="303" pos:column="1">public:
	<constructor><name pos:line="304" pos:column="9">MacroShortcut</name><parameter_list pos:line="304" pos:column="22">(<param><decl><type><name pos:line="304" pos:column="23">Shortcut</name></type> <name pos:line="304" pos:column="32">sc</name></decl></param>, <param><decl><type><name pos:line="304" pos:column="36">Macro</name></type> <name pos:line="304" pos:column="42">macro</name></decl></param>, <param><decl><type><name pos:line="304" pos:column="49">int</name></type> <name pos:line="304" pos:column="53">id</name></decl></param>)</parameter_list> <member_list pos:line="304" pos:column="57">: <call><name pos:line="304" pos:column="59">CommandShortcut</name><argument_list pos:line="304" pos:column="74">(<argument><expr><name pos:line="304" pos:column="75">sc</name></expr></argument>, <argument><expr><name pos:line="304" pos:column="79">id</name></expr></argument>)</argument_list></call><op:operator pos:line="304" pos:column="82">,</op:operator> <call><name pos:line="304" pos:column="84">_macro</name><argument_list pos:line="304" pos:column="90">(<argument><expr><name pos:line="304" pos:column="91">macro</name></expr></argument>)</argument_list></call> </member_list><block pos:line="304" pos:column="98">{<expr_stmt><expr><name pos:line="304" pos:column="99">_canModifyName</name> <op:operator pos:line="304" pos:column="114">=</op:operator> <lit:literal type="boolean" pos:line="304" pos:column="116">true</lit:literal></expr>;</expr_stmt>}</block></constructor><empty_stmt pos:line="304" pos:column="122">;</empty_stmt>
	<function><type><name pos:line="305" pos:column="9">Macro</name> <type:modifier pos:line="305" pos:column="15">&amp;</type:modifier></type> <name pos:line="305" pos:column="17">getMacro</name><parameter_list pos:line="305" pos:column="25">()</parameter_list> <block pos:line="305" pos:column="28">{<return pos:line="305" pos:column="29">return <expr><name pos:line="305" pos:column="36">_macro</name></expr>;</return>}</block></function><empty_stmt pos:line="305" pos:column="44">;</empty_stmt>
</public><private pos:line="306" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="307" pos:column="9">Macro</name></type> <name pos:line="307" pos:column="15">_macro</name></decl>;</decl_stmt>
</private>}</block>;</class>


<class pos:line="311" pos:column="1">class <name pos:line="311" pos:column="7">UserCommand</name> <super pos:line="311" pos:column="19">: <specifier pos:line="311" pos:column="21">public</specifier> <name pos:line="311" pos:column="28">CommandShortcut</name></super> <block pos:line="311" pos:column="44">{<private type="default" pos:line="311" pos:column="45">
<class_decl><specifier pos:line="312" pos:column="1">friend</specifier> class <name pos:line="312" pos:column="14">NppParameters</name>;</class_decl>
</private><public pos:line="313" pos:column="1">public:
	<constructor><name pos:line="314" pos:column="9">UserCommand</name><parameter_list pos:line="314" pos:column="20">(<param><decl><type><name pos:line="314" pos:column="21">Shortcut</name></type> <name pos:line="314" pos:column="30">sc</name></decl></param>, <param><decl><type><specifier pos:line="314" pos:column="34">const</specifier> <name pos:line="314" pos:column="40">TCHAR</name> <type:modifier pos:line="314" pos:column="46">*</type:modifier></type><name pos:line="314" pos:column="47">cmd</name></decl></param>, <param><decl><type><name pos:line="314" pos:column="52">int</name></type> <name pos:line="314" pos:column="56">id</name></decl></param>)</parameter_list> <member_list pos:line="314" pos:column="60">: <call><name pos:line="314" pos:column="62">CommandShortcut</name><argument_list pos:line="314" pos:column="77">(<argument><expr><name pos:line="314" pos:column="78">sc</name></expr></argument>, <argument><expr><name pos:line="314" pos:column="82">id</name></expr></argument>)</argument_list></call><op:operator pos:line="314" pos:column="85">,</op:operator> <call><name pos:line="314" pos:column="87">_cmd</name><argument_list pos:line="314" pos:column="91">(<argument><expr><name pos:line="314" pos:column="92">cmd</name></expr></argument>)</argument_list></call> </member_list><block pos:line="314" pos:column="97">{<expr_stmt><expr><name pos:line="314" pos:column="98">_canModifyName</name> <op:operator pos:line="314" pos:column="113">=</op:operator> <lit:literal type="boolean" pos:line="314" pos:column="115">true</lit:literal></expr>;</expr_stmt>}</block></constructor><empty_stmt pos:line="314" pos:column="121">;</empty_stmt>
	<function><type><specifier pos:line="315" pos:column="9">const</specifier> <name pos:line="315" pos:column="15">TCHAR</name><type:modifier pos:line="315" pos:column="20">*</type:modifier></type> <name pos:line="315" pos:column="22">getCmd</name><parameter_list pos:line="315" pos:column="28">()</parameter_list> <specifier pos:line="315" pos:column="31">const</specifier> <block pos:line="315" pos:column="37">{<return pos:line="315" pos:column="38">return <expr><call><name><name pos:line="315" pos:column="45">_cmd</name><op:operator pos:line="315" pos:column="49">.</op:operator><name pos:line="315" pos:column="50">c_str</name></name><argument_list pos:line="315" pos:column="55">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="315" pos:column="59">;</empty_stmt>
</public><private pos:line="316" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="317" pos:column="9">generic_string</name></type> <name pos:line="317" pos:column="24">_cmd</name></decl>;</decl_stmt>
</private>}</block>;</class>

<class pos:line="320" pos:column="1">class <name pos:line="320" pos:column="7">PluginCmdShortcut</name> <super pos:line="320" pos:column="25">: <specifier pos:line="320" pos:column="27">public</specifier> <name pos:line="320" pos:column="34">CommandShortcut</name></super> <block pos:line="320" pos:column="50">{<private type="default" pos:line="320" pos:column="51">
<comment type="line" pos:line="321" pos:column="1">//friend class NppParameters;</comment>
</private><public pos:line="322" pos:column="1">public:
	<constructor><name pos:line="323" pos:column="9">PluginCmdShortcut</name><parameter_list pos:line="323" pos:column="26">(<param><decl><type><name pos:line="323" pos:column="27">Shortcut</name></type> <name pos:line="323" pos:column="36">sc</name></decl></param>, <param><decl><type><name pos:line="323" pos:column="40">int</name></type> <name pos:line="323" pos:column="44">id</name></decl></param>, <param><decl><type><specifier pos:line="323" pos:column="48">const</specifier> <name pos:line="323" pos:column="54">TCHAR</name> <type:modifier pos:line="323" pos:column="60">*</type:modifier></type><name pos:line="323" pos:column="61">moduleName</name></decl></param>, <param><decl><type><name pos:line="323" pos:column="73">unsigned</name> <name pos:line="323" pos:column="82">short</name></type> <name pos:line="323" pos:column="88">internalID</name></decl></param>)</parameter_list> <member_list pos:line="323" pos:column="100">:\
		<call><name pos:line="324" pos:column="17">CommandShortcut</name><argument_list pos:line="324" pos:column="32">(<argument><expr><name pos:line="324" pos:column="33">sc</name></expr></argument>, <argument><expr><name pos:line="324" pos:column="37">id</name></expr></argument>)</argument_list></call><op:operator pos:line="324" pos:column="40">,</op:operator> <call><name pos:line="324" pos:column="42">_id</name><argument_list pos:line="324" pos:column="45">(<argument><expr><name pos:line="324" pos:column="46">id</name></expr></argument>)</argument_list></call><op:operator pos:line="324" pos:column="49">,</op:operator> <call><name pos:line="324" pos:column="51">_moduleName</name><argument_list pos:line="324" pos:column="62">(<argument><expr><name pos:line="324" pos:column="63">moduleName</name></expr></argument>)</argument_list></call><op:operator pos:line="324" pos:column="74">,</op:operator> <call><name pos:line="324" pos:column="76">_internalID</name><argument_list pos:line="324" pos:column="87">(<argument><expr><name pos:line="324" pos:column="88">internalID</name></expr></argument>)</argument_list></call> </member_list><block pos:line="324" pos:column="100">{}</block></constructor><empty_stmt pos:line="324" pos:column="102">;</empty_stmt>
	<function><type><name pos:line="325" pos:column="9">bool</name></type> <name pos:line="325" pos:column="14">isValid</name><parameter_list pos:line="325" pos:column="21">()</parameter_list> <specifier pos:line="325" pos:column="24">const</specifier> <block pos:line="325" pos:column="30">{
		<if pos:line="326" pos:column="17">if <condition pos:line="326" pos:column="20">(<expr><op:operator pos:line="326" pos:column="21">!</op:operator><call><name><name pos:line="326" pos:column="22">Shortcut</name><op:operator pos:line="326" pos:column="30">::</op:operator><name pos:line="326" pos:column="32">isValid</name></name><argument_list pos:line="326" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="326" pos:column="42">
			<return pos:line="327" pos:column="25">return <expr><lit:literal type="boolean" pos:line="327" pos:column="32">false</lit:literal></expr>;</return></then></if>
		<if pos:line="328" pos:column="17">if <condition pos:line="328" pos:column="20">(<expr><op:operator pos:line="328" pos:column="21">(</op:operator><op:operator pos:line="328" pos:column="22">!</op:operator><name><name pos:line="328" pos:column="23">_moduleName</name><index pos:line="328" pos:column="34">[<expr><lit:literal type="number" pos:line="328" pos:column="35">0</lit:literal></expr>]</index></name><op:operator pos:line="328" pos:column="37">)</op:operator> <op:operator pos:line="328" pos:column="39">||</op:operator> <op:operator pos:line="328" pos:column="42">(</op:operator><name pos:line="328" pos:column="43">_internalID</name> <op:operator pos:line="328" pos:column="55">==</op:operator> <op:operator pos:line="328" pos:column="58">-</op:operator><lit:literal type="number" pos:line="328" pos:column="59">1</lit:literal><op:operator pos:line="328" pos:column="60">)</op:operator></expr>)</condition><then pos:line="328" pos:column="62">
			<return pos:line="329" pos:column="25">return <expr><lit:literal type="boolean" pos:line="329" pos:column="32">false</lit:literal></expr>;</return></then></if>
		<return pos:line="330" pos:column="17">return <expr><lit:literal type="boolean" pos:line="330" pos:column="24">true</lit:literal></expr>;</return>
	}</block></function>
	<function><type><specifier pos:line="332" pos:column="9">const</specifier> <name pos:line="332" pos:column="15">TCHAR</name> <type:modifier pos:line="332" pos:column="21">*</type:modifier></type> <name pos:line="332" pos:column="23">getModuleName</name><parameter_list pos:line="332" pos:column="36">()</parameter_list> <specifier pos:line="332" pos:column="39">const</specifier> <block pos:line="332" pos:column="45">{<return pos:line="332" pos:column="46">return <expr><call><name><name pos:line="332" pos:column="53">_moduleName</name><op:operator pos:line="332" pos:column="64">.</op:operator><name pos:line="332" pos:column="65">c_str</name></name><argument_list pos:line="332" pos:column="70">()</argument_list></call></expr>;</return>}</block></function><empty_stmt pos:line="332" pos:column="74">;</empty_stmt>
	<function><type><name pos:line="333" pos:column="9">int</name></type> <name pos:line="333" pos:column="13">getInternalID</name><parameter_list pos:line="333" pos:column="26">()</parameter_list> <specifier pos:line="333" pos:column="29">const</specifier> <block pos:line="333" pos:column="35">{<return pos:line="333" pos:column="36">return <expr><name pos:line="333" pos:column="43">_internalID</name></expr>;</return>}</block></function><empty_stmt pos:line="333" pos:column="56">;</empty_stmt>
	<function><type><name pos:line="334" pos:column="9">unsigned</name> <name pos:line="334" pos:column="18">long</name></type> <name pos:line="334" pos:column="23">getID</name><parameter_list pos:line="334" pos:column="28">()</parameter_list> <specifier pos:line="334" pos:column="31">const</specifier> <block pos:line="334" pos:column="37">{<return pos:line="334" pos:column="38">return <expr><name pos:line="334" pos:column="45">_id</name></expr>;</return>}</block></function><empty_stmt pos:line="334" pos:column="50">;</empty_stmt>

</public><private pos:line="336" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="337" pos:column="9">unsigned</name> <name pos:line="337" pos:column="18">long</name></type> <name pos:line="337" pos:column="23">_id</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="338" pos:column="9">generic_string</name></type> <name pos:line="338" pos:column="24">_moduleName</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="339" pos:column="9">int</name></type> <name pos:line="339" pos:column="13">_internalID</name></decl>;</decl_stmt>
</private>}</block>;</class>

<class pos:line="342" pos:column="1">class <name pos:line="342" pos:column="7">Accelerator</name> <block pos:line="342" pos:column="19">{<private type="default" pos:line="342" pos:column="20"> <comment type="line" pos:line="342" pos:column="21">//Handles accelerator keys for Notepad++ menu, including custom commands</comment>
<class_decl><specifier pos:line="343" pos:column="1">friend</specifier> class <name pos:line="343" pos:column="14">ShortcutMapper</name>;</class_decl>
</private><public pos:line="344" pos:column="1">public:
	<constructor><name pos:line="345" pos:column="9">Accelerator</name><parameter_list pos:line="345" pos:column="20">()</parameter_list><member_list pos:line="345" pos:column="22">:<call><name pos:line="345" pos:column="23">_hAccelMenu</name><argument_list pos:line="345" pos:column="34">(<argument><expr><name pos:line="345" pos:column="35">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="345" pos:column="40">,</op:operator> <call><name pos:line="345" pos:column="42">_hMenuParent</name><argument_list pos:line="345" pos:column="54">(<argument><expr><name pos:line="345" pos:column="55">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="345" pos:column="60">,</op:operator> <call><name pos:line="345" pos:column="62">_hAccTable</name><argument_list pos:line="345" pos:column="72">(<argument><expr><name pos:line="345" pos:column="73">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="345" pos:column="78">,</op:operator> <call><name pos:line="345" pos:column="80">_pAccelArray</name><argument_list pos:line="345" pos:column="92">(<argument><expr><name pos:line="345" pos:column="93">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="345" pos:column="98">,</op:operator> <call><name pos:line="345" pos:column="100">_nbAccelItems</name><argument_list pos:line="345" pos:column="113">(<argument><expr><lit:literal type="number" pos:line="345" pos:column="114">0</lit:literal></expr></argument>)</argument_list></call></member_list><block pos:line="345" pos:column="116">{}</block></constructor><empty_stmt pos:line="345" pos:column="118">;</empty_stmt>
	<destructor><name pos:line="346" pos:column="9">~<name pos:line="346" pos:column="10">Accelerator</name></name><parameter_list pos:line="346" pos:column="21">()</parameter_list><block pos:line="346" pos:column="23">{
		<if pos:line="347" pos:column="17">if <condition pos:line="347" pos:column="20">(<expr><name pos:line="347" pos:column="21">_hAccTable</name></expr>)</condition><then pos:line="347" pos:column="32">
			<expr_stmt><expr><call><name><op:operator pos:line="348" pos:column="25">::</op:operator><name pos:line="348" pos:column="27">DestroyAcceleratorTable</name></name><argument_list pos:line="348" pos:column="50">(<argument><expr><name pos:line="348" pos:column="51">_hAccTable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="349" pos:column="17">if <condition pos:line="349" pos:column="20">(<expr><name pos:line="349" pos:column="21">_pAccelArray</name></expr>)</condition><then pos:line="349" pos:column="34">
			<expr_stmt><expr><op:operator pos:line="350" pos:column="25">delete</op:operator> <index pos:line="350" pos:column="32">[]</index> <name pos:line="350" pos:column="35">_pAccelArray</name></expr>;</expr_stmt></then></if>
	}</block></destructor><empty_stmt pos:line="351" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="352" pos:column="9">void</name></type> <name pos:line="352" pos:column="14">init</name><parameter_list pos:line="352" pos:column="18">(<param><decl><type><name pos:line="352" pos:column="19">HMENU</name></type> <name pos:line="352" pos:column="25">hMenu</name></decl></param>, <param><decl><type><name pos:line="352" pos:column="32">HWND</name></type> <name pos:line="352" pos:column="37">menuParent</name></decl></param>)</parameter_list> <block pos:line="352" pos:column="49">{
		<expr_stmt><expr><name pos:line="353" pos:column="17">_hAccelMenu</name> <op:operator pos:line="353" pos:column="29">=</op:operator> <name pos:line="353" pos:column="31">hMenu</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="354" pos:column="17">_hMenuParent</name> <op:operator pos:line="354" pos:column="30">=</op:operator> <name pos:line="354" pos:column="32">menuParent</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="355" pos:column="17">updateShortcuts</name><argument_list pos:line="355" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="356" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="357" pos:column="9">HACCEL</name></type> <name pos:line="357" pos:column="16">getAccTable</name><parameter_list pos:line="357" pos:column="27">()</parameter_list> <specifier pos:line="357" pos:column="30">const</specifier> <block pos:line="357" pos:column="36">{<return pos:line="357" pos:column="37">return <expr><name pos:line="357" pos:column="44">_hAccTable</name></expr>;</return>}</block></function><empty_stmt pos:line="357" pos:column="56">;</empty_stmt>

	<function_decl><type><name pos:line="359" pos:column="9">void</name></type> <name pos:line="359" pos:column="14">updateShortcuts</name><parameter_list pos:line="359" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="360" pos:column="9">void</name></type> <name pos:line="360" pos:column="14">updateFullMenu</name><parameter_list pos:line="360" pos:column="28">()</parameter_list>;</function_decl>

</public><private pos:line="362" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="363" pos:column="9">HMENU</name></type> <name pos:line="363" pos:column="15">_hAccelMenu</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="364" pos:column="9">HWND</name></type> <name pos:line="364" pos:column="14">_hMenuParent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="365" pos:column="9">HACCEL</name></type> <name pos:line="365" pos:column="16">_hAccTable</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="366" pos:column="9">ACCEL</name> <type:modifier pos:line="366" pos:column="15">*</type:modifier></type><name pos:line="366" pos:column="16">_pAccelArray</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="367" pos:column="9">int</name></type> <name pos:line="367" pos:column="13">_nbAccelItems</name></decl>;</decl_stmt>

	<function><type><name pos:line="369" pos:column="9">void</name></type> <name pos:line="369" pos:column="14">reNew</name><parameter_list pos:line="369" pos:column="19">()</parameter_list> <block pos:line="369" pos:column="22">{
		<if pos:line="370" pos:column="17">if<condition pos:line="370" pos:column="19">(<expr><name pos:line="370" pos:column="20">_hAccTable</name></expr>)</condition><then pos:line="370" pos:column="31">
			<expr_stmt><expr><call><name><op:operator pos:line="371" pos:column="25">::</op:operator><name pos:line="371" pos:column="27">DestroyAcceleratorTable</name></name><argument_list pos:line="371" pos:column="50">(<argument><expr><name pos:line="371" pos:column="51">_hAccTable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name pos:line="372" pos:column="17">_hAccTable</name> <op:operator pos:line="372" pos:column="28">=</op:operator> <call><name><op:operator pos:line="372" pos:column="30">::</op:operator><name pos:line="372" pos:column="32">CreateAcceleratorTable</name></name><argument_list pos:line="372" pos:column="54">(<argument><expr><name pos:line="372" pos:column="55">_pAccelArray</name></expr></argument>, <argument><expr><name pos:line="372" pos:column="69">_nbAccelItems</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="373" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="374" pos:column="9">void</name></type> <name pos:line="374" pos:column="14">updateMenuItemByCommand</name><parameter_list pos:line="374" pos:column="37">(<param><decl><type><name pos:line="374" pos:column="38">CommandShortcut</name></type> <name pos:line="374" pos:column="54">csc</name></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<class pos:line="377" pos:column="1">class <name pos:line="377" pos:column="7">ScintillaAccelerator</name> <block pos:line="377" pos:column="28">{<private type="default" pos:line="377" pos:column="29">	<comment type="line" pos:line="377" pos:column="33">//Handles accelerator keys for scintilla</comment>
</private><public pos:line="378" pos:column="1">public:
	<constructor><name pos:line="379" pos:column="9">ScintillaAccelerator</name><parameter_list pos:line="379" pos:column="29">()</parameter_list> <member_list pos:line="379" pos:column="32">: <call><name pos:line="379" pos:column="34">_nrScintillas</name><argument_list pos:line="379" pos:column="47">(<argument><expr><lit:literal type="number" pos:line="379" pos:column="48">0</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="379" pos:column="51">{}</block></constructor><empty_stmt pos:line="379" pos:column="53">;</empty_stmt>
	<function_decl><type><name pos:line="380" pos:column="9">void</name></type> <name pos:line="380" pos:column="14">init</name><parameter_list pos:line="380" pos:column="18">(<param><decl><type><name><name pos:line="380" pos:column="19">vector</name><argument_list pos:line="380" pos:column="25">&lt;<argument><expr><name pos:line="380" pos:column="26">HWND</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="380" pos:column="32">*</type:modifier></type> <name pos:line="380" pos:column="34">vScintillas</name></decl></param>, <param><decl><type><name pos:line="380" pos:column="47">HMENU</name></type> <name pos:line="380" pos:column="53">hMenu</name></decl></param>, <param><decl><type><name pos:line="380" pos:column="60">HWND</name></type> <name pos:line="380" pos:column="65">menuParent</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="381" pos:column="9">void</name></type> <name pos:line="381" pos:column="14">updateKeys</name><parameter_list pos:line="381" pos:column="24">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="382" pos:column="9">void</name></type> <name pos:line="382" pos:column="14">updateKey</name><parameter_list pos:line="382" pos:column="23">(<param><decl><type><name pos:line="382" pos:column="24">ScintillaKeyMap</name></type> <name pos:line="382" pos:column="40">skmOld</name></decl></param>, <param><decl><type><name pos:line="382" pos:column="48">ScintillaKeyMap</name></type> <name pos:line="382" pos:column="64">skm</name></decl></param>)</parameter_list>;</function_decl>
</public><private pos:line="383" pos:column="1">private:
	<decl_stmt><decl><type><name pos:line="384" pos:column="9">HMENU</name></type> <name pos:line="384" pos:column="15">_hAccelMenu</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="385" pos:column="9">HWND</name></type> <name pos:line="385" pos:column="14">_hMenuParent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="386" pos:column="9">vector</name><argument_list pos:line="386" pos:column="15">&lt;<argument><expr><name pos:line="386" pos:column="16">HWND</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="386" pos:column="22">_vScintillas</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="387" pos:column="9">int</name></type> <name pos:line="387" pos:column="13">_nrScintillas</name></decl>;</decl_stmt>

	<function_decl><type><name pos:line="389" pos:column="9">void</name></type> <name pos:line="389" pos:column="14">updateMenuItemByID</name><parameter_list pos:line="389" pos:column="32">(<param><decl><type><name pos:line="389" pos:column="33">ScintillaKeyMap</name></type> <name pos:line="389" pos:column="49">skm</name></decl></param>, <param><decl><type><name pos:line="389" pos:column="54">int</name></type> <name pos:line="389" pos:column="58">id</name></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<cpp:endif pos:line="392" pos:column="1">#<cpp:directive pos:line="392" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="392" pos:column="8">//SHORTCUTS_H</comment>
</unit>
