<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\PositionCache.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file PositionCache.h
 ** Classes for caching layout information.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2009 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">POSITIONCACHE_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">POSITIONCACHE_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<function><type><specifier pos:line="15" pos:column="1">static</specifier> <specifier pos:line="15" pos:column="8">inline</specifier> <name pos:line="15" pos:column="15">bool</name></type> <name pos:line="15" pos:column="20">IsEOLChar</name><parameter_list pos:line="15" pos:column="29">(<param><decl><type><name pos:line="15" pos:column="30">char</name></type> <name pos:line="15" pos:column="35">ch</name></decl></param>)</parameter_list> <block pos:line="15" pos:column="39">{
	<return pos:line="16" pos:column="9">return <expr><op:operator pos:line="16" pos:column="16">(</op:operator><name pos:line="16" pos:column="17">ch</name> <op:operator pos:line="16" pos:column="20">==</op:operator> <lit:literal type="char" pos:line="16" pos:column="23">'\r'</lit:literal><op:operator pos:line="16" pos:column="27">)</op:operator> <op:operator pos:line="16" pos:column="29">||</op:operator> <op:operator pos:line="16" pos:column="32">(</op:operator><name pos:line="16" pos:column="33">ch</name> <op:operator pos:line="16" pos:column="36">==</op:operator> <lit:literal type="char" pos:line="16" pos:column="39">'\n'</lit:literal><op:operator pos:line="16" pos:column="43">)</op:operator></expr>;</return>
}</block></function>

<comment type="block" format="doxygen" pos:line="19" pos:column="1">/**
 */</comment>
<class pos:line="21" pos:column="1">class <name pos:line="21" pos:column="7">LineLayout</name> <block pos:line="21" pos:column="18">{<private type="default" pos:line="21" pos:column="19">
</private><private pos:line="22" pos:column="1">private:
	<class_decl><specifier pos:line="23" pos:column="9">friend</specifier> class <name pos:line="23" pos:column="22">LineLayoutCache</name>;</class_decl>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">int</name> <type:modifier pos:line="24" pos:column="13">*</type:modifier></type><name pos:line="24" pos:column="14">lineStarts</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="25" pos:column="9">int</name></type> <name pos:line="25" pos:column="13">lenLineStarts</name></decl>;</decl_stmt>
	<comment type="line" format="doxygen" pos:line="26" pos:column="9">/// Drawing is only performed for @a maxLineLength characters on each line.</comment>
	<decl_stmt><decl><type><name pos:line="27" pos:column="9">int</name></type> <name pos:line="27" pos:column="13">lineNumber</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="28" pos:column="9">bool</name></type> <name pos:line="28" pos:column="14">inCache</name></decl>;</decl_stmt>
</private><public pos:line="29" pos:column="1">public:
	<enum pos:line="30" pos:column="9">enum <block pos:line="30" pos:column="14">{ <decl><name pos:line="30" pos:column="16">wrapWidthInfinite</name> <init pos:line="30" pos:column="34">= <expr><lit:literal type="number" pos:line="30" pos:column="36">0x7ffffff</lit:literal></expr></init></decl> }</block>;</enum>
	<decl_stmt><decl><type><name pos:line="31" pos:column="9">int</name></type> <name pos:line="31" pos:column="13">maxLineLength</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="32" pos:column="9">int</name></type> <name pos:line="32" pos:column="13">numCharsInLine</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="33" pos:column="9">int</name></type> <name pos:line="33" pos:column="13">numCharsBeforeEOL</name></decl>;</decl_stmt>
	<enum pos:line="34" pos:column="9">enum <name pos:line="34" pos:column="14">validLevel</name> <block pos:line="34" pos:column="25">{ <decl><name pos:line="34" pos:column="27">llInvalid</name></decl><op:operator pos:line="34" pos:column="36">,</op:operator> <decl><name pos:line="34" pos:column="38">llCheckTextAndStyle</name></decl><op:operator pos:line="34" pos:column="57">,</op:operator> <decl><name pos:line="34" pos:column="59">llPositions</name></decl><op:operator pos:line="34" pos:column="70">,</op:operator> <decl><name pos:line="34" pos:column="72">llLines</name></decl> }</block> <decl><name pos:line="34" pos:column="82">validity</name></decl>;</enum>
	<decl_stmt><decl><type><name pos:line="35" pos:column="9">int</name></type> <name pos:line="35" pos:column="13">xHighlightGuide</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="36" pos:column="9">bool</name></type> <name pos:line="36" pos:column="14">highlightColumn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="37" pos:column="9">Selection</name> <type:modifier pos:line="37" pos:column="19">*</type:modifier></type><name pos:line="37" pos:column="20">psel</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="38" pos:column="9">bool</name></type> <name pos:line="38" pos:column="14">containsCaret</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="39" pos:column="9">int</name></type> <name pos:line="39" pos:column="13">edgeColumn</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">char</name> <type:modifier pos:line="40" pos:column="14">*</type:modifier></type><name pos:line="40" pos:column="15">chars</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="41" pos:column="9">unsigned</name> <name pos:line="41" pos:column="18">char</name> <type:modifier pos:line="41" pos:column="23">*</type:modifier></type><name pos:line="41" pos:column="24">styles</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">int</name></type> <name pos:line="42" pos:column="13">styleBitsSet</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="43" pos:column="9">char</name> <type:modifier pos:line="43" pos:column="14">*</type:modifier></type><name pos:line="43" pos:column="15">indicators</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="44" pos:column="9">int</name> <type:modifier pos:line="44" pos:column="13">*</type:modifier></type><name pos:line="44" pos:column="14">positions</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="45" pos:column="9">char</name></type> <name><name pos:line="45" pos:column="14">bracePreviousStyles</name><index pos:line="45" pos:column="33">[<expr><lit:literal type="number" pos:line="45" pos:column="34">2</lit:literal></expr>]</index></name></decl>;</decl_stmt>

	<comment type="line" pos:line="47" pos:column="9">// Hotspot support</comment>
	<decl_stmt><decl><type><name pos:line="48" pos:column="9">int</name></type> <name pos:line="48" pos:column="13">hsStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="49" pos:column="9">int</name></type> <name pos:line="49" pos:column="13">hsEnd</name></decl>;</decl_stmt>

	<comment type="line" pos:line="51" pos:column="9">// Wrapped line support</comment>
	<decl_stmt><decl><type><name pos:line="52" pos:column="9">int</name></type> <name pos:line="52" pos:column="13">widthLine</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="53" pos:column="9">int</name></type> <name pos:line="53" pos:column="13">lines</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="54" pos:column="9">int</name></type> <name pos:line="54" pos:column="13">wrapIndent</name></decl>;</decl_stmt> <comment type="line" pos:line="54" pos:column="25">// In pixels</comment>

	<constructor_decl><name pos:line="56" pos:column="9">LineLayout</name><parameter_list pos:line="56" pos:column="19">(<param><decl><type><name pos:line="56" pos:column="20">int</name></type> <name pos:line="56" pos:column="24">maxLineLength_</name></decl></param>)</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="57" pos:column="9">virtual</specifier> <name pos:line="57" pos:column="17">~<name pos:line="57" pos:column="18">LineLayout</name></name><parameter_list pos:line="57" pos:column="28">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="58" pos:column="9">void</name></type> <name pos:line="58" pos:column="14">Resize</name><parameter_list pos:line="58" pos:column="20">(<param><decl><type><name pos:line="58" pos:column="21">int</name></type> <name pos:line="58" pos:column="25">maxLineLength_</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="59" pos:column="9">void</name></type> <name pos:line="59" pos:column="14">Free</name><parameter_list pos:line="59" pos:column="18">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="60" pos:column="9">void</name></type> <name pos:line="60" pos:column="14">Invalidate</name><parameter_list pos:line="60" pos:column="24">(<param><decl><type><name pos:line="60" pos:column="25">validLevel</name></type> <name pos:line="60" pos:column="36">validity_</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="61" pos:column="9">int</name></type> <name pos:line="61" pos:column="13">LineStart</name><parameter_list pos:line="61" pos:column="22">(<param><decl><type><name pos:line="61" pos:column="23">int</name></type> <name pos:line="61" pos:column="27">line</name></decl></param>)</parameter_list> <specifier pos:line="61" pos:column="33">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="62" pos:column="9">int</name></type> <name pos:line="62" pos:column="13">LineLastVisible</name><parameter_list pos:line="62" pos:column="28">(<param><decl><type><name pos:line="62" pos:column="29">int</name></type> <name pos:line="62" pos:column="33">line</name></decl></param>)</parameter_list> <specifier pos:line="62" pos:column="39">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="63" pos:column="9">bool</name></type> <name pos:line="63" pos:column="14">InLine</name><parameter_list pos:line="63" pos:column="20">(<param><decl><type><name pos:line="63" pos:column="21">int</name></type> <name pos:line="63" pos:column="25">offset</name></decl></param>, <param><decl><type><name pos:line="63" pos:column="33">int</name></type> <name pos:line="63" pos:column="37">line</name></decl></param>)</parameter_list> <specifier pos:line="63" pos:column="43">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="64" pos:column="9">void</name></type> <name pos:line="64" pos:column="14">SetLineStart</name><parameter_list pos:line="64" pos:column="26">(<param><decl><type><name pos:line="64" pos:column="27">int</name></type> <name pos:line="64" pos:column="31">line</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="37">int</name></type> <name pos:line="64" pos:column="41">start</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="65" pos:column="9">void</name></type> <name pos:line="65" pos:column="14">SetBracesHighlight</name><parameter_list pos:line="65" pos:column="32">(<param><decl><type><name pos:line="65" pos:column="33">Range</name></type> <name pos:line="65" pos:column="39">rangeLine</name></decl></param>, <param><decl><type><name pos:line="65" pos:column="50">Position</name></type> <name><name pos:line="65" pos:column="59">braces</name><index pos:line="65" pos:column="65">[]</index></name></decl></param>,
		<param><decl><type><name pos:line="66" pos:column="17">char</name></type> <name pos:line="66" pos:column="22">bracesMatchStyle</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="40">int</name></type> <name pos:line="66" pos:column="44">xHighlight</name></decl></param>, <param><decl><type><name pos:line="66" pos:column="56">bool</name></type> <name pos:line="66" pos:column="61">ignoreStyle</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="67" pos:column="9">void</name></type> <name pos:line="67" pos:column="14">RestoreBracesHighlight</name><parameter_list pos:line="67" pos:column="36">(<param><decl><type><name pos:line="67" pos:column="37">Range</name></type> <name pos:line="67" pos:column="43">rangeLine</name></decl></param>, <param><decl><type><name pos:line="67" pos:column="54">Position</name></type> <name><name pos:line="67" pos:column="63">braces</name><index pos:line="67" pos:column="69">[]</index></name></decl></param>, <param><decl><type><name pos:line="67" pos:column="73">bool</name></type> <name pos:line="67" pos:column="78">ignoreStyle</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="68" pos:column="9">int</name></type> <name pos:line="68" pos:column="13">FindBefore</name><parameter_list pos:line="68" pos:column="23">(<param><decl><type><name pos:line="68" pos:column="24">int</name></type> <name pos:line="68" pos:column="28">x</name></decl></param>, <param><decl><type><name pos:line="68" pos:column="31">int</name></type> <name pos:line="68" pos:column="35">lower</name></decl></param>, <param><decl><type><name pos:line="68" pos:column="42">int</name></type> <name pos:line="68" pos:column="46">upper</name></decl></param>)</parameter_list> <specifier pos:line="68" pos:column="53">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="69" pos:column="9">int</name></type> <name pos:line="69" pos:column="13">EndLineStyle</name><parameter_list pos:line="69" pos:column="25">()</parameter_list> <specifier pos:line="69" pos:column="28">const</specifier>;</function_decl>
</public>}</block>;</class>

<comment type="block" format="doxygen" pos:line="72" pos:column="1">/**
 */</comment>
<class pos:line="74" pos:column="1">class <name pos:line="74" pos:column="7">LineLayoutCache</name> <block pos:line="74" pos:column="23">{<private type="default" pos:line="74" pos:column="24">
	<decl_stmt><decl><type><name pos:line="75" pos:column="9">int</name></type> <name pos:line="75" pos:column="13">level</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="76" pos:column="9">int</name></type> <name pos:line="76" pos:column="13">length</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="77" pos:column="9">int</name></type> <name pos:line="77" pos:column="13">size</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="78" pos:column="9">LineLayout</name> <type:modifier pos:line="78" pos:column="20">*</type:modifier><type:modifier pos:line="78" pos:column="21">*</type:modifier></type><name pos:line="78" pos:column="22">cache</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="79" pos:column="9">bool</name></type> <name pos:line="79" pos:column="14">allInvalidated</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="80" pos:column="9">int</name></type> <name pos:line="80" pos:column="13">styleClock</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="81" pos:column="9">int</name></type> <name pos:line="81" pos:column="13">useCount</name></decl>;</decl_stmt>
	<function_decl><type><name pos:line="82" pos:column="9">void</name></type> <name pos:line="82" pos:column="14">Allocate</name><parameter_list pos:line="82" pos:column="22">(<param><decl><type><name pos:line="82" pos:column="23">int</name></type> <name pos:line="82" pos:column="27">length_</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="83" pos:column="9">void</name></type> <name pos:line="83" pos:column="14">AllocateForLevel</name><parameter_list pos:line="83" pos:column="30">(<param><decl><type><name pos:line="83" pos:column="31">int</name></type> <name pos:line="83" pos:column="35">linesOnScreen</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="50">int</name></type> <name pos:line="83" pos:column="54">linesInDoc</name></decl></param>)</parameter_list>;</function_decl>
</private><public pos:line="84" pos:column="1">public:
	<constructor_decl><name pos:line="85" pos:column="9">LineLayoutCache</name><parameter_list pos:line="85" pos:column="24">()</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="86" pos:column="9">virtual</specifier> <name pos:line="86" pos:column="17">~<name pos:line="86" pos:column="18">LineLayoutCache</name></name><parameter_list pos:line="86" pos:column="33">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="87" pos:column="9">void</name></type> <name pos:line="87" pos:column="14">Deallocate</name><parameter_list pos:line="87" pos:column="24">()</parameter_list>;</function_decl>
	<enum pos:line="88" pos:column="9">enum <block pos:line="88" pos:column="14">{
		<decl><name pos:line="89" pos:column="17">llcNone</name><init pos:line="89" pos:column="24">=<expr><name pos:line="89" pos:column="25">SC_CACHE_NONE</name></expr></init></decl><op:operator pos:line="89" pos:column="38">,</op:operator>
		<decl><name pos:line="90" pos:column="17">llcCaret</name><init pos:line="90" pos:column="25">=<expr><name pos:line="90" pos:column="26">SC_CACHE_CARET</name></expr></init></decl><op:operator pos:line="90" pos:column="40">,</op:operator>
		<decl><name pos:line="91" pos:column="17">llcPage</name><init pos:line="91" pos:column="24">=<expr><name pos:line="91" pos:column="25">SC_CACHE_PAGE</name></expr></init></decl><op:operator pos:line="91" pos:column="38">,</op:operator>
		<decl><name pos:line="92" pos:column="17">llcDocument</name><init pos:line="92" pos:column="28">=<expr><name pos:line="92" pos:column="29">SC_CACHE_DOCUMENT</name></expr></init></decl>
	}</block>;</enum>
	<function_decl><type><name pos:line="94" pos:column="9">void</name></type> <name pos:line="94" pos:column="14">Invalidate</name><parameter_list pos:line="94" pos:column="24">(<param><decl><type><name><name pos:line="94" pos:column="25">LineLayout</name><op:operator pos:line="94" pos:column="35">::</op:operator><name pos:line="94" pos:column="37">validLevel</name></name></type> <name pos:line="94" pos:column="48">validity_</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="95" pos:column="9">void</name></type> <name pos:line="95" pos:column="14">SetLevel</name><parameter_list pos:line="95" pos:column="22">(<param><decl><type><name pos:line="95" pos:column="23">int</name></type> <name pos:line="95" pos:column="27">level_</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="96" pos:column="9">int</name></type> <name pos:line="96" pos:column="13">GetLevel</name><parameter_list pos:line="96" pos:column="21">()</parameter_list> <specifier pos:line="96" pos:column="24">const</specifier> <block pos:line="96" pos:column="30">{ <return pos:line="96" pos:column="32">return <expr><name pos:line="96" pos:column="39">level</name></expr>;</return> }</block></function>
	<function_decl><type><name pos:line="97" pos:column="9">LineLayout</name> <type:modifier pos:line="97" pos:column="20">*</type:modifier></type><name pos:line="97" pos:column="21">Retrieve</name><parameter_list pos:line="97" pos:column="29">(<param><decl><type><name pos:line="97" pos:column="30">int</name></type> <name pos:line="97" pos:column="34">lineNumber</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="46">int</name></type> <name pos:line="97" pos:column="50">lineCaret</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="61">int</name></type> <name pos:line="97" pos:column="65">maxChars</name></decl></param>, <param><decl><type><name pos:line="97" pos:column="75">int</name></type> <name pos:line="97" pos:column="79">styleClock_</name></decl></param>,
		<param><decl><type><name pos:line="98" pos:column="17">int</name></type> <name pos:line="98" pos:column="21">linesOnScreen</name></decl></param>, <param><decl><type><name pos:line="98" pos:column="36">int</name></type> <name pos:line="98" pos:column="40">linesInDoc</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="99" pos:column="9">void</name></type> <name pos:line="99" pos:column="14">Dispose</name><parameter_list pos:line="99" pos:column="21">(<param><decl><type><name pos:line="99" pos:column="22">LineLayout</name> <type:modifier pos:line="99" pos:column="33">*</type:modifier></type><name pos:line="99" pos:column="34">ll</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<class pos:line="102" pos:column="1">class <name pos:line="102" pos:column="7">PositionCacheEntry</name> <block pos:line="102" pos:column="26">{<private type="default" pos:line="102" pos:column="27">
	<macro><name pos:line="103" pos:column="9">unsigned</name></macro> <macro><name pos:line="103" pos:column="18">int</name></macro> <label><name pos:line="103" pos:column="22">styleNumber</name>:</label><expr_stmt><expr><lit:literal type="number" pos:line="103" pos:column="34">8</lit:literal></expr>;</expr_stmt>
	<macro><name pos:line="104" pos:column="9">unsigned</name></macro> <macro><name pos:line="104" pos:column="18">int</name></macro> <label><name pos:line="104" pos:column="22">len</name>:</label><expr_stmt><expr><lit:literal type="number" pos:line="104" pos:column="26">8</lit:literal></expr>;</expr_stmt>
	<macro><name pos:line="105" pos:column="9">unsigned</name></macro> <macro><name pos:line="105" pos:column="18">int</name></macro> <label><name pos:line="105" pos:column="22">clock</name>:</label><expr_stmt><expr><lit:literal type="number" pos:line="105" pos:column="28">16</lit:literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="106" pos:column="9">short</name> <type:modifier pos:line="106" pos:column="15">*</type:modifier></type><name pos:line="106" pos:column="16">positions</name></decl>;</decl_stmt>
</private><public pos:line="107" pos:column="1">public:
	<constructor_decl><name pos:line="108" pos:column="9">PositionCacheEntry</name><parameter_list pos:line="108" pos:column="27">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="109" pos:column="9">~<name pos:line="109" pos:column="10">PositionCacheEntry</name></name><parameter_list pos:line="109" pos:column="28">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="110" pos:column="9">void</name></type> <name pos:line="110" pos:column="14">Set</name><parameter_list pos:line="110" pos:column="17">(<param><decl><type><name pos:line="110" pos:column="18">unsigned</name> <name pos:line="110" pos:column="27">int</name></type> <name pos:line="110" pos:column="31">styleNumber_</name></decl></param>, <param><decl><type><specifier pos:line="110" pos:column="45">const</specifier> <name pos:line="110" pos:column="51">char</name> <type:modifier pos:line="110" pos:column="56">*</type:modifier></type><name pos:line="110" pos:column="57">s_</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="61">unsigned</name> <name pos:line="110" pos:column="70">int</name></type> <name pos:line="110" pos:column="74">len_</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="80">int</name> <type:modifier pos:line="110" pos:column="84">*</type:modifier></type><name pos:line="110" pos:column="85">positions_</name></decl></param>, <param><decl><type><name pos:line="110" pos:column="97">unsigned</name> <name pos:line="110" pos:column="106">int</name></type> <name pos:line="110" pos:column="110">clock</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="111" pos:column="9">void</name></type> <name pos:line="111" pos:column="14">Clear</name><parameter_list pos:line="111" pos:column="19">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="112" pos:column="9">bool</name></type> <name pos:line="112" pos:column="14">Retrieve</name><parameter_list pos:line="112" pos:column="22">(<param><decl><type><name pos:line="112" pos:column="23">unsigned</name> <name pos:line="112" pos:column="32">int</name></type> <name pos:line="112" pos:column="36">styleNumber_</name></decl></param>, <param><decl><type><specifier pos:line="112" pos:column="50">const</specifier> <name pos:line="112" pos:column="56">char</name> <type:modifier pos:line="112" pos:column="61">*</type:modifier></type><name pos:line="112" pos:column="62">s_</name></decl></param>, <param><decl><type><name pos:line="112" pos:column="66">unsigned</name> <name pos:line="112" pos:column="75">int</name></type> <name pos:line="112" pos:column="79">len_</name></decl></param>, <param><decl><type><name pos:line="112" pos:column="85">int</name> <type:modifier pos:line="112" pos:column="89">*</type:modifier></type><name pos:line="112" pos:column="90">positions_</name></decl></param>)</parameter_list> <specifier pos:line="112" pos:column="102">const</specifier>;</function_decl>
	<function_decl><type><specifier pos:line="113" pos:column="9">static</specifier> <name pos:line="113" pos:column="16">int</name></type> <name pos:line="113" pos:column="20">Hash</name><parameter_list pos:line="113" pos:column="24">(<param><decl><type><name pos:line="113" pos:column="25">unsigned</name> <name pos:line="113" pos:column="34">int</name></type> <name pos:line="113" pos:column="38">styleNumber</name></decl></param>, <param><decl><type><specifier pos:line="113" pos:column="51">const</specifier> <name pos:line="113" pos:column="57">char</name> <type:modifier pos:line="113" pos:column="62">*</type:modifier></type><name pos:line="113" pos:column="63">s</name></decl></param>, <param><decl><type><name pos:line="113" pos:column="66">unsigned</name> <name pos:line="113" pos:column="75">int</name></type> <name pos:line="113" pos:column="79">len</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="114" pos:column="9">bool</name></type> <name pos:line="114" pos:column="14">NewerThan</name><parameter_list pos:line="114" pos:column="23">(<param><decl><type><specifier pos:line="114" pos:column="24">const</specifier> <name pos:line="114" pos:column="30">PositionCacheEntry</name> <type:modifier pos:line="114" pos:column="49">&amp;</type:modifier></type><name pos:line="114" pos:column="50">other</name></decl></param>)</parameter_list> <specifier pos:line="114" pos:column="57">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="115" pos:column="9">void</name></type> <name pos:line="115" pos:column="14">ResetClock</name><parameter_list pos:line="115" pos:column="24">()</parameter_list>;</function_decl>
</public>}</block>;</class>

<comment type="line" pos:line="118" pos:column="1">// Class to break a line of text into shorter runs at sensible places.</comment>
<class pos:line="119" pos:column="1">class <name pos:line="119" pos:column="7">BreakFinder</name> <block pos:line="119" pos:column="19">{<private type="default" pos:line="119" pos:column="20">
	<decl_stmt><decl><type><name pos:line="120" pos:column="9">LineLayout</name> <type:modifier pos:line="120" pos:column="20">*</type:modifier></type><name pos:line="120" pos:column="21">ll</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="121" pos:column="9">int</name></type> <name pos:line="121" pos:column="13">lineStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="122" pos:column="9">int</name></type> <name pos:line="122" pos:column="13">lineEnd</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="123" pos:column="9">int</name></type> <name pos:line="123" pos:column="13">posLineStart</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="124" pos:column="9">int</name></type> <name pos:line="124" pos:column="13">nextBreak</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="125" pos:column="9">int</name> <type:modifier pos:line="125" pos:column="13">*</type:modifier></type><name pos:line="125" pos:column="14">selAndEdge</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="126" pos:column="9">unsigned</name> <name pos:line="126" pos:column="18">int</name></type> <name pos:line="126" pos:column="22">saeSize</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="127" pos:column="9">unsigned</name> <name pos:line="127" pos:column="18">int</name></type> <name pos:line="127" pos:column="22">saeLen</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="128" pos:column="9">unsigned</name> <name pos:line="128" pos:column="18">int</name></type> <name pos:line="128" pos:column="22">saeCurrentPos</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="129" pos:column="9">int</name></type> <name pos:line="129" pos:column="13">saeNext</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="130" pos:column="9">int</name></type> <name pos:line="130" pos:column="13">subBreak</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="131" pos:column="9">Document</name> <type:modifier pos:line="131" pos:column="18">*</type:modifier></type><name pos:line="131" pos:column="19">pdoc</name></decl>;</decl_stmt>
	<function_decl><type><name pos:line="132" pos:column="9">void</name></type> <name pos:line="132" pos:column="14">Insert</name><parameter_list pos:line="132" pos:column="20">(<param><decl><type><name pos:line="132" pos:column="21">int</name></type> <name pos:line="132" pos:column="25">val</name></decl></param>)</parameter_list>;</function_decl>
</private><public pos:line="133" pos:column="1">public:
	<comment type="line" pos:line="134" pos:column="9">// If a whole run is longer than lengthStartSubdivision then subdivide</comment>
	<comment type="line" pos:line="135" pos:column="9">// into smaller runs at spaces or punctuation.</comment>
	<enum pos:line="136" pos:column="9">enum <block pos:line="136" pos:column="14">{ <decl><name pos:line="136" pos:column="16">lengthStartSubdivision</name> <init pos:line="136" pos:column="39">= <expr><lit:literal type="number" pos:line="136" pos:column="41">300</lit:literal></expr></init></decl> }</block>;</enum>
	<comment type="line" pos:line="137" pos:column="9">// Try to make each subdivided run lengthEachSubdivision or shorter.</comment>
	<enum pos:line="138" pos:column="9">enum <block pos:line="138" pos:column="14">{ <decl><name pos:line="138" pos:column="16">lengthEachSubdivision</name> <init pos:line="138" pos:column="38">= <expr><lit:literal type="number" pos:line="138" pos:column="40">100</lit:literal></expr></init></decl> }</block>;</enum>
	<constructor_decl><name pos:line="139" pos:column="9">BreakFinder</name><parameter_list pos:line="139" pos:column="20">(<param><decl><type><name pos:line="139" pos:column="21">LineLayout</name> <type:modifier pos:line="139" pos:column="32">*</type:modifier></type><name pos:line="139" pos:column="33">ll_</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="38">int</name></type> <name pos:line="139" pos:column="42">lineStart_</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="54">int</name></type> <name pos:line="139" pos:column="58">lineEnd_</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="68">int</name></type> <name pos:line="139" pos:column="72">posLineStart_</name></decl></param>,
		<param><decl><type><name pos:line="140" pos:column="17">int</name></type> <name pos:line="140" pos:column="21">xStart</name></decl></param>, <param><decl><type><name pos:line="140" pos:column="29">bool</name></type> <name pos:line="140" pos:column="34">breakForSelection</name></decl></param>, <param><decl><type><name pos:line="140" pos:column="53">Document</name> <type:modifier pos:line="140" pos:column="62">*</type:modifier></type><name pos:line="140" pos:column="63">pdoc_</name></decl></param>)</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="141" pos:column="9">~<name pos:line="141" pos:column="10">BreakFinder</name></name><parameter_list pos:line="141" pos:column="21">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="142" pos:column="9">int</name></type> <name pos:line="142" pos:column="13">First</name><parameter_list pos:line="142" pos:column="18">()</parameter_list> <specifier pos:line="142" pos:column="21">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="143" pos:column="9">int</name></type> <name pos:line="143" pos:column="13">Next</name><parameter_list pos:line="143" pos:column="17">()</parameter_list>;</function_decl>
</public>}</block>;</class>

<class pos:line="146" pos:column="1">class <name pos:line="146" pos:column="7">PositionCache</name> <block pos:line="146" pos:column="21">{<private type="default" pos:line="146" pos:column="22">
	<decl_stmt><decl><type><name pos:line="147" pos:column="9">PositionCacheEntry</name> <type:modifier pos:line="147" pos:column="28">*</type:modifier></type><name pos:line="147" pos:column="29">pces</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="148" pos:column="9">size_t</name></type> <name pos:line="148" pos:column="16">size</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="149" pos:column="9">unsigned</name> <name pos:line="149" pos:column="18">int</name></type> <name pos:line="149" pos:column="22">clock</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="150" pos:column="9">bool</name></type> <name pos:line="150" pos:column="14">allClear</name></decl>;</decl_stmt>
</private><public pos:line="151" pos:column="1">public:
	<constructor_decl><name pos:line="152" pos:column="9">PositionCache</name><parameter_list pos:line="152" pos:column="22">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="153" pos:column="9">~<name pos:line="153" pos:column="10">PositionCache</name></name><parameter_list pos:line="153" pos:column="23">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="154" pos:column="9">void</name></type> <name pos:line="154" pos:column="14">Clear</name><parameter_list pos:line="154" pos:column="19">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="155" pos:column="9">void</name></type> <name pos:line="155" pos:column="14">SetSize</name><parameter_list pos:line="155" pos:column="21">(<param><decl><type><name pos:line="155" pos:column="22">size_t</name></type> <name pos:line="155" pos:column="29">size_</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="156" pos:column="9">size_t</name></type> <name pos:line="156" pos:column="16">GetSize</name><parameter_list pos:line="156" pos:column="23">()</parameter_list> <specifier pos:line="156" pos:column="26">const</specifier> <block pos:line="156" pos:column="32">{ <return pos:line="156" pos:column="34">return <expr><name pos:line="156" pos:column="41">size</name></expr>;</return> }</block></function>
	<function_decl><type><name pos:line="157" pos:column="9">void</name></type> <name pos:line="157" pos:column="14">MeasureWidths</name><parameter_list pos:line="157" pos:column="27">(<param><decl><type><name pos:line="157" pos:column="28">Surface</name> <type:modifier pos:line="157" pos:column="36">*</type:modifier></type><name pos:line="157" pos:column="37">surface</name></decl></param>, <param><decl><type><name pos:line="157" pos:column="46">ViewStyle</name> <type:modifier pos:line="157" pos:column="56">&amp;</type:modifier></type><name pos:line="157" pos:column="57">vstyle</name></decl></param>, <param><decl><type><name pos:line="157" pos:column="65">unsigned</name> <name pos:line="157" pos:column="74">int</name></type> <name pos:line="157" pos:column="78">styleNumber</name></decl></param>,
		<param><decl><type><specifier pos:line="158" pos:column="17">const</specifier> <name pos:line="158" pos:column="23">char</name> <type:modifier pos:line="158" pos:column="28">*</type:modifier></type><name pos:line="158" pos:column="29">s</name></decl></param>, <param><decl><type><name pos:line="158" pos:column="32">unsigned</name> <name pos:line="158" pos:column="41">int</name></type> <name pos:line="158" pos:column="45">len</name></decl></param>, <param><decl><type><name pos:line="158" pos:column="50">int</name> <type:modifier pos:line="158" pos:column="54">*</type:modifier></type><name pos:line="158" pos:column="55">positions</name></decl></param>, <param><decl><type><name pos:line="158" pos:column="66">Document</name> <type:modifier pos:line="158" pos:column="75">*</type:modifier></type><name pos:line="158" pos:column="76">pdoc</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<function><type><specifier pos:line="161" pos:column="1">inline</specifier> <name pos:line="161" pos:column="8">bool</name></type> <name pos:line="161" pos:column="13">IsSpaceOrTab</name><parameter_list pos:line="161" pos:column="25">(<param><decl><type><name pos:line="161" pos:column="26">int</name></type> <name pos:line="161" pos:column="30">ch</name></decl></param>)</parameter_list> <block pos:line="161" pos:column="34">{
	<return pos:line="162" pos:column="9">return <expr><name pos:line="162" pos:column="16">ch</name> <op:operator pos:line="162" pos:column="19">==</op:operator> <lit:literal type="char" pos:line="162" pos:column="22">' '</lit:literal> <op:operator pos:line="162" pos:column="26">||</op:operator> <name pos:line="162" pos:column="29">ch</name> <op:operator pos:line="162" pos:column="32">==</op:operator> <lit:literal type="char" pos:line="162" pos:column="35">'\t'</lit:literal></expr>;</return>
}</block></function>

<cpp:ifdef pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">ifdef</cpp:directive> <name pos:line="165" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="169" pos:column="1">#<cpp:directive pos:line="169" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
