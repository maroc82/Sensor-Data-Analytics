<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\CellBuffer.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file CellBuffer.h
 ** Manages the text of the document.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2004 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">CELLBUFFER_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">CELLBUFFER_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="line" pos:line="15" pos:column="1">// Interface to per-line data that wants to see each line insertion and deletion</comment>
<class pos:line="16" pos:column="1">class <name pos:line="16" pos:column="7">PerLine</name> <block pos:line="16" pos:column="15">{<private type="default" pos:line="16" pos:column="16">
</private><public pos:line="17" pos:column="1">public:
	<destructor><specifier pos:line="18" pos:column="9">virtual</specifier> <name pos:line="18" pos:column="17">~<name pos:line="18" pos:column="18">PerLine</name></name><parameter_list pos:line="18" pos:column="25">()</parameter_list> <block pos:line="18" pos:column="28">{}</block></destructor>
	<function_decl><type><specifier pos:line="19" pos:column="9">virtual</specifier> <name pos:line="19" pos:column="17">void</name></type> <name pos:line="19" pos:column="22">Init</name><parameter_list pos:line="19" pos:column="26">()</parameter_list>=<lit:literal type="number" pos:line="19" pos:column="29">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="20" pos:column="9">virtual</specifier> <name pos:line="20" pos:column="17">void</name></type> <name pos:line="20" pos:column="22">InsertLine</name><parameter_list pos:line="20" pos:column="32">(<param><decl><type><name pos:line="20" pos:column="33">int</name></type></decl></param>)</parameter_list>=<lit:literal type="number" pos:line="20" pos:column="38">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="21" pos:column="9">virtual</specifier> <name pos:line="21" pos:column="17">void</name></type> <name pos:line="21" pos:column="22">RemoveLine</name><parameter_list pos:line="21" pos:column="32">(<param><decl><type><name pos:line="21" pos:column="33">int</name></type></decl></param>)</parameter_list>=<lit:literal type="number" pos:line="21" pos:column="38">0</lit:literal>;</function_decl>
</public>}</block>;</class>

<comment type="block" format="doxygen" pos:line="24" pos:column="1">/**
 * The line vector contains information about each of the lines in a cell buffer.
 */</comment>
<class pos:line="27" pos:column="1">class <name pos:line="27" pos:column="7">LineVector</name> <block pos:line="27" pos:column="18">{<private type="default" pos:line="27" pos:column="19">

	<decl_stmt><decl><type><name pos:line="29" pos:column="9">Partitioning</name></type> <name pos:line="29" pos:column="22">starts</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="30" pos:column="9">PerLine</name> <type:modifier pos:line="30" pos:column="17">*</type:modifier></type><name pos:line="30" pos:column="18">perLine</name></decl>;</decl_stmt>

</private><public pos:line="32" pos:column="1">public:

	<constructor_decl><name pos:line="34" pos:column="9">LineVector</name><parameter_list pos:line="34" pos:column="19">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="35" pos:column="9">~<name pos:line="35" pos:column="10">LineVector</name></name><parameter_list pos:line="35" pos:column="20">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="36" pos:column="9">void</name></type> <name pos:line="36" pos:column="14">Init</name><parameter_list pos:line="36" pos:column="18">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="37" pos:column="9">void</name></type> <name pos:line="37" pos:column="14">SetPerLine</name><parameter_list pos:line="37" pos:column="24">(<param><decl><type><name pos:line="37" pos:column="25">PerLine</name> <type:modifier pos:line="37" pos:column="33">*</type:modifier></type><name pos:line="37" pos:column="34">pl</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="39" pos:column="9">void</name></type> <name pos:line="39" pos:column="14">InsertText</name><parameter_list pos:line="39" pos:column="24">(<param><decl><type><name pos:line="39" pos:column="25">int</name></type> <name pos:line="39" pos:column="29">line</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="35">int</name></type> <name pos:line="39" pos:column="39">delta</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="40" pos:column="9">void</name></type> <name pos:line="40" pos:column="14">InsertLine</name><parameter_list pos:line="40" pos:column="24">(<param><decl><type><name pos:line="40" pos:column="25">int</name></type> <name pos:line="40" pos:column="29">line</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="35">int</name></type> <name pos:line="40" pos:column="39">position</name></decl></param>, <param><decl><type><name pos:line="40" pos:column="49">bool</name></type> <name pos:line="40" pos:column="54">lineStart</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="41" pos:column="9">void</name></type> <name pos:line="41" pos:column="14">SetLineStart</name><parameter_list pos:line="41" pos:column="26">(<param><decl><type><name pos:line="41" pos:column="27">int</name></type> <name pos:line="41" pos:column="31">line</name></decl></param>, <param><decl><type><name pos:line="41" pos:column="37">int</name></type> <name pos:line="41" pos:column="41">position</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="42" pos:column="9">void</name></type> <name pos:line="42" pos:column="14">RemoveLine</name><parameter_list pos:line="42" pos:column="24">(<param><decl><type><name pos:line="42" pos:column="25">int</name></type> <name pos:line="42" pos:column="29">line</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="43" pos:column="9">int</name></type> <name pos:line="43" pos:column="13">Lines</name><parameter_list pos:line="43" pos:column="18">()</parameter_list> <specifier pos:line="43" pos:column="21">const</specifier> <block pos:line="43" pos:column="27">{
		<return pos:line="44" pos:column="17">return <expr><call><name><name pos:line="44" pos:column="24">starts</name><op:operator pos:line="44" pos:column="30">.</op:operator><name pos:line="44" pos:column="31">Partitions</name></name><argument_list pos:line="44" pos:column="41">()</argument_list></call></expr>;</return>
	}</block></function>
	<function_decl><type><name pos:line="46" pos:column="9">int</name></type> <name pos:line="46" pos:column="13">LineFromPosition</name><parameter_list pos:line="46" pos:column="29">(<param><decl><type><name pos:line="46" pos:column="30">int</name></type> <name pos:line="46" pos:column="34">pos</name></decl></param>)</parameter_list> <specifier pos:line="46" pos:column="39">const</specifier>;</function_decl>
	<function><type><name pos:line="47" pos:column="9">int</name></type> <name pos:line="47" pos:column="13">LineStart</name><parameter_list pos:line="47" pos:column="22">(<param><decl><type><name pos:line="47" pos:column="23">int</name></type> <name pos:line="47" pos:column="27">line</name></decl></param>)</parameter_list> <specifier pos:line="47" pos:column="33">const</specifier> <block pos:line="47" pos:column="39">{
		<return pos:line="48" pos:column="17">return <expr><call><name><name pos:line="48" pos:column="24">starts</name><op:operator pos:line="48" pos:column="30">.</op:operator><name pos:line="48" pos:column="31">PositionFromPartition</name></name><argument_list pos:line="48" pos:column="52">(<argument><expr><name pos:line="48" pos:column="53">line</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function>

	<function_decl><type><name pos:line="51" pos:column="9">int</name></type> <name pos:line="51" pos:column="13">MarkValue</name><parameter_list pos:line="51" pos:column="22">(<param><decl><type><name pos:line="51" pos:column="23">int</name></type> <name pos:line="51" pos:column="27">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="52" pos:column="9">int</name></type> <name pos:line="52" pos:column="13">AddMark</name><parameter_list pos:line="52" pos:column="20">(<param><decl><type><name pos:line="52" pos:column="21">int</name></type> <name pos:line="52" pos:column="25">line</name></decl></param>, <param><decl><type><name pos:line="52" pos:column="31">int</name></type> <name pos:line="52" pos:column="35">marker</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="53" pos:column="9">void</name></type> <name pos:line="53" pos:column="14">MergeMarkers</name><parameter_list pos:line="53" pos:column="26">(<param><decl><type><name pos:line="53" pos:column="27">int</name></type> <name pos:line="53" pos:column="31">pos</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="54" pos:column="9">void</name></type> <name pos:line="54" pos:column="14">DeleteMark</name><parameter_list pos:line="54" pos:column="24">(<param><decl><type><name pos:line="54" pos:column="25">int</name></type> <name pos:line="54" pos:column="29">line</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="35">int</name></type> <name pos:line="54" pos:column="39">markerNum</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="50">bool</name></type> <name pos:line="54" pos:column="55">all</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="55" pos:column="9">void</name></type> <name pos:line="55" pos:column="14">DeleteMarkFromHandle</name><parameter_list pos:line="55" pos:column="34">(<param><decl><type><name pos:line="55" pos:column="35">int</name></type> <name pos:line="55" pos:column="39">markerHandle</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="56" pos:column="9">int</name></type> <name pos:line="56" pos:column="13">LineFromHandle</name><parameter_list pos:line="56" pos:column="27">(<param><decl><type><name pos:line="56" pos:column="28">int</name></type> <name pos:line="56" pos:column="32">markerHandle</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="58" pos:column="9">void</name></type> <name pos:line="58" pos:column="14">ClearLevels</name><parameter_list pos:line="58" pos:column="25">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="59" pos:column="9">int</name></type> <name pos:line="59" pos:column="13">SetLevel</name><parameter_list pos:line="59" pos:column="21">(<param><decl><type><name pos:line="59" pos:column="22">int</name></type> <name pos:line="59" pos:column="26">line</name></decl></param>, <param><decl><type><name pos:line="59" pos:column="32">int</name></type> <name pos:line="59" pos:column="36">level</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="60" pos:column="9">int</name></type> <name pos:line="60" pos:column="13">GetLevel</name><parameter_list pos:line="60" pos:column="21">(<param><decl><type><name pos:line="60" pos:column="22">int</name></type> <name pos:line="60" pos:column="26">line</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="62" pos:column="9">int</name></type> <name pos:line="62" pos:column="13">SetLineState</name><parameter_list pos:line="62" pos:column="25">(<param><decl><type><name pos:line="62" pos:column="26">int</name></type> <name pos:line="62" pos:column="30">line</name></decl></param>, <param><decl><type><name pos:line="62" pos:column="36">int</name></type> <name pos:line="62" pos:column="40">state</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="63" pos:column="9">int</name></type> <name pos:line="63" pos:column="13">GetLineState</name><parameter_list pos:line="63" pos:column="25">(<param><decl><type><name pos:line="63" pos:column="26">int</name></type> <name pos:line="63" pos:column="30">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="64" pos:column="9">int</name></type> <name pos:line="64" pos:column="13">GetMaxLineState</name><parameter_list pos:line="64" pos:column="28">()</parameter_list>;</function_decl>

</public>}</block>;</class>

<enum pos:line="68" pos:column="1">enum <name pos:line="68" pos:column="6">actionType</name> <block pos:line="68" pos:column="17">{ <decl><name pos:line="68" pos:column="19">insertAction</name></decl><op:operator pos:line="68" pos:column="31">,</op:operator> <decl><name pos:line="68" pos:column="33">removeAction</name></decl><op:operator pos:line="68" pos:column="45">,</op:operator> <decl><name pos:line="68" pos:column="47">startAction</name></decl><op:operator pos:line="68" pos:column="58">,</op:operator> <decl><name pos:line="68" pos:column="60">containerAction</name></decl> }</block>;</enum>

<comment type="block" format="doxygen" pos:line="70" pos:column="1">/**
 * Actions are used to store all the information required to perform one undo/redo step.
 */</comment>
<class pos:line="73" pos:column="1">class <name pos:line="73" pos:column="7">Action</name> <block pos:line="73" pos:column="14">{<private type="default" pos:line="73" pos:column="15">
</private><public pos:line="74" pos:column="1">public:
	<decl_stmt><decl><type><name pos:line="75" pos:column="9">actionType</name></type> <name pos:line="75" pos:column="20">at</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="76" pos:column="9">int</name></type> <name pos:line="76" pos:column="13">position</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="77" pos:column="9">char</name> <type:modifier pos:line="77" pos:column="14">*</type:modifier></type><name pos:line="77" pos:column="15">data</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="78" pos:column="9">int</name></type> <name pos:line="78" pos:column="13">lenData</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="79" pos:column="9">bool</name></type> <name pos:line="79" pos:column="14">mayCoalesce</name></decl>;</decl_stmt>

	<constructor_decl><name pos:line="81" pos:column="9">Action</name><parameter_list pos:line="81" pos:column="15">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="82" pos:column="9">~<name pos:line="82" pos:column="10">Action</name></name><parameter_list pos:line="82" pos:column="16">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="83" pos:column="9">void</name></type> <name pos:line="83" pos:column="14">Create</name><parameter_list pos:line="83" pos:column="20">(<param><decl><type><name pos:line="83" pos:column="21">actionType</name></type> <name pos:line="83" pos:column="32">at_</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="37">int</name></type> <name pos:line="83" pos:column="41">position_</name><init pos:line="83" pos:column="50">=<expr><lit:literal type="number" pos:line="83" pos:column="51">0</lit:literal></expr></init></decl></param>, <name pos:line="83" pos:column="54">char</name> <type:modifier pos:line="83" pos:column="59">*</type:modifier><name pos:line="83" pos:column="60">data_</name><op:operator pos:line="83" pos:column="65">=</op:operator><lit:literal type="number" pos:line="83" pos:column="66">0</lit:literal>, <name pos:line="83" pos:column="69">int</name> <name pos:line="83" pos:column="73">lenData_</name><op:operator pos:line="83" pos:column="81">=</op:operator><lit:literal type="number" pos:line="83" pos:column="82">0</lit:literal>, <name pos:line="83" pos:column="85">bool</name> <name pos:line="83" pos:column="90">mayCoalesce_</name><op:operator pos:line="83" pos:column="102">=</op:operator><lit:literal type="boolean" pos:line="83" pos:column="103">true</lit:literal>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="84" pos:column="9">void</name></type> <name pos:line="84" pos:column="14">Destroy</name><parameter_list pos:line="84" pos:column="21">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="85" pos:column="9">void</name></type> <name pos:line="85" pos:column="14">Grab</name><parameter_list pos:line="85" pos:column="18">(<param><decl><type><name pos:line="85" pos:column="19">Action</name> <type:modifier pos:line="85" pos:column="26">*</type:modifier></type><name pos:line="85" pos:column="27">source</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<comment type="block" format="doxygen" pos:line="88" pos:column="1">/**
 *
 */</comment>
<class pos:line="91" pos:column="1">class <name pos:line="91" pos:column="7">UndoHistory</name> <block pos:line="91" pos:column="19">{<private type="default" pos:line="91" pos:column="20">
	<decl_stmt><decl><type><name pos:line="92" pos:column="9">Action</name> <type:modifier pos:line="92" pos:column="16">*</type:modifier></type><name pos:line="92" pos:column="17">actions</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="93" pos:column="9">int</name></type> <name pos:line="93" pos:column="13">lenActions</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="94" pos:column="9">int</name></type> <name pos:line="94" pos:column="13">maxAction</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="95" pos:column="9">int</name></type> <name pos:line="95" pos:column="13">currentAction</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="96" pos:column="9">int</name></type> <name pos:line="96" pos:column="13">undoSequenceDepth</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="97" pos:column="9">int</name></type> <name pos:line="97" pos:column="13">savePoint</name></decl>;</decl_stmt>

	<function_decl><type><name pos:line="99" pos:column="9">void</name></type> <name pos:line="99" pos:column="14">EnsureUndoRoom</name><parameter_list pos:line="99" pos:column="28">()</parameter_list>;</function_decl>

</private><public pos:line="101" pos:column="1">public:
	<constructor_decl><name pos:line="102" pos:column="9">UndoHistory</name><parameter_list pos:line="102" pos:column="20">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="103" pos:column="9">~<name pos:line="103" pos:column="10">UndoHistory</name></name><parameter_list pos:line="103" pos:column="21">()</parameter_list>;</destructor_decl>

	<function_decl><type><name pos:line="105" pos:column="9">void</name></type> <name pos:line="105" pos:column="14">AppendAction</name><parameter_list pos:line="105" pos:column="26">(<param><decl><type><name pos:line="105" pos:column="27">actionType</name></type> <name pos:line="105" pos:column="38">at</name></decl></param>, <param><decl><type><name pos:line="105" pos:column="42">int</name></type> <name pos:line="105" pos:column="46">position</name></decl></param>, <param><decl><type><name pos:line="105" pos:column="56">char</name> <type:modifier pos:line="105" pos:column="61">*</type:modifier></type><name pos:line="105" pos:column="62">data</name></decl></param>, <param><decl><type><name pos:line="105" pos:column="68">int</name></type> <name pos:line="105" pos:column="72">length</name></decl></param>, <param><decl><type><name pos:line="105" pos:column="80">bool</name> <type:modifier pos:line="105" pos:column="85">&amp;</type:modifier></type><name pos:line="105" pos:column="86">startSequence</name></decl></param>, <param><decl><type><name pos:line="105" pos:column="101">bool</name></type> <name pos:line="105" pos:column="106">mayCoalesce</name><init pos:line="105" pos:column="117">=<expr><lit:literal type="boolean" pos:line="105" pos:column="118">true</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="107" pos:column="9">void</name></type> <name pos:line="107" pos:column="14">BeginUndoAction</name><parameter_list pos:line="107" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="108" pos:column="9">void</name></type> <name pos:line="108" pos:column="14">EndUndoAction</name><parameter_list pos:line="108" pos:column="27">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="109" pos:column="9">void</name></type> <name pos:line="109" pos:column="14">DropUndoSequence</name><parameter_list pos:line="109" pos:column="30">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="110" pos:column="9">void</name></type> <name pos:line="110" pos:column="14">DeleteUndoHistory</name><parameter_list pos:line="110" pos:column="31">()</parameter_list>;</function_decl>

	<comment type="line" format="doxygen" pos:line="112" pos:column="9">/// The save point is a marker in the undo stack where the container has stated that</comment>
	<comment type="line" format="doxygen" pos:line="113" pos:column="9">/// the buffer was saved. Undo and redo can move over the save point.</comment>
	<function_decl><type><name pos:line="114" pos:column="9">void</name></type> <name pos:line="114" pos:column="14">SetSavePoint</name><parameter_list pos:line="114" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="115" pos:column="9">bool</name></type> <name pos:line="115" pos:column="14">IsSavePoint</name><parameter_list pos:line="115" pos:column="25">()</parameter_list> <specifier pos:line="115" pos:column="28">const</specifier>;</function_decl>

	<comment type="line" format="doxygen" pos:line="117" pos:column="9">/// To perform an undo, StartUndo is called to retrieve the number of steps, then UndoStep is</comment>
	<comment type="line" format="doxygen" pos:line="118" pos:column="9">/// called that many times. Similarly for redo.</comment>
	<function_decl><type><name pos:line="119" pos:column="9">bool</name></type> <name pos:line="119" pos:column="14">CanUndo</name><parameter_list pos:line="119" pos:column="21">()</parameter_list> <specifier pos:line="119" pos:column="24">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="120" pos:column="9">int</name></type> <name pos:line="120" pos:column="13">StartUndo</name><parameter_list pos:line="120" pos:column="22">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="121" pos:column="9">const</specifier> <name pos:line="121" pos:column="15">Action</name> <type:modifier pos:line="121" pos:column="22">&amp;</type:modifier></type><name pos:line="121" pos:column="23">GetUndoStep</name><parameter_list pos:line="121" pos:column="34">()</parameter_list> <specifier pos:line="121" pos:column="37">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="122" pos:column="9">void</name></type> <name pos:line="122" pos:column="14">CompletedUndoStep</name><parameter_list pos:line="122" pos:column="31">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="123" pos:column="9">bool</name></type> <name pos:line="123" pos:column="14">CanRedo</name><parameter_list pos:line="123" pos:column="21">()</parameter_list> <specifier pos:line="123" pos:column="24">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="124" pos:column="9">int</name></type> <name pos:line="124" pos:column="13">StartRedo</name><parameter_list pos:line="124" pos:column="22">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="125" pos:column="9">const</specifier> <name pos:line="125" pos:column="15">Action</name> <type:modifier pos:line="125" pos:column="22">&amp;</type:modifier></type><name pos:line="125" pos:column="23">GetRedoStep</name><parameter_list pos:line="125" pos:column="34">()</parameter_list> <specifier pos:line="125" pos:column="37">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="126" pos:column="9">void</name></type> <name pos:line="126" pos:column="14">CompletedRedoStep</name><parameter_list pos:line="126" pos:column="31">()</parameter_list>;</function_decl>
</public>}</block>;</class>

<comment type="block" format="doxygen" pos:line="129" pos:column="1">/**
 * Holder for an expandable array of characters that supports undo and line markers.
 * Based on article "Data Structures in a Bit-Mapped Text Editor"
 * by Wilfred J. Hansen, Byte January 1987, page 183.
 */</comment>
<class pos:line="134" pos:column="1">class <name pos:line="134" pos:column="7">CellBuffer</name> <block pos:line="134" pos:column="18">{<private type="default" pos:line="134" pos:column="19">
</private><private pos:line="135" pos:column="1">private:
	<decl_stmt><decl><type><name><name pos:line="136" pos:column="9">SplitVector</name><argument_list pos:line="136" pos:column="20">&lt;<argument><expr><name pos:line="136" pos:column="21">char</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="136" pos:column="27">substance</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="137" pos:column="9">SplitVector</name><argument_list pos:line="137" pos:column="20">&lt;<argument><expr><name pos:line="137" pos:column="21">char</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="137" pos:column="27">style</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="138" pos:column="9">bool</name></type> <name pos:line="138" pos:column="14">readOnly</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="140" pos:column="9">bool</name></type> <name pos:line="140" pos:column="14">collectingUndo</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="141" pos:column="9">UndoHistory</name></type> <name pos:line="141" pos:column="21">uh</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="143" pos:column="9">LineVector</name></type> <name pos:line="143" pos:column="20">lv</name></decl>;</decl_stmt>

	<comment type="line" format="doxygen" pos:line="145" pos:column="9">/// Actions without undo</comment>
	<function_decl><type><name pos:line="146" pos:column="9">void</name></type> <name pos:line="146" pos:column="14">BasicInsertString</name><parameter_list pos:line="146" pos:column="31">(<param><decl><type><name pos:line="146" pos:column="32">int</name></type> <name pos:line="146" pos:column="36">position</name></decl></param>, <param><decl><type><specifier pos:line="146" pos:column="46">const</specifier> <name pos:line="146" pos:column="52">char</name> <type:modifier pos:line="146" pos:column="57">*</type:modifier></type><name pos:line="146" pos:column="58">s</name></decl></param>, <param><decl><type><name pos:line="146" pos:column="61">int</name></type> <name pos:line="146" pos:column="65">insertLength</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="147" pos:column="9">void</name></type> <name pos:line="147" pos:column="14">BasicDeleteChars</name><parameter_list pos:line="147" pos:column="30">(<param><decl><type><name pos:line="147" pos:column="31">int</name></type> <name pos:line="147" pos:column="35">position</name></decl></param>, <param><decl><type><name pos:line="147" pos:column="45">int</name></type> <name pos:line="147" pos:column="49">deleteLength</name></decl></param>)</parameter_list>;</function_decl>

</private><public pos:line="149" pos:column="1">public:

	<constructor_decl><name pos:line="151" pos:column="9">CellBuffer</name><parameter_list pos:line="151" pos:column="19">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="152" pos:column="9">~<name pos:line="152" pos:column="10">CellBuffer</name></name><parameter_list pos:line="152" pos:column="20">()</parameter_list>;</destructor_decl>

	<comment type="line" format="doxygen" pos:line="154" pos:column="9">/// Retrieving positions outside the range of the buffer works and returns 0</comment>
	<function_decl><type><name pos:line="155" pos:column="9">char</name></type> <name pos:line="155" pos:column="14">CharAt</name><parameter_list pos:line="155" pos:column="20">(<param><decl><type><name pos:line="155" pos:column="21">int</name></type> <name pos:line="155" pos:column="25">position</name></decl></param>)</parameter_list> <specifier pos:line="155" pos:column="35">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="156" pos:column="9">void</name></type> <name pos:line="156" pos:column="14">GetCharRange</name><parameter_list pos:line="156" pos:column="26">(<param><decl><type><name pos:line="156" pos:column="27">char</name> <type:modifier pos:line="156" pos:column="32">*</type:modifier></type><name pos:line="156" pos:column="33">buffer</name></decl></param>, <param><decl><type><name pos:line="156" pos:column="41">int</name></type> <name pos:line="156" pos:column="45">position</name></decl></param>, <param><decl><type><name pos:line="156" pos:column="55">int</name></type> <name pos:line="156" pos:column="59">lengthRetrieve</name></decl></param>)</parameter_list> <specifier pos:line="156" pos:column="75">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="157" pos:column="9">char</name></type> <name pos:line="157" pos:column="14">StyleAt</name><parameter_list pos:line="157" pos:column="21">(<param><decl><type><name pos:line="157" pos:column="22">int</name></type> <name pos:line="157" pos:column="26">position</name></decl></param>)</parameter_list> <specifier pos:line="157" pos:column="36">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="158" pos:column="9">void</name></type> <name pos:line="158" pos:column="14">GetStyleRange</name><parameter_list pos:line="158" pos:column="27">(<param><decl><type><name pos:line="158" pos:column="28">unsigned</name> <name pos:line="158" pos:column="37">char</name> <type:modifier pos:line="158" pos:column="42">*</type:modifier></type><name pos:line="158" pos:column="43">buffer</name></decl></param>, <param><decl><type><name pos:line="158" pos:column="51">int</name></type> <name pos:line="158" pos:column="55">position</name></decl></param>, <param><decl><type><name pos:line="158" pos:column="65">int</name></type> <name pos:line="158" pos:column="69">lengthRetrieve</name></decl></param>)</parameter_list> <specifier pos:line="158" pos:column="85">const</specifier>;</function_decl>
	<function_decl><type><specifier pos:line="159" pos:column="9">const</specifier> <name pos:line="159" pos:column="15">char</name> <type:modifier pos:line="159" pos:column="20">*</type:modifier></type><name pos:line="159" pos:column="21">BufferPointer</name><parameter_list pos:line="159" pos:column="34">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="161" pos:column="9">int</name></type> <name pos:line="161" pos:column="13">Length</name><parameter_list pos:line="161" pos:column="19">()</parameter_list> <specifier pos:line="161" pos:column="22">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="162" pos:column="9">void</name></type> <name pos:line="162" pos:column="14">Allocate</name><parameter_list pos:line="162" pos:column="22">(<param><decl><type><name pos:line="162" pos:column="23">int</name></type> <name pos:line="162" pos:column="27">newSize</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="163" pos:column="9">void</name></type> <name pos:line="163" pos:column="14">SetPerLine</name><parameter_list pos:line="163" pos:column="24">(<param><decl><type><name pos:line="163" pos:column="25">PerLine</name> <type:modifier pos:line="163" pos:column="33">*</type:modifier></type><name pos:line="163" pos:column="34">pl</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="164" pos:column="9">int</name></type> <name pos:line="164" pos:column="13">Lines</name><parameter_list pos:line="164" pos:column="18">()</parameter_list> <specifier pos:line="164" pos:column="21">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="165" pos:column="9">int</name></type> <name pos:line="165" pos:column="13">LineStart</name><parameter_list pos:line="165" pos:column="22">(<param><decl><type><name pos:line="165" pos:column="23">int</name></type> <name pos:line="165" pos:column="27">line</name></decl></param>)</parameter_list> <specifier pos:line="165" pos:column="33">const</specifier>;</function_decl>
	<function><type><name pos:line="166" pos:column="9">int</name></type> <name pos:line="166" pos:column="13">LineFromPosition</name><parameter_list pos:line="166" pos:column="29">(<param><decl><type><name pos:line="166" pos:column="30">int</name></type> <name pos:line="166" pos:column="34">pos</name></decl></param>)</parameter_list> <specifier pos:line="166" pos:column="39">const</specifier> <block pos:line="166" pos:column="45">{ <return pos:line="166" pos:column="47">return <expr><call><name><name pos:line="166" pos:column="54">lv</name><op:operator pos:line="166" pos:column="56">.</op:operator><name pos:line="166" pos:column="57">LineFromPosition</name></name><argument_list pos:line="166" pos:column="73">(<argument><expr><name pos:line="166" pos:column="74">pos</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
	<function_decl><type><name pos:line="167" pos:column="9">void</name></type> <name pos:line="167" pos:column="14">InsertLine</name><parameter_list pos:line="167" pos:column="24">(<param><decl><type><name pos:line="167" pos:column="25">int</name></type> <name pos:line="167" pos:column="29">line</name></decl></param>, <param><decl><type><name pos:line="167" pos:column="35">int</name></type> <name pos:line="167" pos:column="39">position</name></decl></param>, <param><decl><type><name pos:line="167" pos:column="49">bool</name></type> <name pos:line="167" pos:column="54">lineStart</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="168" pos:column="9">void</name></type> <name pos:line="168" pos:column="14">RemoveLine</name><parameter_list pos:line="168" pos:column="24">(<param><decl><type><name pos:line="168" pos:column="25">int</name></type> <name pos:line="168" pos:column="29">line</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="169" pos:column="9">const</specifier> <name pos:line="169" pos:column="15">char</name> <type:modifier pos:line="169" pos:column="20">*</type:modifier></type><name pos:line="169" pos:column="21">InsertString</name><parameter_list pos:line="169" pos:column="33">(<param><decl><type><name pos:line="169" pos:column="34">int</name></type> <name pos:line="169" pos:column="38">position</name></decl></param>, <param><decl><type><specifier pos:line="169" pos:column="48">const</specifier> <name pos:line="169" pos:column="54">char</name> <type:modifier pos:line="169" pos:column="59">*</type:modifier></type><name pos:line="169" pos:column="60">s</name></decl></param>, <param><decl><type><name pos:line="169" pos:column="63">int</name></type> <name pos:line="169" pos:column="67">insertLength</name></decl></param>, <param><decl><type><name pos:line="169" pos:column="81">bool</name> <type:modifier pos:line="169" pos:column="86">&amp;</type:modifier></type><name pos:line="169" pos:column="87">startSequence</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" format="doxygen" pos:line="171" pos:column="9">/// Setting styles for positions outside the range of the buffer is safe and has no effect.</comment>
	<comment type="line" format="doxygen" pos:line="172" pos:column="9">/// @return true if the style of a character is changed.</comment>
	<function_decl><type><name pos:line="173" pos:column="9">bool</name></type> <name pos:line="173" pos:column="14">SetStyleAt</name><parameter_list pos:line="173" pos:column="24">(<param><decl><type><name pos:line="173" pos:column="25">int</name></type> <name pos:line="173" pos:column="29">position</name></decl></param>, <param><decl><type><name pos:line="173" pos:column="39">char</name></type> <name pos:line="173" pos:column="44">styleValue</name></decl></param>, <param><decl><type><name pos:line="173" pos:column="56">char</name></type> <name pos:line="173" pos:column="61">mask</name><init pos:line="173" pos:column="65">=<expr><lit:literal type="char" pos:line="173" pos:column="66">'\377'</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="174" pos:column="9">bool</name></type> <name pos:line="174" pos:column="14">SetStyleFor</name><parameter_list pos:line="174" pos:column="25">(<param><decl><type><name pos:line="174" pos:column="26">int</name></type> <name pos:line="174" pos:column="30">position</name></decl></param>, <param><decl><type><name pos:line="174" pos:column="40">int</name></type> <name pos:line="174" pos:column="44">length</name></decl></param>, <param><decl><type><name pos:line="174" pos:column="52">char</name></type> <name pos:line="174" pos:column="57">styleValue</name></decl></param>, <param><decl><type><name pos:line="174" pos:column="69">char</name></type> <name pos:line="174" pos:column="74">mask</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><specifier pos:line="176" pos:column="9">const</specifier> <name pos:line="176" pos:column="15">char</name> <type:modifier pos:line="176" pos:column="20">*</type:modifier></type><name pos:line="176" pos:column="21">DeleteChars</name><parameter_list pos:line="176" pos:column="32">(<param><decl><type><name pos:line="176" pos:column="33">int</name></type> <name pos:line="176" pos:column="37">position</name></decl></param>, <param><decl><type><name pos:line="176" pos:column="47">int</name></type> <name pos:line="176" pos:column="51">deleteLength</name></decl></param>, <param><decl><type><name pos:line="176" pos:column="65">bool</name> <type:modifier pos:line="176" pos:column="70">&amp;</type:modifier></type><name pos:line="176" pos:column="71">startSequence</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="178" pos:column="9">bool</name></type> <name pos:line="178" pos:column="14">IsReadOnly</name><parameter_list pos:line="178" pos:column="24">()</parameter_list> <specifier pos:line="178" pos:column="27">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="179" pos:column="9">void</name></type> <name pos:line="179" pos:column="14">SetReadOnly</name><parameter_list pos:line="179" pos:column="25">(<param><decl><type><name pos:line="179" pos:column="26">bool</name></type> <name pos:line="179" pos:column="31">set</name></decl></param>)</parameter_list>;</function_decl>

	<comment type="line" format="doxygen" pos:line="181" pos:column="9">/// The save point is a marker in the undo stack where the container has stated that</comment>
	<comment type="line" format="doxygen" pos:line="182" pos:column="9">/// the buffer was saved. Undo and redo can move over the save point.</comment>
	<function_decl><type><name pos:line="183" pos:column="9">void</name></type> <name pos:line="183" pos:column="14">SetSavePoint</name><parameter_list pos:line="183" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="184" pos:column="9">bool</name></type> <name pos:line="184" pos:column="14">IsSavePoint</name><parameter_list pos:line="184" pos:column="25">()</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="186" pos:column="9">bool</name></type> <name pos:line="186" pos:column="14">SetUndoCollection</name><parameter_list pos:line="186" pos:column="31">(<param><decl><type><name pos:line="186" pos:column="32">bool</name></type> <name pos:line="186" pos:column="37">collectUndo</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="187" pos:column="9">bool</name></type> <name pos:line="187" pos:column="14">IsCollectingUndo</name><parameter_list pos:line="187" pos:column="30">()</parameter_list> <specifier pos:line="187" pos:column="33">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="188" pos:column="9">void</name></type> <name pos:line="188" pos:column="14">BeginUndoAction</name><parameter_list pos:line="188" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="189" pos:column="9">void</name></type> <name pos:line="189" pos:column="14">EndUndoAction</name><parameter_list pos:line="189" pos:column="27">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="190" pos:column="9">void</name></type> <name pos:line="190" pos:column="14">AddUndoAction</name><parameter_list pos:line="190" pos:column="27">(<param><decl><type><name pos:line="190" pos:column="28">int</name></type> <name pos:line="190" pos:column="32">token</name></decl></param>, <param><decl><type><name pos:line="190" pos:column="39">bool</name></type> <name pos:line="190" pos:column="44">mayCoalesce</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="191" pos:column="9">void</name></type> <name pos:line="191" pos:column="14">DeleteUndoHistory</name><parameter_list pos:line="191" pos:column="31">()</parameter_list>;</function_decl>

	<comment type="line" format="doxygen" pos:line="193" pos:column="9">/// To perform an undo, StartUndo is called to retrieve the number of steps, then UndoStep is</comment>
	<comment type="line" format="doxygen" pos:line="194" pos:column="9">/// called that many times. Similarly for redo.</comment>
	<function_decl><type><name pos:line="195" pos:column="9">bool</name></type> <name pos:line="195" pos:column="14">CanUndo</name><parameter_list pos:line="195" pos:column="21">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="196" pos:column="9">int</name></type> <name pos:line="196" pos:column="13">StartUndo</name><parameter_list pos:line="196" pos:column="22">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="197" pos:column="9">const</specifier> <name pos:line="197" pos:column="15">Action</name> <type:modifier pos:line="197" pos:column="22">&amp;</type:modifier></type><name pos:line="197" pos:column="23">GetUndoStep</name><parameter_list pos:line="197" pos:column="34">()</parameter_list> <specifier pos:line="197" pos:column="37">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="198" pos:column="9">void</name></type> <name pos:line="198" pos:column="14">PerformUndoStep</name><parameter_list pos:line="198" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="199" pos:column="9">bool</name></type> <name pos:line="199" pos:column="14">CanRedo</name><parameter_list pos:line="199" pos:column="21">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="200" pos:column="9">int</name></type> <name pos:line="200" pos:column="13">StartRedo</name><parameter_list pos:line="200" pos:column="22">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="201" pos:column="9">const</specifier> <name pos:line="201" pos:column="15">Action</name> <type:modifier pos:line="201" pos:column="22">&amp;</type:modifier></type><name pos:line="201" pos:column="23">GetRedoStep</name><parameter_list pos:line="201" pos:column="34">()</parameter_list> <specifier pos:line="201" pos:column="37">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="202" pos:column="9">void</name></type> <name pos:line="202" pos:column="14">PerformRedoStep</name><parameter_list pos:line="202" pos:column="29">()</parameter_list>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="205" pos:column="1">#<cpp:directive pos:line="205" pos:column="2">ifdef</cpp:directive> <name pos:line="205" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="207" pos:column="1">#<cpp:directive pos:line="207" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="209" pos:column="1">#<cpp:directive pos:line="209" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
