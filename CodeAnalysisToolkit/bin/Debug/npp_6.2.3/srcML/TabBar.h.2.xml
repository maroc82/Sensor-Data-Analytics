<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\TabBar\TabBar.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">TAB_BAR_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">TAB_BAR_H</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">_WIN32_IE</name></cpp:ifndef>
<cpp:define pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="33" pos:column="9">_WIN32_IE</name></cpp:macro>	<cpp:value pos:line="33" pos:column="25">0x0600</cpp:value></cpp:define>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="34" pos:column="8">//_WIN32_IE</comment>

<cpp:ifndef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifndef</cpp:directive> <name pos:line="36" pos:column="9">MENUCMDID_H</name></cpp:ifndef>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"menuCmdID.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="38" pos:column="8">//MENUCMDID_H</comment>

<cpp:ifndef pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">ifndef</cpp:directive> <name pos:line="40" pos:column="9">RESOURCE_H</name></cpp:ifndef>
<cpp:include pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="41" pos:column="10">"resource.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="42" pos:column="8">//RESOURCE_H</comment>

<comment type="line" pos:line="44" pos:column="1">//Notification message</comment>
<cpp:define pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="45" pos:column="9">TCN_TABDROPPED</name></cpp:macro> <cpp:value pos:line="45" pos:column="24">(TCN_FIRST - 10)</cpp:value></cpp:define>
<cpp:define pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="46" pos:column="9">TCN_TABDROPPEDOUTSIDE</name></cpp:macro> <cpp:value pos:line="46" pos:column="31">(TCN_FIRST - 11)</cpp:value></cpp:define>
<cpp:define pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="47" pos:column="9">TCN_TABDELETE</name></cpp:macro> <cpp:value pos:line="47" pos:column="23">(TCN_FIRST - 12)</cpp:value></cpp:define>

<cpp:define pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="49" pos:column="9">WM_TABSETSTYLE</name></cpp:macro>	<cpp:value pos:line="49" pos:column="25">(WM_APP + 0x024)</cpp:value></cpp:define>

<decl_stmt><decl><type><specifier pos:line="51" pos:column="1">const</specifier> <name pos:line="51" pos:column="7">int</name></type> <name pos:line="51" pos:column="11">marge</name> <init pos:line="51" pos:column="17">= <expr><lit:literal type="number" pos:line="51" pos:column="19">8</lit:literal></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="52" pos:column="1">const</specifier> <name pos:line="52" pos:column="7">int</name></type> <name pos:line="52" pos:column="11">nbCtrlMax</name> <init pos:line="52" pos:column="21">= <expr><lit:literal type="number" pos:line="52" pos:column="23">10</lit:literal></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier pos:line="54" pos:column="1">const</specifier> <name pos:line="54" pos:column="7">TCHAR</name></type> <name><name pos:line="54" pos:column="13">TABBAR_ACTIVEFOCUSEDINDCATOR</name><index pos:line="54" pos:column="41">[<expr><lit:literal type="number" pos:line="54" pos:column="42">64</lit:literal></expr>]</index></name> <init pos:line="54" pos:column="46">= <expr><call><name pos:line="54" pos:column="48">TEXT</name><argument_list pos:line="54" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="54" pos:column="53">"Active tab focused indicator"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="55" pos:column="1">const</specifier> <name pos:line="55" pos:column="7">TCHAR</name></type> <name><name pos:line="55" pos:column="13">TABBAR_ACTIVEUNFOCUSEDINDCATOR</name><index pos:line="55" pos:column="43">[<expr><lit:literal type="number" pos:line="55" pos:column="44">64</lit:literal></expr>]</index></name> <init pos:line="55" pos:column="48">= <expr><call><name pos:line="55" pos:column="50">TEXT</name><argument_list pos:line="55" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="55">"Active tab unfocused indicator"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="56" pos:column="1">const</specifier> <name pos:line="56" pos:column="7">TCHAR</name></type> <name><name pos:line="56" pos:column="13">TABBAR_ACTIVETEXT</name><index pos:line="56" pos:column="30">[<expr><lit:literal type="number" pos:line="56" pos:column="31">64</lit:literal></expr>]</index></name> <init pos:line="56" pos:column="35">= <expr><call><name pos:line="56" pos:column="37">TEXT</name><argument_list pos:line="56" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="56" pos:column="42">"Active tab text"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier pos:line="57" pos:column="1">const</specifier> <name pos:line="57" pos:column="7">TCHAR</name></type> <name><name pos:line="57" pos:column="13">TABBAR_INACTIVETEXT</name><index pos:line="57" pos:column="32">[<expr><lit:literal type="number" pos:line="57" pos:column="33">64</lit:literal></expr>]</index></name> <init pos:line="57" pos:column="37">= <expr><call><name pos:line="57" pos:column="39">TEXT</name><argument_list pos:line="57" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="44">"Inactive tabs"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<struct pos:line="59" pos:column="1">struct <name pos:line="59" pos:column="8">TBHDR</name> <block pos:line="59" pos:column="14">{<public type="default" pos:line="59" pos:column="15">
	<decl_stmt><decl><type><name pos:line="60" pos:column="9">NMHDR</name></type> <name pos:line="60" pos:column="15">hdr</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="61" pos:column="9">int</name></type> <name pos:line="61" pos:column="13">tabOrigin</name></decl>;</decl_stmt>
</public>}</block>;</struct>

<class pos:line="64" pos:column="1">class <name pos:line="64" pos:column="7">TabBar</name> <super pos:line="64" pos:column="14">: <specifier pos:line="64" pos:column="16">public</specifier> <name pos:line="64" pos:column="23">Window</name></super>
<block pos:line="65" pos:column="1">{<private type="default" pos:line="65" pos:column="2">
</private><public pos:line="66" pos:column="1">public:
	<constructor><name pos:line="67" pos:column="9">TabBar</name><parameter_list pos:line="67" pos:column="15">()</parameter_list> <member_list pos:line="67" pos:column="18">: <call><name pos:line="67" pos:column="20">Window</name><argument_list pos:line="67" pos:column="26">()</argument_list></call><op:operator pos:line="67" pos:column="28">,</op:operator> <call><name pos:line="67" pos:column="30">_nbItem</name><argument_list pos:line="67" pos:column="37">(<argument><expr><lit:literal type="number" pos:line="67" pos:column="38">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="67" pos:column="40">,</op:operator> <call><name pos:line="67" pos:column="42">_hasImgLst</name><argument_list pos:line="67" pos:column="52">(<argument><expr><lit:literal type="boolean" pos:line="67" pos:column="53">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="67" pos:column="59">,</op:operator> <call><name pos:line="67" pos:column="61">_hFont</name><argument_list pos:line="67" pos:column="67">(<argument><expr><name pos:line="67" pos:column="68">NULL</name></expr></argument>)</argument_list></call></member_list><block pos:line="67" pos:column="73">{}</block></constructor><empty_stmt pos:line="67" pos:column="75">;</empty_stmt>
	<destructor><specifier pos:line="68" pos:column="9">virtual</specifier> <name pos:line="68" pos:column="17">~<name pos:line="68" pos:column="18">TabBar</name></name><parameter_list pos:line="68" pos:column="24">()</parameter_list> <block pos:line="68" pos:column="27">{}</block></destructor><empty_stmt pos:line="68" pos:column="29">;</empty_stmt>
	<function_decl><type><specifier pos:line="69" pos:column="9">virtual</specifier> <name pos:line="69" pos:column="17">void</name></type> <name pos:line="69" pos:column="22">destroy</name><parameter_list pos:line="69" pos:column="29">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="70" pos:column="9">virtual</specifier> <name pos:line="70" pos:column="17">void</name></type> <name pos:line="70" pos:column="22">init</name><parameter_list pos:line="70" pos:column="26">(<param><decl><type><name pos:line="70" pos:column="27">HINSTANCE</name></type> <name pos:line="70" pos:column="37">hInst</name></decl></param>, <param><decl><type><name pos:line="70" pos:column="44">HWND</name></type> <name pos:line="70" pos:column="49">hwnd</name></decl></param>, <param><decl><type><name pos:line="70" pos:column="55">bool</name></type> <name pos:line="70" pos:column="60">isVertical</name> <init pos:line="70" pos:column="71">= <expr><lit:literal type="boolean" pos:line="70" pos:column="73">false</lit:literal></expr></init></decl></param>, <name pos:line="70" pos:column="80">bool</name> <name pos:line="70" pos:column="85">isTraditional</name> <op:operator pos:line="70" pos:column="99">=</op:operator> <lit:literal type="boolean" pos:line="70" pos:column="101">false</lit:literal>, <name pos:line="70" pos:column="108">bool</name> <name pos:line="70" pos:column="113">isMultiLine</name> <op:operator pos:line="70" pos:column="125">=</op:operator> <lit:literal type="boolean" pos:line="70" pos:column="127">false</lit:literal>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="71" pos:column="9">virtual</specifier> <name pos:line="71" pos:column="17">void</name></type> <name pos:line="71" pos:column="22">reSizeTo</name><parameter_list pos:line="71" pos:column="30">(<param><decl><type><name pos:line="71" pos:column="31">RECT</name> <type:modifier pos:line="71" pos:column="36">&amp;</type:modifier></type> <name pos:line="71" pos:column="38">rc2Ajust</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="72" pos:column="9">int</name></type> <name pos:line="72" pos:column="13">insertAtEnd</name><parameter_list pos:line="72" pos:column="24">(<param><decl><type><specifier pos:line="72" pos:column="25">const</specifier> <name pos:line="72" pos:column="31">TCHAR</name> <type:modifier pos:line="72" pos:column="37">*</type:modifier></type><name pos:line="72" pos:column="38">subTabName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="73" pos:column="9">void</name></type> <name pos:line="73" pos:column="14">activateAt</name><parameter_list pos:line="73" pos:column="24">(<param><decl><type><name pos:line="73" pos:column="25">int</name></type> <name pos:line="73" pos:column="29">index</name></decl></param>)</parameter_list> <specifier pos:line="73" pos:column="36">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="74" pos:column="9">void</name></type> <name pos:line="74" pos:column="14">getCurrentTitle</name><parameter_list pos:line="74" pos:column="29">(<param><decl><type><name pos:line="74" pos:column="30">TCHAR</name> <type:modifier pos:line="74" pos:column="36">*</type:modifier></type><name pos:line="74" pos:column="37">title</name></decl></param>, <param><decl><type><name pos:line="74" pos:column="44">int</name></type> <name pos:line="74" pos:column="48">titleLen</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="76" pos:column="9">int</name></type> <name pos:line="76" pos:column="13">getCurrentTabIndex</name><parameter_list pos:line="76" pos:column="31">()</parameter_list> <specifier pos:line="76" pos:column="34">const</specifier> <block pos:line="76" pos:column="40">{
		<return pos:line="77" pos:column="17">return <expr><call><name><op:operator pos:line="77" pos:column="24">::</op:operator><name pos:line="77" pos:column="26">SendMessage</name></name><argument_list pos:line="77" pos:column="37">(<argument><expr><name pos:line="77" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="46">TCM_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="77" pos:column="61">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="77" pos:column="64">0</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="78" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="79" pos:column="9">void</name></type> <name pos:line="79" pos:column="14">deletItemAt</name><parameter_list pos:line="79" pos:column="25">(<param><decl><type><name pos:line="79" pos:column="26">size_t</name></type> <name pos:line="79" pos:column="33">index</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="81" pos:column="9">void</name></type> <name pos:line="81" pos:column="14">deletAllItem</name><parameter_list pos:line="81" pos:column="26">()</parameter_list> <block pos:line="81" pos:column="29">{
		<expr_stmt><expr><call><name><op:operator pos:line="82" pos:column="17">::</op:operator><name pos:line="82" pos:column="19">SendMessage</name></name><argument_list pos:line="82" pos:column="30">(<argument><expr><name pos:line="82" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="39">TCM_DELETEALLITEMS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="62">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="83" pos:column="17">_nbItem</name> <op:operator pos:line="83" pos:column="25">=</op:operator> <lit:literal type="number" pos:line="83" pos:column="27">0</lit:literal></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="84" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="86" pos:column="9">void</name></type> <name pos:line="86" pos:column="14">setImageList</name><parameter_list pos:line="86" pos:column="26">(<param><decl><type><name pos:line="86" pos:column="27">HIMAGELIST</name></type> <name pos:line="86" pos:column="38">himl</name></decl></param>)</parameter_list> <block pos:line="86" pos:column="44">{
		<expr_stmt><expr><name pos:line="87" pos:column="17">_hasImgLst</name> <op:operator pos:line="87" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="87" pos:column="30">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="88" pos:column="17">::</op:operator><name pos:line="88" pos:column="19">SendMessage</name></name><argument_list pos:line="88" pos:column="30">(<argument><expr><name pos:line="88" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="39">TCM_SETIMAGELIST</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="88" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="88" pos:column="60">(</op:operator><name pos:line="88" pos:column="61">LPARAM</name><op:operator pos:line="88" pos:column="67">)</op:operator><name pos:line="88" pos:column="68">himl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="89" pos:column="10">;</empty_stmt>
    
    <function><type><name pos:line="91" pos:column="5">int</name></type> <name pos:line="91" pos:column="9">nbItem</name><parameter_list pos:line="91" pos:column="15">()</parameter_list> <specifier pos:line="91" pos:column="18">const</specifier> <block pos:line="91" pos:column="24">{
        <return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">_nbItem</name></expr>;</return>
    }</block></function><empty_stmt pos:line="93" pos:column="6">;</empty_stmt>

	<function_decl><type><name pos:line="95" pos:column="9">void</name></type> <name pos:line="95" pos:column="14">setFont</name><parameter_list pos:line="95" pos:column="21">(<param><decl><type><name pos:line="95" pos:column="22">TCHAR</name> <type:modifier pos:line="95" pos:column="28">*</type:modifier></type><name pos:line="95" pos:column="29">fontName</name></decl></param>, <param><decl><type><name pos:line="95" pos:column="39">size_t</name></type> <name pos:line="95" pos:column="46">fontSize</name></decl></param>)</parameter_list>;</function_decl>
		
	<function><type><name pos:line="97" pos:column="9">void</name></type> <name pos:line="97" pos:column="14">setVertical</name><parameter_list pos:line="97" pos:column="25">(<param><decl><type><name pos:line="97" pos:column="26">bool</name></type> <name pos:line="97" pos:column="31">b</name></decl></param>)</parameter_list> <block pos:line="97" pos:column="34">{
		<expr_stmt><expr><name pos:line="98" pos:column="17">_isVertical</name> <op:operator pos:line="98" pos:column="29">=</op:operator> <name pos:line="98" pos:column="31">b</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="99" pos:column="10">;</empty_stmt>
	
	<function><type><name pos:line="101" pos:column="9">void</name></type> <name pos:line="101" pos:column="14">setMultiLine</name><parameter_list pos:line="101" pos:column="26">(<param><decl><type><name pos:line="101" pos:column="27">bool</name></type> <name pos:line="101" pos:column="32">b</name></decl></param>)</parameter_list> <block pos:line="101" pos:column="35">{
		<expr_stmt><expr><name pos:line="102" pos:column="17">_isMultiLine</name> <op:operator pos:line="102" pos:column="30">=</op:operator> <name pos:line="102" pos:column="32">b</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="103" pos:column="10">;</empty_stmt>


</public><protected pos:line="106" pos:column="1">protected:
	<decl_stmt><decl><type><name pos:line="107" pos:column="9">size_t</name></type> <name pos:line="107" pos:column="16">_nbItem</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="108" pos:column="9">bool</name></type> <name pos:line="108" pos:column="14">_hasImgLst</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="109" pos:column="9">HFONT</name></type> <name pos:line="109" pos:column="15">_hFont</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="110" pos:column="9">HFONT</name></type> <name pos:line="110" pos:column="15">_hLargeFont</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="111" pos:column="9">HFONT</name></type> <name pos:line="111" pos:column="15">_hVerticalFont</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="112" pos:column="9">HFONT</name></type> <name pos:line="112" pos:column="15">_hVerticalLargeFont</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="114" pos:column="9">int</name></type> <name pos:line="114" pos:column="13">_ctrlID</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="115" pos:column="9">bool</name></type> <name pos:line="115" pos:column="14">_isTraditional</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="117" pos:column="9">bool</name></type> <name pos:line="117" pos:column="14">_isVertical</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="118" pos:column="9">bool</name></type> <name pos:line="118" pos:column="14">_isMultiLine</name></decl>;</decl_stmt>
	
	<function><type><name pos:line="120" pos:column="9">long</name></type> <name pos:line="120" pos:column="14">getRowCount</name><parameter_list pos:line="120" pos:column="25">()</parameter_list> <specifier pos:line="120" pos:column="28">const</specifier> <block pos:line="120" pos:column="34">{
		<return pos:line="121" pos:column="17">return <expr><call><name pos:line="121" pos:column="24">long</name><argument_list pos:line="121" pos:column="28">(<argument><expr><call><name><op:operator pos:line="121" pos:column="29">::</op:operator><name pos:line="121" pos:column="31">SendMessage</name></name><argument_list pos:line="121" pos:column="42">(<argument><expr><name pos:line="121" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="51">TCM_GETROWCOUNT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="121" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="121" pos:column="71">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="122" pos:column="10">;</empty_stmt>
</protected>}</block>;</class>


<struct pos:line="126" pos:column="1">struct <name pos:line="126" pos:column="8">CloseButtonZone</name> <block pos:line="126" pos:column="24">{<public type="default" pos:line="126" pos:column="25">
	<constructor><name pos:line="127" pos:column="9">CloseButtonZone</name><parameter_list pos:line="127" pos:column="24">()</parameter_list><member_list pos:line="127" pos:column="26">: <call><name pos:line="127" pos:column="28">_width</name><argument_list pos:line="127" pos:column="34">(<argument><expr><lit:literal type="number" pos:line="127" pos:column="35">11</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="127" pos:column="38">,</op:operator> <call><name pos:line="127" pos:column="40">_hight</name><argument_list pos:line="127" pos:column="46">(<argument><expr><lit:literal type="number" pos:line="127" pos:column="47">11</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="127" pos:column="50">,</op:operator> <call><name pos:line="127" pos:column="52">_fromTop</name><argument_list pos:line="127" pos:column="60">(<argument><expr><lit:literal type="number" pos:line="127" pos:column="61">5</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="127" pos:column="63">,</op:operator> <call><name pos:line="127" pos:column="65">_fromRight</name><argument_list pos:line="127" pos:column="75">(<argument><expr><lit:literal type="number" pos:line="127" pos:column="76">3</lit:literal></expr></argument>)</argument_list></call></member_list><block pos:line="127" pos:column="78">{}</block></constructor><empty_stmt pos:line="127" pos:column="80">;</empty_stmt>
	<function_decl><type><name pos:line="128" pos:column="9">bool</name></type> <name pos:line="128" pos:column="14">isHit</name><parameter_list pos:line="128" pos:column="19">(<param><decl><type><name pos:line="128" pos:column="20">int</name></type> <name pos:line="128" pos:column="24">x</name></decl></param>, <param><decl><type><name pos:line="128" pos:column="27">int</name></type> <name pos:line="128" pos:column="31">y</name></decl></param>, <param><decl><type><specifier pos:line="128" pos:column="34">const</specifier> <name pos:line="128" pos:column="40">RECT</name> <type:modifier pos:line="128" pos:column="45">&amp;</type:modifier></type> <name pos:line="128" pos:column="47">testZone</name></decl></param>)</parameter_list> <specifier pos:line="128" pos:column="57">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="129" pos:column="9">RECT</name></type> <name pos:line="129" pos:column="14">getButtonRectFrom</name><parameter_list pos:line="129" pos:column="31">(<param><decl><type><specifier pos:line="129" pos:column="32">const</specifier> <name pos:line="129" pos:column="38">RECT</name> <type:modifier pos:line="129" pos:column="43">&amp;</type:modifier></type> <name pos:line="129" pos:column="45">tabItemRect</name></decl></param>)</parameter_list> <specifier pos:line="129" pos:column="58">const</specifier>;</function_decl>

	<decl_stmt><decl><type><name pos:line="131" pos:column="9">int</name></type> <name pos:line="131" pos:column="13">_width</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="132" pos:column="9">int</name></type> <name pos:line="132" pos:column="13">_hight</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="133" pos:column="9">int</name></type> <name pos:line="133" pos:column="13">_fromTop</name></decl>;</decl_stmt> <comment type="line" pos:line="133" pos:column="23">// distance from top in pixzl</comment>
	<decl_stmt><decl><type><name pos:line="134" pos:column="9">int</name></type> <name pos:line="134" pos:column="13">_fromRight</name></decl>;</decl_stmt> <comment type="line" pos:line="134" pos:column="25">// distance from right in pixzl</comment>
</public>}</block>;</struct>

<class pos:line="137" pos:column="1">class <name pos:line="137" pos:column="7">TabBarPlus</name> <super pos:line="137" pos:column="18">: <specifier pos:line="137" pos:column="20">public</specifier> <name pos:line="137" pos:column="27">TabBar</name></super>
<block pos:line="138" pos:column="1">{<private type="default" pos:line="138" pos:column="2">
</private><public pos:line="139" pos:column="1">public :

	<constructor><name pos:line="141" pos:column="9">TabBarPlus</name><parameter_list pos:line="141" pos:column="19">()</parameter_list> <member_list pos:line="141" pos:column="22">: <call><name pos:line="141" pos:column="24">TabBar</name><argument_list pos:line="141" pos:column="30">()</argument_list></call><op:operator pos:line="141" pos:column="32">,</op:operator> <call><name pos:line="141" pos:column="34">_isDragging</name><argument_list pos:line="141" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="141" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="141" pos:column="52">,</op:operator> <call><name pos:line="141" pos:column="54">_tabBarDefaultProc</name><argument_list pos:line="141" pos:column="72">(<argument><expr><name pos:line="141" pos:column="73">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="141" pos:column="78">,</op:operator> <call><name pos:line="141" pos:column="80">_currentHoverTabItem</name><argument_list pos:line="141" pos:column="100">(<argument><expr><op:operator pos:line="141" pos:column="101">-</op:operator><lit:literal type="number" pos:line="141" pos:column="102">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="141" pos:column="104">,</op:operator>\
		<call><name pos:line="142" pos:column="17">_isCloseHover</name><argument_list pos:line="142" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="142" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="142" pos:column="37">,</op:operator> <call><name pos:line="142" pos:column="39">_whichCloseClickDown</name><argument_list pos:line="142" pos:column="59">(<argument><expr><op:operator pos:line="142" pos:column="60">-</op:operator><lit:literal type="number" pos:line="142" pos:column="61">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="142" pos:column="63">,</op:operator> <call><name pos:line="142" pos:column="65">_lmbdHit</name><argument_list pos:line="142" pos:column="73">(<argument><expr><lit:literal type="boolean" pos:line="142" pos:column="74">false</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="142" pos:column="81">{}</block></constructor><empty_stmt pos:line="142" pos:column="83">;</empty_stmt>
	<enum pos:line="143" pos:column="9">enum <name pos:line="143" pos:column="14">tabColourIndex</name> <block pos:line="143" pos:column="29">{
		<decl><name pos:line="144" pos:column="17">activeText</name></decl><op:operator pos:line="144" pos:column="27">,</op:operator> <decl><name pos:line="144" pos:column="29">activeFocusedTop</name></decl><op:operator pos:line="144" pos:column="45">,</op:operator> <decl><name pos:line="144" pos:column="47">activeUnfocusedTop</name></decl><op:operator pos:line="144" pos:column="65">,</op:operator> <decl><name pos:line="144" pos:column="67">inactiveText</name></decl><op:operator pos:line="144" pos:column="79">,</op:operator> <decl><name pos:line="144" pos:column="81">inactiveBg</name></decl>
	}</block>;</enum>

	<function><type><specifier pos:line="147" pos:column="9">static</specifier> <name pos:line="147" pos:column="16">void</name></type> <name pos:line="147" pos:column="21">doDragNDrop</name><parameter_list pos:line="147" pos:column="32">(<param><decl><type><name pos:line="147" pos:column="33">bool</name></type> <name pos:line="147" pos:column="38">justDoIt</name></decl></param>)</parameter_list> <block pos:line="147" pos:column="48">{
        <expr_stmt><expr><name pos:line="148" pos:column="9">_doDragNDrop</name> <op:operator pos:line="148" pos:column="22">=</op:operator> <name pos:line="148" pos:column="24">justDoIt</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="149" pos:column="6">;</empty_stmt>

	<function_decl><type><specifier pos:line="151" pos:column="9">virtual</specifier> <name pos:line="151" pos:column="17">void</name></type> <name pos:line="151" pos:column="22">init</name><parameter_list pos:line="151" pos:column="26">(<param><decl><type><name pos:line="151" pos:column="27">HINSTANCE</name></type> <name pos:line="151" pos:column="37">hInst</name></decl></param>, <param><decl><type><name pos:line="151" pos:column="44">HWND</name></type> <name pos:line="151" pos:column="49">hwnd</name></decl></param>, <param><decl><type><name pos:line="151" pos:column="55">bool</name></type> <name pos:line="151" pos:column="60">isVertical</name> <init pos:line="151" pos:column="71">= <expr><lit:literal type="boolean" pos:line="151" pos:column="73">false</lit:literal></expr></init></decl></param>, <name pos:line="151" pos:column="80">bool</name> <name pos:line="151" pos:column="85">isTraditional</name> <op:operator pos:line="151" pos:column="99">=</op:operator> <lit:literal type="boolean" pos:line="151" pos:column="101">false</lit:literal>, <name pos:line="151" pos:column="108">bool</name> <name pos:line="151" pos:column="113">isMultiLine</name> <op:operator pos:line="151" pos:column="125">=</op:operator> <lit:literal type="boolean" pos:line="151" pos:column="127">false</lit:literal>)</parameter_list>;</function_decl>

    <function><type><specifier pos:line="153" pos:column="5">static</specifier> <name pos:line="153" pos:column="12">bool</name></type> <name pos:line="153" pos:column="17">doDragNDropOrNot</name><parameter_list pos:line="153" pos:column="33">()</parameter_list> <block pos:line="153" pos:column="36">{
        <return pos:line="154" pos:column="9">return <expr><name pos:line="154" pos:column="16">_doDragNDrop</name></expr>;</return>
    }</block></function><empty_stmt pos:line="155" pos:column="6">;</empty_stmt>

	<function><type><name pos:line="157" pos:column="9">int</name></type> <name pos:line="157" pos:column="13">getSrcTabIndex</name><parameter_list pos:line="157" pos:column="27">()</parameter_list> <specifier pos:line="157" pos:column="30">const</specifier> <block pos:line="157" pos:column="36">{
        <return pos:line="158" pos:column="9">return <expr><name pos:line="158" pos:column="16">_nSrcTab</name></expr>;</return>
    }</block></function><empty_stmt pos:line="159" pos:column="6">;</empty_stmt>

    <function><type><name pos:line="161" pos:column="5">int</name></type> <name pos:line="161" pos:column="9">getTabDraggedIndex</name><parameter_list pos:line="161" pos:column="27">()</parameter_list> <specifier pos:line="161" pos:column="30">const</specifier> <block pos:line="161" pos:column="36">{
        <return pos:line="162" pos:column="9">return <expr><name pos:line="162" pos:column="16">_nTabDragged</name></expr>;</return>
    }</block></function><empty_stmt pos:line="163" pos:column="6">;</empty_stmt>

	<function><type><name pos:line="165" pos:column="9">POINT</name></type> <name pos:line="165" pos:column="15">getDraggingPoint</name><parameter_list pos:line="165" pos:column="31">()</parameter_list> <specifier pos:line="165" pos:column="34">const</specifier> <block pos:line="165" pos:column="40">{
		<return pos:line="166" pos:column="17">return <expr><name pos:line="166" pos:column="24">_draggingPoint</name></expr>;</return>
	}</block></function><empty_stmt pos:line="167" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="169" pos:column="9">void</name></type> <name pos:line="169" pos:column="14">resetDraggingPoint</name><parameter_list pos:line="169" pos:column="32">()</parameter_list> <block pos:line="169" pos:column="35">{
		<expr_stmt><expr><name><name pos:line="170" pos:column="17">_draggingPoint</name><op:operator pos:line="170" pos:column="31">.</op:operator><name pos:line="170" pos:column="32">x</name></name> <op:operator pos:line="170" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="170" pos:column="36">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="171" pos:column="17">_draggingPoint</name><op:operator pos:line="171" pos:column="31">.</op:operator><name pos:line="171" pos:column="32">y</name></name> <op:operator pos:line="171" pos:column="34">=</op:operator> <lit:literal type="number" pos:line="171" pos:column="36">0</lit:literal></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="172" pos:column="10">;</empty_stmt>

	<function_decl><type><specifier pos:line="174" pos:column="9">static</specifier> <name pos:line="174" pos:column="16">void</name></type> <name pos:line="174" pos:column="21">doOwnerDrawTab</name><parameter_list pos:line="174" pos:column="35">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="175" pos:column="9">static</specifier> <name pos:line="175" pos:column="16">void</name></type> <name pos:line="175" pos:column="21">doVertical</name><parameter_list pos:line="175" pos:column="31">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="176" pos:column="9">static</specifier> <name pos:line="176" pos:column="16">void</name></type> <name pos:line="176" pos:column="21">doMultiLine</name><parameter_list pos:line="176" pos:column="32">()</parameter_list>;</function_decl>
	<function><type><specifier pos:line="177" pos:column="9">static</specifier> <name pos:line="177" pos:column="16">bool</name></type> <name pos:line="177" pos:column="21">isOwnerDrawTab</name><parameter_list pos:line="177" pos:column="35">()</parameter_list> <block pos:line="177" pos:column="38">{<return pos:line="177" pos:column="39">return <expr><lit:literal type="boolean" pos:line="177" pos:column="46">true</lit:literal></expr>;</return>}</block></function><empty_stmt pos:line="177" pos:column="52">;</empty_stmt>
	<function><type><specifier pos:line="178" pos:column="9">static</specifier> <name pos:line="178" pos:column="16">bool</name></type> <name pos:line="178" pos:column="21">drawTopBar</name><parameter_list pos:line="178" pos:column="31">()</parameter_list> <block pos:line="178" pos:column="34">{<return pos:line="178" pos:column="35">return <expr><name pos:line="178" pos:column="42">_drawTopBar</name></expr>;</return>}</block></function><empty_stmt pos:line="178" pos:column="55">;</empty_stmt>
	<function><type><specifier pos:line="179" pos:column="9">static</specifier> <name pos:line="179" pos:column="16">bool</name></type> <name pos:line="179" pos:column="21">drawInactiveTab</name><parameter_list pos:line="179" pos:column="36">()</parameter_list> <block pos:line="179" pos:column="39">{<return pos:line="179" pos:column="40">return <expr><name pos:line="179" pos:column="47">_drawInactiveTab</name></expr>;</return>}</block></function><empty_stmt pos:line="179" pos:column="65">;</empty_stmt>
	<function><type><specifier pos:line="180" pos:column="9">static</specifier> <name pos:line="180" pos:column="16">bool</name></type> <name pos:line="180" pos:column="21">drawTabCloseButton</name><parameter_list pos:line="180" pos:column="39">()</parameter_list> <block pos:line="180" pos:column="42">{<return pos:line="180" pos:column="43">return <expr><name pos:line="180" pos:column="50">_drawTabCloseButton</name></expr>;</return>}</block></function><empty_stmt pos:line="180" pos:column="71">;</empty_stmt>
	<function><type><specifier pos:line="181" pos:column="9">static</specifier> <name pos:line="181" pos:column="16">bool</name></type> <name pos:line="181" pos:column="21">isDbClk2Close</name><parameter_list pos:line="181" pos:column="34">()</parameter_list> <block pos:line="181" pos:column="37">{<return pos:line="181" pos:column="38">return <expr><name pos:line="181" pos:column="45">_isDbClk2Close</name></expr>;</return>}</block></function><empty_stmt pos:line="181" pos:column="61">;</empty_stmt>
	<function><type><specifier pos:line="182" pos:column="9">static</specifier> <name pos:line="182" pos:column="16">bool</name></type> <name pos:line="182" pos:column="21">isVertical</name><parameter_list pos:line="182" pos:column="31">()</parameter_list> <block pos:line="182" pos:column="34">{ <return pos:line="182" pos:column="36">return <expr><name pos:line="182" pos:column="43">_isCtrlVertical</name></expr>;</return>}</block></function><empty_stmt pos:line="182" pos:column="60">;</empty_stmt>
	<function><type><specifier pos:line="183" pos:column="9">static</specifier> <name pos:line="183" pos:column="16">bool</name></type> <name pos:line="183" pos:column="21">isMultiLine</name><parameter_list pos:line="183" pos:column="32">()</parameter_list> <block pos:line="183" pos:column="35">{ <return pos:line="183" pos:column="37">return <expr><name pos:line="183" pos:column="44">_isCtrlMultiLine</name></expr>;</return>}</block></function><empty_stmt pos:line="183" pos:column="62">;</empty_stmt>

	<function><type><specifier pos:line="185" pos:column="9">static</specifier> <name pos:line="185" pos:column="16">void</name></type> <name pos:line="185" pos:column="21">setDrawTopBar</name><parameter_list pos:line="185" pos:column="34">(<param><decl><type><name pos:line="185" pos:column="35">bool</name></type> <name pos:line="185" pos:column="40">b</name></decl></param>)</parameter_list> <block pos:line="185" pos:column="43">{
		<expr_stmt><expr><name pos:line="186" pos:column="17">_drawTopBar</name> <op:operator pos:line="186" pos:column="29">=</op:operator> <name pos:line="186" pos:column="31">b</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="187" pos:column="17">doOwnerDrawTab</name><argument_list pos:line="187" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="188" pos:column="10">;</empty_stmt>
	<function><type><specifier pos:line="189" pos:column="9">static</specifier> <name pos:line="189" pos:column="16">void</name></type> <name pos:line="189" pos:column="21">setDrawInactiveTab</name><parameter_list pos:line="189" pos:column="39">(<param><decl><type><name pos:line="189" pos:column="40">bool</name></type> <name pos:line="189" pos:column="45">b</name></decl></param>)</parameter_list> <block pos:line="189" pos:column="48">{
		<expr_stmt><expr><name pos:line="190" pos:column="17">_drawInactiveTab</name> <op:operator pos:line="190" pos:column="34">=</op:operator> <name pos:line="190" pos:column="36">b</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="191" pos:column="17">doOwnerDrawTab</name><argument_list pos:line="191" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="192" pos:column="10">;</empty_stmt>
	<function><type><specifier pos:line="193" pos:column="9">static</specifier> <name pos:line="193" pos:column="16">void</name></type> <name pos:line="193" pos:column="21">setDrawTabCloseButton</name><parameter_list pos:line="193" pos:column="42">(<param><decl><type><name pos:line="193" pos:column="43">bool</name></type> <name pos:line="193" pos:column="48">b</name></decl></param>)</parameter_list> <block pos:line="193" pos:column="51">{
		<expr_stmt><expr><name pos:line="194" pos:column="17">_drawTabCloseButton</name> <op:operator pos:line="194" pos:column="37">=</op:operator> <name pos:line="194" pos:column="39">b</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="195" pos:column="17">doOwnerDrawTab</name><argument_list pos:line="195" pos:column="31">()</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="196" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="198" pos:column="9">static</specifier> <name pos:line="198" pos:column="16">void</name></type> <name pos:line="198" pos:column="21">setDbClk2Close</name><parameter_list pos:line="198" pos:column="35">(<param><decl><type><name pos:line="198" pos:column="36">bool</name></type> <name pos:line="198" pos:column="41">b</name></decl></param>)</parameter_list> <block pos:line="198" pos:column="44">{
		<expr_stmt><expr><name pos:line="199" pos:column="17">_isDbClk2Close</name> <op:operator pos:line="199" pos:column="32">=</op:operator> <name pos:line="199" pos:column="34">b</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="200" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="202" pos:column="9">static</specifier> <name pos:line="202" pos:column="16">void</name></type> <name pos:line="202" pos:column="21">setVertical</name><parameter_list pos:line="202" pos:column="32">(<param><decl><type><name pos:line="202" pos:column="33">bool</name></type> <name pos:line="202" pos:column="38">b</name></decl></param>)</parameter_list> <block pos:line="202" pos:column="41">{
		<expr_stmt><expr><name pos:line="203" pos:column="17">_isCtrlVertical</name> <op:operator pos:line="203" pos:column="33">=</op:operator> <name pos:line="203" pos:column="35">b</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="204" pos:column="17">doVertical</name><argument_list pos:line="204" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="205" pos:column="10">;</empty_stmt>

	<function><type><specifier pos:line="207" pos:column="9">static</specifier> <name pos:line="207" pos:column="16">void</name></type> <name pos:line="207" pos:column="21">setMultiLine</name><parameter_list pos:line="207" pos:column="33">(<param><decl><type><name pos:line="207" pos:column="34">bool</name></type> <name pos:line="207" pos:column="39">b</name></decl></param>)</parameter_list> <block pos:line="207" pos:column="42">{
		<expr_stmt><expr><name pos:line="208" pos:column="17">_isCtrlMultiLine</name> <op:operator pos:line="208" pos:column="34">=</op:operator> <name pos:line="208" pos:column="36">b</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="209" pos:column="17">doMultiLine</name><argument_list pos:line="209" pos:column="28">()</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="210" pos:column="10">;</empty_stmt>

	<function_decl><type><specifier pos:line="212" pos:column="9">static</specifier> <name pos:line="212" pos:column="16">void</name></type> <name pos:line="212" pos:column="21">setColour</name><parameter_list pos:line="212" pos:column="30">(<param><decl><type><name pos:line="212" pos:column="31">COLORREF</name></type> <name pos:line="212" pos:column="40">colour2Set</name></decl></param>, <param><decl><type><name pos:line="212" pos:column="52">tabColourIndex</name></type> <name pos:line="212" pos:column="67">i</name></decl></param>)</parameter_list>;</function_decl>

</public><protected pos:line="214" pos:column="1">protected:
    <comment type="line" pos:line="215" pos:column="5">// it's the boss to decide if we do the drag N drop</comment>
    <decl_stmt><decl><type><specifier pos:line="216" pos:column="5">static</specifier> <name pos:line="216" pos:column="12">bool</name></type> <name pos:line="216" pos:column="17">_doDragNDrop</name></decl>;</decl_stmt>
	<comment type="line" pos:line="217" pos:column="9">// drag N drop members</comment>
	<decl_stmt><decl><type><name pos:line="218" pos:column="9">bool</name></type> <name pos:line="218" pos:column="14">_isDragging</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="219" pos:column="9">bool</name></type> <name pos:line="219" pos:column="14">_isDraggingInside</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="220" pos:column="5">int</name></type> <name pos:line="220" pos:column="9">_nSrcTab</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="221" pos:column="9">int</name></type> <name pos:line="221" pos:column="13">_nTabDragged</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="222" pos:column="9">POINT</name></type> <name pos:line="222" pos:column="15">_draggingPoint</name></decl>;</decl_stmt> <comment type="line" pos:line="222" pos:column="31">// coordinate of Screen</comment>
	<decl_stmt><decl><type><name pos:line="223" pos:column="9">WNDPROC</name></type> <name pos:line="223" pos:column="17">_tabBarDefaultProc</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="225" pos:column="9">RECT</name></type> <name pos:line="225" pos:column="14">_currentHoverTabRect</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="226" pos:column="9">int</name></type> <name pos:line="226" pos:column="13">_currentHoverTabItem</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="228" pos:column="9">CloseButtonZone</name></type> <name pos:line="228" pos:column="25">_closeButtonZone</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="229" pos:column="9">bool</name></type> <name pos:line="229" pos:column="14">_isCloseHover</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="230" pos:column="9">int</name></type> <name pos:line="230" pos:column="13">_whichCloseClickDown</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="231" pos:column="9">bool</name></type> <name pos:line="231" pos:column="14">_lmbdHit</name></decl>;</decl_stmt> <comment type="line" pos:line="231" pos:column="24">// Left Mouse Button Down Hit</comment>

	<function_decl><type><name pos:line="233" pos:column="9">LRESULT</name></type> <name pos:line="233" pos:column="17">runProc</name><parameter_list pos:line="233" pos:column="24">(<param><decl><type><name pos:line="233" pos:column="25">HWND</name></type> <name pos:line="233" pos:column="30">hwnd</name></decl></param>, <param><decl><type><name pos:line="233" pos:column="36">UINT</name></type> <name pos:line="233" pos:column="41">Message</name></decl></param>, <param><decl><type><name pos:line="233" pos:column="50">WPARAM</name></type> <name pos:line="233" pos:column="57">wParam</name></decl></param>, <param><decl><type><name pos:line="233" pos:column="65">LPARAM</name></type> <name pos:line="233" pos:column="72">lParam</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><specifier pos:line="235" pos:column="9">static</specifier> <name pos:line="235" pos:column="16">LRESULT</name> <name pos:line="235" pos:column="24">CALLBACK</name></type> <name pos:line="235" pos:column="33">TabBarPlus_Proc</name><parameter_list pos:line="235" pos:column="48">(<param><decl><type><name pos:line="235" pos:column="49">HWND</name></type> <name pos:line="235" pos:column="54">hwnd</name></decl></param>, <param><decl><type><name pos:line="235" pos:column="60">UINT</name></type> <name pos:line="235" pos:column="65">Message</name></decl></param>, <param><decl><type><name pos:line="235" pos:column="74">WPARAM</name></type> <name pos:line="235" pos:column="81">wParam</name></decl></param>, <param><decl><type><name pos:line="235" pos:column="89">LPARAM</name></type> <name pos:line="235" pos:column="96">lParam</name></decl></param>)</parameter_list> <block pos:line="235" pos:column="104">{
		<return pos:line="236" pos:column="17">return <expr><op:operator pos:line="236" pos:column="24">(</op:operator><op:operator pos:line="236" pos:column="25">(</op:operator><op:operator pos:line="236" pos:column="26">(</op:operator><name pos:line="236" pos:column="27">TabBarPlus</name> <op:operator pos:line="236" pos:column="38">*</op:operator><op:operator pos:line="236" pos:column="39">)</op:operator><op:operator pos:line="236" pos:column="40">(</op:operator><call><name><op:operator pos:line="236" pos:column="41">::</op:operator><name pos:line="236" pos:column="43">GetWindowLongPtr</name></name><argument_list pos:line="236" pos:column="59">(<argument><expr><name pos:line="236" pos:column="60">hwnd</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="66">GWL_USERDATA</name></expr></argument>)</argument_list></call><op:operator pos:line="236" pos:column="79">)</op:operator><op:operator pos:line="236" pos:column="80">)</op:operator><op:operator pos:line="236" pos:column="81">-&gt;</op:operator><call><name pos:line="236" pos:column="83">runProc</name><argument_list pos:line="236" pos:column="90">(<argument><expr><name pos:line="236" pos:column="91">hwnd</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="97">Message</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="106">wParam</name></expr></argument>, <argument><expr><name pos:line="236" pos:column="114">lParam</name></expr></argument>)</argument_list></call><op:operator pos:line="236" pos:column="121">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="237" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="238" pos:column="9">void</name></type> <name pos:line="238" pos:column="14">exchangeItemData</name><parameter_list pos:line="238" pos:column="30">(<param><decl><type><name pos:line="238" pos:column="31">POINT</name></type> <name pos:line="238" pos:column="37">point</name></decl></param>)</parameter_list>;</function_decl>


	<comment type="line" pos:line="241" pos:column="9">// it's the boss to decide if we do the ownerDraw style tab</comment>
	<decl_stmt><decl><type><specifier pos:line="242" pos:column="9">static</specifier> <name pos:line="242" pos:column="16">bool</name></type> <name pos:line="242" pos:column="21">_drawInactiveTab</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="243" pos:column="9">static</specifier> <name pos:line="243" pos:column="16">bool</name></type> <name pos:line="243" pos:column="21">_drawTopBar</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="244" pos:column="9">static</specifier> <name pos:line="244" pos:column="16">bool</name></type> <name pos:line="244" pos:column="21">_drawTabCloseButton</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="245" pos:column="9">static</specifier> <name pos:line="245" pos:column="16">bool</name></type> <name pos:line="245" pos:column="21">_isDbClk2Close</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="246" pos:column="9">static</specifier> <name pos:line="246" pos:column="16">bool</name></type> <name pos:line="246" pos:column="21">_isCtrlVertical</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="247" pos:column="9">static</specifier> <name pos:line="247" pos:column="16">bool</name></type> <name pos:line="247" pos:column="21">_isCtrlMultiLine</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="249" pos:column="9">static</specifier> <name pos:line="249" pos:column="16">COLORREF</name></type> <name pos:line="249" pos:column="25">_activeTextColour</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="250" pos:column="9">static</specifier> <name pos:line="250" pos:column="16">COLORREF</name></type> <name pos:line="250" pos:column="25">_activeTopBarFocusedColour</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="251" pos:column="9">static</specifier> <name pos:line="251" pos:column="16">COLORREF</name></type> <name pos:line="251" pos:column="25">_activeTopBarUnfocusedColour</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="252" pos:column="9">static</specifier> <name pos:line="252" pos:column="16">COLORREF</name></type> <name pos:line="252" pos:column="25">_inactiveTextColour</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="253" pos:column="9">static</specifier> <name pos:line="253" pos:column="16">COLORREF</name></type> <name pos:line="253" pos:column="25">_inactiveBgColour</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><specifier pos:line="255" pos:column="9">static</specifier> <name pos:line="255" pos:column="16">int</name></type> <name pos:line="255" pos:column="20">_nbCtrl</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="256" pos:column="9">static</specifier> <name pos:line="256" pos:column="16">HWND</name></type> <name><name pos:line="256" pos:column="21">_hwndArray</name><index pos:line="256" pos:column="31">[<expr><name pos:line="256" pos:column="32">nbCtrlMax</name></expr>]</index></name></decl>;</decl_stmt>

	<function_decl><type><name pos:line="258" pos:column="9">void</name></type> <name pos:line="258" pos:column="14">drawItem</name><parameter_list pos:line="258" pos:column="22">(<param><decl><type><name pos:line="258" pos:column="23">DRAWITEMSTRUCT</name> <type:modifier pos:line="258" pos:column="38">*</type:modifier></type><name pos:line="258" pos:column="39">pDrawItemStruct</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="259" pos:column="9">void</name></type> <name pos:line="259" pos:column="14">draggingCursor</name><parameter_list pos:line="259" pos:column="28">(<param><decl><type><name pos:line="259" pos:column="29">POINT</name></type> <name pos:line="259" pos:column="35">screenPoint</name></decl></param>)</parameter_list>;</function_decl>

	<function><type><name pos:line="261" pos:column="9">int</name></type> <name pos:line="261" pos:column="13">getTabIndexAt</name><parameter_list pos:line="261" pos:column="26">(<param><decl><type><specifier pos:line="261" pos:column="27">const</specifier> <name pos:line="261" pos:column="33">POINT</name> <type:modifier pos:line="261" pos:column="39">&amp;</type:modifier></type> <name pos:line="261" pos:column="41">p</name></decl></param>)</parameter_list> <block pos:line="261" pos:column="44">{
		<return pos:line="262" pos:column="17">return <expr><call><name pos:line="262" pos:column="24">getTabIndexAt</name><argument_list pos:line="262" pos:column="37">(<argument><expr><name><name pos:line="262" pos:column="38">p</name><op:operator pos:line="262" pos:column="39">.</op:operator><name pos:line="262" pos:column="40">x</name></name></expr></argument>, <argument><expr><name><name pos:line="262" pos:column="43">p</name><op:operator pos:line="262" pos:column="44">.</op:operator><name pos:line="262" pos:column="45">y</name></name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="263" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="265" pos:column="9">int</name></type> <name pos:line="265" pos:column="13">getTabIndexAt</name><parameter_list pos:line="265" pos:column="26">(<param><decl><type><name pos:line="265" pos:column="27">int</name></type> <name pos:line="265" pos:column="31">x</name></decl></param>, <param><decl><type><name pos:line="265" pos:column="34">int</name></type> <name pos:line="265" pos:column="38">y</name></decl></param>)</parameter_list> <block pos:line="265" pos:column="41">{
		<decl_stmt><decl><type><name pos:line="266" pos:column="17">TCHITTESTINFO</name></type> <name pos:line="266" pos:column="31">hitInfo</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="267" pos:column="17">hitInfo</name><op:operator pos:line="267" pos:column="24">.</op:operator><name pos:line="267" pos:column="25">pt</name><op:operator pos:line="267" pos:column="27">.</op:operator><name pos:line="267" pos:column="28">x</name></name> <op:operator pos:line="267" pos:column="30">=</op:operator> <name pos:line="267" pos:column="32">x</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="268" pos:column="17">hitInfo</name><op:operator pos:line="268" pos:column="24">.</op:operator><name pos:line="268" pos:column="25">pt</name><op:operator pos:line="268" pos:column="27">.</op:operator><name pos:line="268" pos:column="28">y</name></name> <op:operator pos:line="268" pos:column="30">=</op:operator> <name pos:line="268" pos:column="32">y</name></expr>;</expr_stmt>
		<return pos:line="269" pos:column="17">return <expr><call><name><op:operator pos:line="269" pos:column="24">::</op:operator><name pos:line="269" pos:column="26">SendMessage</name></name><argument_list pos:line="269" pos:column="37">(<argument><expr><name pos:line="269" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="269" pos:column="46">TCM_HITTEST</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="269" pos:column="59">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="269" pos:column="62">(</op:operator><name pos:line="269" pos:column="63">LPARAM</name><op:operator pos:line="269" pos:column="69">)</op:operator><op:operator pos:line="269" pos:column="70">&amp;</op:operator><name pos:line="269" pos:column="71">hitInfo</name></expr></argument>)</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="270" pos:column="10">;</empty_stmt>

	<function><type><name pos:line="272" pos:column="9">bool</name></type> <name pos:line="272" pos:column="14">isPointInParentZone</name><parameter_list pos:line="272" pos:column="33">(<param><decl><type><name pos:line="272" pos:column="34">POINT</name></type> <name pos:line="272" pos:column="40">screenPoint</name></decl></param>)</parameter_list> <specifier pos:line="272" pos:column="53">const</specifier> <block pos:line="272" pos:column="59">{
        <decl_stmt><decl><type><name pos:line="273" pos:column="9">RECT</name></type> <name pos:line="273" pos:column="14">parentZone</name></decl>;</decl_stmt>
        <expr_stmt><expr><call><name><op:operator pos:line="274" pos:column="9">::</op:operator><name pos:line="274" pos:column="11">GetWindowRect</name></name><argument_list pos:line="274" pos:column="24">(<argument><expr><name pos:line="274" pos:column="25">_hParent</name></expr></argument>, <argument><expr><op:operator pos:line="274" pos:column="35">&amp;</op:operator><name pos:line="274" pos:column="36">parentZone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <return pos:line="275" pos:column="13">return <expr><op:operator pos:line="275" pos:column="20">(</op:operator><op:operator pos:line="275" pos:column="21">(</op:operator><op:operator pos:line="275" pos:column="22">(</op:operator><name><name pos:line="275" pos:column="23">screenPoint</name><op:operator pos:line="275" pos:column="34">.</op:operator><name pos:line="275" pos:column="35">x</name></name> <op:operator pos:line="275" pos:column="37">&gt;=</op:operator> <name><name pos:line="275" pos:column="40">parentZone</name><op:operator pos:line="275" pos:column="50">.</op:operator><name pos:line="275" pos:column="51">left</name></name><op:operator pos:line="275" pos:column="55">)</op:operator> <op:operator pos:line="275" pos:column="57">&amp;&amp;</op:operator> <op:operator pos:line="275" pos:column="60">(</op:operator><name><name pos:line="275" pos:column="61">screenPoint</name><op:operator pos:line="275" pos:column="72">.</op:operator><name pos:line="275" pos:column="73">x</name></name> <op:operator pos:line="275" pos:column="75">&lt;=</op:operator> <name><name pos:line="275" pos:column="78">parentZone</name><op:operator pos:line="275" pos:column="88">.</op:operator><name pos:line="275" pos:column="89">right</name></name><op:operator pos:line="275" pos:column="94">)</op:operator><op:operator pos:line="275" pos:column="95">)</op:operator> <op:operator pos:line="275" pos:column="97">&amp;&amp;</op:operator>
			    <op:operator pos:line="276" pos:column="29">(</op:operator><name><name pos:line="276" pos:column="30">screenPoint</name><op:operator pos:line="276" pos:column="41">.</op:operator><name pos:line="276" pos:column="42">y</name></name> <op:operator pos:line="276" pos:column="44">&gt;=</op:operator> <name><name pos:line="276" pos:column="47">parentZone</name><op:operator pos:line="276" pos:column="57">.</op:operator><name pos:line="276" pos:column="58">top</name></name><op:operator pos:line="276" pos:column="61">)</op:operator> <op:operator pos:line="276" pos:column="63">&amp;&amp;</op:operator> <op:operator pos:line="276" pos:column="66">(</op:operator><name><name pos:line="276" pos:column="67">screenPoint</name><op:operator pos:line="276" pos:column="78">.</op:operator><name pos:line="276" pos:column="79">y</name></name> <op:operator pos:line="276" pos:column="81">&lt;=</op:operator> <name><name pos:line="276" pos:column="84">parentZone</name><op:operator pos:line="276" pos:column="94">.</op:operator><name pos:line="276" pos:column="95">bottom</name></name><op:operator pos:line="276" pos:column="101">)</op:operator><op:operator pos:line="276" pos:column="102">)</op:operator></expr>;</return>
    }</block></function><empty_stmt pos:line="277" pos:column="6">;</empty_stmt>
</protected>}</block>;</class>

<cpp:endif pos:line="280" pos:column="1">#<cpp:directive pos:line="280" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="280" pos:column="8">// TAB_BAR_H</comment>
</unit>
