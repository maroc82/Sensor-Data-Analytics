<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\ScintillaBase.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file ScintillaBase.h
 ** Defines an enhanced subclass of Editor with calltips, autocomplete and context menu.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2002 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">SCINTILLABASE_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">SCINTILLABASE_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef</cpp:directive> <name pos:line="15" pos:column="8">SCI_LEXER</name></cpp:ifdef>
<class_decl pos:line="16" pos:column="1">class <name pos:line="16" pos:column="7">LexState</name>;</class_decl>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen" pos:line="19" pos:column="1">/**
 */</comment>
<class pos:line="21" pos:column="1">class <name pos:line="21" pos:column="7">ScintillaBase</name> <super pos:line="21" pos:column="21">: <specifier pos:line="21" pos:column="23">public</specifier> <name pos:line="21" pos:column="30">Editor</name></super> <block pos:line="21" pos:column="37">{<private type="default" pos:line="21" pos:column="38">
	<comment type="line" pos:line="22" pos:column="9">// Private so ScintillaBase objects can not be copied</comment>
	<constructor_decl><name pos:line="23" pos:column="9">ScintillaBase</name><parameter_list pos:line="23" pos:column="22">(<param><decl><type><specifier pos:line="23" pos:column="23">const</specifier></type> <name pos:line="23" pos:column="29">ScintillaBase</name> <type:modifier pos:line="23" pos:column="43">&amp;</type:modifier></decl></param>)</parameter_list>;</constructor_decl>
	<function_decl><type><name pos:line="24" pos:column="9">ScintillaBase</name> <type:modifier pos:line="24" pos:column="23">&amp;</type:modifier></type><name pos:line="24" pos:column="24">operator=</name><parameter_list pos:line="24" pos:column="33">(<param><decl><type><specifier pos:line="24" pos:column="34">const</specifier></type> <name pos:line="24" pos:column="40">ScintillaBase</name> <type:modifier pos:line="24" pos:column="54">&amp;</type:modifier></decl></param>)</parameter_list>;</function_decl>

</private><protected pos:line="26" pos:column="1">protected:
	<comment type="block" format="doxygen" pos:line="27" pos:column="9">/** Enumeration of commands and child windows. */</comment>
	<enum pos:line="28" pos:column="9">enum <block pos:line="28" pos:column="14">{
		<decl><name pos:line="29" pos:column="17">idCallTip</name><init pos:line="29" pos:column="26">=<expr><lit:literal type="number" pos:line="29" pos:column="27">1</lit:literal></expr></init></decl><op:operator pos:line="29" pos:column="28">,</op:operator>
		<decl><name pos:line="30" pos:column="17">idAutoComplete</name><init pos:line="30" pos:column="31">=<expr><lit:literal type="number" pos:line="30" pos:column="32">2</lit:literal></expr></init></decl><op:operator pos:line="30" pos:column="33">,</op:operator>

		<decl><name pos:line="32" pos:column="17">idcmdUndo</name><init pos:line="32" pos:column="26">=<expr><lit:literal type="number" pos:line="32" pos:column="27">10</lit:literal></expr></init></decl><op:operator pos:line="32" pos:column="29">,</op:operator>
		<decl><name pos:line="33" pos:column="17">idcmdRedo</name><init pos:line="33" pos:column="26">=<expr><lit:literal type="number" pos:line="33" pos:column="27">11</lit:literal></expr></init></decl><op:operator pos:line="33" pos:column="29">,</op:operator>
		<decl><name pos:line="34" pos:column="17">idcmdCut</name><init pos:line="34" pos:column="25">=<expr><lit:literal type="number" pos:line="34" pos:column="26">12</lit:literal></expr></init></decl><op:operator pos:line="34" pos:column="28">,</op:operator>
		<decl><name pos:line="35" pos:column="17">idcmdCopy</name><init pos:line="35" pos:column="26">=<expr><lit:literal type="number" pos:line="35" pos:column="27">13</lit:literal></expr></init></decl><op:operator pos:line="35" pos:column="29">,</op:operator>
		<decl><name pos:line="36" pos:column="17">idcmdPaste</name><init pos:line="36" pos:column="27">=<expr><lit:literal type="number" pos:line="36" pos:column="28">14</lit:literal></expr></init></decl><op:operator pos:line="36" pos:column="30">,</op:operator>
		<decl><name pos:line="37" pos:column="17">idcmdDelete</name><init pos:line="37" pos:column="28">=<expr><lit:literal type="number" pos:line="37" pos:column="29">15</lit:literal></expr></init></decl><op:operator pos:line="37" pos:column="31">,</op:operator>
		<decl><name pos:line="38" pos:column="17">idcmdSelectAll</name><init pos:line="38" pos:column="31">=<expr><lit:literal type="number" pos:line="38" pos:column="32">16</lit:literal></expr></init></decl>
	}</block>;</enum>

	<decl_stmt><decl><type><name pos:line="41" pos:column="9">bool</name></type> <name pos:line="41" pos:column="14">displayPopupMenu</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">Menu</name></type> <name pos:line="42" pos:column="14">popup</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="43" pos:column="9">AutoComplete</name></type> <name pos:line="43" pos:column="22">ac</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="45" pos:column="9">CallTip</name></type> <name pos:line="45" pos:column="17">ct</name></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="47" pos:column="9">int</name></type> <name pos:line="47" pos:column="13">listType</name></decl>;</decl_stmt>			<comment type="line" format="doxygen" pos:line="47" pos:column="41">///&lt; 0 is an autocomplete list</comment>
	<decl_stmt><decl><type><name pos:line="48" pos:column="9">int</name></type> <name pos:line="48" pos:column="13">maxListWidth</name></decl>;</decl_stmt>		<comment type="line" format="doxygen" pos:line="48" pos:column="41">/// Maximum width of list, in average character widths</comment>

<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef</cpp:directive> <name pos:line="50" pos:column="8">SCI_LEXER</name></cpp:ifdef>
	<function_decl><type><name pos:line="51" pos:column="9">LexState</name> <type:modifier pos:line="51" pos:column="18">*</type:modifier></type><name pos:line="51" pos:column="19">DocumentLexState</name><parameter_list pos:line="51" pos:column="35">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="52" pos:column="9">void</name></type> <name pos:line="52" pos:column="14">SetLexer</name><parameter_list pos:line="52" pos:column="22">(<param><decl><type><name pos:line="52" pos:column="23">uptr_t</name></type> <name pos:line="52" pos:column="30">wParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="53" pos:column="9">void</name></type> <name pos:line="53" pos:column="14">SetLexerLanguage</name><parameter_list pos:line="53" pos:column="30">(<param><decl><type><specifier pos:line="53" pos:column="31">const</specifier> <name pos:line="53" pos:column="37">char</name> <type:modifier pos:line="53" pos:column="42">*</type:modifier></type><name pos:line="53" pos:column="43">languageName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="54" pos:column="9">void</name></type> <name pos:line="54" pos:column="14">Colourise</name><parameter_list pos:line="54" pos:column="23">(<param><decl><type><name pos:line="54" pos:column="24">int</name></type> <name pos:line="54" pos:column="28">start</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="35">int</name></type> <name pos:line="54" pos:column="39">end</name></decl></param>)</parameter_list>;</function_decl>
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif</cpp:directive></cpp:endif>

	<constructor_decl><name pos:line="57" pos:column="9">ScintillaBase</name><parameter_list pos:line="57" pos:column="22">()</parameter_list>;</constructor_decl>
	<destructor_decl><specifier pos:line="58" pos:column="9">virtual</specifier> <name pos:line="58" pos:column="17">~<name pos:line="58" pos:column="18">ScintillaBase</name></name><parameter_list pos:line="58" pos:column="31">()</parameter_list>;</destructor_decl>
	<function_decl><type><specifier pos:line="59" pos:column="9">virtual</specifier> <name pos:line="59" pos:column="17">void</name></type> <name pos:line="59" pos:column="22">Initialise</name><parameter_list pos:line="59" pos:column="32">()</parameter_list> = <lit:literal type="number" pos:line="59" pos:column="37">0</lit:literal>;</function_decl>
	<function_decl><type><specifier pos:line="60" pos:column="9">virtual</specifier> <name pos:line="60" pos:column="17">void</name></type> <name pos:line="60" pos:column="22">Finalise</name><parameter_list pos:line="60" pos:column="30">()</parameter_list> = <lit:literal type="number" pos:line="60" pos:column="35">0</lit:literal>;</function_decl>

	<function_decl><type><specifier pos:line="62" pos:column="9">virtual</specifier> <name pos:line="62" pos:column="17">void</name></type> <name pos:line="62" pos:column="22">RefreshColourPalette</name><parameter_list pos:line="62" pos:column="42">(<param><decl><type><name pos:line="62" pos:column="43">Palette</name> <type:modifier pos:line="62" pos:column="51">&amp;</type:modifier></type><name pos:line="62" pos:column="52">pal</name></decl></param>, <param><decl><type><name pos:line="62" pos:column="57">bool</name></type> <name pos:line="62" pos:column="62">want</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><specifier pos:line="64" pos:column="9">virtual</specifier> <name pos:line="64" pos:column="17">void</name></type> <name pos:line="64" pos:column="22">AddCharUTF</name><parameter_list pos:line="64" pos:column="32">(<param><decl><type><name pos:line="64" pos:column="33">char</name> <type:modifier pos:line="64" pos:column="38">*</type:modifier></type><name pos:line="64" pos:column="39">s</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="42">unsigned</name> <name pos:line="64" pos:column="51">int</name></type> <name pos:line="64" pos:column="55">len</name></decl></param>, <param><decl><type><name pos:line="64" pos:column="60">bool</name></type> <name pos:line="64" pos:column="65">treatAsDBCS</name><init pos:line="64" pos:column="76">=<expr><lit:literal type="boolean" pos:line="64" pos:column="77">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="65" pos:column="9">void</name></type> <name pos:line="65" pos:column="14">Command</name><parameter_list pos:line="65" pos:column="21">(<param><decl><type><name pos:line="65" pos:column="22">int</name></type> <name pos:line="65" pos:column="26">cmdId</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="66" pos:column="9">virtual</specifier> <name pos:line="66" pos:column="17">void</name></type> <name pos:line="66" pos:column="22">CancelModes</name><parameter_list pos:line="66" pos:column="33">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="67" pos:column="9">virtual</specifier> <name pos:line="67" pos:column="17">int</name></type> <name pos:line="67" pos:column="21">KeyCommand</name><parameter_list pos:line="67" pos:column="31">(<param><decl><type><name pos:line="67" pos:column="32">unsigned</name> <name pos:line="67" pos:column="41">int</name></type> <name pos:line="67" pos:column="45">iMessage</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="69" pos:column="9">void</name></type> <name pos:line="69" pos:column="14">AutoCompleteStart</name><parameter_list pos:line="69" pos:column="31">(<param><decl><type><name pos:line="69" pos:column="32">int</name></type> <name pos:line="69" pos:column="36">lenEntered</name></decl></param>, <param><decl><type><specifier pos:line="69" pos:column="48">const</specifier> <name pos:line="69" pos:column="54">char</name> <type:modifier pos:line="69" pos:column="59">*</type:modifier></type><name pos:line="69" pos:column="60">list</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="70" pos:column="9">void</name></type> <name pos:line="70" pos:column="14">AutoCompleteCancel</name><parameter_list pos:line="70" pos:column="32">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="71" pos:column="9">void</name></type> <name pos:line="71" pos:column="14">AutoCompleteMove</name><parameter_list pos:line="71" pos:column="30">(<param><decl><type><name pos:line="71" pos:column="31">int</name></type> <name pos:line="71" pos:column="35">delta</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="72" pos:column="9">int</name></type> <name pos:line="72" pos:column="13">AutoCompleteGetCurrent</name><parameter_list pos:line="72" pos:column="35">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="73" pos:column="9">int</name></type> <name pos:line="73" pos:column="13">AutoCompleteGetCurrentText</name><parameter_list pos:line="73" pos:column="39">(<param><decl><type><name pos:line="73" pos:column="40">char</name> <type:modifier pos:line="73" pos:column="45">*</type:modifier></type><name pos:line="73" pos:column="46">buffer</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="74" pos:column="9">void</name></type> <name pos:line="74" pos:column="14">AutoCompleteCharacterAdded</name><parameter_list pos:line="74" pos:column="40">(<param><decl><type><name pos:line="74" pos:column="41">char</name></type> <name pos:line="74" pos:column="46">ch</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="75" pos:column="9">void</name></type> <name pos:line="75" pos:column="14">AutoCompleteCharacterDeleted</name><parameter_list pos:line="75" pos:column="42">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="76" pos:column="9">void</name></type> <name pos:line="76" pos:column="14">AutoCompleteCompleted</name><parameter_list pos:line="76" pos:column="35">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="77" pos:column="9">void</name></type> <name pos:line="77" pos:column="14">AutoCompleteMoveToCurrentWord</name><parameter_list pos:line="77" pos:column="43">()</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="78" pos:column="9">static</specifier> <name pos:line="78" pos:column="16">void</name></type> <name pos:line="78" pos:column="21">AutoCompleteDoubleClick</name><parameter_list pos:line="78" pos:column="44">(<param><decl><type><name pos:line="78" pos:column="45">void</name> <type:modifier pos:line="78" pos:column="50">*</type:modifier></type><name pos:line="78" pos:column="51">p</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="80" pos:column="9">void</name></type> <name pos:line="80" pos:column="14">CallTipClick</name><parameter_list pos:line="80" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="81" pos:column="9">void</name></type> <name pos:line="81" pos:column="14">CallTipShow</name><parameter_list pos:line="81" pos:column="25">(<param><decl><type><name pos:line="81" pos:column="26">Point</name></type> <name pos:line="81" pos:column="32">pt</name></decl></param>, <param><decl><type><specifier pos:line="81" pos:column="36">const</specifier> <name pos:line="81" pos:column="42">char</name> <type:modifier pos:line="81" pos:column="47">*</type:modifier></type><name pos:line="81" pos:column="48">defn</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="82" pos:column="9">virtual</specifier> <name pos:line="82" pos:column="17">void</name></type> <name pos:line="82" pos:column="22">CreateCallTipWindow</name><parameter_list pos:line="82" pos:column="41">(<param><decl><type><name pos:line="82" pos:column="42">PRectangle</name></type> <name pos:line="82" pos:column="53">rc</name></decl></param>)</parameter_list> = <lit:literal type="number" pos:line="82" pos:column="59">0</lit:literal>;</function_decl>

	<function_decl><type><specifier pos:line="84" pos:column="9">virtual</specifier> <name pos:line="84" pos:column="17">void</name></type> <name pos:line="84" pos:column="22">AddToPopUp</name><parameter_list pos:line="84" pos:column="32">(<param><decl><type><specifier pos:line="84" pos:column="33">const</specifier> <name pos:line="84" pos:column="39">char</name> <type:modifier pos:line="84" pos:column="44">*</type:modifier></type><name pos:line="84" pos:column="45">label</name></decl></param>, <param><decl><type><name pos:line="84" pos:column="52">int</name></type> <name pos:line="84" pos:column="56">cmd</name><init pos:line="84" pos:column="59">=<expr><lit:literal type="number" pos:line="84" pos:column="60">0</lit:literal></expr></init></decl></param>, <name pos:line="84" pos:column="63">bool</name> <name pos:line="84" pos:column="68">enabled</name><op:operator pos:line="84" pos:column="75">=</op:operator><lit:literal type="boolean" pos:line="84" pos:column="76">true</lit:literal>)</parameter_list> = <lit:literal type="number" pos:line="84" pos:column="84">0</lit:literal>;</function_decl>
	<function_decl><type><name pos:line="85" pos:column="9">void</name></type> <name pos:line="85" pos:column="14">ContextMenu</name><parameter_list pos:line="85" pos:column="25">(<param><decl><type><name pos:line="85" pos:column="26">Point</name></type> <name pos:line="85" pos:column="32">pt</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><specifier pos:line="87" pos:column="9">virtual</specifier> <name pos:line="87" pos:column="17">void</name></type> <name pos:line="87" pos:column="22">ButtonDown</name><parameter_list pos:line="87" pos:column="32">(<param><decl><type><name pos:line="87" pos:column="33">Point</name></type> <name pos:line="87" pos:column="39">pt</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="43">unsigned</name> <name pos:line="87" pos:column="52">int</name></type> <name pos:line="87" pos:column="56">curTime</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="65">bool</name></type> <name pos:line="87" pos:column="70">shift</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="77">bool</name></type> <name pos:line="87" pos:column="82">ctrl</name></decl></param>, <param><decl><type><name pos:line="87" pos:column="88">bool</name></type> <name pos:line="87" pos:column="93">alt</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="89" pos:column="9">void</name></type> <name pos:line="89" pos:column="14">NotifyStyleToNeeded</name><parameter_list pos:line="89" pos:column="33">(<param><decl><type><name pos:line="89" pos:column="34">int</name></type> <name pos:line="89" pos:column="38">endStyleNeeded</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="90" pos:column="9">void</name></type> <name pos:line="90" pos:column="14">NotifyLexerChanged</name><parameter_list pos:line="90" pos:column="32">(<param><decl><type><name pos:line="90" pos:column="33">Document</name> <type:modifier pos:line="90" pos:column="42">*</type:modifier></type><name pos:line="90" pos:column="43">doc</name></decl></param>, <param><decl><type><name pos:line="90" pos:column="48">void</name> <type:modifier pos:line="90" pos:column="53">*</type:modifier></type><name pos:line="90" pos:column="54">userData</name></decl></param>)</parameter_list>;</function_decl>

</protected><public pos:line="92" pos:column="1">public:
	<comment type="line" pos:line="93" pos:column="9">// Public so scintilla_send_message can use it</comment>
	<function_decl><type><specifier pos:line="94" pos:column="9">virtual</specifier> <name pos:line="94" pos:column="17">sptr_t</name></type> <name pos:line="94" pos:column="24">WndProc</name><parameter_list pos:line="94" pos:column="31">(<param><decl><type><name pos:line="94" pos:column="32">unsigned</name> <name pos:line="94" pos:column="41">int</name></type> <name pos:line="94" pos:column="45">iMessage</name></decl></param>, <param><decl><type><name pos:line="94" pos:column="55">uptr_t</name></type> <name pos:line="94" pos:column="62">wParam</name></decl></param>, <param><decl><type><name pos:line="94" pos:column="70">sptr_t</name></type> <name pos:line="94" pos:column="77">lParam</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="97" pos:column="1">#<cpp:directive pos:line="97" pos:column="2">ifdef</cpp:directive> <name pos:line="97" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="99" pos:column="1">#<cpp:directive pos:line="99" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
