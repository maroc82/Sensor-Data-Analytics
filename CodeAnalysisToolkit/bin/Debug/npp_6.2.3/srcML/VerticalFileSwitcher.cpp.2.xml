<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\VerticalFileSwitcher\VerticalFileSwitcher.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"VerticalFileSwitcher.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"menuCmdID.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="33" pos:column="1">int</name> <name pos:line="33" pos:column="5">CALLBACK</name></type> <name pos:line="33" pos:column="14">ListViewCompareProc</name><parameter_list pos:line="33" pos:column="33">(<param><decl><type><name pos:line="33" pos:column="34">LPARAM</name></type> <name pos:line="33" pos:column="41">lParam1</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="50">LPARAM</name></type> <name pos:line="33" pos:column="57">lParam2</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="66">LPARAM</name></type> <name pos:line="33" pos:column="73">lParamSort</name></decl></param>)</parameter_list>
<block pos:line="34" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="35" pos:column="9">LPNMLISTVIEW</name></type> <name pos:line="35" pos:column="22">pnmListView</name> <init pos:line="35" pos:column="34">= <expr><op:operator pos:line="35" pos:column="36">(</op:operator><name pos:line="35" pos:column="37">LPNMLISTVIEW</name><op:operator pos:line="35" pos:column="49">)</op:operator><name pos:line="35" pos:column="50">lParamSort</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="36" pos:column="9">TCHAR</name></type> <name><name pos:line="36" pos:column="15">str1</name><index pos:line="36" pos:column="19">[<expr><name pos:line="36" pos:column="20">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="37" pos:column="9">TCHAR</name></type> <name><name pos:line="37" pos:column="15">str2</name><index pos:line="37" pos:column="19">[<expr><name pos:line="37" pos:column="20">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="39" pos:column="9">ListView_GetItemText</name><argument_list pos:line="39" pos:column="29">(<argument><expr><name><name pos:line="39" pos:column="30">pnmListView</name><op:operator pos:line="39" pos:column="41">-&gt;</op:operator><name pos:line="39" pos:column="43">hdr</name><op:operator pos:line="39" pos:column="46">.</op:operator><name pos:line="39" pos:column="47">hwndFrom</name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="57">lParam1</name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="66">pnmListView</name><op:operator pos:line="39" pos:column="77">-&gt;</op:operator><name pos:line="39" pos:column="79">iSubItem</name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="89">str1</name></expr></argument>, <argument><expr><sizeof pos:line="39" pos:column="95">sizeof<argument_list pos:line="39" pos:column="101">(<argument><expr><name pos:line="39" pos:column="102">str1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="40" pos:column="9">ListView_GetItemText</name><argument_list pos:line="40" pos:column="29">(<argument><expr><name><name pos:line="40" pos:column="30">pnmListView</name><op:operator pos:line="40" pos:column="41">-&gt;</op:operator><name pos:line="40" pos:column="43">hdr</name><op:operator pos:line="40" pos:column="46">.</op:operator><name pos:line="40" pos:column="47">hwndFrom</name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="57">lParam2</name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="66">pnmListView</name><op:operator pos:line="40" pos:column="77">-&gt;</op:operator><name pos:line="40" pos:column="79">iSubItem</name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="89">str2</name></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="95">sizeof<argument_list pos:line="40" pos:column="101">(<argument><expr><name pos:line="40" pos:column="102">str2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="42" pos:column="9">LVCOLUMN</name></type> <name pos:line="42" pos:column="18">lvc</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="43" pos:column="9">lvc</name><op:operator pos:line="43" pos:column="12">.</op:operator><name pos:line="43" pos:column="13">mask</name></name> <op:operator pos:line="43" pos:column="18">=</op:operator> <name pos:line="43" pos:column="20">LVCF_FMT</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="44" pos:column="9">::</op:operator><name pos:line="44" pos:column="11">SendMessage</name></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name><name pos:line="44" pos:column="23">pnmListView</name><op:operator pos:line="44" pos:column="34">-&gt;</op:operator><name pos:line="44" pos:column="36">hdr</name><op:operator pos:line="44" pos:column="39">.</op:operator><name pos:line="44" pos:column="40">hwndFrom</name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="50">LVM_GETCOLUMN</name></expr></argument>, <argument><expr><op:operator pos:line="44" pos:column="65">(</op:operator><name pos:line="44" pos:column="66">WPARAM</name><op:operator pos:line="44" pos:column="72">)</op:operator><name><name pos:line="44" pos:column="73">pnmListView</name><op:operator pos:line="44" pos:column="84">-&gt;</op:operator><name pos:line="44" pos:column="86">iSubItem</name></name></expr></argument>, <argument><expr><op:operator pos:line="44" pos:column="96">(</op:operator><name pos:line="44" pos:column="97">LPARAM</name><op:operator pos:line="44" pos:column="103">)</op:operator><op:operator pos:line="44" pos:column="104">&amp;</op:operator><name pos:line="44" pos:column="105">lvc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="45" pos:column="9">bool</name></type> <name pos:line="45" pos:column="14">isDirectionUp</name> <init pos:line="45" pos:column="28">= <expr><op:operator pos:line="45" pos:column="30">(</op:operator><name pos:line="45" pos:column="31">HDF_SORTUP</name> <op:operator pos:line="45" pos:column="42">&amp;</op:operator> <name><name pos:line="45" pos:column="44">lvc</name><op:operator pos:line="45" pos:column="47">.</op:operator><name pos:line="45" pos:column="48">fmt</name></name><op:operator pos:line="45" pos:column="51">)</op:operator> <op:operator pos:line="45" pos:column="53">!=</op:operator> <lit:literal type="number" pos:line="45" pos:column="56">0</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="47" pos:column="9">int</name></type> <name pos:line="47" pos:column="13">result</name> <init pos:line="47" pos:column="20">= <expr><call><name pos:line="47" pos:column="22">lstrcmp</name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">str1</name></expr></argument>, <argument><expr><name pos:line="47" pos:column="36">str2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">isDirectionUp</name></expr>)</condition><then pos:line="49" pos:column="27">
		<return pos:line="50" pos:column="17">return <expr><name pos:line="50" pos:column="24">result</name></expr>;</return></then></if>

	<return pos:line="52" pos:column="9">return <expr><op:operator pos:line="52" pos:column="16">(</op:operator><lit:literal type="number" pos:line="52" pos:column="17">0</lit:literal> <op:operator pos:line="52" pos:column="19">-</op:operator> <name pos:line="52" pos:column="21">result</name><op:operator pos:line="52" pos:column="27">)</op:operator></expr>;</return>
}</block></function><empty_stmt pos:line="53" pos:column="2">;</empty_stmt>

<function><type><name pos:line="55" pos:column="1">BOOL</name> <name pos:line="55" pos:column="6">CALLBACK</name></type> <name><name pos:line="55" pos:column="15">VerticalFileSwitcher</name><op:operator pos:line="55" pos:column="35">::</op:operator><name pos:line="55" pos:column="37">run_dlgProc</name></name><parameter_list pos:line="55" pos:column="48">(<param><decl><type><name pos:line="55" pos:column="49">UINT</name></type> <name pos:line="55" pos:column="54">message</name></decl></param>, <param><decl><type><name pos:line="55" pos:column="63">WPARAM</name></type> <name pos:line="55" pos:column="70">wParam</name></decl></param>, <param><decl><type><name pos:line="55" pos:column="78">LPARAM</name></type> <name pos:line="55" pos:column="85">lParam</name></decl></param>)</parameter_list>
<block pos:line="56" pos:column="1">{
    <switch pos:line="57" pos:column="5">switch <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">message</name></expr>)</condition>
    <block pos:line="58" pos:column="5">{
        <case pos:line="59" pos:column="9">case <expr><name pos:line="59" pos:column="14">WM_INITDIALOG</name></expr> :
        <block pos:line="60" pos:column="9">{
			<expr_stmt><expr><call><name><name pos:line="61" pos:column="25">_fileListView</name><op:operator pos:line="61" pos:column="38">.</op:operator><name pos:line="61" pos:column="39">init</name></name><argument_list pos:line="61" pos:column="43">(<argument><expr><name pos:line="61" pos:column="44">_hInst</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="52">_hSelf</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="60">_hImaLst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="62" pos:column="25">_fileListView</name><op:operator pos:line="62" pos:column="38">.</op:operator><name pos:line="62" pos:column="39">insertColumn</name></name><argument_list pos:line="62" pos:column="51">(<argument><expr><call><name pos:line="62" pos:column="52">TEXT</name><argument_list pos:line="62" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="62" pos:column="57">"Name"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="62" pos:column="66">150</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="62" pos:column="71">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="63" pos:column="25">_fileListView</name><op:operator pos:line="63" pos:column="38">.</op:operator><name pos:line="63" pos:column="39">insertColumn</name></name><argument_list pos:line="63" pos:column="51">(<argument><expr><call><name pos:line="63" pos:column="52">TEXT</name><argument_list pos:line="63" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="63" pos:column="57">"Ext."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="63" pos:column="66">50</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="63" pos:column="70">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="64" pos:column="25">_fileListView</name><op:operator pos:line="64" pos:column="38">.</op:operator><name pos:line="64" pos:column="39">initList</name></name><argument_list pos:line="64" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="65" pos:column="25">_fileListView</name><op:operator pos:line="65" pos:column="38">.</op:operator><name pos:line="65" pos:column="39">display</name></name><argument_list pos:line="65" pos:column="46">()</argument_list></call></expr>;</expr_stmt>

            <return pos:line="67" pos:column="13">return <expr><name pos:line="67" pos:column="20">TRUE</name></expr>;</return>
        }</block>

		</case><case pos:line="70" pos:column="17">case <expr><name pos:line="70" pos:column="22">WM_NOTIFY</name></expr>:
		<block pos:line="71" pos:column="17">{
			<switch pos:line="72" pos:column="25">switch <condition pos:line="72" pos:column="32">(<expr><op:operator pos:line="72" pos:column="33">(</op:operator><op:operator pos:line="72" pos:column="34">(</op:operator><name pos:line="72" pos:column="35">LPNMHDR</name><op:operator pos:line="72" pos:column="42">)</op:operator><name pos:line="72" pos:column="43">lParam</name><op:operator pos:line="72" pos:column="49">)</op:operator><op:operator pos:line="72" pos:column="50">-&gt;</op:operator><name pos:line="72" pos:column="52">code</name></expr>)</condition>
			<block pos:line="73" pos:column="25">{
				<case pos:line="74" pos:column="33">case <expr><name pos:line="74" pos:column="38">NM_DBLCLK</name></expr>:
				<block pos:line="75" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="76" pos:column="41">LPNMITEMACTIVATE</name></type> <name pos:line="76" pos:column="58">lpnmitem</name> <init pos:line="76" pos:column="67">= <expr><op:operator pos:line="76" pos:column="69">(</op:operator><name pos:line="76" pos:column="70">LPNMITEMACTIVATE</name><op:operator pos:line="76" pos:column="86">)</op:operator> <name pos:line="76" pos:column="88">lParam</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="77" pos:column="41">int</name></type> <name pos:line="77" pos:column="45">i</name> <init pos:line="77" pos:column="47">= <expr><name><name pos:line="77" pos:column="49">lpnmitem</name><op:operator pos:line="77" pos:column="57">-&gt;</op:operator><name pos:line="77" pos:column="59">iItem</name></name></expr></init></decl>;</decl_stmt>
					<if pos:line="78" pos:column="41">if <condition pos:line="78" pos:column="44">(<expr><name pos:line="78" pos:column="45">i</name> <op:operator pos:line="78" pos:column="47">==</op:operator> <op:operator pos:line="78" pos:column="50">-</op:operator><lit:literal type="number" pos:line="78" pos:column="51">1</lit:literal></expr>)</condition><then pos:line="78" pos:column="53">
					<block pos:line="79" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="80" pos:column="49">::</op:operator><name pos:line="80" pos:column="51">SendMessage</name></name><argument_list pos:line="80" pos:column="62">(<argument><expr><name pos:line="80" pos:column="63">_hParent</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="73">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="85">IDM_FILE_NEW</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="80" pos:column="99">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
					<return pos:line="82" pos:column="41">return <expr><name pos:line="82" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="85" pos:column="33">case <expr><name pos:line="85" pos:column="38">NM_CLICK</name></expr>:
				<block pos:line="86" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="87" pos:column="41">LPNMITEMACTIVATE</name></type> <name pos:line="87" pos:column="58">lpnmitem</name> <init pos:line="87" pos:column="67">= <expr><op:operator pos:line="87" pos:column="69">(</op:operator><name pos:line="87" pos:column="70">LPNMITEMACTIVATE</name><op:operator pos:line="87" pos:column="86">)</op:operator> <name pos:line="87" pos:column="88">lParam</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="88" pos:column="41">int</name></type> <name pos:line="88" pos:column="45">nbItem</name> <init pos:line="88" pos:column="52">= <expr><call><name pos:line="88" pos:column="54">ListView_GetItemCount</name><argument_list pos:line="88" pos:column="75">(<argument><expr><call><name><name pos:line="88" pos:column="76">_fileListView</name><op:operator pos:line="88" pos:column="89">.</op:operator><name pos:line="88" pos:column="90">getHSelf</name></name><argument_list pos:line="88" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="89" pos:column="41">int</name></type> <name pos:line="89" pos:column="45">i</name> <init pos:line="89" pos:column="47">= <expr><name><name pos:line="89" pos:column="49">lpnmitem</name><op:operator pos:line="89" pos:column="57">-&gt;</op:operator><name pos:line="89" pos:column="59">iItem</name></name></expr></init></decl>;</decl_stmt>
					<if pos:line="90" pos:column="41">if <condition pos:line="90" pos:column="44">(<expr><name pos:line="90" pos:column="45">i</name> <op:operator pos:line="90" pos:column="47">==</op:operator> <op:operator pos:line="90" pos:column="50">-</op:operator><lit:literal type="number" pos:line="90" pos:column="51">1</lit:literal> <op:operator pos:line="90" pos:column="53">||</op:operator> <name pos:line="90" pos:column="56">i</name> <op:operator pos:line="90" pos:column="58">&gt;=</op:operator> <name pos:line="90" pos:column="61">nbItem</name></expr>)</condition><then pos:line="90" pos:column="68">
						<return pos:line="91" pos:column="49">return <expr><name pos:line="91" pos:column="56">TRUE</name></expr>;</return></then></if>

					<decl_stmt><decl><type><name pos:line="93" pos:column="41">LVITEM</name></type> <name pos:line="93" pos:column="48">item</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="94" pos:column="41">item</name><op:operator pos:line="94" pos:column="45">.</op:operator><name pos:line="94" pos:column="46">mask</name></name> <op:operator pos:line="94" pos:column="51">=</op:operator> <name pos:line="94" pos:column="53">LVIF_PARAM</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="95" pos:column="41">item</name><op:operator pos:line="95" pos:column="45">.</op:operator><name pos:line="95" pos:column="46">iItem</name></name> <op:operator pos:line="95" pos:column="52">=</op:operator> <name pos:line="95" pos:column="54">i</name></expr>;</expr_stmt>	
					<expr_stmt><expr><call><name pos:line="96" pos:column="41">ListView_GetItem</name><argument_list pos:line="96" pos:column="57">(<argument><expr><op:operator pos:line="96" pos:column="58">(</op:operator><op:operator pos:line="96" pos:column="59">(</op:operator><name pos:line="96" pos:column="60">LPNMHDR</name><op:operator pos:line="96" pos:column="67">)</op:operator><name pos:line="96" pos:column="68">lParam</name><op:operator pos:line="96" pos:column="74">)</op:operator><op:operator pos:line="96" pos:column="75">-&gt;</op:operator><name pos:line="96" pos:column="77">hwndFrom</name></expr></argument>, <argument><expr><op:operator pos:line="96" pos:column="87">&amp;</op:operator><name pos:line="96" pos:column="88">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="97" pos:column="41">TaskLstFnStatus</name> <type:modifier pos:line="97" pos:column="57">*</type:modifier></type><name pos:line="97" pos:column="58">tlfs</name> <init pos:line="97" pos:column="63">= <expr><op:operator pos:line="97" pos:column="65">(</op:operator><name pos:line="97" pos:column="66">TaskLstFnStatus</name> <op:operator pos:line="97" pos:column="82">*</op:operator><op:operator pos:line="97" pos:column="83">)</op:operator><name><name pos:line="97" pos:column="84">item</name><op:operator pos:line="97" pos:column="88">.</op:operator><name pos:line="97" pos:column="89">lParam</name></name></expr></init></decl>;</decl_stmt>

					<expr_stmt><expr><call><name pos:line="99" pos:column="41">activateDoc</name><argument_list pos:line="99" pos:column="52">(<argument><expr><name pos:line="99" pos:column="53">tlfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="100" pos:column="41">return <expr><name pos:line="100" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="103" pos:column="33">case <expr><name pos:line="103" pos:column="38">NM_RCLICK</name></expr> :
				<block pos:line="104" pos:column="33">{
					<comment type="line" pos:line="105" pos:column="41">// Switch to the right document</comment>
					<decl_stmt><decl><type><name pos:line="106" pos:column="41">LPNMITEMACTIVATE</name></type> <name pos:line="106" pos:column="58">lpnmitem</name> <init pos:line="106" pos:column="67">= <expr><op:operator pos:line="106" pos:column="69">(</op:operator><name pos:line="106" pos:column="70">LPNMITEMACTIVATE</name><op:operator pos:line="106" pos:column="86">)</op:operator> <name pos:line="106" pos:column="88">lParam</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="107" pos:column="41">int</name></type> <name pos:line="107" pos:column="45">nbItem</name> <init pos:line="107" pos:column="52">= <expr><call><name pos:line="107" pos:column="54">ListView_GetItemCount</name><argument_list pos:line="107" pos:column="75">(<argument><expr><call><name><name pos:line="107" pos:column="76">_fileListView</name><op:operator pos:line="107" pos:column="89">.</op:operator><name pos:line="107" pos:column="90">getHSelf</name></name><argument_list pos:line="107" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="108" pos:column="41">int</name></type> <name pos:line="108" pos:column="45">i</name> <init pos:line="108" pos:column="47">= <expr><name><name pos:line="108" pos:column="49">lpnmitem</name><op:operator pos:line="108" pos:column="57">-&gt;</op:operator><name pos:line="108" pos:column="59">iItem</name></name></expr></init></decl>;</decl_stmt>
					<if pos:line="109" pos:column="41">if <condition pos:line="109" pos:column="44">(<expr><name pos:line="109" pos:column="45">i</name> <op:operator pos:line="109" pos:column="47">==</op:operator> <op:operator pos:line="109" pos:column="50">-</op:operator><lit:literal type="number" pos:line="109" pos:column="51">1</lit:literal> <op:operator pos:line="109" pos:column="53">||</op:operator> <name pos:line="109" pos:column="56">i</name> <op:operator pos:line="109" pos:column="58">&gt;=</op:operator> <name pos:line="109" pos:column="61">nbItem</name></expr>)</condition><then pos:line="109" pos:column="68">
 						<return pos:line="110" pos:column="49">return <expr><name pos:line="110" pos:column="56">TRUE</name></expr>;</return></then></if>

					<decl_stmt><decl><type><name pos:line="112" pos:column="41">LVITEM</name></type> <name pos:line="112" pos:column="48">item</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="113" pos:column="41">item</name><op:operator pos:line="113" pos:column="45">.</op:operator><name pos:line="113" pos:column="46">mask</name></name> <op:operator pos:line="113" pos:column="51">=</op:operator> <name pos:line="113" pos:column="53">LVIF_PARAM</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="114" pos:column="41">item</name><op:operator pos:line="114" pos:column="45">.</op:operator><name pos:line="114" pos:column="46">iItem</name></name> <op:operator pos:line="114" pos:column="52">=</op:operator> <name pos:line="114" pos:column="54">i</name></expr>;</expr_stmt>	
					<expr_stmt><expr><call><name pos:line="115" pos:column="41">ListView_GetItem</name><argument_list pos:line="115" pos:column="57">(<argument><expr><op:operator pos:line="115" pos:column="58">(</op:operator><op:operator pos:line="115" pos:column="59">(</op:operator><name pos:line="115" pos:column="60">LPNMHDR</name><op:operator pos:line="115" pos:column="67">)</op:operator><name pos:line="115" pos:column="68">lParam</name><op:operator pos:line="115" pos:column="74">)</op:operator><op:operator pos:line="115" pos:column="75">-&gt;</op:operator><name pos:line="115" pos:column="77">hwndFrom</name></expr></argument>, <argument><expr><op:operator pos:line="115" pos:column="87">&amp;</op:operator><name pos:line="115" pos:column="88">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="116" pos:column="41">TaskLstFnStatus</name> <type:modifier pos:line="116" pos:column="57">*</type:modifier></type><name pos:line="116" pos:column="58">tlfs</name> <init pos:line="116" pos:column="63">= <expr><op:operator pos:line="116" pos:column="65">(</op:operator><name pos:line="116" pos:column="66">TaskLstFnStatus</name> <op:operator pos:line="116" pos:column="82">*</op:operator><op:operator pos:line="116" pos:column="83">)</op:operator><name><name pos:line="116" pos:column="84">item</name><op:operator pos:line="116" pos:column="88">.</op:operator><name pos:line="116" pos:column="89">lParam</name></name></expr></init></decl>;</decl_stmt>

					<expr_stmt><expr><call><name pos:line="118" pos:column="41">activateDoc</name><argument_list pos:line="118" pos:column="52">(<argument><expr><name pos:line="118" pos:column="53">tlfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<comment type="line" pos:line="120" pos:column="41">// Redirect NM_RCLICK message to Notepad_plus handle</comment>
					<decl_stmt><decl><type><name pos:line="121" pos:column="41">NMHDR</name></type>	<name pos:line="121" pos:column="49">nmhdr</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="122" pos:column="41">nmhdr</name><op:operator pos:line="122" pos:column="46">.</op:operator><name pos:line="122" pos:column="47">code</name></name> <op:operator pos:line="122" pos:column="52">=</op:operator> <name pos:line="122" pos:column="54">NM_RCLICK</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="123" pos:column="41">nmhdr</name><op:operator pos:line="123" pos:column="46">.</op:operator><name pos:line="123" pos:column="47">hwndFrom</name></name> <op:operator pos:line="123" pos:column="56">=</op:operator> <name pos:line="123" pos:column="58">_hSelf</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="124" pos:column="41">nmhdr</name><op:operator pos:line="124" pos:column="46">.</op:operator><name pos:line="124" pos:column="47">idFrom</name></name> <op:operator pos:line="124" pos:column="54">=</op:operator> <call><name><op:operator pos:line="124" pos:column="56">::</op:operator><name pos:line="124" pos:column="58">GetDlgCtrlID</name></name><argument_list pos:line="124" pos:column="70">(<argument><expr><name><name pos:line="124" pos:column="71">nmhdr</name><op:operator pos:line="124" pos:column="76">.</op:operator><name pos:line="124" pos:column="77">hwndFrom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="125" pos:column="41">::</op:operator><name pos:line="125" pos:column="43">SendMessage</name></name><argument_list pos:line="125" pos:column="54">(<argument><expr><name pos:line="125" pos:column="55">_hParent</name></expr></argument>, <argument><expr><name pos:line="125" pos:column="65">WM_NOTIFY</name></expr></argument>, <argument><expr><name><name pos:line="125" pos:column="76">nmhdr</name><op:operator pos:line="125" pos:column="81">.</op:operator><name pos:line="125" pos:column="82">idFrom</name></name></expr></argument>, <argument><expr><op:operator pos:line="125" pos:column="90">(</op:operator><name pos:line="125" pos:column="91">LPARAM</name><op:operator pos:line="125" pos:column="97">)</op:operator><op:operator pos:line="125" pos:column="98">&amp;</op:operator><name pos:line="125" pos:column="99">nmhdr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="126" pos:column="41">return <expr><name pos:line="126" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="129" pos:column="33">case <expr><name pos:line="129" pos:column="38">LVN_GETINFOTIP</name></expr>:
				<block pos:line="130" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="131" pos:column="41">LPNMLVGETINFOTIP</name></type> <name pos:line="131" pos:column="58">pGetInfoTip</name> <init pos:line="131" pos:column="70">= <expr><op:operator pos:line="131" pos:column="72">(</op:operator><name pos:line="131" pos:column="73">LPNMLVGETINFOTIP</name><op:operator pos:line="131" pos:column="89">)</op:operator><name pos:line="131" pos:column="90">lParam</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="132" pos:column="41">int</name></type> <name pos:line="132" pos:column="45">i</name> <init pos:line="132" pos:column="47">= <expr><name><name pos:line="132" pos:column="49">pGetInfoTip</name><op:operator pos:line="132" pos:column="60">-&gt;</op:operator><name pos:line="132" pos:column="62">iItem</name></name></expr></init></decl>;</decl_stmt>
					<if pos:line="133" pos:column="41">if <condition pos:line="133" pos:column="44">(<expr><name pos:line="133" pos:column="45">i</name> <op:operator pos:line="133" pos:column="47">==</op:operator> <op:operator pos:line="133" pos:column="50">-</op:operator><lit:literal type="number" pos:line="133" pos:column="51">1</lit:literal></expr>)</condition><then pos:line="133" pos:column="53">
						<return pos:line="134" pos:column="49">return <expr><name pos:line="134" pos:column="56">TRUE</name></expr>;</return></then></if>
					<decl_stmt><decl><type><name pos:line="135" pos:column="41">generic_string</name></type> <name pos:line="135" pos:column="56">fn</name> <init pos:line="135" pos:column="59">= <expr><call><name pos:line="135" pos:column="61">getFullFilePath</name><argument_list pos:line="135" pos:column="76">(<argument><expr><op:operator pos:line="135" pos:column="77">(</op:operator><name pos:line="135" pos:column="78">size_t</name><op:operator pos:line="135" pos:column="84">)</op:operator><name pos:line="135" pos:column="85">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="136" pos:column="41">lstrcpyn</name><argument_list pos:line="136" pos:column="49">(<argument><expr><name><name pos:line="136" pos:column="50">pGetInfoTip</name><op:operator pos:line="136" pos:column="61">-&gt;</op:operator><name pos:line="136" pos:column="63">pszText</name></name></expr></argument>, <argument><expr><call><name><name pos:line="136" pos:column="72">fn</name><op:operator pos:line="136" pos:column="74">.</op:operator><name pos:line="136" pos:column="75">c_str</name></name><argument_list pos:line="136" pos:column="80">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="84">pGetInfoTip</name><op:operator pos:line="136" pos:column="95">-&gt;</op:operator><name pos:line="136" pos:column="97">cchTextMax</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="137" pos:column="41">return <expr><name pos:line="137" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="140" pos:column="33">case <expr><name pos:line="140" pos:column="38">LVN_COLUMNCLICK</name></expr>:
				<block pos:line="141" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="142" pos:column="41">LPNMLISTVIEW</name></type> <name pos:line="142" pos:column="54">pnmLV</name> <init pos:line="142" pos:column="60">= <expr><op:operator pos:line="142" pos:column="62">(</op:operator><name pos:line="142" pos:column="63">LPNMLISTVIEW</name><op:operator pos:line="142" pos:column="75">)</op:operator><name pos:line="142" pos:column="76">lParam</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="143" pos:column="41">setHeaderOrder</name><argument_list pos:line="143" pos:column="55">(<argument><expr><name pos:line="143" pos:column="56">pnmLV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="144" pos:column="41">ListView_SortItemsEx</name><argument_list pos:line="144" pos:column="61">(<argument><expr><name><name pos:line="144" pos:column="62">pnmLV</name><op:operator pos:line="144" pos:column="67">-&gt;</op:operator><name pos:line="144" pos:column="69">hdr</name><op:operator pos:line="144" pos:column="72">.</op:operator><name pos:line="144" pos:column="73">hwndFrom</name></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="83">ListViewCompareProc</name></expr></argument>,<argument><expr><op:operator pos:line="144" pos:column="103">(</op:operator><name pos:line="144" pos:column="104">LPARAM</name><op:operator pos:line="144" pos:column="110">)</op:operator><name pos:line="144" pos:column="111">pnmLV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="145" pos:column="41">return <expr><name pos:line="145" pos:column="48">TRUE</name></expr>;</return>
				}</block>
				</case><case pos:line="147" pos:column="33">case <expr><name pos:line="147" pos:column="38">LVN_KEYDOWN</name></expr>:
				<block pos:line="148" pos:column="33">{
					<switch pos:line="149" pos:column="41">switch <condition pos:line="149" pos:column="48">(<expr><op:operator pos:line="149" pos:column="49">(</op:operator><op:operator pos:line="149" pos:column="50">(</op:operator><name pos:line="149" pos:column="51">LPNMLVKEYDOWN</name><op:operator pos:line="149" pos:column="64">)</op:operator><name pos:line="149" pos:column="65">lParam</name><op:operator pos:line="149" pos:column="71">)</op:operator><op:operator pos:line="149" pos:column="72">-&gt;</op:operator><name pos:line="149" pos:column="74">wVKey</name></expr>)</condition>
					<block pos:line="150" pos:column="41">{
						<case pos:line="151" pos:column="49">case <expr><name pos:line="151" pos:column="54">VK_RETURN</name></expr>:
						<block pos:line="152" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="153" pos:column="57">int</name></type> <name pos:line="153" pos:column="61">i</name> <init pos:line="153" pos:column="63">= <expr><call><name pos:line="153" pos:column="65">ListView_GetSelectionMark</name><argument_list pos:line="153" pos:column="90">(<argument><expr><call><name><name pos:line="153" pos:column="91">_fileListView</name><op:operator pos:line="153" pos:column="104">.</op:operator><name pos:line="153" pos:column="105">getHSelf</name></name><argument_list pos:line="153" pos:column="113">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<if pos:line="154" pos:column="57">if <condition pos:line="154" pos:column="60">(<expr><name pos:line="154" pos:column="61">i</name> <op:operator pos:line="154" pos:column="63">==</op:operator> <op:operator pos:line="154" pos:column="66">-</op:operator><lit:literal type="number" pos:line="154" pos:column="67">1</lit:literal></expr>)</condition><then pos:line="154" pos:column="69">
								<return pos:line="155" pos:column="65">return <expr><name pos:line="155" pos:column="72">TRUE</name></expr>;</return></then></if>

							<decl_stmt><decl><type><name pos:line="157" pos:column="57">LVITEM</name></type> <name pos:line="157" pos:column="64">item</name></decl>;</decl_stmt>
							<expr_stmt><expr><name><name pos:line="158" pos:column="57">item</name><op:operator pos:line="158" pos:column="61">.</op:operator><name pos:line="158" pos:column="62">mask</name></name> <op:operator pos:line="158" pos:column="67">=</op:operator> <name pos:line="158" pos:column="69">LVIF_PARAM</name></expr>;</expr_stmt>
							<expr_stmt><expr><name><name pos:line="159" pos:column="57">item</name><op:operator pos:line="159" pos:column="61">.</op:operator><name pos:line="159" pos:column="62">iItem</name></name> <op:operator pos:line="159" pos:column="68">=</op:operator> <name pos:line="159" pos:column="70">i</name></expr>;</expr_stmt>	
							<expr_stmt><expr><call><name pos:line="160" pos:column="57">ListView_GetItem</name><argument_list pos:line="160" pos:column="73">(<argument><expr><op:operator pos:line="160" pos:column="74">(</op:operator><op:operator pos:line="160" pos:column="75">(</op:operator><name pos:line="160" pos:column="76">LPNMHDR</name><op:operator pos:line="160" pos:column="83">)</op:operator><name pos:line="160" pos:column="84">lParam</name><op:operator pos:line="160" pos:column="90">)</op:operator><op:operator pos:line="160" pos:column="91">-&gt;</op:operator><name pos:line="160" pos:column="93">hwndFrom</name></expr></argument>, <argument><expr><op:operator pos:line="160" pos:column="103">&amp;</op:operator><name pos:line="160" pos:column="104">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<decl_stmt><decl><type><name pos:line="161" pos:column="57">TaskLstFnStatus</name> <type:modifier pos:line="161" pos:column="73">*</type:modifier></type><name pos:line="161" pos:column="74">tlfs</name> <init pos:line="161" pos:column="79">= <expr><op:operator pos:line="161" pos:column="81">(</op:operator><name pos:line="161" pos:column="82">TaskLstFnStatus</name> <op:operator pos:line="161" pos:column="98">*</op:operator><op:operator pos:line="161" pos:column="99">)</op:operator><name><name pos:line="161" pos:column="100">item</name><op:operator pos:line="161" pos:column="104">.</op:operator><name pos:line="161" pos:column="105">lParam</name></name></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name pos:line="162" pos:column="57">activateDoc</name><argument_list pos:line="162" pos:column="68">(<argument><expr><name pos:line="162" pos:column="69">tlfs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<return pos:line="163" pos:column="57">return <expr><name pos:line="163" pos:column="64">TRUE</name></expr>;</return>
						}</block>
						</case><default pos:line="165" pos:column="49">default:
							<break pos:line="166" pos:column="57">break;</break>
					</default>}</block></switch>
				}</block>
				<break pos:line="169" pos:column="33">break;</break>

				</case><default pos:line="171" pos:column="33">default:
					<break pos:line="172" pos:column="41">break;</break>
			</default>}</block></switch>
		}</block>
		<return pos:line="175" pos:column="17">return <expr><name pos:line="175" pos:column="24">TRUE</name></expr>;</return>

        </case><case pos:line="177" pos:column="9">case <expr><name pos:line="177" pos:column="14">WM_SIZE</name></expr>:
        <block pos:line="178" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="179" pos:column="13">int</name></type> <name pos:line="179" pos:column="17">width</name> <init pos:line="179" pos:column="23">= <expr><call><name pos:line="179" pos:column="25">LOWORD</name><argument_list pos:line="179" pos:column="31">(<argument><expr><name pos:line="179" pos:column="32">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="180" pos:column="13">int</name></type> <name pos:line="180" pos:column="17">height</name> <init pos:line="180" pos:column="24">= <expr><call><name pos:line="180" pos:column="26">HIWORD</name><argument_list pos:line="180" pos:column="32">(<argument><expr><name pos:line="180" pos:column="33">lParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="181" pos:column="25">::</op:operator><name pos:line="181" pos:column="27">MoveWindow</name></name><argument_list pos:line="181" pos:column="37">(<argument><expr><call><name><name pos:line="181" pos:column="38">_fileListView</name><op:operator pos:line="181" pos:column="51">.</op:operator><name pos:line="181" pos:column="52">getHSelf</name></name><argument_list pos:line="181" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="181" pos:column="64">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="181" pos:column="67">0</lit:literal></expr></argument>, <argument><expr><name pos:line="181" pos:column="70">width</name></expr></argument>, <argument><expr><name pos:line="181" pos:column="77">height</name></expr></argument>, <argument><expr><name pos:line="181" pos:column="85">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:line="182" pos:column="13">break;</break>
        }</block>
        
		</case><case pos:line="185" pos:column="17">case <expr><name pos:line="185" pos:column="22">WM_DESTROY</name></expr>:
        <block pos:line="186" pos:column="9">{
			<expr_stmt><expr><call><name><name pos:line="187" pos:column="25">_fileListView</name><op:operator pos:line="187" pos:column="38">.</op:operator><name pos:line="187" pos:column="39">destroy</name></name><argument_list pos:line="187" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
            <break pos:line="188" pos:column="13">break;</break>
        }</block>

        </case><default pos:line="191" pos:column="9">default :
            <return pos:line="192" pos:column="13">return <expr><call><name><name pos:line="192" pos:column="20">DockingDlgInterface</name><op:operator pos:line="192" pos:column="39">::</op:operator><name pos:line="192" pos:column="41">run_dlgProc</name></name><argument_list pos:line="192" pos:column="52">(<argument><expr><name pos:line="192" pos:column="53">message</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="62">wParam</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="70">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
    </default>}</block></switch>
	<return pos:line="194" pos:column="9">return <expr><call><name><name pos:line="194" pos:column="16">DockingDlgInterface</name><op:operator pos:line="194" pos:column="35">::</op:operator><name pos:line="194" pos:column="37">run_dlgProc</name></name><argument_list pos:line="194" pos:column="48">(<argument><expr><name pos:line="194" pos:column="49">message</name></expr></argument>, <argument><expr><name pos:line="194" pos:column="58">wParam</name></expr></argument>, <argument><expr><name pos:line="194" pos:column="66">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>


<function><type><name pos:line="198" pos:column="1">void</name></type> <name><name pos:line="198" pos:column="6">VerticalFileSwitcher</name><op:operator pos:line="198" pos:column="26">::</op:operator><name pos:line="198" pos:column="28">activateDoc</name></name><parameter_list pos:line="198" pos:column="39">(<param><decl><type><name pos:line="198" pos:column="40">TaskLstFnStatus</name> <type:modifier pos:line="198" pos:column="56">*</type:modifier></type><name pos:line="198" pos:column="57">tlfs</name></decl></param>)</parameter_list> <specifier pos:line="198" pos:column="63">const</specifier>
<block pos:line="199" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="200" pos:column="9">int</name></type> <name pos:line="200" pos:column="13">view</name> <init pos:line="200" pos:column="18">= <expr><name><name pos:line="200" pos:column="20">tlfs</name><op:operator pos:line="200" pos:column="24">-&gt;</op:operator><name pos:line="200" pos:column="26">_iView</name></name></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="201" pos:column="9">//int bufferID = _fileListView.getBufferInfoFromIndex(i, view);</comment>
	<decl_stmt><decl><type><name pos:line="202" pos:column="9">int</name></type> <name pos:line="202" pos:column="13">bufferID</name> <init pos:line="202" pos:column="22">= <expr><op:operator pos:line="202" pos:column="24">(</op:operator><name pos:line="202" pos:column="25">int</name><op:operator pos:line="202" pos:column="28">)</op:operator><name><name pos:line="202" pos:column="29">tlfs</name><op:operator pos:line="202" pos:column="33">-&gt;</op:operator><name pos:line="202" pos:column="35">_bufID</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="203" pos:column="9">int</name></type> <name pos:line="203" pos:column="13">docPosInfo</name> <init pos:line="203" pos:column="24">= <expr><call><name><op:operator pos:line="203" pos:column="26">::</op:operator><name pos:line="203" pos:column="28">SendMessage</name></name><argument_list pos:line="203" pos:column="39">(<argument><expr><name pos:line="203" pos:column="40">_hParent</name></expr></argument>, <argument><expr><name pos:line="203" pos:column="50">NPPM_GETPOSFROMBUFFERID</name></expr></argument>, <argument><expr><name pos:line="203" pos:column="75">bufferID</name></expr></argument>, <argument><expr><name pos:line="203" pos:column="85">view</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="204" pos:column="9">int</name></type> <name pos:line="204" pos:column="13">view2set</name> <init pos:line="204" pos:column="22">= <expr><name pos:line="204" pos:column="24">docPosInfo</name> <op:operator pos:line="204" pos:column="35">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="204" pos:column="38">30</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="205" pos:column="9">int</name></type> <name pos:line="205" pos:column="13">index2Switch</name> <init pos:line="205" pos:column="26">= <expr><op:operator pos:line="205" pos:column="28">(</op:operator><name pos:line="205" pos:column="29">docPosInfo</name> <op:operator pos:line="205" pos:column="40">&lt;&lt;</op:operator> <lit:literal type="number" pos:line="205" pos:column="43">2</lit:literal><op:operator pos:line="205" pos:column="44">)</op:operator> <op:operator pos:line="205" pos:column="46">&gt;&gt;</op:operator> <lit:literal type="number" pos:line="205" pos:column="49">2</lit:literal></expr></init></decl> ;</decl_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="207" pos:column="9">::</op:operator><name pos:line="207" pos:column="11">SendMessage</name></name><argument_list pos:line="207" pos:column="22">(<argument><expr><name pos:line="207" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="207" pos:column="33">NPPM_ACTIVATEDOC</name></expr></argument>, <argument><expr><name pos:line="207" pos:column="51">view2set</name></expr></argument>, <argument><expr><name pos:line="207" pos:column="61">index2Switch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="210" pos:column="1">int</name></type> <name><name pos:line="210" pos:column="5">VerticalFileSwitcher</name><op:operator pos:line="210" pos:column="25">::</op:operator><name pos:line="210" pos:column="27">setHeaderOrder</name></name><parameter_list pos:line="210" pos:column="41">(<param><decl><type><name pos:line="210" pos:column="42">LPNMLISTVIEW</name></type> <name pos:line="210" pos:column="55">pnm_list_view</name></decl></param>)</parameter_list>
<block pos:line="211" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="212" pos:column="9">HWND</name></type> <name pos:line="212" pos:column="14">hListView</name></decl><op:operator pos:line="212" pos:column="23">,</op:operator><decl><type ref="prev"/><name pos:line="212" pos:column="24">colHeader</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="213" pos:column="9">LVCOLUMN</name></type> <name pos:line="213" pos:column="18">lvc</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="214" pos:column="9">int</name></type> <name pos:line="214" pos:column="13">q</name></decl><op:operator pos:line="214" pos:column="14">,</op:operator><decl><type ref="prev"/><name pos:line="214" pos:column="15">cols</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="215" pos:column="9">int</name></type> <name pos:line="215" pos:column="13">index</name> <init pos:line="215" pos:column="19">= <expr><name><name pos:line="215" pos:column="21">pnm_list_view</name><op:operator pos:line="215" pos:column="34">-&gt;</op:operator><name pos:line="215" pos:column="36">iSubItem</name></name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="217" pos:column="9">lvc</name><op:operator pos:line="217" pos:column="12">.</op:operator><name pos:line="217" pos:column="13">mask</name></name> <op:operator pos:line="217" pos:column="18">=</op:operator> <name pos:line="217" pos:column="20">LVCF_FMT</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="218" pos:column="9">hListView</name> <op:operator pos:line="218" pos:column="19">=</op:operator> <name><name pos:line="218" pos:column="21">pnm_list_view</name><op:operator pos:line="218" pos:column="34">-&gt;</op:operator><name pos:line="218" pos:column="36">hdr</name><op:operator pos:line="218" pos:column="39">.</op:operator><name pos:line="218" pos:column="40">hwndFrom</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="219" pos:column="9">SendMessage</name><argument_list pos:line="219" pos:column="20">(<argument><expr><name pos:line="219" pos:column="21">hListView</name></expr></argument>, <argument><expr><name pos:line="219" pos:column="32">LVM_GETCOLUMN</name></expr></argument>, <argument><expr><op:operator pos:line="219" pos:column="47">(</op:operator><name pos:line="219" pos:column="48">WPARAM</name><op:operator pos:line="219" pos:column="54">)</op:operator><name pos:line="219" pos:column="55">index</name></expr></argument>, <argument><expr><op:operator pos:line="219" pos:column="62">(</op:operator><name pos:line="219" pos:column="63">LPARAM</name><op:operator pos:line="219" pos:column="69">)</op:operator><op:operator pos:line="219" pos:column="70">&amp;</op:operator><name pos:line="219" pos:column="71">lvc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="220" pos:column="9">if<condition pos:line="220" pos:column="11">(<expr><name pos:line="220" pos:column="12">HDF_SORTUP</name> <op:operator pos:line="220" pos:column="23">&amp;</op:operator> <name><name pos:line="220" pos:column="25">lvc</name><op:operator pos:line="220" pos:column="28">.</op:operator><name pos:line="220" pos:column="29">fmt</name></name></expr>)</condition><then pos:line="220" pos:column="33">
	<block pos:line="221" pos:column="9">{
		<comment type="line" pos:line="222" pos:column="17">//set the opposite arrow</comment>
		<expr_stmt><expr><name><name pos:line="223" pos:column="17">lvc</name><op:operator pos:line="223" pos:column="20">.</op:operator><name pos:line="223" pos:column="21">fmt</name></name> <op:operator pos:line="223" pos:column="25">=</op:operator> <name><name pos:line="223" pos:column="27">lvc</name><op:operator pos:line="223" pos:column="30">.</op:operator><name pos:line="223" pos:column="31">fmt</name></name> <op:operator pos:line="223" pos:column="35">&amp;</op:operator> <op:operator pos:line="223" pos:column="37">(</op:operator><op:operator pos:line="223" pos:column="38">~</op:operator><name pos:line="223" pos:column="39">HDF_SORTUP</name><op:operator pos:line="223" pos:column="49">)</op:operator> <op:operator pos:line="223" pos:column="51">|</op:operator> <name pos:line="223" pos:column="53">HDF_SORTDOWN</name></expr>;</expr_stmt> <comment type="line" pos:line="223" pos:column="67">//turns off sort-up, turns on sort-down</comment>
		<expr_stmt><expr><call><name pos:line="224" pos:column="17">SendMessage</name><argument_list pos:line="224" pos:column="28">(<argument><expr><name pos:line="224" pos:column="29">hListView</name></expr></argument>, <argument><expr><name pos:line="224" pos:column="40">LVM_SETCOLUMN</name></expr></argument>, <argument><expr><op:operator pos:line="224" pos:column="55">(</op:operator><name pos:line="224" pos:column="56">WPARAM</name><op:operator pos:line="224" pos:column="62">)</op:operator> <name pos:line="224" pos:column="64">index</name></expr></argument>, <argument><expr><op:operator pos:line="224" pos:column="71">(</op:operator><name pos:line="224" pos:column="72">LPARAM</name><op:operator pos:line="224" pos:column="78">)</op:operator> <op:operator pos:line="224" pos:column="80">&amp;</op:operator><name pos:line="224" pos:column="81">lvc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="225" pos:column="17">//use any sorting you would use, e.g. the LVM_SORTITEMS message</comment>
		<return pos:line="226" pos:column="17">return <expr><name pos:line="226" pos:column="24">SORT_DIRECTION_DOWN</name></expr>;</return>
	}</block></then></if>

	<if pos:line="229" pos:column="9">if<condition pos:line="229" pos:column="11">(<expr><name pos:line="229" pos:column="12">HDF_SORTDOWN</name> <op:operator pos:line="229" pos:column="25">&amp;</op:operator> <name><name pos:line="229" pos:column="27">lvc</name><op:operator pos:line="229" pos:column="30">.</op:operator><name pos:line="229" pos:column="31">fmt</name></name></expr>)</condition><then pos:line="229" pos:column="35">
    <block pos:line="230" pos:column="5">{
		<comment type="line" pos:line="231" pos:column="17">//the opposite</comment>
		<expr_stmt><expr><name><name pos:line="232" pos:column="17">lvc</name><op:operator pos:line="232" pos:column="20">.</op:operator><name pos:line="232" pos:column="21">fmt</name></name> <op:operator pos:line="232" pos:column="25">=</op:operator> <name><name pos:line="232" pos:column="27">lvc</name><op:operator pos:line="232" pos:column="30">.</op:operator><name pos:line="232" pos:column="31">fmt</name></name> <op:operator pos:line="232" pos:column="35">&amp;</op:operator> <op:operator pos:line="232" pos:column="37">(</op:operator><op:operator pos:line="232" pos:column="38">~</op:operator><name pos:line="232" pos:column="39">HDF_SORTDOWN</name><op:operator pos:line="232" pos:column="51">)</op:operator> <op:operator pos:line="232" pos:column="53">|</op:operator> <name pos:line="232" pos:column="55">HDF_SORTUP</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="233" pos:column="17">SendMessage</name><argument_list pos:line="233" pos:column="28">(<argument><expr><name pos:line="233" pos:column="29">hListView</name></expr></argument>, <argument><expr><name pos:line="233" pos:column="40">LVM_SETCOLUMN</name></expr></argument>, <argument><expr><op:operator pos:line="233" pos:column="55">(</op:operator><name pos:line="233" pos:column="56">WPARAM</name><op:operator pos:line="233" pos:column="62">)</op:operator> <name pos:line="233" pos:column="64">index</name></expr></argument>, <argument><expr><op:operator pos:line="233" pos:column="71">(</op:operator><name pos:line="233" pos:column="72">LPARAM</name><op:operator pos:line="233" pos:column="78">)</op:operator> <op:operator pos:line="233" pos:column="80">&amp;</op:operator><name pos:line="233" pos:column="81">lvc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="234" pos:column="17">return <expr><name pos:line="234" pos:column="24">SORT_DIRECTION_UP</name></expr>;</return>
    }</block></then></if>
  
	<comment type="line" pos:line="237" pos:column="9">// this is the case our clicked column wasn't the one being sorted up until now</comment>
	<comment type="line" pos:line="238" pos:column="9">// so first  we need to iterate through all columns and send LVM_SETCOLUMN to them with fmt set to NOT include these HDFs</comment>
	<expr_stmt><expr><name pos:line="239" pos:column="9">colHeader</name> <op:operator pos:line="239" pos:column="19">=</op:operator> <op:operator pos:line="239" pos:column="21">(</op:operator><name pos:line="239" pos:column="22">HWND</name><op:operator pos:line="239" pos:column="26">)</op:operator><call><name pos:line="239" pos:column="27">SendMessage</name><argument_list pos:line="239" pos:column="38">(<argument><expr><name pos:line="239" pos:column="39">hListView</name></expr></argument>,<argument><expr><name pos:line="239" pos:column="49">LVM_GETHEADER</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="239" pos:column="63">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="239" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="240" pos:column="9">cols</name> <op:operator pos:line="240" pos:column="14">=</op:operator> <call><name pos:line="240" pos:column="16">SendMessage</name><argument_list pos:line="240" pos:column="27">(<argument><expr><name pos:line="240" pos:column="28">colHeader</name></expr></argument>,<argument><expr><name pos:line="240" pos:column="38">HDM_GETITEMCOUNT</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="240" pos:column="55">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="240" pos:column="57">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="241" pos:column="9">for(<init><expr><name pos:line="241" pos:column="13">q</name><op:operator pos:line="241" pos:column="14">=</op:operator><lit:literal type="number" pos:line="241" pos:column="15">0</lit:literal></expr>;</init> <condition><expr><name pos:line="241" pos:column="18">q</name><op:operator pos:line="241" pos:column="19">&lt;</op:operator><name pos:line="241" pos:column="20">cols</name></expr>;</condition> <incr><expr><name pos:line="241" pos:column="26">q</name><op:operator pos:line="241" pos:column="27">++</op:operator></expr></incr>)
	<block pos:line="242" pos:column="9">{
		<comment type="line" pos:line="243" pos:column="17">//Get current fmt</comment>
		<expr_stmt><expr><call><name pos:line="244" pos:column="17">SendMessage</name><argument_list pos:line="244" pos:column="28">(<argument><expr><name pos:line="244" pos:column="29">hListView</name></expr></argument>,<argument><expr><name pos:line="244" pos:column="39">LVM_GETCOLUMN</name></expr></argument>,<argument><expr><op:operator pos:line="244" pos:column="53">(</op:operator><name pos:line="244" pos:column="54">WPARAM</name><op:operator pos:line="244" pos:column="60">)</op:operator> <name pos:line="244" pos:column="62">q</name></expr></argument>, <argument><expr><op:operator pos:line="244" pos:column="65">(</op:operator><name pos:line="244" pos:column="66">LPARAM</name><op:operator pos:line="244" pos:column="72">)</op:operator> <op:operator pos:line="244" pos:column="74">&amp;</op:operator><name pos:line="244" pos:column="75">lvc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="245" pos:column="17">//remove both sort-up and sort-down</comment>
		<expr_stmt><expr><name><name pos:line="246" pos:column="17">lvc</name><op:operator pos:line="246" pos:column="20">.</op:operator><name pos:line="246" pos:column="21">fmt</name></name> <op:operator pos:line="246" pos:column="25">=</op:operator> <name><name pos:line="246" pos:column="27">lvc</name><op:operator pos:line="246" pos:column="30">.</op:operator><name pos:line="246" pos:column="31">fmt</name></name> <op:operator pos:line="246" pos:column="35">&amp;</op:operator> <op:operator pos:line="246" pos:column="37">(</op:operator><op:operator pos:line="246" pos:column="38">~</op:operator><name pos:line="246" pos:column="39">HDF_SORTUP</name><op:operator pos:line="246" pos:column="49">)</op:operator> <op:operator pos:line="246" pos:column="51">&amp;</op:operator> <op:operator pos:line="246" pos:column="53">(</op:operator><op:operator pos:line="246" pos:column="54">~</op:operator><name pos:line="246" pos:column="55">HDF_SORTDOWN</name><op:operator pos:line="246" pos:column="67">)</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="247" pos:column="17">SendMessage</name><argument_list pos:line="247" pos:column="28">(<argument><expr><name pos:line="247" pos:column="29">hListView</name></expr></argument>,<argument><expr><name pos:line="247" pos:column="39">LVM_SETCOLUMN</name></expr></argument>,<argument><expr><op:operator pos:line="247" pos:column="53">(</op:operator><name pos:line="247" pos:column="54">WPARAM</name><op:operator pos:line="247" pos:column="60">)</op:operator> <name pos:line="247" pos:column="62">q</name></expr></argument>, <argument><expr><op:operator pos:line="247" pos:column="65">(</op:operator><name pos:line="247" pos:column="66">LPARAM</name><op:operator pos:line="247" pos:column="72">)</op:operator> <op:operator pos:line="247" pos:column="74">&amp;</op:operator><name pos:line="247" pos:column="75">lvc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	
	<comment type="line" pos:line="250" pos:column="9">//read current fmt from clicked column</comment>
	<expr_stmt><expr><call><name pos:line="251" pos:column="9">SendMessage</name><argument_list pos:line="251" pos:column="20">(<argument><expr><name pos:line="251" pos:column="21">hListView</name></expr></argument>,<argument><expr><name pos:line="251" pos:column="31">LVM_GETCOLUMN</name></expr></argument>,<argument><expr><op:operator pos:line="251" pos:column="45">(</op:operator><name pos:line="251" pos:column="46">WPARAM</name><op:operator pos:line="251" pos:column="52">)</op:operator> <name pos:line="251" pos:column="54">index</name></expr></argument>, <argument><expr><op:operator pos:line="251" pos:column="61">(</op:operator><name pos:line="251" pos:column="62">LPARAM</name><op:operator pos:line="251" pos:column="68">)</op:operator> <op:operator pos:line="251" pos:column="70">&amp;</op:operator><name pos:line="251" pos:column="71">lvc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="252" pos:column="9">// then set whichever arrow you feel like and send LVM_SETCOLUMN to this particular column</comment>
	<expr_stmt><expr><name><name pos:line="253" pos:column="9">lvc</name><op:operator pos:line="253" pos:column="12">.</op:operator><name pos:line="253" pos:column="13">fmt</name></name> <op:operator pos:line="253" pos:column="17">=</op:operator> <name><name pos:line="253" pos:column="19">lvc</name><op:operator pos:line="253" pos:column="22">.</op:operator><name pos:line="253" pos:column="23">fmt</name></name> <op:operator pos:line="253" pos:column="27">|</op:operator> <name pos:line="253" pos:column="29">HDF_SORTUP</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="254" pos:column="9">SendMessage</name><argument_list pos:line="254" pos:column="20">(<argument><expr><name pos:line="254" pos:column="21">hListView</name></expr></argument>, <argument><expr><name pos:line="254" pos:column="32">LVM_SETCOLUMN</name></expr></argument>, <argument><expr><op:operator pos:line="254" pos:column="47">(</op:operator><name pos:line="254" pos:column="48">WPARAM</name><op:operator pos:line="254" pos:column="54">)</op:operator> <name pos:line="254" pos:column="56">index</name></expr></argument>, <argument><expr><op:operator pos:line="254" pos:column="63">(</op:operator><name pos:line="254" pos:column="64">LPARAM</name><op:operator pos:line="254" pos:column="70">)</op:operator> <op:operator pos:line="254" pos:column="72">&amp;</op:operator><name pos:line="254" pos:column="73">lvc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<return pos:line="256" pos:column="9">return <expr><name pos:line="256" pos:column="16">SORT_DIRECTION_UP</name></expr>;</return>
}</block></function>
</unit>
