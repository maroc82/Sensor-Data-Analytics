<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\VerticalFileSwitcher\VerticalFileSwitcherListView.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"VerticalFileSwitcherListView.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"Buffer.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="33" pos:column="1">void</name></type> <name><name pos:line="33" pos:column="6">VerticalFileSwitcherListView</name><op:operator pos:line="33" pos:column="34">::</op:operator><name pos:line="33" pos:column="36">init</name></name><parameter_list pos:line="33" pos:column="40">(<param><decl><type><name pos:line="33" pos:column="41">HINSTANCE</name></type> <name pos:line="33" pos:column="51">hInst</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="58">HWND</name></type> <name pos:line="33" pos:column="63">parent</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="71">HIMAGELIST</name></type> <name pos:line="33" pos:column="82">hImaLst</name></decl></param>)</parameter_list>
<block pos:line="34" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="35" pos:column="9">Window</name><op:operator pos:line="35" pos:column="15">::</op:operator><name pos:line="35" pos:column="17">init</name></name><argument_list pos:line="35" pos:column="21">(<argument><expr><name pos:line="35" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="35" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="36" pos:column="9">_hImaLst</name> <op:operator pos:line="36" pos:column="18">=</op:operator> <name pos:line="36" pos:column="20">hImaLst</name></expr>;</expr_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">INITCOMMONCONTROLSEX</name></type> <name pos:line="37" pos:column="26">icex</name></decl>;</decl_stmt>
    
    <comment type="line" pos:line="39" pos:column="5">// Ensure that the common control DLL is loaded. </comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">icex</name><op:operator pos:line="40" pos:column="9">.</op:operator><name pos:line="40" pos:column="10">dwSize</name></name> <op:operator pos:line="40" pos:column="17">=</op:operator> <sizeof pos:line="40" pos:column="19">sizeof<argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">INITCOMMONCONTROLSEX</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="41" pos:column="5">icex</name><op:operator pos:line="41" pos:column="9">.</op:operator><name pos:line="41" pos:column="10">dwICC</name></name>  <op:operator pos:line="41" pos:column="17">=</op:operator> <name pos:line="41" pos:column="19">ICC_LISTVIEW_CLASSES</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="42" pos:column="5">InitCommonControlsEx</name><argument_list pos:line="42" pos:column="25">(<argument><expr><op:operator pos:line="42" pos:column="26">&amp;</op:operator><name pos:line="42" pos:column="27">icex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    
    <comment type="line" pos:line="44" pos:column="5">// Create the list-view window in report view with label editing enabled.</comment>
	<decl_stmt><decl><type><name pos:line="45" pos:column="9">int</name></type> <name pos:line="45" pos:column="13">listViewStyles</name> <init pos:line="45" pos:column="28">= <expr><name pos:line="45" pos:column="30">LVS_REPORT</name> <op:operator pos:line="45" pos:column="41">|</op:operator> <name pos:line="45" pos:column="43">LVS_SINGLESEL</name> <op:operator pos:line="45" pos:column="57">|</op:operator> <name pos:line="45" pos:column="59">LVS_AUTOARRANGE</name>\
						<op:operator pos:line="46" pos:column="49">|</op:operator> <name pos:line="46" pos:column="51">LVS_SHAREIMAGELISTS</name> <op:operator pos:line="46" pos:column="71">|</op:operator> <name pos:line="46" pos:column="73">LVS_SHOWSELALWAYS</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="48" pos:column="9">_hSelf</name> <op:operator pos:line="48" pos:column="16">=</op:operator> <call><name><op:operator pos:line="48" pos:column="18">::</op:operator><name pos:line="48" pos:column="20">CreateWindow</name></name><argument_list pos:line="48" pos:column="32">(<argument><expr><name pos:line="48" pos:column="33">WC_LISTVIEW</name></expr></argument>,
                                <argument><expr><call><name pos:line="49" pos:column="33">TEXT</name><argument_list pos:line="49" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="49" pos:column="38">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
                                <argument><expr><name pos:line="50" pos:column="33">WS_CHILD</name> <op:operator pos:line="50" pos:column="42">|</op:operator> <name pos:line="50" pos:column="44">listViewStyles</name></expr></argument>,
                                <argument><expr><lit:literal type="number" pos:line="51" pos:column="33">0</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="number" pos:line="52" pos:column="33">0</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="number" pos:line="53" pos:column="33">0</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="number" pos:line="54" pos:column="33">0</lit:literal></expr></argument>,
                                <argument><expr><name pos:line="55" pos:column="33">_hParent</name></expr></argument>,
                                <argument><expr><op:operator pos:line="56" pos:column="33">(</op:operator><name pos:line="56" pos:column="34">HMENU</name><op:operator pos:line="56" pos:column="39">)</op:operator> <name pos:line="56" pos:column="41">NULL</name></expr></argument>,
                                <argument><expr><name pos:line="57" pos:column="33">hInst</name></expr></argument>,
                                <argument><expr><name pos:line="58" pos:column="33">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><op:operator pos:line="59" pos:column="13">!</op:operator><name pos:line="59" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="59" pos:column="21">
	<block pos:line="60" pos:column="9">{
		<throw pos:line="61" pos:column="17">throw <expr><call><name><name pos:line="61" pos:column="23">std</name><op:operator pos:line="61" pos:column="26">::</op:operator><name pos:line="61" pos:column="28">runtime_error</name></name><argument_list pos:line="61" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="42">"VerticalFileSwitcherListView::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<expr_stmt><expr><call><name><op:operator pos:line="64" pos:column="9">::</op:operator><name pos:line="64" pos:column="11">SetWindowLongPtr</name></name><argument_list pos:line="64" pos:column="27">(<argument><expr><name pos:line="64" pos:column="28">_hSelf</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="36">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="64" pos:column="51">(</op:operator><name pos:line="64" pos:column="52">LONG_PTR</name><op:operator pos:line="64" pos:column="60">)</op:operator><name pos:line="64" pos:column="61">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="65" pos:column="9">_defaultProc</name> <op:operator pos:line="65" pos:column="22">=</op:operator> <call><name><name pos:line="65" pos:column="24">reinterpret_cast</name><argument_list pos:line="65" pos:column="40">&lt;<argument><expr><name pos:line="65" pos:column="41">WNDPROC</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="65" pos:column="49">(<argument><expr><call><name><op:operator pos:line="65" pos:column="50">::</op:operator><name pos:line="65" pos:column="52">SetWindowLongPtr</name></name><argument_list pos:line="65" pos:column="68">(<argument><expr><name pos:line="65" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="65" pos:column="77">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="65" pos:column="91">(</op:operator><name pos:line="65" pos:column="92">LONG_PTR</name><op:operator pos:line="65" pos:column="100">)</op:operator><name pos:line="65" pos:column="101">staticProc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="67" pos:column="9">ListView_SetExtendedListViewStyle</name><argument_list pos:line="67" pos:column="42">(<argument><expr><name pos:line="67" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="51">LVS_EX_FULLROWSELECT</name> <op:operator pos:line="67" pos:column="72">|</op:operator> <name pos:line="67" pos:column="74">LVS_EX_BORDERSELECT</name> <op:operator pos:line="67" pos:column="94">|</op:operator> <name pos:line="67" pos:column="96">LVS_EX_INFOTIP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="68" pos:column="9">ListView_SetItemCountEx</name><argument_list pos:line="68" pos:column="32">(<argument><expr><name pos:line="68" pos:column="33">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="68" pos:column="41">50</lit:literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="45">LVSICF_NOSCROLL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="69" pos:column="9">ListView_SetImageList</name><argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="39">_hImaLst</name></expr></argument>, <argument><expr><name pos:line="69" pos:column="49">LVSIL_SMALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="70" pos:column="9">ListView_SetItemState</name><argument_list pos:line="70" pos:column="30">(<argument><expr><name pos:line="70" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="70" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="42">LVIS_SELECTED</name><op:operator pos:line="70" pos:column="55">|</op:operator><name pos:line="70" pos:column="56">LVIS_FOCUSED</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="70">LVIS_SELECTED</name><op:operator pos:line="70" pos:column="83">|</op:operator><name pos:line="70" pos:column="84">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="73" pos:column="1">void</name></type> <name><name pos:line="73" pos:column="6">VerticalFileSwitcherListView</name><op:operator pos:line="73" pos:column="34">::</op:operator><name pos:line="73" pos:column="36">destroy</name></name><parameter_list pos:line="73" pos:column="43">()</parameter_list>
<block pos:line="74" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="75" pos:column="9">LVITEM</name></type> <name pos:line="75" pos:column="16">item</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="76" pos:column="9">item</name><op:operator pos:line="76" pos:column="13">.</op:operator><name pos:line="76" pos:column="14">mask</name></name> <op:operator pos:line="76" pos:column="19">=</op:operator> <name pos:line="76" pos:column="21">LVIF_PARAM</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="77" pos:column="9">int</name></type> <name pos:line="77" pos:column="13">nbItem</name> <init pos:line="77" pos:column="20">= <expr><call><name pos:line="77" pos:column="22">ListView_GetItemCount</name><argument_list pos:line="77" pos:column="43">(<argument><expr><name pos:line="77" pos:column="44">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="78" pos:column="9">for (<init><decl><type><name pos:line="78" pos:column="14">int</name></type> <name pos:line="78" pos:column="18">i</name> <init pos:line="78" pos:column="20">= <expr><lit:literal type="number" pos:line="78" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="78" pos:column="26">i</name> <op:operator pos:line="78" pos:column="28">&lt;</op:operator> <name pos:line="78" pos:column="30">nbItem</name></expr> ;</condition> <incr><expr><name pos:line="78" pos:column="39">i</name><op:operator pos:line="78" pos:column="40">++</op:operator></expr></incr>)
	<block pos:line="79" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="80" pos:column="17">item</name><op:operator pos:line="80" pos:column="21">.</op:operator><name pos:line="80" pos:column="22">iItem</name></name> <op:operator pos:line="80" pos:column="28">=</op:operator> <name pos:line="80" pos:column="30">i</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="81" pos:column="17">ListView_GetItem</name><argument_list pos:line="81" pos:column="33">(<argument><expr><name pos:line="81" pos:column="34">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="81" pos:column="42">&amp;</op:operator><name pos:line="81" pos:column="43">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="82" pos:column="17">TaskLstFnStatus</name> <type:modifier pos:line="82" pos:column="33">*</type:modifier></type><name pos:line="82" pos:column="34">tlfs</name> <init pos:line="82" pos:column="39">= <expr><op:operator pos:line="82" pos:column="41">(</op:operator><name pos:line="82" pos:column="42">TaskLstFnStatus</name> <op:operator pos:line="82" pos:column="58">*</op:operator><op:operator pos:line="82" pos:column="59">)</op:operator><name><name pos:line="82" pos:column="60">item</name><op:operator pos:line="82" pos:column="64">.</op:operator><name pos:line="82" pos:column="65">lParam</name></name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><op:operator pos:line="83" pos:column="17">delete</op:operator> <name pos:line="83" pos:column="24">tlfs</name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name><op:operator pos:line="85" pos:column="9">::</op:operator><name pos:line="85" pos:column="11">DestroyWindow</name></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name pos:line="85" pos:column="25">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="86" pos:column="9">_hSelf</name> <op:operator pos:line="86" pos:column="16">=</op:operator> <name pos:line="86" pos:column="18">NULL</name></expr>;</expr_stmt>
}</block></function> 

<function><type><name pos:line="89" pos:column="1">LRESULT</name></type> <name><name pos:line="89" pos:column="9">VerticalFileSwitcherListView</name><op:operator pos:line="89" pos:column="37">::</op:operator><name pos:line="89" pos:column="39">runProc</name></name><parameter_list pos:line="89" pos:column="46">(<param><decl><type><name pos:line="89" pos:column="47">HWND</name></type> <name pos:line="89" pos:column="52">hwnd</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="58">UINT</name></type> <name pos:line="89" pos:column="63">Message</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="72">WPARAM</name></type> <name pos:line="89" pos:column="79">wParam</name></decl></param>, <param><decl><type><name pos:line="89" pos:column="87">LPARAM</name></type> <name pos:line="89" pos:column="94">lParam</name></decl></param>)</parameter_list>
<block pos:line="90" pos:column="1">{
	<return pos:line="91" pos:column="9">return <expr><call><name><op:operator pos:line="91" pos:column="16">::</op:operator><name pos:line="91" pos:column="18">CallWindowProc</name></name><argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">_defaultProc</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="47">hwnd</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="53">Message</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="62">wParam</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="70">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="94" pos:column="1">void</name></type> <name><name pos:line="94" pos:column="6">VerticalFileSwitcherListView</name><op:operator pos:line="94" pos:column="34">::</op:operator><name pos:line="94" pos:column="36">initList</name></name><parameter_list pos:line="94" pos:column="44">()</parameter_list>
<block pos:line="95" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="96" pos:column="9">TaskListInfo</name></type> <name pos:line="96" pos:column="22">taskListInfo</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="97" pos:column="9">::</op:operator><name pos:line="97" pos:column="11">SendMessage</name></name><argument_list pos:line="97" pos:column="22">(<argument><expr><call><name><op:operator pos:line="97" pos:column="23">::</op:operator><name pos:line="97" pos:column="25">GetParent</name></name><argument_list pos:line="97" pos:column="34">(<argument><expr><name pos:line="97" pos:column="35">_hParent</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="97" pos:column="46">WM_GETTASKLISTINFO</name></expr></argument>, <argument><expr><op:operator pos:line="97" pos:column="66">(</op:operator><name pos:line="97" pos:column="67">WPARAM</name><op:operator pos:line="97" pos:column="73">)</op:operator><op:operator pos:line="97" pos:column="74">&amp;</op:operator><name pos:line="97" pos:column="75">taskListInfo</name></expr></argument>, <argument><expr><name pos:line="97" pos:column="89">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="98" pos:column="9">for (<init><decl><type><name pos:line="98" pos:column="14">size_t</name></type> <name pos:line="98" pos:column="21">i</name> <init pos:line="98" pos:column="23">= <expr><lit:literal type="number" pos:line="98" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="98" pos:column="29">i</name> <op:operator pos:line="98" pos:column="31">&lt;</op:operator> <call><name><name pos:line="98" pos:column="33">taskListInfo</name><op:operator pos:line="98" pos:column="45">.</op:operator><name pos:line="98" pos:column="46">_tlfsLst</name><op:operator pos:line="98" pos:column="54">.</op:operator><name pos:line="98" pos:column="55">size</name></name><argument_list pos:line="98" pos:column="59">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="98" pos:column="64">i</name><op:operator pos:line="98" pos:column="65">++</op:operator></expr></incr>)
	<block pos:line="99" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="100" pos:column="17">TaskLstFnStatus</name> <type:modifier pos:line="100" pos:column="33">&amp;</type:modifier></type> <name pos:line="100" pos:column="35">fileNameStatus</name> <init pos:line="100" pos:column="50">= <expr><name><name pos:line="100" pos:column="52">taskListInfo</name><op:operator pos:line="100" pos:column="64">.</op:operator><name pos:line="100" pos:column="65">_tlfsLst</name><index pos:line="100" pos:column="73">[<expr><name pos:line="100" pos:column="74">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="102" pos:column="17">TaskLstFnStatus</name> <type:modifier pos:line="102" pos:column="33">*</type:modifier></type><name pos:line="102" pos:column="34">tl</name> <init pos:line="102" pos:column="37">= <expr><op:operator pos:line="102" pos:column="39">new</op:operator> <call><name pos:line="102" pos:column="43">TaskLstFnStatus</name><argument_list pos:line="102" pos:column="58">(<argument><expr><name><name pos:line="102" pos:column="59">fileNameStatus</name><op:operator pos:line="102" pos:column="73">.</op:operator><name pos:line="102" pos:column="74">_iView</name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="82">fileNameStatus</name><op:operator pos:line="102" pos:column="96">.</op:operator><name pos:line="102" pos:column="97">_docIndex</name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="108">fileNameStatus</name><op:operator pos:line="102" pos:column="122">.</op:operator><name pos:line="102" pos:column="123">_fn</name></name></expr></argument>, <argument><expr><name><name pos:line="102" pos:column="128">fileNameStatus</name><op:operator pos:line="102" pos:column="142">.</op:operator><name pos:line="102" pos:column="143">_status</name></name></expr></argument>, <argument><expr><op:operator pos:line="102" pos:column="152">(</op:operator><name pos:line="102" pos:column="153">void</name> <op:operator pos:line="102" pos:column="158">*</op:operator><op:operator pos:line="102" pos:column="159">)</op:operator><name><name pos:line="102" pos:column="160">fileNameStatus</name><op:operator pos:line="102" pos:column="174">.</op:operator><name pos:line="102" pos:column="175">_bufID</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="104" pos:column="17">TCHAR</name></type> <name><name pos:line="104" pos:column="23">fn</name><index pos:line="104" pos:column="25">[<expr><name pos:line="104" pos:column="26">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="105" pos:column="17">lstrcpy</name><argument_list pos:line="105" pos:column="24">(<argument><expr><name pos:line="105" pos:column="25">fn</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="105" pos:column="29">::</op:operator><name pos:line="105" pos:column="31">PathFindFileName</name></name><argument_list pos:line="105" pos:column="47">(<argument><expr><call><name><name pos:line="105" pos:column="48">fileNameStatus</name><op:operator pos:line="105" pos:column="62">.</op:operator><name pos:line="105" pos:column="63">_fn</name><op:operator pos:line="105" pos:column="66">.</op:operator><name pos:line="105" pos:column="67">c_str</name></name><argument_list pos:line="105" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="106" pos:column="17">::</op:operator><name pos:line="106" pos:column="19">PathRemoveExtension</name></name><argument_list pos:line="106" pos:column="38">(<argument><expr><name pos:line="106" pos:column="39">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="108" pos:column="17">LVITEM</name></type> <name pos:line="108" pos:column="24">item</name></decl>;</decl_stmt>
		<expr_stmt><expr><name><name pos:line="109" pos:column="17">item</name><op:operator pos:line="109" pos:column="21">.</op:operator><name pos:line="109" pos:column="22">mask</name></name> <op:operator pos:line="109" pos:column="27">=</op:operator> <name pos:line="109" pos:column="29">LVIF_TEXT</name> <op:operator pos:line="109" pos:column="39">|</op:operator> <name pos:line="109" pos:column="41">LVIF_IMAGE</name> <op:operator pos:line="109" pos:column="52">|</op:operator> <name pos:line="109" pos:column="54">LVIF_PARAM</name></expr>;</expr_stmt>
		
		<expr_stmt><expr><name><name pos:line="111" pos:column="17">item</name><op:operator pos:line="111" pos:column="21">.</op:operator><name pos:line="111" pos:column="22">pszText</name></name> <op:operator pos:line="111" pos:column="30">=</op:operator> <name pos:line="111" pos:column="32">fn</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="112" pos:column="17">item</name><op:operator pos:line="112" pos:column="21">.</op:operator><name pos:line="112" pos:column="22">iItem</name></name> <op:operator pos:line="112" pos:column="28">=</op:operator> <name pos:line="112" pos:column="30">i</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="113" pos:column="17">item</name><op:operator pos:line="113" pos:column="21">.</op:operator><name pos:line="113" pos:column="22">iSubItem</name></name> <op:operator pos:line="113" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="113" pos:column="33">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="114" pos:column="17">item</name><op:operator pos:line="114" pos:column="21">.</op:operator><name pos:line="114" pos:column="22">iImage</name></name> <op:operator pos:line="114" pos:column="29">=</op:operator> <name><name pos:line="114" pos:column="31">fileNameStatus</name><op:operator pos:line="114" pos:column="45">.</op:operator><name pos:line="114" pos:column="46">_status</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="115" pos:column="17">item</name><op:operator pos:line="115" pos:column="21">.</op:operator><name pos:line="115" pos:column="22">lParam</name></name> <op:operator pos:line="115" pos:column="29">=</op:operator> <op:operator pos:line="115" pos:column="31">(</op:operator><name pos:line="115" pos:column="32">LPARAM</name><op:operator pos:line="115" pos:column="38">)</op:operator><name pos:line="115" pos:column="39">tl</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="116" pos:column="17">ListView_InsertItem</name><argument_list pos:line="116" pos:column="36">(<argument><expr><name pos:line="116" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="116" pos:column="45">&amp;</op:operator><name pos:line="116" pos:column="46">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="117" pos:column="17">ListView_SetItemText</name><argument_list pos:line="117" pos:column="37">(<argument><expr><name pos:line="117" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="117" pos:column="46">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="117" pos:column="49">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="117" pos:column="52">(</op:operator><name pos:line="117" pos:column="53">LPTSTR</name><op:operator pos:line="117" pos:column="59">)</op:operator><call><name><op:operator pos:line="117" pos:column="60">::</op:operator><name pos:line="117" pos:column="62">PathFindExtension</name></name><argument_list pos:line="117" pos:column="79">(<argument><expr><call><name><name pos:line="117" pos:column="80">fileNameStatus</name><op:operator pos:line="117" pos:column="94">.</op:operator><name pos:line="117" pos:column="95">_fn</name><op:operator pos:line="117" pos:column="98">.</op:operator><name pos:line="117" pos:column="99">c_str</name></name><argument_list pos:line="117" pos:column="104">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function>

<function><type><name pos:line="121" pos:column="1">int</name></type> <name><name pos:line="121" pos:column="5">VerticalFileSwitcherListView</name><op:operator pos:line="121" pos:column="33">::</op:operator><name pos:line="121" pos:column="35">getBufferInfoFromIndex</name></name><parameter_list pos:line="121" pos:column="57">(<param><decl><type><name pos:line="121" pos:column="58">int</name></type> <name pos:line="121" pos:column="62">index</name></decl></param>, <param><decl><type><name pos:line="121" pos:column="69">int</name> <type:modifier pos:line="121" pos:column="73">&amp;</type:modifier></type> <name pos:line="121" pos:column="75">view</name></decl></param>)</parameter_list> <specifier pos:line="121" pos:column="81">const</specifier> <block pos:line="121" pos:column="87">{
	<decl_stmt><decl><type><name pos:line="122" pos:column="9">int</name></type> <name pos:line="122" pos:column="13">nbItem</name> <init pos:line="122" pos:column="20">= <expr><call><name pos:line="122" pos:column="22">ListView_GetItemCount</name><argument_list pos:line="122" pos:column="43">(<argument><expr><name pos:line="122" pos:column="44">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><name><name pos:line="123" pos:column="13">index</name> <argument_list pos:line="123" pos:column="19">&lt; <argument><expr><lit:literal type="number" pos:line="123" pos:column="21">0</lit:literal> <op:operator pos:line="123" pos:column="23">||</op:operator> <name pos:line="123" pos:column="26">index</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="123" pos:column="33">=</op:operator> <name pos:line="123" pos:column="35">nbItem</name></expr>)</condition><then pos:line="123" pos:column="42">
		<return pos:line="124" pos:column="17">return <expr><op:operator pos:line="124" pos:column="24">-</op:operator><lit:literal type="number" pos:line="124" pos:column="25">1</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="126" pos:column="9">LVITEM</name></type> <name pos:line="126" pos:column="16">item</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="127" pos:column="9">item</name><op:operator pos:line="127" pos:column="13">.</op:operator><name pos:line="127" pos:column="14">mask</name></name> <op:operator pos:line="127" pos:column="19">=</op:operator> <name pos:line="127" pos:column="21">LVIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="128" pos:column="9">item</name><op:operator pos:line="128" pos:column="13">.</op:operator><name pos:line="128" pos:column="14">iItem</name></name> <op:operator pos:line="128" pos:column="20">=</op:operator> <name pos:line="128" pos:column="22">index</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="129" pos:column="9">ListView_GetItem</name><argument_list pos:line="129" pos:column="25">(<argument><expr><name pos:line="129" pos:column="26">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="129" pos:column="34">&amp;</op:operator><name pos:line="129" pos:column="35">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="130" pos:column="9">TaskLstFnStatus</name> <type:modifier pos:line="130" pos:column="25">*</type:modifier></type><name pos:line="130" pos:column="26">tlfs</name> <init pos:line="130" pos:column="31">= <expr><op:operator pos:line="130" pos:column="33">(</op:operator><name pos:line="130" pos:column="34">TaskLstFnStatus</name> <op:operator pos:line="130" pos:column="50">*</op:operator><op:operator pos:line="130" pos:column="51">)</op:operator><name><name pos:line="130" pos:column="52">item</name><op:operator pos:line="130" pos:column="56">.</op:operator><name pos:line="130" pos:column="57">lParam</name></name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name pos:line="132" pos:column="9">view</name> <op:operator pos:line="132" pos:column="14">=</op:operator> <name><name pos:line="132" pos:column="16">tlfs</name><op:operator pos:line="132" pos:column="20">-&gt;</op:operator><name pos:line="132" pos:column="22">_iView</name></name></expr>;</expr_stmt>
	<return pos:line="133" pos:column="9">return <expr><call><name pos:line="133" pos:column="16">int</name><argument_list pos:line="133" pos:column="19">(<argument><expr><name><name pos:line="133" pos:column="20">tlfs</name><op:operator pos:line="133" pos:column="24">-&gt;</op:operator><name pos:line="133" pos:column="26">_bufID</name></name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="136" pos:column="1">int</name></type> <name><name pos:line="136" pos:column="5">VerticalFileSwitcherListView</name><op:operator pos:line="136" pos:column="33">::</op:operator><name pos:line="136" pos:column="35">newItem</name></name><parameter_list pos:line="136" pos:column="42">(<param><decl><type><name pos:line="136" pos:column="43">int</name></type> <name pos:line="136" pos:column="47">bufferID</name></decl></param>, <param><decl><type><name pos:line="136" pos:column="57">int</name></type> <name pos:line="136" pos:column="61">iView</name></decl></param>)</parameter_list>
<block pos:line="137" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="138" pos:column="9">int</name></type> <name pos:line="138" pos:column="13">i</name> <init pos:line="138" pos:column="15">= <expr><call><name pos:line="138" pos:column="17">find</name><argument_list pos:line="138" pos:column="21">(<argument><expr><name pos:line="138" pos:column="22">bufferID</name></expr></argument>, <argument><expr><name pos:line="138" pos:column="32">iView</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="139" pos:column="9">if <condition pos:line="139" pos:column="12">(<expr><name pos:line="139" pos:column="13">i</name> <op:operator pos:line="139" pos:column="15">==</op:operator> <op:operator pos:line="139" pos:column="18">-</op:operator><lit:literal type="number" pos:line="139" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="139" pos:column="21">
	<block pos:line="140" pos:column="9">{
		<expr_stmt><expr><name pos:line="141" pos:column="17">i</name> <op:operator pos:line="141" pos:column="19">=</op:operator> <call><name pos:line="141" pos:column="21">add</name><argument_list pos:line="141" pos:column="24">(<argument><expr><name pos:line="141" pos:column="25">bufferID</name></expr></argument>, <argument><expr><name pos:line="141" pos:column="35">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<return pos:line="143" pos:column="9">return <expr><name pos:line="143" pos:column="16">i</name></expr>;</return>
}</block></function>

<function><type><name pos:line="146" pos:column="1">void</name></type> <name><name pos:line="146" pos:column="6">VerticalFileSwitcherListView</name><op:operator pos:line="146" pos:column="34">::</op:operator><name pos:line="146" pos:column="36">setItemIconStatus</name></name><parameter_list pos:line="146" pos:column="53">(<param><decl><type><name pos:line="146" pos:column="54">int</name></type> <name pos:line="146" pos:column="58">bufferID</name></decl></param>)</parameter_list>
<block pos:line="147" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="148" pos:column="9">Buffer</name> <type:modifier pos:line="148" pos:column="16">*</type:modifier></type><name pos:line="148" pos:column="17">buf</name> <init pos:line="148" pos:column="21">= <expr><op:operator pos:line="148" pos:column="23">(</op:operator><name pos:line="148" pos:column="24">Buffer</name> <op:operator pos:line="148" pos:column="31">*</op:operator><op:operator pos:line="148" pos:column="32">)</op:operator><name pos:line="148" pos:column="33">bufferID</name></expr></init></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="150" pos:column="9">TCHAR</name></type> <name><name pos:line="150" pos:column="15">fn</name><index pos:line="150" pos:column="17">[<expr><name pos:line="150" pos:column="18">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="151" pos:column="9">lstrcpy</name><argument_list pos:line="151" pos:column="16">(<argument><expr><name pos:line="151" pos:column="17">fn</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="151" pos:column="21">::</op:operator><name pos:line="151" pos:column="23">PathFindFileName</name></name><argument_list pos:line="151" pos:column="39">(<argument><expr><call><name><name pos:line="151" pos:column="40">buf</name><op:operator pos:line="151" pos:column="43">-&gt;</op:operator><name pos:line="151" pos:column="45">getFileName</name></name><argument_list pos:line="151" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="152" pos:column="9">::</op:operator><name pos:line="152" pos:column="11">PathRemoveExtension</name></name><argument_list pos:line="152" pos:column="30">(<argument><expr><name pos:line="152" pos:column="31">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="154" pos:column="9">LVITEM</name></type> <name pos:line="154" pos:column="16">item</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="155" pos:column="9">item</name><op:operator pos:line="155" pos:column="13">.</op:operator><name pos:line="155" pos:column="14">pszText</name></name> <op:operator pos:line="155" pos:column="22">=</op:operator> <name pos:line="155" pos:column="24">fn</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="156" pos:column="9">item</name><op:operator pos:line="156" pos:column="13">.</op:operator><name pos:line="156" pos:column="14">iSubItem</name></name> <op:operator pos:line="156" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="156" pos:column="25">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="157" pos:column="9">item</name><op:operator pos:line="157" pos:column="13">.</op:operator><name pos:line="157" pos:column="14">iImage</name></name> <op:operator pos:line="157" pos:column="21">=</op:operator> <call><name><name pos:line="157" pos:column="23">buf</name><op:operator pos:line="157" pos:column="26">-&gt;</op:operator><name pos:line="157" pos:column="28">getUserReadOnly</name></name><argument_list pos:line="157" pos:column="43">()</argument_list></call><op:operator pos:line="157" pos:column="45">||</op:operator><call><name><name pos:line="157" pos:column="47">buf</name><op:operator pos:line="157" pos:column="50">-&gt;</op:operator><name pos:line="157" pos:column="52">getFileReadOnly</name></name><argument_list pos:line="157" pos:column="67">()</argument_list></call><op:operator pos:line="157" pos:column="69">?</op:operator><lit:literal type="number" pos:line="157" pos:column="70">2</lit:literal><op:operator pos:line="157" pos:column="71">:</op:operator><op:operator pos:line="157" pos:column="72">(</op:operator><call><name><name pos:line="157" pos:column="73">buf</name><op:operator pos:line="157" pos:column="76">-&gt;</op:operator><name pos:line="157" pos:column="78">isDirty</name></name><argument_list pos:line="157" pos:column="85">()</argument_list></call><op:operator pos:line="157" pos:column="87">?</op:operator><lit:literal type="number" pos:line="157" pos:column="88">1</lit:literal><op:operator pos:line="157" pos:column="89">:</op:operator><lit:literal type="number" pos:line="157" pos:column="90">0</lit:literal><op:operator pos:line="157" pos:column="91">)</op:operator></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="159" pos:column="9">int</name></type> <name pos:line="159" pos:column="13">nbItem</name> <init pos:line="159" pos:column="20">= <expr><call><name pos:line="159" pos:column="22">ListView_GetItemCount</name><argument_list pos:line="159" pos:column="43">(<argument><expr><name pos:line="159" pos:column="44">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<for pos:line="161" pos:column="9">for (<init><decl><type><name pos:line="161" pos:column="14">int</name></type> <name pos:line="161" pos:column="18">i</name> <init pos:line="161" pos:column="20">= <expr><lit:literal type="number" pos:line="161" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="161" pos:column="26">i</name> <op:operator pos:line="161" pos:column="28">&lt;</op:operator> <name pos:line="161" pos:column="30">nbItem</name></expr> ;</condition> <incr><expr><name pos:line="161" pos:column="39">i</name><op:operator pos:line="161" pos:column="40">++</op:operator></expr></incr>)
	<block pos:line="162" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="163" pos:column="17">item</name><op:operator pos:line="163" pos:column="21">.</op:operator><name pos:line="163" pos:column="22">mask</name></name> <op:operator pos:line="163" pos:column="27">=</op:operator> <name pos:line="163" pos:column="29">LVIF_PARAM</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="164" pos:column="17">item</name><op:operator pos:line="164" pos:column="21">.</op:operator><name pos:line="164" pos:column="22">iItem</name></name> <op:operator pos:line="164" pos:column="28">=</op:operator> <name pos:line="164" pos:column="30">i</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="165" pos:column="17">ListView_GetItem</name><argument_list pos:line="165" pos:column="33">(<argument><expr><name pos:line="165" pos:column="34">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="165" pos:column="42">&amp;</op:operator><name pos:line="165" pos:column="43">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="166" pos:column="17">TaskLstFnStatus</name> <type:modifier pos:line="166" pos:column="33">*</type:modifier></type><name pos:line="166" pos:column="34">tlfs</name> <init pos:line="166" pos:column="39">= <expr><op:operator pos:line="166" pos:column="41">(</op:operator><name pos:line="166" pos:column="42">TaskLstFnStatus</name> <op:operator pos:line="166" pos:column="58">*</op:operator><op:operator pos:line="166" pos:column="59">)</op:operator><op:operator pos:line="166" pos:column="60">(</op:operator><name><name pos:line="166" pos:column="61">item</name><op:operator pos:line="166" pos:column="65">.</op:operator><name pos:line="166" pos:column="66">lParam</name></name><op:operator pos:line="166" pos:column="72">)</op:operator></expr></init></decl>;</decl_stmt>
		<if pos:line="167" pos:column="17">if <condition pos:line="167" pos:column="20">(<expr><call><name pos:line="167" pos:column="21">int</name><argument_list pos:line="167" pos:column="24">(<argument><expr><name><name pos:line="167" pos:column="25">tlfs</name><op:operator pos:line="167" pos:column="29">-&gt;</op:operator><name pos:line="167" pos:column="31">_bufID</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="167" pos:column="39">==</op:operator> <name pos:line="167" pos:column="42">bufferID</name></expr>)</condition><then pos:line="167" pos:column="51">
		<block pos:line="168" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="169" pos:column="25">item</name><op:operator pos:line="169" pos:column="29">.</op:operator><name pos:line="169" pos:column="30">mask</name></name> <op:operator pos:line="169" pos:column="35">=</op:operator> <name pos:line="169" pos:column="37">LVIF_TEXT</name> <op:operator pos:line="169" pos:column="47">|</op:operator> <name pos:line="169" pos:column="49">LVIF_IMAGE</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="170" pos:column="25">ListView_SetItem</name><argument_list pos:line="170" pos:column="41">(<argument><expr><name pos:line="170" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="170" pos:column="50">&amp;</op:operator><name pos:line="170" pos:column="51">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="171" pos:column="25">ListView_SetItemText</name><argument_list pos:line="171" pos:column="45">(<argument><expr><name pos:line="171" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="171" pos:column="54">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="171" pos:column="57">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="171" pos:column="60">(</op:operator><name pos:line="171" pos:column="61">LPTSTR</name><op:operator pos:line="171" pos:column="67">)</op:operator><call><name><op:operator pos:line="171" pos:column="68">::</op:operator><name pos:line="171" pos:column="70">PathFindExtension</name></name><argument_list pos:line="171" pos:column="87">(<argument><expr><call><name><name pos:line="171" pos:column="88">buf</name><op:operator pos:line="171" pos:column="91">-&gt;</op:operator><name pos:line="171" pos:column="93">getFileName</name></name><argument_list pos:line="171" pos:column="104">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="176" pos:column="1">generic_string</name></type> <name><name pos:line="176" pos:column="16">VerticalFileSwitcherListView</name><op:operator pos:line="176" pos:column="44">::</op:operator><name pos:line="176" pos:column="46">getFullFilePath</name></name><parameter_list pos:line="176" pos:column="61">(<param><decl><type><name pos:line="176" pos:column="62">size_t</name></type> <name pos:line="176" pos:column="69">i</name></decl></param>)</parameter_list> <specifier pos:line="176" pos:column="72">const</specifier>
<block pos:line="177" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="178" pos:column="9">size_t</name></type> <name pos:line="178" pos:column="16">nbItem</name> <init pos:line="178" pos:column="23">= <expr><call><name pos:line="178" pos:column="25">ListView_GetItemCount</name><argument_list pos:line="178" pos:column="46">(<argument><expr><name pos:line="178" pos:column="47">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="179" pos:column="9">if <condition pos:line="179" pos:column="12">(<expr><name><name pos:line="179" pos:column="13">i</name> <argument_list pos:line="179" pos:column="15">&lt; <argument><expr><lit:literal type="number" pos:line="179" pos:column="17">0</lit:literal> <op:operator pos:line="179" pos:column="19">||</op:operator> <name pos:line="179" pos:column="22">i</name></expr></argument> &gt;</argument_list></name> <name pos:line="179" pos:column="26">nbItem</name></expr>)</condition><then pos:line="179" pos:column="33">
		<return pos:line="180" pos:column="17">return <expr><call><name pos:line="180" pos:column="24">TEXT</name><argument_list pos:line="180" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="180" pos:column="29">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="182" pos:column="9">LVITEM</name></type> <name pos:line="182" pos:column="16">item</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="183" pos:column="9">item</name><op:operator pos:line="183" pos:column="13">.</op:operator><name pos:line="183" pos:column="14">mask</name></name> <op:operator pos:line="183" pos:column="19">=</op:operator> <name pos:line="183" pos:column="21">LVIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="184" pos:column="9">item</name><op:operator pos:line="184" pos:column="13">.</op:operator><name pos:line="184" pos:column="14">iItem</name></name> <op:operator pos:line="184" pos:column="20">=</op:operator> <name pos:line="184" pos:column="22">i</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="185" pos:column="9">ListView_GetItem</name><argument_list pos:line="185" pos:column="25">(<argument><expr><name pos:line="185" pos:column="26">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="185" pos:column="34">&amp;</op:operator><name pos:line="185" pos:column="35">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="186" pos:column="9">TaskLstFnStatus</name> <type:modifier pos:line="186" pos:column="25">*</type:modifier></type><name pos:line="186" pos:column="26">tlfs</name> <init pos:line="186" pos:column="31">= <expr><op:operator pos:line="186" pos:column="33">(</op:operator><name pos:line="186" pos:column="34">TaskLstFnStatus</name> <op:operator pos:line="186" pos:column="50">*</op:operator><op:operator pos:line="186" pos:column="51">)</op:operator><name><name pos:line="186" pos:column="52">item</name><op:operator pos:line="186" pos:column="56">.</op:operator><name pos:line="186" pos:column="57">lParam</name></name></expr></init></decl>;</decl_stmt>

	<return pos:line="188" pos:column="9">return <expr><name><name pos:line="188" pos:column="16">tlfs</name><op:operator pos:line="188" pos:column="20">-&gt;</op:operator><name pos:line="188" pos:column="22">_fn</name></name></expr>;</return>
}</block></function>

<function><type><name pos:line="191" pos:column="1">int</name></type> <name><name pos:line="191" pos:column="5">VerticalFileSwitcherListView</name><op:operator pos:line="191" pos:column="33">::</op:operator><name pos:line="191" pos:column="35">closeItem</name></name><parameter_list pos:line="191" pos:column="44">(<param><decl><type><name pos:line="191" pos:column="45">int</name></type> <name pos:line="191" pos:column="49">bufferID</name></decl></param>, <param><decl><type><name pos:line="191" pos:column="59">int</name></type> <name pos:line="191" pos:column="63">iView</name></decl></param>)</parameter_list>
<block pos:line="192" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="193" pos:column="9">int</name></type> <name pos:line="193" pos:column="13">i</name> <init pos:line="193" pos:column="15">= <expr><call><name pos:line="193" pos:column="17">find</name><argument_list pos:line="193" pos:column="21">(<argument><expr><name pos:line="193" pos:column="22">bufferID</name></expr></argument>, <argument><expr><name pos:line="193" pos:column="32">iView</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="194" pos:column="9">if <condition pos:line="194" pos:column="12">(<expr><name pos:line="194" pos:column="13">i</name> <op:operator pos:line="194" pos:column="15">!=</op:operator> <op:operator pos:line="194" pos:column="18">-</op:operator><lit:literal type="number" pos:line="194" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="194" pos:column="21">
		<expr_stmt><expr><call><name pos:line="195" pos:column="17">remove</name><argument_list pos:line="195" pos:column="23">(<argument><expr><name pos:line="195" pos:column="24">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<return pos:line="196" pos:column="9">return <expr><name pos:line="196" pos:column="16">i</name></expr>;</return>
}</block></function>

<function><type><name pos:line="199" pos:column="1">void</name></type> <name><name pos:line="199" pos:column="6">VerticalFileSwitcherListView</name><op:operator pos:line="199" pos:column="34">::</op:operator><name pos:line="199" pos:column="36">activateItem</name></name><parameter_list pos:line="199" pos:column="48">(<param><decl><type><name pos:line="199" pos:column="49">int</name></type> <name pos:line="199" pos:column="53">bufferID</name></decl></param>, <param><decl><type><name pos:line="199" pos:column="63">int</name></type> <name pos:line="199" pos:column="67">iView</name></decl></param>)</parameter_list>
<block pos:line="200" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="201" pos:column="9">int</name></type> <name pos:line="201" pos:column="13">i</name> <init pos:line="201" pos:column="15">= <expr><call><name pos:line="201" pos:column="17">find</name><argument_list pos:line="201" pos:column="21">(<argument><expr><name pos:line="201" pos:column="22">bufferID</name></expr></argument>, <argument><expr><name pos:line="201" pos:column="32">iView</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="202" pos:column="9">if <condition pos:line="202" pos:column="12">(<expr><name pos:line="202" pos:column="13">i</name> <op:operator pos:line="202" pos:column="15">==</op:operator> <op:operator pos:line="202" pos:column="18">-</op:operator><lit:literal type="number" pos:line="202" pos:column="19">1</lit:literal></expr>)</condition><then pos:line="202" pos:column="21">
	<block pos:line="203" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="204" pos:column="17">newItem</name><argument_list pos:line="204" pos:column="24">(<argument><expr><name pos:line="204" pos:column="25">bufferID</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="35">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="206" pos:column="9">ListView_SetItemState</name><argument_list pos:line="206" pos:column="30">(<argument><expr><name pos:line="206" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="206" pos:column="39">i</name></expr></argument>, <argument><expr><name pos:line="206" pos:column="42">LVIS_FOCUSED</name><op:operator pos:line="206" pos:column="54">|</op:operator><name pos:line="206" pos:column="55">LVIS_SELECTED</name></expr></argument>, <argument><expr><name pos:line="206" pos:column="70">LVIS_FOCUSED</name><op:operator pos:line="206" pos:column="82">|</op:operator><name pos:line="206" pos:column="83">LVIS_SELECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="209" pos:column="1">int</name></type> <name><name pos:line="209" pos:column="5">VerticalFileSwitcherListView</name><op:operator pos:line="209" pos:column="33">::</op:operator><name pos:line="209" pos:column="35">add</name></name><parameter_list pos:line="209" pos:column="38">(<param><decl><type><name pos:line="209" pos:column="39">int</name></type> <name pos:line="209" pos:column="43">bufferID</name></decl></param>, <param><decl><type><name pos:line="209" pos:column="53">int</name></type> <name pos:line="209" pos:column="57">iView</name></decl></param>)</parameter_list>
<block pos:line="210" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="211" pos:column="9">int</name></type> <name pos:line="211" pos:column="13">index</name> <init pos:line="211" pos:column="19">= <expr><call><name pos:line="211" pos:column="21">ListView_GetItemCount</name><argument_list pos:line="211" pos:column="42">(<argument><expr><name pos:line="211" pos:column="43">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="212" pos:column="9">Buffer</name> <type:modifier pos:line="212" pos:column="16">*</type:modifier></type><name pos:line="212" pos:column="17">buf</name> <init pos:line="212" pos:column="21">= <expr><op:operator pos:line="212" pos:column="23">(</op:operator><name pos:line="212" pos:column="24">Buffer</name> <op:operator pos:line="212" pos:column="31">*</op:operator><op:operator pos:line="212" pos:column="32">)</op:operator><name pos:line="212" pos:column="33">bufferID</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="213" pos:column="9">const</specifier> <name pos:line="213" pos:column="15">TCHAR</name> <type:modifier pos:line="213" pos:column="21">*</type:modifier></type><name pos:line="213" pos:column="22">fileName</name> <init pos:line="213" pos:column="31">= <expr><call><name><name pos:line="213" pos:column="33">buf</name><op:operator pos:line="213" pos:column="36">-&gt;</op:operator><name pos:line="213" pos:column="38">getFileName</name></name><argument_list pos:line="213" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="215" pos:column="9">TaskLstFnStatus</name> <type:modifier pos:line="215" pos:column="25">*</type:modifier></type><name pos:line="215" pos:column="26">tl</name> <init pos:line="215" pos:column="29">= <expr><op:operator pos:line="215" pos:column="31">new</op:operator> <call><name pos:line="215" pos:column="35">TaskLstFnStatus</name><argument_list pos:line="215" pos:column="50">(<argument><expr><name pos:line="215" pos:column="51">iView</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="215" pos:column="58">0</lit:literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="61">fileName</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="215" pos:column="71">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="215" pos:column="74">(</op:operator><name pos:line="215" pos:column="75">void</name> <op:operator pos:line="215" pos:column="80">*</op:operator><op:operator pos:line="215" pos:column="81">)</op:operator><name pos:line="215" pos:column="82">bufferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="217" pos:column="9">TCHAR</name></type> <name><name pos:line="217" pos:column="15">fn</name><index pos:line="217" pos:column="17">[<expr><name pos:line="217" pos:column="18">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="218" pos:column="9">lstrcpy</name><argument_list pos:line="218" pos:column="16">(<argument><expr><name pos:line="218" pos:column="17">fn</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="218" pos:column="21">::</op:operator><name pos:line="218" pos:column="23">PathFindFileName</name></name><argument_list pos:line="218" pos:column="39">(<argument><expr><name pos:line="218" pos:column="40">fileName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="219" pos:column="9">::</op:operator><name pos:line="219" pos:column="11">PathRemoveExtension</name></name><argument_list pos:line="219" pos:column="30">(<argument><expr><name pos:line="219" pos:column="31">fn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="221" pos:column="9">LVITEM</name></type> <name pos:line="221" pos:column="16">item</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="222" pos:column="9">item</name><op:operator pos:line="222" pos:column="13">.</op:operator><name pos:line="222" pos:column="14">mask</name></name> <op:operator pos:line="222" pos:column="19">=</op:operator> <name pos:line="222" pos:column="21">LVIF_TEXT</name> <op:operator pos:line="222" pos:column="31">|</op:operator> <name pos:line="222" pos:column="33">LVIF_IMAGE</name> <op:operator pos:line="222" pos:column="44">|</op:operator> <name pos:line="222" pos:column="46">LVIF_PARAM</name></expr>;</expr_stmt>
	
	<expr_stmt><expr><name><name pos:line="224" pos:column="9">item</name><op:operator pos:line="224" pos:column="13">.</op:operator><name pos:line="224" pos:column="14">pszText</name></name> <op:operator pos:line="224" pos:column="22">=</op:operator> <name pos:line="224" pos:column="24">fn</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="225" pos:column="9">item</name><op:operator pos:line="225" pos:column="13">.</op:operator><name pos:line="225" pos:column="14">iItem</name></name> <op:operator pos:line="225" pos:column="20">=</op:operator> <name pos:line="225" pos:column="22">index</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="226" pos:column="9">item</name><op:operator pos:line="226" pos:column="13">.</op:operator><name pos:line="226" pos:column="14">iSubItem</name></name> <op:operator pos:line="226" pos:column="23">=</op:operator> <lit:literal type="number" pos:line="226" pos:column="25">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="227" pos:column="9">item</name><op:operator pos:line="227" pos:column="13">.</op:operator><name pos:line="227" pos:column="14">iImage</name></name> <op:operator pos:line="227" pos:column="21">=</op:operator> <call><name><name pos:line="227" pos:column="23">buf</name><op:operator pos:line="227" pos:column="26">-&gt;</op:operator><name pos:line="227" pos:column="28">getUserReadOnly</name></name><argument_list pos:line="227" pos:column="43">()</argument_list></call><op:operator pos:line="227" pos:column="45">||</op:operator><call><name><name pos:line="227" pos:column="47">buf</name><op:operator pos:line="227" pos:column="50">-&gt;</op:operator><name pos:line="227" pos:column="52">getFileReadOnly</name></name><argument_list pos:line="227" pos:column="67">()</argument_list></call><op:operator pos:line="227" pos:column="69">?</op:operator><lit:literal type="number" pos:line="227" pos:column="70">2</lit:literal><op:operator pos:line="227" pos:column="71">:</op:operator><op:operator pos:line="227" pos:column="72">(</op:operator><call><name><name pos:line="227" pos:column="73">buf</name><op:operator pos:line="227" pos:column="76">-&gt;</op:operator><name pos:line="227" pos:column="78">isDirty</name></name><argument_list pos:line="227" pos:column="85">()</argument_list></call><op:operator pos:line="227" pos:column="87">?</op:operator><lit:literal type="number" pos:line="227" pos:column="88">1</lit:literal><op:operator pos:line="227" pos:column="89">:</op:operator><lit:literal type="number" pos:line="227" pos:column="90">0</lit:literal><op:operator pos:line="227" pos:column="91">)</op:operator></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="228" pos:column="9">item</name><op:operator pos:line="228" pos:column="13">.</op:operator><name pos:line="228" pos:column="14">lParam</name></name> <op:operator pos:line="228" pos:column="21">=</op:operator> <op:operator pos:line="228" pos:column="23">(</op:operator><name pos:line="228" pos:column="24">LPARAM</name><op:operator pos:line="228" pos:column="30">)</op:operator><name pos:line="228" pos:column="31">tl</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="229" pos:column="9">ListView_InsertItem</name><argument_list pos:line="229" pos:column="28">(<argument><expr><name pos:line="229" pos:column="29">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="229" pos:column="37">&amp;</op:operator><name pos:line="229" pos:column="38">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name pos:line="231" pos:column="9">ListView_SetItemText</name><argument_list pos:line="231" pos:column="29">(<argument><expr><name pos:line="231" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="231" pos:column="38">index</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="231" pos:column="45">1</lit:literal></expr></argument>, <argument><expr><call><name><op:operator pos:line="231" pos:column="48">::</op:operator><name pos:line="231" pos:column="50">PathFindExtension</name></name><argument_list pos:line="231" pos:column="67">(<argument><expr><name pos:line="231" pos:column="68">fileName</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="232" pos:column="9">ListView_SetItemState</name><argument_list pos:line="232" pos:column="30">(<argument><expr><name pos:line="232" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="39">index</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="46">LVIS_FOCUSED</name><op:operator pos:line="232" pos:column="58">|</op:operator><name pos:line="232" pos:column="59">LVIS_SELECTED</name></expr></argument>, <argument><expr><name pos:line="232" pos:column="74">LVIS_FOCUSED</name><op:operator pos:line="232" pos:column="86">|</op:operator><name pos:line="232" pos:column="87">LVIS_SELECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<return pos:line="234" pos:column="9">return <expr><name pos:line="234" pos:column="16">index</name></expr>;</return>
}</block></function>

<function><type><name pos:line="237" pos:column="1">void</name></type> <name><name pos:line="237" pos:column="6">VerticalFileSwitcherListView</name><op:operator pos:line="237" pos:column="34">::</op:operator><name pos:line="237" pos:column="36">remove</name></name><parameter_list pos:line="237" pos:column="42">(<param><decl><type><name pos:line="237" pos:column="43">int</name></type> <name pos:line="237" pos:column="47">index</name></decl></param>)</parameter_list>
<block pos:line="238" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="239" pos:column="9">LVITEM</name></type> <name pos:line="239" pos:column="16">item</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="240" pos:column="9">item</name><op:operator pos:line="240" pos:column="13">.</op:operator><name pos:line="240" pos:column="14">mask</name></name> <op:operator pos:line="240" pos:column="19">=</op:operator> <name pos:line="240" pos:column="21">LVIF_PARAM</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="241" pos:column="9">item</name><op:operator pos:line="241" pos:column="13">.</op:operator><name pos:line="241" pos:column="14">iItem</name></name> <op:operator pos:line="241" pos:column="20">=</op:operator> <name pos:line="241" pos:column="22">index</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="242" pos:column="9">ListView_GetItem</name><argument_list pos:line="242" pos:column="25">(<argument><expr><name pos:line="242" pos:column="26">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="242" pos:column="34">&amp;</op:operator><name pos:line="242" pos:column="35">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="243" pos:column="9">TaskLstFnStatus</name> <type:modifier pos:line="243" pos:column="25">*</type:modifier></type><name pos:line="243" pos:column="26">tlfs</name> <init pos:line="243" pos:column="31">= <expr><op:operator pos:line="243" pos:column="33">(</op:operator><name pos:line="243" pos:column="34">TaskLstFnStatus</name> <op:operator pos:line="243" pos:column="50">*</op:operator><op:operator pos:line="243" pos:column="51">)</op:operator><name><name pos:line="243" pos:column="52">item</name><op:operator pos:line="243" pos:column="56">.</op:operator><name pos:line="243" pos:column="57">lParam</name></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="244" pos:column="9">delete</op:operator> <name pos:line="244" pos:column="16">tlfs</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="245" pos:column="9">ListView_DeleteItem</name><argument_list pos:line="245" pos:column="28">(<argument><expr><name pos:line="245" pos:column="29">_hSelf</name></expr></argument>, <argument><expr><name pos:line="245" pos:column="37">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="248" pos:column="1">int</name></type> <name><name pos:line="248" pos:column="5">VerticalFileSwitcherListView</name><op:operator pos:line="248" pos:column="33">::</op:operator><name pos:line="248" pos:column="35">find</name></name><parameter_list pos:line="248" pos:column="39">(<param><decl><type><name pos:line="248" pos:column="40">int</name></type> <name pos:line="248" pos:column="44">bufferID</name></decl></param>, <param><decl><type><name pos:line="248" pos:column="54">int</name></type> <name pos:line="248" pos:column="58">iView</name></decl></param>)</parameter_list> <specifier pos:line="248" pos:column="65">const</specifier>
<block pos:line="249" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="250" pos:column="9">LVITEM</name></type> <name pos:line="250" pos:column="16">item</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="251" pos:column="9">bool</name></type> <name pos:line="251" pos:column="14">found</name> <init pos:line="251" pos:column="20">= <expr><lit:literal type="boolean" pos:line="251" pos:column="22">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="252" pos:column="9">int</name></type> <name pos:line="252" pos:column="13">nbItem</name> <init pos:line="252" pos:column="20">= <expr><call><name pos:line="252" pos:column="22">ListView_GetItemCount</name><argument_list pos:line="252" pos:column="43">(<argument><expr><name pos:line="252" pos:column="44">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="253" pos:column="9">int</name></type> <name pos:line="253" pos:column="13">i</name> <init pos:line="253" pos:column="15">= <expr><lit:literal type="number" pos:line="253" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="254" pos:column="9">for (<init pos:line="254" pos:column="14">;</init> <condition><expr><name pos:line="254" pos:column="16">i</name> <op:operator pos:line="254" pos:column="18">&lt;</op:operator> <name pos:line="254" pos:column="20">nbItem</name></expr> ;</condition> <incr><expr><name pos:line="254" pos:column="29">i</name><op:operator pos:line="254" pos:column="30">++</op:operator></expr></incr>)
	<block pos:line="255" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="256" pos:column="17">item</name><op:operator pos:line="256" pos:column="21">.</op:operator><name pos:line="256" pos:column="22">mask</name></name> <op:operator pos:line="256" pos:column="27">=</op:operator> <name pos:line="256" pos:column="29">LVIF_PARAM</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="257" pos:column="17">item</name><op:operator pos:line="257" pos:column="21">.</op:operator><name pos:line="257" pos:column="22">iItem</name></name> <op:operator pos:line="257" pos:column="28">=</op:operator> <name pos:line="257" pos:column="30">i</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="258" pos:column="17">ListView_GetItem</name><argument_list pos:line="258" pos:column="33">(<argument><expr><name pos:line="258" pos:column="34">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="258" pos:column="42">&amp;</op:operator><name pos:line="258" pos:column="43">item</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="259" pos:column="17">TaskLstFnStatus</name> <type:modifier pos:line="259" pos:column="33">*</type:modifier></type><name pos:line="259" pos:column="34">tlfs</name> <init pos:line="259" pos:column="39">= <expr><op:operator pos:line="259" pos:column="41">(</op:operator><name pos:line="259" pos:column="42">TaskLstFnStatus</name> <op:operator pos:line="259" pos:column="58">*</op:operator><op:operator pos:line="259" pos:column="59">)</op:operator><name><name pos:line="259" pos:column="60">item</name><op:operator pos:line="259" pos:column="64">.</op:operator><name pos:line="259" pos:column="65">lParam</name></name></expr></init></decl>;</decl_stmt>
		<if pos:line="260" pos:column="17">if <condition pos:line="260" pos:column="20">(<expr><call><name pos:line="260" pos:column="21">int</name><argument_list pos:line="260" pos:column="24">(<argument><expr><name><name pos:line="260" pos:column="25">tlfs</name><op:operator pos:line="260" pos:column="29">-&gt;</op:operator><name pos:line="260" pos:column="31">_bufID</name></name></expr></argument>)</argument_list></call> <op:operator pos:line="260" pos:column="39">==</op:operator> <name pos:line="260" pos:column="42">bufferID</name> <op:operator pos:line="260" pos:column="51">&amp;&amp;</op:operator> <name><name pos:line="260" pos:column="54">tlfs</name><op:operator pos:line="260" pos:column="58">-&gt;</op:operator><name pos:line="260" pos:column="60">_iView</name></name> <op:operator pos:line="260" pos:column="67">==</op:operator> <name pos:line="260" pos:column="70">iView</name></expr>)</condition><then pos:line="260" pos:column="76">
		<block pos:line="261" pos:column="17">{
			<expr_stmt><expr><name pos:line="262" pos:column="25">found</name> <op:operator pos:line="262" pos:column="31">=</op:operator>  <lit:literal type="boolean" pos:line="262" pos:column="34">true</lit:literal></expr>;</expr_stmt>
			<break pos:line="263" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
	<return pos:line="266" pos:column="9">return <expr><op:operator pos:line="266" pos:column="16">(</op:operator><name pos:line="266" pos:column="17">found</name><op:operator pos:line="266" pos:column="22">?</op:operator><name pos:line="266" pos:column="23">i</name><op:operator pos:line="266" pos:column="24">:</op:operator><op:operator pos:line="266" pos:column="25">-</op:operator><lit:literal type="number" pos:line="266" pos:column="26">1</lit:literal><op:operator pos:line="266" pos:column="27">)</op:operator></expr>;</return>	
}</block></function>

<function><type><name pos:line="269" pos:column="1">void</name></type> <name><name pos:line="269" pos:column="6">VerticalFileSwitcherListView</name><op:operator pos:line="269" pos:column="34">::</op:operator><name pos:line="269" pos:column="36">insertColumn</name></name><parameter_list pos:line="269" pos:column="48">(<param><decl><type><name pos:line="269" pos:column="49">TCHAR</name> <type:modifier pos:line="269" pos:column="55">*</type:modifier></type><name pos:line="269" pos:column="56">name</name></decl></param>, <param><decl><type><name pos:line="269" pos:column="62">int</name></type> <name pos:line="269" pos:column="66">width</name></decl></param>, <param><decl><type><name pos:line="269" pos:column="73">int</name></type> <name pos:line="269" pos:column="77">index</name></decl></param>)</parameter_list>
<block pos:line="270" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="271" pos:column="9">LVCOLUMN</name></type> <name pos:line="271" pos:column="18">lvColumn</name></decl>;</decl_stmt>
 
	<expr_stmt><expr><name><name pos:line="273" pos:column="9">lvColumn</name><op:operator pos:line="273" pos:column="17">.</op:operator><name pos:line="273" pos:column="18">mask</name></name> <op:operator pos:line="273" pos:column="23">=</op:operator> <name pos:line="273" pos:column="25">LVCF_TEXT</name> <op:operator pos:line="273" pos:column="35">|</op:operator> <name pos:line="273" pos:column="37">LVCF_WIDTH</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="274" pos:column="9">lvColumn</name><op:operator pos:line="274" pos:column="17">.</op:operator><name pos:line="274" pos:column="18">cx</name></name> <op:operator pos:line="274" pos:column="21">=</op:operator> <name pos:line="274" pos:column="23">width</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="275" pos:column="9">lvColumn</name><op:operator pos:line="275" pos:column="17">.</op:operator><name pos:line="275" pos:column="18">pszText</name></name> <op:operator pos:line="275" pos:column="26">=</op:operator> <name pos:line="275" pos:column="28">name</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="276" pos:column="9">ListView_InsertColumn</name><argument_list pos:line="276" pos:column="30">(<argument><expr><name pos:line="276" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="276" pos:column="39">index</name></expr></argument>, <argument><expr><op:operator pos:line="276" pos:column="46">&amp;</op:operator><name pos:line="276" pos:column="47">lvColumn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
