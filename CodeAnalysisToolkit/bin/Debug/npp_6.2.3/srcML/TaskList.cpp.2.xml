<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\TaskList\TaskList.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"TaskList.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"TaskListDlg_rc.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"colors.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"ImageListSet.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="36" pos:column="1">void</name></type> <name><name pos:line="36" pos:column="6">TaskList</name><op:operator pos:line="36" pos:column="14">::</op:operator><name pos:line="36" pos:column="16">init</name></name><parameter_list pos:line="36" pos:column="20">(<param><decl><type><name pos:line="36" pos:column="21">HINSTANCE</name></type> <name pos:line="36" pos:column="31">hInst</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="38">HWND</name></type> <name pos:line="36" pos:column="43">parent</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="51">HIMAGELIST</name></type> <name pos:line="36" pos:column="62">hImaLst</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="71">int</name></type> <name pos:line="36" pos:column="75">nbItem</name></decl></param>, <param><decl><type><name pos:line="36" pos:column="83">int</name></type> <name pos:line="36" pos:column="87">index2set</name></decl></param>)</parameter_list>
<block pos:line="37" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="38" pos:column="9">Window</name><op:operator pos:line="38" pos:column="15">::</op:operator><name pos:line="38" pos:column="17">init</name></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="40" pos:column="9">_currentIndex</name> <op:operator pos:line="40" pos:column="23">=</op:operator> <name pos:line="40" pos:column="25">index2set</name></expr>;</expr_stmt>

    <decl_stmt><decl><type><name pos:line="42" pos:column="5">INITCOMMONCONTROLSEX</name></type> <name pos:line="42" pos:column="26">icex</name></decl>;</decl_stmt>
    
    <comment type="line" pos:line="44" pos:column="5">// Ensure that the common control DLL is loaded. </comment>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">icex</name><op:operator pos:line="45" pos:column="9">.</op:operator><name pos:line="45" pos:column="10">dwSize</name></name> <op:operator pos:line="45" pos:column="17">=</op:operator> <sizeof pos:line="45" pos:column="19">sizeof<argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">INITCOMMONCONTROLSEX</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">icex</name><op:operator pos:line="46" pos:column="9">.</op:operator><name pos:line="46" pos:column="10">dwICC</name></name>  <op:operator pos:line="46" pos:column="17">=</op:operator> <name pos:line="46" pos:column="19">ICC_LISTVIEW_CLASSES</name></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">InitCommonControlsEx</name><argument_list pos:line="47" pos:column="25">(<argument><expr><op:operator pos:line="47" pos:column="26">&amp;</op:operator><name pos:line="47" pos:column="27">icex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="49" pos:column="9">_nbItem</name> <op:operator pos:line="49" pos:column="17">=</op:operator> <name pos:line="49" pos:column="19">nbItem</name></expr>;</expr_stmt>
    
    <comment type="line" pos:line="51" pos:column="5">// Create the list-view window in report view with label editing enabled.</comment>
	<decl_stmt><decl><type><name pos:line="52" pos:column="9">int</name></type> <name pos:line="52" pos:column="13">listViewStyles</name> <init pos:line="52" pos:column="28">= <expr><name pos:line="52" pos:column="30">LVS_REPORT</name> <op:operator pos:line="52" pos:column="41">|</op:operator> <name pos:line="52" pos:column="43">LVS_OWNERDATA</name> <op:operator pos:line="52" pos:column="57">|</op:operator> <name pos:line="52" pos:column="59">LVS_NOCOLUMNHEADER</name> <op:operator pos:line="52" pos:column="78">|</op:operator> <name pos:line="52" pos:column="80">LVS_NOSORTHEADER</name>\
						<op:operator pos:line="53" pos:column="49">|</op:operator> <comment type="block" pos:line="53" pos:column="51">/*LVS_NOSCROLL |*/</comment> <name pos:line="53" pos:column="70">LVS_SINGLESEL</name> <op:operator pos:line="53" pos:column="84">|</op:operator> <name pos:line="53" pos:column="86">LVS_AUTOARRANGE</name> <op:operator pos:line="53" pos:column="102">|</op:operator> <name pos:line="53" pos:column="104">LVS_OWNERDRAWFIXED</name>\
						<op:operator pos:line="54" pos:column="49">|</op:operator> <name pos:line="54" pos:column="51">LVS_SHAREIMAGELISTS</name></expr></init></decl><comment type="block" pos:line="54" pos:column="70">/* | WS_BORDER*/</comment>;</decl_stmt>

	<expr_stmt><expr><name pos:line="56" pos:column="9">_hSelf</name> <op:operator pos:line="56" pos:column="16">=</op:operator> <call><name><op:operator pos:line="56" pos:column="18">::</op:operator><name pos:line="56" pos:column="20">CreateWindow</name></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">WC_LISTVIEW</name></expr></argument>, 
                                <argument><expr><call><name pos:line="57" pos:column="33">TEXT</name><argument_list pos:line="57" pos:column="37">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="38">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>, 
                                <argument><expr><name pos:line="58" pos:column="33">WS_CHILD</name> <op:operator pos:line="58" pos:column="42">|</op:operator> <name pos:line="58" pos:column="44">listViewStyles</name></expr></argument>,
                                <argument><expr><lit:literal type="number" pos:line="59" pos:column="33">0</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="number" pos:line="60" pos:column="33">0</lit:literal></expr></argument>, 
                                <argument><expr><lit:literal type="number" pos:line="61" pos:column="33">0</lit:literal></expr></argument>,
                                <argument><expr><lit:literal type="number" pos:line="62" pos:column="33">0</lit:literal></expr></argument>,
                                <argument><expr><name pos:line="63" pos:column="33">_hParent</name></expr></argument>, 
                                <argument><expr><op:operator pos:line="64" pos:column="33">(</op:operator><name pos:line="64" pos:column="34">HMENU</name><op:operator pos:line="64" pos:column="39">)</op:operator> <name pos:line="64" pos:column="41">NULL</name></expr></argument>, 
                                <argument><expr><name pos:line="65" pos:column="33">hInst</name></expr></argument>,
                                <argument><expr><name pos:line="66" pos:column="33">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><op:operator pos:line="67" pos:column="13">!</op:operator><name pos:line="67" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="67" pos:column="21">
	<block pos:line="68" pos:column="9">{
		<throw pos:line="69" pos:column="17">throw <expr><call><name><name pos:line="69" pos:column="23">std</name><op:operator pos:line="69" pos:column="26">::</op:operator><name pos:line="69" pos:column="28">runtime_error</name></name><argument_list pos:line="69" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="42">"TaskList::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<expr_stmt><expr><call><name><op:operator pos:line="72" pos:column="9">::</op:operator><name pos:line="72" pos:column="11">SetWindowLongPtr</name></name><argument_list pos:line="72" pos:column="27">(<argument><expr><name pos:line="72" pos:column="28">_hSelf</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="36">GWLP_USERDATA</name></expr></argument>, <argument><expr><op:operator pos:line="72" pos:column="51">(</op:operator><name pos:line="72" pos:column="52">LONG_PTR</name><op:operator pos:line="72" pos:column="60">)</op:operator><name pos:line="72" pos:column="61">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="73" pos:column="9">_defaultProc</name> <op:operator pos:line="73" pos:column="22">=</op:operator> <call><name><name pos:line="73" pos:column="24">reinterpret_cast</name><argument_list pos:line="73" pos:column="40">&lt;<argument><expr><name pos:line="73" pos:column="41">WNDPROC</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="73" pos:column="49">(<argument><expr><call><name><op:operator pos:line="73" pos:column="50">::</op:operator><name pos:line="73" pos:column="52">SetWindowLongPtr</name></name><argument_list pos:line="73" pos:column="68">(<argument><expr><name pos:line="73" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="73" pos:column="77">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="73" pos:column="91">(</op:operator><name pos:line="73" pos:column="92">LONG_PTR</name><op:operator pos:line="73" pos:column="100">)</op:operator><name pos:line="73" pos:column="101">staticProc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="75" pos:column="9">DWORD</name></type> <name pos:line="75" pos:column="15">exStyle</name> <init pos:line="75" pos:column="23">= <expr><call><name pos:line="75" pos:column="25">ListView_GetExtendedListViewStyle</name><argument_list pos:line="75" pos:column="58">(<argument><expr><name pos:line="75" pos:column="59">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="76" pos:column="9">exStyle</name> <op:operator pos:line="76" pos:column="17">|=</op:operator> <name pos:line="76" pos:column="20">LVS_EX_FULLROWSELECT</name> <op:operator pos:line="76" pos:column="41">|</op:operator> <name pos:line="76" pos:column="43">LVS_EX_BORDERSELECT</name></expr> ;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="77" pos:column="9">ListView_SetExtendedListViewStyle</name><argument_list pos:line="77" pos:column="42">(<argument><expr><name pos:line="77" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="77" pos:column="51">exStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


	<decl_stmt><decl><type><name pos:line="80" pos:column="9">LVCOLUMN</name></type> <name pos:line="80" pos:column="18">lvColumn</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="81" pos:column="9">lvColumn</name><op:operator pos:line="81" pos:column="17">.</op:operator><name pos:line="81" pos:column="18">mask</name></name> <op:operator pos:line="81" pos:column="23">=</op:operator> <name pos:line="81" pos:column="25">LVCF_WIDTH</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="83" pos:column="9">lvColumn</name><op:operator pos:line="83" pos:column="17">.</op:operator><name pos:line="83" pos:column="18">cx</name></name> <op:operator pos:line="83" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="83" pos:column="23">500</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="85" pos:column="9">ListView_InsertColumn</name><argument_list pos:line="85" pos:column="30">(<argument><expr><name pos:line="85" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="85" pos:column="39">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="85" pos:column="42">&amp;</op:operator><name pos:line="85" pos:column="43">lvColumn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="87" pos:column="9">ListView_SetItemCountEx</name><argument_list pos:line="87" pos:column="32">(<argument><expr><name pos:line="87" pos:column="33">_hSelf</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="41">_nbItem</name></expr></argument>, <argument><expr><name pos:line="87" pos:column="50">LVSICF_NOSCROLL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="88" pos:column="9">ListView_SetImageList</name><argument_list pos:line="88" pos:column="30">(<argument><expr><name pos:line="88" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="39">hImaLst</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="48">LVSIL_SMALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="90" pos:column="9">ListView_SetItemState</name><argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="90" pos:column="39">_currentIndex</name></expr></argument>, <argument><expr><name pos:line="90" pos:column="54">LVIS_SELECTED</name><op:operator pos:line="90" pos:column="67">|</op:operator><name pos:line="90" pos:column="68">LVIS_FOCUSED</name></expr></argument>, <argument><expr><name pos:line="90" pos:column="82">LVIS_SELECTED</name><op:operator pos:line="90" pos:column="95">|</op:operator><name pos:line="90" pos:column="96">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="91" pos:column="9">ListView_SetBkColor</name><argument_list pos:line="91" pos:column="28">(<argument><expr><name pos:line="91" pos:column="29">_hSelf</name></expr></argument>, <argument><expr><name pos:line="91" pos:column="37">lightYellow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="94" pos:column="1">void</name></type> <name><name pos:line="94" pos:column="6">TaskList</name><op:operator pos:line="94" pos:column="14">::</op:operator><name pos:line="94" pos:column="16">destroy</name></name><parameter_list pos:line="94" pos:column="23">()</parameter_list>
<block pos:line="95" pos:column="1">{
	<if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">_hFont</name></expr>)</condition><then pos:line="96" pos:column="20">
		<expr_stmt><expr><call><name pos:line="97" pos:column="17">DeleteObject</name><argument_list pos:line="97" pos:column="29">(<argument><expr><name pos:line="97" pos:column="30">_hFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name pos:line="98" pos:column="13">_hFontSelected</name></expr>)</condition><then pos:line="98" pos:column="28">
		<expr_stmt><expr><call><name pos:line="99" pos:column="17">DeleteObject</name><argument_list pos:line="99" pos:column="29">(<argument><expr><name pos:line="99" pos:column="30">_hFontSelected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="100" pos:column="9">::</op:operator><name pos:line="100" pos:column="11">DestroyWindow</name></name><argument_list pos:line="100" pos:column="24">(<argument><expr><name pos:line="100" pos:column="25">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="101" pos:column="9">_hSelf</name> <op:operator pos:line="101" pos:column="16">=</op:operator> <name pos:line="101" pos:column="18">NULL</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="104" pos:column="1">RECT</name></type> <name><name pos:line="104" pos:column="6">TaskList</name><op:operator pos:line="104" pos:column="14">::</op:operator><name pos:line="104" pos:column="16">adjustSize</name></name><parameter_list pos:line="104" pos:column="26">()</parameter_list>
<block pos:line="105" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="106" pos:column="9">RECT</name></type> <name pos:line="106" pos:column="14">rc</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="107" pos:column="9">ListView_GetItemRect</name><argument_list pos:line="107" pos:column="29">(<argument><expr><name pos:line="107" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="107" pos:column="38">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="107" pos:column="41">&amp;</op:operator><name pos:line="107" pos:column="42">rc</name></expr></argument>, <argument><expr><name pos:line="107" pos:column="46">LVIR_ICON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><specifier pos:line="108" pos:column="9">const</specifier> <name pos:line="108" pos:column="15">int</name></type> <name pos:line="108" pos:column="19">imgWidth</name> <init pos:line="108" pos:column="28">= <expr><name><name pos:line="108" pos:column="30">rc</name><op:operator pos:line="108" pos:column="32">.</op:operator><name pos:line="108" pos:column="33">right</name></name> <op:operator pos:line="108" pos:column="39">-</op:operator> <name><name pos:line="108" pos:column="41">rc</name><op:operator pos:line="108" pos:column="43">.</op:operator><name pos:line="108" pos:column="44">left</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="109" pos:column="9">const</specifier> <name pos:line="109" pos:column="15">int</name></type> <name pos:line="109" pos:column="19">leftMarge</name> <init pos:line="109" pos:column="29">= <expr><lit:literal type="number" pos:line="109" pos:column="31">30</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="110" pos:column="9">const</specifier> <name pos:line="110" pos:column="15">int</name></type> <name pos:line="110" pos:column="19">xpBottomMarge</name> <init pos:line="110" pos:column="33">= <expr><lit:literal type="number" pos:line="110" pos:column="35">5</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="111" pos:column="9">const</specifier> <name pos:line="111" pos:column="15">int</name></type> <name pos:line="111" pos:column="19">w7BottomMarge</name> <init pos:line="111" pos:column="33">= <expr><lit:literal type="number" pos:line="111" pos:column="35">15</lit:literal></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="113" pos:column="9">// Temporary set "selected" font to get the worst case widths</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="114" pos:column="9">::</op:operator><name pos:line="114" pos:column="11">SendMessage</name></name><argument_list pos:line="114" pos:column="22">(<argument><expr><name pos:line="114" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="114" pos:column="31">WM_SETFONT</name></expr></argument>, <argument><expr><call><name><name pos:line="114" pos:column="43">reinterpret_cast</name><argument_list pos:line="114" pos:column="59">&lt;<argument><expr><name pos:line="114" pos:column="60">WPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="114" pos:column="67">(<argument><expr><name pos:line="114" pos:column="68">_hFontSelected</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="114" pos:column="85">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="115" pos:column="9">int</name></type> <name pos:line="115" pos:column="13">maxwidth</name> <init pos:line="115" pos:column="22">= <expr><op:operator pos:line="115" pos:column="24">-</op:operator><lit:literal type="number" pos:line="115" pos:column="25">1</lit:literal></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="117" pos:column="9">_rc</name><op:operator pos:line="117" pos:column="12">.</op:operator><name pos:line="117" pos:column="13">left</name></name> <op:operator pos:line="117" pos:column="18">=</op:operator> <lit:literal type="number" pos:line="117" pos:column="20">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="118" pos:column="9">_rc</name><op:operator pos:line="118" pos:column="12">.</op:operator><name pos:line="118" pos:column="13">top</name></name> <op:operator pos:line="118" pos:column="17">=</op:operator> <lit:literal type="number" pos:line="118" pos:column="19">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="119" pos:column="9">_rc</name><op:operator pos:line="119" pos:column="12">.</op:operator><name pos:line="119" pos:column="13">bottom</name></name> <op:operator pos:line="119" pos:column="20">=</op:operator> <lit:literal type="number" pos:line="119" pos:column="22">0</lit:literal></expr>;</expr_stmt>
	<for pos:line="120" pos:column="9">for (<init><decl><type><name pos:line="120" pos:column="14">int</name></type> <name pos:line="120" pos:column="18">i</name> <init pos:line="120" pos:column="20">= <expr><lit:literal type="number" pos:line="120" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="120" pos:column="26">i</name> <op:operator pos:line="120" pos:column="28">&lt;</op:operator> <name pos:line="120" pos:column="30">_nbItem</name></expr> ;</condition> <incr><expr><name pos:line="120" pos:column="40">i</name><op:operator pos:line="120" pos:column="41">++</op:operator></expr></incr>)
	<block pos:line="121" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="122" pos:column="17">TCHAR</name></type> <name><name pos:line="122" pos:column="23">buf</name><index pos:line="122" pos:column="26">[<expr><name pos:line="122" pos:column="27">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="123" pos:column="17">ListView_GetItemText</name><argument_list pos:line="123" pos:column="37">(<argument><expr><name pos:line="123" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="123" pos:column="46">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="123" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="52">buf</name></expr></argument>, <argument><expr><name pos:line="123" pos:column="57">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="124" pos:column="17">int</name></type> <name pos:line="124" pos:column="21">width</name> <init pos:line="124" pos:column="27">= <expr><call><name pos:line="124" pos:column="29">ListView_GetStringWidth</name><argument_list pos:line="124" pos:column="52">(<argument><expr><name pos:line="124" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="124" pos:column="61">buf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><name pos:line="125" pos:column="21">width</name> <op:operator pos:line="125" pos:column="27">&gt;</op:operator> <name pos:line="125" pos:column="29">maxwidth</name></expr>)</condition><then pos:line="125" pos:column="38">
			<expr_stmt><expr><name pos:line="126" pos:column="25">maxwidth</name> <op:operator pos:line="126" pos:column="34">=</op:operator> <name pos:line="126" pos:column="36">width</name></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><name><name pos:line="127" pos:column="17">_rc</name><op:operator pos:line="127" pos:column="20">.</op:operator><name pos:line="127" pos:column="21">bottom</name></name> <op:operator pos:line="127" pos:column="28">+=</op:operator> <name><name pos:line="127" pos:column="31">rc</name><op:operator pos:line="127" pos:column="33">.</op:operator><name pos:line="127" pos:column="34">bottom</name></name> <op:operator pos:line="127" pos:column="41">-</op:operator> <name><name pos:line="127" pos:column="43">rc</name><op:operator pos:line="127" pos:column="45">.</op:operator><name pos:line="127" pos:column="46">top</name></name></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><name><name pos:line="129" pos:column="9">_rc</name><op:operator pos:line="129" pos:column="12">.</op:operator><name pos:line="129" pos:column="13">right</name></name> <op:operator pos:line="129" pos:column="19">=</op:operator> <name pos:line="129" pos:column="21">maxwidth</name> <op:operator pos:line="129" pos:column="30">+</op:operator> <name pos:line="129" pos:column="32">imgWidth</name> <op:operator pos:line="129" pos:column="41">+</op:operator> <name pos:line="129" pos:column="43">leftMarge</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="130" pos:column="9">ListView_SetColumnWidth</name><argument_list pos:line="130" pos:column="32">(<argument><expr><name pos:line="130" pos:column="33">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="130" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="44">_rc</name><op:operator pos:line="130" pos:column="47">.</op:operator><name pos:line="130" pos:column="48">right</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="131" pos:column="9">::</op:operator><name pos:line="131" pos:column="11">SendMessage</name></name><argument_list pos:line="131" pos:column="22">(<argument><expr><name pos:line="131" pos:column="23">_hSelf</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="31">WM_SETFONT</name></expr></argument>, <argument><expr><call><name><name pos:line="131" pos:column="43">reinterpret_cast</name><argument_list pos:line="131" pos:column="59">&lt;<argument><expr><name pos:line="131" pos:column="60">WPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="131" pos:column="67">(<argument><expr><name pos:line="131" pos:column="68">_hFont</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="131" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="133" pos:column="9">reSizeTo</name><argument_list pos:line="133" pos:column="17">(<argument><expr><name pos:line="133" pos:column="18">_rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="134" pos:column="9">winVer</name></type> <name pos:line="134" pos:column="16">ver</name> <init pos:line="134" pos:column="20">= <expr><op:operator pos:line="134" pos:column="22">(</op:operator><call><name><name pos:line="134" pos:column="23">NppParameters</name><op:operator pos:line="134" pos:column="36">::</op:operator><name pos:line="134" pos:column="38">getInstance</name></name><argument_list pos:line="134" pos:column="49">()</argument_list></call><op:operator pos:line="134" pos:column="51">)</op:operator><op:operator pos:line="134" pos:column="52">-&gt;</op:operator><call><name pos:line="134" pos:column="54">getWinVersion</name><argument_list pos:line="134" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="135" pos:column="9">_rc</name><op:operator pos:line="135" pos:column="12">.</op:operator><name pos:line="135" pos:column="13">bottom</name></name> <op:operator pos:line="135" pos:column="20">+=</op:operator> <name pos:line="135" pos:column="23">ver</name> <op:operator pos:line="135" pos:column="27">&lt;=</op:operator> <name pos:line="135" pos:column="30">WV_XP</name><op:operator pos:line="135" pos:column="35">?</op:operator><name pos:line="135" pos:column="36">xpBottomMarge</name><op:operator pos:line="135" pos:column="49">:</op:operator><name pos:line="135" pos:column="50">w7BottomMarge</name></expr>;</expr_stmt>
	<return pos:line="136" pos:column="9">return <expr><name pos:line="136" pos:column="16">_rc</name></expr>;</return>
}</block></function>

<function><type><name pos:line="139" pos:column="1">void</name></type> <name><name pos:line="139" pos:column="6">TaskList</name><op:operator pos:line="139" pos:column="14">::</op:operator><name pos:line="139" pos:column="16">setFont</name></name><parameter_list pos:line="139" pos:column="23">(<param><decl><type><name pos:line="139" pos:column="24">TCHAR</name> <type:modifier pos:line="139" pos:column="30">*</type:modifier></type><name pos:line="139" pos:column="31">fontName</name></decl></param>, <param><decl><type><name pos:line="139" pos:column="41">size_t</name></type> <name pos:line="139" pos:column="48">fontSize</name></decl></param>)</parameter_list>
<block pos:line="140" pos:column="1">{
	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><name pos:line="141" pos:column="13">_hFont</name></expr>)</condition><then pos:line="141" pos:column="20">
		<expr_stmt><expr><call><name><op:operator pos:line="142" pos:column="17">::</op:operator><name pos:line="142" pos:column="19">DeleteObject</name></name><argument_list pos:line="142" pos:column="31">(<argument><expr><name pos:line="142" pos:column="32">_hFont</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name pos:line="143" pos:column="13">_hFontSelected</name></expr>)</condition><then pos:line="143" pos:column="28">
		<expr_stmt><expr><call><name><op:operator pos:line="144" pos:column="17">::</op:operator><name pos:line="144" pos:column="19">DeleteObject</name></name><argument_list pos:line="144" pos:column="31">(<argument><expr><name pos:line="144" pos:column="32">_hFontSelected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="146" pos:column="9">_hFont</name> <op:operator pos:line="146" pos:column="16">=</op:operator> <call><name><op:operator pos:line="146" pos:column="18">::</op:operator><name pos:line="146" pos:column="20">CreateFont</name></name><argument_list pos:line="146" pos:column="30">(<argument><expr><name pos:line="146" pos:column="31">fontSize</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="146" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="146" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="146" pos:column="47">0</lit:literal></expr></argument>,
		                   <argument><expr><name pos:line="147" pos:column="36">FW_NORMAL</name></expr></argument>,
			               <argument><expr><lit:literal type="number" pos:line="148" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="148" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="148" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="148" pos:column="49">0</lit:literal></expr></argument>,
			               <argument><expr><lit:literal type="number" pos:line="149" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="149" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="149" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="149" pos:column="49">0</lit:literal></expr></argument>,
				           <argument><expr><name pos:line="150" pos:column="44">fontName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="152" pos:column="9">_hFontSelected</name> <op:operator pos:line="152" pos:column="24">=</op:operator> <call><name><op:operator pos:line="152" pos:column="26">::</op:operator><name pos:line="152" pos:column="28">CreateFont</name></name><argument_list pos:line="152" pos:column="38">(<argument><expr><name pos:line="152" pos:column="39">fontSize</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="152" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="152" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="152" pos:column="55">0</lit:literal></expr></argument>,
		                   <argument><expr><name pos:line="153" pos:column="36">FW_BOLD</name></expr></argument>,
			               <argument><expr><lit:literal type="number" pos:line="154" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="154" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="154" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="154" pos:column="49">0</lit:literal></expr></argument>,
			               <argument><expr><lit:literal type="number" pos:line="155" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="155" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="155" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="155" pos:column="49">0</lit:literal></expr></argument>,
				           <argument><expr><name pos:line="156" pos:column="44">fontName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="158" pos:column="9">if <condition pos:line="158" pos:column="12">(<expr><name pos:line="158" pos:column="13">_hFont</name></expr>)</condition><then pos:line="158" pos:column="20">
		<expr_stmt><expr><call><name><op:operator pos:line="159" pos:column="17">::</op:operator><name pos:line="159" pos:column="19">SendMessage</name></name><argument_list pos:line="159" pos:column="30">(<argument><expr><name pos:line="159" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="159" pos:column="39">WM_SETFONT</name></expr></argument>, <argument><expr><call><name><name pos:line="159" pos:column="51">reinterpret_cast</name><argument_list pos:line="159" pos:column="67">&lt;<argument><expr><name pos:line="159" pos:column="68">WPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="159" pos:column="75">(<argument><expr><name pos:line="159" pos:column="76">_hFont</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="159" pos:column="85">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function>

<function><type><name pos:line="162" pos:column="1">int</name></type> <name><name pos:line="162" pos:column="5">TaskList</name><op:operator pos:line="162" pos:column="13">::</op:operator><name pos:line="162" pos:column="15">updateCurrentIndex</name></name><parameter_list pos:line="162" pos:column="33">()</parameter_list>
<block pos:line="163" pos:column="1">{
	<for pos:line="164" pos:column="9">for (<init><decl><type><name pos:line="164" pos:column="14">int</name></type> <name pos:line="164" pos:column="18">i</name> <init pos:line="164" pos:column="20">= <expr><lit:literal type="number" pos:line="164" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="164" pos:column="26">i</name> <op:operator pos:line="164" pos:column="28">&lt;</op:operator> <name pos:line="164" pos:column="30">_nbItem</name></expr> ;</condition> <incr><expr><name pos:line="164" pos:column="40">i</name><op:operator pos:line="164" pos:column="41">++</op:operator></expr></incr>)
	<block pos:line="165" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="166" pos:column="17">int</name></type> <name pos:line="166" pos:column="21">isSelected</name> <init pos:line="166" pos:column="32">= <expr><call><name pos:line="166" pos:column="34">ListView_GetItemState</name><argument_list pos:line="166" pos:column="55">(<argument><expr><name pos:line="166" pos:column="56">_hSelf</name></expr></argument>, <argument><expr><name pos:line="166" pos:column="64">i</name></expr></argument>, <argument><expr><name pos:line="166" pos:column="67">LVIS_SELECTED</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="167" pos:column="17">if <condition pos:line="167" pos:column="20">(<expr><name pos:line="167" pos:column="21">isSelected</name> <op:operator pos:line="167" pos:column="32">==</op:operator> <name pos:line="167" pos:column="35">LVIS_SELECTED</name></expr>)</condition><then pos:line="167" pos:column="49">
		<block pos:line="168" pos:column="17">{
			<expr_stmt><expr><name pos:line="169" pos:column="25">_currentIndex</name> <op:operator pos:line="169" pos:column="39">=</op:operator> <name pos:line="169" pos:column="41">i</name></expr>;</expr_stmt>
			<return pos:line="170" pos:column="25">return <expr><name pos:line="170" pos:column="32">_currentIndex</name></expr>;</return>
		}</block></then></if>
	}</block></for>
	<return pos:line="173" pos:column="9">return <expr><name pos:line="173" pos:column="16">_currentIndex</name></expr>;</return>
}</block></function>

<function><type><name pos:line="176" pos:column="1">LRESULT</name></type> <name><name pos:line="176" pos:column="9">TaskList</name><op:operator pos:line="176" pos:column="17">::</op:operator><name pos:line="176" pos:column="19">runProc</name></name><parameter_list pos:line="176" pos:column="26">(<param><decl><type><name pos:line="176" pos:column="27">HWND</name></type> <name pos:line="176" pos:column="32">hwnd</name></decl></param>, <param><decl><type><name pos:line="176" pos:column="38">UINT</name></type> <name pos:line="176" pos:column="43">Message</name></decl></param>, <param><decl><type><name pos:line="176" pos:column="52">WPARAM</name></type> <name pos:line="176" pos:column="59">wParam</name></decl></param>, <param><decl><type><name pos:line="176" pos:column="67">LPARAM</name></type> <name pos:line="176" pos:column="74">lParam</name></decl></param>)</parameter_list>
<block pos:line="177" pos:column="1">{
	<switch pos:line="178" pos:column="9">switch <condition pos:line="178" pos:column="16">(<expr><name pos:line="178" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="179" pos:column="9">{
		<case pos:line="180" pos:column="17">case <expr><name pos:line="180" pos:column="22">WM_KEYUP</name></expr>:
		<block pos:line="181" pos:column="17">{
			<if pos:line="182" pos:column="25">if <condition pos:line="182" pos:column="28">(<expr><name pos:line="182" pos:column="29">wParam</name> <op:operator pos:line="182" pos:column="36">==</op:operator> <name pos:line="182" pos:column="39">VK_CONTROL</name></expr>)</condition><then pos:line="182" pos:column="50">
			<block pos:line="183" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="184" pos:column="33">::</op:operator><name pos:line="184" pos:column="35">SendMessage</name></name><argument_list pos:line="184" pos:column="46">(<argument><expr><name pos:line="184" pos:column="47">_hParent</name></expr></argument>, <argument><expr><name pos:line="184" pos:column="57">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="184" pos:column="69">ID_PICKEDUP</name></expr></argument>, <argument><expr><name pos:line="184" pos:column="82">_currentIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block>
		<return pos:line="187" pos:column="17">return <expr><name pos:line="187" pos:column="24">TRUE</name></expr>;</return>

		</case><case pos:line="189" pos:column="17">case <expr><name pos:line="189" pos:column="22">WM_MOUSEWHEEL</name></expr> :
		<block pos:line="190" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="191" pos:column="25">short</name></type> <name pos:line="191" pos:column="31">zDelta</name> <init pos:line="191" pos:column="38">= <expr><op:operator pos:line="191" pos:column="40">(</op:operator><name pos:line="191" pos:column="41">short</name><op:operator pos:line="191" pos:column="46">)</op:operator> <call><name pos:line="191" pos:column="48">HIWORD</name><argument_list pos:line="191" pos:column="54">(<argument><expr><name pos:line="191" pos:column="55">wParam</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="192" pos:column="25">if <condition pos:line="192" pos:column="28">(<expr><name pos:line="192" pos:column="29">zDelta</name> <op:operator pos:line="192" pos:column="36">&gt;</op:operator> <lit:literal type="number" pos:line="192" pos:column="38">0</lit:literal></expr>)</condition><then pos:line="192" pos:column="40">
			<block pos:line="193" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="194" pos:column="33">size_t</name></type> <name pos:line="194" pos:column="40">selected</name> <init pos:line="194" pos:column="49">= <expr><op:operator pos:line="194" pos:column="51">(</op:operator><name pos:line="194" pos:column="52">_currentIndex</name> <op:operator pos:line="194" pos:column="66">-</op:operator> <lit:literal type="number" pos:line="194" pos:column="68">1</lit:literal><op:operator pos:line="194" pos:column="69">)</op:operator> <op:operator pos:line="194" pos:column="71">&lt;</op:operator> <lit:literal type="number" pos:line="194" pos:column="73">0</lit:literal> <op:operator pos:line="194" pos:column="75">?</op:operator> <op:operator pos:line="194" pos:column="77">(</op:operator><name pos:line="194" pos:column="78">_nbItem</name> <op:operator pos:line="194" pos:column="86">-</op:operator> <lit:literal type="number" pos:line="194" pos:column="88">1</lit:literal><op:operator pos:line="194" pos:column="89">)</op:operator> <op:operator pos:line="194" pos:column="91">:</op:operator> <op:operator pos:line="194" pos:column="93">(</op:operator><name pos:line="194" pos:column="94">_currentIndex</name> <op:operator pos:line="194" pos:column="108">-</op:operator> <lit:literal type="number" pos:line="194" pos:column="110">1</lit:literal><op:operator pos:line="194" pos:column="111">)</op:operator></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="195" pos:column="33">ListView_SetItemState</name><argument_list pos:line="195" pos:column="54">(<argument><expr><name pos:line="195" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="195" pos:column="63">_currentIndex</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="195" pos:column="78">0</lit:literal></expr></argument>, <argument><expr><name pos:line="195" pos:column="81">LVIS_SELECTED</name><op:operator pos:line="195" pos:column="94">|</op:operator><name pos:line="195" pos:column="95">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="196" pos:column="33">// tells what item(s) to be repainted</comment>
				<expr_stmt><expr><call><name pos:line="197" pos:column="33">ListView_RedrawItems</name><argument_list pos:line="197" pos:column="53">(<argument><expr><name pos:line="197" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="197" pos:column="62">_currentIndex</name></expr></argument>, <argument><expr><name pos:line="197" pos:column="77">_currentIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="198" pos:column="33">// repaint item(s)</comment>
				<expr_stmt><expr><call><name pos:line="199" pos:column="33">UpdateWindow</name><argument_list pos:line="199" pos:column="45">(<argument><expr><name pos:line="199" pos:column="46">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
				<expr_stmt><expr><call><name pos:line="200" pos:column="33">ListView_SetItemState</name><argument_list pos:line="200" pos:column="54">(<argument><expr><name pos:line="200" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="200" pos:column="63">selected</name></expr></argument>, <argument><expr><name pos:line="200" pos:column="73">LVIS_SELECTED</name><op:operator pos:line="200" pos:column="86">|</op:operator><name pos:line="200" pos:column="87">LVIS_FOCUSED</name></expr></argument>, <argument><expr><name pos:line="200" pos:column="101">LVIS_SELECTED</name><op:operator pos:line="200" pos:column="114">|</op:operator><name pos:line="200" pos:column="115">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="201" pos:column="33">// tells what item(s) to be repainted</comment>
				<expr_stmt><expr><call><name pos:line="202" pos:column="33">ListView_RedrawItems</name><argument_list pos:line="202" pos:column="53">(<argument><expr><name pos:line="202" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="202" pos:column="62">selected</name></expr></argument>, <argument><expr><name pos:line="202" pos:column="72">selected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="203" pos:column="33">// repaint item(s)</comment>
				<expr_stmt><expr><call><name pos:line="204" pos:column="33">UpdateWindow</name><argument_list pos:line="204" pos:column="45">(<argument><expr><name pos:line="204" pos:column="46">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>              
				<expr_stmt><expr><name pos:line="205" pos:column="33">_currentIndex</name> <op:operator pos:line="205" pos:column="47">=</op:operator> <name pos:line="205" pos:column="49">selected</name></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="207" pos:column="25">else
			<block pos:line="208" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="209" pos:column="33">size_t</name></type> <name pos:line="209" pos:column="40">selected</name> <init pos:line="209" pos:column="49">= <expr><op:operator pos:line="209" pos:column="51">(</op:operator><name pos:line="209" pos:column="52">_currentIndex</name> <op:operator pos:line="209" pos:column="66">+</op:operator> <lit:literal type="number" pos:line="209" pos:column="68">1</lit:literal><op:operator pos:line="209" pos:column="69">)</op:operator> <op:operator pos:line="209" pos:column="71">&gt;</op:operator> <op:operator pos:line="209" pos:column="73">(</op:operator><name pos:line="209" pos:column="74">_nbItem</name> <op:operator pos:line="209" pos:column="82">-</op:operator> <lit:literal type="number" pos:line="209" pos:column="84">1</lit:literal><op:operator pos:line="209" pos:column="85">)</op:operator> <op:operator pos:line="209" pos:column="87">?</op:operator> <lit:literal type="number" pos:line="209" pos:column="89">0</lit:literal> <op:operator pos:line="209" pos:column="91">:</op:operator> <op:operator pos:line="209" pos:column="93">(</op:operator><name pos:line="209" pos:column="94">_currentIndex</name> <op:operator pos:line="209" pos:column="108">+</op:operator> <lit:literal type="number" pos:line="209" pos:column="110">1</lit:literal><op:operator pos:line="209" pos:column="111">)</op:operator></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="210" pos:column="33">ListView_SetItemState</name><argument_list pos:line="210" pos:column="54">(<argument><expr><name pos:line="210" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="63">_currentIndex</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="210" pos:column="78">0</lit:literal></expr></argument>, <argument><expr><name pos:line="210" pos:column="81">LVIS_SELECTED</name><op:operator pos:line="210" pos:column="94">|</op:operator><name pos:line="210" pos:column="95">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="211" pos:column="33">// tells what item(s) to be repainted</comment>
				<expr_stmt><expr><call><name pos:line="212" pos:column="33">ListView_RedrawItems</name><argument_list pos:line="212" pos:column="53">(<argument><expr><name pos:line="212" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="62">_currentIndex</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="77">_currentIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="213" pos:column="33">// repaint item(s)</comment>
				<expr_stmt><expr><call><name pos:line="214" pos:column="33">UpdateWindow</name><argument_list pos:line="214" pos:column="45">(<argument><expr><name pos:line="214" pos:column="46">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
				<expr_stmt><expr><call><name pos:line="215" pos:column="33">ListView_SetItemState</name><argument_list pos:line="215" pos:column="54">(<argument><expr><name pos:line="215" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="63">selected</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="73">LVIS_SELECTED</name><op:operator pos:line="215" pos:column="86">|</op:operator><name pos:line="215" pos:column="87">LVIS_FOCUSED</name></expr></argument>, <argument><expr><name pos:line="215" pos:column="101">LVIS_SELECTED</name><op:operator pos:line="215" pos:column="114">|</op:operator><name pos:line="215" pos:column="115">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="216" pos:column="33">// tells what item(s) to be repainted</comment>
				<expr_stmt><expr><call><name pos:line="217" pos:column="33">ListView_RedrawItems</name><argument_list pos:line="217" pos:column="53">(<argument><expr><name pos:line="217" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="217" pos:column="62">selected</name></expr></argument>, <argument><expr><name pos:line="217" pos:column="72">selected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="218" pos:column="33">// repaint item(s)</comment>
				<expr_stmt><expr><call><name pos:line="219" pos:column="33">UpdateWindow</name><argument_list pos:line="219" pos:column="45">(<argument><expr><name pos:line="219" pos:column="46">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>              
				<expr_stmt><expr><name pos:line="220" pos:column="33">_currentIndex</name> <op:operator pos:line="220" pos:column="47">=</op:operator> <name pos:line="220" pos:column="49">selected</name></expr>;</expr_stmt>
			}</block></else></if>
			<return pos:line="222" pos:column="25">return <expr><name pos:line="222" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="225" pos:column="17">case <expr><name pos:line="225" pos:column="22">WM_KEYDOWN</name></expr> :
		<block pos:line="226" pos:column="17">{
			<return pos:line="227" pos:column="25">return <expr><name pos:line="227" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		

		</case><case pos:line="231" pos:column="17">case <expr><name pos:line="231" pos:column="22">WM_GETDLGCODE</name></expr> :
		<block pos:line="232" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="233" pos:column="25">MSG</name> <type:modifier pos:line="233" pos:column="29">*</type:modifier></type><name pos:line="233" pos:column="30">msg</name> <init pos:line="233" pos:column="34">= <expr><op:operator pos:line="233" pos:column="36">(</op:operator><name pos:line="233" pos:column="37">MSG</name><op:operator pos:line="233" pos:column="40">*</op:operator><op:operator pos:line="233" pos:column="41">)</op:operator><name pos:line="233" pos:column="42">lParam</name></expr></init></decl>;</decl_stmt>

			<if pos:line="235" pos:column="25">if <condition pos:line="235" pos:column="28">( <expr><name pos:line="235" pos:column="30">msg</name> <op:operator pos:line="235" pos:column="34">!=</op:operator> <name pos:line="235" pos:column="37">NULL</name></expr>)</condition><then pos:line="235" pos:column="42">
			<block pos:line="236" pos:column="25">{
				<if pos:line="237" pos:column="33">if <condition pos:line="237" pos:column="36">(<expr><op:operator pos:line="237" pos:column="37">(</op:operator><name><name pos:line="237" pos:column="38">msg</name><op:operator pos:line="237" pos:column="41">-&gt;</op:operator><name pos:line="237" pos:column="43">message</name></name> <op:operator pos:line="237" pos:column="51">==</op:operator> <name pos:line="237" pos:column="54">WM_KEYDOWN</name><op:operator pos:line="237" pos:column="64">)</op:operator> <op:operator pos:line="237" pos:column="66">&amp;&amp;</op:operator> <op:operator pos:line="237" pos:column="69">(</op:operator><lit:literal type="number" pos:line="237" pos:column="70">0x80</lit:literal> <op:operator pos:line="237" pos:column="75">&amp;</op:operator> <call><name pos:line="237" pos:column="77">GetKeyState</name><argument_list pos:line="237" pos:column="88">(<argument><expr><name pos:line="237" pos:column="89">VK_CONTROL</name></expr></argument>)</argument_list></call><op:operator pos:line="237" pos:column="100">)</op:operator></expr>)</condition><then pos:line="237" pos:column="102">
				<block pos:line="238" pos:column="33">{
					<comment type="line" pos:line="239" pos:column="41">// Shift+Tab is cool but I think VK_UP and VK_LEFT are also cool :-)</comment>
					<if pos:line="240" pos:column="41">if <condition pos:line="240" pos:column="44">(<expr><op:operator pos:line="240" pos:column="45">(</op:operator><op:operator pos:line="240" pos:column="46">(</op:operator><name><name pos:line="240" pos:column="47">msg</name><op:operator pos:line="240" pos:column="50">-&gt;</op:operator><name pos:line="240" pos:column="52">wParam</name></name> <op:operator pos:line="240" pos:column="59">==</op:operator> <name pos:line="240" pos:column="62">VK_TAB</name><op:operator pos:line="240" pos:column="68">)</op:operator> <op:operator pos:line="240" pos:column="70">&amp;&amp;</op:operator> <op:operator pos:line="240" pos:column="73">(</op:operator><lit:literal type="number" pos:line="240" pos:column="74">0x80</lit:literal> <op:operator pos:line="240" pos:column="79">&amp;</op:operator> <call><name pos:line="240" pos:column="81">GetKeyState</name><argument_list pos:line="240" pos:column="92">(<argument><expr><name pos:line="240" pos:column="93">VK_SHIFT</name></expr></argument>)</argument_list></call><op:operator pos:line="240" pos:column="102">)</op:operator><op:operator pos:line="240" pos:column="103">)</op:operator> <op:operator pos:line="240" pos:column="105">||</op:operator>
					    <op:operator pos:line="241" pos:column="45">(</op:operator><name><name pos:line="241" pos:column="46">msg</name><op:operator pos:line="241" pos:column="49">-&gt;</op:operator><name pos:line="241" pos:column="51">wParam</name></name> <op:operator pos:line="241" pos:column="58">==</op:operator> <name pos:line="241" pos:column="61">VK_UP</name><op:operator pos:line="241" pos:column="66">)</op:operator></expr>)</condition><then pos:line="241" pos:column="68">
					<block pos:line="242" pos:column="41">{ 
						<decl_stmt><decl><type><name pos:line="243" pos:column="49">size_t</name></type> <name pos:line="243" pos:column="56">selected</name> <init pos:line="243" pos:column="65">= <expr><op:operator pos:line="243" pos:column="67">(</op:operator><name pos:line="243" pos:column="68">_currentIndex</name> <op:operator pos:line="243" pos:column="82">-</op:operator> <lit:literal type="number" pos:line="243" pos:column="84">1</lit:literal><op:operator pos:line="243" pos:column="85">)</op:operator> <op:operator pos:line="243" pos:column="87">&lt;</op:operator> <lit:literal type="number" pos:line="243" pos:column="89">0</lit:literal> <op:operator pos:line="243" pos:column="91">?</op:operator> <op:operator pos:line="243" pos:column="93">(</op:operator><name pos:line="243" pos:column="94">_nbItem</name> <op:operator pos:line="243" pos:column="102">-</op:operator> <lit:literal type="number" pos:line="243" pos:column="104">1</lit:literal><op:operator pos:line="243" pos:column="105">)</op:operator> <op:operator pos:line="243" pos:column="107">:</op:operator> <op:operator pos:line="243" pos:column="109">(</op:operator><name pos:line="243" pos:column="110">_currentIndex</name> <op:operator pos:line="243" pos:column="124">-</op:operator> <lit:literal type="number" pos:line="243" pos:column="126">1</lit:literal><op:operator pos:line="243" pos:column="127">)</op:operator></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name pos:line="244" pos:column="49">ListView_SetItemState</name><argument_list pos:line="244" pos:column="70">(<argument><expr><name pos:line="244" pos:column="71">_hSelf</name></expr></argument>, <argument><expr><name pos:line="244" pos:column="79">_currentIndex</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="244" pos:column="94">0</lit:literal></expr></argument>, <argument><expr><name pos:line="244" pos:column="97">LVIS_SELECTED</name><op:operator pos:line="244" pos:column="110">|</op:operator><name pos:line="244" pos:column="111">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="245" pos:column="49">// tells what item(s) to be repainted</comment>
						<expr_stmt><expr><call><name pos:line="246" pos:column="49">ListView_RedrawItems</name><argument_list pos:line="246" pos:column="69">(<argument><expr><name pos:line="246" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="246" pos:column="78">_currentIndex</name></expr></argument>, <argument><expr><name pos:line="246" pos:column="93">_currentIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="247" pos:column="49">// repaint item(s)</comment>
						<expr_stmt><expr><call><name pos:line="248" pos:column="49">UpdateWindow</name><argument_list pos:line="248" pos:column="61">(<argument><expr><name pos:line="248" pos:column="62">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
						<expr_stmt><expr><call><name pos:line="249" pos:column="49">ListView_SetItemState</name><argument_list pos:line="249" pos:column="70">(<argument><expr><name pos:line="249" pos:column="71">_hSelf</name></expr></argument>, <argument><expr><name pos:line="249" pos:column="79">selected</name></expr></argument>, <argument><expr><name pos:line="249" pos:column="89">LVIS_SELECTED</name><op:operator pos:line="249" pos:column="102">|</op:operator><name pos:line="249" pos:column="103">LVIS_FOCUSED</name></expr></argument>, <argument><expr><name pos:line="249" pos:column="117">LVIS_SELECTED</name><op:operator pos:line="249" pos:column="130">|</op:operator><name pos:line="249" pos:column="131">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="250" pos:column="49">// tells what item(s) to be repainted</comment>
						<expr_stmt><expr><call><name pos:line="251" pos:column="49">ListView_RedrawItems</name><argument_list pos:line="251" pos:column="69">(<argument><expr><name pos:line="251" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="251" pos:column="78">selected</name></expr></argument>, <argument><expr><name pos:line="251" pos:column="88">selected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="252" pos:column="49">// repaint item(s)</comment>
						<expr_stmt><expr><call><name pos:line="253" pos:column="49">UpdateWindow</name><argument_list pos:line="253" pos:column="61">(<argument><expr><name pos:line="253" pos:column="62">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>              
						<expr_stmt><expr><name pos:line="254" pos:column="49">_currentIndex</name> <op:operator pos:line="254" pos:column="63">=</op:operator> <name pos:line="254" pos:column="65">selected</name></expr>;</expr_stmt>
					}</block></then>
					<comment type="line" pos:line="256" pos:column="41">// VK_DOWN and VK_RIGHT do the same as VK_TAB does</comment>
					<else pos:line="257" pos:column="41">else <if pos:line="257" pos:column="46">if <condition pos:line="257" pos:column="49">(<expr><op:operator pos:line="257" pos:column="50">(</op:operator><name><name pos:line="257" pos:column="51">msg</name><op:operator pos:line="257" pos:column="54">-&gt;</op:operator><name pos:line="257" pos:column="56">wParam</name></name> <op:operator pos:line="257" pos:column="63">==</op:operator> <name pos:line="257" pos:column="66">VK_TAB</name><op:operator pos:line="257" pos:column="72">)</op:operator> <op:operator pos:line="257" pos:column="74">||</op:operator> <op:operator pos:line="257" pos:column="77">(</op:operator><name><name pos:line="257" pos:column="78">msg</name><op:operator pos:line="257" pos:column="81">-&gt;</op:operator><name pos:line="257" pos:column="83">wParam</name></name> <op:operator pos:line="257" pos:column="90">==</op:operator> <name pos:line="257" pos:column="93">VK_DOWN</name><op:operator pos:line="257" pos:column="100">)</op:operator></expr>)</condition><then pos:line="257" pos:column="102">
					<block pos:line="258" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="259" pos:column="49">size_t</name></type> <name pos:line="259" pos:column="56">selected</name> <init pos:line="259" pos:column="65">= <expr><op:operator pos:line="259" pos:column="67">(</op:operator><name pos:line="259" pos:column="68">_currentIndex</name> <op:operator pos:line="259" pos:column="82">+</op:operator> <lit:literal type="number" pos:line="259" pos:column="84">1</lit:literal><op:operator pos:line="259" pos:column="85">)</op:operator> <op:operator pos:line="259" pos:column="87">&gt;</op:operator> <op:operator pos:line="259" pos:column="89">(</op:operator><name pos:line="259" pos:column="90">_nbItem</name> <op:operator pos:line="259" pos:column="98">-</op:operator> <lit:literal type="number" pos:line="259" pos:column="100">1</lit:literal><op:operator pos:line="259" pos:column="101">)</op:operator> <op:operator pos:line="259" pos:column="103">?</op:operator> <lit:literal type="number" pos:line="259" pos:column="105">0</lit:literal> <op:operator pos:line="259" pos:column="107">:</op:operator> <op:operator pos:line="259" pos:column="109">(</op:operator><name pos:line="259" pos:column="110">_currentIndex</name> <op:operator pos:line="259" pos:column="124">+</op:operator> <lit:literal type="number" pos:line="259" pos:column="126">1</lit:literal><op:operator pos:line="259" pos:column="127">)</op:operator></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name pos:line="260" pos:column="49">ListView_SetItemState</name><argument_list pos:line="260" pos:column="70">(<argument><expr><name pos:line="260" pos:column="71">_hSelf</name></expr></argument>, <argument><expr><name pos:line="260" pos:column="79">_currentIndex</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="260" pos:column="94">0</lit:literal></expr></argument>, <argument><expr><name pos:line="260" pos:column="97">LVIS_SELECTED</name><op:operator pos:line="260" pos:column="110">|</op:operator><name pos:line="260" pos:column="111">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="261" pos:column="49">// tells what item(s) to be repainted</comment>
						<expr_stmt><expr><call><name pos:line="262" pos:column="49">ListView_RedrawItems</name><argument_list pos:line="262" pos:column="69">(<argument><expr><name pos:line="262" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="262" pos:column="78">_currentIndex</name></expr></argument>, <argument><expr><name pos:line="262" pos:column="93">_currentIndex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="263" pos:column="49">// repaint item(s)</comment>
						<expr_stmt><expr><call><name pos:line="264" pos:column="49">UpdateWindow</name><argument_list pos:line="264" pos:column="61">(<argument><expr><name pos:line="264" pos:column="62">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="265" pos:column="49">ListView_SetItemState</name><argument_list pos:line="265" pos:column="70">(<argument><expr><name pos:line="265" pos:column="71">_hSelf</name></expr></argument>, <argument><expr><name pos:line="265" pos:column="79">selected</name></expr></argument>, <argument><expr><name pos:line="265" pos:column="89">LVIS_SELECTED</name><op:operator pos:line="265" pos:column="102">|</op:operator><name pos:line="265" pos:column="103">LVIS_FOCUSED</name></expr></argument>, <argument><expr><name pos:line="265" pos:column="117">LVIS_SELECTED</name><op:operator pos:line="265" pos:column="130">|</op:operator><name pos:line="265" pos:column="131">LVIS_FOCUSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="266" pos:column="49">// tells what item(s) to be repainted</comment>
						<expr_stmt><expr><call><name pos:line="267" pos:column="49">ListView_RedrawItems</name><argument_list pos:line="267" pos:column="69">(<argument><expr><name pos:line="267" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="78">selected</name></expr></argument>, <argument><expr><name pos:line="267" pos:column="88">selected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<comment type="line" pos:line="268" pos:column="49">// repaint item(s)</comment>
						<expr_stmt><expr><call><name pos:line="269" pos:column="49">UpdateWindow</name><argument_list pos:line="269" pos:column="61">(<argument><expr><name pos:line="269" pos:column="62">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>              
						<expr_stmt><expr><name pos:line="270" pos:column="49">_currentIndex</name> <op:operator pos:line="270" pos:column="63">=</op:operator> <name pos:line="270" pos:column="65">selected</name></expr>;</expr_stmt>
					}</block></then></if></else></if>
				}</block></then>
				<else pos:line="273" pos:column="33">else
				<block pos:line="274" pos:column="33">{
					<return pos:line="275" pos:column="41">return <expr><name pos:line="275" pos:column="48">TRUE</name></expr>;</return>
				}</block></else></if>
			}</block></then></if>
			<return pos:line="278" pos:column="25">return <expr><name pos:line="278" pos:column="32">DLGC_WANTALLKEYS</name></expr>	;</return>
		}</block>

		</case><default pos:line="281" pos:column="17">default :
			<return pos:line="282" pos:column="25">return <expr><call><name><op:operator pos:line="282" pos:column="32">::</op:operator><name pos:line="282" pos:column="34">CallWindowProc</name></name><argument_list pos:line="282" pos:column="48">(<argument><expr><name pos:line="282" pos:column="49">_defaultProc</name></expr></argument>, <argument><expr><name pos:line="282" pos:column="63">hwnd</name></expr></argument>, <argument><expr><name pos:line="282" pos:column="69">Message</name></expr></argument>, <argument><expr><name pos:line="282" pos:column="78">wParam</name></expr></argument>, <argument><expr><name pos:line="282" pos:column="86">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
	</default>}</block></switch>
}</block></function>

</unit>
