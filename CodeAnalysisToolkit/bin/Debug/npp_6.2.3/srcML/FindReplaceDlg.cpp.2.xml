<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\ScitillaComponent\FindReplaceDlg.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"FindReplaceDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"ScintillaEditView.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"Notepad_plus_msgs.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"UniConversion.h"</lit:literal></cpp:file></cpp:include>

<decl_stmt><decl><type><name pos:line="35" pos:column="1">FindOption</name> <type:modifier pos:line="35" pos:column="12">*</type:modifier></type> <name><name pos:line="35" pos:column="14">FindReplaceDlg</name><op:operator pos:line="35" pos:column="28">::</op:operator><name pos:line="35" pos:column="30">_env</name></name></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="36" pos:column="1">FindOption</name></type> <name><name pos:line="36" pos:column="12">FindReplaceDlg</name><op:operator pos:line="36" pos:column="26">::</op:operator><name pos:line="36" pos:column="28">_options</name></name></decl>;</decl_stmt>

<function><type><name pos:line="38" pos:column="1">int</name></type> <name><name pos:line="38" pos:column="5">Searching</name><op:operator pos:line="38" pos:column="14">::</op:operator><name pos:line="38" pos:column="16">convertExtendedToString</name></name><parameter_list pos:line="38" pos:column="39">(<param><decl><type><specifier pos:line="38" pos:column="40">const</specifier> <name pos:line="38" pos:column="46">TCHAR</name> <type:modifier pos:line="38" pos:column="52">*</type:modifier></type> <name pos:line="38" pos:column="54">query</name></decl></param>, <param><decl><type><name pos:line="38" pos:column="61">TCHAR</name> <type:modifier pos:line="38" pos:column="67">*</type:modifier></type> <name pos:line="38" pos:column="69">result</name></decl></param>, <param><decl><type><name pos:line="38" pos:column="77">int</name></type> <name pos:line="38" pos:column="81">length</name></decl></param>)</parameter_list> <block pos:line="38" pos:column="89">{	<comment type="line" pos:line="38" pos:column="97">//query may equal to result, since it always gets smaller</comment>
	<decl_stmt><decl><type><name pos:line="39" pos:column="9">int</name></type> <name pos:line="39" pos:column="13">i</name> <init pos:line="39" pos:column="15">= <expr><lit:literal type="number" pos:line="39" pos:column="17">0</lit:literal></expr></init><op:operator pos:line="39" pos:column="18">,</op:operator> <name pos:line="39" pos:column="20">j</name> <init pos:line="39" pos:column="22">= <expr><lit:literal type="number" pos:line="39" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">int</name></type> <name pos:line="40" pos:column="13">charLeft</name> <init pos:line="40" pos:column="22">= <expr><name pos:line="40" pos:column="24">length</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="41" pos:column="9">bool</name></type> <name pos:line="41" pos:column="14">isGood</name> <init pos:line="41" pos:column="21">= <expr><lit:literal type="boolean" pos:line="41" pos:column="23">true</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">TCHAR</name></type> <name pos:line="42" pos:column="15">current</name></decl>;</decl_stmt>
	<while pos:line="43" pos:column="9">while<condition pos:line="43" pos:column="14">(<expr><name pos:line="43" pos:column="15">i</name> <op:operator pos:line="43" pos:column="17">&lt;</op:operator> <name pos:line="43" pos:column="19">length</name></expr>)</condition> <block pos:line="43" pos:column="27">{	<comment type="line" pos:line="43" pos:column="33">//because the backslash escape quences always reduce the size of the generic_string, no overflow checks have to be made for target, assuming parameters are correct</comment>
		<expr_stmt><expr><name pos:line="44" pos:column="17">current</name> <op:operator pos:line="44" pos:column="25">=</op:operator> <name><name pos:line="44" pos:column="27">query</name><index pos:line="44" pos:column="32">[<expr><name pos:line="44" pos:column="33">i</name></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="45" pos:column="17">charLeft</name><op:operator pos:line="45" pos:column="25">--</op:operator></expr>;</expr_stmt>
		<if pos:line="46" pos:column="17">if <condition pos:line="46" pos:column="20">(<expr><name pos:line="46" pos:column="21">current</name> <op:operator pos:line="46" pos:column="29">==</op:operator> <lit:literal type="char" pos:line="46" pos:column="32">'\\'</lit:literal> <op:operator pos:line="46" pos:column="37">&amp;&amp;</op:operator> <name pos:line="46" pos:column="40">charLeft</name></expr>)</condition><then pos:line="46" pos:column="49"> <block pos:line="46" pos:column="50">{	<comment type="line" pos:line="46" pos:column="57">//possible escape sequence</comment>
			<expr_stmt><expr><name pos:line="47" pos:column="25">i</name><op:operator pos:line="47" pos:column="26">++</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="48" pos:column="25">charLeft</name><op:operator pos:line="48" pos:column="33">--</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="49" pos:column="25">current</name> <op:operator pos:line="49" pos:column="33">=</op:operator> <name><name pos:line="49" pos:column="35">query</name><index pos:line="49" pos:column="40">[<expr><name pos:line="49" pos:column="41">i</name></expr>]</index></name></expr>;</expr_stmt>
			<switch pos:line="50" pos:column="25">switch<condition pos:line="50" pos:column="31">(<expr><name pos:line="50" pos:column="32">current</name></expr>)</condition> <block pos:line="50" pos:column="41">{
				<case pos:line="51" pos:column="33">case <expr><lit:literal type="char" pos:line="51" pos:column="38">'r'</lit:literal></expr>:
					<expr_stmt><expr><name><name pos:line="52" pos:column="41">result</name><index pos:line="52" pos:column="47">[<expr><name pos:line="52" pos:column="48">j</name></expr>]</index></name> <op:operator pos:line="52" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="52" pos:column="53">'\r'</lit:literal></expr>;</expr_stmt>
					<break pos:line="53" pos:column="41">break;</break>
				</case><case pos:line="54" pos:column="33">case <expr><lit:literal type="char" pos:line="54" pos:column="38">'n'</lit:literal></expr>:
					<expr_stmt><expr><name><name pos:line="55" pos:column="41">result</name><index pos:line="55" pos:column="47">[<expr><name pos:line="55" pos:column="48">j</name></expr>]</index></name> <op:operator pos:line="55" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="55" pos:column="53">'\n'</lit:literal></expr>;</expr_stmt>
					<break pos:line="56" pos:column="41">break;</break>
				</case><case pos:line="57" pos:column="33">case <expr><lit:literal type="char" pos:line="57" pos:column="38">'0'</lit:literal></expr>:
					<expr_stmt><expr><name><name pos:line="58" pos:column="41">result</name><index pos:line="58" pos:column="47">[<expr><name pos:line="58" pos:column="48">j</name></expr>]</index></name> <op:operator pos:line="58" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="58" pos:column="53">'\0'</lit:literal></expr>;</expr_stmt>
					<break pos:line="59" pos:column="41">break;</break>
				</case><case pos:line="60" pos:column="33">case <expr><lit:literal type="char" pos:line="60" pos:column="38">'t'</lit:literal></expr>:
					<expr_stmt><expr><name><name pos:line="61" pos:column="41">result</name><index pos:line="61" pos:column="47">[<expr><name pos:line="61" pos:column="48">j</name></expr>]</index></name> <op:operator pos:line="61" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="61" pos:column="53">'\t'</lit:literal></expr>;</expr_stmt>
					<break pos:line="62" pos:column="41">break;</break>
				</case><case pos:line="63" pos:column="33">case <expr><lit:literal type="char" pos:line="63" pos:column="38">'\\'</lit:literal></expr>:
					<expr_stmt><expr><name><name pos:line="64" pos:column="41">result</name><index pos:line="64" pos:column="47">[<expr><name pos:line="64" pos:column="48">j</name></expr>]</index></name> <op:operator pos:line="64" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="64" pos:column="53">'\\'</lit:literal></expr>;</expr_stmt>
					<break pos:line="65" pos:column="41">break;</break>
				</case><case pos:line="66" pos:column="33">case <expr><lit:literal type="char" pos:line="66" pos:column="38">'b'</lit:literal></expr>:
				</case><case pos:line="67" pos:column="33">case <expr><lit:literal type="char" pos:line="67" pos:column="38">'d'</lit:literal></expr>:
				</case><case pos:line="68" pos:column="33">case <expr><lit:literal type="char" pos:line="68" pos:column="38">'o'</lit:literal></expr>:
				</case><case pos:line="69" pos:column="33">case <expr><lit:literal type="char" pos:line="69" pos:column="38">'x'</lit:literal></expr>:
				</case><case pos:line="70" pos:column="33">case <expr><lit:literal type="char" pos:line="70" pos:column="38">'u'</lit:literal></expr>: <block pos:line="70" pos:column="43">{
					<decl_stmt><decl><type><name pos:line="71" pos:column="41">int</name></type> <name pos:line="71" pos:column="45">size</name> <init pos:line="71" pos:column="50">= <expr><lit:literal type="number" pos:line="71" pos:column="52">0</lit:literal></expr></init><op:operator pos:line="71" pos:column="53">,</op:operator> <name pos:line="71" pos:column="55">base</name> <init pos:line="71" pos:column="60">= <expr><lit:literal type="number" pos:line="71" pos:column="62">0</lit:literal></expr></init></decl>;</decl_stmt>
					<if pos:line="72" pos:column="41">if <condition pos:line="72" pos:column="44">(<expr><name pos:line="72" pos:column="45">current</name> <op:operator pos:line="72" pos:column="53">==</op:operator> <lit:literal type="char" pos:line="72" pos:column="56">'b'</lit:literal></expr>)</condition><then pos:line="72" pos:column="60"> <block pos:line="72" pos:column="61">{			<comment type="line" pos:line="72" pos:column="81">//11111111</comment>
						<expr_stmt><expr><name pos:line="73" pos:column="49">size</name> <op:operator pos:line="73" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="73" pos:column="56">8</lit:literal></expr><op:operator pos:line="73" pos:column="57">,</op:operator> <expr><name pos:line="73" pos:column="59">base</name> <op:operator pos:line="73" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="73" pos:column="66">2</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="74" pos:column="43">else <if pos:line="74" pos:column="48">if <condition pos:line="74" pos:column="51">(<expr><name pos:line="74" pos:column="52">current</name> <op:operator pos:line="74" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="74" pos:column="63">'o'</lit:literal></expr>)</condition><then pos:line="74" pos:column="67"> <block pos:line="74" pos:column="68">{	<comment type="line" pos:line="74" pos:column="73">//377</comment>
						<expr_stmt><expr><name pos:line="75" pos:column="49">size</name> <op:operator pos:line="75" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="75" pos:column="56">3</lit:literal></expr><op:operator pos:line="75" pos:column="57">,</op:operator> <expr><name pos:line="75" pos:column="59">base</name> <op:operator pos:line="75" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="75" pos:column="66">8</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="76" pos:column="43">else <if pos:line="76" pos:column="48">if <condition pos:line="76" pos:column="51">(<expr><name pos:line="76" pos:column="52">current</name> <op:operator pos:line="76" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="76" pos:column="63">'d'</lit:literal></expr>)</condition><then pos:line="76" pos:column="67"> <block pos:line="76" pos:column="68">{	<comment type="line" pos:line="76" pos:column="73">//255</comment>
						<expr_stmt><expr><name pos:line="77" pos:column="49">size</name> <op:operator pos:line="77" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="77" pos:column="56">3</lit:literal></expr><op:operator pos:line="77" pos:column="57">,</op:operator> <expr><name pos:line="77" pos:column="59">base</name> <op:operator pos:line="77" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="77" pos:column="66">10</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="78" pos:column="43">else <if pos:line="78" pos:column="48">if <condition pos:line="78" pos:column="51">(<expr><name pos:line="78" pos:column="52">current</name> <op:operator pos:line="78" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="78" pos:column="63">'x'</lit:literal></expr>)</condition><then pos:line="78" pos:column="67"> <block pos:line="78" pos:column="68">{	<comment type="line" pos:line="78" pos:column="73">//0xFF</comment>
						<expr_stmt><expr><name pos:line="79" pos:column="49">size</name> <op:operator pos:line="79" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="79" pos:column="56">2</lit:literal></expr><op:operator pos:line="79" pos:column="57">,</op:operator> <expr><name pos:line="79" pos:column="59">base</name> <op:operator pos:line="79" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="79" pos:column="66">16</lit:literal></expr>;</expr_stmt>
					}</block></then> <else pos:line="80" pos:column="43">else <if pos:line="80" pos:column="48">if <condition pos:line="80" pos:column="51">(<expr><name pos:line="80" pos:column="52">current</name> <op:operator pos:line="80" pos:column="60">==</op:operator> <lit:literal type="char" pos:line="80" pos:column="63">'u'</lit:literal></expr>)</condition><then pos:line="80" pos:column="67"> <block pos:line="80" pos:column="68">{	<comment type="line" pos:line="80" pos:column="73">//0xCDCD</comment>
						<expr_stmt><expr><name pos:line="81" pos:column="49">size</name> <op:operator pos:line="81" pos:column="54">=</op:operator> <lit:literal type="number" pos:line="81" pos:column="56">4</lit:literal></expr><op:operator pos:line="81" pos:column="57">,</op:operator> <expr><name pos:line="81" pos:column="59">base</name> <op:operator pos:line="81" pos:column="64">=</op:operator> <lit:literal type="number" pos:line="81" pos:column="66">16</lit:literal></expr>;</expr_stmt>
					}</block></then></if></else></if></else></if></else></if></else></if>
					<if pos:line="83" pos:column="41">if <condition pos:line="83" pos:column="44">(<expr><name pos:line="83" pos:column="45">charLeft</name> <op:operator pos:line="83" pos:column="54">&gt;=</op:operator> <name pos:line="83" pos:column="57">size</name></expr>)</condition><then pos:line="83" pos:column="62"> <block pos:line="83" pos:column="63">{
						<decl_stmt><decl><type><name pos:line="84" pos:column="49">int</name></type> <name pos:line="84" pos:column="53">res</name> <init pos:line="84" pos:column="57">= <expr><lit:literal type="number" pos:line="84" pos:column="59">0</lit:literal></expr></init></decl>;</decl_stmt>
						<if pos:line="85" pos:column="49">if <condition pos:line="85" pos:column="52">(<expr><call><name><name pos:line="85" pos:column="53">Searching</name><op:operator pos:line="85" pos:column="62">::</op:operator><name pos:line="85" pos:column="64">readBase</name></name><argument_list pos:line="85" pos:column="72">(<argument><expr><name pos:line="85" pos:column="73">query</name><op:operator pos:line="85" pos:column="78">+</op:operator><op:operator pos:line="85" pos:column="79">(</op:operator><name pos:line="85" pos:column="80">i</name><op:operator pos:line="85" pos:column="81">+</op:operator><lit:literal type="number" pos:line="85" pos:column="82">1</lit:literal><op:operator pos:line="85" pos:column="83">)</op:operator></expr></argument>, <argument><expr><op:operator pos:line="85" pos:column="86">&amp;</op:operator><name pos:line="85" pos:column="87">res</name></expr></argument>, <argument><expr><name pos:line="85" pos:column="92">base</name></expr></argument>, <argument><expr><name pos:line="85" pos:column="98">size</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="85" pos:column="104"> <block pos:line="85" pos:column="105">{
							<expr_stmt><expr><name><name pos:line="86" pos:column="57">result</name><index pos:line="86" pos:column="63">[<expr><name pos:line="86" pos:column="64">j</name></expr>]</index></name> <op:operator pos:line="86" pos:column="67">=</op:operator> <op:operator pos:line="86" pos:column="69">(</op:operator><name pos:line="86" pos:column="70">TCHAR</name><op:operator pos:line="86" pos:column="75">)</op:operator><name pos:line="86" pos:column="76">res</name></expr>;</expr_stmt>
							<expr_stmt><expr><name pos:line="87" pos:column="57">i</name><op:operator pos:line="87" pos:column="58">+=</op:operator><name pos:line="87" pos:column="60">size</name></expr>;</expr_stmt>
							<break pos:line="88" pos:column="57">break;</break>
						}</block></then></if>
					}</block></then></if>
					<comment type="line" pos:line="91" pos:column="41">//not enough chars to make parameter, use default method as fallback</comment>
					}</block>
				</case><default pos:line="93" pos:column="33">default: <block pos:line="93" pos:column="42">{	<comment type="line" pos:line="93" pos:column="49">//unknown sequence, treat as regular text</comment>
					<expr_stmt><expr><name><name pos:line="94" pos:column="41">result</name><index pos:line="94" pos:column="47">[<expr><name pos:line="94" pos:column="48">j</name></expr>]</index></name> <op:operator pos:line="94" pos:column="51">=</op:operator> <lit:literal type="char" pos:line="94" pos:column="53">'\\'</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="95" pos:column="41">j</name><op:operator pos:line="95" pos:column="42">++</op:operator></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="96" pos:column="41">result</name><index pos:line="96" pos:column="47">[<expr><name pos:line="96" pos:column="48">j</name></expr>]</index></name> <op:operator pos:line="96" pos:column="51">=</op:operator> <name pos:line="96" pos:column="53">current</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="97" pos:column="41">isGood</name> <op:operator pos:line="97" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="97" pos:column="50">false</lit:literal></expr>;</expr_stmt>
					<break pos:line="98" pos:column="41">break;</break>
				}</block>
			</default>}</block></switch>
		}</block></then> <else pos:line="101" pos:column="19">else <block pos:line="101" pos:column="24">{
			<expr_stmt><expr><name><name pos:line="102" pos:column="25">result</name><index pos:line="102" pos:column="31">[<expr><name pos:line="102" pos:column="32">j</name></expr>]</index></name> <op:operator pos:line="102" pos:column="35">=</op:operator> <name><name pos:line="102" pos:column="37">query</name><index pos:line="102" pos:column="42">[<expr><name pos:line="102" pos:column="43">i</name></expr>]</index></name></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="104" pos:column="17">i</name><op:operator pos:line="104" pos:column="18">++</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="105" pos:column="17">j</name><op:operator pos:line="105" pos:column="18">++</op:operator></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><name><name pos:line="107" pos:column="9">result</name><index pos:line="107" pos:column="15">[<expr><name pos:line="107" pos:column="16">j</name></expr>]</index></name> <op:operator pos:line="107" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="107" pos:column="21">0</lit:literal></expr>;</expr_stmt>
	<return pos:line="108" pos:column="9">return <expr><name pos:line="108" pos:column="16">j</name></expr>;</return>
}</block></function>

<function><type><name pos:line="111" pos:column="1">bool</name></type> <name><name pos:line="111" pos:column="6">Searching</name><op:operator pos:line="111" pos:column="15">::</op:operator><name pos:line="111" pos:column="17">readBase</name></name><parameter_list pos:line="111" pos:column="25">(<param><decl><type><specifier pos:line="111" pos:column="26">const</specifier> <name pos:line="111" pos:column="32">TCHAR</name> <type:modifier pos:line="111" pos:column="38">*</type:modifier></type> <name pos:line="111" pos:column="40">str</name></decl></param>, <param><decl><type><name pos:line="111" pos:column="45">int</name> <type:modifier pos:line="111" pos:column="49">*</type:modifier></type> <name pos:line="111" pos:column="51">value</name></decl></param>, <param><decl><type><name pos:line="111" pos:column="58">int</name></type> <name pos:line="111" pos:column="62">base</name></decl></param>, <param><decl><type><name pos:line="111" pos:column="68">int</name></type> <name pos:line="111" pos:column="72">size</name></decl></param>)</parameter_list> <block pos:line="111" pos:column="78">{
	<decl_stmt><decl><type><name pos:line="112" pos:column="9">int</name></type> <name pos:line="112" pos:column="13">i</name> <init pos:line="112" pos:column="15">= <expr><lit:literal type="number" pos:line="112" pos:column="17">0</lit:literal></expr></init><op:operator pos:line="112" pos:column="18">,</op:operator> <name pos:line="112" pos:column="20">temp</name> <init pos:line="112" pos:column="25">= <expr><lit:literal type="number" pos:line="112" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="113" pos:column="9">*</op:operator><name pos:line="113" pos:column="10">value</name> <op:operator pos:line="113" pos:column="16">=</op:operator> <lit:literal type="number" pos:line="113" pos:column="18">0</lit:literal></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="114" pos:column="9">TCHAR</name></type> <name pos:line="114" pos:column="15">max</name> <init pos:line="114" pos:column="19">= <expr><lit:literal type="char" pos:line="114" pos:column="21">'0'</lit:literal> <op:operator pos:line="114" pos:column="25">+</op:operator> <op:operator pos:line="114" pos:column="27">(</op:operator><name pos:line="114" pos:column="28">TCHAR</name><op:operator pos:line="114" pos:column="33">)</op:operator><name pos:line="114" pos:column="34">base</name> <op:operator pos:line="114" pos:column="39">-</op:operator> <lit:literal type="number" pos:line="114" pos:column="41">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="115" pos:column="9">TCHAR</name></type> <name pos:line="115" pos:column="15">current</name></decl>;</decl_stmt>
	<while pos:line="116" pos:column="9">while<condition pos:line="116" pos:column="14">(<expr><name pos:line="116" pos:column="15">i</name> <op:operator pos:line="116" pos:column="17">&lt;</op:operator> <name pos:line="116" pos:column="19">size</name></expr>)</condition> <block pos:line="116" pos:column="25">{
		<expr_stmt><expr><name pos:line="117" pos:column="17">current</name> <op:operator pos:line="117" pos:column="25">=</op:operator> <name><name pos:line="117" pos:column="27">str</name><index pos:line="117" pos:column="30">[<expr><name pos:line="117" pos:column="31">i</name></expr>]</index></name></expr>;</expr_stmt>
		<if pos:line="118" pos:column="17">if <condition pos:line="118" pos:column="20">(<expr><name pos:line="118" pos:column="21">current</name> <op:operator pos:line="118" pos:column="29">&gt;=</op:operator> <lit:literal type="char" pos:line="118" pos:column="32">'A'</lit:literal></expr>)</condition><then pos:line="118" pos:column="36"> 
		<block pos:line="119" pos:column="17">{
			<expr_stmt><expr><name pos:line="120" pos:column="25">current</name> <op:operator pos:line="120" pos:column="33">&amp;=</op:operator> <lit:literal type="number" pos:line="120" pos:column="36">0xdf</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="121" pos:column="25">current</name> <op:operator pos:line="121" pos:column="33">-=</op:operator> <op:operator pos:line="121" pos:column="36">(</op:operator><lit:literal type="char" pos:line="121" pos:column="37">'A'</lit:literal> <op:operator pos:line="121" pos:column="41">-</op:operator> <lit:literal type="char" pos:line="121" pos:column="43">'0'</lit:literal> <op:operator pos:line="121" pos:column="47">-</op:operator> <lit:literal type="number" pos:line="121" pos:column="49">10</lit:literal><op:operator pos:line="121" pos:column="51">)</op:operator></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="123" pos:column="17">else <if pos:line="123" pos:column="22">if <condition pos:line="123" pos:column="25">(<expr><name pos:line="123" pos:column="26">current</name> <op:operator pos:line="123" pos:column="34">&gt;</op:operator> <lit:literal type="char" pos:line="123" pos:column="36">'9'</lit:literal></expr>)</condition><then pos:line="123" pos:column="40">
			<return pos:line="124" pos:column="25">return <expr><lit:literal type="boolean" pos:line="124" pos:column="32">false</lit:literal></expr>;</return></then></if></else></if>

		<if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><name pos:line="126" pos:column="21">current</name> <op:operator pos:line="126" pos:column="29">&gt;=</op:operator> <lit:literal type="char" pos:line="126" pos:column="32">'0'</lit:literal> <op:operator pos:line="126" pos:column="36">&amp;&amp;</op:operator> <name pos:line="126" pos:column="39">current</name> <op:operator pos:line="126" pos:column="47">&lt;=</op:operator> <name pos:line="126" pos:column="50">max</name></expr>)</condition><then pos:line="126" pos:column="54"> <block pos:line="126" pos:column="55">{
			<expr_stmt><expr><name pos:line="127" pos:column="25">temp</name> <op:operator pos:line="127" pos:column="30">*=</op:operator> <name pos:line="127" pos:column="33">base</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="128" pos:column="25">temp</name> <op:operator pos:line="128" pos:column="30">+=</op:operator> <op:operator pos:line="128" pos:column="33">(</op:operator><name pos:line="128" pos:column="34">current</name> <op:operator pos:line="128" pos:column="42">-</op:operator> <lit:literal type="char" pos:line="128" pos:column="44">'0'</lit:literal><op:operator pos:line="128" pos:column="47">)</op:operator></expr>;</expr_stmt>
		}</block></then> <else pos:line="129" pos:column="19">else <block pos:line="129" pos:column="24">{
			<return pos:line="130" pos:column="25">return <expr><lit:literal type="boolean" pos:line="130" pos:column="32">false</lit:literal></expr>;</return>
		}</block></else></if>
		<expr_stmt><expr><name pos:line="132" pos:column="17">i</name><op:operator pos:line="132" pos:column="18">++</op:operator></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><op:operator pos:line="134" pos:column="9">*</op:operator><name pos:line="134" pos:column="10">value</name> <op:operator pos:line="134" pos:column="16">=</op:operator> <name pos:line="134" pos:column="18">temp</name></expr>;</expr_stmt>
	<return pos:line="135" pos:column="9">return <expr><lit:literal type="boolean" pos:line="135" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="138" pos:column="1">void</name></type> <name><name pos:line="138" pos:column="6">Searching</name><op:operator pos:line="138" pos:column="15">::</op:operator><name pos:line="138" pos:column="17">displaySectionCentered</name></name><parameter_list pos:line="138" pos:column="39">(<param><decl><type><name pos:line="138" pos:column="40">int</name></type> <name pos:line="138" pos:column="44">posStart</name></decl></param>, <param><decl><type><name pos:line="138" pos:column="54">int</name></type> <name pos:line="138" pos:column="58">posEnd</name></decl></param>, <param><decl><type><name pos:line="138" pos:column="66">ScintillaEditView</name> <type:modifier pos:line="138" pos:column="84">*</type:modifier></type> <name pos:line="138" pos:column="86">pEditView</name></decl></param>, <param><decl><type><name pos:line="138" pos:column="97">bool</name></type> <name pos:line="138" pos:column="102">isDownwards</name></decl></param>)</parameter_list> 
<block pos:line="139" pos:column="1">{
	<comment type="line" pos:line="140" pos:column="9">// to make sure the found result is visible</comment>
	<comment type="line" pos:line="141" pos:column="9">//When searching up, the beginning of the (possible multiline) result is important, when scrolling down the end</comment>
	<decl_stmt><decl><type><name pos:line="142" pos:column="9">int</name></type> <name pos:line="142" pos:column="13">testPos</name> <init pos:line="142" pos:column="21">= <expr><op:operator pos:line="142" pos:column="23">(</op:operator><name pos:line="142" pos:column="24">isDownwards</name><op:operator pos:line="142" pos:column="35">)</op:operator><op:operator pos:line="142" pos:column="36">?</op:operator><name pos:line="142" pos:column="37">posEnd</name><op:operator pos:line="142" pos:column="43">:</op:operator><name pos:line="142" pos:column="44">posStart</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="143" pos:column="9">pEditView</name><op:operator pos:line="143" pos:column="18">-&gt;</op:operator><name pos:line="143" pos:column="20">execute</name></name><argument_list pos:line="143" pos:column="27">(<argument><expr><name pos:line="143" pos:column="28">SCI_SETCURRENTPOS</name></expr></argument>, <argument><expr><name pos:line="143" pos:column="47">testPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="144" pos:column="9">int</name></type> <name pos:line="144" pos:column="13">currentlineNumberDoc</name> <init pos:line="144" pos:column="34">= <expr><op:operator pos:line="144" pos:column="36">(</op:operator><name pos:line="144" pos:column="37">int</name><op:operator pos:line="144" pos:column="40">)</op:operator><call><name><name pos:line="144" pos:column="41">pEditView</name><op:operator pos:line="144" pos:column="50">-&gt;</op:operator><name pos:line="144" pos:column="52">execute</name></name><argument_list pos:line="144" pos:column="59">(<argument><expr><name pos:line="144" pos:column="60">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="82">testPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="145" pos:column="9">int</name></type> <name pos:line="145" pos:column="13">currentlineNumberVis</name> <init pos:line="145" pos:column="34">= <expr><op:operator pos:line="145" pos:column="36">(</op:operator><name pos:line="145" pos:column="37">int</name><op:operator pos:line="145" pos:column="40">)</op:operator><call><name><name pos:line="145" pos:column="41">pEditView</name><op:operator pos:line="145" pos:column="50">-&gt;</op:operator><name pos:line="145" pos:column="52">execute</name></name><argument_list pos:line="145" pos:column="59">(<argument><expr><name pos:line="145" pos:column="60">SCI_VISIBLEFROMDOCLINE</name></expr></argument>, <argument><expr><name pos:line="145" pos:column="84">currentlineNumberDoc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="146" pos:column="9">pEditView</name><op:operator pos:line="146" pos:column="18">-&gt;</op:operator><name pos:line="146" pos:column="20">execute</name></name><argument_list pos:line="146" pos:column="27">(<argument><expr><name pos:line="146" pos:column="28">SCI_ENSUREVISIBLE</name></expr></argument>, <argument><expr><name pos:line="146" pos:column="47">currentlineNumberDoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="146" pos:column="73">// make sure target line is unfolded</comment>

	<decl_stmt><decl><type><name pos:line="148" pos:column="9">int</name></type> <name pos:line="148" pos:column="13">firstVisibleLineVis</name> <init pos:line="148" pos:column="33">=	<expr><op:operator pos:line="148" pos:column="41">(</op:operator><name pos:line="148" pos:column="42">int</name><op:operator pos:line="148" pos:column="45">)</op:operator><call><name><name pos:line="148" pos:column="46">pEditView</name><op:operator pos:line="148" pos:column="55">-&gt;</op:operator><name pos:line="148" pos:column="57">execute</name></name><argument_list pos:line="148" pos:column="64">(<argument><expr><name pos:line="148" pos:column="65">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="149" pos:column="9">int</name></type> <name pos:line="149" pos:column="13">linesVisible</name> <init pos:line="149" pos:column="26">=			<expr><op:operator pos:line="149" pos:column="49">(</op:operator><name pos:line="149" pos:column="50">int</name><op:operator pos:line="149" pos:column="53">)</op:operator><call><name><name pos:line="149" pos:column="54">pEditView</name><op:operator pos:line="149" pos:column="63">-&gt;</op:operator><name pos:line="149" pos:column="65">execute</name></name><argument_list pos:line="149" pos:column="72">(<argument><expr><name pos:line="149" pos:column="73">SCI_LINESONSCREEN</name></expr></argument>)</argument_list></call> <op:operator pos:line="149" pos:column="92">-</op:operator> <lit:literal type="number" pos:line="149" pos:column="94">1</lit:literal></expr></init></decl>;</decl_stmt>	<comment type="line" pos:line="149" pos:column="97">//-1 for the scrollbar</comment>
	<decl_stmt><decl><type><name pos:line="150" pos:column="9">int</name></type> <name pos:line="150" pos:column="13">lastVisibleLineVis</name> <init pos:line="150" pos:column="32">=	<expr><op:operator pos:line="150" pos:column="41">(</op:operator><name pos:line="150" pos:column="42">int</name><op:operator pos:line="150" pos:column="45">)</op:operator><name pos:line="150" pos:column="46">linesVisible</name> <op:operator pos:line="150" pos:column="59">+</op:operator> <name pos:line="150" pos:column="61">firstVisibleLineVis</name></expr></init></decl>;</decl_stmt>
	
	<comment type="line" pos:line="152" pos:column="9">//if out of view vertically, scroll line into (center of) view</comment>
	<decl_stmt><decl><type><name pos:line="153" pos:column="9">int</name></type> <name pos:line="153" pos:column="13">linesToScroll</name> <init pos:line="153" pos:column="27">= <expr><lit:literal type="number" pos:line="153" pos:column="29">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name pos:line="154" pos:column="13">currentlineNumberVis</name> <op:operator pos:line="154" pos:column="34">&lt;</op:operator> <name pos:line="154" pos:column="36">firstVisibleLineVis</name></expr>)</condition><then pos:line="154" pos:column="56">
	<block pos:line="155" pos:column="9">{
		<expr_stmt><expr><name pos:line="156" pos:column="17">linesToScroll</name> <op:operator pos:line="156" pos:column="31">=</op:operator> <name pos:line="156" pos:column="33">currentlineNumberVis</name> <op:operator pos:line="156" pos:column="54">-</op:operator> <name pos:line="156" pos:column="56">firstVisibleLineVis</name></expr>;</expr_stmt>
		<comment type="line" pos:line="157" pos:column="17">//use center</comment>
		<expr_stmt><expr><name pos:line="158" pos:column="17">linesToScroll</name> <op:operator pos:line="158" pos:column="31">-=</op:operator> <name pos:line="158" pos:column="34">linesVisible</name><op:operator pos:line="158" pos:column="46">/</op:operator><lit:literal type="number" pos:line="158" pos:column="47">2</lit:literal></expr>;</expr_stmt>		
	}</block></then>
	<else pos:line="160" pos:column="9">else <if pos:line="160" pos:column="14">if <condition pos:line="160" pos:column="17">(<expr><name pos:line="160" pos:column="18">currentlineNumberVis</name> <op:operator pos:line="160" pos:column="39">&gt;</op:operator> <name pos:line="160" pos:column="41">lastVisibleLineVis</name></expr>)</condition><then pos:line="160" pos:column="60">
	<block pos:line="161" pos:column="9">{
		<expr_stmt><expr><name pos:line="162" pos:column="17">linesToScroll</name> <op:operator pos:line="162" pos:column="31">=</op:operator> <name pos:line="162" pos:column="33">currentlineNumberVis</name> <op:operator pos:line="162" pos:column="54">-</op:operator> <name pos:line="162" pos:column="56">lastVisibleLineVis</name></expr>;</expr_stmt>
		<comment type="line" pos:line="163" pos:column="17">//use center</comment>
		<expr_stmt><expr><name pos:line="164" pos:column="17">linesToScroll</name> <op:operator pos:line="164" pos:column="31">+=</op:operator> <name pos:line="164" pos:column="34">linesVisible</name><op:operator pos:line="164" pos:column="46">/</op:operator><lit:literal type="number" pos:line="164" pos:column="47">2</lit:literal></expr>;</expr_stmt>
	}</block></then></if></else></if>
	<expr_stmt><expr><call><name><name pos:line="166" pos:column="9">pEditView</name><op:operator pos:line="166" pos:column="18">-&gt;</op:operator><name pos:line="166" pos:column="20">scroll</name></name><argument_list pos:line="166" pos:column="26">(<argument><expr><lit:literal type="number" pos:line="166" pos:column="27">0</lit:literal></expr></argument>, <argument><expr><name pos:line="166" pos:column="30">linesToScroll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="168" pos:column="9">//Make sure the caret is visible, scroll horizontally (this will also fix wrapping problems)</comment>
	<expr_stmt><expr><call><name><name pos:line="169" pos:column="9">pEditView</name><op:operator pos:line="169" pos:column="18">-&gt;</op:operator><name pos:line="169" pos:column="20">execute</name></name><argument_list pos:line="169" pos:column="27">(<argument><expr><name pos:line="169" pos:column="28">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="169" pos:column="41">posStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="170" pos:column="9">pEditView</name><op:operator pos:line="170" pos:column="18">-&gt;</op:operator><name pos:line="170" pos:column="20">execute</name></name><argument_list pos:line="170" pos:column="27">(<argument><expr><name pos:line="170" pos:column="28">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="170" pos:column="41">posEnd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="172" pos:column="9">pEditView</name><op:operator pos:line="172" pos:column="18">-&gt;</op:operator><name pos:line="172" pos:column="20">execute</name></name><argument_list pos:line="172" pos:column="27">(<argument><expr><name pos:line="172" pos:column="28">SCI_SETANCHOR</name></expr></argument>, <argument><expr><name pos:line="172" pos:column="43">posStart</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
}</block></function>

<decl_stmt><decl><type><name pos:line="175" pos:column="1">LONG</name></type> <name><name pos:line="175" pos:column="6">FindReplaceDlg</name><op:operator pos:line="175" pos:column="20">::</op:operator><name pos:line="175" pos:column="22">originalFinderProc</name></name> <init pos:line="175" pos:column="41">= <expr><name pos:line="175" pos:column="43">NULL</name></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:line="177" pos:column="1">#<cpp:directive pos:line="177" pos:column="2">ifdef</cpp:directive> <name pos:line="177" pos:column="8">UNICODE</name></cpp:ifdef>
<function><type><name pos:line="178" pos:column="1">void</name></type> <name><name pos:line="178" pos:column="6">FindReplaceDlg</name><op:operator pos:line="178" pos:column="20">::</op:operator><name pos:line="178" pos:column="22">addText2Combo</name></name><parameter_list pos:line="178" pos:column="35">(<param><decl><type><specifier pos:line="178" pos:column="36">const</specifier> <name pos:line="178" pos:column="42">TCHAR</name> <type:modifier pos:line="178" pos:column="48">*</type:modifier></type> <name pos:line="178" pos:column="50">txt2add</name></decl></param>, <param><decl><type><name pos:line="178" pos:column="59">HWND</name></type> <name pos:line="178" pos:column="64">hCombo</name></decl></param>, <param><decl><type><name pos:line="178" pos:column="72">bool</name></type></decl></param>)</parameter_list>
<cpp:else pos:line="179" pos:column="1">#<cpp:directive pos:line="179" pos:column="2">else</cpp:directive></cpp:else>
<name pos:line="180" pos:column="1">void</name> <name pos:line="180" pos:column="6">FindReplaceDlg</name>::<name pos:line="180" pos:column="22">addText2Combo</name><parameter_list pos:line="180" pos:column="35">(<param><decl><type><specifier pos:line="180" pos:column="36">const</specifier> <name pos:line="180" pos:column="42">TCHAR</name> <type:modifier pos:line="180" pos:column="48">*</type:modifier></type> <name pos:line="180" pos:column="50">txt2add</name></decl></param>, <param><decl><type><name pos:line="180" pos:column="59">HWND</name></type> <name pos:line="180" pos:column="64">hCombo</name></decl></param>, <param><decl><type><name pos:line="180" pos:column="72">bool</name></type> <name pos:line="180" pos:column="77">isUTF8</name></decl></param>)</parameter_list>
<cpp:endif pos:line="181" pos:column="1">#<cpp:directive pos:line="181" pos:column="2">endif</cpp:directive></cpp:endif>
<block pos:line="182" pos:column="1">{	
	<if pos:line="183" pos:column="9">if <condition pos:line="183" pos:column="12">(<expr><op:operator pos:line="183" pos:column="13">!</op:operator><name pos:line="183" pos:column="14">hCombo</name></expr>)</condition><then pos:line="183" pos:column="21"> <return pos:line="183" pos:column="22">return;</return></then></if>
	<if pos:line="184" pos:column="9">if <condition pos:line="184" pos:column="12">(<expr><op:operator pos:line="184" pos:column="13">!</op:operator><call><name pos:line="184" pos:column="14">lstrcmp</name><argument_list pos:line="184" pos:column="21">(<argument><expr><name pos:line="184" pos:column="22">txt2add</name></expr></argument>, <argument><expr><call><name pos:line="184" pos:column="31">TEXT</name><argument_list pos:line="184" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="184" pos:column="36">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="184" pos:column="41"> <return pos:line="184" pos:column="42">return;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="186" pos:column="9">int</name></type> <name pos:line="186" pos:column="13">i</name> <init pos:line="186" pos:column="15">= <expr><lit:literal type="number" pos:line="186" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:line="188" pos:column="1">#<cpp:directive pos:line="188" pos:column="2">ifdef</cpp:directive> <name pos:line="188" pos:column="8">UNICODE</name></cpp:ifdef>
	<expr_stmt><expr><name pos:line="189" pos:column="9">i</name> <op:operator pos:line="189" pos:column="11">=</op:operator> <call><name><op:operator pos:line="189" pos:column="13">::</op:operator><name pos:line="189" pos:column="15">SendMessage</name></name><argument_list pos:line="189" pos:column="26">(<argument><expr><name pos:line="189" pos:column="27">hCombo</name></expr></argument>, <argument><expr><name pos:line="189" pos:column="35">CB_FINDSTRINGEXACT</name></expr></argument>, <argument><expr><op:operator pos:line="189" pos:column="55">(</op:operator><name pos:line="189" pos:column="56">WPARAM</name><op:operator pos:line="189" pos:column="62">)</op:operator><op:operator pos:line="189" pos:column="63">-</op:operator><lit:literal type="number" pos:line="189" pos:column="64">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="189" pos:column="67">(</op:operator><name pos:line="189" pos:column="68">LPARAM</name><op:operator pos:line="189" pos:column="74">)</op:operator><name pos:line="189" pos:column="75">txt2add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="190" pos:column="9">if <condition pos:line="190" pos:column="12">(<expr><name pos:line="190" pos:column="13">i</name> <op:operator pos:line="190" pos:column="15">!=</op:operator> <name pos:line="190" pos:column="18">CB_ERR</name></expr>)</condition><then pos:line="190" pos:column="25"> <comment type="line" pos:line="190" pos:column="26">// found</comment>
	<block pos:line="191" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="192" pos:column="17">::</op:operator><name pos:line="192" pos:column="19">SendMessage</name></name><argument_list pos:line="192" pos:column="30">(<argument><expr><name pos:line="192" pos:column="31">hCombo</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="39">CB_DELETESTRING</name></expr></argument>, <argument><expr><name pos:line="192" pos:column="56">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="192" pos:column="59">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<expr_stmt><expr><name pos:line="195" pos:column="9">i</name> <op:operator pos:line="195" pos:column="11">=</op:operator> <call><name><op:operator pos:line="195" pos:column="13">::</op:operator><name pos:line="195" pos:column="15">SendMessage</name></name><argument_list pos:line="195" pos:column="26">(<argument><expr><name pos:line="195" pos:column="27">hCombo</name></expr></argument>, <argument><expr><name pos:line="195" pos:column="35">CB_INSERTSTRING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="195" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="195" pos:column="55">(</op:operator><name pos:line="195" pos:column="56">LPARAM</name><op:operator pos:line="195" pos:column="62">)</op:operator><name pos:line="195" pos:column="63">txt2add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="198" pos:column="9">TCHAR</name></type> <name><name pos:line="198" pos:column="15">text</name><index pos:line="198" pos:column="19">[<expr><name pos:line="198" pos:column="20">FINDREPLACE_MAXLENGTH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="199" pos:column="9">bool</name></type> <name pos:line="199" pos:column="14">isWin9x</name> <init pos:line="199" pos:column="22">= <expr><name pos:line="199" pos:column="24">_winVer</name> <op:operator pos:line="199" pos:column="32">&lt;=</op:operator> <name pos:line="199" pos:column="35">WV_ME</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="200" pos:column="9">wchar_t</name></type> <name><name pos:line="200" pos:column="17">wchars2Add</name><index pos:line="200" pos:column="27">[<expr><name pos:line="200" pos:column="28">FINDREPLACE_MAXLENGTH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="201" pos:column="9">wchar_t</name></type> <name><name pos:line="201" pos:column="17">textW</name><index pos:line="201" pos:column="22">[<expr><name pos:line="201" pos:column="23">FINDREPLACE_MAXLENGTH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="202" pos:column="9">int</name></type> <name pos:line="202" pos:column="13">count</name> <init pos:line="202" pos:column="19">= <expr><call><name><op:operator pos:line="202" pos:column="21">::</op:operator><name pos:line="202" pos:column="23">SendMessage</name></name><argument_list pos:line="202" pos:column="34">(<argument><expr><name pos:line="202" pos:column="35">hCombo</name></expr></argument>, <argument><expr><name pos:line="202" pos:column="43">CB_GETCOUNT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="202" pos:column="56">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="202" pos:column="59">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="204" pos:column="9">if <condition pos:line="204" pos:column="12">(<expr><name pos:line="204" pos:column="13">isUTF8</name></expr>)</condition><then pos:line="204" pos:column="20">
		<expr_stmt><expr><call><name><op:operator pos:line="205" pos:column="17">::</op:operator><name pos:line="205" pos:column="19">MultiByteToWideChar</name></name><argument_list pos:line="205" pos:column="38">(<argument><expr><name pos:line="205" pos:column="39">CP_UTF8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="205" pos:column="48">0</lit:literal></expr></argument>, <argument><expr><name pos:line="205" pos:column="51">txt2add</name></expr></argument>, <argument><expr><op:operator pos:line="205" pos:column="60">-</op:operator><lit:literal type="number" pos:line="205" pos:column="61">1</lit:literal></expr></argument>, <argument><expr><name pos:line="205" pos:column="64">wchars2Add</name></expr></argument>, <argument><expr><name pos:line="205" pos:column="76">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="205" pos:column="98">-</op:operator> <lit:literal type="number" pos:line="205" pos:column="100">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<for pos:line="207" pos:column="9">for ( <init pos:line="207" pos:column="15">;</init> <condition><expr><name pos:line="207" pos:column="17">i</name> <op:operator pos:line="207" pos:column="19">&lt;</op:operator> <name pos:line="207" pos:column="21">count</name></expr> ;</condition> <incr><expr><name pos:line="207" pos:column="29">i</name><op:operator pos:line="207" pos:column="30">++</op:operator></expr></incr>)
	<block pos:line="208" pos:column="9">{
		<if pos:line="209" pos:column="17">if <condition pos:line="209" pos:column="20">(<expr><name pos:line="209" pos:column="21">isUTF8</name></expr>)</condition><then pos:line="209" pos:column="28">
		<block pos:line="210" pos:column="17">{
			<if pos:line="211" pos:column="25">if <condition pos:line="211" pos:column="28">(<expr><op:operator pos:line="211" pos:column="29">!</op:operator><name pos:line="211" pos:column="30">isWin9x</name></expr>)</condition><then pos:line="211" pos:column="38">
				<expr_stmt><expr><call><name><op:operator pos:line="212" pos:column="33">::</op:operator><name pos:line="212" pos:column="35">SendMessageW</name></name><argument_list pos:line="212" pos:column="47">(<argument><expr><name pos:line="212" pos:column="48">hCombo</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="56">CB_GETLBTEXT</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="70">i</name></expr></argument>, <argument><expr><op:operator pos:line="212" pos:column="73">(</op:operator><name pos:line="212" pos:column="74">LPARAM</name><op:operator pos:line="212" pos:column="80">)</op:operator><name pos:line="212" pos:column="81">textW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>

			<else pos:line="214" pos:column="25">else
			<block pos:line="215" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="216" pos:column="33">::</op:operator><name pos:line="216" pos:column="35">SendMessageA</name></name><argument_list pos:line="216" pos:column="47">(<argument><expr><name pos:line="216" pos:column="48">hCombo</name></expr></argument>, <argument><expr><name pos:line="216" pos:column="56">CB_GETLBTEXT</name></expr></argument>, <argument><expr><name pos:line="216" pos:column="70">i</name></expr></argument>, <argument><expr><op:operator pos:line="216" pos:column="73">(</op:operator><name pos:line="216" pos:column="74">LPARAM</name><op:operator pos:line="216" pos:column="80">)</op:operator><name pos:line="216" pos:column="81">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="217" pos:column="33">::</op:operator><name pos:line="217" pos:column="35">MultiByteToWideChar</name></name><argument_list pos:line="217" pos:column="54">(<argument><expr><name pos:line="217" pos:column="55">CP_ACP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="217" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="66">text</name></expr></argument>, <argument><expr><op:operator pos:line="217" pos:column="72">-</op:operator><lit:literal type="number" pos:line="217" pos:column="73">1</lit:literal></expr></argument>, <argument><expr><name pos:line="217" pos:column="76">textW</name></expr></argument>, <argument><expr><name pos:line="217" pos:column="83">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="217" pos:column="105">-</op:operator> <lit:literal type="number" pos:line="217" pos:column="107">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>

			<if pos:line="220" pos:column="25">if <condition pos:line="220" pos:column="28">(<expr><op:operator pos:line="220" pos:column="29">!</op:operator><call><name pos:line="220" pos:column="30">wcscmp</name><argument_list pos:line="220" pos:column="36">(<argument><expr><name pos:line="220" pos:column="37">wchars2Add</name></expr></argument>, <argument><expr><name pos:line="220" pos:column="49">textW</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="220" pos:column="56">
			<block pos:line="221" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="222" pos:column="33">::</op:operator><name pos:line="222" pos:column="35">SendMessage</name></name><argument_list pos:line="222" pos:column="46">(<argument><expr><name pos:line="222" pos:column="47">hCombo</name></expr></argument>, <argument><expr><name pos:line="222" pos:column="55">CB_DELETESTRING</name></expr></argument>, <argument><expr><name pos:line="222" pos:column="72">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="222" pos:column="75">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="223" pos:column="33">break;</break>
			}</block></then></if>
		}</block></then>
		<else pos:line="226" pos:column="17">else
		<block pos:line="227" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="228" pos:column="25">::</op:operator><name pos:line="228" pos:column="27">SendMessage</name></name><argument_list pos:line="228" pos:column="38">(<argument><expr><name pos:line="228" pos:column="39">hCombo</name></expr></argument>, <argument><expr><name pos:line="228" pos:column="47">CB_GETLBTEXT</name></expr></argument>, <argument><expr><name pos:line="228" pos:column="61">i</name></expr></argument>, <argument><expr><op:operator pos:line="228" pos:column="64">(</op:operator><name pos:line="228" pos:column="65">LPARAM</name><op:operator pos:line="228" pos:column="71">)</op:operator><name pos:line="228" pos:column="72">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="229" pos:column="25">if <condition pos:line="229" pos:column="28">(<expr><op:operator pos:line="229" pos:column="29">!</op:operator><call><name pos:line="229" pos:column="30">strcmp</name><argument_list pos:line="229" pos:column="36">(<argument><expr><name pos:line="229" pos:column="37">txt2add</name></expr></argument>, <argument><expr><name pos:line="229" pos:column="46">text</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="229" pos:column="52">
			<block pos:line="230" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="231" pos:column="33">::</op:operator><name pos:line="231" pos:column="35">SendMessage</name></name><argument_list pos:line="231" pos:column="46">(<argument><expr><name pos:line="231" pos:column="47">hCombo</name></expr></argument>, <argument><expr><name pos:line="231" pos:column="55">CB_DELETESTRING</name></expr></argument>, <argument><expr><name pos:line="231" pos:column="72">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="231" pos:column="75">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="232" pos:column="33">break;</break>
			}</block></then></if>
		}</block></else></if>
	}</block></for>

	<if pos:line="237" pos:column="9">if <condition pos:line="237" pos:column="12">(<expr><op:operator pos:line="237" pos:column="13">!</op:operator><name pos:line="237" pos:column="14">isUTF8</name></expr>)</condition><then pos:line="237" pos:column="21">
		<expr_stmt><expr><name pos:line="238" pos:column="17">i</name> <op:operator pos:line="238" pos:column="19">=</op:operator> <call><name><op:operator pos:line="238" pos:column="21">::</op:operator><name pos:line="238" pos:column="23">SendMessage</name></name><argument_list pos:line="238" pos:column="34">(<argument><expr><name pos:line="238" pos:column="35">hCombo</name></expr></argument>, <argument><expr><name pos:line="238" pos:column="43">CB_INSERTSTRING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="238" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="238" pos:column="63">(</op:operator><name pos:line="238" pos:column="64">LPARAM</name><op:operator pos:line="238" pos:column="70">)</op:operator><name pos:line="238" pos:column="71">txt2add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>

	<else pos:line="240" pos:column="9">else
	<block pos:line="241" pos:column="9">{
		<if pos:line="242" pos:column="17">if <condition pos:line="242" pos:column="20">(<expr><op:operator pos:line="242" pos:column="21">!</op:operator><name pos:line="242" pos:column="22">isWin9x</name></expr>)</condition><then pos:line="242" pos:column="30">
			<expr_stmt><expr><name pos:line="243" pos:column="25">i</name> <op:operator pos:line="243" pos:column="27">=</op:operator> <call><name><op:operator pos:line="243" pos:column="29">::</op:operator><name pos:line="243" pos:column="31">SendMessageW</name></name><argument_list pos:line="243" pos:column="43">(<argument><expr><name pos:line="243" pos:column="44">hCombo</name></expr></argument>, <argument><expr><name pos:line="243" pos:column="52">CB_INSERTSTRING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="243" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="243" pos:column="72">(</op:operator><name pos:line="243" pos:column="73">LPARAM</name><op:operator pos:line="243" pos:column="79">)</op:operator><name pos:line="243" pos:column="80">wchars2Add</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="244" pos:column="17">else
		<block pos:line="245" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="246" pos:column="25">::</op:operator><name pos:line="246" pos:column="27">WideCharToMultiByte</name></name><argument_list pos:line="246" pos:column="46">(<argument><expr><name pos:line="246" pos:column="47">CP_ACP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="246" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="246" pos:column="58">wchars2Add</name></expr></argument>, <argument><expr><op:operator pos:line="246" pos:column="70">-</op:operator><lit:literal type="number" pos:line="246" pos:column="71">1</lit:literal></expr></argument>, <argument><expr><name pos:line="246" pos:column="74">text</name></expr></argument>, <argument><expr><name pos:line="246" pos:column="80">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="246" pos:column="102">-</op:operator> <lit:literal type="number" pos:line="246" pos:column="104">1</lit:literal></expr></argument>, <argument><expr><name pos:line="246" pos:column="107">NULL</name></expr></argument>, <argument><expr><name pos:line="246" pos:column="113">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="247" pos:column="25">i</name> <op:operator pos:line="247" pos:column="27">=</op:operator> <call><name><op:operator pos:line="247" pos:column="29">::</op:operator><name pos:line="247" pos:column="31">SendMessageA</name></name><argument_list pos:line="247" pos:column="43">(<argument><expr><name pos:line="247" pos:column="44">hCombo</name></expr></argument>, <argument><expr><name pos:line="247" pos:column="52">CB_INSERTSTRING</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="247" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="247" pos:column="72">(</op:operator><name pos:line="247" pos:column="73">LPARAM</name><op:operator pos:line="247" pos:column="79">)</op:operator><name pos:line="247" pos:column="80">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></else></if>
<cpp:endif pos:line="250" pos:column="1">#<cpp:directive pos:line="250" pos:column="2">endif</cpp:directive></cpp:endif>
	<expr_stmt><expr><call><name><op:operator pos:line="251" pos:column="9">::</op:operator><name pos:line="251" pos:column="11">SendMessage</name></name><argument_list pos:line="251" pos:column="22">(<argument><expr><name pos:line="251" pos:column="23">hCombo</name></expr></argument>, <argument><expr><name pos:line="251" pos:column="31">CB_SETCURSEL</name></expr></argument>, <argument><expr><name pos:line="251" pos:column="45">i</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="251" pos:column="48">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<cpp:ifdef pos:line="253" pos:column="1">#<cpp:directive pos:line="253" pos:column="2">ifdef</cpp:directive> <name pos:line="253" pos:column="8">UNICODE</name></cpp:ifdef>
<function><type><name pos:line="254" pos:column="1">generic_string</name></type> <name><name pos:line="254" pos:column="16">FindReplaceDlg</name><op:operator pos:line="254" pos:column="30">::</op:operator><name pos:line="254" pos:column="32">getTextFromCombo</name></name><parameter_list pos:line="254" pos:column="48">(<param><decl><type><name pos:line="254" pos:column="49">HWND</name></type> <name pos:line="254" pos:column="54">hCombo</name></decl></param>, <param><decl><type><name pos:line="254" pos:column="62">bool</name></type></decl></param>)</parameter_list> <specifier pos:line="254" pos:column="68">const</specifier>
<cpp:else pos:line="255" pos:column="1">#<cpp:directive pos:line="255" pos:column="2">else</cpp:directive></cpp:else>
<name pos:line="256" pos:column="1">generic_string</name> <name pos:line="256" pos:column="16">FindReplaceDlg</name>::<name pos:line="256" pos:column="32">getTextFromCombo</name><parameter_list pos:line="256" pos:column="48">(<param><decl><type><name pos:line="256" pos:column="49">HWND</name></type> <name pos:line="256" pos:column="54">hCombo</name></decl></param>, <param><decl><type><name pos:line="256" pos:column="62">bool</name></type> <name pos:line="256" pos:column="67">isUnicode</name></decl></param>)</parameter_list> <specifier pos:line="256" pos:column="78">const</specifier>
<cpp:endif pos:line="257" pos:column="1">#<cpp:directive pos:line="257" pos:column="2">endif</cpp:directive></cpp:endif>
<block pos:line="258" pos:column="1">{	
	<decl_stmt><decl><type><name pos:line="259" pos:column="9">TCHAR</name></type> <name><name pos:line="259" pos:column="15">str</name><index pos:line="259" pos:column="18">[<expr><name pos:line="259" pos:column="19">FINDREPLACE_MAXLENGTH</name></expr>]</index></name></decl>;</decl_stmt>
<cpp:ifdef pos:line="260" pos:column="1">#<cpp:directive pos:line="260" pos:column="2">ifdef</cpp:directive> <name pos:line="260" pos:column="8">UNICODE</name></cpp:ifdef>
	<expr_stmt><expr><call><name><op:operator pos:line="261" pos:column="9">::</op:operator><name pos:line="261" pos:column="11">SendMessage</name></name><argument_list pos:line="261" pos:column="22">(<argument><expr><name pos:line="261" pos:column="23">hCombo</name></expr></argument>, <argument><expr><name pos:line="261" pos:column="31">WM_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="261" pos:column="43">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="261" pos:column="65">-</op:operator> <lit:literal type="number" pos:line="261" pos:column="67">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="261" pos:column="70">(</op:operator><name pos:line="261" pos:column="71">LPARAM</name><op:operator pos:line="261" pos:column="77">)</op:operator><name pos:line="261" pos:column="78">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="262" pos:column="1">#<cpp:directive pos:line="262" pos:column="2">else</cpp:directive></cpp:else>
	<decl_stmt><decl><type><name pos:line="263" pos:column="9">bool</name></type> <name pos:line="263" pos:column="14">isWin9x</name> <init pos:line="263" pos:column="22">= <expr><name pos:line="263" pos:column="24">_winVer</name> <op:operator pos:line="263" pos:column="32">&lt;=</op:operator> <name pos:line="263" pos:column="35">WV_ME</name></expr></init></decl>;</decl_stmt>
	<if pos:line="264" pos:column="9">if <condition pos:line="264" pos:column="12">(<expr><name pos:line="264" pos:column="13">isUnicode</name></expr>)</condition><then pos:line="264" pos:column="23">
	<block pos:line="265" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="266" pos:column="17">wchar_t</name></type> <name><name pos:line="266" pos:column="25">wchars</name><index pos:line="266" pos:column="31">[<expr><name pos:line="266" pos:column="32">FINDREPLACE_MAXLENGTH</name></expr>]</index></name></decl>;</decl_stmt>
		<if pos:line="267" pos:column="17">if <condition pos:line="267" pos:column="20">( <expr><op:operator pos:line="267" pos:column="22">!</op:operator><name pos:line="267" pos:column="23">isWin9x</name></expr> )</condition><then pos:line="267" pos:column="32">
		<block pos:line="268" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="269" pos:column="25">::</op:operator><name pos:line="269" pos:column="27">SendMessageW</name></name><argument_list pos:line="269" pos:column="39">(<argument><expr><name pos:line="269" pos:column="40">hCombo</name></expr></argument>, <argument><expr><name pos:line="269" pos:column="48">WM_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="269" pos:column="60">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="269" pos:column="82">-</op:operator> <lit:literal type="number" pos:line="269" pos:column="84">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="269" pos:column="87">(</op:operator><name pos:line="269" pos:column="88">LPARAM</name><op:operator pos:line="269" pos:column="94">)</op:operator><name pos:line="269" pos:column="95">wchars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="271" pos:column="17">else
		<block pos:line="272" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="273" pos:column="25">char</name></type> <name><name pos:line="273" pos:column="30">achars</name><index pos:line="273" pos:column="36">[<expr><name pos:line="273" pos:column="37">FINDREPLACE_MAXLENGTH</name></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="274" pos:column="25">::</op:operator><name pos:line="274" pos:column="27">SendMessageA</name></name><argument_list pos:line="274" pos:column="39">(<argument><expr><name pos:line="274" pos:column="40">hCombo</name></expr></argument>, <argument><expr><name pos:line="274" pos:column="48">WM_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="274" pos:column="60">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="274" pos:column="82">-</op:operator> <lit:literal type="number" pos:line="274" pos:column="84">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="274" pos:column="87">(</op:operator><name pos:line="274" pos:column="88">LPARAM</name><op:operator pos:line="274" pos:column="94">)</op:operator><name pos:line="274" pos:column="95">achars</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="275" pos:column="25">::</op:operator><name pos:line="275" pos:column="27">MultiByteToWideChar</name></name><argument_list pos:line="275" pos:column="46">(<argument><expr><name pos:line="275" pos:column="47">CP_ACP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="275" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><name pos:line="275" pos:column="58">achars</name></expr></argument>, <argument><expr><op:operator pos:line="275" pos:column="66">-</op:operator><lit:literal type="number" pos:line="275" pos:column="67">1</lit:literal></expr></argument>, <argument><expr><name pos:line="275" pos:column="70">wchars</name></expr></argument>, <argument><expr><name pos:line="275" pos:column="78">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="275" pos:column="100">-</op:operator> <lit:literal type="number" pos:line="275" pos:column="102">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
		<expr_stmt><expr><call><name><op:operator pos:line="277" pos:column="17">::</op:operator><name pos:line="277" pos:column="19">WideCharToMultiByte</name></name><argument_list pos:line="277" pos:column="38">(<argument><expr><name pos:line="277" pos:column="39">CP_UTF8</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="277" pos:column="48">0</lit:literal></expr></argument>, <argument><expr><name pos:line="277" pos:column="51">wchars</name></expr></argument>, <argument><expr><op:operator pos:line="277" pos:column="59">-</op:operator><lit:literal type="number" pos:line="277" pos:column="60">1</lit:literal></expr></argument>, <argument><expr><name pos:line="277" pos:column="63">str</name></expr></argument>, <argument><expr><name pos:line="277" pos:column="68">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="277" pos:column="90">-</op:operator> <lit:literal type="number" pos:line="277" pos:column="92">1</lit:literal></expr></argument>, <argument><expr><name pos:line="277" pos:column="95">NULL</name></expr></argument>, <argument><expr><name pos:line="277" pos:column="101">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="279" pos:column="9">else
	<block pos:line="280" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="281" pos:column="17">::</op:operator><name pos:line="281" pos:column="19">SendMessage</name></name><argument_list pos:line="281" pos:column="30">(<argument><expr><name pos:line="281" pos:column="31">hCombo</name></expr></argument>, <argument><expr><name pos:line="281" pos:column="39">WM_GETTEXT</name></expr></argument>, <argument><expr><name pos:line="281" pos:column="51">FINDREPLACE_MAXLENGTH</name> <op:operator pos:line="281" pos:column="73">-</op:operator> <lit:literal type="number" pos:line="281" pos:column="75">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="281" pos:column="78">(</op:operator><name pos:line="281" pos:column="79">LPARAM</name><op:operator pos:line="281" pos:column="85">)</op:operator><name pos:line="281" pos:column="86">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

<cpp:endif pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">endif</cpp:directive></cpp:endif>
	<return pos:line="285" pos:column="9">return <expr><call><name pos:line="285" pos:column="16">generic_string</name><argument_list pos:line="285" pos:column="30">(<argument><expr><name pos:line="285" pos:column="31">str</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>


<comment type="line" pos:line="289" pos:column="1">// important : to activate all styles</comment>
<decl_stmt><decl><type><specifier pos:line="290" pos:column="1">const</specifier> <name pos:line="290" pos:column="7">int</name></type> <name pos:line="290" pos:column="11">STYLING_MASK</name> <init pos:line="290" pos:column="24">= <expr><lit:literal type="number" pos:line="290" pos:column="26">255</lit:literal></expr></init></decl>;</decl_stmt>

<destructor><name><name pos:line="292" pos:column="1">FindReplaceDlg</name><op:operator pos:line="292" pos:column="15">::</op:operator>~<name pos:line="292" pos:column="18">FindReplaceDlg</name></name><parameter_list pos:line="292" pos:column="32">()</parameter_list>
<block pos:line="293" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="294" pos:column="9">_tab</name><op:operator pos:line="294" pos:column="13">.</op:operator><name pos:line="294" pos:column="14">destroy</name></name><argument_list pos:line="294" pos:column="21">()</argument_list></call></expr>;</expr_stmt>
	<if pos:line="295" pos:column="9">if <condition pos:line="295" pos:column="12">(<expr><name pos:line="295" pos:column="13">_pFinder</name></expr>)</condition><then pos:line="295" pos:column="22">
		<expr_stmt><expr><op:operator pos:line="296" pos:column="17">delete</op:operator> <name pos:line="296" pos:column="24">_pFinder</name></expr>;</expr_stmt></then></if>
	<expr_stmt><expr><op:operator pos:line="297" pos:column="9">delete</op:operator> <index pos:line="297" pos:column="16">[]</index> <name pos:line="297" pos:column="19">_uniFileName</name></expr>;</expr_stmt>
}</block></destructor>

<function><type><name pos:line="300" pos:column="1">void</name></type> <name><name pos:line="300" pos:column="6">FindReplaceDlg</name><op:operator pos:line="300" pos:column="20">::</op:operator><name pos:line="300" pos:column="22">create</name></name><parameter_list pos:line="300" pos:column="28">(<param><decl><type><name pos:line="300" pos:column="29">int</name></type> <name pos:line="300" pos:column="33">dialogID</name></decl></param>, <param><decl><type><name pos:line="300" pos:column="43">bool</name></type> <name pos:line="300" pos:column="48">isRTL</name></decl></param>)</parameter_list> 
<block pos:line="301" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="302" pos:column="9">StaticDialog</name><op:operator pos:line="302" pos:column="21">::</op:operator><name pos:line="302" pos:column="23">create</name></name><argument_list pos:line="302" pos:column="29">(<argument><expr><name pos:line="302" pos:column="30">dialogID</name></expr></argument>, <argument><expr><name pos:line="302" pos:column="40">isRTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="303" pos:column="9">fillFindHistory</name><argument_list pos:line="303" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="304" pos:column="9">_currentStatus</name> <op:operator pos:line="304" pos:column="24">=</op:operator> <name pos:line="304" pos:column="26">REPLACE_DLG</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="305" pos:column="9">initOptionsFromDlg</name><argument_list pos:line="305" pos:column="27">()</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="307" pos:column="9">RECT</name></type> <name pos:line="307" pos:column="14">rect</name></decl>;</decl_stmt>
	<comment type="line" pos:line="308" pos:column="9">//::GetWindowRect(_hSelf, &amp;rect);</comment>
	<expr_stmt><expr><call><name pos:line="309" pos:column="9">getClientRect</name><argument_list pos:line="309" pos:column="22">(<argument><expr><name pos:line="309" pos:column="23">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="310" pos:column="9">_tab</name><op:operator pos:line="310" pos:column="13">.</op:operator><name pos:line="310" pos:column="14">init</name></name><argument_list pos:line="310" pos:column="18">(<argument><expr><name pos:line="310" pos:column="19">_hInst</name></expr></argument>, <argument><expr><name pos:line="310" pos:column="27">_hSelf</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="310" pos:column="35">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="310" pos:column="42">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="310" pos:column="49">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="311" pos:column="9">_tab</name><op:operator pos:line="311" pos:column="13">.</op:operator><name pos:line="311" pos:column="14">setFont</name></name><argument_list pos:line="311" pos:column="21">(<argument><expr><call><name pos:line="311" pos:column="22">TEXT</name><argument_list pos:line="311" pos:column="26">(<argument><expr><lit:literal type="string" pos:line="311" pos:column="27">"Tahoma"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="311" pos:column="38">13</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><specifier pos:line="313" pos:column="9">const</specifier> <name pos:line="313" pos:column="15">TCHAR</name> <type:modifier pos:line="313" pos:column="21">*</type:modifier></type><name pos:line="313" pos:column="22">find</name> <init pos:line="313" pos:column="27">= <expr><call><name pos:line="313" pos:column="29">TEXT</name><argument_list pos:line="313" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="313" pos:column="34">"Find"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="314" pos:column="9">const</specifier> <name pos:line="314" pos:column="15">TCHAR</name> <type:modifier pos:line="314" pos:column="21">*</type:modifier></type><name pos:line="314" pos:column="22">replace</name> <init pos:line="314" pos:column="30">= <expr><call><name pos:line="314" pos:column="32">TEXT</name><argument_list pos:line="314" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="314" pos:column="37">"Replace"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="315" pos:column="9">const</specifier> <name pos:line="315" pos:column="15">TCHAR</name> <type:modifier pos:line="315" pos:column="21">*</type:modifier></type><name pos:line="315" pos:column="22">findInFiles</name> <init pos:line="315" pos:column="34">= <expr><call><name pos:line="315" pos:column="36">TEXT</name><argument_list pos:line="315" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="315" pos:column="41">"Find in Files"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="316" pos:column="9">const</specifier> <name pos:line="316" pos:column="15">TCHAR</name> <type:modifier pos:line="316" pos:column="21">*</type:modifier></type><name pos:line="316" pos:column="22">mark</name> <init pos:line="316" pos:column="27">= <expr><call><name pos:line="316" pos:column="29">TEXT</name><argument_list pos:line="316" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="316" pos:column="34">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name><name pos:line="318" pos:column="9">_tab</name><op:operator pos:line="318" pos:column="13">.</op:operator><name pos:line="318" pos:column="14">insertAtEnd</name></name><argument_list pos:line="318" pos:column="25">(<argument><expr><name pos:line="318" pos:column="26">find</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="319" pos:column="9">_tab</name><op:operator pos:line="319" pos:column="13">.</op:operator><name pos:line="319" pos:column="14">insertAtEnd</name></name><argument_list pos:line="319" pos:column="25">(<argument><expr><name pos:line="319" pos:column="26">replace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="320" pos:column="9">_tab</name><op:operator pos:line="320" pos:column="13">.</op:operator><name pos:line="320" pos:column="14">insertAtEnd</name></name><argument_list pos:line="320" pos:column="25">(<argument><expr><name pos:line="320" pos:column="26">findInFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="321" pos:column="9">_tab</name><op:operator pos:line="321" pos:column="13">.</op:operator><name pos:line="321" pos:column="14">insertAtEnd</name></name><argument_list pos:line="321" pos:column="25">(<argument><expr><name pos:line="321" pos:column="26">mark</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="323" pos:column="9">_tab</name><op:operator pos:line="323" pos:column="13">.</op:operator><name pos:line="323" pos:column="14">reSizeTo</name></name><argument_list pos:line="323" pos:column="22">(<argument><expr><name pos:line="323" pos:column="23">rect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="324" pos:column="9">_tab</name><op:operator pos:line="324" pos:column="13">.</op:operator><name pos:line="324" pos:column="14">display</name></name><argument_list pos:line="324" pos:column="21">()</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="326" pos:column="9">ETDTProc</name></type> <name pos:line="326" pos:column="18">enableDlgTheme</name> <init pos:line="326" pos:column="33">= <expr><op:operator pos:line="326" pos:column="35">(</op:operator><name pos:line="326" pos:column="36">ETDTProc</name><op:operator pos:line="326" pos:column="44">)</op:operator><call><name><op:operator pos:line="326" pos:column="45">::</op:operator><name pos:line="326" pos:column="47">SendMessage</name></name><argument_list pos:line="326" pos:column="58">(<argument><expr><name pos:line="326" pos:column="59">_hParent</name></expr></argument>, <argument><expr><name pos:line="326" pos:column="69">NPPM_GETENABLETHEMETEXTUREFUNC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="326" pos:column="101">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="326" pos:column="104">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="327" pos:column="9">if <condition pos:line="327" pos:column="12">(<expr><name pos:line="327" pos:column="13">enableDlgTheme</name></expr>)</condition><then pos:line="327" pos:column="28">
		<expr_stmt><expr><call><name pos:line="328" pos:column="17">enableDlgTheme</name><argument_list pos:line="328" pos:column="31">(<argument><expr><name pos:line="328" pos:column="32">_hSelf</name></expr></argument>, <argument><expr><name pos:line="328" pos:column="40">ETDT_ENABLETAB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><call><name pos:line="330" pos:column="9">goToCenter</name><argument_list pos:line="330" pos:column="19">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="333" pos:column="1">void</name></type> <name><name pos:line="333" pos:column="6">FindReplaceDlg</name><op:operator pos:line="333" pos:column="20">::</op:operator><name pos:line="333" pos:column="22">fillFindHistory</name></name><parameter_list pos:line="333" pos:column="37">()</parameter_list>
<block pos:line="334" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="335" pos:column="9">NppParameters</name> <type:modifier pos:line="335" pos:column="23">*</type:modifier></type><name pos:line="335" pos:column="24">nppParams</name> <init pos:line="335" pos:column="34">= <expr><call><name><name pos:line="335" pos:column="36">NppParameters</name><op:operator pos:line="335" pos:column="49">::</op:operator><name pos:line="335" pos:column="51">getInstance</name></name><argument_list pos:line="335" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="336" pos:column="9">FindHistory</name> <type:modifier pos:line="336" pos:column="21">&amp;</type:modifier></type> <name pos:line="336" pos:column="23">findHistory</name> <init pos:line="336" pos:column="35">= <expr><call><name><name pos:line="336" pos:column="37">nppParams</name><op:operator pos:line="336" pos:column="46">-&gt;</op:operator><name pos:line="336" pos:column="48">getFindHistory</name></name><argument_list pos:line="336" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="338" pos:column="9">fillComboHistory</name><argument_list pos:line="338" pos:column="25">(<argument><expr><name pos:line="338" pos:column="26">IDFINDWHAT</name></expr></argument>, <argument><expr><name><name pos:line="338" pos:column="38">findHistory</name><op:operator pos:line="338" pos:column="49">.</op:operator><name pos:line="338" pos:column="50">_findHistoryFinds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="339" pos:column="9">fillComboHistory</name><argument_list pos:line="339" pos:column="25">(<argument><expr><name pos:line="339" pos:column="26">IDREPLACEWITH</name></expr></argument>, <argument><expr><name><name pos:line="339" pos:column="41">findHistory</name><op:operator pos:line="339" pos:column="52">.</op:operator><name pos:line="339" pos:column="53">_findHistoryReplaces</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="340" pos:column="9">fillComboHistory</name><argument_list pos:line="340" pos:column="25">(<argument><expr><name pos:line="340" pos:column="26">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>, <argument><expr><name><name pos:line="340" pos:column="57">findHistory</name><op:operator pos:line="340" pos:column="68">.</op:operator><name pos:line="340" pos:column="69">_findHistoryFilters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="341" pos:column="5">fillComboHistory</name><argument_list pos:line="341" pos:column="21">(<argument><expr><name pos:line="341" pos:column="22">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>, <argument><expr><name><name pos:line="341" pos:column="49">findHistory</name><op:operator pos:line="341" pos:column="60">.</op:operator><name pos:line="341" pos:column="61">_findHistoryPaths</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="343" pos:column="9">::</op:operator><name pos:line="343" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="343" pos:column="29">(<argument><expr><name pos:line="343" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="343" pos:column="38">IDWRAP</name></expr></argument>, <argument><expr><name pos:line="343" pos:column="46">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="343" pos:column="59">findHistory</name><op:operator pos:line="343" pos:column="70">.</op:operator><name pos:line="343" pos:column="71">_isWrap</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="343" pos:column="80">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="344" pos:column="9">::</op:operator><name pos:line="344" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="344" pos:column="29">(<argument><expr><name pos:line="344" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="344" pos:column="38">IDWHOLEWORD</name></expr></argument>, <argument><expr><name pos:line="344" pos:column="51">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="344" pos:column="64">findHistory</name><op:operator pos:line="344" pos:column="75">.</op:operator><name pos:line="344" pos:column="76">_isMatchWord</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="344" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="345" pos:column="9">::</op:operator><name pos:line="345" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="345" pos:column="29">(<argument><expr><name pos:line="345" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="345" pos:column="38">IDMATCHCASE</name></expr></argument>, <argument><expr><name pos:line="345" pos:column="51">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="345" pos:column="64">findHistory</name><op:operator pos:line="345" pos:column="75">.</op:operator><name pos:line="345" pos:column="76">_isMatchCase</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="345" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="347" pos:column="9">::</op:operator><name pos:line="347" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="347" pos:column="29">(<argument><expr><name pos:line="347" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="347" pos:column="38">IDDIRECTIONUP</name></expr></argument>, <argument><expr><name pos:line="347" pos:column="53">BM_SETCHECK</name></expr></argument>, <argument><expr><op:operator pos:line="347" pos:column="66">!</op:operator><name><name pos:line="347" pos:column="67">findHistory</name><op:operator pos:line="347" pos:column="78">.</op:operator><name pos:line="347" pos:column="79">_isDirectionDown</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="347" pos:column="97">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="348" pos:column="9">::</op:operator><name pos:line="348" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="348" pos:column="29">(<argument><expr><name pos:line="348" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="38">IDDIRECTIONDOWN</name></expr></argument>, <argument><expr><name pos:line="348" pos:column="55">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="348" pos:column="68">findHistory</name><op:operator pos:line="348" pos:column="79">.</op:operator><name pos:line="348" pos:column="80">_isDirectionDown</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="348" pos:column="98">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="350" pos:column="9">::</op:operator><name pos:line="350" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="350" pos:column="29">(<argument><expr><name pos:line="350" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="350" pos:column="38">IDD_FINDINFILES_INHIDDENDIR_CHECK</name></expr></argument>, <argument><expr><name pos:line="350" pos:column="73">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="350" pos:column="86">findHistory</name><op:operator pos:line="350" pos:column="97">.</op:operator><name pos:line="350" pos:column="98">_isFifInHiddenFolder</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="350" pos:column="120">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="351" pos:column="9">::</op:operator><name pos:line="351" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="351" pos:column="29">(<argument><expr><name pos:line="351" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="38">IDD_FINDINFILES_RECURSIVE_CHECK</name></expr></argument>, <argument><expr><name pos:line="351" pos:column="71">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="351" pos:column="84">findHistory</name><op:operator pos:line="351" pos:column="95">.</op:operator><name pos:line="351" pos:column="96">_isFifRecuisive</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="351" pos:column="113">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="352" pos:column="5">::</op:operator><name pos:line="352" pos:column="7">SendDlgItemMessage</name></name><argument_list pos:line="352" pos:column="25">(<argument><expr><name pos:line="352" pos:column="26">_hSelf</name></expr></argument>, <argument><expr><name pos:line="352" pos:column="34">IDD_FINDINFILES_FOLDERFOLLOWSDOC_CHECK</name></expr></argument>, <argument><expr><name pos:line="352" pos:column="74">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="352" pos:column="87">findHistory</name><op:operator pos:line="352" pos:column="98">.</op:operator><name pos:line="352" pos:column="99">_isFolderFollowDoc</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="352" pos:column="119">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="354" pos:column="9">::</op:operator><name pos:line="354" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="354" pos:column="29">(<argument><expr><name pos:line="354" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="354" pos:column="38">IDNORMAL</name></expr></argument>, <argument><expr><name pos:line="354" pos:column="48">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="354" pos:column="61">findHistory</name><op:operator pos:line="354" pos:column="72">.</op:operator><name pos:line="354" pos:column="73">_searchMode</name></name> <op:operator pos:line="354" pos:column="85">==</op:operator> <name><name pos:line="354" pos:column="88">FindHistory</name><op:operator pos:line="354" pos:column="99">::</op:operator><name pos:line="354" pos:column="101">normal</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="354" pos:column="109">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="355" pos:column="9">::</op:operator><name pos:line="355" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="355" pos:column="29">(<argument><expr><name pos:line="355" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="355" pos:column="38">IDEXTENDED</name></expr></argument>, <argument><expr><name pos:line="355" pos:column="50">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="355" pos:column="63">findHistory</name><op:operator pos:line="355" pos:column="74">.</op:operator><name pos:line="355" pos:column="75">_searchMode</name></name> <op:operator pos:line="355" pos:column="87">==</op:operator> <name><name pos:line="355" pos:column="90">FindHistory</name><op:operator pos:line="355" pos:column="101">::</op:operator><name pos:line="355" pos:column="103">extended</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="355" pos:column="113">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="356" pos:column="9">::</op:operator><name pos:line="356" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="356" pos:column="29">(<argument><expr><name pos:line="356" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="356" pos:column="38">IDREGEXP</name></expr></argument>, <argument><expr><name pos:line="356" pos:column="48">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="356" pos:column="61">findHistory</name><op:operator pos:line="356" pos:column="72">.</op:operator><name pos:line="356" pos:column="73">_searchMode</name></name> <op:operator pos:line="356" pos:column="85">==</op:operator> <name><name pos:line="356" pos:column="88">FindHistory</name><op:operator pos:line="356" pos:column="99">::</op:operator><name pos:line="356" pos:column="101">regExpr</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="356" pos:column="110">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="357" pos:column="9">::</op:operator><name pos:line="357" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="357" pos:column="29">(<argument><expr><name pos:line="357" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="357" pos:column="38">IDREDOTMATCHNL</name></expr></argument>, <argument><expr><name pos:line="357" pos:column="54">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="357" pos:column="67">findHistory</name><op:operator pos:line="357" pos:column="78">.</op:operator><name pos:line="357" pos:column="79">_dotMatchesNewline</name></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="357" pos:column="99">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="358" pos:column="9">if <condition pos:line="358" pos:column="12">(<expr><name><name pos:line="358" pos:column="13">findHistory</name><op:operator pos:line="358" pos:column="24">.</op:operator><name pos:line="358" pos:column="25">_searchMode</name></name> <op:operator pos:line="358" pos:column="37">==</op:operator> <name><name pos:line="358" pos:column="40">FindHistory</name><op:operator pos:line="358" pos:column="51">::</op:operator><name pos:line="358" pos:column="53">regExpr</name></name></expr>)</condition><then pos:line="358" pos:column="61">
	<block pos:line="359" pos:column="9">{
		<comment type="line" pos:line="360" pos:column="17">//regex doesnt allow wholeword</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="361" pos:column="17">::</op:operator><name pos:line="361" pos:column="19">SendDlgItemMessage</name></name><argument_list pos:line="361" pos:column="37">(<argument><expr><name pos:line="361" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="361" pos:column="46">IDWHOLEWORD</name></expr></argument>, <argument><expr><name pos:line="361" pos:column="59">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="361" pos:column="72">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="361" pos:column="87">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="362" pos:column="17">::</op:operator><name pos:line="362" pos:column="19">EnableWindow</name></name><argument_list pos:line="362" pos:column="31">(<argument><expr><call><name><op:operator pos:line="362" pos:column="32">::</op:operator><name pos:line="362" pos:column="34">GetDlgItem</name></name><argument_list pos:line="362" pos:column="44">(<argument><expr><name pos:line="362" pos:column="45">_hSelf</name></expr></argument>, <argument><expr><name pos:line="362" pos:column="53">IDWHOLEWORD</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="362" pos:column="67">(</op:operator><name pos:line="362" pos:column="68">BOOL</name><op:operator pos:line="362" pos:column="72">)</op:operator><lit:literal type="boolean" pos:line="362" pos:column="73">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<if pos:line="365" pos:column="9">if <condition pos:line="365" pos:column="12">(<expr><call><name><name pos:line="365" pos:column="13">nppParams</name><op:operator pos:line="365" pos:column="22">-&gt;</op:operator><name pos:line="365" pos:column="24">isTransparentAvailable</name></name><argument_list pos:line="365" pos:column="46">()</argument_list></call></expr>)</condition><then pos:line="365" pos:column="49">
	<block pos:line="366" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="367" pos:column="17">::</op:operator><name pos:line="367" pos:column="19">ShowWindow</name></name><argument_list pos:line="367" pos:column="29">(<argument><expr><call><name><op:operator pos:line="367" pos:column="30">::</op:operator><name pos:line="367" pos:column="32">GetDlgItem</name></name><argument_list pos:line="367" pos:column="42">(<argument><expr><name pos:line="367" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="367" pos:column="51">IDC_TRANSPARENT_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="367" pos:column="75">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="368" pos:column="17">::</op:operator><name pos:line="368" pos:column="19">ShowWindow</name></name><argument_list pos:line="368" pos:column="29">(<argument><expr><call><name><op:operator pos:line="368" pos:column="30">::</op:operator><name pos:line="368" pos:column="32">GetDlgItem</name></name><argument_list pos:line="368" pos:column="42">(<argument><expr><name pos:line="368" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="368" pos:column="51">IDC_TRANSPARENT_GRPBOX</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="368" pos:column="76">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="369" pos:column="17">::</op:operator><name pos:line="369" pos:column="19">ShowWindow</name></name><argument_list pos:line="369" pos:column="29">(<argument><expr><call><name><op:operator pos:line="369" pos:column="30">::</op:operator><name pos:line="369" pos:column="32">GetDlgItem</name></name><argument_list pos:line="369" pos:column="42">(<argument><expr><name pos:line="369" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="369" pos:column="51">IDC_TRANSPARENT_LOSSFOCUS_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="369" pos:column="85">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="370" pos:column="17">::</op:operator><name pos:line="370" pos:column="19">ShowWindow</name></name><argument_list pos:line="370" pos:column="29">(<argument><expr><call><name><op:operator pos:line="370" pos:column="30">::</op:operator><name pos:line="370" pos:column="32">GetDlgItem</name></name><argument_list pos:line="370" pos:column="42">(<argument><expr><name pos:line="370" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="370" pos:column="51">IDC_TRANSPARENT_ALWAYS_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="370" pos:column="82">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="371" pos:column="17">::</op:operator><name pos:line="371" pos:column="19">ShowWindow</name></name><argument_list pos:line="371" pos:column="29">(<argument><expr><call><name><op:operator pos:line="371" pos:column="30">::</op:operator><name pos:line="371" pos:column="32">GetDlgItem</name></name><argument_list pos:line="371" pos:column="42">(<argument><expr><name pos:line="371" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="371" pos:column="51">IDC_PERCENTAGE_SLIDER</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="371" pos:column="75">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<expr_stmt><expr><call><name><op:operator pos:line="373" pos:column="17">::</op:operator><name pos:line="373" pos:column="19">SendDlgItemMessage</name></name><argument_list pos:line="373" pos:column="37">(<argument><expr><name pos:line="373" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="373" pos:column="46">IDC_PERCENTAGE_SLIDER</name></expr></argument>, <argument><expr><name pos:line="373" pos:column="69">TBM_SETRANGE</name></expr></argument>, <argument><expr><name pos:line="373" pos:column="83">FALSE</name></expr></argument>, <argument><expr><call><name pos:line="373" pos:column="90">MAKELONG</name><argument_list pos:line="373" pos:column="98">(<argument><expr><lit:literal type="number" pos:line="373" pos:column="99">20</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="373" pos:column="103">200</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="374" pos:column="17">::</op:operator><name pos:line="374" pos:column="19">SendDlgItemMessage</name></name><argument_list pos:line="374" pos:column="37">(<argument><expr><name pos:line="374" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="374" pos:column="46">IDC_PERCENTAGE_SLIDER</name></expr></argument>, <argument><expr><name pos:line="374" pos:column="69">TBM_SETPOS</name></expr></argument>, <argument><expr><name pos:line="374" pos:column="81">TRUE</name></expr></argument>, <argument><expr><name><name pos:line="374" pos:column="87">findHistory</name><op:operator pos:line="374" pos:column="98">.</op:operator><name pos:line="374" pos:column="99">_transparency</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<if pos:line="376" pos:column="17">if <condition pos:line="376" pos:column="20">(<expr><name><name pos:line="376" pos:column="21">findHistory</name><op:operator pos:line="376" pos:column="32">.</op:operator><name pos:line="376" pos:column="33">_transparencyMode</name></name> <op:operator pos:line="376" pos:column="51">==</op:operator> <name><name pos:line="376" pos:column="54">FindHistory</name><op:operator pos:line="376" pos:column="65">::</op:operator><name pos:line="376" pos:column="67">none</name></name></expr>)</condition><then pos:line="376" pos:column="72">
		<block pos:line="377" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="378" pos:column="25">::</op:operator><name pos:line="378" pos:column="27">EnableWindow</name></name><argument_list pos:line="378" pos:column="39">(<argument><expr><call><name><op:operator pos:line="378" pos:column="40">::</op:operator><name pos:line="378" pos:column="42">GetDlgItem</name></name><argument_list pos:line="378" pos:column="52">(<argument><expr><name pos:line="378" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="378" pos:column="61">IDC_TRANSPARENT_GRPBOX</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="378" pos:column="86">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="379" pos:column="25">::</op:operator><name pos:line="379" pos:column="27">EnableWindow</name></name><argument_list pos:line="379" pos:column="39">(<argument><expr><call><name><op:operator pos:line="379" pos:column="40">::</op:operator><name pos:line="379" pos:column="42">GetDlgItem</name></name><argument_list pos:line="379" pos:column="52">(<argument><expr><name pos:line="379" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="379" pos:column="61">IDC_TRANSPARENT_LOSSFOCUS_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="379" pos:column="95">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="380" pos:column="25">::</op:operator><name pos:line="380" pos:column="27">EnableWindow</name></name><argument_list pos:line="380" pos:column="39">(<argument><expr><call><name><op:operator pos:line="380" pos:column="40">::</op:operator><name pos:line="380" pos:column="42">GetDlgItem</name></name><argument_list pos:line="380" pos:column="52">(<argument><expr><name pos:line="380" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="380" pos:column="61">IDC_TRANSPARENT_ALWAYS_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="380" pos:column="92">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="381" pos:column="25">::</op:operator><name pos:line="381" pos:column="27">EnableWindow</name></name><argument_list pos:line="381" pos:column="39">(<argument><expr><call><name><op:operator pos:line="381" pos:column="40">::</op:operator><name pos:line="381" pos:column="42">GetDlgItem</name></name><argument_list pos:line="381" pos:column="52">(<argument><expr><name pos:line="381" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><name pos:line="381" pos:column="61">IDC_PERCENTAGE_SLIDER</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="381" pos:column="85">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="383" pos:column="17">else
		<block pos:line="384" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="385" pos:column="25">::</op:operator><name pos:line="385" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="385" pos:column="45">(<argument><expr><name pos:line="385" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="385" pos:column="54">IDC_TRANSPARENT_CHECK</name></expr></argument>, <argument><expr><name pos:line="385" pos:column="77">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="385" pos:column="90">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="385" pos:column="96">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<decl_stmt><decl><type><name pos:line="387" pos:column="25">int</name></type> <name pos:line="387" pos:column="29">id</name></decl>;</decl_stmt>
			<if pos:line="388" pos:column="25">if <condition pos:line="388" pos:column="28">(<expr><name><name pos:line="388" pos:column="29">findHistory</name><op:operator pos:line="388" pos:column="40">.</op:operator><name pos:line="388" pos:column="41">_transparencyMode</name></name> <op:operator pos:line="388" pos:column="59">==</op:operator> <name><name pos:line="388" pos:column="62">FindHistory</name><op:operator pos:line="388" pos:column="73">::</op:operator><name pos:line="388" pos:column="75">onLossingFocus</name></name></expr>)</condition><then pos:line="388" pos:column="90">
			<block pos:line="389" pos:column="25">{
				<expr_stmt><expr><name pos:line="390" pos:column="33">id</name> <op:operator pos:line="390" pos:column="36">=</op:operator> <name pos:line="390" pos:column="38">IDC_TRANSPARENT_LOSSFOCUS_RADIO</name></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="392" pos:column="25">else
			<block pos:line="393" pos:column="25">{
				<expr_stmt><expr><name pos:line="394" pos:column="33">id</name> <op:operator pos:line="394" pos:column="36">=</op:operator> <name pos:line="394" pos:column="38">IDC_TRANSPARENT_ALWAYS_RADIO</name></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="395" pos:column="33">(</op:operator><call><name><name pos:line="395" pos:column="34">NppParameters</name><op:operator pos:line="395" pos:column="47">::</op:operator><name pos:line="395" pos:column="49">getInstance</name></name><argument_list pos:line="395" pos:column="60">()</argument_list></call><op:operator pos:line="395" pos:column="62">)</op:operator><op:operator pos:line="395" pos:column="63">-&gt;</op:operator><call><name pos:line="395" pos:column="65">SetTransparent</name><argument_list pos:line="395" pos:column="79">(<argument><expr><name pos:line="395" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="395" pos:column="88">findHistory</name><op:operator pos:line="395" pos:column="99">.</op:operator><name pos:line="395" pos:column="100">_transparency</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			}</block></else></if>
			<expr_stmt><expr><call><name><op:operator pos:line="398" pos:column="25">::</op:operator><name pos:line="398" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="398" pos:column="45">(<argument><expr><name pos:line="398" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="398" pos:column="54">id</name></expr></argument>, <argument><expr><name pos:line="398" pos:column="58">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="398" pos:column="71">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="398" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="403" pos:column="1">void</name></type> <name><name pos:line="403" pos:column="6">FindReplaceDlg</name><op:operator pos:line="403" pos:column="20">::</op:operator><name pos:line="403" pos:column="22">fillComboHistory</name></name><parameter_list pos:line="403" pos:column="38">(<param><decl><type><name pos:line="403" pos:column="39">int</name></type> <name pos:line="403" pos:column="43">id</name></decl></param>, <param><decl><type><specifier pos:line="403" pos:column="47">const</specifier> <name><name pos:line="403" pos:column="53">vector</name><argument_list pos:line="403" pos:column="59">&lt;<argument><expr><name pos:line="403" pos:column="60">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="403" pos:column="76">&amp;</type:modifier></type> <name pos:line="403" pos:column="78">strings</name></decl></param>)</parameter_list>
<block pos:line="404" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="405" pos:column="9">bool</name></type> <name pos:line="405" pos:column="14">isUnicode</name> <init pos:line="405" pos:column="24">= <expr><lit:literal type="boolean" pos:line="405" pos:column="26">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="406" pos:column="9">HWND</name></type> <name pos:line="406" pos:column="14">hCombo</name> <init pos:line="406" pos:column="21">= <expr><call><name><op:operator pos:line="406" pos:column="23">::</op:operator><name pos:line="406" pos:column="25">GetDlgItem</name></name><argument_list pos:line="406" pos:column="35">(<argument><expr><name pos:line="406" pos:column="36">_hSelf</name></expr></argument>, <argument><expr><name pos:line="406" pos:column="44">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<for pos:line="408" pos:column="9">for (<init><decl><type><name><name><name pos:line="408" pos:column="14">vector</name><argument_list pos:line="408" pos:column="20">&lt;<argument><expr><name pos:line="408" pos:column="21">generic_string</name></expr></argument>&gt;</argument_list></name><op:operator pos:line="408" pos:column="36">::</op:operator><name pos:line="408" pos:column="38">const_reverse_iterator</name></name></type> <name pos:line="408" pos:column="61">i</name> <init pos:line="408" pos:column="63">= <expr><call><name><name pos:line="408" pos:column="65">strings</name><op:operator pos:line="408" pos:column="72">.</op:operator><name pos:line="408" pos:column="73">rbegin</name></name><argument_list pos:line="408" pos:column="79">()</argument_list></call></expr></init></decl> ;</init> <condition><expr><name pos:line="408" pos:column="84">i</name> <op:operator pos:line="408" pos:column="86">!=</op:operator> <call><name><name pos:line="408" pos:column="89">strings</name><op:operator pos:line="408" pos:column="96">.</op:operator><name pos:line="408" pos:column="97">rend</name></name><argument_list pos:line="408" pos:column="101">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="408" pos:column="105">i</name><op:operator pos:line="408" pos:column="106">++</op:operator></expr></incr>)
	<block pos:line="409" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="410" pos:column="17">addText2Combo</name><argument_list pos:line="410" pos:column="30">(<argument><expr><call><name><name pos:line="410" pos:column="31">i</name><op:operator pos:line="410" pos:column="32">-&gt;</op:operator><name pos:line="410" pos:column="34">c_str</name></name><argument_list pos:line="410" pos:column="39">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="410" pos:column="43">hCombo</name></expr></argument>, <argument><expr><name pos:line="410" pos:column="51">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><call><name><op:operator pos:line="412" pos:column="9">::</op:operator><name pos:line="412" pos:column="11">SendMessage</name></name><argument_list pos:line="412" pos:column="22">(<argument><expr><name pos:line="412" pos:column="23">hCombo</name></expr></argument>, <argument><expr><name pos:line="412" pos:column="31">CB_SETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="412" pos:column="45">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="412" pos:column="48">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="412" pos:column="52">// select first item</comment>
}</block></function>


<function><type><name pos:line="416" pos:column="1">void</name></type> <name><name pos:line="416" pos:column="6">FindReplaceDlg</name><op:operator pos:line="416" pos:column="20">::</op:operator><name pos:line="416" pos:column="22">saveFindHistory</name></name><parameter_list pos:line="416" pos:column="37">()</parameter_list>
<block pos:line="417" pos:column="1">{
	<if pos:line="418" pos:column="9">if <condition pos:line="418" pos:column="12">(<expr><op:operator pos:line="418" pos:column="13">!</op:operator> <call><name pos:line="418" pos:column="15">isCreated</name><argument_list pos:line="418" pos:column="24">()</argument_list></call></expr>)</condition><then pos:line="418" pos:column="27"> <return pos:line="418" pos:column="28">return;</return></then></if>
	<decl_stmt><decl><type><name pos:line="419" pos:column="9">FindHistory</name><type:modifier pos:line="419" pos:column="20">&amp;</type:modifier></type> <name pos:line="419" pos:column="22">findHistory</name> <init pos:line="419" pos:column="34">= <expr><op:operator pos:line="419" pos:column="36">(</op:operator><call><name><name pos:line="419" pos:column="37">NppParameters</name><op:operator pos:line="419" pos:column="50">::</op:operator><name pos:line="419" pos:column="52">getInstance</name></name><argument_list pos:line="419" pos:column="63">()</argument_list></call><op:operator pos:line="419" pos:column="65">)</op:operator><op:operator pos:line="419" pos:column="66">-&gt;</op:operator><call><name pos:line="419" pos:column="68">getFindHistory</name><argument_list pos:line="419" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="421" pos:column="9">saveComboHistory</name><argument_list pos:line="421" pos:column="25">(<argument><expr><name pos:line="421" pos:column="26">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>, <argument><expr><name><name pos:line="421" pos:column="53">findHistory</name><op:operator pos:line="421" pos:column="64">.</op:operator><name pos:line="421" pos:column="65">_nbMaxFindHistoryPath</name></name></expr></argument>, <argument><expr><name><name pos:line="421" pos:column="88">findHistory</name><op:operator pos:line="421" pos:column="99">.</op:operator><name pos:line="421" pos:column="100">_findHistoryPaths</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="422" pos:column="9">saveComboHistory</name><argument_list pos:line="422" pos:column="25">(<argument><expr><name pos:line="422" pos:column="26">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>, <argument><expr><name><name pos:line="422" pos:column="57">findHistory</name><op:operator pos:line="422" pos:column="68">.</op:operator><name pos:line="422" pos:column="69">_nbMaxFindHistoryFilter</name></name></expr></argument>, <argument><expr><name><name pos:line="422" pos:column="94">findHistory</name><op:operator pos:line="422" pos:column="105">.</op:operator><name pos:line="422" pos:column="106">_findHistoryFilters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="423" pos:column="9">saveComboHistory</name><argument_list pos:line="423" pos:column="25">(<argument><expr><name pos:line="423" pos:column="26">IDFINDWHAT</name></expr></argument>,                    <argument><expr><name><name pos:line="423" pos:column="57">findHistory</name><op:operator pos:line="423" pos:column="68">.</op:operator><name pos:line="423" pos:column="69">_nbMaxFindHistoryFind</name></name></expr></argument>, <argument><expr><name><name pos:line="423" pos:column="92">findHistory</name><op:operator pos:line="423" pos:column="103">.</op:operator><name pos:line="423" pos:column="104">_findHistoryFinds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="424" pos:column="9">saveComboHistory</name><argument_list pos:line="424" pos:column="25">(<argument><expr><name pos:line="424" pos:column="26">IDREPLACEWITH</name></expr></argument>,                 <argument><expr><name><name pos:line="424" pos:column="57">findHistory</name><op:operator pos:line="424" pos:column="68">.</op:operator><name pos:line="424" pos:column="69">_nbMaxFindHistoryReplace</name></name></expr></argument>, <argument><expr><name><name pos:line="424" pos:column="95">findHistory</name><op:operator pos:line="424" pos:column="106">.</op:operator><name pos:line="424" pos:column="107">_findHistoryReplaces</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="427" pos:column="1">int</name></type> <name><name pos:line="427" pos:column="5">FindReplaceDlg</name><op:operator pos:line="427" pos:column="19">::</op:operator><name pos:line="427" pos:column="21">saveComboHistory</name></name><parameter_list pos:line="427" pos:column="37">(<param><decl><type><name pos:line="427" pos:column="38">int</name></type> <name pos:line="427" pos:column="42">id</name></decl></param>, <param><decl><type><name pos:line="427" pos:column="46">int</name></type> <name pos:line="427" pos:column="50">maxcount</name></decl></param>, <param><decl><type><name><name pos:line="427" pos:column="60">vector</name><argument_list pos:line="427" pos:column="66">&lt;<argument><expr><name pos:line="427" pos:column="67">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="427" pos:column="83">&amp;</type:modifier></type> <name pos:line="427" pos:column="85">strings</name></decl></param>)</parameter_list>
<block pos:line="428" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="429" pos:column="9">TCHAR</name></type> <name><name pos:line="429" pos:column="15">text</name><index pos:line="429" pos:column="19">[<expr><name pos:line="429" pos:column="20">FINDREPLACE_MAXLENGTH</name></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="430" pos:column="9">HWND</name></type> <name pos:line="430" pos:column="14">hCombo</name> <init pos:line="430" pos:column="21">= <expr><call><name><op:operator pos:line="430" pos:column="23">::</op:operator><name pos:line="430" pos:column="25">GetDlgItem</name></name><argument_list pos:line="430" pos:column="35">(<argument><expr><name pos:line="430" pos:column="36">_hSelf</name></expr></argument>, <argument><expr><name pos:line="430" pos:column="44">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="431" pos:column="9">int</name></type> <name pos:line="431" pos:column="13">count</name> <init pos:line="431" pos:column="19">= <expr><call><name><op:operator pos:line="431" pos:column="21">::</op:operator><name pos:line="431" pos:column="23">SendMessage</name></name><argument_list pos:line="431" pos:column="34">(<argument><expr><name pos:line="431" pos:column="35">hCombo</name></expr></argument>, <argument><expr><name pos:line="431" pos:column="43">CB_GETCOUNT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="431" pos:column="56">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="431" pos:column="59">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="432" pos:column="9">count</name> <op:operator pos:line="432" pos:column="15">=</op:operator> <call><name pos:line="432" pos:column="17">min</name><argument_list pos:line="432" pos:column="20">(<argument><expr><name pos:line="432" pos:column="21">count</name></expr></argument>, <argument><expr><name pos:line="432" pos:column="28">maxcount</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if pos:line="434" pos:column="5">if <condition pos:line="434" pos:column="8">(<expr><name pos:line="434" pos:column="9">count</name> <op:operator pos:line="434" pos:column="15">==</op:operator> <name pos:line="434" pos:column="18">CB_ERR</name></expr>)</condition><then pos:line="434" pos:column="25"> <return pos:line="434" pos:column="26">return <expr><lit:literal type="number" pos:line="434" pos:column="33">0</lit:literal></expr>;</return></then></if>

    <if pos:line="436" pos:column="5">if <condition pos:line="436" pos:column="8">(<expr><name pos:line="436" pos:column="9">count</name></expr>)</condition><then pos:line="436" pos:column="15">
        <expr_stmt><expr><call><name><name pos:line="437" pos:column="9">strings</name><op:operator pos:line="437" pos:column="16">.</op:operator><name pos:line="437" pos:column="17">clear</name></name><argument_list pos:line="437" pos:column="22">()</argument_list></call></expr>;</expr_stmt></then></if>

    <for pos:line="439" pos:column="5">for (<init><decl><type><name pos:line="439" pos:column="10">size_t</name></type> <name pos:line="439" pos:column="17">i</name> <init pos:line="439" pos:column="19">= <expr><lit:literal type="number" pos:line="439" pos:column="21">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="439" pos:column="25">i</name> <op:operator pos:line="439" pos:column="27">&lt;</op:operator> <op:operator pos:line="439" pos:column="29">(</op:operator><name pos:line="439" pos:column="30">size_t</name><op:operator pos:line="439" pos:column="36">)</op:operator><name pos:line="439" pos:column="37">count</name></expr> ;</condition> <incr><expr><name pos:line="439" pos:column="45">i</name><op:operator pos:line="439" pos:column="46">++</op:operator></expr></incr>)
	<block pos:line="440" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="441" pos:column="17">::</op:operator><name pos:line="441" pos:column="19">SendMessage</name></name><argument_list pos:line="441" pos:column="30">(<argument><expr><name pos:line="441" pos:column="31">hCombo</name></expr></argument>, <argument><expr><name pos:line="441" pos:column="39">CB_GETLBTEXT</name></expr></argument>, <argument><expr><name pos:line="441" pos:column="53">i</name></expr></argument>, <argument><expr><op:operator pos:line="441" pos:column="56">(</op:operator><name pos:line="441" pos:column="57">LPARAM</name><op:operator pos:line="441" pos:column="63">)</op:operator> <name pos:line="441" pos:column="65">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="442" pos:column="9">strings</name><op:operator pos:line="442" pos:column="16">.</op:operator><name pos:line="442" pos:column="17">push_back</name></name><argument_list pos:line="442" pos:column="26">(<argument><expr><call><name pos:line="442" pos:column="27">generic_string</name><argument_list pos:line="442" pos:column="41">(<argument><expr><name pos:line="442" pos:column="42">text</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
    <return pos:line="444" pos:column="5">return <expr><name pos:line="444" pos:column="12">count</name></expr>;</return>
}</block></function>

<function><type><name pos:line="447" pos:column="1">void</name></type> <name><name pos:line="447" pos:column="6">FindReplaceDlg</name><op:operator pos:line="447" pos:column="20">::</op:operator><name pos:line="447" pos:column="22">updateCombos</name></name><parameter_list pos:line="447" pos:column="34">()</parameter_list>
<block pos:line="448" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="449" pos:column="9">updateCombo</name><argument_list pos:line="449" pos:column="20">(<argument><expr><name pos:line="449" pos:column="21">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="450" pos:column="9">updateCombo</name><argument_list pos:line="450" pos:column="20">(<argument><expr><name pos:line="450" pos:column="21">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<decl_stmt><decl><type><name pos:line="453" pos:column="1">FoundInfo</name></type> <name><name pos:line="453" pos:column="11">Finder</name><op:operator pos:line="453" pos:column="17">::</op:operator><name pos:line="453" pos:column="19">EmptyFoundInfo</name></name><argument_list pos:line="453" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="453" pos:column="34">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="453" pos:column="37">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="453" pos:column="40">TEXT</name><argument_list pos:line="453" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="453" pos:column="45">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="454" pos:column="1">SearchResultMarking</name></type> <name><name pos:line="454" pos:column="21">Finder</name><op:operator pos:line="454" pos:column="27">::</op:operator><name pos:line="454" pos:column="29">EmptySearchResultMarking</name></name></decl>;</decl_stmt>

<function><type><name pos:line="456" pos:column="1">bool</name></type> <name><name pos:line="456" pos:column="6">Finder</name><op:operator pos:line="456" pos:column="12">::</op:operator><name pos:line="456" pos:column="14">notify</name></name><parameter_list pos:line="456" pos:column="20">(<param><decl><type><name pos:line="456" pos:column="21">SCNotification</name> <type:modifier pos:line="456" pos:column="36">*</type:modifier></type><name pos:line="456" pos:column="37">notification</name></decl></param>)</parameter_list>
<block pos:line="457" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="458" pos:column="9">static</specifier> <name pos:line="458" pos:column="16">bool</name></type> <name pos:line="458" pos:column="21">isDoubleClicked</name> <init pos:line="458" pos:column="37">= <expr><lit:literal type="boolean" pos:line="458" pos:column="39">false</lit:literal></expr></init></decl>;</decl_stmt>

	<switch pos:line="460" pos:column="9">switch <condition pos:line="460" pos:column="16">(<expr><name><name pos:line="460" pos:column="17">notification</name><op:operator pos:line="460" pos:column="29">-&gt;</op:operator><name pos:line="460" pos:column="31">nmhdr</name><op:operator pos:line="460" pos:column="36">.</op:operator><name pos:line="460" pos:column="37">code</name></name></expr>)</condition>
	<block pos:line="461" pos:column="9">{
		<case pos:line="462" pos:column="17">case <expr><name pos:line="462" pos:column="22">SCN_MARGINCLICK</name></expr>:
			<if pos:line="463" pos:column="25">if <condition pos:line="463" pos:column="28">(<expr><name><name pos:line="463" pos:column="29">notification</name><op:operator pos:line="463" pos:column="41">-&gt;</op:operator><name pos:line="463" pos:column="43">margin</name></name> <op:operator pos:line="463" pos:column="50">==</op:operator> <name><name pos:line="463" pos:column="53">ScintillaEditView</name><op:operator pos:line="463" pos:column="70">::</op:operator><name pos:line="463" pos:column="72">_SC_MARGE_FOLDER</name></name></expr>)</condition><then pos:line="463" pos:column="89">
			<block pos:line="464" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="465" pos:column="33">_scintView</name><op:operator pos:line="465" pos:column="43">.</op:operator><name pos:line="465" pos:column="44">marginClick</name></name><argument_list pos:line="465" pos:column="55">(<argument><expr><name><name pos:line="465" pos:column="56">notification</name><op:operator pos:line="465" pos:column="68">-&gt;</op:operator><name pos:line="465" pos:column="70">position</name></name></expr></argument>, <argument><expr><name><name pos:line="465" pos:column="80">notification</name><op:operator pos:line="465" pos:column="92">-&gt;</op:operator><name pos:line="465" pos:column="94">modifiers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<break pos:line="467" pos:column="25">break;</break>

		</case><case pos:line="469" pos:column="17">case <expr><name pos:line="469" pos:column="22">SCN_DOUBLECLICK</name></expr>:
		<block pos:line="470" pos:column="17">{
			<comment type="line" pos:line="471" pos:column="25">// remove selection from the finder</comment>
			<expr_stmt><expr><name pos:line="472" pos:column="25">isDoubleClicked</name> <op:operator pos:line="472" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="472" pos:column="43">true</lit:literal></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="473" pos:column="25">int</name></type> <name pos:line="473" pos:column="29">pos</name> <init pos:line="473" pos:column="33">= <expr><name><name pos:line="473" pos:column="35">notification</name><op:operator pos:line="473" pos:column="47">-&gt;</op:operator><name pos:line="473" pos:column="49">position</name></name></expr></init></decl>;</decl_stmt>
			<if pos:line="474" pos:column="25">if <condition pos:line="474" pos:column="28">(<expr><name pos:line="474" pos:column="29">pos</name> <op:operator pos:line="474" pos:column="33">==</op:operator> <name pos:line="474" pos:column="36">INVALID_POSITION</name></expr>)</condition><then pos:line="474" pos:column="53">
				<expr_stmt><expr><name pos:line="475" pos:column="33">pos</name> <op:operator pos:line="475" pos:column="37">=</op:operator> <call><name><name pos:line="475" pos:column="39">_scintView</name><op:operator pos:line="475" pos:column="49">.</op:operator><name pos:line="475" pos:column="50">execute</name></name><argument_list pos:line="475" pos:column="57">(<argument><expr><name pos:line="475" pos:column="58">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name><name pos:line="475" pos:column="82">notification</name><op:operator pos:line="475" pos:column="94">-&gt;</op:operator><name pos:line="475" pos:column="96">line</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><call><name><name pos:line="476" pos:column="25">_scintView</name><op:operator pos:line="476" pos:column="35">.</op:operator><name pos:line="476" pos:column="36">execute</name></name><argument_list pos:line="476" pos:column="43">(<argument><expr><name pos:line="476" pos:column="44">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="476" pos:column="56">pos</name></expr></argument>, <argument><expr><name pos:line="476" pos:column="61">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="478" pos:column="25">GotoFoundLine</name><argument_list pos:line="478" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="480" pos:column="17">break;</break>

		</case><case pos:line="482" pos:column="17">case <expr><name pos:line="482" pos:column="22">SCN_PAINTED</name></expr> :
			<if pos:line="483" pos:column="25">if <condition pos:line="483" pos:column="28">(<expr><name pos:line="483" pos:column="29">isDoubleClicked</name></expr>)</condition><then pos:line="483" pos:column="45">
			<block pos:line="484" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="485" pos:column="33">(<type:modifier pos:line="485" pos:column="34">*</type:modifier><name pos:line="485" pos:column="35">_ppEditView</name>)<op:operator pos:line="485" pos:column="47">-&gt;</op:operator><name pos:line="485" pos:column="49">getFocus</name></name><argument_list pos:line="485" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="486" pos:column="33">isDoubleClicked</name> <op:operator pos:line="486" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="486" pos:column="51">false</lit:literal></expr>;</expr_stmt>
			}</block></then></if>
			<break pos:line="488" pos:column="25">break;</break>
	</case>}</block></switch>
	<return pos:line="490" pos:column="9">return <expr><lit:literal type="boolean" pos:line="490" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>


<function><type><name pos:line="494" pos:column="1">void</name></type> <name><name pos:line="494" pos:column="6">Finder</name><op:operator pos:line="494" pos:column="12">::</op:operator><name pos:line="494" pos:column="14">GotoFoundLine</name></name><parameter_list pos:line="494" pos:column="27">()</parameter_list>
<block pos:line="495" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="496" pos:column="9">int</name></type> <name pos:line="496" pos:column="13">currentPos</name> <init pos:line="496" pos:column="24">= <expr><call><name><name pos:line="496" pos:column="26">_scintView</name><op:operator pos:line="496" pos:column="36">.</op:operator><name pos:line="496" pos:column="37">execute</name></name><argument_list pos:line="496" pos:column="44">(<argument><expr><name pos:line="496" pos:column="45">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="497" pos:column="9">int</name></type> <name pos:line="497" pos:column="13">lno</name> <init pos:line="497" pos:column="17">= <expr><call><name><name pos:line="497" pos:column="19">_scintView</name><op:operator pos:line="497" pos:column="29">.</op:operator><name pos:line="497" pos:column="30">execute</name></name><argument_list pos:line="497" pos:column="37">(<argument><expr><name pos:line="497" pos:column="38">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="497" pos:column="60">currentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="498" pos:column="9">int</name></type> <name pos:line="498" pos:column="13">start</name> <init pos:line="498" pos:column="19">= <expr><call><name><name pos:line="498" pos:column="21">_scintView</name><op:operator pos:line="498" pos:column="31">.</op:operator><name pos:line="498" pos:column="32">execute</name></name><argument_list pos:line="498" pos:column="39">(<argument><expr><name pos:line="498" pos:column="40">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="498" pos:column="62">lno</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="499" pos:column="9">int</name></type> <name pos:line="499" pos:column="13">end</name> <init pos:line="499" pos:column="17">= <expr><call><name><name pos:line="499" pos:column="19">_scintView</name><op:operator pos:line="499" pos:column="29">.</op:operator><name pos:line="499" pos:column="30">execute</name></name><argument_list pos:line="499" pos:column="37">(<argument><expr><name pos:line="499" pos:column="38">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="499" pos:column="62">lno</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="500" pos:column="9">if <condition pos:line="500" pos:column="12">(<expr><name pos:line="500" pos:column="13">start</name> <op:operator pos:line="500" pos:column="19">+</op:operator> <lit:literal type="number" pos:line="500" pos:column="21">2</lit:literal> <op:operator pos:line="500" pos:column="23">&gt;=</op:operator> <name pos:line="500" pos:column="26">end</name></expr>)</condition><then pos:line="500" pos:column="30"> <return pos:line="500" pos:column="31">return;</return></then></if> <comment type="line" pos:line="500" pos:column="39">// avoid empty lines</comment>

	<if pos:line="502" pos:column="9">if <condition pos:line="502" pos:column="12">(<expr><call><name><name pos:line="502" pos:column="13">_scintView</name><op:operator pos:line="502" pos:column="23">.</op:operator><name pos:line="502" pos:column="24">execute</name></name><argument_list pos:line="502" pos:column="31">(<argument><expr><name pos:line="502" pos:column="32">SCI_GETFOLDLEVEL</name></expr></argument>, <argument><expr><name pos:line="502" pos:column="50">lno</name></expr></argument>)</argument_list></call> <op:operator pos:line="502" pos:column="55">&amp;</op:operator> <name pos:line="502" pos:column="57">SC_FOLDLEVELHEADERFLAG</name></expr>)</condition><then pos:line="502" pos:column="80">
	<block pos:line="503" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="504" pos:column="17">_scintView</name><op:operator pos:line="504" pos:column="27">.</op:operator><name pos:line="504" pos:column="28">execute</name></name><argument_list pos:line="504" pos:column="35">(<argument><expr><name pos:line="504" pos:column="36">SCI_TOGGLEFOLD</name></expr></argument>, <argument><expr><name pos:line="504" pos:column="52">lno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="505" pos:column="17">return;</return>
	}</block></then></if>

	<decl_stmt><decl><type><specifier pos:line="508" pos:column="9">const</specifier> <name pos:line="508" pos:column="15">FoundInfo</name></type> <name pos:line="508" pos:column="25">fInfo</name> <init pos:line="508" pos:column="31">= <expr><op:operator pos:line="508" pos:column="33">*</op:operator><op:operator pos:line="508" pos:column="34">(</op:operator><call><name><name pos:line="508" pos:column="35">_pMainFoundInfos</name><op:operator pos:line="508" pos:column="51">-&gt;</op:operator><name pos:line="508" pos:column="53">begin</name></name><argument_list pos:line="508" pos:column="58">()</argument_list></call> <op:operator pos:line="508" pos:column="61">+</op:operator> <name pos:line="508" pos:column="63">lno</name><op:operator pos:line="508" pos:column="66">)</op:operator></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="510" pos:column="9">// Switch to another document</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="511" pos:column="9">::</op:operator><name pos:line="511" pos:column="11">SendMessage</name></name><argument_list pos:line="511" pos:column="22">(<argument><expr><call><name><op:operator pos:line="511" pos:column="23">::</op:operator><name pos:line="511" pos:column="25">GetParent</name></name><argument_list pos:line="511" pos:column="34">(<argument><expr><name pos:line="511" pos:column="35">_hParent</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="511" pos:column="46">WM_DOOPEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="511" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="511" pos:column="60">(</op:operator><name pos:line="511" pos:column="61">LPARAM</name><op:operator pos:line="511" pos:column="67">)</op:operator><call><name><name pos:line="511" pos:column="68">fInfo</name><op:operator pos:line="511" pos:column="73">.</op:operator><name pos:line="511" pos:column="74">_fullPath</name><op:operator pos:line="511" pos:column="83">.</op:operator><name pos:line="511" pos:column="84">c_str</name></name><argument_list pos:line="511" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="512" pos:column="9">Searching</name><op:operator pos:line="512" pos:column="18">::</op:operator><name pos:line="512" pos:column="20">displaySectionCentered</name></name><argument_list pos:line="512" pos:column="42">(<argument><expr><name><name pos:line="512" pos:column="43">fInfo</name><op:operator pos:line="512" pos:column="48">.</op:operator><name pos:line="512" pos:column="49">_start</name></name></expr></argument>, <argument><expr><name><name pos:line="512" pos:column="57">fInfo</name><op:operator pos:line="512" pos:column="62">.</op:operator><name pos:line="512" pos:column="63">_end</name></name></expr></argument>, <argument><expr><op:operator pos:line="512" pos:column="69">*</op:operator><name pos:line="512" pos:column="70">_ppEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="514" pos:column="9">// Then we colourise the double clicked line</comment>
	<expr_stmt><expr><call><name pos:line="515" pos:column="9">setFinderStyle</name><argument_list pos:line="515" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="516" pos:column="9">//_scintView.execute(SCI_SETLEXER, SCLEX_NULL);   // yniq - this line causes a bug!!! (last line suddenly belongs to file header level (?) instead of having level=0x400)</comment>
													<comment type="line" pos:line="517" pos:column="105">// later it affects DeleteResult and gotoNextFoundResult (assertions)</comment>
													<comment type="line" pos:line="518" pos:column="105">// fixed by calling setFinderStyle() in DeleteResult()</comment>
	<expr_stmt><expr><call><name><name pos:line="519" pos:column="9">_scintView</name><op:operator pos:line="519" pos:column="19">.</op:operator><name pos:line="519" pos:column="20">execute</name></name><argument_list pos:line="519" pos:column="27">(<argument><expr><name pos:line="519" pos:column="28">SCI_STYLESETEOLFILLED</name></expr></argument>, <argument><expr><name pos:line="519" pos:column="51">SCE_SEARCHRESULT_HIGHLIGHT_LINE</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="519" pos:column="84">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="520" pos:column="9">_scintView</name><op:operator pos:line="520" pos:column="19">.</op:operator><name pos:line="520" pos:column="20">execute</name></name><argument_list pos:line="520" pos:column="27">(<argument><expr><name pos:line="520" pos:column="28">SCI_STARTSTYLING</name></expr></argument>, <argument><expr><name pos:line="520" pos:column="46">start</name></expr></argument>, <argument><expr><name pos:line="520" pos:column="53">STYLING_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="521" pos:column="9">_scintView</name><op:operator pos:line="521" pos:column="19">.</op:operator><name pos:line="521" pos:column="20">execute</name></name><argument_list pos:line="521" pos:column="27">(<argument><expr><name pos:line="521" pos:column="28">SCI_SETSTYLING</name></expr></argument>, <argument><expr><name pos:line="521" pos:column="44">end</name> <op:operator pos:line="521" pos:column="48">-</op:operator> <name pos:line="521" pos:column="50">start</name> <op:operator pos:line="521" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="521" pos:column="58">2</lit:literal></expr></argument>, <argument><expr><name pos:line="521" pos:column="61">SCE_SEARCHRESULT_HIGHLIGHT_LINE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="522" pos:column="9">_scintView</name><op:operator pos:line="522" pos:column="19">.</op:operator><name pos:line="522" pos:column="20">execute</name></name><argument_list pos:line="522" pos:column="27">(<argument><expr><name pos:line="522" pos:column="28">SCI_COLOURISE</name></expr></argument>, <argument><expr><name pos:line="522" pos:column="43">start</name></expr></argument>, <argument><expr><name pos:line="522" pos:column="50">end</name> <op:operator pos:line="522" pos:column="54">+</op:operator> <lit:literal type="number" pos:line="522" pos:column="56">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="525" pos:column="1">void</name></type> <name><name pos:line="525" pos:column="6">Finder</name><op:operator pos:line="525" pos:column="12">::</op:operator><name pos:line="525" pos:column="14">DeleteResult</name></name><parameter_list pos:line="525" pos:column="26">()</parameter_list>
<block pos:line="526" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="527" pos:column="9">int</name></type> <name pos:line="527" pos:column="13">currentPos</name> <init pos:line="527" pos:column="24">= <expr><call><name><name pos:line="527" pos:column="26">_scintView</name><op:operator pos:line="527" pos:column="36">.</op:operator><name pos:line="527" pos:column="37">execute</name></name><argument_list pos:line="527" pos:column="44">(<argument><expr><name pos:line="527" pos:column="45">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="527" pos:column="65">// yniq - add handling deletion of multiple lines?</comment>

	<decl_stmt><decl><type><name pos:line="529" pos:column="9">int</name></type> <name pos:line="529" pos:column="13">lno</name> <init pos:line="529" pos:column="17">= <expr><call><name><name pos:line="529" pos:column="19">_scintView</name><op:operator pos:line="529" pos:column="29">.</op:operator><name pos:line="529" pos:column="30">execute</name></name><argument_list pos:line="529" pos:column="37">(<argument><expr><name pos:line="529" pos:column="38">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="529" pos:column="60">currentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="530" pos:column="9">int</name></type> <name pos:line="530" pos:column="13">start</name> <init pos:line="530" pos:column="19">= <expr><call><name><name pos:line="530" pos:column="21">_scintView</name><op:operator pos:line="530" pos:column="31">.</op:operator><name pos:line="530" pos:column="32">execute</name></name><argument_list pos:line="530" pos:column="39">(<argument><expr><name pos:line="530" pos:column="40">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="530" pos:column="62">lno</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="531" pos:column="9">int</name></type> <name pos:line="531" pos:column="13">end</name> <init pos:line="531" pos:column="17">= <expr><call><name><name pos:line="531" pos:column="19">_scintView</name><op:operator pos:line="531" pos:column="29">.</op:operator><name pos:line="531" pos:column="30">execute</name></name><argument_list pos:line="531" pos:column="37">(<argument><expr><name pos:line="531" pos:column="38">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="531" pos:column="62">lno</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="532" pos:column="9">if <condition pos:line="532" pos:column="12">(<expr><name pos:line="532" pos:column="13">start</name> <op:operator pos:line="532" pos:column="19">+</op:operator> <lit:literal type="number" pos:line="532" pos:column="21">2</lit:literal> <op:operator pos:line="532" pos:column="23">&gt;=</op:operator> <name pos:line="532" pos:column="26">end</name></expr>)</condition><then pos:line="532" pos:column="30"> <return pos:line="532" pos:column="31">return;</return></then></if> <comment type="line" pos:line="532" pos:column="39">// avoid empty lines</comment>

	<expr_stmt><expr><call><name><name pos:line="534" pos:column="9">_scintView</name><op:operator pos:line="534" pos:column="19">.</op:operator><name pos:line="534" pos:column="20">setLexer</name></name><argument_list pos:line="534" pos:column="28">(<argument><expr><name pos:line="534" pos:column="29">SCLEX_SEARCHRESULT</name></expr></argument>, <argument><expr><name pos:line="534" pos:column="49">L_SEARCHRESULT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="534" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="534" pos:column="69">// Restore searchResult lexer in case the lexer was changed to SCLEX_NULL in GotoFoundLine()</comment>

	<if pos:line="536" pos:column="9">if <condition pos:line="536" pos:column="12">(<expr><call><name><name pos:line="536" pos:column="13">_scintView</name><op:operator pos:line="536" pos:column="23">.</op:operator><name pos:line="536" pos:column="24">execute</name></name><argument_list pos:line="536" pos:column="31">(<argument><expr><name pos:line="536" pos:column="32">SCI_GETFOLDLEVEL</name></expr></argument>, <argument><expr><name pos:line="536" pos:column="50">lno</name></expr></argument>)</argument_list></call> <op:operator pos:line="536" pos:column="55">&amp;</op:operator> <name pos:line="536" pos:column="57">SC_FOLDLEVELHEADERFLAG</name></expr>)</condition><then pos:line="536" pos:column="80">  <comment type="line" pos:line="536" pos:column="82">// delete a folder</comment>
	<block pos:line="537" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="538" pos:column="17">int</name></type> <name pos:line="538" pos:column="21">endline</name> <init pos:line="538" pos:column="29">= <expr><call><name><name pos:line="538" pos:column="31">_scintView</name><op:operator pos:line="538" pos:column="41">.</op:operator><name pos:line="538" pos:column="42">execute</name></name><argument_list pos:line="538" pos:column="49">(<argument><expr><name pos:line="538" pos:column="50">SCI_GETLASTCHILD</name></expr></argument>, <argument><expr><name pos:line="538" pos:column="68">lno</name></expr></argument>, <argument><expr><op:operator pos:line="538" pos:column="73">-</op:operator><lit:literal type="number" pos:line="538" pos:column="74">1</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="538" pos:column="77">+</op:operator> <lit:literal type="number" pos:line="538" pos:column="79">1</lit:literal></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="539" pos:column="17">assert</name><argument_list pos:line="539" pos:column="23">(<argument><expr><op:operator pos:line="539" pos:column="24">(</op:operator><name pos:line="539" pos:column="25">size_t</name><op:operator pos:line="539" pos:column="31">)</op:operator> <name pos:line="539" pos:column="33">endline</name> <op:operator pos:line="539" pos:column="41">&lt;=</op:operator> <call><name><name pos:line="539" pos:column="44">_pMainFoundInfos</name><op:operator pos:line="539" pos:column="60">-&gt;</op:operator><name pos:line="539" pos:column="62">size</name></name><argument_list pos:line="539" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="541" pos:column="17">_pMainFoundInfos</name><op:operator pos:line="541" pos:column="33">-&gt;</op:operator><name pos:line="541" pos:column="35">erase</name></name><argument_list pos:line="541" pos:column="40">(<argument><expr><call><name><name pos:line="541" pos:column="41">_pMainFoundInfos</name><op:operator pos:line="541" pos:column="57">-&gt;</op:operator><name pos:line="541" pos:column="59">begin</name></name><argument_list pos:line="541" pos:column="64">()</argument_list></call> <op:operator pos:line="541" pos:column="67">+</op:operator> <name pos:line="541" pos:column="69">lno</name></expr></argument>, <argument><expr><call><name><name pos:line="541" pos:column="74">_pMainFoundInfos</name><op:operator pos:line="541" pos:column="90">-&gt;</op:operator><name pos:line="541" pos:column="92">begin</name></name><argument_list pos:line="541" pos:column="97">()</argument_list></call> <op:operator pos:line="541" pos:column="100">+</op:operator> <name pos:line="541" pos:column="102">endline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="541" pos:column="112">// remove found info</comment>
		<expr_stmt><expr><call><name><name pos:line="542" pos:column="17">_pMainMarkings</name><op:operator pos:line="542" pos:column="31">-&gt;</op:operator><name pos:line="542" pos:column="33">erase</name></name><argument_list pos:line="542" pos:column="38">(<argument><expr><call><name><name pos:line="542" pos:column="39">_pMainMarkings</name><op:operator pos:line="542" pos:column="53">-&gt;</op:operator><name pos:line="542" pos:column="55">begin</name></name><argument_list pos:line="542" pos:column="60">()</argument_list></call> <op:operator pos:line="542" pos:column="63">+</op:operator> <name pos:line="542" pos:column="65">lno</name></expr></argument>, <argument><expr><call><name><name pos:line="542" pos:column="70">_pMainMarkings</name><op:operator pos:line="542" pos:column="84">-&gt;</op:operator><name pos:line="542" pos:column="86">begin</name></name><argument_list pos:line="542" pos:column="91">()</argument_list></call> <op:operator pos:line="542" pos:column="94">+</op:operator> <name pos:line="542" pos:column="96">endline</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="544" pos:column="17">int</name></type> <name pos:line="544" pos:column="21">end</name> <init pos:line="544" pos:column="25">= <expr><call><name><name pos:line="544" pos:column="27">_scintView</name><op:operator pos:line="544" pos:column="37">.</op:operator><name pos:line="544" pos:column="38">execute</name></name><argument_list pos:line="544" pos:column="45">(<argument><expr><name pos:line="544" pos:column="46">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="544" pos:column="68">endline</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="545" pos:column="17">_scintView</name><op:operator pos:line="545" pos:column="27">.</op:operator><name pos:line="545" pos:column="28">execute</name></name><argument_list pos:line="545" pos:column="35">(<argument><expr><name pos:line="545" pos:column="36">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="545" pos:column="48">start</name></expr></argument>, <argument><expr><name pos:line="545" pos:column="55">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="546" pos:column="17">setFinderReadOnly</name><argument_list pos:line="546" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="546" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="547" pos:column="17">_scintView</name><op:operator pos:line="547" pos:column="27">.</op:operator><name pos:line="547" pos:column="28">execute</name></name><argument_list pos:line="547" pos:column="35">(<argument><expr><name pos:line="547" pos:column="36">SCI_CLEAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="548" pos:column="17">setFinderReadOnly</name><argument_list pos:line="548" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="548" pos:column="35">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="550" pos:column="9">else <comment type="line" pos:line="550" pos:column="14">// delete one line</comment>
	<block pos:line="551" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="552" pos:column="17">assert</name><argument_list pos:line="552" pos:column="23">(<argument><expr><op:operator pos:line="552" pos:column="24">(</op:operator><name pos:line="552" pos:column="25">size_t</name><op:operator pos:line="552" pos:column="31">)</op:operator> <name pos:line="552" pos:column="33">lno</name> <op:operator pos:line="552" pos:column="37">&lt;</op:operator> <call><name><name pos:line="552" pos:column="39">_pMainFoundInfos</name><op:operator pos:line="552" pos:column="55">-&gt;</op:operator><name pos:line="552" pos:column="57">size</name></name><argument_list pos:line="552" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="554" pos:column="17">_pMainFoundInfos</name><op:operator pos:line="554" pos:column="33">-&gt;</op:operator><name pos:line="554" pos:column="35">erase</name></name><argument_list pos:line="554" pos:column="40">(<argument><expr><call><name><name pos:line="554" pos:column="41">_pMainFoundInfos</name><op:operator pos:line="554" pos:column="57">-&gt;</op:operator><name pos:line="554" pos:column="59">begin</name></name><argument_list pos:line="554" pos:column="64">()</argument_list></call> <op:operator pos:line="554" pos:column="67">+</op:operator> <name pos:line="554" pos:column="69">lno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="554" pos:column="75">// remove found info</comment>
		<expr_stmt><expr><call><name><name pos:line="555" pos:column="17">_pMainMarkings</name><op:operator pos:line="555" pos:column="31">-&gt;</op:operator><name pos:line="555" pos:column="33">erase</name></name><argument_list pos:line="555" pos:column="38">(<argument><expr><call><name><name pos:line="555" pos:column="39">_pMainMarkings</name><op:operator pos:line="555" pos:column="53">-&gt;</op:operator><name pos:line="555" pos:column="55">begin</name></name><argument_list pos:line="555" pos:column="60">()</argument_list></call> <op:operator pos:line="555" pos:column="63">+</op:operator> <name pos:line="555" pos:column="65">lno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="557" pos:column="17">setFinderReadOnly</name><argument_list pos:line="557" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="557" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="558" pos:column="17">_scintView</name><op:operator pos:line="558" pos:column="27">.</op:operator><name pos:line="558" pos:column="28">execute</name></name><argument_list pos:line="558" pos:column="35">(<argument><expr><name pos:line="558" pos:column="36">SCI_LINEDELETE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="559" pos:column="17">setFinderReadOnly</name><argument_list pos:line="559" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="559" pos:column="35">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><name><name pos:line="561" pos:column="9">_MarkingsStruct</name><op:operator pos:line="561" pos:column="24">.</op:operator><name pos:line="561" pos:column="25">_length</name></name> <op:operator pos:line="561" pos:column="33">=</op:operator> <call><name><name pos:line="561" pos:column="35">_pMainMarkings</name><op:operator pos:line="561" pos:column="49">-&gt;</op:operator><name pos:line="561" pos:column="51">size</name></name><argument_list pos:line="561" pos:column="55">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="563" pos:column="9">assert</name><argument_list pos:line="563" pos:column="15">(<argument><expr><call><name><name pos:line="563" pos:column="16">_pMainFoundInfos</name><op:operator pos:line="563" pos:column="32">-&gt;</op:operator><name pos:line="563" pos:column="34">size</name></name><argument_list pos:line="563" pos:column="38">()</argument_list></call> <op:operator pos:line="563" pos:column="41">==</op:operator> <call><name><name pos:line="563" pos:column="44">_pMainMarkings</name><op:operator pos:line="563" pos:column="58">-&gt;</op:operator><name pos:line="563" pos:column="60">size</name></name><argument_list pos:line="563" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="564" pos:column="9">assert</name><argument_list pos:line="564" pos:column="15">(<argument><expr><call><name pos:line="564" pos:column="16">size_t</name><argument_list pos:line="564" pos:column="22">(<argument><expr><call><name><name pos:line="564" pos:column="23">_scintView</name><op:operator pos:line="564" pos:column="33">.</op:operator><name pos:line="564" pos:column="34">execute</name></name><argument_list pos:line="564" pos:column="41">(<argument><expr><name pos:line="564" pos:column="42">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="564" pos:column="61">==</op:operator> <call><name><name pos:line="564" pos:column="64">_pMainFoundInfos</name><op:operator pos:line="564" pos:column="80">-&gt;</op:operator><name pos:line="564" pos:column="82">size</name></name><argument_list pos:line="564" pos:column="86">()</argument_list></call> <op:operator pos:line="564" pos:column="89">+</op:operator> <lit:literal type="number" pos:line="564" pos:column="91">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="567" pos:column="1">void</name></type> <name><name pos:line="567" pos:column="6">Finder</name><op:operator pos:line="567" pos:column="12">::</op:operator><name pos:line="567" pos:column="14">gotoNextFoundResult</name></name><parameter_list pos:line="567" pos:column="33">(<param><decl><type><name pos:line="567" pos:column="34">int</name></type> <name pos:line="567" pos:column="38">direction</name></decl></param>)</parameter_list>
<block pos:line="568" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="569" pos:column="9">int</name></type> <name pos:line="569" pos:column="13">increment</name> <init pos:line="569" pos:column="23">= <expr><name pos:line="569" pos:column="25">direction</name> <op:operator pos:line="569" pos:column="35">&lt;</op:operator> <lit:literal type="number" pos:line="569" pos:column="37">0</lit:literal> <op:operator pos:line="569" pos:column="39">?</op:operator> <op:operator pos:line="569" pos:column="41">-</op:operator><lit:literal type="number" pos:line="569" pos:column="42">1</lit:literal> <op:operator pos:line="569" pos:column="44">:</op:operator> <lit:literal type="number" pos:line="569" pos:column="46">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="570" pos:column="9">int</name></type> <name pos:line="570" pos:column="13">currentPos</name> <init pos:line="570" pos:column="24">= <expr><call><name><name pos:line="570" pos:column="26">_scintView</name><op:operator pos:line="570" pos:column="36">.</op:operator><name pos:line="570" pos:column="37">execute</name></name><argument_list pos:line="570" pos:column="44">(<argument><expr><name pos:line="570" pos:column="45">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="571" pos:column="9">int</name></type> <name pos:line="571" pos:column="13">lno</name> <init pos:line="571" pos:column="17">= <expr><call><name><name pos:line="571" pos:column="19">_scintView</name><op:operator pos:line="571" pos:column="29">.</op:operator><name pos:line="571" pos:column="30">execute</name></name><argument_list pos:line="571" pos:column="37">(<argument><expr><name pos:line="571" pos:column="38">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="571" pos:column="60">currentPos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="572" pos:column="9">int</name></type> <name pos:line="572" pos:column="13">total_lines</name> <init pos:line="572" pos:column="25">= <expr><call><name><name pos:line="572" pos:column="27">_scintView</name><op:operator pos:line="572" pos:column="37">.</op:operator><name pos:line="572" pos:column="38">execute</name></name><argument_list pos:line="572" pos:column="45">(<argument><expr><name pos:line="572" pos:column="46">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="573" pos:column="9">if <condition pos:line="573" pos:column="12">(<expr><name pos:line="573" pos:column="13">total_lines</name> <op:operator pos:line="573" pos:column="25">&lt;=</op:operator> <lit:literal type="number" pos:line="573" pos:column="28">1</lit:literal></expr>)</condition><then pos:line="573" pos:column="30"> <return pos:line="573" pos:column="31">return;</return></then></if>
	
	<if pos:line="575" pos:column="9">if <condition pos:line="575" pos:column="12">(<expr><name pos:line="575" pos:column="13">lno</name> <op:operator pos:line="575" pos:column="17">==</op:operator> <name pos:line="575" pos:column="20">total_lines</name> <op:operator pos:line="575" pos:column="32">-</op:operator> <lit:literal type="number" pos:line="575" pos:column="34">1</lit:literal></expr>)</condition><then pos:line="575" pos:column="36"> <expr_stmt><expr><name pos:line="575" pos:column="37">lno</name><op:operator pos:line="575" pos:column="40">--</op:operator></expr>;</expr_stmt></then></if> <comment type="line" pos:line="575" pos:column="44">// last line doesn't belong to any search, use last search</comment>

	<decl_stmt><decl><type><name pos:line="577" pos:column="9">int</name></type> <name pos:line="577" pos:column="13">init_lno</name> <init pos:line="577" pos:column="22">= <expr><name pos:line="577" pos:column="24">lno</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="578" pos:column="9">int</name></type> <name pos:line="578" pos:column="13">max_lno</name> <init pos:line="578" pos:column="21">= <expr><call><name><name pos:line="578" pos:column="23">_scintView</name><op:operator pos:line="578" pos:column="33">.</op:operator><name pos:line="578" pos:column="34">execute</name></name><argument_list pos:line="578" pos:column="41">(<argument><expr><name pos:line="578" pos:column="42">SCI_GETLASTCHILD</name></expr></argument>, <argument><expr><name pos:line="578" pos:column="60">lno</name></expr></argument>, <argument><expr><name pos:line="578" pos:column="65">searchHeaderLevel</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="580" pos:column="9">assert</name><argument_list pos:line="580" pos:column="15">(<argument><expr><name pos:line="580" pos:column="16">max_lno</name> <op:operator pos:line="580" pos:column="24">&lt;=</op:operator> <name pos:line="580" pos:column="27">total_lines</name> <op:operator pos:line="580" pos:column="39">-</op:operator> <lit:literal type="number" pos:line="580" pos:column="41">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="582" pos:column="9">// get the line number of the current search (searchHeaderLevel)</comment>
	<decl_stmt><decl><type><name pos:line="583" pos:column="9">int</name></type> <name pos:line="583" pos:column="13">level</name> <init pos:line="583" pos:column="19">= <expr><call><name><name pos:line="583" pos:column="21">_scintView</name><op:operator pos:line="583" pos:column="31">.</op:operator><name pos:line="583" pos:column="32">execute</name></name><argument_list pos:line="583" pos:column="39">(<argument><expr><name pos:line="583" pos:column="40">SCI_GETFOLDLEVEL</name></expr></argument>, <argument><expr><name pos:line="583" pos:column="58">lno</name></expr></argument>)</argument_list></call> <op:operator pos:line="583" pos:column="63">&amp;</op:operator> <name pos:line="583" pos:column="65">SC_FOLDLEVELNUMBERMASK</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="584" pos:column="9">int</name></type> <name pos:line="584" pos:column="13">min_lno</name> <init pos:line="584" pos:column="21">= <expr><name pos:line="584" pos:column="23">lno</name></expr></init></decl>;</decl_stmt>
	<while pos:line="585" pos:column="9">while <condition pos:line="585" pos:column="15">(<expr><name pos:line="585" pos:column="16">level</name><op:operator pos:line="585" pos:column="21">--</op:operator> <op:operator pos:line="585" pos:column="24">&gt;=</op:operator> <name pos:line="585" pos:column="27">fileHeaderLevel</name></expr>)</condition>
	<block pos:line="586" pos:column="9">{
		<expr_stmt><expr><name pos:line="587" pos:column="17">min_lno</name> <op:operator pos:line="587" pos:column="25">=</op:operator> <call><name><name pos:line="587" pos:column="27">_scintView</name><op:operator pos:line="587" pos:column="37">.</op:operator><name pos:line="587" pos:column="38">execute</name></name><argument_list pos:line="587" pos:column="45">(<argument><expr><name pos:line="587" pos:column="46">SCI_GETFOLDPARENT</name></expr></argument>, <argument><expr><name pos:line="587" pos:column="65">min_lno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="588" pos:column="17">assert</name><argument_list pos:line="588" pos:column="23">(<argument><expr><name pos:line="588" pos:column="24">min_lno</name> <op:operator pos:line="588" pos:column="32">&gt;=</op:operator> <lit:literal type="number" pos:line="588" pos:column="35">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>

	<if pos:line="591" pos:column="9">if <condition pos:line="591" pos:column="12">(<expr><name pos:line="591" pos:column="13">min_lno</name> <op:operator pos:line="591" pos:column="21">&lt;</op:operator> <lit:literal type="number" pos:line="591" pos:column="23">0</lit:literal></expr>)</condition><then pos:line="591" pos:column="25"> <expr_stmt><expr><name pos:line="591" pos:column="26">min_lno</name> <op:operator pos:line="591" pos:column="34">=</op:operator> <name pos:line="591" pos:column="36">lno</name></expr>;</expr_stmt></then></if> <comment type="line" pos:line="591" pos:column="41">// when lno is a search header line</comment>

	<expr_stmt><expr><call><name pos:line="593" pos:column="9">assert</name><argument_list pos:line="593" pos:column="15">(<argument><expr><name pos:line="593" pos:column="16">min_lno</name> <op:operator pos:line="593" pos:column="24">&lt;=</op:operator> <name pos:line="593" pos:column="27">max_lno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="595" pos:column="9">lno</name> <op:operator pos:line="595" pos:column="13">+=</op:operator> <name pos:line="595" pos:column="16">increment</name></expr>;</expr_stmt>
	
	<if pos:line="597" pos:column="9">if      <condition pos:line="597" pos:column="17">(<expr><name pos:line="597" pos:column="18">lno</name> <op:operator pos:line="597" pos:column="22">&gt;</op:operator> <name pos:line="597" pos:column="24">max_lno</name></expr>)</condition><then pos:line="597" pos:column="32"> <expr_stmt><expr><name pos:line="597" pos:column="33">lno</name> <op:operator pos:line="597" pos:column="37">=</op:operator> <name pos:line="597" pos:column="39">min_lno</name></expr>;</expr_stmt></then>
	<else pos:line="598" pos:column="9">else <if pos:line="598" pos:column="14">if <condition pos:line="598" pos:column="17">(<expr><name pos:line="598" pos:column="18">lno</name> <op:operator pos:line="598" pos:column="22">&lt;</op:operator> <name pos:line="598" pos:column="24">min_lno</name></expr>)</condition><then pos:line="598" pos:column="32"> <expr_stmt><expr><name pos:line="598" pos:column="33">lno</name> <op:operator pos:line="598" pos:column="37">=</op:operator> <name pos:line="598" pos:column="39">max_lno</name></expr>;</expr_stmt></then></if></else></if>

	<while pos:line="600" pos:column="9">while <condition pos:line="600" pos:column="15">(<expr><call><name><name pos:line="600" pos:column="16">_scintView</name><op:operator pos:line="600" pos:column="26">.</op:operator><name pos:line="600" pos:column="27">execute</name></name><argument_list pos:line="600" pos:column="34">(<argument><expr><name pos:line="600" pos:column="35">SCI_GETFOLDLEVEL</name></expr></argument>, <argument><expr><name pos:line="600" pos:column="53">lno</name></expr></argument>)</argument_list></call> <op:operator pos:line="600" pos:column="58">&amp;</op:operator> <name pos:line="600" pos:column="60">SC_FOLDLEVELHEADERFLAG</name></expr>)</condition>
	<block pos:line="601" pos:column="9">{
		<expr_stmt><expr><name pos:line="602" pos:column="17">lno</name> <op:operator pos:line="602" pos:column="21">+=</op:operator> <name pos:line="602" pos:column="24">increment</name></expr>;</expr_stmt>
		<if pos:line="603" pos:column="17">if      <condition pos:line="603" pos:column="25">(<expr><name pos:line="603" pos:column="26">lno</name> <op:operator pos:line="603" pos:column="30">&gt;</op:operator> <name pos:line="603" pos:column="32">max_lno</name></expr>)</condition><then pos:line="603" pos:column="40"> <expr_stmt><expr><name pos:line="603" pos:column="41">lno</name> <op:operator pos:line="603" pos:column="45">=</op:operator> <name pos:line="603" pos:column="47">min_lno</name></expr>;</expr_stmt></then>
		<else pos:line="604" pos:column="17">else <if pos:line="604" pos:column="22">if <condition pos:line="604" pos:column="25">(<expr><name pos:line="604" pos:column="26">lno</name> <op:operator pos:line="604" pos:column="30">&lt;</op:operator> <name pos:line="604" pos:column="32">min_lno</name></expr>)</condition><then pos:line="604" pos:column="40"> <expr_stmt><expr><name pos:line="604" pos:column="41">lno</name> <op:operator pos:line="604" pos:column="45">=</op:operator> <name pos:line="604" pos:column="47">max_lno</name></expr>;</expr_stmt></then></if></else></if>
		<if pos:line="605" pos:column="17">if <condition pos:line="605" pos:column="20">(<expr><name pos:line="605" pos:column="21">lno</name> <op:operator pos:line="605" pos:column="25">==</op:operator> <name pos:line="605" pos:column="28">init_lno</name></expr>)</condition><then pos:line="605" pos:column="37"> <break pos:line="605" pos:column="38">break;</break></then></if>
	}</block></while>

	<if pos:line="608" pos:column="9">if <condition pos:line="608" pos:column="12">(<expr><op:operator pos:line="608" pos:column="13">(</op:operator><call><name><name pos:line="608" pos:column="14">_scintView</name><op:operator pos:line="608" pos:column="24">.</op:operator><name pos:line="608" pos:column="25">execute</name></name><argument_list pos:line="608" pos:column="32">(<argument><expr><name pos:line="608" pos:column="33">SCI_GETFOLDLEVEL</name></expr></argument>, <argument><expr><name pos:line="608" pos:column="51">lno</name></expr></argument>)</argument_list></call> <op:operator pos:line="608" pos:column="56">&amp;</op:operator> <name pos:line="608" pos:column="58">SC_FOLDLEVELHEADERFLAG</name><op:operator pos:line="608" pos:column="80">)</op:operator> <op:operator pos:line="608" pos:column="82">==</op:operator> <lit:literal type="number" pos:line="608" pos:column="85">0</lit:literal></expr>)</condition><then pos:line="608" pos:column="87">
	<block pos:line="609" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="610" pos:column="17">int</name></type> <name pos:line="610" pos:column="21">start</name> <init pos:line="610" pos:column="27">= <expr><call><name><name pos:line="610" pos:column="29">_scintView</name><op:operator pos:line="610" pos:column="39">.</op:operator><name pos:line="610" pos:column="40">execute</name></name><argument_list pos:line="610" pos:column="47">(<argument><expr><name pos:line="610" pos:column="48">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="610" pos:column="70">lno</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="611" pos:column="17">_scintView</name><op:operator pos:line="611" pos:column="27">.</op:operator><name pos:line="611" pos:column="28">execute</name></name><argument_list pos:line="611" pos:column="35">(<argument><expr><name pos:line="611" pos:column="36">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="611" pos:column="48">start</name></expr></argument>, <argument><expr><name pos:line="611" pos:column="55">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="612" pos:column="17">_scintView</name><op:operator pos:line="612" pos:column="27">.</op:operator><name pos:line="612" pos:column="28">execute</name></name><argument_list pos:line="612" pos:column="35">(<argument><expr><name pos:line="612" pos:column="36">SCI_ENSUREVISIBLE</name></expr></argument>, <argument><expr><name pos:line="612" pos:column="55">lno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="613" pos:column="17">_scintView</name><op:operator pos:line="613" pos:column="27">.</op:operator><name pos:line="613" pos:column="28">execute</name></name><argument_list pos:line="613" pos:column="35">(<argument><expr><name pos:line="613" pos:column="36">SCI_SCROLLCARET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name pos:line="615" pos:column="17">GotoFoundLine</name><argument_list pos:line="615" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="619" pos:column="1">BOOL</name> <name pos:line="619" pos:column="6">CALLBACK</name></type> <name><name pos:line="619" pos:column="15">FindReplaceDlg</name><op:operator pos:line="619" pos:column="29">::</op:operator><name pos:line="619" pos:column="31">run_dlgProc</name></name><parameter_list pos:line="619" pos:column="42">(<param><decl><type><name pos:line="619" pos:column="43">UINT</name></type> <name pos:line="619" pos:column="48">message</name></decl></param>, <param><decl><type><name pos:line="619" pos:column="57">WPARAM</name></type> <name pos:line="619" pos:column="64">wParam</name></decl></param>, <param><decl><type><name pos:line="619" pos:column="72">LPARAM</name></type> <name pos:line="619" pos:column="79">lParam</name></decl></param>)</parameter_list>
<block pos:line="620" pos:column="1">{
	<switch pos:line="621" pos:column="9">switch <condition pos:line="621" pos:column="16">(<expr><name pos:line="621" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="622" pos:column="9">{
		<case pos:line="623" pos:column="17">case <expr><name pos:line="623" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="624" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="625" pos:column="25">RECT</name></type> <name pos:line="625" pos:column="30">arc</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="626" pos:column="25">::</op:operator><name pos:line="626" pos:column="27">GetWindowRect</name></name><argument_list pos:line="626" pos:column="40">(<argument><expr><call><name><op:operator pos:line="626" pos:column="41">::</op:operator><name pos:line="626" pos:column="43">GetDlgItem</name></name><argument_list pos:line="626" pos:column="53">(<argument><expr><name pos:line="626" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="626" pos:column="62">IDCANCEL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="626" pos:column="73">&amp;</op:operator><name pos:line="626" pos:column="74">arc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="627" pos:column="25">_findInFilesClosePos</name><op:operator pos:line="627" pos:column="45">.</op:operator><name pos:line="627" pos:column="46">bottom</name></name> <op:operator pos:line="627" pos:column="53">=</op:operator> <name><name pos:line="627" pos:column="55">_replaceClosePos</name><op:operator pos:line="627" pos:column="71">.</op:operator><name pos:line="627" pos:column="72">bottom</name></name> <op:operator pos:line="627" pos:column="79">=</op:operator> <name><name pos:line="627" pos:column="81">_findClosePos</name><op:operator pos:line="627" pos:column="94">.</op:operator><name pos:line="627" pos:column="95">bottom</name></name> <op:operator pos:line="627" pos:column="102">=</op:operator> <name><name pos:line="627" pos:column="104">arc</name><op:operator pos:line="627" pos:column="107">.</op:operator><name pos:line="627" pos:column="108">bottom</name></name> <op:operator pos:line="627" pos:column="115">-</op:operator> <name><name pos:line="627" pos:column="117">arc</name><op:operator pos:line="627" pos:column="120">.</op:operator><name pos:line="627" pos:column="121">top</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="628" pos:column="25">_findInFilesClosePos</name><op:operator pos:line="628" pos:column="45">.</op:operator><name pos:line="628" pos:column="46">right</name></name> <op:operator pos:line="628" pos:column="52">=</op:operator> <name><name pos:line="628" pos:column="54">_replaceClosePos</name><op:operator pos:line="628" pos:column="70">.</op:operator><name pos:line="628" pos:column="71">right</name></name> <op:operator pos:line="628" pos:column="77">=</op:operator> <name><name pos:line="628" pos:column="79">_findClosePos</name><op:operator pos:line="628" pos:column="92">.</op:operator><name pos:line="628" pos:column="93">right</name></name> <op:operator pos:line="628" pos:column="99">=</op:operator> <name><name pos:line="628" pos:column="101">arc</name><op:operator pos:line="628" pos:column="104">.</op:operator><name pos:line="628" pos:column="105">right</name></name> <op:operator pos:line="628" pos:column="111">-</op:operator> <name><name pos:line="628" pos:column="113">arc</name><op:operator pos:line="628" pos:column="116">.</op:operator><name pos:line="628" pos:column="117">left</name></name></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="630" pos:column="25">POINT</name></type> <name pos:line="630" pos:column="31">p</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="631" pos:column="25">p</name><op:operator pos:line="631" pos:column="26">.</op:operator><name pos:line="631" pos:column="27">x</name></name> <op:operator pos:line="631" pos:column="29">=</op:operator> <name><name pos:line="631" pos:column="31">arc</name><op:operator pos:line="631" pos:column="34">.</op:operator><name pos:line="631" pos:column="35">left</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="632" pos:column="25">p</name><op:operator pos:line="632" pos:column="26">.</op:operator><name pos:line="632" pos:column="27">y</name></name> <op:operator pos:line="632" pos:column="29">=</op:operator> <name><name pos:line="632" pos:column="31">arc</name><op:operator pos:line="632" pos:column="34">.</op:operator><name pos:line="632" pos:column="35">top</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="633" pos:column="25">::</op:operator><name pos:line="633" pos:column="27">ScreenToClient</name></name><argument_list pos:line="633" pos:column="41">(<argument><expr><name pos:line="633" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="633" pos:column="50">&amp;</op:operator><name pos:line="633" pos:column="51">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><name><name pos:line="635" pos:column="25">_replaceClosePos</name><op:operator pos:line="635" pos:column="41">.</op:operator><name pos:line="635" pos:column="42">left</name></name> <op:operator pos:line="635" pos:column="47">=</op:operator> <name><name pos:line="635" pos:column="49">p</name><op:operator pos:line="635" pos:column="50">.</op:operator><name pos:line="635" pos:column="51">x</name></name></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="636" pos:column="25">_replaceClosePos</name><op:operator pos:line="636" pos:column="41">.</op:operator><name pos:line="636" pos:column="42">top</name></name> <op:operator pos:line="636" pos:column="46">=</op:operator> <name><name pos:line="636" pos:column="48">p</name><op:operator pos:line="636" pos:column="49">.</op:operator><name pos:line="636" pos:column="50">y</name></name></expr>;</expr_stmt>

			 <expr_stmt><expr><name pos:line="638" pos:column="26">p</name> <op:operator pos:line="638" pos:column="28">=</op:operator> <call><name pos:line="638" pos:column="30">getLeftTopPoint</name><argument_list pos:line="638" pos:column="45">(<argument><expr><call><name><op:operator pos:line="638" pos:column="46">::</op:operator><name pos:line="638" pos:column="48">GetDlgItem</name></name><argument_list pos:line="638" pos:column="58">(<argument><expr><name pos:line="638" pos:column="59">_hSelf</name></expr></argument>, <argument><expr><name pos:line="638" pos:column="67">IDREPLACEALL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			 <expr_stmt><expr><name><name pos:line="639" pos:column="26">_findInFilesClosePos</name><op:operator pos:line="639" pos:column="46">.</op:operator><name pos:line="639" pos:column="47">left</name></name> <op:operator pos:line="639" pos:column="52">=</op:operator> <name><name pos:line="639" pos:column="54">p</name><op:operator pos:line="639" pos:column="55">.</op:operator><name pos:line="639" pos:column="56">x</name></name></expr>;</expr_stmt>
			 <expr_stmt><expr><name><name pos:line="640" pos:column="26">_findInFilesClosePos</name><op:operator pos:line="640" pos:column="46">.</op:operator><name pos:line="640" pos:column="47">top</name></name> <op:operator pos:line="640" pos:column="51">=</op:operator> <name><name pos:line="640" pos:column="53">p</name><op:operator pos:line="640" pos:column="54">.</op:operator><name pos:line="640" pos:column="55">y</name></name></expr>;</expr_stmt>

			 <expr_stmt><expr><name pos:line="642" pos:column="26">p</name> <op:operator pos:line="642" pos:column="28">=</op:operator> <call><name pos:line="642" pos:column="30">getLeftTopPoint</name><argument_list pos:line="642" pos:column="45">(<argument><expr><call><name><op:operator pos:line="642" pos:column="46">::</op:operator><name pos:line="642" pos:column="48">GetDlgItem</name></name><argument_list pos:line="642" pos:column="58">(<argument><expr><name pos:line="642" pos:column="59">_hSelf</name></expr></argument>, <argument><expr><name pos:line="642" pos:column="67">IDCANCEL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			 <expr_stmt><expr><name><name pos:line="643" pos:column="26">_findClosePos</name><op:operator pos:line="643" pos:column="39">.</op:operator><name pos:line="643" pos:column="40">left</name></name> <op:operator pos:line="643" pos:column="45">=</op:operator> <name><name pos:line="643" pos:column="47">p</name><op:operator pos:line="643" pos:column="48">.</op:operator><name pos:line="643" pos:column="49">x</name></name></expr>;</expr_stmt>
			 <expr_stmt><expr><name><name pos:line="644" pos:column="26">_findClosePos</name><op:operator pos:line="644" pos:column="39">.</op:operator><name pos:line="644" pos:column="40">top</name></name> <op:operator pos:line="644" pos:column="44">=</op:operator> <name><name pos:line="644" pos:column="46">p</name><op:operator pos:line="644" pos:column="47">.</op:operator><name pos:line="644" pos:column="48">y</name></name> <op:operator pos:line="644" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="644" pos:column="52">10</lit:literal></expr>;</expr_stmt>

			<return pos:line="646" pos:column="25">return <expr><name pos:line="646" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		
		</case><case pos:line="649" pos:column="17">case <expr><name pos:line="649" pos:column="22">WM_HSCROLL</name></expr> :
		<block pos:line="650" pos:column="17">{
			<if pos:line="651" pos:column="25">if <condition pos:line="651" pos:column="28">(<expr><op:operator pos:line="651" pos:column="29">(</op:operator><name pos:line="651" pos:column="30">HWND</name><op:operator pos:line="651" pos:column="34">)</op:operator><name pos:line="651" pos:column="35">lParam</name> <op:operator pos:line="651" pos:column="42">==</op:operator> <call><name><op:operator pos:line="651" pos:column="45">::</op:operator><name pos:line="651" pos:column="47">GetDlgItem</name></name><argument_list pos:line="651" pos:column="57">(<argument><expr><name pos:line="651" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><name pos:line="651" pos:column="66">IDC_PERCENTAGE_SLIDER</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="651" pos:column="89">
			<block pos:line="652" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="653" pos:column="33">int</name></type> <name pos:line="653" pos:column="37">percent</name> <init pos:line="653" pos:column="45">= <expr><call><name><op:operator pos:line="653" pos:column="47">::</op:operator><name pos:line="653" pos:column="49">SendDlgItemMessage</name></name><argument_list pos:line="653" pos:column="67">(<argument><expr><name pos:line="653" pos:column="68">_hSelf</name></expr></argument>, <argument><expr><name pos:line="653" pos:column="76">IDC_PERCENTAGE_SLIDER</name></expr></argument>, <argument><expr><name pos:line="653" pos:column="99">TBM_GETPOS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="653" pos:column="111">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="653" pos:column="114">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="654" pos:column="33">FindHistory</name> <type:modifier pos:line="654" pos:column="45">&amp;</type:modifier></type> <name pos:line="654" pos:column="47">findHistory</name> <init pos:line="654" pos:column="59">= <expr><op:operator pos:line="654" pos:column="61">(</op:operator><call><name><name pos:line="654" pos:column="62">NppParameters</name><op:operator pos:line="654" pos:column="75">::</op:operator><name pos:line="654" pos:column="77">getInstance</name></name><argument_list pos:line="654" pos:column="88">()</argument_list></call><op:operator pos:line="654" pos:column="90">)</op:operator><op:operator pos:line="654" pos:column="91">-&gt;</op:operator><call><name pos:line="654" pos:column="93">getFindHistory</name><argument_list pos:line="654" pos:column="107">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="655" pos:column="33">findHistory</name><op:operator pos:line="655" pos:column="44">.</op:operator><name pos:line="655" pos:column="45">_transparency</name></name> <op:operator pos:line="655" pos:column="59">=</op:operator> <name pos:line="655" pos:column="61">percent</name></expr>;</expr_stmt>
				<if pos:line="656" pos:column="33">if <condition pos:line="656" pos:column="36">(<expr><call><name pos:line="656" pos:column="37">isCheckedOrNot</name><argument_list pos:line="656" pos:column="51">(<argument><expr><name pos:line="656" pos:column="52">IDC_TRANSPARENT_ALWAYS_RADIO</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="656" pos:column="82">
				<block pos:line="657" pos:column="33">{
					<expr_stmt><expr><op:operator pos:line="658" pos:column="41">(</op:operator><call><name><name pos:line="658" pos:column="42">NppParameters</name><op:operator pos:line="658" pos:column="55">::</op:operator><name pos:line="658" pos:column="57">getInstance</name></name><argument_list pos:line="658" pos:column="68">()</argument_list></call><op:operator pos:line="658" pos:column="70">)</op:operator><op:operator pos:line="658" pos:column="71">-&gt;</op:operator><call><name pos:line="658" pos:column="73">SetTransparent</name><argument_list pos:line="658" pos:column="87">(<argument><expr><name pos:line="658" pos:column="88">_hSelf</name></expr></argument>, <argument><expr><name pos:line="658" pos:column="96">percent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>
			<return pos:line="661" pos:column="25">return <expr><name pos:line="661" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="664" pos:column="17">case <expr><name pos:line="664" pos:column="22">WM_NOTIFY</name></expr>:
		<block pos:line="665" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="666" pos:column="25">NMHDR</name> <type:modifier pos:line="666" pos:column="31">*</type:modifier></type><name pos:line="666" pos:column="32">nmhdr</name> <init pos:line="666" pos:column="38">= <expr><op:operator pos:line="666" pos:column="40">(</op:operator><name pos:line="666" pos:column="41">NMHDR</name> <op:operator pos:line="666" pos:column="47">*</op:operator><op:operator pos:line="666" pos:column="48">)</op:operator><name pos:line="666" pos:column="49">lParam</name></expr></init></decl>;</decl_stmt>
			<if pos:line="667" pos:column="25">if <condition pos:line="667" pos:column="28">(<expr><name><name pos:line="667" pos:column="29">nmhdr</name><op:operator pos:line="667" pos:column="34">-&gt;</op:operator><name pos:line="667" pos:column="36">code</name></name> <op:operator pos:line="667" pos:column="41">==</op:operator> <name pos:line="667" pos:column="44">TCN_SELCHANGE</name></expr>)</condition><then pos:line="667" pos:column="58">
			<block pos:line="668" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="669" pos:column="33">HWND</name></type> <name pos:line="669" pos:column="38">tabHandle</name> <init pos:line="669" pos:column="48">= <expr><call><name><name pos:line="669" pos:column="50">_tab</name><op:operator pos:line="669" pos:column="54">.</op:operator><name pos:line="669" pos:column="55">getHSelf</name></name><argument_list pos:line="669" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="670" pos:column="33">if <condition pos:line="670" pos:column="36">(<expr><name><name pos:line="670" pos:column="37">nmhdr</name><op:operator pos:line="670" pos:column="42">-&gt;</op:operator><name pos:line="670" pos:column="44">hwndFrom</name></name> <op:operator pos:line="670" pos:column="53">==</op:operator> <name pos:line="670" pos:column="56">tabHandle</name></expr>)</condition><then pos:line="670" pos:column="66">
				<block pos:line="671" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="672" pos:column="41">int</name></type> <name pos:line="672" pos:column="45">indexClicked</name> <init pos:line="672" pos:column="58">= <expr><call><name pos:line="672" pos:column="60">int</name><argument_list pos:line="672" pos:column="63">(<argument><expr><call><name><op:operator pos:line="672" pos:column="64">::</op:operator><name pos:line="672" pos:column="66">SendMessage</name></name><argument_list pos:line="672" pos:column="77">(<argument><expr><name pos:line="672" pos:column="78">tabHandle</name></expr></argument>, <argument><expr><name pos:line="672" pos:column="89">TCM_GETCURSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="672" pos:column="104">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="672" pos:column="107">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="673" pos:column="41">doDialog</name><argument_list pos:line="673" pos:column="49">(<argument><expr><op:operator pos:line="673" pos:column="50">(</op:operator><name pos:line="673" pos:column="51">DIALOG_TYPE</name><op:operator pos:line="673" pos:column="62">)</op:operator><name pos:line="673" pos:column="63">indexClicked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<return pos:line="675" pos:column="33">return <expr><name pos:line="675" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>
			<break pos:line="677" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="680" pos:column="17">case <expr><name pos:line="680" pos:column="22">WM_ACTIVATE</name></expr> :
		<block pos:line="681" pos:column="17">{
			<if pos:line="682" pos:column="25">if <condition pos:line="682" pos:column="28">(<expr><call><name pos:line="682" pos:column="29">LOWORD</name><argument_list pos:line="682" pos:column="35">(<argument><expr><name pos:line="682" pos:column="36">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="682" pos:column="44">==</op:operator> <name pos:line="682" pos:column="47">WA_ACTIVE</name> <op:operator pos:line="682" pos:column="57">||</op:operator> <call><name pos:line="682" pos:column="60">LOWORD</name><argument_list pos:line="682" pos:column="66">(<argument><expr><name pos:line="682" pos:column="67">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="682" pos:column="75">==</op:operator> <name pos:line="682" pos:column="78">WA_CLICKACTIVE</name></expr>)</condition><then pos:line="682" pos:column="93">
			<block pos:line="683" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="684" pos:column="33">CharacterRange</name></type> <name pos:line="684" pos:column="48">cr</name> <init pos:line="684" pos:column="51">= <expr><call><name pos:line="684" pos:column="53">(<type:modifier pos:line="684" pos:column="54">*</type:modifier><name pos:line="684" pos:column="55">_ppEditView</name>)<op:operator pos:line="684" pos:column="67">-&gt;</op:operator><name pos:line="684" pos:column="69">getSelection</name></name><argument_list pos:line="684" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="685" pos:column="33">int</name></type> <name pos:line="685" pos:column="37">nbSelected</name> <init pos:line="685" pos:column="48">= <expr><name><name pos:line="685" pos:column="50">cr</name><op:operator pos:line="685" pos:column="52">.</op:operator><name pos:line="685" pos:column="53">cpMax</name></name> <op:operator pos:line="685" pos:column="59">-</op:operator> <name><name pos:line="685" pos:column="61">cr</name><op:operator pos:line="685" pos:column="63">.</op:operator><name pos:line="685" pos:column="64">cpMin</name></name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><name><name pos:line="687" pos:column="33">_options</name><op:operator pos:line="687" pos:column="41">.</op:operator><name pos:line="687" pos:column="42">_isInSelection</name></name> <op:operator pos:line="687" pos:column="57">=</op:operator> <call><name pos:line="687" pos:column="59">isCheckedOrNot</name><argument_list pos:line="687" pos:column="73">(<argument><expr><name pos:line="687" pos:column="74">IDC_IN_SELECTION_CHECK</name></expr></argument>)</argument_list></call><op:operator pos:line="687" pos:column="97">?</op:operator><lit:literal type="number" pos:line="687" pos:column="98">1</lit:literal><op:operator pos:line="687" pos:column="99">:</op:operator><lit:literal type="number" pos:line="687" pos:column="100">0</lit:literal></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="688" pos:column="33">int</name></type> <name pos:line="688" pos:column="37">checkVal</name> <init pos:line="688" pos:column="46">= <expr><name><name pos:line="688" pos:column="48">_options</name><op:operator pos:line="688" pos:column="56">.</op:operator><name pos:line="688" pos:column="57">_isInSelection</name></name><op:operator pos:line="688" pos:column="71">?</op:operator><name pos:line="688" pos:column="72">BST_CHECKED</name><op:operator pos:line="688" pos:column="83">:</op:operator><name pos:line="688" pos:column="84">BST_UNCHECKED</name></expr></init></decl>;</decl_stmt>
				
				<if pos:line="690" pos:column="33">if <condition pos:line="690" pos:column="36">(<expr><op:operator pos:line="690" pos:column="37">!</op:operator><name><name pos:line="690" pos:column="38">_options</name><op:operator pos:line="690" pos:column="46">.</op:operator><name pos:line="690" pos:column="47">_isInSelection</name></name></expr>)</condition><then pos:line="690" pos:column="62">
				<block pos:line="691" pos:column="33">{
					<if pos:line="692" pos:column="41">if <condition pos:line="692" pos:column="44">(<expr><name pos:line="692" pos:column="45">nbSelected</name> <op:operator pos:line="692" pos:column="56">&lt;=</op:operator> <lit:literal type="number" pos:line="692" pos:column="59">1024</lit:literal></expr>)</condition><then pos:line="692" pos:column="64">
					<block pos:line="693" pos:column="41">{
						<expr_stmt><expr><name pos:line="694" pos:column="49">checkVal</name> <op:operator pos:line="694" pos:column="58">=</op:operator> <name pos:line="694" pos:column="60">BST_UNCHECKED</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="695" pos:column="49">_options</name><op:operator pos:line="695" pos:column="57">.</op:operator><name pos:line="695" pos:column="58">_isInSelection</name></name> <op:operator pos:line="695" pos:column="73">=</op:operator> <lit:literal type="boolean" pos:line="695" pos:column="75">false</lit:literal></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="697" pos:column="41">else
					<block pos:line="698" pos:column="41">{
						<expr_stmt><expr><name pos:line="699" pos:column="49">checkVal</name> <op:operator pos:line="699" pos:column="58">=</op:operator> <name pos:line="699" pos:column="60">BST_CHECKED</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="700" pos:column="49">_options</name><op:operator pos:line="700" pos:column="57">.</op:operator><name pos:line="700" pos:column="58">_isInSelection</name></name> <op:operator pos:line="700" pos:column="73">=</op:operator> <lit:literal type="boolean" pos:line="700" pos:column="75">true</lit:literal></expr>;</expr_stmt>
					}</block></else></if>
				}</block></then></if>
				<comment type="line" pos:line="703" pos:column="33">// Searching/replacing in column selection is not allowed </comment>
				<if pos:line="704" pos:column="33">if <condition pos:line="704" pos:column="36">(<expr><call><name pos:line="704" pos:column="37">(<type:modifier pos:line="704" pos:column="38">*</type:modifier><name pos:line="704" pos:column="39">_ppEditView</name>)<op:operator pos:line="704" pos:column="51">-&gt;</op:operator><name pos:line="704" pos:column="53">execute</name></name><argument_list pos:line="704" pos:column="60">(<argument><expr><name pos:line="704" pos:column="61">SCI_GETSELECTIONMODE</name></expr></argument>)</argument_list></call> <op:operator pos:line="704" pos:column="83">==</op:operator> <name pos:line="704" pos:column="86">SC_SEL_RECTANGLE</name></expr>)</condition><then pos:line="704" pos:column="103">
				<block pos:line="705" pos:column="33">{
					<expr_stmt><expr><name pos:line="706" pos:column="41">checkVal</name> <op:operator pos:line="706" pos:column="50">=</op:operator> <name pos:line="706" pos:column="52">BST_UNCHECKED</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="707" pos:column="41">_options</name><op:operator pos:line="707" pos:column="49">.</op:operator><name pos:line="707" pos:column="50">_isInSelection</name></name> <op:operator pos:line="707" pos:column="65">=</op:operator> <lit:literal type="boolean" pos:line="707" pos:column="67">false</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="708" pos:column="41">nbSelected</name> <op:operator pos:line="708" pos:column="52">=</op:operator> <lit:literal type="number" pos:line="708" pos:column="54">0</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><call><name><op:operator pos:line="710" pos:column="33">::</op:operator><name pos:line="710" pos:column="35">EnableWindow</name></name><argument_list pos:line="710" pos:column="47">(<argument><expr><call><name><op:operator pos:line="710" pos:column="48">::</op:operator><name pos:line="710" pos:column="50">GetDlgItem</name></name><argument_list pos:line="710" pos:column="60">(<argument><expr><name pos:line="710" pos:column="61">_hSelf</name></expr></argument>, <argument><expr><name pos:line="710" pos:column="69">IDC_IN_SELECTION_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="710" pos:column="94">nbSelected</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <comment type="line" pos:line="711" pos:column="17">// uncheck if the control is disable</comment>
                <if pos:line="712" pos:column="17">if <condition pos:line="712" pos:column="20">(<expr><op:operator pos:line="712" pos:column="21">!</op:operator><name pos:line="712" pos:column="22">nbSelected</name></expr>)</condition><then pos:line="712" pos:column="33">
                <block pos:line="713" pos:column="17">{
					<expr_stmt><expr><name pos:line="714" pos:column="41">checkVal</name> <op:operator pos:line="714" pos:column="50">=</op:operator> <name pos:line="714" pos:column="52">BST_UNCHECKED</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="715" pos:column="41">_options</name><op:operator pos:line="715" pos:column="49">.</op:operator><name pos:line="715" pos:column="50">_isInSelection</name></name> <op:operator pos:line="715" pos:column="65">=</op:operator> <lit:literal type="boolean" pos:line="715" pos:column="67">false</lit:literal></expr>;</expr_stmt>
                }</block></then></if>
				<expr_stmt><expr><call><name><op:operator pos:line="717" pos:column="33">::</op:operator><name pos:line="717" pos:column="35">SendDlgItemMessage</name></name><argument_list pos:line="717" pos:column="53">(<argument><expr><name pos:line="717" pos:column="54">_hSelf</name></expr></argument>, <argument><expr><name pos:line="717" pos:column="62">IDC_IN_SELECTION_CHECK</name></expr></argument>, <argument><expr><name pos:line="717" pos:column="86">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="717" pos:column="99">checkVal</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="717" pos:column="109">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			
			<if pos:line="720" pos:column="25">if <condition pos:line="720" pos:column="28">(<expr><call><name pos:line="720" pos:column="29">isCheckedOrNot</name><argument_list pos:line="720" pos:column="43">(<argument><expr><name pos:line="720" pos:column="44">IDC_TRANSPARENT_LOSSFOCUS_RADIO</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="720" pos:column="77">
			<block pos:line="721" pos:column="25">{
				<if pos:line="722" pos:column="33">if <condition pos:line="722" pos:column="36">(<expr><call><name pos:line="722" pos:column="37">LOWORD</name><argument_list pos:line="722" pos:column="43">(<argument><expr><name pos:line="722" pos:column="44">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="722" pos:column="52">==</op:operator> <name pos:line="722" pos:column="55">WA_INACTIVE</name> <op:operator pos:line="722" pos:column="67">&amp;&amp;</op:operator> <call><name pos:line="722" pos:column="70">isVisible</name><argument_list pos:line="722" pos:column="79">()</argument_list></call></expr>)</condition><then pos:line="722" pos:column="82">
				<block pos:line="723" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="724" pos:column="41">int</name></type> <name pos:line="724" pos:column="45">percent</name> <init pos:line="724" pos:column="53">= <expr><call><name><op:operator pos:line="724" pos:column="55">::</op:operator><name pos:line="724" pos:column="57">SendDlgItemMessage</name></name><argument_list pos:line="724" pos:column="75">(<argument><expr><name pos:line="724" pos:column="76">_hSelf</name></expr></argument>, <argument><expr><name pos:line="724" pos:column="84">IDC_PERCENTAGE_SLIDER</name></expr></argument>, <argument><expr><name pos:line="724" pos:column="107">TBM_GETPOS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="724" pos:column="119">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="724" pos:column="122">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><op:operator pos:line="725" pos:column="41">(</op:operator><call><name><name pos:line="725" pos:column="42">NppParameters</name><op:operator pos:line="725" pos:column="55">::</op:operator><name pos:line="725" pos:column="57">getInstance</name></name><argument_list pos:line="725" pos:column="68">()</argument_list></call><op:operator pos:line="725" pos:column="70">)</op:operator><op:operator pos:line="725" pos:column="71">-&gt;</op:operator><call><name pos:line="725" pos:column="73">SetTransparent</name><argument_list pos:line="725" pos:column="87">(<argument><expr><name pos:line="725" pos:column="88">_hSelf</name></expr></argument>, <argument><expr><name pos:line="725" pos:column="96">percent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="727" pos:column="33">else
				<block pos:line="728" pos:column="33">{
					<expr_stmt><expr><op:operator pos:line="729" pos:column="41">(</op:operator><call><name><name pos:line="729" pos:column="42">NppParameters</name><op:operator pos:line="729" pos:column="55">::</op:operator><name pos:line="729" pos:column="57">getInstance</name></name><argument_list pos:line="729" pos:column="68">()</argument_list></call><op:operator pos:line="729" pos:column="70">)</op:operator><op:operator pos:line="729" pos:column="71">-&gt;</op:operator><call><name pos:line="729" pos:column="73">removeTransparent</name><argument_list pos:line="729" pos:column="90">(<argument><expr><name pos:line="729" pos:column="91">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
			<return pos:line="732" pos:column="25">return <expr><name pos:line="732" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="735" pos:column="17">case <expr><name pos:line="735" pos:column="22">NPPM_MODELESSDIALOG</name></expr> :
			<return pos:line="736" pos:column="25">return <expr><call><name><op:operator pos:line="736" pos:column="32">::</op:operator><name pos:line="736" pos:column="34">SendMessage</name></name><argument_list pos:line="736" pos:column="45">(<argument><expr><name pos:line="736" pos:column="46">_hParent</name></expr></argument>, <argument><expr><name pos:line="736" pos:column="56">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="736" pos:column="77">wParam</name></expr></argument>, <argument><expr><name pos:line="736" pos:column="85">lParam</name></expr></argument>)</argument_list></call></expr>;</return>

		</case><case pos:line="738" pos:column="17">case <expr><name pos:line="738" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="739" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="740" pos:column="25">bool</name></type> <name pos:line="740" pos:column="30">isMacroRecording</name> <init pos:line="740" pos:column="47">= <expr><op:operator pos:line="740" pos:column="49">(</op:operator><call><name><op:operator pos:line="740" pos:column="50">::</op:operator><name pos:line="740" pos:column="52">SendMessage</name></name><argument_list pos:line="740" pos:column="63">(<argument><expr><name pos:line="740" pos:column="64">_hParent</name></expr></argument>, <argument><expr><name pos:line="740" pos:column="74">WM_GETCURRENTMACROSTATUS</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="740" pos:column="99">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="740" pos:column="101">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="740" pos:column="104">==</op:operator> <name pos:line="740" pos:column="107">MACRO_RECORDING_IN_PROGRESS</name><op:operator pos:line="740" pos:column="134">)</op:operator></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="741" pos:column="25">NppParameters</name> <type:modifier pos:line="741" pos:column="39">*</type:modifier></type><name pos:line="741" pos:column="40">nppParamInst</name> <init pos:line="741" pos:column="53">= <expr><call><name><name pos:line="741" pos:column="55">NppParameters</name><op:operator pos:line="741" pos:column="68">::</op:operator><name pos:line="741" pos:column="70">getInstance</name></name><argument_list pos:line="741" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="742" pos:column="25">FindHistory</name> <type:modifier pos:line="742" pos:column="37">&amp;</type:modifier></type> <name pos:line="742" pos:column="39">findHistory</name> <init pos:line="742" pos:column="51">= <expr><call><name><name pos:line="742" pos:column="53">nppParamInst</name><op:operator pos:line="742" pos:column="65">-&gt;</op:operator><name pos:line="742" pos:column="67">getFindHistory</name></name><argument_list pos:line="742" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<switch pos:line="743" pos:column="25">switch <condition pos:line="743" pos:column="32">(<expr><name pos:line="743" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="744" pos:column="25">{
<comment type="line" pos:line="745" pos:column="1">//Single actions</comment>
				<case pos:line="746" pos:column="33">case <expr><name pos:line="746" pos:column="38">IDCANCEL</name></expr>:
					<expr_stmt><expr><call><name pos:line="747" pos:column="41">display</name><argument_list pos:line="747" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="747" pos:column="49">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="748" pos:column="41">break;</break>
				</case><case pos:line="749" pos:column="33">case <expr><name pos:line="749" pos:column="38">IDOK</name></expr> : <comment type="line" pos:line="749" pos:column="45">// Find Next : only for FIND_DLG and REPLACE_DLG</comment>
				<block pos:line="750" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="751" pos:column="41">bool</name></type> <name pos:line="751" pos:column="46">isUnicode</name> <init pos:line="751" pos:column="56">= <expr><call><name pos:line="751" pos:column="58">(<type:modifier pos:line="751" pos:column="59">*</type:modifier><name pos:line="751" pos:column="60">_ppEditView</name>)<op:operator pos:line="751" pos:column="72">-&gt;</op:operator><name pos:line="751" pos:column="74">getCurrentBuffer</name></name><argument_list pos:line="751" pos:column="90">()</argument_list></call><op:operator pos:line="751" pos:column="92">-&gt;</op:operator><call><name pos:line="751" pos:column="94">getUnicodeMode</name><argument_list pos:line="751" pos:column="108">()</argument_list></call> <op:operator pos:line="751" pos:column="111">!=</op:operator> <name pos:line="751" pos:column="114">uni8Bit</name></expr></init></decl>;</decl_stmt>

					<decl_stmt><decl><type><name pos:line="753" pos:column="41">HWND</name></type> <name pos:line="753" pos:column="46">hFindCombo</name> <init pos:line="753" pos:column="57">= <expr><call><name><op:operator pos:line="753" pos:column="59">::</op:operator><name pos:line="753" pos:column="61">GetDlgItem</name></name><argument_list pos:line="753" pos:column="71">(<argument><expr><name pos:line="753" pos:column="72">_hSelf</name></expr></argument>, <argument><expr><name pos:line="753" pos:column="80">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="754" pos:column="41">_options</name><op:operator pos:line="754" pos:column="49">.</op:operator><name pos:line="754" pos:column="50">_str2Search</name></name> <op:operator pos:line="754" pos:column="62">=</op:operator> <call><name pos:line="754" pos:column="64">getTextFromCombo</name><argument_list pos:line="754" pos:column="80">(<argument><expr><name pos:line="754" pos:column="81">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="754" pos:column="93">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="755" pos:column="41">updateCombo</name><argument_list pos:line="755" pos:column="52">(<argument><expr><name pos:line="755" pos:column="53">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><name><name pos:line="757" pos:column="41">nppParamInst</name><op:operator pos:line="757" pos:column="53">-&gt;</op:operator><name pos:line="757" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="757" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="757" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<if pos:line="758" pos:column="41">if <condition pos:line="758" pos:column="44">(<expr><name pos:line="758" pos:column="45">isMacroRecording</name></expr>)</condition><then pos:line="758" pos:column="62"> <expr_stmt><expr><call><name pos:line="758" pos:column="63">saveInMacro</name><argument_list pos:line="758" pos:column="74">(<argument><expr><name pos:line="758" pos:column="75">wParam</name></expr></argument>, <argument><expr><name pos:line="758" pos:column="83">FR_OP_FIND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><call><name pos:line="759" pos:column="41">processFindNext</name><argument_list pos:line="759" pos:column="56">(<argument><expr><call><name><name pos:line="759" pos:column="57">_options</name><op:operator pos:line="759" pos:column="65">.</op:operator><name pos:line="759" pos:column="66">_str2Search</name><op:operator pos:line="759" pos:column="77">.</op:operator><name pos:line="759" pos:column="78">c_str</name></name><argument_list pos:line="759" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="760" pos:column="41">nppParamInst</name><op:operator pos:line="760" pos:column="53">-&gt;</op:operator><name pos:line="760" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="760" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="760" pos:column="74">false</lit:literal></expr>;</expr_stmt>
				}</block>
				<return pos:line="762" pos:column="33">return <expr><name pos:line="762" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="764" pos:column="33">case <expr><name pos:line="764" pos:column="38">IDREPLACE</name></expr> :
				<block pos:line="765" pos:column="33">{
					<if pos:line="766" pos:column="41">if <condition pos:line="766" pos:column="44">(<expr><name pos:line="766" pos:column="45">_currentStatus</name> <op:operator pos:line="766" pos:column="60">==</op:operator> <name pos:line="766" pos:column="63">REPLACE_DLG</name></expr>)</condition><then pos:line="766" pos:column="75">
					<block pos:line="767" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="768" pos:column="49">bool</name></type> <name pos:line="768" pos:column="54">isUnicode</name> <init pos:line="768" pos:column="64">= <expr><call><name pos:line="768" pos:column="66">(<type:modifier pos:line="768" pos:column="67">*</type:modifier><name pos:line="768" pos:column="68">_ppEditView</name>)<op:operator pos:line="768" pos:column="80">-&gt;</op:operator><name pos:line="768" pos:column="82">getCurrentBuffer</name></name><argument_list pos:line="768" pos:column="98">()</argument_list></call><op:operator pos:line="768" pos:column="100">-&gt;</op:operator><call><name pos:line="768" pos:column="102">getUnicodeMode</name><argument_list pos:line="768" pos:column="116">()</argument_list></call> <op:operator pos:line="768" pos:column="119">!=</op:operator> <name pos:line="768" pos:column="122">uni8Bit</name></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="769" pos:column="49">HWND</name></type> <name pos:line="769" pos:column="54">hFindCombo</name> <init pos:line="769" pos:column="65">= <expr><call><name><op:operator pos:line="769" pos:column="67">::</op:operator><name pos:line="769" pos:column="69">GetDlgItem</name></name><argument_list pos:line="769" pos:column="79">(<argument><expr><name pos:line="769" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name pos:line="769" pos:column="88">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="770" pos:column="49">HWND</name></type> <name pos:line="770" pos:column="54">hReplaceCombo</name> <init pos:line="770" pos:column="68">= <expr><call><name><op:operator pos:line="770" pos:column="70">::</op:operator><name pos:line="770" pos:column="72">GetDlgItem</name></name><argument_list pos:line="770" pos:column="82">(<argument><expr><name pos:line="770" pos:column="83">_hSelf</name></expr></argument>, <argument><expr><name pos:line="770" pos:column="91">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="771" pos:column="49">_options</name><op:operator pos:line="771" pos:column="57">.</op:operator><name pos:line="771" pos:column="58">_str2Search</name></name> <op:operator pos:line="771" pos:column="70">=</op:operator> <call><name pos:line="771" pos:column="72">getTextFromCombo</name><argument_list pos:line="771" pos:column="88">(<argument><expr><name pos:line="771" pos:column="89">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="771" pos:column="101">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="772" pos:column="49">_options</name><op:operator pos:line="772" pos:column="57">.</op:operator><name pos:line="772" pos:column="58">_str4Replace</name></name> <op:operator pos:line="772" pos:column="71">=</op:operator> <call><name pos:line="772" pos:column="73">getTextFromCombo</name><argument_list pos:line="772" pos:column="89">(<argument><expr><name pos:line="772" pos:column="90">hReplaceCombo</name></expr></argument>, <argument><expr><name pos:line="772" pos:column="105">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="773" pos:column="49">updateCombos</name><argument_list pos:line="773" pos:column="61">()</argument_list></call></expr>;</expr_stmt>

						<expr_stmt><expr><name><name pos:line="775" pos:column="49">nppParamInst</name><op:operator pos:line="775" pos:column="61">-&gt;</op:operator><name pos:line="775" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="775" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="775" pos:column="82">true</lit:literal></expr>;</expr_stmt>
						<if pos:line="776" pos:column="49">if <condition pos:line="776" pos:column="52">(<expr><name pos:line="776" pos:column="53">isMacroRecording</name></expr>)</condition><then pos:line="776" pos:column="70"> <expr_stmt><expr><call><name pos:line="776" pos:column="71">saveInMacro</name><argument_list pos:line="776" pos:column="82">(<argument><expr><name pos:line="776" pos:column="83">wParam</name></expr></argument>, <argument><expr><name pos:line="776" pos:column="91">FR_OP_REPLACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><call><name pos:line="777" pos:column="49">processReplace</name><argument_list pos:line="777" pos:column="63">(<argument><expr><call><name><name pos:line="777" pos:column="64">_options</name><op:operator pos:line="777" pos:column="72">.</op:operator><name pos:line="777" pos:column="73">_str2Search</name><op:operator pos:line="777" pos:column="84">.</op:operator><name pos:line="777" pos:column="85">c_str</name></name><argument_list pos:line="777" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="777" pos:column="94">_options</name><op:operator pos:line="777" pos:column="102">.</op:operator><name pos:line="777" pos:column="103">_str4Replace</name><op:operator pos:line="777" pos:column="115">.</op:operator><name pos:line="777" pos:column="116">c_str</name></name><argument_list pos:line="777" pos:column="121">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="778" pos:column="49">nppParamInst</name><op:operator pos:line="778" pos:column="61">-&gt;</op:operator><name pos:line="778" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="778" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="778" pos:column="82">false</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
				}</block>
				<return pos:line="781" pos:column="33">return <expr><name pos:line="781" pos:column="40">TRUE</name></expr>;</return>
<comment type="line" pos:line="782" pos:column="1">//Process actions</comment>
				</case><case pos:line="783" pos:column="33">case <expr><name pos:line="783" pos:column="38">IDC_FINDALL_OPENEDFILES</name></expr> :
				<block pos:line="784" pos:column="33">{
					<if pos:line="785" pos:column="41">if <condition pos:line="785" pos:column="44">(<expr><name pos:line="785" pos:column="45">_currentStatus</name> <op:operator pos:line="785" pos:column="60">==</op:operator> <name pos:line="785" pos:column="63">FIND_DLG</name></expr>)</condition><then pos:line="785" pos:column="72">
					<block pos:line="786" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="787" pos:column="49">bool</name></type> <name pos:line="787" pos:column="54">isUnicode</name> <init pos:line="787" pos:column="64">= <expr><call><name pos:line="787" pos:column="66">(<type:modifier pos:line="787" pos:column="67">*</type:modifier><name pos:line="787" pos:column="68">_ppEditView</name>)<op:operator pos:line="787" pos:column="80">-&gt;</op:operator><name pos:line="787" pos:column="82">getCurrentBuffer</name></name><argument_list pos:line="787" pos:column="98">()</argument_list></call><op:operator pos:line="787" pos:column="100">-&gt;</op:operator><call><name pos:line="787" pos:column="102">getUnicodeMode</name><argument_list pos:line="787" pos:column="116">()</argument_list></call> <op:operator pos:line="787" pos:column="119">!=</op:operator> <name pos:line="787" pos:column="122">uni8Bit</name></expr></init></decl>;</decl_stmt>
 						<decl_stmt><decl><type><name pos:line="788" pos:column="49">HWND</name></type> <name pos:line="788" pos:column="54">hFindCombo</name> <init pos:line="788" pos:column="65">= <expr><call><name><op:operator pos:line="788" pos:column="67">::</op:operator><name pos:line="788" pos:column="69">GetDlgItem</name></name><argument_list pos:line="788" pos:column="79">(<argument><expr><name pos:line="788" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name pos:line="788" pos:column="88">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name pos:line="789" pos:column="25">combo2ExtendedMode</name><argument_list pos:line="789" pos:column="43">(<argument><expr><name pos:line="789" pos:column="44">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="790" pos:column="49">_options</name><op:operator pos:line="790" pos:column="57">.</op:operator><name pos:line="790" pos:column="58">_str2Search</name></name> <op:operator pos:line="790" pos:column="70">=</op:operator> <call><name pos:line="790" pos:column="72">getTextFromCombo</name><argument_list pos:line="790" pos:column="88">(<argument><expr><name pos:line="790" pos:column="89">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="790" pos:column="101">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="791" pos:column="49">updateCombo</name><argument_list pos:line="791" pos:column="60">(<argument><expr><name pos:line="791" pos:column="61">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

						<expr_stmt><expr><name><name pos:line="793" pos:column="49">nppParamInst</name><op:operator pos:line="793" pos:column="61">-&gt;</op:operator><name pos:line="793" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="793" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="793" pos:column="82">true</lit:literal></expr>;</expr_stmt>
						<if pos:line="794" pos:column="49">if <condition pos:line="794" pos:column="52">(<expr><name pos:line="794" pos:column="53">isMacroRecording</name></expr>)</condition><then pos:line="794" pos:column="70"> <expr_stmt><expr><call><name pos:line="794" pos:column="71">saveInMacro</name><argument_list pos:line="794" pos:column="82">(<argument><expr><name pos:line="794" pos:column="83">wParam</name></expr></argument>, <argument><expr><name pos:line="794" pos:column="91">FR_OP_FIND</name> <op:operator pos:line="794" pos:column="102">+</op:operator> <name pos:line="794" pos:column="104">FR_OP_GLOBAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><call><name pos:line="795" pos:column="49">findAllIn</name><argument_list pos:line="795" pos:column="58">(<argument><expr><name pos:line="795" pos:column="59">ALL_OPEN_DOCS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="796" pos:column="49">nppParamInst</name><op:operator pos:line="796" pos:column="61">-&gt;</op:operator><name pos:line="796" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="796" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="796" pos:column="82">false</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
				}</block>
				<return pos:line="799" pos:column="33">return <expr><name pos:line="799" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="801" pos:column="33">case <expr><name pos:line="801" pos:column="38">IDC_FINDALL_CURRENTFILE</name></expr> :
				<block pos:line="802" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="803" pos:column="41">bool</name></type> <name pos:line="803" pos:column="46">isUnicode</name> <init pos:line="803" pos:column="56">= <expr><call><name pos:line="803" pos:column="58">(<type:modifier pos:line="803" pos:column="59">*</type:modifier><name pos:line="803" pos:column="60">_ppEditView</name>)<op:operator pos:line="803" pos:column="72">-&gt;</op:operator><name pos:line="803" pos:column="74">getCurrentBuffer</name></name><argument_list pos:line="803" pos:column="90">()</argument_list></call><op:operator pos:line="803" pos:column="92">-&gt;</op:operator><call><name pos:line="803" pos:column="94">getUnicodeMode</name><argument_list pos:line="803" pos:column="108">()</argument_list></call> <op:operator pos:line="803" pos:column="111">!=</op:operator> <name pos:line="803" pos:column="114">uni8Bit</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="804" pos:column="41">HWND</name></type> <name pos:line="804" pos:column="46">hFindCombo</name> <init pos:line="804" pos:column="57">= <expr><call><name><op:operator pos:line="804" pos:column="59">::</op:operator><name pos:line="804" pos:column="61">GetDlgItem</name></name><argument_list pos:line="804" pos:column="71">(<argument><expr><name pos:line="804" pos:column="72">_hSelf</name></expr></argument>, <argument><expr><name pos:line="804" pos:column="80">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><call><name pos:line="805" pos:column="21">combo2ExtendedMode</name><argument_list pos:line="805" pos:column="39">(<argument><expr><name pos:line="805" pos:column="40">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="806" pos:column="41">_options</name><op:operator pos:line="806" pos:column="49">.</op:operator><name pos:line="806" pos:column="50">_str2Search</name></name> <op:operator pos:line="806" pos:column="62">=</op:operator> <call><name pos:line="806" pos:column="64">getTextFromCombo</name><argument_list pos:line="806" pos:column="80">(<argument><expr><name pos:line="806" pos:column="81">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="806" pos:column="93">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="807" pos:column="41">updateCombo</name><argument_list pos:line="807" pos:column="52">(<argument><expr><name pos:line="807" pos:column="53">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><name><name pos:line="809" pos:column="41">nppParamInst</name><op:operator pos:line="809" pos:column="53">-&gt;</op:operator><name pos:line="809" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="809" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="809" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<if pos:line="810" pos:column="41">if <condition pos:line="810" pos:column="44">(<expr><name pos:line="810" pos:column="45">isMacroRecording</name></expr>)</condition><then pos:line="810" pos:column="62"> <expr_stmt><expr><call><name pos:line="810" pos:column="63">saveInMacro</name><argument_list pos:line="810" pos:column="74">(<argument><expr><name pos:line="810" pos:column="75">wParam</name></expr></argument>, <argument><expr><name pos:line="810" pos:column="83">FR_OP_FIND</name> <op:operator pos:line="810" pos:column="94">+</op:operator> <name pos:line="810" pos:column="96">FR_OP_GLOBAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><call><name pos:line="811" pos:column="41">findAllIn</name><argument_list pos:line="811" pos:column="50">(<argument><expr><name pos:line="811" pos:column="51">CURRENT_DOC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="812" pos:column="41">nppParamInst</name><op:operator pos:line="812" pos:column="53">-&gt;</op:operator><name pos:line="812" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="812" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="812" pos:column="74">false</lit:literal></expr>;</expr_stmt>
				}</block>
				<return pos:line="814" pos:column="33">return <expr><name pos:line="814" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="816" pos:column="33">case <expr><name pos:line="816" pos:column="38">IDD_FINDINFILES_FIND_BUTTON</name></expr> :
				<block pos:line="817" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="818" pos:column="41">const</specifier> <name pos:line="818" pos:column="47">int</name></type> <name pos:line="818" pos:column="51">filterSize</name> <init pos:line="818" pos:column="62">= <expr><lit:literal type="number" pos:line="818" pos:column="64">256</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="819" pos:column="41">TCHAR</name></type> <name><name pos:line="819" pos:column="47">filters</name><index pos:line="819" pos:column="54">[<expr><name pos:line="819" pos:column="55">filterSize</name><op:operator pos:line="819" pos:column="65">+</op:operator><lit:literal type="number" pos:line="819" pos:column="66">1</lit:literal></expr>]</index></name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="820" pos:column="41">filters</name><index pos:line="820" pos:column="48">[<expr><name pos:line="820" pos:column="49">filterSize</name></expr>]</index></name> <op:operator pos:line="820" pos:column="61">=</op:operator> <lit:literal type="char" pos:line="820" pos:column="63">'\0'</lit:literal></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="821" pos:column="41">TCHAR</name></type> <name><name pos:line="821" pos:column="47">directory</name><index pos:line="821" pos:column="56">[<expr><name pos:line="821" pos:column="57">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="822" pos:column="41">::</op:operator><name pos:line="822" pos:column="43">GetDlgItemText</name></name><argument_list pos:line="822" pos:column="57">(<argument><expr><name pos:line="822" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><name pos:line="822" pos:column="66">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>, <argument><expr><name pos:line="822" pos:column="97">filters</name></expr></argument>, <argument><expr><name pos:line="822" pos:column="106">filterSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="823" pos:column="41">addText2Combo</name><argument_list pos:line="823" pos:column="54">(<argument><expr><name pos:line="823" pos:column="55">filters</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="823" pos:column="64">::</op:operator><name pos:line="823" pos:column="66">GetDlgItem</name></name><argument_list pos:line="823" pos:column="76">(<argument><expr><name pos:line="823" pos:column="77">_hSelf</name></expr></argument>, <argument><expr><name pos:line="823" pos:column="85">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="824" pos:column="41">_options</name><op:operator pos:line="824" pos:column="49">.</op:operator><name pos:line="824" pos:column="50">_filters</name></name> <op:operator pos:line="824" pos:column="59">=</op:operator> <name pos:line="824" pos:column="61">filters</name></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><op:operator pos:line="826" pos:column="41">::</op:operator><name pos:line="826" pos:column="43">GetDlgItemText</name></name><argument_list pos:line="826" pos:column="57">(<argument><expr><name pos:line="826" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><name pos:line="826" pos:column="66">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>, <argument><expr><name pos:line="826" pos:column="93">directory</name></expr></argument>, <argument><expr><name pos:line="826" pos:column="104">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="827" pos:column="41">addText2Combo</name><argument_list pos:line="827" pos:column="54">(<argument><expr><name pos:line="827" pos:column="55">directory</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="827" pos:column="66">::</op:operator><name pos:line="827" pos:column="68">GetDlgItem</name></name><argument_list pos:line="827" pos:column="78">(<argument><expr><name pos:line="827" pos:column="79">_hSelf</name></expr></argument>, <argument><expr><name pos:line="827" pos:column="87">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="828" pos:column="41">_options</name><op:operator pos:line="828" pos:column="49">.</op:operator><name pos:line="828" pos:column="50">_directory</name></name> <op:operator pos:line="828" pos:column="61">=</op:operator> <name pos:line="828" pos:column="63">directory</name></expr>;</expr_stmt>
					
					<if pos:line="830" pos:column="41">if <condition pos:line="830" pos:column="44">(<expr><op:operator pos:line="830" pos:column="45">(</op:operator><call><name pos:line="830" pos:column="46">lstrlen</name><argument_list pos:line="830" pos:column="53">(<argument><expr><name pos:line="830" pos:column="54">directory</name></expr></argument>)</argument_list></call> <op:operator pos:line="830" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="830" pos:column="67">0</lit:literal><op:operator pos:line="830" pos:column="68">)</op:operator> <op:operator pos:line="830" pos:column="70">&amp;&amp;</op:operator> <op:operator pos:line="830" pos:column="73">(</op:operator><name><name pos:line="830" pos:column="74">directory</name><index pos:line="830" pos:column="83">[<expr><call><name pos:line="830" pos:column="84">lstrlen</name><argument_list pos:line="830" pos:column="91">(<argument><expr><name pos:line="830" pos:column="92">directory</name></expr></argument>)</argument_list></call><op:operator pos:line="830" pos:column="102">-</op:operator><lit:literal type="number" pos:line="830" pos:column="103">1</lit:literal></expr>]</index></name> <op:operator pos:line="830" pos:column="106">!=</op:operator> <lit:literal type="char" pos:line="830" pos:column="109">'\\'</lit:literal><op:operator pos:line="830" pos:column="113">)</op:operator></expr>)</condition><then pos:line="830" pos:column="115">
						<expr_stmt><expr><name><name pos:line="831" pos:column="49">_options</name><op:operator pos:line="831" pos:column="57">.</op:operator><name pos:line="831" pos:column="58">_directory</name></name> <op:operator pos:line="831" pos:column="69">+=</op:operator> <call><name pos:line="831" pos:column="72">TEXT</name><argument_list pos:line="831" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="831" pos:column="77">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

 					<decl_stmt><decl><type><name pos:line="833" pos:column="41">bool</name></type> <name pos:line="833" pos:column="46">isUnicode</name> <init pos:line="833" pos:column="56">= <expr><call><name pos:line="833" pos:column="58">(<type:modifier pos:line="833" pos:column="59">*</type:modifier><name pos:line="833" pos:column="60">_ppEditView</name>)<op:operator pos:line="833" pos:column="72">-&gt;</op:operator><name pos:line="833" pos:column="74">getCurrentBuffer</name></name><argument_list pos:line="833" pos:column="90">()</argument_list></call><op:operator pos:line="833" pos:column="92">-&gt;</op:operator><call><name pos:line="833" pos:column="94">getUnicodeMode</name><argument_list pos:line="833" pos:column="108">()</argument_list></call> <op:operator pos:line="833" pos:column="111">!=</op:operator> <name pos:line="833" pos:column="114">uni8Bit</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="834" pos:column="41">HWND</name></type> <name pos:line="834" pos:column="46">hFindCombo</name> <init pos:line="834" pos:column="57">= <expr><call><name><op:operator pos:line="834" pos:column="59">::</op:operator><name pos:line="834" pos:column="61">GetDlgItem</name></name><argument_list pos:line="834" pos:column="71">(<argument><expr><name pos:line="834" pos:column="72">_hSelf</name></expr></argument>, <argument><expr><name pos:line="834" pos:column="80">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                   <expr_stmt><expr><call><name pos:line="835" pos:column="20">combo2ExtendedMode</name><argument_list pos:line="835" pos:column="38">(<argument><expr><name pos:line="835" pos:column="39">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="836" pos:column="41">_options</name><op:operator pos:line="836" pos:column="49">.</op:operator><name pos:line="836" pos:column="50">_str2Search</name></name> <op:operator pos:line="836" pos:column="62">=</op:operator> <call><name pos:line="836" pos:column="64">getTextFromCombo</name><argument_list pos:line="836" pos:column="80">(<argument><expr><name pos:line="836" pos:column="81">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="836" pos:column="93">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="837" pos:column="41">updateCombo</name><argument_list pos:line="837" pos:column="52">(<argument><expr><name pos:line="837" pos:column="53">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><name><name pos:line="839" pos:column="41">nppParamInst</name><op:operator pos:line="839" pos:column="53">-&gt;</op:operator><name pos:line="839" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="839" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="839" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<if pos:line="840" pos:column="41">if <condition pos:line="840" pos:column="44">(<expr><name pos:line="840" pos:column="45">isMacroRecording</name></expr>)</condition><then pos:line="840" pos:column="62"> <expr_stmt><expr><call><name pos:line="840" pos:column="63">saveInMacro</name><argument_list pos:line="840" pos:column="74">(<argument><expr><name pos:line="840" pos:column="75">wParam</name></expr></argument>, <argument><expr><name pos:line="840" pos:column="83">FR_OP_FIND</name> <op:operator pos:line="840" pos:column="94">+</op:operator> <name pos:line="840" pos:column="96">FR_OP_FIF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					<expr_stmt><expr><call><name pos:line="841" pos:column="41">findAllIn</name><argument_list pos:line="841" pos:column="50">(<argument><expr><name pos:line="841" pos:column="51">FILES_IN_DIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="842" pos:column="41">nppParamInst</name><op:operator pos:line="842" pos:column="53">-&gt;</op:operator><name pos:line="842" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="842" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="842" pos:column="74">false</lit:literal></expr>;</expr_stmt>
				}</block>
				<return pos:line="844" pos:column="33">return <expr><name pos:line="844" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="846" pos:column="33">case <expr><name pos:line="846" pos:column="38">IDD_FINDINFILES_REPLACEINFILES</name></expr> :
				<block pos:line="847" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="848" pos:column="41">const</specifier> <name pos:line="848" pos:column="47">int</name></type> <name pos:line="848" pos:column="51">filterSize</name> <init pos:line="848" pos:column="62">= <expr><lit:literal type="number" pos:line="848" pos:column="64">256</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="849" pos:column="41">TCHAR</name></type> <name><name pos:line="849" pos:column="47">filters</name><index pos:line="849" pos:column="54">[<expr><name pos:line="849" pos:column="55">filterSize</name></expr>]</index></name></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="850" pos:column="41">TCHAR</name></type> <name><name pos:line="850" pos:column="47">directory</name><index pos:line="850" pos:column="56">[<expr><name pos:line="850" pos:column="57">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="851" pos:column="41">::</op:operator><name pos:line="851" pos:column="43">GetDlgItemText</name></name><argument_list pos:line="851" pos:column="57">(<argument><expr><name pos:line="851" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><name pos:line="851" pos:column="66">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>, <argument><expr><name pos:line="851" pos:column="97">filters</name></expr></argument>, <argument><expr><name pos:line="851" pos:column="106">filterSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="852" pos:column="41">addText2Combo</name><argument_list pos:line="852" pos:column="54">(<argument><expr><name pos:line="852" pos:column="55">filters</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="852" pos:column="64">::</op:operator><name pos:line="852" pos:column="66">GetDlgItem</name></name><argument_list pos:line="852" pos:column="76">(<argument><expr><name pos:line="852" pos:column="77">_hSelf</name></expr></argument>, <argument><expr><name pos:line="852" pos:column="85">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="853" pos:column="41">_options</name><op:operator pos:line="853" pos:column="49">.</op:operator><name pos:line="853" pos:column="50">_filters</name></name> <op:operator pos:line="853" pos:column="59">=</op:operator> <name pos:line="853" pos:column="61">filters</name></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><op:operator pos:line="855" pos:column="41">::</op:operator><name pos:line="855" pos:column="43">GetDlgItemText</name></name><argument_list pos:line="855" pos:column="57">(<argument><expr><name pos:line="855" pos:column="58">_hSelf</name></expr></argument>, <argument><expr><name pos:line="855" pos:column="66">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>, <argument><expr><name pos:line="855" pos:column="93">directory</name></expr></argument>, <argument><expr><name pos:line="855" pos:column="104">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="856" pos:column="41">addText2Combo</name><argument_list pos:line="856" pos:column="54">(<argument><expr><name pos:line="856" pos:column="55">directory</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="856" pos:column="66">::</op:operator><name pos:line="856" pos:column="68">GetDlgItem</name></name><argument_list pos:line="856" pos:column="78">(<argument><expr><name pos:line="856" pos:column="79">_hSelf</name></expr></argument>, <argument><expr><name pos:line="856" pos:column="87">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="857" pos:column="41">_options</name><op:operator pos:line="857" pos:column="49">.</op:operator><name pos:line="857" pos:column="50">_directory</name></name> <op:operator pos:line="857" pos:column="61">=</op:operator> <name pos:line="857" pos:column="63">directory</name></expr>;</expr_stmt>
					
					<if pos:line="859" pos:column="41">if <condition pos:line="859" pos:column="44">(<expr><op:operator pos:line="859" pos:column="45">(</op:operator><call><name pos:line="859" pos:column="46">lstrlen</name><argument_list pos:line="859" pos:column="53">(<argument><expr><name pos:line="859" pos:column="54">directory</name></expr></argument>)</argument_list></call> <op:operator pos:line="859" pos:column="65">&gt;</op:operator> <lit:literal type="number" pos:line="859" pos:column="67">0</lit:literal><op:operator pos:line="859" pos:column="68">)</op:operator> <op:operator pos:line="859" pos:column="70">&amp;&amp;</op:operator> <op:operator pos:line="859" pos:column="73">(</op:operator><name><name pos:line="859" pos:column="74">directory</name><index pos:line="859" pos:column="83">[<expr><call><name pos:line="859" pos:column="84">lstrlen</name><argument_list pos:line="859" pos:column="91">(<argument><expr><name pos:line="859" pos:column="92">directory</name></expr></argument>)</argument_list></call><op:operator pos:line="859" pos:column="102">-</op:operator><lit:literal type="number" pos:line="859" pos:column="103">1</lit:literal></expr>]</index></name> <op:operator pos:line="859" pos:column="106">!=</op:operator> <lit:literal type="char" pos:line="859" pos:column="109">'\\'</lit:literal><op:operator pos:line="859" pos:column="113">)</op:operator></expr>)</condition><then pos:line="859" pos:column="115">
						<expr_stmt><expr><name><name pos:line="860" pos:column="49">_options</name><op:operator pos:line="860" pos:column="57">.</op:operator><name pos:line="860" pos:column="58">_directory</name></name> <op:operator pos:line="860" pos:column="69">+=</op:operator> <call><name pos:line="860" pos:column="72">TEXT</name><argument_list pos:line="860" pos:column="76">(<argument><expr><lit:literal type="string" pos:line="860" pos:column="77">"\\"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

					<decl_stmt><decl><type><name pos:line="862" pos:column="41">generic_string</name></type> <name pos:line="862" pos:column="56">msg</name> <init pos:line="862" pos:column="60">= <expr><call><name pos:line="862" pos:column="62">TEXT</name><argument_list pos:line="862" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="862" pos:column="67">"Are you sure you want to replace all occurrences in :\r"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="863" pos:column="41">msg</name> <op:operator pos:line="863" pos:column="45">+=</op:operator> <name><name pos:line="863" pos:column="48">_options</name><op:operator pos:line="863" pos:column="56">.</op:operator><name pos:line="863" pos:column="57">_directory</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="864" pos:column="41">msg</name> <op:operator pos:line="864" pos:column="45">+=</op:operator> <call><name pos:line="864" pos:column="48">TEXT</name><argument_list pos:line="864" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="864" pos:column="53">"\rfor file type : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="865" pos:column="41">msg</name> <op:operator pos:line="865" pos:column="45">+=</op:operator> <name><name pos:line="865" pos:column="48">_options</name><op:operator pos:line="865" pos:column="56">.</op:operator><name pos:line="865" pos:column="57">_filters</name><index pos:line="865" pos:column="65">[<expr><lit:literal type="number" pos:line="865" pos:column="66">0</lit:literal></expr>]</index></name><op:operator pos:line="865" pos:column="68">?</op:operator><name><name pos:line="865" pos:column="69">_options</name><op:operator pos:line="865" pos:column="77">.</op:operator><name pos:line="865" pos:column="78">_filters</name></name><op:operator pos:line="865" pos:column="86">:</op:operator><call><name pos:line="865" pos:column="87">TEXT</name><argument_list pos:line="865" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="865" pos:column="92">"*.*"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<if pos:line="867" pos:column="41">if <condition pos:line="867" pos:column="44">(<expr><call><name><op:operator pos:line="867" pos:column="45">::</op:operator><name pos:line="867" pos:column="47">MessageBox</name></name><argument_list pos:line="867" pos:column="57">(<argument><expr><name pos:line="867" pos:column="58">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="867" pos:column="68">msg</name><op:operator pos:line="867" pos:column="71">.</op:operator><name pos:line="867" pos:column="72">c_str</name></name><argument_list pos:line="867" pos:column="77">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="867" pos:column="81">TEXT</name><argument_list pos:line="867" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="867" pos:column="86">"Are you sure?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="867" pos:column="104">MB_OKCANCEL</name></expr></argument>)</argument_list></call> <op:operator pos:line="867" pos:column="117">==</op:operator> <name pos:line="867" pos:column="120">IDOK</name></expr>)</condition><then pos:line="867" pos:column="125">
					<block pos:line="868" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="869" pos:column="49">bool</name></type> <name pos:line="869" pos:column="54">isUnicode</name> <init pos:line="869" pos:column="64">= <expr><call><name pos:line="869" pos:column="66">(<type:modifier pos:line="869" pos:column="67">*</type:modifier><name pos:line="869" pos:column="68">_ppEditView</name>)<op:operator pos:line="869" pos:column="80">-&gt;</op:operator><name pos:line="869" pos:column="82">getCurrentBuffer</name></name><argument_list pos:line="869" pos:column="98">()</argument_list></call><op:operator pos:line="869" pos:column="100">-&gt;</op:operator><call><name pos:line="869" pos:column="102">getUnicodeMode</name><argument_list pos:line="869" pos:column="116">()</argument_list></call> <op:operator pos:line="869" pos:column="119">!=</op:operator> <name pos:line="869" pos:column="122">uni8Bit</name></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="870" pos:column="49">HWND</name></type> <name pos:line="870" pos:column="54">hFindCombo</name> <init pos:line="870" pos:column="65">= <expr><call><name><op:operator pos:line="870" pos:column="67">::</op:operator><name pos:line="870" pos:column="69">GetDlgItem</name></name><argument_list pos:line="870" pos:column="79">(<argument><expr><name pos:line="870" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name pos:line="870" pos:column="88">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="871" pos:column="49">_options</name><op:operator pos:line="871" pos:column="57">.</op:operator><name pos:line="871" pos:column="58">_str2Search</name></name> <op:operator pos:line="871" pos:column="70">=</op:operator> <call><name pos:line="871" pos:column="72">getTextFromCombo</name><argument_list pos:line="871" pos:column="88">(<argument><expr><name pos:line="871" pos:column="89">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="871" pos:column="101">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="872" pos:column="49">HWND</name></type> <name pos:line="872" pos:column="54">hReplaceCombo</name> <init pos:line="872" pos:column="68">= <expr><call><name><op:operator pos:line="872" pos:column="70">::</op:operator><name pos:line="872" pos:column="72">GetDlgItem</name></name><argument_list pos:line="872" pos:column="82">(<argument><expr><name pos:line="872" pos:column="83">_hSelf</name></expr></argument>, <argument><expr><name pos:line="872" pos:column="91">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="873" pos:column="49">_options</name><op:operator pos:line="873" pos:column="57">.</op:operator><name pos:line="873" pos:column="58">_str4Replace</name></name> <op:operator pos:line="873" pos:column="71">=</op:operator> <call><name pos:line="873" pos:column="73">getTextFromCombo</name><argument_list pos:line="873" pos:column="89">(<argument><expr><name pos:line="873" pos:column="90">hReplaceCombo</name></expr></argument>, <argument><expr><name pos:line="873" pos:column="105">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="874" pos:column="49">updateCombo</name><argument_list pos:line="874" pos:column="60">(<argument><expr><name pos:line="874" pos:column="61">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="875" pos:column="49">updateCombo</name><argument_list pos:line="875" pos:column="60">(<argument><expr><name pos:line="875" pos:column="61">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

						<expr_stmt><expr><name><name pos:line="877" pos:column="49">nppParamInst</name><op:operator pos:line="877" pos:column="61">-&gt;</op:operator><name pos:line="877" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="877" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="877" pos:column="82">true</lit:literal></expr>;</expr_stmt>
						<if pos:line="878" pos:column="49">if <condition pos:line="878" pos:column="52">(<expr><name pos:line="878" pos:column="53">isMacroRecording</name></expr>)</condition><then pos:line="878" pos:column="70"> <expr_stmt><expr><call><name pos:line="878" pos:column="71">saveInMacro</name><argument_list pos:line="878" pos:column="82">(<argument><expr><name pos:line="878" pos:column="83">wParam</name></expr></argument>, <argument><expr><name pos:line="878" pos:column="91">FR_OP_REPLACE</name> <op:operator pos:line="878" pos:column="105">+</op:operator> <name pos:line="878" pos:column="107">FR_OP_FIF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><call><name><op:operator pos:line="879" pos:column="49">::</op:operator><name pos:line="879" pos:column="51">SendMessage</name></name><argument_list pos:line="879" pos:column="62">(<argument><expr><name pos:line="879" pos:column="63">_hParent</name></expr></argument>, <argument><expr><name pos:line="879" pos:column="73">WM_REPLACEINFILES</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="879" pos:column="92">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="879" pos:column="95">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="880" pos:column="49">nppParamInst</name><op:operator pos:line="880" pos:column="61">-&gt;</op:operator><name pos:line="880" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="880" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="880" pos:column="82">false</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
				}</block>
				<return pos:line="883" pos:column="33">return <expr><name pos:line="883" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="885" pos:column="33">case <expr><name pos:line="885" pos:column="38">IDC_REPLACE_OPENEDFILES</name></expr> :
				<block pos:line="886" pos:column="33">{
					<if pos:line="887" pos:column="41">if <condition pos:line="887" pos:column="44">(<expr><name pos:line="887" pos:column="45">_currentStatus</name> <op:operator pos:line="887" pos:column="60">==</op:operator> <name pos:line="887" pos:column="63">REPLACE_DLG</name></expr>)</condition><then pos:line="887" pos:column="75">
					<block pos:line="888" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="889" pos:column="49">bool</name></type> <name pos:line="889" pos:column="54">isUnicode</name> <init pos:line="889" pos:column="64">= <expr><call><name pos:line="889" pos:column="66">(<type:modifier pos:line="889" pos:column="67">*</type:modifier><name pos:line="889" pos:column="68">_ppEditView</name>)<op:operator pos:line="889" pos:column="80">-&gt;</op:operator><name pos:line="889" pos:column="82">getCurrentBuffer</name></name><argument_list pos:line="889" pos:column="98">()</argument_list></call><op:operator pos:line="889" pos:column="100">-&gt;</op:operator><call><name pos:line="889" pos:column="102">getUnicodeMode</name><argument_list pos:line="889" pos:column="116">()</argument_list></call> <op:operator pos:line="889" pos:column="119">!=</op:operator> <name pos:line="889" pos:column="122">uni8Bit</name></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="890" pos:column="49">HWND</name></type> <name pos:line="890" pos:column="54">hFindCombo</name> <init pos:line="890" pos:column="65">= <expr><call><name><op:operator pos:line="890" pos:column="67">::</op:operator><name pos:line="890" pos:column="69">GetDlgItem</name></name><argument_list pos:line="890" pos:column="79">(<argument><expr><name pos:line="890" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name pos:line="890" pos:column="88">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="891" pos:column="49">_options</name><op:operator pos:line="891" pos:column="57">.</op:operator><name pos:line="891" pos:column="58">_str2Search</name></name> <op:operator pos:line="891" pos:column="70">=</op:operator> <call><name pos:line="891" pos:column="72">getTextFromCombo</name><argument_list pos:line="891" pos:column="88">(<argument><expr><name pos:line="891" pos:column="89">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="891" pos:column="101">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="892" pos:column="49">HWND</name></type> <name pos:line="892" pos:column="54">hReplaceCombo</name> <init pos:line="892" pos:column="68">= <expr><call><name><op:operator pos:line="892" pos:column="70">::</op:operator><name pos:line="892" pos:column="72">GetDlgItem</name></name><argument_list pos:line="892" pos:column="82">(<argument><expr><name pos:line="892" pos:column="83">_hSelf</name></expr></argument>, <argument><expr><name pos:line="892" pos:column="91">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="893" pos:column="49">_options</name><op:operator pos:line="893" pos:column="57">.</op:operator><name pos:line="893" pos:column="58">_str4Replace</name></name> <op:operator pos:line="893" pos:column="71">=</op:operator> <call><name pos:line="893" pos:column="73">getTextFromCombo</name><argument_list pos:line="893" pos:column="89">(<argument><expr><name pos:line="893" pos:column="90">hReplaceCombo</name></expr></argument>, <argument><expr><name pos:line="893" pos:column="105">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="894" pos:column="49">updateCombos</name><argument_list pos:line="894" pos:column="61">()</argument_list></call></expr>;</expr_stmt>

						<expr_stmt><expr><name><name pos:line="896" pos:column="49">nppParamInst</name><op:operator pos:line="896" pos:column="61">-&gt;</op:operator><name pos:line="896" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="896" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="896" pos:column="82">true</lit:literal></expr>;</expr_stmt>
						<if pos:line="897" pos:column="49">if <condition pos:line="897" pos:column="52">(<expr><name pos:line="897" pos:column="53">isMacroRecording</name></expr>)</condition><then pos:line="897" pos:column="70"> <expr_stmt><expr><call><name pos:line="897" pos:column="71">saveInMacro</name><argument_list pos:line="897" pos:column="82">(<argument><expr><name pos:line="897" pos:column="83">wParam</name></expr></argument>, <argument><expr><name pos:line="897" pos:column="91">FR_OP_REPLACE</name> <op:operator pos:line="897" pos:column="105">+</op:operator> <name pos:line="897" pos:column="107">FR_OP_GLOBAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><call><name pos:line="898" pos:column="49">replaceAllInOpenedDocs</name><argument_list pos:line="898" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="899" pos:column="49">nppParamInst</name><op:operator pos:line="899" pos:column="61">-&gt;</op:operator><name pos:line="899" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="899" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="899" pos:column="82">false</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
				}</block>			
				<return pos:line="902" pos:column="33">return <expr><name pos:line="902" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="904" pos:column="33">case <expr><name pos:line="904" pos:column="38">IDREPLACEALL</name></expr> :
				<block pos:line="905" pos:column="33">{
					<if pos:line="906" pos:column="41">if <condition pos:line="906" pos:column="44">(<expr><name pos:line="906" pos:column="45">_currentStatus</name> <op:operator pos:line="906" pos:column="60">==</op:operator> <name pos:line="906" pos:column="63">REPLACE_DLG</name></expr>)</condition><then pos:line="906" pos:column="75">
					<block pos:line="907" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="908" pos:column="49">bool</name></type> <name pos:line="908" pos:column="54">isUnicode</name> <init pos:line="908" pos:column="64">= <expr><call><name pos:line="908" pos:column="66">(<type:modifier pos:line="908" pos:column="67">*</type:modifier><name pos:line="908" pos:column="68">_ppEditView</name>)<op:operator pos:line="908" pos:column="80">-&gt;</op:operator><name pos:line="908" pos:column="82">getCurrentBuffer</name></name><argument_list pos:line="908" pos:column="98">()</argument_list></call><op:operator pos:line="908" pos:column="100">-&gt;</op:operator><call><name pos:line="908" pos:column="102">getUnicodeMode</name><argument_list pos:line="908" pos:column="116">()</argument_list></call> <op:operator pos:line="908" pos:column="119">!=</op:operator> <name pos:line="908" pos:column="122">uni8Bit</name></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="909" pos:column="49">HWND</name></type> <name pos:line="909" pos:column="54">hFindCombo</name> <init pos:line="909" pos:column="65">= <expr><call><name><op:operator pos:line="909" pos:column="67">::</op:operator><name pos:line="909" pos:column="69">GetDlgItem</name></name><argument_list pos:line="909" pos:column="79">(<argument><expr><name pos:line="909" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name pos:line="909" pos:column="88">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="910" pos:column="49">_options</name><op:operator pos:line="910" pos:column="57">.</op:operator><name pos:line="910" pos:column="58">_str2Search</name></name> <op:operator pos:line="910" pos:column="70">=</op:operator> <call><name pos:line="910" pos:column="72">getTextFromCombo</name><argument_list pos:line="910" pos:column="88">(<argument><expr><name pos:line="910" pos:column="89">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="910" pos:column="101">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="911" pos:column="49">HWND</name></type> <name pos:line="911" pos:column="54">hReplaceCombo</name> <init pos:line="911" pos:column="68">= <expr><call><name><op:operator pos:line="911" pos:column="70">::</op:operator><name pos:line="911" pos:column="72">GetDlgItem</name></name><argument_list pos:line="911" pos:column="82">(<argument><expr><name pos:line="911" pos:column="83">_hSelf</name></expr></argument>, <argument><expr><name pos:line="911" pos:column="91">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="912" pos:column="49">_options</name><op:operator pos:line="912" pos:column="57">.</op:operator><name pos:line="912" pos:column="58">_str4Replace</name></name> <op:operator pos:line="912" pos:column="71">=</op:operator> <call><name pos:line="912" pos:column="73">getTextFromCombo</name><argument_list pos:line="912" pos:column="89">(<argument><expr><name pos:line="912" pos:column="90">hReplaceCombo</name></expr></argument>, <argument><expr><name pos:line="912" pos:column="105">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="913" pos:column="49">updateCombos</name><argument_list pos:line="913" pos:column="61">()</argument_list></call></expr>;</expr_stmt>

						<expr_stmt><expr><name><name pos:line="915" pos:column="49">nppParamInst</name><op:operator pos:line="915" pos:column="61">-&gt;</op:operator><name pos:line="915" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="915" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="915" pos:column="82">true</lit:literal></expr>;</expr_stmt>
						<if pos:line="916" pos:column="49">if <condition pos:line="916" pos:column="52">(<expr><name pos:line="916" pos:column="53">isMacroRecording</name></expr>)</condition><then pos:line="916" pos:column="70"> <expr_stmt><expr><call><name pos:line="916" pos:column="71">saveInMacro</name><argument_list pos:line="916" pos:column="82">(<argument><expr><name pos:line="916" pos:column="83">wParam</name></expr></argument>, <argument><expr><name pos:line="916" pos:column="91">FR_OP_REPLACE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><call><name pos:line="917" pos:column="49">(<type:modifier pos:line="917" pos:column="50">*</type:modifier><name pos:line="917" pos:column="51">_ppEditView</name>)<op:operator pos:line="917" pos:column="63">-&gt;</op:operator><name pos:line="917" pos:column="65">execute</name></name><argument_list pos:line="917" pos:column="72">(<argument><expr><name pos:line="917" pos:column="73">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="918" pos:column="49">int</name></type> <name pos:line="918" pos:column="53">nbReplaced</name> <init pos:line="918" pos:column="64">= <expr><call><name pos:line="918" pos:column="66">processAll</name><argument_list pos:line="918" pos:column="76">(<argument><expr><name pos:line="918" pos:column="77">ProcessReplaceAll</name></expr></argument>, <argument><expr><op:operator pos:line="918" pos:column="96">&amp;</op:operator><name pos:line="918" pos:column="97">_options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name pos:line="919" pos:column="49">(<type:modifier pos:line="919" pos:column="50">*</type:modifier><name pos:line="919" pos:column="51">_ppEditView</name>)<op:operator pos:line="919" pos:column="63">-&gt;</op:operator><name pos:line="919" pos:column="65">execute</name></name><argument_list pos:line="919" pos:column="72">(<argument><expr><name pos:line="919" pos:column="73">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="920" pos:column="49">nppParamInst</name><op:operator pos:line="920" pos:column="61">-&gt;</op:operator><name pos:line="920" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="920" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="920" pos:column="82">false</lit:literal></expr>;</expr_stmt>

						<decl_stmt><decl><type><name pos:line="922" pos:column="49">generic_string</name></type> <name pos:line="922" pos:column="64">result</name> <init pos:line="922" pos:column="71">= <expr><call><name pos:line="922" pos:column="73">TEXT</name><argument_list pos:line="922" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="922" pos:column="78">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						
						<if pos:line="924" pos:column="49">if <condition pos:line="924" pos:column="52">(<expr><name pos:line="924" pos:column="53">nbReplaced</name> <op:operator pos:line="924" pos:column="64">&lt;</op:operator> <lit:literal type="number" pos:line="924" pos:column="66">0</lit:literal></expr>)</condition><then pos:line="924" pos:column="68">
							<expr_stmt><expr><name pos:line="925" pos:column="57">result</name> <op:operator pos:line="925" pos:column="64">=</op:operator> <call><name pos:line="925" pos:column="66">TEXT</name><argument_list pos:line="925" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="925" pos:column="71">"The regular expression is malformed."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
						<else pos:line="926" pos:column="49">else
						<block pos:line="927" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="928" pos:column="57">TCHAR</name></type> <name><name pos:line="928" pos:column="63">moreInfo</name><index pos:line="928" pos:column="71">[<expr><lit:literal type="number" pos:line="928" pos:column="72">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
							<if pos:line="929" pos:column="57">if<condition pos:line="929" pos:column="59">(<expr><name pos:line="929" pos:column="60">nbReplaced</name> <op:operator pos:line="929" pos:column="71">==</op:operator> <lit:literal type="number" pos:line="929" pos:column="74">1</lit:literal></expr>)</condition><then pos:line="929" pos:column="76">
								<expr_stmt><expr><call><name pos:line="930" pos:column="65">wsprintf</name><argument_list pos:line="930" pos:column="73">(<argument><expr><name pos:line="930" pos:column="74">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="930" pos:column="84">TEXT</name><argument_list pos:line="930" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="930" pos:column="89">"1 occurrence was replaced."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
							<else pos:line="931" pos:column="57">else
								<expr_stmt><expr><call><name pos:line="932" pos:column="65">wsprintf</name><argument_list pos:line="932" pos:column="73">(<argument><expr><name pos:line="932" pos:column="74">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="932" pos:column="84">TEXT</name><argument_list pos:line="932" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="932" pos:column="89">"%d occurrences were replaced."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="932" pos:column="123">nbReplaced</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
							<expr_stmt><expr><name pos:line="933" pos:column="57">result</name> <op:operator pos:line="933" pos:column="64">=</op:operator> <name pos:line="933" pos:column="66">moreInfo</name></expr>;</expr_stmt>
						}</block></else></if>
						<expr_stmt><expr><call><name><op:operator pos:line="935" pos:column="49">::</op:operator><name pos:line="935" pos:column="51">MessageBox</name></name><argument_list pos:line="935" pos:column="61">(<argument><expr><name pos:line="935" pos:column="62">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="935" pos:column="72">result</name><op:operator pos:line="935" pos:column="78">.</op:operator><name pos:line="935" pos:column="79">c_str</name></name><argument_list pos:line="935" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="935" pos:column="88">TEXT</name><argument_list pos:line="935" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="935" pos:column="93">"Replace All"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="935" pos:column="109">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="936" pos:column="49">::</op:operator><name pos:line="936" pos:column="51">SetFocus</name></name><argument_list pos:line="936" pos:column="59">(<argument><expr><name pos:line="936" pos:column="60">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block>
				<return pos:line="939" pos:column="33">return <expr><name pos:line="939" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="941" pos:column="33">case <expr><name pos:line="941" pos:column="38">IDCCOUNTALL</name></expr> :
				<block pos:line="942" pos:column="33">{
					<if pos:line="943" pos:column="41">if <condition pos:line="943" pos:column="44">(<expr><name pos:line="943" pos:column="45">_currentStatus</name> <op:operator pos:line="943" pos:column="60">==</op:operator> <name pos:line="943" pos:column="63">FIND_DLG</name></expr>)</condition><then pos:line="943" pos:column="72">
					<block pos:line="944" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="945" pos:column="49">bool</name></type> <name pos:line="945" pos:column="54">isUnicode</name> <init pos:line="945" pos:column="64">= <expr><call><name pos:line="945" pos:column="66">(<type:modifier pos:line="945" pos:column="67">*</type:modifier><name pos:line="945" pos:column="68">_ppEditView</name>)<op:operator pos:line="945" pos:column="80">-&gt;</op:operator><name pos:line="945" pos:column="82">getCurrentBuffer</name></name><argument_list pos:line="945" pos:column="98">()</argument_list></call><op:operator pos:line="945" pos:column="100">-&gt;</op:operator><call><name pos:line="945" pos:column="102">getUnicodeMode</name><argument_list pos:line="945" pos:column="116">()</argument_list></call> <op:operator pos:line="945" pos:column="119">!=</op:operator> <name pos:line="945" pos:column="122">uni8Bit</name></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="946" pos:column="49">HWND</name></type> <name pos:line="946" pos:column="54">hFindCombo</name> <init pos:line="946" pos:column="65">= <expr><call><name><op:operator pos:line="946" pos:column="67">::</op:operator><name pos:line="946" pos:column="69">GetDlgItem</name></name><argument_list pos:line="946" pos:column="79">(<argument><expr><name pos:line="946" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name pos:line="946" pos:column="88">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name pos:line="947" pos:column="49">updateCombo</name><argument_list pos:line="947" pos:column="60">(<argument><expr><name pos:line="947" pos:column="61">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="948" pos:column="49">_options</name><op:operator pos:line="948" pos:column="57">.</op:operator><name pos:line="948" pos:column="58">_str2Search</name></name> <op:operator pos:line="948" pos:column="70">=</op:operator> <call><name pos:line="948" pos:column="72">getTextFromCombo</name><argument_list pos:line="948" pos:column="88">(<argument><expr><name pos:line="948" pos:column="89">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="948" pos:column="101">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

						<decl_stmt><decl><type><name pos:line="950" pos:column="49">int</name></type> <name pos:line="950" pos:column="53">nbCounted</name> <init pos:line="950" pos:column="63">= <expr><call><name pos:line="950" pos:column="65">processAll</name><argument_list pos:line="950" pos:column="75">(<argument><expr><name pos:line="950" pos:column="76">ProcessCountAll</name></expr></argument>, <argument><expr><op:operator pos:line="950" pos:column="93">&amp;</op:operator><name pos:line="950" pos:column="94">_options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="951" pos:column="49">generic_string</name></type> <name pos:line="951" pos:column="64">result</name> <init pos:line="951" pos:column="71">= <expr><call><name pos:line="951" pos:column="73">TEXT</name><argument_list pos:line="951" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="951" pos:column="78">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

						<if pos:line="953" pos:column="49">if <condition pos:line="953" pos:column="52">(<expr><name pos:line="953" pos:column="53">nbCounted</name> <op:operator pos:line="953" pos:column="63">&lt;</op:operator> <lit:literal type="number" pos:line="953" pos:column="65">0</lit:literal></expr>)</condition><then pos:line="953" pos:column="67">
							<expr_stmt><expr><name pos:line="954" pos:column="57">result</name> <op:operator pos:line="954" pos:column="64">=</op:operator> <call><name pos:line="954" pos:column="66">TEXT</name><argument_list pos:line="954" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="954" pos:column="71">"The regular expression to search is malformed.\r\nDoes it result in nothing?"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
						<else pos:line="955" pos:column="49">else
						<block pos:line="956" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="957" pos:column="57">TCHAR</name></type> <name><name pos:line="957" pos:column="63">moreInfo</name><index pos:line="957" pos:column="71">[<expr><lit:literal type="number" pos:line="957" pos:column="72">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>
							<if pos:line="958" pos:column="57">if<condition pos:line="958" pos:column="59">(<expr><name pos:line="958" pos:column="60">nbCounted</name> <op:operator pos:line="958" pos:column="70">==</op:operator> <lit:literal type="number" pos:line="958" pos:column="73">1</lit:literal></expr>)</condition><then pos:line="958" pos:column="75">
							<expr_stmt><expr><call><name pos:line="959" pos:column="57">wsprintf</name><argument_list pos:line="959" pos:column="65">(<argument><expr><name pos:line="959" pos:column="66">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="959" pos:column="76">TEXT</name><argument_list pos:line="959" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="959" pos:column="81">"1 match."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
							<else pos:line="960" pos:column="57">else
								<expr_stmt><expr><call><name pos:line="961" pos:column="65">wsprintf</name><argument_list pos:line="961" pos:column="73">(<argument><expr><name pos:line="961" pos:column="74">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="961" pos:column="84">TEXT</name><argument_list pos:line="961" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="961" pos:column="89">"%d matches."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="961" pos:column="105">nbCounted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
							<expr_stmt><expr><name pos:line="962" pos:column="57">result</name> <op:operator pos:line="962" pos:column="64">=</op:operator> <name pos:line="962" pos:column="66">moreInfo</name></expr>;</expr_stmt>
						}</block></else></if>
						<if pos:line="964" pos:column="49">if <condition pos:line="964" pos:column="52">(<expr><name pos:line="964" pos:column="53">isMacroRecording</name></expr>)</condition><then pos:line="964" pos:column="70"> <expr_stmt><expr><call><name pos:line="964" pos:column="71">saveInMacro</name><argument_list pos:line="964" pos:column="82">(<argument><expr><name pos:line="964" pos:column="83">wParam</name></expr></argument>, <argument><expr><name pos:line="964" pos:column="91">FR_OP_FIND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><call><name><op:operator pos:line="965" pos:column="49">::</op:operator><name pos:line="965" pos:column="51">MessageBox</name></name><argument_list pos:line="965" pos:column="61">(<argument><expr><name pos:line="965" pos:column="62">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="965" pos:column="72">result</name><op:operator pos:line="965" pos:column="78">.</op:operator><name pos:line="965" pos:column="79">c_str</name></name><argument_list pos:line="965" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="965" pos:column="88">TEXT</name><argument_list pos:line="965" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="965" pos:column="93">"Count"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="965" pos:column="103">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="966" pos:column="49">::</op:operator><name pos:line="966" pos:column="51">SetFocus</name></name><argument_list pos:line="966" pos:column="59">(<argument><expr><name pos:line="966" pos:column="60">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block>
				<return pos:line="969" pos:column="33">return <expr><name pos:line="969" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="971" pos:column="33">case <expr><name pos:line="971" pos:column="38">IDCMARKALL</name></expr> :
				<block pos:line="972" pos:column="33">{
					<if pos:line="973" pos:column="41">if <condition pos:line="973" pos:column="44">(<expr><name pos:line="973" pos:column="45">_currentStatus</name> <op:operator pos:line="973" pos:column="60">==</op:operator> <name pos:line="973" pos:column="63">MARK_DLG</name></expr>)</condition><then pos:line="973" pos:column="72">
					<block pos:line="974" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="975" pos:column="49">bool</name></type> <name pos:line="975" pos:column="54">isUnicode</name> <init pos:line="975" pos:column="64">= <expr><call><name pos:line="975" pos:column="66">(<type:modifier pos:line="975" pos:column="67">*</type:modifier><name pos:line="975" pos:column="68">_ppEditView</name>)<op:operator pos:line="975" pos:column="80">-&gt;</op:operator><name pos:line="975" pos:column="82">getCurrentBuffer</name></name><argument_list pos:line="975" pos:column="98">()</argument_list></call><op:operator pos:line="975" pos:column="100">-&gt;</op:operator><call><name pos:line="975" pos:column="102">getUnicodeMode</name><argument_list pos:line="975" pos:column="116">()</argument_list></call> <op:operator pos:line="975" pos:column="119">!=</op:operator> <name pos:line="975" pos:column="122">uni8Bit</name></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="976" pos:column="49">HWND</name></type> <name pos:line="976" pos:column="54">hFindCombo</name> <init pos:line="976" pos:column="65">= <expr><call><name><op:operator pos:line="976" pos:column="67">::</op:operator><name pos:line="976" pos:column="69">GetDlgItem</name></name><argument_list pos:line="976" pos:column="79">(<argument><expr><name pos:line="976" pos:column="80">_hSelf</name></expr></argument>, <argument><expr><name pos:line="976" pos:column="88">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="977" pos:column="49">_options</name><op:operator pos:line="977" pos:column="57">.</op:operator><name pos:line="977" pos:column="58">_str2Search</name></name> <op:operator pos:line="977" pos:column="70">=</op:operator> <call><name pos:line="977" pos:column="72">getTextFromCombo</name><argument_list pos:line="977" pos:column="88">(<argument><expr><name pos:line="977" pos:column="89">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="977" pos:column="101">isUnicode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="978" pos:column="49">updateCombo</name><argument_list pos:line="978" pos:column="60">(<argument><expr><name pos:line="978" pos:column="61">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

						<if pos:line="980" pos:column="49">if <condition pos:line="980" pos:column="52">(<expr><name pos:line="980" pos:column="53">isMacroRecording</name></expr>)</condition><then pos:line="980" pos:column="70"> <expr_stmt><expr><call><name pos:line="980" pos:column="71">saveInMacro</name><argument_list pos:line="980" pos:column="82">(<argument><expr><name pos:line="980" pos:column="83">wParam</name></expr></argument>, <argument><expr><name pos:line="980" pos:column="91">FR_OP_FIND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><name><name pos:line="981" pos:column="49">nppParamInst</name><op:operator pos:line="981" pos:column="61">-&gt;</op:operator><name pos:line="981" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="981" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="981" pos:column="82">true</lit:literal></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="982" pos:column="49">int</name></type> <name pos:line="982" pos:column="53">nbMarked</name> <init pos:line="982" pos:column="62">= <expr><call><name pos:line="982" pos:column="64">processAll</name><argument_list pos:line="982" pos:column="74">(<argument><expr><name pos:line="982" pos:column="75">ProcessMarkAll</name></expr></argument>, <argument><expr><op:operator pos:line="982" pos:column="91">&amp;</op:operator><name pos:line="982" pos:column="92">_options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="983" pos:column="49">nppParamInst</name><op:operator pos:line="983" pos:column="61">-&gt;</op:operator><name pos:line="983" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="983" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="983" pos:column="82">false</lit:literal></expr>;</expr_stmt>
						<decl_stmt><decl><type><name pos:line="984" pos:column="49">generic_string</name></type> <name pos:line="984" pos:column="64">result</name> <init pos:line="984" pos:column="71">= <expr><call><name pos:line="984" pos:column="73">TEXT</name><argument_list pos:line="984" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="984" pos:column="78">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="985" pos:column="49">if <condition pos:line="985" pos:column="52">(<expr><name pos:line="985" pos:column="53">nbMarked</name> <op:operator pos:line="985" pos:column="62">&lt;</op:operator> <lit:literal type="number" pos:line="985" pos:column="64">0</lit:literal></expr>)</condition><then pos:line="985" pos:column="66">
							<expr_stmt><expr><name pos:line="986" pos:column="57">result</name> <op:operator pos:line="986" pos:column="64">=</op:operator> <call><name pos:line="986" pos:column="66">TEXT</name><argument_list pos:line="986" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="986" pos:column="71">"The regular expression to search is malformed.\r\nDoes it result in nothing?"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
						<else pos:line="987" pos:column="49">else
						<block pos:line="988" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="989" pos:column="57">TCHAR</name></type> <name><name pos:line="989" pos:column="63">moreInfo</name><index pos:line="989" pos:column="71">[<expr><lit:literal type="number" pos:line="989" pos:column="72">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>
							<if pos:line="990" pos:column="57">if<condition pos:line="990" pos:column="59">(<expr><name pos:line="990" pos:column="60">nbMarked</name> <op:operator pos:line="990" pos:column="69">==</op:operator> <lit:literal type="number" pos:line="990" pos:column="72">1</lit:literal></expr>)</condition><then pos:line="990" pos:column="74">
							<expr_stmt><expr><call><name pos:line="991" pos:column="57">wsprintf</name><argument_list pos:line="991" pos:column="65">(<argument><expr><name pos:line="991" pos:column="66">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="991" pos:column="76">TEXT</name><argument_list pos:line="991" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="991" pos:column="81">"1 match."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
							<else pos:line="992" pos:column="57">else
								<expr_stmt><expr><call><name pos:line="993" pos:column="65">wsprintf</name><argument_list pos:line="993" pos:column="73">(<argument><expr><name pos:line="993" pos:column="74">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="993" pos:column="84">TEXT</name><argument_list pos:line="993" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="993" pos:column="89">"%d matches."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="993" pos:column="105">nbMarked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
							<expr_stmt><expr><name pos:line="994" pos:column="57">result</name> <op:operator pos:line="994" pos:column="64">=</op:operator> <name pos:line="994" pos:column="66">moreInfo</name></expr>;</expr_stmt>
						}</block></else></if>
						<expr_stmt><expr><call><name><op:operator pos:line="996" pos:column="49">::</op:operator><name pos:line="996" pos:column="51">MessageBox</name></name><argument_list pos:line="996" pos:column="61">(<argument><expr><name pos:line="996" pos:column="62">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="996" pos:column="72">result</name><op:operator pos:line="996" pos:column="78">.</op:operator><name pos:line="996" pos:column="79">c_str</name></name><argument_list pos:line="996" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="996" pos:column="88">TEXT</name><argument_list pos:line="996" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="996" pos:column="93">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="996" pos:column="102">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="997" pos:column="49">::</op:operator><name pos:line="997" pos:column="51">SetFocus</name></name><argument_list pos:line="997" pos:column="59">(<argument><expr><name pos:line="997" pos:column="60">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block>
				<return pos:line="1000" pos:column="33">return <expr><name pos:line="1000" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="1002" pos:column="33">case <expr><name pos:line="1002" pos:column="38">IDC_CLEAR_ALL</name></expr> :
				<block pos:line="1003" pos:column="33">{
					<if pos:line="1004" pos:column="41">if <condition pos:line="1004" pos:column="44">(<expr><name pos:line="1004" pos:column="45">_currentStatus</name> <op:operator pos:line="1004" pos:column="60">==</op:operator> <name pos:line="1004" pos:column="63">MARK_DLG</name></expr>)</condition><then pos:line="1004" pos:column="72">
					<block pos:line="1005" pos:column="41">{
						<expr_stmt><expr><call><name pos:line="1006" pos:column="49">(<type:modifier pos:line="1006" pos:column="50">*</type:modifier><name pos:line="1006" pos:column="51">_ppEditView</name>)<op:operator pos:line="1006" pos:column="63">-&gt;</op:operator><name pos:line="1006" pos:column="65">clearIndicator</name></name><argument_list pos:line="1006" pos:column="79">(<argument><expr><name pos:line="1006" pos:column="80">SCE_UNIVERSAL_FOUND_STYLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name pos:line="1007" pos:column="49">(<type:modifier pos:line="1007" pos:column="50">*</type:modifier><name pos:line="1007" pos:column="51">_ppEditView</name>)<op:operator pos:line="1007" pos:column="63">-&gt;</op:operator><name pos:line="1007" pos:column="65">execute</name></name><argument_list pos:line="1007" pos:column="72">(<argument><expr><name pos:line="1007" pos:column="73">SCI_MARKERDELETEALL</name></expr></argument>, <argument><expr><name pos:line="1007" pos:column="94">MARK_BOOKMARK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block>
				<return pos:line="1010" pos:column="33">return <expr><name pos:line="1010" pos:column="40">TRUE</name></expr>;</return>
<comment type="line" pos:line="1011" pos:column="1">//Option actions</comment>
				</case><case pos:line="1012" pos:column="33">case <expr><name pos:line="1012" pos:column="38">IDREDOTMATCHNL</name></expr>:
					<expr_stmt><expr><name><name pos:line="1013" pos:column="41">findHistory</name><op:operator pos:line="1013" pos:column="52">.</op:operator><name pos:line="1013" pos:column="53">_dotMatchesNewline</name></name> <op:operator pos:line="1013" pos:column="72">=</op:operator> <name><name pos:line="1013" pos:column="74">_options</name><op:operator pos:line="1013" pos:column="82">.</op:operator><name pos:line="1013" pos:column="83">_dotMatchesNewline</name></name> <op:operator pos:line="1013" pos:column="102">=</op:operator> <call><name pos:line="1013" pos:column="104">isCheckedOrNot</name><argument_list pos:line="1013" pos:column="118">(<argument><expr><name pos:line="1013" pos:column="119">IDREDOTMATCHNL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1014" pos:column="41">return <expr><name pos:line="1014" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="1016" pos:column="33">case <expr><name pos:line="1016" pos:column="38">IDWHOLEWORD</name></expr> :
					<expr_stmt><expr><name><name pos:line="1017" pos:column="41">findHistory</name><op:operator pos:line="1017" pos:column="52">.</op:operator><name pos:line="1017" pos:column="53">_isMatchWord</name></name> <op:operator pos:line="1017" pos:column="66">=</op:operator> <name><name pos:line="1017" pos:column="68">_options</name><op:operator pos:line="1017" pos:column="76">.</op:operator><name pos:line="1017" pos:column="77">_isWholeWord</name></name> <op:operator pos:line="1017" pos:column="90">=</op:operator> <call><name pos:line="1017" pos:column="92">isCheckedOrNot</name><argument_list pos:line="1017" pos:column="106">(<argument><expr><name pos:line="1017" pos:column="107">IDWHOLEWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1018" pos:column="41">return <expr><name pos:line="1018" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="1020" pos:column="33">case <expr><name pos:line="1020" pos:column="38">IDMATCHCASE</name></expr> :
					<expr_stmt><expr><name><name pos:line="1021" pos:column="41">findHistory</name><op:operator pos:line="1021" pos:column="52">.</op:operator><name pos:line="1021" pos:column="53">_isMatchCase</name></name> <op:operator pos:line="1021" pos:column="66">=</op:operator> <name><name pos:line="1021" pos:column="68">_options</name><op:operator pos:line="1021" pos:column="76">.</op:operator><name pos:line="1021" pos:column="77">_isMatchCase</name></name> <op:operator pos:line="1021" pos:column="90">=</op:operator> <call><name pos:line="1021" pos:column="92">isCheckedOrNot</name><argument_list pos:line="1021" pos:column="106">(<argument><expr><name pos:line="1021" pos:column="107">IDMATCHCASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1022" pos:column="41">return <expr><name pos:line="1022" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="1024" pos:column="33">case <expr><name pos:line="1024" pos:column="38">IDNORMAL</name></expr>:
				</case><case pos:line="1025" pos:column="33">case <expr><name pos:line="1025" pos:column="38">IDEXTENDED</name></expr>:
				</case><case pos:line="1026" pos:column="33">case <expr><name pos:line="1026" pos:column="38">IDREGEXP</name></expr> : <block pos:line="1026" pos:column="49">{
					<if pos:line="1027" pos:column="41">if <condition pos:line="1027" pos:column="44">(<expr><call><name pos:line="1027" pos:column="45">isCheckedOrNot</name><argument_list pos:line="1027" pos:column="59">(<argument><expr><name pos:line="1027" pos:column="60">IDREGEXP</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1027" pos:column="70">
					<block pos:line="1028" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="1029" pos:column="49">_options</name><op:operator pos:line="1029" pos:column="57">.</op:operator><name pos:line="1029" pos:column="58">_searchType</name></name> <op:operator pos:line="1029" pos:column="70">=</op:operator> <name pos:line="1029" pos:column="72">FindRegex</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="1030" pos:column="49">findHistory</name><op:operator pos:line="1030" pos:column="60">.</op:operator><name pos:line="1030" pos:column="61">_searchMode</name></name> <op:operator pos:line="1030" pos:column="73">=</op:operator> <name><name pos:line="1030" pos:column="75">FindHistory</name><op:operator pos:line="1030" pos:column="86">::</op:operator><name pos:line="1030" pos:column="88">regExpr</name></name></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="1031" pos:column="49">::</op:operator><name pos:line="1031" pos:column="51">EnableWindow</name></name><argument_list pos:line="1031" pos:column="63">(<argument><expr><call><name pos:line="1031" pos:column="64">GetDlgItem</name><argument_list pos:line="1031" pos:column="74">(<argument><expr><name pos:line="1031" pos:column="75">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1031" pos:column="83">IDREDOTMATCHNL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1031" pos:column="100">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="1033" pos:column="41">else <if pos:line="1033" pos:column="46">if <condition pos:line="1033" pos:column="49">(<expr><call><name pos:line="1033" pos:column="50">isCheckedOrNot</name><argument_list pos:line="1033" pos:column="64">(<argument><expr><name pos:line="1033" pos:column="65">IDEXTENDED</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1033" pos:column="77">
					<block pos:line="1034" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="1035" pos:column="49">_options</name><op:operator pos:line="1035" pos:column="57">.</op:operator><name pos:line="1035" pos:column="58">_searchType</name></name> <op:operator pos:line="1035" pos:column="70">=</op:operator> <name pos:line="1035" pos:column="72">FindExtended</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="1036" pos:column="49">findHistory</name><op:operator pos:line="1036" pos:column="60">.</op:operator><name pos:line="1036" pos:column="61">_searchMode</name></name> <op:operator pos:line="1036" pos:column="73">=</op:operator> <name><name pos:line="1036" pos:column="75">FindHistory</name><op:operator pos:line="1036" pos:column="86">::</op:operator><name pos:line="1036" pos:column="88">extended</name></name></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="1037" pos:column="49">::</op:operator><name pos:line="1037" pos:column="51">EnableWindow</name></name><argument_list pos:line="1037" pos:column="63">(<argument><expr><call><name pos:line="1037" pos:column="64">GetDlgItem</name><argument_list pos:line="1037" pos:column="74">(<argument><expr><name pos:line="1037" pos:column="75">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1037" pos:column="83">IDREDOTMATCHNL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1037" pos:column="100">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="1039" pos:column="41">else
					<block pos:line="1040" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="1041" pos:column="49">_options</name><op:operator pos:line="1041" pos:column="57">.</op:operator><name pos:line="1041" pos:column="58">_searchType</name></name> <op:operator pos:line="1041" pos:column="70">=</op:operator> <name pos:line="1041" pos:column="72">FindNormal</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="1042" pos:column="49">findHistory</name><op:operator pos:line="1042" pos:column="60">.</op:operator><name pos:line="1042" pos:column="61">_searchMode</name></name> <op:operator pos:line="1042" pos:column="73">=</op:operator> <name><name pos:line="1042" pos:column="75">FindHistory</name><op:operator pos:line="1042" pos:column="86">::</op:operator><name pos:line="1042" pos:column="88">normal</name></name></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="1043" pos:column="49">::</op:operator><name pos:line="1043" pos:column="51">EnableWindow</name></name><argument_list pos:line="1043" pos:column="63">(<argument><expr><call><name pos:line="1043" pos:column="64">GetDlgItem</name><argument_list pos:line="1043" pos:column="74">(<argument><expr><name pos:line="1043" pos:column="75">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1043" pos:column="83">IDREDOTMATCHNL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1043" pos:column="100">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if></else></if>

					<decl_stmt><decl><type><name pos:line="1046" pos:column="41">bool</name></type> <name pos:line="1046" pos:column="46">isRegex</name> <init pos:line="1046" pos:column="54">= <expr><op:operator pos:line="1046" pos:column="56">(</op:operator><name><name pos:line="1046" pos:column="57">_options</name><op:operator pos:line="1046" pos:column="65">.</op:operator><name pos:line="1046" pos:column="66">_searchType</name></name> <op:operator pos:line="1046" pos:column="78">==</op:operator> <name pos:line="1046" pos:column="81">FindRegex</name><op:operator pos:line="1046" pos:column="90">)</op:operator></expr></init></decl>;</decl_stmt>
					<if pos:line="1047" pos:column="41">if <condition pos:line="1047" pos:column="44">(<expr><name pos:line="1047" pos:column="45">isRegex</name></expr>)</condition><then pos:line="1047" pos:column="53"> 
					<block pos:line="1048" pos:column="41">{	
						<comment type="line" pos:line="1049" pos:column="49">//regex doesnt allow whole word</comment>
						<expr_stmt><expr><name><name pos:line="1050" pos:column="49">_options</name><op:operator pos:line="1050" pos:column="57">.</op:operator><name pos:line="1050" pos:column="58">_isWholeWord</name></name> <op:operator pos:line="1050" pos:column="71">=</op:operator> <lit:literal type="boolean" pos:line="1050" pos:column="73">false</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="1051" pos:column="49">::</op:operator><name pos:line="1051" pos:column="51">SendDlgItemMessage</name></name><argument_list pos:line="1051" pos:column="69">(<argument><expr><name pos:line="1051" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1051" pos:column="78">IDWHOLEWORD</name></expr></argument>, <argument><expr><name pos:line="1051" pos:column="91">BM_SETCHECK</name></expr></argument>, <argument><expr><name><name pos:line="1051" pos:column="104">_options</name><op:operator pos:line="1051" pos:column="112">.</op:operator><name pos:line="1051" pos:column="113">_isWholeWord</name></name><op:operator pos:line="1051" pos:column="125">?</op:operator><name pos:line="1051" pos:column="126">BST_CHECKED</name><op:operator pos:line="1051" pos:column="137">:</op:operator><name pos:line="1051" pos:column="138">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1051" pos:column="153">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					}</block></then></if>

					<expr_stmt><expr><call><name><op:operator pos:line="1055" pos:column="41">::</op:operator><name pos:line="1055" pos:column="43">EnableWindow</name></name><argument_list pos:line="1055" pos:column="55">(<argument><expr><call><name><op:operator pos:line="1055" pos:column="56">::</op:operator><name pos:line="1055" pos:column="58">GetDlgItem</name></name><argument_list pos:line="1055" pos:column="68">(<argument><expr><name pos:line="1055" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1055" pos:column="77">IDWHOLEWORD</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1055" pos:column="91">(</op:operator><name pos:line="1055" pos:column="92">BOOL</name><op:operator pos:line="1055" pos:column="96">)</op:operator><op:operator pos:line="1055" pos:column="97">!</op:operator><name pos:line="1055" pos:column="98">isRegex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<return pos:line="1057" pos:column="41">return <expr><name pos:line="1057" pos:column="48">TRUE</name></expr>;</return> }</block>

				</case><case pos:line="1059" pos:column="33">case <expr><name pos:line="1059" pos:column="38">IDWRAP</name></expr> :
					<expr_stmt><expr><name><name pos:line="1060" pos:column="41">findHistory</name><op:operator pos:line="1060" pos:column="52">.</op:operator><name pos:line="1060" pos:column="53">_isWrap</name></name> <op:operator pos:line="1060" pos:column="61">=</op:operator> <name><name pos:line="1060" pos:column="63">_options</name><op:operator pos:line="1060" pos:column="71">.</op:operator><name pos:line="1060" pos:column="72">_isWrapAround</name></name> <op:operator pos:line="1060" pos:column="86">=</op:operator> <call><name pos:line="1060" pos:column="88">isCheckedOrNot</name><argument_list pos:line="1060" pos:column="102">(<argument><expr><name pos:line="1060" pos:column="103">IDWRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="1061" pos:column="41">return <expr><name pos:line="1061" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="1063" pos:column="33">case <expr><name pos:line="1063" pos:column="38">IDDIRECTIONUP</name></expr> :
				</case><case pos:line="1064" pos:column="33">case <expr><name pos:line="1064" pos:column="38">IDDIRECTIONDOWN</name></expr> :
					<expr_stmt><expr><name><name pos:line="1065" pos:column="41">_options</name><op:operator pos:line="1065" pos:column="49">.</op:operator><name pos:line="1065" pos:column="50">_whichDirection</name></name> <op:operator pos:line="1065" pos:column="66">=</op:operator> <op:operator pos:line="1065" pos:column="68">(</op:operator><name pos:line="1065" pos:column="69">BST_CHECKED</name> <op:operator pos:line="1065" pos:column="81">==</op:operator> <call><name><op:operator pos:line="1065" pos:column="84">::</op:operator><name pos:line="1065" pos:column="86">SendMessage</name></name><argument_list pos:line="1065" pos:column="97">(<argument><expr><call><name><op:operator pos:line="1065" pos:column="98">::</op:operator><name pos:line="1065" pos:column="100">GetDlgItem</name></name><argument_list pos:line="1065" pos:column="110">(<argument><expr><name pos:line="1065" pos:column="111">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1065" pos:column="119">IDDIRECTIONDOWN</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1065" pos:column="137">BM_GETCHECK</name></expr></argument>, <argument><expr><name pos:line="1065" pos:column="150">BST_CHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1065" pos:column="163">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="1065" pos:column="165">)</op:operator></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1066" pos:column="41">findHistory</name><op:operator pos:line="1066" pos:column="52">.</op:operator><name pos:line="1066" pos:column="53">_isDirectionDown</name></name> <op:operator pos:line="1066" pos:column="70">=</op:operator> <name><name pos:line="1066" pos:column="72">_options</name><op:operator pos:line="1066" pos:column="80">.</op:operator><name pos:line="1066" pos:column="81">_whichDirection</name></name> <op:operator pos:line="1066" pos:column="97">==</op:operator> <name pos:line="1066" pos:column="100">DIR_DOWN</name></expr>;</expr_stmt>
					<return pos:line="1067" pos:column="41">return <expr><name pos:line="1067" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="1069" pos:column="33">case <expr><name pos:line="1069" pos:column="38">IDC_PURGE_CHECK</name></expr> :
				<block pos:line="1070" pos:column="33">{
					<if pos:line="1071" pos:column="41">if <condition pos:line="1071" pos:column="44">(<expr><name pos:line="1071" pos:column="45">_currentStatus</name> <op:operator pos:line="1071" pos:column="60">==</op:operator> <name pos:line="1071" pos:column="63">MARK_DLG</name></expr>)</condition><then pos:line="1071" pos:column="72">
						<expr_stmt><expr><name><name pos:line="1072" pos:column="49">_options</name><op:operator pos:line="1072" pos:column="57">.</op:operator><name pos:line="1072" pos:column="58">_doPurge</name></name> <op:operator pos:line="1072" pos:column="67">=</op:operator> <call><name pos:line="1072" pos:column="69">isCheckedOrNot</name><argument_list pos:line="1072" pos:column="83">(<argument><expr><name pos:line="1072" pos:column="84">IDC_PURGE_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				}</block>
				<return pos:line="1074" pos:column="33">return <expr><name pos:line="1074" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="1076" pos:column="33">case <expr><name pos:line="1076" pos:column="38">IDC_MARKLINE_CHECK</name></expr> :
				<block pos:line="1077" pos:column="33">{
					<if pos:line="1078" pos:column="41">if <condition pos:line="1078" pos:column="44">(<expr><name pos:line="1078" pos:column="45">_currentStatus</name> <op:operator pos:line="1078" pos:column="60">==</op:operator> <name pos:line="1078" pos:column="63">MARK_DLG</name></expr>)</condition><then pos:line="1078" pos:column="72">
						<expr_stmt><expr><name><name pos:line="1079" pos:column="49">_options</name><op:operator pos:line="1079" pos:column="57">.</op:operator><name pos:line="1079" pos:column="58">_doMarkLine</name></name> <op:operator pos:line="1079" pos:column="70">=</op:operator> <call><name pos:line="1079" pos:column="72">isCheckedOrNot</name><argument_list pos:line="1079" pos:column="86">(<argument><expr><name pos:line="1079" pos:column="87">IDC_MARKLINE_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				}</block>
				<return pos:line="1081" pos:column="33">return <expr><name pos:line="1081" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="1083" pos:column="33">case <expr><name pos:line="1083" pos:column="38">IDC_IN_SELECTION_CHECK</name></expr> :
				<block pos:line="1084" pos:column="33">{
					<if pos:line="1085" pos:column="41">if <condition pos:line="1085" pos:column="44">(<expr><op:operator pos:line="1085" pos:column="45">(</op:operator><name pos:line="1085" pos:column="46">_currentStatus</name> <op:operator pos:line="1085" pos:column="61">==</op:operator> <name pos:line="1085" pos:column="64">REPLACE_DLG</name><op:operator pos:line="1085" pos:column="75">)</op:operator> <op:operator pos:line="1085" pos:column="77">||</op:operator> <op:operator pos:line="1085" pos:column="80">(</op:operator><name pos:line="1085" pos:column="81">_currentStatus</name> <op:operator pos:line="1085" pos:column="96">==</op:operator> <name pos:line="1085" pos:column="99">MARK_DLG</name><op:operator pos:line="1085" pos:column="107">)</op:operator></expr>)</condition><then pos:line="1085" pos:column="109">
						<expr_stmt><expr><name><name pos:line="1086" pos:column="49">_options</name><op:operator pos:line="1086" pos:column="57">.</op:operator><name pos:line="1086" pos:column="58">_isInSelection</name></name> <op:operator pos:line="1086" pos:column="73">=</op:operator> <call><name pos:line="1086" pos:column="75">isCheckedOrNot</name><argument_list pos:line="1086" pos:column="89">(<argument><expr><name pos:line="1086" pos:column="90">IDC_IN_SELECTION_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				}</block>
				<return pos:line="1088" pos:column="33">return <expr><name pos:line="1088" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="1090" pos:column="33">case <expr><name pos:line="1090" pos:column="38">IDC_TRANSPARENT_CHECK</name></expr> :
				<block pos:line="1091" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1092" pos:column="41">bool</name></type> <name pos:line="1092" pos:column="46">isChecked</name> <init pos:line="1092" pos:column="56">= <expr><call><name pos:line="1092" pos:column="58">isCheckedOrNot</name><argument_list pos:line="1092" pos:column="72">(<argument><expr><name pos:line="1092" pos:column="73">IDC_TRANSPARENT_CHECK</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<expr_stmt><expr><call><name><op:operator pos:line="1094" pos:column="41">::</op:operator><name pos:line="1094" pos:column="43">EnableWindow</name></name><argument_list pos:line="1094" pos:column="55">(<argument><expr><call><name><op:operator pos:line="1094" pos:column="56">::</op:operator><name pos:line="1094" pos:column="58">GetDlgItem</name></name><argument_list pos:line="1094" pos:column="68">(<argument><expr><name pos:line="1094" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1094" pos:column="77">IDC_TRANSPARENT_GRPBOX</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1094" pos:column="102">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="1095" pos:column="41">::</op:operator><name pos:line="1095" pos:column="43">EnableWindow</name></name><argument_list pos:line="1095" pos:column="55">(<argument><expr><call><name><op:operator pos:line="1095" pos:column="56">::</op:operator><name pos:line="1095" pos:column="58">GetDlgItem</name></name><argument_list pos:line="1095" pos:column="68">(<argument><expr><name pos:line="1095" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1095" pos:column="77">IDC_TRANSPARENT_LOSSFOCUS_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1095" pos:column="111">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="1096" pos:column="41">::</op:operator><name pos:line="1096" pos:column="43">EnableWindow</name></name><argument_list pos:line="1096" pos:column="55">(<argument><expr><call><name><op:operator pos:line="1096" pos:column="56">::</op:operator><name pos:line="1096" pos:column="58">GetDlgItem</name></name><argument_list pos:line="1096" pos:column="68">(<argument><expr><name pos:line="1096" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1096" pos:column="77">IDC_TRANSPARENT_ALWAYS_RADIO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1096" pos:column="108">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="1097" pos:column="41">::</op:operator><name pos:line="1097" pos:column="43">EnableWindow</name></name><argument_list pos:line="1097" pos:column="55">(<argument><expr><call><name><op:operator pos:line="1097" pos:column="56">::</op:operator><name pos:line="1097" pos:column="58">GetDlgItem</name></name><argument_list pos:line="1097" pos:column="68">(<argument><expr><name pos:line="1097" pos:column="69">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1097" pos:column="77">IDC_PERCENTAGE_SLIDER</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1097" pos:column="101">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<if pos:line="1099" pos:column="41">if <condition pos:line="1099" pos:column="44">(<expr><name pos:line="1099" pos:column="45">isChecked</name></expr>)</condition><then pos:line="1099" pos:column="55">
					<block pos:line="1100" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="1101" pos:column="49">::</op:operator><name pos:line="1101" pos:column="51">SendDlgItemMessage</name></name><argument_list pos:line="1101" pos:column="69">(<argument><expr><name pos:line="1101" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1101" pos:column="78">IDC_TRANSPARENT_LOSSFOCUS_RADIO</name></expr></argument>, <argument><expr><name pos:line="1101" pos:column="111">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="1101" pos:column="124">BST_CHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1101" pos:column="137">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="1102" pos:column="49">findHistory</name><op:operator pos:line="1102" pos:column="60">.</op:operator><name pos:line="1102" pos:column="61">_transparencyMode</name></name> <op:operator pos:line="1102" pos:column="79">=</op:operator> <name><name pos:line="1102" pos:column="81">FindHistory</name><op:operator pos:line="1102" pos:column="92">::</op:operator><name pos:line="1102" pos:column="94">onLossingFocus</name></name></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="1104" pos:column="41">else
					<block pos:line="1105" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="1106" pos:column="49">::</op:operator><name pos:line="1106" pos:column="51">SendDlgItemMessage</name></name><argument_list pos:line="1106" pos:column="69">(<argument><expr><name pos:line="1106" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1106" pos:column="78">IDC_TRANSPARENT_LOSSFOCUS_RADIO</name></expr></argument>, <argument><expr><name pos:line="1106" pos:column="111">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="1106" pos:column="124">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1106" pos:column="139">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="1107" pos:column="49">::</op:operator><name pos:line="1107" pos:column="51">SendDlgItemMessage</name></name><argument_list pos:line="1107" pos:column="69">(<argument><expr><name pos:line="1107" pos:column="70">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1107" pos:column="78">IDC_TRANSPARENT_ALWAYS_RADIO</name></expr></argument>, <argument><expr><name pos:line="1107" pos:column="108">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="1107" pos:column="121">BST_UNCHECKED</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1107" pos:column="136">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><op:operator pos:line="1108" pos:column="49">(</op:operator><call><name><name pos:line="1108" pos:column="50">NppParameters</name><op:operator pos:line="1108" pos:column="63">::</op:operator><name pos:line="1108" pos:column="65">getInstance</name></name><argument_list pos:line="1108" pos:column="76">()</argument_list></call><op:operator pos:line="1108" pos:column="78">)</op:operator><op:operator pos:line="1108" pos:column="79">-&gt;</op:operator><call><name pos:line="1108" pos:column="81">removeTransparent</name><argument_list pos:line="1108" pos:column="98">(<argument><expr><name pos:line="1108" pos:column="99">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="1109" pos:column="49">findHistory</name><op:operator pos:line="1109" pos:column="60">.</op:operator><name pos:line="1109" pos:column="61">_transparencyMode</name></name> <op:operator pos:line="1109" pos:column="79">=</op:operator> <name><name pos:line="1109" pos:column="81">FindHistory</name><op:operator pos:line="1109" pos:column="92">::</op:operator><name pos:line="1109" pos:column="94">none</name></name></expr>;</expr_stmt>
					}</block></else></if>

					<return pos:line="1112" pos:column="41">return <expr><name pos:line="1112" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="1115" pos:column="33">case <expr><name pos:line="1115" pos:column="38">IDC_TRANSPARENT_ALWAYS_RADIO</name></expr> :
				<block pos:line="1116" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1117" pos:column="41">int</name></type> <name pos:line="1117" pos:column="45">percent</name> <init pos:line="1117" pos:column="53">= <expr><call><name><op:operator pos:line="1117" pos:column="55">::</op:operator><name pos:line="1117" pos:column="57">SendDlgItemMessage</name></name><argument_list pos:line="1117" pos:column="75">(<argument><expr><name pos:line="1117" pos:column="76">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1117" pos:column="84">IDC_PERCENTAGE_SLIDER</name></expr></argument>, <argument><expr><name pos:line="1117" pos:column="107">TBM_GETPOS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1117" pos:column="119">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1117" pos:column="122">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><op:operator pos:line="1118" pos:column="41">(</op:operator><call><name><name pos:line="1118" pos:column="42">NppParameters</name><op:operator pos:line="1118" pos:column="55">::</op:operator><name pos:line="1118" pos:column="57">getInstance</name></name><argument_list pos:line="1118" pos:column="68">()</argument_list></call><op:operator pos:line="1118" pos:column="70">)</op:operator><op:operator pos:line="1118" pos:column="71">-&gt;</op:operator><call><name pos:line="1118" pos:column="73">SetTransparent</name><argument_list pos:line="1118" pos:column="87">(<argument><expr><name pos:line="1118" pos:column="88">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1118" pos:column="96">percent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1119" pos:column="41">findHistory</name><op:operator pos:line="1119" pos:column="52">.</op:operator><name pos:line="1119" pos:column="53">_transparencyMode</name></name> <op:operator pos:line="1119" pos:column="71">=</op:operator> <name><name pos:line="1119" pos:column="73">FindHistory</name><op:operator pos:line="1119" pos:column="84">::</op:operator><name pos:line="1119" pos:column="86">persistant</name></name></expr>;</expr_stmt>
				}</block>
				<return pos:line="1121" pos:column="33">return <expr><name pos:line="1121" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="1123" pos:column="33">case <expr><name pos:line="1123" pos:column="38">IDC_TRANSPARENT_LOSSFOCUS_RADIO</name></expr> :
				<block pos:line="1124" pos:column="33">{
					<expr_stmt><expr><op:operator pos:line="1125" pos:column="41">(</op:operator><call><name><name pos:line="1125" pos:column="42">NppParameters</name><op:operator pos:line="1125" pos:column="55">::</op:operator><name pos:line="1125" pos:column="57">getInstance</name></name><argument_list pos:line="1125" pos:column="68">()</argument_list></call><op:operator pos:line="1125" pos:column="70">)</op:operator><op:operator pos:line="1125" pos:column="71">-&gt;</op:operator><call><name pos:line="1125" pos:column="73">removeTransparent</name><argument_list pos:line="1125" pos:column="90">(<argument><expr><name pos:line="1125" pos:column="91">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1126" pos:column="41">findHistory</name><op:operator pos:line="1126" pos:column="52">.</op:operator><name pos:line="1126" pos:column="53">_transparencyMode</name></name> <op:operator pos:line="1126" pos:column="71">=</op:operator> <name><name pos:line="1126" pos:column="73">FindHistory</name><op:operator pos:line="1126" pos:column="84">::</op:operator><name pos:line="1126" pos:column="86">onLossingFocus</name></name></expr>;</expr_stmt>
				}</block>
				<return pos:line="1128" pos:column="33">return <expr><name pos:line="1128" pos:column="40">TRUE</name></expr>;</return>

				<comment type="line" pos:line="1130" pos:column="33">//</comment>
				<comment type="line" pos:line="1131" pos:column="33">// Find in Files</comment>
				<comment type="line" pos:line="1132" pos:column="33">//</comment>
				</case><case pos:line="1133" pos:column="33">case <expr><name pos:line="1133" pos:column="38">IDD_FINDINFILES_RECURSIVE_CHECK</name></expr> :
				<block pos:line="1134" pos:column="33">{
					<if pos:line="1135" pos:column="41">if <condition pos:line="1135" pos:column="44">(<expr><name pos:line="1135" pos:column="45">_currentStatus</name> <op:operator pos:line="1135" pos:column="60">==</op:operator> <name pos:line="1135" pos:column="63">FINDINFILES_DLG</name></expr>)</condition><then pos:line="1135" pos:column="79">
						<expr_stmt><expr><name><name pos:line="1136" pos:column="49">findHistory</name><op:operator pos:line="1136" pos:column="60">.</op:operator><name pos:line="1136" pos:column="61">_isFifRecuisive</name></name> <op:operator pos:line="1136" pos:column="77">=</op:operator> <name><name pos:line="1136" pos:column="79">_options</name><op:operator pos:line="1136" pos:column="87">.</op:operator><name pos:line="1136" pos:column="88">_isRecursive</name></name> <op:operator pos:line="1136" pos:column="101">=</op:operator> <call><name pos:line="1136" pos:column="103">isCheckedOrNot</name><argument_list pos:line="1136" pos:column="117">(<argument><expr><name pos:line="1136" pos:column="118">IDD_FINDINFILES_RECURSIVE_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					
				}</block>
				<return pos:line="1139" pos:column="33">return <expr><name pos:line="1139" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="1141" pos:column="33">case <expr><name pos:line="1141" pos:column="38">IDD_FINDINFILES_INHIDDENDIR_CHECK</name></expr> :
				<block pos:line="1142" pos:column="33">{
					<if pos:line="1143" pos:column="41">if <condition pos:line="1143" pos:column="44">(<expr><name pos:line="1143" pos:column="45">_currentStatus</name> <op:operator pos:line="1143" pos:column="60">==</op:operator> <name pos:line="1143" pos:column="63">FINDINFILES_DLG</name></expr>)</condition><then pos:line="1143" pos:column="79">
						<expr_stmt><expr><name><name pos:line="1144" pos:column="49">findHistory</name><op:operator pos:line="1144" pos:column="60">.</op:operator><name pos:line="1144" pos:column="61">_isFifInHiddenFolder</name></name> <op:operator pos:line="1144" pos:column="82">=</op:operator> <name><name pos:line="1144" pos:column="84">_options</name><op:operator pos:line="1144" pos:column="92">.</op:operator><name pos:line="1144" pos:column="93">_isInHiddenDir</name></name> <op:operator pos:line="1144" pos:column="108">=</op:operator> <call><name pos:line="1144" pos:column="110">isCheckedOrNot</name><argument_list pos:line="1144" pos:column="124">(<argument><expr><name pos:line="1144" pos:column="125">IDD_FINDINFILES_INHIDDENDIR_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
					
				}</block>
				<return pos:line="1147" pos:column="33">return <expr><name pos:line="1147" pos:column="40">TRUE</name></expr>;</return>

                </case><case pos:line="1149" pos:column="17">case <expr><name pos:line="1149" pos:column="22">IDD_FINDINFILES_FOLDERFOLLOWSDOC_CHECK</name></expr> :
				<block pos:line="1150" pos:column="33">{
					<if pos:line="1151" pos:column="41">if <condition pos:line="1151" pos:column="44">(<expr><name pos:line="1151" pos:column="45">_currentStatus</name> <op:operator pos:line="1151" pos:column="60">==</op:operator> <name pos:line="1151" pos:column="63">FINDINFILES_DLG</name></expr>)</condition><then pos:line="1151" pos:column="79">
                        <expr_stmt><expr><name><name pos:line="1152" pos:column="25">findHistory</name><op:operator pos:line="1152" pos:column="36">.</op:operator><name pos:line="1152" pos:column="37">_isFolderFollowDoc</name></name> <op:operator pos:line="1152" pos:column="56">=</op:operator> <call><name pos:line="1152" pos:column="58">isCheckedOrNot</name><argument_list pos:line="1152" pos:column="72">(<argument><expr><name pos:line="1152" pos:column="73">IDD_FINDINFILES_FOLDERFOLLOWSDOC_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

                    <if pos:line="1154" pos:column="21">if <condition pos:line="1154" pos:column="24">(<expr><name><name pos:line="1154" pos:column="25">findHistory</name><op:operator pos:line="1154" pos:column="36">.</op:operator><name pos:line="1154" pos:column="37">_isFolderFollowDoc</name></name></expr>)</condition><then pos:line="1154" pos:column="56">
                    <block pos:line="1155" pos:column="21">{
                        <decl_stmt><decl><type><name pos:line="1156" pos:column="25">NppParameters</name> <type:modifier pos:line="1156" pos:column="39">*</type:modifier></type><name pos:line="1156" pos:column="40">pNppParam</name> <init pos:line="1156" pos:column="50">= <expr><call><name><name pos:line="1156" pos:column="52">NppParameters</name><op:operator pos:line="1156" pos:column="65">::</op:operator><name pos:line="1156" pos:column="67">getInstance</name></name><argument_list pos:line="1156" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
                        <decl_stmt><decl><type><specifier pos:line="1157" pos:column="25">const</specifier> <name pos:line="1157" pos:column="31">TCHAR</name> <type:modifier pos:line="1157" pos:column="37">*</type:modifier></type> <name pos:line="1157" pos:column="39">dir</name> <init pos:line="1157" pos:column="43">= <expr><call><name><name pos:line="1157" pos:column="45">pNppParam</name><op:operator pos:line="1157" pos:column="54">-&gt;</op:operator><name pos:line="1157" pos:column="56">getWorkingDir</name></name><argument_list pos:line="1157" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
                        <expr_stmt><expr><call><name><op:operator pos:line="1158" pos:column="25">::</op:operator><name pos:line="1158" pos:column="27">SetDlgItemText</name></name><argument_list pos:line="1158" pos:column="41">(<argument><expr><name pos:line="1158" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1158" pos:column="50">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>, <argument><expr><name pos:line="1158" pos:column="77">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
					
				}</block>
				<return pos:line="1162" pos:column="33">return <expr><name pos:line="1162" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="1164" pos:column="33">case <expr><name pos:line="1164" pos:column="38">IDD_FINDINFILES_BROWSE_BUTTON</name></expr> :
				<block pos:line="1165" pos:column="33">{
					<if pos:line="1166" pos:column="41">if <condition pos:line="1166" pos:column="44">(<expr><name pos:line="1166" pos:column="45">_currentStatus</name> <op:operator pos:line="1166" pos:column="60">==</op:operator> <name pos:line="1166" pos:column="63">FINDINFILES_DLG</name></expr>)</condition><then pos:line="1166" pos:column="79">
						<expr_stmt><expr><call><name pos:line="1167" pos:column="49">folderBrowser</name><argument_list pos:line="1167" pos:column="62">(<argument><expr><name pos:line="1167" pos:column="63">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1167" pos:column="71">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>, <argument><expr><call><name><name pos:line="1167" pos:column="98">_options</name><op:operator pos:line="1167" pos:column="106">.</op:operator><name pos:line="1167" pos:column="107">_directory</name><op:operator pos:line="1167" pos:column="117">.</op:operator><name pos:line="1167" pos:column="118">c_str</name></name><argument_list pos:line="1167" pos:column="123">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>	
				}</block>
				<return pos:line="1169" pos:column="33">return <expr><name pos:line="1169" pos:column="40">TRUE</name></expr>;</return>

				</case><default pos:line="1171" pos:column="33">default :
					<break pos:line="1172" pos:column="41">break;</break>
			</default>}</block></switch>
			<break pos:line="1174" pos:column="25">break;</break>
		}</block>
	</case>}</block></switch>
	<return pos:line="1177" pos:column="9">return <expr><name pos:line="1177" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<comment type="line" pos:line="1180" pos:column="1">// return value :</comment>
<comment type="line" pos:line="1181" pos:column="1">// true  : the text2find is found</comment>
<comment type="line" pos:line="1182" pos:column="1">// false : the text2find is not found</comment>

<function><type><name pos:line="1184" pos:column="1">bool</name></type> <name><name pos:line="1184" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1184" pos:column="20">::</op:operator><name pos:line="1184" pos:column="22">processFindNext</name></name><parameter_list pos:line="1184" pos:column="37">(<param><decl><type><specifier pos:line="1184" pos:column="38">const</specifier> <name pos:line="1184" pos:column="44">TCHAR</name> <type:modifier pos:line="1184" pos:column="50">*</type:modifier></type><name pos:line="1184" pos:column="51">txt2find</name></decl></param>, <param><decl><type><specifier pos:line="1184" pos:column="61">const</specifier> <name pos:line="1184" pos:column="67">FindOption</name> <type:modifier pos:line="1184" pos:column="78">*</type:modifier></type><name pos:line="1184" pos:column="79">options</name></decl></param>, <param><decl><type><name pos:line="1184" pos:column="88">FindStatus</name> <type:modifier pos:line="1184" pos:column="99">*</type:modifier></type><name pos:line="1184" pos:column="100">oFindStatus</name></decl></param>)</parameter_list>
<block pos:line="1185" pos:column="1">{
	<if pos:line="1186" pos:column="9">if <condition pos:line="1186" pos:column="12">(<expr><name pos:line="1186" pos:column="13">oFindStatus</name></expr>)</condition><then pos:line="1186" pos:column="25">
		<expr_stmt><expr><op:operator pos:line="1187" pos:column="17">*</op:operator><name pos:line="1187" pos:column="18">oFindStatus</name> <op:operator pos:line="1187" pos:column="30">=</op:operator> <name pos:line="1187" pos:column="32">FSFound</name></expr>;</expr_stmt></then></if>

	<if pos:line="1189" pos:column="9">if <condition pos:line="1189" pos:column="12">(<expr><op:operator pos:line="1189" pos:column="13">!</op:operator><name pos:line="1189" pos:column="14">txt2find</name> <op:operator pos:line="1189" pos:column="23">||</op:operator> <op:operator pos:line="1189" pos:column="26">!</op:operator><name><name pos:line="1189" pos:column="27">txt2find</name><index pos:line="1189" pos:column="35">[<expr><lit:literal type="number" pos:line="1189" pos:column="36">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1189" pos:column="39">
		<return pos:line="1190" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1190" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><specifier pos:line="1192" pos:column="9">const</specifier> <name pos:line="1192" pos:column="15">FindOption</name> <type:modifier pos:line="1192" pos:column="26">*</type:modifier></type><name pos:line="1192" pos:column="27">pOptions</name> <init pos:line="1192" pos:column="36">= <expr><name pos:line="1192" pos:column="38">options</name><op:operator pos:line="1192" pos:column="45">?</op:operator><name pos:line="1192" pos:column="46">options</name><op:operator pos:line="1192" pos:column="53">:</op:operator><name pos:line="1192" pos:column="54">_env</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1194" pos:column="9">int</name></type> <name pos:line="1194" pos:column="13">stringSizeFind</name> <init pos:line="1194" pos:column="28">= <expr><call><name pos:line="1194" pos:column="30">lstrlen</name><argument_list pos:line="1194" pos:column="37">(<argument><expr><name pos:line="1194" pos:column="38">txt2find</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1195" pos:column="9">TCHAR</name> <type:modifier pos:line="1195" pos:column="15">*</type:modifier></type><name pos:line="1195" pos:column="16">pText</name> <init pos:line="1195" pos:column="22">= <expr><op:operator pos:line="1195" pos:column="24">new</op:operator> <name><name pos:line="1195" pos:column="28">TCHAR</name><index pos:line="1195" pos:column="33">[<expr><name pos:line="1195" pos:column="34">stringSizeFind</name> <op:operator pos:line="1195" pos:column="49">+</op:operator> <lit:literal type="number" pos:line="1195" pos:column="51">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1196" pos:column="9">lstrcpy</name><argument_list pos:line="1196" pos:column="16">(<argument><expr><name pos:line="1196" pos:column="17">pText</name></expr></argument>, <argument><expr><name pos:line="1196" pos:column="24">txt2find</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1198" pos:column="9">if <condition pos:line="1198" pos:column="12">(<expr><name><name pos:line="1198" pos:column="13">pOptions</name><op:operator pos:line="1198" pos:column="21">-&gt;</op:operator><name pos:line="1198" pos:column="23">_searchType</name></name> <op:operator pos:line="1198" pos:column="35">==</op:operator> <name pos:line="1198" pos:column="38">FindExtended</name></expr>)</condition><then pos:line="1198" pos:column="51"> <block pos:line="1198" pos:column="52">{
		<expr_stmt><expr><name pos:line="1199" pos:column="17">stringSizeFind</name> <op:operator pos:line="1199" pos:column="32">=</op:operator> <call><name><name pos:line="1199" pos:column="34">Searching</name><op:operator pos:line="1199" pos:column="43">::</op:operator><name pos:line="1199" pos:column="45">convertExtendedToString</name></name><argument_list pos:line="1199" pos:column="68">(<argument><expr><name pos:line="1199" pos:column="69">txt2find</name></expr></argument>, <argument><expr><name pos:line="1199" pos:column="79">pText</name></expr></argument>, <argument><expr><name pos:line="1199" pos:column="86">stringSizeFind</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="1202" pos:column="9">int</name></type> <name pos:line="1202" pos:column="13">docLength</name> <init pos:line="1202" pos:column="23">= <expr><call><name pos:line="1202" pos:column="25">int</name><argument_list pos:line="1202" pos:column="28">(<argument><expr><call><name pos:line="1202" pos:column="29">(<type:modifier pos:line="1202" pos:column="30">*</type:modifier><name pos:line="1202" pos:column="31">_ppEditView</name>)<op:operator pos:line="1202" pos:column="43">-&gt;</op:operator><name pos:line="1202" pos:column="45">execute</name></name><argument_list pos:line="1202" pos:column="52">(<argument><expr><name pos:line="1202" pos:column="53">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1203" pos:column="9">CharacterRange</name></type> <name pos:line="1203" pos:column="24">cr</name> <init pos:line="1203" pos:column="27">= <expr><call><name pos:line="1203" pos:column="29">(<type:modifier pos:line="1203" pos:column="30">*</type:modifier><name pos:line="1203" pos:column="31">_ppEditView</name>)<op:operator pos:line="1203" pos:column="43">-&gt;</op:operator><name pos:line="1203" pos:column="45">getSelection</name></name><argument_list pos:line="1203" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="1205" pos:column="9">//The search "zone" is relative to the selection, so search happens 'outside'</comment>
	<decl_stmt><decl><type><name pos:line="1206" pos:column="9">int</name></type> <name pos:line="1206" pos:column="13">startPosition</name> <init pos:line="1206" pos:column="27">= <expr><name><name pos:line="1206" pos:column="29">cr</name><op:operator pos:line="1206" pos:column="31">.</op:operator><name pos:line="1206" pos:column="32">cpMax</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1207" pos:column="9">int</name></type> <name pos:line="1207" pos:column="13">endPosition</name> <init pos:line="1207" pos:column="25">= <expr><name pos:line="1207" pos:column="27">docLength</name></expr></init></decl>;</decl_stmt>

	<if pos:line="1209" pos:column="9">if <condition pos:line="1209" pos:column="12">(<expr><name><name pos:line="1209" pos:column="13">pOptions</name><op:operator pos:line="1209" pos:column="21">-&gt;</op:operator><name pos:line="1209" pos:column="23">_whichDirection</name></name> <op:operator pos:line="1209" pos:column="39">==</op:operator> <name pos:line="1209" pos:column="42">DIR_UP</name></expr>)</condition><then pos:line="1209" pos:column="49">
	<block pos:line="1210" pos:column="9">{
		<comment type="line" pos:line="1211" pos:column="17">//When searching upwards, start is the lower part, end the upper, for backwards search</comment>
		<expr_stmt><expr><name pos:line="1212" pos:column="17">startPosition</name> <op:operator pos:line="1212" pos:column="31">=</op:operator> <name><name pos:line="1212" pos:column="33">cr</name><op:operator pos:line="1212" pos:column="35">.</op:operator><name pos:line="1212" pos:column="36">cpMin</name></name> <op:operator pos:line="1212" pos:column="42">-</op:operator> <lit:literal type="number" pos:line="1212" pos:column="44">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1213" pos:column="17">endPosition</name> <op:operator pos:line="1213" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="1213" pos:column="31">0</lit:literal></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="1216" pos:column="9">if <condition pos:line="1216" pos:column="12">(<expr><name pos:line="1216" pos:column="13">FirstIncremental</name><op:operator pos:line="1216" pos:column="29">==</op:operator><name><name pos:line="1216" pos:column="31">pOptions</name><op:operator pos:line="1216" pos:column="39">-&gt;</op:operator><name pos:line="1216" pos:column="41">_incrementalType</name></name></expr>)</condition><then pos:line="1216" pos:column="58">
	<block pos:line="1217" pos:column="9">{
		<comment type="line" pos:line="1218" pos:column="17">// the text to find is modified so use the current position</comment>
		<expr_stmt><expr><name pos:line="1219" pos:column="17">startPosition</name> <op:operator pos:line="1219" pos:column="31">=</op:operator> <name><name pos:line="1219" pos:column="33">cr</name><op:operator pos:line="1219" pos:column="35">.</op:operator><name pos:line="1219" pos:column="36">cpMin</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1220" pos:column="17">endPosition</name> <op:operator pos:line="1220" pos:column="29">=</op:operator> <name pos:line="1220" pos:column="31">docLength</name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1222" pos:column="9">else <if pos:line="1222" pos:column="14">if <condition pos:line="1222" pos:column="17">(<expr><name pos:line="1222" pos:column="18">NextIncremental</name><op:operator pos:line="1222" pos:column="33">==</op:operator><name><name pos:line="1222" pos:column="35">pOptions</name><op:operator pos:line="1222" pos:column="43">-&gt;</op:operator><name pos:line="1222" pos:column="45">_incrementalType</name></name></expr>)</condition><then pos:line="1222" pos:column="62">
	<block pos:line="1223" pos:column="9">{
		<comment type="line" pos:line="1224" pos:column="17">// text to find is not modified, so use current position +1</comment>
		<expr_stmt><expr><name pos:line="1225" pos:column="17">startPosition</name> <op:operator pos:line="1225" pos:column="31">=</op:operator> <name><name pos:line="1225" pos:column="33">cr</name><op:operator pos:line="1225" pos:column="35">.</op:operator><name pos:line="1225" pos:column="36">cpMin</name></name> <op:operator pos:line="1225" pos:column="42">+</op:operator><lit:literal type="number" pos:line="1225" pos:column="43">1</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1226" pos:column="17">endPosition</name> <op:operator pos:line="1226" pos:column="29">=</op:operator> <name pos:line="1226" pos:column="31">docLength</name></expr>;</expr_stmt>	
		<if pos:line="1227" pos:column="17">if <condition pos:line="1227" pos:column="20">(<expr><name><name pos:line="1227" pos:column="21">pOptions</name><op:operator pos:line="1227" pos:column="29">-&gt;</op:operator><name pos:line="1227" pos:column="31">_whichDirection</name></name> <op:operator pos:line="1227" pos:column="47">==</op:operator> <name pos:line="1227" pos:column="50">DIR_UP</name></expr>)</condition><then pos:line="1227" pos:column="57">
		<block pos:line="1228" pos:column="17">{
			<comment type="line" pos:line="1229" pos:column="25">//When searching upwards, start is the lower part, end the upper, for backwards search</comment>
			<expr_stmt><expr><name pos:line="1230" pos:column="25">startPosition</name> <op:operator pos:line="1230" pos:column="39">=</op:operator> <name><name pos:line="1230" pos:column="41">cr</name><op:operator pos:line="1230" pos:column="43">.</op:operator><name pos:line="1230" pos:column="44">cpMax</name></name> <op:operator pos:line="1230" pos:column="50">-</op:operator> <lit:literal type="number" pos:line="1230" pos:column="52">1</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1231" pos:column="25">endPosition</name> <op:operator pos:line="1231" pos:column="37">=</op:operator> <lit:literal type="number" pos:line="1231" pos:column="39">0</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if></else></if>

	<decl_stmt><decl><type><name pos:line="1235" pos:column="9">int</name></type> <name pos:line="1235" pos:column="13">flags</name> <init pos:line="1235" pos:column="19">= <expr><call><name><name pos:line="1235" pos:column="21">Searching</name><op:operator pos:line="1235" pos:column="30">::</op:operator><name pos:line="1235" pos:column="32">buildSearchFlags</name></name><argument_list pos:line="1235" pos:column="48">(<argument><expr><name pos:line="1235" pos:column="49">pOptions</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="1237" pos:column="9">(<type:modifier pos:line="1237" pos:column="10">*</type:modifier><name pos:line="1237" pos:column="11">_ppEditView</name>)<op:operator pos:line="1237" pos:column="23">-&gt;</op:operator><name pos:line="1237" pos:column="25">execute</name></name><argument_list pos:line="1237" pos:column="32">(<argument><expr><name pos:line="1237" pos:column="33">SCI_SETSEARCHFLAGS</name></expr></argument>, <argument><expr><name pos:line="1237" pos:column="53">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1239" pos:column="9">int</name></type> <name pos:line="1239" pos:column="13">posFind</name> <init pos:line="1239" pos:column="21">= <expr><call><name pos:line="1239" pos:column="23">(<type:modifier pos:line="1239" pos:column="24">*</type:modifier><name pos:line="1239" pos:column="25">_ppEditView</name>)<op:operator pos:line="1239" pos:column="37">-&gt;</op:operator><name pos:line="1239" pos:column="39">searchInTarget</name></name><argument_list pos:line="1239" pos:column="53">(<argument><expr><name pos:line="1239" pos:column="54">pText</name></expr></argument>, <argument><expr><name pos:line="1239" pos:column="61">stringSizeFind</name></expr></argument>, <argument><expr><name pos:line="1239" pos:column="77">startPosition</name></expr></argument>, <argument><expr><name pos:line="1239" pos:column="92">endPosition</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1240" pos:column="9">if <condition pos:line="1240" pos:column="12">(<expr><name pos:line="1240" pos:column="13">posFind</name> <op:operator pos:line="1240" pos:column="21">==</op:operator> <op:operator pos:line="1240" pos:column="24">-</op:operator><lit:literal type="number" pos:line="1240" pos:column="25">1</lit:literal></expr>)</condition><then pos:line="1240" pos:column="27"> <comment type="line" pos:line="1240" pos:column="28">//no match found in target, check if a new target should be used</comment>
	<block pos:line="1241" pos:column="9">{
		<if pos:line="1242" pos:column="17">if <condition pos:line="1242" pos:column="20">(<expr><name><name pos:line="1242" pos:column="21">pOptions</name><op:operator pos:line="1242" pos:column="29">-&gt;</op:operator><name pos:line="1242" pos:column="31">_isWrapAround</name></name></expr>)</condition><then pos:line="1242" pos:column="45"> 
		<block pos:line="1243" pos:column="17">{
			<comment type="line" pos:line="1244" pos:column="25">//when wrapping, use the rest of the document (entire document is usable)</comment>
			<if pos:line="1245" pos:column="25">if <condition pos:line="1245" pos:column="28">(<expr><name><name pos:line="1245" pos:column="29">pOptions</name><op:operator pos:line="1245" pos:column="37">-&gt;</op:operator><name pos:line="1245" pos:column="39">_whichDirection</name></name> <op:operator pos:line="1245" pos:column="55">==</op:operator> <name pos:line="1245" pos:column="58">DIR_DOWN</name></expr>)</condition><then pos:line="1245" pos:column="67">
			<block pos:line="1246" pos:column="25">{
				<expr_stmt><expr><name pos:line="1247" pos:column="33">startPosition</name> <op:operator pos:line="1247" pos:column="47">=</op:operator> <lit:literal type="number" pos:line="1247" pos:column="49">0</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1248" pos:column="33">endPosition</name> <op:operator pos:line="1248" pos:column="45">=</op:operator> <name pos:line="1248" pos:column="47">docLength</name></expr>;</expr_stmt>
				<if pos:line="1249" pos:column="33">if <condition pos:line="1249" pos:column="36">(<expr><name pos:line="1249" pos:column="37">oFindStatus</name></expr>)</condition><then pos:line="1249" pos:column="49">
					<expr_stmt><expr><op:operator pos:line="1250" pos:column="41">*</op:operator><name pos:line="1250" pos:column="42">oFindStatus</name> <op:operator pos:line="1250" pos:column="54">=</op:operator> <name pos:line="1250" pos:column="56">FSEndReached</name></expr>;</expr_stmt></then></if>
			}</block></then>
			<else pos:line="1252" pos:column="25">else
			<block pos:line="1253" pos:column="25">{
				<expr_stmt><expr><name pos:line="1254" pos:column="33">startPosition</name> <op:operator pos:line="1254" pos:column="47">=</op:operator> <name pos:line="1254" pos:column="49">docLength</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1255" pos:column="33">endPosition</name> <op:operator pos:line="1255" pos:column="45">=</op:operator> <lit:literal type="number" pos:line="1255" pos:column="47">0</lit:literal></expr>;</expr_stmt>
				<if pos:line="1256" pos:column="33">if <condition pos:line="1256" pos:column="36">(<expr><name pos:line="1256" pos:column="37">oFindStatus</name></expr>)</condition><then pos:line="1256" pos:column="49">
					<expr_stmt><expr><op:operator pos:line="1257" pos:column="41">*</op:operator><name pos:line="1257" pos:column="42">oFindStatus</name> <op:operator pos:line="1257" pos:column="54">=</op:operator> <name pos:line="1257" pos:column="56">FSTopReached</name></expr>;</expr_stmt></then></if>
			}</block></else></if>

			<comment type="line" pos:line="1260" pos:column="25">//new target, search again</comment>
			<expr_stmt><expr><name pos:line="1261" pos:column="25">posFind</name> <op:operator pos:line="1261" pos:column="33">=</op:operator> <call><name pos:line="1261" pos:column="35">(<type:modifier pos:line="1261" pos:column="36">*</type:modifier><name pos:line="1261" pos:column="37">_ppEditView</name>)<op:operator pos:line="1261" pos:column="49">-&gt;</op:operator><name pos:line="1261" pos:column="51">searchInTarget</name></name><argument_list pos:line="1261" pos:column="65">(<argument><expr><name pos:line="1261" pos:column="66">pText</name></expr></argument>, <argument><expr><name pos:line="1261" pos:column="73">stringSizeFind</name></expr></argument>, <argument><expr><name pos:line="1261" pos:column="89">startPosition</name></expr></argument>, <argument><expr><name pos:line="1261" pos:column="104">endPosition</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="1263" pos:column="17">if <condition pos:line="1263" pos:column="20">(<expr><name pos:line="1263" pos:column="21">posFind</name> <op:operator pos:line="1263" pos:column="29">==</op:operator> <op:operator pos:line="1263" pos:column="32">-</op:operator><lit:literal type="number" pos:line="1263" pos:column="33">1</lit:literal></expr>)</condition><then pos:line="1263" pos:column="35">
		<block pos:line="1264" pos:column="17">{
			<if pos:line="1265" pos:column="25">if <condition pos:line="1265" pos:column="28">(<expr><name pos:line="1265" pos:column="29">oFindStatus</name></expr>)</condition><then pos:line="1265" pos:column="41">
				<expr_stmt><expr><op:operator pos:line="1266" pos:column="33">*</op:operator><name pos:line="1266" pos:column="34">oFindStatus</name> <op:operator pos:line="1266" pos:column="46">=</op:operator> <name pos:line="1266" pos:column="48">FSNotFound</name></expr>;</expr_stmt></then></if>
			<comment type="line" pos:line="1267" pos:column="25">//failed, or failed twice with wrap</comment>
			<if pos:line="1268" pos:column="25">if <condition pos:line="1268" pos:column="28">(<expr><name pos:line="1268" pos:column="29">NotIncremental</name><op:operator pos:line="1268" pos:column="43">==</op:operator><name><name pos:line="1268" pos:column="45">pOptions</name><op:operator pos:line="1268" pos:column="53">-&gt;</op:operator><name pos:line="1268" pos:column="55">_incrementalType</name></name></expr>)</condition><then pos:line="1268" pos:column="72"> <comment type="line" pos:line="1268" pos:column="73">//incremental search doesnt trigger messages</comment>
			<block pos:line="1269" pos:column="25">{	
				<decl_stmt><decl><type><name pos:line="1270" pos:column="33">generic_string</name></type> <name pos:line="1270" pos:column="48">msg</name> <init pos:line="1270" pos:column="52">= <expr><call><name pos:line="1270" pos:column="54">TEXT</name><argument_list pos:line="1270" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1270" pos:column="59">"Can't find the text:\r\n\""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="1271" pos:column="33">msg</name> <op:operator pos:line="1271" pos:column="37">+=</op:operator> <name pos:line="1271" pos:column="40">txt2find</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1272" pos:column="33">msg</name> <op:operator pos:line="1272" pos:column="37">+=</op:operator> <call><name pos:line="1272" pos:column="40">TEXT</name><argument_list pos:line="1272" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="1272" pos:column="45">"\""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="1273" pos:column="33">::</op:operator><name pos:line="1273" pos:column="35">MessageBox</name></name><argument_list pos:line="1273" pos:column="45">(<argument><expr><name pos:line="1273" pos:column="46">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="1273" pos:column="56">msg</name><op:operator pos:line="1273" pos:column="59">.</op:operator><name pos:line="1273" pos:column="60">c_str</name></name><argument_list pos:line="1273" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1273" pos:column="69">TEXT</name><argument_list pos:line="1273" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="1273" pos:column="74">"Find"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1273" pos:column="83">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<comment type="line" pos:line="1274" pos:column="33">// if the dialog is not shown, pass the focus to his parent(ie. Notepad++)</comment>
				<if pos:line="1275" pos:column="33">if <condition pos:line="1275" pos:column="36">(<expr><op:operator pos:line="1275" pos:column="37">!</op:operator><call><name><op:operator pos:line="1275" pos:column="38">::</op:operator><name pos:line="1275" pos:column="40">IsWindowVisible</name></name><argument_list pos:line="1275" pos:column="55">(<argument><expr><name pos:line="1275" pos:column="56">_hSelf</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1275" pos:column="64">
				<block pos:line="1276" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="1277" pos:column="41">::</op:operator><name pos:line="1277" pos:column="43">SetFocus</name></name><argument_list pos:line="1277" pos:column="51">(<argument><expr><call><name pos:line="1277" pos:column="52">(<type:modifier pos:line="1277" pos:column="53">*</type:modifier><name pos:line="1277" pos:column="54">_ppEditView</name>)<op:operator pos:line="1277" pos:column="66">-&gt;</op:operator><name pos:line="1277" pos:column="68">getHSelf</name></name><argument_list pos:line="1277" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="1279" pos:column="33">else
				<block pos:line="1280" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="1281" pos:column="41">::</op:operator><name pos:line="1281" pos:column="43">SetFocus</name></name><argument_list pos:line="1281" pos:column="51">(<argument><expr><call><name><op:operator pos:line="1281" pos:column="52">::</op:operator><name pos:line="1281" pos:column="54">GetDlgItem</name></name><argument_list pos:line="1281" pos:column="64">(<argument><expr><name pos:line="1281" pos:column="65">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1281" pos:column="73">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
			<expr_stmt><expr><op:operator pos:line="1284" pos:column="25">delete</op:operator> <index pos:line="1284" pos:column="32">[]</index> <name pos:line="1284" pos:column="35">pText</name></expr>;</expr_stmt>
			<return pos:line="1285" pos:column="25">return <expr><lit:literal type="boolean" pos:line="1285" pos:column="32">false</lit:literal></expr>;</return>
		}</block></then></if>
	}</block></then>
	<else pos:line="1288" pos:column="9">else <if pos:line="1288" pos:column="14">if <condition pos:line="1288" pos:column="17">(<expr><name pos:line="1288" pos:column="18">posFind</name> <op:operator pos:line="1288" pos:column="26">==</op:operator> <op:operator pos:line="1288" pos:column="29">-</op:operator><lit:literal type="number" pos:line="1288" pos:column="30">2</lit:literal></expr>)</condition><then pos:line="1288" pos:column="32"> <comment type="line" pos:line="1288" pos:column="33">// Invalid Regular expression</comment>
	<block pos:line="1289" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="1290" pos:column="17">::</op:operator><name pos:line="1290" pos:column="19">MessageBox</name></name><argument_list pos:line="1290" pos:column="29">(<argument><expr><name pos:line="1290" pos:column="30">_hParent</name></expr></argument>, <argument><expr><call><name pos:line="1290" pos:column="40">TEXT</name><argument_list pos:line="1290" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="1290" pos:column="45">"Invalid regular expression"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1290" pos:column="76">TEXT</name><argument_list pos:line="1290" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="1290" pos:column="81">"Find"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1290" pos:column="90">MB_ICONERROR</name> <op:operator pos:line="1290" pos:column="103">|</op:operator> <name pos:line="1290" pos:column="105">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="1291" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1291" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if></else></if>
	<decl_stmt><decl><type><name pos:line="1293" pos:column="9">int</name></type> <name pos:line="1293" pos:column="13">start</name> <init pos:line="1293" pos:column="19">=	<expr><name pos:line="1293" pos:column="25">posFind</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1294" pos:column="9">int</name></type> <name pos:line="1294" pos:column="13">end</name> <init pos:line="1294" pos:column="17">= <expr><call><name pos:line="1294" pos:column="19">int</name><argument_list pos:line="1294" pos:column="22">(<argument><expr><call><name pos:line="1294" pos:column="23">(<type:modifier pos:line="1294" pos:column="24">*</type:modifier><name pos:line="1294" pos:column="25">_ppEditView</name>)<op:operator pos:line="1294" pos:column="37">-&gt;</op:operator><name pos:line="1294" pos:column="39">execute</name></name><argument_list pos:line="1294" pos:column="46">(<argument><expr><name pos:line="1294" pos:column="47">SCI_GETTARGETEND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="1296" pos:column="9">// to make sure the found result is visible:</comment>
	<comment type="line" pos:line="1297" pos:column="9">// prevent recording of absolute positioning commands issued in the process</comment>
	<expr_stmt><expr><call><name pos:line="1298" pos:column="9">(<type:modifier pos:line="1298" pos:column="10">*</type:modifier><name pos:line="1298" pos:column="11">_ppEditView</name>)<op:operator pos:line="1298" pos:column="23">-&gt;</op:operator><name pos:line="1298" pos:column="25">execute</name></name><argument_list pos:line="1298" pos:column="32">(<argument><expr><name pos:line="1298" pos:column="33">SCI_STOPRECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="1299" pos:column="9">Searching</name><op:operator pos:line="1299" pos:column="18">::</op:operator><name pos:line="1299" pos:column="20">displaySectionCentered</name></name><argument_list pos:line="1299" pos:column="42">(<argument><expr><name pos:line="1299" pos:column="43">start</name></expr></argument>, <argument><expr><name pos:line="1299" pos:column="50">end</name></expr></argument>, <argument><expr><op:operator pos:line="1299" pos:column="55">*</op:operator><name pos:line="1299" pos:column="56">_ppEditView</name></expr></argument>, <argument><expr><name><name pos:line="1299" pos:column="69">pOptions</name><op:operator pos:line="1299" pos:column="77">-&gt;</op:operator><name pos:line="1299" pos:column="79">_whichDirection</name></name> <op:operator pos:line="1299" pos:column="95">==</op:operator> <name pos:line="1299" pos:column="98">DIR_DOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1300" pos:column="9">if <condition pos:line="1300" pos:column="12">(<expr><call><name><op:operator pos:line="1300" pos:column="13">::</op:operator><name pos:line="1300" pos:column="15">SendMessage</name></name><argument_list pos:line="1300" pos:column="26">(<argument><expr><name pos:line="1300" pos:column="27">_hParent</name></expr></argument>, <argument><expr><name pos:line="1300" pos:column="37">WM_GETCURRENTMACROSTATUS</name></expr></argument>,<argument><expr><lit:literal type="number" pos:line="1300" pos:column="62">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="1300" pos:column="64">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1300" pos:column="67">==</op:operator> <name pos:line="1300" pos:column="70">MACRO_RECORDING_IN_PROGRESS</name></expr>)</condition><then pos:line="1300" pos:column="98">
		<expr_stmt><expr><call><name pos:line="1301" pos:column="17">(<type:modifier pos:line="1301" pos:column="18">*</type:modifier><name pos:line="1301" pos:column="19">_ppEditView</name>)<op:operator pos:line="1301" pos:column="31">-&gt;</op:operator><name pos:line="1301" pos:column="33">execute</name></name><argument_list pos:line="1301" pos:column="40">(<argument><expr><name pos:line="1301" pos:column="41">SCI_STARTRECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><op:operator pos:line="1303" pos:column="9">delete</op:operator> <index pos:line="1303" pos:column="16">[]</index> <name pos:line="1303" pos:column="19">pText</name></expr>;</expr_stmt>
	<return pos:line="1304" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1304" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<comment type="line" pos:line="1307" pos:column="1">// return value :</comment>
<comment type="line" pos:line="1308" pos:column="1">// true  : the text is replaced, and find the next occurrence</comment>
<comment type="line" pos:line="1309" pos:column="1">// false : the text2find is not found, so the text is NOT replace</comment>
<comment type="line" pos:line="1310" pos:column="1">//      || the text is replaced, and do NOT find the next occurrence</comment>
<function><type><name pos:line="1311" pos:column="1">bool</name></type> <name><name pos:line="1311" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1311" pos:column="20">::</op:operator><name pos:line="1311" pos:column="22">processReplace</name></name><parameter_list pos:line="1311" pos:column="36">(<param><decl><type><specifier pos:line="1311" pos:column="37">const</specifier> <name pos:line="1311" pos:column="43">TCHAR</name> <type:modifier pos:line="1311" pos:column="49">*</type:modifier></type><name pos:line="1311" pos:column="50">txt2find</name></decl></param>, <param><decl><type><specifier pos:line="1311" pos:column="60">const</specifier> <name pos:line="1311" pos:column="66">TCHAR</name> <type:modifier pos:line="1311" pos:column="72">*</type:modifier></type><name pos:line="1311" pos:column="73">txt2replace</name></decl></param>, <param><decl><type><specifier pos:line="1311" pos:column="86">const</specifier> <name pos:line="1311" pos:column="92">FindOption</name> <type:modifier pos:line="1311" pos:column="103">*</type:modifier></type><name pos:line="1311" pos:column="104">options</name></decl></param>)</parameter_list>
<block pos:line="1312" pos:column="1">{
	<if pos:line="1313" pos:column="9">if <condition pos:line="1313" pos:column="12">(<expr><op:operator pos:line="1313" pos:column="13">!</op:operator><name pos:line="1313" pos:column="14">txt2find</name> <op:operator pos:line="1313" pos:column="23">||</op:operator> <op:operator pos:line="1313" pos:column="26">!</op:operator><name><name pos:line="1313" pos:column="27">txt2find</name><index pos:line="1313" pos:column="35">[<expr><lit:literal type="number" pos:line="1313" pos:column="36">0</lit:literal></expr>]</index></name> <op:operator pos:line="1313" pos:column="39">||</op:operator> <op:operator pos:line="1313" pos:column="42">!</op:operator><name pos:line="1313" pos:column="43">txt2replace</name></expr>)</condition><then pos:line="1313" pos:column="55">
		<return pos:line="1314" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1314" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><specifier pos:line="1316" pos:column="9">const</specifier> <name pos:line="1316" pos:column="15">FindOption</name> <type:modifier pos:line="1316" pos:column="26">*</type:modifier></type><name pos:line="1316" pos:column="27">pOptions</name> <init pos:line="1316" pos:column="36">= <expr><name pos:line="1316" pos:column="38">options</name><op:operator pos:line="1316" pos:column="45">?</op:operator><name pos:line="1316" pos:column="46">options</name><op:operator pos:line="1316" pos:column="53">:</op:operator><name pos:line="1316" pos:column="54">_env</name></expr></init></decl>;</decl_stmt>

	<if pos:line="1318" pos:column="9">if <condition pos:line="1318" pos:column="12">(<expr><call><name pos:line="1318" pos:column="13">(<type:modifier pos:line="1318" pos:column="14">*</type:modifier><name pos:line="1318" pos:column="15">_ppEditView</name>)<op:operator pos:line="1318" pos:column="27">-&gt;</op:operator><name pos:line="1318" pos:column="29">getCurrentBuffer</name></name><argument_list pos:line="1318" pos:column="45">()</argument_list></call><op:operator pos:line="1318" pos:column="47">-&gt;</op:operator><call><name pos:line="1318" pos:column="49">isReadOnly</name><argument_list pos:line="1318" pos:column="59">()</argument_list></call></expr>)</condition><then pos:line="1318" pos:column="62"> <return pos:line="1318" pos:column="63">return <expr><lit:literal type="boolean" pos:line="1318" pos:column="70">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1320" pos:column="9">int</name></type> <name pos:line="1320" pos:column="13">stringSizeFind</name> <init pos:line="1320" pos:column="28">= <expr><call><name pos:line="1320" pos:column="30">lstrlen</name><argument_list pos:line="1320" pos:column="37">(<argument><expr><name pos:line="1320" pos:column="38">txt2find</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1321" pos:column="9">int</name></type> <name pos:line="1321" pos:column="13">stringSizeReplace</name> <init pos:line="1321" pos:column="31">= <expr><call><name pos:line="1321" pos:column="33">lstrlen</name><argument_list pos:line="1321" pos:column="40">(<argument><expr><name pos:line="1321" pos:column="41">txt2replace</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1322" pos:column="9">TCHAR</name> <type:modifier pos:line="1322" pos:column="15">*</type:modifier></type><name pos:line="1322" pos:column="16">pTextFind</name> <init pos:line="1322" pos:column="26">= <expr><op:operator pos:line="1322" pos:column="28">new</op:operator> <name><name pos:line="1322" pos:column="32">TCHAR</name><index pos:line="1322" pos:column="37">[<expr><name pos:line="1322" pos:column="38">stringSizeFind</name> <op:operator pos:line="1322" pos:column="53">+</op:operator> <lit:literal type="number" pos:line="1322" pos:column="55">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1323" pos:column="9">TCHAR</name> <type:modifier pos:line="1323" pos:column="15">*</type:modifier></type><name pos:line="1323" pos:column="16">pTextReplace</name> <init pos:line="1323" pos:column="29">= <expr><op:operator pos:line="1323" pos:column="31">new</op:operator> <name><name pos:line="1323" pos:column="35">TCHAR</name><index pos:line="1323" pos:column="40">[<expr><name pos:line="1323" pos:column="41">stringSizeReplace</name> <op:operator pos:line="1323" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="1323" pos:column="61">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="1324" pos:column="9">lstrcpy</name><argument_list pos:line="1324" pos:column="16">(<argument><expr><name pos:line="1324" pos:column="17">pTextFind</name></expr></argument>, <argument><expr><name pos:line="1324" pos:column="28">txt2find</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1325" pos:column="9">lstrcpy</name><argument_list pos:line="1325" pos:column="16">(<argument><expr><name pos:line="1325" pos:column="17">pTextReplace</name></expr></argument>, <argument><expr><name pos:line="1325" pos:column="31">txt2replace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1327" pos:column="9">if <condition pos:line="1327" pos:column="12">(<expr><name><name pos:line="1327" pos:column="13">pOptions</name><op:operator pos:line="1327" pos:column="21">-&gt;</op:operator><name pos:line="1327" pos:column="23">_searchType</name></name> <op:operator pos:line="1327" pos:column="35">==</op:operator> <name pos:line="1327" pos:column="38">FindExtended</name></expr>)</condition><then pos:line="1327" pos:column="51"> <block pos:line="1327" pos:column="52">{
		<expr_stmt><expr><name pos:line="1328" pos:column="17">stringSizeFind</name> <op:operator pos:line="1328" pos:column="32">=</op:operator> <call><name><name pos:line="1328" pos:column="34">Searching</name><op:operator pos:line="1328" pos:column="43">::</op:operator><name pos:line="1328" pos:column="45">convertExtendedToString</name></name><argument_list pos:line="1328" pos:column="68">(<argument><expr><name pos:line="1328" pos:column="69">txt2find</name></expr></argument>, <argument><expr><name pos:line="1328" pos:column="79">pTextFind</name></expr></argument>, <argument><expr><name pos:line="1328" pos:column="90">stringSizeFind</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1329" pos:column="17">stringSizeReplace</name> <op:operator pos:line="1329" pos:column="35">=</op:operator> <call><name><name pos:line="1329" pos:column="37">Searching</name><op:operator pos:line="1329" pos:column="46">::</op:operator><name pos:line="1329" pos:column="48">convertExtendedToString</name></name><argument_list pos:line="1329" pos:column="71">(<argument><expr><name pos:line="1329" pos:column="72">txt2replace</name></expr></argument>, <argument><expr><name pos:line="1329" pos:column="85">pTextReplace</name></expr></argument>, <argument><expr><name pos:line="1329" pos:column="99">stringSizeReplace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="1332" pos:column="9">bool</name></type> <name pos:line="1332" pos:column="14">isRegExp</name> <init pos:line="1332" pos:column="23">= <expr><name><name pos:line="1332" pos:column="25">pOptions</name><op:operator pos:line="1332" pos:column="33">-&gt;</op:operator><name pos:line="1332" pos:column="35">_searchType</name></name> <op:operator pos:line="1332" pos:column="47">==</op:operator> <name pos:line="1332" pos:column="50">FindRegex</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1333" pos:column="9">int</name></type> <name pos:line="1333" pos:column="13">flags</name> <init pos:line="1333" pos:column="19">= <expr><call><name><name pos:line="1333" pos:column="21">Searching</name><op:operator pos:line="1333" pos:column="30">::</op:operator><name pos:line="1333" pos:column="32">buildSearchFlags</name></name><argument_list pos:line="1333" pos:column="48">(<argument><expr><name pos:line="1333" pos:column="49">pOptions</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1334" pos:column="9">CharacterRange</name></type> <name pos:line="1334" pos:column="24">cr</name> <init pos:line="1334" pos:column="27">= <expr><call><name pos:line="1334" pos:column="29">(<type:modifier pos:line="1334" pos:column="30">*</type:modifier><name pos:line="1334" pos:column="31">_ppEditView</name>)<op:operator pos:line="1334" pos:column="43">-&gt;</op:operator><name pos:line="1334" pos:column="45">getSelection</name></name><argument_list pos:line="1334" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<expr_stmt><expr><call><name pos:line="1336" pos:column="9">(<type:modifier pos:line="1336" pos:column="10">*</type:modifier><name pos:line="1336" pos:column="11">_ppEditView</name>)<op:operator pos:line="1336" pos:column="23">-&gt;</op:operator><name pos:line="1336" pos:column="25">execute</name></name><argument_list pos:line="1336" pos:column="32">(<argument><expr><name pos:line="1336" pos:column="33">SCI_SETSEARCHFLAGS</name></expr></argument>, <argument><expr><name pos:line="1336" pos:column="53">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1337" pos:column="9">int</name></type> <name pos:line="1337" pos:column="13">posFind</name> <init pos:line="1337" pos:column="21">= <expr><call><name pos:line="1337" pos:column="23">(<type:modifier pos:line="1337" pos:column="24">*</type:modifier><name pos:line="1337" pos:column="25">_ppEditView</name>)<op:operator pos:line="1337" pos:column="37">-&gt;</op:operator><name pos:line="1337" pos:column="39">searchInTarget</name></name><argument_list pos:line="1337" pos:column="53">(<argument><expr><name pos:line="1337" pos:column="54">pTextFind</name></expr></argument>, <argument><expr><name pos:line="1337" pos:column="65">stringSizeFind</name></expr></argument>, <argument><expr><name><name pos:line="1337" pos:column="81">cr</name><op:operator pos:line="1337" pos:column="83">.</op:operator><name pos:line="1337" pos:column="84">cpMin</name></name></expr></argument>, <argument><expr><name><name pos:line="1337" pos:column="91">cr</name><op:operator pos:line="1337" pos:column="93">.</op:operator><name pos:line="1337" pos:column="94">cpMax</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1338" pos:column="9">if <condition pos:line="1338" pos:column="12">(<expr><name pos:line="1338" pos:column="13">posFind</name> <op:operator pos:line="1338" pos:column="21">!=</op:operator> <op:operator pos:line="1338" pos:column="24">-</op:operator><lit:literal type="number" pos:line="1338" pos:column="25">1</lit:literal></expr>)</condition><then pos:line="1338" pos:column="27">
	<block pos:line="1339" pos:column="9">{
		<if pos:line="1340" pos:column="17">if <condition pos:line="1340" pos:column="20">(<expr><name pos:line="1340" pos:column="21">isRegExp</name></expr>)</condition><then pos:line="1340" pos:column="30">
		<block pos:line="1341" pos:column="17">{
			<comment type="line" pos:line="1342" pos:column="25">//For the rare re exp case. ex: replace ^ by AAA</comment>
			<decl_stmt><decl><type><name pos:line="1343" pos:column="25">int</name></type> <name pos:line="1343" pos:column="29">start</name> <init pos:line="1343" pos:column="35">= <expr><call><name pos:line="1343" pos:column="37">int</name><argument_list pos:line="1343" pos:column="40">(<argument><expr><call><name pos:line="1343" pos:column="41">(<type:modifier pos:line="1343" pos:column="42">*</type:modifier><name pos:line="1343" pos:column="43">_ppEditView</name>)<op:operator pos:line="1343" pos:column="55">-&gt;</op:operator><name pos:line="1343" pos:column="57">execute</name></name><argument_list pos:line="1343" pos:column="64">(<argument><expr><name pos:line="1343" pos:column="65">SCI_GETTARGETSTART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="1345" pos:column="25">int</name></type> <name pos:line="1345" pos:column="29">replacedLen</name> <init pos:line="1345" pos:column="41">= <expr><call><name pos:line="1345" pos:column="43">(<type:modifier pos:line="1345" pos:column="44">*</type:modifier><name pos:line="1345" pos:column="45">_ppEditView</name>)<op:operator pos:line="1345" pos:column="57">-&gt;</op:operator><name pos:line="1345" pos:column="59">replaceTargetRegExMode</name></name><argument_list pos:line="1345" pos:column="81">(<argument><expr><name pos:line="1345" pos:column="82">pTextReplace</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1346" pos:column="25">(<type:modifier pos:line="1346" pos:column="26">*</type:modifier><name pos:line="1346" pos:column="27">_ppEditView</name>)<op:operator pos:line="1346" pos:column="39">-&gt;</op:operator><name pos:line="1346" pos:column="41">execute</name></name><argument_list pos:line="1346" pos:column="48">(<argument><expr><name pos:line="1346" pos:column="49">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="1346" pos:column="61">start</name></expr></argument>, <argument><expr><name pos:line="1346" pos:column="68">start</name> <op:operator pos:line="1346" pos:column="74">+</op:operator> <name pos:line="1346" pos:column="76">replacedLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1348" pos:column="17">else
		<block pos:line="1349" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1350" pos:column="25">int</name></type> <name pos:line="1350" pos:column="29">start</name> <init pos:line="1350" pos:column="35">= <expr><call><name pos:line="1350" pos:column="37">int</name><argument_list pos:line="1350" pos:column="40">(<argument><expr><call><name pos:line="1350" pos:column="41">(<type:modifier pos:line="1350" pos:column="42">*</type:modifier><name pos:line="1350" pos:column="43">_ppEditView</name>)<op:operator pos:line="1350" pos:column="55">-&gt;</op:operator><name pos:line="1350" pos:column="57">execute</name></name><argument_list pos:line="1350" pos:column="64">(<argument><expr><name pos:line="1350" pos:column="65">SCI_GETTARGETSTART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1351" pos:column="25">int</name></type> <name pos:line="1351" pos:column="29">replacedLen</name> <init pos:line="1351" pos:column="41">= <expr><call><name pos:line="1351" pos:column="43">(<type:modifier pos:line="1351" pos:column="44">*</type:modifier><name pos:line="1351" pos:column="45">_ppEditView</name>)<op:operator pos:line="1351" pos:column="57">-&gt;</op:operator><name pos:line="1351" pos:column="59">replaceTarget</name></name><argument_list pos:line="1351" pos:column="72">(<argument><expr><name pos:line="1351" pos:column="73">pTextReplace</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1352" pos:column="25">(<type:modifier pos:line="1352" pos:column="26">*</type:modifier><name pos:line="1352" pos:column="27">_ppEditView</name>)<op:operator pos:line="1352" pos:column="39">-&gt;</op:operator><name pos:line="1352" pos:column="41">execute</name></name><argument_list pos:line="1352" pos:column="48">(<argument><expr><name pos:line="1352" pos:column="49">SCI_SETSEL</name></expr></argument>, <argument><expr><name pos:line="1352" pos:column="61">start</name></expr></argument>, <argument><expr><name pos:line="1352" pos:column="68">start</name> <op:operator pos:line="1352" pos:column="74">+</op:operator> <name pos:line="1352" pos:column="76">replacedLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then>
	<else pos:line="1355" pos:column="9">else <if pos:line="1355" pos:column="14">if <condition pos:line="1355" pos:column="17">(<expr><name pos:line="1355" pos:column="18">posFind</name> <op:operator pos:line="1355" pos:column="26">==</op:operator> <op:operator pos:line="1355" pos:column="29">-</op:operator><lit:literal type="number" pos:line="1355" pos:column="30">2</lit:literal></expr>)</condition><then pos:line="1355" pos:column="32"> <comment type="line" pos:line="1355" pos:column="33">// Invalid Regular expression</comment>
	<block pos:line="1356" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="1357" pos:column="17">::</op:operator><name pos:line="1357" pos:column="19">MessageBox</name></name><argument_list pos:line="1357" pos:column="29">(<argument><expr><name pos:line="1357" pos:column="30">_hParent</name></expr></argument>, <argument><expr><call><name pos:line="1357" pos:column="40">TEXT</name><argument_list pos:line="1357" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="1357" pos:column="45">"Invalid regular expression"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1357" pos:column="76">TEXT</name><argument_list pos:line="1357" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="1357" pos:column="81">"Find"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1357" pos:column="90">MB_ICONERROR</name> <op:operator pos:line="1357" pos:column="103">|</op:operator> <name pos:line="1357" pos:column="105">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="1358" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1358" pos:column="24">false</lit:literal></expr>;</return>
	}</block></then></if></else></if>

	<expr_stmt><expr><op:operator pos:line="1361" pos:column="9">delete</op:operator> <index pos:line="1361" pos:column="16">[]</index> <name pos:line="1361" pos:column="19">pTextFind</name></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="1362" pos:column="9">delete</op:operator> <index pos:line="1362" pos:column="16">[]</index> <name pos:line="1362" pos:column="19">pTextReplace</name></expr>;</expr_stmt>
	<return pos:line="1363" pos:column="9">return <expr><call><name pos:line="1363" pos:column="16">processFindNext</name><argument_list pos:line="1363" pos:column="31">(<argument><expr><name pos:line="1363" pos:column="32">txt2find</name></expr></argument>, <argument><expr><name pos:line="1363" pos:column="42">pOptions</name></expr></argument>)</argument_list></call></expr>;</return>	<comment type="line" pos:line="1363" pos:column="57">//after replacing, find the next section for selection</comment>
}</block></function>


<function><type><name pos:line="1367" pos:column="1">int</name></type> <name><name pos:line="1367" pos:column="5">FindReplaceDlg</name><op:operator pos:line="1367" pos:column="19">::</op:operator><name pos:line="1367" pos:column="21">markAll</name></name><parameter_list pos:line="1367" pos:column="28">(<param><decl><type><specifier pos:line="1367" pos:column="29">const</specifier> <name pos:line="1367" pos:column="35">TCHAR</name> <type:modifier pos:line="1367" pos:column="41">*</type:modifier></type><name pos:line="1367" pos:column="42">txt2find</name></decl></param>, <param><decl><type><name pos:line="1367" pos:column="52">int</name></type> <name pos:line="1367" pos:column="56">styleID</name></decl></param>)</parameter_list>
<block pos:line="1368" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1369" pos:column="9">FindOption</name></type> <name pos:line="1369" pos:column="20">opt</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="1370" pos:column="9">opt</name><op:operator pos:line="1370" pos:column="12">.</op:operator><name pos:line="1370" pos:column="13">_isMatchCase</name></name> <op:operator pos:line="1370" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="1370" pos:column="28">true</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1371" pos:column="9">opt</name><op:operator pos:line="1371" pos:column="12">.</op:operator><name pos:line="1371" pos:column="13">_isWholeWord</name></name> <op:operator pos:line="1371" pos:column="26">=</op:operator> <lit:literal type="boolean" pos:line="1371" pos:column="28">false</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="1372" pos:column="9">opt</name><op:operator pos:line="1372" pos:column="12">.</op:operator><name pos:line="1372" pos:column="13">_str2Search</name></name> <op:operator pos:line="1372" pos:column="25">=</op:operator> <name pos:line="1372" pos:column="27">txt2find</name></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1374" pos:column="9">int</name></type> <name pos:line="1374" pos:column="13">nbFound</name> <init pos:line="1374" pos:column="21">= <expr><call><name pos:line="1374" pos:column="23">processAll</name><argument_list pos:line="1374" pos:column="33">(<argument><expr><name pos:line="1374" pos:column="34">ProcessMarkAllExt</name></expr></argument>, <argument><expr><op:operator pos:line="1374" pos:column="53">&amp;</op:operator><name pos:line="1374" pos:column="54">opt</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1374" pos:column="59">true</lit:literal></expr></argument>, <argument><expr><name pos:line="1374" pos:column="65">NULL</name></expr></argument>, <argument><expr><name pos:line="1374" pos:column="71">styleID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="1375" pos:column="9">return <expr><name pos:line="1375" pos:column="16">nbFound</name></expr>;</return>
}</block></function>

<comment type="block" pos:line="1378" pos:column="1">/*
int FindReplaceDlg::markAll2(const TCHAR *txt2find)
{
	FindOption opt;
	opt._isMatchCase = false;
	opt._isWholeWord = true;
	int nbFound = processAll(ProcessMarkAll_2, txt2find, NULL, true, NULL, &amp;opt);
	return nbFound;
}
*/</comment>


<function><type><name pos:line="1390" pos:column="1">int</name></type> <name><name pos:line="1390" pos:column="5">FindReplaceDlg</name><op:operator pos:line="1390" pos:column="19">::</op:operator><name pos:line="1390" pos:column="21">markAllInc</name></name><parameter_list pos:line="1390" pos:column="31">(<param><decl><type><specifier pos:line="1390" pos:column="32">const</specifier> <name pos:line="1390" pos:column="38">FindOption</name> <type:modifier pos:line="1390" pos:column="49">*</type:modifier></type><name pos:line="1390" pos:column="50">opt</name></decl></param>)</parameter_list>
<block pos:line="1391" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1392" pos:column="9">int</name></type> <name pos:line="1392" pos:column="13">nbFound</name> <init pos:line="1392" pos:column="21">= <expr><call><name pos:line="1392" pos:column="23">processAll</name><argument_list pos:line="1392" pos:column="33">(<argument><expr><name pos:line="1392" pos:column="34">ProcessMarkAll_IncSearch</name></expr></argument>, <argument><expr><name pos:line="1392" pos:column="60">opt</name></expr></argument>,  <argument><expr><lit:literal type="boolean" pos:line="1392" pos:column="66">true</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<return pos:line="1393" pos:column="9">return <expr><name pos:line="1393" pos:column="16">nbFound</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1396" pos:column="1">int</name></type> <name><name pos:line="1396" pos:column="5">FindReplaceDlg</name><op:operator pos:line="1396" pos:column="19">::</op:operator><name pos:line="1396" pos:column="21">processAll</name></name><parameter_list pos:line="1396" pos:column="31">(<param><decl><type><name pos:line="1396" pos:column="32">ProcessOperation</name></type> <name pos:line="1396" pos:column="49">op</name></decl></param>, <param><decl><type><specifier pos:line="1396" pos:column="53">const</specifier> <name pos:line="1396" pos:column="59">FindOption</name> <type:modifier pos:line="1396" pos:column="70">*</type:modifier></type><name pos:line="1396" pos:column="71">opt</name></decl></param>, <param><decl><type><name pos:line="1396" pos:column="76">bool</name></type> <name pos:line="1396" pos:column="81">isEntire</name></decl></param>, <param><decl><type><specifier pos:line="1396" pos:column="91">const</specifier> <name pos:line="1396" pos:column="97">TCHAR</name> <type:modifier pos:line="1396" pos:column="103">*</type:modifier></type><name pos:line="1396" pos:column="104">fileName</name></decl></param>, <param><decl><type><name pos:line="1396" pos:column="114">int</name></type> <name pos:line="1396" pos:column="118">colourStyleID</name></decl></param>)</parameter_list>
<block pos:line="1397" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="1398" pos:column="9">const</specifier> <name pos:line="1398" pos:column="15">FindOption</name> <type:modifier pos:line="1398" pos:column="26">*</type:modifier></type><name pos:line="1398" pos:column="27">pOptions</name> <init pos:line="1398" pos:column="36">= <expr><name pos:line="1398" pos:column="38">opt</name><op:operator pos:line="1398" pos:column="41">?</op:operator><name pos:line="1398" pos:column="42">opt</name><op:operator pos:line="1398" pos:column="45">:</op:operator><name pos:line="1398" pos:column="46">_env</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1399" pos:column="9">const</specifier> <name pos:line="1399" pos:column="15">TCHAR</name> <type:modifier pos:line="1399" pos:column="21">*</type:modifier></type><name pos:line="1399" pos:column="22">txt2find</name> <init pos:line="1399" pos:column="31">= <expr><call><name><name pos:line="1399" pos:column="33">pOptions</name><op:operator pos:line="1399" pos:column="41">-&gt;</op:operator><name pos:line="1399" pos:column="43">_str2Search</name><op:operator pos:line="1399" pos:column="54">.</op:operator><name pos:line="1399" pos:column="55">c_str</name></name><argument_list pos:line="1399" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1400" pos:column="9">const</specifier> <name pos:line="1400" pos:column="15">TCHAR</name> <type:modifier pos:line="1400" pos:column="21">*</type:modifier></type><name pos:line="1400" pos:column="22">txt2replace</name> <init pos:line="1400" pos:column="34">= <expr><call><name><name pos:line="1400" pos:column="36">pOptions</name><op:operator pos:line="1400" pos:column="44">-&gt;</op:operator><name pos:line="1400" pos:column="46">_str4Replace</name><op:operator pos:line="1400" pos:column="58">.</op:operator><name pos:line="1400" pos:column="59">c_str</name></name><argument_list pos:line="1400" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1402" pos:column="9">CharacterRange</name></type> <name pos:line="1402" pos:column="24">cr</name> <init pos:line="1402" pos:column="27">= <expr><call><name pos:line="1402" pos:column="29">(<type:modifier pos:line="1402" pos:column="30">*</type:modifier><name pos:line="1402" pos:column="31">_ppEditView</name>)<op:operator pos:line="1402" pos:column="43">-&gt;</op:operator><name pos:line="1402" pos:column="45">getSelection</name></name><argument_list pos:line="1402" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1403" pos:column="9">int</name></type> <name pos:line="1403" pos:column="13">docLength</name> <init pos:line="1403" pos:column="23">= <expr><call><name pos:line="1403" pos:column="25">int</name><argument_list pos:line="1403" pos:column="28">(<argument><expr><call><name pos:line="1403" pos:column="29">(<type:modifier pos:line="1403" pos:column="30">*</type:modifier><name pos:line="1403" pos:column="31">_ppEditView</name>)<op:operator pos:line="1403" pos:column="43">-&gt;</op:operator><name pos:line="1403" pos:column="45">execute</name></name><argument_list pos:line="1403" pos:column="52">(<argument><expr><name pos:line="1403" pos:column="53">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="1405" pos:column="9">// Default : </comment>
	<comment type="line" pos:line="1406" pos:column="9">//        direction : down</comment>
	<comment type="line" pos:line="1407" pos:column="9">//        begin at : 0</comment>
	<comment type="line" pos:line="1408" pos:column="9">//        end at : end of doc</comment>
	<decl_stmt><decl><type><name pos:line="1409" pos:column="9">int</name></type> <name pos:line="1409" pos:column="13">startPosition</name> <init pos:line="1409" pos:column="27">= <expr><lit:literal type="number" pos:line="1409" pos:column="29">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1410" pos:column="9">int</name></type> <name pos:line="1410" pos:column="13">endPosition</name> <init pos:line="1410" pos:column="25">= <expr><name pos:line="1410" pos:column="27">docLength</name></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1412" pos:column="9">bool</name></type> <name pos:line="1412" pos:column="14">direction</name> <init pos:line="1412" pos:column="24">= <expr><name><name pos:line="1412" pos:column="26">pOptions</name><op:operator pos:line="1412" pos:column="34">-&gt;</op:operator><name pos:line="1412" pos:column="36">_whichDirection</name></name></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="1414" pos:column="9">//first try limiting scope by direction</comment>
	<if pos:line="1415" pos:column="9">if <condition pos:line="1415" pos:column="12">(<expr><name pos:line="1415" pos:column="13">direction</name> <op:operator pos:line="1415" pos:column="23">==</op:operator> <name pos:line="1415" pos:column="26">DIR_UP</name></expr>)</condition><then pos:line="1415" pos:column="33">	
	<block pos:line="1416" pos:column="9">{
		<expr_stmt><expr><name pos:line="1417" pos:column="17">startPosition</name> <op:operator pos:line="1417" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="1417" pos:column="33">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1418" pos:column="17">endPosition</name> <op:operator pos:line="1418" pos:column="29">=</op:operator> <name><name pos:line="1418" pos:column="31">cr</name><op:operator pos:line="1418" pos:column="33">.</op:operator><name pos:line="1418" pos:column="34">cpMax</name></name></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1420" pos:column="9">else
	<block pos:line="1421" pos:column="9">{
		<expr_stmt><expr><name pos:line="1422" pos:column="17">startPosition</name> <op:operator pos:line="1422" pos:column="31">=</op:operator> <name><name pos:line="1422" pos:column="33">cr</name><op:operator pos:line="1422" pos:column="35">.</op:operator><name pos:line="1422" pos:column="36">cpMin</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1423" pos:column="17">endPosition</name> <op:operator pos:line="1423" pos:column="29">=</op:operator> <name pos:line="1423" pos:column="31">docLength</name></expr>;</expr_stmt>
	}</block></else></if>

	<comment type="line" pos:line="1426" pos:column="9">//then adjust scope if the full document needs to be changed</comment>
	<if pos:line="1427" pos:column="9">if <condition pos:line="1427" pos:column="12">(<expr><name><name pos:line="1427" pos:column="13">pOptions</name><op:operator pos:line="1427" pos:column="21">-&gt;</op:operator><name pos:line="1427" pos:column="23">_isWrapAround</name></name> <op:operator pos:line="1427" pos:column="37">||</op:operator> <name pos:line="1427" pos:column="40">isEntire</name> <op:operator pos:line="1427" pos:column="49">||</op:operator> <op:operator pos:line="1427" pos:column="52">(</op:operator><name pos:line="1427" pos:column="53">op</name> <op:operator pos:line="1427" pos:column="56">==</op:operator> <name pos:line="1427" pos:column="59">ProcessCountAll</name><op:operator pos:line="1427" pos:column="74">)</op:operator></expr>)</condition><then pos:line="1427" pos:column="76">	<comment type="line" pos:line="1427" pos:column="81">//entire document needs to be scanned</comment>
	<block pos:line="1428" pos:column="9">{		
		<expr_stmt><expr><name pos:line="1429" pos:column="17">startPosition</name> <op:operator pos:line="1429" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="1429" pos:column="33">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1430" pos:column="17">endPosition</name> <op:operator pos:line="1430" pos:column="29">=</op:operator> <name pos:line="1430" pos:column="31">docLength</name></expr>;</expr_stmt>
	}</block></then></if>
	
	<comment type="line" pos:line="1433" pos:column="9">//then readjust scope if the selection override is active and allowed</comment>
	<if pos:line="1434" pos:column="9">if <condition pos:line="1434" pos:column="12">(<expr><op:operator pos:line="1434" pos:column="13">(</op:operator><name><name pos:line="1434" pos:column="14">pOptions</name><op:operator pos:line="1434" pos:column="22">-&gt;</op:operator><name pos:line="1434" pos:column="24">_isInSelection</name></name><op:operator pos:line="1434" pos:column="38">)</op:operator> <op:operator pos:line="1434" pos:column="40">&amp;&amp;</op:operator> <op:operator pos:line="1434" pos:column="43">(</op:operator><op:operator pos:line="1434" pos:column="44">(</op:operator><name pos:line="1434" pos:column="45">op</name> <op:operator pos:line="1434" pos:column="48">==</op:operator> <name pos:line="1434" pos:column="51">ProcessMarkAll</name><op:operator pos:line="1434" pos:column="65">)</op:operator> <op:operator pos:line="1434" pos:column="67">||</op:operator> <op:operator pos:line="1434" pos:column="70">(</op:operator><op:operator pos:line="1434" pos:column="71">(</op:operator><name pos:line="1434" pos:column="72">op</name> <op:operator pos:line="1434" pos:column="75">==</op:operator> <name pos:line="1434" pos:column="78">ProcessReplaceAll</name><op:operator pos:line="1434" pos:column="95">)</op:operator> <op:operator pos:line="1434" pos:column="97">&amp;&amp;</op:operator> <op:operator pos:line="1434" pos:column="100">(</op:operator><op:operator pos:line="1434" pos:column="101">!</op:operator><name pos:line="1434" pos:column="102">isEntire</name><op:operator pos:line="1434" pos:column="110">)</op:operator><op:operator pos:line="1434" pos:column="111">)</op:operator><op:operator pos:line="1434" pos:column="112">)</op:operator></expr>)</condition><then pos:line="1434" pos:column="114">	<comment type="line" pos:line="1434" pos:column="121">//if selection limiter and either mark all or replace all w/o entire document override</comment>
	<block pos:line="1435" pos:column="9">{
		<expr_stmt><expr><name pos:line="1436" pos:column="17">startPosition</name> <op:operator pos:line="1436" pos:column="31">=</op:operator> <name><name pos:line="1436" pos:column="33">cr</name><op:operator pos:line="1436" pos:column="35">.</op:operator><name pos:line="1436" pos:column="36">cpMin</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1437" pos:column="17">endPosition</name> <op:operator pos:line="1437" pos:column="29">=</op:operator> <name><name pos:line="1437" pos:column="31">cr</name><op:operator pos:line="1437" pos:column="33">.</op:operator><name pos:line="1437" pos:column="34">cpMax</name></name></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="1440" pos:column="9">if <condition pos:line="1440" pos:column="12">(<expr><op:operator pos:line="1440" pos:column="13">(</op:operator><name pos:line="1440" pos:column="14">op</name> <op:operator pos:line="1440" pos:column="17">==</op:operator> <name pos:line="1440" pos:column="20">ProcessMarkAllExt</name><op:operator pos:line="1440" pos:column="37">)</op:operator> <op:operator pos:line="1440" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="1440" pos:column="42">(</op:operator><name pos:line="1440" pos:column="43">colourStyleID</name> <op:operator pos:line="1440" pos:column="57">!=</op:operator> <op:operator pos:line="1440" pos:column="60">-</op:operator><lit:literal type="number" pos:line="1440" pos:column="61">1</lit:literal><op:operator pos:line="1440" pos:column="62">)</op:operator></expr>)</condition><then pos:line="1440" pos:column="64">
	<block pos:line="1441" pos:column="9">{
		<expr_stmt><expr><name pos:line="1442" pos:column="17">startPosition</name> <op:operator pos:line="1442" pos:column="31">=</op:operator> <lit:literal type="number" pos:line="1442" pos:column="33">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1443" pos:column="17">endPosition</name> <op:operator pos:line="1443" pos:column="29">=</op:operator> <name pos:line="1443" pos:column="31">docLength</name></expr>;</expr_stmt>
	}</block></then></if>

	<return pos:line="1446" pos:column="9">return <expr><call><name pos:line="1446" pos:column="16">processRange</name><argument_list pos:line="1446" pos:column="28">(<argument><expr><name pos:line="1446" pos:column="29">op</name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="33">txt2find</name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="43">txt2replace</name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="56">startPosition</name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="71">endPosition</name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="84">fileName</name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="94">pOptions</name></expr></argument>, <argument><expr><name pos:line="1446" pos:column="104">colourStyleID</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="1449" pos:column="1">int</name></type> <name><name pos:line="1449" pos:column="5">FindReplaceDlg</name><op:operator pos:line="1449" pos:column="19">::</op:operator><name pos:line="1449" pos:column="21">processRange</name></name><parameter_list pos:line="1449" pos:column="33">(<param><decl><type><name pos:line="1449" pos:column="34">ProcessOperation</name></type> <name pos:line="1449" pos:column="51">op</name></decl></param>, <param><decl><type><specifier pos:line="1449" pos:column="55">const</specifier> <name pos:line="1449" pos:column="61">TCHAR</name> <type:modifier pos:line="1449" pos:column="67">*</type:modifier></type><name pos:line="1449" pos:column="68">txt2find</name></decl></param>, <param><decl><type><specifier pos:line="1449" pos:column="78">const</specifier> <name pos:line="1449" pos:column="84">TCHAR</name> <type:modifier pos:line="1449" pos:column="90">*</type:modifier></type><name pos:line="1449" pos:column="91">txt2replace</name></decl></param>, <param><decl><type><name pos:line="1449" pos:column="104">int</name></type> <name pos:line="1449" pos:column="108">startRange</name></decl></param>, <param><decl><type><name pos:line="1449" pos:column="120">int</name></type> <name pos:line="1449" pos:column="124">endRange</name></decl></param>, <param><decl><type><specifier pos:line="1449" pos:column="134">const</specifier> <name pos:line="1449" pos:column="140">TCHAR</name> <type:modifier pos:line="1449" pos:column="146">*</type:modifier></type><name pos:line="1449" pos:column="147">fileName</name></decl></param>, <param><decl><type><specifier pos:line="1449" pos:column="157">const</specifier> <name pos:line="1449" pos:column="163">FindOption</name> <type:modifier pos:line="1449" pos:column="174">*</type:modifier></type><name pos:line="1449" pos:column="175">opt</name></decl></param>, <param><decl><type><name pos:line="1449" pos:column="180">int</name></type> <name pos:line="1449" pos:column="184">colourStyleID</name></decl></param>)</parameter_list>
<block pos:line="1450" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1451" pos:column="9">int</name></type> <name pos:line="1451" pos:column="13">nbProcessed</name> <init pos:line="1451" pos:column="25">= <expr><lit:literal type="number" pos:line="1451" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
	
	<if pos:line="1453" pos:column="9">if <condition pos:line="1453" pos:column="12">(<expr><op:operator pos:line="1453" pos:column="13">!</op:operator><call><name pos:line="1453" pos:column="14">isCreated</name><argument_list pos:line="1453" pos:column="23">()</argument_list></call> <op:operator pos:line="1453" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="1453" pos:column="29">!</op:operator><name pos:line="1453" pos:column="30">txt2find</name></expr>)</condition><then pos:line="1453" pos:column="39">
		<return pos:line="1454" pos:column="17">return <expr><name pos:line="1454" pos:column="24">nbProcessed</name></expr>;</return></then></if>

	<if pos:line="1456" pos:column="9">if <condition pos:line="1456" pos:column="12">(<expr><op:operator pos:line="1456" pos:column="13">(</op:operator><name pos:line="1456" pos:column="14">op</name> <op:operator pos:line="1456" pos:column="17">==</op:operator> <name pos:line="1456" pos:column="20">ProcessReplaceAll</name><op:operator pos:line="1456" pos:column="37">)</op:operator> <op:operator pos:line="1456" pos:column="39">&amp;&amp;</op:operator> <call><name pos:line="1456" pos:column="42">(<type:modifier pos:line="1456" pos:column="43">*</type:modifier><name pos:line="1456" pos:column="44">_ppEditView</name>)<op:operator pos:line="1456" pos:column="56">-&gt;</op:operator><name pos:line="1456" pos:column="58">getCurrentBuffer</name></name><argument_list pos:line="1456" pos:column="74">()</argument_list></call><op:operator pos:line="1456" pos:column="76">-&gt;</op:operator><call><name pos:line="1456" pos:column="78">isReadOnly</name><argument_list pos:line="1456" pos:column="88">()</argument_list></call></expr>)</condition><then pos:line="1456" pos:column="91">
		<return pos:line="1457" pos:column="17">return <expr><name pos:line="1457" pos:column="24">nbProcessed</name></expr>;</return></then></if>

	<if pos:line="1459" pos:column="9">if <condition pos:line="1459" pos:column="12">(<expr><name pos:line="1459" pos:column="13">startRange</name> <op:operator pos:line="1459" pos:column="24">==</op:operator> <name pos:line="1459" pos:column="27">endRange</name></expr>)</condition><then pos:line="1459" pos:column="36">
		<return pos:line="1460" pos:column="17">return <expr><name pos:line="1460" pos:column="24">nbProcessed</name></expr>;</return></then></if>

	<if pos:line="1462" pos:column="9">if <condition pos:line="1462" pos:column="12">(<expr><op:operator pos:line="1462" pos:column="13">!</op:operator><name pos:line="1462" pos:column="14">fileName</name></expr>)</condition><then pos:line="1462" pos:column="23">
		<expr_stmt><expr><name pos:line="1463" pos:column="17">fileName</name> <op:operator pos:line="1463" pos:column="26">=</op:operator> <call><name pos:line="1463" pos:column="28">TEXT</name><argument_list pos:line="1463" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="1463" pos:column="33">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<decl_stmt><decl><type><specifier pos:line="1465" pos:column="9">const</specifier> <name pos:line="1465" pos:column="15">FindOption</name> <type:modifier pos:line="1465" pos:column="26">*</type:modifier></type><name pos:line="1465" pos:column="27">pOptions</name> <init pos:line="1465" pos:column="36">= <expr><name pos:line="1465" pos:column="38">opt</name><op:operator pos:line="1465" pos:column="41">?</op:operator><name pos:line="1465" pos:column="42">opt</name><op:operator pos:line="1465" pos:column="45">:</op:operator><name pos:line="1465" pos:column="46">_env</name></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="1466" pos:column="9">//bool isUnicode = (*_ppEditView)-&gt;getCurrentBuffer()-&gt;getUnicodeMode() != uni8Bit;</comment>
	<decl_stmt><decl><type><name pos:line="1467" pos:column="9">bool</name></type> <name pos:line="1467" pos:column="14">isUnicode</name> <init pos:line="1467" pos:column="24">= <expr><op:operator pos:line="1467" pos:column="26">(</op:operator><call><name pos:line="1467" pos:column="27">(<type:modifier pos:line="1467" pos:column="28">*</type:modifier><name pos:line="1467" pos:column="29">_ppEditView</name>)<op:operator pos:line="1467" pos:column="41">-&gt;</op:operator><name pos:line="1467" pos:column="43">execute</name></name><argument_list pos:line="1467" pos:column="50">(<argument><expr><name pos:line="1467" pos:column="51">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call> <op:operator pos:line="1467" pos:column="68">==</op:operator> <name pos:line="1467" pos:column="71">SC_CP_UTF8</name><op:operator pos:line="1467" pos:column="81">)</op:operator></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1469" pos:column="9">int</name></type> <name pos:line="1469" pos:column="13">stringSizeFind</name> <init pos:line="1469" pos:column="28">= <expr><lit:literal type="number" pos:line="1469" pos:column="30">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1470" pos:column="9">int</name></type> <name pos:line="1470" pos:column="13">stringSizeReplace</name> <init pos:line="1470" pos:column="31">= <expr><lit:literal type="number" pos:line="1470" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1472" pos:column="9">TCHAR</name> <type:modifier pos:line="1472" pos:column="15">*</type:modifier></type><name pos:line="1472" pos:column="16">pTextFind</name> <init pos:line="1472" pos:column="26">= <expr><name pos:line="1472" pos:column="28">NULL</name></expr></init></decl>;</decl_stmt>
	<if pos:line="1473" pos:column="9">if <condition pos:line="1473" pos:column="12">(<expr><op:operator pos:line="1473" pos:column="13">!</op:operator><name pos:line="1473" pos:column="14">txt2find</name></expr>)</condition><then pos:line="1473" pos:column="23">
	<block pos:line="1474" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1475" pos:column="17">HWND</name></type> <name pos:line="1475" pos:column="22">hFindCombo</name> <init pos:line="1475" pos:column="33">= <expr><call><name><op:operator pos:line="1475" pos:column="35">::</op:operator><name pos:line="1475" pos:column="37">GetDlgItem</name></name><argument_list pos:line="1475" pos:column="47">(<argument><expr><name pos:line="1475" pos:column="48">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1475" pos:column="56">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1476" pos:column="17">generic_string</name></type> <name pos:line="1476" pos:column="32">str2Search</name> <init pos:line="1476" pos:column="43">= <expr><call><name pos:line="1476" pos:column="45">getTextFromCombo</name><argument_list pos:line="1476" pos:column="61">(<argument><expr><name pos:line="1476" pos:column="62">hFindCombo</name></expr></argument>, <argument><expr><name pos:line="1476" pos:column="74">isUnicode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="1477" pos:column="17">stringSizeFind</name> <op:operator pos:line="1477" pos:column="32">=</op:operator> <call><name><name pos:line="1477" pos:column="34">str2Search</name><op:operator pos:line="1477" pos:column="44">.</op:operator><name pos:line="1477" pos:column="45">length</name></name><argument_list pos:line="1477" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1478" pos:column="17">pTextFind</name> <op:operator pos:line="1478" pos:column="27">=</op:operator> <op:operator pos:line="1478" pos:column="29">new</op:operator> <name><name pos:line="1478" pos:column="33">TCHAR</name><index pos:line="1478" pos:column="38">[<expr><name pos:line="1478" pos:column="39">stringSizeFind</name> <op:operator pos:line="1478" pos:column="54">+</op:operator> <lit:literal type="number" pos:line="1478" pos:column="56">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1479" pos:column="17">lstrcpy</name><argument_list pos:line="1479" pos:column="24">(<argument><expr><name pos:line="1479" pos:column="25">pTextFind</name></expr></argument>, <argument><expr><call><name><name pos:line="1479" pos:column="36">str2Search</name><op:operator pos:line="1479" pos:column="46">.</op:operator><name pos:line="1479" pos:column="47">c_str</name></name><argument_list pos:line="1479" pos:column="52">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1481" pos:column="9">else
	<block pos:line="1482" pos:column="9">{
		<expr_stmt><expr><name pos:line="1483" pos:column="17">stringSizeFind</name> <op:operator pos:line="1483" pos:column="32">=</op:operator> <call><name pos:line="1483" pos:column="34">lstrlen</name><argument_list pos:line="1483" pos:column="41">(<argument><expr><name pos:line="1483" pos:column="42">txt2find</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1484" pos:column="17">pTextFind</name> <op:operator pos:line="1484" pos:column="27">=</op:operator> <op:operator pos:line="1484" pos:column="29">new</op:operator> <name><name pos:line="1484" pos:column="33">TCHAR</name><index pos:line="1484" pos:column="38">[<expr><name pos:line="1484" pos:column="39">stringSizeFind</name> <op:operator pos:line="1484" pos:column="54">+</op:operator> <lit:literal type="number" pos:line="1484" pos:column="56">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="1485" pos:column="17">lstrcpy</name><argument_list pos:line="1485" pos:column="24">(<argument><expr><name pos:line="1485" pos:column="25">pTextFind</name></expr></argument>, <argument><expr><name pos:line="1485" pos:column="36">txt2find</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

	<if pos:line="1488" pos:column="9">if <condition pos:line="1488" pos:column="12">(<expr><op:operator pos:line="1488" pos:column="13">!</op:operator><name><name pos:line="1488" pos:column="14">pTextFind</name><index pos:line="1488" pos:column="23">[<expr><lit:literal type="number" pos:line="1488" pos:column="24">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1488" pos:column="27"> 
	<block pos:line="1489" pos:column="9">{
		<expr_stmt><expr><op:operator pos:line="1490" pos:column="17">delete</op:operator> <index pos:line="1490" pos:column="24">[]</index> <name pos:line="1490" pos:column="27">pTextFind</name></expr>;</expr_stmt>
		<return pos:line="1491" pos:column="17">return <expr><name pos:line="1491" pos:column="24">nbProcessed</name></expr>;</return>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="1494" pos:column="9">TCHAR</name> <type:modifier pos:line="1494" pos:column="15">*</type:modifier></type><name pos:line="1494" pos:column="16">pTextReplace</name> <init pos:line="1494" pos:column="29">= <expr><name pos:line="1494" pos:column="31">NULL</name></expr></init></decl>;</decl_stmt>
	<if pos:line="1495" pos:column="9">if <condition pos:line="1495" pos:column="12">(<expr><name pos:line="1495" pos:column="13">op</name> <op:operator pos:line="1495" pos:column="16">==</op:operator> <name pos:line="1495" pos:column="19">ProcessReplaceAll</name></expr>)</condition><then pos:line="1495" pos:column="37">
	<block pos:line="1496" pos:column="9">{
		<if pos:line="1497" pos:column="17">if <condition pos:line="1497" pos:column="20">(<expr><op:operator pos:line="1497" pos:column="21">!</op:operator><name pos:line="1497" pos:column="22">txt2replace</name></expr>)</condition><then pos:line="1497" pos:column="34">
		<block pos:line="1498" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1499" pos:column="25">HWND</name></type> <name pos:line="1499" pos:column="30">hReplaceCombo</name> <init pos:line="1499" pos:column="44">= <expr><call><name><op:operator pos:line="1499" pos:column="46">::</op:operator><name pos:line="1499" pos:column="48">GetDlgItem</name></name><argument_list pos:line="1499" pos:column="58">(<argument><expr><name pos:line="1499" pos:column="59">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1499" pos:column="67">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1500" pos:column="25">generic_string</name></type> <name pos:line="1500" pos:column="40">str2Replace</name> <init pos:line="1500" pos:column="52">= <expr><call><name pos:line="1500" pos:column="54">getTextFromCombo</name><argument_list pos:line="1500" pos:column="70">(<argument><expr><name pos:line="1500" pos:column="71">hReplaceCombo</name></expr></argument>, <argument><expr><name pos:line="1500" pos:column="86">isUnicode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="1501" pos:column="25">stringSizeReplace</name> <op:operator pos:line="1501" pos:column="43">=</op:operator> <call><name><name pos:line="1501" pos:column="45">str2Replace</name><op:operator pos:line="1501" pos:column="56">.</op:operator><name pos:line="1501" pos:column="57">length</name></name><argument_list pos:line="1501" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1502" pos:column="25">pTextReplace</name> <op:operator pos:line="1502" pos:column="38">=</op:operator> <op:operator pos:line="1502" pos:column="40">new</op:operator> <name><name pos:line="1502" pos:column="44">TCHAR</name><index pos:line="1502" pos:column="49">[<expr><name pos:line="1502" pos:column="50">stringSizeReplace</name> <op:operator pos:line="1502" pos:column="68">+</op:operator> <lit:literal type="number" pos:line="1502" pos:column="70">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1503" pos:column="25">lstrcpy</name><argument_list pos:line="1503" pos:column="32">(<argument><expr><name pos:line="1503" pos:column="33">pTextReplace</name></expr></argument>, <argument><expr><call><name><name pos:line="1503" pos:column="47">str2Replace</name><op:operator pos:line="1503" pos:column="58">.</op:operator><name pos:line="1503" pos:column="59">c_str</name></name><argument_list pos:line="1503" pos:column="64">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1505" pos:column="17">else
		<block pos:line="1506" pos:column="17">{
			<expr_stmt><expr><name pos:line="1507" pos:column="25">stringSizeReplace</name> <op:operator pos:line="1507" pos:column="43">=</op:operator> <call><name pos:line="1507" pos:column="45">lstrlen</name><argument_list pos:line="1507" pos:column="52">(<argument><expr><name pos:line="1507" pos:column="53">txt2replace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1508" pos:column="25">pTextReplace</name> <op:operator pos:line="1508" pos:column="38">=</op:operator> <op:operator pos:line="1508" pos:column="40">new</op:operator> <name><name pos:line="1508" pos:column="44">TCHAR</name><index pos:line="1508" pos:column="49">[<expr><name pos:line="1508" pos:column="50">stringSizeReplace</name> <op:operator pos:line="1508" pos:column="68">+</op:operator> <lit:literal type="number" pos:line="1508" pos:column="70">1</lit:literal></expr>]</index></name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1509" pos:column="25">lstrcpy</name><argument_list pos:line="1509" pos:column="32">(<argument><expr><name pos:line="1509" pos:column="33">pTextReplace</name></expr></argument>, <argument><expr><name pos:line="1509" pos:column="47">txt2replace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></else></if>
	}</block></then></if>	

	<if pos:line="1513" pos:column="9">if <condition pos:line="1513" pos:column="12">(<expr><name><name pos:line="1513" pos:column="13">pOptions</name><op:operator pos:line="1513" pos:column="21">-&gt;</op:operator><name pos:line="1513" pos:column="23">_searchType</name></name> <op:operator pos:line="1513" pos:column="35">==</op:operator> <name pos:line="1513" pos:column="38">FindExtended</name></expr>)</condition><then pos:line="1513" pos:column="51"> <block pos:line="1513" pos:column="52">{
		<expr_stmt><expr><name pos:line="1514" pos:column="17">stringSizeFind</name> <op:operator pos:line="1514" pos:column="32">=</op:operator> <call><name><name pos:line="1514" pos:column="34">Searching</name><op:operator pos:line="1514" pos:column="43">::</op:operator><name pos:line="1514" pos:column="45">convertExtendedToString</name></name><argument_list pos:line="1514" pos:column="68">(<argument><expr><name pos:line="1514" pos:column="69">pTextFind</name></expr></argument>, <argument><expr><name pos:line="1514" pos:column="80">pTextFind</name></expr></argument>, <argument><expr><name pos:line="1514" pos:column="91">stringSizeFind</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1515" pos:column="17">if <condition pos:line="1515" pos:column="20">(<expr><name pos:line="1515" pos:column="21">op</name> <op:operator pos:line="1515" pos:column="24">==</op:operator> <name pos:line="1515" pos:column="27">ProcessReplaceAll</name></expr>)</condition><then pos:line="1515" pos:column="45">
			<expr_stmt><expr><name pos:line="1516" pos:column="25">stringSizeReplace</name> <op:operator pos:line="1516" pos:column="43">=</op:operator> <call><name><name pos:line="1516" pos:column="45">Searching</name><op:operator pos:line="1516" pos:column="54">::</op:operator><name pos:line="1516" pos:column="56">convertExtendedToString</name></name><argument_list pos:line="1516" pos:column="79">(<argument><expr><name pos:line="1516" pos:column="80">pTextReplace</name></expr></argument>, <argument><expr><name pos:line="1516" pos:column="94">pTextReplace</name></expr></argument>, <argument><expr><name pos:line="1516" pos:column="108">stringSizeReplace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="1519" pos:column="9">bool</name></type> <name pos:line="1519" pos:column="14">isRegExp</name> <init pos:line="1519" pos:column="23">= <expr><name><name pos:line="1519" pos:column="25">pOptions</name><op:operator pos:line="1519" pos:column="33">-&gt;</op:operator><name pos:line="1519" pos:column="35">_searchType</name></name> <op:operator pos:line="1519" pos:column="47">==</op:operator> <name pos:line="1519" pos:column="50">FindRegex</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1520" pos:column="9">int</name></type> <name pos:line="1520" pos:column="13">flags</name> <init pos:line="1520" pos:column="19">= <expr><call><name><name pos:line="1520" pos:column="21">Searching</name><op:operator pos:line="1520" pos:column="30">::</op:operator><name pos:line="1520" pos:column="32">buildSearchFlags</name></name><argument_list pos:line="1520" pos:column="48">(<argument><expr><name pos:line="1520" pos:column="49">pOptions</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



	<if pos:line="1524" pos:column="9">if <condition pos:line="1524" pos:column="12">(<expr><name pos:line="1524" pos:column="13">op</name> <op:operator pos:line="1524" pos:column="16">==</op:operator> <name pos:line="1524" pos:column="19">ProcessMarkAll</name> <op:operator pos:line="1524" pos:column="34">&amp;&amp;</op:operator> <name pos:line="1524" pos:column="37">colourStyleID</name> <op:operator pos:line="1524" pos:column="51">==</op:operator> <op:operator pos:line="1524" pos:column="54">-</op:operator><lit:literal type="number" pos:line="1524" pos:column="55">1</lit:literal></expr>)</condition><then pos:line="1524" pos:column="57">	<comment type="line" pos:line="1524" pos:column="65">//if marking, check if purging is needed</comment>
	<block pos:line="1525" pos:column="9">{
		<if pos:line="1526" pos:column="17">if <condition pos:line="1526" pos:column="20">(<expr><name><name pos:line="1526" pos:column="21">_env</name><op:operator pos:line="1526" pos:column="25">-&gt;</op:operator><name pos:line="1526" pos:column="27">_doPurge</name></name></expr>)</condition><then pos:line="1526" pos:column="36"> <block pos:line="1526" pos:column="37">{
			<expr_stmt><expr><call><name pos:line="1527" pos:column="25">(<type:modifier pos:line="1527" pos:column="26">*</type:modifier><name pos:line="1527" pos:column="27">_ppEditView</name>)<op:operator pos:line="1527" pos:column="39">-&gt;</op:operator><name pos:line="1527" pos:column="41">clearIndicator</name></name><argument_list pos:line="1527" pos:column="55">(<argument><expr><name pos:line="1527" pos:column="56">SCE_UNIVERSAL_FOUND_STYLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1528" pos:column="25">if <condition pos:line="1528" pos:column="28">(<expr><name><name pos:line="1528" pos:column="29">_env</name><op:operator pos:line="1528" pos:column="33">-&gt;</op:operator><name pos:line="1528" pos:column="35">_doMarkLine</name></name></expr>)</condition><then pos:line="1528" pos:column="47">
				<expr_stmt><expr><call><name pos:line="1529" pos:column="33">(<type:modifier pos:line="1529" pos:column="34">*</type:modifier><name pos:line="1529" pos:column="35">_ppEditView</name>)<op:operator pos:line="1529" pos:column="47">-&gt;</op:operator><name pos:line="1529" pos:column="49">execute</name></name><argument_list pos:line="1529" pos:column="56">(<argument><expr><name pos:line="1529" pos:column="57">SCI_MARKERDELETEALL</name></expr></argument>, <argument><expr><name pos:line="1529" pos:column="78">MARK_BOOKMARK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="1533" pos:column="9">int</name></type> <name pos:line="1533" pos:column="13">targetStart</name> <init pos:line="1533" pos:column="25">= <expr><lit:literal type="number" pos:line="1533" pos:column="27">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1534" pos:column="9">int</name></type> <name pos:line="1534" pos:column="13">targetEnd</name> <init pos:line="1534" pos:column="23">= <expr><lit:literal type="number" pos:line="1534" pos:column="25">0</lit:literal></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="1536" pos:column="9">//Initial range for searching</comment>
	<expr_stmt><expr><call><name pos:line="1537" pos:column="9">(<type:modifier pos:line="1537" pos:column="10">*</type:modifier><name pos:line="1537" pos:column="11">_ppEditView</name>)<op:operator pos:line="1537" pos:column="23">-&gt;</op:operator><name pos:line="1537" pos:column="25">execute</name></name><argument_list pos:line="1537" pos:column="32">(<argument><expr><name pos:line="1537" pos:column="33">SCI_SETSEARCHFLAGS</name></expr></argument>, <argument><expr><name pos:line="1537" pos:column="53">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1538" pos:column="9">targetStart</name> <op:operator pos:line="1538" pos:column="21">=</op:operator> <call><name pos:line="1538" pos:column="23">(<type:modifier pos:line="1538" pos:column="24">*</type:modifier><name pos:line="1538" pos:column="25">_ppEditView</name>)<op:operator pos:line="1538" pos:column="37">-&gt;</op:operator><name pos:line="1538" pos:column="39">searchInTarget</name></name><argument_list pos:line="1538" pos:column="53">(<argument><expr><name pos:line="1538" pos:column="54">pTextFind</name></expr></argument>, <argument><expr><name pos:line="1538" pos:column="65">stringSizeFind</name></expr></argument>, <argument><expr><name pos:line="1538" pos:column="81">startRange</name></expr></argument>, <argument><expr><name pos:line="1538" pos:column="93">endRange</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<if pos:line="1540" pos:column="9">if <condition pos:line="1540" pos:column="12">(<expr><op:operator pos:line="1540" pos:column="13">(</op:operator><name pos:line="1540" pos:column="14">targetStart</name> <op:operator pos:line="1540" pos:column="26">&gt;=</op:operator> <lit:literal type="number" pos:line="1540" pos:column="29">0</lit:literal><op:operator pos:line="1540" pos:column="30">)</op:operator> <op:operator pos:line="1540" pos:column="32">&amp;&amp;</op:operator> <op:operator pos:line="1540" pos:column="35">(</op:operator><name pos:line="1540" pos:column="36">op</name> <op:operator pos:line="1540" pos:column="39">==</op:operator> <name pos:line="1540" pos:column="42">ProcessFindAll</name><op:operator pos:line="1540" pos:column="56">)</op:operator></expr>)</condition><then pos:line="1540" pos:column="58">	<comment type="line" pos:line="1540" pos:column="65">//add new filetitle if this file results in hits</comment>
	<block pos:line="1541" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="1542" pos:column="17">_pFinder</name><op:operator pos:line="1542" pos:column="25">-&gt;</op:operator><name pos:line="1542" pos:column="27">addFileNameTitle</name></name><argument_list pos:line="1542" pos:column="43">(<argument><expr><name pos:line="1542" pos:column="44">fileName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<while pos:line="1545" pos:column="9">while <condition pos:line="1545" pos:column="15">(<expr><name pos:line="1545" pos:column="16">targetStart</name> <op:operator pos:line="1545" pos:column="28">!=</op:operator> <op:operator pos:line="1545" pos:column="31">-</op:operator><lit:literal type="number" pos:line="1545" pos:column="32">1</lit:literal> <op:operator pos:line="1545" pos:column="34">&amp;&amp;</op:operator> <name pos:line="1545" pos:column="37">targetStart</name> <op:operator pos:line="1545" pos:column="49">!=</op:operator> <op:operator pos:line="1545" pos:column="52">-</op:operator><lit:literal type="number" pos:line="1545" pos:column="53">2</lit:literal></expr>)</condition>
	<block pos:line="1546" pos:column="9">{
		<comment type="line" pos:line="1547" pos:column="17">//int posFindBefore = posFind;</comment>
		<expr_stmt><expr><name pos:line="1548" pos:column="17">targetStart</name> <op:operator pos:line="1548" pos:column="29">=</op:operator> <call><name pos:line="1548" pos:column="31">int</name><argument_list pos:line="1548" pos:column="34">(<argument><expr><call><name pos:line="1548" pos:column="35">(<type:modifier pos:line="1548" pos:column="36">*</type:modifier><name pos:line="1548" pos:column="37">_ppEditView</name>)<op:operator pos:line="1548" pos:column="49">-&gt;</op:operator><name pos:line="1548" pos:column="51">execute</name></name><argument_list pos:line="1548" pos:column="58">(<argument><expr><name pos:line="1548" pos:column="59">SCI_GETTARGETSTART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1549" pos:column="17">targetEnd</name> <op:operator pos:line="1549" pos:column="27">=</op:operator> <call><name pos:line="1549" pos:column="29">int</name><argument_list pos:line="1549" pos:column="32">(<argument><expr><call><name pos:line="1549" pos:column="33">(<type:modifier pos:line="1549" pos:column="34">*</type:modifier><name pos:line="1549" pos:column="35">_ppEditView</name>)<op:operator pos:line="1549" pos:column="47">-&gt;</op:operator><name pos:line="1549" pos:column="49">execute</name></name><argument_list pos:line="1549" pos:column="56">(<argument><expr><name pos:line="1549" pos:column="57">SCI_GETTARGETEND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1550" pos:column="17">if <condition pos:line="1550" pos:column="20">(<expr><name pos:line="1550" pos:column="21">targetEnd</name> <op:operator pos:line="1550" pos:column="31">&gt;</op:operator> <name pos:line="1550" pos:column="33">endRange</name></expr>)</condition><then pos:line="1550" pos:column="42"> <block pos:line="1550" pos:column="43">{	<comment type="line" pos:line="1550" pos:column="49">//we found a result but outside our range, therefore do not process it</comment>
			<break pos:line="1551" pos:column="25">break;</break>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="1553" pos:column="17">int</name></type> <name pos:line="1553" pos:column="21">foundTextLen</name> <init pos:line="1553" pos:column="34">= <expr><name pos:line="1553" pos:column="36">targetEnd</name> <op:operator pos:line="1553" pos:column="46">-</op:operator> <name pos:line="1553" pos:column="48">targetStart</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1554" pos:column="17">int</name></type> <name pos:line="1554" pos:column="21">replaceDelta</name> <init pos:line="1554" pos:column="34">= <expr><lit:literal type="number" pos:line="1554" pos:column="36">0</lit:literal></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="1556" pos:column="17">// Search resulted in empty token, possible with RE</comment>
		<comment type="block" pos:line="1557" pos:column="17">/*
		if (!foundTextLen) {
			delete [] pTextFind;
			delete [] pTextReplace;
			return -1;
		}
		*/</comment>
		
		<switch pos:line="1565" pos:column="17">switch <condition pos:line="1565" pos:column="24">(<expr><name pos:line="1565" pos:column="25">op</name></expr>)</condition>
		<block pos:line="1566" pos:column="17">{
			<case pos:line="1567" pos:column="25">case <expr><name pos:line="1567" pos:column="30">ProcessFindAll</name></expr>: 
			<block pos:line="1568" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1569" pos:column="33">int</name></type> <name pos:line="1569" pos:column="37">lineNumber</name> <init pos:line="1569" pos:column="48">= <expr><call><name pos:line="1569" pos:column="50">(<type:modifier pos:line="1569" pos:column="51">*</type:modifier><name pos:line="1569" pos:column="52">_ppEditView</name>)<op:operator pos:line="1569" pos:column="64">-&gt;</op:operator><name pos:line="1569" pos:column="66">execute</name></name><argument_list pos:line="1569" pos:column="73">(<argument><expr><name pos:line="1569" pos:column="74">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="1569" pos:column="96">targetStart</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1570" pos:column="33">int</name></type> <name pos:line="1570" pos:column="37">lend</name> <init pos:line="1570" pos:column="42">= <expr><call><name pos:line="1570" pos:column="44">(<type:modifier pos:line="1570" pos:column="45">*</type:modifier><name pos:line="1570" pos:column="46">_ppEditView</name>)<op:operator pos:line="1570" pos:column="58">-&gt;</op:operator><name pos:line="1570" pos:column="60">execute</name></name><argument_list pos:line="1570" pos:column="67">(<argument><expr><name pos:line="1570" pos:column="68">SCI_GETLINEENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="1570" pos:column="92">lineNumber</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1571" pos:column="33">int</name></type> <name pos:line="1571" pos:column="37">lstart</name> <init pos:line="1571" pos:column="44">= <expr><call><name pos:line="1571" pos:column="46">(<type:modifier pos:line="1571" pos:column="47">*</type:modifier><name pos:line="1571" pos:column="48">_ppEditView</name>)<op:operator pos:line="1571" pos:column="60">-&gt;</op:operator><name pos:line="1571" pos:column="62">execute</name></name><argument_list pos:line="1571" pos:column="69">(<argument><expr><name pos:line="1571" pos:column="70">SCI_POSITIONFROMLINE</name></expr></argument>, <argument><expr><name pos:line="1571" pos:column="92">lineNumber</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1572" pos:column="33">int</name></type> <name pos:line="1572" pos:column="37">nbChar</name> <init pos:line="1572" pos:column="44">= <expr><name pos:line="1572" pos:column="46">lend</name> <op:operator pos:line="1572" pos:column="51">-</op:operator> <name pos:line="1572" pos:column="53">lstart</name></expr></init></decl>;</decl_stmt>

				<comment type="line" pos:line="1574" pos:column="33">// use the static buffer</comment>
				<decl_stmt><decl><type><name pos:line="1575" pos:column="33">TCHAR</name></type> <name><name pos:line="1575" pos:column="39">lineBuf</name><index pos:line="1575" pos:column="46">[<expr><lit:literal type="number" pos:line="1575" pos:column="47">1024</lit:literal></expr>]</index></name></decl>;</decl_stmt>

				<if pos:line="1577" pos:column="33">if <condition pos:line="1577" pos:column="36">(<expr><name pos:line="1577" pos:column="37">nbChar</name> <op:operator pos:line="1577" pos:column="44">&gt;</op:operator> <lit:literal type="number" pos:line="1577" pos:column="46">1024</lit:literal> <op:operator pos:line="1577" pos:column="51">-</op:operator> <lit:literal type="number" pos:line="1577" pos:column="53">3</lit:literal></expr>)</condition><then pos:line="1577" pos:column="55">
					<expr_stmt><expr><name pos:line="1578" pos:column="41">lend</name> <op:operator pos:line="1578" pos:column="46">=</op:operator> <name pos:line="1578" pos:column="48">lstart</name> <op:operator pos:line="1578" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="1578" pos:column="57">1020</lit:literal></expr>;</expr_stmt></then></if>

				<decl_stmt><decl><type><name pos:line="1580" pos:column="33">int</name></type> <name pos:line="1580" pos:column="37">start_mark</name> <init pos:line="1580" pos:column="48">= <expr><name pos:line="1580" pos:column="50">targetStart</name> <op:operator pos:line="1580" pos:column="62">-</op:operator> <name pos:line="1580" pos:column="64">lstart</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1581" pos:column="33">int</name></type> <name pos:line="1581" pos:column="37">end_mark</name> <init pos:line="1581" pos:column="46">= <expr><name pos:line="1581" pos:column="48">targetEnd</name> <op:operator pos:line="1581" pos:column="58">-</op:operator> <name pos:line="1581" pos:column="60">lstart</name></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name pos:line="1583" pos:column="33">(<type:modifier pos:line="1583" pos:column="34">*</type:modifier><name pos:line="1583" pos:column="35">_ppEditView</name>)<op:operator pos:line="1583" pos:column="47">-&gt;</op:operator><name pos:line="1583" pos:column="49">getGenericText</name></name><argument_list pos:line="1583" pos:column="63">(<argument><expr><name pos:line="1583" pos:column="64">lineBuf</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1583" pos:column="73">1024</lit:literal></expr></argument>, <argument><expr><name pos:line="1583" pos:column="79">lstart</name></expr></argument>, <argument><expr><name pos:line="1583" pos:column="87">lend</name></expr></argument>, <argument><expr><op:operator pos:line="1583" pos:column="93">&amp;</op:operator><name pos:line="1583" pos:column="94">start_mark</name></expr></argument>, <argument><expr><op:operator pos:line="1583" pos:column="106">&amp;</op:operator><name pos:line="1583" pos:column="107">end_mark</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1584" pos:column="33">generic_string</name></type> <name pos:line="1584" pos:column="48">line</name></decl>;</decl_stmt>
<cpp:ifdef pos:line="1585" pos:column="1">#<cpp:directive pos:line="1585" pos:column="2">ifdef</cpp:directive> <name pos:line="1585" pos:column="8">UNICODE</name></cpp:ifdef>
				<expr_stmt><expr><name pos:line="1586" pos:column="33">line</name> <op:operator pos:line="1586" pos:column="38">=</op:operator> <name pos:line="1586" pos:column="40">lineBuf</name></expr>;</expr_stmt>
<cpp:else pos:line="1587" pos:column="1">#<cpp:directive pos:line="1587" pos:column="2">else</cpp:directive></cpp:else>
				<decl_stmt><decl><type><name pos:line="1588" pos:column="33">UINT</name></type> <name pos:line="1588" pos:column="38">cp</name> <init pos:line="1588" pos:column="41">= <expr><call><name pos:line="1588" pos:column="43">(<type:modifier pos:line="1588" pos:column="44">*</type:modifier><name pos:line="1588" pos:column="45">_ppEditView</name>)<op:operator pos:line="1588" pos:column="57">-&gt;</op:operator><name pos:line="1588" pos:column="59">execute</name></name><argument_list pos:line="1588" pos:column="66">(<argument><expr><name pos:line="1588" pos:column="67">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="1589" pos:column="33">if <condition pos:line="1589" pos:column="36">(<expr><name pos:line="1589" pos:column="37">cp</name> <op:operator pos:line="1589" pos:column="40">!=</op:operator> <name pos:line="1589" pos:column="43">SC_CP_UTF8</name></expr>)</condition><then pos:line="1589" pos:column="54">
				<block pos:line="1590" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1591" pos:column="41">WcharMbcsConvertor</name> <type:modifier pos:line="1591" pos:column="60">*</type:modifier></type><name pos:line="1591" pos:column="61">wmc</name> <init pos:line="1591" pos:column="65">= <expr><call><name><name pos:line="1591" pos:column="67">WcharMbcsConvertor</name><op:operator pos:line="1591" pos:column="85">::</op:operator><name pos:line="1591" pos:column="87">getInstance</name></name><argument_list pos:line="1591" pos:column="98">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="1592" pos:column="41">const</specifier> <name pos:line="1592" pos:column="47">wchar_t</name> <type:modifier pos:line="1592" pos:column="55">*</type:modifier></type><name pos:line="1592" pos:column="56">pTextW</name> <init pos:line="1592" pos:column="63">= <expr><call><name><name pos:line="1592" pos:column="65">wmc</name><op:operator pos:line="1592" pos:column="68">-&gt;</op:operator><name pos:line="1592" pos:column="70">char2wchar</name></name><argument_list pos:line="1592" pos:column="80">(<argument><expr><name pos:line="1592" pos:column="81">lineBuf</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="1592" pos:column="90">::</op:operator><name pos:line="1592" pos:column="92">GetACP</name></name><argument_list pos:line="1592" pos:column="98">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="1593" pos:column="41">const</specifier> <name pos:line="1593" pos:column="47">char</name> <type:modifier pos:line="1593" pos:column="52">*</type:modifier></type><name pos:line="1593" pos:column="53">pTextA</name> <init pos:line="1593" pos:column="60">= <expr><call><name><name pos:line="1593" pos:column="62">wmc</name><op:operator pos:line="1593" pos:column="65">-&gt;</op:operator><name pos:line="1593" pos:column="67">wchar2char</name></name><argument_list pos:line="1593" pos:column="77">(<argument><expr><name pos:line="1593" pos:column="78">pTextW</name></expr></argument>, <argument><expr><name pos:line="1593" pos:column="86">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="1594" pos:column="41">line</name> <op:operator pos:line="1594" pos:column="46">=</op:operator> <name pos:line="1594" pos:column="48">pTextA</name></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="1596" pos:column="33">else
					<expr_stmt><expr><name pos:line="1597" pos:column="41">line</name> <op:operator pos:line="1597" pos:column="46">=</op:operator> <name pos:line="1597" pos:column="48">lineBuf</name></expr>;</expr_stmt></else></if>
<cpp:endif pos:line="1598" pos:column="1">#<cpp:directive pos:line="1598" pos:column="2">endif</cpp:directive></cpp:endif>
				<expr_stmt><expr><name pos:line="1599" pos:column="33">line</name> <op:operator pos:line="1599" pos:column="38">+=</op:operator> <call><name pos:line="1599" pos:column="41">TEXT</name><argument_list pos:line="1599" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1599" pos:column="46">"\r\n"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1600" pos:column="33">SearchResultMarking</name></type> <name pos:line="1600" pos:column="53">srm</name></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1601" pos:column="33">srm</name><op:operator pos:line="1601" pos:column="36">.</op:operator><name pos:line="1601" pos:column="37">_start</name></name> <op:operator pos:line="1601" pos:column="44">=</op:operator> <name pos:line="1601" pos:column="46">start_mark</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="1602" pos:column="33">srm</name><op:operator pos:line="1602" pos:column="36">.</op:operator><name pos:line="1602" pos:column="37">_end</name></name> <op:operator pos:line="1602" pos:column="42">=</op:operator> <name pos:line="1602" pos:column="44">end_mark</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1603" pos:column="33">_pFinder</name><op:operator pos:line="1603" pos:column="41">-&gt;</op:operator><name pos:line="1603" pos:column="43">add</name></name><argument_list pos:line="1603" pos:column="46">(<argument><expr><call><name pos:line="1603" pos:column="47">FoundInfo</name><argument_list pos:line="1603" pos:column="56">(<argument><expr><name pos:line="1603" pos:column="57">targetStart</name></expr></argument>, <argument><expr><name pos:line="1603" pos:column="70">targetEnd</name></expr></argument>,  <argument><expr><name pos:line="1603" pos:column="82">fileName</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1603" pos:column="93">srm</name></expr></argument>, <argument><expr><call><name><name pos:line="1603" pos:column="98">line</name><op:operator pos:line="1603" pos:column="102">.</op:operator><name pos:line="1603" pos:column="103">c_str</name></name><argument_list pos:line="1603" pos:column="108">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1603" pos:column="112">lineNumber</name> <op:operator pos:line="1603" pos:column="123">+</op:operator> <lit:literal type="number" pos:line="1603" pos:column="125">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<break pos:line="1605" pos:column="33">break;</break> 
			}</block>

			</case><case pos:line="1608" pos:column="25">case <expr><name pos:line="1608" pos:column="30">ProcessReplaceAll</name></expr>: 
			<block pos:line="1609" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1610" pos:column="33">int</name></type> <name pos:line="1610" pos:column="37">replacedLength</name></decl>;</decl_stmt>
				<if pos:line="1611" pos:column="33">if <condition pos:line="1611" pos:column="36">(<expr><name pos:line="1611" pos:column="37">isRegExp</name></expr>)</condition><then pos:line="1611" pos:column="46">
					<expr_stmt><expr><name pos:line="1612" pos:column="41">replacedLength</name> <op:operator pos:line="1612" pos:column="56">=</op:operator> <call><name pos:line="1612" pos:column="58">(<type:modifier pos:line="1612" pos:column="59">*</type:modifier><name pos:line="1612" pos:column="60">_ppEditView</name>)<op:operator pos:line="1612" pos:column="72">-&gt;</op:operator><name pos:line="1612" pos:column="74">replaceTargetRegExMode</name></name><argument_list pos:line="1612" pos:column="96">(<argument><expr><name pos:line="1612" pos:column="97">pTextReplace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="1613" pos:column="33">else
					<expr_stmt><expr><name pos:line="1614" pos:column="41">replacedLength</name> <op:operator pos:line="1614" pos:column="56">=</op:operator> <call><name pos:line="1614" pos:column="58">(<type:modifier pos:line="1614" pos:column="59">*</type:modifier><name pos:line="1614" pos:column="60">_ppEditView</name>)<op:operator pos:line="1614" pos:column="72">-&gt;</op:operator><name pos:line="1614" pos:column="74">replaceTarget</name></name><argument_list pos:line="1614" pos:column="87">(<argument><expr><name pos:line="1614" pos:column="88">pTextReplace</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>

				<expr_stmt><expr><name pos:line="1616" pos:column="33">replaceDelta</name> <op:operator pos:line="1616" pos:column="46">=</op:operator> <name pos:line="1616" pos:column="48">replacedLength</name> <op:operator pos:line="1616" pos:column="63">-</op:operator> <name pos:line="1616" pos:column="65">foundTextLen</name></expr>;</expr_stmt>
				<break pos:line="1617" pos:column="33">break;</break> 
			}</block>

			</case><case pos:line="1620" pos:column="25">case <expr><name pos:line="1620" pos:column="30">ProcessMarkAll</name></expr>: 
			<block pos:line="1621" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="1622" pos:column="33">(<type:modifier pos:line="1622" pos:column="34">*</type:modifier><name pos:line="1622" pos:column="35">_ppEditView</name>)<op:operator pos:line="1622" pos:column="47">-&gt;</op:operator><name pos:line="1622" pos:column="49">execute</name></name><argument_list pos:line="1622" pos:column="56">(<argument><expr><name pos:line="1622" pos:column="57">SCI_SETINDICATORCURRENT</name></expr></argument>, <argument><expr><name pos:line="1622" pos:column="82">SCE_UNIVERSAL_FOUND_STYLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1623" pos:column="33">(<type:modifier pos:line="1623" pos:column="34">*</type:modifier><name pos:line="1623" pos:column="35">_ppEditView</name>)<op:operator pos:line="1623" pos:column="47">-&gt;</op:operator><name pos:line="1623" pos:column="49">execute</name></name><argument_list pos:line="1623" pos:column="56">(<argument><expr><name pos:line="1623" pos:column="57">SCI_INDICATORFILLRANGE</name></expr></argument>,  <argument><expr><name pos:line="1623" pos:column="82">targetStart</name></expr></argument>, <argument><expr><name pos:line="1623" pos:column="95">foundTextLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<if pos:line="1625" pos:column="33">if <condition pos:line="1625" pos:column="36">(<expr><name><name pos:line="1625" pos:column="37">_env</name><op:operator pos:line="1625" pos:column="41">-&gt;</op:operator><name pos:line="1625" pos:column="43">_doMarkLine</name></name></expr>)</condition><then pos:line="1625" pos:column="55">
				<block pos:line="1626" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1627" pos:column="41">int</name></type> <name pos:line="1627" pos:column="45">lineNumber</name> <init pos:line="1627" pos:column="56">= <expr><call><name pos:line="1627" pos:column="58">(<type:modifier pos:line="1627" pos:column="59">*</type:modifier><name pos:line="1627" pos:column="60">_ppEditView</name>)<op:operator pos:line="1627" pos:column="72">-&gt;</op:operator><name pos:line="1627" pos:column="74">execute</name></name><argument_list pos:line="1627" pos:column="81">(<argument><expr><name pos:line="1627" pos:column="82">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="1627" pos:column="104">targetStart</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="1628" pos:column="41">int</name></type> <name pos:line="1628" pos:column="45">state</name> <init pos:line="1628" pos:column="51">= <expr><call><name pos:line="1628" pos:column="53">(<type:modifier pos:line="1628" pos:column="54">*</type:modifier><name pos:line="1628" pos:column="55">_ppEditView</name>)<op:operator pos:line="1628" pos:column="67">-&gt;</op:operator><name pos:line="1628" pos:column="69">execute</name></name><argument_list pos:line="1628" pos:column="76">(<argument><expr><name pos:line="1628" pos:column="77">SCI_MARKERGET</name></expr></argument>, <argument><expr><name pos:line="1628" pos:column="92">lineNumber</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<if pos:line="1630" pos:column="41">if <condition pos:line="1630" pos:column="44">(<expr><op:operator pos:line="1630" pos:column="45">!</op:operator><op:operator pos:line="1630" pos:column="46">(</op:operator><name pos:line="1630" pos:column="47">state</name> <op:operator pos:line="1630" pos:column="53">&amp;</op:operator> <op:operator pos:line="1630" pos:column="55">(</op:operator><lit:literal type="number" pos:line="1630" pos:column="56">1</lit:literal> <op:operator pos:line="1630" pos:column="58">&lt;&lt;</op:operator> <name pos:line="1630" pos:column="61">MARK_BOOKMARK</name><op:operator pos:line="1630" pos:column="74">)</op:operator><op:operator pos:line="1630" pos:column="75">)</op:operator></expr>)</condition><then pos:line="1630" pos:column="77">
						<expr_stmt><expr><call><name pos:line="1631" pos:column="49">(<type:modifier pos:line="1631" pos:column="50">*</type:modifier><name pos:line="1631" pos:column="51">_ppEditView</name>)<op:operator pos:line="1631" pos:column="63">-&gt;</op:operator><name pos:line="1631" pos:column="65">execute</name></name><argument_list pos:line="1631" pos:column="72">(<argument><expr><name pos:line="1631" pos:column="73">SCI_MARKERADD</name></expr></argument>, <argument><expr><name pos:line="1631" pos:column="88">lineNumber</name></expr></argument>, <argument><expr><name pos:line="1631" pos:column="100">MARK_BOOKMARK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				}</block></then></if>
				<break pos:line="1633" pos:column="33">break;</break> 
			}</block>
			
			</case><case pos:line="1636" pos:column="25">case <expr><name pos:line="1636" pos:column="30">ProcessMarkAllExt</name></expr>:
			<block pos:line="1637" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="1638" pos:column="33">(<type:modifier pos:line="1638" pos:column="34">*</type:modifier><name pos:line="1638" pos:column="35">_ppEditView</name>)<op:operator pos:line="1638" pos:column="47">-&gt;</op:operator><name pos:line="1638" pos:column="49">execute</name></name><argument_list pos:line="1638" pos:column="56">(<argument><expr><name pos:line="1638" pos:column="57">SCI_SETINDICATORCURRENT</name></expr></argument>,  <argument><expr><name pos:line="1638" pos:column="83">colourStyleID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1639" pos:column="33">(<type:modifier pos:line="1639" pos:column="34">*</type:modifier><name pos:line="1639" pos:column="35">_ppEditView</name>)<op:operator pos:line="1639" pos:column="47">-&gt;</op:operator><name pos:line="1639" pos:column="49">execute</name></name><argument_list pos:line="1639" pos:column="56">(<argument><expr><name pos:line="1639" pos:column="57">SCI_INDICATORFILLRANGE</name></expr></argument>,  <argument><expr><name pos:line="1639" pos:column="82">targetStart</name></expr></argument>, <argument><expr><name pos:line="1639" pos:column="95">foundTextLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="1640" pos:column="33">break;</break>
			}</block>

			</case><case pos:line="1643" pos:column="25">case <expr><name pos:line="1643" pos:column="30">ProcessMarkAll_2</name></expr>:
			<block pos:line="1644" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="1645" pos:column="33">(<type:modifier pos:line="1645" pos:column="34">*</type:modifier><name pos:line="1645" pos:column="35">_ppEditView</name>)<op:operator pos:line="1645" pos:column="47">-&gt;</op:operator><name pos:line="1645" pos:column="49">execute</name></name><argument_list pos:line="1645" pos:column="56">(<argument><expr><name pos:line="1645" pos:column="57">SCI_SETINDICATORCURRENT</name></expr></argument>,  <argument><expr><name pos:line="1645" pos:column="83">SCE_UNIVERSAL_FOUND_STYLE_SMART</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1646" pos:column="33">(<type:modifier pos:line="1646" pos:column="34">*</type:modifier><name pos:line="1646" pos:column="35">_ppEditView</name>)<op:operator pos:line="1646" pos:column="47">-&gt;</op:operator><name pos:line="1646" pos:column="49">execute</name></name><argument_list pos:line="1646" pos:column="56">(<argument><expr><name pos:line="1646" pos:column="57">SCI_INDICATORFILLRANGE</name></expr></argument>,  <argument><expr><name pos:line="1646" pos:column="82">targetStart</name></expr></argument>, <argument><expr><name pos:line="1646" pos:column="95">foundTextLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="1647" pos:column="33">break;</break>
			}</block>

			</case><case pos:line="1650" pos:column="25">case <expr><name pos:line="1650" pos:column="30">ProcessMarkAll_IncSearch</name></expr>:
			<block pos:line="1651" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="1652" pos:column="33">(<type:modifier pos:line="1652" pos:column="34">*</type:modifier><name pos:line="1652" pos:column="35">_ppEditView</name>)<op:operator pos:line="1652" pos:column="47">-&gt;</op:operator><name pos:line="1652" pos:column="49">execute</name></name><argument_list pos:line="1652" pos:column="56">(<argument><expr><name pos:line="1652" pos:column="57">SCI_SETINDICATORCURRENT</name></expr></argument>,  <argument><expr><name pos:line="1652" pos:column="83">SCE_UNIVERSAL_FOUND_STYLE_INC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1653" pos:column="33">(<type:modifier pos:line="1653" pos:column="34">*</type:modifier><name pos:line="1653" pos:column="35">_ppEditView</name>)<op:operator pos:line="1653" pos:column="47">-&gt;</op:operator><name pos:line="1653" pos:column="49">execute</name></name><argument_list pos:line="1653" pos:column="56">(<argument><expr><name pos:line="1653" pos:column="57">SCI_INDICATORFILLRANGE</name></expr></argument>,  <argument><expr><name pos:line="1653" pos:column="82">targetStart</name></expr></argument>, <argument><expr><name pos:line="1653" pos:column="95">foundTextLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="1654" pos:column="33">break;</break>
			}</block>

			</case><case pos:line="1657" pos:column="25">case <expr><name pos:line="1657" pos:column="30">ProcessCountAll</name></expr>: 
			<block pos:line="1658" pos:column="25">{
				<comment type="line" pos:line="1659" pos:column="33">//Nothing to do</comment>
				<break pos:line="1660" pos:column="33">break;</break>
			}</block>

			</case><default pos:line="1663" pos:column="25">default:
			<block pos:line="1664" pos:column="25">{
				<expr_stmt><expr><op:operator pos:line="1665" pos:column="33">delete</op:operator> <index pos:line="1665" pos:column="40">[]</index> <name pos:line="1665" pos:column="43">pTextFind</name></expr>;</expr_stmt>
				<expr_stmt><expr><op:operator pos:line="1666" pos:column="33">delete</op:operator> <index pos:line="1666" pos:column="40">[]</index> <name pos:line="1666" pos:column="43">pTextReplace</name></expr>;</expr_stmt>
				<return pos:line="1667" pos:column="33">return <expr><name pos:line="1667" pos:column="40">nbProcessed</name></expr>;</return>
			}</block>
			
		</default>}</block></switch>	
		<expr_stmt><expr><name pos:line="1671" pos:column="17">nbProcessed</name><op:operator pos:line="1671" pos:column="28">++</op:operator></expr>;</expr_stmt>

        <comment type="line" pos:line="1673" pos:column="9">// After the processing of the last string occurence the search loop should be stopped</comment>
        <comment type="line" pos:line="1674" pos:column="9">// This helps to avoid the endless replacement during the EOL ("$") searching</comment>
        <if pos:line="1675" pos:column="9">if<condition pos:line="1675" pos:column="11">( <expr><name pos:line="1675" pos:column="13">targetStart</name> <op:operator pos:line="1675" pos:column="25">+</op:operator> <name pos:line="1675" pos:column="27">foundTextLen</name> <op:operator pos:line="1675" pos:column="40">==</op:operator> <name pos:line="1675" pos:column="43">endRange</name></expr> )</condition><then pos:line="1675" pos:column="53">
            <break pos:line="1676" pos:column="13">break;</break></then></if>

		<if pos:line="1678" pos:column="17">if <condition pos:line="1678" pos:column="20">(<expr><op:operator pos:line="1678" pos:column="21">!</op:operator><name pos:line="1678" pos:column="22">foundTextLen</name> <op:operator pos:line="1678" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="1678" pos:column="38">!</op:operator><name pos:line="1678" pos:column="39">replaceDelta</name></expr>)</condition><then pos:line="1678" pos:column="52">
			<expr_stmt><expr><name pos:line="1679" pos:column="25">startRange</name> <op:operator pos:line="1679" pos:column="36">=</op:operator> <name pos:line="1679" pos:column="38">targetStart</name> <op:operator pos:line="1679" pos:column="50">+</op:operator> <name pos:line="1679" pos:column="52">foundTextLen</name> <op:operator pos:line="1679" pos:column="65">+</op:operator> <lit:literal type="number" pos:line="1679" pos:column="67">1</lit:literal></expr>;</expr_stmt></then> <comment type="line" pos:line="1679" pos:column="70">// find a empty string so just step forword</comment>
		<else pos:line="1680" pos:column="17">else
			<expr_stmt><expr><name pos:line="1681" pos:column="25">startRange</name> <op:operator pos:line="1681" pos:column="36">=</op:operator> <name pos:line="1681" pos:column="38">targetStart</name> <op:operator pos:line="1681" pos:column="50">+</op:operator> <name pos:line="1681" pos:column="52">foundTextLen</name> <op:operator pos:line="1681" pos:column="65">+</op:operator> <name pos:line="1681" pos:column="67">replaceDelta</name></expr>;</expr_stmt></else></if>		<comment type="line" pos:line="1681" pos:column="89">//search from result onwards</comment>
		<expr_stmt><expr><name pos:line="1682" pos:column="17">endRange</name> <op:operator pos:line="1682" pos:column="26">+=</op:operator> <name pos:line="1682" pos:column="29">replaceDelta</name></expr>;</expr_stmt>									<comment type="line" pos:line="1682" pos:column="113">//adjust end of range in case of replace</comment>

		<expr_stmt><expr><name pos:line="1684" pos:column="17">targetStart</name> <op:operator pos:line="1684" pos:column="29">=</op:operator> <call><name pos:line="1684" pos:column="31">(<type:modifier pos:line="1684" pos:column="32">*</type:modifier><name pos:line="1684" pos:column="33">_ppEditView</name>)<op:operator pos:line="1684" pos:column="45">-&gt;</op:operator><name pos:line="1684" pos:column="47">searchInTarget</name></name><argument_list pos:line="1684" pos:column="61">(<argument><expr><name pos:line="1684" pos:column="62">pTextFind</name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="73">stringSizeFind</name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="89">startRange</name></expr></argument>, <argument><expr><name pos:line="1684" pos:column="101">endRange</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></while>
	<expr_stmt><expr><op:operator pos:line="1686" pos:column="9">delete</op:operator> <index pos:line="1686" pos:column="16">[]</index> <name pos:line="1686" pos:column="19">pTextFind</name></expr>;</expr_stmt>
	<expr_stmt><expr><op:operator pos:line="1687" pos:column="9">delete</op:operator> <index pos:line="1687" pos:column="16">[]</index> <name pos:line="1687" pos:column="19">pTextReplace</name></expr>;</expr_stmt>

	<if pos:line="1689" pos:column="9">if <condition pos:line="1689" pos:column="12">(<expr><name pos:line="1689" pos:column="13">nbProcessed</name> <op:operator pos:line="1689" pos:column="25">&gt;</op:operator> <lit:literal type="number" pos:line="1689" pos:column="27">0</lit:literal> <op:operator pos:line="1689" pos:column="29">&amp;&amp;</op:operator> <name pos:line="1689" pos:column="32">op</name> <op:operator pos:line="1689" pos:column="35">==</op:operator> <name pos:line="1689" pos:column="38">ProcessFindAll</name></expr>)</condition><then pos:line="1689" pos:column="53"> 
		<expr_stmt><expr><call><name><name pos:line="1690" pos:column="17">_pFinder</name><op:operator pos:line="1690" pos:column="25">-&gt;</op:operator><name pos:line="1690" pos:column="27">addFileHitCount</name></name><argument_list pos:line="1690" pos:column="42">(<argument><expr><name pos:line="1690" pos:column="43">nbProcessed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<return pos:line="1692" pos:column="9">return <expr><name pos:line="1692" pos:column="16">nbProcessed</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1695" pos:column="1">void</name></type> <name><name pos:line="1695" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1695" pos:column="20">::</op:operator><name pos:line="1695" pos:column="22">replaceAllInOpenedDocs</name></name><parameter_list pos:line="1695" pos:column="44">()</parameter_list>
<block pos:line="1696" pos:column="1">{
	<expr_stmt><expr><call><name><op:operator pos:line="1697" pos:column="9">::</op:operator><name pos:line="1697" pos:column="11">SendMessage</name></name><argument_list pos:line="1697" pos:column="22">(<argument><expr><name pos:line="1697" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="1697" pos:column="33">WM_REPLACEALL_INOPENEDDOC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1697" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1697" pos:column="63">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1700" pos:column="1">void</name></type> <name><name pos:line="1700" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1700" pos:column="20">::</op:operator><name pos:line="1700" pos:column="22">findAllIn</name></name><parameter_list pos:line="1700" pos:column="31">(<param><decl><type><name pos:line="1700" pos:column="32">InWhat</name></type> <name pos:line="1700" pos:column="39">op</name></decl></param>)</parameter_list>
<block pos:line="1701" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1702" pos:column="9">bool</name></type> <name pos:line="1702" pos:column="14">doSetMarkingStruct</name> <init pos:line="1702" pos:column="33">= <expr><lit:literal type="boolean" pos:line="1702" pos:column="35">false</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="1703" pos:column="9">if <condition pos:line="1703" pos:column="12">(<expr><op:operator pos:line="1703" pos:column="13">!</op:operator><name pos:line="1703" pos:column="14">_pFinder</name></expr>)</condition><then pos:line="1703" pos:column="23">
	<block pos:line="1704" pos:column="9">{
		<expr_stmt><expr><name pos:line="1705" pos:column="17">_pFinder</name> <op:operator pos:line="1705" pos:column="26">=</op:operator> <op:operator pos:line="1705" pos:column="28">new</op:operator> <call><name pos:line="1705" pos:column="32">Finder</name><argument_list pos:line="1705" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1706" pos:column="17">_pFinder</name><op:operator pos:line="1706" pos:column="25">-&gt;</op:operator><name pos:line="1706" pos:column="27">init</name></name><argument_list pos:line="1706" pos:column="31">(<argument><expr><name pos:line="1706" pos:column="32">_hInst</name></expr></argument>, <argument><expr><name pos:line="1706" pos:column="40">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1706" pos:column="48">_ppEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="1708" pos:column="17">tTbData</name></type>	<name pos:line="1708" pos:column="25">data</name> <init pos:line="1708" pos:column="30">= <expr><block pos:line="1708" pos:column="32">{<expr><lit:literal type="number" pos:line="1708" pos:column="33">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="1709" pos:column="17">_pFinder</name><op:operator pos:line="1709" pos:column="25">-&gt;</op:operator><name pos:line="1709" pos:column="27">create</name></name><argument_list pos:line="1709" pos:column="33">(<argument><expr><op:operator pos:line="1709" pos:column="34">&amp;</op:operator><name pos:line="1709" pos:column="35">data</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1709" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1710" pos:column="17">::</op:operator><name pos:line="1710" pos:column="19">SendMessage</name></name><argument_list pos:line="1710" pos:column="30">(<argument><expr><name pos:line="1710" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="1710" pos:column="41">NPPM_MODELESSDIALOG</name></expr></argument>, <argument><expr><name pos:line="1710" pos:column="62">MODELESSDIALOGREMOVE</name></expr></argument>, <argument><expr><op:operator pos:line="1710" pos:column="84">(</op:operator><name pos:line="1710" pos:column="85">WPARAM</name><op:operator pos:line="1710" pos:column="91">)</op:operator><call><name><name pos:line="1710" pos:column="92">_pFinder</name><op:operator pos:line="1710" pos:column="100">-&gt;</op:operator><name pos:line="1710" pos:column="102">getHSelf</name></name><argument_list pos:line="1710" pos:column="110">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="1711" pos:column="17">// define the default docking behaviour</comment>
		<expr_stmt><expr><name><name pos:line="1712" pos:column="17">data</name><op:operator pos:line="1712" pos:column="21">.</op:operator><name pos:line="1712" pos:column="22">uMask</name></name> <op:operator pos:line="1712" pos:column="28">=</op:operator> <name pos:line="1712" pos:column="30">DWS_DF_CONT_BOTTOM</name> <op:operator pos:line="1712" pos:column="49">|</op:operator> <name pos:line="1712" pos:column="51">DWS_ICONTAB</name> <op:operator pos:line="1712" pos:column="63">|</op:operator> <name pos:line="1712" pos:column="65">DWS_ADDINFO</name></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1713" pos:column="17">data</name><op:operator pos:line="1713" pos:column="21">.</op:operator><name pos:line="1713" pos:column="22">hIconTab</name></name> <op:operator pos:line="1713" pos:column="31">=</op:operator> <op:operator pos:line="1713" pos:column="33">(</op:operator><name pos:line="1713" pos:column="34">HICON</name><op:operator pos:line="1713" pos:column="39">)</op:operator><call><name><op:operator pos:line="1713" pos:column="40">::</op:operator><name pos:line="1713" pos:column="42">LoadImage</name></name><argument_list pos:line="1713" pos:column="51">(<argument><expr><name pos:line="1713" pos:column="52">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="1713" pos:column="60">MAKEINTRESOURCE</name><argument_list pos:line="1713" pos:column="75">(<argument><expr><name pos:line="1713" pos:column="76">IDI_FIND_RESULT_ICON</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1713" pos:column="99">IMAGE_ICON</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1713" pos:column="111">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1713" pos:column="114">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1713" pos:column="117">LR_LOADMAP3DCOLORS</name> <op:operator pos:line="1713" pos:column="136">|</op:operator> <name pos:line="1713" pos:column="138">LR_LOADTRANSPARENT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="1714" pos:column="17">data</name><op:operator pos:line="1714" pos:column="21">.</op:operator><name pos:line="1714" pos:column="22">pszAddInfo</name></name> <op:operator pos:line="1714" pos:column="33">=</op:operator> <name pos:line="1714" pos:column="35">_findAllResultStr</name></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="1716" pos:column="17">data</name><op:operator pos:line="1716" pos:column="21">.</op:operator><name pos:line="1716" pos:column="22">pszModuleName</name></name> <op:operator pos:line="1716" pos:column="36">=</op:operator> <call><name pos:line="1716" pos:column="38">TEXT</name><argument_list pos:line="1716" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="1716" pos:column="43">"dummy"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="1718" pos:column="17">// the dlgDlg should be the index of funcItem where the current function pointer is</comment>
		<comment type="line" pos:line="1719" pos:column="17">// in this case is DOCKABLE_DEMO_INDEX</comment>
		<expr_stmt><expr><name><name pos:line="1720" pos:column="17">data</name><op:operator pos:line="1720" pos:column="21">.</op:operator><name pos:line="1720" pos:column="22">dlgID</name></name> <op:operator pos:line="1720" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="1720" pos:column="30">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1721" pos:column="17">::</op:operator><name pos:line="1721" pos:column="19">SendMessage</name></name><argument_list pos:line="1721" pos:column="30">(<argument><expr><name pos:line="1721" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="1721" pos:column="41">NPPM_DMMREGASDCKDLG</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1721" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1721" pos:column="65">(</op:operator><name pos:line="1721" pos:column="66">LPARAM</name><op:operator pos:line="1721" pos:column="72">)</op:operator><op:operator pos:line="1721" pos:column="73">&amp;</op:operator><name pos:line="1721" pos:column="74">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="1723" pos:column="17">_pFinder</name><op:operator pos:line="1723" pos:column="25">-&gt;</op:operator><name pos:line="1723" pos:column="27">_scintView</name><op:operator pos:line="1723" pos:column="37">.</op:operator><name pos:line="1723" pos:column="38">init</name></name><argument_list pos:line="1723" pos:column="42">(<argument><expr><name pos:line="1723" pos:column="43">_hInst</name></expr></argument>, <argument><expr><call><name><name pos:line="1723" pos:column="51">_pFinder</name><op:operator pos:line="1723" pos:column="59">-&gt;</op:operator><name pos:line="1723" pos:column="61">getHSelf</name></name><argument_list pos:line="1723" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="1725" pos:column="17">// Subclass the ScintillaEditView for the Finder (Scintilla doesn't notify all key presses)</comment>
		<expr_stmt><expr><name pos:line="1726" pos:column="17">originalFinderProc</name> <op:operator pos:line="1726" pos:column="36">=</op:operator> <call><name pos:line="1726" pos:column="38">SetWindowLongPtr</name><argument_list pos:line="1726" pos:column="54">(<argument><expr><call><name><name pos:line="1726" pos:column="55">_pFinder</name><op:operator pos:line="1726" pos:column="63">-&gt;</op:operator><name pos:line="1726" pos:column="65">_scintView</name><op:operator pos:line="1726" pos:column="75">.</op:operator><name pos:line="1726" pos:column="76">getHSelf</name></name><argument_list pos:line="1726" pos:column="84">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1726" pos:column="88">GWLP_WNDPROC</name></expr></argument>, <argument><expr><op:operator pos:line="1726" pos:column="102">(</op:operator><name pos:line="1726" pos:column="103">LONG_PTR</name><op:operator pos:line="1726" pos:column="111">)</op:operator><name pos:line="1726" pos:column="112">finderProc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="1728" pos:column="17">_pFinder</name><op:operator pos:line="1728" pos:column="25">-&gt;</op:operator><name pos:line="1728" pos:column="27">setFinderReadOnly</name></name><argument_list pos:line="1728" pos:column="44">(<argument><expr><lit:literal type="boolean" pos:line="1728" pos:column="45">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1729" pos:column="17">_pFinder</name><op:operator pos:line="1729" pos:column="25">-&gt;</op:operator><name pos:line="1729" pos:column="27">_scintView</name><op:operator pos:line="1729" pos:column="37">.</op:operator><name pos:line="1729" pos:column="38">execute</name></name><argument_list pos:line="1729" pos:column="45">(<argument><expr><name pos:line="1729" pos:column="46">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><name pos:line="1729" pos:column="63">SC_CP_UTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1730" pos:column="17">_pFinder</name><op:operator pos:line="1730" pos:column="25">-&gt;</op:operator><name pos:line="1730" pos:column="27">_scintView</name><op:operator pos:line="1730" pos:column="37">.</op:operator><name pos:line="1730" pos:column="38">execute</name></name><argument_list pos:line="1730" pos:column="45">(<argument><expr><name pos:line="1730" pos:column="46">SCI_USEPOPUP</name></expr></argument>, <argument><expr><name pos:line="1730" pos:column="60">FALSE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1731" pos:column="17">_pFinder</name><op:operator pos:line="1731" pos:column="25">-&gt;</op:operator><name pos:line="1731" pos:column="27">_scintView</name><op:operator pos:line="1731" pos:column="37">.</op:operator><name pos:line="1731" pos:column="38">execute</name></name><argument_list pos:line="1731" pos:column="45">(<argument><expr><name pos:line="1731" pos:column="46">SCI_SETUNDOCOLLECTION</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1731" pos:column="69">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="1731" pos:column="81">//dont store any undo information</comment>
		<expr_stmt><expr><call><name><name pos:line="1732" pos:column="17">_pFinder</name><op:operator pos:line="1732" pos:column="25">-&gt;</op:operator><name pos:line="1732" pos:column="27">_scintView</name><op:operator pos:line="1732" pos:column="37">.</op:operator><name pos:line="1732" pos:column="38">execute</name></name><argument_list pos:line="1732" pos:column="45">(<argument><expr><name pos:line="1732" pos:column="46">SCI_SETCARETLINEVISIBLE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1732" pos:column="71">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1733" pos:column="17">_pFinder</name><op:operator pos:line="1733" pos:column="25">-&gt;</op:operator><name pos:line="1733" pos:column="27">_scintView</name><op:operator pos:line="1733" pos:column="37">.</op:operator><name pos:line="1733" pos:column="38">execute</name></name><argument_list pos:line="1733" pos:column="45">(<argument><expr><name pos:line="1733" pos:column="46">SCI_SETCARETWIDTH</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1733" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1734" pos:column="17">_pFinder</name><op:operator pos:line="1734" pos:column="25">-&gt;</op:operator><name pos:line="1734" pos:column="27">_scintView</name><op:operator pos:line="1734" pos:column="37">.</op:operator><name pos:line="1734" pos:column="38">showMargin</name></name><argument_list pos:line="1734" pos:column="48">(<argument><expr><name><name pos:line="1734" pos:column="49">ScintillaEditView</name><op:operator pos:line="1734" pos:column="66">::</op:operator><name pos:line="1734" pos:column="68">_SC_MARGE_FOLDER</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1734" pos:column="86">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="1736" pos:column="17">// get the width of FindDlg</comment>
		<decl_stmt><decl><type><name pos:line="1737" pos:column="17">RECT</name></type> <name pos:line="1737" pos:column="22">findRect</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1738" pos:column="17">::</op:operator><name pos:line="1738" pos:column="19">GetWindowRect</name></name><argument_list pos:line="1738" pos:column="32">(<argument><expr><call><name><name pos:line="1738" pos:column="33">_pFinder</name><op:operator pos:line="1738" pos:column="41">-&gt;</op:operator><name pos:line="1738" pos:column="43">getHSelf</name></name><argument_list pos:line="1738" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1738" pos:column="55">&amp;</op:operator><name pos:line="1738" pos:column="56">findRect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="1740" pos:column="17">// overwrite some default settings</comment>
		<expr_stmt><expr><call><name><name pos:line="1741" pos:column="17">_pFinder</name><op:operator pos:line="1741" pos:column="25">-&gt;</op:operator><name pos:line="1741" pos:column="27">_scintView</name><op:operator pos:line="1741" pos:column="37">.</op:operator><name pos:line="1741" pos:column="38">showMargin</name></name><argument_list pos:line="1741" pos:column="48">(<argument><expr><name><name pos:line="1741" pos:column="49">ScintillaEditView</name><op:operator pos:line="1741" pos:column="66">::</op:operator><name pos:line="1741" pos:column="68">_SC_MARGE_SYBOLE</name></name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1741" pos:column="86">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1742" pos:column="17">_pFinder</name><op:operator pos:line="1742" pos:column="25">-&gt;</op:operator><name pos:line="1742" pos:column="27">_scintView</name><op:operator pos:line="1742" pos:column="37">.</op:operator><name pos:line="1742" pos:column="38">setMakerStyle</name></name><argument_list pos:line="1742" pos:column="51">(<argument><expr><name pos:line="1742" pos:column="52">FOLDER_STYLE_SIMPLE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="1744" pos:column="17">_pFinder</name><op:operator pos:line="1744" pos:column="25">-&gt;</op:operator><name pos:line="1744" pos:column="27">_scintView</name><op:operator pos:line="1744" pos:column="37">.</op:operator><name pos:line="1744" pos:column="38">display</name></name><argument_list pos:line="1744" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1745" pos:column="17">_pFinder</name><op:operator pos:line="1745" pos:column="25">-&gt;</op:operator><name pos:line="1745" pos:column="27">display</name></name><argument_list pos:line="1745" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1746" pos:column="17">doSetMarkingStruct</name> <op:operator pos:line="1746" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1746" pos:column="38">true</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="1748" pos:column="9">_pFinder</name><op:operator pos:line="1748" pos:column="17">-&gt;</op:operator><name pos:line="1748" pos:column="19">setFinderStyle</name></name><argument_list pos:line="1748" pos:column="33">()</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1750" pos:column="9">if <condition pos:line="1750" pos:column="12">(<expr><name pos:line="1750" pos:column="13">doSetMarkingStruct</name></expr>)</condition><then pos:line="1750" pos:column="32">
	<block pos:line="1751" pos:column="9">{
		<comment type="line" pos:line="1752" pos:column="17">// Send the address of _MarkingsStruct to the lexer</comment>
		<decl_stmt><decl><type><name pos:line="1753" pos:column="17">char</name></type> <name><name pos:line="1753" pos:column="22">ptrword</name><index pos:line="1753" pos:column="29">[<expr><sizeof pos:line="1753" pos:column="30">sizeof<argument_list pos:line="1753" pos:column="36">(<argument><expr><name pos:line="1753" pos:column="37">void</name><op:operator pos:line="1753" pos:column="41">*</op:operator></expr></argument>)</argument_list></sizeof><op:operator pos:line="1753" pos:column="43">*</op:operator><lit:literal type="number" pos:line="1753" pos:column="44">2</lit:literal><op:operator pos:line="1753" pos:column="45">+</op:operator><lit:literal type="number" pos:line="1753" pos:column="46">1</lit:literal></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="1754" pos:column="17">sprintf</name><argument_list pos:line="1754" pos:column="24">(<argument><expr><name pos:line="1754" pos:column="25">ptrword</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1754" pos:column="34">"%p"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1754" pos:column="40">&amp;</op:operator><name><name pos:line="1754" pos:column="41">_pFinder</name><op:operator pos:line="1754" pos:column="49">-&gt;</op:operator><name pos:line="1754" pos:column="51">_MarkingsStruct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="1755" pos:column="17">_pFinder</name><op:operator pos:line="1755" pos:column="25">-&gt;</op:operator><name pos:line="1755" pos:column="27">_scintView</name><op:operator pos:line="1755" pos:column="37">.</op:operator><name pos:line="1755" pos:column="38">execute</name></name><argument_list pos:line="1755" pos:column="45">(<argument><expr><name pos:line="1755" pos:column="46">SCI_SETPROPERTY</name></expr></argument>, <argument><expr><op:operator pos:line="1755" pos:column="63">(</op:operator><name pos:line="1755" pos:column="64">WPARAM</name><op:operator pos:line="1755" pos:column="70">)</op:operator><lit:literal type="string" pos:line="1755" pos:column="71">"@MarkingsStruct"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1755" pos:column="90">(</op:operator><name pos:line="1755" pos:column="91">LPARAM</name><op:operator pos:line="1755" pos:column="97">)</op:operator><name pos:line="1755" pos:column="98">ptrword</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<expr_stmt><expr><call><name><op:operator pos:line="1758" pos:column="9">::</op:operator><name pos:line="1758" pos:column="11">SendMessage</name></name><argument_list pos:line="1758" pos:column="22">(<argument><expr><call><name><name pos:line="1758" pos:column="23">_pFinder</name><op:operator pos:line="1758" pos:column="31">-&gt;</op:operator><name pos:line="1758" pos:column="33">getHSelf</name></name><argument_list pos:line="1758" pos:column="41">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1758" pos:column="45">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1758" pos:column="54">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1758" pos:column="57">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1760" pos:column="9">int</name></type> <name pos:line="1760" pos:column="13">cmdid</name> <init pos:line="1760" pos:column="19">= <expr><lit:literal type="number" pos:line="1760" pos:column="21">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="1761" pos:column="9">if <condition pos:line="1761" pos:column="12">(<expr><name pos:line="1761" pos:column="13">op</name> <op:operator pos:line="1761" pos:column="16">==</op:operator> <name pos:line="1761" pos:column="19">ALL_OPEN_DOCS</name></expr>)</condition><then pos:line="1761" pos:column="33">
		<expr_stmt><expr><name pos:line="1762" pos:column="17">cmdid</name> <op:operator pos:line="1762" pos:column="23">=</op:operator> <name pos:line="1762" pos:column="25">WM_FINDALL_INOPENEDDOC</name></expr>;</expr_stmt></then>
	<else pos:line="1763" pos:column="9">else <if pos:line="1763" pos:column="14">if <condition pos:line="1763" pos:column="17">(<expr><name pos:line="1763" pos:column="18">op</name> <op:operator pos:line="1763" pos:column="21">==</op:operator> <name pos:line="1763" pos:column="24">FILES_IN_DIR</name></expr>)</condition><then pos:line="1763" pos:column="37">
		<expr_stmt><expr><name pos:line="1764" pos:column="17">cmdid</name> <op:operator pos:line="1764" pos:column="23">=</op:operator> <name pos:line="1764" pos:column="25">WM_FINDINFILES</name></expr>;</expr_stmt></then>
	<else pos:line="1765" pos:column="9">else <if pos:line="1765" pos:column="14">if <condition pos:line="1765" pos:column="17">(<expr><name pos:line="1765" pos:column="18">op</name> <op:operator pos:line="1765" pos:column="21">==</op:operator> <name pos:line="1765" pos:column="24">CURRENT_DOC</name></expr>)</condition><then pos:line="1765" pos:column="36">
		<expr_stmt><expr><name pos:line="1766" pos:column="17">cmdid</name> <op:operator pos:line="1766" pos:column="23">=</op:operator> <name pos:line="1766" pos:column="25">WM_FINDALL_INCURRENTDOC</name></expr>;</expr_stmt></then></if></else></if></else></if>

	<if pos:line="1768" pos:column="9">if <condition pos:line="1768" pos:column="12">(<expr><op:operator pos:line="1768" pos:column="13">!</op:operator><name pos:line="1768" pos:column="14">cmdid</name></expr>)</condition><then pos:line="1768" pos:column="20"> <return pos:line="1768" pos:column="21">return;</return></then></if>

	<if pos:line="1770" pos:column="9">if <condition pos:line="1770" pos:column="12">(<expr><call><name><op:operator pos:line="1770" pos:column="13">::</op:operator><name pos:line="1770" pos:column="15">SendMessage</name></name><argument_list pos:line="1770" pos:column="26">(<argument><expr><name pos:line="1770" pos:column="27">_hParent</name></expr></argument>, <argument><expr><name pos:line="1770" pos:column="37">cmdid</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1770" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1770" pos:column="47">0</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1770" pos:column="50">
	<block pos:line="1771" pos:column="9">{
		<if pos:line="1772" pos:column="17">if<condition pos:line="1772" pos:column="19">(<expr><name pos:line="1772" pos:column="20">_findAllResult</name> <op:operator pos:line="1772" pos:column="35">==</op:operator> <lit:literal type="number" pos:line="1772" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="1772" pos:column="40">
			<expr_stmt><expr><call><name pos:line="1773" pos:column="25">wsprintf</name><argument_list pos:line="1773" pos:column="33">(<argument><expr><name pos:line="1773" pos:column="34">_findAllResultStr</name></expr></argument>, <argument><expr><call><name pos:line="1773" pos:column="53">TEXT</name><argument_list pos:line="1773" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="1773" pos:column="58">"1 hit"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="1774" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="1775" pos:column="25">wsprintf</name><argument_list pos:line="1775" pos:column="33">(<argument><expr><name pos:line="1775" pos:column="34">_findAllResultStr</name></expr></argument>, <argument><expr><call><name pos:line="1775" pos:column="53">TEXT</name><argument_list pos:line="1775" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="1775" pos:column="58">"%d hits"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1775" pos:column="70">_findAllResult</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		<if pos:line="1776" pos:column="17">if <condition pos:line="1776" pos:column="20">(<expr><name pos:line="1776" pos:column="21">_findAllResult</name></expr>)</condition><then pos:line="1776" pos:column="36"> 
		<block pos:line="1777" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1778" pos:column="25">focusOnFinder</name><argument_list pos:line="1778" pos:column="38">()</argument_list></call></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="1780" pos:column="17">else
			<expr_stmt><expr><call><name pos:line="1781" pos:column="25">getFocus</name><argument_list pos:line="1781" pos:column="33">()</argument_list></call></expr>;</expr_stmt></else></if> <comment type="line" pos:line="1781" pos:column="37">// no hits</comment>
	}</block></then>
	<else pos:line="1783" pos:column="9">else <comment type="line" pos:line="1783" pos:column="14">// error - search folder doesn't exist</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="1784" pos:column="17">::</op:operator><name pos:line="1784" pos:column="19">SendMessage</name></name><argument_list pos:line="1784" pos:column="30">(<argument><expr><name pos:line="1784" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1784" pos:column="39">WM_NEXTDLGCTL</name></expr></argument>, <argument><expr><op:operator pos:line="1784" pos:column="54">(</op:operator><name pos:line="1784" pos:column="55">WPARAM</name><op:operator pos:line="1784" pos:column="61">)</op:operator><call><name><op:operator pos:line="1784" pos:column="62">::</op:operator><name pos:line="1784" pos:column="64">GetDlgItem</name></name><argument_list pos:line="1784" pos:column="74">(<argument><expr><name pos:line="1784" pos:column="75">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1784" pos:column="83">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1784" pos:column="111">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
}</block></function>


<function><type><name pos:line="1788" pos:column="1">void</name></type> <name><name pos:line="1788" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1788" pos:column="20">::</op:operator><name pos:line="1788" pos:column="22">setSearchText</name></name><parameter_list pos:line="1788" pos:column="35">(<param><decl><type><name pos:line="1788" pos:column="36">TCHAR</name> <type:modifier pos:line="1788" pos:column="42">*</type:modifier></type> <name pos:line="1788" pos:column="44">txt2find</name></decl></param>)</parameter_list> <block pos:line="1788" pos:column="54">{
	<decl_stmt><decl><type><name pos:line="1789" pos:column="9">HWND</name></type> <name pos:line="1789" pos:column="14">hCombo</name> <init pos:line="1789" pos:column="21">= <expr><call><name><op:operator pos:line="1789" pos:column="23">::</op:operator><name pos:line="1789" pos:column="25">GetDlgItem</name></name><argument_list pos:line="1789" pos:column="35">(<argument><expr><name pos:line="1789" pos:column="36">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1789" pos:column="44">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1790" pos:column="9">if <condition pos:line="1790" pos:column="12">(<expr><name pos:line="1790" pos:column="13">txt2find</name> <op:operator pos:line="1790" pos:column="22">&amp;&amp;</op:operator> <name><name pos:line="1790" pos:column="25">txt2find</name><index pos:line="1790" pos:column="33">[<expr><lit:literal type="number" pos:line="1790" pos:column="34">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1790" pos:column="37">
	<block pos:line="1791" pos:column="9">{
		<comment type="line" pos:line="1792" pos:column="17">// We got a valid search string</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="1793" pos:column="17">::</op:operator><name pos:line="1793" pos:column="19">SendMessage</name></name><argument_list pos:line="1793" pos:column="30">(<argument><expr><name pos:line="1793" pos:column="31">hCombo</name></expr></argument>, <argument><expr><name pos:line="1793" pos:column="39">CB_SETCURSEL</name></expr></argument>, <argument><expr><op:operator pos:line="1793" pos:column="53">(</op:operator><name pos:line="1793" pos:column="54">WPARAM</name><op:operator pos:line="1793" pos:column="60">)</op:operator><op:operator pos:line="1793" pos:column="61">-</op:operator><lit:literal type="number" pos:line="1793" pos:column="62">1</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1793" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1793" pos:column="69">// remove selection - to allow using down arrow to get to last searched word</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="1794" pos:column="17">::</op:operator><name pos:line="1794" pos:column="19">SetDlgItemText</name></name><argument_list pos:line="1794" pos:column="33">(<argument><expr><name pos:line="1794" pos:column="34">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1794" pos:column="42">IDFINDWHAT</name></expr></argument>, <argument><expr><name pos:line="1794" pos:column="54">txt2find</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="1796" pos:column="9">::</op:operator><name pos:line="1796" pos:column="11">SendMessage</name></name><argument_list pos:line="1796" pos:column="22">(<argument><expr><name pos:line="1796" pos:column="23">hCombo</name></expr></argument>, <argument><expr><name pos:line="1796" pos:column="31">CB_SETEDITSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1796" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="1796" pos:column="49">MAKELPARAM</name><argument_list pos:line="1796" pos:column="59">(<argument><expr><lit:literal type="number" pos:line="1796" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1796" pos:column="63">-</op:operator><lit:literal type="number" pos:line="1796" pos:column="64">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="1796" pos:column="69">// select all text - fast edit</comment>
}</block></function>

<function><type><name pos:line="1799" pos:column="1">void</name></type> <name><name pos:line="1799" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1799" pos:column="20">::</op:operator><name pos:line="1799" pos:column="22">enableReplaceFunc</name></name><parameter_list pos:line="1799" pos:column="39">(<param><decl><type><name pos:line="1799" pos:column="40">bool</name></type> <name pos:line="1799" pos:column="45">isEnable</name></decl></param>)</parameter_list> 
<block pos:line="1800" pos:column="1">{
	<expr_stmt><expr><name pos:line="1801" pos:column="9">_currentStatus</name> <op:operator pos:line="1801" pos:column="24">=</op:operator> <name pos:line="1801" pos:column="26">isEnable</name><op:operator pos:line="1801" pos:column="34">?</op:operator><name pos:line="1801" pos:column="35">REPLACE_DLG</name><op:operator pos:line="1801" pos:column="46">:</op:operator><name pos:line="1801" pos:column="47">FIND_DLG</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="1802" pos:column="9">int</name></type> <name pos:line="1802" pos:column="13">hideOrShow</name> <init pos:line="1802" pos:column="24">= <expr><name pos:line="1802" pos:column="26">isEnable</name><op:operator pos:line="1802" pos:column="34">?</op:operator><name pos:line="1802" pos:column="35">SW_SHOW</name><op:operator pos:line="1802" pos:column="42">:</op:operator><name pos:line="1802" pos:column="43">SW_HIDE</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1803" pos:column="9">RECT</name> <type:modifier pos:line="1803" pos:column="14">*</type:modifier></type><name pos:line="1803" pos:column="15">pClosePos</name> <init pos:line="1803" pos:column="25">= <expr><name pos:line="1803" pos:column="27">isEnable</name><op:operator pos:line="1803" pos:column="35">?</op:operator><op:operator pos:line="1803" pos:column="36">&amp;</op:operator><name pos:line="1803" pos:column="37">_replaceClosePos</name><op:operator pos:line="1803" pos:column="53">:</op:operator><op:operator pos:line="1803" pos:column="54">&amp;</op:operator><name pos:line="1803" pos:column="55">_findClosePos</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="1805" pos:column="9">enableFindInFilesControls</name><argument_list pos:line="1805" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="1805" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="1806" pos:column="9">enableMarkAllControls</name><argument_list pos:line="1806" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="1806" pos:column="31">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<comment type="line" pos:line="1807" pos:column="9">// replace controls</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="1808" pos:column="9">::</op:operator><name pos:line="1808" pos:column="11">ShowWindow</name></name><argument_list pos:line="1808" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1808" pos:column="22">::</op:operator><name pos:line="1808" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1808" pos:column="34">(<argument><expr><name pos:line="1808" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1808" pos:column="43">ID_STATICTEXT_REPLACE</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1808" pos:column="66">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1809" pos:column="9">::</op:operator><name pos:line="1809" pos:column="11">ShowWindow</name></name><argument_list pos:line="1809" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1809" pos:column="22">::</op:operator><name pos:line="1809" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1809" pos:column="34">(<argument><expr><name pos:line="1809" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1809" pos:column="43">IDREPLACE</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1809" pos:column="54">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1810" pos:column="9">::</op:operator><name pos:line="1810" pos:column="11">ShowWindow</name></name><argument_list pos:line="1810" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1810" pos:column="22">::</op:operator><name pos:line="1810" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1810" pos:column="34">(<argument><expr><name pos:line="1810" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1810" pos:column="43">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1810" pos:column="58">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1811" pos:column="9">::</op:operator><name pos:line="1811" pos:column="11">ShowWindow</name></name><argument_list pos:line="1811" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1811" pos:column="22">::</op:operator><name pos:line="1811" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1811" pos:column="34">(<argument><expr><name pos:line="1811" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1811" pos:column="43">IDREPLACEALL</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1811" pos:column="57">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1812" pos:column="9">::</op:operator><name pos:line="1812" pos:column="11">ShowWindow</name></name><argument_list pos:line="1812" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1812" pos:column="22">::</op:operator><name pos:line="1812" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1812" pos:column="34">(<argument><expr><name pos:line="1812" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1812" pos:column="43">IDREPLACEINSEL</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1812" pos:column="59">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1813" pos:column="9">::</op:operator><name pos:line="1813" pos:column="11">ShowWindow</name></name><argument_list pos:line="1813" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1813" pos:column="22">::</op:operator><name pos:line="1813" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1813" pos:column="34">(<argument><expr><name pos:line="1813" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1813" pos:column="43">IDC_REPLACE_OPENEDFILES</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1813" pos:column="68">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1814" pos:column="9">::</op:operator><name pos:line="1814" pos:column="11">ShowWindow</name></name><argument_list pos:line="1814" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1814" pos:column="22">::</op:operator><name pos:line="1814" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1814" pos:column="34">(<argument><expr><name pos:line="1814" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1814" pos:column="43">IDC_REPLACEINSELECTION</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1814" pos:column="67">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1815" pos:column="9">::</op:operator><name pos:line="1815" pos:column="11">ShowWindow</name></name><argument_list pos:line="1815" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1815" pos:column="22">::</op:operator><name pos:line="1815" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1815" pos:column="34">(<argument><expr><name pos:line="1815" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1815" pos:column="43">IDC_IN_SELECTION_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1815" pos:column="68">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1817" pos:column="9">// find controls</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="1818" pos:column="9">::</op:operator><name pos:line="1818" pos:column="11">ShowWindow</name></name><argument_list pos:line="1818" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1818" pos:column="22">::</op:operator><name pos:line="1818" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1818" pos:column="34">(<argument><expr><name pos:line="1818" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1818" pos:column="43">IDC_FINDALL_OPENEDFILES</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1818" pos:column="69">!</op:operator><name pos:line="1818" pos:column="70">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1819" pos:column="9">::</op:operator><name pos:line="1819" pos:column="11">ShowWindow</name></name><argument_list pos:line="1819" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1819" pos:column="22">::</op:operator><name pos:line="1819" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1819" pos:column="34">(<argument><expr><name pos:line="1819" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1819" pos:column="43">IDCCOUNTALL</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><op:operator pos:line="1819" pos:column="56">!</op:operator><name pos:line="1819" pos:column="57">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1820" pos:column="9">::</op:operator><name pos:line="1820" pos:column="11">ShowWindow</name></name><argument_list pos:line="1820" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1820" pos:column="22">::</op:operator><name pos:line="1820" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1820" pos:column="34">(<argument><expr><name pos:line="1820" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1820" pos:column="43">IDC_FINDALL_CURRENTFILE</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><op:operator pos:line="1820" pos:column="68">!</op:operator><name pos:line="1820" pos:column="69">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="1822" pos:column="9">gotoCorrectTab</name><argument_list pos:line="1822" pos:column="23">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="1824" pos:column="9">::</op:operator><name pos:line="1824" pos:column="11">MoveWindow</name></name><argument_list pos:line="1824" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1824" pos:column="22">::</op:operator><name pos:line="1824" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1824" pos:column="34">(<argument><expr><name pos:line="1824" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1824" pos:column="43">IDCANCEL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="1824" pos:column="54">pClosePos</name><op:operator pos:line="1824" pos:column="63">-&gt;</op:operator><name pos:line="1824" pos:column="65">left</name></name></expr></argument>, <argument><expr><name><name pos:line="1824" pos:column="71">pClosePos</name><op:operator pos:line="1824" pos:column="80">-&gt;</op:operator><name pos:line="1824" pos:column="82">top</name></name></expr></argument>, <argument><expr><name><name pos:line="1824" pos:column="87">pClosePos</name><op:operator pos:line="1824" pos:column="96">-&gt;</op:operator><name pos:line="1824" pos:column="98">right</name></name></expr></argument>, <argument><expr><name><name pos:line="1824" pos:column="105">pClosePos</name><op:operator pos:line="1824" pos:column="114">-&gt;</op:operator><name pos:line="1824" pos:column="116">bottom</name></name></expr></argument>, <argument><expr><name pos:line="1824" pos:column="124">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="1826" pos:column="9">TCHAR</name></type> <name><name pos:line="1826" pos:column="15">label</name><index pos:line="1826" pos:column="20">[<expr><name pos:line="1826" pos:column="21">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="1827" pos:column="9">_tab</name><op:operator pos:line="1827" pos:column="13">.</op:operator><name pos:line="1827" pos:column="14">getCurrentTitle</name></name><argument_list pos:line="1827" pos:column="29">(<argument><expr><name pos:line="1827" pos:column="30">label</name></expr></argument>, <argument><expr><name pos:line="1827" pos:column="37">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1828" pos:column="9">::</op:operator><name pos:line="1828" pos:column="11">SetWindowText</name></name><argument_list pos:line="1828" pos:column="24">(<argument><expr><name pos:line="1828" pos:column="25">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1828" pos:column="33">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="1830" pos:column="9">setDefaultButton</name><argument_list pos:line="1830" pos:column="25">(<argument><expr><name pos:line="1830" pos:column="26">IDOK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1833" pos:column="1">void</name></type> <name><name pos:line="1833" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1833" pos:column="20">::</op:operator><name pos:line="1833" pos:column="22">enableMarkAllControls</name></name><parameter_list pos:line="1833" pos:column="43">(<param><decl><type><name pos:line="1833" pos:column="44">bool</name></type> <name pos:line="1833" pos:column="49">isEnable</name></decl></param>)</parameter_list>
<block pos:line="1834" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1835" pos:column="9">int</name></type> <name pos:line="1835" pos:column="13">hideOrShow</name> <init pos:line="1835" pos:column="24">= <expr><name pos:line="1835" pos:column="26">isEnable</name><op:operator pos:line="1835" pos:column="34">?</op:operator><name pos:line="1835" pos:column="35">SW_SHOW</name><op:operator pos:line="1835" pos:column="42">:</op:operator><name pos:line="1835" pos:column="43">SW_HIDE</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1836" pos:column="9">::</op:operator><name pos:line="1836" pos:column="11">ShowWindow</name></name><argument_list pos:line="1836" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1836" pos:column="22">::</op:operator><name pos:line="1836" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1836" pos:column="34">(<argument><expr><name pos:line="1836" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1836" pos:column="43">IDCMARKALL</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1836" pos:column="55">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1837" pos:column="9">::</op:operator><name pos:line="1837" pos:column="11">ShowWindow</name></name><argument_list pos:line="1837" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1837" pos:column="22">::</op:operator><name pos:line="1837" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1837" pos:column="34">(<argument><expr><name pos:line="1837" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1837" pos:column="43">IDC_MARKLINE_CHECK</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1837" pos:column="63">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1838" pos:column="9">::</op:operator><name pos:line="1838" pos:column="11">ShowWindow</name></name><argument_list pos:line="1838" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1838" pos:column="22">::</op:operator><name pos:line="1838" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1838" pos:column="34">(<argument><expr><name pos:line="1838" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1838" pos:column="43">IDC_PURGE_CHECK</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1838" pos:column="60">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1839" pos:column="9">::</op:operator><name pos:line="1839" pos:column="11">ShowWindow</name></name><argument_list pos:line="1839" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1839" pos:column="22">::</op:operator><name pos:line="1839" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1839" pos:column="34">(<argument><expr><name pos:line="1839" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1839" pos:column="43">IDC_CLEAR_ALL</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="1839" pos:column="58">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1840" pos:column="9">::</op:operator><name pos:line="1840" pos:column="11">ShowWindow</name></name><argument_list pos:line="1840" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1840" pos:column="22">::</op:operator><name pos:line="1840" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1840" pos:column="34">(<argument><expr><name pos:line="1840" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1840" pos:column="43">IDC_IN_SELECTION_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1840" pos:column="68">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="1842" pos:column="9">::</op:operator><name pos:line="1842" pos:column="11">ShowWindow</name></name><argument_list pos:line="1842" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1842" pos:column="22">::</op:operator><name pos:line="1842" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1842" pos:column="34">(<argument><expr><name pos:line="1842" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1842" pos:column="43">IDC_DIR_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1842" pos:column="60">!</op:operator><name pos:line="1842" pos:column="61">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1843" pos:column="9">::</op:operator><name pos:line="1843" pos:column="11">ShowWindow</name></name><argument_list pos:line="1843" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1843" pos:column="22">::</op:operator><name pos:line="1843" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1843" pos:column="34">(<argument><expr><name pos:line="1843" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1843" pos:column="43">IDDIRECTIONUP</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1843" pos:column="59">!</op:operator><name pos:line="1843" pos:column="60">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1844" pos:column="9">::</op:operator><name pos:line="1844" pos:column="11">ShowWindow</name></name><argument_list pos:line="1844" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1844" pos:column="22">::</op:operator><name pos:line="1844" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1844" pos:column="34">(<argument><expr><name pos:line="1844" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1844" pos:column="43">IDDIRECTIONDOWN</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1844" pos:column="61">!</op:operator><name pos:line="1844" pos:column="62">hideOrShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1847" pos:column="1">void</name></type> <name><name pos:line="1847" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1847" pos:column="20">::</op:operator><name pos:line="1847" pos:column="22">enableFindInFilesControls</name></name><parameter_list pos:line="1847" pos:column="47">(<param><decl><type><name pos:line="1847" pos:column="48">bool</name></type> <name pos:line="1847" pos:column="53">isEnable</name></decl></param>)</parameter_list>
<block pos:line="1848" pos:column="1">{
	<comment type="line" pos:line="1849" pos:column="9">// Hide Items</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="1850" pos:column="9">::</op:operator><name pos:line="1850" pos:column="11">ShowWindow</name></name><argument_list pos:line="1850" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1850" pos:column="22">::</op:operator><name pos:line="1850" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1850" pos:column="34">(<argument><expr><name pos:line="1850" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1850" pos:column="43">IDWRAP</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1850" pos:column="52">isEnable</name><op:operator pos:line="1850" pos:column="60">?</op:operator><name pos:line="1850" pos:column="61">SW_HIDE</name><op:operator pos:line="1850" pos:column="68">:</op:operator><name pos:line="1850" pos:column="69">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1851" pos:column="9">::</op:operator><name pos:line="1851" pos:column="11">ShowWindow</name></name><argument_list pos:line="1851" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1851" pos:column="22">::</op:operator><name pos:line="1851" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1851" pos:column="34">(<argument><expr><name pos:line="1851" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1851" pos:column="43">IDCCOUNTALL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1851" pos:column="57">isEnable</name><op:operator pos:line="1851" pos:column="65">?</op:operator><name pos:line="1851" pos:column="66">SW_HIDE</name><op:operator pos:line="1851" pos:column="73">:</op:operator><name pos:line="1851" pos:column="74">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1852" pos:column="9">::</op:operator><name pos:line="1852" pos:column="11">ShowWindow</name></name><argument_list pos:line="1852" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1852" pos:column="22">::</op:operator><name pos:line="1852" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1852" pos:column="34">(<argument><expr><name pos:line="1852" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1852" pos:column="43">IDC_FINDALL_OPENEDFILES</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1852" pos:column="69">isEnable</name><op:operator pos:line="1852" pos:column="77">?</op:operator><name pos:line="1852" pos:column="78">SW_HIDE</name><op:operator pos:line="1852" pos:column="85">:</op:operator><name pos:line="1852" pos:column="86">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1853" pos:column="9">::</op:operator><name pos:line="1853" pos:column="11">ShowWindow</name></name><argument_list pos:line="1853" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1853" pos:column="22">::</op:operator><name pos:line="1853" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1853" pos:column="34">(<argument><expr><name pos:line="1853" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1853" pos:column="43">IDC_FINDALL_CURRENTFILE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1853" pos:column="69">isEnable</name><op:operator pos:line="1853" pos:column="77">?</op:operator><name pos:line="1853" pos:column="78">SW_HIDE</name><op:operator pos:line="1853" pos:column="85">:</op:operator><name pos:line="1853" pos:column="86">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1854" pos:column="9">::</op:operator><name pos:line="1854" pos:column="11">ShowWindow</name></name><argument_list pos:line="1854" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1854" pos:column="22">::</op:operator><name pos:line="1854" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1854" pos:column="34">(<argument><expr><name pos:line="1854" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1854" pos:column="43">IDOK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1854" pos:column="50">isEnable</name><op:operator pos:line="1854" pos:column="58">?</op:operator><name pos:line="1854" pos:column="59">SW_HIDE</name><op:operator pos:line="1854" pos:column="66">:</op:operator><name pos:line="1854" pos:column="67">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="1856" pos:column="9">::</op:operator><name pos:line="1856" pos:column="11">ShowWindow</name></name><argument_list pos:line="1856" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1856" pos:column="22">::</op:operator><name pos:line="1856" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1856" pos:column="34">(<argument><expr><name pos:line="1856" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1856" pos:column="43">IDC_MARKLINE_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1856" pos:column="64">isEnable</name><op:operator pos:line="1856" pos:column="72">?</op:operator><name pos:line="1856" pos:column="73">SW_HIDE</name><op:operator pos:line="1856" pos:column="80">:</op:operator><name pos:line="1856" pos:column="81">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1857" pos:column="9">::</op:operator><name pos:line="1857" pos:column="11">ShowWindow</name></name><argument_list pos:line="1857" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1857" pos:column="22">::</op:operator><name pos:line="1857" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1857" pos:column="34">(<argument><expr><name pos:line="1857" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1857" pos:column="43">IDC_PURGE_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1857" pos:column="61">isEnable</name><op:operator pos:line="1857" pos:column="69">?</op:operator><name pos:line="1857" pos:column="70">SW_HIDE</name><op:operator pos:line="1857" pos:column="77">:</op:operator><name pos:line="1857" pos:column="78">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1858" pos:column="9">::</op:operator><name pos:line="1858" pos:column="11">ShowWindow</name></name><argument_list pos:line="1858" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1858" pos:column="22">::</op:operator><name pos:line="1858" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1858" pos:column="34">(<argument><expr><name pos:line="1858" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1858" pos:column="43">IDC_IN_SELECTION_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1858" pos:column="68">isEnable</name><op:operator pos:line="1858" pos:column="76">?</op:operator><name pos:line="1858" pos:column="77">SW_HIDE</name><op:operator pos:line="1858" pos:column="84">:</op:operator><name pos:line="1858" pos:column="85">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1859" pos:column="9">::</op:operator><name pos:line="1859" pos:column="11">ShowWindow</name></name><argument_list pos:line="1859" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1859" pos:column="22">::</op:operator><name pos:line="1859" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1859" pos:column="34">(<argument><expr><name pos:line="1859" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1859" pos:column="43">IDC_CLEAR_ALL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1859" pos:column="59">isEnable</name><op:operator pos:line="1859" pos:column="67">?</op:operator><name pos:line="1859" pos:column="68">SW_HIDE</name><op:operator pos:line="1859" pos:column="75">:</op:operator><name pos:line="1859" pos:column="76">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1860" pos:column="9">::</op:operator><name pos:line="1860" pos:column="11">ShowWindow</name></name><argument_list pos:line="1860" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1860" pos:column="22">::</op:operator><name pos:line="1860" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1860" pos:column="34">(<argument><expr><name pos:line="1860" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1860" pos:column="43">IDCMARKALL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1860" pos:column="56">isEnable</name><op:operator pos:line="1860" pos:column="64">?</op:operator><name pos:line="1860" pos:column="65">SW_HIDE</name><op:operator pos:line="1860" pos:column="72">:</op:operator><name pos:line="1860" pos:column="73">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="1862" pos:column="9">::</op:operator><name pos:line="1862" pos:column="11">ShowWindow</name></name><argument_list pos:line="1862" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1862" pos:column="22">::</op:operator><name pos:line="1862" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1862" pos:column="34">(<argument><expr><name pos:line="1862" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1862" pos:column="43">IDC_DIR_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1862" pos:column="60">isEnable</name><op:operator pos:line="1862" pos:column="68">?</op:operator><name pos:line="1862" pos:column="69">SW_HIDE</name><op:operator pos:line="1862" pos:column="76">:</op:operator><name pos:line="1862" pos:column="77">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1863" pos:column="9">::</op:operator><name pos:line="1863" pos:column="11">ShowWindow</name></name><argument_list pos:line="1863" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1863" pos:column="22">::</op:operator><name pos:line="1863" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1863" pos:column="34">(<argument><expr><name pos:line="1863" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1863" pos:column="43">IDDIRECTIONUP</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1863" pos:column="59">isEnable</name><op:operator pos:line="1863" pos:column="67">?</op:operator><name pos:line="1863" pos:column="68">SW_HIDE</name><op:operator pos:line="1863" pos:column="75">:</op:operator><name pos:line="1863" pos:column="76">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1864" pos:column="9">::</op:operator><name pos:line="1864" pos:column="11">ShowWindow</name></name><argument_list pos:line="1864" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1864" pos:column="22">::</op:operator><name pos:line="1864" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1864" pos:column="34">(<argument><expr><name pos:line="1864" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1864" pos:column="43">IDDIRECTIONDOWN</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1864" pos:column="61">isEnable</name><op:operator pos:line="1864" pos:column="69">?</op:operator><name pos:line="1864" pos:column="70">SW_HIDE</name><op:operator pos:line="1864" pos:column="77">:</op:operator><name pos:line="1864" pos:column="78">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1865" pos:column="9">::</op:operator><name pos:line="1865" pos:column="11">ShowWindow</name></name><argument_list pos:line="1865" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1865" pos:column="22">::</op:operator><name pos:line="1865" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1865" pos:column="34">(<argument><expr><name pos:line="1865" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1865" pos:column="43">IDREPLACE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1865" pos:column="55">isEnable</name><op:operator pos:line="1865" pos:column="63">?</op:operator><name pos:line="1865" pos:column="64">SW_HIDE</name><op:operator pos:line="1865" pos:column="71">:</op:operator><name pos:line="1865" pos:column="72">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1866" pos:column="9">::</op:operator><name pos:line="1866" pos:column="11">ShowWindow</name></name><argument_list pos:line="1866" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1866" pos:column="22">::</op:operator><name pos:line="1866" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1866" pos:column="34">(<argument><expr><name pos:line="1866" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1866" pos:column="43">IDC_REPLACEINSELECTION</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1866" pos:column="68">isEnable</name><op:operator pos:line="1866" pos:column="76">?</op:operator><name pos:line="1866" pos:column="77">SW_HIDE</name><op:operator pos:line="1866" pos:column="84">:</op:operator><name pos:line="1866" pos:column="85">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1867" pos:column="9">::</op:operator><name pos:line="1867" pos:column="11">ShowWindow</name></name><argument_list pos:line="1867" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1867" pos:column="22">::</op:operator><name pos:line="1867" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1867" pos:column="34">(<argument><expr><name pos:line="1867" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1867" pos:column="43">IDREPLACEALL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1867" pos:column="58">isEnable</name><op:operator pos:line="1867" pos:column="66">?</op:operator><name pos:line="1867" pos:column="67">SW_HIDE</name><op:operator pos:line="1867" pos:column="74">:</op:operator><name pos:line="1867" pos:column="75">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1868" pos:column="9">::</op:operator><name pos:line="1868" pos:column="11">ShowWindow</name></name><argument_list pos:line="1868" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1868" pos:column="22">::</op:operator><name pos:line="1868" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1868" pos:column="34">(<argument><expr><name pos:line="1868" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1868" pos:column="43">IDC_REPLACE_OPENEDFILES</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1868" pos:column="69">isEnable</name><op:operator pos:line="1868" pos:column="77">?</op:operator><name pos:line="1868" pos:column="78">SW_HIDE</name><op:operator pos:line="1868" pos:column="85">:</op:operator><name pos:line="1868" pos:column="86">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="1870" pos:column="9">// Show Items</comment>
	<if pos:line="1871" pos:column="9">if <condition pos:line="1871" pos:column="12">(<expr><name pos:line="1871" pos:column="13">isEnable</name></expr>)</condition><then pos:line="1871" pos:column="22">
	<block pos:line="1872" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="1873" pos:column="17">::</op:operator><name pos:line="1873" pos:column="19">ShowWindow</name></name><argument_list pos:line="1873" pos:column="29">(<argument><expr><call><name><op:operator pos:line="1873" pos:column="30">::</op:operator><name pos:line="1873" pos:column="32">GetDlgItem</name></name><argument_list pos:line="1873" pos:column="42">(<argument><expr><name pos:line="1873" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1873" pos:column="51">ID_STATICTEXT_REPLACE</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1873" pos:column="75">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1874" pos:column="17">::</op:operator><name pos:line="1874" pos:column="19">ShowWindow</name></name><argument_list pos:line="1874" pos:column="29">(<argument><expr><call><name><op:operator pos:line="1874" pos:column="30">::</op:operator><name pos:line="1874" pos:column="32">GetDlgItem</name></name><argument_list pos:line="1874" pos:column="42">(<argument><expr><name pos:line="1874" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1874" pos:column="51">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1874" pos:column="67">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><op:operator pos:line="1876" pos:column="9">::</op:operator><name pos:line="1876" pos:column="11">ShowWindow</name></name><argument_list pos:line="1876" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1876" pos:column="22">::</op:operator><name pos:line="1876" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1876" pos:column="34">(<argument><expr><name pos:line="1876" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1876" pos:column="43">IDD_FINDINFILES_REPLACEINFILES</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1876" pos:column="76">isEnable</name><op:operator pos:line="1876" pos:column="84">?</op:operator><name pos:line="1876" pos:column="85">SW_SHOW</name><op:operator pos:line="1876" pos:column="92">:</op:operator><name pos:line="1876" pos:column="93">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1877" pos:column="9">::</op:operator><name pos:line="1877" pos:column="11">ShowWindow</name></name><argument_list pos:line="1877" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1877" pos:column="22">::</op:operator><name pos:line="1877" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1877" pos:column="34">(<argument><expr><name pos:line="1877" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1877" pos:column="43">IDD_FINDINFILES_FILTERS_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1877" pos:column="76">isEnable</name><op:operator pos:line="1877" pos:column="84">?</op:operator><name pos:line="1877" pos:column="85">SW_SHOW</name><op:operator pos:line="1877" pos:column="92">:</op:operator><name pos:line="1877" pos:column="93">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1878" pos:column="9">::</op:operator><name pos:line="1878" pos:column="11">ShowWindow</name></name><argument_list pos:line="1878" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1878" pos:column="22">::</op:operator><name pos:line="1878" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1878" pos:column="34">(<argument><expr><name pos:line="1878" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1878" pos:column="43">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1878" pos:column="75">isEnable</name><op:operator pos:line="1878" pos:column="83">?</op:operator><name pos:line="1878" pos:column="84">SW_SHOW</name><op:operator pos:line="1878" pos:column="91">:</op:operator><name pos:line="1878" pos:column="92">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1879" pos:column="9">::</op:operator><name pos:line="1879" pos:column="11">ShowWindow</name></name><argument_list pos:line="1879" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1879" pos:column="22">::</op:operator><name pos:line="1879" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1879" pos:column="34">(<argument><expr><name pos:line="1879" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1879" pos:column="43">IDD_FINDINFILES_DIR_STATIC</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1879" pos:column="72">isEnable</name><op:operator pos:line="1879" pos:column="80">?</op:operator><name pos:line="1879" pos:column="81">SW_SHOW</name><op:operator pos:line="1879" pos:column="88">:</op:operator><name pos:line="1879" pos:column="89">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1880" pos:column="9">::</op:operator><name pos:line="1880" pos:column="11">ShowWindow</name></name><argument_list pos:line="1880" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1880" pos:column="22">::</op:operator><name pos:line="1880" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1880" pos:column="34">(<argument><expr><name pos:line="1880" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1880" pos:column="43">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1880" pos:column="71">isEnable</name><op:operator pos:line="1880" pos:column="79">?</op:operator><name pos:line="1880" pos:column="80">SW_SHOW</name><op:operator pos:line="1880" pos:column="87">:</op:operator><name pos:line="1880" pos:column="88">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1881" pos:column="9">::</op:operator><name pos:line="1881" pos:column="11">ShowWindow</name></name><argument_list pos:line="1881" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1881" pos:column="22">::</op:operator><name pos:line="1881" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1881" pos:column="34">(<argument><expr><name pos:line="1881" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1881" pos:column="43">IDD_FINDINFILES_BROWSE_BUTTON</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1881" pos:column="75">isEnable</name><op:operator pos:line="1881" pos:column="83">?</op:operator><name pos:line="1881" pos:column="84">SW_SHOW</name><op:operator pos:line="1881" pos:column="91">:</op:operator><name pos:line="1881" pos:column="92">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1882" pos:column="9">::</op:operator><name pos:line="1882" pos:column="11">ShowWindow</name></name><argument_list pos:line="1882" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1882" pos:column="22">::</op:operator><name pos:line="1882" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1882" pos:column="34">(<argument><expr><name pos:line="1882" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1882" pos:column="43">IDD_FINDINFILES_FIND_BUTTON</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1882" pos:column="73">isEnable</name><op:operator pos:line="1882" pos:column="81">?</op:operator><name pos:line="1882" pos:column="82">SW_SHOW</name><op:operator pos:line="1882" pos:column="89">:</op:operator><name pos:line="1882" pos:column="90">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1883" pos:column="9">::</op:operator><name pos:line="1883" pos:column="11">ShowWindow</name></name><argument_list pos:line="1883" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1883" pos:column="22">::</op:operator><name pos:line="1883" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1883" pos:column="34">(<argument><expr><name pos:line="1883" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1883" pos:column="43">IDD_FINDINFILES_GOBACK_BUTTON</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1883" pos:column="75">isEnable</name><op:operator pos:line="1883" pos:column="83">?</op:operator><name pos:line="1883" pos:column="84">SW_SHOW</name><op:operator pos:line="1883" pos:column="91">:</op:operator><name pos:line="1883" pos:column="92">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1884" pos:column="9">::</op:operator><name pos:line="1884" pos:column="11">ShowWindow</name></name><argument_list pos:line="1884" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1884" pos:column="22">::</op:operator><name pos:line="1884" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1884" pos:column="34">(<argument><expr><name pos:line="1884" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1884" pos:column="43">IDD_FINDINFILES_RECURSIVE_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1884" pos:column="77">isEnable</name><op:operator pos:line="1884" pos:column="85">?</op:operator><name pos:line="1884" pos:column="86">SW_SHOW</name><op:operator pos:line="1884" pos:column="93">:</op:operator><name pos:line="1884" pos:column="94">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1885" pos:column="9">::</op:operator><name pos:line="1885" pos:column="11">ShowWindow</name></name><argument_list pos:line="1885" pos:column="21">(<argument><expr><call><name><op:operator pos:line="1885" pos:column="22">::</op:operator><name pos:line="1885" pos:column="24">GetDlgItem</name></name><argument_list pos:line="1885" pos:column="34">(<argument><expr><name pos:line="1885" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1885" pos:column="43">IDD_FINDINFILES_INHIDDENDIR_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1885" pos:column="79">isEnable</name><op:operator pos:line="1885" pos:column="87">?</op:operator><name pos:line="1885" pos:column="88">SW_SHOW</name><op:operator pos:line="1885" pos:column="95">:</op:operator><name pos:line="1885" pos:column="96">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name><op:operator pos:line="1886" pos:column="5">::</op:operator><name pos:line="1886" pos:column="7">ShowWindow</name></name><argument_list pos:line="1886" pos:column="17">(<argument><expr><call><name><op:operator pos:line="1886" pos:column="18">::</op:operator><name pos:line="1886" pos:column="20">GetDlgItem</name></name><argument_list pos:line="1886" pos:column="30">(<argument><expr><name pos:line="1886" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="1886" pos:column="39">IDD_FINDINFILES_FOLDERFOLLOWSDOC_CHECK</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1886" pos:column="80">isEnable</name><op:operator pos:line="1886" pos:column="88">?</op:operator><name pos:line="1886" pos:column="89">SW_SHOW</name><op:operator pos:line="1886" pos:column="96">:</op:operator><name pos:line="1886" pos:column="97">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1889" pos:column="1">void</name></type> <name><name pos:line="1889" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1889" pos:column="20">::</op:operator><name pos:line="1889" pos:column="22">getPatterns</name></name><parameter_list pos:line="1889" pos:column="33">(<param><decl><type><name><name pos:line="1889" pos:column="34">vector</name><argument_list pos:line="1889" pos:column="40">&lt;<argument><expr><name pos:line="1889" pos:column="41">generic_string</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="1889" pos:column="57">&amp;</type:modifier></type> <name pos:line="1889" pos:column="59">patternVect</name></decl></param>)</parameter_list>
<block pos:line="1890" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="1891" pos:column="9">cutString</name><argument_list pos:line="1891" pos:column="18">(<argument><expr><call><name><name pos:line="1891" pos:column="19">_env</name><op:operator pos:line="1891" pos:column="23">-&gt;</op:operator><name pos:line="1891" pos:column="25">_filters</name><op:operator pos:line="1891" pos:column="33">.</op:operator><name pos:line="1891" pos:column="34">c_str</name></name><argument_list pos:line="1891" pos:column="39">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1891" pos:column="43">patternVect</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1894" pos:column="1">void</name></type> <name><name pos:line="1894" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1894" pos:column="20">::</op:operator><name pos:line="1894" pos:column="22">saveInMacro</name></name><parameter_list pos:line="1894" pos:column="33">(<param><decl><type><name pos:line="1894" pos:column="34">int</name></type> <name pos:line="1894" pos:column="38">cmd</name></decl></param>, <param><decl><type><name pos:line="1894" pos:column="43">int</name></type> <name pos:line="1894" pos:column="47">cmdType</name></decl></param>)</parameter_list>
<block pos:line="1895" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1896" pos:column="9">int</name></type> <name pos:line="1896" pos:column="13">booleans</name> <init pos:line="1896" pos:column="22">= <expr><lit:literal type="number" pos:line="1896" pos:column="24">0</lit:literal></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1897" pos:column="9">::</op:operator><name pos:line="1897" pos:column="11">SendMessage</name></name><argument_list pos:line="1897" pos:column="22">(<argument><expr><name pos:line="1897" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="1897" pos:column="33">WM_FRSAVE_INT</name></expr></argument>, <argument><expr><name pos:line="1897" pos:column="48">IDC_FRCOMMAND_INIT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1897" pos:column="68">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1898" pos:column="9">::</op:operator><name pos:line="1898" pos:column="11">SendMessage</name></name><argument_list pos:line="1898" pos:column="22">(<argument><expr><name pos:line="1898" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="1898" pos:column="33">WM_FRSAVE_STR</name></expr></argument>, <argument><expr><name pos:line="1898" pos:column="48">IDFINDWHAT</name></expr></argument>,  <argument><expr><call><name><name pos:line="1898" pos:column="61">reinterpret_cast</name><argument_list pos:line="1898" pos:column="77">&lt;<argument><expr><name pos:line="1898" pos:column="78">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="1898" pos:column="85">(<argument><expr><call><name><name pos:line="1898" pos:column="86">_options</name><op:operator pos:line="1898" pos:column="94">.</op:operator><name pos:line="1898" pos:column="95">_str2Search</name><op:operator pos:line="1898" pos:column="106">.</op:operator><name pos:line="1898" pos:column="107">c_str</name></name><argument_list pos:line="1898" pos:column="112">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1899" pos:column="9">booleans</name> <op:operator pos:line="1899" pos:column="18">|=</op:operator> <name><name pos:line="1899" pos:column="21">_options</name><op:operator pos:line="1899" pos:column="29">.</op:operator><name pos:line="1899" pos:column="30">_isWholeWord</name></name><op:operator pos:line="1899" pos:column="42">?</op:operator><name pos:line="1899" pos:column="43">IDF_WHOLEWORD</name><op:operator pos:line="1899" pos:column="56">:</op:operator><lit:literal type="number" pos:line="1899" pos:column="57">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1900" pos:column="9">booleans</name> <op:operator pos:line="1900" pos:column="18">|=</op:operator> <name><name pos:line="1900" pos:column="21">_options</name><op:operator pos:line="1900" pos:column="29">.</op:operator><name pos:line="1900" pos:column="30">_isMatchCase</name></name><op:operator pos:line="1900" pos:column="42">?</op:operator><name pos:line="1900" pos:column="43">IDF_MATCHCASE</name><op:operator pos:line="1900" pos:column="56">:</op:operator><lit:literal type="number" pos:line="1900" pos:column="57">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1901" pos:column="9">booleans</name> <op:operator pos:line="1901" pos:column="18">|=</op:operator> <name><name pos:line="1901" pos:column="21">_options</name><op:operator pos:line="1901" pos:column="29">.</op:operator><name pos:line="1901" pos:column="30">_dotMatchesNewline</name></name><op:operator pos:line="1901" pos:column="48">?</op:operator><name pos:line="1901" pos:column="49">IDF_REDOTMATCHNL</name><op:operator pos:line="1901" pos:column="65">:</op:operator><lit:literal type="number" pos:line="1901" pos:column="66">0</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><op:operator pos:line="1903" pos:column="9">::</op:operator><name pos:line="1903" pos:column="11">SendMessage</name></name><argument_list pos:line="1903" pos:column="22">(<argument><expr><name pos:line="1903" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="1903" pos:column="33">WM_FRSAVE_INT</name></expr></argument>, <argument><expr><name pos:line="1903" pos:column="48">IDNORMAL</name></expr></argument>, <argument><expr><name><name pos:line="1903" pos:column="58">_options</name><op:operator pos:line="1903" pos:column="66">.</op:operator><name pos:line="1903" pos:column="67">_searchType</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1904" pos:column="9">if <condition pos:line="1904" pos:column="12">(<expr><name pos:line="1904" pos:column="13">cmd</name> <op:operator pos:line="1904" pos:column="17">==</op:operator> <name pos:line="1904" pos:column="20">IDCMARKALL</name></expr>)</condition><then pos:line="1904" pos:column="31">
	<block pos:line="1905" pos:column="9">{
		<expr_stmt><expr><name pos:line="1906" pos:column="17">booleans</name> <op:operator pos:line="1906" pos:column="26">|=</op:operator> <name><name pos:line="1906" pos:column="29">_options</name><op:operator pos:line="1906" pos:column="37">.</op:operator><name pos:line="1906" pos:column="38">_doPurge</name></name><op:operator pos:line="1906" pos:column="46">?</op:operator><name pos:line="1906" pos:column="47">IDF_PURGE_CHECK</name><op:operator pos:line="1906" pos:column="62">:</op:operator><lit:literal type="number" pos:line="1906" pos:column="63">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1907" pos:column="17">booleans</name> <op:operator pos:line="1907" pos:column="26">|=</op:operator> <name><name pos:line="1907" pos:column="29">_options</name><op:operator pos:line="1907" pos:column="37">.</op:operator><name pos:line="1907" pos:column="38">_doMarkLine</name></name><op:operator pos:line="1907" pos:column="49">?</op:operator><name pos:line="1907" pos:column="50">IDF_MARKLINE_CHECK</name><op:operator pos:line="1907" pos:column="68">:</op:operator><lit:literal type="number" pos:line="1907" pos:column="69">0</lit:literal></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="1909" pos:column="9">if <condition pos:line="1909" pos:column="12">(<expr><name pos:line="1909" pos:column="13">cmdType</name> <op:operator pos:line="1909" pos:column="21">&amp;</op:operator> <name pos:line="1909" pos:column="23">FR_OP_REPLACE</name></expr>)</condition><then pos:line="1909" pos:column="37">
		<expr_stmt><expr><call><name><op:operator pos:line="1910" pos:column="17">::</op:operator><name pos:line="1910" pos:column="19">SendMessage</name></name><argument_list pos:line="1910" pos:column="30">(<argument><expr><name pos:line="1910" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="1910" pos:column="41">WM_FRSAVE_STR</name></expr></argument>, <argument><expr><name pos:line="1910" pos:column="56">IDREPLACEWITH</name></expr></argument>, <argument><expr><op:operator pos:line="1910" pos:column="71">(</op:operator><name pos:line="1910" pos:column="72">LPARAM</name><op:operator pos:line="1910" pos:column="78">)</op:operator><call><name><name pos:line="1910" pos:column="79">_options</name><op:operator pos:line="1910" pos:column="87">.</op:operator><name pos:line="1910" pos:column="88">_str4Replace</name><op:operator pos:line="1910" pos:column="100">.</op:operator><name pos:line="1910" pos:column="101">c_str</name></name><argument_list pos:line="1910" pos:column="106">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if pos:line="1911" pos:column="9">if <condition pos:line="1911" pos:column="12">(<expr><name pos:line="1911" pos:column="13">cmdType</name> <op:operator pos:line="1911" pos:column="21">&amp;</op:operator> <name pos:line="1911" pos:column="23">FR_OP_FIF</name></expr>)</condition><then pos:line="1911" pos:column="33">
	<block pos:line="1912" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="1913" pos:column="17">::</op:operator><name pos:line="1913" pos:column="19">SendMessage</name></name><argument_list pos:line="1913" pos:column="30">(<argument><expr><name pos:line="1913" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="1913" pos:column="41">WM_FRSAVE_STR</name></expr></argument>, <argument><expr><name pos:line="1913" pos:column="56">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>, <argument><expr><op:operator pos:line="1913" pos:column="83">(</op:operator><name pos:line="1913" pos:column="84">LPARAM</name><op:operator pos:line="1913" pos:column="90">)</op:operator><call><name><name pos:line="1913" pos:column="91">_options</name><op:operator pos:line="1913" pos:column="99">.</op:operator><name pos:line="1913" pos:column="100">_directory</name><op:operator pos:line="1913" pos:column="110">.</op:operator><name pos:line="1913" pos:column="111">c_str</name></name><argument_list pos:line="1913" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1914" pos:column="17">::</op:operator><name pos:line="1914" pos:column="19">SendMessage</name></name><argument_list pos:line="1914" pos:column="30">(<argument><expr><name pos:line="1914" pos:column="31">_hParent</name></expr></argument>, <argument><expr><name pos:line="1914" pos:column="41">WM_FRSAVE_STR</name></expr></argument>, <argument><expr><name pos:line="1914" pos:column="56">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>, <argument><expr><op:operator pos:line="1914" pos:column="87">(</op:operator><name pos:line="1914" pos:column="88">LPARAM</name><op:operator pos:line="1914" pos:column="94">)</op:operator><call><name><name pos:line="1914" pos:column="95">_options</name><op:operator pos:line="1914" pos:column="103">.</op:operator><name pos:line="1914" pos:column="104">_filters</name><op:operator pos:line="1914" pos:column="112">.</op:operator><name pos:line="1914" pos:column="113">c_str</name></name><argument_list pos:line="1914" pos:column="118">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1915" pos:column="17">booleans</name> <op:operator pos:line="1915" pos:column="26">|=</op:operator> <name><name pos:line="1915" pos:column="29">_options</name><op:operator pos:line="1915" pos:column="37">.</op:operator><name pos:line="1915" pos:column="38">_isRecursive</name></name><op:operator pos:line="1915" pos:column="50">?</op:operator><name pos:line="1915" pos:column="51">IDF_FINDINFILES_RECURSIVE_CHECK</name><op:operator pos:line="1915" pos:column="82">:</op:operator><lit:literal type="number" pos:line="1915" pos:column="83">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1916" pos:column="17">booleans</name> <op:operator pos:line="1916" pos:column="26">|=</op:operator> <name><name pos:line="1916" pos:column="29">_options</name><op:operator pos:line="1916" pos:column="37">.</op:operator><name pos:line="1916" pos:column="38">_isInHiddenDir</name></name><op:operator pos:line="1916" pos:column="52">?</op:operator><name pos:line="1916" pos:column="53">IDF_FINDINFILES_INHIDDENDIR_CHECK</name><op:operator pos:line="1916" pos:column="86">:</op:operator><lit:literal type="number" pos:line="1916" pos:column="87">0</lit:literal></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="1918" pos:column="9">else <if pos:line="1918" pos:column="14">if <condition pos:line="1918" pos:column="17">(<expr><op:operator pos:line="1918" pos:column="18">!</op:operator><op:operator pos:line="1918" pos:column="19">(</op:operator><name pos:line="1918" pos:column="20">cmdType</name> <op:operator pos:line="1918" pos:column="28">&amp;</op:operator> <name pos:line="1918" pos:column="30">FR_OP_GLOBAL</name><op:operator pos:line="1918" pos:column="42">)</op:operator></expr>)</condition><then pos:line="1918" pos:column="44">
	<block pos:line="1919" pos:column="9">{
		<expr_stmt><expr><name pos:line="1920" pos:column="17">booleans</name> <op:operator pos:line="1920" pos:column="26">|=</op:operator> <name><name pos:line="1920" pos:column="29">_options</name><op:operator pos:line="1920" pos:column="37">.</op:operator><name pos:line="1920" pos:column="38">_isInSelection</name></name><op:operator pos:line="1920" pos:column="52">?</op:operator><name pos:line="1920" pos:column="53">IDF_IN_SELECTION_CHECK</name><op:operator pos:line="1920" pos:column="75">:</op:operator><lit:literal type="number" pos:line="1920" pos:column="76">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1921" pos:column="17">booleans</name> <op:operator pos:line="1921" pos:column="26">|=</op:operator> <name><name pos:line="1921" pos:column="29">_options</name><op:operator pos:line="1921" pos:column="37">.</op:operator><name pos:line="1921" pos:column="38">_isWrapAround</name></name><op:operator pos:line="1921" pos:column="51">?</op:operator><name pos:line="1921" pos:column="52">IDF_WRAP</name><op:operator pos:line="1921" pos:column="60">:</op:operator><lit:literal type="number" pos:line="1921" pos:column="61">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1922" pos:column="17">booleans</name> <op:operator pos:line="1922" pos:column="26">|=</op:operator> <name><name pos:line="1922" pos:column="29">_options</name><op:operator pos:line="1922" pos:column="37">.</op:operator><name pos:line="1922" pos:column="38">_whichDirection</name></name><op:operator pos:line="1922" pos:column="53">?</op:operator><name pos:line="1922" pos:column="54">IDF_WHICH_DIRECTION</name><op:operator pos:line="1922" pos:column="73">:</op:operator><lit:literal type="number" pos:line="1922" pos:column="74">0</lit:literal></expr>;</expr_stmt>
	}</block></then></if></else></if>
	<expr_stmt><expr><call><name><op:operator pos:line="1924" pos:column="9">::</op:operator><name pos:line="1924" pos:column="11">SendMessage</name></name><argument_list pos:line="1924" pos:column="22">(<argument><expr><name pos:line="1924" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="1924" pos:column="33">WM_FRSAVE_INT</name></expr></argument>, <argument><expr><name pos:line="1924" pos:column="48">IDC_FRCOMMAND_BOOLEANS</name></expr></argument>, <argument><expr><name pos:line="1924" pos:column="72">booleans</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="1925" pos:column="9">::</op:operator><name pos:line="1925" pos:column="11">SendMessage</name></name><argument_list pos:line="1925" pos:column="22">(<argument><expr><name pos:line="1925" pos:column="23">_hParent</name></expr></argument>, <argument><expr><name pos:line="1925" pos:column="33">WM_FRSAVE_INT</name></expr></argument>, <argument><expr><name pos:line="1925" pos:column="48">IDC_FRCOMMAND_EXEC</name></expr></argument>, <argument><expr><name pos:line="1925" pos:column="68">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="1928" pos:column="1">void</name></type> <name><name pos:line="1928" pos:column="6">FindReplaceDlg</name><op:operator pos:line="1928" pos:column="20">::</op:operator><name pos:line="1928" pos:column="22">execSavedCommand</name></name><parameter_list pos:line="1928" pos:column="38">(<param><decl><type><name pos:line="1928" pos:column="39">int</name></type> <name pos:line="1928" pos:column="43">cmd</name></decl></param>, <param><decl><type><name pos:line="1928" pos:column="48">int</name></type> <name pos:line="1928" pos:column="52">intValue</name></decl></param>, <param><decl><type><name pos:line="1928" pos:column="62">generic_string</name></type> <name pos:line="1928" pos:column="77">stringValue</name></decl></param>)</parameter_list>
<block pos:line="1929" pos:column="1">{
	<switch pos:line="1930" pos:column="9">switch<condition pos:line="1930" pos:column="15">(<expr><name pos:line="1930" pos:column="16">cmd</name></expr>)</condition>
	<block pos:line="1931" pos:column="9">{
		<case pos:line="1932" pos:column="17">case <expr><name pos:line="1932" pos:column="22">IDC_FRCOMMAND_INIT</name></expr>:
			<expr_stmt><expr><name pos:line="1933" pos:column="25">_env</name> <op:operator pos:line="1933" pos:column="30">=</op:operator> <op:operator pos:line="1933" pos:column="32">new</op:operator> <name pos:line="1933" pos:column="36">FindOption</name></expr>;</expr_stmt>
			<break pos:line="1934" pos:column="25">break;</break>
		</case><case pos:line="1935" pos:column="17">case <expr><name pos:line="1935" pos:column="22">IDFINDWHAT</name></expr>:
			<expr_stmt><expr><name><name pos:line="1936" pos:column="25">_env</name><op:operator pos:line="1936" pos:column="29">-&gt;</op:operator><name pos:line="1936" pos:column="31">_str2Search</name></name> <op:operator pos:line="1936" pos:column="43">=</op:operator> <name pos:line="1936" pos:column="45">stringValue</name></expr>;</expr_stmt>
			<break pos:line="1937" pos:column="25">break;</break>
		</case><case pos:line="1938" pos:column="17">case <expr><name pos:line="1938" pos:column="22">IDC_FRCOMMAND_BOOLEANS</name></expr>:
			<expr_stmt><expr><name><name pos:line="1939" pos:column="25">_env</name><op:operator pos:line="1939" pos:column="29">-&gt;</op:operator><name pos:line="1939" pos:column="31">_isWholeWord</name></name> <op:operator pos:line="1939" pos:column="44">=</op:operator> <op:operator pos:line="1939" pos:column="46">(</op:operator><op:operator pos:line="1939" pos:column="47">(</op:operator><name pos:line="1939" pos:column="48">intValue</name> <op:operator pos:line="1939" pos:column="57">&amp;</op:operator> <name pos:line="1939" pos:column="59">IDF_WHOLEWORD</name><op:operator pos:line="1939" pos:column="72">)</op:operator><op:operator pos:line="1939" pos:column="73">&gt;</op:operator> <lit:literal type="number" pos:line="1939" pos:column="75">0</lit:literal><op:operator pos:line="1939" pos:column="76">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1940" pos:column="25">_env</name><op:operator pos:line="1940" pos:column="29">-&gt;</op:operator><name pos:line="1940" pos:column="31">_isMatchCase</name></name> <op:operator pos:line="1940" pos:column="44">=</op:operator> <op:operator pos:line="1940" pos:column="46">(</op:operator><op:operator pos:line="1940" pos:column="47">(</op:operator><name pos:line="1940" pos:column="48">intValue</name> <op:operator pos:line="1940" pos:column="57">&amp;</op:operator> <name pos:line="1940" pos:column="59">IDF_MATCHCASE</name><op:operator pos:line="1940" pos:column="72">)</op:operator><op:operator pos:line="1940" pos:column="73">&gt;</op:operator> <lit:literal type="number" pos:line="1940" pos:column="75">0</lit:literal><op:operator pos:line="1940" pos:column="76">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1941" pos:column="25">_env</name><op:operator pos:line="1941" pos:column="29">-&gt;</op:operator><name pos:line="1941" pos:column="31">_isRecursive</name></name> <op:operator pos:line="1941" pos:column="44">=</op:operator> <op:operator pos:line="1941" pos:column="46">(</op:operator><op:operator pos:line="1941" pos:column="47">(</op:operator><name pos:line="1941" pos:column="48">intValue</name> <op:operator pos:line="1941" pos:column="57">&amp;</op:operator> <name pos:line="1941" pos:column="59">IDF_FINDINFILES_RECURSIVE_CHECK</name><op:operator pos:line="1941" pos:column="90">)</op:operator><op:operator pos:line="1941" pos:column="91">&gt;</op:operator> <lit:literal type="number" pos:line="1941" pos:column="93">0</lit:literal><op:operator pos:line="1941" pos:column="94">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1942" pos:column="25">_env</name><op:operator pos:line="1942" pos:column="29">-&gt;</op:operator><name pos:line="1942" pos:column="31">_isInHiddenDir</name></name> <op:operator pos:line="1942" pos:column="46">=</op:operator> <op:operator pos:line="1942" pos:column="48">(</op:operator><op:operator pos:line="1942" pos:column="49">(</op:operator><name pos:line="1942" pos:column="50">intValue</name> <op:operator pos:line="1942" pos:column="59">&amp;</op:operator> <name pos:line="1942" pos:column="61">IDF_FINDINFILES_INHIDDENDIR_CHECK</name><op:operator pos:line="1942" pos:column="94">)</op:operator><op:operator pos:line="1942" pos:column="95">&gt;</op:operator> <lit:literal type="number" pos:line="1942" pos:column="97">0</lit:literal><op:operator pos:line="1942" pos:column="98">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1943" pos:column="25">_env</name><op:operator pos:line="1943" pos:column="29">-&gt;</op:operator><name pos:line="1943" pos:column="31">_doPurge</name></name> <op:operator pos:line="1943" pos:column="40">=</op:operator> <op:operator pos:line="1943" pos:column="42">(</op:operator><op:operator pos:line="1943" pos:column="43">(</op:operator><name pos:line="1943" pos:column="44">intValue</name> <op:operator pos:line="1943" pos:column="53">&amp;</op:operator> <name pos:line="1943" pos:column="55">IDF_PURGE_CHECK</name><op:operator pos:line="1943" pos:column="70">)</op:operator><op:operator pos:line="1943" pos:column="71">&gt;</op:operator> <lit:literal type="number" pos:line="1943" pos:column="73">0</lit:literal><op:operator pos:line="1943" pos:column="74">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1944" pos:column="25">_env</name><op:operator pos:line="1944" pos:column="29">-&gt;</op:operator><name pos:line="1944" pos:column="31">_doMarkLine</name></name> <op:operator pos:line="1944" pos:column="43">=</op:operator> <op:operator pos:line="1944" pos:column="45">(</op:operator><op:operator pos:line="1944" pos:column="46">(</op:operator><name pos:line="1944" pos:column="47">intValue</name> <op:operator pos:line="1944" pos:column="56">&amp;</op:operator> <name pos:line="1944" pos:column="58">IDF_MARKLINE_CHECK</name><op:operator pos:line="1944" pos:column="76">)</op:operator><op:operator pos:line="1944" pos:column="77">&gt;</op:operator> <lit:literal type="number" pos:line="1944" pos:column="79">0</lit:literal><op:operator pos:line="1944" pos:column="80">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1945" pos:column="25">_env</name><op:operator pos:line="1945" pos:column="29">-&gt;</op:operator><name pos:line="1945" pos:column="31">_isInSelection</name></name> <op:operator pos:line="1945" pos:column="46">=</op:operator> <op:operator pos:line="1945" pos:column="48">(</op:operator><op:operator pos:line="1945" pos:column="49">(</op:operator><name pos:line="1945" pos:column="50">intValue</name> <op:operator pos:line="1945" pos:column="59">&amp;</op:operator> <name pos:line="1945" pos:column="61">IDF_IN_SELECTION_CHECK</name><op:operator pos:line="1945" pos:column="83">)</op:operator><op:operator pos:line="1945" pos:column="84">&gt;</op:operator> <lit:literal type="number" pos:line="1945" pos:column="86">0</lit:literal><op:operator pos:line="1945" pos:column="87">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1946" pos:column="25">_env</name><op:operator pos:line="1946" pos:column="29">-&gt;</op:operator><name pos:line="1946" pos:column="31">_isWrapAround</name></name> <op:operator pos:line="1946" pos:column="45">=</op:operator> <op:operator pos:line="1946" pos:column="47">(</op:operator><op:operator pos:line="1946" pos:column="48">(</op:operator><name pos:line="1946" pos:column="49">intValue</name> <op:operator pos:line="1946" pos:column="58">&amp;</op:operator> <name pos:line="1946" pos:column="60">IDF_WRAP</name><op:operator pos:line="1946" pos:column="68">)</op:operator><op:operator pos:line="1946" pos:column="69">&gt;</op:operator> <lit:literal type="number" pos:line="1946" pos:column="71">0</lit:literal><op:operator pos:line="1946" pos:column="72">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1947" pos:column="25">_env</name><op:operator pos:line="1947" pos:column="29">-&gt;</op:operator><name pos:line="1947" pos:column="31">_whichDirection</name></name> <op:operator pos:line="1947" pos:column="47">=</op:operator> <op:operator pos:line="1947" pos:column="49">(</op:operator><op:operator pos:line="1947" pos:column="50">(</op:operator><name pos:line="1947" pos:column="51">intValue</name> <op:operator pos:line="1947" pos:column="60">&amp;</op:operator> <name pos:line="1947" pos:column="62">IDF_WHICH_DIRECTION</name><op:operator pos:line="1947" pos:column="81">)</op:operator><op:operator pos:line="1947" pos:column="82">&gt;</op:operator> <lit:literal type="number" pos:line="1947" pos:column="84">0</lit:literal><op:operator pos:line="1947" pos:column="85">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="1948" pos:column="25">_env</name><op:operator pos:line="1948" pos:column="29">-&gt;</op:operator><name pos:line="1948" pos:column="31">_dotMatchesNewline</name></name> <op:operator pos:line="1948" pos:column="50">=</op:operator> <op:operator pos:line="1948" pos:column="52">(</op:operator><op:operator pos:line="1948" pos:column="53">(</op:operator><name pos:line="1948" pos:column="54">intValue</name> <op:operator pos:line="1948" pos:column="63">&amp;</op:operator> <name pos:line="1948" pos:column="65">IDF_REDOTMATCHNL</name><op:operator pos:line="1948" pos:column="81">)</op:operator><op:operator pos:line="1948" pos:column="82">&gt;</op:operator> <lit:literal type="number" pos:line="1948" pos:column="84">0</lit:literal><op:operator pos:line="1948" pos:column="85">)</op:operator></expr>;</expr_stmt>
			<break pos:line="1949" pos:column="25">break;</break>
		</case><case pos:line="1950" pos:column="17">case <expr><name pos:line="1950" pos:column="22">IDNORMAL</name></expr>:
			<expr_stmt><expr><name><name pos:line="1951" pos:column="25">_env</name><op:operator pos:line="1951" pos:column="29">-&gt;</op:operator><name pos:line="1951" pos:column="31">_searchType</name></name> <op:operator pos:line="1951" pos:column="43">=</op:operator> <op:operator pos:line="1951" pos:column="45">(</op:operator><name pos:line="1951" pos:column="46">SearchType</name><op:operator pos:line="1951" pos:column="56">)</op:operator><name pos:line="1951" pos:column="57">intValue</name></expr>;</expr_stmt>
			<break pos:line="1952" pos:column="25">break;</break>
		</case><case pos:line="1953" pos:column="17">case <expr><name pos:line="1953" pos:column="22">IDREPLACEWITH</name></expr>:
			<expr_stmt><expr><name><name pos:line="1954" pos:column="25">_env</name><op:operator pos:line="1954" pos:column="29">-&gt;</op:operator><name pos:line="1954" pos:column="31">_str4Replace</name></name> <op:operator pos:line="1954" pos:column="44">=</op:operator> <name pos:line="1954" pos:column="46">stringValue</name></expr>;</expr_stmt>
			<break pos:line="1955" pos:column="25">break;</break>
		</case><case pos:line="1956" pos:column="17">case <expr><name pos:line="1956" pos:column="22">IDD_FINDINFILES_DIR_COMBO</name></expr>:
			<expr_stmt><expr><name><name pos:line="1957" pos:column="25">_env</name><op:operator pos:line="1957" pos:column="29">-&gt;</op:operator><name pos:line="1957" pos:column="31">_directory</name></name> <op:operator pos:line="1957" pos:column="42">=</op:operator> <name pos:line="1957" pos:column="44">stringValue</name></expr>;</expr_stmt>
			<break pos:line="1958" pos:column="25">break;</break>
		</case><case pos:line="1959" pos:column="17">case <expr><name pos:line="1959" pos:column="22">IDD_FINDINFILES_FILTERS_COMBO</name></expr>:
			<expr_stmt><expr><name><name pos:line="1960" pos:column="25">_env</name><op:operator pos:line="1960" pos:column="29">-&gt;</op:operator><name pos:line="1960" pos:column="31">_filters</name></name> <op:operator pos:line="1960" pos:column="40">=</op:operator> <name pos:line="1960" pos:column="42">stringValue</name></expr>;</expr_stmt>
			<break pos:line="1961" pos:column="25">break;</break>
		</case><case pos:line="1962" pos:column="17">case <expr><name pos:line="1962" pos:column="22">IDC_FRCOMMAND_EXEC</name></expr>:
		<block pos:line="1963" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1964" pos:column="25">NppParameters</name> <type:modifier pos:line="1964" pos:column="39">*</type:modifier></type><name pos:line="1964" pos:column="40">nppParamInst</name> <init pos:line="1964" pos:column="53">= <expr><call><name><name pos:line="1964" pos:column="55">NppParameters</name><op:operator pos:line="1964" pos:column="68">::</op:operator><name pos:line="1964" pos:column="70">getInstance</name></name><argument_list pos:line="1964" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<switch pos:line="1965" pos:column="25">switch<condition pos:line="1965" pos:column="31">(<expr><name pos:line="1965" pos:column="32">intValue</name></expr>)</condition>
			<block pos:line="1966" pos:column="25">{
				<case pos:line="1967" pos:column="33">case <expr><name pos:line="1967" pos:column="38">IDOK</name></expr>:
					<expr_stmt><expr><name><name pos:line="1968" pos:column="41">nppParamInst</name><op:operator pos:line="1968" pos:column="53">-&gt;</op:operator><name pos:line="1968" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1968" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1968" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1969" pos:column="41">processFindNext</name><argument_list pos:line="1969" pos:column="56">(<argument><expr><call><name><name pos:line="1969" pos:column="57">_env</name><op:operator pos:line="1969" pos:column="61">-&gt;</op:operator><name pos:line="1969" pos:column="63">_str2Search</name><op:operator pos:line="1969" pos:column="74">.</op:operator><name pos:line="1969" pos:column="75">c_str</name></name><argument_list pos:line="1969" pos:column="80">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1970" pos:column="41">nppParamInst</name><op:operator pos:line="1970" pos:column="53">-&gt;</op:operator><name pos:line="1970" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1970" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1970" pos:column="74">false</lit:literal></expr>;</expr_stmt>
					<break pos:line="1971" pos:column="41">break;</break>
				</case><case pos:line="1972" pos:column="33">case <expr><name pos:line="1972" pos:column="38">IDREPLACE</name></expr>:
					<expr_stmt><expr><name><name pos:line="1973" pos:column="41">nppParamInst</name><op:operator pos:line="1973" pos:column="53">-&gt;</op:operator><name pos:line="1973" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1973" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1973" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1974" pos:column="41">processReplace</name><argument_list pos:line="1974" pos:column="55">(<argument><expr><call><name><name pos:line="1974" pos:column="56">_env</name><op:operator pos:line="1974" pos:column="60">-&gt;</op:operator><name pos:line="1974" pos:column="62">_str2Search</name><op:operator pos:line="1974" pos:column="73">.</op:operator><name pos:line="1974" pos:column="74">c_str</name></name><argument_list pos:line="1974" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1974" pos:column="83">_env</name><op:operator pos:line="1974" pos:column="87">-&gt;</op:operator><name pos:line="1974" pos:column="89">_str4Replace</name><op:operator pos:line="1974" pos:column="101">.</op:operator><name pos:line="1974" pos:column="102">c_str</name></name><argument_list pos:line="1974" pos:column="107">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1974" pos:column="111">_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1975" pos:column="41">nppParamInst</name><op:operator pos:line="1975" pos:column="53">-&gt;</op:operator><name pos:line="1975" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1975" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1975" pos:column="74">false</lit:literal></expr>;</expr_stmt>
					<break pos:line="1976" pos:column="41">break;</break>
				</case><case pos:line="1977" pos:column="33">case <expr><name pos:line="1977" pos:column="38">IDC_FINDALL_OPENEDFILES</name></expr>:
					<expr_stmt><expr><name><name pos:line="1978" pos:column="41">nppParamInst</name><op:operator pos:line="1978" pos:column="53">-&gt;</op:operator><name pos:line="1978" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1978" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1978" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1979" pos:column="41">findAllIn</name><argument_list pos:line="1979" pos:column="50">(<argument><expr><name pos:line="1979" pos:column="51">ALL_OPEN_DOCS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1980" pos:column="41">nppParamInst</name><op:operator pos:line="1980" pos:column="53">-&gt;</op:operator><name pos:line="1980" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1980" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1980" pos:column="74">false</lit:literal></expr>;</expr_stmt>
					<break pos:line="1981" pos:column="41">break;</break>
				</case><case pos:line="1982" pos:column="33">case <expr><name pos:line="1982" pos:column="38">IDC_FINDALL_CURRENTFILE</name></expr>:
					<expr_stmt><expr><name><name pos:line="1983" pos:column="41">nppParamInst</name><op:operator pos:line="1983" pos:column="53">-&gt;</op:operator><name pos:line="1983" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1983" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1983" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1984" pos:column="41">findAllIn</name><argument_list pos:line="1984" pos:column="50">(<argument><expr><name pos:line="1984" pos:column="51">FILES_IN_DIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1985" pos:column="41">nppParamInst</name><op:operator pos:line="1985" pos:column="53">-&gt;</op:operator><name pos:line="1985" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1985" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1985" pos:column="74">false</lit:literal></expr>;</expr_stmt>
					<break pos:line="1986" pos:column="41">break;</break>
				</case><case pos:line="1987" pos:column="33">case <expr><name pos:line="1987" pos:column="38">IDC_REPLACE_OPENEDFILES</name></expr> :
					<expr_stmt><expr><name><name pos:line="1988" pos:column="41">nppParamInst</name><op:operator pos:line="1988" pos:column="53">-&gt;</op:operator><name pos:line="1988" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1988" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1988" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1989" pos:column="41">replaceAllInOpenedDocs</name><argument_list pos:line="1989" pos:column="63">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1990" pos:column="41">nppParamInst</name><op:operator pos:line="1990" pos:column="53">-&gt;</op:operator><name pos:line="1990" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1990" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1990" pos:column="74">false</lit:literal></expr>;</expr_stmt>
					<break pos:line="1991" pos:column="41">break;</break>
				</case><case pos:line="1992" pos:column="33">case <expr><name pos:line="1992" pos:column="38">IDD_FINDINFILES_FIND_BUTTON</name></expr> :
					<expr_stmt><expr><name><name pos:line="1993" pos:column="41">nppParamInst</name><op:operator pos:line="1993" pos:column="53">-&gt;</op:operator><name pos:line="1993" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1993" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1993" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="1994" pos:column="41">findAllIn</name><argument_list pos:line="1994" pos:column="50">(<argument><expr><name pos:line="1994" pos:column="51">FILES_IN_DIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="1995" pos:column="41">nppParamInst</name><op:operator pos:line="1995" pos:column="53">-&gt;</op:operator><name pos:line="1995" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="1995" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="1995" pos:column="74">false</lit:literal></expr>;</expr_stmt>
					<break pos:line="1996" pos:column="41">break;</break>

				</case><case pos:line="1998" pos:column="33">case <expr><name pos:line="1998" pos:column="38">IDD_FINDINFILES_REPLACEINFILES</name></expr> :
				<block pos:line="1999" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="2000" pos:column="41">generic_string</name></type> <name pos:line="2000" pos:column="56">msg</name> <init pos:line="2000" pos:column="60">= <expr><call><name pos:line="2000" pos:column="62">TEXT</name><argument_list pos:line="2000" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2000" pos:column="67">"Are you sure you want to replace all occurrences in :\r"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="2001" pos:column="41">msg</name> <op:operator pos:line="2001" pos:column="45">+=</op:operator> <name><name pos:line="2001" pos:column="48">_env</name><op:operator pos:line="2001" pos:column="52">-&gt;</op:operator><name pos:line="2001" pos:column="54">_directory</name></name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="2002" pos:column="41">msg</name> <op:operator pos:line="2002" pos:column="45">+=</op:operator> <call><name pos:line="2002" pos:column="48">TEXT</name><argument_list pos:line="2002" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="2002" pos:column="53">"\rfor file type : "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="2003" pos:column="41">msg</name> <op:operator pos:line="2003" pos:column="45">+=</op:operator> <op:operator pos:line="2003" pos:column="48">(</op:operator><name><name pos:line="2003" pos:column="49">_env</name><op:operator pos:line="2003" pos:column="53">-&gt;</op:operator><name pos:line="2003" pos:column="55">_filters</name><index pos:line="2003" pos:column="63">[<expr><lit:literal type="number" pos:line="2003" pos:column="64">0</lit:literal></expr>]</index></name><op:operator pos:line="2003" pos:column="66">)</op:operator><op:operator pos:line="2003" pos:column="67">?</op:operator><name><name pos:line="2003" pos:column="68">_env</name><op:operator pos:line="2003" pos:column="72">-&gt;</op:operator><name pos:line="2003" pos:column="74">_filters</name></name><op:operator pos:line="2003" pos:column="82">:</op:operator><call><name pos:line="2003" pos:column="83">TEXT</name><argument_list pos:line="2003" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="2003" pos:column="88">"*.*"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<if pos:line="2005" pos:column="41">if <condition pos:line="2005" pos:column="44">(<expr><call><name><op:operator pos:line="2005" pos:column="45">::</op:operator><name pos:line="2005" pos:column="47">MessageBox</name></name><argument_list pos:line="2005" pos:column="57">(<argument><expr><name pos:line="2005" pos:column="58">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="2005" pos:column="68">msg</name><op:operator pos:line="2005" pos:column="71">.</op:operator><name pos:line="2005" pos:column="72">c_str</name></name><argument_list pos:line="2005" pos:column="77">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2005" pos:column="81">TEXT</name><argument_list pos:line="2005" pos:column="85">(<argument><expr><lit:literal type="string" pos:line="2005" pos:column="86">"Are you sure?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2005" pos:column="104">MB_OKCANCEL</name></expr></argument>)</argument_list></call> <op:operator pos:line="2005" pos:column="117">==</op:operator> <name pos:line="2005" pos:column="120">IDOK</name></expr>)</condition><then pos:line="2005" pos:column="125">
					<block pos:line="2006" pos:column="41">{
						<expr_stmt><expr><name><name pos:line="2007" pos:column="49">nppParamInst</name><op:operator pos:line="2007" pos:column="61">-&gt;</op:operator><name pos:line="2007" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="2007" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="2007" pos:column="82">true</lit:literal></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="2008" pos:column="49">::</op:operator><name pos:line="2008" pos:column="51">SendMessage</name></name><argument_list pos:line="2008" pos:column="62">(<argument><expr><name pos:line="2008" pos:column="63">_hParent</name></expr></argument>, <argument><expr><name pos:line="2008" pos:column="73">WM_REPLACEINFILES</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2008" pos:column="92">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2008" pos:column="95">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="2009" pos:column="49">nppParamInst</name><op:operator pos:line="2009" pos:column="61">-&gt;</op:operator><name pos:line="2009" pos:column="63">_isFindReplacing</name></name> <op:operator pos:line="2009" pos:column="80">=</op:operator> <lit:literal type="boolean" pos:line="2009" pos:column="82">false</lit:literal></expr>;</expr_stmt>
					}</block></then></if>
					<break pos:line="2011" pos:column="41">break;</break>
				}</block>
				</case><case pos:line="2013" pos:column="33">case <expr><name pos:line="2013" pos:column="38">IDREPLACEALL</name></expr> :
				<block pos:line="2014" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="2015" pos:column="41">nppParamInst</name><op:operator pos:line="2015" pos:column="53">-&gt;</op:operator><name pos:line="2015" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="2015" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="2015" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="2016" pos:column="41">(<type:modifier pos:line="2016" pos:column="42">*</type:modifier><name pos:line="2016" pos:column="43">_ppEditView</name>)<op:operator pos:line="2016" pos:column="55">-&gt;</op:operator><name pos:line="2016" pos:column="57">execute</name></name><argument_list pos:line="2016" pos:column="64">(<argument><expr><name pos:line="2016" pos:column="65">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="2017" pos:column="41">int</name></type> <name pos:line="2017" pos:column="45">nbReplaced</name> <init pos:line="2017" pos:column="56">= <expr><call><name pos:line="2017" pos:column="58">processAll</name><argument_list pos:line="2017" pos:column="68">(<argument><expr><name pos:line="2017" pos:column="69">ProcessReplaceAll</name></expr></argument>, <argument><expr><name pos:line="2017" pos:column="88">_env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="2018" pos:column="41">(<type:modifier pos:line="2018" pos:column="42">*</type:modifier><name pos:line="2018" pos:column="43">_ppEditView</name>)<op:operator pos:line="2018" pos:column="55">-&gt;</op:operator><name pos:line="2018" pos:column="57">execute</name></name><argument_list pos:line="2018" pos:column="64">(<argument><expr><name pos:line="2018" pos:column="65">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="2019" pos:column="41">nppParamInst</name><op:operator pos:line="2019" pos:column="53">-&gt;</op:operator><name pos:line="2019" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="2019" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="2019" pos:column="74">false</lit:literal></expr>;</expr_stmt>

					<decl_stmt><decl><type><name pos:line="2021" pos:column="41">generic_string</name></type> <name pos:line="2021" pos:column="56">result</name> <init pos:line="2021" pos:column="63">= <expr><call><name pos:line="2021" pos:column="65">TEXT</name><argument_list pos:line="2021" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2021" pos:column="70">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					
					<if pos:line="2023" pos:column="41">if <condition pos:line="2023" pos:column="44">(<expr><name pos:line="2023" pos:column="45">nbReplaced</name> <op:operator pos:line="2023" pos:column="56">&lt;</op:operator> <lit:literal type="number" pos:line="2023" pos:column="58">0</lit:literal></expr>)</condition><then pos:line="2023" pos:column="60">
						<expr_stmt><expr><name pos:line="2024" pos:column="49">result</name> <op:operator pos:line="2024" pos:column="56">=</op:operator> <call><name pos:line="2024" pos:column="58">TEXT</name><argument_list pos:line="2024" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2024" pos:column="63">"The regular expression is malformed."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
					<else pos:line="2025" pos:column="41">else
					<block pos:line="2026" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="2027" pos:column="49">TCHAR</name></type> <name><name pos:line="2027" pos:column="55">moreInfo</name><index pos:line="2027" pos:column="63">[<expr><lit:literal type="number" pos:line="2027" pos:column="64">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
						<if pos:line="2028" pos:column="49">if<condition pos:line="2028" pos:column="51">(<expr><name pos:line="2028" pos:column="52">nbReplaced</name> <op:operator pos:line="2028" pos:column="63">==</op:operator> <lit:literal type="number" pos:line="2028" pos:column="66">1</lit:literal></expr>)</condition><then pos:line="2028" pos:column="68">
							<expr_stmt><expr><call><name pos:line="2029" pos:column="57">wsprintf</name><argument_list pos:line="2029" pos:column="65">(<argument><expr><name pos:line="2029" pos:column="66">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="2029" pos:column="76">TEXT</name><argument_list pos:line="2029" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="2029" pos:column="81">"1 occurrence was replaced."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
						<else pos:line="2030" pos:column="49">else
							<expr_stmt><expr><call><name pos:line="2031" pos:column="57">wsprintf</name><argument_list pos:line="2031" pos:column="65">(<argument><expr><name pos:line="2031" pos:column="66">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="2031" pos:column="76">TEXT</name><argument_list pos:line="2031" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="2031" pos:column="81">"%d occurrences were replaced."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2031" pos:column="115">nbReplaced</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
						<expr_stmt><expr><name pos:line="2032" pos:column="49">result</name> <op:operator pos:line="2032" pos:column="56">=</op:operator> <name pos:line="2032" pos:column="58">moreInfo</name></expr>;</expr_stmt>
					}</block></else></if>
					<expr_stmt><expr><call><name><op:operator pos:line="2034" pos:column="41">::</op:operator><name pos:line="2034" pos:column="43">MessageBox</name></name><argument_list pos:line="2034" pos:column="53">(<argument><expr><name pos:line="2034" pos:column="54">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="2034" pos:column="64">result</name><op:operator pos:line="2034" pos:column="70">.</op:operator><name pos:line="2034" pos:column="71">c_str</name></name><argument_list pos:line="2034" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2034" pos:column="80">TEXT</name><argument_list pos:line="2034" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="2034" pos:column="85">"Replace All"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2034" pos:column="101">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="2035" pos:column="41">break;</break>
				}</block>
				</case><case pos:line="2037" pos:column="33">case <expr><name pos:line="2037" pos:column="38">IDCCOUNTALL</name></expr> :
				<block pos:line="2038" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="2039" pos:column="41">int</name></type> <name pos:line="2039" pos:column="45">nbCounted</name> <init pos:line="2039" pos:column="55">= <expr><call><name pos:line="2039" pos:column="57">processAll</name><argument_list pos:line="2039" pos:column="67">(<argument><expr><name pos:line="2039" pos:column="68">ProcessCountAll</name></expr></argument>, <argument><expr><name pos:line="2039" pos:column="85">_env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="2040" pos:column="41">generic_string</name></type> <name pos:line="2040" pos:column="56">result</name> <init pos:line="2040" pos:column="63">= <expr><call><name pos:line="2040" pos:column="65">TEXT</name><argument_list pos:line="2040" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2040" pos:column="70">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<if pos:line="2042" pos:column="41">if <condition pos:line="2042" pos:column="44">(<expr><name pos:line="2042" pos:column="45">nbCounted</name> <op:operator pos:line="2042" pos:column="55">&lt;</op:operator> <lit:literal type="number" pos:line="2042" pos:column="57">0</lit:literal></expr>)</condition><then pos:line="2042" pos:column="59">
						<expr_stmt><expr><name pos:line="2043" pos:column="49">result</name> <op:operator pos:line="2043" pos:column="56">=</op:operator> <call><name pos:line="2043" pos:column="58">TEXT</name><argument_list pos:line="2043" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2043" pos:column="63">"The regular expression to search is malformed.\r\nDoes it result in nothing?"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
					<else pos:line="2044" pos:column="41">else
					<block pos:line="2045" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="2046" pos:column="49">TCHAR</name></type> <name><name pos:line="2046" pos:column="55">moreInfo</name><index pos:line="2046" pos:column="63">[<expr><lit:literal type="number" pos:line="2046" pos:column="64">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>
						<if pos:line="2047" pos:column="49">if<condition pos:line="2047" pos:column="51">(<expr><name pos:line="2047" pos:column="52">nbCounted</name> <op:operator pos:line="2047" pos:column="62">==</op:operator> <lit:literal type="number" pos:line="2047" pos:column="65">1</lit:literal></expr>)</condition><then pos:line="2047" pos:column="67">
						<expr_stmt><expr><call><name pos:line="2048" pos:column="49">wsprintf</name><argument_list pos:line="2048" pos:column="57">(<argument><expr><name pos:line="2048" pos:column="58">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="2048" pos:column="68">TEXT</name><argument_list pos:line="2048" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="2048" pos:column="73">"1 match."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
						<else pos:line="2049" pos:column="49">else
							<expr_stmt><expr><call><name pos:line="2050" pos:column="57">wsprintf</name><argument_list pos:line="2050" pos:column="65">(<argument><expr><name pos:line="2050" pos:column="66">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="2050" pos:column="76">TEXT</name><argument_list pos:line="2050" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="2050" pos:column="81">"%d matches."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2050" pos:column="97">nbCounted</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
						<expr_stmt><expr><name pos:line="2051" pos:column="49">result</name> <op:operator pos:line="2051" pos:column="56">=</op:operator> <name pos:line="2051" pos:column="58">moreInfo</name></expr>;</expr_stmt>
					}</block></else></if>
					<expr_stmt><expr><call><name><op:operator pos:line="2053" pos:column="41">::</op:operator><name pos:line="2053" pos:column="43">MessageBox</name></name><argument_list pos:line="2053" pos:column="53">(<argument><expr><name pos:line="2053" pos:column="54">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="2053" pos:column="64">result</name><op:operator pos:line="2053" pos:column="70">.</op:operator><name pos:line="2053" pos:column="71">c_str</name></name><argument_list pos:line="2053" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2053" pos:column="80">TEXT</name><argument_list pos:line="2053" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="2053" pos:column="85">"Count"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2053" pos:column="95">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="2054" pos:column="41">break;</break>
				}</block>
				</case><case pos:line="2056" pos:column="33">case <expr><name pos:line="2056" pos:column="38">IDCMARKALL</name></expr>:
				<block pos:line="2057" pos:column="33">{
					<expr_stmt><expr><name><name pos:line="2058" pos:column="41">nppParamInst</name><op:operator pos:line="2058" pos:column="53">-&gt;</op:operator><name pos:line="2058" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="2058" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="2058" pos:column="74">true</lit:literal></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="2059" pos:column="41">int</name></type> <name pos:line="2059" pos:column="45">nbMarked</name> <init pos:line="2059" pos:column="54">= <expr><call><name pos:line="2059" pos:column="56">processAll</name><argument_list pos:line="2059" pos:column="66">(<argument><expr><name pos:line="2059" pos:column="67">ProcessMarkAll</name></expr></argument>, <argument><expr><name pos:line="2059" pos:column="83">_env</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="2060" pos:column="41">nppParamInst</name><op:operator pos:line="2060" pos:column="53">-&gt;</op:operator><name pos:line="2060" pos:column="55">_isFindReplacing</name></name> <op:operator pos:line="2060" pos:column="72">=</op:operator> <lit:literal type="boolean" pos:line="2060" pos:column="74">false</lit:literal></expr>;</expr_stmt>
					<decl_stmt><decl><type><name pos:line="2061" pos:column="41">generic_string</name></type> <name pos:line="2061" pos:column="56">result</name> <init pos:line="2061" pos:column="63">= <expr><call><name pos:line="2061" pos:column="65">TEXT</name><argument_list pos:line="2061" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2061" pos:column="70">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="2062" pos:column="41">if <condition pos:line="2062" pos:column="44">(<expr><name pos:line="2062" pos:column="45">nbMarked</name> <op:operator pos:line="2062" pos:column="54">&lt;</op:operator> <lit:literal type="number" pos:line="2062" pos:column="56">0</lit:literal></expr>)</condition><then pos:line="2062" pos:column="58">
						<expr_stmt><expr><name pos:line="2063" pos:column="49">result</name> <op:operator pos:line="2063" pos:column="56">=</op:operator> <call><name pos:line="2063" pos:column="58">TEXT</name><argument_list pos:line="2063" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="2063" pos:column="63">"The regular expression to search is malformed.\r\nDoes it result in nothing?"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
					<else pos:line="2064" pos:column="41">else
					<block pos:line="2065" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="2066" pos:column="49">TCHAR</name></type> <name><name pos:line="2066" pos:column="55">moreInfo</name><index pos:line="2066" pos:column="63">[<expr><lit:literal type="number" pos:line="2066" pos:column="64">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>
						<if pos:line="2067" pos:column="49">if<condition pos:line="2067" pos:column="51">(<expr><name pos:line="2067" pos:column="52">nbMarked</name> <op:operator pos:line="2067" pos:column="61">==</op:operator> <lit:literal type="number" pos:line="2067" pos:column="64">1</lit:literal></expr>)</condition><then pos:line="2067" pos:column="66">
						<expr_stmt><expr><call><name pos:line="2068" pos:column="49">wsprintf</name><argument_list pos:line="2068" pos:column="57">(<argument><expr><name pos:line="2068" pos:column="58">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="2068" pos:column="68">TEXT</name><argument_list pos:line="2068" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="2068" pos:column="73">"1 match."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
						<else pos:line="2069" pos:column="49">else
							<expr_stmt><expr><call><name pos:line="2070" pos:column="57">wsprintf</name><argument_list pos:line="2070" pos:column="65">(<argument><expr><name pos:line="2070" pos:column="66">moreInfo</name></expr></argument>, <argument><expr><call><name pos:line="2070" pos:column="76">TEXT</name><argument_list pos:line="2070" pos:column="80">(<argument><expr><lit:literal type="string" pos:line="2070" pos:column="81">"%d matches."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2070" pos:column="97">nbMarked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
						<expr_stmt><expr><name pos:line="2071" pos:column="49">result</name> <op:operator pos:line="2071" pos:column="56">=</op:operator> <name pos:line="2071" pos:column="58">moreInfo</name></expr>;</expr_stmt>
					}</block></else></if>
					<expr_stmt><expr><call><name><op:operator pos:line="2073" pos:column="41">::</op:operator><name pos:line="2073" pos:column="43">MessageBox</name></name><argument_list pos:line="2073" pos:column="53">(<argument><expr><name pos:line="2073" pos:column="54">_hParent</name></expr></argument>, <argument><expr><call><name><name pos:line="2073" pos:column="64">result</name><op:operator pos:line="2073" pos:column="70">.</op:operator><name pos:line="2073" pos:column="71">c_str</name></name><argument_list pos:line="2073" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2073" pos:column="80">TEXT</name><argument_list pos:line="2073" pos:column="84">(<argument><expr><lit:literal type="string" pos:line="2073" pos:column="85">"Mark"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2073" pos:column="94">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<break pos:line="2074" pos:column="41">break;</break>
				}</block>
				</case><default pos:line="2076" pos:column="33">default:
					<throw pos:line="2077" pos:column="41">throw <expr><call><name><name pos:line="2077" pos:column="47">std</name><op:operator pos:line="2077" pos:column="50">::</op:operator><name pos:line="2077" pos:column="52">runtime_error</name></name><argument_list pos:line="2077" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="2077" pos:column="66">"Internal error: unknown saved command!"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
			</default>}</block></switch>
			<expr_stmt><expr><op:operator pos:line="2079" pos:column="25">delete</op:operator> <name pos:line="2079" pos:column="32">_env</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="2080" pos:column="25">_env</name> <op:operator pos:line="2080" pos:column="30">=</op:operator> <op:operator pos:line="2080" pos:column="32">&amp;</op:operator><name pos:line="2080" pos:column="33">_options</name></expr>;</expr_stmt>
			<break pos:line="2081" pos:column="25">break;</break>
		}</block>
		</case><default pos:line="2083" pos:column="17">default:
			<throw pos:line="2084" pos:column="25">throw <expr><call><name><name pos:line="2084" pos:column="31">std</name><op:operator pos:line="2084" pos:column="34">::</op:operator><name pos:line="2084" pos:column="36">runtime_error</name></name><argument_list pos:line="2084" pos:column="49">(<argument><expr><lit:literal type="string" pos:line="2084" pos:column="50">"Internal error: unknown SnR command!"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="2088" pos:column="1">void</name></type> <name><name pos:line="2088" pos:column="6">FindReplaceDlg</name><op:operator pos:line="2088" pos:column="20">::</op:operator><name pos:line="2088" pos:column="22">setFindInFilesDirFilter</name></name><parameter_list pos:line="2088" pos:column="45">(<param><decl><type><specifier pos:line="2088" pos:column="46">const</specifier> <name pos:line="2088" pos:column="52">TCHAR</name> <type:modifier pos:line="2088" pos:column="58">*</type:modifier></type><name pos:line="2088" pos:column="59">dir</name></decl></param>, <param><decl><type><specifier pos:line="2088" pos:column="64">const</specifier> <name pos:line="2088" pos:column="70">TCHAR</name> <type:modifier pos:line="2088" pos:column="76">*</type:modifier></type><name pos:line="2088" pos:column="77">filters</name></decl></param>)</parameter_list>
<block pos:line="2089" pos:column="1">{
	<if pos:line="2090" pos:column="9">if <condition pos:line="2090" pos:column="12">(<expr><name pos:line="2090" pos:column="13">dir</name></expr>)</condition><then pos:line="2090" pos:column="17">
	<block pos:line="2091" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="2092" pos:column="17">_options</name><op:operator pos:line="2092" pos:column="25">.</op:operator><name pos:line="2092" pos:column="26">_directory</name></name> <op:operator pos:line="2092" pos:column="37">=</op:operator> <name pos:line="2092" pos:column="39">dir</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="2093" pos:column="17">::</op:operator><name pos:line="2093" pos:column="19">SetDlgItemText</name></name><argument_list pos:line="2093" pos:column="33">(<argument><expr><name pos:line="2093" pos:column="34">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2093" pos:column="42">IDD_FINDINFILES_DIR_COMBO</name></expr></argument>, <argument><expr><name pos:line="2093" pos:column="69">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<if pos:line="2095" pos:column="9">if <condition pos:line="2095" pos:column="12">(<expr><name pos:line="2095" pos:column="13">filters</name></expr>)</condition><then pos:line="2095" pos:column="21">
	<block pos:line="2096" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="2097" pos:column="17">_options</name><op:operator pos:line="2097" pos:column="25">.</op:operator><name pos:line="2097" pos:column="26">_filters</name></name> <op:operator pos:line="2097" pos:column="35">=</op:operator> <name pos:line="2097" pos:column="37">filters</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="2098" pos:column="17">::</op:operator><name pos:line="2098" pos:column="19">SetDlgItemText</name></name><argument_list pos:line="2098" pos:column="33">(<argument><expr><name pos:line="2098" pos:column="34">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2098" pos:column="42">IDD_FINDINFILES_FILTERS_COMBO</name></expr></argument>, <argument><expr><name pos:line="2098" pos:column="73">filters</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2102" pos:column="1">void</name></type> <name><name pos:line="2102" pos:column="6">FindReplaceDlg</name><op:operator pos:line="2102" pos:column="20">::</op:operator><name pos:line="2102" pos:column="22">initOptionsFromDlg</name></name><parameter_list pos:line="2102" pos:column="40">()</parameter_list>
<block pos:line="2103" pos:column="1">{
	<expr_stmt><expr><name><name pos:line="2104" pos:column="9">_options</name><op:operator pos:line="2104" pos:column="17">.</op:operator><name pos:line="2104" pos:column="18">_isWholeWord</name></name> <op:operator pos:line="2104" pos:column="31">=</op:operator> <call><name pos:line="2104" pos:column="33">isCheckedOrNot</name><argument_list pos:line="2104" pos:column="47">(<argument><expr><name pos:line="2104" pos:column="48">IDWHOLEWORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2105" pos:column="9">_options</name><op:operator pos:line="2105" pos:column="17">.</op:operator><name pos:line="2105" pos:column="18">_isMatchCase</name></name> <op:operator pos:line="2105" pos:column="31">=</op:operator> <call><name pos:line="2105" pos:column="33">isCheckedOrNot</name><argument_list pos:line="2105" pos:column="47">(<argument><expr><name pos:line="2105" pos:column="48">IDMATCHCASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2106" pos:column="9">_options</name><op:operator pos:line="2106" pos:column="17">.</op:operator><name pos:line="2106" pos:column="18">_searchType</name></name> <op:operator pos:line="2106" pos:column="30">=</op:operator> <call><name pos:line="2106" pos:column="32">isCheckedOrNot</name><argument_list pos:line="2106" pos:column="46">(<argument><expr><name pos:line="2106" pos:column="47">IDREGEXP</name></expr></argument>)</argument_list></call><op:operator pos:line="2106" pos:column="56">?</op:operator><name pos:line="2106" pos:column="57">FindRegex</name><op:operator pos:line="2106" pos:column="66">:</op:operator><call><name pos:line="2106" pos:column="67">isCheckedOrNot</name><argument_list pos:line="2106" pos:column="81">(<argument><expr><name pos:line="2106" pos:column="82">IDEXTENDED</name></expr></argument>)</argument_list></call><op:operator pos:line="2106" pos:column="93">?</op:operator><name pos:line="2106" pos:column="94">FindExtended</name><op:operator pos:line="2106" pos:column="106">:</op:operator><name pos:line="2106" pos:column="107">FindNormal</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2107" pos:column="9">_options</name><op:operator pos:line="2107" pos:column="17">.</op:operator><name pos:line="2107" pos:column="18">_isWrapAround</name></name> <op:operator pos:line="2107" pos:column="32">=</op:operator> <call><name pos:line="2107" pos:column="34">isCheckedOrNot</name><argument_list pos:line="2107" pos:column="48">(<argument><expr><name pos:line="2107" pos:column="49">IDWRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2108" pos:column="9">_options</name><op:operator pos:line="2108" pos:column="17">.</op:operator><name pos:line="2108" pos:column="18">_isInSelection</name></name> <op:operator pos:line="2108" pos:column="33">=</op:operator> <call><name pos:line="2108" pos:column="35">isCheckedOrNot</name><argument_list pos:line="2108" pos:column="49">(<argument><expr><name pos:line="2108" pos:column="50">IDC_IN_SELECTION_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="2110" pos:column="9">_options</name><op:operator pos:line="2110" pos:column="17">.</op:operator><name pos:line="2110" pos:column="18">_dotMatchesNewline</name></name> <op:operator pos:line="2110" pos:column="37">=</op:operator> <call><name pos:line="2110" pos:column="39">isCheckedOrNot</name><argument_list pos:line="2110" pos:column="53">(<argument><expr><name pos:line="2110" pos:column="54">IDREDOTMATCHNL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2111" pos:column="9">_options</name><op:operator pos:line="2111" pos:column="17">.</op:operator><name pos:line="2111" pos:column="18">_doPurge</name></name> <op:operator pos:line="2111" pos:column="27">=</op:operator> <call><name pos:line="2111" pos:column="29">isCheckedOrNot</name><argument_list pos:line="2111" pos:column="43">(<argument><expr><name pos:line="2111" pos:column="44">IDC_PURGE_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2112" pos:column="9">_options</name><op:operator pos:line="2112" pos:column="17">.</op:operator><name pos:line="2112" pos:column="18">_doMarkLine</name></name> <op:operator pos:line="2112" pos:column="30">=</op:operator> <call><name pos:line="2112" pos:column="32">isCheckedOrNot</name><argument_list pos:line="2112" pos:column="46">(<argument><expr><name pos:line="2112" pos:column="47">IDC_MARKLINE_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="2114" pos:column="9">_options</name><op:operator pos:line="2114" pos:column="17">.</op:operator><name pos:line="2114" pos:column="18">_whichDirection</name></name> <op:operator pos:line="2114" pos:column="34">=</op:operator> <call><name pos:line="2114" pos:column="36">isCheckedOrNot</name><argument_list pos:line="2114" pos:column="50">(<argument><expr><name pos:line="2114" pos:column="51">IDDIRECTIONDOWN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<expr_stmt><expr><name><name pos:line="2116" pos:column="9">_options</name><op:operator pos:line="2116" pos:column="17">.</op:operator><name pos:line="2116" pos:column="18">_isRecursive</name></name> <op:operator pos:line="2116" pos:column="31">=</op:operator> <call><name pos:line="2116" pos:column="33">isCheckedOrNot</name><argument_list pos:line="2116" pos:column="47">(<argument><expr><name pos:line="2116" pos:column="48">IDD_FINDINFILES_RECURSIVE_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2117" pos:column="9">_options</name><op:operator pos:line="2117" pos:column="17">.</op:operator><name pos:line="2117" pos:column="18">_isInHiddenDir</name></name> <op:operator pos:line="2117" pos:column="33">=</op:operator> <call><name pos:line="2117" pos:column="35">isCheckedOrNot</name><argument_list pos:line="2117" pos:column="49">(<argument><expr><name pos:line="2117" pos:column="50">IDD_FINDINFILES_INHIDDENDIR_CHECK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2120" pos:column="1">void</name></type> <name><name pos:line="2120" pos:column="6">FindReplaceDlg</name><op:operator pos:line="2120" pos:column="20">::</op:operator><name pos:line="2120" pos:column="22">doDialog</name></name><parameter_list pos:line="2120" pos:column="30">(<param><decl><type><name pos:line="2120" pos:column="31">DIALOG_TYPE</name></type> <name pos:line="2120" pos:column="43">whichType</name></decl></param>, <param><decl><type><name pos:line="2120" pos:column="54">bool</name></type> <name pos:line="2120" pos:column="59">isRTL</name></decl></param>, <param><decl><type><name pos:line="2120" pos:column="66">bool</name></type> <name pos:line="2120" pos:column="71">toShow</name></decl></param>)</parameter_list>
<block pos:line="2121" pos:column="1">{
	<if pos:line="2122" pos:column="9">if <condition pos:line="2122" pos:column="12">(<expr><op:operator pos:line="2122" pos:column="13">!</op:operator><call><name pos:line="2122" pos:column="14">isCreated</name><argument_list pos:line="2122" pos:column="23">()</argument_list></call></expr>)</condition><then pos:line="2122" pos:column="26">
	<block pos:line="2123" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="2124" pos:column="17">create</name><argument_list pos:line="2124" pos:column="23">(<argument><expr><name pos:line="2124" pos:column="24">IDD_FIND_REPLACE_DLG</name></expr></argument>, <argument><expr><name pos:line="2124" pos:column="46">isRTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2125" pos:column="17">_isRTL</name> <op:operator pos:line="2125" pos:column="24">=</op:operator> <name pos:line="2125" pos:column="26">isRTL</name></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="2128" pos:column="9">if <condition pos:line="2128" pos:column="12">(<expr><name pos:line="2128" pos:column="13">whichType</name> <op:operator pos:line="2128" pos:column="23">==</op:operator> <name pos:line="2128" pos:column="26">FINDINFILES_DLG</name></expr>)</condition><then pos:line="2128" pos:column="42">
		<expr_stmt><expr><call><name pos:line="2129" pos:column="17">enableFindInFilesFunc</name><argument_list pos:line="2129" pos:column="38">()</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="2130" pos:column="9">else <if pos:line="2130" pos:column="14">if <condition pos:line="2130" pos:column="17">(<expr><name pos:line="2130" pos:column="18">whichType</name> <op:operator pos:line="2130" pos:column="28">==</op:operator> <name pos:line="2130" pos:column="31">MARK_DLG</name></expr>)</condition><then pos:line="2130" pos:column="40">
		<expr_stmt><expr><call><name pos:line="2131" pos:column="17">enableMarkFunc</name><argument_list pos:line="2131" pos:column="31">()</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="2132" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="2133" pos:column="17">enableReplaceFunc</name><argument_list pos:line="2133" pos:column="34">(<argument><expr><name pos:line="2133" pos:column="35">whichType</name> <op:operator pos:line="2133" pos:column="45">==</op:operator> <name pos:line="2133" pos:column="48">REPLACE_DLG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if></else></if>

	<expr_stmt><expr><call><name><op:operator pos:line="2135" pos:column="9">::</op:operator><name pos:line="2135" pos:column="11">SetFocus</name></name><argument_list pos:line="2135" pos:column="19">(<argument><expr><call><name><op:operator pos:line="2135" pos:column="20">::</op:operator><name pos:line="2135" pos:column="22">GetDlgItem</name></name><argument_list pos:line="2135" pos:column="32">(<argument><expr><name pos:line="2135" pos:column="33">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2135" pos:column="41">IDFINDWHAT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name pos:line="2136" pos:column="5">display</name><argument_list pos:line="2136" pos:column="12">(<argument><expr><name pos:line="2136" pos:column="13">toShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2139" pos:column="1">LRESULT</name> <name pos:line="2139" pos:column="9">FAR</name> <name pos:line="2139" pos:column="13">PASCAL</name></type> <name><name pos:line="2139" pos:column="20">FindReplaceDlg</name><op:operator pos:line="2139" pos:column="34">::</op:operator><name pos:line="2139" pos:column="36">finderProc</name></name><parameter_list pos:line="2139" pos:column="46">(<param><decl><type><name pos:line="2139" pos:column="47">HWND</name></type> <name pos:line="2139" pos:column="52">hwnd</name></decl></param>, <param><decl><type><name pos:line="2139" pos:column="58">UINT</name></type> <name pos:line="2139" pos:column="63">message</name></decl></param>, <param><decl><type><name pos:line="2139" pos:column="72">WPARAM</name></type> <name pos:line="2139" pos:column="79">wParam</name></decl></param>, <param><decl><type><name pos:line="2139" pos:column="87">LPARAM</name></type> <name pos:line="2139" pos:column="94">lParam</name></decl></param>)</parameter_list>
<block pos:line="2140" pos:column="1">{
	<if pos:line="2141" pos:column="9">if <condition pos:line="2141" pos:column="12">(<expr><name pos:line="2141" pos:column="13">message</name> <op:operator pos:line="2141" pos:column="21">==</op:operator> <name pos:line="2141" pos:column="24">WM_KEYDOWN</name> <op:operator pos:line="2141" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="2141" pos:column="38">(</op:operator><name pos:line="2141" pos:column="39">wParam</name> <op:operator pos:line="2141" pos:column="46">==</op:operator> <name pos:line="2141" pos:column="49">VK_DELETE</name> <op:operator pos:line="2141" pos:column="59">||</op:operator> <name pos:line="2141" pos:column="62">wParam</name> <op:operator pos:line="2141" pos:column="69">==</op:operator> <name pos:line="2141" pos:column="72">VK_RETURN</name><op:operator pos:line="2141" pos:column="81">)</op:operator></expr>)</condition><then pos:line="2141" pos:column="83">
	<block pos:line="2142" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2143" pos:column="17">ScintillaEditView</name> <type:modifier pos:line="2143" pos:column="35">*</type:modifier></type><name pos:line="2143" pos:column="36">pScint</name> <init pos:line="2143" pos:column="43">= <expr><op:operator pos:line="2143" pos:column="45">(</op:operator><name pos:line="2143" pos:column="46">ScintillaEditView</name> <op:operator pos:line="2143" pos:column="64">*</op:operator><op:operator pos:line="2143" pos:column="65">)</op:operator><op:operator pos:line="2143" pos:column="66">(</op:operator><call><name><op:operator pos:line="2143" pos:column="67">::</op:operator><name pos:line="2143" pos:column="69">GetWindowLongPtr</name></name><argument_list pos:line="2143" pos:column="85">(<argument><expr><name pos:line="2143" pos:column="86">hwnd</name></expr></argument>, <argument><expr><name pos:line="2143" pos:column="92">GWL_USERDATA</name></expr></argument>)</argument_list></call><op:operator pos:line="2143" pos:column="105">)</op:operator></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="2144" pos:column="17">Finder</name> <type:modifier pos:line="2144" pos:column="24">*</type:modifier></type><name pos:line="2144" pos:column="25">pFinder</name> <init pos:line="2144" pos:column="33">= <expr><op:operator pos:line="2144" pos:column="35">(</op:operator><name pos:line="2144" pos:column="36">Finder</name> <op:operator pos:line="2144" pos:column="43">*</op:operator><op:operator pos:line="2144" pos:column="44">)</op:operator><op:operator pos:line="2144" pos:column="45">(</op:operator><call><name><op:operator pos:line="2144" pos:column="46">::</op:operator><name pos:line="2144" pos:column="48">GetWindowLongPtr</name></name><argument_list pos:line="2144" pos:column="64">(<argument><expr><call><name><name pos:line="2144" pos:column="65">pScint</name><op:operator pos:line="2144" pos:column="71">-&gt;</op:operator><name pos:line="2144" pos:column="73">getHParent</name></name><argument_list pos:line="2144" pos:column="83">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2144" pos:column="87">GWL_USERDATA</name></expr></argument>)</argument_list></call><op:operator pos:line="2144" pos:column="100">)</op:operator></expr></init></decl>;</decl_stmt>
		<if pos:line="2145" pos:column="17">if <condition pos:line="2145" pos:column="20">(<expr><name pos:line="2145" pos:column="21">wParam</name> <op:operator pos:line="2145" pos:column="28">==</op:operator> <name pos:line="2145" pos:column="31">VK_RETURN</name></expr>)</condition><then pos:line="2145" pos:column="41">
			<expr_stmt><expr><call><name><name pos:line="2146" pos:column="25">pFinder</name><op:operator pos:line="2146" pos:column="32">-&gt;</op:operator><name pos:line="2146" pos:column="34">GotoFoundLine</name></name><argument_list pos:line="2146" pos:column="47">()</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="2147" pos:column="17">else <comment type="line" pos:line="2147" pos:column="22">// VK_DELETE</comment>
			<expr_stmt><expr><call><name><name pos:line="2148" pos:column="25">pFinder</name><op:operator pos:line="2148" pos:column="32">-&gt;</op:operator><name pos:line="2148" pos:column="34">DeleteResult</name></name><argument_list pos:line="2148" pos:column="46">()</argument_list></call></expr>;</expr_stmt></else></if>
		<return pos:line="2149" pos:column="17">return <expr><lit:literal type="number" pos:line="2149" pos:column="24">0</lit:literal></expr>;</return>
	}</block></then>
	<else pos:line="2151" pos:column="9">else
		<comment type="line" pos:line="2152" pos:column="17">// Call default (original) window procedure</comment>
		<return pos:line="2153" pos:column="17">return <expr><call><name pos:line="2153" pos:column="24">CallWindowProc</name><argument_list pos:line="2153" pos:column="38">(<argument><expr><op:operator pos:line="2153" pos:column="39">(</op:operator><name pos:line="2153" pos:column="40">WNDPROC</name><op:operator pos:line="2153" pos:column="47">)</op:operator> <name pos:line="2153" pos:column="49">originalFinderProc</name></expr></argument>, <argument><expr><name pos:line="2153" pos:column="69">hwnd</name></expr></argument>, <argument><expr><name pos:line="2153" pos:column="75">message</name></expr></argument>, <argument><expr><name pos:line="2153" pos:column="84">wParam</name></expr></argument>, <argument><expr><name pos:line="2153" pos:column="92">lParam</name></expr></argument>)</argument_list></call></expr>;</return></else></if>
}</block></function>

<function><type><name pos:line="2156" pos:column="1">void</name></type> <name><name pos:line="2156" pos:column="6">FindReplaceDlg</name><op:operator pos:line="2156" pos:column="20">::</op:operator><name pos:line="2156" pos:column="22">enableFindInFilesFunc</name></name><parameter_list pos:line="2156" pos:column="43">()</parameter_list>
<block pos:line="2157" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="2158" pos:column="9">enableFindInFilesControls</name><argument_list pos:line="2158" pos:column="34">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2159" pos:column="9">_currentStatus</name> <op:operator pos:line="2159" pos:column="24">=</op:operator> <name pos:line="2159" pos:column="26">FINDINFILES_DLG</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2160" pos:column="9">gotoCorrectTab</name><argument_list pos:line="2160" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2161" pos:column="9">::</op:operator><name pos:line="2161" pos:column="11">MoveWindow</name></name><argument_list pos:line="2161" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2161" pos:column="22">::</op:operator><name pos:line="2161" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2161" pos:column="34">(<argument><expr><name pos:line="2161" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2161" pos:column="43">IDCANCEL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2161" pos:column="54">_findInFilesClosePos</name><op:operator pos:line="2161" pos:column="74">.</op:operator><name pos:line="2161" pos:column="75">left</name></name></expr></argument>, <argument><expr><name><name pos:line="2161" pos:column="81">_findInFilesClosePos</name><op:operator pos:line="2161" pos:column="101">.</op:operator><name pos:line="2161" pos:column="102">top</name></name></expr></argument>, <argument><expr><name><name pos:line="2161" pos:column="107">_findInFilesClosePos</name><op:operator pos:line="2161" pos:column="127">.</op:operator><name pos:line="2161" pos:column="128">right</name></name></expr></argument>, <argument><expr><name><name pos:line="2161" pos:column="135">_findInFilesClosePos</name><op:operator pos:line="2161" pos:column="155">.</op:operator><name pos:line="2161" pos:column="156">bottom</name></name></expr></argument>, <argument><expr><name pos:line="2161" pos:column="164">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2162" pos:column="9">TCHAR</name></type> <name><name pos:line="2162" pos:column="15">label</name><index pos:line="2162" pos:column="20">[<expr><name pos:line="2162" pos:column="21">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="2163" pos:column="9">_tab</name><op:operator pos:line="2163" pos:column="13">.</op:operator><name pos:line="2163" pos:column="14">getCurrentTitle</name></name><argument_list pos:line="2163" pos:column="29">(<argument><expr><name pos:line="2163" pos:column="30">label</name></expr></argument>, <argument><expr><name pos:line="2163" pos:column="37">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2164" pos:column="9">::</op:operator><name pos:line="2164" pos:column="11">SetWindowText</name></name><argument_list pos:line="2164" pos:column="24">(<argument><expr><name pos:line="2164" pos:column="25">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2164" pos:column="33">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2165" pos:column="9">setDefaultButton</name><argument_list pos:line="2165" pos:column="25">(<argument><expr><name pos:line="2165" pos:column="26">IDD_FINDINFILES_FIND_BUTTON</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2168" pos:column="1">void</name></type> <name><name pos:line="2168" pos:column="6">FindReplaceDlg</name><op:operator pos:line="2168" pos:column="20">::</op:operator><name pos:line="2168" pos:column="22">enableMarkFunc</name></name><parameter_list pos:line="2168" pos:column="36">()</parameter_list>
<block pos:line="2169" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="2170" pos:column="9">enableFindInFilesControls</name><argument_list pos:line="2170" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="2170" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2171" pos:column="9">enableMarkAllControls</name><argument_list pos:line="2171" pos:column="30">(<argument><expr><lit:literal type="boolean" pos:line="2171" pos:column="31">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="2173" pos:column="9">// Replace controls to hide</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="2174" pos:column="9">::</op:operator><name pos:line="2174" pos:column="11">ShowWindow</name></name><argument_list pos:line="2174" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2174" pos:column="22">::</op:operator><name pos:line="2174" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2174" pos:column="34">(<argument><expr><name pos:line="2174" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2174" pos:column="43">ID_STATICTEXT_REPLACE</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2174" pos:column="66">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2175" pos:column="9">::</op:operator><name pos:line="2175" pos:column="11">ShowWindow</name></name><argument_list pos:line="2175" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2175" pos:column="22">::</op:operator><name pos:line="2175" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2175" pos:column="34">(<argument><expr><name pos:line="2175" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2175" pos:column="43">IDREPLACE</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2175" pos:column="54">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2176" pos:column="9">::</op:operator><name pos:line="2176" pos:column="11">ShowWindow</name></name><argument_list pos:line="2176" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2176" pos:column="22">::</op:operator><name pos:line="2176" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2176" pos:column="34">(<argument><expr><name pos:line="2176" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2176" pos:column="43">IDREPLACEWITH</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2176" pos:column="58">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2177" pos:column="9">::</op:operator><name pos:line="2177" pos:column="11">ShowWindow</name></name><argument_list pos:line="2177" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2177" pos:column="22">::</op:operator><name pos:line="2177" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2177" pos:column="34">(<argument><expr><name pos:line="2177" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2177" pos:column="43">IDREPLACEALL</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2177" pos:column="57">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2178" pos:column="9">::</op:operator><name pos:line="2178" pos:column="11">ShowWindow</name></name><argument_list pos:line="2178" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2178" pos:column="22">::</op:operator><name pos:line="2178" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2178" pos:column="34">(<argument><expr><name pos:line="2178" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2178" pos:column="43">IDREPLACEINSEL</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2178" pos:column="59">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2179" pos:column="9">::</op:operator><name pos:line="2179" pos:column="11">ShowWindow</name></name><argument_list pos:line="2179" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2179" pos:column="22">::</op:operator><name pos:line="2179" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2179" pos:column="34">(<argument><expr><name pos:line="2179" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2179" pos:column="43">IDC_REPLACE_OPENEDFILES</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2179" pos:column="68">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2180" pos:column="9">::</op:operator><name pos:line="2180" pos:column="11">ShowWindow</name></name><argument_list pos:line="2180" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2180" pos:column="22">::</op:operator><name pos:line="2180" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2180" pos:column="34">(<argument><expr><name pos:line="2180" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2180" pos:column="43">IDC_REPLACEINSELECTION</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2180" pos:column="67">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<comment type="line" pos:line="2182" pos:column="9">// find controls to hide</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="2183" pos:column="9">::</op:operator><name pos:line="2183" pos:column="11">ShowWindow</name></name><argument_list pos:line="2183" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2183" pos:column="22">::</op:operator><name pos:line="2183" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2183" pos:column="34">(<argument><expr><name pos:line="2183" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2183" pos:column="43">IDC_FINDALL_OPENEDFILES</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2183" pos:column="69">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2184" pos:column="9">::</op:operator><name pos:line="2184" pos:column="11">ShowWindow</name></name><argument_list pos:line="2184" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2184" pos:column="22">::</op:operator><name pos:line="2184" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2184" pos:column="34">(<argument><expr><name pos:line="2184" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2184" pos:column="43">IDCCOUNTALL</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2184" pos:column="56">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2185" pos:column="9">::</op:operator><name pos:line="2185" pos:column="11">ShowWindow</name></name><argument_list pos:line="2185" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2185" pos:column="22">::</op:operator><name pos:line="2185" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2185" pos:column="34">(<argument><expr><name pos:line="2185" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2185" pos:column="43">IDC_FINDALL_CURRENTFILE</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2185" pos:column="68">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2186" pos:column="9">::</op:operator><name pos:line="2186" pos:column="11">ShowWindow</name></name><argument_list pos:line="2186" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2186" pos:column="22">::</op:operator><name pos:line="2186" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2186" pos:column="34">(<argument><expr><name pos:line="2186" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2186" pos:column="43">IDOK</name></expr></argument>)</argument_list></call></expr></argument>,<argument><expr><name pos:line="2186" pos:column="49">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="2188" pos:column="9">_currentStatus</name> <op:operator pos:line="2188" pos:column="24">=</op:operator> <name pos:line="2188" pos:column="26">MARK_DLG</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2189" pos:column="9">gotoCorrectTab</name><argument_list pos:line="2189" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2190" pos:column="9">::</op:operator><name pos:line="2190" pos:column="11">MoveWindow</name></name><argument_list pos:line="2190" pos:column="21">(<argument><expr><call><name><op:operator pos:line="2190" pos:column="22">::</op:operator><name pos:line="2190" pos:column="24">GetDlgItem</name></name><argument_list pos:line="2190" pos:column="34">(<argument><expr><name pos:line="2190" pos:column="35">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2190" pos:column="43">IDCANCEL</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2190" pos:column="54">_findInFilesClosePos</name><op:operator pos:line="2190" pos:column="74">.</op:operator><name pos:line="2190" pos:column="75">left</name></name></expr></argument>, <argument><expr><name><name pos:line="2190" pos:column="81">_findInFilesClosePos</name><op:operator pos:line="2190" pos:column="101">.</op:operator><name pos:line="2190" pos:column="102">top</name></name></expr></argument>, <argument><expr><name><name pos:line="2190" pos:column="107">_findInFilesClosePos</name><op:operator pos:line="2190" pos:column="127">.</op:operator><name pos:line="2190" pos:column="128">right</name></name></expr></argument>, <argument><expr><name><name pos:line="2190" pos:column="135">_findInFilesClosePos</name><op:operator pos:line="2190" pos:column="155">.</op:operator><name pos:line="2190" pos:column="156">bottom</name></name></expr></argument>, <argument><expr><name pos:line="2190" pos:column="164">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2191" pos:column="9">TCHAR</name></type> <name><name pos:line="2191" pos:column="15">label</name><index pos:line="2191" pos:column="20">[<expr><name pos:line="2191" pos:column="21">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="2192" pos:column="9">_tab</name><op:operator pos:line="2192" pos:column="13">.</op:operator><name pos:line="2192" pos:column="14">getCurrentTitle</name></name><argument_list pos:line="2192" pos:column="29">(<argument><expr><name pos:line="2192" pos:column="30">label</name></expr></argument>, <argument><expr><name pos:line="2192" pos:column="37">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2193" pos:column="9">::</op:operator><name pos:line="2193" pos:column="11">SetWindowText</name></name><argument_list pos:line="2193" pos:column="24">(<argument><expr><name pos:line="2193" pos:column="25">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2193" pos:column="33">label</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2194" pos:column="9">setDefaultButton</name><argument_list pos:line="2194" pos:column="25">(<argument><expr><name pos:line="2194" pos:column="26">IDCMARKALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><name pos:line="2196" pos:column="1">void</name></type> <name><name pos:line="2196" pos:column="6">FindReplaceDlg</name><op:operator pos:line="2196" pos:column="20">::</op:operator><name pos:line="2196" pos:column="22">combo2ExtendedMode</name></name><parameter_list pos:line="2196" pos:column="40">(<param><decl><type><name pos:line="2196" pos:column="41">int</name></type> <name pos:line="2196" pos:column="45">comboID</name></decl></param>)</parameter_list>
<block pos:line="2197" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2198" pos:column="9">HWND</name></type> <name pos:line="2198" pos:column="14">hFindCombo</name> <init pos:line="2198" pos:column="25">= <expr><call><name><op:operator pos:line="2198" pos:column="27">::</op:operator><name pos:line="2198" pos:column="29">GetDlgItem</name></name><argument_list pos:line="2198" pos:column="39">(<argument><expr><name pos:line="2198" pos:column="40">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2198" pos:column="48">comboID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2199" pos:column="9">if <condition pos:line="2199" pos:column="12">(<expr><op:operator pos:line="2199" pos:column="13">!</op:operator><name pos:line="2199" pos:column="14">hFindCombo</name></expr>)</condition><then pos:line="2199" pos:column="25"> <return pos:line="2199" pos:column="26">return;</return></then></if>
	
	<decl_stmt><decl><type><name pos:line="2201" pos:column="9">generic_string</name></type> <name pos:line="2201" pos:column="24">str2transform</name> <init pos:line="2201" pos:column="38">= <expr><call><name pos:line="2201" pos:column="40">getTextFromCombo</name><argument_list pos:line="2201" pos:column="56">(<argument><expr><name pos:line="2201" pos:column="57">hFindCombo</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
    <comment type="line" pos:line="2203" pos:column="5">// Count the number of character '\n' and '\r'</comment>
    <decl_stmt><decl><type><name pos:line="2204" pos:column="5">size_t</name></type> <name pos:line="2204" pos:column="12">nbEOL</name> <init pos:line="2204" pos:column="18">= <expr><lit:literal type="number" pos:line="2204" pos:column="20">0</lit:literal></expr></init></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="2205" pos:column="5">size_t</name></type> <name pos:line="2205" pos:column="12">str2transformLen</name> <init pos:line="2205" pos:column="29">= <expr><call><name pos:line="2205" pos:column="31">lstrlen</name><argument_list pos:line="2205" pos:column="38">(<argument><expr><call><name><name pos:line="2205" pos:column="39">str2transform</name><op:operator pos:line="2205" pos:column="52">.</op:operator><name pos:line="2205" pos:column="53">c_str</name></name><argument_list pos:line="2205" pos:column="58">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <for pos:line="2206" pos:column="5">for (<init><decl><type><name pos:line="2206" pos:column="10">size_t</name></type> <name pos:line="2206" pos:column="17">i</name> <init pos:line="2206" pos:column="19">= <expr><lit:literal type="number" pos:line="2206" pos:column="21">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2206" pos:column="25">i</name> <op:operator pos:line="2206" pos:column="27">&lt;</op:operator> <name pos:line="2206" pos:column="29">str2transformLen</name></expr> ;</condition> <incr><expr><name pos:line="2206" pos:column="48">i</name><op:operator pos:line="2206" pos:column="49">++</op:operator></expr></incr>)
    <block pos:line="2207" pos:column="5">{
        <if pos:line="2208" pos:column="9">if <condition pos:line="2208" pos:column="12">(<expr><name><name pos:line="2208" pos:column="13">str2transform</name><index pos:line="2208" pos:column="26">[<expr><name pos:line="2208" pos:column="27">i</name></expr>]</index></name> <op:operator pos:line="2208" pos:column="30">==</op:operator> <lit:literal type="char" pos:line="2208" pos:column="33">'\r'</lit:literal> <op:operator pos:line="2208" pos:column="38">||</op:operator> <name><name pos:line="2208" pos:column="41">str2transform</name><index pos:line="2208" pos:column="54">[<expr><name pos:line="2208" pos:column="55">i</name></expr>]</index></name> <op:operator pos:line="2208" pos:column="58">==</op:operator> <lit:literal type="char" pos:line="2208" pos:column="61">'\n'</lit:literal></expr>)</condition><then pos:line="2208" pos:column="66">
            <expr_stmt><expr><name pos:line="2209" pos:column="13">nbEOL</name><op:operator pos:line="2209" pos:column="18">++</op:operator></expr>;</expr_stmt></then></if>
    }</block></for>

    <if pos:line="2212" pos:column="5">if <condition pos:line="2212" pos:column="8">(<expr><name pos:line="2212" pos:column="9">nbEOL</name></expr>)</condition><then pos:line="2212" pos:column="15">
    <block pos:line="2213" pos:column="5">{
		<decl_stmt><decl><type><name pos:line="2214" pos:column="17">TCHAR</name> <type:modifier pos:line="2214" pos:column="23">*</type:modifier></type> <name pos:line="2214" pos:column="25">newBuffer</name> <init pos:line="2214" pos:column="35">= <expr><op:operator pos:line="2214" pos:column="37">new</op:operator> <name><name pos:line="2214" pos:column="41">TCHAR</name><index pos:line="2214" pos:column="46">[<expr><name pos:line="2214" pos:column="47">str2transformLen</name> <op:operator pos:line="2214" pos:column="64">+</op:operator> <name pos:line="2214" pos:column="66">nbEOL</name><op:operator pos:line="2214" pos:column="71">*</op:operator><lit:literal type="number" pos:line="2214" pos:column="72">2</lit:literal> <op:operator pos:line="2214" pos:column="74">+</op:operator> <lit:literal type="number" pos:line="2214" pos:column="76">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="2215" pos:column="9">int</name></type> <name pos:line="2215" pos:column="13">j</name> <init pos:line="2215" pos:column="15">= <expr><lit:literal type="number" pos:line="2215" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
        <for pos:line="2216" pos:column="9">for (<init><decl><type><name pos:line="2216" pos:column="14">size_t</name></type> <name pos:line="2216" pos:column="21">i</name> <init pos:line="2216" pos:column="23">= <expr><lit:literal type="number" pos:line="2216" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="2216" pos:column="29">i</name> <op:operator pos:line="2216" pos:column="31">&lt;</op:operator> <name pos:line="2216" pos:column="33">str2transformLen</name></expr> ;</condition> <incr><expr><name pos:line="2216" pos:column="52">i</name><op:operator pos:line="2216" pos:column="53">++</op:operator></expr></incr>)
        <block pos:line="2217" pos:column="9">{
            <if pos:line="2218" pos:column="13">if <condition pos:line="2218" pos:column="16">(<expr><name><name pos:line="2218" pos:column="17">str2transform</name><index pos:line="2218" pos:column="30">[<expr><name pos:line="2218" pos:column="31">i</name></expr>]</index></name> <op:operator pos:line="2218" pos:column="34">==</op:operator> <lit:literal type="char" pos:line="2218" pos:column="37">'\r'</lit:literal></expr>)</condition><then pos:line="2218" pos:column="42">
            <block pos:line="2219" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="2220" pos:column="17">newBuffer</name><index pos:line="2220" pos:column="26">[<expr><name pos:line="2220" pos:column="27">j</name><op:operator pos:line="2220" pos:column="28">++</op:operator></expr>]</index></name> <op:operator pos:line="2220" pos:column="32">=</op:operator> <lit:literal type="char" pos:line="2220" pos:column="34">'\\'</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="2221" pos:column="17">newBuffer</name><index pos:line="2221" pos:column="26">[<expr><name pos:line="2221" pos:column="27">j</name><op:operator pos:line="2221" pos:column="28">++</op:operator></expr>]</index></name> <op:operator pos:line="2221" pos:column="32">=</op:operator> <lit:literal type="char" pos:line="2221" pos:column="34">'r'</lit:literal></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="2223" pos:column="13">else <if pos:line="2223" pos:column="18">if <condition pos:line="2223" pos:column="21">(<expr><name><name pos:line="2223" pos:column="22">str2transform</name><index pos:line="2223" pos:column="35">[<expr><name pos:line="2223" pos:column="36">i</name></expr>]</index></name> <op:operator pos:line="2223" pos:column="39">==</op:operator> <lit:literal type="char" pos:line="2223" pos:column="42">'\n'</lit:literal></expr>)</condition><then pos:line="2223" pos:column="47">
            <block pos:line="2224" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="2225" pos:column="17">newBuffer</name><index pos:line="2225" pos:column="26">[<expr><name pos:line="2225" pos:column="27">j</name><op:operator pos:line="2225" pos:column="28">++</op:operator></expr>]</index></name> <op:operator pos:line="2225" pos:column="32">=</op:operator> <lit:literal type="char" pos:line="2225" pos:column="34">'\\'</lit:literal></expr>;</expr_stmt>
                <expr_stmt><expr><name><name pos:line="2226" pos:column="17">newBuffer</name><index pos:line="2226" pos:column="26">[<expr><name pos:line="2226" pos:column="27">j</name><op:operator pos:line="2226" pos:column="28">++</op:operator></expr>]</index></name> <op:operator pos:line="2226" pos:column="32">=</op:operator> <lit:literal type="char" pos:line="2226" pos:column="34">'n'</lit:literal></expr>;</expr_stmt>
            }</block></then>
            <else pos:line="2228" pos:column="13">else
            <block pos:line="2229" pos:column="13">{
                <expr_stmt><expr><name><name pos:line="2230" pos:column="17">newBuffer</name><index pos:line="2230" pos:column="26">[<expr><name pos:line="2230" pos:column="27">j</name><op:operator pos:line="2230" pos:column="28">++</op:operator></expr>]</index></name> <op:operator pos:line="2230" pos:column="32">=</op:operator> <name><name pos:line="2230" pos:column="34">str2transform</name><index pos:line="2230" pos:column="47">[<expr><name pos:line="2230" pos:column="48">i</name></expr>]</index></name></expr>;</expr_stmt>
            }</block></else></if></else></if>
        }</block></for>
        <expr_stmt><expr><name><name pos:line="2233" pos:column="9">newBuffer</name><index pos:line="2233" pos:column="18">[<expr><name pos:line="2233" pos:column="19">j</name><op:operator pos:line="2233" pos:column="20">++</op:operator></expr>]</index></name> <op:operator pos:line="2233" pos:column="24">=</op:operator> <lit:literal type="char" pos:line="2233" pos:column="26">'\0'</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="2234" pos:column="17">setSearchText</name><argument_list pos:line="2234" pos:column="30">(<argument><expr><name pos:line="2234" pos:column="31">newBuffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><name><name pos:line="2236" pos:column="9">_options</name><op:operator pos:line="2236" pos:column="17">.</op:operator><name pos:line="2236" pos:column="18">_searchType</name></name> <op:operator pos:line="2236" pos:column="30">=</op:operator> <name pos:line="2236" pos:column="32">FindExtended</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="2237" pos:column="17">::</op:operator><name pos:line="2237" pos:column="19">SendDlgItemMessage</name></name><argument_list pos:line="2237" pos:column="37">(<argument><expr><name pos:line="2237" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2237" pos:column="46">IDNORMAL</name></expr></argument>, <argument><expr><name pos:line="2237" pos:column="56">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="2237" pos:column="69">FALSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2237" pos:column="76">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="2238" pos:column="17">::</op:operator><name pos:line="2238" pos:column="19">SendDlgItemMessage</name></name><argument_list pos:line="2238" pos:column="37">(<argument><expr><name pos:line="2238" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2238" pos:column="46">IDEXTENDED</name></expr></argument>, <argument><expr><name pos:line="2238" pos:column="58">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="2238" pos:column="71">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2238" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="2239" pos:column="17">::</op:operator><name pos:line="2239" pos:column="19">SendDlgItemMessage</name></name><argument_list pos:line="2239" pos:column="37">(<argument><expr><name pos:line="2239" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2239" pos:column="46">IDREGEXP</name></expr></argument>, <argument><expr><name pos:line="2239" pos:column="56">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="2239" pos:column="69">FALSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2239" pos:column="76">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><op:operator pos:line="2241" pos:column="17">delete</op:operator> <index pos:line="2241" pos:column="24">[]</index> <name pos:line="2241" pos:column="27">newBuffer</name></expr>;</expr_stmt>
    }</block></then></if>
}</block></function>

<function><type><name pos:line="2245" pos:column="1">void</name></type> <name><name pos:line="2245" pos:column="6">Finder</name><op:operator pos:line="2245" pos:column="12">::</op:operator><name pos:line="2245" pos:column="14">addSearchLine</name></name><parameter_list pos:line="2245" pos:column="27">(<param><decl><type><specifier pos:line="2245" pos:column="28">const</specifier> <name pos:line="2245" pos:column="34">TCHAR</name> <type:modifier pos:line="2245" pos:column="40">*</type:modifier></type><name pos:line="2245" pos:column="41">searchName</name></decl></param>)</parameter_list>
<block pos:line="2246" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2247" pos:column="9">generic_string</name></type> <name pos:line="2247" pos:column="24">str</name> <init pos:line="2247" pos:column="28">= <expr><call><name pos:line="2247" pos:column="30">TEXT</name><argument_list pos:line="2247" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="2247" pos:column="35">"Search \""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="2248" pos:column="9">str</name> <op:operator pos:line="2248" pos:column="13">+=</op:operator> <name pos:line="2248" pos:column="16">searchName</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2249" pos:column="9">str</name> <op:operator pos:line="2249" pos:column="13">+=</op:operator> <call><name pos:line="2249" pos:column="16">TEXT</name><argument_list pos:line="2249" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="2249" pos:column="21">"\"\r\n"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="2251" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2251" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2251" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2252" pos:column="9">_scintView</name><op:operator pos:line="2252" pos:column="19">.</op:operator><name pos:line="2252" pos:column="20">addGenericText</name></name><argument_list pos:line="2252" pos:column="34">(<argument><expr><call><name><name pos:line="2252" pos:column="35">str</name><op:operator pos:line="2252" pos:column="38">.</op:operator><name pos:line="2252" pos:column="39">c_str</name></name><argument_list pos:line="2252" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2253" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2253" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2253" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2254" pos:column="9">_lastSearchHeaderPos</name> <op:operator pos:line="2254" pos:column="30">=</op:operator> <call><name><name pos:line="2254" pos:column="32">_scintView</name><op:operator pos:line="2254" pos:column="42">.</op:operator><name pos:line="2254" pos:column="43">execute</name></name><argument_list pos:line="2254" pos:column="50">(<argument><expr><name pos:line="2254" pos:column="51">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call> <op:operator pos:line="2254" pos:column="70">-</op:operator> <lit:literal type="number" pos:line="2254" pos:column="72">2</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="2256" pos:column="9">_pMainFoundInfos</name><op:operator pos:line="2256" pos:column="25">-&gt;</op:operator><name pos:line="2256" pos:column="27">push_back</name></name><argument_list pos:line="2256" pos:column="36">(<argument><expr><name pos:line="2256" pos:column="37">EmptyFoundInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2257" pos:column="9">_pMainMarkings</name><op:operator pos:line="2257" pos:column="23">-&gt;</op:operator><name pos:line="2257" pos:column="25">push_back</name></name><argument_list pos:line="2257" pos:column="34">(<argument><expr><name pos:line="2257" pos:column="35">EmptySearchResultMarking</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2260" pos:column="1">void</name></type> <name><name pos:line="2260" pos:column="6">Finder</name><op:operator pos:line="2260" pos:column="12">::</op:operator><name pos:line="2260" pos:column="14">addFileNameTitle</name></name><parameter_list pos:line="2260" pos:column="30">(<param><decl><type><specifier pos:line="2260" pos:column="31">const</specifier> <name pos:line="2260" pos:column="37">TCHAR</name> <type:modifier pos:line="2260" pos:column="43">*</type:modifier></type> <name pos:line="2260" pos:column="45">fileName</name></decl></param>)</parameter_list>
<block pos:line="2261" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2262" pos:column="9">generic_string</name></type> <name pos:line="2262" pos:column="24">str</name> <init pos:line="2262" pos:column="28">= <expr><call><name pos:line="2262" pos:column="30">TEXT</name><argument_list pos:line="2262" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="2262" pos:column="35">"  "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="2263" pos:column="9">str</name> <op:operator pos:line="2263" pos:column="13">+=</op:operator> <name pos:line="2263" pos:column="16">fileName</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2264" pos:column="9">str</name> <op:operator pos:line="2264" pos:column="13">+=</op:operator> <call><name pos:line="2264" pos:column="16">TEXT</name><argument_list pos:line="2264" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="2264" pos:column="21">"\r\n"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="2266" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2266" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2266" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2267" pos:column="9">_scintView</name><op:operator pos:line="2267" pos:column="19">.</op:operator><name pos:line="2267" pos:column="20">addGenericText</name></name><argument_list pos:line="2267" pos:column="34">(<argument><expr><call><name><name pos:line="2267" pos:column="35">str</name><op:operator pos:line="2267" pos:column="38">.</op:operator><name pos:line="2267" pos:column="39">c_str</name></name><argument_list pos:line="2267" pos:column="44">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2268" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2268" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2268" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2269" pos:column="9">_lastFileHeaderPos</name> <op:operator pos:line="2269" pos:column="28">=</op:operator> <call><name><name pos:line="2269" pos:column="30">_scintView</name><op:operator pos:line="2269" pos:column="40">.</op:operator><name pos:line="2269" pos:column="41">execute</name></name><argument_list pos:line="2269" pos:column="48">(<argument><expr><name pos:line="2269" pos:column="49">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call> <op:operator pos:line="2269" pos:column="68">-</op:operator> <lit:literal type="number" pos:line="2269" pos:column="70">2</lit:literal></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="2271" pos:column="9">_pMainFoundInfos</name><op:operator pos:line="2271" pos:column="25">-&gt;</op:operator><name pos:line="2271" pos:column="27">push_back</name></name><argument_list pos:line="2271" pos:column="36">(<argument><expr><name pos:line="2271" pos:column="37">EmptyFoundInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2272" pos:column="9">_pMainMarkings</name><op:operator pos:line="2272" pos:column="23">-&gt;</op:operator><name pos:line="2272" pos:column="25">push_back</name></name><argument_list pos:line="2272" pos:column="34">(<argument><expr><name pos:line="2272" pos:column="35">EmptySearchResultMarking</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2275" pos:column="1">void</name></type> <name><name pos:line="2275" pos:column="6">Finder</name><op:operator pos:line="2275" pos:column="12">::</op:operator><name pos:line="2275" pos:column="14">addFileHitCount</name></name><parameter_list pos:line="2275" pos:column="29">(<param><decl><type><name pos:line="2275" pos:column="30">int</name></type> <name pos:line="2275" pos:column="34">count</name></decl></param>)</parameter_list>
<block pos:line="2276" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2277" pos:column="9">TCHAR</name></type> <name><name pos:line="2277" pos:column="15">text</name><index pos:line="2277" pos:column="19">[<expr><lit:literal type="number" pos:line="2277" pos:column="20">20</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<if pos:line="2278" pos:column="9">if<condition pos:line="2278" pos:column="11">(<expr><name pos:line="2278" pos:column="12">count</name> <op:operator pos:line="2278" pos:column="18">==</op:operator> <lit:literal type="number" pos:line="2278" pos:column="21">1</lit:literal></expr>)</condition><then pos:line="2278" pos:column="23">
		<expr_stmt><expr><call><name pos:line="2279" pos:column="17">wsprintf</name><argument_list pos:line="2279" pos:column="25">(<argument><expr><name pos:line="2279" pos:column="26">text</name></expr></argument>, <argument><expr><call><name pos:line="2279" pos:column="32">TEXT</name><argument_list pos:line="2279" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="2279" pos:column="37">" (1 hit)"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="2280" pos:column="9">else
		<expr_stmt><expr><call><name pos:line="2281" pos:column="17">wsprintf</name><argument_list pos:line="2281" pos:column="25">(<argument><expr><name pos:line="2281" pos:column="26">text</name></expr></argument>, <argument><expr><call><name pos:line="2281" pos:column="32">TEXT</name><argument_list pos:line="2281" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="2281" pos:column="37">" (%i hits)"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2281" pos:column="52">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	<expr_stmt><expr><call><name pos:line="2282" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2282" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2282" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2283" pos:column="9">_scintView</name><op:operator pos:line="2283" pos:column="19">.</op:operator><name pos:line="2283" pos:column="20">insertGenericTextFrom</name></name><argument_list pos:line="2283" pos:column="41">(<argument><expr><name pos:line="2283" pos:column="42">_lastFileHeaderPos</name></expr></argument>, <argument><expr><name pos:line="2283" pos:column="62">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2284" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2284" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2284" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2285" pos:column="9">nFoundFiles</name><op:operator pos:line="2285" pos:column="20">++</op:operator></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2288" pos:column="1">void</name></type> <name><name pos:line="2288" pos:column="6">Finder</name><op:operator pos:line="2288" pos:column="12">::</op:operator><name pos:line="2288" pos:column="14">addSearchHitCount</name></name><parameter_list pos:line="2288" pos:column="31">(<param><decl><type><name pos:line="2288" pos:column="32">int</name></type> <name pos:line="2288" pos:column="36">count</name></decl></param>)</parameter_list>
<block pos:line="2289" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2290" pos:column="9">TCHAR</name></type> <name><name pos:line="2290" pos:column="15">text</name><index pos:line="2290" pos:column="19">[<expr><lit:literal type="number" pos:line="2290" pos:column="20">50</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<if pos:line="2291" pos:column="9">if<condition pos:line="2291" pos:column="11">(<expr><name pos:line="2291" pos:column="12">count</name> <op:operator pos:line="2291" pos:column="18">==</op:operator> <lit:literal type="number" pos:line="2291" pos:column="21">1</lit:literal> <op:operator pos:line="2291" pos:column="23">&amp;&amp;</op:operator> <name pos:line="2291" pos:column="26">nFoundFiles</name> <op:operator pos:line="2291" pos:column="38">==</op:operator> <lit:literal type="number" pos:line="2291" pos:column="41">1</lit:literal></expr>)</condition><then pos:line="2291" pos:column="43">
		<expr_stmt><expr><call><name pos:line="2292" pos:column="17">wsprintf</name><argument_list pos:line="2292" pos:column="25">(<argument><expr><name pos:line="2292" pos:column="26">text</name></expr></argument>, <argument><expr><call><name pos:line="2292" pos:column="32">TEXT</name><argument_list pos:line="2292" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="2292" pos:column="37">" (1 hit in 1 file)"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="2293" pos:column="9">else <if pos:line="2293" pos:column="14">if<condition pos:line="2293" pos:column="16">(<expr><name pos:line="2293" pos:column="17">count</name> <op:operator pos:line="2293" pos:column="23">==</op:operator> <lit:literal type="number" pos:line="2293" pos:column="26">1</lit:literal> <op:operator pos:line="2293" pos:column="28">&amp;&amp;</op:operator> <name pos:line="2293" pos:column="31">nFoundFiles</name> <op:operator pos:line="2293" pos:column="43">!=</op:operator> <lit:literal type="number" pos:line="2293" pos:column="46">1</lit:literal></expr>)</condition><then pos:line="2293" pos:column="48">
		<expr_stmt><expr><call><name pos:line="2294" pos:column="17">wsprintf</name><argument_list pos:line="2294" pos:column="25">(<argument><expr><name pos:line="2294" pos:column="26">text</name></expr></argument>, <argument><expr><call><name pos:line="2294" pos:column="32">TEXT</name><argument_list pos:line="2294" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="2294" pos:column="37">" (1 hit in %i files)"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2294" pos:column="62">nFoundFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="2295" pos:column="9">else <if pos:line="2295" pos:column="14">if<condition pos:line="2295" pos:column="16">(<expr><name pos:line="2295" pos:column="17">count</name> <op:operator pos:line="2295" pos:column="23">!=</op:operator> <lit:literal type="number" pos:line="2295" pos:column="26">1</lit:literal> <op:operator pos:line="2295" pos:column="28">&amp;&amp;</op:operator> <name pos:line="2295" pos:column="31">nFoundFiles</name> <op:operator pos:line="2295" pos:column="43">==</op:operator> <lit:literal type="number" pos:line="2295" pos:column="46">1</lit:literal></expr>)</condition><then pos:line="2295" pos:column="48">
		<expr_stmt><expr><call><name pos:line="2296" pos:column="17">wsprintf</name><argument_list pos:line="2296" pos:column="25">(<argument><expr><name pos:line="2296" pos:column="26">text</name></expr></argument>, <argument><expr><call><name pos:line="2296" pos:column="32">TEXT</name><argument_list pos:line="2296" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="2296" pos:column="37">" (%i hits in 1 file)"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2296" pos:column="62">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="2297" pos:column="9">else <if pos:line="2297" pos:column="14">if<condition pos:line="2297" pos:column="16">(<expr><name pos:line="2297" pos:column="17">count</name> <op:operator pos:line="2297" pos:column="23">!=</op:operator> <lit:literal type="number" pos:line="2297" pos:column="26">1</lit:literal> <op:operator pos:line="2297" pos:column="28">&amp;&amp;</op:operator> <name pos:line="2297" pos:column="31">nFoundFiles</name> <op:operator pos:line="2297" pos:column="43">!=</op:operator> <lit:literal type="number" pos:line="2297" pos:column="46">1</lit:literal></expr>)</condition><then pos:line="2297" pos:column="48">
		<expr_stmt><expr><call><name pos:line="2298" pos:column="17">wsprintf</name><argument_list pos:line="2298" pos:column="25">(<argument><expr><name pos:line="2298" pos:column="26">text</name></expr></argument>, <argument><expr><call><name pos:line="2298" pos:column="32">TEXT</name><argument_list pos:line="2298" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="2298" pos:column="37">" (%i hits in %i files)"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2298" pos:column="64">count</name></expr></argument>, <argument><expr><name pos:line="2298" pos:column="71">nFoundFiles</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if></else></if></else></if>
	<expr_stmt><expr><call><name pos:line="2299" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2299" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2299" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2300" pos:column="9">_scintView</name><op:operator pos:line="2300" pos:column="19">.</op:operator><name pos:line="2300" pos:column="20">insertGenericTextFrom</name></name><argument_list pos:line="2300" pos:column="41">(<argument><expr><name pos:line="2300" pos:column="42">_lastSearchHeaderPos</name></expr></argument>, <argument><expr><name pos:line="2300" pos:column="64">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2301" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2301" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2301" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="2305" pos:column="1">void</name></type> <name><name pos:line="2305" pos:column="6">Finder</name><op:operator pos:line="2305" pos:column="12">::</op:operator><name pos:line="2305" pos:column="14">add</name></name><parameter_list pos:line="2305" pos:column="17">(<param><decl><type><name pos:line="2305" pos:column="18">FoundInfo</name></type> <name pos:line="2305" pos:column="28">fi</name></decl></param>, <param><decl><type><name pos:line="2305" pos:column="32">SearchResultMarking</name></type> <name pos:line="2305" pos:column="52">mi</name></decl></param>, <param><decl><type><specifier pos:line="2305" pos:column="56">const</specifier> <name pos:line="2305" pos:column="62">TCHAR</name><type:modifier pos:line="2305" pos:column="67">*</type:modifier></type> <name pos:line="2305" pos:column="69">foundline</name></decl></param>, <param><decl><type><name pos:line="2305" pos:column="80">int</name></type> <name pos:line="2305" pos:column="84">lineNb</name></decl></param>)</parameter_list>
<block pos:line="2306" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="2307" pos:column="9">_pMainFoundInfos</name><op:operator pos:line="2307" pos:column="25">-&gt;</op:operator><name pos:line="2307" pos:column="27">push_back</name></name><argument_list pos:line="2307" pos:column="36">(<argument><expr><name pos:line="2307" pos:column="37">fi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2308" pos:column="9">generic_string</name></type> <name pos:line="2308" pos:column="24">str</name> <init pos:line="2308" pos:column="28">= <expr><call><name pos:line="2308" pos:column="30">TEXT</name><argument_list pos:line="2308" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="2308" pos:column="35">"\tLine "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="2310" pos:column="9">TCHAR</name></type> <name><name pos:line="2310" pos:column="15">lnb</name><index pos:line="2310" pos:column="18">[<expr><lit:literal type="number" pos:line="2310" pos:column="19">16</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="2311" pos:column="9">wsprintf</name><argument_list pos:line="2311" pos:column="17">(<argument><expr><name pos:line="2311" pos:column="18">lnb</name></expr></argument>, <argument><expr><call><name pos:line="2311" pos:column="23">TEXT</name><argument_list pos:line="2311" pos:column="27">(<argument><expr><lit:literal type="string" pos:line="2311" pos:column="28">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2311" pos:column="35">lineNb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2312" pos:column="9">str</name> <op:operator pos:line="2312" pos:column="13">+=</op:operator> <name pos:line="2312" pos:column="16">lnb</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2313" pos:column="9">str</name> <op:operator pos:line="2313" pos:column="13">+=</op:operator> <call><name pos:line="2313" pos:column="16">TEXT</name><argument_list pos:line="2313" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="2313" pos:column="21">": "</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2314" pos:column="9">mi</name><op:operator pos:line="2314" pos:column="11">.</op:operator><name pos:line="2314" pos:column="12">_start</name></name> <op:operator pos:line="2314" pos:column="19">+=</op:operator> <call><name><name pos:line="2314" pos:column="22">str</name><op:operator pos:line="2314" pos:column="25">.</op:operator><name pos:line="2314" pos:column="26">length</name></name><argument_list pos:line="2314" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2315" pos:column="9">mi</name><op:operator pos:line="2315" pos:column="11">.</op:operator><name pos:line="2315" pos:column="12">_end</name></name> <op:operator pos:line="2315" pos:column="17">+=</op:operator> <call><name><name pos:line="2315" pos:column="20">str</name><op:operator pos:line="2315" pos:column="23">.</op:operator><name pos:line="2315" pos:column="24">length</name></name><argument_list pos:line="2315" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2316" pos:column="9">str</name> <op:operator pos:line="2316" pos:column="13">+=</op:operator> <name pos:line="2316" pos:column="16">foundline</name></expr>;</expr_stmt>

	<if pos:line="2318" pos:column="9">if <condition pos:line="2318" pos:column="12">(<expr><call><name><name pos:line="2318" pos:column="13">str</name><op:operator pos:line="2318" pos:column="16">.</op:operator><name pos:line="2318" pos:column="17">length</name></name><argument_list pos:line="2318" pos:column="23">()</argument_list></call> <op:operator pos:line="2318" pos:column="26">&gt;=</op:operator> <name pos:line="2318" pos:column="29">SC_SEARCHRESULT_LINEBUFFERMAXLENGTH</name></expr>)</condition><then pos:line="2318" pos:column="65">
	<block pos:line="2319" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="2320" pos:column="17">const</specifier> <name pos:line="2320" pos:column="23">TCHAR</name> <type:modifier pos:line="2320" pos:column="29">*</type:modifier></type> <name pos:line="2320" pos:column="31">endOfLongLine</name> <init pos:line="2320" pos:column="45">= <expr><call><name pos:line="2320" pos:column="47">TEXT</name><argument_list pos:line="2320" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="2320" pos:column="52">"...\r\n"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="2321" pos:column="17">str</name> <op:operator pos:line="2321" pos:column="21">=</op:operator> <call><name><name pos:line="2321" pos:column="23">str</name><op:operator pos:line="2321" pos:column="26">.</op:operator><name pos:line="2321" pos:column="27">substr</name></name><argument_list pos:line="2321" pos:column="33">(<argument><expr><lit:literal type="number" pos:line="2321" pos:column="34">0</lit:literal></expr></argument>, <argument><expr><name pos:line="2321" pos:column="37">SC_SEARCHRESULT_LINEBUFFERMAXLENGTH</name> <op:operator pos:line="2321" pos:column="73">-</op:operator> <call><name pos:line="2321" pos:column="75">lstrlen</name><argument_list pos:line="2321" pos:column="82">(<argument><expr><name pos:line="2321" pos:column="83">endOfLongLine</name></expr></argument>)</argument_list></call> <op:operator pos:line="2321" pos:column="98">-</op:operator> <lit:literal type="number" pos:line="2321" pos:column="100">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2322" pos:column="17">str</name> <op:operator pos:line="2322" pos:column="21">+=</op:operator> <name pos:line="2322" pos:column="24">endOfLongLine</name></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="2324" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2324" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2324" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2325" pos:column="9">_scintView</name><op:operator pos:line="2325" pos:column="19">.</op:operator><name pos:line="2325" pos:column="20">addGenericText</name></name><argument_list pos:line="2325" pos:column="34">(<argument><expr><call><name><name pos:line="2325" pos:column="35">str</name><op:operator pos:line="2325" pos:column="38">.</op:operator><name pos:line="2325" pos:column="39">c_str</name></name><argument_list pos:line="2325" pos:column="44">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2325" pos:column="48">&amp;</op:operator><name><name pos:line="2325" pos:column="49">mi</name><op:operator pos:line="2325" pos:column="51">.</op:operator><name pos:line="2325" pos:column="52">_start</name></name></expr></argument>, <argument><expr><op:operator pos:line="2325" pos:column="60">&amp;</op:operator><name><name pos:line="2325" pos:column="61">mi</name><op:operator pos:line="2325" pos:column="63">.</op:operator><name pos:line="2325" pos:column="64">_end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2326" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2326" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2326" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2327" pos:column="9">_pMainMarkings</name><op:operator pos:line="2327" pos:column="23">-&gt;</op:operator><name pos:line="2327" pos:column="25">push_back</name></name><argument_list pos:line="2327" pos:column="34">(<argument><expr><name pos:line="2327" pos:column="35">mi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2330" pos:column="1">void</name></type> <name><name pos:line="2330" pos:column="6">Finder</name><op:operator pos:line="2330" pos:column="12">::</op:operator><name pos:line="2330" pos:column="14">removeAll</name></name><parameter_list pos:line="2330" pos:column="23">()</parameter_list> 
<block pos:line="2331" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="2332" pos:column="9">_pMainFoundInfos</name><op:operator pos:line="2332" pos:column="25">-&gt;</op:operator><name pos:line="2332" pos:column="27">clear</name></name><argument_list pos:line="2332" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2333" pos:column="9">_pMainMarkings</name><op:operator pos:line="2333" pos:column="23">-&gt;</op:operator><name pos:line="2333" pos:column="25">clear</name></name><argument_list pos:line="2333" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2334" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2334" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2334" pos:column="27">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2335" pos:column="9">_scintView</name><op:operator pos:line="2335" pos:column="19">.</op:operator><name pos:line="2335" pos:column="20">execute</name></name><argument_list pos:line="2335" pos:column="27">(<argument><expr><name pos:line="2335" pos:column="28">SCI_CLEARALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2336" pos:column="9">setFinderReadOnly</name><argument_list pos:line="2336" pos:column="26">(<argument><expr><lit:literal type="boolean" pos:line="2336" pos:column="27">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2339" pos:column="1">void</name></type> <name><name pos:line="2339" pos:column="6">Finder</name><op:operator pos:line="2339" pos:column="12">::</op:operator><name pos:line="2339" pos:column="14">openAll</name></name><parameter_list pos:line="2339" pos:column="21">()</parameter_list>
<block pos:line="2340" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="2341" pos:column="9">size_t</name></type> <name pos:line="2341" pos:column="16">sz</name> <init pos:line="2341" pos:column="19">= <expr><call><name><name pos:line="2341" pos:column="21">_pMainFoundInfos</name><op:operator pos:line="2341" pos:column="37">-&gt;</op:operator><name pos:line="2341" pos:column="39">size</name></name><argument_list pos:line="2341" pos:column="43">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<for pos:line="2343" pos:column="9">for (<init><decl><type><name pos:line="2343" pos:column="14">size_t</name></type> <name pos:line="2343" pos:column="21">i</name> <init pos:line="2343" pos:column="23">= <expr><lit:literal type="number" pos:line="2343" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2343" pos:column="28">i</name> <op:operator pos:line="2343" pos:column="30">&lt;</op:operator> <name pos:line="2343" pos:column="32">sz</name></expr>;</condition> <incr><expr><name pos:line="2343" pos:column="36">i</name><op:operator pos:line="2343" pos:column="37">++</op:operator></expr></incr>)
	<block pos:line="2344" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="2345" pos:column="17">::</op:operator><name pos:line="2345" pos:column="19">SendMessage</name></name><argument_list pos:line="2345" pos:column="30">(<argument><expr><call><name><op:operator pos:line="2345" pos:column="31">::</op:operator><name pos:line="2345" pos:column="33">GetParent</name></name><argument_list pos:line="2345" pos:column="42">(<argument><expr><name pos:line="2345" pos:column="43">_hParent</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2345" pos:column="54">WM_DOOPEN</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2345" pos:column="65">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2345" pos:column="68">(</op:operator><name pos:line="2345" pos:column="69">LPARAM</name><op:operator pos:line="2345" pos:column="75">)</op:operator><call><name><name pos:line="2345" pos:column="76">_pMainFoundInfos</name><op:operator pos:line="2345" pos:column="92">-&gt;</op:operator><name pos:line="2345" pos:column="94">at</name></name><argument_list pos:line="2345" pos:column="96">(<argument><expr><name pos:line="2345" pos:column="97">i</name></expr></argument>)</argument_list></call><op:operator pos:line="2345" pos:column="99">.</op:operator><call><name><name pos:line="2345" pos:column="100">_fullPath</name><op:operator pos:line="2345" pos:column="109">.</op:operator><name pos:line="2345" pos:column="110">c_str</name></name><argument_list pos:line="2345" pos:column="115">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
}</block></function>

<function><type><name pos:line="2349" pos:column="1">void</name></type> <name><name pos:line="2349" pos:column="6">Finder</name><op:operator pos:line="2349" pos:column="12">::</op:operator><name pos:line="2349" pos:column="14">beginNewFilesSearch</name></name><parameter_list pos:line="2349" pos:column="33">()</parameter_list>
<block pos:line="2350" pos:column="1">{
	<comment type="line" pos:line="2351" pos:column="9">//_scintView.execute(SCI_SETLEXER, SCLEX_NULL);</comment>

	<expr_stmt><expr><call><name><name pos:line="2353" pos:column="9">_scintView</name><op:operator pos:line="2353" pos:column="19">.</op:operator><name pos:line="2353" pos:column="20">execute</name></name><argument_list pos:line="2353" pos:column="27">(<argument><expr><name pos:line="2353" pos:column="28">SCI_SETCURRENTPOS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2353" pos:column="47">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2354" pos:column="9">_pMainFoundInfos</name> <op:operator pos:line="2354" pos:column="26">=</op:operator> <name pos:line="2354" pos:column="28">_pMainFoundInfos</name> <op:operator pos:line="2354" pos:column="45">==</op:operator> <op:operator pos:line="2354" pos:column="48">&amp;</op:operator><name pos:line="2354" pos:column="49">_foundInfos1</name> <op:operator pos:line="2354" pos:column="62">?</op:operator> <op:operator pos:line="2354" pos:column="64">&amp;</op:operator><name pos:line="2354" pos:column="65">_foundInfos2</name> <op:operator pos:line="2354" pos:column="78">:</op:operator> <op:operator pos:line="2354" pos:column="80">&amp;</op:operator><name pos:line="2354" pos:column="81">_foundInfos1</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2355" pos:column="9">_pMainMarkings</name> <op:operator pos:line="2355" pos:column="24">=</op:operator> <name pos:line="2355" pos:column="26">_pMainMarkings</name> <op:operator pos:line="2355" pos:column="41">==</op:operator> <op:operator pos:line="2355" pos:column="44">&amp;</op:operator><name pos:line="2355" pos:column="45">_markings1</name> <op:operator pos:line="2355" pos:column="56">?</op:operator> <op:operator pos:line="2355" pos:column="58">&amp;</op:operator><name pos:line="2355" pos:column="59">_markings2</name> <op:operator pos:line="2355" pos:column="70">:</op:operator> <op:operator pos:line="2355" pos:column="72">&amp;</op:operator><name pos:line="2355" pos:column="73">_markings1</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2356" pos:column="9">nFoundFiles</name> <op:operator pos:line="2356" pos:column="21">=</op:operator> <lit:literal type="number" pos:line="2356" pos:column="23">0</lit:literal></expr>;</expr_stmt>

	<comment type="line" pos:line="2358" pos:column="9">// fold all old searches (1st level only)</comment>
	<expr_stmt><expr><call><name><name pos:line="2359" pos:column="9">_scintView</name><op:operator pos:line="2359" pos:column="19">.</op:operator><name pos:line="2359" pos:column="20">collapse</name></name><argument_list pos:line="2359" pos:column="28">(<argument><expr><name pos:line="2359" pos:column="29">searchHeaderLevel</name> <op:operator pos:line="2359" pos:column="47">-</op:operator> <name pos:line="2359" pos:column="49">SC_FOLDLEVELBASE</name></expr></argument>, <argument><expr><name pos:line="2359" pos:column="67">fold_collapse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2362" pos:column="1">void</name></type> <name><name pos:line="2362" pos:column="6">Finder</name><op:operator pos:line="2362" pos:column="12">::</op:operator><name pos:line="2362" pos:column="14">finishFilesSearch</name></name><parameter_list pos:line="2362" pos:column="31">(<param><decl><type><name pos:line="2362" pos:column="32">int</name></type> <name pos:line="2362" pos:column="36">count</name></decl></param>)</parameter_list>
<block pos:line="2363" pos:column="1">{
	<decl_stmt><decl><type><name><name pos:line="2364" pos:column="9">std</name><op:operator pos:line="2364" pos:column="12">::</op:operator><name><name pos:line="2364" pos:column="14">vector</name><argument_list pos:line="2364" pos:column="20">&lt;<argument><expr><name pos:line="2364" pos:column="21">FoundInfo</name></expr></argument>&gt;</argument_list></name></name><type:modifier pos:line="2364" pos:column="31">*</type:modifier></type> <name pos:line="2364" pos:column="33">_pOldFoundInfos</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="2365" pos:column="9">std</name><op:operator pos:line="2365" pos:column="12">::</op:operator><name><name pos:line="2365" pos:column="14">vector</name><argument_list pos:line="2365" pos:column="20">&lt;<argument><expr><name pos:line="2365" pos:column="21">SearchResultMarking</name></expr></argument>&gt;</argument_list></name></name><type:modifier pos:line="2365" pos:column="41">*</type:modifier></type> <name pos:line="2365" pos:column="43">_pOldMarkings</name></decl>;</decl_stmt>
	<expr_stmt><expr><name pos:line="2366" pos:column="9">_pOldFoundInfos</name> <op:operator pos:line="2366" pos:column="25">=</op:operator> <name pos:line="2366" pos:column="27">_pMainFoundInfos</name> <op:operator pos:line="2366" pos:column="44">==</op:operator> <op:operator pos:line="2366" pos:column="47">&amp;</op:operator><name pos:line="2366" pos:column="48">_foundInfos1</name> <op:operator pos:line="2366" pos:column="61">?</op:operator> <op:operator pos:line="2366" pos:column="63">&amp;</op:operator><name pos:line="2366" pos:column="64">_foundInfos2</name> <op:operator pos:line="2366" pos:column="77">:</op:operator> <op:operator pos:line="2366" pos:column="79">&amp;</op:operator><name pos:line="2366" pos:column="80">_foundInfos1</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2367" pos:column="9">_pOldMarkings</name> <op:operator pos:line="2367" pos:column="23">=</op:operator> <name pos:line="2367" pos:column="25">_pMainMarkings</name> <op:operator pos:line="2367" pos:column="40">==</op:operator> <op:operator pos:line="2367" pos:column="43">&amp;</op:operator><name pos:line="2367" pos:column="44">_markings1</name> <op:operator pos:line="2367" pos:column="55">?</op:operator> <op:operator pos:line="2367" pos:column="57">&amp;</op:operator><name pos:line="2367" pos:column="58">_markings2</name> <op:operator pos:line="2367" pos:column="69">:</op:operator> <op:operator pos:line="2367" pos:column="71">&amp;</op:operator><name pos:line="2367" pos:column="72">_markings1</name></expr>;</expr_stmt>
	
	<expr_stmt><expr><call><name><name pos:line="2369" pos:column="9">_pOldFoundInfos</name><op:operator pos:line="2369" pos:column="24">-&gt;</op:operator><name pos:line="2369" pos:column="26">insert</name></name><argument_list pos:line="2369" pos:column="32">(<argument><expr><call><name><name pos:line="2369" pos:column="33">_pOldFoundInfos</name><op:operator pos:line="2369" pos:column="48">-&gt;</op:operator><name pos:line="2369" pos:column="50">begin</name></name><argument_list pos:line="2369" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2369" pos:column="59">_pMainFoundInfos</name><op:operator pos:line="2369" pos:column="75">-&gt;</op:operator><name pos:line="2369" pos:column="77">begin</name></name><argument_list pos:line="2369" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2369" pos:column="86">_pMainFoundInfos</name><op:operator pos:line="2369" pos:column="102">-&gt;</op:operator><name pos:line="2369" pos:column="104">end</name></name><argument_list pos:line="2369" pos:column="107">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2370" pos:column="9">_pOldMarkings</name><op:operator pos:line="2370" pos:column="22">-&gt;</op:operator><name pos:line="2370" pos:column="24">insert</name></name><argument_list pos:line="2370" pos:column="30">(<argument><expr><call><name><name pos:line="2370" pos:column="31">_pOldMarkings</name><op:operator pos:line="2370" pos:column="44">-&gt;</op:operator><name pos:line="2370" pos:column="46">begin</name></name><argument_list pos:line="2370" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2370" pos:column="55">_pMainMarkings</name><op:operator pos:line="2370" pos:column="69">-&gt;</op:operator><name pos:line="2370" pos:column="71">begin</name></name><argument_list pos:line="2370" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2370" pos:column="80">_pMainMarkings</name><op:operator pos:line="2370" pos:column="94">-&gt;</op:operator><name pos:line="2370" pos:column="96">end</name></name><argument_list pos:line="2370" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2371" pos:column="9">_pMainFoundInfos</name><op:operator pos:line="2371" pos:column="25">-&gt;</op:operator><name pos:line="2371" pos:column="27">clear</name></name><argument_list pos:line="2371" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2372" pos:column="9">_pMainMarkings</name><op:operator pos:line="2372" pos:column="23">-&gt;</op:operator><name pos:line="2372" pos:column="25">clear</name></name><argument_list pos:line="2372" pos:column="30">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2373" pos:column="9">_pMainFoundInfos</name> <op:operator pos:line="2373" pos:column="26">=</op:operator> <name pos:line="2373" pos:column="28">_pOldFoundInfos</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2374" pos:column="9">_pMainMarkings</name> <op:operator pos:line="2374" pos:column="24">=</op:operator> <name pos:line="2374" pos:column="26">_pOldMarkings</name></expr>;</expr_stmt>
	
	<expr_stmt><expr><name><name pos:line="2376" pos:column="9">_MarkingsStruct</name><op:operator pos:line="2376" pos:column="24">.</op:operator><name pos:line="2376" pos:column="25">_length</name></name> <op:operator pos:line="2376" pos:column="33">=</op:operator> <call><name><name pos:line="2376" pos:column="35">_pMainMarkings</name><op:operator pos:line="2376" pos:column="49">-&gt;</op:operator><name pos:line="2376" pos:column="51">size</name></name><argument_list pos:line="2376" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2377" pos:column="9">_MarkingsStruct</name><op:operator pos:line="2377" pos:column="24">.</op:operator><name pos:line="2377" pos:column="25">_markings</name></name> <op:operator pos:line="2377" pos:column="35">=</op:operator> <op:operator pos:line="2377" pos:column="37">&amp;</op:operator><op:operator pos:line="2377" pos:column="38">(</op:operator><op:operator pos:line="2377" pos:column="39">(</op:operator><op:operator pos:line="2377" pos:column="40">*</op:operator><name pos:line="2377" pos:column="41">_pMainMarkings</name><op:operator pos:line="2377" pos:column="55">)</op:operator><index pos:line="2377" pos:column="56">[<expr><lit:literal type="number" pos:line="2377" pos:column="57">0</lit:literal></expr>]</index><op:operator pos:line="2377" pos:column="59">)</op:operator></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="2379" pos:column="9">addSearchHitCount</name><argument_list pos:line="2379" pos:column="26">(<argument><expr><name pos:line="2379" pos:column="27">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2380" pos:column="9">_scintView</name><op:operator pos:line="2380" pos:column="19">.</op:operator><name pos:line="2380" pos:column="20">execute</name></name><argument_list pos:line="2380" pos:column="27">(<argument><expr><name pos:line="2380" pos:column="28">SCI_SETSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2380" pos:column="40">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2380" pos:column="43">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="2382" pos:column="9">_scintView</name><op:operator pos:line="2382" pos:column="19">.</op:operator><name pos:line="2382" pos:column="20">execute</name></name><argument_list pos:line="2382" pos:column="27">(<argument><expr><name pos:line="2382" pos:column="28">SCI_SETLEXER</name></expr></argument>, <argument><expr><name pos:line="2382" pos:column="42">SCLEX_SEARCHRESULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2383" pos:column="9">_scintView</name><op:operator pos:line="2383" pos:column="19">.</op:operator><name pos:line="2383" pos:column="20">execute</name></name><argument_list pos:line="2383" pos:column="27">(<argument><expr><name pos:line="2383" pos:column="28">SCI_SETPROPERTY</name></expr></argument>, <argument><expr><call><name><name pos:line="2383" pos:column="45">reinterpret_cast</name><argument_list pos:line="2383" pos:column="61">&lt;<argument><expr><name pos:line="2383" pos:column="62">WPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2383" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="2383" pos:column="70">"fold"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2383" pos:column="79">reinterpret_cast</name><argument_list pos:line="2383" pos:column="95">&lt;<argument><expr><name pos:line="2383" pos:column="96">LPARAM</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="2383" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="2383" pos:column="104">"1"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="2387" pos:column="1">void</name></type> <name><name pos:line="2387" pos:column="6">Finder</name><op:operator pos:line="2387" pos:column="12">::</op:operator><name pos:line="2387" pos:column="14">setFinderStyle</name></name><parameter_list pos:line="2387" pos:column="28">()</parameter_list>
<block pos:line="2388" pos:column="1">{
	<comment type="line" pos:line="2389" pos:column="9">// Set global styles for the finder</comment>
	<expr_stmt><expr><call><name><name pos:line="2390" pos:column="9">_scintView</name><op:operator pos:line="2390" pos:column="19">.</op:operator><name pos:line="2390" pos:column="20">performGlobalStyles</name></name><argument_list pos:line="2390" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
	
	<comment type="line" pos:line="2392" pos:column="9">// Set current line background color for the finder</comment>
	<decl_stmt><decl><type><specifier pos:line="2393" pos:column="9">const</specifier> <name pos:line="2393" pos:column="15">TCHAR</name> <type:modifier pos:line="2393" pos:column="21">*</type:modifier></type> <name pos:line="2393" pos:column="23">lexerName</name> <init pos:line="2393" pos:column="33">= <expr><name><name pos:line="2393" pos:column="35">ScintillaEditView</name><op:operator pos:line="2393" pos:column="52">::</op:operator><name pos:line="2393" pos:column="54">langNames</name><index pos:line="2393" pos:column="63">[<expr><name pos:line="2393" pos:column="64">L_SEARCHRESULT</name></expr>]</index></name><op:operator pos:line="2393" pos:column="79">.</op:operator><name pos:line="2393" pos:column="80">lexerName</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="2394" pos:column="9">LexerStyler</name> <type:modifier pos:line="2394" pos:column="21">*</type:modifier></type><name pos:line="2394" pos:column="22">pStyler</name> <init pos:line="2394" pos:column="30">= <expr><op:operator pos:line="2394" pos:column="32">(</op:operator><call><name><name pos:line="2394" pos:column="33">_scintView</name><op:operator pos:line="2394" pos:column="43">.</op:operator><name pos:line="2394" pos:column="44">_pParameter</name><op:operator pos:line="2394" pos:column="55">-&gt;</op:operator><name pos:line="2394" pos:column="57">getLStylerArray</name></name><argument_list pos:line="2394" pos:column="72">()</argument_list></call><op:operator pos:line="2394" pos:column="74">)</op:operator><op:operator pos:line="2394" pos:column="75">.</op:operator><call><name pos:line="2394" pos:column="76">getLexerStylerByName</name><argument_list pos:line="2394" pos:column="96">(<argument><expr><name pos:line="2394" pos:column="97">lexerName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="2395" pos:column="9">if <condition pos:line="2395" pos:column="12">(<expr><name pos:line="2395" pos:column="13">pStyler</name></expr>)</condition><then pos:line="2395" pos:column="21">
	<block pos:line="2396" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="2397" pos:column="17">int</name></type> <name pos:line="2397" pos:column="21">i</name> <init pos:line="2397" pos:column="23">= <expr><call><name><name pos:line="2397" pos:column="25">pStyler</name><op:operator pos:line="2397" pos:column="32">-&gt;</op:operator><name pos:line="2397" pos:column="34">getStylerIndexByID</name></name><argument_list pos:line="2397" pos:column="52">(<argument><expr><name pos:line="2397" pos:column="53">SCE_SEARCHRESULT_CURRENT_LINE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="2398" pos:column="17">if <condition pos:line="2398" pos:column="20">(<expr><name pos:line="2398" pos:column="21">i</name> <op:operator pos:line="2398" pos:column="23">!=</op:operator> <op:operator pos:line="2398" pos:column="26">-</op:operator><lit:literal type="number" pos:line="2398" pos:column="27">1</lit:literal></expr>)</condition><then pos:line="2398" pos:column="29">
		<block pos:line="2399" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2400" pos:column="25">Style</name> <type:modifier pos:line="2400" pos:column="31">&amp;</type:modifier></type> <name pos:line="2400" pos:column="33">style</name> <init pos:line="2400" pos:column="39">= <expr><call><name><name pos:line="2400" pos:column="41">pStyler</name><op:operator pos:line="2400" pos:column="48">-&gt;</op:operator><name pos:line="2400" pos:column="50">getStyler</name></name><argument_list pos:line="2400" pos:column="59">(<argument><expr><name pos:line="2400" pos:column="60">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="2401" pos:column="25">_scintView</name><op:operator pos:line="2401" pos:column="35">.</op:operator><name pos:line="2401" pos:column="36">execute</name></name><argument_list pos:line="2401" pos:column="43">(<argument><expr><name pos:line="2401" pos:column="44">SCI_SETCARETLINEBACK</name></expr></argument>, <argument><expr><name><name pos:line="2401" pos:column="66">style</name><op:operator pos:line="2401" pos:column="71">.</op:operator><name pos:line="2401" pos:column="72">_bgColor</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="2405" pos:column="9">_scintView</name><op:operator pos:line="2405" pos:column="19">.</op:operator><name pos:line="2405" pos:column="20">setSearchResultLexer</name></name><argument_list pos:line="2405" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2406" pos:column="9">_scintView</name><op:operator pos:line="2406" pos:column="19">.</op:operator><name pos:line="2406" pos:column="20">execute</name></name><argument_list pos:line="2406" pos:column="27">(<argument><expr><name pos:line="2406" pos:column="28">SCI_COLOURISE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2406" pos:column="43">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2406" pos:column="46">-</op:operator><lit:literal type="number" pos:line="2406" pos:column="47">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2409" pos:column="1">BOOL</name> <name pos:line="2409" pos:column="6">CALLBACK</name></type> <name><name pos:line="2409" pos:column="15">Finder</name><op:operator pos:line="2409" pos:column="21">::</op:operator><name pos:line="2409" pos:column="23">run_dlgProc</name></name><parameter_list pos:line="2409" pos:column="34">(<param><decl><type><name pos:line="2409" pos:column="35">UINT</name></type> <name pos:line="2409" pos:column="40">message</name></decl></param>, <param><decl><type><name pos:line="2409" pos:column="49">WPARAM</name></type> <name pos:line="2409" pos:column="56">wParam</name></decl></param>, <param><decl><type><name pos:line="2409" pos:column="64">LPARAM</name></type> <name pos:line="2409" pos:column="71">lParam</name></decl></param>)</parameter_list>
<block pos:line="2410" pos:column="1">{
	<switch pos:line="2411" pos:column="9">switch <condition pos:line="2411" pos:column="16">(<expr><name pos:line="2411" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="2412" pos:column="9">{
		<case pos:line="2413" pos:column="17">case <expr><name pos:line="2413" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="2414" pos:column="17">{
			<switch pos:line="2415" pos:column="25">switch <condition pos:line="2415" pos:column="32">(<expr><name pos:line="2415" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="2416" pos:column="25">{
				<case pos:line="2417" pos:column="33">case <expr><name pos:line="2417" pos:column="38">NPPM_INTERNAL_SCINTILLAFINFERCOLLAPSE</name></expr> :
				<block pos:line="2418" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="2419" pos:column="41">_scintView</name><op:operator pos:line="2419" pos:column="51">.</op:operator><name pos:line="2419" pos:column="52">foldAll</name></name><argument_list pos:line="2419" pos:column="59">(<argument><expr><name pos:line="2419" pos:column="60">fold_collapse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2420" pos:column="41">return <expr><name pos:line="2420" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="2423" pos:column="33">case <expr><name pos:line="2423" pos:column="38">NPPM_INTERNAL_SCINTILLAFINFERUNCOLLAPSE</name></expr> :
				<block pos:line="2424" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="2425" pos:column="41">_scintView</name><op:operator pos:line="2425" pos:column="51">.</op:operator><name pos:line="2425" pos:column="52">foldAll</name></name><argument_list pos:line="2425" pos:column="59">(<argument><expr><name pos:line="2425" pos:column="60">fold_uncollapse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2426" pos:column="41">return <expr><name pos:line="2426" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="2429" pos:column="33">case <expr><name pos:line="2429" pos:column="38">NPPM_INTERNAL_SCINTILLAFINFERCOPY</name></expr> :
				<block pos:line="2430" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="2431" pos:column="41">_scintView</name><op:operator pos:line="2431" pos:column="51">.</op:operator><name pos:line="2431" pos:column="52">execute</name></name><argument_list pos:line="2431" pos:column="59">(<argument><expr><name pos:line="2431" pos:column="60">SCI_COPY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2432" pos:column="41">return <expr><name pos:line="2432" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="2435" pos:column="33">case <expr><name pos:line="2435" pos:column="38">NPPM_INTERNAL_SCINTILLAFINFERSELECTALL</name></expr> :
				<block pos:line="2436" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="2437" pos:column="41">_scintView</name><op:operator pos:line="2437" pos:column="51">.</op:operator><name pos:line="2437" pos:column="52">execute</name></name><argument_list pos:line="2437" pos:column="59">(<argument><expr><name pos:line="2437" pos:column="60">SCI_SELECTALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2438" pos:column="41">return <expr><name pos:line="2438" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="2441" pos:column="33">case <expr><name pos:line="2441" pos:column="38">NPPM_INTERNAL_SCINTILLAFINFERCLEARALL</name></expr>:
				<block pos:line="2442" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="2443" pos:column="41">removeAll</name><argument_list pos:line="2443" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2444" pos:column="41">return <expr><name pos:line="2444" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><case pos:line="2447" pos:column="33">case <expr><name pos:line="2447" pos:column="38">NPPM_INTERNAL_SCINTILLAFINFEROPENALL</name></expr>:
				<block pos:line="2448" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="2449" pos:column="41">openAll</name><argument_list pos:line="2449" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2450" pos:column="41">return <expr><name pos:line="2450" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><default pos:line="2453" pos:column="33">default :
				<block pos:line="2454" pos:column="33">{
					<return pos:line="2455" pos:column="41">return <expr><name pos:line="2455" pos:column="48">FALSE</name></expr>;</return>
				}</block>
			</default>}</block></switch>
		}</block>
		
		</case><case pos:line="2460" pos:column="17">case <expr><name pos:line="2460" pos:column="22">WM_CONTEXTMENU</name></expr> :
		<block pos:line="2461" pos:column="17">{
			<if pos:line="2462" pos:column="25">if <condition pos:line="2462" pos:column="28">(<expr><call><name pos:line="2462" pos:column="29">HWND</name><argument_list pos:line="2462" pos:column="33">(<argument><expr><name pos:line="2462" pos:column="34">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="2462" pos:column="42">==</op:operator> <call><name><name pos:line="2462" pos:column="45">_scintView</name><op:operator pos:line="2462" pos:column="55">.</op:operator><name pos:line="2462" pos:column="56">getHSelf</name></name><argument_list pos:line="2462" pos:column="64">()</argument_list></call></expr>)</condition><then pos:line="2462" pos:column="67">
			<block pos:line="2463" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2464" pos:column="33">POINT</name></type> <name pos:line="2464" pos:column="39">p</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="2465" pos:column="33">::</op:operator><name pos:line="2465" pos:column="35">GetCursorPos</name></name><argument_list pos:line="2465" pos:column="47">(<argument><expr><op:operator pos:line="2465" pos:column="48">&amp;</op:operator><name pos:line="2465" pos:column="49">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="2466" pos:column="33">ContextMenu</name></type> <name pos:line="2466" pos:column="45">scintillaContextmenu</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="2467" pos:column="33">vector</name><argument_list pos:line="2467" pos:column="39">&lt;<argument><expr><name pos:line="2467" pos:column="40">MenuItemUnit</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="2467" pos:column="54">tmp</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="2468" pos:column="33">tmp</name><op:operator pos:line="2468" pos:column="36">.</op:operator><name pos:line="2468" pos:column="37">push_back</name></name><argument_list pos:line="2468" pos:column="46">(<argument><expr><call><name pos:line="2468" pos:column="47">MenuItemUnit</name><argument_list pos:line="2468" pos:column="59">(<argument><expr><name pos:line="2468" pos:column="60">NPPM_INTERNAL_SCINTILLAFINFERCOLLAPSE</name></expr></argument>, <argument><expr><call><name pos:line="2468" pos:column="99">TEXT</name><argument_list pos:line="2468" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="2468" pos:column="104">"Collapse all"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2469" pos:column="33">tmp</name><op:operator pos:line="2469" pos:column="36">.</op:operator><name pos:line="2469" pos:column="37">push_back</name></name><argument_list pos:line="2469" pos:column="46">(<argument><expr><call><name pos:line="2469" pos:column="47">MenuItemUnit</name><argument_list pos:line="2469" pos:column="59">(<argument><expr><name pos:line="2469" pos:column="60">NPPM_INTERNAL_SCINTILLAFINFERUNCOLLAPSE</name></expr></argument>, <argument><expr><call><name pos:line="2469" pos:column="101">TEXT</name><argument_list pos:line="2469" pos:column="105">(<argument><expr><lit:literal type="string" pos:line="2469" pos:column="106">"Uncollapse all"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2470" pos:column="33">tmp</name><op:operator pos:line="2470" pos:column="36">.</op:operator><name pos:line="2470" pos:column="37">push_back</name></name><argument_list pos:line="2470" pos:column="46">(<argument><expr><call><name pos:line="2470" pos:column="47">MenuItemUnit</name><argument_list pos:line="2470" pos:column="59">(<argument><expr><lit:literal type="number" pos:line="2470" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="2470" pos:column="63">TEXT</name><argument_list pos:line="2470" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="2470" pos:column="68">"Separator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2471" pos:column="33">tmp</name><op:operator pos:line="2471" pos:column="36">.</op:operator><name pos:line="2471" pos:column="37">push_back</name></name><argument_list pos:line="2471" pos:column="46">(<argument><expr><call><name pos:line="2471" pos:column="47">MenuItemUnit</name><argument_list pos:line="2471" pos:column="59">(<argument><expr><name pos:line="2471" pos:column="60">NPPM_INTERNAL_SCINTILLAFINFERCOPY</name></expr></argument>, <argument><expr><call><name pos:line="2471" pos:column="95">TEXT</name><argument_list pos:line="2471" pos:column="99">(<argument><expr><lit:literal type="string" pos:line="2471" pos:column="100">"Copy"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2472" pos:column="33">tmp</name><op:operator pos:line="2472" pos:column="36">.</op:operator><name pos:line="2472" pos:column="37">push_back</name></name><argument_list pos:line="2472" pos:column="46">(<argument><expr><call><name pos:line="2472" pos:column="47">MenuItemUnit</name><argument_list pos:line="2472" pos:column="59">(<argument><expr><name pos:line="2472" pos:column="60">NPPM_INTERNAL_SCINTILLAFINFERSELECTALL</name></expr></argument>, <argument><expr><call><name pos:line="2472" pos:column="100">TEXT</name><argument_list pos:line="2472" pos:column="104">(<argument><expr><lit:literal type="string" pos:line="2472" pos:column="105">"Select All"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2473" pos:column="33">tmp</name><op:operator pos:line="2473" pos:column="36">.</op:operator><name pos:line="2473" pos:column="37">push_back</name></name><argument_list pos:line="2473" pos:column="46">(<argument><expr><call><name pos:line="2473" pos:column="47">MenuItemUnit</name><argument_list pos:line="2473" pos:column="59">(<argument><expr><name pos:line="2473" pos:column="60">NPPM_INTERNAL_SCINTILLAFINFERCLEARALL</name></expr></argument>, <argument><expr><call><name pos:line="2473" pos:column="99">TEXT</name><argument_list pos:line="2473" pos:column="103">(<argument><expr><lit:literal type="string" pos:line="2473" pos:column="104">"Clear All"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2474" pos:column="33">tmp</name><op:operator pos:line="2474" pos:column="36">.</op:operator><name pos:line="2474" pos:column="37">push_back</name></name><argument_list pos:line="2474" pos:column="46">(<argument><expr><call><name pos:line="2474" pos:column="47">MenuItemUnit</name><argument_list pos:line="2474" pos:column="59">(<argument><expr><lit:literal type="number" pos:line="2474" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><call><name pos:line="2474" pos:column="63">TEXT</name><argument_list pos:line="2474" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="2474" pos:column="68">"Separator"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2475" pos:column="33">tmp</name><op:operator pos:line="2475" pos:column="36">.</op:operator><name pos:line="2475" pos:column="37">push_back</name></name><argument_list pos:line="2475" pos:column="46">(<argument><expr><call><name pos:line="2475" pos:column="47">MenuItemUnit</name><argument_list pos:line="2475" pos:column="59">(<argument><expr><name pos:line="2475" pos:column="60">NPPM_INTERNAL_SCINTILLAFINFEROPENALL</name></expr></argument>, <argument><expr><call><name pos:line="2475" pos:column="98">TEXT</name><argument_list pos:line="2475" pos:column="102">(<argument><expr><lit:literal type="string" pos:line="2475" pos:column="103">"Open All"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><name pos:line="2477" pos:column="33">scintillaContextmenu</name><op:operator pos:line="2477" pos:column="53">.</op:operator><name pos:line="2477" pos:column="54">create</name></name><argument_list pos:line="2477" pos:column="60">(<argument><expr><name pos:line="2477" pos:column="61">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2477" pos:column="69">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><name pos:line="2479" pos:column="33">scintillaContextmenu</name><op:operator pos:line="2479" pos:column="53">.</op:operator><name pos:line="2479" pos:column="54">display</name></name><argument_list pos:line="2479" pos:column="61">(<argument><expr><name pos:line="2479" pos:column="62">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="2480" pos:column="33">return <expr><name pos:line="2480" pos:column="40">TRUE</name></expr>;</return>
			}</block></then></if>
			<return pos:line="2482" pos:column="25">return <expr><call><name><op:operator pos:line="2482" pos:column="32">::</op:operator><name pos:line="2482" pos:column="34">DefWindowProc</name></name><argument_list pos:line="2482" pos:column="47">(<argument><expr><name pos:line="2482" pos:column="48">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2482" pos:column="56">message</name></expr></argument>, <argument><expr><name pos:line="2482" pos:column="65">wParam</name></expr></argument>, <argument><expr><name pos:line="2482" pos:column="73">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
		}</block>

		</case><case pos:line="2485" pos:column="17">case <expr><name pos:line="2485" pos:column="22">WM_SIZE</name></expr> :
		<block pos:line="2486" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2487" pos:column="25">RECT</name></type> <name pos:line="2487" pos:column="30">rc</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="2488" pos:column="25">getClientRect</name><argument_list pos:line="2488" pos:column="38">(<argument><expr><name pos:line="2488" pos:column="39">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2489" pos:column="25">_scintView</name><op:operator pos:line="2489" pos:column="35">.</op:operator><name pos:line="2489" pos:column="36">reSizeTo</name></name><argument_list pos:line="2489" pos:column="44">(<argument><expr><name pos:line="2489" pos:column="45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2490" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="2493" pos:column="17">case <expr><name pos:line="2493" pos:column="22">WM_NOTIFY</name></expr>:
		<block pos:line="2494" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="2495" pos:column="25">notify</name><argument_list pos:line="2495" pos:column="31">(<argument><expr><call><name><name pos:line="2495" pos:column="32">reinterpret_cast</name><argument_list pos:line="2495" pos:column="48">&lt;<argument><expr><name pos:line="2495" pos:column="49">SCNotification</name> <op:operator pos:line="2495" pos:column="64">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="2495" pos:column="66">(<argument><expr><name pos:line="2495" pos:column="67">lParam</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="2496" pos:column="25">return <expr><name pos:line="2496" pos:column="32">FALSE</name></expr>;</return>
		}</block>
		</case><default pos:line="2498" pos:column="17">default :
			<return pos:line="2499" pos:column="25">return <expr><call><name><name pos:line="2499" pos:column="32">DockingDlgInterface</name><op:operator pos:line="2499" pos:column="51">::</op:operator><name pos:line="2499" pos:column="53">run_dlgProc</name></name><argument_list pos:line="2499" pos:column="64">(<argument><expr><name pos:line="2499" pos:column="65">message</name></expr></argument>, <argument><expr><name pos:line="2499" pos:column="74">wParam</name></expr></argument>, <argument><expr><name pos:line="2499" pos:column="82">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
	</default>}</block></switch>
	<return pos:line="2501" pos:column="9">return <expr><name pos:line="2501" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2504" pos:column="1">void</name></type> <name><name pos:line="2504" pos:column="6">FindIncrementDlg</name><op:operator pos:line="2504" pos:column="22">::</op:operator><name pos:line="2504" pos:column="24">init</name></name><parameter_list pos:line="2504" pos:column="28">(<param><decl><type><name pos:line="2504" pos:column="29">HINSTANCE</name></type> <name pos:line="2504" pos:column="39">hInst</name></decl></param>, <param><decl><type><name pos:line="2504" pos:column="46">HWND</name></type> <name pos:line="2504" pos:column="51">hPere</name></decl></param>, <param><decl><type><name pos:line="2504" pos:column="58">FindReplaceDlg</name> <type:modifier pos:line="2504" pos:column="73">*</type:modifier></type><name pos:line="2504" pos:column="74">pFRDlg</name></decl></param>, <param><decl><type><name pos:line="2504" pos:column="82">bool</name></type> <name pos:line="2504" pos:column="87">isRTL</name></decl></param>)</parameter_list>
<block pos:line="2505" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="2506" pos:column="9">Window</name><op:operator pos:line="2506" pos:column="15">::</op:operator><name pos:line="2506" pos:column="17">init</name></name><argument_list pos:line="2506" pos:column="21">(<argument><expr><name pos:line="2506" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="2506" pos:column="29">hPere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="2507" pos:column="9">if <condition pos:line="2507" pos:column="12">(<expr><op:operator pos:line="2507" pos:column="13">!</op:operator><name pos:line="2507" pos:column="14">pFRDlg</name></expr>)</condition><then pos:line="2507" pos:column="21">
		<throw pos:line="2508" pos:column="17">throw <expr><call><name><name pos:line="2508" pos:column="23">std</name><op:operator pos:line="2508" pos:column="26">::</op:operator><name pos:line="2508" pos:column="28">runtime_error</name></name><argument_list pos:line="2508" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="2508" pos:column="42">"FindIncrementDlg::init : Parameter pFRDlg is null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw></then></if>

	<expr_stmt><expr><name pos:line="2510" pos:column="9">_pFRDlg</name> <op:operator pos:line="2510" pos:column="17">=</op:operator> <name pos:line="2510" pos:column="19">pFRDlg</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="2511" pos:column="9">create</name><argument_list pos:line="2511" pos:column="15">(<argument><expr><name pos:line="2511" pos:column="16">IDD_INCREMENT_FIND</name></expr></argument>, <argument><expr><name pos:line="2511" pos:column="36">isRTL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="2512" pos:column="9">_isRTL</name> <op:operator pos:line="2512" pos:column="16">=</op:operator> <name pos:line="2512" pos:column="18">isRTL</name></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2515" pos:column="1">void</name></type> <name><name pos:line="2515" pos:column="6">FindIncrementDlg</name><op:operator pos:line="2515" pos:column="22">::</op:operator><name pos:line="2515" pos:column="24">destroy</name></name><parameter_list pos:line="2515" pos:column="31">()</parameter_list>
<block pos:line="2516" pos:column="1">{
	<if pos:line="2517" pos:column="9">if <condition pos:line="2517" pos:column="12">(<expr><name pos:line="2517" pos:column="13">_pRebar</name></expr>)</condition><then pos:line="2517" pos:column="21"> 
	<block pos:line="2518" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="2519" pos:column="17">_pRebar</name><op:operator pos:line="2519" pos:column="24">-&gt;</op:operator><name pos:line="2519" pos:column="26">removeBand</name></name><argument_list pos:line="2519" pos:column="36">(<argument><expr><name><name pos:line="2519" pos:column="37">_rbBand</name><op:operator pos:line="2519" pos:column="44">.</op:operator><name pos:line="2519" pos:column="45">wID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="2520" pos:column="17">_pRebar</name> <op:operator pos:line="2520" pos:column="25">=</op:operator> <name pos:line="2520" pos:column="27">NULL</name></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="2524" pos:column="1">void</name></type> <name><name pos:line="2524" pos:column="6">FindIncrementDlg</name><op:operator pos:line="2524" pos:column="22">::</op:operator><name pos:line="2524" pos:column="24">display</name></name><parameter_list pos:line="2524" pos:column="31">(<param><decl><type><name pos:line="2524" pos:column="32">bool</name></type> <name pos:line="2524" pos:column="37">toShow</name></decl></param>)</parameter_list> <specifier pos:line="2524" pos:column="45">const</specifier>
<block pos:line="2525" pos:column="1">{
	<if pos:line="2526" pos:column="9">if <condition pos:line="2526" pos:column="12">(<expr><op:operator pos:line="2526" pos:column="13">!</op:operator><name pos:line="2526" pos:column="14">_pRebar</name></expr>)</condition><then pos:line="2526" pos:column="22">
	<block pos:line="2527" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="2528" pos:column="17">Window</name><op:operator pos:line="2528" pos:column="23">::</op:operator><name pos:line="2528" pos:column="25">display</name></name><argument_list pos:line="2528" pos:column="32">(<argument><expr><name pos:line="2528" pos:column="33">toShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="2529" pos:column="17">return;</return>
	}</block></then></if>
	<if pos:line="2531" pos:column="9">if <condition pos:line="2531" pos:column="12">(<expr><name pos:line="2531" pos:column="13">toShow</name></expr>)</condition><then pos:line="2531" pos:column="20">
	<block pos:line="2532" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="2533" pos:column="17">::</op:operator><name pos:line="2533" pos:column="19">SetFocus</name></name><argument_list pos:line="2533" pos:column="27">(<argument><expr><call><name><op:operator pos:line="2533" pos:column="28">::</op:operator><name pos:line="2533" pos:column="30">GetDlgItem</name></name><argument_list pos:line="2533" pos:column="40">(<argument><expr><name pos:line="2533" pos:column="41">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2533" pos:column="49">IDC_INCFINDTEXT</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="2534" pos:column="17">// select the whole find editor text</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="2535" pos:column="17">::</op:operator><name pos:line="2535" pos:column="19">SendDlgItemMessage</name></name><argument_list pos:line="2535" pos:column="37">(<argument><expr><name pos:line="2535" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2535" pos:column="46">IDC_INCFINDTEXT</name></expr></argument>, <argument><expr><name pos:line="2535" pos:column="63">EM_SETSEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2535" pos:column="74">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2535" pos:column="77">-</op:operator><lit:literal type="number" pos:line="2535" pos:column="78">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="2537" pos:column="9">_pRebar</name><op:operator pos:line="2537" pos:column="16">-&gt;</op:operator><name pos:line="2537" pos:column="18">setIDVisible</name></name><argument_list pos:line="2537" pos:column="30">(<argument><expr><name><name pos:line="2537" pos:column="31">_rbBand</name><op:operator pos:line="2537" pos:column="38">.</op:operator><name pos:line="2537" pos:column="39">wID</name></name></expr></argument>, <argument><expr><name pos:line="2537" pos:column="44">toShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<cpp:define pos:line="2540" pos:column="1">#<cpp:directive pos:line="2540" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2540" pos:column="9">SHIFTED</name></cpp:macro> <cpp:value pos:line="2540" pos:column="17">0x8000</cpp:value></cpp:define>
<cpp:define pos:line="2541" pos:column="1">#<cpp:directive pos:line="2541" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2541" pos:column="9">BCKGRD_COLOR</name></cpp:macro> <cpp:value pos:line="2541" pos:column="22">(RGB(255,102,102))</cpp:value></cpp:define>
<cpp:define pos:line="2542" pos:column="1">#<cpp:directive pos:line="2542" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="2542" pos:column="9">TXT_COLOR</name></cpp:macro>    <cpp:value pos:line="2542" pos:column="22">(RGB(255,255,255))</cpp:value></cpp:define>

<function><type><name pos:line="2544" pos:column="1">BOOL</name> <name pos:line="2544" pos:column="6">CALLBACK</name></type> <name><name pos:line="2544" pos:column="15">FindIncrementDlg</name><op:operator pos:line="2544" pos:column="31">::</op:operator><name pos:line="2544" pos:column="33">run_dlgProc</name></name><parameter_list pos:line="2544" pos:column="44">(<param><decl><type><name pos:line="2544" pos:column="45">UINT</name></type> <name pos:line="2544" pos:column="50">message</name></decl></param>, <param><decl><type><name pos:line="2544" pos:column="59">WPARAM</name></type> <name pos:line="2544" pos:column="66">wParam</name></decl></param>, <param><decl><type><name pos:line="2544" pos:column="74">LPARAM</name></type></decl></param>)</parameter_list>
<block pos:line="2545" pos:column="1">{
	<switch pos:line="2546" pos:column="9">switch <condition pos:line="2546" pos:column="16">(<expr><name pos:line="2546" pos:column="17">message</name></expr>)</condition>
	<block pos:line="2547" pos:column="9">{
		<comment type="line" pos:line="2548" pos:column="17">// Make edit field red if not found</comment>
		<case pos:line="2549" pos:column="17">case <expr><name pos:line="2549" pos:column="22">WM_CTLCOLOREDIT</name></expr> :
		<block pos:line="2550" pos:column="17">{
			<comment type="line" pos:line="2551" pos:column="25">// if the text not found modify the background color of the editor</comment>
			<decl_stmt><decl><type><specifier pos:line="2552" pos:column="25">static</specifier> <name pos:line="2552" pos:column="32">HBRUSH</name></type> <name pos:line="2552" pos:column="39">hBrushBackground</name> <init pos:line="2552" pos:column="56">= <expr><call><name pos:line="2552" pos:column="58">CreateSolidBrush</name><argument_list pos:line="2552" pos:column="74">(<argument><expr><name pos:line="2552" pos:column="75">BCKGRD_COLOR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2553" pos:column="25">if <condition pos:line="2553" pos:column="28">(<expr><name pos:line="2553" pos:column="29">FSNotFound</name> <op:operator pos:line="2553" pos:column="40">!=</op:operator> <call><name pos:line="2553" pos:column="43">getFindStatus</name><argument_list pos:line="2553" pos:column="56">()</argument_list></call></expr>)</condition><then pos:line="2553" pos:column="59">
				<return pos:line="2554" pos:column="33">return <expr><name pos:line="2554" pos:column="40">FALSE</name></expr>;</return></then></if> <comment type="line" pos:line="2554" pos:column="47">// text found, use the default color</comment>

			<comment type="line" pos:line="2556" pos:column="25">// text not found</comment>
			<expr_stmt><expr><call><name pos:line="2557" pos:column="25">SetTextColor</name><argument_list pos:line="2557" pos:column="37">(<argument><expr><op:operator pos:line="2557" pos:column="38">(</op:operator><name pos:line="2557" pos:column="39">HDC</name><op:operator pos:line="2557" pos:column="42">)</op:operator><name pos:line="2557" pos:column="43">wParam</name></expr></argument>, <argument><expr><name pos:line="2557" pos:column="51">TXT_COLOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2558" pos:column="25">SetBkColor</name><argument_list pos:line="2558" pos:column="35">(<argument><expr><op:operator pos:line="2558" pos:column="36">(</op:operator><name pos:line="2558" pos:column="37">HDC</name><op:operator pos:line="2558" pos:column="40">)</op:operator><name pos:line="2558" pos:column="41">wParam</name></expr></argument>, <argument><expr><name pos:line="2558" pos:column="49">BCKGRD_COLOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="2559" pos:column="25">return <expr><op:operator pos:line="2559" pos:column="32">(</op:operator><name pos:line="2559" pos:column="33">LRESULT</name><op:operator pos:line="2559" pos:column="40">)</op:operator><name pos:line="2559" pos:column="41">hBrushBackground</name></expr>;</return>
		}</block>

		</case><case pos:line="2562" pos:column="17">case <expr><name pos:line="2562" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="2563" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2564" pos:column="25">bool</name></type> <name pos:line="2564" pos:column="30">isUnicode</name> <init pos:line="2564" pos:column="40">= <expr><op:operator pos:line="2564" pos:column="42">(</op:operator><op:operator pos:line="2564" pos:column="43">*</op:operator><op:operator pos:line="2564" pos:column="44">(</op:operator><name><name pos:line="2564" pos:column="45">_pFRDlg</name><op:operator pos:line="2564" pos:column="52">-&gt;</op:operator><name pos:line="2564" pos:column="54">_ppEditView</name></name><op:operator pos:line="2564" pos:column="65">)</op:operator><op:operator pos:line="2564" pos:column="66">)</op:operator><op:operator pos:line="2564" pos:column="67">-&gt;</op:operator><call><name pos:line="2564" pos:column="69">getCurrentBuffer</name><argument_list pos:line="2564" pos:column="85">()</argument_list></call><op:operator pos:line="2564" pos:column="87">-&gt;</op:operator><call><name pos:line="2564" pos:column="89">getUnicodeMode</name><argument_list pos:line="2564" pos:column="103">()</argument_list></call> <op:operator pos:line="2564" pos:column="106">!=</op:operator> <name pos:line="2564" pos:column="109">uni8Bit</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2565" pos:column="25">FindStatus</name></type> <name pos:line="2565" pos:column="36">findStatus</name> <init pos:line="2565" pos:column="47">= <expr><name pos:line="2565" pos:column="49">FSFound</name></expr></init></decl>;</decl_stmt>
			<switch pos:line="2566" pos:column="25">switch <condition pos:line="2566" pos:column="32">(<expr><call><name pos:line="2566" pos:column="33">LOWORD</name><argument_list pos:line="2566" pos:column="39">(<argument><expr><name pos:line="2566" pos:column="40">wParam</name></expr></argument>)</argument_list></call></expr>)</condition>
			<block pos:line="2567" pos:column="25">{
				<case pos:line="2568" pos:column="33">case <expr><name pos:line="2568" pos:column="38">IDCANCEL</name></expr> :
					<expr_stmt><expr><op:operator pos:line="2569" pos:column="41">(</op:operator><op:operator pos:line="2569" pos:column="42">*</op:operator><op:operator pos:line="2569" pos:column="43">(</op:operator><name><name pos:line="2569" pos:column="44">_pFRDlg</name><op:operator pos:line="2569" pos:column="51">-&gt;</op:operator><name pos:line="2569" pos:column="53">_ppEditView</name></name><op:operator pos:line="2569" pos:column="64">)</op:operator><op:operator pos:line="2569" pos:column="65">)</op:operator><op:operator pos:line="2569" pos:column="66">-&gt;</op:operator><call><name pos:line="2569" pos:column="68">clearIndicator</name><argument_list pos:line="2569" pos:column="82">(<argument><expr><name pos:line="2569" pos:column="83">SCE_UNIVERSAL_FOUND_STYLE_INC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="2570" pos:column="41">::</op:operator><name pos:line="2570" pos:column="43">SetFocus</name></name><argument_list pos:line="2570" pos:column="51">(<argument><expr><op:operator pos:line="2570" pos:column="52">(</op:operator><op:operator pos:line="2570" pos:column="53">*</op:operator><op:operator pos:line="2570" pos:column="54">(</op:operator><name><name pos:line="2570" pos:column="55">_pFRDlg</name><op:operator pos:line="2570" pos:column="62">-&gt;</op:operator><name pos:line="2570" pos:column="64">_ppEditView</name></name><op:operator pos:line="2570" pos:column="75">)</op:operator><op:operator pos:line="2570" pos:column="76">)</op:operator><op:operator pos:line="2570" pos:column="77">-&gt;</op:operator><call><name pos:line="2570" pos:column="79">getHSelf</name><argument_list pos:line="2570" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><call><name pos:line="2572" pos:column="41">display</name><argument_list pos:line="2572" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="2572" pos:column="49">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2573" pos:column="41">return <expr><name pos:line="2573" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="2575" pos:column="33">case <expr><name pos:line="2575" pos:column="38">IDC_INCFINDPREVOK</name></expr> :
				</case><case pos:line="2576" pos:column="33">case <expr><name pos:line="2576" pos:column="38">IDC_INCFINDNXTOK</name></expr> :
				</case><case pos:line="2577" pos:column="33">case <expr><name pos:line="2577" pos:column="38">IDOK</name></expr> :
				<block pos:line="2578" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="2579" pos:column="41">FindOption</name></type> <name pos:line="2579" pos:column="52">fo</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="2580" pos:column="41">fo</name><op:operator pos:line="2580" pos:column="43">.</op:operator><name pos:line="2580" pos:column="44">_isWholeWord</name></name> <op:operator pos:line="2580" pos:column="57">=</op:operator> <lit:literal type="boolean" pos:line="2580" pos:column="59">false</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="2581" pos:column="41">fo</name><op:operator pos:line="2581" pos:column="43">.</op:operator><name pos:line="2581" pos:column="44">_incrementalType</name></name> <op:operator pos:line="2581" pos:column="61">=</op:operator> <name pos:line="2581" pos:column="63">NextIncremental</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="2582" pos:column="41">fo</name><op:operator pos:line="2582" pos:column="43">.</op:operator><name pos:line="2582" pos:column="44">_isMatchCase</name></name> <op:operator pos:line="2582" pos:column="57">=</op:operator> <op:operator pos:line="2582" pos:column="59">(</op:operator><name pos:line="2582" pos:column="60">BST_CHECKED</name> <op:operator pos:line="2582" pos:column="72">==</op:operator> <call><name><op:operator pos:line="2582" pos:column="75">::</op:operator><name pos:line="2582" pos:column="77">SendDlgItemMessage</name></name><argument_list pos:line="2582" pos:column="95">(<argument><expr><name pos:line="2582" pos:column="96">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2582" pos:column="104">IDC_INCFINDMATCHCASE</name></expr></argument>, <argument><expr><name pos:line="2582" pos:column="126">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2582" pos:column="139">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2582" pos:column="142">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2582" pos:column="144">)</op:operator></expr>;</expr_stmt>
					<if pos:line="2583" pos:column="41">if <condition pos:line="2583" pos:column="44">(<expr><call><name pos:line="2583" pos:column="45">LOWORD</name><argument_list pos:line="2583" pos:column="51">(<argument><expr><name pos:line="2583" pos:column="52">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="2583" pos:column="60">==</op:operator> <name pos:line="2583" pos:column="63">IDC_INCFINDPREVOK</name></expr>)</condition><then pos:line="2583" pos:column="81">
						<expr_stmt><expr><name><name pos:line="2584" pos:column="49">fo</name><op:operator pos:line="2584" pos:column="51">.</op:operator><name pos:line="2584" pos:column="52">_whichDirection</name></name> <op:operator pos:line="2584" pos:column="68">=</op:operator> <name pos:line="2584" pos:column="70">DIR_UP</name></expr>;</expr_stmt></then>
					<else pos:line="2585" pos:column="41">else <if pos:line="2585" pos:column="46">if <condition pos:line="2585" pos:column="49">(<expr><call><name pos:line="2585" pos:column="50">LOWORD</name><argument_list pos:line="2585" pos:column="56">(<argument><expr><name pos:line="2585" pos:column="57">wParam</name></expr></argument>)</argument_list></call> <op:operator pos:line="2585" pos:column="65">==</op:operator> <name pos:line="2585" pos:column="68">IDOK</name></expr>)</condition><then pos:line="2585" pos:column="73">
					<block pos:line="2586" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="2587" pos:column="49">SHORT</name></type> <name pos:line="2587" pos:column="55">nVirtKey</name> <init pos:line="2587" pos:column="64">= <expr><call><name pos:line="2587" pos:column="66">GetKeyState</name><argument_list pos:line="2587" pos:column="77">(<argument><expr><name pos:line="2587" pos:column="78">VK_SHIFT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<if pos:line="2588" pos:column="49">if <condition pos:line="2588" pos:column="52">(<expr><name pos:line="2588" pos:column="53">nVirtKey</name> <op:operator pos:line="2588" pos:column="62">&amp;</op:operator> <name pos:line="2588" pos:column="64">SHIFTED</name></expr>)</condition><then pos:line="2588" pos:column="72">
							<expr_stmt><expr><name><name pos:line="2589" pos:column="57">fo</name><op:operator pos:line="2589" pos:column="59">.</op:operator><name pos:line="2589" pos:column="60">_whichDirection</name></name> <op:operator pos:line="2589" pos:column="76">=</op:operator> <name pos:line="2589" pos:column="78">DIR_UP</name></expr>;</expr_stmt></then></if>
					}</block></then></if></else></if>
					
					<decl_stmt><decl><type><name pos:line="2592" pos:column="41">generic_string</name></type> <name pos:line="2592" pos:column="56">str2Search</name> <init pos:line="2592" pos:column="67">= <expr><call><name><name pos:line="2592" pos:column="69">_pFRDlg</name><op:operator pos:line="2592" pos:column="76">-&gt;</op:operator><name pos:line="2592" pos:column="78">getTextFromCombo</name></name><argument_list pos:line="2592" pos:column="94">(<argument><expr><call><name><op:operator pos:line="2592" pos:column="95">::</op:operator><name pos:line="2592" pos:column="97">GetDlgItem</name></name><argument_list pos:line="2592" pos:column="107">(<argument><expr><name pos:line="2592" pos:column="108">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2592" pos:column="116">IDC_INCFINDTEXT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2592" pos:column="134">isUnicode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="2593" pos:column="41">_pFRDlg</name><op:operator pos:line="2593" pos:column="48">-&gt;</op:operator><name pos:line="2593" pos:column="50">processFindNext</name></name><argument_list pos:line="2593" pos:column="65">(<argument><expr><call><name><name pos:line="2593" pos:column="66">str2Search</name><op:operator pos:line="2593" pos:column="76">.</op:operator><name pos:line="2593" pos:column="77">c_str</name></name><argument_list pos:line="2593" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2593" pos:column="86">&amp;</op:operator><name pos:line="2593" pos:column="87">fo</name></expr></argument>, <argument><expr><op:operator pos:line="2593" pos:column="91">&amp;</op:operator><name pos:line="2593" pos:column="92">findStatus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="2594" pos:column="41">setFindStatus</name><argument_list pos:line="2594" pos:column="54">(<argument><expr><name pos:line="2594" pos:column="55">findStatus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block>
				<return pos:line="2596" pos:column="33">return <expr><name pos:line="2596" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="2598" pos:column="33">case <expr><name pos:line="2598" pos:column="38">IDC_INCFINDTEXT</name></expr> :
				<block pos:line="2599" pos:column="33">{
					<switch pos:line="2600" pos:column="41">switch<condition pos:line="2600" pos:column="47">(<expr><call><name pos:line="2600" pos:column="48">HIWORD</name><argument_list pos:line="2600" pos:column="54">(<argument><expr><name pos:line="2600" pos:column="55">wParam</name></expr></argument>)</argument_list></call></expr>)</condition>
					<block pos:line="2601" pos:column="41">{
						<case pos:line="2602" pos:column="49">case <expr><name pos:line="2602" pos:column="54">EN_CHANGE</name></expr> :
						<block pos:line="2603" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="2604" pos:column="57">FindOption</name></type> <name pos:line="2604" pos:column="68">fo</name></decl>;</decl_stmt>
							<expr_stmt><expr><name><name pos:line="2605" pos:column="57">fo</name><op:operator pos:line="2605" pos:column="59">.</op:operator><name pos:line="2605" pos:column="60">_isWholeWord</name></name> <op:operator pos:line="2605" pos:column="73">=</op:operator> <lit:literal type="boolean" pos:line="2605" pos:column="75">false</lit:literal></expr>;</expr_stmt>
							<expr_stmt><expr><name><name pos:line="2606" pos:column="57">fo</name><op:operator pos:line="2606" pos:column="59">.</op:operator><name pos:line="2606" pos:column="60">_isMatchCase</name></name> <op:operator pos:line="2606" pos:column="73">=</op:operator> <op:operator pos:line="2606" pos:column="75">(</op:operator><name pos:line="2606" pos:column="76">BST_CHECKED</name> <op:operator pos:line="2606" pos:column="88">==</op:operator> <call><name><op:operator pos:line="2606" pos:column="91">::</op:operator><name pos:line="2606" pos:column="93">SendDlgItemMessage</name></name><argument_list pos:line="2606" pos:column="111">(<argument><expr><name pos:line="2606" pos:column="112">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2606" pos:column="120">IDC_INCFINDMATCHCASE</name></expr></argument>, <argument><expr><name pos:line="2606" pos:column="142">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2606" pos:column="155">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2606" pos:column="158">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2606" pos:column="160">)</op:operator></expr>;</expr_stmt>
							<expr_stmt><expr><name><name pos:line="2607" pos:column="57">fo</name><op:operator pos:line="2607" pos:column="59">.</op:operator><name pos:line="2607" pos:column="60">_incrementalType</name></name> <op:operator pos:line="2607" pos:column="77">=</op:operator> <name pos:line="2607" pos:column="79">FirstIncremental</name></expr>;</expr_stmt>
							
							<decl_stmt><decl><type><name pos:line="2609" pos:column="57">generic_string</name></type> <name pos:line="2609" pos:column="72">str2Search</name> <init pos:line="2609" pos:column="83">= <expr><call><name><name pos:line="2609" pos:column="85">_pFRDlg</name><op:operator pos:line="2609" pos:column="92">-&gt;</op:operator><name pos:line="2609" pos:column="94">getTextFromCombo</name></name><argument_list pos:line="2609" pos:column="110">(<argument><expr><call><name><op:operator pos:line="2609" pos:column="111">::</op:operator><name pos:line="2609" pos:column="113">GetDlgItem</name></name><argument_list pos:line="2609" pos:column="123">(<argument><expr><name pos:line="2609" pos:column="124">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2609" pos:column="132">IDC_INCFINDTEXT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2609" pos:column="150">isUnicode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><call><name><name pos:line="2610" pos:column="57">_pFRDlg</name><op:operator pos:line="2610" pos:column="64">-&gt;</op:operator><name pos:line="2610" pos:column="66">processFindNext</name></name><argument_list pos:line="2610" pos:column="81">(<argument><expr><call><name><name pos:line="2610" pos:column="82">str2Search</name><op:operator pos:line="2610" pos:column="92">.</op:operator><name pos:line="2610" pos:column="93">c_str</name></name><argument_list pos:line="2610" pos:column="98">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2610" pos:column="102">&amp;</op:operator><name pos:line="2610" pos:column="103">fo</name></expr></argument>, <argument><expr><op:operator pos:line="2610" pos:column="107">&amp;</op:operator><name pos:line="2610" pos:column="108">findStatus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<expr_stmt><expr><call><name pos:line="2611" pos:column="57">setFindStatus</name><argument_list pos:line="2611" pos:column="70">(<argument><expr><name pos:line="2611" pos:column="71">findStatus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block>
					<return pos:line="2613" pos:column="41">return <expr><name pos:line="2613" pos:column="48">TRUE</name></expr>;</return>
					</case><case pos:line="2614" pos:column="41">case <expr><name pos:line="2614" pos:column="46">EN_KILLFOCUS</name></expr> :
					</case><case pos:line="2615" pos:column="41">case <expr><name pos:line="2615" pos:column="46">EN_SETFOCUS</name></expr> :
						<break pos:line="2616" pos:column="49">break;</break>
					</case>}</block></switch>
				}</block>
				<return pos:line="2619" pos:column="33">return <expr><name pos:line="2619" pos:column="40">TRUE</name></expr>;</return>

				</case><case pos:line="2621" pos:column="33">case <expr><name pos:line="2621" pos:column="38">IDC_INCFINDMATCHCASE</name></expr>:
					<block pos:line="2622" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="2623" pos:column="49">FindOption</name></type> <name pos:line="2623" pos:column="60">fo</name></decl>;</decl_stmt>
						<expr_stmt><expr><name><name pos:line="2624" pos:column="49">fo</name><op:operator pos:line="2624" pos:column="51">.</op:operator><name pos:line="2624" pos:column="52">_isWholeWord</name></name> <op:operator pos:line="2624" pos:column="65">=</op:operator> <lit:literal type="boolean" pos:line="2624" pos:column="67">false</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="2625" pos:column="41">fo</name><op:operator pos:line="2625" pos:column="43">.</op:operator><name pos:line="2625" pos:column="44">_incrementalType</name></name> <op:operator pos:line="2625" pos:column="61">=</op:operator> <name pos:line="2625" pos:column="63">FirstIncremental</name></expr>;</expr_stmt>
						<expr_stmt><expr><name><name pos:line="2626" pos:column="49">fo</name><op:operator pos:line="2626" pos:column="51">.</op:operator><name pos:line="2626" pos:column="52">_isMatchCase</name></name> <op:operator pos:line="2626" pos:column="65">=</op:operator> <op:operator pos:line="2626" pos:column="67">(</op:operator><name pos:line="2626" pos:column="68">BST_CHECKED</name> <op:operator pos:line="2626" pos:column="80">==</op:operator> <call><name><op:operator pos:line="2626" pos:column="83">::</op:operator><name pos:line="2626" pos:column="85">SendDlgItemMessage</name></name><argument_list pos:line="2626" pos:column="103">(<argument><expr><name pos:line="2626" pos:column="104">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2626" pos:column="112">IDC_INCFINDMATCHCASE</name></expr></argument>, <argument><expr><name pos:line="2626" pos:column="134">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2626" pos:column="147">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2626" pos:column="150">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2626" pos:column="152">)</op:operator></expr>;</expr_stmt>

						<decl_stmt><decl><type><name pos:line="2628" pos:column="49">generic_string</name></type> <name pos:line="2628" pos:column="64">str2Search</name> <init pos:line="2628" pos:column="75">= <expr><call><name><name pos:line="2628" pos:column="77">_pFRDlg</name><op:operator pos:line="2628" pos:column="84">-&gt;</op:operator><name pos:line="2628" pos:column="86">getTextFromCombo</name></name><argument_list pos:line="2628" pos:column="102">(<argument><expr><call><name><op:operator pos:line="2628" pos:column="103">::</op:operator><name pos:line="2628" pos:column="105">GetDlgItem</name></name><argument_list pos:line="2628" pos:column="115">(<argument><expr><name pos:line="2628" pos:column="116">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2628" pos:column="124">IDC_INCFINDTEXT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2628" pos:column="142">isUnicode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="2629" pos:column="41">bool</name></type> <name pos:line="2629" pos:column="46">isFound</name> <init pos:line="2629" pos:column="54">= <expr><call><name><name pos:line="2629" pos:column="56">_pFRDlg</name><op:operator pos:line="2629" pos:column="63">-&gt;</op:operator><name pos:line="2629" pos:column="65">processFindNext</name></name><argument_list pos:line="2629" pos:column="80">(<argument><expr><call><name><name pos:line="2629" pos:column="81">str2Search</name><op:operator pos:line="2629" pos:column="91">.</op:operator><name pos:line="2629" pos:column="92">c_str</name></name><argument_list pos:line="2629" pos:column="97">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="2629" pos:column="101">&amp;</op:operator><name pos:line="2629" pos:column="102">fo</name></expr></argument>, <argument><expr><op:operator pos:line="2629" pos:column="106">&amp;</op:operator><name pos:line="2629" pos:column="107">findStatus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name pos:line="2630" pos:column="41">setFindStatus</name><argument_list pos:line="2630" pos:column="54">(<argument><expr><name pos:line="2630" pos:column="55">findStatus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<if pos:line="2631" pos:column="49">if <condition pos:line="2631" pos:column="52">(<expr><op:operator pos:line="2631" pos:column="53">!</op:operator><name pos:line="2631" pos:column="54">isFound</name></expr>)</condition><then pos:line="2631" pos:column="62">
						<block pos:line="2632" pos:column="49">{
							<decl_stmt><decl><type><name pos:line="2633" pos:column="57">CharacterRange</name></type> <name pos:line="2633" pos:column="72">range</name> <init pos:line="2633" pos:column="78">= <expr><op:operator pos:line="2633" pos:column="80">(</op:operator><op:operator pos:line="2633" pos:column="81">*</op:operator><op:operator pos:line="2633" pos:column="82">(</op:operator><name><name pos:line="2633" pos:column="83">_pFRDlg</name><op:operator pos:line="2633" pos:column="90">-&gt;</op:operator><name pos:line="2633" pos:column="92">_ppEditView</name></name><op:operator pos:line="2633" pos:column="103">)</op:operator><op:operator pos:line="2633" pos:column="104">)</op:operator><op:operator pos:line="2633" pos:column="105">-&gt;</op:operator><call><name pos:line="2633" pos:column="107">getSelection</name><argument_list pos:line="2633" pos:column="119">()</argument_list></call></expr></init></decl>;</decl_stmt>
							<expr_stmt><expr><op:operator pos:line="2634" pos:column="57">(</op:operator><op:operator pos:line="2634" pos:column="58">*</op:operator><op:operator pos:line="2634" pos:column="59">(</op:operator><name><name pos:line="2634" pos:column="60">_pFRDlg</name><op:operator pos:line="2634" pos:column="67">-&gt;</op:operator><name pos:line="2634" pos:column="69">_ppEditView</name></name><op:operator pos:line="2634" pos:column="80">)</op:operator><op:operator pos:line="2634" pos:column="81">)</op:operator><op:operator pos:line="2634" pos:column="82">-&gt;</op:operator><call><name pos:line="2634" pos:column="84">execute</name><argument_list pos:line="2634" pos:column="91">(<argument><expr><name pos:line="2634" pos:column="92">SCI_SETSEL</name></expr></argument>, <argument><expr><op:operator pos:line="2634" pos:column="104">(</op:operator><name pos:line="2634" pos:column="105">WPARAM</name><op:operator pos:line="2634" pos:column="111">)</op:operator><op:operator pos:line="2634" pos:column="112">-</op:operator><lit:literal type="number" pos:line="2634" pos:column="113">1</lit:literal></expr></argument>, <argument><expr><name><name pos:line="2634" pos:column="116">range</name><op:operator pos:line="2634" pos:column="121">.</op:operator><name pos:line="2634" pos:column="122">cpMin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						}</block></then></if>
				}</block>

				</case><case pos:line="2638" pos:column="33">case <expr><name pos:line="2638" pos:column="38">IDC_INCFINDHILITEALL</name></expr> :
				<block pos:line="2639" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="2640" pos:column="41">FindOption</name></type> <name pos:line="2640" pos:column="52">fo</name></decl>;</decl_stmt>
					<expr_stmt><expr><name><name pos:line="2641" pos:column="41">fo</name><op:operator pos:line="2641" pos:column="43">.</op:operator><name pos:line="2641" pos:column="44">_isWholeWord</name></name> <op:operator pos:line="2641" pos:column="57">=</op:operator> <lit:literal type="boolean" pos:line="2641" pos:column="59">false</lit:literal></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="2642" pos:column="41">fo</name><op:operator pos:line="2642" pos:column="43">.</op:operator><name pos:line="2642" pos:column="44">_incrementalType</name></name> <op:operator pos:line="2642" pos:column="61">=</op:operator> <name pos:line="2642" pos:column="63">FirstIncremental</name></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="2643" pos:column="41">fo</name><op:operator pos:line="2643" pos:column="43">.</op:operator><name pos:line="2643" pos:column="44">_isMatchCase</name></name> <op:operator pos:line="2643" pos:column="57">=</op:operator> <op:operator pos:line="2643" pos:column="59">(</op:operator><name pos:line="2643" pos:column="60">BST_CHECKED</name> <op:operator pos:line="2643" pos:column="72">==</op:operator> <call><name><op:operator pos:line="2643" pos:column="75">::</op:operator><name pos:line="2643" pos:column="77">SendDlgItemMessage</name></name><argument_list pos:line="2643" pos:column="95">(<argument><expr><name pos:line="2643" pos:column="96">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="104">IDC_INCFINDMATCHCASE</name></expr></argument>, <argument><expr><name pos:line="2643" pos:column="126">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2643" pos:column="139">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2643" pos:column="142">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2643" pos:column="144">)</op:operator></expr>;</expr_stmt>

					<decl_stmt><decl><type><name pos:line="2645" pos:column="41">generic_string</name></type> <name pos:line="2645" pos:column="56">str2Search</name> <init pos:line="2645" pos:column="67">= <expr><call><name><name pos:line="2645" pos:column="69">_pFRDlg</name><op:operator pos:line="2645" pos:column="76">-&gt;</op:operator><name pos:line="2645" pos:column="78">getTextFromCombo</name></name><argument_list pos:line="2645" pos:column="94">(<argument><expr><call><name><op:operator pos:line="2645" pos:column="95">::</op:operator><name pos:line="2645" pos:column="97">GetDlgItem</name></name><argument_list pos:line="2645" pos:column="107">(<argument><expr><name pos:line="2645" pos:column="108">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2645" pos:column="116">IDC_INCFINDTEXT</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2645" pos:column="134">isUnicode</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="2646" pos:column="49">bool</name></type> <name pos:line="2646" pos:column="54">isHiLieAll</name> <init pos:line="2646" pos:column="65">= <expr><op:operator pos:line="2646" pos:column="67">(</op:operator><name pos:line="2646" pos:column="68">BST_CHECKED</name> <op:operator pos:line="2646" pos:column="80">==</op:operator> <call><name><op:operator pos:line="2646" pos:column="83">::</op:operator><name pos:line="2646" pos:column="85">SendDlgItemMessage</name></name><argument_list pos:line="2646" pos:column="103">(<argument><expr><name pos:line="2646" pos:column="104">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2646" pos:column="112">IDC_INCFINDHILITEALL</name></expr></argument>, <argument><expr><name pos:line="2646" pos:column="134">BM_GETCHECK</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2646" pos:column="147">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2646" pos:column="150">0</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="2646" pos:column="152">)</op:operator></expr></init></decl>;</decl_stmt>
						<if pos:line="2647" pos:column="49">if <condition pos:line="2647" pos:column="52">(<expr><name pos:line="2647" pos:column="53">str2Search</name> <op:operator pos:line="2647" pos:column="64">==</op:operator> <call><name pos:line="2647" pos:column="67">TEXT</name><argument_list pos:line="2647" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="2647" pos:column="72">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2647" pos:column="76">
							<expr_stmt><expr><name pos:line="2648" pos:column="57">isHiLieAll</name> <op:operator pos:line="2648" pos:column="68">=</op:operator> <lit:literal type="boolean" pos:line="2648" pos:column="70">false</lit:literal></expr>;</expr_stmt></then></if>
						<expr_stmt><expr><call><name pos:line="2649" pos:column="49">markSelectedTextInc</name><argument_list pos:line="2649" pos:column="68">(<argument><expr><name pos:line="2649" pos:column="69">isHiLieAll</name></expr></argument>, <argument><expr><op:operator pos:line="2649" pos:column="81">&amp;</op:operator><name pos:line="2649" pos:column="82">fo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block>
				<return pos:line="2651" pos:column="33">return <expr><name pos:line="2651" pos:column="40">TRUE</name></expr>;</return>
			</case>}</block></switch>
		}</block>

		</case><case pos:line="2655" pos:column="17">case <expr><name pos:line="2655" pos:column="22">WM_ERASEBKGND</name></expr>:
		<block pos:line="2656" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2657" pos:column="25">HWND</name></type> <name pos:line="2657" pos:column="30">hParent</name> <init pos:line="2657" pos:column="38">= <expr><call><name><op:operator pos:line="2657" pos:column="40">::</op:operator><name pos:line="2657" pos:column="42">GetParent</name></name><argument_list pos:line="2657" pos:column="51">(<argument><expr><name pos:line="2657" pos:column="52">_hSelf</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2658" pos:column="25">HDC</name></type> <name pos:line="2658" pos:column="29">winDC</name> <init pos:line="2658" pos:column="35">= <expr><op:operator pos:line="2658" pos:column="37">(</op:operator><name pos:line="2658" pos:column="38">HDC</name><op:operator pos:line="2658" pos:column="41">)</op:operator><name pos:line="2658" pos:column="42">wParam</name></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="2659" pos:column="25">//RTL handling</comment>
			<decl_stmt><decl><type><name pos:line="2660" pos:column="25">POINT</name></type> <name pos:line="2660" pos:column="31">pt</name> <init pos:line="2660" pos:column="34">= <expr><block pos:line="2660" pos:column="36">{<expr><lit:literal type="number" pos:line="2660" pos:column="37">0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="2660" pos:column="40">0</lit:literal></expr>}</block></expr></init><op:operator pos:line="2660" pos:column="42">,</op:operator> <name pos:line="2660" pos:column="44">ptOrig</name> <init pos:line="2660" pos:column="51">= <expr><block pos:line="2660" pos:column="53">{<expr><lit:literal type="number" pos:line="2660" pos:column="54">0</lit:literal></expr>, <expr><lit:literal type="number" pos:line="2660" pos:column="57">0</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2661" pos:column="25">::</op:operator><name pos:line="2661" pos:column="27">MapWindowPoints</name></name><argument_list pos:line="2661" pos:column="42">(<argument><expr><name pos:line="2661" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2661" pos:column="51">hParent</name></expr></argument>, <argument><expr><op:operator pos:line="2661" pos:column="60">&amp;</op:operator><name pos:line="2661" pos:column="61">pt</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2661" pos:column="65">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2662" pos:column="25">::</op:operator><name pos:line="2662" pos:column="27">OffsetWindowOrgEx</name></name><argument_list pos:line="2662" pos:column="44">(<argument><expr><op:operator pos:line="2662" pos:column="45">(</op:operator><name pos:line="2662" pos:column="46">HDC</name><op:operator pos:line="2662" pos:column="49">)</op:operator><name pos:line="2662" pos:column="50">wParam</name></expr></argument>, <argument><expr><name><name pos:line="2662" pos:column="58">pt</name><op:operator pos:line="2662" pos:column="60">.</op:operator><name pos:line="2662" pos:column="61">x</name></name></expr></argument>, <argument><expr><name><name pos:line="2662" pos:column="64">pt</name><op:operator pos:line="2662" pos:column="66">.</op:operator><name pos:line="2662" pos:column="67">y</name></name></expr></argument>, <argument><expr><op:operator pos:line="2662" pos:column="70">&amp;</op:operator><name pos:line="2662" pos:column="71">ptOrig</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2663" pos:column="25">LRESULT</name></type> <name pos:line="2663" pos:column="33">lResult</name> <init pos:line="2663" pos:column="41">= <expr><call><name pos:line="2663" pos:column="43">SendMessage</name><argument_list pos:line="2663" pos:column="54">(<argument><expr><name pos:line="2663" pos:column="55">hParent</name></expr></argument>, <argument><expr><name pos:line="2663" pos:column="64">WM_ERASEBKGND</name></expr></argument>,<argument><expr><op:operator pos:line="2663" pos:column="78">(</op:operator><name pos:line="2663" pos:column="79">WPARAM</name><op:operator pos:line="2663" pos:column="85">)</op:operator><name pos:line="2663" pos:column="86">winDC</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2663" pos:column="93">0</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2664" pos:column="25">::</op:operator><name pos:line="2664" pos:column="27">SetWindowOrgEx</name></name><argument_list pos:line="2664" pos:column="41">(<argument><expr><name pos:line="2664" pos:column="42">winDC</name></expr></argument>, <argument><expr><name><name pos:line="2664" pos:column="49">ptOrig</name><op:operator pos:line="2664" pos:column="55">.</op:operator><name pos:line="2664" pos:column="56">x</name></name></expr></argument>, <argument><expr><name><name pos:line="2664" pos:column="59">ptOrig</name><op:operator pos:line="2664" pos:column="65">.</op:operator><name pos:line="2664" pos:column="66">y</name></name></expr></argument>, <argument><expr><name pos:line="2664" pos:column="69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="2665" pos:column="25">return <expr><op:operator pos:line="2665" pos:column="32">(</op:operator><name pos:line="2665" pos:column="33">BOOL</name><op:operator pos:line="2665" pos:column="37">)</op:operator><name pos:line="2665" pos:column="38">lResult</name></expr>;</return>
			<break pos:line="2666" pos:column="25">break;</break> 
		}</block>

		</case><case pos:line="2669" pos:column="17">case <expr><name pos:line="2669" pos:column="22">WM_MOVE</name></expr>:
		<block pos:line="2670" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="2671" pos:column="25">::</op:operator><name pos:line="2671" pos:column="27">InvalidateRect</name></name><argument_list pos:line="2671" pos:column="41">(<argument><expr><name pos:line="2671" pos:column="42">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2671" pos:column="50">NULL</name></expr></argument>, <argument><expr><name pos:line="2671" pos:column="56">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2671" pos:column="65">//when moving, force background redraw</comment>
			<return pos:line="2672" pos:column="25">return <expr><name pos:line="2672" pos:column="32">FALSE</name></expr>;</return>
			<break pos:line="2673" pos:column="25">break;</break>
		}</block>
	</case>}</block></switch>
	<return pos:line="2676" pos:column="9">return <expr><name pos:line="2676" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="2679" pos:column="1">void</name></type> <name><name pos:line="2679" pos:column="6">FindIncrementDlg</name><op:operator pos:line="2679" pos:column="22">::</op:operator><name pos:line="2679" pos:column="24">markSelectedTextInc</name></name><parameter_list pos:line="2679" pos:column="43">(<param><decl><type><name pos:line="2679" pos:column="44">bool</name></type> <name pos:line="2679" pos:column="49">enable</name></decl></param>, <param><decl><type><name pos:line="2679" pos:column="57">FindOption</name> <type:modifier pos:line="2679" pos:column="68">*</type:modifier></type><name pos:line="2679" pos:column="69">opt</name></decl></param>)</parameter_list>
<block pos:line="2680" pos:column="1">{
	<expr_stmt><expr><op:operator pos:line="2681" pos:column="9">(</op:operator><op:operator pos:line="2681" pos:column="10">*</op:operator><op:operator pos:line="2681" pos:column="11">(</op:operator><name><name pos:line="2681" pos:column="12">_pFRDlg</name><op:operator pos:line="2681" pos:column="19">-&gt;</op:operator><name pos:line="2681" pos:column="21">_ppEditView</name></name><op:operator pos:line="2681" pos:column="32">)</op:operator><op:operator pos:line="2681" pos:column="33">)</op:operator><op:operator pos:line="2681" pos:column="34">-&gt;</op:operator><call><name pos:line="2681" pos:column="36">clearIndicator</name><argument_list pos:line="2681" pos:column="50">(<argument><expr><name pos:line="2681" pos:column="51">SCE_UNIVERSAL_FOUND_STYLE_INC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="2683" pos:column="9">if <condition pos:line="2683" pos:column="12">(<expr><op:operator pos:line="2683" pos:column="13">!</op:operator><name pos:line="2683" pos:column="14">enable</name></expr>)</condition><then pos:line="2683" pos:column="21">
		<return pos:line="2684" pos:column="17">return;</return></then></if>

	<comment type="line" pos:line="2686" pos:column="9">//Get selection</comment>
	<decl_stmt><decl><type><name pos:line="2687" pos:column="9">CharacterRange</name></type> <name pos:line="2687" pos:column="24">range</name> <init pos:line="2687" pos:column="30">= <expr><op:operator pos:line="2687" pos:column="32">(</op:operator><op:operator pos:line="2687" pos:column="33">*</op:operator><op:operator pos:line="2687" pos:column="34">(</op:operator><name><name pos:line="2687" pos:column="35">_pFRDlg</name><op:operator pos:line="2687" pos:column="42">-&gt;</op:operator><name pos:line="2687" pos:column="44">_ppEditView</name></name><op:operator pos:line="2687" pos:column="55">)</op:operator><op:operator pos:line="2687" pos:column="56">)</op:operator><op:operator pos:line="2687" pos:column="57">-&gt;</op:operator><call><name pos:line="2687" pos:column="59">getSelection</name><argument_list pos:line="2687" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2689" pos:column="9">//If nothing selected, dont mark anything</comment>
	<if pos:line="2690" pos:column="9">if <condition pos:line="2690" pos:column="12">(<expr><name><name pos:line="2690" pos:column="13">range</name><op:operator pos:line="2690" pos:column="18">.</op:operator><name pos:line="2690" pos:column="19">cpMin</name></name> <op:operator pos:line="2690" pos:column="25">==</op:operator> <name><name pos:line="2690" pos:column="28">range</name><op:operator pos:line="2690" pos:column="33">.</op:operator><name pos:line="2690" pos:column="34">cpMax</name></name></expr>)</condition><then pos:line="2690" pos:column="40">
		<return pos:line="2691" pos:column="17">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="2693" pos:column="9">TCHAR</name></type> <name><name pos:line="2693" pos:column="15">text2Find</name><index pos:line="2693" pos:column="24">[<expr><name pos:line="2693" pos:column="25">FINDREPLACE_MAXLENGTH</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><op:operator pos:line="2694" pos:column="9">(</op:operator><op:operator pos:line="2694" pos:column="10">*</op:operator><op:operator pos:line="2694" pos:column="11">(</op:operator><name><name pos:line="2694" pos:column="12">_pFRDlg</name><op:operator pos:line="2694" pos:column="19">-&gt;</op:operator><name pos:line="2694" pos:column="21">_ppEditView</name></name><op:operator pos:line="2694" pos:column="32">)</op:operator><op:operator pos:line="2694" pos:column="33">)</op:operator><op:operator pos:line="2694" pos:column="34">-&gt;</op:operator><call><name pos:line="2694" pos:column="36">getGenericSelectedText</name><argument_list pos:line="2694" pos:column="58">(<argument><expr><name pos:line="2694" pos:column="59">text2Find</name></expr></argument>, <argument><expr><name pos:line="2694" pos:column="70">FINDREPLACE_MAXLENGTH</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2694" pos:column="93">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="2694" pos:column="105">//do not expand selection (false)</comment>
	<expr_stmt><expr><name><name pos:line="2695" pos:column="9">opt</name><op:operator pos:line="2695" pos:column="12">-&gt;</op:operator><name pos:line="2695" pos:column="14">_str2Search</name></name> <op:operator pos:line="2695" pos:column="26">=</op:operator> <name pos:line="2695" pos:column="28">text2Find</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2696" pos:column="9">_pFRDlg</name><op:operator pos:line="2696" pos:column="16">-&gt;</op:operator><name pos:line="2696" pos:column="18">markAllInc</name></name><argument_list pos:line="2696" pos:column="28">(<argument><expr><name pos:line="2696" pos:column="29">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2699" pos:column="1">void</name></type> <name><name pos:line="2699" pos:column="6">FindIncrementDlg</name><op:operator pos:line="2699" pos:column="22">::</op:operator><name pos:line="2699" pos:column="24">setFindStatus</name></name><parameter_list pos:line="2699" pos:column="37">(<param><decl><type><name pos:line="2699" pos:column="38">FindStatus</name></type> <name pos:line="2699" pos:column="49">iStatus</name></decl></param>)</parameter_list> 
<block pos:line="2700" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="2701" pos:column="9">static</specifier> <name pos:line="2701" pos:column="16">TCHAR</name> <type:modifier pos:line="2701" pos:column="22">*</type:modifier></type><name><name pos:line="2701" pos:column="23">findStatus</name><index pos:line="2701" pos:column="33">[]</index></name> <init pos:line="2701" pos:column="36">= <expr><block pos:line="2701" pos:column="38">{ <expr><call><name pos:line="2701" pos:column="40">TEXT</name><argument_list pos:line="2701" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="2701" pos:column="45">""</lit:literal></expr></argument>)</argument_list></call></expr>, <comment type="line" pos:line="2701" pos:column="50">// FSFound</comment>
	                               <expr><call><name pos:line="2702" pos:column="40">TEXT</name><argument_list pos:line="2702" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="2702" pos:column="45">"Phrase not found"</lit:literal></expr></argument>)</argument_list></call></expr>, <comment type="line" pos:line="2702" pos:column="66">//FSNotFound</comment>
	                               <expr><call><name pos:line="2703" pos:column="40">TEXT</name><argument_list pos:line="2703" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="2703" pos:column="45">"Reached top of page, continued from bottom"</lit:literal></expr></argument>)</argument_list></call></expr>, <comment type="line" pos:line="2703" pos:column="92">// FSTopReached</comment>
	                               <macro><name pos:line="2704" pos:column="40">TEXT</name><argument_list pos:line="2704" pos:column="44">(<argument pos:line="2704" pos:column="45">"Reached end of page, continued from top"</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="2704" pos:column="90">// FSEndReached</comment>
	<if pos:line="2705" pos:column="9">if <condition pos:line="2705" pos:column="12">(<expr><name><name pos:line="2705" pos:column="13">iStatus</name><argument_list pos:line="2705" pos:column="20">&lt;<argument><expr><lit:literal type="number" pos:line="2705" pos:column="21">0</lit:literal> <op:operator pos:line="2705" pos:column="23">||</op:operator> <name pos:line="2705" pos:column="26">iStatus</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="2705" pos:column="35">=</op:operator> <sizeof pos:line="2705" pos:column="37">sizeof<argument_list pos:line="2705" pos:column="43">(<argument><expr><name pos:line="2705" pos:column="44">findStatus</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="2705" pos:column="55">/</op:operator><sizeof pos:line="2705" pos:column="56">sizeof<argument_list pos:line="2705" pos:column="62">(<argument><expr><name><name pos:line="2705" pos:column="63">findStatus</name><index pos:line="2705" pos:column="73">[<expr><lit:literal type="number" pos:line="2705" pos:column="74">0</lit:literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr>)</condition><then pos:line="2705" pos:column="78">
		<return pos:line="2706" pos:column="17">return;</return></then></if> <comment type="line" pos:line="2706" pos:column="25">// out of range</comment>

	<expr_stmt><expr><name pos:line="2708" pos:column="9">_FindStatus</name> <op:operator pos:line="2708" pos:column="21">=</op:operator> <name pos:line="2708" pos:column="23">iStatus</name></expr>;</expr_stmt>

	<comment type="line" pos:line="2710" pos:column="9">// get the HWND of the editor</comment>
	<decl_stmt><decl><type><name pos:line="2711" pos:column="9">HWND</name></type> <name pos:line="2711" pos:column="14">hEditor</name> <init pos:line="2711" pos:column="22">= <expr><call><name><op:operator pos:line="2711" pos:column="24">::</op:operator><name pos:line="2711" pos:column="26">GetDlgItem</name></name><argument_list pos:line="2711" pos:column="36">(<argument><expr><name pos:line="2711" pos:column="37">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2711" pos:column="45">IDC_INCFINDTEXT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<comment type="line" pos:line="2713" pos:column="9">// invalidate the editor rect</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="2714" pos:column="9">::</op:operator><name pos:line="2714" pos:column="11">InvalidateRect</name></name><argument_list pos:line="2714" pos:column="25">(<argument><expr><name pos:line="2714" pos:column="26">hEditor</name></expr></argument>, <argument><expr><name pos:line="2714" pos:column="35">NULL</name></expr></argument>, <argument><expr><name pos:line="2714" pos:column="41">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="2715" pos:column="9">::</op:operator><name pos:line="2715" pos:column="11">SendDlgItemMessage</name></name><argument_list pos:line="2715" pos:column="29">(<argument><expr><name pos:line="2715" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name pos:line="2715" pos:column="38">IDC_INCFINDSTATUS</name></expr></argument>, <argument><expr><name pos:line="2715" pos:column="57">WM_SETTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2715" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="2715" pos:column="72">(</op:operator><name pos:line="2715" pos:column="73">LPARAM</name><op:operator pos:line="2715" pos:column="79">)</op:operator><name><name pos:line="2715" pos:column="80">findStatus</name><index pos:line="2715" pos:column="90">[<expr><name pos:line="2715" pos:column="91">iStatus</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="2718" pos:column="1">void</name></type> <name><name pos:line="2718" pos:column="6">FindIncrementDlg</name><op:operator pos:line="2718" pos:column="22">::</op:operator><name pos:line="2718" pos:column="24">addToRebar</name></name><parameter_list pos:line="2718" pos:column="34">(<param><decl><type><name pos:line="2718" pos:column="35">ReBar</name> <type:modifier pos:line="2718" pos:column="41">*</type:modifier></type> <name pos:line="2718" pos:column="43">rebar</name></decl></param>)</parameter_list> 
<block pos:line="2719" pos:column="1">{
	<if pos:line="2720" pos:column="9">if<condition pos:line="2720" pos:column="11">(<expr><name pos:line="2720" pos:column="12">_pRebar</name></expr>)</condition><then pos:line="2720" pos:column="20">
		<return pos:line="2721" pos:column="17">return;</return></then></if>

	<expr_stmt><expr><name pos:line="2723" pos:column="9">_pRebar</name> <op:operator pos:line="2723" pos:column="17">=</op:operator> <name pos:line="2723" pos:column="19">rebar</name></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="2724" pos:column="9">RECT</name></type> <name pos:line="2724" pos:column="14">client</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="2725" pos:column="9">getClientRect</name><argument_list pos:line="2725" pos:column="22">(<argument><expr><name pos:line="2725" pos:column="23">client</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name pos:line="2727" pos:column="9">ZeroMemory</name><argument_list pos:line="2727" pos:column="19">(<argument><expr><op:operator pos:line="2727" pos:column="20">&amp;</op:operator><name pos:line="2727" pos:column="21">_rbBand</name></expr></argument>, <argument><expr><name pos:line="2727" pos:column="30">REBARBAND_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2728" pos:column="9">_rbBand</name><op:operator pos:line="2728" pos:column="16">.</op:operator><name pos:line="2728" pos:column="17">cbSize</name></name>  <op:operator pos:line="2728" pos:column="25">=</op:operator> <name pos:line="2728" pos:column="27">REBARBAND_SIZE</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="2730" pos:column="9">_rbBand</name><op:operator pos:line="2730" pos:column="16">.</op:operator><name pos:line="2730" pos:column="17">fMask</name></name>   <op:operator pos:line="2730" pos:column="25">=</op:operator> <name pos:line="2730" pos:column="27">RBBIM_STYLE</name> <op:operator pos:line="2730" pos:column="39">|</op:operator> <name pos:line="2730" pos:column="41">RBBIM_CHILD</name> <op:operator pos:line="2730" pos:column="53">|</op:operator> <name pos:line="2730" pos:column="55">RBBIM_CHILDSIZE</name> <op:operator pos:line="2730" pos:column="71">|</op:operator>
					  <name pos:line="2731" pos:column="43">RBBIM_SIZE</name> <op:operator pos:line="2731" pos:column="54">|</op:operator> <name pos:line="2731" pos:column="56">RBBIM_ID</name></expr>;</expr_stmt>

	<expr_stmt><expr><name><name pos:line="2733" pos:column="9">_rbBand</name><op:operator pos:line="2733" pos:column="16">.</op:operator><name pos:line="2733" pos:column="17">fStyle</name></name>		<op:operator pos:line="2733" pos:column="33">=</op:operator> <name pos:line="2733" pos:column="35">RBBS_HIDDEN</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2734" pos:column="9">_rbBand</name><op:operator pos:line="2734" pos:column="16">.</op:operator><name pos:line="2734" pos:column="17">hwndChild</name></name>	<op:operator pos:line="2734" pos:column="33">=</op:operator> <call><name pos:line="2734" pos:column="35">getHSelf</name><argument_list pos:line="2734" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2735" pos:column="9">_rbBand</name><op:operator pos:line="2735" pos:column="16">.</op:operator><name pos:line="2735" pos:column="17">wID</name></name>			<op:operator pos:line="2735" pos:column="41">=</op:operator> <name pos:line="2735" pos:column="43">REBAR_BAR_SEARCH</name></expr>;</expr_stmt>	<comment type="line" pos:line="2735" pos:column="65">//ID REBAR_BAR_SEARCH for search dialog</comment>
	<expr_stmt><expr><name><name pos:line="2736" pos:column="9">_rbBand</name><op:operator pos:line="2736" pos:column="16">.</op:operator><name pos:line="2736" pos:column="17">cxMinChild</name></name>	<op:operator pos:line="2736" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="2736" pos:column="35">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2737" pos:column="9">_rbBand</name><op:operator pos:line="2737" pos:column="16">.</op:operator><name pos:line="2737" pos:column="17">cyIntegral</name></name>	<op:operator pos:line="2737" pos:column="33">=</op:operator> <lit:literal type="number" pos:line="2737" pos:column="35">1</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2738" pos:column="9">_rbBand</name><op:operator pos:line="2738" pos:column="16">.</op:operator><name pos:line="2738" pos:column="17">cyMinChild</name></name>	<op:operator pos:line="2738" pos:column="33">=</op:operator> <name><name pos:line="2738" pos:column="35">_rbBand</name><op:operator pos:line="2738" pos:column="42">.</op:operator><name pos:line="2738" pos:column="43">cyMaxChild</name></name>	<op:operator pos:line="2738" pos:column="57">=</op:operator> <name><name pos:line="2738" pos:column="59">client</name><op:operator pos:line="2738" pos:column="65">.</op:operator><name pos:line="2738" pos:column="66">bottom</name></name><op:operator pos:line="2738" pos:column="72">-</op:operator><name><name pos:line="2738" pos:column="73">client</name><op:operator pos:line="2738" pos:column="79">.</op:operator><name pos:line="2738" pos:column="80">top</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="2739" pos:column="9">_rbBand</name><op:operator pos:line="2739" pos:column="16">.</op:operator><name pos:line="2739" pos:column="17">cxIdeal</name></name>		<op:operator pos:line="2739" pos:column="33">=</op:operator> <name><name pos:line="2739" pos:column="35">_rbBand</name><op:operator pos:line="2739" pos:column="42">.</op:operator><name pos:line="2739" pos:column="43">cx</name></name>			<op:operator pos:line="2739" pos:column="65">=</op:operator> <name><name pos:line="2739" pos:column="67">client</name><op:operator pos:line="2739" pos:column="73">.</op:operator><name pos:line="2739" pos:column="74">right</name></name><op:operator pos:line="2739" pos:column="79">-</op:operator><name><name pos:line="2739" pos:column="80">client</name><op:operator pos:line="2739" pos:column="86">.</op:operator><name pos:line="2739" pos:column="87">left</name></name></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="2741" pos:column="9">_pRebar</name><op:operator pos:line="2741" pos:column="16">-&gt;</op:operator><name pos:line="2741" pos:column="18">addBand</name></name><argument_list pos:line="2741" pos:column="25">(<argument><expr><op:operator pos:line="2741" pos:column="26">&amp;</op:operator><name pos:line="2741" pos:column="27">_rbBand</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="2741" pos:column="36">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="2742" pos:column="9">_pRebar</name><op:operator pos:line="2742" pos:column="16">-&gt;</op:operator><name pos:line="2742" pos:column="18">setGrayBackground</name></name><argument_list pos:line="2742" pos:column="35">(<argument><expr><name><name pos:line="2742" pos:column="36">_rbBand</name><op:operator pos:line="2742" pos:column="43">.</op:operator><name pos:line="2742" pos:column="44">wID</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
