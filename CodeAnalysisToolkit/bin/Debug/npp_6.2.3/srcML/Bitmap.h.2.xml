<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\tools\NppShell\src\Bitmap.h" pos:tabs="8"><cpp:include pos:line="1" pos:column="1">#<cpp:directive pos:line="1" pos:column="2">include</cpp:directive> <cpp:file pos:line="1" pos:column="10">&lt;windows.h&gt;</cpp:file></cpp:include>
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include</cpp:directive> <cpp:file pos:line="2" pos:column="10">&lt;uxtheme.h&gt;</cpp:file></cpp:include>

<cpp:ifndef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifndef</cpp:directive> <name pos:line="4" pos:column="9">BPPF_ERASE</name></cpp:ifndef>
<cpp:define pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="5" pos:column="9">BPPF_ERASE</name></cpp:macro> <cpp:value pos:line="5" pos:column="20">1</cpp:value></cpp:define>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif</cpp:directive></cpp:endif>

<typedef pos:line="8" pos:column="1">typedef <type><name pos:line="8" pos:column="9">DWORD</name></type> <name pos:line="8" pos:column="15">ARGB</name>;</typedef>
<typedef pos:line="9" pos:column="1">typedef <function_decl><type><name pos:line="9" pos:column="9">HRESULT</name></type> (<name pos:line="9" pos:column="18">WINAPI</name> <type:modifier pos:line="9" pos:column="25">*</type:modifier><name pos:line="9" pos:column="26">FN_GetBufferedPaintBits</name>) <parameter_list pos:line="9" pos:column="51">(<param><decl><type><name pos:line="9" pos:column="52">HPAINTBUFFER</name></type> <name pos:line="9" pos:column="65">hBufferedPaint</name></decl></param>, <param><decl><type><name pos:line="9" pos:column="81">RGBQUAD</name> <type:modifier pos:line="9" pos:column="89">*</type:modifier><type:modifier pos:line="9" pos:column="90">*</type:modifier></type><name pos:line="9" pos:column="91">ppbBuffer</name></decl></param>, <param><decl><type><name pos:line="9" pos:column="102">int</name> <type:modifier pos:line="9" pos:column="106">*</type:modifier></type><name pos:line="9" pos:column="107">pcxRow</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="10" pos:column="1">typedef <function_decl><type><name pos:line="10" pos:column="9">HPAINTBUFFER</name></type> (<name pos:line="10" pos:column="23">WINAPI</name> <type:modifier pos:line="10" pos:column="30">*</type:modifier><name pos:line="10" pos:column="31">FN_BeginBufferedPaint</name>) <parameter_list pos:line="10" pos:column="54">(<param><decl><type><name pos:line="10" pos:column="55">HDC</name></type> <name pos:line="10" pos:column="59">hdcTarget</name></decl></param>, <param><decl><type><specifier pos:line="10" pos:column="70">const</specifier> <name pos:line="10" pos:column="76">RECT</name> <type:modifier pos:line="10" pos:column="81">*</type:modifier></type><name pos:line="10" pos:column="82">prcTarget</name></decl></param>, <param><decl><type><name pos:line="10" pos:column="93">BP_BUFFERFORMAT</name></type> <name pos:line="10" pos:column="109">dwFormat</name></decl></param>, <param><decl><type><name pos:line="10" pos:column="119">BP_PAINTPARAMS</name> <type:modifier pos:line="10" pos:column="134">*</type:modifier></type><name pos:line="10" pos:column="135">pPaintParams</name></decl></param>, <param><decl><type><name pos:line="10" pos:column="149">HDC</name> <type:modifier pos:line="10" pos:column="153">*</type:modifier></type><name pos:line="10" pos:column="154">phdc</name></decl></param>)</parameter_list>;</function_decl></typedef>
<typedef pos:line="11" pos:column="1">typedef <function_decl><type><name pos:line="11" pos:column="9">HRESULT</name></type> (<name pos:line="11" pos:column="18">WINAPI</name> <type:modifier pos:line="11" pos:column="25">*</type:modifier><name pos:line="11" pos:column="26">FN_EndBufferedPaint</name>) <parameter_list pos:line="11" pos:column="47">(<param><decl><type><name pos:line="11" pos:column="48">HPAINTBUFFER</name></type> <name pos:line="11" pos:column="61">hBufferedPaint</name></decl></param>, <param><decl><type><name pos:line="11" pos:column="77">BOOL</name></type> <name pos:line="11" pos:column="82">fUpdateTarget</name></decl></param>)</parameter_list>;</function_decl></typedef>

<function_decl><type><name pos:line="13" pos:column="1">bool</name></type> <name pos:line="13" pos:column="6">InitTheming</name><parameter_list pos:line="13" pos:column="17">()</parameter_list>;</function_decl>
<function_decl><type><name pos:line="14" pos:column="1">bool</name></type> <name pos:line="14" pos:column="6">DeinitTheming</name><parameter_list pos:line="14" pos:column="19">()</parameter_list>;</function_decl>

<function_decl><type><name pos:line="16" pos:column="1">void</name></type> <name pos:line="16" pos:column="6">InitBitmapInfo</name><parameter_list pos:line="16" pos:column="20">(<param><decl><type><name pos:line="16" pos:column="21">BITMAPINFO</name> <type:modifier pos:line="16" pos:column="32">*</type:modifier></type><name pos:line="16" pos:column="33">pbmi</name></decl></param>, <param><decl><type><name pos:line="16" pos:column="39">ULONG</name></type> <name pos:line="16" pos:column="45">cbInfo</name></decl></param>, <param><decl><type><name pos:line="16" pos:column="53">LONG</name></type> <name pos:line="16" pos:column="58">cx</name></decl></param>, <param><decl><type><name pos:line="16" pos:column="62">LONG</name></type> <name pos:line="16" pos:column="67">cy</name></decl></param>, <param><decl><type><name pos:line="16" pos:column="71">WORD</name></type> <name pos:line="16" pos:column="76">bpp</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="17" pos:column="1">HRESULT</name></type> <name pos:line="17" pos:column="9">Create32BitHBITMAP</name><parameter_list pos:line="17" pos:column="27">(<param><decl><type><name pos:line="17" pos:column="28">HDC</name></type> <name pos:line="17" pos:column="32">hdc</name></decl></param>, <param><decl><type><specifier pos:line="17" pos:column="37">const</specifier> <name pos:line="17" pos:column="43">SIZE</name> <type:modifier pos:line="17" pos:column="48">*</type:modifier></type><name pos:line="17" pos:column="49">psize</name></decl></param>, <param><decl><type><name pos:line="17" pos:column="56">void</name> <type:modifier pos:line="17" pos:column="61">*</type:modifier><type:modifier pos:line="17" pos:column="62">*</type:modifier></type><name pos:line="17" pos:column="63">ppvBits</name></decl></param>, <param><decl><type><name pos:line="17" pos:column="72">HBITMAP</name><type:modifier pos:line="17" pos:column="79">*</type:modifier></type> <name pos:line="17" pos:column="81">phBmp</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="18" pos:column="1">HRESULT</name></type> <name pos:line="18" pos:column="9">ConvertToPARGB32</name><parameter_list pos:line="18" pos:column="25">(<param><decl><type><name pos:line="18" pos:column="26">HDC</name></type> <name pos:line="18" pos:column="30">hdc</name></decl></param>, <param><decl><type><name pos:line="18" pos:column="35">ARGB</name> <type:modifier pos:line="18" pos:column="40">*</type:modifier></type><name pos:line="18" pos:column="41">pargb</name></decl></param>, <param><decl><type><name pos:line="18" pos:column="48">HBITMAP</name></type> <name pos:line="18" pos:column="56">hbmp</name></decl></param>, <param><decl><type><name pos:line="18" pos:column="62">SIZE</name><type:modifier pos:line="18" pos:column="66">&amp;</type:modifier></type> <name pos:line="18" pos:column="68">sizImage</name></decl></param>, <param><decl><type><name pos:line="18" pos:column="78">int</name></type> <name pos:line="18" pos:column="82">cxRow</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="19" pos:column="1">bool</name></type> <name pos:line="19" pos:column="6">HasAlpha</name><parameter_list pos:line="19" pos:column="14">(<param><decl><type><name pos:line="19" pos:column="15">ARGB</name> <type:modifier pos:line="19" pos:column="20">*</type:modifier></type><name pos:line="19" pos:column="21">pargb</name></decl></param>, <param><decl><type><name pos:line="19" pos:column="28">SIZE</name><type:modifier pos:line="19" pos:column="32">&amp;</type:modifier></type> <name pos:line="19" pos:column="34">sizImage</name></decl></param>, <param><decl><type><name pos:line="19" pos:column="44">int</name></type> <name pos:line="19" pos:column="48">cxRow</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="20" pos:column="1">HRESULT</name></type> <name pos:line="20" pos:column="9">ConvertBufferToPARGB32</name><parameter_list pos:line="20" pos:column="31">(<param><decl><type><name pos:line="20" pos:column="32">HPAINTBUFFER</name></type> <name pos:line="20" pos:column="45">hPaintBuffer</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="59">HDC</name></type> <name pos:line="20" pos:column="63">hdc</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="68">HICON</name></type> <name pos:line="20" pos:column="74">hicon</name></decl></param>, <param><decl><type><name pos:line="20" pos:column="81">SIZE</name><type:modifier pos:line="20" pos:column="85">&amp;</type:modifier></type> <name pos:line="20" pos:column="87">sizIcon</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name pos:line="21" pos:column="1">HBITMAP</name></type> <name pos:line="21" pos:column="9">IconToBitmapPARGB32</name><parameter_list pos:line="21" pos:column="28">(<param><decl><type><name pos:line="21" pos:column="29">HICON</name></type> <name pos:line="21" pos:column="35">hIcon</name></decl></param>, <param><decl><type><name pos:line="21" pos:column="42">DWORD</name></type> <name pos:line="21" pos:column="48">cx</name></decl></param>, <param><decl><type><name pos:line="21" pos:column="52">DWORD</name></type> <name pos:line="21" pos:column="58">cy</name></decl></param>)</parameter_list>;</function_decl>

<typedef pos:line="23" pos:column="1">typedef <type><struct pos:line="23" pos:column="9">struct
<block pos:line="24" pos:column="1">{<public type="default" pos:line="24" pos:column="2">
   <decl_stmt><decl><type><name pos:line="25" pos:column="4">BYTE</name></type>   <name pos:line="25" pos:column="11">bWidth</name></decl>;</decl_stmt>               <comment type="line" pos:line="25" pos:column="33">// Width, in pixels, of the image</comment>
   <decl_stmt><decl><type><name pos:line="26" pos:column="4">BYTE</name></type>   <name pos:line="26" pos:column="11">bHeight</name></decl>;</decl_stmt>              <comment type="line" pos:line="26" pos:column="33">// Height, in pixels, of the image</comment>
   <decl_stmt><decl><type><name pos:line="27" pos:column="4">BYTE</name></type>   <name pos:line="27" pos:column="11">bColorCount</name></decl>;</decl_stmt>          <comment type="line" pos:line="27" pos:column="33">// Number of colors in image (0 if &gt;=8bpp)</comment>
   <decl_stmt><decl><type><name pos:line="28" pos:column="4">BYTE</name></type>   <name pos:line="28" pos:column="11">bReserved</name></decl>;</decl_stmt>            <comment type="line" pos:line="28" pos:column="33">// Reserved</comment>
   <decl_stmt><decl><type><name pos:line="29" pos:column="4">WORD</name></type>   <name pos:line="29" pos:column="11">wPlanes</name></decl>;</decl_stmt>              <comment type="line" pos:line="29" pos:column="33">// Color Planes</comment>
   <decl_stmt><decl><type><name pos:line="30" pos:column="4">WORD</name></type>   <name pos:line="30" pos:column="11">wBitCount</name></decl>;</decl_stmt>            <comment type="line" pos:line="30" pos:column="33">// Bits per pixel</comment>
   <decl_stmt><decl><type><name pos:line="31" pos:column="4">DWORD</name></type>  <name pos:line="31" pos:column="11">dwBytesInRes</name></decl>;</decl_stmt>         <comment type="line" pos:line="31" pos:column="33">// how many bytes in this resource?</comment>
   <decl_stmt><decl><type><name pos:line="32" pos:column="4">WORD</name></type>   <name pos:line="32" pos:column="11">nID</name></decl>;</decl_stmt>                  <comment type="line" pos:line="32" pos:column="33">// the ID</comment>
</public>}</block></struct></type> <name pos:line="33" pos:column="3">GRPICONDIRENTRY</name><op:operator pos:line="33" pos:column="18">,</op:operator> *<name pos:line="33" pos:column="21">LPGRPICONDIRENTRY</name>;</typedef>

<typedef pos:line="35" pos:column="1">typedef <type><struct pos:line="35" pos:column="9">struct
<block pos:line="36" pos:column="1">{<public type="default" pos:line="36" pos:column="2">
   <decl_stmt><decl><type><name pos:line="37" pos:column="4">WORD</name></type>            <name pos:line="37" pos:column="20">idReserved</name></decl>;</decl_stmt>   <comment type="line" pos:line="37" pos:column="34">// Reserved (must be 0)</comment>
   <decl_stmt><decl><type><name pos:line="38" pos:column="4">WORD</name></type>            <name pos:line="38" pos:column="20">idType</name></decl>;</decl_stmt>       <comment type="line" pos:line="38" pos:column="34">// Resource type (1 for icons)</comment>
   <decl_stmt><decl><type><name pos:line="39" pos:column="4">WORD</name></type>            <name pos:line="39" pos:column="20">idCount</name></decl>;</decl_stmt>      <comment type="line" pos:line="39" pos:column="34">// How many images?</comment>
   <decl_stmt><decl><type><name pos:line="40" pos:column="4">GRPICONDIRENTRY</name></type> <name><name pos:line="40" pos:column="20">idEntries</name><index pos:line="40" pos:column="29">[<expr><lit:literal type="number" pos:line="40" pos:column="30">1</lit:literal></expr>]</index></name></decl>;</decl_stmt> <comment type="line" pos:line="40" pos:column="34">// The entries for each image</comment>
</public>}</block></struct></type> <name pos:line="41" pos:column="3">GRPICONDIR</name><op:operator pos:line="41" pos:column="13">,</op:operator> *<name pos:line="41" pos:column="16">LPGRPICONDIR</name>;</typedef>



<function_decl><type><name pos:line="45" pos:column="1">HICON</name></type> <name pos:line="45" pos:column="7">LoadIconEx</name><parameter_list pos:line="45" pos:column="17">(<param><decl><type><name pos:line="45" pos:column="18">HINSTANCE</name></type> <name pos:line="45" pos:column="28">hInst</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="35">LPCTSTR</name></type> <name pos:line="45" pos:column="43">lpszName</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="53">int</name></type> <name pos:line="45" pos:column="57">cz</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="61">int</name></type> <name pos:line="45" pos:column="65">cy</name></decl></param>, <param><decl><type><name pos:line="45" pos:column="69">int</name></type> <name pos:line="45" pos:column="73">depth</name></decl></param>)</parameter_list>;</function_decl>
</unit>
