<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\TaskList\TaskListDlg.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"TaskListDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"Parameters.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"resource.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="34" pos:column="1">LRESULT</name> <name pos:line="34" pos:column="9">CALLBACK</name></type> <name pos:line="34" pos:column="18">hookProc</name><parameter_list pos:line="34" pos:column="26">(<param><decl><type><name pos:line="34" pos:column="27">UINT</name></type> <name pos:line="34" pos:column="32">nCode</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="39">WPARAM</name></type> <name pos:line="34" pos:column="46">wParam</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="54">LPARAM</name></type> <name pos:line="34" pos:column="61">lParam</name></decl></param>)</parameter_list>
<block pos:line="35" pos:column="1">{
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><op:operator pos:line="36" pos:column="13">(</op:operator><name pos:line="36" pos:column="14">nCode</name> <op:operator pos:line="36" pos:column="20">&gt;=</op:operator> <lit:literal type="number" pos:line="36" pos:column="23">0</lit:literal><op:operator pos:line="36" pos:column="24">)</op:operator> <op:operator pos:line="36" pos:column="26">&amp;&amp;</op:operator> <op:operator pos:line="36" pos:column="29">(</op:operator><name pos:line="36" pos:column="30">wParam</name> <op:operator pos:line="36" pos:column="37">==</op:operator> <name pos:line="36" pos:column="40">WM_RBUTTONUP</name><op:operator pos:line="36" pos:column="52">)</op:operator></expr>)</condition><then pos:line="36" pos:column="54">
    <block pos:line="37" pos:column="5">{
		<expr_stmt><expr><call><name><op:operator pos:line="38" pos:column="17">::</op:operator><name pos:line="38" pos:column="19">PostMessage</name></name><argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">hWndServer</name></expr></argument>, <argument><expr><name pos:line="38" pos:column="43">WM_RBUTTONUP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="38" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="38" pos:column="60">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>        
	
	<return pos:line="41" pos:column="9">return <expr><call><name><op:operator pos:line="41" pos:column="16">::</op:operator><name pos:line="41" pos:column="18">CallNextHookEx</name></name><argument_list pos:line="41" pos:column="32">(<argument><expr><name pos:line="41" pos:column="33">hook</name></expr></argument>, <argument><expr><name pos:line="41" pos:column="39">nCode</name></expr></argument>, <argument><expr><name pos:line="41" pos:column="46">wParam</name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">lParam</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

 <function><type><name pos:line="44" pos:column="2">int</name></type> <name><name pos:line="44" pos:column="6">TaskListDlg</name><op:operator pos:line="44" pos:column="17">::</op:operator><name pos:line="44" pos:column="19">doDialog</name></name><parameter_list pos:line="44" pos:column="27">(<param><decl><type><name pos:line="44" pos:column="28">bool</name></type> <name pos:line="44" pos:column="33">isRTL</name></decl></param>)</parameter_list> 
 <block pos:line="45" pos:column="2">{
	<if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">isRTL</name></expr>)</condition><then pos:line="46" pos:column="19">
	<block pos:line="47" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="48" pos:column="17">DLGTEMPLATE</name> <type:modifier pos:line="48" pos:column="29">*</type:modifier></type><name pos:line="48" pos:column="30">pMyDlgTemplate</name> <init pos:line="48" pos:column="45">= <expr><name pos:line="48" pos:column="47">NULL</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="49" pos:column="17">HGLOBAL</name></type> <name pos:line="49" pos:column="25">hMyDlgTemplate</name> <init pos:line="49" pos:column="40">= <expr><call><name pos:line="49" pos:column="42">makeRTLResource</name><argument_list pos:line="49" pos:column="57">(<argument><expr><name pos:line="49" pos:column="58">IDD_VALUE_DLG</name></expr></argument>, <argument><expr><op:operator pos:line="49" pos:column="73">&amp;</op:operator><name pos:line="49" pos:column="74">pMyDlgTemplate</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="50" pos:column="17">int</name></type> <name pos:line="50" pos:column="21">result</name> <init pos:line="50" pos:column="28">= <expr><call><name><op:operator pos:line="50" pos:column="30">::</op:operator><name pos:line="50" pos:column="32">DialogBoxIndirectParam</name></name><argument_list pos:line="50" pos:column="54">(<argument><expr><name pos:line="50" pos:column="55">_hInst</name></expr></argument>, <argument><expr><name pos:line="50" pos:column="63">pMyDlgTemplate</name></expr></argument>, <argument><expr><name pos:line="50" pos:column="79">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="50" pos:column="90">(</op:operator><name pos:line="50" pos:column="91">DLGPROC</name><op:operator pos:line="50" pos:column="98">)</op:operator><name pos:line="50" pos:column="99">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="50" pos:column="108">(</op:operator><name pos:line="50" pos:column="109">LPARAM</name><op:operator pos:line="50" pos:column="115">)</op:operator><name pos:line="50" pos:column="116">this</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="51" pos:column="17">::</op:operator><name pos:line="51" pos:column="19">GlobalFree</name></name><argument_list pos:line="51" pos:column="29">(<argument><expr><name pos:line="51" pos:column="30">hMyDlgTemplate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="52" pos:column="17">return <expr><name pos:line="52" pos:column="24">result</name></expr>;</return>
	}</block></then></if>
	<return pos:line="54" pos:column="9">return <expr><call><name><op:operator pos:line="54" pos:column="16">::</op:operator><name pos:line="54" pos:column="18">DialogBoxParam</name></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name pos:line="54" pos:column="33">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="41">MAKEINTRESOURCE</name><argument_list pos:line="54" pos:column="56">(<argument><expr><name pos:line="54" pos:column="57">IDD_TASKLIST_DLG</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="54" pos:column="76">_hParent</name></expr></argument>,  <argument><expr><op:operator pos:line="54" pos:column="87">(</op:operator><name pos:line="54" pos:column="88">DLGPROC</name><op:operator pos:line="54" pos:column="95">)</op:operator><name pos:line="54" pos:column="96">dlgProc</name></expr></argument>, <argument><expr><op:operator pos:line="54" pos:column="105">(</op:operator><name pos:line="54" pos:column="106">LPARAM</name><op:operator pos:line="54" pos:column="112">)</op:operator><name pos:line="54" pos:column="113">this</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="57" pos:column="1">BOOL</name> <name pos:line="57" pos:column="6">CALLBACK</name></type> <name><name pos:line="57" pos:column="15">TaskListDlg</name><op:operator pos:line="57" pos:column="26">::</op:operator><name pos:line="57" pos:column="28">run_dlgProc</name></name><parameter_list pos:line="57" pos:column="39">(<param><decl><type><name pos:line="57" pos:column="40">UINT</name></type> <name pos:line="57" pos:column="45">Message</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="54">WPARAM</name></type> <name pos:line="57" pos:column="61">wParam</name></decl></param>, <param><decl><type><name pos:line="57" pos:column="69">LPARAM</name></type> <name pos:line="57" pos:column="76">lParam</name></decl></param>)</parameter_list>
<block pos:line="58" pos:column="1">{
	<switch pos:line="59" pos:column="9">switch <condition pos:line="59" pos:column="16">(<expr><name pos:line="59" pos:column="17">Message</name></expr>)</condition>
	<block pos:line="60" pos:column="9">{
		<case pos:line="61" pos:column="17">case <expr><name pos:line="61" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="62" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="63" pos:column="25">::</op:operator><name pos:line="63" pos:column="27">SendMessage</name></name><argument_list pos:line="63" pos:column="38">(<argument><expr><name pos:line="63" pos:column="39">_hParent</name></expr></argument>, <argument><expr><name pos:line="63" pos:column="49">WM_GETTASKLISTINFO</name></expr></argument>, <argument><expr><op:operator pos:line="63" pos:column="69">(</op:operator><name pos:line="63" pos:column="70">WPARAM</name><op:operator pos:line="63" pos:column="76">)</op:operator><op:operator pos:line="63" pos:column="77">&amp;</op:operator><name pos:line="63" pos:column="78">_taskListInfo</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="63" pos:column="93">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="64" pos:column="25">int</name></type> <name pos:line="64" pos:column="29">nbTotal</name> <init pos:line="64" pos:column="37">= <expr><call><name><name pos:line="64" pos:column="39">_taskListInfo</name><op:operator pos:line="64" pos:column="52">.</op:operator><name pos:line="64" pos:column="53">_tlfsLst</name><op:operator pos:line="64" pos:column="61">.</op:operator><name pos:line="64" pos:column="62">size</name></name><argument_list pos:line="64" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="66" pos:column="25">int</name></type> <name pos:line="66" pos:column="29">i2set</name> <init pos:line="66" pos:column="35">= <expr><name><name pos:line="66" pos:column="37">_taskListInfo</name><op:operator pos:line="66" pos:column="50">.</op:operator><name pos:line="66" pos:column="51">_currentIndex</name></name> <op:operator pos:line="66" pos:column="65">+</op:operator> <op:operator pos:line="66" pos:column="67">(</op:operator><name pos:line="66" pos:column="68">_initDir</name> <op:operator pos:line="66" pos:column="77">==</op:operator> <name pos:line="66" pos:column="80">dirDown</name><op:operator pos:line="66" pos:column="87">?</op:operator><lit:literal type="number" pos:line="66" pos:column="88">1</lit:literal><op:operator pos:line="66" pos:column="89">:</op:operator><op:operator pos:line="66" pos:column="90">-</op:operator><lit:literal type="number" pos:line="66" pos:column="91">1</lit:literal><op:operator pos:line="66" pos:column="92">)</op:operator></expr></init></decl>;</decl_stmt>
			
			<if pos:line="68" pos:column="25">if <condition pos:line="68" pos:column="28">(<expr><name pos:line="68" pos:column="29">i2set</name> <op:operator pos:line="68" pos:column="35">&lt;</op:operator> <lit:literal type="number" pos:line="68" pos:column="37">0</lit:literal></expr>)</condition><then pos:line="68" pos:column="39">
				<expr_stmt><expr><name pos:line="69" pos:column="33">i2set</name> <op:operator pos:line="69" pos:column="39">=</op:operator> <name pos:line="69" pos:column="41">nbTotal</name> <op:operator pos:line="69" pos:column="49">-</op:operator> <lit:literal type="number" pos:line="69" pos:column="51">1</lit:literal></expr>;</expr_stmt></then></if>

			<if pos:line="71" pos:column="25">if <condition pos:line="71" pos:column="28">(<expr><name pos:line="71" pos:column="29">i2set</name> <op:operator pos:line="71" pos:column="35">&gt;</op:operator> <op:operator pos:line="71" pos:column="37">(</op:operator><name pos:line="71" pos:column="38">nbTotal</name> <op:operator pos:line="71" pos:column="46">-</op:operator> <lit:literal type="number" pos:line="71" pos:column="48">1</lit:literal><op:operator pos:line="71" pos:column="49">)</op:operator></expr>)</condition><then pos:line="71" pos:column="51">
				<expr_stmt><expr><name pos:line="72" pos:column="33">i2set</name> <op:operator pos:line="72" pos:column="39">=</op:operator> <lit:literal type="number" pos:line="72" pos:column="41">0</lit:literal></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="74" pos:column="25">_taskList</name><op:operator pos:line="74" pos:column="34">.</op:operator><name pos:line="74" pos:column="35">init</name></name><argument_list pos:line="74" pos:column="39">(<argument><expr><name pos:line="74" pos:column="40">_hInst</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="48">_hSelf</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="56">_hImalist</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="67">nbTotal</name></expr></argument>, <argument><expr><name pos:line="74" pos:column="76">i2set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="75" pos:column="25">_taskList</name><op:operator pos:line="75" pos:column="34">.</op:operator><name pos:line="75" pos:column="35">setFont</name></name><argument_list pos:line="75" pos:column="42">(<argument><expr><call><name pos:line="75" pos:column="43">TEXT</name><argument_list pos:line="75" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="75" pos:column="48">"Verdana"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="75" pos:column="60">14</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="76" pos:column="25">_rc</name> <op:operator pos:line="76" pos:column="29">=</op:operator> <call><name><name pos:line="76" pos:column="31">_taskList</name><op:operator pos:line="76" pos:column="40">.</op:operator><name pos:line="76" pos:column="41">adjustSize</name></name><argument_list pos:line="76" pos:column="51">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="78" pos:column="25">reSizeTo</name><argument_list pos:line="78" pos:column="33">(<argument><expr><name pos:line="78" pos:column="34">_rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="79" pos:column="25">goToCenter</name><argument_list pos:line="79" pos:column="35">()</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="81" pos:column="25">_taskList</name><op:operator pos:line="81" pos:column="34">.</op:operator><name pos:line="81" pos:column="35">display</name></name><argument_list pos:line="81" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="81" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="82" pos:column="25">hWndServer</name> <op:operator pos:line="82" pos:column="36">=</op:operator> <name pos:line="82" pos:column="38">_hSelf</name></expr>;</expr_stmt>

<cpp:ifndef pos:line="84" pos:column="1">#<cpp:directive pos:line="84" pos:column="2">ifndef</cpp:directive> <name pos:line="84" pos:column="9">WH_MOUSE_LL</name></cpp:ifndef>
<cpp:define pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="85" pos:column="9">WH_MOUSE_LL</name></cpp:macro> <cpp:value pos:line="85" pos:column="21">14</cpp:value></cpp:define>
<cpp:endif pos:line="86" pos:column="1">#<cpp:directive pos:line="86" pos:column="2">endif</cpp:directive></cpp:endif>
			<decl_stmt><decl><type><name pos:line="87" pos:column="25">winVer</name></type> <name pos:line="87" pos:column="32">ver</name> <init pos:line="87" pos:column="36">= <expr><op:operator pos:line="87" pos:column="38">(</op:operator><call><name><name pos:line="87" pos:column="39">NppParameters</name><op:operator pos:line="87" pos:column="52">::</op:operator><name pos:line="87" pos:column="54">getInstance</name></name><argument_list pos:line="87" pos:column="65">()</argument_list></call><op:operator pos:line="87" pos:column="67">)</op:operator><op:operator pos:line="87" pos:column="68">-&gt;</op:operator><call><name pos:line="87" pos:column="70">getWinVersion</name><argument_list pos:line="87" pos:column="83">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="88" pos:column="25">_hHooker</name> <op:operator pos:line="88" pos:column="34">=</op:operator> <call><name><op:operator pos:line="88" pos:column="36">::</op:operator><name pos:line="88" pos:column="38">SetWindowsHookEx</name></name><argument_list pos:line="88" pos:column="54">(<argument><expr><name pos:line="88" pos:column="55">ver</name> <op:operator pos:line="88" pos:column="59">&gt;=</op:operator> <name pos:line="88" pos:column="62">WV_W2K</name><op:operator pos:line="88" pos:column="68">?</op:operator><name pos:line="88" pos:column="69">WH_MOUSE_LL</name><op:operator pos:line="88" pos:column="80">:</op:operator><name pos:line="88" pos:column="81">WH_MOUSE</name></expr></argument>, <argument><expr><op:operator pos:line="88" pos:column="91">(</op:operator><name pos:line="88" pos:column="92">HOOKPROC</name><op:operator pos:line="88" pos:column="100">)</op:operator><name pos:line="88" pos:column="101">hookProc</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="111">_hInst</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="88" pos:column="119">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="89" pos:column="25">hook</name> <op:operator pos:line="89" pos:column="30">=</op:operator> <name pos:line="89" pos:column="32">_hHooker</name></expr>;</expr_stmt>
			<return pos:line="90" pos:column="25">return <expr><name pos:line="90" pos:column="32">FALSE</name></expr>;</return>
		}</block>

		</case><case pos:line="93" pos:column="17">case <expr><name pos:line="93" pos:column="22">WM_DESTROY</name></expr> :
		<block pos:line="94" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="95" pos:column="25">_taskList</name><op:operator pos:line="95" pos:column="34">.</op:operator><name pos:line="95" pos:column="35">destroy</name></name><argument_list pos:line="95" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="96" pos:column="25">::</op:operator><name pos:line="96" pos:column="27">UnhookWindowsHookEx</name></name><argument_list pos:line="96" pos:column="46">(<argument><expr><name pos:line="96" pos:column="47">_hHooker</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="97" pos:column="25">return <expr><name pos:line="97" pos:column="32">TRUE</name></expr>;</return>
		}</block>


		</case><case pos:line="101" pos:column="17">case <expr><name pos:line="101" pos:column="22">WM_RBUTTONUP</name></expr>:
		<block pos:line="102" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="103" pos:column="25">::</op:operator><name pos:line="103" pos:column="27">SendMessage</name></name><argument_list pos:line="103" pos:column="38">(<argument><expr><name pos:line="103" pos:column="39">_hSelf</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="47">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="59">ID_PICKEDUP</name></expr></argument>, <argument><expr><call><name><name pos:line="103" pos:column="72">_taskList</name><op:operator pos:line="103" pos:column="81">.</op:operator><name pos:line="103" pos:column="82">getCurrentIndex</name></name><argument_list pos:line="103" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="104" pos:column="25">return <expr><name pos:line="104" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		

		</case><case pos:line="108" pos:column="17">case <expr><name pos:line="108" pos:column="22">WM_DRAWITEM</name></expr> :
		<block pos:line="109" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">drawItem</name><argument_list pos:line="110" pos:column="33">(<argument><expr><op:operator pos:line="110" pos:column="34">(</op:operator><name pos:line="110" pos:column="35">DRAWITEMSTRUCT</name> <op:operator pos:line="110" pos:column="50">*</op:operator><op:operator pos:line="110" pos:column="51">)</op:operator><name pos:line="110" pos:column="52">lParam</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<return pos:line="111" pos:column="25">return <expr><name pos:line="111" pos:column="32">TRUE</name></expr>;</return>
		}</block>

		</case><case pos:line="114" pos:column="17">case <expr><name pos:line="114" pos:column="22">WM_NOTIFY</name></expr>:
		<block pos:line="115" pos:column="17">{
			<switch pos:line="116" pos:column="25">switch <condition pos:line="116" pos:column="32">(<expr><op:operator pos:line="116" pos:column="33">(</op:operator><op:operator pos:line="116" pos:column="34">(</op:operator><name pos:line="116" pos:column="35">LPNMHDR</name><op:operator pos:line="116" pos:column="42">)</op:operator><name pos:line="116" pos:column="43">lParam</name><op:operator pos:line="116" pos:column="49">)</op:operator><op:operator pos:line="116" pos:column="50">-&gt;</op:operator><name pos:line="116" pos:column="52">code</name></expr>)</condition>
			<block pos:line="117" pos:column="25">{
				<case pos:line="118" pos:column="33">case <expr><name pos:line="118" pos:column="38">LVN_GETDISPINFO</name></expr>:
				<block pos:line="119" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="120" pos:column="41">LV_ITEM</name> <type:modifier pos:line="120" pos:column="49">&amp;</type:modifier></type><name pos:line="120" pos:column="50">lvItem</name> <init pos:line="120" pos:column="57">= <expr><call><name><name pos:line="120" pos:column="59">reinterpret_cast</name><argument_list pos:line="120" pos:column="75">&lt;<argument><expr><name pos:line="120" pos:column="76">LV_DISPINFO</name><op:operator pos:line="120" pos:column="87">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="120" pos:column="89">(<argument><expr><op:operator pos:line="120" pos:column="90">(</op:operator><name pos:line="120" pos:column="91">LV_DISPINFO</name> <name pos:line="120" pos:column="103">FAR</name> <op:operator pos:line="120" pos:column="107">*</op:operator><op:operator pos:line="120" pos:column="108">)</op:operator><name pos:line="120" pos:column="109">lParam</name></expr></argument>)</argument_list></call><op:operator pos:line="120" pos:column="116">-&gt;</op:operator><name pos:line="120" pos:column="118">item</name></expr></init></decl>;</decl_stmt>

					<decl_stmt><decl><type><name pos:line="122" pos:column="41">TaskLstFnStatus</name> <type:modifier pos:line="122" pos:column="57">&amp;</type:modifier></type> <name pos:line="122" pos:column="59">fileNameStatus</name> <init pos:line="122" pos:column="74">= <expr><name><name pos:line="122" pos:column="76">_taskListInfo</name><op:operator pos:line="122" pos:column="89">.</op:operator><name pos:line="122" pos:column="90">_tlfsLst</name><index pos:line="122" pos:column="98">[<expr><name><name pos:line="122" pos:column="99">lvItem</name><op:operator pos:line="122" pos:column="105">.</op:operator><name pos:line="122" pos:column="106">iItem</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

					<expr_stmt><expr><name><name pos:line="124" pos:column="41">lvItem</name><op:operator pos:line="124" pos:column="47">.</op:operator><name pos:line="124" pos:column="48">pszText</name></name> <op:operator pos:line="124" pos:column="56">=</op:operator> <op:operator pos:line="124" pos:column="58">(</op:operator><name pos:line="124" pos:column="59">TCHAR</name> <op:operator pos:line="124" pos:column="65">*</op:operator><op:operator pos:line="124" pos:column="66">)</op:operator><call><name><name pos:line="124" pos:column="67">fileNameStatus</name><op:operator pos:line="124" pos:column="81">.</op:operator><name pos:line="124" pos:column="82">_fn</name><op:operator pos:line="124" pos:column="85">.</op:operator><name pos:line="124" pos:column="86">c_str</name></name><argument_list pos:line="124" pos:column="91">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name><name pos:line="125" pos:column="41">lvItem</name><op:operator pos:line="125" pos:column="47">.</op:operator><name pos:line="125" pos:column="48">iImage</name></name> <op:operator pos:line="125" pos:column="55">=</op:operator> <name><name pos:line="125" pos:column="57">fileNameStatus</name><op:operator pos:line="125" pos:column="71">.</op:operator><name pos:line="125" pos:column="72">_status</name></name></expr>;</expr_stmt>

					<return pos:line="127" pos:column="41">return <expr><name pos:line="127" pos:column="48">TRUE</name></expr>;</return>
				}</block>
		
				</case><case pos:line="130" pos:column="33">case <expr><name pos:line="130" pos:column="38">NM_CLICK</name></expr> :
				</case><case pos:line="131" pos:column="33">case <expr><name pos:line="131" pos:column="38">NM_RCLICK</name></expr> :
				<block pos:line="132" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="133" pos:column="41">::</op:operator><name pos:line="133" pos:column="43">SendMessage</name></name><argument_list pos:line="133" pos:column="54">(<argument><expr><name pos:line="133" pos:column="55">_hSelf</name></expr></argument>, <argument><expr><name pos:line="133" pos:column="63">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="133" pos:column="75">ID_PICKEDUP</name></expr></argument>, <argument><expr><call><name><name pos:line="133" pos:column="88">_taskList</name><op:operator pos:line="133" pos:column="97">.</op:operator><name pos:line="133" pos:column="98">updateCurrentIndex</name></name><argument_list pos:line="133" pos:column="116">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="134" pos:column="41">return <expr><name pos:line="134" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><default pos:line="137" pos:column="33">default:
					<break pos:line="138" pos:column="41">break;</break>
			</default>}</block></switch>
			<break pos:line="140" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="143" pos:column="17">case <expr><name pos:line="143" pos:column="22">WM_COMMAND</name></expr> : 
		<block pos:line="144" pos:column="17">{
			<switch pos:line="145" pos:column="25">switch <condition pos:line="145" pos:column="32">(<expr><name pos:line="145" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="146" pos:column="25">{
				<case pos:line="147" pos:column="33">case <expr><name pos:line="147" pos:column="38">ID_PICKEDUP</name></expr> :
				<block pos:line="148" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="149" pos:column="41">int</name></type> <name pos:line="149" pos:column="45">listIndex</name> <init pos:line="149" pos:column="55">= <expr><name pos:line="149" pos:column="57">lParam</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="150" pos:column="41">int</name></type> <name pos:line="150" pos:column="45">view2set</name> <init pos:line="150" pos:column="54">= <expr><name><name pos:line="150" pos:column="56">_taskListInfo</name><op:operator pos:line="150" pos:column="69">.</op:operator><name pos:line="150" pos:column="70">_tlfsLst</name><index pos:line="150" pos:column="78">[<expr><name pos:line="150" pos:column="79">listIndex</name></expr>]</index></name><op:operator pos:line="150" pos:column="89">.</op:operator><name pos:line="150" pos:column="90">_iView</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="151" pos:column="41">int</name></type> <name pos:line="151" pos:column="45">index2Switch</name> <init pos:line="151" pos:column="58">= <expr><name><name pos:line="151" pos:column="60">_taskListInfo</name><op:operator pos:line="151" pos:column="73">.</op:operator><name pos:line="151" pos:column="74">_tlfsLst</name><index pos:line="151" pos:column="82">[<expr><name pos:line="151" pos:column="83">listIndex</name></expr>]</index></name><op:operator pos:line="151" pos:column="93">.</op:operator><name pos:line="151" pos:column="94">_docIndex</name></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="152" pos:column="41">::</op:operator><name pos:line="152" pos:column="43">SendMessage</name></name><argument_list pos:line="152" pos:column="54">(<argument><expr><name pos:line="152" pos:column="55">_hParent</name></expr></argument>, <argument><expr><name pos:line="152" pos:column="65">NPPM_ACTIVATEDOC</name></expr></argument>, <argument><expr><name pos:line="152" pos:column="83">view2set</name></expr></argument>, <argument><expr><name pos:line="152" pos:column="93">index2Switch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="153" pos:column="41">::</op:operator><name pos:line="153" pos:column="43">EndDialog</name></name><argument_list pos:line="153" pos:column="52">(<argument><expr><name pos:line="153" pos:column="53">_hSelf</name></expr></argument>, <argument><expr><op:operator pos:line="153" pos:column="61">-</op:operator><lit:literal type="number" pos:line="153" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="154" pos:column="41">return <expr><name pos:line="154" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><default pos:line="157" pos:column="33">default:
					<return pos:line="158" pos:column="41">return <expr><name pos:line="158" pos:column="48">FALSE</name></expr>;</return>
			</default>}</block></switch>
		}</block>

		</case><default pos:line="162" pos:column="17">default :
			<return pos:line="163" pos:column="25">return <expr><name pos:line="163" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>

	<return pos:line="166" pos:column="9">return <expr><name pos:line="166" pos:column="16">FALSE</name></expr>;</return>
}</block></function>

<function><type><name pos:line="169" pos:column="1">void</name></type> <name><name pos:line="169" pos:column="6">TaskListDlg</name><op:operator pos:line="169" pos:column="17">::</op:operator><name pos:line="169" pos:column="19">drawItem</name></name><parameter_list pos:line="169" pos:column="27">(<param><decl><type><name pos:line="169" pos:column="28">LPDRAWITEMSTRUCT</name></type> <name pos:line="169" pos:column="45">lpDrawItemStruct</name></decl></param>)</parameter_list>
<block pos:line="170" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="171" pos:column="9">RECT</name></type> <name pos:line="171" pos:column="14">rect</name> <init pos:line="171" pos:column="19">= <expr><name><name pos:line="171" pos:column="21">lpDrawItemStruct</name><op:operator pos:line="171" pos:column="37">-&gt;</op:operator><name pos:line="171" pos:column="39">rcItem</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="172" pos:column="9">HDC</name></type> <name pos:line="172" pos:column="13">hDC</name> <init pos:line="172" pos:column="17">= <expr><name><name pos:line="172" pos:column="19">lpDrawItemStruct</name><op:operator pos:line="172" pos:column="35">-&gt;</op:operator><name pos:line="172" pos:column="37">hDC</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="173" pos:column="9">int</name></type> <name pos:line="173" pos:column="13">nItem</name> <init pos:line="173" pos:column="19">= <expr><name><name pos:line="173" pos:column="21">lpDrawItemStruct</name><op:operator pos:line="173" pos:column="37">-&gt;</op:operator><name pos:line="173" pos:column="39">itemID</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="174" pos:column="9">const</specifier> <name pos:line="174" pos:column="15">TCHAR</name> <type:modifier pos:line="174" pos:column="21">*</type:modifier></type><name pos:line="174" pos:column="22">label</name> <init pos:line="174" pos:column="28">= <expr><name><name pos:line="174" pos:column="30">_taskListInfo</name><op:operator pos:line="174" pos:column="43">.</op:operator><name pos:line="174" pos:column="44">_tlfsLst</name><index pos:line="174" pos:column="52">[<expr><name pos:line="174" pos:column="53">nItem</name></expr>]</index></name><op:operator pos:line="174" pos:column="59">.</op:operator><call><name><name pos:line="174" pos:column="60">_fn</name><op:operator pos:line="174" pos:column="63">.</op:operator><name pos:line="174" pos:column="64">c_str</name></name><argument_list pos:line="174" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="175" pos:column="9">int</name></type> <name pos:line="175" pos:column="13">iImage</name> <init pos:line="175" pos:column="20">= <expr><name><name pos:line="175" pos:column="22">_taskListInfo</name><op:operator pos:line="175" pos:column="35">.</op:operator><name pos:line="175" pos:column="36">_tlfsLst</name><index pos:line="175" pos:column="44">[<expr><name pos:line="175" pos:column="45">nItem</name></expr>]</index></name><op:operator pos:line="175" pos:column="51">.</op:operator><name pos:line="175" pos:column="52">_status</name></expr></init></decl>;</decl_stmt>
	
	<decl_stmt><decl><type><name pos:line="177" pos:column="9">COLORREF</name></type> <name pos:line="177" pos:column="18">textColor</name> <init pos:line="177" pos:column="28">= <expr><name pos:line="177" pos:column="30">darkGrey</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="178" pos:column="9">int</name></type> <name pos:line="178" pos:column="13">imgStyle</name> <init pos:line="178" pos:column="22">= <expr><name pos:line="178" pos:column="24">ILD_SELECTED</name></expr></init></decl>;</decl_stmt>

	<if pos:line="180" pos:column="9">if <condition pos:line="180" pos:column="12">(<expr><name><name pos:line="180" pos:column="13">lpDrawItemStruct</name><op:operator pos:line="180" pos:column="29">-&gt;</op:operator><name pos:line="180" pos:column="31">itemState</name></name> <op:operator pos:line="180" pos:column="41">&amp;</op:operator> <name pos:line="180" pos:column="43">ODS_SELECTED</name></expr>)</condition><then pos:line="180" pos:column="56">
	<block pos:line="181" pos:column="9">{
		<expr_stmt><expr><name pos:line="182" pos:column="17">imgStyle</name> <op:operator pos:line="182" pos:column="26">=</op:operator> <name pos:line="182" pos:column="28">ILD_TRANSPARENT</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="183" pos:column="17">textColor</name> <op:operator pos:line="183" pos:column="27">=</op:operator> <name pos:line="183" pos:column="29">black</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="184" pos:column="17">::</op:operator><name pos:line="184" pos:column="19">SelectObject</name></name><argument_list pos:line="184" pos:column="31">(<argument><expr><name pos:line="184" pos:column="32">hDC</name></expr></argument>, <argument><expr><call><name><name pos:line="184" pos:column="37">_taskList</name><op:operator pos:line="184" pos:column="46">.</op:operator><name pos:line="184" pos:column="47">GetFontSelected</name></name><argument_list pos:line="184" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	
	<comment type="line" pos:line="187" pos:column="9">//</comment>
	<comment type="line" pos:line="188" pos:column="9">// DRAW IMAGE</comment>
	<comment type="line" pos:line="189" pos:column="9">//</comment>
	<decl_stmt><decl><type><name pos:line="190" pos:column="9">HIMAGELIST</name></type> <name pos:line="190" pos:column="20">hImgLst</name> <init pos:line="190" pos:column="28">= <expr><call><name><name pos:line="190" pos:column="30">_taskList</name><op:operator pos:line="190" pos:column="39">.</op:operator><name pos:line="190" pos:column="40">getImgLst</name></name><argument_list pos:line="190" pos:column="49">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="192" pos:column="9">IMAGEINFO</name></type> <name pos:line="192" pos:column="19">info</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="193" pos:column="9">ImageList_GetImageInfo</name><argument_list pos:line="193" pos:column="31">(<argument><expr><name pos:line="193" pos:column="32">hImgLst</name></expr></argument>, <argument><expr><name pos:line="193" pos:column="41">iImage</name></expr></argument>, <argument><expr><op:operator pos:line="193" pos:column="49">&amp;</op:operator><name pos:line="193" pos:column="50">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="195" pos:column="9">RECT</name> <type:modifier pos:line="195" pos:column="14">&amp;</type:modifier></type> <name pos:line="195" pos:column="16">imageRect</name> <init pos:line="195" pos:column="26">= <expr><name><name pos:line="195" pos:column="28">info</name><op:operator pos:line="195" pos:column="32">.</op:operator><name pos:line="195" pos:column="33">rcImage</name></name></expr></init></decl>;</decl_stmt>
	<comment type="line" pos:line="196" pos:column="9">//int yPos = (rect.top + (rect.bottom - rect.top)/2 + (isSelected?0:2)) - (imageRect.bottom - imageRect.top)/2;</comment>
	
	<decl_stmt><decl><type><name pos:line="198" pos:column="9">SIZE</name></type> <name pos:line="198" pos:column="14">charPixel</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="199" pos:column="9">::</op:operator><name pos:line="199" pos:column="11">GetTextExtentPoint</name></name><argument_list pos:line="199" pos:column="29">(<argument><expr><name pos:line="199" pos:column="30">hDC</name></expr></argument>, <argument><expr><call><name pos:line="199" pos:column="35">TEXT</name><argument_list pos:line="199" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="199" pos:column="40">" "</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="199" pos:column="46">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="199" pos:column="49">&amp;</op:operator><name pos:line="199" pos:column="50">charPixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="200" pos:column="9">int</name></type> <name pos:line="200" pos:column="13">spaceUnit</name> <init pos:line="200" pos:column="23">= <expr><name><name pos:line="200" pos:column="25">charPixel</name><op:operator pos:line="200" pos:column="34">.</op:operator><name pos:line="200" pos:column="35">cx</name></name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="201" pos:column="9">int</name></type> <name pos:line="201" pos:column="13">marge</name> <init pos:line="201" pos:column="19">= <expr><name pos:line="201" pos:column="21">spaceUnit</name></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="203" pos:column="9">rect</name><op:operator pos:line="203" pos:column="13">.</op:operator><name pos:line="203" pos:column="14">left</name></name> <op:operator pos:line="203" pos:column="19">+=</op:operator> <name pos:line="203" pos:column="22">marge</name></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="204" pos:column="9">ImageList_Draw</name><argument_list pos:line="204" pos:column="23">(<argument><expr><name pos:line="204" pos:column="24">hImgLst</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="33">iImage</name></expr></argument>, <argument><expr><name pos:line="204" pos:column="41">hDC</name></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="46">rect</name><op:operator pos:line="204" pos:column="50">.</op:operator><name pos:line="204" pos:column="51">left</name></name></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="57">rect</name><op:operator pos:line="204" pos:column="61">.</op:operator><name pos:line="204" pos:column="62">top</name></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="67">imgStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="205" pos:column="9">rect</name><op:operator pos:line="205" pos:column="13">.</op:operator><name pos:line="205" pos:column="14">left</name></name> <op:operator pos:line="205" pos:column="19">+=</op:operator> <name><name pos:line="205" pos:column="22">imageRect</name><op:operator pos:line="205" pos:column="31">.</op:operator><name pos:line="205" pos:column="32">right</name></name> <op:operator pos:line="205" pos:column="38">-</op:operator> <name><name pos:line="205" pos:column="40">imageRect</name><op:operator pos:line="205" pos:column="49">.</op:operator><name pos:line="205" pos:column="50">left</name></name> <op:operator pos:line="205" pos:column="55">+</op:operator> <name pos:line="205" pos:column="57">spaceUnit</name> <op:operator pos:line="205" pos:column="67">*</op:operator> <lit:literal type="number" pos:line="205" pos:column="69">2</lit:literal></expr>;</expr_stmt>

	<comment type="line" pos:line="207" pos:column="9">//</comment>
	<comment type="line" pos:line="208" pos:column="9">// DRAW TEXT</comment>
	<comment type="line" pos:line="209" pos:column="9">//</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="210" pos:column="9">::</op:operator><name pos:line="210" pos:column="11">SetTextColor</name></name><argument_list pos:line="210" pos:column="23">(<argument><expr><name pos:line="210" pos:column="24">hDC</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="29">textColor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="211" pos:column="9">rect</name><op:operator pos:line="211" pos:column="13">.</op:operator><name pos:line="211" pos:column="14">top</name></name> <op:operator pos:line="211" pos:column="18">-=</op:operator> <call><name><op:operator pos:line="211" pos:column="21">::</op:operator><name pos:line="211" pos:column="23">GetSystemMetrics</name></name><argument_list pos:line="211" pos:column="39">(<argument><expr><name pos:line="211" pos:column="40">SM_CYEDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
	<expr_stmt><expr><call><name><op:operator pos:line="213" pos:column="9">::</op:operator><name pos:line="213" pos:column="11">DrawText</name></name><argument_list pos:line="213" pos:column="19">(<argument><expr><name pos:line="213" pos:column="20">hDC</name></expr></argument>, <argument><expr><name pos:line="213" pos:column="25">label</name></expr></argument>, <argument><expr><call><name pos:line="213" pos:column="32">lstrlen</name><argument_list pos:line="213" pos:column="39">(<argument><expr><name pos:line="213" pos:column="40">label</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="213" pos:column="48">&amp;</op:operator><name pos:line="213" pos:column="49">rect</name></expr></argument>, <argument><expr><name pos:line="213" pos:column="55">DT_SINGLELINE</name> <op:operator pos:line="213" pos:column="69">|</op:operator> <name pos:line="213" pos:column="71">DT_VCENTER</name> <op:operator pos:line="213" pos:column="82">|</op:operator> <name pos:line="213" pos:column="84">DT_LEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
