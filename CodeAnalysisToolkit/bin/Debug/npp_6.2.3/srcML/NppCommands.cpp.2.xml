<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\NppCommands.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Notepad_plus_Window.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"EncodingMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"ShortcutMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"TaskListDlg.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"clipboardFormats.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="35" pos:column="10">"VerticalFileSwitcher.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="36" pos:column="10">"documentMap.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="38" pos:column="1">void</name></type> <name><name pos:line="38" pos:column="6">Notepad_plus</name><op:operator pos:line="38" pos:column="18">::</op:operator><name pos:line="38" pos:column="20">macroPlayback</name></name><parameter_list pos:line="38" pos:column="33">(<param><decl><type><name pos:line="38" pos:column="34">Macro</name></type> <name pos:line="38" pos:column="40">macro</name></decl></param>)</parameter_list>
<block pos:line="39" pos:column="1">{
	<expr_stmt><expr><call><name><name pos:line="40" pos:column="9">_pEditView</name><op:operator pos:line="40" pos:column="19">-&gt;</op:operator><name pos:line="40" pos:column="21">execute</name></name><argument_list pos:line="40" pos:column="28">(<argument><expr><name pos:line="40" pos:column="29">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:line="42" pos:column="9">for (<init><decl><type><name><name pos:line="42" pos:column="14">Macro</name><op:operator pos:line="42" pos:column="19">::</op:operator><name pos:line="42" pos:column="21">iterator</name></name></type> <name pos:line="42" pos:column="30">step</name> <init pos:line="42" pos:column="35">= <expr><call><name><name pos:line="42" pos:column="37">macro</name><op:operator pos:line="42" pos:column="42">.</op:operator><name pos:line="42" pos:column="43">begin</name></name><argument_list pos:line="42" pos:column="48">()</argument_list></call></expr></init></decl>;</init> <condition><expr><name pos:line="42" pos:column="52">step</name> <op:operator pos:line="42" pos:column="57">!=</op:operator> <call><name><name pos:line="42" pos:column="60">macro</name><op:operator pos:line="42" pos:column="65">.</op:operator><name pos:line="42" pos:column="66">end</name></name><argument_list pos:line="42" pos:column="69">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="42" pos:column="73">step</name><op:operator pos:line="42" pos:column="77">++</op:operator></expr></incr>)
	<block pos:line="43" pos:column="9">{
		<if pos:line="44" pos:column="17">if <condition pos:line="44" pos:column="20">(<expr><call><name><name pos:line="44" pos:column="21">step</name><op:operator pos:line="44" pos:column="25">-&gt;</op:operator><name pos:line="44" pos:column="27">isPlayable</name></name><argument_list pos:line="44" pos:column="37">()</argument_list></call></expr>)</condition><then pos:line="44" pos:column="40">
			<expr_stmt><expr><call><name><name pos:line="45" pos:column="25">step</name><op:operator pos:line="45" pos:column="29">-&gt;</op:operator><name pos:line="45" pos:column="31">PlayBack</name></name><argument_list pos:line="45" pos:column="39">(<argument><expr><name><name pos:line="45" pos:column="40">this</name><op:operator pos:line="45" pos:column="44">-&gt;</op:operator><name pos:line="45" pos:column="46">_pPublicInterface</name></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="65">_pEditView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="46" pos:column="17">else
			<expr_stmt><expr><call><name><name pos:line="47" pos:column="25">_findReplaceDlg</name><op:operator pos:line="47" pos:column="40">.</op:operator><name pos:line="47" pos:column="41">execSavedCommand</name></name><argument_list pos:line="47" pos:column="57">(<argument><expr><name><name pos:line="47" pos:column="58">step</name><op:operator pos:line="47" pos:column="62">-&gt;</op:operator><name pos:line="47" pos:column="64">message</name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="73">step</name><op:operator pos:line="47" pos:column="77">-&gt;</op:operator><name pos:line="47" pos:column="79">lParameter</name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="91">step</name><op:operator pos:line="47" pos:column="95">-&gt;</op:operator><name pos:line="47" pos:column="97">sParameter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></for>

	<expr_stmt><expr><call><name><name pos:line="50" pos:column="9">_pEditView</name><op:operator pos:line="50" pos:column="19">-&gt;</op:operator><name pos:line="50" pos:column="21">execute</name></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="53" pos:column="1">void</name></type> <name><name pos:line="53" pos:column="6">Notepad_plus</name><op:operator pos:line="53" pos:column="18">::</op:operator><name pos:line="53" pos:column="20">command</name></name><parameter_list pos:line="53" pos:column="27">(<param><decl><type><name pos:line="53" pos:column="28">int</name></type> <name pos:line="53" pos:column="32">id</name></decl></param>)</parameter_list> 
<block pos:line="54" pos:column="1">{
	<switch pos:line="55" pos:column="9">switch <condition pos:line="55" pos:column="16">(<expr><name pos:line="55" pos:column="17">id</name></expr>)</condition>
	<block pos:line="56" pos:column="9">{
		<case pos:line="57" pos:column="17">case <expr><name pos:line="57" pos:column="22">IDM_FILE_NEW</name></expr>:
		<block pos:line="58" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="59" pos:column="25">fileNew</name><argument_list pos:line="59" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="61" pos:column="17">break;</break>

		</case><case pos:line="63" pos:column="17">case <expr><name pos:line="63" pos:column="22">IDM_FILE_OPEN</name></expr>:
		<block pos:line="64" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="65" pos:column="25">fileOpen</name><argument_list pos:line="65" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="67" pos:column="17">break;</break>

		</case><case pos:line="69" pos:column="17">case <expr><name pos:line="69" pos:column="22">IDM_FILE_RELOAD</name></expr>:
			<expr_stmt><expr><call><name pos:line="70" pos:column="25">fileReload</name><argument_list pos:line="70" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="71" pos:column="25">break;</break>

		</case><case pos:line="73" pos:column="17">case <expr><name pos:line="73" pos:column="22">IDM_FILE_CLOSE</name></expr>:
			<if pos:line="74" pos:column="25">if <condition pos:line="74" pos:column="28">(<expr><call><name pos:line="74" pos:column="29">fileClose</name><argument_list pos:line="74" pos:column="38">()</argument_list></call></expr>)</condition><then pos:line="74" pos:column="41">
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">checkDocState</name><argument_list pos:line="75" pos:column="30">()</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="76" pos:column="25">break;</break>

		</case><case pos:line="78" pos:column="17">case <expr><name pos:line="78" pos:column="22">IDM_FILE_DELETE</name></expr>:
			<if pos:line="79" pos:column="25">if <condition pos:line="79" pos:column="28">(<expr><call><name pos:line="79" pos:column="29">fileDelete</name><argument_list pos:line="79" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="79" pos:column="42">
                <expr_stmt><expr><call><name pos:line="80" pos:column="17">checkDocState</name><argument_list pos:line="80" pos:column="30">()</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="81" pos:column="25">break;</break>

		</case><case pos:line="83" pos:column="17">case <expr><name pos:line="83" pos:column="22">IDM_FILE_RENAME</name></expr>:
			<expr_stmt><expr><call><name pos:line="84" pos:column="25">fileRename</name><argument_list pos:line="84" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="85" pos:column="25">break;</break>

		</case><case pos:line="87" pos:column="17">case <expr><name pos:line="87" pos:column="22">IDM_FILE_CLOSEALL</name></expr>:
			<expr_stmt><expr><call><name pos:line="88" pos:column="25">fileCloseAll</name><argument_list pos:line="88" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">checkDocState</name><argument_list pos:line="89" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="90" pos:column="25">break;</break>

		</case><case pos:line="92" pos:column="17">case <expr><name pos:line="92" pos:column="22">IDM_FILE_CLOSEALL_BUT_CURRENT</name></expr> :
			<expr_stmt><expr><call><name pos:line="93" pos:column="25">fileCloseAllButCurrent</name><argument_list pos:line="93" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="94" pos:column="13">checkDocState</name><argument_list pos:line="94" pos:column="26">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="95" pos:column="25">break;</break>

		</case><case pos:line="97" pos:column="17">case <expr><name pos:line="97" pos:column="22">IDM_FILE_SAVE</name></expr> :
			<expr_stmt><expr><call><name pos:line="98" pos:column="25">fileSave</name><argument_list pos:line="98" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="99" pos:column="25">break;</break>

		</case><case pos:line="101" pos:column="17">case <expr><name pos:line="101" pos:column="22">IDM_FILE_SAVEALL</name></expr> :
			<expr_stmt><expr><call><name pos:line="102" pos:column="25">fileSaveAll</name><argument_list pos:line="102" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="103" pos:column="25">break;</break>

		</case><case pos:line="105" pos:column="17">case <expr><name pos:line="105" pos:column="22">IDM_FILE_SAVEAS</name></expr> :
			<expr_stmt><expr><call><name pos:line="106" pos:column="25">fileSaveAs</name><argument_list pos:line="106" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="107" pos:column="25">break;</break>

		</case><case pos:line="109" pos:column="17">case <expr><name pos:line="109" pos:column="22">IDM_FILE_SAVECOPYAS</name></expr> :
			<expr_stmt><expr><call><name pos:line="110" pos:column="25">fileSaveAs</name><argument_list pos:line="110" pos:column="35">(<argument><expr><name pos:line="110" pos:column="36">BUFFER_INVALID</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="110" pos:column="52">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="111" pos:column="25">break;</break>

		</case><case pos:line="113" pos:column="17">case <expr><name pos:line="113" pos:column="22">IDM_FILE_LOADSESSION</name></expr>:
			<expr_stmt><expr><call><name pos:line="114" pos:column="25">fileLoadSession</name><argument_list pos:line="114" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="115" pos:column="25">break;</break>

		</case><case pos:line="117" pos:column="17">case <expr><name pos:line="117" pos:column="22">IDM_FILE_SAVESESSION</name></expr>:
			<expr_stmt><expr><call><name pos:line="118" pos:column="25">fileSaveSession</name><argument_list pos:line="118" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="119" pos:column="25">break;</break>

		</case><case pos:line="121" pos:column="17">case <expr><name pos:line="121" pos:column="22">IDM_FILE_PRINTNOW</name></expr> :
			<expr_stmt><expr><call><name pos:line="122" pos:column="25">filePrint</name><argument_list pos:line="122" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="122" pos:column="35">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="123" pos:column="25">break;</break>

		</case><case pos:line="125" pos:column="17">case <expr><name pos:line="125" pos:column="22">IDM_FILE_PRINT</name></expr> :
			<expr_stmt><expr><call><name pos:line="126" pos:column="25">filePrint</name><argument_list pos:line="126" pos:column="34">(<argument><expr><lit:literal type="boolean" pos:line="126" pos:column="35">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="127" pos:column="25">break;</break>

		</case><case pos:line="129" pos:column="17">case <expr><name pos:line="129" pos:column="22">IDM_FILE_EXIT</name></expr>:
			<expr_stmt><expr><call><name><op:operator pos:line="130" pos:column="25">::</op:operator><name pos:line="130" pos:column="27">SendMessage</name></name><argument_list pos:line="130" pos:column="38">(<argument><expr><call><name><name pos:line="130" pos:column="39">_pPublicInterface</name><op:operator pos:line="130" pos:column="56">-&gt;</op:operator><name pos:line="130" pos:column="58">getHSelf</name></name><argument_list pos:line="130" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="130" pos:column="70">WM_CLOSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="130" pos:column="80">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="130" pos:column="83">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="131" pos:column="25">break;</break>

		</case><case pos:line="133" pos:column="17">case <expr><name pos:line="133" pos:column="22">IDM_EDIT_UNDO</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="134" pos:column="25">_pEditView</name><op:operator pos:line="134" pos:column="35">-&gt;</op:operator><name pos:line="134" pos:column="37">execute</name></name><argument_list pos:line="134" pos:column="44">(<argument><expr><name pos:line="134" pos:column="45">WM_UNDO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="135" pos:column="25">checkClipboard</name><argument_list pos:line="135" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="136" pos:column="25">checkUndoState</name><argument_list pos:line="136" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="137" pos:column="25">break;</break>

		</case><case pos:line="139" pos:column="17">case <expr><name pos:line="139" pos:column="22">IDM_EDIT_REDO</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="140" pos:column="25">_pEditView</name><op:operator pos:line="140" pos:column="35">-&gt;</op:operator><name pos:line="140" pos:column="37">execute</name></name><argument_list pos:line="140" pos:column="44">(<argument><expr><name pos:line="140" pos:column="45">SCI_REDO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="141" pos:column="25">checkClipboard</name><argument_list pos:line="141" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="142" pos:column="25">checkUndoState</name><argument_list pos:line="142" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="143" pos:column="25">break;</break>

		</case><case pos:line="145" pos:column="17">case <expr><name pos:line="145" pos:column="22">IDM_EDIT_CUT</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="146" pos:column="25">_pEditView</name><op:operator pos:line="146" pos:column="35">-&gt;</op:operator><name pos:line="146" pos:column="37">execute</name></name><argument_list pos:line="146" pos:column="44">(<argument><expr><name pos:line="146" pos:column="45">WM_CUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="147" pos:column="25">checkClipboard</name><argument_list pos:line="147" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="148" pos:column="25">break;</break>

		</case><case pos:line="150" pos:column="17">case <expr><name pos:line="150" pos:column="22">IDM_EDIT_COPY</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="151" pos:column="25">_pEditView</name><op:operator pos:line="151" pos:column="35">-&gt;</op:operator><name pos:line="151" pos:column="37">execute</name></name><argument_list pos:line="151" pos:column="44">(<argument><expr><name pos:line="151" pos:column="45">WM_COPY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="152" pos:column="25">checkClipboard</name><argument_list pos:line="152" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="153" pos:column="25">break;</break>

		</case><case pos:line="155" pos:column="17">case <expr><name pos:line="155" pos:column="22">IDM_EDIT_COPY_BINARY</name></expr>:
		</case><case pos:line="156" pos:column="17">case <expr><name pos:line="156" pos:column="22">IDM_EDIT_CUT_BINARY</name></expr>:
		<block pos:line="157" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="158" pos:column="25">int</name></type> <name pos:line="158" pos:column="29">textLen</name> <init pos:line="158" pos:column="37">= <expr><call><name><name pos:line="158" pos:column="39">_pEditView</name><op:operator pos:line="158" pos:column="49">-&gt;</op:operator><name pos:line="158" pos:column="51">execute</name></name><argument_list pos:line="158" pos:column="58">(<argument><expr><name pos:line="158" pos:column="59">SCI_GETSELTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="158" pos:column="75">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="158" pos:column="78">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="158" pos:column="81">-</op:operator> <lit:literal type="number" pos:line="158" pos:column="83">1</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="159" pos:column="25">if <condition pos:line="159" pos:column="28">(<expr><op:operator pos:line="159" pos:column="29">!</op:operator><name pos:line="159" pos:column="30">textLen</name></expr>)</condition><then pos:line="159" pos:column="38">
				<return pos:line="160" pos:column="33">return;</return></then></if>

			<decl_stmt><decl><type><name pos:line="162" pos:column="25">char</name> <type:modifier pos:line="162" pos:column="30">*</type:modifier></type><name pos:line="162" pos:column="31">pBinText</name> <init pos:line="162" pos:column="40">= <expr><op:operator pos:line="162" pos:column="42">new</op:operator> <name><name pos:line="162" pos:column="46">char</name><index pos:line="162" pos:column="50">[<expr><name pos:line="162" pos:column="51">textLen</name> <op:operator pos:line="162" pos:column="59">+</op:operator> <lit:literal type="number" pos:line="162" pos:column="61">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="163" pos:column="25">_pEditView</name><op:operator pos:line="163" pos:column="35">-&gt;</op:operator><name pos:line="163" pos:column="37">getSelectedText</name></name><argument_list pos:line="163" pos:column="52">(<argument><expr><name pos:line="163" pos:column="53">pBinText</name></expr></argument>, <argument><expr><name pos:line="163" pos:column="63">textLen</name> <op:operator pos:line="163" pos:column="71">+</op:operator> <lit:literal type="number" pos:line="163" pos:column="73">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="165" pos:column="25">// Open the clipboard, and empty it.</comment>
			<if pos:line="166" pos:column="25">if <condition pos:line="166" pos:column="28">(<expr><op:operator pos:line="166" pos:column="29">!</op:operator><call><name pos:line="166" pos:column="30">OpenClipboard</name><argument_list pos:line="166" pos:column="43">(<argument><expr><name pos:line="166" pos:column="44">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="166" pos:column="50">
				<return pos:line="167" pos:column="33">return;</return></then></if>
			<expr_stmt><expr><call><name pos:line="168" pos:column="25">EmptyClipboard</name><argument_list pos:line="168" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="170" pos:column="25">// Allocate a global memory object for the text.</comment>
			<decl_stmt><decl><type><name pos:line="171" pos:column="25">HGLOBAL</name></type> <name pos:line="171" pos:column="33">hglbCopy</name> <init pos:line="171" pos:column="42">= <expr><call><name pos:line="171" pos:column="44">GlobalAlloc</name><argument_list pos:line="171" pos:column="55">(<argument><expr><name pos:line="171" pos:column="56">GMEM_MOVEABLE</name></expr></argument>, <argument><expr><op:operator pos:line="171" pos:column="71">(</op:operator><name pos:line="171" pos:column="72">textLen</name> <op:operator pos:line="171" pos:column="80">+</op:operator> <lit:literal type="number" pos:line="171" pos:column="82">1</lit:literal><op:operator pos:line="171" pos:column="83">)</op:operator> <op:operator pos:line="171" pos:column="85">*</op:operator> sizeof<op:operator pos:line="171" pos:column="93">(</op:operator><name pos:line="171" pos:column="94">unsigned</name> <name pos:line="171" pos:column="103">char</name><op:operator pos:line="171" pos:column="107">)</op:operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="172" pos:column="25">if <condition pos:line="172" pos:column="28">(<expr><name pos:line="172" pos:column="29">hglbCopy</name> <op:operator pos:line="172" pos:column="38">==</op:operator> <name pos:line="172" pos:column="41">NULL</name></expr>)</condition><then pos:line="172" pos:column="46">
			<block pos:line="173" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="174" pos:column="33">CloseClipboard</name><argument_list pos:line="174" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<return pos:line="175" pos:column="33">return;</return>
			}</block></then></if>

			<comment type="line" pos:line="178" pos:column="25">// Lock the handle and copy the text to the buffer.</comment>
			<decl_stmt><decl><type><name pos:line="179" pos:column="25">unsigned</name> <name pos:line="179" pos:column="34">char</name> <type:modifier pos:line="179" pos:column="39">*</type:modifier></type><name pos:line="179" pos:column="40">lpucharCopy</name> <init pos:line="179" pos:column="52">= <expr><op:operator pos:line="179" pos:column="54">(</op:operator><name pos:line="179" pos:column="55">unsigned</name> <name pos:line="179" pos:column="64">char</name> <op:operator pos:line="179" pos:column="69">*</op:operator><op:operator pos:line="179" pos:column="70">)</op:operator><call><name pos:line="179" pos:column="71">GlobalLock</name><argument_list pos:line="179" pos:column="81">(<argument><expr><name pos:line="179" pos:column="82">hglbCopy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="180" pos:column="25">memcpy</name><argument_list pos:line="180" pos:column="31">(<argument><expr><name pos:line="180" pos:column="32">lpucharCopy</name></expr></argument>, <argument><expr><name pos:line="180" pos:column="45">pBinText</name></expr></argument>, <argument><expr><name pos:line="180" pos:column="55">textLen</name> <op:operator pos:line="180" pos:column="63">*</op:operator> sizeof<op:operator pos:line="180" pos:column="71">(</op:operator><name pos:line="180" pos:column="72">unsigned</name> <name pos:line="180" pos:column="81">char</name><op:operator pos:line="180" pos:column="85">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="181" pos:column="25">lpucharCopy</name><index pos:line="181" pos:column="36">[<expr><name pos:line="181" pos:column="37">textLen</name></expr>]</index></name> <op:operator pos:line="181" pos:column="46">=</op:operator> <lit:literal type="number" pos:line="181" pos:column="48">0</lit:literal></expr>;</expr_stmt>    <comment type="line" pos:line="181" pos:column="54">// null character</comment>
			
			<expr_stmt><expr><call><name pos:line="183" pos:column="25">GlobalUnlock</name><argument_list pos:line="183" pos:column="37">(<argument><expr><name pos:line="183" pos:column="38">hglbCopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	 
			<comment type="line" pos:line="185" pos:column="25">// Place the handle on the clipboard.</comment>
			<expr_stmt><expr><call><name pos:line="186" pos:column="25">SetClipboardData</name><argument_list pos:line="186" pos:column="41">(<argument><expr><name pos:line="186" pos:column="42">CF_TEXT</name></expr></argument>, <argument><expr><name pos:line="186" pos:column="51">hglbCopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			

			<comment type="line" pos:line="189" pos:column="25">// Allocate a global memory object for the text length.</comment>
			<decl_stmt><decl><type><name pos:line="190" pos:column="25">HGLOBAL</name></type> <name pos:line="190" pos:column="33">hglbLenCopy</name> <init pos:line="190" pos:column="45">= <expr><call><name pos:line="190" pos:column="47">GlobalAlloc</name><argument_list pos:line="190" pos:column="58">(<argument><expr><name pos:line="190" pos:column="59">GMEM_MOVEABLE</name></expr></argument>, <argument><expr pos:line="190" pos:column="74">sizeof<op:operator pos:line="190" pos:column="80">(</op:operator><name pos:line="190" pos:column="81">unsigned</name> <name pos:line="190" pos:column="90">long</name><op:operator pos:line="190" pos:column="94">)</op:operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="191" pos:column="25">if <condition pos:line="191" pos:column="28">(<expr><name pos:line="191" pos:column="29">hglbLenCopy</name> <op:operator pos:line="191" pos:column="41">==</op:operator> <name pos:line="191" pos:column="44">NULL</name></expr>)</condition><then pos:line="191" pos:column="49">
			<block pos:line="192" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="193" pos:column="33">CloseClipboard</name><argument_list pos:line="193" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
				<return pos:line="194" pos:column="33">return;</return>
			}</block></then></if>
	 
			<comment type="line" pos:line="197" pos:column="25">// Lock the handle and copy the text to the buffer. </comment>
			<decl_stmt><decl><type><name pos:line="198" pos:column="25">unsigned</name> <name pos:line="198" pos:column="34">long</name> <type:modifier pos:line="198" pos:column="39">*</type:modifier></type><name pos:line="198" pos:column="40">lpLenCopy</name> <init pos:line="198" pos:column="50">= <expr><op:operator pos:line="198" pos:column="52">(</op:operator><name pos:line="198" pos:column="53">unsigned</name> <name pos:line="198" pos:column="62">long</name> <op:operator pos:line="198" pos:column="67">*</op:operator><op:operator pos:line="198" pos:column="68">)</op:operator><call><name pos:line="198" pos:column="69">GlobalLock</name><argument_list pos:line="198" pos:column="79">(<argument><expr><name pos:line="198" pos:column="80">hglbLenCopy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
			<expr_stmt><expr><op:operator pos:line="199" pos:column="25">*</op:operator><name pos:line="199" pos:column="26">lpLenCopy</name> <op:operator pos:line="199" pos:column="36">=</op:operator> <name pos:line="199" pos:column="38">textLen</name></expr>;</expr_stmt>
			
			<expr_stmt><expr><call><name pos:line="201" pos:column="25">GlobalUnlock</name><argument_list pos:line="201" pos:column="37">(<argument><expr><name pos:line="201" pos:column="38">hglbLenCopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
	 
			<comment type="line" pos:line="203" pos:column="25">// Place the handle on the clipboard.</comment>
			<decl_stmt><decl><type><name pos:line="204" pos:column="25">UINT</name></type> <name pos:line="204" pos:column="30">f</name> <init pos:line="204" pos:column="32">= <expr><call><name pos:line="204" pos:column="34">RegisterClipboardFormat</name><argument_list pos:line="204" pos:column="57">(<argument><expr><name pos:line="204" pos:column="58">CF_NPPTEXTLEN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="205" pos:column="25">SetClipboardData</name><argument_list pos:line="205" pos:column="41">(<argument><expr><name pos:line="205" pos:column="42">f</name></expr></argument>, <argument><expr><name pos:line="205" pos:column="45">hglbLenCopy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="207" pos:column="25">CloseClipboard</name><argument_list pos:line="207" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

			<if pos:line="209" pos:column="25">if <condition pos:line="209" pos:column="28">(<expr><name pos:line="209" pos:column="29">id</name> <op:operator pos:line="209" pos:column="32">==</op:operator> <name pos:line="209" pos:column="35">IDM_EDIT_CUT_BINARY</name></expr>)</condition><then pos:line="209" pos:column="55">
				<expr_stmt><expr><call><name><name pos:line="210" pos:column="33">_pEditView</name><op:operator pos:line="210" pos:column="43">-&gt;</op:operator><name pos:line="210" pos:column="45">execute</name></name><argument_list pos:line="210" pos:column="52">(<argument><expr><name pos:line="210" pos:column="53">SCI_REPLACESEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="210" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="210" pos:column="72">(</op:operator><name pos:line="210" pos:column="73">LPARAM</name><op:operator pos:line="210" pos:column="79">)</op:operator><lit:literal type="string" pos:line="210" pos:column="80">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="212" pos:column="17">break;</break>

		</case><case pos:line="214" pos:column="17">case <expr><name pos:line="214" pos:column="22">IDM_EDIT_PASTE</name></expr>:
		<block pos:line="215" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="216" pos:column="25">int</name></type> <name pos:line="216" pos:column="29">eolMode</name> <init pos:line="216" pos:column="37">= <expr><call><name pos:line="216" pos:column="39">int</name><argument_list pos:line="216" pos:column="42">(<argument><expr><call><name><name pos:line="216" pos:column="43">_pEditView</name><op:operator pos:line="216" pos:column="53">-&gt;</op:operator><name pos:line="216" pos:column="55">execute</name></name><argument_list pos:line="216" pos:column="62">(<argument><expr><name pos:line="216" pos:column="63">SCI_GETEOLMODE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="217" pos:column="25">_pEditView</name><op:operator pos:line="217" pos:column="35">-&gt;</op:operator><name pos:line="217" pos:column="37">execute</name></name><argument_list pos:line="217" pos:column="44">(<argument><expr><name pos:line="217" pos:column="45">SCI_PASTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="218" pos:column="25">_pEditView</name><op:operator pos:line="218" pos:column="35">-&gt;</op:operator><name pos:line="218" pos:column="37">execute</name></name><argument_list pos:line="218" pos:column="44">(<argument><expr><name pos:line="218" pos:column="45">SCI_CONVERTEOLS</name></expr></argument>, <argument><expr><name pos:line="218" pos:column="62">eolMode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="220" pos:column="17">break;</break>

		</case><case pos:line="222" pos:column="17">case <expr><name pos:line="222" pos:column="22">IDM_EDIT_PASTE_BINARY</name></expr>:
		<block pos:line="223" pos:column="17">{			
			<if pos:line="224" pos:column="25">if <condition pos:line="224" pos:column="28">(<expr><op:operator pos:line="224" pos:column="29">!</op:operator><call><name pos:line="224" pos:column="30">IsClipboardFormatAvailable</name><argument_list pos:line="224" pos:column="56">(<argument><expr><name pos:line="224" pos:column="57">CF_TEXT</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="224" pos:column="66">
				<return pos:line="225" pos:column="33">return;</return></then></if>

			<if pos:line="227" pos:column="25">if <condition pos:line="227" pos:column="28">(<expr><op:operator pos:line="227" pos:column="29">!</op:operator><call><name pos:line="227" pos:column="30">OpenClipboard</name><argument_list pos:line="227" pos:column="43">(<argument><expr><name pos:line="227" pos:column="44">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="227" pos:column="50">
				<return pos:line="228" pos:column="33">return;</return></then></if> 
	 
			<decl_stmt><decl><type><name pos:line="230" pos:column="25">HGLOBAL</name></type> <name pos:line="230" pos:column="33">hglb</name> <init pos:line="230" pos:column="38">= <expr><call><name pos:line="230" pos:column="40">GetClipboardData</name><argument_list pos:line="230" pos:column="56">(<argument><expr><name pos:line="230" pos:column="57">CF_TEXT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
			<if pos:line="231" pos:column="25">if <condition pos:line="231" pos:column="28">(<expr><name pos:line="231" pos:column="29">hglb</name> <op:operator pos:line="231" pos:column="34">!=</op:operator> <name pos:line="231" pos:column="37">NULL</name></expr>)</condition><then pos:line="231" pos:column="42"> 
			<block pos:line="232" pos:column="25">{ 
				<decl_stmt><decl><type><name pos:line="233" pos:column="33">char</name> <type:modifier pos:line="233" pos:column="38">*</type:modifier></type><name pos:line="233" pos:column="39">lpchar</name> <init pos:line="233" pos:column="46">= <expr><op:operator pos:line="233" pos:column="48">(</op:operator><name pos:line="233" pos:column="49">char</name> <op:operator pos:line="233" pos:column="54">*</op:operator><op:operator pos:line="233" pos:column="55">)</op:operator><call><name pos:line="233" pos:column="56">GlobalLock</name><argument_list pos:line="233" pos:column="66">(<argument><expr><name pos:line="233" pos:column="67">hglb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
				<if pos:line="234" pos:column="33">if <condition pos:line="234" pos:column="36">(<expr><name pos:line="234" pos:column="37">lpchar</name> <op:operator pos:line="234" pos:column="44">!=</op:operator> <name pos:line="234" pos:column="47">NULL</name></expr>)</condition><then pos:line="234" pos:column="52"> 
				<block pos:line="235" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="236" pos:column="41">UINT</name></type> <name pos:line="236" pos:column="46">cf_nppTextLen</name> <init pos:line="236" pos:column="60">= <expr><call><name pos:line="236" pos:column="62">RegisterClipboardFormat</name><argument_list pos:line="236" pos:column="85">(<argument><expr><name pos:line="236" pos:column="86">CF_NPPTEXTLEN</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="237" pos:column="41">if <condition pos:line="237" pos:column="44">(<expr><call><name pos:line="237" pos:column="45">IsClipboardFormatAvailable</name><argument_list pos:line="237" pos:column="71">(<argument><expr><name pos:line="237" pos:column="72">cf_nppTextLen</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="237" pos:column="87">
					<block pos:line="238" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="239" pos:column="49">HGLOBAL</name></type> <name pos:line="239" pos:column="57">hglbLen</name> <init pos:line="239" pos:column="65">= <expr><call><name pos:line="239" pos:column="67">GetClipboardData</name><argument_list pos:line="239" pos:column="83">(<argument><expr><name pos:line="239" pos:column="84">cf_nppTextLen</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
						<if pos:line="240" pos:column="49">if <condition pos:line="240" pos:column="52">(<expr><name pos:line="240" pos:column="53">hglbLen</name> <op:operator pos:line="240" pos:column="61">!=</op:operator> <name pos:line="240" pos:column="64">NULL</name></expr>)</condition><then pos:line="240" pos:column="69"> 
						<block pos:line="241" pos:column="49">{ 
							<decl_stmt><decl><type><name pos:line="242" pos:column="57">unsigned</name> <name pos:line="242" pos:column="66">long</name> <type:modifier pos:line="242" pos:column="71">*</type:modifier></type><name pos:line="242" pos:column="72">lpLen</name> <init pos:line="242" pos:column="78">= <expr><op:operator pos:line="242" pos:column="80">(</op:operator><name pos:line="242" pos:column="81">unsigned</name> <name pos:line="242" pos:column="90">long</name> <op:operator pos:line="242" pos:column="95">*</op:operator><op:operator pos:line="242" pos:column="96">)</op:operator><call><name pos:line="242" pos:column="97">GlobalLock</name><argument_list pos:line="242" pos:column="107">(<argument><expr><name pos:line="242" pos:column="108">hglbLen</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
							<if pos:line="243" pos:column="57">if <condition pos:line="243" pos:column="60">(<expr><name pos:line="243" pos:column="61">lpLen</name> <op:operator pos:line="243" pos:column="67">!=</op:operator> <name pos:line="243" pos:column="70">NULL</name></expr>)</condition><then pos:line="243" pos:column="75"> 
							<block pos:line="244" pos:column="57">{
								<expr_stmt><expr><call><name><name pos:line="245" pos:column="65">_pEditView</name><op:operator pos:line="245" pos:column="75">-&gt;</op:operator><name pos:line="245" pos:column="77">execute</name></name><argument_list pos:line="245" pos:column="84">(<argument><expr><name pos:line="245" pos:column="85">SCI_REPLACESEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="245" pos:column="101">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="245" pos:column="104">(</op:operator><name pos:line="245" pos:column="105">LPARAM</name><op:operator pos:line="245" pos:column="111">)</op:operator><lit:literal type="string" pos:line="245" pos:column="112">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
								<expr_stmt><expr><call><name><name pos:line="246" pos:column="65">_pEditView</name><op:operator pos:line="246" pos:column="75">-&gt;</op:operator><name pos:line="246" pos:column="77">execute</name></name><argument_list pos:line="246" pos:column="84">(<argument><expr><name pos:line="246" pos:column="85">SCI_ADDTEXT</name></expr></argument>, <argument><expr><op:operator pos:line="246" pos:column="98">*</op:operator><name pos:line="246" pos:column="99">lpLen</name></expr></argument>, <argument><expr><op:operator pos:line="246" pos:column="106">(</op:operator><name pos:line="246" pos:column="107">LPARAM</name><op:operator pos:line="246" pos:column="113">)</op:operator><name pos:line="246" pos:column="114">lpchar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

								<expr_stmt><expr><call><name pos:line="248" pos:column="65">GlobalUnlock</name><argument_list pos:line="248" pos:column="77">(<argument><expr><name pos:line="248" pos:column="78">hglb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
							}</block></then></if>
						}</block></then></if>
					}</block></then>
					<else pos:line="252" pos:column="41">else
					<block pos:line="253" pos:column="41">{

						<expr_stmt><expr><call><name><name pos:line="255" pos:column="49">_pEditView</name><op:operator pos:line="255" pos:column="59">-&gt;</op:operator><name pos:line="255" pos:column="61">execute</name></name><argument_list pos:line="255" pos:column="68">(<argument><expr><name pos:line="255" pos:column="69">SCI_REPLACESEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="255" pos:column="85">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="255" pos:column="88">(</op:operator><name pos:line="255" pos:column="89">LPARAM</name><op:operator pos:line="255" pos:column="95">)</op:operator><name pos:line="255" pos:column="96">lpchar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></else></if>
					<expr_stmt><expr><call><name pos:line="257" pos:column="41">GlobalUnlock</name><argument_list pos:line="257" pos:column="53">(<argument><expr><name pos:line="257" pos:column="54">hglb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
				}</block></then></if>
			}</block></then></if>
			<expr_stmt><expr><call><name pos:line="260" pos:column="25">CloseClipboard</name><argument_list pos:line="260" pos:column="39">()</argument_list></call></expr>;</expr_stmt>

		}</block>
		<break pos:line="263" pos:column="17">break;</break>

		</case><case pos:line="265" pos:column="17">case <expr><name pos:line="265" pos:column="22">IDM_EDIT_PASTE_AS_RTF</name></expr>:
		</case><case pos:line="266" pos:column="17">case <expr><name pos:line="266" pos:column="22">IDM_EDIT_PASTE_AS_HTML</name></expr>:
		<block pos:line="267" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="268" pos:column="25">UINT</name></type> <name pos:line="268" pos:column="30">f</name> <init pos:line="268" pos:column="32">= <expr><call><name pos:line="268" pos:column="34">RegisterClipboardFormat</name><argument_list pos:line="268" pos:column="57">(<argument><expr><name pos:line="268" pos:column="58">id</name><op:operator pos:line="268" pos:column="60">==</op:operator><name pos:line="268" pos:column="62">IDM_EDIT_PASTE_AS_HTML</name><op:operator pos:line="268" pos:column="84">?</op:operator><name pos:line="268" pos:column="85">CF_HTML</name><op:operator pos:line="268" pos:column="92">:</op:operator><name pos:line="268" pos:column="93">CF_RTF</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="270" pos:column="25">if <condition pos:line="270" pos:column="28">(<expr><op:operator pos:line="270" pos:column="29">!</op:operator><call><name pos:line="270" pos:column="30">IsClipboardFormatAvailable</name><argument_list pos:line="270" pos:column="56">(<argument><expr><name pos:line="270" pos:column="57">f</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="270" pos:column="60"> 
				<return pos:line="271" pos:column="33">return;</return></then></if>
				
			<if pos:line="273" pos:column="25">if <condition pos:line="273" pos:column="28">(<expr><op:operator pos:line="273" pos:column="29">!</op:operator><call><name pos:line="273" pos:column="30">OpenClipboard</name><argument_list pos:line="273" pos:column="43">(<argument><expr><name pos:line="273" pos:column="44">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="273" pos:column="50">
				<return pos:line="274" pos:column="33">return;</return></then></if> 
	 
			<decl_stmt><decl><type><name pos:line="276" pos:column="25">HGLOBAL</name></type> <name pos:line="276" pos:column="33">hglb</name> <init pos:line="276" pos:column="38">= <expr><call><name pos:line="276" pos:column="40">GetClipboardData</name><argument_list pos:line="276" pos:column="56">(<argument><expr><name pos:line="276" pos:column="57">f</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
			<if pos:line="277" pos:column="25">if <condition pos:line="277" pos:column="28">(<expr><name pos:line="277" pos:column="29">hglb</name> <op:operator pos:line="277" pos:column="34">!=</op:operator> <name pos:line="277" pos:column="37">NULL</name></expr>)</condition><then pos:line="277" pos:column="42"> 
			<block pos:line="278" pos:column="25">{ 
				<decl_stmt><decl><type><name pos:line="279" pos:column="33">LPSTR</name></type> <name pos:line="279" pos:column="39">lptstr</name> <init pos:line="279" pos:column="46">= <expr><op:operator pos:line="279" pos:column="48">(</op:operator><name pos:line="279" pos:column="49">LPSTR</name><op:operator pos:line="279" pos:column="54">)</op:operator><call><name pos:line="279" pos:column="55">GlobalLock</name><argument_list pos:line="279" pos:column="65">(<argument><expr><name pos:line="279" pos:column="66">hglb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> 
				<if pos:line="280" pos:column="33">if <condition pos:line="280" pos:column="36">(<expr><name pos:line="280" pos:column="37">lptstr</name> <op:operator pos:line="280" pos:column="44">!=</op:operator> <name pos:line="280" pos:column="47">NULL</name></expr>)</condition><then pos:line="280" pos:column="52"> 
				<block pos:line="281" pos:column="33">{ 
					<comment type="line" pos:line="282" pos:column="41">// Call the application-defined ReplaceSelection </comment>
					<comment type="line" pos:line="283" pos:column="41">// function to insert the text and repaint the </comment>
					<comment type="line" pos:line="284" pos:column="41">// window. </comment>
					<expr_stmt><expr><call><name><name pos:line="285" pos:column="41">_pEditView</name><op:operator pos:line="285" pos:column="51">-&gt;</op:operator><name pos:line="285" pos:column="53">execute</name></name><argument_list pos:line="285" pos:column="60">(<argument><expr><name pos:line="285" pos:column="61">SCI_REPLACESEL</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="285" pos:column="77">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="285" pos:column="80">(</op:operator><name pos:line="285" pos:column="81">LPARAM</name><op:operator pos:line="285" pos:column="87">)</op:operator><name pos:line="285" pos:column="88">lptstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><call><name pos:line="287" pos:column="41">GlobalUnlock</name><argument_list pos:line="287" pos:column="53">(<argument><expr><name pos:line="287" pos:column="54">hglb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
				}</block></then></if>
			}</block></then></if>
			<expr_stmt><expr><call><name pos:line="290" pos:column="25">CloseClipboard</name><argument_list pos:line="290" pos:column="39">()</argument_list></call></expr>;</expr_stmt> 
		}</block>
		<break pos:line="292" pos:column="17">break;</break>

		</case><case pos:line="294" pos:column="17">case <expr><name pos:line="294" pos:column="22">IDM_EDIT_CHAR_PANEL</name></expr>:
		<block pos:line="295" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="296" pos:column="25">launchAnsiCharPanel</name><argument_list pos:line="296" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="298" pos:column="17">break;</break>

		</case><case pos:line="300" pos:column="17">case <expr><name pos:line="300" pos:column="22">IDM_EDIT_CLIPBOARDHISTORY_PANEL</name></expr>:
		<block pos:line="301" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="302" pos:column="25">launchClipboardHistoryPanel</name><argument_list pos:line="302" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="304" pos:column="17">break;</break>

		</case><case pos:line="306" pos:column="17">case <expr><name pos:line="306" pos:column="22">IDM_VIEW_FILESWITCHER_PANEL</name></expr>:
		<block pos:line="307" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="308" pos:column="25">launchFileSwitcherPanel</name><argument_list pos:line="308" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="310" pos:column="17">break;</break>

		</case><case pos:line="312" pos:column="17">case <expr><name pos:line="312" pos:column="22">IDM_VIEW_PROJECT_PANEL_1</name></expr>:
		<block pos:line="313" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="314" pos:column="25">launchProjectPanel</name><argument_list pos:line="314" pos:column="43">(<argument><expr><name pos:line="314" pos:column="44">id</name></expr></argument>, <argument><expr><op:operator pos:line="314" pos:column="48">&amp;</op:operator><name pos:line="314" pos:column="49">_pProjectPanel_1</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="314" pos:column="67">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="316" pos:column="17">break;</break>
		</case><case pos:line="317" pos:column="17">case <expr><name pos:line="317" pos:column="22">IDM_VIEW_PROJECT_PANEL_2</name></expr>:
		<block pos:line="318" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="319" pos:column="25">launchProjectPanel</name><argument_list pos:line="319" pos:column="43">(<argument><expr><name pos:line="319" pos:column="44">id</name></expr></argument>, <argument><expr><op:operator pos:line="319" pos:column="48">&amp;</op:operator><name pos:line="319" pos:column="49">_pProjectPanel_2</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="319" pos:column="67">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="321" pos:column="17">break;</break>
		</case><case pos:line="322" pos:column="17">case <expr><name pos:line="322" pos:column="22">IDM_VIEW_PROJECT_PANEL_3</name></expr>:
		<block pos:line="323" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="324" pos:column="25">launchProjectPanel</name><argument_list pos:line="324" pos:column="43">(<argument><expr><name pos:line="324" pos:column="44">id</name></expr></argument>, <argument><expr><op:operator pos:line="324" pos:column="48">&amp;</op:operator><name pos:line="324" pos:column="49">_pProjectPanel_3</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="324" pos:column="67">2</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="326" pos:column="17">break;</break>

		</case><case pos:line="328" pos:column="17">case <expr><name pos:line="328" pos:column="22">IDM_VIEW_DOC_MAP</name></expr>:
		<block pos:line="329" pos:column="17">{
			<if pos:line="330" pos:column="25">if<condition pos:line="330" pos:column="27">(<expr><name pos:line="330" pos:column="28">_pDocMap</name> <op:operator pos:line="330" pos:column="37">&amp;&amp;</op:operator> <call><name><name pos:line="330" pos:column="40">_pDocMap</name><op:operator pos:line="330" pos:column="48">-&gt;</op:operator><name pos:line="330" pos:column="50">isVisible</name></name><argument_list pos:line="330" pos:column="59">()</argument_list></call></expr>)</condition><then pos:line="330" pos:column="62">
			<block pos:line="331" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="332" pos:column="33">_pDocMap</name><op:operator pos:line="332" pos:column="41">-&gt;</op:operator><name pos:line="332" pos:column="43">display</name></name><argument_list pos:line="332" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="332" pos:column="51">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="333" pos:column="33">_pDocMap</name><op:operator pos:line="333" pos:column="41">-&gt;</op:operator><name pos:line="333" pos:column="43">vzDlgDisplay</name></name><argument_list pos:line="333" pos:column="55">(<argument><expr><lit:literal type="boolean" pos:line="333" pos:column="56">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="334" pos:column="33">checkMenuItem</name><argument_list pos:line="334" pos:column="46">(<argument><expr><name pos:line="334" pos:column="47">IDM_VIEW_DOC_MAP</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="334" pos:column="65">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="336" pos:column="25">else
			<block pos:line="337" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="338" pos:column="33">checkMenuItem</name><argument_list pos:line="338" pos:column="46">(<argument><expr><name pos:line="338" pos:column="47">IDM_VIEW_DOC_MAP</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="338" pos:column="65">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="339" pos:column="33">launchDocMap</name><argument_list pos:line="339" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block>
		<break pos:line="342" pos:column="17">break;</break>

		</case><case pos:line="344" pos:column="17">case <expr><name pos:line="344" pos:column="22">IDM_VIEW_FUNC_LIST</name></expr>:
		<block pos:line="345" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="346" pos:column="25">launchFunctionList</name><argument_list pos:line="346" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
			<comment type="block" pos:line="347" pos:column="25">/*
			if(_pDocMap &amp;&amp; _pDocMap-&gt;isVisible())
			{
				_pDocMap-&gt;display(false);
				_pDocMap-&gt;vzDlgDisplay(false);
				checkMenuItem(IDM_VIEW_DOC_MAP, false);
			}
			else
			{
				checkMenuItem(IDM_VIEW_DOC_MAP, true);
				launchDocMap();
			}
			*/</comment>
		}</block>
		<break pos:line="361" pos:column="17">break;</break>

		</case><case pos:line="363" pos:column="17">case <expr><name pos:line="363" pos:column="22">IDM_EDIT_DELETE</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="364" pos:column="25">_pEditView</name><op:operator pos:line="364" pos:column="35">-&gt;</op:operator><name pos:line="364" pos:column="37">execute</name></name><argument_list pos:line="364" pos:column="44">(<argument><expr><name pos:line="364" pos:column="45">WM_CLEAR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="365" pos:column="25">break;</break>

		</case><case pos:line="367" pos:column="17">case <expr><name pos:line="367" pos:column="22">IDM_MACRO_STARTRECORDINGMACRO</name></expr>:
		</case><case pos:line="368" pos:column="17">case <expr><name pos:line="368" pos:column="22">IDM_MACRO_STOPRECORDINGMACRO</name></expr>:
		</case><case pos:line="369" pos:column="17">case <expr><name pos:line="369" pos:column="22">IDC_EDIT_TOGGLEMACRORECORDING</name></expr>:
		<block pos:line="370" pos:column="17">{
			<if pos:line="371" pos:column="25">if <condition pos:line="371" pos:column="28">(<expr><name pos:line="371" pos:column="29">_recordingMacro</name></expr>)</condition><then pos:line="371" pos:column="45">
			<block pos:line="372" pos:column="25">{
				<comment type="line" pos:line="373" pos:column="33">// STOP !!!</comment>
				<expr_stmt><expr><call><name><name pos:line="374" pos:column="33">_mainEditView</name><op:operator pos:line="374" pos:column="46">.</op:operator><name pos:line="374" pos:column="47">execute</name></name><argument_list pos:line="374" pos:column="54">(<argument><expr><name pos:line="374" pos:column="55">SCI_STOPRECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="375" pos:column="33">_subEditView</name><op:operator pos:line="375" pos:column="45">.</op:operator><name pos:line="375" pos:column="46">execute</name></name><argument_list pos:line="375" pos:column="53">(<argument><expr><name pos:line="375" pos:column="54">SCI_STOPRECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt><expr><call><name><name pos:line="377" pos:column="33">_mainEditView</name><op:operator pos:line="377" pos:column="46">.</op:operator><name pos:line="377" pos:column="47">execute</name></name><argument_list pos:line="377" pos:column="54">(<argument><expr><name pos:line="377" pos:column="55">SCI_SETCURSOR</name></expr></argument>, <argument><expr><op:operator pos:line="377" pos:column="70">(</op:operator><name pos:line="377" pos:column="71">WPARAM</name><op:operator pos:line="377" pos:column="77">)</op:operator><name pos:line="377" pos:column="78">SC_CURSORNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="378" pos:column="33">_subEditView</name><op:operator pos:line="378" pos:column="45">.</op:operator><name pos:line="378" pos:column="46">execute</name></name><argument_list pos:line="378" pos:column="53">(<argument><expr><name pos:line="378" pos:column="54">SCI_SETCURSOR</name></expr></argument>, <argument><expr><op:operator pos:line="378" pos:column="69">(</op:operator><name pos:line="378" pos:column="70">WPARAM</name><op:operator pos:line="378" pos:column="76">)</op:operator><name pos:line="378" pos:column="77">SC_CURSORNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<expr_stmt><expr><name pos:line="380" pos:column="33">_recordingMacro</name> <op:operator pos:line="380" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="380" pos:column="51">false</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="381" pos:column="33">_runMacroDlg</name><op:operator pos:line="381" pos:column="45">.</op:operator><name pos:line="381" pos:column="46">initMacroList</name></name><argument_list pos:line="381" pos:column="59">()</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="383" pos:column="25">else
			<block pos:line="384" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="385" pos:column="33">_mainEditView</name><op:operator pos:line="385" pos:column="46">.</op:operator><name pos:line="385" pos:column="47">execute</name></name><argument_list pos:line="385" pos:column="54">(<argument><expr><name pos:line="385" pos:column="55">SCI_SETCURSOR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="385" pos:column="70">9</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="386" pos:column="33">_subEditView</name><op:operator pos:line="386" pos:column="45">.</op:operator><name pos:line="386" pos:column="46">execute</name></name><argument_list pos:line="386" pos:column="53">(<argument><expr><name pos:line="386" pos:column="54">SCI_SETCURSOR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="386" pos:column="69">9</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="387" pos:column="33">_macro</name><op:operator pos:line="387" pos:column="39">.</op:operator><name pos:line="387" pos:column="40">clear</name></name><argument_list pos:line="387" pos:column="45">()</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="389" pos:column="33">// START !!!</comment>
				<expr_stmt><expr><call><name><name pos:line="390" pos:column="33">_mainEditView</name><op:operator pos:line="390" pos:column="46">.</op:operator><name pos:line="390" pos:column="47">execute</name></name><argument_list pos:line="390" pos:column="54">(<argument><expr><name pos:line="390" pos:column="55">SCI_STARTRECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="391" pos:column="33">_subEditView</name><op:operator pos:line="391" pos:column="45">.</op:operator><name pos:line="391" pos:column="46">execute</name></name><argument_list pos:line="391" pos:column="53">(<argument><expr><name pos:line="391" pos:column="54">SCI_STARTRECORD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="392" pos:column="33">_recordingMacro</name> <op:operator pos:line="392" pos:column="49">=</op:operator> <lit:literal type="boolean" pos:line="392" pos:column="51">true</lit:literal></expr>;</expr_stmt>
			}</block></else></if>
			<expr_stmt><expr><call><name pos:line="394" pos:column="25">checkMacroState</name><argument_list pos:line="394" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="395" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="398" pos:column="17">case <expr><name pos:line="398" pos:column="22">IDM_MACRO_PLAYBACKRECORDEDMACRO</name></expr>:
			<if pos:line="399" pos:column="25">if <condition pos:line="399" pos:column="28">(<expr><op:operator pos:line="399" pos:column="29">!</op:operator><name pos:line="399" pos:column="30">_recordingMacro</name></expr>)</condition><then pos:line="399" pos:column="46"> <comment type="line" pos:line="399" pos:column="47">// if we're not currently recording, then playback the recorded keystrokes</comment>
				<expr_stmt><expr><call><name pos:line="400" pos:column="33">macroPlayback</name><argument_list pos:line="400" pos:column="46">(<argument><expr><name pos:line="400" pos:column="47">_macro</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="401" pos:column="25">break;</break>

		</case><case pos:line="403" pos:column="17">case <expr><name pos:line="403" pos:column="22">IDM_MACRO_RUNMULTIMACRODLG</name></expr> :
		<block pos:line="404" pos:column="17">{
			<if pos:line="405" pos:column="25">if <condition pos:line="405" pos:column="28">(<expr><op:operator pos:line="405" pos:column="29">!</op:operator><name pos:line="405" pos:column="30">_recordingMacro</name></expr>)</condition><then pos:line="405" pos:column="46"> <comment type="line" pos:line="405" pos:column="47">// if we're not currently recording, then playback the recorded keystrokes</comment>
			<block pos:line="406" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="407" pos:column="33">bool</name></type> <name pos:line="407" pos:column="38">isFirstTime</name> <init pos:line="407" pos:column="50">= <expr><op:operator pos:line="407" pos:column="52">!</op:operator><call><name><name pos:line="407" pos:column="53">_runMacroDlg</name><op:operator pos:line="407" pos:column="65">.</op:operator><name pos:line="407" pos:column="66">isCreated</name></name><argument_list pos:line="407" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="408" pos:column="33">_runMacroDlg</name><op:operator pos:line="408" pos:column="45">.</op:operator><name pos:line="408" pos:column="46">doDialog</name></name><argument_list pos:line="408" pos:column="54">(<argument><expr><call><name><name pos:line="408" pos:column="55">_nativeLangSpeaker</name><op:operator pos:line="408" pos:column="73">.</op:operator><name pos:line="408" pos:column="74">isRTL</name></name><argument_list pos:line="408" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				
				<if pos:line="410" pos:column="33">if <condition pos:line="410" pos:column="36">(<expr><name pos:line="410" pos:column="37">isFirstTime</name></expr>)</condition><then pos:line="410" pos:column="49">
				<block pos:line="411" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="412" pos:column="41">_nativeLangSpeaker</name><op:operator pos:line="412" pos:column="59">.</op:operator><name pos:line="412" pos:column="60">changeDlgLang</name></name><argument_list pos:line="412" pos:column="73">(<argument><expr><call><name><name pos:line="412" pos:column="74">_runMacroDlg</name><op:operator pos:line="412" pos:column="86">.</op:operator><name pos:line="412" pos:column="87">getHSelf</name></name><argument_list pos:line="412" pos:column="95">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="412" pos:column="99">"MultiMacro"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<break pos:line="414" pos:column="33">break;</break>
				
			}</block></then></if>
		}</block>
		<break pos:line="418" pos:column="17">break;</break>

		</case><case pos:line="420" pos:column="17">case <expr><name pos:line="420" pos:column="22">IDM_MACRO_SAVECURRENTMACRO</name></expr> :
		<block pos:line="421" pos:column="17">{
			<if pos:line="422" pos:column="25">if <condition pos:line="422" pos:column="28">(<expr><call><name pos:line="422" pos:column="29">addCurrentMacro</name><argument_list pos:line="422" pos:column="44">()</argument_list></call></expr>)</condition><then pos:line="422" pos:column="47">
				<expr_stmt><expr><call><name><name pos:line="423" pos:column="33">_runMacroDlg</name><op:operator pos:line="423" pos:column="45">.</op:operator><name pos:line="423" pos:column="46">initMacroList</name></name><argument_list pos:line="423" pos:column="59">()</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="424" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="426" pos:column="17">case <expr><name pos:line="426" pos:column="22">IDM_EDIT_FULLPATHTOCLIP</name></expr> :
		</case><case pos:line="427" pos:column="17">case <expr><name pos:line="427" pos:column="22">IDM_EDIT_CURRENTDIRTOCLIP</name></expr> :
		</case><case pos:line="428" pos:column="17">case <expr><name pos:line="428" pos:column="22">IDM_EDIT_FILENAMETOCLIP</name></expr> :
		<block pos:line="429" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="430" pos:column="25">Buffer</name> <type:modifier pos:line="430" pos:column="32">*</type:modifier></type> <name pos:line="430" pos:column="34">buf</name> <init pos:line="430" pos:column="38">= <expr><call><name><name pos:line="430" pos:column="40">_pEditView</name><op:operator pos:line="430" pos:column="50">-&gt;</op:operator><name pos:line="430" pos:column="52">getCurrentBuffer</name></name><argument_list pos:line="430" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="431" pos:column="25">if <condition pos:line="431" pos:column="28">(<expr><name pos:line="431" pos:column="29">id</name> <op:operator pos:line="431" pos:column="32">==</op:operator> <name pos:line="431" pos:column="35">IDM_EDIT_FULLPATHTOCLIP</name></expr>)</condition><then pos:line="431" pos:column="59">
			<block pos:line="432" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="433" pos:column="33">str2Cliboard</name><argument_list pos:line="433" pos:column="45">(<argument><expr><call><name><name pos:line="433" pos:column="46">buf</name><op:operator pos:line="433" pos:column="49">-&gt;</op:operator><name pos:line="433" pos:column="51">getFullPathName</name></name><argument_list pos:line="433" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="435" pos:column="25">else <if pos:line="435" pos:column="30">if <condition pos:line="435" pos:column="33">(<expr><name pos:line="435" pos:column="34">id</name> <op:operator pos:line="435" pos:column="37">==</op:operator> <name pos:line="435" pos:column="40">IDM_EDIT_CURRENTDIRTOCLIP</name></expr>)</condition><then pos:line="435" pos:column="66">
			<block pos:line="436" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="437" pos:column="33">generic_string</name></type> <name pos:line="437" pos:column="48">dir</name><argument_list pos:line="437" pos:column="51">(<argument><expr><call><name><name pos:line="437" pos:column="52">buf</name><op:operator pos:line="437" pos:column="55">-&gt;</op:operator><name pos:line="437" pos:column="57">getFullPathName</name></name><argument_list pos:line="437" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="438" pos:column="33">PathRemoveFileSpec</name><argument_list pos:line="438" pos:column="51">(<argument><expr><name pos:line="438" pos:column="52">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="439" pos:column="33">str2Cliboard</name><argument_list pos:line="439" pos:column="45">(<argument><expr><call><name><name pos:line="439" pos:column="46">dir</name><op:operator pos:line="439" pos:column="49">.</op:operator><name pos:line="439" pos:column="50">c_str</name></name><argument_list pos:line="439" pos:column="55">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="441" pos:column="25">else <if pos:line="441" pos:column="30">if <condition pos:line="441" pos:column="33">(<expr><name pos:line="441" pos:column="34">id</name> <op:operator pos:line="441" pos:column="37">==</op:operator> <name pos:line="441" pos:column="40">IDM_EDIT_FILENAMETOCLIP</name></expr>)</condition><then pos:line="441" pos:column="64">
			<block pos:line="442" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="443" pos:column="33">str2Cliboard</name><argument_list pos:line="443" pos:column="45">(<argument><expr><call><name><name pos:line="443" pos:column="46">buf</name><op:operator pos:line="443" pos:column="49">-&gt;</op:operator><name pos:line="443" pos:column="51">getFileName</name></name><argument_list pos:line="443" pos:column="62">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if></else></if></else></if>
		}</block>
		<break pos:line="446" pos:column="17">break;</break>

		</case><case pos:line="448" pos:column="17">case <expr><name pos:line="448" pos:column="22">IDM_SEARCH_FIND</name></expr> :
		</case><case pos:line="449" pos:column="17">case <expr><name pos:line="449" pos:column="22">IDM_SEARCH_REPLACE</name></expr> :
		<block pos:line="450" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="451" pos:column="25">const</specifier> <name pos:line="451" pos:column="31">int</name></type> <name pos:line="451" pos:column="35">strSize</name> <init pos:line="451" pos:column="43">= <expr><name pos:line="451" pos:column="45">FINDREPLACE_MAXLENGTH</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="452" pos:column="25">TCHAR</name></type> <name><name pos:line="452" pos:column="31">str</name><index pos:line="452" pos:column="34">[<expr><name pos:line="452" pos:column="35">strSize</name></expr>]</index></name></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="454" pos:column="25">bool</name></type> <name pos:line="454" pos:column="30">isFirstTime</name> <init pos:line="454" pos:column="42">= <expr><op:operator pos:line="454" pos:column="44">!</op:operator><call><name><name pos:line="454" pos:column="45">_findReplaceDlg</name><op:operator pos:line="454" pos:column="60">.</op:operator><name pos:line="454" pos:column="61">isCreated</name></name><argument_list pos:line="454" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="456" pos:column="25">_findReplaceDlg</name><op:operator pos:line="456" pos:column="40">.</op:operator><name pos:line="456" pos:column="41">doDialog</name></name><argument_list pos:line="456" pos:column="49">(<argument><expr><op:operator pos:line="456" pos:column="50">(</op:operator><name pos:line="456" pos:column="51">id</name> <op:operator pos:line="456" pos:column="54">==</op:operator> <name pos:line="456" pos:column="57">IDM_SEARCH_FIND</name><op:operator pos:line="456" pos:column="72">)</op:operator><op:operator pos:line="456" pos:column="73">?</op:operator><name pos:line="456" pos:column="74">FIND_DLG</name><op:operator pos:line="456" pos:column="82">:</op:operator><name pos:line="456" pos:column="83">REPLACE_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="456" pos:column="96">_nativeLangSpeaker</name><op:operator pos:line="456" pos:column="114">.</op:operator><name pos:line="456" pos:column="115">isRTL</name></name><argument_list pos:line="456" pos:column="120">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="458" pos:column="25">_pEditView</name><op:operator pos:line="458" pos:column="35">-&gt;</op:operator><name pos:line="458" pos:column="37">getGenericSelectedText</name></name><argument_list pos:line="458" pos:column="59">(<argument><expr><name pos:line="458" pos:column="60">str</name></expr></argument>, <argument><expr><name pos:line="458" pos:column="65">strSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="459" pos:column="25">_findReplaceDlg</name><op:operator pos:line="459" pos:column="40">.</op:operator><name pos:line="459" pos:column="41">setSearchText</name></name><argument_list pos:line="459" pos:column="54">(<argument><expr><name pos:line="459" pos:column="55">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="460" pos:column="25">setFindReplaceFolderFilter</name><argument_list pos:line="460" pos:column="51">(<argument><expr><name pos:line="460" pos:column="52">NULL</name></expr></argument>, <argument><expr><name pos:line="460" pos:column="58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="462" pos:column="25">if <condition pos:line="462" pos:column="28">(<expr><name pos:line="462" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="462" pos:column="41">
				<expr_stmt><expr><call><name><name pos:line="463" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="463" pos:column="51">.</op:operator><name pos:line="463" pos:column="52">changeFindReplaceDlgLang</name></name><argument_list pos:line="463" pos:column="76">(<argument><expr><name pos:line="463" pos:column="77">_findReplaceDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="464" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="467" pos:column="17">case <expr><name pos:line="467" pos:column="22">IDM_SEARCH_FINDINFILES</name></expr> :
		<block pos:line="468" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="469" pos:column="25">::</op:operator><name pos:line="469" pos:column="27">SendMessage</name></name><argument_list pos:line="469" pos:column="38">(<argument><expr><call><name><name pos:line="469" pos:column="39">_pPublicInterface</name><op:operator pos:line="469" pos:column="56">-&gt;</op:operator><name pos:line="469" pos:column="58">getHSelf</name></name><argument_list pos:line="469" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="469" pos:column="70">NPPM_LAUNCHFINDINFILESDLG</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="469" pos:column="97">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="469" pos:column="100">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="470" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="472" pos:column="17">case <expr><name pos:line="472" pos:column="22">IDM_SEARCH_FINDINCREMENT</name></expr> :
		<block pos:line="473" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="474" pos:column="25">const</specifier> <name pos:line="474" pos:column="31">int</name></type> <name pos:line="474" pos:column="35">strSize</name> <init pos:line="474" pos:column="43">= <expr><name pos:line="474" pos:column="45">FINDREPLACE_MAXLENGTH</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="475" pos:column="25">TCHAR</name></type> <name><name pos:line="475" pos:column="31">str</name><index pos:line="475" pos:column="34">[<expr><name pos:line="475" pos:column="35">strSize</name></expr>]</index></name></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="477" pos:column="25">_pEditView</name><op:operator pos:line="477" pos:column="35">-&gt;</op:operator><name pos:line="477" pos:column="37">getGenericSelectedText</name></name><argument_list pos:line="477" pos:column="59">(<argument><expr><name pos:line="477" pos:column="60">str</name></expr></argument>, <argument><expr><name pos:line="477" pos:column="65">strSize</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="477" pos:column="74">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="478" pos:column="25">if <condition pos:line="478" pos:column="28">(<expr><lit:literal type="number" pos:line="478" pos:column="29">0</lit:literal><op:operator pos:line="478" pos:column="30">!=</op:operator><name><name pos:line="478" pos:column="32">str</name><index pos:line="478" pos:column="35">[<expr><lit:literal type="number" pos:line="478" pos:column="36">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="478" pos:column="39">         <comment type="line" pos:line="478" pos:column="48">// the selected text is not empty, then use it</comment>
			<expr_stmt><expr><call><name><name pos:line="479" pos:column="25">_incrementFindDlg</name><op:operator pos:line="479" pos:column="42">.</op:operator><name pos:line="479" pos:column="43">setSearchText</name></name><argument_list pos:line="479" pos:column="56">(<argument><expr><name pos:line="479" pos:column="57">str</name></expr></argument>, <argument><expr><call><name><name pos:line="479" pos:column="62">_pEditView</name><op:operator pos:line="479" pos:column="72">-&gt;</op:operator><name pos:line="479" pos:column="74">getCurrentBuffer</name></name><argument_list pos:line="479" pos:column="90">()</argument_list></call><op:operator pos:line="479" pos:column="92">-&gt;</op:operator><call><name pos:line="479" pos:column="94">getUnicodeMode</name><argument_list pos:line="479" pos:column="108">()</argument_list></call> <op:operator pos:line="479" pos:column="111">!=</op:operator> <name pos:line="479" pos:column="114">uni8Bit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<expr_stmt><expr><call><name><name pos:line="481" pos:column="25">_incrementFindDlg</name><op:operator pos:line="481" pos:column="42">.</op:operator><name pos:line="481" pos:column="43">display</name></name><argument_list pos:line="481" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="483" pos:column="17">break;</break>

		</case><case pos:line="485" pos:column="17">case <expr><name pos:line="485" pos:column="22">IDM_SEARCH_FINDNEXT</name></expr> :
		</case><case pos:line="486" pos:column="17">case <expr><name pos:line="486" pos:column="22">IDM_SEARCH_FINDPREV</name></expr> :
		<block pos:line="487" pos:column="17">{
			<if pos:line="488" pos:column="25">if <condition pos:line="488" pos:column="28">(<expr><op:operator pos:line="488" pos:column="29">!</op:operator><call><name><name pos:line="488" pos:column="30">_findReplaceDlg</name><op:operator pos:line="488" pos:column="45">.</op:operator><name pos:line="488" pos:column="46">isCreated</name></name><argument_list pos:line="488" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="488" pos:column="58">
				<return pos:line="489" pos:column="33">return;</return></then></if>

			<decl_stmt><decl><type><name pos:line="491" pos:column="25">FindOption</name></type> <name pos:line="491" pos:column="36">op</name> <init pos:line="491" pos:column="39">= <expr><call><name><name pos:line="491" pos:column="41">_findReplaceDlg</name><op:operator pos:line="491" pos:column="56">.</op:operator><name pos:line="491" pos:column="57">getCurrentOptions</name></name><argument_list pos:line="491" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="492" pos:column="25">op</name><op:operator pos:line="492" pos:column="27">.</op:operator><name pos:line="492" pos:column="28">_whichDirection</name></name> <op:operator pos:line="492" pos:column="44">=</op:operator> <op:operator pos:line="492" pos:column="46">(</op:operator><name pos:line="492" pos:column="47">id</name> <op:operator pos:line="492" pos:column="50">==</op:operator> <name pos:line="492" pos:column="53">IDM_SEARCH_FINDNEXT</name><op:operator pos:line="492" pos:column="72">?</op:operator><name pos:line="492" pos:column="73">DIR_DOWN</name><op:operator pos:line="492" pos:column="81">:</op:operator><name pos:line="492" pos:column="82">DIR_UP</name><op:operator pos:line="492" pos:column="88">)</op:operator></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="493" pos:column="25">generic_string</name></type> <name pos:line="493" pos:column="40">s</name> <init pos:line="493" pos:column="42">= <expr><call><name><name pos:line="493" pos:column="44">_findReplaceDlg</name><op:operator pos:line="493" pos:column="59">.</op:operator><name pos:line="493" pos:column="60">getText2search</name></name><argument_list pos:line="493" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="495" pos:column="25">_findReplaceDlg</name><op:operator pos:line="495" pos:column="40">.</op:operator><name pos:line="495" pos:column="41">processFindNext</name></name><argument_list pos:line="495" pos:column="56">(<argument><expr><call><name><name pos:line="495" pos:column="57">s</name><op:operator pos:line="495" pos:column="58">.</op:operator><name pos:line="495" pos:column="59">c_str</name></name><argument_list pos:line="495" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="495" pos:column="68">&amp;</op:operator><name pos:line="495" pos:column="69">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="496" pos:column="25">break;</break>
		}</block>
		<break pos:line="498" pos:column="17">break;</break>

        </case><case pos:line="500" pos:column="9">case <expr><name pos:line="500" pos:column="14">IDM_SEARCH_SETANDFINDNEXT</name></expr> :
		</case><case pos:line="501" pos:column="17">case <expr><name pos:line="501" pos:column="22">IDM_SEARCH_SETANDFINDPREV</name></expr> :
        <block pos:line="502" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="503" pos:column="13">bool</name></type> <name pos:line="503" pos:column="18">isFirstTime</name> <init pos:line="503" pos:column="30">= <expr><op:operator pos:line="503" pos:column="32">!</op:operator><call><name><name pos:line="503" pos:column="33">_findReplaceDlg</name><op:operator pos:line="503" pos:column="48">.</op:operator><name pos:line="503" pos:column="49">isCreated</name></name><argument_list pos:line="503" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="504" pos:column="25">if <condition pos:line="504" pos:column="28">(<expr><name pos:line="504" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="504" pos:column="41">
				<expr_stmt><expr><call><name><name pos:line="505" pos:column="33">_findReplaceDlg</name><op:operator pos:line="505" pos:column="48">.</op:operator><name pos:line="505" pos:column="49">doDialog</name></name><argument_list pos:line="505" pos:column="57">(<argument><expr><name pos:line="505" pos:column="58">FIND_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="505" pos:column="68">_nativeLangSpeaker</name><op:operator pos:line="505" pos:column="86">.</op:operator><name pos:line="505" pos:column="87">isRTL</name></name><argument_list pos:line="505" pos:column="92">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="505" pos:column="96">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><specifier pos:line="507" pos:column="25">const</specifier> <name pos:line="507" pos:column="31">int</name></type> <name pos:line="507" pos:column="35">strSize</name> <init pos:line="507" pos:column="43">= <expr><name pos:line="507" pos:column="45">FINDREPLACE_MAXLENGTH</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="508" pos:column="25">TCHAR</name></type> <name><name pos:line="508" pos:column="31">str</name><index pos:line="508" pos:column="34">[<expr><name pos:line="508" pos:column="35">strSize</name></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="509" pos:column="25">_pEditView</name><op:operator pos:line="509" pos:column="35">-&gt;</op:operator><name pos:line="509" pos:column="37">getGenericSelectedText</name></name><argument_list pos:line="509" pos:column="59">(<argument><expr><name pos:line="509" pos:column="60">str</name></expr></argument>, <argument><expr><name pos:line="509" pos:column="65">strSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="510" pos:column="25">_findReplaceDlg</name><op:operator pos:line="510" pos:column="40">.</op:operator><name pos:line="510" pos:column="41">setSearchText</name></name><argument_list pos:line="510" pos:column="54">(<argument><expr><name pos:line="510" pos:column="55">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="511" pos:column="25">_findReplaceDlg</name><op:operator pos:line="511" pos:column="40">.</op:operator><name pos:line="511" pos:column="41">_env</name><op:operator pos:line="511" pos:column="45">-&gt;</op:operator><name pos:line="511" pos:column="47">_str2Search</name></name> <op:operator pos:line="511" pos:column="59">=</op:operator> <name pos:line="511" pos:column="61">str</name></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="512" pos:column="25">setFindReplaceFolderFilter</name><argument_list pos:line="512" pos:column="51">(<argument><expr><name pos:line="512" pos:column="52">NULL</name></expr></argument>, <argument><expr><name pos:line="512" pos:column="58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="513" pos:column="25">if <condition pos:line="513" pos:column="28">(<expr><name pos:line="513" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="513" pos:column="41">
				<expr_stmt><expr><call><name><name pos:line="514" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="514" pos:column="51">.</op:operator><name pos:line="514" pos:column="52">changeFindReplaceDlgLang</name></name><argument_list pos:line="514" pos:column="76">(<argument><expr><name pos:line="514" pos:column="77">_findReplaceDlg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<decl_stmt><decl><type><name pos:line="516" pos:column="25">FindOption</name></type> <name pos:line="516" pos:column="36">op</name> <init pos:line="516" pos:column="39">= <expr><call><name><name pos:line="516" pos:column="41">_findReplaceDlg</name><op:operator pos:line="516" pos:column="56">.</op:operator><name pos:line="516" pos:column="57">getCurrentOptions</name></name><argument_list pos:line="516" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="517" pos:column="25">op</name><op:operator pos:line="517" pos:column="27">.</op:operator><name pos:line="517" pos:column="28">_whichDirection</name></name> <op:operator pos:line="517" pos:column="44">=</op:operator> <op:operator pos:line="517" pos:column="46">(</op:operator><name pos:line="517" pos:column="47">id</name> <op:operator pos:line="517" pos:column="50">==</op:operator> <name pos:line="517" pos:column="53">IDM_SEARCH_SETANDFINDNEXT</name><op:operator pos:line="517" pos:column="78">?</op:operator><name pos:line="517" pos:column="79">DIR_DOWN</name><op:operator pos:line="517" pos:column="87">:</op:operator><name pos:line="517" pos:column="88">DIR_UP</name><op:operator pos:line="517" pos:column="94">)</op:operator></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="519" pos:column="25">_findReplaceDlg</name><op:operator pos:line="519" pos:column="40">.</op:operator><name pos:line="519" pos:column="41">processFindNext</name></name><argument_list pos:line="519" pos:column="56">(<argument><expr><name pos:line="519" pos:column="57">str</name></expr></argument>, <argument><expr><op:operator pos:line="519" pos:column="62">&amp;</op:operator><name pos:line="519" pos:column="63">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="520" pos:column="25">break;</break>
        }</block>

		</case><case pos:line="523" pos:column="17">case <expr><name pos:line="523" pos:column="22">IDM_SEARCH_GOTONEXTFOUND</name></expr>:
		<block pos:line="524" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="525" pos:column="25">_findReplaceDlg</name><op:operator pos:line="525" pos:column="40">.</op:operator><name pos:line="525" pos:column="41">gotoNextFoundResult</name></name><argument_list pos:line="525" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="526" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="528" pos:column="17">case <expr><name pos:line="528" pos:column="22">IDM_SEARCH_GOTOPREVFOUND</name></expr>:
		<block pos:line="529" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="530" pos:column="25">_findReplaceDlg</name><op:operator pos:line="530" pos:column="40">.</op:operator><name pos:line="530" pos:column="41">gotoNextFoundResult</name></name><argument_list pos:line="530" pos:column="60">(<argument><expr><op:operator pos:line="530" pos:column="61">-</op:operator><lit:literal type="number" pos:line="530" pos:column="62">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="531" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="533" pos:column="17">case <expr><name pos:line="533" pos:column="22">IDM_FOCUS_ON_FOUND_RESULTS</name></expr>:
		<block pos:line="534" pos:column="17">{
			<if pos:line="535" pos:column="25">if <condition pos:line="535" pos:column="28">(<expr><call><name pos:line="535" pos:column="29">GetFocus</name><argument_list pos:line="535" pos:column="37">()</argument_list></call> <op:operator pos:line="535" pos:column="40">==</op:operator> <call><name><name pos:line="535" pos:column="43">_findReplaceDlg</name><op:operator pos:line="535" pos:column="58">.</op:operator><name pos:line="535" pos:column="59">getHFindResults</name></name><argument_list pos:line="535" pos:column="74">()</argument_list></call></expr>)</condition><then pos:line="535" pos:column="77">
				<comment type="line" pos:line="536" pos:column="33">// focus already on found results, switch to current edit view</comment>
				<expr_stmt><expr><call><name pos:line="537" pos:column="33">switchEditViewTo</name><argument_list pos:line="537" pos:column="49">(<argument><expr><call><name pos:line="537" pos:column="50">currentView</name><argument_list pos:line="537" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="538" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="539" pos:column="33">_findReplaceDlg</name><op:operator pos:line="539" pos:column="48">.</op:operator><name pos:line="539" pos:column="49">focusOnFinder</name></name><argument_list pos:line="539" pos:column="62">()</argument_list></call></expr>;</expr_stmt></else></if>
			<break pos:line="540" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="543" pos:column="17">case <expr><name pos:line="543" pos:column="22">IDM_SEARCH_VOLATILE_FINDNEXT</name></expr> :
		</case><case pos:line="544" pos:column="17">case <expr><name pos:line="544" pos:column="22">IDM_SEARCH_VOLATILE_FINDPREV</name></expr> :
		<block pos:line="545" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="546" pos:column="25">TCHAR</name></type> <name><name pos:line="546" pos:column="31">text2Find</name><index pos:line="546" pos:column="40">[<expr><name pos:line="546" pos:column="41">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="547" pos:column="25">_pEditView</name><op:operator pos:line="547" pos:column="35">-&gt;</op:operator><name pos:line="547" pos:column="37">getGenericSelectedText</name></name><argument_list pos:line="547" pos:column="59">(<argument><expr><name pos:line="547" pos:column="60">text2Find</name></expr></argument>, <argument><expr><name pos:line="547" pos:column="71">MAX_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="549" pos:column="25">FindOption</name></type> <name pos:line="549" pos:column="36">op</name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="550" pos:column="25">op</name><op:operator pos:line="550" pos:column="27">.</op:operator><name pos:line="550" pos:column="28">_isWholeWord</name></name> <op:operator pos:line="550" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="550" pos:column="43">false</lit:literal></expr>;</expr_stmt>
			<expr_stmt><expr><name><name pos:line="551" pos:column="25">op</name><op:operator pos:line="551" pos:column="27">.</op:operator><name pos:line="551" pos:column="28">_whichDirection</name></name> <op:operator pos:line="551" pos:column="44">=</op:operator> <op:operator pos:line="551" pos:column="46">(</op:operator><name pos:line="551" pos:column="47">id</name> <op:operator pos:line="551" pos:column="50">==</op:operator> <name pos:line="551" pos:column="53">IDM_SEARCH_VOLATILE_FINDNEXT</name><op:operator pos:line="551" pos:column="81">?</op:operator><name pos:line="551" pos:column="82">DIR_DOWN</name><op:operator pos:line="551" pos:column="90">:</op:operator><name pos:line="551" pos:column="91">DIR_UP</name><op:operator pos:line="551" pos:column="97">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="552" pos:column="25">_findReplaceDlg</name><op:operator pos:line="552" pos:column="40">.</op:operator><name pos:line="552" pos:column="41">processFindNext</name></name><argument_list pos:line="552" pos:column="56">(<argument><expr><name pos:line="552" pos:column="57">text2Find</name></expr></argument>, <argument><expr><op:operator pos:line="552" pos:column="68">&amp;</op:operator><name pos:line="552" pos:column="69">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="553" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="556" pos:column="17">case <expr><name pos:line="556" pos:column="22">IDM_SEARCH_MARKALLEXT1</name></expr> :
		</case><case pos:line="557" pos:column="17">case <expr><name pos:line="557" pos:column="22">IDM_SEARCH_MARKALLEXT2</name></expr> :
		</case><case pos:line="558" pos:column="17">case <expr><name pos:line="558" pos:column="22">IDM_SEARCH_MARKALLEXT3</name></expr> :
		</case><case pos:line="559" pos:column="17">case <expr><name pos:line="559" pos:column="22">IDM_SEARCH_MARKALLEXT4</name></expr> :
		</case><case pos:line="560" pos:column="17">case <expr><name pos:line="560" pos:column="22">IDM_SEARCH_MARKALLEXT5</name></expr> :
		<block pos:line="561" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="562" pos:column="25">int</name></type> <name pos:line="562" pos:column="29">styleID</name></decl>;</decl_stmt>
			<if pos:line="563" pos:column="25">if <condition pos:line="563" pos:column="28">(<expr><name pos:line="563" pos:column="29">id</name> <op:operator pos:line="563" pos:column="32">==</op:operator> <name pos:line="563" pos:column="35">IDM_SEARCH_MARKALLEXT1</name></expr>)</condition><then pos:line="563" pos:column="58">
				<expr_stmt><expr><name pos:line="564" pos:column="33">styleID</name> <op:operator pos:line="564" pos:column="41">=</op:operator> <name pos:line="564" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT1</name></expr>;</expr_stmt></then>
			<else pos:line="565" pos:column="25">else <if pos:line="565" pos:column="30">if <condition pos:line="565" pos:column="33">(<expr><name pos:line="565" pos:column="34">id</name> <op:operator pos:line="565" pos:column="37">==</op:operator> <name pos:line="565" pos:column="40">IDM_SEARCH_MARKALLEXT2</name></expr>)</condition><then pos:line="565" pos:column="63">
				<expr_stmt><expr><name pos:line="566" pos:column="33">styleID</name> <op:operator pos:line="566" pos:column="41">=</op:operator> <name pos:line="566" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT2</name></expr>;</expr_stmt></then>
			<else pos:line="567" pos:column="25">else <if pos:line="567" pos:column="30">if <condition pos:line="567" pos:column="33">(<expr><name pos:line="567" pos:column="34">id</name> <op:operator pos:line="567" pos:column="37">==</op:operator> <name pos:line="567" pos:column="40">IDM_SEARCH_MARKALLEXT3</name></expr>)</condition><then pos:line="567" pos:column="63">
				<expr_stmt><expr><name pos:line="568" pos:column="33">styleID</name> <op:operator pos:line="568" pos:column="41">=</op:operator> <name pos:line="568" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT3</name></expr>;</expr_stmt></then>
			<else pos:line="569" pos:column="25">else <if pos:line="569" pos:column="30">if <condition pos:line="569" pos:column="33">(<expr><name pos:line="569" pos:column="34">id</name> <op:operator pos:line="569" pos:column="37">==</op:operator> <name pos:line="569" pos:column="40">IDM_SEARCH_MARKALLEXT4</name></expr>)</condition><then pos:line="569" pos:column="63">
				<expr_stmt><expr><name pos:line="570" pos:column="33">styleID</name> <op:operator pos:line="570" pos:column="41">=</op:operator> <name pos:line="570" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT4</name></expr>;</expr_stmt></then>
			<else pos:line="571" pos:column="25">else <comment type="line" pos:line="571" pos:column="30">// (id == IDM_SEARCH_MARKALLEXT5)</comment>
				<expr_stmt><expr><name pos:line="572" pos:column="33">styleID</name> <op:operator pos:line="572" pos:column="41">=</op:operator> <name pos:line="572" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT5</name></expr>;</expr_stmt></else></if></else></if></else></if></else></if>

			<decl_stmt><decl><type><specifier pos:line="574" pos:column="25">const</specifier> <name pos:line="574" pos:column="31">int</name></type> <name pos:line="574" pos:column="35">strSize</name> <init pos:line="574" pos:column="43">= <expr><name pos:line="574" pos:column="45">FINDREPLACE_MAXLENGTH</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="575" pos:column="25">TCHAR</name></type> <name><name pos:line="575" pos:column="31">text2Find</name><index pos:line="575" pos:column="40">[<expr><name pos:line="575" pos:column="41">strSize</name></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="576" pos:column="25">_pEditView</name><op:operator pos:line="576" pos:column="35">-&gt;</op:operator><name pos:line="576" pos:column="37">getGenericSelectedText</name></name><argument_list pos:line="576" pos:column="59">(<argument><expr><name pos:line="576" pos:column="60">text2Find</name></expr></argument>, <argument><expr><name pos:line="576" pos:column="71">strSize</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="576" pos:column="80">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if pos:line="577" pos:column="13">if <condition pos:line="577" pos:column="16">(<expr><name><name pos:line="577" pos:column="17">text2Find</name><index pos:line="577" pos:column="26">[<expr><lit:literal type="number" pos:line="577" pos:column="27">0</lit:literal></expr>]</index></name> <op:operator pos:line="577" pos:column="30">==</op:operator> <lit:literal type="char" pos:line="577" pos:column="33">'\0'</lit:literal></expr>)</condition><then pos:line="577" pos:column="38">
            <block pos:line="578" pos:column="13">{
                <expr_stmt><expr><call><name><name pos:line="579" pos:column="17">_pEditView</name><op:operator pos:line="579" pos:column="27">-&gt;</op:operator><name pos:line="579" pos:column="29">getGenericWordOnCaretPos</name></name><argument_list pos:line="579" pos:column="53">(<argument><expr><name pos:line="579" pos:column="54">text2Find</name></expr></argument>, <argument><expr><name pos:line="579" pos:column="65">strSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="581" pos:column="25">_findReplaceDlg</name><op:operator pos:line="581" pos:column="40">.</op:operator><name pos:line="581" pos:column="41">markAll</name></name><argument_list pos:line="581" pos:column="48">(<argument><expr><name pos:line="581" pos:column="49">text2Find</name></expr></argument>, <argument><expr><name pos:line="581" pos:column="60">styleID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:line="583" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="585" pos:column="17">case <expr><name pos:line="585" pos:column="22">IDM_SEARCH_UNMARKALLEXT1</name></expr> :
		</case><case pos:line="586" pos:column="17">case <expr><name pos:line="586" pos:column="22">IDM_SEARCH_UNMARKALLEXT2</name></expr> :
		</case><case pos:line="587" pos:column="17">case <expr><name pos:line="587" pos:column="22">IDM_SEARCH_UNMARKALLEXT3</name></expr> :
		</case><case pos:line="588" pos:column="17">case <expr><name pos:line="588" pos:column="22">IDM_SEARCH_UNMARKALLEXT4</name></expr> :
		</case><case pos:line="589" pos:column="17">case <expr><name pos:line="589" pos:column="22">IDM_SEARCH_UNMARKALLEXT5</name></expr> :
		<block pos:line="590" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="591" pos:column="25">int</name></type> <name pos:line="591" pos:column="29">styleID</name></decl>;</decl_stmt>
			<if pos:line="592" pos:column="25">if <condition pos:line="592" pos:column="28">(<expr><name pos:line="592" pos:column="29">id</name> <op:operator pos:line="592" pos:column="32">==</op:operator> <name pos:line="592" pos:column="35">IDM_SEARCH_UNMARKALLEXT1</name></expr>)</condition><then pos:line="592" pos:column="60">
				<expr_stmt><expr><name pos:line="593" pos:column="33">styleID</name> <op:operator pos:line="593" pos:column="41">=</op:operator> <name pos:line="593" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT1</name></expr>;</expr_stmt></then>
			<else pos:line="594" pos:column="25">else <if pos:line="594" pos:column="30">if <condition pos:line="594" pos:column="33">(<expr><name pos:line="594" pos:column="34">id</name> <op:operator pos:line="594" pos:column="37">==</op:operator> <name pos:line="594" pos:column="40">IDM_SEARCH_UNMARKALLEXT2</name></expr>)</condition><then pos:line="594" pos:column="65">
				<expr_stmt><expr><name pos:line="595" pos:column="33">styleID</name> <op:operator pos:line="595" pos:column="41">=</op:operator> <name pos:line="595" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT2</name></expr>;</expr_stmt></then>
			<else pos:line="596" pos:column="25">else <if pos:line="596" pos:column="30">if <condition pos:line="596" pos:column="33">(<expr><name pos:line="596" pos:column="34">id</name> <op:operator pos:line="596" pos:column="37">==</op:operator> <name pos:line="596" pos:column="40">IDM_SEARCH_UNMARKALLEXT3</name></expr>)</condition><then pos:line="596" pos:column="65">
				<expr_stmt><expr><name pos:line="597" pos:column="33">styleID</name> <op:operator pos:line="597" pos:column="41">=</op:operator> <name pos:line="597" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT3</name></expr>;</expr_stmt></then>
			<else pos:line="598" pos:column="25">else <if pos:line="598" pos:column="30">if <condition pos:line="598" pos:column="33">(<expr><name pos:line="598" pos:column="34">id</name> <op:operator pos:line="598" pos:column="37">==</op:operator> <name pos:line="598" pos:column="40">IDM_SEARCH_UNMARKALLEXT4</name></expr>)</condition><then pos:line="598" pos:column="65">
				<expr_stmt><expr><name pos:line="599" pos:column="33">styleID</name> <op:operator pos:line="599" pos:column="41">=</op:operator> <name pos:line="599" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT4</name></expr>;</expr_stmt></then>
			<else pos:line="600" pos:column="25">else <comment type="line" pos:line="600" pos:column="30">// (id == IDM_SEARCH_UNMARKALLEXT5)</comment>
				<expr_stmt><expr><name pos:line="601" pos:column="33">styleID</name> <op:operator pos:line="601" pos:column="41">=</op:operator> <name pos:line="601" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT5</name></expr>;</expr_stmt></else></if></else></if></else></if></else></if>

			<expr_stmt><expr><call><name><name pos:line="603" pos:column="25">_pEditView</name><op:operator pos:line="603" pos:column="35">-&gt;</op:operator><name pos:line="603" pos:column="37">clearIndicator</name></name><argument_list pos:line="603" pos:column="51">(<argument><expr><name pos:line="603" pos:column="52">styleID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="604" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="607" pos:column="17">case <expr><name pos:line="607" pos:column="22">IDM_SEARCH_GONEXTMARKER1</name></expr> :
		</case><case pos:line="608" pos:column="17">case <expr><name pos:line="608" pos:column="22">IDM_SEARCH_GONEXTMARKER2</name></expr> :
		</case><case pos:line="609" pos:column="17">case <expr><name pos:line="609" pos:column="22">IDM_SEARCH_GONEXTMARKER3</name></expr> :
		</case><case pos:line="610" pos:column="17">case <expr><name pos:line="610" pos:column="22">IDM_SEARCH_GONEXTMARKER4</name></expr> :
		</case><case pos:line="611" pos:column="17">case <expr><name pos:line="611" pos:column="22">IDM_SEARCH_GONEXTMARKER5</name></expr> :
		</case><case pos:line="612" pos:column="17">case <expr><name pos:line="612" pos:column="22">IDM_SEARCH_GONEXTMARKER_DEF</name></expr> :
		<block pos:line="613" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="614" pos:column="25">int</name></type> <name pos:line="614" pos:column="29">styleID</name></decl>;</decl_stmt>
			<if pos:line="615" pos:column="25">if <condition pos:line="615" pos:column="28">(<expr><name pos:line="615" pos:column="29">id</name> <op:operator pos:line="615" pos:column="32">==</op:operator> <name pos:line="615" pos:column="35">IDM_SEARCH_GONEXTMARKER1</name></expr>)</condition><then pos:line="615" pos:column="60">
				<expr_stmt><expr><name pos:line="616" pos:column="33">styleID</name> <op:operator pos:line="616" pos:column="41">=</op:operator> <name pos:line="616" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT1</name></expr>;</expr_stmt></then>
			<else pos:line="617" pos:column="25">else <if pos:line="617" pos:column="30">if <condition pos:line="617" pos:column="33">(<expr><name pos:line="617" pos:column="34">id</name> <op:operator pos:line="617" pos:column="37">==</op:operator> <name pos:line="617" pos:column="40">IDM_SEARCH_GONEXTMARKER2</name></expr>)</condition><then pos:line="617" pos:column="65">
				<expr_stmt><expr><name pos:line="618" pos:column="33">styleID</name> <op:operator pos:line="618" pos:column="41">=</op:operator> <name pos:line="618" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT2</name></expr>;</expr_stmt></then>
			<else pos:line="619" pos:column="25">else <if pos:line="619" pos:column="30">if <condition pos:line="619" pos:column="33">(<expr><name pos:line="619" pos:column="34">id</name> <op:operator pos:line="619" pos:column="37">==</op:operator> <name pos:line="619" pos:column="40">IDM_SEARCH_GONEXTMARKER3</name></expr>)</condition><then pos:line="619" pos:column="65">
				<expr_stmt><expr><name pos:line="620" pos:column="33">styleID</name> <op:operator pos:line="620" pos:column="41">=</op:operator> <name pos:line="620" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT3</name></expr>;</expr_stmt></then>
			<else pos:line="621" pos:column="25">else <if pos:line="621" pos:column="30">if <condition pos:line="621" pos:column="33">(<expr><name pos:line="621" pos:column="34">id</name> <op:operator pos:line="621" pos:column="37">==</op:operator> <name pos:line="621" pos:column="40">IDM_SEARCH_GONEXTMARKER4</name></expr>)</condition><then pos:line="621" pos:column="65">
				<expr_stmt><expr><name pos:line="622" pos:column="33">styleID</name> <op:operator pos:line="622" pos:column="41">=</op:operator> <name pos:line="622" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT4</name></expr>;</expr_stmt></then>
			<else pos:line="623" pos:column="25">else <if pos:line="623" pos:column="30">if <condition pos:line="623" pos:column="33">(<expr><name pos:line="623" pos:column="34">id</name> <op:operator pos:line="623" pos:column="37">==</op:operator> <name pos:line="623" pos:column="40">IDM_SEARCH_GONEXTMARKER5</name></expr>)</condition><then pos:line="623" pos:column="65">
				<expr_stmt><expr><name pos:line="624" pos:column="33">styleID</name> <op:operator pos:line="624" pos:column="41">=</op:operator> <name pos:line="624" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT5</name></expr>;</expr_stmt></then>
			<else pos:line="625" pos:column="25">else <comment type="line" pos:line="625" pos:column="30">// (id == IDM_SEARCH_GONEXTMARKER_DEF)</comment>
				<expr_stmt><expr><name pos:line="626" pos:column="33">styleID</name> <op:operator pos:line="626" pos:column="41">=</op:operator> <name pos:line="626" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE</name></expr>;</expr_stmt></else></if></else></if></else></if></else></if></else></if>

			<expr_stmt><expr><call><name pos:line="628" pos:column="25">goToNextIndicator</name><argument_list pos:line="628" pos:column="42">(<argument><expr><name pos:line="628" pos:column="43">styleID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:line="630" pos:column="25">break;</break>
		}</block>
		
		</case><case pos:line="633" pos:column="17">case <expr><name pos:line="633" pos:column="22">IDM_SEARCH_GOPREVMARKER1</name></expr> :
		</case><case pos:line="634" pos:column="17">case <expr><name pos:line="634" pos:column="22">IDM_SEARCH_GOPREVMARKER2</name></expr> :
		</case><case pos:line="635" pos:column="17">case <expr><name pos:line="635" pos:column="22">IDM_SEARCH_GOPREVMARKER3</name></expr> :
		</case><case pos:line="636" pos:column="17">case <expr><name pos:line="636" pos:column="22">IDM_SEARCH_GOPREVMARKER4</name></expr> :
		</case><case pos:line="637" pos:column="17">case <expr><name pos:line="637" pos:column="22">IDM_SEARCH_GOPREVMARKER5</name></expr> :
		</case><case pos:line="638" pos:column="17">case <expr><name pos:line="638" pos:column="22">IDM_SEARCH_GOPREVMARKER_DEF</name></expr> :
		<block pos:line="639" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="640" pos:column="25">int</name></type> <name pos:line="640" pos:column="29">styleID</name></decl>;</decl_stmt>
			<if pos:line="641" pos:column="25">if <condition pos:line="641" pos:column="28">(<expr><name pos:line="641" pos:column="29">id</name> <op:operator pos:line="641" pos:column="32">==</op:operator> <name pos:line="641" pos:column="35">IDM_SEARCH_GOPREVMARKER1</name></expr>)</condition><then pos:line="641" pos:column="60">
				<expr_stmt><expr><name pos:line="642" pos:column="33">styleID</name> <op:operator pos:line="642" pos:column="41">=</op:operator> <name pos:line="642" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT1</name></expr>;</expr_stmt></then>
			<else pos:line="643" pos:column="25">else <if pos:line="643" pos:column="30">if <condition pos:line="643" pos:column="33">(<expr><name pos:line="643" pos:column="34">id</name> <op:operator pos:line="643" pos:column="37">==</op:operator> <name pos:line="643" pos:column="40">IDM_SEARCH_GOPREVMARKER2</name></expr>)</condition><then pos:line="643" pos:column="65">
				<expr_stmt><expr><name pos:line="644" pos:column="33">styleID</name> <op:operator pos:line="644" pos:column="41">=</op:operator> <name pos:line="644" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT2</name></expr>;</expr_stmt></then>
			<else pos:line="645" pos:column="25">else <if pos:line="645" pos:column="30">if <condition pos:line="645" pos:column="33">(<expr><name pos:line="645" pos:column="34">id</name> <op:operator pos:line="645" pos:column="37">==</op:operator> <name pos:line="645" pos:column="40">IDM_SEARCH_GOPREVMARKER3</name></expr>)</condition><then pos:line="645" pos:column="65">
				<expr_stmt><expr><name pos:line="646" pos:column="33">styleID</name> <op:operator pos:line="646" pos:column="41">=</op:operator> <name pos:line="646" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT3</name></expr>;</expr_stmt></then>
			<else pos:line="647" pos:column="25">else <if pos:line="647" pos:column="30">if <condition pos:line="647" pos:column="33">(<expr><name pos:line="647" pos:column="34">id</name> <op:operator pos:line="647" pos:column="37">==</op:operator> <name pos:line="647" pos:column="40">IDM_SEARCH_GOPREVMARKER4</name></expr>)</condition><then pos:line="647" pos:column="65">
				<expr_stmt><expr><name pos:line="648" pos:column="33">styleID</name> <op:operator pos:line="648" pos:column="41">=</op:operator> <name pos:line="648" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT4</name></expr>;</expr_stmt></then>
			<else pos:line="649" pos:column="25">else <if pos:line="649" pos:column="30">if <condition pos:line="649" pos:column="33">(<expr><name pos:line="649" pos:column="34">id</name> <op:operator pos:line="649" pos:column="37">==</op:operator> <name pos:line="649" pos:column="40">IDM_SEARCH_GOPREVMARKER5</name></expr>)</condition><then pos:line="649" pos:column="65">
				<expr_stmt><expr><name pos:line="650" pos:column="33">styleID</name> <op:operator pos:line="650" pos:column="41">=</op:operator> <name pos:line="650" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE_EXT5</name></expr>;</expr_stmt></then>
			<else pos:line="651" pos:column="25">else <comment type="line" pos:line="651" pos:column="30">// (id == IDM_SEARCH_GOPREVMARKER_DEF)</comment>
				<expr_stmt><expr><name pos:line="652" pos:column="33">styleID</name> <op:operator pos:line="652" pos:column="41">=</op:operator> <name pos:line="652" pos:column="43">SCE_UNIVERSAL_FOUND_STYLE</name></expr>;</expr_stmt></else></if></else></if></else></if></else></if></else></if>

			<expr_stmt><expr><call><name pos:line="654" pos:column="25">goToPreviousIndicator</name><argument_list pos:line="654" pos:column="46">(<argument><expr><name pos:line="654" pos:column="47">styleID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<break pos:line="656" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="659" pos:column="17">case <expr><name pos:line="659" pos:column="22">IDM_SEARCH_CLEARALLMARKS</name></expr> :
		<block pos:line="660" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="661" pos:column="25">_pEditView</name><op:operator pos:line="661" pos:column="35">-&gt;</op:operator><name pos:line="661" pos:column="37">clearIndicator</name></name><argument_list pos:line="661" pos:column="51">(<argument><expr><name pos:line="661" pos:column="52">SCE_UNIVERSAL_FOUND_STYLE_EXT1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="662" pos:column="25">_pEditView</name><op:operator pos:line="662" pos:column="35">-&gt;</op:operator><name pos:line="662" pos:column="37">clearIndicator</name></name><argument_list pos:line="662" pos:column="51">(<argument><expr><name pos:line="662" pos:column="52">SCE_UNIVERSAL_FOUND_STYLE_EXT2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="663" pos:column="25">_pEditView</name><op:operator pos:line="663" pos:column="35">-&gt;</op:operator><name pos:line="663" pos:column="37">clearIndicator</name></name><argument_list pos:line="663" pos:column="51">(<argument><expr><name pos:line="663" pos:column="52">SCE_UNIVERSAL_FOUND_STYLE_EXT3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="664" pos:column="25">_pEditView</name><op:operator pos:line="664" pos:column="35">-&gt;</op:operator><name pos:line="664" pos:column="37">clearIndicator</name></name><argument_list pos:line="664" pos:column="51">(<argument><expr><name pos:line="664" pos:column="52">SCE_UNIVERSAL_FOUND_STYLE_EXT4</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="665" pos:column="25">_pEditView</name><op:operator pos:line="665" pos:column="35">-&gt;</op:operator><name pos:line="665" pos:column="37">clearIndicator</name></name><argument_list pos:line="665" pos:column="51">(<argument><expr><name pos:line="665" pos:column="52">SCE_UNIVERSAL_FOUND_STYLE_EXT5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="666" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="669" pos:column="9">case <expr><name pos:line="669" pos:column="14">IDM_SEARCH_GOTOLINE</name></expr> :
		<block pos:line="670" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="671" pos:column="25">bool</name></type> <name pos:line="671" pos:column="30">isFirstTime</name> <init pos:line="671" pos:column="42">= <expr><op:operator pos:line="671" pos:column="44">!</op:operator><call><name><name pos:line="671" pos:column="45">_goToLineDlg</name><op:operator pos:line="671" pos:column="57">.</op:operator><name pos:line="671" pos:column="58">isCreated</name></name><argument_list pos:line="671" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="672" pos:column="25">_goToLineDlg</name><op:operator pos:line="672" pos:column="37">.</op:operator><name pos:line="672" pos:column="38">doDialog</name></name><argument_list pos:line="672" pos:column="46">(<argument><expr><call><name><name pos:line="672" pos:column="47">_nativeLangSpeaker</name><op:operator pos:line="672" pos:column="65">.</op:operator><name pos:line="672" pos:column="66">isRTL</name></name><argument_list pos:line="672" pos:column="71">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="673" pos:column="25">if <condition pos:line="673" pos:column="28">(<expr><name pos:line="673" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="673" pos:column="41">
				<expr_stmt><expr><call><name><name pos:line="674" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="674" pos:column="51">.</op:operator><name pos:line="674" pos:column="52">changeDlgLang</name></name><argument_list pos:line="674" pos:column="65">(<argument><expr><call><name><name pos:line="674" pos:column="66">_goToLineDlg</name><op:operator pos:line="674" pos:column="78">.</op:operator><name pos:line="674" pos:column="79">getHSelf</name></name><argument_list pos:line="674" pos:column="87">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="674" pos:column="91">"GoToLine"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="675" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="678" pos:column="17">case <expr><name pos:line="678" pos:column="22">IDM_SEARCH_FINDCHARINRANGE</name></expr> :
		<block pos:line="679" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="680" pos:column="25">bool</name></type> <name pos:line="680" pos:column="30">isFirstTime</name> <init pos:line="680" pos:column="42">= <expr><op:operator pos:line="680" pos:column="44">!</op:operator><call><name><name pos:line="680" pos:column="45">_findCharsInRangeDlg</name><op:operator pos:line="680" pos:column="65">.</op:operator><name pos:line="680" pos:column="66">isCreated</name></name><argument_list pos:line="680" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="681" pos:column="25">_findCharsInRangeDlg</name><op:operator pos:line="681" pos:column="45">.</op:operator><name pos:line="681" pos:column="46">doDialog</name></name><argument_list pos:line="681" pos:column="54">(<argument><expr><call><name><name pos:line="681" pos:column="55">_nativeLangSpeaker</name><op:operator pos:line="681" pos:column="73">.</op:operator><name pos:line="681" pos:column="74">isRTL</name></name><argument_list pos:line="681" pos:column="79">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="682" pos:column="25">if <condition pos:line="682" pos:column="28">(<expr><name pos:line="682" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="682" pos:column="41">
				<expr_stmt><expr><call><name><name pos:line="683" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="683" pos:column="51">.</op:operator><name pos:line="683" pos:column="52">changeDlgLang</name></name><argument_list pos:line="683" pos:column="65">(<argument><expr><call><name><name pos:line="683" pos:column="66">_findCharsInRangeDlg</name><op:operator pos:line="683" pos:column="86">.</op:operator><name pos:line="683" pos:column="87">getHSelf</name></name><argument_list pos:line="683" pos:column="95">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="683" pos:column="99">"FindCharsInRange"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="684" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="687" pos:column="9">case <expr><name pos:line="687" pos:column="14">IDM_EDIT_COLUMNMODETIP</name></expr> :
		<block pos:line="688" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="689" pos:column="25">_nativeLangSpeaker</name><op:operator pos:line="689" pos:column="43">.</op:operator><name pos:line="689" pos:column="44">messageBox</name></name><argument_list pos:line="689" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="689" pos:column="55">"ColumnModeTip"</lit:literal></expr></argument>,
					<argument><expr><call><name><name pos:line="690" pos:column="41">_pPublicInterface</name><op:operator pos:line="690" pos:column="58">-&gt;</op:operator><name pos:line="690" pos:column="60">getHSelf</name></name><argument_list pos:line="690" pos:column="68">()</argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="691" pos:column="41">TEXT</name><argument_list pos:line="691" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="691" pos:column="46">"Please use \"ALT+Mouse Selection\" or \"Alt+Shift+Arrow key\" to switch to column mode."</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="692" pos:column="41">TEXT</name><argument_list pos:line="692" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="692" pos:column="46">"Column Mode Tip"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><name pos:line="693" pos:column="41">MB_OK</name><op:operator pos:line="693" pos:column="46">|</op:operator><name pos:line="693" pos:column="47">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="694" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="697" pos:column="9">case <expr><name pos:line="697" pos:column="14">IDM_EDIT_COLUMNMODE</name></expr> :
		<block pos:line="698" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="699" pos:column="25">bool</name></type> <name pos:line="699" pos:column="30">isFirstTime</name> <init pos:line="699" pos:column="42">= <expr><op:operator pos:line="699" pos:column="44">!</op:operator><call><name><name pos:line="699" pos:column="45">_colEditorDlg</name><op:operator pos:line="699" pos:column="58">.</op:operator><name pos:line="699" pos:column="59">isCreated</name></name><argument_list pos:line="699" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="700" pos:column="25">_colEditorDlg</name><op:operator pos:line="700" pos:column="38">.</op:operator><name pos:line="700" pos:column="39">doDialog</name></name><argument_list pos:line="700" pos:column="47">(<argument><expr><call><name><name pos:line="700" pos:column="48">_nativeLangSpeaker</name><op:operator pos:line="700" pos:column="66">.</op:operator><name pos:line="700" pos:column="67">isRTL</name></name><argument_list pos:line="700" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="701" pos:column="25">if <condition pos:line="701" pos:column="28">(<expr><name pos:line="701" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="701" pos:column="41">
				<expr_stmt><expr><call><name><name pos:line="702" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="702" pos:column="51">.</op:operator><name pos:line="702" pos:column="52">changeDlgLang</name></name><argument_list pos:line="702" pos:column="65">(<argument><expr><call><name><name pos:line="702" pos:column="66">_colEditorDlg</name><op:operator pos:line="702" pos:column="79">.</op:operator><name pos:line="702" pos:column="80">getHSelf</name></name><argument_list pos:line="702" pos:column="88">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="702" pos:column="92">"ColumnEditor"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="703" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="706" pos:column="17">case <expr><name pos:line="706" pos:column="22">IDM_SEARCH_GOTOMATCHINGBRACE</name></expr> :
		<block pos:line="707" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="708" pos:column="25">int</name></type> <name pos:line="708" pos:column="29">braceAtCaret</name> <init pos:line="708" pos:column="42">= <expr><op:operator pos:line="708" pos:column="44">-</op:operator><lit:literal type="number" pos:line="708" pos:column="45">1</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="709" pos:column="25">int</name></type> <name pos:line="709" pos:column="29">braceOpposite</name> <init pos:line="709" pos:column="43">= <expr><op:operator pos:line="709" pos:column="45">-</op:operator><lit:literal type="number" pos:line="709" pos:column="46">1</lit:literal></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="710" pos:column="25">findMatchingBracePos</name><argument_list pos:line="710" pos:column="45">(<argument><expr><name pos:line="710" pos:column="46">braceAtCaret</name></expr></argument>, <argument><expr><name pos:line="710" pos:column="60">braceOpposite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<if pos:line="712" pos:column="25">if <condition pos:line="712" pos:column="28">(<expr><name pos:line="712" pos:column="29">braceOpposite</name> <op:operator pos:line="712" pos:column="43">!=</op:operator> <op:operator pos:line="712" pos:column="46">-</op:operator><lit:literal type="number" pos:line="712" pos:column="47">1</lit:literal></expr>)</condition><then pos:line="712" pos:column="49">
				<expr_stmt><expr><call><name><name pos:line="713" pos:column="33">_pEditView</name><op:operator pos:line="713" pos:column="43">-&gt;</op:operator><name pos:line="713" pos:column="45">execute</name></name><argument_list pos:line="713" pos:column="52">(<argument><expr><name pos:line="713" pos:column="53">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="713" pos:column="66">braceOpposite</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="714" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="717" pos:column="9">case <expr><name pos:line="717" pos:column="14">IDM_SEARCH_TOGGLE_BOOKMARK</name></expr> :
	        <expr_stmt><expr><call><name pos:line="718" pos:column="17">bookmarkToggle</name><argument_list pos:line="718" pos:column="31">(<argument><expr><op:operator pos:line="718" pos:column="32">-</op:operator><lit:literal type="number" pos:line="718" pos:column="33">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:line="719" pos:column="13">break;</break>

	    </case><case pos:line="721" pos:column="13">case <expr><name pos:line="721" pos:column="18">IDM_SEARCH_NEXT_BOOKMARK</name></expr>:
		    <expr_stmt><expr><call><name pos:line="722" pos:column="21">bookmarkNext</name><argument_list pos:line="722" pos:column="33">(<argument><expr><lit:literal type="boolean" pos:line="722" pos:column="34">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		    <break pos:line="723" pos:column="21">break;</break>

	    </case><case pos:line="725" pos:column="13">case <expr><name pos:line="725" pos:column="18">IDM_SEARCH_PREV_BOOKMARK</name></expr>:
		    <expr_stmt><expr><call><name pos:line="726" pos:column="21">bookmarkNext</name><argument_list pos:line="726" pos:column="33">(<argument><expr><lit:literal type="boolean" pos:line="726" pos:column="34">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		    <break pos:line="727" pos:column="21">break;</break>

	    </case><case pos:line="729" pos:column="13">case <expr><name pos:line="729" pos:column="18">IDM_SEARCH_CLEAR_BOOKMARKS</name></expr>:
			<expr_stmt><expr><call><name pos:line="730" pos:column="25">bookmarkClearAll</name><argument_list pos:line="730" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
		    <break pos:line="731" pos:column="21">break;</break>
			
        </case><case pos:line="733" pos:column="9">case <expr><name pos:line="733" pos:column="14">IDM_LANG_USER_DLG</name></expr> :
        <block pos:line="734" pos:column="9">{
		    <decl_stmt><decl><type><name pos:line="735" pos:column="21">bool</name></type> <name pos:line="735" pos:column="26">isUDDlgVisible</name> <init pos:line="735" pos:column="41">= <expr><lit:literal type="boolean" pos:line="735" pos:column="43">false</lit:literal></expr></init></decl>;</decl_stmt>
                
		    <decl_stmt><decl><type><name pos:line="737" pos:column="21">UserDefineDialog</name> <type:modifier pos:line="737" pos:column="38">*</type:modifier></type><name pos:line="737" pos:column="39">udd</name> <init pos:line="737" pos:column="43">= <expr><call><name><name pos:line="737" pos:column="45">_pEditView</name><op:operator pos:line="737" pos:column="55">-&gt;</op:operator><name pos:line="737" pos:column="57">getUserDefineDlg</name></name><argument_list pos:line="737" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>

		    <if pos:line="739" pos:column="21">if <condition pos:line="739" pos:column="24">(<expr><op:operator pos:line="739" pos:column="25">!</op:operator><call><name><name pos:line="739" pos:column="26">udd</name><op:operator pos:line="739" pos:column="29">-&gt;</op:operator><name pos:line="739" pos:column="31">isCreated</name></name><argument_list pos:line="739" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="739" pos:column="43">
		    <block pos:line="740" pos:column="21">{
			    <expr_stmt><expr><call><name><name pos:line="741" pos:column="29">_pEditView</name><op:operator pos:line="741" pos:column="39">-&gt;</op:operator><name pos:line="741" pos:column="41">doUserDefineDlg</name></name><argument_list pos:line="741" pos:column="56">(<argument><expr><lit:literal type="boolean" pos:line="741" pos:column="57">true</lit:literal></expr></argument>, <argument><expr><call><name><name pos:line="741" pos:column="63">_nativeLangSpeaker</name><op:operator pos:line="741" pos:column="81">.</op:operator><name pos:line="741" pos:column="82">isRTL</name></name><argument_list pos:line="741" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="742" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="742" pos:column="51">.</op:operator><name pos:line="742" pos:column="52">changeUserDefineLang</name></name><argument_list pos:line="742" pos:column="72">(<argument><expr><name pos:line="742" pos:column="73">udd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="743" pos:column="33">if <condition pos:line="743" pos:column="36">(<expr><name pos:line="743" pos:column="37">_isUDDocked</name></expr>)</condition><then pos:line="743" pos:column="49">
					<expr_stmt><expr><call><name><op:operator pos:line="744" pos:column="41">::</op:operator><name pos:line="744" pos:column="43">SendMessage</name></name><argument_list pos:line="744" pos:column="54">(<argument><expr><call><name><name pos:line="744" pos:column="55">udd</name><op:operator pos:line="744" pos:column="58">-&gt;</op:operator><name pos:line="744" pos:column="60">getHSelf</name></name><argument_list pos:line="744" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="744" pos:column="72">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="744" pos:column="84">IDC_DOCK_BUTTON</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="744" pos:column="101">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		    }</block></then>
			<else pos:line="747" pos:column="25">else
			<block pos:line="748" pos:column="25">{
				<expr_stmt><expr><name pos:line="749" pos:column="33">isUDDlgVisible</name> <op:operator pos:line="749" pos:column="48">=</op:operator> <call><name><name pos:line="749" pos:column="50">udd</name><op:operator pos:line="749" pos:column="53">-&gt;</op:operator><name pos:line="749" pos:column="55">isVisible</name></name><argument_list pos:line="749" pos:column="64">()</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="750" pos:column="33">bool</name></type> <name pos:line="750" pos:column="38">isUDDlgDocked</name> <init pos:line="750" pos:column="52">= <expr><call><name><name pos:line="750" pos:column="54">udd</name><op:operator pos:line="750" pos:column="57">-&gt;</op:operator><name pos:line="750" pos:column="59">isDocked</name></name><argument_list pos:line="750" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>

				<if pos:line="752" pos:column="33">if <condition pos:line="752" pos:column="36">(<expr><op:operator pos:line="752" pos:column="37">(</op:operator><name pos:line="752" pos:column="38">isUDDlgDocked</name><op:operator pos:line="752" pos:column="51">)</op:operator><op:operator pos:line="752" pos:column="52">&amp;&amp;</op:operator><op:operator pos:line="752" pos:column="54">(</op:operator><name pos:line="752" pos:column="55">isUDDlgVisible</name><op:operator pos:line="752" pos:column="69">)</op:operator></expr>)</condition><then pos:line="752" pos:column="71">
				<block pos:line="753" pos:column="33">{
					<expr_stmt><expr><call><name><op:operator pos:line="754" pos:column="41">::</op:operator><name pos:line="754" pos:column="43">ShowWindow</name></name><argument_list pos:line="754" pos:column="53">(<argument><expr><call><name><name pos:line="754" pos:column="54">_pMainSplitter</name><op:operator pos:line="754" pos:column="68">-&gt;</op:operator><name pos:line="754" pos:column="70">getHSelf</name></name><argument_list pos:line="754" pos:column="78">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="754" pos:column="82">SW_HIDE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<if pos:line="756" pos:column="41">if <condition pos:line="756" pos:column="44">(<expr><call><name pos:line="756" pos:column="45">bothActive</name><argument_list pos:line="756" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="756" pos:column="58">
						<expr_stmt><expr><name pos:line="757" pos:column="49">_pMainWindow</name> <op:operator pos:line="757" pos:column="62">=</op:operator> <op:operator pos:line="757" pos:column="64">&amp;</op:operator><name pos:line="757" pos:column="65">_subSplitter</name></expr>;</expr_stmt></then>
					<else pos:line="758" pos:column="41">else
						<expr_stmt><expr><name pos:line="759" pos:column="49">_pMainWindow</name> <op:operator pos:line="759" pos:column="62">=</op:operator> <name pos:line="759" pos:column="64">_pDocTab</name></expr>;</expr_stmt></else></if>

					<expr_stmt><expr><call><name><op:operator pos:line="761" pos:column="41">::</op:operator><name pos:line="761" pos:column="43">SendMessage</name></name><argument_list pos:line="761" pos:column="54">(<argument><expr><call><name><name pos:line="761" pos:column="55">_pPublicInterface</name><op:operator pos:line="761" pos:column="72">-&gt;</op:operator><name pos:line="761" pos:column="74">getHSelf</name></name><argument_list pos:line="761" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="761" pos:column="86">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="761" pos:column="95">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="761" pos:column="98">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					
					<expr_stmt><expr><call><name><name pos:line="763" pos:column="41">udd</name><op:operator pos:line="763" pos:column="44">-&gt;</op:operator><name pos:line="763" pos:column="46">display</name></name><argument_list pos:line="763" pos:column="53">(<argument><expr><lit:literal type="boolean" pos:line="763" pos:column="54">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="764" pos:column="41">_mainWindowStatus</name> <op:operator pos:line="764" pos:column="59">&amp;=</op:operator> <op:operator pos:line="764" pos:column="62">~</op:operator><name pos:line="764" pos:column="63">WindowUserActive</name></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="766" pos:column="33">else <if pos:line="766" pos:column="38">if <condition pos:line="766" pos:column="41">(<expr><op:operator pos:line="766" pos:column="42">(</op:operator><name pos:line="766" pos:column="43">isUDDlgDocked</name><op:operator pos:line="766" pos:column="56">)</op:operator><op:operator pos:line="766" pos:column="57">&amp;&amp;</op:operator><op:operator pos:line="766" pos:column="59">(</op:operator><op:operator pos:line="766" pos:column="60">!</op:operator><name pos:line="766" pos:column="61">isUDDlgVisible</name><op:operator pos:line="766" pos:column="75">)</op:operator></expr>)</condition><then pos:line="766" pos:column="77">
				<block pos:line="767" pos:column="33">{
                    <if pos:line="768" pos:column="21">if <condition pos:line="768" pos:column="24">(<expr><op:operator pos:line="768" pos:column="25">!</op:operator><name pos:line="768" pos:column="26">_pMainSplitter</name></expr>)</condition><then pos:line="768" pos:column="41">
                    <block pos:line="769" pos:column="21">{
                        <expr_stmt><expr><name pos:line="770" pos:column="25">_pMainSplitter</name> <op:operator pos:line="770" pos:column="40">=</op:operator> <op:operator pos:line="770" pos:column="42">new</op:operator> <name pos:line="770" pos:column="46">SplitterContainer</name></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="771" pos:column="25">_pMainSplitter</name><op:operator pos:line="771" pos:column="39">-&gt;</op:operator><name pos:line="771" pos:column="41">init</name></name><argument_list pos:line="771" pos:column="45">(<argument><expr><call><name><name pos:line="771" pos:column="46">_pPublicInterface</name><op:operator pos:line="771" pos:column="63">-&gt;</op:operator><name pos:line="771" pos:column="65">getHinst</name></name><argument_list pos:line="771" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="771" pos:column="77">_pPublicInterface</name><op:operator pos:line="771" pos:column="94">-&gt;</op:operator><name pos:line="771" pos:column="96">getHSelf</name></name><argument_list pos:line="771" pos:column="104">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <decl_stmt><decl><type><name pos:line="773" pos:column="25">Window</name> <type:modifier pos:line="773" pos:column="32">*</type:modifier></type><name pos:line="773" pos:column="33">pWindow</name></decl>;</decl_stmt>
                        <if pos:line="774" pos:column="25">if <condition pos:line="774" pos:column="28">(<expr><call><name pos:line="774" pos:column="29">bothActive</name><argument_list pos:line="774" pos:column="39">()</argument_list></call></expr>)</condition><then pos:line="774" pos:column="42">
                            <expr_stmt><expr><name pos:line="775" pos:column="29">pWindow</name> <op:operator pos:line="775" pos:column="37">=</op:operator> <op:operator pos:line="775" pos:column="39">&amp;</op:operator><name pos:line="775" pos:column="40">_subSplitter</name></expr>;</expr_stmt></then>
                        <else pos:line="776" pos:column="25">else
                            <expr_stmt><expr><name pos:line="777" pos:column="29">pWindow</name> <op:operator pos:line="777" pos:column="37">=</op:operator> <name pos:line="777" pos:column="39">_pDocTab</name></expr>;</expr_stmt></else></if>

                        <expr_stmt><expr><call><name><name pos:line="779" pos:column="25">_pMainSplitter</name><op:operator pos:line="779" pos:column="39">-&gt;</op:operator><name pos:line="779" pos:column="41">create</name></name><argument_list pos:line="779" pos:column="47">(<argument><expr><name pos:line="779" pos:column="48">pWindow</name></expr></argument>, <argument><expr><call><name><name pos:line="779" pos:column="57">ScintillaEditView</name><op:operator pos:line="779" pos:column="74">::</op:operator><name pos:line="779" pos:column="76">getUserDefineDlg</name></name><argument_list pos:line="779" pos:column="92">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="779" pos:column="96">8</lit:literal></expr></argument>, <argument><expr><name pos:line="779" pos:column="99">RIGHT_FIX</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="779" pos:column="110">45</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
                    }</block></then></if>

					<expr_stmt><expr><name pos:line="782" pos:column="41">_pMainWindow</name> <op:operator pos:line="782" pos:column="54">=</op:operator> <name pos:line="782" pos:column="56">_pMainSplitter</name></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><name pos:line="784" pos:column="41">_pMainSplitter</name><op:operator pos:line="784" pos:column="55">-&gt;</op:operator><name pos:line="784" pos:column="57">setWin0</name></name><argument_list pos:line="784" pos:column="64">(<argument><expr><op:operator pos:line="784" pos:column="65">(</op:operator><call><name pos:line="784" pos:column="66">bothActive</name><argument_list pos:line="784" pos:column="76">()</argument_list></call><op:operator pos:line="784" pos:column="78">)</op:operator><op:operator pos:line="784" pos:column="79">?</op:operator><op:operator pos:line="784" pos:column="80">(</op:operator><name pos:line="784" pos:column="81">Window</name> <op:operator pos:line="784" pos:column="88">*</op:operator><op:operator pos:line="784" pos:column="89">)</op:operator><op:operator pos:line="784" pos:column="90">&amp;</op:operator><name pos:line="784" pos:column="91">_subSplitter</name><op:operator pos:line="784" pos:column="103">:</op:operator><op:operator pos:line="784" pos:column="104">(</op:operator><name pos:line="784" pos:column="105">Window</name> <op:operator pos:line="784" pos:column="112">*</op:operator><op:operator pos:line="784" pos:column="113">)</op:operator><name pos:line="784" pos:column="114">_pDocTab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><call><name><op:operator pos:line="786" pos:column="41">::</op:operator><name pos:line="786" pos:column="43">SendMessage</name></name><argument_list pos:line="786" pos:column="54">(<argument><expr><call><name><name pos:line="786" pos:column="55">_pPublicInterface</name><op:operator pos:line="786" pos:column="72">-&gt;</op:operator><name pos:line="786" pos:column="74">getHSelf</name></name><argument_list pos:line="786" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="786" pos:column="86">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="786" pos:column="95">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="786" pos:column="98">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="787" pos:column="41">_pMainWindow</name><op:operator pos:line="787" pos:column="53">-&gt;</op:operator><name pos:line="787" pos:column="55">display</name></name><argument_list pos:line="787" pos:column="62">()</argument_list></call></expr>;</expr_stmt>

					<expr_stmt><expr><name pos:line="789" pos:column="41">_mainWindowStatus</name> <op:operator pos:line="789" pos:column="59">|=</op:operator> <name pos:line="789" pos:column="62">WindowUserActive</name></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="791" pos:column="33">else <if pos:line="791" pos:column="38">if <condition pos:line="791" pos:column="41">(<expr><op:operator pos:line="791" pos:column="42">(</op:operator><op:operator pos:line="791" pos:column="43">!</op:operator><name pos:line="791" pos:column="44">isUDDlgDocked</name><op:operator pos:line="791" pos:column="57">)</op:operator><op:operator pos:line="791" pos:column="58">&amp;&amp;</op:operator><op:operator pos:line="791" pos:column="60">(</op:operator><name pos:line="791" pos:column="61">isUDDlgVisible</name><op:operator pos:line="791" pos:column="75">)</op:operator></expr>)</condition><then pos:line="791" pos:column="77">
				<block pos:line="792" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="793" pos:column="41">udd</name><op:operator pos:line="793" pos:column="44">-&gt;</op:operator><name pos:line="793" pos:column="46">display</name></name><argument_list pos:line="793" pos:column="53">(<argument><expr><lit:literal type="boolean" pos:line="793" pos:column="54">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="795" pos:column="33">else <comment type="line" pos:line="795" pos:column="38">//((!isUDDlgDocked)&amp;&amp;(!isUDDlgVisible))</comment>
					<expr_stmt><expr><call><name><name pos:line="796" pos:column="41">udd</name><op:operator pos:line="796" pos:column="44">-&gt;</op:operator><name pos:line="796" pos:column="46">display</name></name><argument_list pos:line="796" pos:column="53">()</argument_list></call></expr>;</expr_stmt></else></if></else></if></else></if>
			}</block></else></if>
			<expr_stmt><expr><call><name pos:line="798" pos:column="25">checkMenuItem</name><argument_list pos:line="798" pos:column="38">(<argument><expr><name pos:line="798" pos:column="39">IDM_LANG_USER_DLG</name></expr></argument>, <argument><expr><op:operator pos:line="798" pos:column="58">!</op:operator><name pos:line="798" pos:column="59">isUDDlgVisible</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="799" pos:column="25">_toolBar</name><op:operator pos:line="799" pos:column="33">.</op:operator><name pos:line="799" pos:column="34">setCheck</name></name><argument_list pos:line="799" pos:column="42">(<argument><expr><name pos:line="799" pos:column="43">IDM_LANG_USER_DLG</name></expr></argument>, <argument><expr><op:operator pos:line="799" pos:column="62">!</op:operator><name pos:line="799" pos:column="63">isUDDlgVisible</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:line="801" pos:column="13">break;</break>
        }</block>

		</case><case pos:line="804" pos:column="17">case <expr><name pos:line="804" pos:column="22">IDM_EDIT_SELECTALL</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="805" pos:column="25">_pEditView</name><op:operator pos:line="805" pos:column="35">-&gt;</op:operator><name pos:line="805" pos:column="37">execute</name></name><argument_list pos:line="805" pos:column="44">(<argument><expr><name pos:line="805" pos:column="45">SCI_SELECTALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="806" pos:column="25">checkClipboard</name><argument_list pos:line="806" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="807" pos:column="25">break;</break>

		</case><case pos:line="809" pos:column="17">case <expr><name pos:line="809" pos:column="22">IDM_EDIT_INS_TAB</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="810" pos:column="25">_pEditView</name><op:operator pos:line="810" pos:column="35">-&gt;</op:operator><name pos:line="810" pos:column="37">execute</name></name><argument_list pos:line="810" pos:column="44">(<argument><expr><name pos:line="810" pos:column="45">SCI_TAB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="811" pos:column="25">break;</break>

		</case><case pos:line="813" pos:column="17">case <expr><name pos:line="813" pos:column="22">IDM_EDIT_RMV_TAB</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="814" pos:column="25">_pEditView</name><op:operator pos:line="814" pos:column="35">-&gt;</op:operator><name pos:line="814" pos:column="37">execute</name></name><argument_list pos:line="814" pos:column="44">(<argument><expr><name pos:line="814" pos:column="45">SCI_BACKTAB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="815" pos:column="25">break;</break>

		</case><case pos:line="817" pos:column="17">case <expr><name pos:line="817" pos:column="22">IDM_EDIT_DUP_LINE</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="818" pos:column="25">_pEditView</name><op:operator pos:line="818" pos:column="35">-&gt;</op:operator><name pos:line="818" pos:column="37">execute</name></name><argument_list pos:line="818" pos:column="44">(<argument><expr><name pos:line="818" pos:column="45">SCI_LINEDUPLICATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="819" pos:column="25">break;</break>

		</case><case pos:line="821" pos:column="17">case <expr><name pos:line="821" pos:column="22">IDM_EDIT_SPLIT_LINES</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="822" pos:column="25">_pEditView</name><op:operator pos:line="822" pos:column="35">-&gt;</op:operator><name pos:line="822" pos:column="37">execute</name></name><argument_list pos:line="822" pos:column="44">(<argument><expr><name pos:line="822" pos:column="45">SCI_TARGETFROMSELECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="823" pos:column="25">_pEditView</name><op:operator pos:line="823" pos:column="35">-&gt;</op:operator><name pos:line="823" pos:column="37">execute</name></name><argument_list pos:line="823" pos:column="44">(<argument><expr><name pos:line="823" pos:column="45">SCI_LINESSPLIT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="824" pos:column="25">break;</break>

		</case><case pos:line="826" pos:column="17">case <expr><name pos:line="826" pos:column="22">IDM_EDIT_JOIN_LINES</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="827" pos:column="25">_pEditView</name><op:operator pos:line="827" pos:column="35">-&gt;</op:operator><name pos:line="827" pos:column="37">execute</name></name><argument_list pos:line="827" pos:column="44">(<argument><expr><name pos:line="827" pos:column="45">SCI_TARGETFROMSELECTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="828" pos:column="25">_pEditView</name><op:operator pos:line="828" pos:column="35">-&gt;</op:operator><name pos:line="828" pos:column="37">execute</name></name><argument_list pos:line="828" pos:column="44">(<argument><expr><name pos:line="828" pos:column="45">SCI_LINESJOIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="829" pos:column="25">break;</break>

		</case><case pos:line="831" pos:column="17">case <expr><name pos:line="831" pos:column="22">IDM_EDIT_LINE_UP</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="832" pos:column="25">_pEditView</name><op:operator pos:line="832" pos:column="35">-&gt;</op:operator><name pos:line="832" pos:column="37">currentLinesUp</name></name><argument_list pos:line="832" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="833" pos:column="25">break;</break>

		</case><case pos:line="835" pos:column="17">case <expr><name pos:line="835" pos:column="22">IDM_EDIT_LINE_DOWN</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="836" pos:column="25">_pEditView</name><op:operator pos:line="836" pos:column="35">-&gt;</op:operator><name pos:line="836" pos:column="37">currentLinesDown</name></name><argument_list pos:line="836" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="837" pos:column="25">break;</break>

		</case><case pos:line="839" pos:column="17">case <expr><name pos:line="839" pos:column="22">IDM_EDIT_REMOVEEMPTYLINES</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="840" pos:column="25">_pEditView</name><op:operator pos:line="840" pos:column="35">-&gt;</op:operator><name pos:line="840" pos:column="37">execute</name></name><argument_list pos:line="840" pos:column="44">(<argument><expr><name pos:line="840" pos:column="45">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="841" pos:column="25">removeEmptyLine</name><argument_list pos:line="841" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="841" pos:column="41">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="842" pos:column="25">_pEditView</name><op:operator pos:line="842" pos:column="35">-&gt;</op:operator><name pos:line="842" pos:column="37">execute</name></name><argument_list pos:line="842" pos:column="44">(<argument><expr><name pos:line="842" pos:column="45">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="843" pos:column="25">break;</break>

		</case><case pos:line="845" pos:column="17">case <expr><name pos:line="845" pos:column="22">IDM_EDIT_REMOVEEMPTYLINESWITHBLANK</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="846" pos:column="25">_pEditView</name><op:operator pos:line="846" pos:column="35">-&gt;</op:operator><name pos:line="846" pos:column="37">execute</name></name><argument_list pos:line="846" pos:column="44">(<argument><expr><name pos:line="846" pos:column="45">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="847" pos:column="25">removeEmptyLine</name><argument_list pos:line="847" pos:column="40">(<argument><expr><lit:literal type="boolean" pos:line="847" pos:column="41">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="848" pos:column="25">_pEditView</name><op:operator pos:line="848" pos:column="35">-&gt;</op:operator><name pos:line="848" pos:column="37">execute</name></name><argument_list pos:line="848" pos:column="44">(<argument><expr><name pos:line="848" pos:column="45">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="849" pos:column="25">break;</break>

		</case><case pos:line="851" pos:column="17">case <expr><name pos:line="851" pos:column="22">IDM_EDIT_UPPERCASE</name></expr>:
            <expr_stmt><expr><call><name><name pos:line="852" pos:column="13">_pEditView</name><op:operator pos:line="852" pos:column="23">-&gt;</op:operator><name pos:line="852" pos:column="25">convertSelectedTextToUpperCase</name></name><argument_list pos:line="852" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="853" pos:column="25">break;</break>

		</case><case pos:line="855" pos:column="17">case <expr><name pos:line="855" pos:column="22">IDM_EDIT_LOWERCASE</name></expr>:
            <expr_stmt><expr><call><name><name pos:line="856" pos:column="13">_pEditView</name><op:operator pos:line="856" pos:column="23">-&gt;</op:operator><name pos:line="856" pos:column="25">convertSelectedTextToLowerCase</name></name><argument_list pos:line="856" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="857" pos:column="25">break;</break>

		</case><case pos:line="859" pos:column="17">case <expr><name pos:line="859" pos:column="22">IDM_EDIT_BLOCK_COMMENT</name></expr>:
			<expr_stmt><expr><call><name pos:line="860" pos:column="25">doBlockComment</name><argument_list pos:line="860" pos:column="39">(<argument><expr><name pos:line="860" pos:column="40">cm_toggle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 			<break pos:line="861" pos:column="25">break;</break>
 
		</case><case pos:line="863" pos:column="17">case <expr><name pos:line="863" pos:column="22">IDM_EDIT_BLOCK_COMMENT_SET</name></expr>:
			<expr_stmt><expr><call><name pos:line="864" pos:column="25">doBlockComment</name><argument_list pos:line="864" pos:column="39">(<argument><expr><name pos:line="864" pos:column="40">cm_comment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="865" pos:column="25">break;</break>

		</case><case pos:line="867" pos:column="17">case <expr><name pos:line="867" pos:column="22">IDM_EDIT_BLOCK_UNCOMMENT</name></expr>:
			<expr_stmt><expr><call><name pos:line="868" pos:column="25">doBlockComment</name><argument_list pos:line="868" pos:column="39">(<argument><expr><name pos:line="868" pos:column="40">cm_uncomment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="869" pos:column="25">break;</break>

		</case><case pos:line="871" pos:column="17">case <expr><name pos:line="871" pos:column="22">IDM_EDIT_STREAM_COMMENT</name></expr>:
			<expr_stmt><expr><call><name pos:line="872" pos:column="25">doStreamComment</name><argument_list pos:line="872" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="873" pos:column="25">break;</break>

		</case><case pos:line="875" pos:column="17">case <expr><name pos:line="875" pos:column="22">IDM_EDIT_STREAM_UNCOMMENT</name></expr>:
			<expr_stmt><expr><call><name pos:line="876" pos:column="25">undoStreamComment</name><argument_list pos:line="876" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="877" pos:column="25">break;</break>

		</case><case pos:line="879" pos:column="17">case <expr><name pos:line="879" pos:column="22">IDM_EDIT_TRIMTRAILING</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="880" pos:column="25">_pEditView</name><op:operator pos:line="880" pos:column="35">-&gt;</op:operator><name pos:line="880" pos:column="37">execute</name></name><argument_list pos:line="880" pos:column="44">(<argument><expr><name pos:line="880" pos:column="45">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="881" pos:column="25">doTrim</name><argument_list pos:line="881" pos:column="31">(<argument><expr><name pos:line="881" pos:column="32">lineTail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="882" pos:column="25">_pEditView</name><op:operator pos:line="882" pos:column="35">-&gt;</op:operator><name pos:line="882" pos:column="37">execute</name></name><argument_list pos:line="882" pos:column="44">(<argument><expr><name pos:line="882" pos:column="45">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="883" pos:column="25">break;</break>

		</case><case pos:line="885" pos:column="17">case <expr><name pos:line="885" pos:column="22">IDM_EDIT_TRIMLINEHEAD</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="886" pos:column="25">_pEditView</name><op:operator pos:line="886" pos:column="35">-&gt;</op:operator><name pos:line="886" pos:column="37">execute</name></name><argument_list pos:line="886" pos:column="44">(<argument><expr><name pos:line="886" pos:column="45">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="887" pos:column="25">doTrim</name><argument_list pos:line="887" pos:column="31">(<argument><expr><name pos:line="887" pos:column="32">lineHeader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="888" pos:column="25">_pEditView</name><op:operator pos:line="888" pos:column="35">-&gt;</op:operator><name pos:line="888" pos:column="37">execute</name></name><argument_list pos:line="888" pos:column="44">(<argument><expr><name pos:line="888" pos:column="45">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="889" pos:column="25">break;</break>

		</case><case pos:line="891" pos:column="17">case <expr><name pos:line="891" pos:column="22">IDM_EDIT_TRIM_BOTH</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="892" pos:column="25">_pEditView</name><op:operator pos:line="892" pos:column="35">-&gt;</op:operator><name pos:line="892" pos:column="37">execute</name></name><argument_list pos:line="892" pos:column="44">(<argument><expr><name pos:line="892" pos:column="45">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="893" pos:column="25">doTrim</name><argument_list pos:line="893" pos:column="31">(<argument><expr><name pos:line="893" pos:column="32">lineTail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="894" pos:column="25">doTrim</name><argument_list pos:line="894" pos:column="31">(<argument><expr><name pos:line="894" pos:column="32">lineHeader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="895" pos:column="25">_pEditView</name><op:operator pos:line="895" pos:column="35">-&gt;</op:operator><name pos:line="895" pos:column="37">execute</name></name><argument_list pos:line="895" pos:column="44">(<argument><expr><name pos:line="895" pos:column="45">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="896" pos:column="25">break;</break>

		</case><case pos:line="898" pos:column="17">case <expr><name pos:line="898" pos:column="22">IDM_EDIT_EOL2WS</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="899" pos:column="25">_pEditView</name><op:operator pos:line="899" pos:column="35">-&gt;</op:operator><name pos:line="899" pos:column="37">execute</name></name><argument_list pos:line="899" pos:column="44">(<argument><expr><name pos:line="899" pos:column="45">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="900" pos:column="25">_pEditView</name><op:operator pos:line="900" pos:column="35">-&gt;</op:operator><name pos:line="900" pos:column="37">execute</name></name><argument_list pos:line="900" pos:column="44">(<argument><expr><name pos:line="900" pos:column="45">SCI_SETTARGETSTART</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="900" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="901" pos:column="25">_pEditView</name><op:operator pos:line="901" pos:column="35">-&gt;</op:operator><name pos:line="901" pos:column="37">execute</name></name><argument_list pos:line="901" pos:column="44">(<argument><expr><name pos:line="901" pos:column="45">SCI_SETTARGETEND</name></expr></argument>, <argument><expr><call><name><name pos:line="901" pos:column="63">_pEditView</name><op:operator pos:line="901" pos:column="73">-&gt;</op:operator><name pos:line="901" pos:column="75">getCurrentDocLen</name></name><argument_list pos:line="901" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="902" pos:column="25">_pEditView</name><op:operator pos:line="902" pos:column="35">-&gt;</op:operator><name pos:line="902" pos:column="37">execute</name></name><argument_list pos:line="902" pos:column="44">(<argument><expr><name pos:line="902" pos:column="45">SCI_LINESJOIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="903" pos:column="25">_pEditView</name><op:operator pos:line="903" pos:column="35">-&gt;</op:operator><name pos:line="903" pos:column="37">execute</name></name><argument_list pos:line="903" pos:column="44">(<argument><expr><name pos:line="903" pos:column="45">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="904" pos:column="25">break;</break>

		</case><case pos:line="906" pos:column="17">case <expr><name pos:line="906" pos:column="22">IDM_EDIT_TRIMALL</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="907" pos:column="25">_pEditView</name><op:operator pos:line="907" pos:column="35">-&gt;</op:operator><name pos:line="907" pos:column="37">execute</name></name><argument_list pos:line="907" pos:column="44">(<argument><expr><name pos:line="907" pos:column="45">SCI_BEGINUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="908" pos:column="25">doTrim</name><argument_list pos:line="908" pos:column="31">(<argument><expr><name pos:line="908" pos:column="32">lineTail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="909" pos:column="25">doTrim</name><argument_list pos:line="909" pos:column="31">(<argument><expr><name pos:line="909" pos:column="32">lineHeader</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="910" pos:column="25">_pEditView</name><op:operator pos:line="910" pos:column="35">-&gt;</op:operator><name pos:line="910" pos:column="37">execute</name></name><argument_list pos:line="910" pos:column="44">(<argument><expr><name pos:line="910" pos:column="45">SCI_SETTARGETSTART</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="910" pos:column="65">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="911" pos:column="25">_pEditView</name><op:operator pos:line="911" pos:column="35">-&gt;</op:operator><name pos:line="911" pos:column="37">execute</name></name><argument_list pos:line="911" pos:column="44">(<argument><expr><name pos:line="911" pos:column="45">SCI_SETTARGETEND</name></expr></argument>, <argument><expr><call><name><name pos:line="911" pos:column="63">_pEditView</name><op:operator pos:line="911" pos:column="73">-&gt;</op:operator><name pos:line="911" pos:column="75">getCurrentDocLen</name></name><argument_list pos:line="911" pos:column="91">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="912" pos:column="25">_pEditView</name><op:operator pos:line="912" pos:column="35">-&gt;</op:operator><name pos:line="912" pos:column="37">execute</name></name><argument_list pos:line="912" pos:column="44">(<argument><expr><name pos:line="912" pos:column="45">SCI_LINESJOIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="913" pos:column="25">_pEditView</name><op:operator pos:line="913" pos:column="35">-&gt;</op:operator><name pos:line="913" pos:column="37">execute</name></name><argument_list pos:line="913" pos:column="44">(<argument><expr><name pos:line="913" pos:column="45">SCI_ENDUNDOACTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="914" pos:column="25">break;</break>

		</case><case pos:line="916" pos:column="17">case <expr><name pos:line="916" pos:column="22">IDM_EDIT_TAB2SW</name></expr>:
			<expr_stmt><expr><call><name pos:line="917" pos:column="25">wsTabConvert</name><argument_list pos:line="917" pos:column="37">(<argument><expr><name pos:line="917" pos:column="38">tab2Space</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="918" pos:column="25">break;</break>

		</case><case pos:line="920" pos:column="17">case <expr><name pos:line="920" pos:column="22">IDM_EDIT_SW2TAB_LEADING</name></expr>:
			<expr_stmt><expr><call><name pos:line="921" pos:column="25">wsTabConvert</name><argument_list pos:line="921" pos:column="37">(<argument><expr><name pos:line="921" pos:column="38">space2TabLeading</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="922" pos:column="25">break;</break>

		</case><case pos:line="924" pos:column="17">case <expr><name pos:line="924" pos:column="22">IDM_EDIT_SW2TAB_ALL</name></expr>:
			<expr_stmt><expr><call><name pos:line="925" pos:column="25">wsTabConvert</name><argument_list pos:line="925" pos:column="37">(<argument><expr><name pos:line="925" pos:column="38">space2TabAll</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="926" pos:column="25">break;</break>

		</case><case pos:line="928" pos:column="17">case <expr><name pos:line="928" pos:column="22">IDM_EDIT_SETREADONLY</name></expr>:
		<block pos:line="929" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="930" pos:column="25">Buffer</name> <type:modifier pos:line="930" pos:column="32">*</type:modifier></type> <name pos:line="930" pos:column="34">buf</name> <init pos:line="930" pos:column="38">= <expr><call><name><name pos:line="930" pos:column="40">_pEditView</name><op:operator pos:line="930" pos:column="50">-&gt;</op:operator><name pos:line="930" pos:column="52">getCurrentBuffer</name></name><argument_list pos:line="930" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="931" pos:column="25">buf</name><op:operator pos:line="931" pos:column="28">-&gt;</op:operator><name pos:line="931" pos:column="30">setUserReadOnly</name></name><argument_list pos:line="931" pos:column="45">(<argument><expr><op:operator pos:line="931" pos:column="46">!</op:operator><call><name><name pos:line="931" pos:column="47">buf</name><op:operator pos:line="931" pos:column="50">-&gt;</op:operator><name pos:line="931" pos:column="52">getUserReadOnly</name></name><argument_list pos:line="931" pos:column="67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="933" pos:column="17">break;</break>

		</case><case pos:line="935" pos:column="17">case <expr><name pos:line="935" pos:column="22">IDM_EDIT_CLEARREADONLY</name></expr>:
		<block pos:line="936" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="937" pos:column="25">Buffer</name> <type:modifier pos:line="937" pos:column="32">*</type:modifier></type> <name pos:line="937" pos:column="34">buf</name> <init pos:line="937" pos:column="38">= <expr><call><name><name pos:line="937" pos:column="40">_pEditView</name><op:operator pos:line="937" pos:column="50">-&gt;</op:operator><name pos:line="937" pos:column="52">getCurrentBuffer</name></name><argument_list pos:line="937" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name pos:line="939" pos:column="25">DWORD</name></type> <name pos:line="939" pos:column="31">dwFileAttribs</name> <init pos:line="939" pos:column="45">= <expr><call><name><op:operator pos:line="939" pos:column="47">::</op:operator><name pos:line="939" pos:column="49">GetFileAttributes</name></name><argument_list pos:line="939" pos:column="66">(<argument><expr><call><name><name pos:line="939" pos:column="67">buf</name><op:operator pos:line="939" pos:column="70">-&gt;</op:operator><name pos:line="939" pos:column="72">getFullPathName</name></name><argument_list pos:line="939" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="940" pos:column="25">dwFileAttribs</name> <op:operator pos:line="940" pos:column="39">^=</op:operator> <name pos:line="940" pos:column="42">FILE_ATTRIBUTE_READONLY</name></expr>;</expr_stmt> 

			<expr_stmt><expr><call><name><op:operator pos:line="942" pos:column="25">::</op:operator><name pos:line="942" pos:column="27">SetFileAttributes</name></name><argument_list pos:line="942" pos:column="44">(<argument><expr><call><name><name pos:line="942" pos:column="45">buf</name><op:operator pos:line="942" pos:column="48">-&gt;</op:operator><name pos:line="942" pos:column="50">getFullPathName</name></name><argument_list pos:line="942" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="942" pos:column="69">dwFileAttribs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
			<expr_stmt><expr><call><name><name pos:line="943" pos:column="25">buf</name><op:operator pos:line="943" pos:column="28">-&gt;</op:operator><name pos:line="943" pos:column="30">setFileReadOnly</name></name><argument_list pos:line="943" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="943" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="945" pos:column="17">break;</break>

		</case><case pos:line="947" pos:column="17">case <expr><name pos:line="947" pos:column="22">IDM_SEARCH_CUTMARKEDLINES</name></expr> :
			<expr_stmt><expr><call><name pos:line="948" pos:column="25">cutMarkedLines</name><argument_list pos:line="948" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="949" pos:column="25">break;</break>

		</case><case pos:line="951" pos:column="17">case <expr><name pos:line="951" pos:column="22">IDM_SEARCH_COPYMARKEDLINES</name></expr> :
			<expr_stmt><expr><call><name pos:line="952" pos:column="25">copyMarkedLines</name><argument_list pos:line="952" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="953" pos:column="25">break;</break>

		</case><case pos:line="955" pos:column="17">case <expr><name pos:line="955" pos:column="22">IDM_SEARCH_PASTEMARKEDLINES</name></expr> :
			<expr_stmt><expr><call><name pos:line="956" pos:column="25">pasteToMarkedLines</name><argument_list pos:line="956" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="957" pos:column="25">break;</break>

		</case><case pos:line="959" pos:column="17">case <expr><name pos:line="959" pos:column="22">IDM_SEARCH_DELETEMARKEDLINES</name></expr> :
			<expr_stmt><expr><call><name pos:line="960" pos:column="25">deleteMarkedLines</name><argument_list pos:line="960" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="960" pos:column="43">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="961" pos:column="25">break;</break>

		</case><case pos:line="963" pos:column="17">case <expr><name pos:line="963" pos:column="22">IDM_SEARCH_DELETEUNMARKEDLINES</name></expr> :
			<expr_stmt><expr><call><name pos:line="964" pos:column="25">deleteMarkedLines</name><argument_list pos:line="964" pos:column="42">(<argument><expr><lit:literal type="boolean" pos:line="964" pos:column="43">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="965" pos:column="25">break;</break>

		</case><case pos:line="967" pos:column="17">case <expr><name pos:line="967" pos:column="22">IDM_SEARCH_INVERSEMARKS</name></expr> :
			<expr_stmt><expr><call><name pos:line="968" pos:column="25">inverseMarks</name><argument_list pos:line="968" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="969" pos:column="25">break;</break>

		</case><case pos:line="971" pos:column="17">case <expr><name pos:line="971" pos:column="22">IDM_VIEW_FULLSCREENTOGGLE</name></expr> :
			<expr_stmt><expr><call><name pos:line="972" pos:column="25">fullScreenToggle</name><argument_list pos:line="972" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="973" pos:column="25">break;</break>

	    </case><case pos:line="975" pos:column="13">case <expr><name pos:line="975" pos:column="18">IDM_VIEW_ALWAYSONTOP</name></expr>:
		<block pos:line="976" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="977" pos:column="25">int</name></type> <name pos:line="977" pos:column="29">check</name> <init pos:line="977" pos:column="35">= <expr><op:operator pos:line="977" pos:column="37">(</op:operator><call><name><op:operator pos:line="977" pos:column="38">::</op:operator><name pos:line="977" pos:column="40">GetMenuState</name></name><argument_list pos:line="977" pos:column="52">(<argument><expr><name pos:line="977" pos:column="53">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="977" pos:column="70">id</name></expr></argument>, <argument><expr><name pos:line="977" pos:column="74">MF_BYCOMMAND</name></expr></argument>)</argument_list></call> <op:operator pos:line="977" pos:column="88">==</op:operator> <name pos:line="977" pos:column="91">MF_CHECKED</name><op:operator pos:line="977" pos:column="101">)</op:operator><op:operator pos:line="977" pos:column="102">?</op:operator><name pos:line="977" pos:column="103">MF_UNCHECKED</name><op:operator pos:line="977" pos:column="115">:</op:operator><name pos:line="977" pos:column="116">MF_CHECKED</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="978" pos:column="25">::</op:operator><name pos:line="978" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="978" pos:column="40">(<argument><expr><name pos:line="978" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="978" pos:column="58">id</name></expr></argument>, <argument><expr><name pos:line="978" pos:column="62">MF_BYCOMMAND</name> <op:operator pos:line="978" pos:column="75">|</op:operator> <name pos:line="978" pos:column="77">check</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="979" pos:column="25">SetWindowPos</name><argument_list pos:line="979" pos:column="37">(<argument><expr><call><name><name pos:line="979" pos:column="38">_pPublicInterface</name><op:operator pos:line="979" pos:column="55">-&gt;</op:operator><name pos:line="979" pos:column="57">getHSelf</name></name><argument_list pos:line="979" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="979" pos:column="69">check</name> <op:operator pos:line="979" pos:column="75">==</op:operator> <name pos:line="979" pos:column="78">MF_CHECKED</name><op:operator pos:line="979" pos:column="88">?</op:operator><name pos:line="979" pos:column="89">HWND_TOPMOST</name><op:operator pos:line="979" pos:column="101">:</op:operator><name pos:line="979" pos:column="102">HWND_NOTOPMOST</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="979" pos:column="118">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="979" pos:column="121">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="979" pos:column="124">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="979" pos:column="127">0</lit:literal></expr></argument>, <argument><expr><name pos:line="979" pos:column="130">SWP_NOMOVE</name><op:operator pos:line="979" pos:column="140">|</op:operator><name pos:line="979" pos:column="141">SWP_NOSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="981" pos:column="17">break;</break>


		</case><case pos:line="984" pos:column="17">case <expr><name pos:line="984" pos:column="22">IDM_VIEW_FOLD_CURRENT</name></expr> :
		</case><case pos:line="985" pos:column="17">case <expr><name pos:line="985" pos:column="22">IDM_VIEW_UNFOLD_CURRENT</name></expr> :
			<expr_stmt><expr><call><name><name pos:line="986" pos:column="25">_pEditView</name><op:operator pos:line="986" pos:column="35">-&gt;</op:operator><name pos:line="986" pos:column="37">foldCurrentPos</name></name><argument_list pos:line="986" pos:column="51">(<argument><expr><op:operator pos:line="986" pos:column="52">(</op:operator><name pos:line="986" pos:column="53">id</name><op:operator pos:line="986" pos:column="55">==</op:operator><name pos:line="986" pos:column="57">IDM_VIEW_FOLD_CURRENT</name><op:operator pos:line="986" pos:column="78">)</op:operator><op:operator pos:line="986" pos:column="79">?</op:operator><name pos:line="986" pos:column="80">fold_collapse</name><op:operator pos:line="986" pos:column="93">:</op:operator><name pos:line="986" pos:column="94">fold_uncollapse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="987" pos:column="25">break;</break>

		</case><case pos:line="989" pos:column="17">case <expr><name pos:line="989" pos:column="22">IDM_VIEW_TOGGLE_FOLDALL</name></expr>:
		</case><case pos:line="990" pos:column="17">case <expr><name pos:line="990" pos:column="22">IDM_VIEW_TOGGLE_UNFOLDALL</name></expr>:
		<block pos:line="991" pos:column="17">{
			<expr_stmt><expr><name pos:line="992" pos:column="25">_isFolding</name> <op:operator pos:line="992" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="992" pos:column="38">true</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="992" pos:column="44">// So we can ignore events while folding is taking place</comment>
			<decl_stmt><decl><type><name pos:line="993" pos:column="25">bool</name></type> <name pos:line="993" pos:column="30">doCollapse</name> <init pos:line="993" pos:column="41">= <expr><op:operator pos:line="993" pos:column="43">(</op:operator><name pos:line="993" pos:column="44">id</name><op:operator pos:line="993" pos:column="46">==</op:operator><name pos:line="993" pos:column="48">IDM_VIEW_TOGGLE_FOLDALL</name><op:operator pos:line="993" pos:column="71">)</op:operator><op:operator pos:line="993" pos:column="72">?</op:operator><name pos:line="993" pos:column="73">fold_collapse</name><op:operator pos:line="993" pos:column="86">:</op:operator><name pos:line="993" pos:column="87">fold_uncollapse</name></expr></init></decl>;</decl_stmt>
 			<expr_stmt><expr><call><name><name pos:line="994" pos:column="25">_pEditView</name><op:operator pos:line="994" pos:column="35">-&gt;</op:operator><name pos:line="994" pos:column="37">foldAll</name></name><argument_list pos:line="994" pos:column="44">(<argument><expr><name pos:line="994" pos:column="45">doCollapse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="995" pos:column="25">if <condition pos:line="995" pos:column="28">(<expr><name pos:line="995" pos:column="29">_pDocMap</name></expr>)</condition><then pos:line="995" pos:column="38">
			<block pos:line="996" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="997" pos:column="33">_pDocMap</name><op:operator pos:line="997" pos:column="41">-&gt;</op:operator><name pos:line="997" pos:column="43">foldAll</name></name><argument_list pos:line="997" pos:column="50">(<argument><expr><name pos:line="997" pos:column="51">doCollapse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="999" pos:column="25">_isFolding</name> <op:operator pos:line="999" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="999" pos:column="38">false</lit:literal></expr>;</expr_stmt>
		}</block>
		<break pos:line="1001" pos:column="17">break;</break>

		</case><case pos:line="1003" pos:column="17">case <expr><name pos:line="1003" pos:column="22">IDM_VIEW_FOLD_1</name></expr>:
		</case><case pos:line="1004" pos:column="17">case <expr><name pos:line="1004" pos:column="22">IDM_VIEW_FOLD_2</name></expr>:
		</case><case pos:line="1005" pos:column="17">case <expr><name pos:line="1005" pos:column="22">IDM_VIEW_FOLD_3</name></expr>:
		</case><case pos:line="1006" pos:column="17">case <expr><name pos:line="1006" pos:column="22">IDM_VIEW_FOLD_4</name></expr>:
		</case><case pos:line="1007" pos:column="17">case <expr><name pos:line="1007" pos:column="22">IDM_VIEW_FOLD_5</name></expr>:
		</case><case pos:line="1008" pos:column="17">case <expr><name pos:line="1008" pos:column="22">IDM_VIEW_FOLD_6</name></expr>:
		</case><case pos:line="1009" pos:column="17">case <expr><name pos:line="1009" pos:column="22">IDM_VIEW_FOLD_7</name></expr>:
		</case><case pos:line="1010" pos:column="17">case <expr><name pos:line="1010" pos:column="22">IDM_VIEW_FOLD_8</name></expr>:
			<expr_stmt><expr><name pos:line="1011" pos:column="25">_isFolding</name> <op:operator pos:line="1011" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1011" pos:column="38">true</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="1011" pos:column="44">// So we can ignore events while folding is taking place</comment>
 			<expr_stmt><expr><call><name><name pos:line="1012" pos:column="25">_pEditView</name><op:operator pos:line="1012" pos:column="35">-&gt;</op:operator><name pos:line="1012" pos:column="37">collapse</name></name><argument_list pos:line="1012" pos:column="45">(<argument><expr><name pos:line="1012" pos:column="46">id</name> <op:operator pos:line="1012" pos:column="49">-</op:operator> <name pos:line="1012" pos:column="51">IDM_VIEW_FOLD</name> <op:operator pos:line="1012" pos:column="65">-</op:operator> <lit:literal type="number" pos:line="1012" pos:column="67">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1012" pos:column="70">fold_collapse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1013" pos:column="25">_isFolding</name> <op:operator pos:line="1013" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1013" pos:column="38">false</lit:literal></expr>;</expr_stmt>
			<break pos:line="1014" pos:column="25">break;</break>

		</case><case pos:line="1016" pos:column="17">case <expr><name pos:line="1016" pos:column="22">IDM_VIEW_UNFOLD_1</name></expr>:
		</case><case pos:line="1017" pos:column="17">case <expr><name pos:line="1017" pos:column="22">IDM_VIEW_UNFOLD_2</name></expr>:
		</case><case pos:line="1018" pos:column="17">case <expr><name pos:line="1018" pos:column="22">IDM_VIEW_UNFOLD_3</name></expr>:
		</case><case pos:line="1019" pos:column="17">case <expr><name pos:line="1019" pos:column="22">IDM_VIEW_UNFOLD_4</name></expr>:
		</case><case pos:line="1020" pos:column="17">case <expr><name pos:line="1020" pos:column="22">IDM_VIEW_UNFOLD_5</name></expr>:
		</case><case pos:line="1021" pos:column="17">case <expr><name pos:line="1021" pos:column="22">IDM_VIEW_UNFOLD_6</name></expr>:
		</case><case pos:line="1022" pos:column="17">case <expr><name pos:line="1022" pos:column="22">IDM_VIEW_UNFOLD_7</name></expr>:
		</case><case pos:line="1023" pos:column="17">case <expr><name pos:line="1023" pos:column="22">IDM_VIEW_UNFOLD_8</name></expr>:
			<expr_stmt><expr><name pos:line="1024" pos:column="25">_isFolding</name> <op:operator pos:line="1024" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1024" pos:column="38">true</lit:literal></expr>;</expr_stmt> <comment type="line" pos:line="1024" pos:column="44">// So we can ignore events while folding is taking place</comment>
 			<expr_stmt><expr><call><name><name pos:line="1025" pos:column="25">_pEditView</name><op:operator pos:line="1025" pos:column="35">-&gt;</op:operator><name pos:line="1025" pos:column="37">collapse</name></name><argument_list pos:line="1025" pos:column="45">(<argument><expr><name pos:line="1025" pos:column="46">id</name> <op:operator pos:line="1025" pos:column="49">-</op:operator> <name pos:line="1025" pos:column="51">IDM_VIEW_UNFOLD</name> <op:operator pos:line="1025" pos:column="67">-</op:operator> <lit:literal type="number" pos:line="1025" pos:column="69">1</lit:literal></expr></argument>, <argument><expr><name pos:line="1025" pos:column="72">fold_uncollapse</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1026" pos:column="25">_isFolding</name> <op:operator pos:line="1026" pos:column="36">=</op:operator> <lit:literal type="boolean" pos:line="1026" pos:column="38">false</lit:literal></expr>;</expr_stmt>
			<break pos:line="1027" pos:column="25">break;</break>


		</case><case pos:line="1030" pos:column="17">case <expr><name pos:line="1030" pos:column="22">IDM_VIEW_TOOLBAR_REDUCE</name></expr>:
		<block pos:line="1031" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="1032" pos:column="13">toolBarStatusType</name></type> <name pos:line="1032" pos:column="31">state</name> <init pos:line="1032" pos:column="37">= <expr><call><name><name pos:line="1032" pos:column="39">_toolBar</name><op:operator pos:line="1032" pos:column="47">.</op:operator><name pos:line="1032" pos:column="48">getState</name></name><argument_list pos:line="1032" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="1034" pos:column="13">if <condition pos:line="1034" pos:column="16">(<expr><name pos:line="1034" pos:column="17">state</name> <op:operator pos:line="1034" pos:column="23">!=</op:operator> <name pos:line="1034" pos:column="26">TB_SMALL</name></expr>)</condition><then pos:line="1034" pos:column="35">
            <block pos:line="1035" pos:column="13">{
			    <expr_stmt><expr><call><name><name pos:line="1036" pos:column="29">_toolBar</name><op:operator pos:line="1036" pos:column="37">.</op:operator><name pos:line="1036" pos:column="38">reduce</name></name><argument_list pos:line="1036" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
			    <expr_stmt><expr><call><name pos:line="1037" pos:column="29">changeToolBarIcons</name><argument_list pos:line="1037" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
		}</block>
		<break pos:line="1040" pos:column="17">break;</break>

		</case><case pos:line="1042" pos:column="17">case <expr><name pos:line="1042" pos:column="22">IDM_VIEW_TOOLBAR_ENLARGE</name></expr>:
		<block pos:line="1043" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="1044" pos:column="13">toolBarStatusType</name></type> <name pos:line="1044" pos:column="31">state</name> <init pos:line="1044" pos:column="37">= <expr><call><name><name pos:line="1044" pos:column="39">_toolBar</name><op:operator pos:line="1044" pos:column="47">.</op:operator><name pos:line="1044" pos:column="48">getState</name></name><argument_list pos:line="1044" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="1046" pos:column="13">if <condition pos:line="1046" pos:column="16">(<expr><name pos:line="1046" pos:column="17">state</name> <op:operator pos:line="1046" pos:column="23">!=</op:operator> <name pos:line="1046" pos:column="26">TB_LARGE</name></expr>)</condition><then pos:line="1046" pos:column="35">
            <block pos:line="1047" pos:column="13">{
			    <expr_stmt><expr><call><name><name pos:line="1048" pos:column="29">_toolBar</name><op:operator pos:line="1048" pos:column="37">.</op:operator><name pos:line="1048" pos:column="38">enlarge</name></name><argument_list pos:line="1048" pos:column="45">()</argument_list></call></expr>;</expr_stmt>
			    <expr_stmt><expr><call><name pos:line="1049" pos:column="29">changeToolBarIcons</name><argument_list pos:line="1049" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
		}</block>
		<break pos:line="1052" pos:column="17">break;</break>

		</case><case pos:line="1054" pos:column="17">case <expr><name pos:line="1054" pos:column="22">IDM_VIEW_TOOLBAR_STANDARD</name></expr>:
		<block pos:line="1055" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1056" pos:column="25">toolBarStatusType</name></type> <name pos:line="1056" pos:column="43">state</name> <init pos:line="1056" pos:column="49">= <expr><call><name><name pos:line="1056" pos:column="51">_toolBar</name><op:operator pos:line="1056" pos:column="59">.</op:operator><name pos:line="1056" pos:column="60">getState</name></name><argument_list pos:line="1056" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if pos:line="1058" pos:column="13">if <condition pos:line="1058" pos:column="16">(<expr><name pos:line="1058" pos:column="17">state</name> <op:operator pos:line="1058" pos:column="23">!=</op:operator> <name pos:line="1058" pos:column="26">TB_STANDARD</name></expr>)</condition><then pos:line="1058" pos:column="38">
            <block pos:line="1059" pos:column="13">{
				<expr_stmt><expr><call><name><name pos:line="1060" pos:column="33">_toolBar</name><op:operator pos:line="1060" pos:column="41">.</op:operator><name pos:line="1060" pos:column="42">setToUglyIcons</name></name><argument_list pos:line="1060" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block>
		<break pos:line="1063" pos:column="17">break;</break>

		</case><case pos:line="1065" pos:column="17">case <expr><name pos:line="1065" pos:column="22">IDM_VIEW_REDUCETABBAR</name></expr> :
		<block pos:line="1066" pos:column="17">{
			<expr_stmt><expr><name pos:line="1067" pos:column="25">_toReduceTabBar</name> <op:operator pos:line="1067" pos:column="41">=</op:operator> <op:operator pos:line="1067" pos:column="43">!</op:operator><name pos:line="1067" pos:column="44">_toReduceTabBar</name></expr>;</expr_stmt>

			<comment type="line" pos:line="1069" pos:column="25">//Resize the  icon</comment>
			<decl_stmt><decl><type><name pos:line="1070" pos:column="25">int</name></type> <name pos:line="1070" pos:column="29">iconSize</name> <init pos:line="1070" pos:column="38">= <expr><name pos:line="1070" pos:column="40">_toReduceTabBar</name><op:operator pos:line="1070" pos:column="55">?</op:operator><lit:literal type="number" pos:line="1070" pos:column="56">12</lit:literal><op:operator pos:line="1070" pos:column="58">:</op:operator><lit:literal type="number" pos:line="1070" pos:column="59">18</lit:literal></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="1072" pos:column="25">//Resize the tab height</comment>
			<decl_stmt><decl><type><name pos:line="1073" pos:column="25">int</name></type> <name pos:line="1073" pos:column="29">tabHeight</name> <init pos:line="1073" pos:column="39">= <expr><name pos:line="1073" pos:column="41">_toReduceTabBar</name><op:operator pos:line="1073" pos:column="56">?</op:operator><lit:literal type="number" pos:line="1073" pos:column="57">20</lit:literal><op:operator pos:line="1073" pos:column="59">:</op:operator><lit:literal type="number" pos:line="1073" pos:column="60">25</lit:literal></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1074" pos:column="25">TabCtrl_SetItemSize</name><argument_list pos:line="1074" pos:column="44">(<argument><expr><call><name><name pos:line="1074" pos:column="45">_mainDocTab</name><op:operator pos:line="1074" pos:column="56">.</op:operator><name pos:line="1074" pos:column="57">getHSelf</name></name><argument_list pos:line="1074" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1074" pos:column="69">45</lit:literal></expr></argument>, <argument><expr><name pos:line="1074" pos:column="73">tabHeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1075" pos:column="25">TabCtrl_SetItemSize</name><argument_list pos:line="1075" pos:column="44">(<argument><expr><call><name><name pos:line="1075" pos:column="45">_subDocTab</name><op:operator pos:line="1075" pos:column="55">.</op:operator><name pos:line="1075" pos:column="56">getHSelf</name></name><argument_list pos:line="1075" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1075" pos:column="68">45</lit:literal></expr></argument>, <argument><expr><name pos:line="1075" pos:column="72">tabHeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1076" pos:column="25">_docTabIconList</name><op:operator pos:line="1076" pos:column="40">.</op:operator><name pos:line="1076" pos:column="41">setIconSize</name></name><argument_list pos:line="1076" pos:column="52">(<argument><expr><name pos:line="1076" pos:column="53">iconSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="1078" pos:column="25">//change the font</comment>
			<decl_stmt><decl><type><name pos:line="1079" pos:column="25">int</name></type> <name pos:line="1079" pos:column="29">stockedFont</name> <init pos:line="1079" pos:column="41">= <expr><name pos:line="1079" pos:column="43">_toReduceTabBar</name><op:operator pos:line="1079" pos:column="58">?</op:operator><name pos:line="1079" pos:column="59">DEFAULT_GUI_FONT</name><op:operator pos:line="1079" pos:column="75">:</op:operator><name pos:line="1079" pos:column="76">SYSTEM_FONT</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1080" pos:column="25">HFONT</name></type> <name pos:line="1080" pos:column="31">hf</name> <init pos:line="1080" pos:column="34">= <expr><op:operator pos:line="1080" pos:column="36">(</op:operator><name pos:line="1080" pos:column="37">HFONT</name><op:operator pos:line="1080" pos:column="42">)</op:operator><call><name><op:operator pos:line="1080" pos:column="43">::</op:operator><name pos:line="1080" pos:column="45">GetStockObject</name></name><argument_list pos:line="1080" pos:column="59">(<argument><expr><name pos:line="1080" pos:column="60">stockedFont</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="1082" pos:column="25">if <condition pos:line="1082" pos:column="28">(<expr><name pos:line="1082" pos:column="29">hf</name></expr>)</condition><then pos:line="1082" pos:column="32">
			<block pos:line="1083" pos:column="25">{
				<expr_stmt><expr><call><name><op:operator pos:line="1084" pos:column="33">::</op:operator><name pos:line="1084" pos:column="35">SendMessage</name></name><argument_list pos:line="1084" pos:column="46">(<argument><expr><call><name><name pos:line="1084" pos:column="47">_mainDocTab</name><op:operator pos:line="1084" pos:column="58">.</op:operator><name pos:line="1084" pos:column="59">getHSelf</name></name><argument_list pos:line="1084" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1084" pos:column="71">WM_SETFONT</name></expr></argument>, <argument><expr><op:operator pos:line="1084" pos:column="83">(</op:operator><name pos:line="1084" pos:column="84">WPARAM</name><op:operator pos:line="1084" pos:column="90">)</op:operator><name pos:line="1084" pos:column="91">hf</name></expr></argument>, <argument><expr><call><name pos:line="1084" pos:column="95">MAKELPARAM</name><argument_list pos:line="1084" pos:column="105">(<argument><expr><name pos:line="1084" pos:column="106">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1084" pos:column="112">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="1085" pos:column="33">::</op:operator><name pos:line="1085" pos:column="35">SendMessage</name></name><argument_list pos:line="1085" pos:column="46">(<argument><expr><call><name><name pos:line="1085" pos:column="47">_subDocTab</name><op:operator pos:line="1085" pos:column="57">.</op:operator><name pos:line="1085" pos:column="58">getHSelf</name></name><argument_list pos:line="1085" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1085" pos:column="70">WM_SETFONT</name></expr></argument>, <argument><expr><op:operator pos:line="1085" pos:column="82">(</op:operator><name pos:line="1085" pos:column="83">WPARAM</name><op:operator pos:line="1085" pos:column="89">)</op:operator><name pos:line="1085" pos:column="90">hf</name></expr></argument>, <argument><expr><call><name pos:line="1085" pos:column="94">MAKELPARAM</name><argument_list pos:line="1085" pos:column="104">(<argument><expr><name pos:line="1085" pos:column="105">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1085" pos:column="111">0</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<expr_stmt><expr><call><name><op:operator pos:line="1088" pos:column="25">::</op:operator><name pos:line="1088" pos:column="27">SendMessage</name></name><argument_list pos:line="1088" pos:column="38">(<argument><expr><call><name><name pos:line="1088" pos:column="39">_pPublicInterface</name><op:operator pos:line="1088" pos:column="56">-&gt;</op:operator><name pos:line="1088" pos:column="58">getHSelf</name></name><argument_list pos:line="1088" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1088" pos:column="70">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1088" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1088" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1089" pos:column="25">break;</break>
		}</block>
		
		</case><case pos:line="1092" pos:column="17">case <expr><name pos:line="1092" pos:column="22">IDM_VIEW_REFRESHTABAR</name></expr> :
		<block pos:line="1093" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="1094" pos:column="25">::</op:operator><name pos:line="1094" pos:column="27">SendMessage</name></name><argument_list pos:line="1094" pos:column="38">(<argument><expr><call><name><name pos:line="1094" pos:column="39">_pPublicInterface</name><op:operator pos:line="1094" pos:column="56">-&gt;</op:operator><name pos:line="1094" pos:column="58">getHSelf</name></name><argument_list pos:line="1094" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1094" pos:column="70">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1094" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1094" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1095" pos:column="25">break;</break>
		}</block>
        </case><case pos:line="1097" pos:column="9">case <expr><name pos:line="1097" pos:column="14">IDM_VIEW_LOCKTABBAR</name></expr>:
		<block pos:line="1098" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1099" pos:column="25">bool</name></type> <name pos:line="1099" pos:column="30">isDrag</name> <init pos:line="1099" pos:column="37">= <expr><call><name><name pos:line="1099" pos:column="39">TabBarPlus</name><op:operator pos:line="1099" pos:column="49">::</op:operator><name pos:line="1099" pos:column="51">doDragNDropOrNot</name></name><argument_list pos:line="1099" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1100" pos:column="13">TabBarPlus</name><op:operator pos:line="1100" pos:column="23">::</op:operator><name pos:line="1100" pos:column="25">doDragNDrop</name></name><argument_list pos:line="1100" pos:column="36">(<argument><expr><op:operator pos:line="1100" pos:column="37">!</op:operator><name pos:line="1100" pos:column="38">isDrag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="1101" pos:column="25">//checkMenuItem(IDM_VIEW_LOCKTABBAR, isDrag);</comment>
            <break pos:line="1102" pos:column="13">break;</break>
		}</block>


		</case><case pos:line="1106" pos:column="17">case <expr><name pos:line="1106" pos:column="22">IDM_VIEW_DRAWTABBAR_INACIVETAB</name></expr>:
		<block pos:line="1107" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1108" pos:column="25">TabBarPlus</name><op:operator pos:line="1108" pos:column="35">::</op:operator><name pos:line="1108" pos:column="37">setDrawInactiveTab</name></name><argument_list pos:line="1108" pos:column="55">(<argument><expr><op:operator pos:line="1108" pos:column="56">!</op:operator><call><name><name pos:line="1108" pos:column="57">TabBarPlus</name><op:operator pos:line="1108" pos:column="67">::</op:operator><name pos:line="1108" pos:column="69">drawInactiveTab</name></name><argument_list pos:line="1108" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<comment type="line" pos:line="1109" pos:column="25">//TabBarPlus::setDrawInactiveTab(!TabBarPlus::drawInactiveTab(), _subDocTab.getHSelf());</comment>
			<break pos:line="1110" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="1112" pos:column="17">case <expr><name pos:line="1112" pos:column="22">IDM_VIEW_DRAWTABBAR_TOPBAR</name></expr>:
		<block pos:line="1113" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1114" pos:column="25">TabBarPlus</name><op:operator pos:line="1114" pos:column="35">::</op:operator><name pos:line="1114" pos:column="37">setDrawTopBar</name></name><argument_list pos:line="1114" pos:column="50">(<argument><expr><op:operator pos:line="1114" pos:column="51">!</op:operator><call><name><name pos:line="1114" pos:column="52">TabBarPlus</name><op:operator pos:line="1114" pos:column="62">::</op:operator><name pos:line="1114" pos:column="64">drawTopBar</name></name><argument_list pos:line="1114" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1115" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1118" pos:column="17">case <expr><name pos:line="1118" pos:column="22">IDM_VIEW_DRAWTABBAR_CLOSEBOTTUN</name></expr> :
		<block pos:line="1119" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1120" pos:column="25">TabBarPlus</name><op:operator pos:line="1120" pos:column="35">::</op:operator><name pos:line="1120" pos:column="37">setDrawTabCloseButton</name></name><argument_list pos:line="1120" pos:column="58">(<argument><expr><op:operator pos:line="1120" pos:column="59">!</op:operator><call><name><name pos:line="1120" pos:column="60">TabBarPlus</name><op:operator pos:line="1120" pos:column="70">::</op:operator><name pos:line="1120" pos:column="72">drawTabCloseButton</name></name><argument_list pos:line="1120" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="1122" pos:column="25">// This part is just for updating (redraw) the tabs</comment>
			<block pos:line="1123" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1124" pos:column="33">int</name></type> <name pos:line="1124" pos:column="37">tabHeight</name> <init pos:line="1124" pos:column="47">= <expr><call><name><name pos:line="1124" pos:column="49">TabBarPlus</name><op:operator pos:line="1124" pos:column="59">::</op:operator><name pos:line="1124" pos:column="61">drawTabCloseButton</name></name><argument_list pos:line="1124" pos:column="79">()</argument_list></call><op:operator pos:line="1124" pos:column="81">?</op:operator><lit:literal type="number" pos:line="1124" pos:column="82">21</lit:literal><op:operator pos:line="1124" pos:column="84">:</op:operator><lit:literal type="number" pos:line="1124" pos:column="85">20</lit:literal></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="1125" pos:column="33">TabCtrl_SetItemSize</name><argument_list pos:line="1125" pos:column="52">(<argument><expr><call><name><name pos:line="1125" pos:column="53">_mainDocTab</name><op:operator pos:line="1125" pos:column="64">.</op:operator><name pos:line="1125" pos:column="65">getHSelf</name></name><argument_list pos:line="1125" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1125" pos:column="77">45</lit:literal></expr></argument>, <argument><expr><name pos:line="1125" pos:column="81">tabHeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1126" pos:column="33">TabCtrl_SetItemSize</name><argument_list pos:line="1126" pos:column="52">(<argument><expr><call><name><name pos:line="1126" pos:column="53">_subDocTab</name><op:operator pos:line="1126" pos:column="63">.</op:operator><name pos:line="1126" pos:column="64">getHSelf</name></name><argument_list pos:line="1126" pos:column="72">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1126" pos:column="76">45</lit:literal></expr></argument>, <argument><expr><name pos:line="1126" pos:column="80">tabHeight</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
			<expr_stmt><expr><call><name><op:operator pos:line="1128" pos:column="25">::</op:operator><name pos:line="1128" pos:column="27">SendMessage</name></name><argument_list pos:line="1128" pos:column="38">(<argument><expr><call><name><name pos:line="1128" pos:column="39">_pPublicInterface</name><op:operator pos:line="1128" pos:column="56">-&gt;</op:operator><name pos:line="1128" pos:column="58">getHSelf</name></name><argument_list pos:line="1128" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1128" pos:column="70">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1128" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1128" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1129" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1132" pos:column="17">case <expr><name pos:line="1132" pos:column="22">IDM_VIEW_DRAWTABBAR_DBCLK2CLOSE</name></expr> :
		<block pos:line="1133" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1134" pos:column="25">TabBarPlus</name><op:operator pos:line="1134" pos:column="35">::</op:operator><name pos:line="1134" pos:column="37">setDbClk2Close</name></name><argument_list pos:line="1134" pos:column="51">(<argument><expr><op:operator pos:line="1134" pos:column="52">!</op:operator><call><name><name pos:line="1134" pos:column="53">TabBarPlus</name><op:operator pos:line="1134" pos:column="63">::</op:operator><name pos:line="1134" pos:column="65">isDbClk2Close</name></name><argument_list pos:line="1134" pos:column="78">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1135" pos:column="25">break;</break>
		}</block>
		
		</case><case pos:line="1138" pos:column="17">case <expr><name pos:line="1138" pos:column="22">IDM_VIEW_DRAWTABBAR_VERTICAL</name></expr> :
		<block pos:line="1139" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1140" pos:column="25">TabBarPlus</name><op:operator pos:line="1140" pos:column="35">::</op:operator><name pos:line="1140" pos:column="37">setVertical</name></name><argument_list pos:line="1140" pos:column="48">(<argument><expr><op:operator pos:line="1140" pos:column="49">!</op:operator><call><name><name pos:line="1140" pos:column="50">TabBarPlus</name><op:operator pos:line="1140" pos:column="60">::</op:operator><name pos:line="1140" pos:column="62">isVertical</name></name><argument_list pos:line="1140" pos:column="72">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1141" pos:column="25">::</op:operator><name pos:line="1141" pos:column="27">SendMessage</name></name><argument_list pos:line="1141" pos:column="38">(<argument><expr><call><name><name pos:line="1141" pos:column="39">_pPublicInterface</name><op:operator pos:line="1141" pos:column="56">-&gt;</op:operator><name pos:line="1141" pos:column="58">getHSelf</name></name><argument_list pos:line="1141" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1141" pos:column="70">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1141" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1141" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1142" pos:column="25">break;</break>
		}</block>
		
		</case><case pos:line="1145" pos:column="17">case <expr><name pos:line="1145" pos:column="22">IDM_VIEW_DRAWTABBAR_MULTILINE</name></expr> :
		<block pos:line="1146" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1147" pos:column="25">TabBarPlus</name><op:operator pos:line="1147" pos:column="35">::</op:operator><name pos:line="1147" pos:column="37">setMultiLine</name></name><argument_list pos:line="1147" pos:column="49">(<argument><expr><op:operator pos:line="1147" pos:column="50">!</op:operator><call><name><name pos:line="1147" pos:column="51">TabBarPlus</name><op:operator pos:line="1147" pos:column="61">::</op:operator><name pos:line="1147" pos:column="63">isMultiLine</name></name><argument_list pos:line="1147" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1148" pos:column="25">::</op:operator><name pos:line="1148" pos:column="27">SendMessage</name></name><argument_list pos:line="1148" pos:column="38">(<argument><expr><call><name><name pos:line="1148" pos:column="39">_pPublicInterface</name><op:operator pos:line="1148" pos:column="56">-&gt;</op:operator><name pos:line="1148" pos:column="58">getHSelf</name></name><argument_list pos:line="1148" pos:column="66">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1148" pos:column="70">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1148" pos:column="79">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1148" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>		
			<break pos:line="1149" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1152" pos:column="17">case <expr><name pos:line="1152" pos:column="22">IDM_VIEW_POSTIT</name></expr> :
		<block pos:line="1153" pos:column="17">{
			<expr_stmt><expr><call><name pos:line="1154" pos:column="25">postItToggle</name><argument_list pos:line="1154" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="1156" pos:column="17">break;</break>

		</case><case pos:line="1158" pos:column="17">case <expr><name pos:line="1158" pos:column="22">IDM_VIEW_TAB_SPACE</name></expr>:
		<block pos:line="1159" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1160" pos:column="25">bool</name></type> <name pos:line="1160" pos:column="30">isChecked</name> <init pos:line="1160" pos:column="40">= <expr><op:operator pos:line="1160" pos:column="42">!</op:operator><op:operator pos:line="1160" pos:column="43">(</op:operator><call><name><op:operator pos:line="1160" pos:column="44">::</op:operator><name pos:line="1160" pos:column="46">GetMenuState</name></name><argument_list pos:line="1160" pos:column="58">(<argument><expr><name pos:line="1160" pos:column="59">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1160" pos:column="76">IDM_VIEW_TAB_SPACE</name></expr></argument>, <argument><expr><name pos:line="1160" pos:column="96">MF_BYCOMMAND</name></expr></argument>)</argument_list></call> <op:operator pos:line="1160" pos:column="110">==</op:operator> <name pos:line="1160" pos:column="113">MF_CHECKED</name><op:operator pos:line="1160" pos:column="123">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1161" pos:column="25">::</op:operator><name pos:line="1161" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1161" pos:column="40">(<argument><expr><name pos:line="1161" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1161" pos:column="58">IDM_VIEW_EOL</name></expr></argument>, <argument><expr><name pos:line="1161" pos:column="72">MF_BYCOMMAND</name> <op:operator pos:line="1161" pos:column="85">|</op:operator> <name pos:line="1161" pos:column="87">MF_UNCHECKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1162" pos:column="25">::</op:operator><name pos:line="1162" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1162" pos:column="40">(<argument><expr><name pos:line="1162" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1162" pos:column="58">IDM_VIEW_ALL_CHARACTERS</name></expr></argument>, <argument><expr><name pos:line="1162" pos:column="83">MF_BYCOMMAND</name> <op:operator pos:line="1162" pos:column="96">|</op:operator> <name pos:line="1162" pos:column="98">MF_UNCHECKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1163" pos:column="25">::</op:operator><name pos:line="1163" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1163" pos:column="40">(<argument><expr><name pos:line="1163" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1163" pos:column="58">IDM_VIEW_TAB_SPACE</name></expr></argument>, <argument><expr><name pos:line="1163" pos:column="78">MF_BYCOMMAND</name> <op:operator pos:line="1163" pos:column="91">|</op:operator> <op:operator pos:line="1163" pos:column="93">(</op:operator><name pos:line="1163" pos:column="94">isChecked</name><op:operator pos:line="1163" pos:column="103">?</op:operator><name pos:line="1163" pos:column="104">MF_CHECKED</name><op:operator pos:line="1163" pos:column="114">:</op:operator><name pos:line="1163" pos:column="115">MF_UNCHECKED</name><op:operator pos:line="1163" pos:column="127">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1164" pos:column="25">_toolBar</name><op:operator pos:line="1164" pos:column="33">.</op:operator><name pos:line="1164" pos:column="34">setCheck</name></name><argument_list pos:line="1164" pos:column="42">(<argument><expr><name pos:line="1164" pos:column="43">IDM_VIEW_ALL_CHARACTERS</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1164" pos:column="68">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1165" pos:column="25">_mainEditView</name><op:operator pos:line="1165" pos:column="38">.</op:operator><name pos:line="1165" pos:column="39">showEOL</name></name><argument_list pos:line="1165" pos:column="46">(<argument><expr><lit:literal type="boolean" pos:line="1165" pos:column="47">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1166" pos:column="25">_mainEditView</name><op:operator pos:line="1166" pos:column="38">.</op:operator><name pos:line="1166" pos:column="39">showWSAndTab</name></name><argument_list pos:line="1166" pos:column="51">(<argument><expr><name pos:line="1166" pos:column="52">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1167" pos:column="25">_subEditView</name><op:operator pos:line="1167" pos:column="37">.</op:operator><name pos:line="1167" pos:column="38">showEOL</name></name><argument_list pos:line="1167" pos:column="45">(<argument><expr><lit:literal type="boolean" pos:line="1167" pos:column="46">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1168" pos:column="25">_subEditView</name><op:operator pos:line="1168" pos:column="37">.</op:operator><name pos:line="1168" pos:column="38">showWSAndTab</name></name><argument_list pos:line="1168" pos:column="50">(<argument><expr><name pos:line="1168" pos:column="51">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1170" pos:column="13">ScintillaViewParams</name> <type:modifier pos:line="1170" pos:column="33">&amp;</type:modifier></type> <name pos:line="1170" pos:column="35">svp1</name> <init pos:line="1170" pos:column="40">= <expr><op:operator pos:line="1170" pos:column="42">(</op:operator><name pos:line="1170" pos:column="43">ScintillaViewParams</name> <op:operator pos:line="1170" pos:column="63">&amp;</op:operator><op:operator pos:line="1170" pos:column="64">)</op:operator><op:operator pos:line="1170" pos:column="65">(</op:operator><call><name><name pos:line="1170" pos:column="66">NppParameters</name><op:operator pos:line="1170" pos:column="79">::</op:operator><name pos:line="1170" pos:column="81">getInstance</name></name><argument_list pos:line="1170" pos:column="92">()</argument_list></call><op:operator pos:line="1170" pos:column="94">)</op:operator><op:operator pos:line="1170" pos:column="95">-&gt;</op:operator><call><name pos:line="1170" pos:column="97">getSVP</name><argument_list pos:line="1170" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="1171" pos:column="13">svp1</name><op:operator pos:line="1171" pos:column="17">.</op:operator><name pos:line="1171" pos:column="18">_whiteSpaceShow</name></name> <op:operator pos:line="1171" pos:column="34">=</op:operator> <name pos:line="1171" pos:column="36">isChecked</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="1172" pos:column="13">svp1</name><op:operator pos:line="1172" pos:column="17">.</op:operator><name pos:line="1172" pos:column="18">_eolShow</name></name> <op:operator pos:line="1172" pos:column="27">=</op:operator> <lit:literal type="boolean" pos:line="1172" pos:column="29">false</lit:literal></expr>;</expr_stmt>
			<break pos:line="1173" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="1175" pos:column="17">case <expr><name pos:line="1175" pos:column="22">IDM_VIEW_EOL</name></expr>:
		<block pos:line="1176" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1177" pos:column="25">bool</name></type> <name pos:line="1177" pos:column="30">isChecked</name> <init pos:line="1177" pos:column="40">= <expr><op:operator pos:line="1177" pos:column="42">!</op:operator><op:operator pos:line="1177" pos:column="43">(</op:operator><call><name><op:operator pos:line="1177" pos:column="44">::</op:operator><name pos:line="1177" pos:column="46">GetMenuState</name></name><argument_list pos:line="1177" pos:column="58">(<argument><expr><name pos:line="1177" pos:column="59">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1177" pos:column="76">IDM_VIEW_EOL</name></expr></argument>, <argument><expr><name pos:line="1177" pos:column="90">MF_BYCOMMAND</name></expr></argument>)</argument_list></call> <op:operator pos:line="1177" pos:column="104">==</op:operator> <name pos:line="1177" pos:column="107">MF_CHECKED</name><op:operator pos:line="1177" pos:column="117">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1178" pos:column="25">::</op:operator><name pos:line="1178" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1178" pos:column="40">(<argument><expr><name pos:line="1178" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1178" pos:column="58">IDM_VIEW_TAB_SPACE</name></expr></argument>, <argument><expr><name pos:line="1178" pos:column="78">MF_BYCOMMAND</name> <op:operator pos:line="1178" pos:column="91">|</op:operator> <name pos:line="1178" pos:column="93">MF_UNCHECKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1179" pos:column="25">::</op:operator><name pos:line="1179" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1179" pos:column="40">(<argument><expr><name pos:line="1179" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1179" pos:column="58">IDM_VIEW_EOL</name></expr></argument>, <argument><expr><name pos:line="1179" pos:column="72">MF_BYCOMMAND</name> <op:operator pos:line="1179" pos:column="85">|</op:operator> <op:operator pos:line="1179" pos:column="87">(</op:operator><name pos:line="1179" pos:column="88">isChecked</name><op:operator pos:line="1179" pos:column="97">?</op:operator><name pos:line="1179" pos:column="98">MF_CHECKED</name><op:operator pos:line="1179" pos:column="108">:</op:operator><name pos:line="1179" pos:column="109">MF_UNCHECKED</name><op:operator pos:line="1179" pos:column="121">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1180" pos:column="25">::</op:operator><name pos:line="1180" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1180" pos:column="40">(<argument><expr><name pos:line="1180" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1180" pos:column="58">IDM_VIEW_ALL_CHARACTERS</name></expr></argument>, <argument><expr><name pos:line="1180" pos:column="83">MF_BYCOMMAND</name> <op:operator pos:line="1180" pos:column="96">|</op:operator> <name pos:line="1180" pos:column="98">MF_UNCHECKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1181" pos:column="25">_toolBar</name><op:operator pos:line="1181" pos:column="33">.</op:operator><name pos:line="1181" pos:column="34">setCheck</name></name><argument_list pos:line="1181" pos:column="42">(<argument><expr><name pos:line="1181" pos:column="43">IDM_VIEW_ALL_CHARACTERS</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="1181" pos:column="68">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1182" pos:column="25">_mainEditView</name><op:operator pos:line="1182" pos:column="38">.</op:operator><name pos:line="1182" pos:column="39">showEOL</name></name><argument_list pos:line="1182" pos:column="46">(<argument><expr><name pos:line="1182" pos:column="47">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1183" pos:column="25">_subEditView</name><op:operator pos:line="1183" pos:column="37">.</op:operator><name pos:line="1183" pos:column="38">showEOL</name></name><argument_list pos:line="1183" pos:column="45">(<argument><expr><name pos:line="1183" pos:column="46">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1184" pos:column="25">_mainEditView</name><op:operator pos:line="1184" pos:column="38">.</op:operator><name pos:line="1184" pos:column="39">showWSAndTab</name></name><argument_list pos:line="1184" pos:column="51">(<argument><expr><lit:literal type="boolean" pos:line="1184" pos:column="52">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1185" pos:column="25">_subEditView</name><op:operator pos:line="1185" pos:column="37">.</op:operator><name pos:line="1185" pos:column="38">showWSAndTab</name></name><argument_list pos:line="1185" pos:column="50">(<argument><expr><lit:literal type="boolean" pos:line="1185" pos:column="51">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1187" pos:column="13">ScintillaViewParams</name> <type:modifier pos:line="1187" pos:column="33">&amp;</type:modifier></type> <name pos:line="1187" pos:column="35">svp1</name> <init pos:line="1187" pos:column="40">= <expr><op:operator pos:line="1187" pos:column="42">(</op:operator><name pos:line="1187" pos:column="43">ScintillaViewParams</name> <op:operator pos:line="1187" pos:column="63">&amp;</op:operator><op:operator pos:line="1187" pos:column="64">)</op:operator><op:operator pos:line="1187" pos:column="65">(</op:operator><call><name><name pos:line="1187" pos:column="66">NppParameters</name><op:operator pos:line="1187" pos:column="79">::</op:operator><name pos:line="1187" pos:column="81">getInstance</name></name><argument_list pos:line="1187" pos:column="92">()</argument_list></call><op:operator pos:line="1187" pos:column="94">)</op:operator><op:operator pos:line="1187" pos:column="95">-&gt;</op:operator><call><name pos:line="1187" pos:column="97">getSVP</name><argument_list pos:line="1187" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="1188" pos:column="13">svp1</name><op:operator pos:line="1188" pos:column="17">.</op:operator><name pos:line="1188" pos:column="18">_whiteSpaceShow</name></name> <op:operator pos:line="1188" pos:column="34">=</op:operator> <lit:literal type="boolean" pos:line="1188" pos:column="36">false</lit:literal></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="1189" pos:column="13">svp1</name><op:operator pos:line="1189" pos:column="17">.</op:operator><name pos:line="1189" pos:column="18">_eolShow</name></name> <op:operator pos:line="1189" pos:column="27">=</op:operator> <name pos:line="1189" pos:column="29">isChecked</name></expr>;</expr_stmt>
			<break pos:line="1190" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="1192" pos:column="17">case <expr><name pos:line="1192" pos:column="22">IDM_VIEW_ALL_CHARACTERS</name></expr>:
		<block pos:line="1193" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1194" pos:column="25">bool</name></type> <name pos:line="1194" pos:column="30">isChecked</name> <init pos:line="1194" pos:column="40">= <expr><op:operator pos:line="1194" pos:column="42">!</op:operator><op:operator pos:line="1194" pos:column="43">(</op:operator><call><name><op:operator pos:line="1194" pos:column="44">::</op:operator><name pos:line="1194" pos:column="46">GetMenuState</name></name><argument_list pos:line="1194" pos:column="58">(<argument><expr><name pos:line="1194" pos:column="59">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1194" pos:column="76">id</name></expr></argument>, <argument><expr><name pos:line="1194" pos:column="80">MF_BYCOMMAND</name></expr></argument>)</argument_list></call> <op:operator pos:line="1194" pos:column="94">==</op:operator> <name pos:line="1194" pos:column="97">MF_CHECKED</name><op:operator pos:line="1194" pos:column="107">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1195" pos:column="25">::</op:operator><name pos:line="1195" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1195" pos:column="40">(<argument><expr><name pos:line="1195" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1195" pos:column="58">IDM_VIEW_EOL</name></expr></argument>, <argument><expr><name pos:line="1195" pos:column="72">MF_BYCOMMAND</name> <op:operator pos:line="1195" pos:column="85">|</op:operator> <name pos:line="1195" pos:column="87">MF_UNCHECKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1196" pos:column="25">::</op:operator><name pos:line="1196" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1196" pos:column="40">(<argument><expr><name pos:line="1196" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1196" pos:column="58">IDM_VIEW_TAB_SPACE</name></expr></argument>, <argument><expr><name pos:line="1196" pos:column="78">MF_BYCOMMAND</name> <op:operator pos:line="1196" pos:column="91">|</op:operator> <name pos:line="1196" pos:column="93">MF_UNCHECKED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="1197" pos:column="25">::</op:operator><name pos:line="1197" pos:column="27">CheckMenuItem</name></name><argument_list pos:line="1197" pos:column="40">(<argument><expr><name pos:line="1197" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1197" pos:column="58">IDM_VIEW_ALL_CHARACTERS</name></expr></argument>, <argument><expr><name pos:line="1197" pos:column="83">MF_BYCOMMAND</name> <op:operator pos:line="1197" pos:column="96">|</op:operator> <op:operator pos:line="1197" pos:column="98">(</op:operator><name pos:line="1197" pos:column="99">isChecked</name><op:operator pos:line="1197" pos:column="108">?</op:operator><name pos:line="1197" pos:column="109">MF_CHECKED</name><op:operator pos:line="1197" pos:column="119">:</op:operator><name pos:line="1197" pos:column="120">MF_UNCHECKED</name><op:operator pos:line="1197" pos:column="132">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1198" pos:column="25">_mainEditView</name><op:operator pos:line="1198" pos:column="38">.</op:operator><name pos:line="1198" pos:column="39">showInvisibleChars</name></name><argument_list pos:line="1198" pos:column="57">(<argument><expr><name pos:line="1198" pos:column="58">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1199" pos:column="25">_subEditView</name><op:operator pos:line="1199" pos:column="37">.</op:operator><name pos:line="1199" pos:column="38">showInvisibleChars</name></name><argument_list pos:line="1199" pos:column="56">(<argument><expr><name pos:line="1199" pos:column="57">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1200" pos:column="25">_toolBar</name><op:operator pos:line="1200" pos:column="33">.</op:operator><name pos:line="1200" pos:column="34">setCheck</name></name><argument_list pos:line="1200" pos:column="42">(<argument><expr><name pos:line="1200" pos:column="43">IDM_VIEW_ALL_CHARACTERS</name></expr></argument>, <argument><expr><name pos:line="1200" pos:column="68">isChecked</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1202" pos:column="13">ScintillaViewParams</name> <type:modifier pos:line="1202" pos:column="33">&amp;</type:modifier></type> <name pos:line="1202" pos:column="35">svp1</name> <init pos:line="1202" pos:column="40">= <expr><op:operator pos:line="1202" pos:column="42">(</op:operator><name pos:line="1202" pos:column="43">ScintillaViewParams</name> <op:operator pos:line="1202" pos:column="63">&amp;</op:operator><op:operator pos:line="1202" pos:column="64">)</op:operator><op:operator pos:line="1202" pos:column="65">(</op:operator><call><name><name pos:line="1202" pos:column="66">NppParameters</name><op:operator pos:line="1202" pos:column="79">::</op:operator><name pos:line="1202" pos:column="81">getInstance</name></name><argument_list pos:line="1202" pos:column="92">()</argument_list></call><op:operator pos:line="1202" pos:column="94">)</op:operator><op:operator pos:line="1202" pos:column="95">-&gt;</op:operator><call><name pos:line="1202" pos:column="97">getSVP</name><argument_list pos:line="1202" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="1203" pos:column="13">svp1</name><op:operator pos:line="1203" pos:column="17">.</op:operator><name pos:line="1203" pos:column="18">_whiteSpaceShow</name></name> <op:operator pos:line="1203" pos:column="34">=</op:operator> <name pos:line="1203" pos:column="36">isChecked</name></expr>;</expr_stmt>
            <expr_stmt><expr><name><name pos:line="1204" pos:column="13">svp1</name><op:operator pos:line="1204" pos:column="17">.</op:operator><name pos:line="1204" pos:column="18">_eolShow</name></name> <op:operator pos:line="1204" pos:column="27">=</op:operator> <name pos:line="1204" pos:column="29">isChecked</name></expr>;</expr_stmt>
			<break pos:line="1205" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1208" pos:column="17">case <expr><name pos:line="1208" pos:column="22">IDM_VIEW_INDENT_GUIDE</name></expr>:
		<block pos:line="1209" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1210" pos:column="25">_mainEditView</name><op:operator pos:line="1210" pos:column="38">.</op:operator><name pos:line="1210" pos:column="39">showIndentGuideLine</name></name><argument_list pos:line="1210" pos:column="58">(<argument><expr><op:operator pos:line="1210" pos:column="59">!</op:operator><call><name><name pos:line="1210" pos:column="60">_pEditView</name><op:operator pos:line="1210" pos:column="70">-&gt;</op:operator><name pos:line="1210" pos:column="72">isShownIndentGuide</name></name><argument_list pos:line="1210" pos:column="90">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1211" pos:column="25">_subEditView</name><op:operator pos:line="1211" pos:column="37">.</op:operator><name pos:line="1211" pos:column="38">showIndentGuideLine</name></name><argument_list pos:line="1211" pos:column="57">(<argument><expr><op:operator pos:line="1211" pos:column="58">!</op:operator><call><name><name pos:line="1211" pos:column="59">_pEditView</name><op:operator pos:line="1211" pos:column="69">-&gt;</op:operator><name pos:line="1211" pos:column="71">isShownIndentGuide</name></name><argument_list pos:line="1211" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1212" pos:column="13">_toolBar</name><op:operator pos:line="1212" pos:column="21">.</op:operator><name pos:line="1212" pos:column="22">setCheck</name></name><argument_list pos:line="1212" pos:column="30">(<argument><expr><name pos:line="1212" pos:column="31">IDM_VIEW_INDENT_GUIDE</name></expr></argument>, <argument><expr><call><name><name pos:line="1212" pos:column="54">_pEditView</name><op:operator pos:line="1212" pos:column="64">-&gt;</op:operator><name pos:line="1212" pos:column="66">isShownIndentGuide</name></name><argument_list pos:line="1212" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1213" pos:column="25">checkMenuItem</name><argument_list pos:line="1213" pos:column="38">(<argument><expr><name pos:line="1213" pos:column="39">IDM_VIEW_INDENT_GUIDE</name></expr></argument>, <argument><expr><call><name><name pos:line="1213" pos:column="62">_pEditView</name><op:operator pos:line="1213" pos:column="72">-&gt;</op:operator><name pos:line="1213" pos:column="74">isShownIndentGuide</name></name><argument_list pos:line="1213" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1215" pos:column="13">ScintillaViewParams</name> <type:modifier pos:line="1215" pos:column="33">&amp;</type:modifier></type> <name pos:line="1215" pos:column="35">svp1</name> <init pos:line="1215" pos:column="40">= <expr><op:operator pos:line="1215" pos:column="42">(</op:operator><name pos:line="1215" pos:column="43">ScintillaViewParams</name> <op:operator pos:line="1215" pos:column="63">&amp;</op:operator><op:operator pos:line="1215" pos:column="64">)</op:operator><op:operator pos:line="1215" pos:column="65">(</op:operator><call><name><name pos:line="1215" pos:column="66">NppParameters</name><op:operator pos:line="1215" pos:column="79">::</op:operator><name pos:line="1215" pos:column="81">getInstance</name></name><argument_list pos:line="1215" pos:column="92">()</argument_list></call><op:operator pos:line="1215" pos:column="94">)</op:operator><op:operator pos:line="1215" pos:column="95">-&gt;</op:operator><call><name pos:line="1215" pos:column="97">getSVP</name><argument_list pos:line="1215" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="1216" pos:column="13">svp1</name><op:operator pos:line="1216" pos:column="17">.</op:operator><name pos:line="1216" pos:column="18">_indentGuideLineShow</name></name> <op:operator pos:line="1216" pos:column="39">=</op:operator> <call><name><name pos:line="1216" pos:column="41">_pEditView</name><op:operator pos:line="1216" pos:column="51">-&gt;</op:operator><name pos:line="1216" pos:column="53">isShownIndentGuide</name></name><argument_list pos:line="1216" pos:column="71">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1217" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1220" pos:column="17">case <expr><name pos:line="1220" pos:column="22">IDM_VIEW_WRAP</name></expr>:
		<block pos:line="1221" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1222" pos:column="25">bool</name></type> <name pos:line="1222" pos:column="30">isWraped</name> <init pos:line="1222" pos:column="39">= <expr><op:operator pos:line="1222" pos:column="41">!</op:operator><call><name><name pos:line="1222" pos:column="42">_pEditView</name><op:operator pos:line="1222" pos:column="52">-&gt;</op:operator><name pos:line="1222" pos:column="54">isWrap</name></name><argument_list pos:line="1222" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<comment type="line" pos:line="1223" pos:column="25">//--FLS: ViewMoveAtWrappingDisableFix: Disable wrapping messes up visible lines. Therefore save view position before in IDM_VIEW_WRAP and restore after SCN_PAINTED, as Scintilla-Doc. says</comment>
			<if pos:line="1224" pos:column="25">if <condition pos:line="1224" pos:column="28">(<expr><op:operator pos:line="1224" pos:column="29">!</op:operator><name pos:line="1224" pos:column="30">isWraped</name></expr>)</condition><then pos:line="1224" pos:column="39">
			<block pos:line="1225" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1226" pos:column="33">_mainEditView</name><op:operator pos:line="1226" pos:column="46">.</op:operator><name pos:line="1226" pos:column="47">saveCurrentPos</name></name><argument_list pos:line="1226" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1227" pos:column="33">_mainEditView</name><op:operator pos:line="1227" pos:column="46">.</op:operator><name pos:line="1227" pos:column="47">setWrapRestoreNeeded</name></name><argument_list pos:line="1227" pos:column="67">(<argument><expr><lit:literal type="boolean" pos:line="1227" pos:column="68">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1228" pos:column="33">_subEditView</name><op:operator pos:line="1228" pos:column="45">.</op:operator><name pos:line="1228" pos:column="46">saveCurrentPos</name></name><argument_list pos:line="1228" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1229" pos:column="33">_subEditView</name><op:operator pos:line="1229" pos:column="45">.</op:operator><name pos:line="1229" pos:column="46">setWrapRestoreNeeded</name></name><argument_list pos:line="1229" pos:column="66">(<argument><expr><lit:literal type="boolean" pos:line="1229" pos:column="67">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="1231" pos:column="25">_mainEditView</name><op:operator pos:line="1231" pos:column="38">.</op:operator><name pos:line="1231" pos:column="39">wrap</name></name><argument_list pos:line="1231" pos:column="43">(<argument><expr><name pos:line="1231" pos:column="44">isWraped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1232" pos:column="25">_subEditView</name><op:operator pos:line="1232" pos:column="37">.</op:operator><name pos:line="1232" pos:column="38">wrap</name></name><argument_list pos:line="1232" pos:column="42">(<argument><expr><name pos:line="1232" pos:column="43">isWraped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1233" pos:column="25">_toolBar</name><op:operator pos:line="1233" pos:column="33">.</op:operator><name pos:line="1233" pos:column="34">setCheck</name></name><argument_list pos:line="1233" pos:column="42">(<argument><expr><name pos:line="1233" pos:column="43">IDM_VIEW_WRAP</name></expr></argument>, <argument><expr><name pos:line="1233" pos:column="58">isWraped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1234" pos:column="25">checkMenuItem</name><argument_list pos:line="1234" pos:column="38">(<argument><expr><name pos:line="1234" pos:column="39">IDM_VIEW_WRAP</name></expr></argument>, <argument><expr><name pos:line="1234" pos:column="54">isWraped</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="1236" pos:column="25">ScintillaViewParams</name> <type:modifier pos:line="1236" pos:column="45">&amp;</type:modifier></type> <name pos:line="1236" pos:column="47">svp1</name> <init pos:line="1236" pos:column="52">= <expr><op:operator pos:line="1236" pos:column="54">(</op:operator><name pos:line="1236" pos:column="55">ScintillaViewParams</name> <op:operator pos:line="1236" pos:column="75">&amp;</op:operator><op:operator pos:line="1236" pos:column="76">)</op:operator><op:operator pos:line="1236" pos:column="77">(</op:operator><call><name><name pos:line="1236" pos:column="78">NppParameters</name><op:operator pos:line="1236" pos:column="91">::</op:operator><name pos:line="1236" pos:column="93">getInstance</name></name><argument_list pos:line="1236" pos:column="104">()</argument_list></call><op:operator pos:line="1236" pos:column="106">)</op:operator><op:operator pos:line="1236" pos:column="107">-&gt;</op:operator><call><name pos:line="1236" pos:column="109">getSVP</name><argument_list pos:line="1236" pos:column="115">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="1237" pos:column="25">svp1</name><op:operator pos:line="1237" pos:column="29">.</op:operator><name pos:line="1237" pos:column="30">_doWrap</name></name> <op:operator pos:line="1237" pos:column="38">=</op:operator> <name pos:line="1237" pos:column="40">isWraped</name></expr>;</expr_stmt>

			<if pos:line="1239" pos:column="25">if <condition pos:line="1239" pos:column="28">(<expr><name pos:line="1239" pos:column="29">_pDocMap</name></expr>)</condition><then pos:line="1239" pos:column="38">
			<block pos:line="1240" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1241" pos:column="33">_pDocMap</name><op:operator pos:line="1241" pos:column="41">-&gt;</op:operator><name pos:line="1241" pos:column="43">initWrapMap</name></name><argument_list pos:line="1241" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1242" pos:column="33">_pDocMap</name><op:operator pos:line="1242" pos:column="41">-&gt;</op:operator><name pos:line="1242" pos:column="43">wrapMap</name></name><argument_list pos:line="1242" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<break pos:line="1244" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="1246" pos:column="17">case <expr><name pos:line="1246" pos:column="22">IDM_VIEW_WRAP_SYMBOL</name></expr>:
		<block pos:line="1247" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1248" pos:column="25">_mainEditView</name><op:operator pos:line="1248" pos:column="38">.</op:operator><name pos:line="1248" pos:column="39">showWrapSymbol</name></name><argument_list pos:line="1248" pos:column="53">(<argument><expr><op:operator pos:line="1248" pos:column="54">!</op:operator><call><name><name pos:line="1248" pos:column="55">_pEditView</name><op:operator pos:line="1248" pos:column="65">-&gt;</op:operator><name pos:line="1248" pos:column="67">isWrapSymbolVisible</name></name><argument_list pos:line="1248" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1249" pos:column="25">_subEditView</name><op:operator pos:line="1249" pos:column="37">.</op:operator><name pos:line="1249" pos:column="38">showWrapSymbol</name></name><argument_list pos:line="1249" pos:column="52">(<argument><expr><op:operator pos:line="1249" pos:column="53">!</op:operator><call><name><name pos:line="1249" pos:column="54">_pEditView</name><op:operator pos:line="1249" pos:column="64">-&gt;</op:operator><name pos:line="1249" pos:column="66">isWrapSymbolVisible</name></name><argument_list pos:line="1249" pos:column="85">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1250" pos:column="25">checkMenuItem</name><argument_list pos:line="1250" pos:column="38">(<argument><expr><name pos:line="1250" pos:column="39">IDM_VIEW_WRAP_SYMBOL</name></expr></argument>, <argument><expr><call><name><name pos:line="1250" pos:column="61">_pEditView</name><op:operator pos:line="1250" pos:column="71">-&gt;</op:operator><name pos:line="1250" pos:column="73">isWrapSymbolVisible</name></name><argument_list pos:line="1250" pos:column="92">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <decl_stmt><decl><type><name pos:line="1252" pos:column="13">ScintillaViewParams</name> <type:modifier pos:line="1252" pos:column="33">&amp;</type:modifier></type> <name pos:line="1252" pos:column="35">svp1</name> <init pos:line="1252" pos:column="40">= <expr><op:operator pos:line="1252" pos:column="42">(</op:operator><name pos:line="1252" pos:column="43">ScintillaViewParams</name> <op:operator pos:line="1252" pos:column="63">&amp;</op:operator><op:operator pos:line="1252" pos:column="64">)</op:operator><op:operator pos:line="1252" pos:column="65">(</op:operator><call><name><name pos:line="1252" pos:column="66">NppParameters</name><op:operator pos:line="1252" pos:column="79">::</op:operator><name pos:line="1252" pos:column="81">getInstance</name></name><argument_list pos:line="1252" pos:column="92">()</argument_list></call><op:operator pos:line="1252" pos:column="94">)</op:operator><op:operator pos:line="1252" pos:column="95">-&gt;</op:operator><call><name pos:line="1252" pos:column="97">getSVP</name><argument_list pos:line="1252" pos:column="103">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt><expr><name><name pos:line="1253" pos:column="13">svp1</name><op:operator pos:line="1253" pos:column="17">.</op:operator><name pos:line="1253" pos:column="18">_wrapSymbolShow</name></name> <op:operator pos:line="1253" pos:column="34">=</op:operator> <call><name><name pos:line="1253" pos:column="36">_pEditView</name><op:operator pos:line="1253" pos:column="46">-&gt;</op:operator><name pos:line="1253" pos:column="48">isWrapSymbolVisible</name></name><argument_list pos:line="1253" pos:column="67">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1254" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1257" pos:column="17">case <expr><name pos:line="1257" pos:column="22">IDM_VIEW_HIDELINES</name></expr>:
		<block pos:line="1258" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1259" pos:column="25">_pEditView</name><op:operator pos:line="1259" pos:column="35">-&gt;</op:operator><name pos:line="1259" pos:column="37">hideLines</name></name><argument_list pos:line="1259" pos:column="46">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1260" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1263" pos:column="17">case <expr><name pos:line="1263" pos:column="22">IDM_VIEW_ZOOMIN</name></expr>:
		<block pos:line="1264" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="1265" pos:column="25">_pEditView</name><op:operator pos:line="1265" pos:column="35">-&gt;</op:operator><name pos:line="1265" pos:column="37">execute</name></name><argument_list pos:line="1265" pos:column="44">(<argument><expr><name pos:line="1265" pos:column="45">SCI_ZOOMIN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1266" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="1268" pos:column="17">case <expr><name pos:line="1268" pos:column="22">IDM_VIEW_ZOOMOUT</name></expr>:
			<expr_stmt><expr><call><name><name pos:line="1269" pos:column="25">_pEditView</name><op:operator pos:line="1269" pos:column="35">-&gt;</op:operator><name pos:line="1269" pos:column="37">execute</name></name><argument_list pos:line="1269" pos:column="44">(<argument><expr><name pos:line="1269" pos:column="45">SCI_ZOOMOUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1270" pos:column="25">break;</break>

		</case><case pos:line="1272" pos:column="17">case <expr><name pos:line="1272" pos:column="22">IDM_VIEW_ZOOMRESTORE</name></expr>:
			<comment type="line" pos:line="1273" pos:column="25">//Zoom factor of 0 points means default view</comment>
			<expr_stmt><expr><call><name><name pos:line="1274" pos:column="25">_pEditView</name><op:operator pos:line="1274" pos:column="35">-&gt;</op:operator><name pos:line="1274" pos:column="37">execute</name></name><argument_list pos:line="1274" pos:column="44">(<argument><expr><name pos:line="1274" pos:column="45">SCI_SETZOOM</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1274" pos:column="58">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:line="1274" pos:column="61">//_zoomOriginalValue);</comment>
			<break pos:line="1275" pos:column="25">break;</break>

		</case><case pos:line="1277" pos:column="17">case <expr><name pos:line="1277" pos:column="22">IDM_VIEW_SYNSCROLLV</name></expr>:
		<block pos:line="1278" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="1279" pos:column="13">bool</name></type> <name pos:line="1279" pos:column="18">isSynScollV</name> <init pos:line="1279" pos:column="30">= <expr><op:operator pos:line="1279" pos:column="32">!</op:operator><name><name pos:line="1279" pos:column="33">_syncInfo</name><op:operator pos:line="1279" pos:column="42">.</op:operator><name pos:line="1279" pos:column="43">_isSynScollV</name></name></expr></init></decl>;</decl_stmt>
			
			<expr_stmt><expr><call><name pos:line="1281" pos:column="25">checkMenuItem</name><argument_list pos:line="1281" pos:column="38">(<argument><expr><name pos:line="1281" pos:column="39">IDM_VIEW_SYNSCROLLV</name></expr></argument>, <argument><expr><name pos:line="1281" pos:column="60">isSynScollV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1282" pos:column="25">_toolBar</name><op:operator pos:line="1282" pos:column="33">.</op:operator><name pos:line="1282" pos:column="34">setCheck</name></name><argument_list pos:line="1282" pos:column="42">(<argument><expr><name pos:line="1282" pos:column="43">IDM_VIEW_SYNSCROLLV</name></expr></argument>, <argument><expr><name pos:line="1282" pos:column="64">isSynScollV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="1284" pos:column="13">_syncInfo</name><op:operator pos:line="1284" pos:column="22">.</op:operator><name pos:line="1284" pos:column="23">_isSynScollV</name></name> <op:operator pos:line="1284" pos:column="36">=</op:operator> <name pos:line="1284" pos:column="38">isSynScollV</name></expr>;</expr_stmt>
			<if pos:line="1285" pos:column="25">if <condition pos:line="1285" pos:column="28">(<expr><name><name pos:line="1285" pos:column="29">_syncInfo</name><op:operator pos:line="1285" pos:column="38">.</op:operator><name pos:line="1285" pos:column="39">_isSynScollV</name></name></expr>)</condition><then pos:line="1285" pos:column="52">
			<block pos:line="1286" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1287" pos:column="33">int</name></type> <name pos:line="1287" pos:column="37">mainCurrentLine</name> <init pos:line="1287" pos:column="53">= <expr><call><name><name pos:line="1287" pos:column="55">_mainEditView</name><op:operator pos:line="1287" pos:column="68">.</op:operator><name pos:line="1287" pos:column="69">execute</name></name><argument_list pos:line="1287" pos:column="76">(<argument><expr><name pos:line="1287" pos:column="77">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1288" pos:column="33">int</name></type> <name pos:line="1288" pos:column="37">subCurrentLine</name> <init pos:line="1288" pos:column="52">= <expr><call><name><name pos:line="1288" pos:column="54">_subEditView</name><op:operator pos:line="1288" pos:column="66">.</op:operator><name pos:line="1288" pos:column="67">execute</name></name><argument_list pos:line="1288" pos:column="74">(<argument><expr><name pos:line="1288" pos:column="75">SCI_GETFIRSTVISIBLELINE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1289" pos:column="33">_syncInfo</name><op:operator pos:line="1289" pos:column="42">.</op:operator><name pos:line="1289" pos:column="43">_line</name></name> <op:operator pos:line="1289" pos:column="49">=</op:operator> <name pos:line="1289" pos:column="51">mainCurrentLine</name> <op:operator pos:line="1289" pos:column="67">-</op:operator> <name pos:line="1289" pos:column="69">subCurrentLine</name></expr>;</expr_stmt>
			}</block></then></if>
			
		}</block>
		<break pos:line="1293" pos:column="17">break;</break>

		</case><case pos:line="1295" pos:column="17">case <expr><name pos:line="1295" pos:column="22">IDM_VIEW_SYNSCROLLH</name></expr>:
		<block pos:line="1296" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="1297" pos:column="13">bool</name></type> <name pos:line="1297" pos:column="18">isSynScollH</name> <init pos:line="1297" pos:column="30">= <expr><op:operator pos:line="1297" pos:column="32">!</op:operator><name><name pos:line="1297" pos:column="33">_syncInfo</name><op:operator pos:line="1297" pos:column="42">.</op:operator><name pos:line="1297" pos:column="43">_isSynScollH</name></name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1298" pos:column="25">checkMenuItem</name><argument_list pos:line="1298" pos:column="38">(<argument><expr><name pos:line="1298" pos:column="39">IDM_VIEW_SYNSCROLLH</name></expr></argument>, <argument><expr><name pos:line="1298" pos:column="60">isSynScollH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1299" pos:column="25">_toolBar</name><op:operator pos:line="1299" pos:column="33">.</op:operator><name pos:line="1299" pos:column="34">setCheck</name></name><argument_list pos:line="1299" pos:column="42">(<argument><expr><name pos:line="1299" pos:column="43">IDM_VIEW_SYNSCROLLH</name></expr></argument>, <argument><expr><name pos:line="1299" pos:column="64">isSynScollH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt><expr><name><name pos:line="1301" pos:column="13">_syncInfo</name><op:operator pos:line="1301" pos:column="22">.</op:operator><name pos:line="1301" pos:column="23">_isSynScollH</name></name> <op:operator pos:line="1301" pos:column="36">=</op:operator> <name pos:line="1301" pos:column="38">isSynScollH</name></expr>;</expr_stmt>
			<if pos:line="1302" pos:column="25">if <condition pos:line="1302" pos:column="28">(<expr><name><name pos:line="1302" pos:column="29">_syncInfo</name><op:operator pos:line="1302" pos:column="38">.</op:operator><name pos:line="1302" pos:column="39">_isSynScollH</name></name></expr>)</condition><then pos:line="1302" pos:column="52">
			<block pos:line="1303" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1304" pos:column="33">int</name></type> <name pos:line="1304" pos:column="37">mxoffset</name> <init pos:line="1304" pos:column="46">= <expr><call><name><name pos:line="1304" pos:column="48">_mainEditView</name><op:operator pos:line="1304" pos:column="61">.</op:operator><name pos:line="1304" pos:column="62">execute</name></name><argument_list pos:line="1304" pos:column="69">(<argument><expr><name pos:line="1304" pos:column="70">SCI_GETXOFFSET</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1305" pos:column="33">int</name></type> <name pos:line="1305" pos:column="37">pixel</name> <init pos:line="1305" pos:column="43">= <expr><call><name pos:line="1305" pos:column="45">int</name><argument_list pos:line="1305" pos:column="48">(<argument><expr><call><name><name pos:line="1305" pos:column="49">_mainEditView</name><op:operator pos:line="1305" pos:column="62">.</op:operator><name pos:line="1305" pos:column="63">execute</name></name><argument_list pos:line="1305" pos:column="70">(<argument><expr><name pos:line="1305" pos:column="71">SCI_TEXTWIDTH</name></expr></argument>, <argument><expr><name pos:line="1305" pos:column="86">STYLE_DEFAULT</name></expr></argument>, <argument><expr><op:operator pos:line="1305" pos:column="101">(</op:operator><name pos:line="1305" pos:column="102">LPARAM</name><op:operator pos:line="1305" pos:column="108">)</op:operator><lit:literal type="string" pos:line="1305" pos:column="109">"P"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1306" pos:column="33">int</name></type> <name pos:line="1306" pos:column="37">mainColumn</name> <init pos:line="1306" pos:column="48">= <expr><name pos:line="1306" pos:column="50">mxoffset</name><op:operator pos:line="1306" pos:column="58">/</op:operator><name pos:line="1306" pos:column="59">pixel</name></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="1308" pos:column="33">int</name></type> <name pos:line="1308" pos:column="37">sxoffset</name> <init pos:line="1308" pos:column="46">= <expr><call><name><name pos:line="1308" pos:column="48">_subEditView</name><op:operator pos:line="1308" pos:column="60">.</op:operator><name pos:line="1308" pos:column="61">execute</name></name><argument_list pos:line="1308" pos:column="68">(<argument><expr><name pos:line="1308" pos:column="69">SCI_GETXOFFSET</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="1309" pos:column="33">pixel</name> <op:operator pos:line="1309" pos:column="39">=</op:operator> <call><name pos:line="1309" pos:column="41">int</name><argument_list pos:line="1309" pos:column="44">(<argument><expr><call><name><name pos:line="1309" pos:column="45">_subEditView</name><op:operator pos:line="1309" pos:column="57">.</op:operator><name pos:line="1309" pos:column="58">execute</name></name><argument_list pos:line="1309" pos:column="65">(<argument><expr><name pos:line="1309" pos:column="66">SCI_TEXTWIDTH</name></expr></argument>, <argument><expr><name pos:line="1309" pos:column="81">STYLE_DEFAULT</name></expr></argument>, <argument><expr><op:operator pos:line="1309" pos:column="96">(</op:operator><name pos:line="1309" pos:column="97">LPARAM</name><op:operator pos:line="1309" pos:column="103">)</op:operator><lit:literal type="string" pos:line="1309" pos:column="104">"P"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1310" pos:column="33">int</name></type> <name pos:line="1310" pos:column="37">subColumn</name> <init pos:line="1310" pos:column="47">= <expr><name pos:line="1310" pos:column="49">sxoffset</name><op:operator pos:line="1310" pos:column="57">/</op:operator><name pos:line="1310" pos:column="58">pixel</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="1311" pos:column="33">_syncInfo</name><op:operator pos:line="1311" pos:column="42">.</op:operator><name pos:line="1311" pos:column="43">_column</name></name> <op:operator pos:line="1311" pos:column="51">=</op:operator> <name pos:line="1311" pos:column="53">mainColumn</name> <op:operator pos:line="1311" pos:column="64">-</op:operator> <name pos:line="1311" pos:column="66">subColumn</name></expr>;</expr_stmt>
			}</block></then></if>
		}</block>
		<break pos:line="1314" pos:column="17">break;</break>

		</case><case pos:line="1316" pos:column="17">case <expr><name pos:line="1316" pos:column="22">IDM_VIEW_SUMMARY</name></expr>:
		<block pos:line="1317" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1318" pos:column="25">generic_string</name></type> <name pos:line="1318" pos:column="40">characterNumber</name> <init pos:line="1318" pos:column="56">= <expr><call><name pos:line="1318" pos:column="58">TEXT</name><argument_list pos:line="1318" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="1318" pos:column="63">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="1320" pos:column="25">Buffer</name> <type:modifier pos:line="1320" pos:column="32">*</type:modifier></type> <name pos:line="1320" pos:column="34">curBuf</name> <init pos:line="1320" pos:column="41">= <expr><call><name><name pos:line="1320" pos:column="43">_pEditView</name><op:operator pos:line="1320" pos:column="53">-&gt;</op:operator><name pos:line="1320" pos:column="55">getCurrentBuffer</name></name><argument_list pos:line="1320" pos:column="71">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1321" pos:column="25">int</name></type> <name pos:line="1321" pos:column="29">fileLen</name> <init pos:line="1321" pos:column="37">= <expr><call><name><name pos:line="1321" pos:column="39">curBuf</name><op:operator pos:line="1321" pos:column="45">-&gt;</op:operator><name pos:line="1321" pos:column="47">getFileLength</name></name><argument_list pos:line="1321" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="1323" pos:column="25">if <condition pos:line="1323" pos:column="28">(<expr><name pos:line="1323" pos:column="29">fileLen</name> <op:operator pos:line="1323" pos:column="37">!=</op:operator> <op:operator pos:line="1323" pos:column="40">-</op:operator><lit:literal type="number" pos:line="1323" pos:column="41">1</lit:literal></expr>)</condition><then pos:line="1323" pos:column="43">
			<block pos:line="1324" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1325" pos:column="33">TCHAR</name> <type:modifier pos:line="1325" pos:column="39">*</type:modifier></type><name pos:line="1325" pos:column="40">filePathLabel</name> <init pos:line="1325" pos:column="54">= <expr><call><name pos:line="1325" pos:column="56">TEXT</name><argument_list pos:line="1325" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="1325" pos:column="61">"Full file path: "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1326" pos:column="33">TCHAR</name> <type:modifier pos:line="1326" pos:column="39">*</type:modifier></type><name pos:line="1326" pos:column="40">fileCreateTimeLabel</name> <init pos:line="1326" pos:column="60">= <expr><call><name pos:line="1326" pos:column="62">TEXT</name><argument_list pos:line="1326" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="1326" pos:column="67">"Created: "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1327" pos:column="33">TCHAR</name> <type:modifier pos:line="1327" pos:column="39">*</type:modifier></type><name pos:line="1327" pos:column="40">fileModifyTimeLabel</name> <init pos:line="1327" pos:column="60">= <expr><call><name pos:line="1327" pos:column="62">TEXT</name><argument_list pos:line="1327" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="1327" pos:column="67">"Modified: "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1328" pos:column="33">TCHAR</name> <type:modifier pos:line="1328" pos:column="39">*</type:modifier></type><name pos:line="1328" pos:column="40">fileLenLabel</name> <init pos:line="1328" pos:column="53">= <expr><call><name pos:line="1328" pos:column="55">TEXT</name><argument_list pos:line="1328" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1328" pos:column="60">"File length (in byte): "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><name pos:line="1330" pos:column="33">characterNumber</name> <op:operator pos:line="1330" pos:column="49">+=</op:operator> <name pos:line="1330" pos:column="52">filePathLabel</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1331" pos:column="33">characterNumber</name> <op:operator pos:line="1331" pos:column="49">+=</op:operator> <call><name><name pos:line="1331" pos:column="52">curBuf</name><op:operator pos:line="1331" pos:column="58">-&gt;</op:operator><name pos:line="1331" pos:column="60">getFullPathName</name></name><argument_list pos:line="1331" pos:column="75">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1332" pos:column="33">characterNumber</name> <op:operator pos:line="1332" pos:column="49">+=</op:operator> <call><name pos:line="1332" pos:column="52">TEXT</name><argument_list pos:line="1332" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1332" pos:column="57">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><name pos:line="1334" pos:column="33">characterNumber</name> <op:operator pos:line="1334" pos:column="49">+=</op:operator> <name pos:line="1334" pos:column="52">fileCreateTimeLabel</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1335" pos:column="33">characterNumber</name> <op:operator pos:line="1335" pos:column="49">+=</op:operator> <call><name><name pos:line="1335" pos:column="52">curBuf</name><op:operator pos:line="1335" pos:column="58">-&gt;</op:operator><name pos:line="1335" pos:column="60">getFileTime</name></name><argument_list pos:line="1335" pos:column="71">(<argument><expr><name><name pos:line="1335" pos:column="72">Buffer</name><op:operator pos:line="1335" pos:column="78">::</op:operator><name pos:line="1335" pos:column="80">ft_created</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1336" pos:column="33">characterNumber</name> <op:operator pos:line="1336" pos:column="49">+=</op:operator> <call><name pos:line="1336" pos:column="52">TEXT</name><argument_list pos:line="1336" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1336" pos:column="57">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><name pos:line="1338" pos:column="33">characterNumber</name> <op:operator pos:line="1338" pos:column="49">+=</op:operator> <name pos:line="1338" pos:column="52">fileModifyTimeLabel</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1339" pos:column="33">characterNumber</name> <op:operator pos:line="1339" pos:column="49">+=</op:operator> <call><name><name pos:line="1339" pos:column="52">curBuf</name><op:operator pos:line="1339" pos:column="58">-&gt;</op:operator><name pos:line="1339" pos:column="60">getFileTime</name></name><argument_list pos:line="1339" pos:column="71">(<argument><expr><name><name pos:line="1339" pos:column="72">Buffer</name><op:operator pos:line="1339" pos:column="78">::</op:operator><name pos:line="1339" pos:column="80">ft_modified</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1340" pos:column="33">characterNumber</name> <op:operator pos:line="1340" pos:column="49">+=</op:operator> <call><name pos:line="1340" pos:column="52">TEXT</name><argument_list pos:line="1340" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1340" pos:column="57">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="1342" pos:column="33">TCHAR</name></type> <name><name pos:line="1342" pos:column="39">fileLenStr</name><index pos:line="1342" pos:column="49">[<expr><lit:literal type="number" pos:line="1342" pos:column="50">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="1343" pos:column="33">generic_sprintf</name><argument_list pos:line="1343" pos:column="48">(<argument><expr><name pos:line="1343" pos:column="49">fileLenStr</name></expr></argument>, <argument><expr><call><name pos:line="1343" pos:column="61">TEXT</name><argument_list pos:line="1343" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1343" pos:column="66">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="1343" pos:column="73">(</op:operator><name pos:line="1343" pos:column="74">size_t</name><op:operator pos:line="1343" pos:column="80">)</op:operator><name pos:line="1343" pos:column="81">fileLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1344" pos:column="33">characterNumber</name> <op:operator pos:line="1344" pos:column="49">+=</op:operator> <name pos:line="1344" pos:column="52">fileLenLabel</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1345" pos:column="33">characterNumber</name> <op:operator pos:line="1345" pos:column="49">+=</op:operator> <name pos:line="1345" pos:column="52">fileLenStr</name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1346" pos:column="33">characterNumber</name> <op:operator pos:line="1346" pos:column="49">+=</op:operator> <call><name pos:line="1346" pos:column="52">TEXT</name><argument_list pos:line="1346" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1346" pos:column="57">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="1347" pos:column="33">characterNumber</name> <op:operator pos:line="1347" pos:column="49">+=</op:operator> <call><name pos:line="1347" pos:column="52">TEXT</name><argument_list pos:line="1347" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1347" pos:column="57">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<decl_stmt><decl><type><name pos:line="1349" pos:column="25">TCHAR</name> <type:modifier pos:line="1349" pos:column="31">*</type:modifier></type><name pos:line="1349" pos:column="32">nbCharLabel</name> <init pos:line="1349" pos:column="44">= <expr><call><name pos:line="1349" pos:column="46">TEXT</name><argument_list pos:line="1349" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1349" pos:column="51">"Characters (without blanks): "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1350" pos:column="25">TCHAR</name> <type:modifier pos:line="1350" pos:column="31">*</type:modifier></type><name pos:line="1350" pos:column="32">nbWordLabel</name> <init pos:line="1350" pos:column="44">= <expr><call><name pos:line="1350" pos:column="46">TEXT</name><argument_list pos:line="1350" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1350" pos:column="51">"Words: "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1351" pos:column="25">TCHAR</name> <type:modifier pos:line="1351" pos:column="31">*</type:modifier></type><name pos:line="1351" pos:column="32">nbLineLabel</name> <init pos:line="1351" pos:column="44">= <expr><call><name pos:line="1351" pos:column="46">TEXT</name><argument_list pos:line="1351" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1351" pos:column="51">"Lines: "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1352" pos:column="25">TCHAR</name> <type:modifier pos:line="1352" pos:column="31">*</type:modifier></type><name pos:line="1352" pos:column="32">nbByteLabel</name> <init pos:line="1352" pos:column="44">= <expr><call><name pos:line="1352" pos:column="46">TEXT</name><argument_list pos:line="1352" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1352" pos:column="51">"Current document length: "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1353" pos:column="25">TCHAR</name> <type:modifier pos:line="1353" pos:column="31">*</type:modifier></type><name pos:line="1353" pos:column="32">nbSelLabel1</name> <init pos:line="1353" pos:column="44">= <expr><call><name pos:line="1353" pos:column="46">TEXT</name><argument_list pos:line="1353" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1353" pos:column="51">" selected characters ("</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1354" pos:column="25">TCHAR</name> <type:modifier pos:line="1354" pos:column="31">*</type:modifier></type><name pos:line="1354" pos:column="32">nbSelLabel2</name> <init pos:line="1354" pos:column="44">= <expr><call><name pos:line="1354" pos:column="46">TEXT</name><argument_list pos:line="1354" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1354" pos:column="51">" bytes) in "</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1355" pos:column="25">TCHAR</name> <type:modifier pos:line="1355" pos:column="31">*</type:modifier></type><name pos:line="1355" pos:column="32">nbRangeLabel</name> <init pos:line="1355" pos:column="45">= <expr><call><name pos:line="1355" pos:column="47">TEXT</name><argument_list pos:line="1355" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1355" pos:column="52">" ranges"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="1357" pos:column="25">UniMode</name></type> <name pos:line="1357" pos:column="33">um</name> <init pos:line="1357" pos:column="36">= <expr><call><name><name pos:line="1357" pos:column="38">_pEditView</name><op:operator pos:line="1357" pos:column="48">-&gt;</op:operator><name pos:line="1357" pos:column="50">getCurrentBuffer</name></name><argument_list pos:line="1357" pos:column="66">()</argument_list></call><op:operator pos:line="1357" pos:column="68">-&gt;</op:operator><call><name pos:line="1357" pos:column="70">getUnicodeMode</name><argument_list pos:line="1357" pos:column="84">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1358" pos:column="25">int</name></type> <name pos:line="1358" pos:column="29">nbChar</name> <init pos:line="1358" pos:column="36">= <expr><call><name pos:line="1358" pos:column="38">getCurrentDocCharCount</name><argument_list pos:line="1358" pos:column="60">(<argument><expr><name pos:line="1358" pos:column="61">um</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1359" pos:column="25">int</name></type> <name pos:line="1359" pos:column="29">nbWord</name> <init pos:line="1359" pos:column="36">= <expr><call><name pos:line="1359" pos:column="38">wordCount</name><argument_list pos:line="1359" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1360" pos:column="25">size_t</name></type> <name pos:line="1360" pos:column="32">nbLine</name> <init pos:line="1360" pos:column="39">= <expr><call><name><name pos:line="1360" pos:column="41">_pEditView</name><op:operator pos:line="1360" pos:column="51">-&gt;</op:operator><name pos:line="1360" pos:column="53">execute</name></name><argument_list pos:line="1360" pos:column="60">(<argument><expr><name pos:line="1360" pos:column="61">SCI_GETLINECOUNT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1361" pos:column="25">int</name></type> <name pos:line="1361" pos:column="29">nbByte</name> <init pos:line="1361" pos:column="36">= <expr><call><name><name pos:line="1361" pos:column="38">_pEditView</name><op:operator pos:line="1361" pos:column="48">-&gt;</op:operator><name pos:line="1361" pos:column="50">execute</name></name><argument_list pos:line="1361" pos:column="57">(<argument><expr><name pos:line="1361" pos:column="58">SCI_GETLENGTH</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1362" pos:column="25">int</name></type> <name pos:line="1362" pos:column="29">nbSel</name> <init pos:line="1362" pos:column="35">= <expr><call><name pos:line="1362" pos:column="37">getSelectedCharNumber</name><argument_list pos:line="1362" pos:column="58">(<argument><expr><name pos:line="1362" pos:column="59">um</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1363" pos:column="25">int</name></type> <name pos:line="1363" pos:column="29">nbSelByte</name> <init pos:line="1363" pos:column="39">= <expr><call><name pos:line="1363" pos:column="41">getSelectedBytes</name><argument_list pos:line="1363" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1364" pos:column="25">int</name></type> <name pos:line="1364" pos:column="29">nbRange</name> <init pos:line="1364" pos:column="37">= <expr><call><name pos:line="1364" pos:column="39">getSelectedAreas</name><argument_list pos:line="1364" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="1366" pos:column="25">TCHAR</name></type> <name><name pos:line="1366" pos:column="31">nbCharStr</name><index pos:line="1366" pos:column="40">[<expr><lit:literal type="number" pos:line="1366" pos:column="41">32</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1367" pos:column="25">TCHAR</name></type> <name><name pos:line="1367" pos:column="31">nbWordStr</name><index pos:line="1367" pos:column="40">[<expr><lit:literal type="number" pos:line="1367" pos:column="41">16</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1368" pos:column="25">TCHAR</name></type> <name><name pos:line="1368" pos:column="31">nbByteStr</name><index pos:line="1368" pos:column="40">[<expr><lit:literal type="number" pos:line="1368" pos:column="41">32</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1369" pos:column="25">TCHAR</name></type> <name><name pos:line="1369" pos:column="31">nbLineStr</name><index pos:line="1369" pos:column="40">[<expr><lit:literal type="number" pos:line="1369" pos:column="41">32</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1370" pos:column="25">TCHAR</name></type> <name><name pos:line="1370" pos:column="31">nbSelStr</name><index pos:line="1370" pos:column="39">[<expr><lit:literal type="number" pos:line="1370" pos:column="40">32</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1371" pos:column="25">TCHAR</name></type> <name><name pos:line="1371" pos:column="31">nbSelByteStr</name><index pos:line="1371" pos:column="43">[<expr><lit:literal type="number" pos:line="1371" pos:column="44">32</lit:literal></expr>]</index></name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1372" pos:column="25">TCHAR</name></type> <name><name pos:line="1372" pos:column="31">nbRangeStr</name><index pos:line="1372" pos:column="41">[<expr><lit:literal type="number" pos:line="1372" pos:column="42">8</lit:literal></expr>]</index></name></decl>;</decl_stmt>

			<expr_stmt><expr><call><name pos:line="1374" pos:column="25">generic_sprintf</name><argument_list pos:line="1374" pos:column="40">(<argument><expr><name pos:line="1374" pos:column="41">nbCharStr</name></expr></argument>, <argument><expr><call><name pos:line="1374" pos:column="52">TEXT</name><argument_list pos:line="1374" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1374" pos:column="57">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1374" pos:column="64">nbChar</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1375" pos:column="25">characterNumber</name> <op:operator pos:line="1375" pos:column="41">+=</op:operator> <name pos:line="1375" pos:column="44">nbCharLabel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1376" pos:column="25">characterNumber</name> <op:operator pos:line="1376" pos:column="41">+=</op:operator> <name pos:line="1376" pos:column="44">nbCharStr</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1377" pos:column="25">characterNumber</name> <op:operator pos:line="1377" pos:column="41">+=</op:operator> <call><name pos:line="1377" pos:column="44">TEXT</name><argument_list pos:line="1377" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="1377" pos:column="49">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="1379" pos:column="25">generic_sprintf</name><argument_list pos:line="1379" pos:column="40">(<argument><expr><name pos:line="1379" pos:column="41">nbWordStr</name></expr></argument>, <argument><expr><call><name pos:line="1379" pos:column="52">TEXT</name><argument_list pos:line="1379" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1379" pos:column="57">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1379" pos:column="64">nbWord</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1380" pos:column="25">characterNumber</name> <op:operator pos:line="1380" pos:column="41">+=</op:operator> <name pos:line="1380" pos:column="44">nbWordLabel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1381" pos:column="25">characterNumber</name> <op:operator pos:line="1381" pos:column="41">+=</op:operator> <name pos:line="1381" pos:column="44">nbWordStr</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1382" pos:column="25">characterNumber</name> <op:operator pos:line="1382" pos:column="41">+=</op:operator> <call><name pos:line="1382" pos:column="44">TEXT</name><argument_list pos:line="1382" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="1382" pos:column="49">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="1384" pos:column="25">generic_sprintf</name><argument_list pos:line="1384" pos:column="40">(<argument><expr><name pos:line="1384" pos:column="41">nbLineStr</name></expr></argument>, <argument><expr><call><name pos:line="1384" pos:column="52">TEXT</name><argument_list pos:line="1384" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1384" pos:column="57">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1384" pos:column="64">nbLine</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1385" pos:column="25">characterNumber</name> <op:operator pos:line="1385" pos:column="41">+=</op:operator> <name pos:line="1385" pos:column="44">nbLineLabel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1386" pos:column="25">characterNumber</name> <op:operator pos:line="1386" pos:column="41">+=</op:operator> <name pos:line="1386" pos:column="44">nbLineStr</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1387" pos:column="25">characterNumber</name> <op:operator pos:line="1387" pos:column="41">+=</op:operator> <call><name pos:line="1387" pos:column="44">TEXT</name><argument_list pos:line="1387" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="1387" pos:column="49">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="1389" pos:column="25">generic_sprintf</name><argument_list pos:line="1389" pos:column="40">(<argument><expr><name pos:line="1389" pos:column="41">nbByteStr</name></expr></argument>, <argument><expr><call><name pos:line="1389" pos:column="52">TEXT</name><argument_list pos:line="1389" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="1389" pos:column="57">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1389" pos:column="64">nbByte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1390" pos:column="25">characterNumber</name> <op:operator pos:line="1390" pos:column="41">+=</op:operator> <name pos:line="1390" pos:column="44">nbByteLabel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1391" pos:column="25">characterNumber</name> <op:operator pos:line="1391" pos:column="41">+=</op:operator> <name pos:line="1391" pos:column="44">nbByteStr</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1392" pos:column="25">characterNumber</name> <op:operator pos:line="1392" pos:column="41">+=</op:operator> <call><name pos:line="1392" pos:column="44">TEXT</name><argument_list pos:line="1392" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="1392" pos:column="49">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name pos:line="1394" pos:column="25">generic_sprintf</name><argument_list pos:line="1394" pos:column="40">(<argument><expr><name pos:line="1394" pos:column="41">nbSelStr</name></expr></argument>, <argument><expr><call><name pos:line="1394" pos:column="51">TEXT</name><argument_list pos:line="1394" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1394" pos:column="56">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1394" pos:column="63">nbSel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1395" pos:column="25">generic_sprintf</name><argument_list pos:line="1395" pos:column="40">(<argument><expr><name pos:line="1395" pos:column="41">nbSelByteStr</name></expr></argument>, <argument><expr><call><name pos:line="1395" pos:column="55">TEXT</name><argument_list pos:line="1395" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="1395" pos:column="60">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1395" pos:column="67">nbSelByte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1396" pos:column="25">generic_sprintf</name><argument_list pos:line="1396" pos:column="40">(<argument><expr><name pos:line="1396" pos:column="41">nbRangeStr</name></expr></argument>, <argument><expr><call><name pos:line="1396" pos:column="53">TEXT</name><argument_list pos:line="1396" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="1396" pos:column="58">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1396" pos:column="65">nbRange</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1397" pos:column="25">characterNumber</name> <op:operator pos:line="1397" pos:column="41">+=</op:operator> <name pos:line="1397" pos:column="44">nbSelStr</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1398" pos:column="25">characterNumber</name> <op:operator pos:line="1398" pos:column="41">+=</op:operator> <name pos:line="1398" pos:column="44">nbSelLabel1</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1399" pos:column="25">characterNumber</name> <op:operator pos:line="1399" pos:column="41">+=</op:operator> <name pos:line="1399" pos:column="44">nbSelByteStr</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1400" pos:column="25">characterNumber</name> <op:operator pos:line="1400" pos:column="41">+=</op:operator> <name pos:line="1400" pos:column="44">nbSelLabel2</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1401" pos:column="25">characterNumber</name> <op:operator pos:line="1401" pos:column="41">+=</op:operator> <name pos:line="1401" pos:column="44">nbRangeStr</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1402" pos:column="25">characterNumber</name> <op:operator pos:line="1402" pos:column="41">+=</op:operator> <name pos:line="1402" pos:column="44">nbRangeLabel</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="1403" pos:column="25">characterNumber</name> <op:operator pos:line="1403" pos:column="41">+=</op:operator> <call><name pos:line="1403" pos:column="44">TEXT</name><argument_list pos:line="1403" pos:column="48">(<argument><expr><lit:literal type="string" pos:line="1403" pos:column="49">"\r"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><op:operator pos:line="1405" pos:column="25">::</op:operator><name pos:line="1405" pos:column="27">MessageBox</name></name><argument_list pos:line="1405" pos:column="37">(<argument><expr><call><name><name pos:line="1405" pos:column="38">_pPublicInterface</name><op:operator pos:line="1405" pos:column="55">-&gt;</op:operator><name pos:line="1405" pos:column="57">getHSelf</name></name><argument_list pos:line="1405" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1405" pos:column="69">characterNumber</name><op:operator pos:line="1405" pos:column="84">.</op:operator><name pos:line="1405" pos:column="85">c_str</name></name><argument_list pos:line="1405" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="1405" pos:column="94">TEXT</name><argument_list pos:line="1405" pos:column="98">(<argument><expr><lit:literal type="string" pos:line="1405" pos:column="99">"Summary"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1405" pos:column="111">MB_OK</name><op:operator pos:line="1405" pos:column="116">|</op:operator><name pos:line="1405" pos:column="117">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="1407" pos:column="17">break;</break>

		</case><case pos:line="1409" pos:column="17">case <expr><name pos:line="1409" pos:column="22">IDM_EXECUTE</name></expr>:
		<block pos:line="1410" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1411" pos:column="25">bool</name></type> <name pos:line="1411" pos:column="30">isFirstTime</name> <init pos:line="1411" pos:column="42">= <expr><op:operator pos:line="1411" pos:column="44">!</op:operator><call><name><name pos:line="1411" pos:column="45">_runDlg</name><op:operator pos:line="1411" pos:column="52">.</op:operator><name pos:line="1411" pos:column="53">isCreated</name></name><argument_list pos:line="1411" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1412" pos:column="25">_runDlg</name><op:operator pos:line="1412" pos:column="32">.</op:operator><name pos:line="1412" pos:column="33">doDialog</name></name><argument_list pos:line="1412" pos:column="41">(<argument><expr><call><name><name pos:line="1412" pos:column="42">_nativeLangSpeaker</name><op:operator pos:line="1412" pos:column="60">.</op:operator><name pos:line="1412" pos:column="61">isRTL</name></name><argument_list pos:line="1412" pos:column="66">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="1413" pos:column="25">if <condition pos:line="1413" pos:column="28">(<expr><name pos:line="1413" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="1413" pos:column="41">
				<expr_stmt><expr><call><name><name pos:line="1414" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="1414" pos:column="51">.</op:operator><name pos:line="1414" pos:column="52">changeDlgLang</name></name><argument_list pos:line="1414" pos:column="65">(<argument><expr><call><name><name pos:line="1414" pos:column="66">_runDlg</name><op:operator pos:line="1414" pos:column="73">.</op:operator><name pos:line="1414" pos:column="74">getHSelf</name></name><argument_list pos:line="1414" pos:column="82">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="1414" pos:column="86">"Run"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

			<break pos:line="1416" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1419" pos:column="17">case <expr><name pos:line="1419" pos:column="22">IDM_FORMAT_TODOS</name></expr> :
		</case><case pos:line="1420" pos:column="17">case <expr><name pos:line="1420" pos:column="22">IDM_FORMAT_TOUNIX</name></expr> :
		</case><case pos:line="1421" pos:column="17">case <expr><name pos:line="1421" pos:column="22">IDM_FORMAT_TOMAC</name></expr> :
		<block pos:line="1422" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1423" pos:column="25">Buffer</name> <type:modifier pos:line="1423" pos:column="32">*</type:modifier></type> <name pos:line="1423" pos:column="34">buf</name> <init pos:line="1423" pos:column="38">= <expr><call><name><name pos:line="1423" pos:column="40">_pEditView</name><op:operator pos:line="1423" pos:column="50">-&gt;</op:operator><name pos:line="1423" pos:column="52">getCurrentBuffer</name></name><argument_list pos:line="1423" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>
			
			<decl_stmt><decl><type><name pos:line="1425" pos:column="25">int</name></type> <name pos:line="1425" pos:column="29">f</name> <init pos:line="1425" pos:column="31">= <expr><call><name pos:line="1425" pos:column="33">int</name><argument_list pos:line="1425" pos:column="36">(<argument><expr><op:operator pos:line="1425" pos:column="37">(</op:operator><name pos:line="1425" pos:column="38">id</name> <op:operator pos:line="1425" pos:column="41">==</op:operator> <name pos:line="1425" pos:column="44">IDM_FORMAT_TODOS</name><op:operator pos:line="1425" pos:column="60">)</op:operator><op:operator pos:line="1425" pos:column="61">?</op:operator><name pos:line="1425" pos:column="62">SC_EOL_CRLF</name><op:operator pos:line="1425" pos:column="73">:</op:operator><op:operator pos:line="1425" pos:column="74">(</op:operator><name pos:line="1425" pos:column="75">id</name> <op:operator pos:line="1425" pos:column="78">==</op:operator> <name pos:line="1425" pos:column="81">IDM_FORMAT_TOUNIX</name><op:operator pos:line="1425" pos:column="98">)</op:operator><op:operator pos:line="1425" pos:column="99">?</op:operator><name pos:line="1425" pos:column="100">SC_EOL_LF</name><op:operator pos:line="1425" pos:column="109">:</op:operator><name pos:line="1425" pos:column="110">SC_EOL_CR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><call><name><name pos:line="1427" pos:column="25">buf</name><op:operator pos:line="1427" pos:column="28">-&gt;</op:operator><name pos:line="1427" pos:column="30">setFormat</name></name><argument_list pos:line="1427" pos:column="39">(<argument><expr><op:operator pos:line="1427" pos:column="40">(</op:operator><name pos:line="1427" pos:column="41">formatType</name><op:operator pos:line="1427" pos:column="51">)</op:operator><name pos:line="1427" pos:column="52">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1428" pos:column="25">_pEditView</name><op:operator pos:line="1428" pos:column="35">-&gt;</op:operator><name pos:line="1428" pos:column="37">execute</name></name><argument_list pos:line="1428" pos:column="44">(<argument><expr><name pos:line="1428" pos:column="45">SCI_CONVERTEOLS</name></expr></argument>, <argument><expr><call><name><name pos:line="1428" pos:column="62">buf</name><op:operator pos:line="1428" pos:column="65">-&gt;</op:operator><name pos:line="1428" pos:column="67">getFormat</name></name><argument_list pos:line="1428" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1429" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="1432" pos:column="17">case <expr><name pos:line="1432" pos:column="22">IDM_FORMAT_ANSI</name></expr> :
		</case><case pos:line="1433" pos:column="17">case <expr><name pos:line="1433" pos:column="22">IDM_FORMAT_UTF_8</name></expr> :	
		</case><case pos:line="1434" pos:column="17">case <expr><name pos:line="1434" pos:column="22">IDM_FORMAT_UCS_2BE</name></expr> :
		</case><case pos:line="1435" pos:column="17">case <expr><name pos:line="1435" pos:column="22">IDM_FORMAT_UCS_2LE</name></expr> :
		</case><case pos:line="1436" pos:column="17">case <expr><name pos:line="1436" pos:column="22">IDM_FORMAT_AS_UTF_8</name></expr> :
		<block pos:line="1437" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1438" pos:column="25">Buffer</name> <type:modifier pos:line="1438" pos:column="32">*</type:modifier></type> <name pos:line="1438" pos:column="34">buf</name> <init pos:line="1438" pos:column="38">= <expr><call><name><name pos:line="1438" pos:column="40">_pEditView</name><op:operator pos:line="1438" pos:column="50">-&gt;</op:operator><name pos:line="1438" pos:column="52">getCurrentBuffer</name></name><argument_list pos:line="1438" pos:column="68">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="1440" pos:column="25">UniMode</name></type> <name pos:line="1440" pos:column="33">um</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1441" pos:column="25">bool</name></type> <name pos:line="1441" pos:column="30">shoulBeDirty</name> <init pos:line="1441" pos:column="43">= <expr><lit:literal type="boolean" pos:line="1441" pos:column="45">true</lit:literal></expr></init></decl>;</decl_stmt>
			<switch pos:line="1442" pos:column="25">switch <condition pos:line="1442" pos:column="32">(<expr><name pos:line="1442" pos:column="33">id</name></expr>)</condition>
			<block pos:line="1443" pos:column="25">{
				<case pos:line="1444" pos:column="33">case <expr><name pos:line="1444" pos:column="38">IDM_FORMAT_AS_UTF_8</name></expr>:
					<expr_stmt><expr><name pos:line="1445" pos:column="41">shoulBeDirty</name> <op:operator pos:line="1445" pos:column="54">=</op:operator> <call><name><name pos:line="1445" pos:column="56">buf</name><op:operator pos:line="1445" pos:column="59">-&gt;</op:operator><name pos:line="1445" pos:column="61">getUnicodeMode</name></name><argument_list pos:line="1445" pos:column="75">()</argument_list></call> <op:operator pos:line="1445" pos:column="78">!=</op:operator> <name pos:line="1445" pos:column="81">uni8Bit</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1446" pos:column="41">um</name> <op:operator pos:line="1446" pos:column="44">=</op:operator> <name pos:line="1446" pos:column="46">uniCookie</name></expr>;</expr_stmt>
					<break pos:line="1447" pos:column="41">break;</break>
				
				</case><case pos:line="1449" pos:column="33">case <expr><name pos:line="1449" pos:column="38">IDM_FORMAT_UTF_8</name></expr>:
					<expr_stmt><expr><name pos:line="1450" pos:column="41">um</name> <op:operator pos:line="1450" pos:column="44">=</op:operator> <name pos:line="1450" pos:column="46">uniUTF8</name></expr>;</expr_stmt>
					<break pos:line="1451" pos:column="41">break;</break>

				</case><case pos:line="1453" pos:column="33">case <expr><name pos:line="1453" pos:column="38">IDM_FORMAT_UCS_2BE</name></expr>:
					<expr_stmt><expr><name pos:line="1454" pos:column="41">um</name> <op:operator pos:line="1454" pos:column="44">=</op:operator> <name pos:line="1454" pos:column="46">uni16BE</name></expr>;</expr_stmt>
					<break pos:line="1455" pos:column="41">break;</break>

				</case><case pos:line="1457" pos:column="33">case <expr><name pos:line="1457" pos:column="38">IDM_FORMAT_UCS_2LE</name></expr>:
					<expr_stmt><expr><name pos:line="1458" pos:column="41">um</name> <op:operator pos:line="1458" pos:column="44">=</op:operator> <name pos:line="1458" pos:column="46">uni16LE</name></expr>;</expr_stmt>
					<break pos:line="1459" pos:column="41">break;</break>

				</case><default pos:line="1461" pos:column="33">default : <comment type="line" pos:line="1461" pos:column="43">// IDM_FORMAT_ANSI</comment>
					<expr_stmt><expr><name pos:line="1462" pos:column="41">shoulBeDirty</name> <op:operator pos:line="1462" pos:column="54">=</op:operator> <call><name><name pos:line="1462" pos:column="56">buf</name><op:operator pos:line="1462" pos:column="59">-&gt;</op:operator><name pos:line="1462" pos:column="61">getUnicodeMode</name></name><argument_list pos:line="1462" pos:column="75">()</argument_list></call> <op:operator pos:line="1462" pos:column="78">!=</op:operator> <name pos:line="1462" pos:column="81">uniCookie</name></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="1463" pos:column="41">um</name> <op:operator pos:line="1463" pos:column="44">=</op:operator> <name pos:line="1463" pos:column="46">uni8Bit</name></expr>;</expr_stmt>
			</default>}</block></switch>

			<if pos:line="1466" pos:column="25">if <condition pos:line="1466" pos:column="28">(<expr><call><name><name pos:line="1466" pos:column="29">buf</name><op:operator pos:line="1466" pos:column="32">-&gt;</op:operator><name pos:line="1466" pos:column="34">getEncoding</name></name><argument_list pos:line="1466" pos:column="45">()</argument_list></call> <op:operator pos:line="1466" pos:column="48">!=</op:operator> <op:operator pos:line="1466" pos:column="51">-</op:operator><lit:literal type="number" pos:line="1466" pos:column="52">1</lit:literal></expr>)</condition><then pos:line="1466" pos:column="54">
			<block pos:line="1467" pos:column="25">{
				<if pos:line="1468" pos:column="33">if <condition pos:line="1468" pos:column="36">(<expr><call><name><name pos:line="1468" pos:column="37">buf</name><op:operator pos:line="1468" pos:column="40">-&gt;</op:operator><name pos:line="1468" pos:column="42">isDirty</name></name><argument_list pos:line="1468" pos:column="49">()</argument_list></call></expr>)</condition><then pos:line="1468" pos:column="52">
				<block pos:line="1469" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1470" pos:column="41">int</name></type> <name pos:line="1470" pos:column="45">answer</name> <init pos:line="1470" pos:column="52">= <expr><call><name><name pos:line="1470" pos:column="54">_nativeLangSpeaker</name><op:operator pos:line="1470" pos:column="72">.</op:operator><name pos:line="1470" pos:column="73">messageBox</name></name><argument_list pos:line="1470" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="1470" pos:column="84">"SaveCurrentModifWarning"</lit:literal></expr></argument>,
						<argument><expr><name pos:line="1471" pos:column="49">NULL</name></expr></argument>,
						<argument><expr><call><name pos:line="1472" pos:column="49">TEXT</name><argument_list pos:line="1472" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1472" pos:column="54">"You should save the current modification.\rAll the saved modifications can not be undone.\r\rContinue?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
						<argument><expr><call><name pos:line="1473" pos:column="49">TEXT</name><argument_list pos:line="1473" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1473" pos:column="54">"Save Current Modification"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
						<argument><expr><name pos:line="1474" pos:column="49">MB_YESNO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

					<if pos:line="1476" pos:column="41">if <condition pos:line="1476" pos:column="44">(<expr><name pos:line="1476" pos:column="45">answer</name> <op:operator pos:line="1476" pos:column="52">==</op:operator> <name pos:line="1476" pos:column="55">IDYES</name></expr>)</condition><then pos:line="1476" pos:column="61">
					<block pos:line="1477" pos:column="41">{
						<expr_stmt><expr><call><name pos:line="1478" pos:column="49">fileSave</name><argument_list pos:line="1478" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1479" pos:column="49">_pEditView</name><op:operator pos:line="1479" pos:column="59">-&gt;</op:operator><name pos:line="1479" pos:column="61">execute</name></name><argument_list pos:line="1479" pos:column="68">(<argument><expr><name pos:line="1479" pos:column="69">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="1481" pos:column="41">else
						<return pos:line="1482" pos:column="49">return;</return></else></if>
				}</block></then></if>

				<if pos:line="1485" pos:column="33">if <condition pos:line="1485" pos:column="36">(<expr><call><name><name pos:line="1485" pos:column="37">_pEditView</name><op:operator pos:line="1485" pos:column="47">-&gt;</op:operator><name pos:line="1485" pos:column="49">execute</name></name><argument_list pos:line="1485" pos:column="56">(<argument><expr><name pos:line="1485" pos:column="57">SCI_CANUNDO</name></expr></argument>)</argument_list></call> <op:operator pos:line="1485" pos:column="70">==</op:operator> <name pos:line="1485" pos:column="73">TRUE</name></expr>)</condition><then pos:line="1485" pos:column="78">
				<block pos:line="1486" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="1487" pos:column="41">generic_string</name></type> <name pos:line="1487" pos:column="56">msg</name></decl><op:operator pos:line="1487" pos:column="59">,</op:operator> <decl><type ref="prev"/><name pos:line="1487" pos:column="61">title</name></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="1488" pos:column="41">int</name></type> <name pos:line="1488" pos:column="45">answer</name> <init pos:line="1488" pos:column="52">= <expr><call><name><name pos:line="1488" pos:column="54">_nativeLangSpeaker</name><op:operator pos:line="1488" pos:column="72">.</op:operator><name pos:line="1488" pos:column="73">messageBox</name></name><argument_list pos:line="1488" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="1488" pos:column="84">"LoseUndoAbilityWarning"</lit:literal></expr></argument>,
						<argument><expr><name pos:line="1489" pos:column="49">NULL</name></expr></argument>,
						<argument><expr><call><name pos:line="1490" pos:column="49">TEXT</name><argument_list pos:line="1490" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1490" pos:column="54">"You should save the current modification.\rAll the saved modifications can not be undone.\r\rContinue?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
						<argument><expr><call><name pos:line="1491" pos:column="49">TEXT</name><argument_list pos:line="1491" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="1491" pos:column="54">"Lose Undo Ability Waning"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
						<argument><expr><name pos:line="1492" pos:column="49">MB_YESNO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="1493" pos:column="41">if <condition pos:line="1493" pos:column="44">(<expr><name pos:line="1493" pos:column="45">answer</name> <op:operator pos:line="1493" pos:column="52">==</op:operator> <name pos:line="1493" pos:column="55">IDYES</name></expr>)</condition><then pos:line="1493" pos:column="61">
					<block pos:line="1494" pos:column="41">{
						<comment type="line" pos:line="1495" pos:column="49">// Do nothing</comment>
					}</block></then>
					<else pos:line="1497" pos:column="41">else
						<return pos:line="1498" pos:column="49">return;</return></else></if>
				}</block></then></if>

				<expr_stmt><expr><call><name><name pos:line="1501" pos:column="33">buf</name><op:operator pos:line="1501" pos:column="36">-&gt;</op:operator><name pos:line="1501" pos:column="38">setEncoding</name></name><argument_list pos:line="1501" pos:column="49">(<argument><expr><op:operator pos:line="1501" pos:column="50">-</op:operator><lit:literal type="number" pos:line="1501" pos:column="51">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<if pos:line="1503" pos:column="33">if <condition pos:line="1503" pos:column="36">(<expr><name pos:line="1503" pos:column="37">um</name> <op:operator pos:line="1503" pos:column="40">==</op:operator> <name pos:line="1503" pos:column="43">uni8Bit</name></expr>)</condition><then pos:line="1503" pos:column="51">
					<expr_stmt><expr><call><name><name pos:line="1504" pos:column="41">_pEditView</name><op:operator pos:line="1504" pos:column="51">-&gt;</op:operator><name pos:line="1504" pos:column="53">execute</name></name><argument_list pos:line="1504" pos:column="60">(<argument><expr><name pos:line="1504" pos:column="61">SCI_SETCODEPAGE</name></expr></argument>, <argument><expr><name pos:line="1504" pos:column="78">CP_ACP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="1505" pos:column="33">else
					<expr_stmt><expr><call><name><name pos:line="1506" pos:column="41">buf</name><op:operator pos:line="1506" pos:column="44">-&gt;</op:operator><name pos:line="1506" pos:column="46">setUnicodeMode</name></name><argument_list pos:line="1506" pos:column="60">(<argument><expr><name pos:line="1506" pos:column="61">um</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
				<expr_stmt><expr><call><name pos:line="1507" pos:column="33">fileReload</name><argument_list pos:line="1507" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="1509" pos:column="25">else
			<block pos:line="1510" pos:column="25">{
				<if pos:line="1511" pos:column="33">if <condition pos:line="1511" pos:column="36">(<expr><call><name><name pos:line="1511" pos:column="37">buf</name><op:operator pos:line="1511" pos:column="40">-&gt;</op:operator><name pos:line="1511" pos:column="42">getUnicodeMode</name></name><argument_list pos:line="1511" pos:column="56">()</argument_list></call> <op:operator pos:line="1511" pos:column="59">!=</op:operator> <name pos:line="1511" pos:column="62">um</name></expr>)</condition><then pos:line="1511" pos:column="65">
				<block pos:line="1512" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="1513" pos:column="41">buf</name><op:operator pos:line="1513" pos:column="44">-&gt;</op:operator><name pos:line="1513" pos:column="46">setUnicodeMode</name></name><argument_list pos:line="1513" pos:column="60">(<argument><expr><name pos:line="1513" pos:column="61">um</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<if pos:line="1514" pos:column="41">if <condition pos:line="1514" pos:column="44">(<expr><name pos:line="1514" pos:column="45">shoulBeDirty</name></expr>)</condition><then pos:line="1514" pos:column="58">
						<expr_stmt><expr><call><name><name pos:line="1515" pos:column="49">buf</name><op:operator pos:line="1515" pos:column="52">-&gt;</op:operator><name pos:line="1515" pos:column="54">setDirty</name></name><argument_list pos:line="1515" pos:column="62">(<argument><expr><lit:literal type="boolean" pos:line="1515" pos:column="63">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
				}</block></then></if>
			}</block></else></if>
			<break pos:line="1518" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="1521" pos:column="9">case <expr><name pos:line="1521" pos:column="14">IDM_FORMAT_WIN_1250</name></expr> :
        </case><case pos:line="1522" pos:column="9">case <expr><name pos:line="1522" pos:column="14">IDM_FORMAT_WIN_1251</name></expr> :
        </case><case pos:line="1523" pos:column="9">case <expr><name pos:line="1523" pos:column="14">IDM_FORMAT_WIN_1252</name></expr> :
        </case><case pos:line="1524" pos:column="9">case <expr><name pos:line="1524" pos:column="14">IDM_FORMAT_WIN_1253</name></expr> :
        </case><case pos:line="1525" pos:column="9">case <expr><name pos:line="1525" pos:column="14">IDM_FORMAT_WIN_1254</name></expr> :
        </case><case pos:line="1526" pos:column="9">case <expr><name pos:line="1526" pos:column="14">IDM_FORMAT_WIN_1255</name></expr> :
        </case><case pos:line="1527" pos:column="9">case <expr><name pos:line="1527" pos:column="14">IDM_FORMAT_WIN_1256</name></expr> :
        </case><case pos:line="1528" pos:column="9">case <expr><name pos:line="1528" pos:column="14">IDM_FORMAT_WIN_1257</name></expr> :
        </case><case pos:line="1529" pos:column="9">case <expr><name pos:line="1529" pos:column="14">IDM_FORMAT_WIN_1258</name></expr> :
        </case><case pos:line="1530" pos:column="9">case <expr><name pos:line="1530" pos:column="14">IDM_FORMAT_ISO_8859_1</name></expr>  :
        </case><case pos:line="1531" pos:column="9">case <expr><name pos:line="1531" pos:column="14">IDM_FORMAT_ISO_8859_2</name></expr>  :
        </case><case pos:line="1532" pos:column="9">case <expr><name pos:line="1532" pos:column="14">IDM_FORMAT_ISO_8859_3</name></expr>  :
        </case><case pos:line="1533" pos:column="9">case <expr><name pos:line="1533" pos:column="14">IDM_FORMAT_ISO_8859_4</name></expr>  :
        </case><case pos:line="1534" pos:column="9">case <expr><name pos:line="1534" pos:column="14">IDM_FORMAT_ISO_8859_5</name></expr>  :
        </case><case pos:line="1535" pos:column="9">case <expr><name pos:line="1535" pos:column="14">IDM_FORMAT_ISO_8859_6</name></expr>  :
        </case><case pos:line="1536" pos:column="9">case <expr><name pos:line="1536" pos:column="14">IDM_FORMAT_ISO_8859_7</name></expr>  :
        </case><case pos:line="1537" pos:column="9">case <expr><name pos:line="1537" pos:column="14">IDM_FORMAT_ISO_8859_8</name></expr>  :
        </case><case pos:line="1538" pos:column="9">case <expr><name pos:line="1538" pos:column="14">IDM_FORMAT_ISO_8859_9</name></expr>  :
        </case><case pos:line="1539" pos:column="9">case <expr><name pos:line="1539" pos:column="14">IDM_FORMAT_ISO_8859_10</name></expr> :
        </case><case pos:line="1540" pos:column="9">case <expr><name pos:line="1540" pos:column="14">IDM_FORMAT_ISO_8859_11</name></expr> :
        </case><case pos:line="1541" pos:column="9">case <expr><name pos:line="1541" pos:column="14">IDM_FORMAT_ISO_8859_13</name></expr> :
        </case><case pos:line="1542" pos:column="9">case <expr><name pos:line="1542" pos:column="14">IDM_FORMAT_ISO_8859_14</name></expr> :
        </case><case pos:line="1543" pos:column="9">case <expr><name pos:line="1543" pos:column="14">IDM_FORMAT_ISO_8859_15</name></expr> :
        </case><case pos:line="1544" pos:column="9">case <expr><name pos:line="1544" pos:column="14">IDM_FORMAT_ISO_8859_16</name></expr> :
        </case><case pos:line="1545" pos:column="9">case <expr><name pos:line="1545" pos:column="14">IDM_FORMAT_DOS_437</name></expr> :
        </case><case pos:line="1546" pos:column="9">case <expr><name pos:line="1546" pos:column="14">IDM_FORMAT_DOS_720</name></expr> :
        </case><case pos:line="1547" pos:column="9">case <expr><name pos:line="1547" pos:column="14">IDM_FORMAT_DOS_737</name></expr> :
        </case><case pos:line="1548" pos:column="9">case <expr><name pos:line="1548" pos:column="14">IDM_FORMAT_DOS_775</name></expr> :
        </case><case pos:line="1549" pos:column="9">case <expr><name pos:line="1549" pos:column="14">IDM_FORMAT_DOS_850</name></expr> :
        </case><case pos:line="1550" pos:column="9">case <expr><name pos:line="1550" pos:column="14">IDM_FORMAT_DOS_852</name></expr> :
        </case><case pos:line="1551" pos:column="9">case <expr><name pos:line="1551" pos:column="14">IDM_FORMAT_DOS_855</name></expr> :
        </case><case pos:line="1552" pos:column="9">case <expr><name pos:line="1552" pos:column="14">IDM_FORMAT_DOS_857</name></expr> :
        </case><case pos:line="1553" pos:column="9">case <expr><name pos:line="1553" pos:column="14">IDM_FORMAT_DOS_858</name></expr> :
        </case><case pos:line="1554" pos:column="9">case <expr><name pos:line="1554" pos:column="14">IDM_FORMAT_DOS_860</name></expr> :
        </case><case pos:line="1555" pos:column="9">case <expr><name pos:line="1555" pos:column="14">IDM_FORMAT_DOS_861</name></expr> :
        </case><case pos:line="1556" pos:column="9">case <expr><name pos:line="1556" pos:column="14">IDM_FORMAT_DOS_862</name></expr> :
        </case><case pos:line="1557" pos:column="9">case <expr><name pos:line="1557" pos:column="14">IDM_FORMAT_DOS_863</name></expr> :
        </case><case pos:line="1558" pos:column="9">case <expr><name pos:line="1558" pos:column="14">IDM_FORMAT_DOS_865</name></expr> :
        </case><case pos:line="1559" pos:column="9">case <expr><name pos:line="1559" pos:column="14">IDM_FORMAT_DOS_866</name></expr> :
        </case><case pos:line="1560" pos:column="9">case <expr><name pos:line="1560" pos:column="14">IDM_FORMAT_DOS_869</name></expr> :
        </case><case pos:line="1561" pos:column="9">case <expr><name pos:line="1561" pos:column="14">IDM_FORMAT_BIG5</name></expr> :
        </case><case pos:line="1562" pos:column="9">case <expr><name pos:line="1562" pos:column="14">IDM_FORMAT_GB2312</name></expr> :
        </case><case pos:line="1563" pos:column="9">case <expr><name pos:line="1563" pos:column="14">IDM_FORMAT_SHIFT_JIS</name></expr> :
        </case><case pos:line="1564" pos:column="9">case <expr><name pos:line="1564" pos:column="14">IDM_FORMAT_KOREAN_WIN</name></expr> :
        </case><case pos:line="1565" pos:column="9">case <expr><name pos:line="1565" pos:column="14">IDM_FORMAT_EUC_KR</name></expr> :
        </case><case pos:line="1566" pos:column="9">case <expr><name pos:line="1566" pos:column="14">IDM_FORMAT_TIS_620</name></expr> :
        </case><case pos:line="1567" pos:column="9">case <expr><name pos:line="1567" pos:column="14">IDM_FORMAT_MAC_CYRILLIC</name></expr> : 
        </case><case pos:line="1568" pos:column="9">case <expr><name pos:line="1568" pos:column="14">IDM_FORMAT_KOI8U_CYRILLIC</name></expr> :
        </case><case pos:line="1569" pos:column="9">case <expr><name pos:line="1569" pos:column="14">IDM_FORMAT_KOI8R_CYRILLIC</name></expr> :
        <block pos:line="1570" pos:column="9">{
			<decl_stmt><decl><type><name pos:line="1571" pos:column="25">int</name></type> <name pos:line="1571" pos:column="29">index</name> <init pos:line="1571" pos:column="35">= <expr><name pos:line="1571" pos:column="37">id</name> <op:operator pos:line="1571" pos:column="40">-</op:operator> <name pos:line="1571" pos:column="42">IDM_FORMAT_ENCODE</name></expr></init></decl>;</decl_stmt>

			<decl_stmt><decl><type><name pos:line="1573" pos:column="25">EncodingMapper</name> <type:modifier pos:line="1573" pos:column="40">*</type:modifier></type><name pos:line="1573" pos:column="41">em</name> <init pos:line="1573" pos:column="44">= <expr><call><name><name pos:line="1573" pos:column="46">EncodingMapper</name><op:operator pos:line="1573" pos:column="60">::</op:operator><name pos:line="1573" pos:column="62">getInstance</name></name><argument_list pos:line="1573" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1574" pos:column="25">int</name></type> <name pos:line="1574" pos:column="29">encoding</name> <init pos:line="1574" pos:column="38">= <expr><call><name><name pos:line="1574" pos:column="40">em</name><op:operator pos:line="1574" pos:column="42">-&gt;</op:operator><name pos:line="1574" pos:column="44">getEncodingFromIndex</name></name><argument_list pos:line="1574" pos:column="64">(<argument><expr><name pos:line="1574" pos:column="65">index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1575" pos:column="25">if <condition pos:line="1575" pos:column="28">(<expr><name pos:line="1575" pos:column="29">encoding</name> <op:operator pos:line="1575" pos:column="38">==</op:operator> <op:operator pos:line="1575" pos:column="41">-</op:operator><lit:literal type="number" pos:line="1575" pos:column="42">1</lit:literal></expr>)</condition><then pos:line="1575" pos:column="44">
			<block pos:line="1576" pos:column="25">{
				<comment type="line" pos:line="1577" pos:column="33">//printStr(TEXT("Encoding problem. Command is not added in encoding_table?"));</comment>
				<return pos:line="1578" pos:column="33">return;</return>
			}</block></then></if>

            <decl_stmt><decl><type><name pos:line="1581" pos:column="13">Buffer</name> <type:modifier pos:line="1581" pos:column="20">*</type:modifier></type> <name pos:line="1581" pos:column="22">buf</name> <init pos:line="1581" pos:column="26">= <expr><call><name><name pos:line="1581" pos:column="28">_pEditView</name><op:operator pos:line="1581" pos:column="38">-&gt;</op:operator><name pos:line="1581" pos:column="40">getCurrentBuffer</name></name><argument_list pos:line="1581" pos:column="56">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <if pos:line="1582" pos:column="13">if <condition pos:line="1582" pos:column="16">(<expr><call><name><name pos:line="1582" pos:column="17">buf</name><op:operator pos:line="1582" pos:column="20">-&gt;</op:operator><name pos:line="1582" pos:column="22">isDirty</name></name><argument_list pos:line="1582" pos:column="29">()</argument_list></call></expr>)</condition><then pos:line="1582" pos:column="32">
            <block pos:line="1583" pos:column="13">{
				<decl_stmt><decl><type><name pos:line="1584" pos:column="33">generic_string</name></type> <name pos:line="1584" pos:column="48">warning</name></decl><op:operator pos:line="1584" pos:column="55">,</op:operator> <decl><type ref="prev"/><name pos:line="1584" pos:column="57">title</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1585" pos:column="33">int</name></type> <name pos:line="1585" pos:column="37">answer</name> <init pos:line="1585" pos:column="44">= <expr><call><name><name pos:line="1585" pos:column="46">_nativeLangSpeaker</name><op:operator pos:line="1585" pos:column="64">.</op:operator><name pos:line="1585" pos:column="65">messageBox</name></name><argument_list pos:line="1585" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="1585" pos:column="76">"SaveCurrentModifWarning"</lit:literal></expr></argument>,
					<argument><expr><name pos:line="1586" pos:column="41">NULL</name></expr></argument>,
					<argument><expr><call><name pos:line="1587" pos:column="41">TEXT</name><argument_list pos:line="1587" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1587" pos:column="46">"You should save the current modification.\rAll the saved modifications can not be undone.\r\rContinue?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="1588" pos:column="41">TEXT</name><argument_list pos:line="1588" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1588" pos:column="46">"Save Current Modification"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><name pos:line="1589" pos:column="41">MB_YESNO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if pos:line="1591" pos:column="17">if <condition pos:line="1591" pos:column="20">(<expr><name pos:line="1591" pos:column="21">answer</name> <op:operator pos:line="1591" pos:column="28">==</op:operator> <name pos:line="1591" pos:column="31">IDYES</name></expr>)</condition><then pos:line="1591" pos:column="37">
                <block pos:line="1592" pos:column="17">{
                    <expr_stmt><expr><call><name pos:line="1593" pos:column="21">fileSave</name><argument_list pos:line="1593" pos:column="29">()</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="1594" pos:column="41">_pEditView</name><op:operator pos:line="1594" pos:column="51">-&gt;</op:operator><name pos:line="1594" pos:column="53">execute</name></name><argument_list pos:line="1594" pos:column="60">(<argument><expr><name pos:line="1594" pos:column="61">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></then>
                <else pos:line="1596" pos:column="17">else
                    <return pos:line="1597" pos:column="21">return;</return></else></if>
            }</block></then></if>

            <if pos:line="1600" pos:column="13">if <condition pos:line="1600" pos:column="16">(<expr><call><name><name pos:line="1600" pos:column="17">_pEditView</name><op:operator pos:line="1600" pos:column="27">-&gt;</op:operator><name pos:line="1600" pos:column="29">execute</name></name><argument_list pos:line="1600" pos:column="36">(<argument><expr><name pos:line="1600" pos:column="37">SCI_CANUNDO</name></expr></argument>)</argument_list></call> <op:operator pos:line="1600" pos:column="50">==</op:operator> <name pos:line="1600" pos:column="53">TRUE</name></expr>)</condition><then pos:line="1600" pos:column="58">
            <block pos:line="1601" pos:column="13">{
				<decl_stmt><decl><type><name pos:line="1602" pos:column="33">generic_string</name></type> <name pos:line="1602" pos:column="48">msg</name></decl><op:operator pos:line="1602" pos:column="51">,</op:operator> <decl><type ref="prev"/><name pos:line="1602" pos:column="53">title</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1603" pos:column="33">int</name></type> <name pos:line="1603" pos:column="37">answer</name> <init pos:line="1603" pos:column="44">= <expr><call><name><name pos:line="1603" pos:column="46">_nativeLangSpeaker</name><op:operator pos:line="1603" pos:column="64">.</op:operator><name pos:line="1603" pos:column="65">messageBox</name></name><argument_list pos:line="1603" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="1603" pos:column="76">"LoseUndoAbilityWarning"</lit:literal></expr></argument>,
					<argument><expr><name pos:line="1604" pos:column="41">NULL</name></expr></argument>,
					<argument><expr><call><name pos:line="1605" pos:column="41">TEXT</name><argument_list pos:line="1605" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1605" pos:column="46">"You should save the current modification.\rAll the saved modifications can not be undone.\r\rContinue?"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="1606" pos:column="41">TEXT</name><argument_list pos:line="1606" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1606" pos:column="46">"Lose Undo Ability Waning"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><name pos:line="1607" pos:column="41">MB_YESNO</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				
                <if pos:line="1609" pos:column="17">if <condition pos:line="1609" pos:column="20">(<expr><name pos:line="1609" pos:column="21">answer</name> <op:operator pos:line="1609" pos:column="28">==</op:operator> <name pos:line="1609" pos:column="31">IDYES</name></expr>)</condition><then pos:line="1609" pos:column="37">
                <block pos:line="1610" pos:column="17">{
                    <comment type="line" pos:line="1611" pos:column="21">// Do nothing</comment>
                }</block></then>
                <else pos:line="1613" pos:column="17">else
                    <return pos:line="1614" pos:column="21">return;</return></else></if>
            }</block></then></if>

            <if pos:line="1617" pos:column="13">if <condition pos:line="1617" pos:column="16">(<expr><op:operator pos:line="1617" pos:column="17">!</op:operator><call><name><name pos:line="1617" pos:column="18">buf</name><op:operator pos:line="1617" pos:column="21">-&gt;</op:operator><name pos:line="1617" pos:column="23">isDirty</name></name><argument_list pos:line="1617" pos:column="30">()</argument_list></call></expr>)</condition><then pos:line="1617" pos:column="33">
            <block pos:line="1618" pos:column="13">{
				<decl_stmt><decl><type><name pos:line="1619" pos:column="33">Buffer</name> <type:modifier pos:line="1619" pos:column="40">*</type:modifier></type><name pos:line="1619" pos:column="41">buf</name> <init pos:line="1619" pos:column="45">= <expr><call><name><name pos:line="1619" pos:column="47">_pEditView</name><op:operator pos:line="1619" pos:column="57">-&gt;</op:operator><name pos:line="1619" pos:column="59">getCurrentBuffer</name></name><argument_list pos:line="1619" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="1620" pos:column="33">buf</name><op:operator pos:line="1620" pos:column="36">-&gt;</op:operator><name pos:line="1620" pos:column="38">setEncoding</name></name><argument_list pos:line="1620" pos:column="49">(<argument><expr><name pos:line="1620" pos:column="50">encoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1621" pos:column="33">buf</name><op:operator pos:line="1621" pos:column="36">-&gt;</op:operator><name pos:line="1621" pos:column="38">setUnicodeMode</name></name><argument_list pos:line="1621" pos:column="52">(<argument><expr><name pos:line="1621" pos:column="53">uniCookie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="1622" pos:column="33">fileReload</name><argument_list pos:line="1622" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
            }</block></then></if>
			<break pos:line="1624" pos:column="25">break;</break>
		}</block>


		</case><case pos:line="1628" pos:column="17">case <expr><name pos:line="1628" pos:column="22">IDM_FORMAT_CONV2_ANSI</name></expr>:
		</case><case pos:line="1629" pos:column="17">case <expr><name pos:line="1629" pos:column="22">IDM_FORMAT_CONV2_AS_UTF_8</name></expr>:
		</case><case pos:line="1630" pos:column="17">case <expr><name pos:line="1630" pos:column="22">IDM_FORMAT_CONV2_UTF_8</name></expr>:
		</case><case pos:line="1631" pos:column="17">case <expr><name pos:line="1631" pos:column="22">IDM_FORMAT_CONV2_UCS_2BE</name></expr>: 
		</case><case pos:line="1632" pos:column="17">case <expr><name pos:line="1632" pos:column="22">IDM_FORMAT_CONV2_UCS_2LE</name></expr>:
		<block pos:line="1633" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1634" pos:column="25">int</name></type> <name pos:line="1634" pos:column="29">idEncoding</name> <init pos:line="1634" pos:column="40">= <expr><op:operator pos:line="1634" pos:column="42">-</op:operator><lit:literal type="number" pos:line="1634" pos:column="43">1</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1635" pos:column="25">Buffer</name> <type:modifier pos:line="1635" pos:column="32">*</type:modifier></type><name pos:line="1635" pos:column="33">buf</name> <init pos:line="1635" pos:column="37">= <expr><call><name><name pos:line="1635" pos:column="39">_pEditView</name><op:operator pos:line="1635" pos:column="49">-&gt;</op:operator><name pos:line="1635" pos:column="51">getCurrentBuffer</name></name><argument_list pos:line="1635" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="1636" pos:column="13">UniMode</name></type> <name pos:line="1636" pos:column="21">um</name> <init pos:line="1636" pos:column="24">= <expr><call><name><name pos:line="1636" pos:column="26">buf</name><op:operator pos:line="1636" pos:column="29">-&gt;</op:operator><name pos:line="1636" pos:column="31">getUnicodeMode</name></name><argument_list pos:line="1636" pos:column="45">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="1637" pos:column="13">int</name></type> <name pos:line="1637" pos:column="17">encoding</name> <init pos:line="1637" pos:column="26">= <expr><call><name><name pos:line="1637" pos:column="28">buf</name><op:operator pos:line="1637" pos:column="31">-&gt;</op:operator><name pos:line="1637" pos:column="33">getEncoding</name></name><argument_list pos:line="1637" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<switch pos:line="1639" pos:column="25">switch<condition pos:line="1639" pos:column="31">(<expr><name pos:line="1639" pos:column="32">id</name></expr>)</condition>
			<block pos:line="1640" pos:column="25">{
				<case pos:line="1641" pos:column="33">case <expr><name pos:line="1641" pos:column="38">IDM_FORMAT_CONV2_ANSI</name></expr>:
				<block pos:line="1642" pos:column="33">{
                    <if pos:line="1643" pos:column="21">if <condition pos:line="1643" pos:column="24">(<expr><name pos:line="1643" pos:column="25">encoding</name> <op:operator pos:line="1643" pos:column="34">!=</op:operator> <op:operator pos:line="1643" pos:column="37">-</op:operator><lit:literal type="number" pos:line="1643" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="1643" pos:column="40">
                    <block pos:line="1644" pos:column="21">{
                        <comment type="line" pos:line="1645" pos:column="25">// do nothing</comment>
                        <return pos:line="1646" pos:column="25">return;</return>
                    }</block></then>
                    <else pos:line="1648" pos:column="21">else
                    <block pos:line="1649" pos:column="21">{
					    <if pos:line="1650" pos:column="45">if <condition pos:line="1650" pos:column="48">(<expr><name pos:line="1650" pos:column="49">um</name> <op:operator pos:line="1650" pos:column="52">==</op:operator> <name pos:line="1650" pos:column="55">uni8Bit</name></expr>)</condition><then pos:line="1650" pos:column="63">
						    <return pos:line="1651" pos:column="53">return;</return></then></if>
						
                        <comment type="line" pos:line="1653" pos:column="25">// set scintilla to ANSI</comment>
					    <expr_stmt><expr><name pos:line="1654" pos:column="45">idEncoding</name> <op:operator pos:line="1654" pos:column="56">=</op:operator> <name pos:line="1654" pos:column="58">IDM_FORMAT_ANSI</name></expr>;</expr_stmt>
                    }</block></else></if>
					<break pos:line="1656" pos:column="41">break;</break>
				}</block>
				</case><case pos:line="1658" pos:column="33">case <expr><name pos:line="1658" pos:column="38">IDM_FORMAT_CONV2_AS_UTF_8</name></expr>:
				<block pos:line="1659" pos:column="33">{
                    <if pos:line="1660" pos:column="21">if <condition pos:line="1660" pos:column="24">(<expr><name pos:line="1660" pos:column="25">encoding</name> <op:operator pos:line="1660" pos:column="34">!=</op:operator> <op:operator pos:line="1660" pos:column="37">-</op:operator><lit:literal type="number" pos:line="1660" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="1660" pos:column="40">
                    <block pos:line="1661" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="1662" pos:column="25">buf</name><op:operator pos:line="1662" pos:column="28">-&gt;</op:operator><name pos:line="1662" pos:column="30">setDirty</name></name><argument_list pos:line="1662" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="1662" pos:column="39">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="1663" pos:column="25">buf</name><op:operator pos:line="1663" pos:column="28">-&gt;</op:operator><name pos:line="1663" pos:column="30">setUnicodeMode</name></name><argument_list pos:line="1663" pos:column="44">(<argument><expr><name pos:line="1663" pos:column="45">uniCookie</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="1664" pos:column="25">buf</name><op:operator pos:line="1664" pos:column="28">-&gt;</op:operator><name pos:line="1664" pos:column="30">setEncoding</name></name><argument_list pos:line="1664" pos:column="41">(<argument><expr><op:operator pos:line="1664" pos:column="42">-</op:operator><lit:literal type="number" pos:line="1664" pos:column="43">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <return pos:line="1665" pos:column="25">return;</return>
                    }</block></then></if>

					<expr_stmt><expr><name pos:line="1668" pos:column="41">idEncoding</name> <op:operator pos:line="1668" pos:column="52">=</op:operator> <name pos:line="1668" pos:column="54">IDM_FORMAT_AS_UTF_8</name></expr>;</expr_stmt>
					<if pos:line="1669" pos:column="41">if <condition pos:line="1669" pos:column="44">(<expr><name pos:line="1669" pos:column="45">um</name> <op:operator pos:line="1669" pos:column="48">==</op:operator> <name pos:line="1669" pos:column="51">uniCookie</name></expr>)</condition><then pos:line="1669" pos:column="61">
						<return pos:line="1670" pos:column="49">return;</return></then></if>

					<if pos:line="1672" pos:column="41">if <condition pos:line="1672" pos:column="44">(<expr><name pos:line="1672" pos:column="45">um</name> <op:operator pos:line="1672" pos:column="48">!=</op:operator> <name pos:line="1672" pos:column="51">uni8Bit</name></expr>)</condition><then pos:line="1672" pos:column="59">
					<block pos:line="1673" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="1674" pos:column="49">::</op:operator><name pos:line="1674" pos:column="51">SendMessage</name></name><argument_list pos:line="1674" pos:column="62">(<argument><expr><call><name><name pos:line="1674" pos:column="63">_pPublicInterface</name><op:operator pos:line="1674" pos:column="80">-&gt;</op:operator><name pos:line="1674" pos:column="82">getHSelf</name></name><argument_list pos:line="1674" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1674" pos:column="94">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="1674" pos:column="106">idEncoding</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1674" pos:column="118">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1675" pos:column="49">_pEditView</name><op:operator pos:line="1675" pos:column="59">-&gt;</op:operator><name pos:line="1675" pos:column="61">execute</name></name><argument_list pos:line="1675" pos:column="68">(<argument><expr><name pos:line="1675" pos:column="69">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="1676" pos:column="49">return;</return>
					}</block></then></if>

					<break pos:line="1679" pos:column="41">break;</break>
				}</block>
				</case><case pos:line="1681" pos:column="33">case <expr><name pos:line="1681" pos:column="38">IDM_FORMAT_CONV2_UTF_8</name></expr>:
				<block pos:line="1682" pos:column="33">{
                    <if pos:line="1683" pos:column="21">if <condition pos:line="1683" pos:column="24">(<expr><name pos:line="1683" pos:column="25">encoding</name> <op:operator pos:line="1683" pos:column="34">!=</op:operator> <op:operator pos:line="1683" pos:column="37">-</op:operator><lit:literal type="number" pos:line="1683" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="1683" pos:column="40">
                    <block pos:line="1684" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="1685" pos:column="25">buf</name><op:operator pos:line="1685" pos:column="28">-&gt;</op:operator><name pos:line="1685" pos:column="30">setDirty</name></name><argument_list pos:line="1685" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="1685" pos:column="39">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="1686" pos:column="25">buf</name><op:operator pos:line="1686" pos:column="28">-&gt;</op:operator><name pos:line="1686" pos:column="30">setUnicodeMode</name></name><argument_list pos:line="1686" pos:column="44">(<argument><expr><name pos:line="1686" pos:column="45">uniUTF8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="1687" pos:column="25">buf</name><op:operator pos:line="1687" pos:column="28">-&gt;</op:operator><name pos:line="1687" pos:column="30">setEncoding</name></name><argument_list pos:line="1687" pos:column="41">(<argument><expr><op:operator pos:line="1687" pos:column="42">-</op:operator><lit:literal type="number" pos:line="1687" pos:column="43">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <return pos:line="1688" pos:column="25">return;</return>
                    }</block></then></if>

					<expr_stmt><expr><name pos:line="1691" pos:column="41">idEncoding</name> <op:operator pos:line="1691" pos:column="52">=</op:operator> <name pos:line="1691" pos:column="54">IDM_FORMAT_UTF_8</name></expr>;</expr_stmt>
					<if pos:line="1692" pos:column="41">if <condition pos:line="1692" pos:column="44">(<expr><name pos:line="1692" pos:column="45">um</name> <op:operator pos:line="1692" pos:column="48">==</op:operator> <name pos:line="1692" pos:column="51">uniUTF8</name></expr>)</condition><then pos:line="1692" pos:column="59">
						<return pos:line="1693" pos:column="49">return;</return></then></if>

					<if pos:line="1695" pos:column="41">if <condition pos:line="1695" pos:column="44">(<expr><name pos:line="1695" pos:column="45">um</name> <op:operator pos:line="1695" pos:column="48">!=</op:operator> <name pos:line="1695" pos:column="51">uni8Bit</name></expr>)</condition><then pos:line="1695" pos:column="59">
					<block pos:line="1696" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="1697" pos:column="49">::</op:operator><name pos:line="1697" pos:column="51">SendMessage</name></name><argument_list pos:line="1697" pos:column="62">(<argument><expr><call><name><name pos:line="1697" pos:column="63">_pPublicInterface</name><op:operator pos:line="1697" pos:column="80">-&gt;</op:operator><name pos:line="1697" pos:column="82">getHSelf</name></name><argument_list pos:line="1697" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1697" pos:column="94">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="1697" pos:column="106">idEncoding</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1697" pos:column="118">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1698" pos:column="49">_pEditView</name><op:operator pos:line="1698" pos:column="59">-&gt;</op:operator><name pos:line="1698" pos:column="61">execute</name></name><argument_list pos:line="1698" pos:column="68">(<argument><expr><name pos:line="1698" pos:column="69">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="1699" pos:column="49">return;</return>
					}</block></then></if>
					<break pos:line="1701" pos:column="41">break;</break>
				}</block>
		
				</case><case pos:line="1704" pos:column="33">case <expr><name pos:line="1704" pos:column="38">IDM_FORMAT_CONV2_UCS_2BE</name></expr>:
				<block pos:line="1705" pos:column="33">{
                    <if pos:line="1706" pos:column="21">if <condition pos:line="1706" pos:column="24">(<expr><name pos:line="1706" pos:column="25">encoding</name> <op:operator pos:line="1706" pos:column="34">!=</op:operator> <op:operator pos:line="1706" pos:column="37">-</op:operator><lit:literal type="number" pos:line="1706" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="1706" pos:column="40">
                    <block pos:line="1707" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="1708" pos:column="25">buf</name><op:operator pos:line="1708" pos:column="28">-&gt;</op:operator><name pos:line="1708" pos:column="30">setDirty</name></name><argument_list pos:line="1708" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="1708" pos:column="39">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="1709" pos:column="25">buf</name><op:operator pos:line="1709" pos:column="28">-&gt;</op:operator><name pos:line="1709" pos:column="30">setUnicodeMode</name></name><argument_list pos:line="1709" pos:column="44">(<argument><expr><name pos:line="1709" pos:column="45">uni16BE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="1710" pos:column="25">buf</name><op:operator pos:line="1710" pos:column="28">-&gt;</op:operator><name pos:line="1710" pos:column="30">setEncoding</name></name><argument_list pos:line="1710" pos:column="41">(<argument><expr><op:operator pos:line="1710" pos:column="42">-</op:operator><lit:literal type="number" pos:line="1710" pos:column="43">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <return pos:line="1711" pos:column="25">return;</return>
                    }</block></then></if>

					<expr_stmt><expr><name pos:line="1714" pos:column="41">idEncoding</name> <op:operator pos:line="1714" pos:column="52">=</op:operator> <name pos:line="1714" pos:column="54">IDM_FORMAT_UCS_2BE</name></expr>;</expr_stmt>
					<if pos:line="1715" pos:column="41">if <condition pos:line="1715" pos:column="44">(<expr><name pos:line="1715" pos:column="45">um</name> <op:operator pos:line="1715" pos:column="48">==</op:operator> <name pos:line="1715" pos:column="51">uni16BE</name></expr>)</condition><then pos:line="1715" pos:column="59">
						<return pos:line="1716" pos:column="49">return;</return></then></if>

					<if pos:line="1718" pos:column="41">if <condition pos:line="1718" pos:column="44">(<expr><name pos:line="1718" pos:column="45">um</name> <op:operator pos:line="1718" pos:column="48">!=</op:operator> <name pos:line="1718" pos:column="51">uni8Bit</name></expr>)</condition><then pos:line="1718" pos:column="59">
					<block pos:line="1719" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="1720" pos:column="49">::</op:operator><name pos:line="1720" pos:column="51">SendMessage</name></name><argument_list pos:line="1720" pos:column="62">(<argument><expr><call><name><name pos:line="1720" pos:column="63">_pPublicInterface</name><op:operator pos:line="1720" pos:column="80">-&gt;</op:operator><name pos:line="1720" pos:column="82">getHSelf</name></name><argument_list pos:line="1720" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1720" pos:column="94">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="1720" pos:column="106">idEncoding</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1720" pos:column="118">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1721" pos:column="49">_pEditView</name><op:operator pos:line="1721" pos:column="59">-&gt;</op:operator><name pos:line="1721" pos:column="61">execute</name></name><argument_list pos:line="1721" pos:column="68">(<argument><expr><name pos:line="1721" pos:column="69">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="1722" pos:column="49">return;</return>
					}</block></then></if>
					<break pos:line="1724" pos:column="41">break;</break>
				}</block>
		
				</case><case pos:line="1727" pos:column="33">case <expr><name pos:line="1727" pos:column="38">IDM_FORMAT_CONV2_UCS_2LE</name></expr>:
				<block pos:line="1728" pos:column="33">{
                    <if pos:line="1729" pos:column="21">if <condition pos:line="1729" pos:column="24">(<expr><name pos:line="1729" pos:column="25">encoding</name> <op:operator pos:line="1729" pos:column="34">!=</op:operator> <op:operator pos:line="1729" pos:column="37">-</op:operator><lit:literal type="number" pos:line="1729" pos:column="38">1</lit:literal></expr>)</condition><then pos:line="1729" pos:column="40">
                    <block pos:line="1730" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="1731" pos:column="25">buf</name><op:operator pos:line="1731" pos:column="28">-&gt;</op:operator><name pos:line="1731" pos:column="30">setDirty</name></name><argument_list pos:line="1731" pos:column="38">(<argument><expr><lit:literal type="boolean" pos:line="1731" pos:column="39">true</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="1732" pos:column="25">buf</name><op:operator pos:line="1732" pos:column="28">-&gt;</op:operator><name pos:line="1732" pos:column="30">setUnicodeMode</name></name><argument_list pos:line="1732" pos:column="44">(<argument><expr><name pos:line="1732" pos:column="45">uni16LE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <expr_stmt><expr><call><name><name pos:line="1733" pos:column="25">buf</name><op:operator pos:line="1733" pos:column="28">-&gt;</op:operator><name pos:line="1733" pos:column="30">setEncoding</name></name><argument_list pos:line="1733" pos:column="41">(<argument><expr><op:operator pos:line="1733" pos:column="42">-</op:operator><lit:literal type="number" pos:line="1733" pos:column="43">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <return pos:line="1734" pos:column="25">return;</return>
                    }</block></then></if>

					<expr_stmt><expr><name pos:line="1737" pos:column="41">idEncoding</name> <op:operator pos:line="1737" pos:column="52">=</op:operator> <name pos:line="1737" pos:column="54">IDM_FORMAT_UCS_2LE</name></expr>;</expr_stmt>
					<if pos:line="1738" pos:column="41">if <condition pos:line="1738" pos:column="44">(<expr><name pos:line="1738" pos:column="45">um</name> <op:operator pos:line="1738" pos:column="48">==</op:operator> <name pos:line="1738" pos:column="51">uni16LE</name></expr>)</condition><then pos:line="1738" pos:column="59">
						<return pos:line="1739" pos:column="49">return;</return></then></if>
					<if pos:line="1740" pos:column="41">if <condition pos:line="1740" pos:column="44">(<expr><name pos:line="1740" pos:column="45">um</name> <op:operator pos:line="1740" pos:column="48">!=</op:operator> <name pos:line="1740" pos:column="51">uni8Bit</name></expr>)</condition><then pos:line="1740" pos:column="59">
					<block pos:line="1741" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="1742" pos:column="49">::</op:operator><name pos:line="1742" pos:column="51">SendMessage</name></name><argument_list pos:line="1742" pos:column="62">(<argument><expr><call><name><name pos:line="1742" pos:column="63">_pPublicInterface</name><op:operator pos:line="1742" pos:column="80">-&gt;</op:operator><name pos:line="1742" pos:column="82">getHSelf</name></name><argument_list pos:line="1742" pos:column="90">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1742" pos:column="94">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="1742" pos:column="106">idEncoding</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1742" pos:column="118">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><name pos:line="1743" pos:column="49">_pEditView</name><op:operator pos:line="1743" pos:column="59">-&gt;</op:operator><name pos:line="1743" pos:column="61">execute</name></name><argument_list pos:line="1743" pos:column="68">(<argument><expr><name pos:line="1743" pos:column="69">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="1744" pos:column="49">return;</return>
					}</block></then></if>
					<break pos:line="1746" pos:column="41">break;</break>
				}</block>
			</case>}</block></switch>

			<if pos:line="1750" pos:column="25">if <condition pos:line="1750" pos:column="28">(<expr><name pos:line="1750" pos:column="29">idEncoding</name> <op:operator pos:line="1750" pos:column="40">!=</op:operator> <op:operator pos:line="1750" pos:column="43">-</op:operator><lit:literal type="number" pos:line="1750" pos:column="44">1</lit:literal></expr>)</condition><then pos:line="1750" pos:column="46">
			<block pos:line="1751" pos:column="25">{
				<comment type="line" pos:line="1752" pos:column="33">// Save the current clipboard content</comment>
				<expr_stmt><expr><call><name><op:operator pos:line="1753" pos:column="33">::</op:operator><name pos:line="1753" pos:column="35">OpenClipboard</name></name><argument_list pos:line="1753" pos:column="48">(<argument><expr><call><name><name pos:line="1753" pos:column="49">_pPublicInterface</name><op:operator pos:line="1753" pos:column="66">-&gt;</op:operator><name pos:line="1753" pos:column="68">getHSelf</name></name><argument_list pos:line="1753" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="1754" pos:column="33">HANDLE</name></type> <name pos:line="1754" pos:column="40">clipboardData</name> <init pos:line="1754" pos:column="54">= <expr><call><name><op:operator pos:line="1754" pos:column="56">::</op:operator><name pos:line="1754" pos:column="58">GetClipboardData</name></name><argument_list pos:line="1754" pos:column="74">(<argument><expr><name pos:line="1754" pos:column="75">CF_TEXT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1755" pos:column="33">int</name></type> <name pos:line="1755" pos:column="37">len</name> <init pos:line="1755" pos:column="41">= <expr><call><name><op:operator pos:line="1755" pos:column="43">::</op:operator><name pos:line="1755" pos:column="45">GlobalSize</name></name><argument_list pos:line="1755" pos:column="55">(<argument><expr><name pos:line="1755" pos:column="56">clipboardData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1756" pos:column="33">LPVOID</name></type> <name pos:line="1756" pos:column="40">clipboardDataPtr</name> <init pos:line="1756" pos:column="57">= <expr><call><name><op:operator pos:line="1756" pos:column="59">::</op:operator><name pos:line="1756" pos:column="61">GlobalLock</name></name><argument_list pos:line="1756" pos:column="71">(<argument><expr><name pos:line="1756" pos:column="72">clipboardData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="1758" pos:column="33">HANDLE</name></type> <name pos:line="1758" pos:column="40">allocClipboardData</name> <init pos:line="1758" pos:column="59">= <expr><call><name><op:operator pos:line="1758" pos:column="61">::</op:operator><name pos:line="1758" pos:column="63">GlobalAlloc</name></name><argument_list pos:line="1758" pos:column="74">(<argument><expr><name pos:line="1758" pos:column="75">GMEM_MOVEABLE</name></expr></argument>, <argument><expr><name pos:line="1758" pos:column="90">len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1759" pos:column="33">LPVOID</name></type> <name pos:line="1759" pos:column="40">clipboardData2</name> <init pos:line="1759" pos:column="55">= <expr><call><name><op:operator pos:line="1759" pos:column="57">::</op:operator><name pos:line="1759" pos:column="59">GlobalLock</name></name><argument_list pos:line="1759" pos:column="69">(<argument><expr><name pos:line="1759" pos:column="70">allocClipboardData</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

				<expr_stmt><expr><call><name><op:operator pos:line="1761" pos:column="33">::</op:operator><name pos:line="1761" pos:column="35">memcpy</name></name><argument_list pos:line="1761" pos:column="41">(<argument><expr><name pos:line="1761" pos:column="42">clipboardData2</name></expr></argument>, <argument><expr><name pos:line="1761" pos:column="58">clipboardDataPtr</name></expr></argument>, <argument><expr><name pos:line="1761" pos:column="76">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="1762" pos:column="33">::</op:operator><name pos:line="1762" pos:column="35">GlobalUnlock</name></name><argument_list pos:line="1762" pos:column="47">(<argument><expr><name pos:line="1762" pos:column="48">clipboardData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
				<expr_stmt><expr><call><name><op:operator pos:line="1763" pos:column="33">::</op:operator><name pos:line="1763" pos:column="35">GlobalUnlock</name></name><argument_list pos:line="1763" pos:column="47">(<argument><expr><name pos:line="1763" pos:column="48">allocClipboardData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>	
				<expr_stmt><expr><call><name><op:operator pos:line="1764" pos:column="33">::</op:operator><name pos:line="1764" pos:column="35">CloseClipboard</name></name><argument_list pos:line="1764" pos:column="49">()</argument_list></call></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><name pos:line="1766" pos:column="33">_pEditView</name><op:operator pos:line="1766" pos:column="43">-&gt;</op:operator><name pos:line="1766" pos:column="45">saveCurrentPos</name></name><argument_list pos:line="1766" pos:column="59">()</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="1768" pos:column="33">// Cut all text</comment>
				<decl_stmt><decl><type><name pos:line="1769" pos:column="33">int</name></type> <name pos:line="1769" pos:column="37">docLen</name> <init pos:line="1769" pos:column="44">= <expr><call><name><name pos:line="1769" pos:column="46">_pEditView</name><op:operator pos:line="1769" pos:column="56">-&gt;</op:operator><name pos:line="1769" pos:column="58">getCurrentDocLen</name></name><argument_list pos:line="1769" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="1770" pos:column="33">_pEditView</name><op:operator pos:line="1770" pos:column="43">-&gt;</op:operator><name pos:line="1770" pos:column="45">execute</name></name><argument_list pos:line="1770" pos:column="52">(<argument><expr><name pos:line="1770" pos:column="53">SCI_COPYRANGE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1770" pos:column="68">0</lit:literal></expr></argument>, <argument><expr><name pos:line="1770" pos:column="71">docLen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1771" pos:column="33">_pEditView</name><op:operator pos:line="1771" pos:column="43">-&gt;</op:operator><name pos:line="1771" pos:column="45">execute</name></name><argument_list pos:line="1771" pos:column="52">(<argument><expr><name pos:line="1771" pos:column="53">SCI_CLEARALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="1773" pos:column="33">// Change to the proper buffer, save buffer status</comment>
				
				<expr_stmt><expr><call><name><op:operator pos:line="1775" pos:column="33">::</op:operator><name pos:line="1775" pos:column="35">SendMessage</name></name><argument_list pos:line="1775" pos:column="46">(<argument><expr><call><name><name pos:line="1775" pos:column="47">_pPublicInterface</name><op:operator pos:line="1775" pos:column="64">-&gt;</op:operator><name pos:line="1775" pos:column="66">getHSelf</name></name><argument_list pos:line="1775" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1775" pos:column="78">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="1775" pos:column="90">idEncoding</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1775" pos:column="102">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="1777" pos:column="33">// Paste the texte, restore buffer status</comment>
				<expr_stmt><expr><call><name><name pos:line="1778" pos:column="33">_pEditView</name><op:operator pos:line="1778" pos:column="43">-&gt;</op:operator><name pos:line="1778" pos:column="45">execute</name></name><argument_list pos:line="1778" pos:column="52">(<argument><expr><name pos:line="1778" pos:column="53">SCI_PASTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="1779" pos:column="33">_pEditView</name><op:operator pos:line="1779" pos:column="43">-&gt;</op:operator><name pos:line="1779" pos:column="45">restoreCurrentPos</name></name><argument_list pos:line="1779" pos:column="62">()</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="1781" pos:column="33">// Restore the previous clipboard data</comment>
				<expr_stmt><expr><call><name><op:operator pos:line="1782" pos:column="33">::</op:operator><name pos:line="1782" pos:column="35">OpenClipboard</name></name><argument_list pos:line="1782" pos:column="48">(<argument><expr><call><name><name pos:line="1782" pos:column="49">_pPublicInterface</name><op:operator pos:line="1782" pos:column="66">-&gt;</op:operator><name pos:line="1782" pos:column="68">getHSelf</name></name><argument_list pos:line="1782" pos:column="76">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="1783" pos:column="33">::</op:operator><name pos:line="1783" pos:column="35">EmptyClipboard</name></name><argument_list pos:line="1783" pos:column="49">()</argument_list></call></expr>;</expr_stmt> 
				<expr_stmt><expr><call><name><op:operator pos:line="1784" pos:column="33">::</op:operator><name pos:line="1784" pos:column="35">SetClipboardData</name></name><argument_list pos:line="1784" pos:column="51">(<argument><expr><name pos:line="1784" pos:column="52">CF_TEXT</name></expr></argument>, <argument><expr><name pos:line="1784" pos:column="61">clipboardData2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="1785" pos:column="33">::</op:operator><name pos:line="1785" pos:column="35">CloseClipboard</name></name><argument_list pos:line="1785" pos:column="49">()</argument_list></call></expr>;</expr_stmt>

				<comment type="line" pos:line="1787" pos:column="33">//Do not free anything, EmptyClipboard does that</comment>
				<expr_stmt><expr><call><name><name pos:line="1788" pos:column="33">_pEditView</name><op:operator pos:line="1788" pos:column="43">-&gt;</op:operator><name pos:line="1788" pos:column="45">execute</name></name><argument_list pos:line="1788" pos:column="52">(<argument><expr><name pos:line="1788" pos:column="53">SCI_EMPTYUNDOBUFFER</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<break pos:line="1790" pos:column="25">break;</break>
		}</block>
        <comment type="block" pos:line="1792" pos:column="9">/*
        case (IDM_FORMAT_WIN_1250  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_WIN_1251  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_WIN_1252  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_WIN_1253  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_WIN_1254  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_WIN_1255  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_WIN_1256  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_WIN_1257  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_WIN_1258  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_1   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_2   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_3   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_4   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_5   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_6   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_7   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_8   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_9   + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_10  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_11  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_13  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_14  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_15  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_ISO_8859_16  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_437  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_720  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_737  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_775  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_850  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_852  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_855  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_857  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_858  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_860  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_861  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_862  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_863  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_865  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_866  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_DOS_869  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_BIG5  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_GB2312  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_SHIFT_JIS  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_KOREAN_WIN  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_EUC_KR  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_TIS_620  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_MAC_CYRILLIC  + IDM_FORMAT_CONVERT): 
        case (IDM_FORMAT_KOI8U_CYRILLIC  + IDM_FORMAT_CONVERT):
        case (IDM_FORMAT_KOI8R_CYRILLIC  + IDM_FORMAT_CONVERT):
        {
            int index = id - IDM_FORMAT_CONVERT - IDM_FORMAT_ENCODE;

			EncodingMapper *em = EncodingMapper::getInstance();
			int newEncoding = em-&gt;getEncodingFromIndex(index);
			if (newEncoding == -1)
			{
				return;
			}

            Buffer *buf = _pEditView-&gt;getCurrentBuffer();
            UniMode um = buf-&gt;getUnicodeMode();
            int oldEncoding = buf-&gt;getEncoding();

            if (oldEncoding == newEncoding)
                return;

            if (oldEncoding != -1)
            {
                //do warning
            }
            buf-&gt;setEncoding(newEncoding);

            break;
        }
*/</comment>

		</case><case pos:line="1869" pos:column="17">case <expr><name pos:line="1869" pos:column="22">IDM_SETTING_IMPORTPLUGIN</name></expr> :
        <block pos:line="1870" pos:column="9">{
            <comment type="line" pos:line="1871" pos:column="13">// get plugin source path</comment>
            <decl_stmt><decl><type><name pos:line="1872" pos:column="13">TCHAR</name> <type:modifier pos:line="1872" pos:column="19">*</type:modifier></type><name pos:line="1872" pos:column="20">extFilterName</name> <init pos:line="1872" pos:column="34">= <expr><call><name pos:line="1872" pos:column="36">TEXT</name><argument_list pos:line="1872" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="1872" pos:column="41">"Notepad++ plugin"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="1873" pos:column="13">TCHAR</name> <type:modifier pos:line="1873" pos:column="19">*</type:modifier></type><name pos:line="1873" pos:column="20">extFilter</name> <init pos:line="1873" pos:column="30">= <expr><call><name pos:line="1873" pos:column="32">TEXT</name><argument_list pos:line="1873" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1873" pos:column="37">".dll"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="1874" pos:column="13">TCHAR</name> <type:modifier pos:line="1874" pos:column="19">*</type:modifier></type><name pos:line="1874" pos:column="20">destDir</name> <init pos:line="1874" pos:column="28">= <expr><call><name pos:line="1874" pos:column="30">TEXT</name><argument_list pos:line="1874" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1874" pos:column="35">"plugins"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="1876" pos:column="13">vector</name><argument_list pos:line="1876" pos:column="19">&lt;<argument><expr><name pos:line="1876" pos:column="20">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1876" pos:column="36">copiedFiles</name> <init pos:line="1876" pos:column="48">= <expr><call><name pos:line="1876" pos:column="50">addNppComponents</name><argument_list pos:line="1876" pos:column="66">(<argument><expr><name pos:line="1876" pos:column="67">destDir</name></expr></argument>, <argument><expr><name pos:line="1876" pos:column="76">extFilterName</name></expr></argument>, <argument><expr><name pos:line="1876" pos:column="91">extFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="1878" pos:column="13">// load plugin</comment>
            <decl_stmt><decl><type><name><name pos:line="1879" pos:column="13">vector</name><argument_list pos:line="1879" pos:column="19">&lt;<argument><expr><name pos:line="1879" pos:column="20">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1879" pos:column="36">dll2Remove</name></decl>;</decl_stmt>
            <for pos:line="1880" pos:column="13">for (<init><decl><type><name pos:line="1880" pos:column="18">size_t</name></type> <name pos:line="1880" pos:column="25">i</name> <init pos:line="1880" pos:column="27">= <expr><lit:literal type="number" pos:line="1880" pos:column="29">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1880" pos:column="33">i</name> <op:operator pos:line="1880" pos:column="35">&lt;</op:operator> <call><name><name pos:line="1880" pos:column="37">copiedFiles</name><op:operator pos:line="1880" pos:column="48">.</op:operator><name pos:line="1880" pos:column="49">size</name></name><argument_list pos:line="1880" pos:column="53">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1880" pos:column="58">i</name><op:operator pos:line="1880" pos:column="59">++</op:operator></expr></incr>)
            <block pos:line="1881" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="1882" pos:column="17">int</name></type> <name pos:line="1882" pos:column="21">index</name> <init pos:line="1882" pos:column="27">= <expr><call><name><name pos:line="1882" pos:column="29">_pluginsManager</name><op:operator pos:line="1882" pos:column="44">.</op:operator><name pos:line="1882" pos:column="45">loadPlugin</name></name><argument_list pos:line="1882" pos:column="55">(<argument><expr><name><name pos:line="1882" pos:column="56">copiedFiles</name><index pos:line="1882" pos:column="67">[<expr><name pos:line="1882" pos:column="68">i</name></expr>]</index></name><op:operator pos:line="1882" pos:column="70">.</op:operator><call><name pos:line="1882" pos:column="71">c_str</name><argument_list pos:line="1882" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1882" pos:column="80">dll2Remove</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                <if pos:line="1883" pos:column="17">if <condition pos:line="1883" pos:column="20">(<expr><call><name><name pos:line="1883" pos:column="21">_pluginsManager</name><op:operator pos:line="1883" pos:column="36">.</op:operator><name pos:line="1883" pos:column="37">getMenuHandle</name></name><argument_list pos:line="1883" pos:column="50">()</argument_list></call></expr>)</condition><then pos:line="1883" pos:column="53">
                    <expr_stmt><expr><call><name><name pos:line="1884" pos:column="21">_pluginsManager</name><op:operator pos:line="1884" pos:column="36">.</op:operator><name pos:line="1884" pos:column="37">addInMenuFromPMIndex</name></name><argument_list pos:line="1884" pos:column="57">(<argument><expr><name pos:line="1884" pos:column="58">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            }</block></for>
            <if pos:line="1886" pos:column="13">if <condition pos:line="1886" pos:column="16">(<expr><op:operator pos:line="1886" pos:column="17">!</op:operator><call><name><name pos:line="1886" pos:column="18">_pluginsManager</name><op:operator pos:line="1886" pos:column="33">.</op:operator><name pos:line="1886" pos:column="34">getMenuHandle</name></name><argument_list pos:line="1886" pos:column="47">()</argument_list></call></expr>)</condition><then pos:line="1886" pos:column="50">
                <expr_stmt><expr><call><name><name pos:line="1887" pos:column="17">_pluginsManager</name><op:operator pos:line="1887" pos:column="32">.</op:operator><name pos:line="1887" pos:column="33">setMenu</name></name><argument_list pos:line="1887" pos:column="40">(<argument><expr><name pos:line="1887" pos:column="41">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="1887" pos:column="58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            <expr_stmt><expr><call><name><op:operator pos:line="1888" pos:column="13">::</op:operator><name pos:line="1888" pos:column="15">DrawMenuBar</name></name><argument_list pos:line="1888" pos:column="26">(<argument><expr><call><name><name pos:line="1888" pos:column="27">_pPublicInterface</name><op:operator pos:line="1888" pos:column="44">-&gt;</op:operator><name pos:line="1888" pos:column="46">getHSelf</name></name><argument_list pos:line="1888" pos:column="54">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:line="1889" pos:column="13">break;</break>
        }</block>

        </case><case pos:line="1892" pos:column="9">case <expr><name pos:line="1892" pos:column="14">IDM_SETTING_IMPORTSTYLETHEMS</name></expr> :
        <block pos:line="1893" pos:column="9">{
            <comment type="line" pos:line="1894" pos:column="13">// get plugin source path</comment>
            <decl_stmt><decl><type><name pos:line="1895" pos:column="13">TCHAR</name> <type:modifier pos:line="1895" pos:column="19">*</type:modifier></type><name pos:line="1895" pos:column="20">extFilterName</name> <init pos:line="1895" pos:column="34">= <expr><call><name pos:line="1895" pos:column="36">TEXT</name><argument_list pos:line="1895" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="1895" pos:column="41">"Notepad++ style theme"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="1896" pos:column="13">TCHAR</name> <type:modifier pos:line="1896" pos:column="19">*</type:modifier></type><name pos:line="1896" pos:column="20">extFilter</name> <init pos:line="1896" pos:column="30">= <expr><call><name pos:line="1896" pos:column="32">TEXT</name><argument_list pos:line="1896" pos:column="36">(<argument><expr><lit:literal type="string" pos:line="1896" pos:column="37">".xml"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="1897" pos:column="13">TCHAR</name> <type:modifier pos:line="1897" pos:column="19">*</type:modifier></type><name pos:line="1897" pos:column="20">destDir</name> <init pos:line="1897" pos:column="28">= <expr><call><name pos:line="1897" pos:column="30">TEXT</name><argument_list pos:line="1897" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="1897" pos:column="35">"themes"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <comment type="line" pos:line="1899" pos:column="13">// load styler</comment>
            <decl_stmt><decl><type><name pos:line="1900" pos:column="13">NppParameters</name> <type:modifier pos:line="1900" pos:column="27">*</type:modifier></type><name pos:line="1900" pos:column="28">pNppParams</name> <init pos:line="1900" pos:column="39">= <expr><call><name><name pos:line="1900" pos:column="41">NppParameters</name><op:operator pos:line="1900" pos:column="54">::</op:operator><name pos:line="1900" pos:column="56">getInstance</name></name><argument_list pos:line="1900" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="1901" pos:column="13">ThemeSwitcher</name> <type:modifier pos:line="1901" pos:column="27">&amp;</type:modifier></type> <name pos:line="1901" pos:column="29">themeSwitcher</name> <init pos:line="1901" pos:column="43">= <expr><call><name><name pos:line="1901" pos:column="45">pNppParams</name><op:operator pos:line="1901" pos:column="55">-&gt;</op:operator><name pos:line="1901" pos:column="57">getThemeSwitcher</name></name><argument_list pos:line="1901" pos:column="73">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt><decl><type><name><name pos:line="1903" pos:column="13">vector</name><argument_list pos:line="1903" pos:column="19">&lt;<argument><expr><name pos:line="1903" pos:column="20">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="1903" pos:column="36">copiedFiles</name> <init pos:line="1903" pos:column="48">= <expr><call><name pos:line="1903" pos:column="50">addNppComponents</name><argument_list pos:line="1903" pos:column="66">(<argument><expr><name pos:line="1903" pos:column="67">destDir</name></expr></argument>, <argument><expr><name pos:line="1903" pos:column="76">extFilterName</name></expr></argument>, <argument><expr><name pos:line="1903" pos:column="91">extFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <for pos:line="1904" pos:column="13">for (<init><decl><type><name pos:line="1904" pos:column="18">size_t</name></type> <name pos:line="1904" pos:column="25">i</name> <init pos:line="1904" pos:column="27">= <expr><lit:literal type="number" pos:line="1904" pos:column="29">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="1904" pos:column="33">i</name> <op:operator pos:line="1904" pos:column="35">&lt;</op:operator> <call><name><name pos:line="1904" pos:column="37">copiedFiles</name><op:operator pos:line="1904" pos:column="48">.</op:operator><name pos:line="1904" pos:column="49">size</name></name><argument_list pos:line="1904" pos:column="53">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="1904" pos:column="58">i</name><op:operator pos:line="1904" pos:column="59">++</op:operator></expr></incr>)
            <block pos:line="1905" pos:column="13">{
                <decl_stmt><decl><type><name pos:line="1906" pos:column="17">generic_string</name></type> <name pos:line="1906" pos:column="32">themeName</name><argument_list pos:line="1906" pos:column="41">(<argument><expr><call><name><name pos:line="1906" pos:column="42">themeSwitcher</name><op:operator pos:line="1906" pos:column="55">.</op:operator><name pos:line="1906" pos:column="56">getThemeFromXmlFileName</name></name><argument_list pos:line="1906" pos:column="79">(<argument><expr><name><name pos:line="1906" pos:column="80">copiedFiles</name><index pos:line="1906" pos:column="91">[<expr><name pos:line="1906" pos:column="92">i</name></expr>]</index></name><op:operator pos:line="1906" pos:column="94">.</op:operator><call><name pos:line="1906" pos:column="95">c_str</name><argument_list pos:line="1906" pos:column="100">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		        <if pos:line="1907" pos:column="25">if <condition pos:line="1907" pos:column="28">(<expr><op:operator pos:line="1907" pos:column="29">!</op:operator><call><name><name pos:line="1907" pos:column="30">themeSwitcher</name><op:operator pos:line="1907" pos:column="43">.</op:operator><name pos:line="1907" pos:column="44">themeNameExists</name></name><argument_list pos:line="1907" pos:column="59">(<argument><expr><call><name><name pos:line="1907" pos:column="60">themeName</name><op:operator pos:line="1907" pos:column="69">.</op:operator><name pos:line="1907" pos:column="70">c_str</name></name><argument_list pos:line="1907" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1907" pos:column="79"> 
		        <block pos:line="1908" pos:column="25">{
			        <expr_stmt><expr><call><name><name pos:line="1909" pos:column="33">themeSwitcher</name><op:operator pos:line="1909" pos:column="46">.</op:operator><name pos:line="1909" pos:column="47">addThemeFromXml</name></name><argument_list pos:line="1909" pos:column="62">(<argument><expr><name><name pos:line="1909" pos:column="63">copiedFiles</name><index pos:line="1909" pos:column="74">[<expr><name pos:line="1909" pos:column="75">i</name></expr>]</index></name><op:operator pos:line="1909" pos:column="77">.</op:operator><call><name pos:line="1909" pos:column="78">c_str</name><argument_list pos:line="1909" pos:column="83">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                    <if pos:line="1910" pos:column="21">if <condition pos:line="1910" pos:column="24">(<expr><call><name><name pos:line="1910" pos:column="25">_configStyleDlg</name><op:operator pos:line="1910" pos:column="40">.</op:operator><name pos:line="1910" pos:column="41">isCreated</name></name><argument_list pos:line="1910" pos:column="50">()</argument_list></call></expr>)</condition><then pos:line="1910" pos:column="53">
                    <block pos:line="1911" pos:column="21">{
                        <expr_stmt><expr><call><name><name pos:line="1912" pos:column="25">_configStyleDlg</name><op:operator pos:line="1912" pos:column="40">.</op:operator><name pos:line="1912" pos:column="41">addLastThemeEntry</name></name><argument_list pos:line="1912" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
                    }</block></then></if>
		        }</block></then></if>
            }</block></for>
            <break pos:line="1916" pos:column="13">break;</break>
        }</block>

		</case><case pos:line="1919" pos:column="17">case <expr><name pos:line="1919" pos:column="22">IDM_SETTING_SHORTCUT_MAPPER</name></expr> :
		</case><case pos:line="1920" pos:column="17">case <expr><name pos:line="1920" pos:column="22">IDM_SETTING_SHORTCUT_MAPPER_MACRO</name></expr> :
        </case><case pos:line="1921" pos:column="9">case <expr><name pos:line="1921" pos:column="14">IDM_SETTING_SHORTCUT_MAPPER_RUN</name></expr> :
		<block pos:line="1922" pos:column="17">{
            <decl_stmt><decl><type><name pos:line="1923" pos:column="13">GridState</name></type> <name pos:line="1923" pos:column="23">st</name> <init pos:line="1923" pos:column="26">= <expr><name pos:line="1923" pos:column="28">id</name><op:operator pos:line="1923" pos:column="30">==</op:operator><name pos:line="1923" pos:column="32">IDM_SETTING_SHORTCUT_MAPPER_MACRO</name><op:operator pos:line="1923" pos:column="65">?</op:operator><name pos:line="1923" pos:column="66">STATE_MACRO</name><op:operator pos:line="1923" pos:column="77">:</op:operator><name pos:line="1923" pos:column="78">id</name><op:operator pos:line="1923" pos:column="80">==</op:operator><name pos:line="1923" pos:column="82">IDM_SETTING_SHORTCUT_MAPPER_RUN</name><op:operator pos:line="1923" pos:column="113">?</op:operator><name pos:line="1923" pos:column="114">STATE_USER</name><op:operator pos:line="1923" pos:column="124">:</op:operator><name pos:line="1923" pos:column="125">STATE_MENU</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1924" pos:column="25">ShortcutMapper</name></type> <name pos:line="1924" pos:column="40">shortcutMapper</name></decl>;</decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="1925" pos:column="13">shortcutMapper</name><op:operator pos:line="1925" pos:column="27">.</op:operator><name pos:line="1925" pos:column="28">init</name></name><argument_list pos:line="1925" pos:column="32">(<argument><expr><call><name><name pos:line="1925" pos:column="33">_pPublicInterface</name><op:operator pos:line="1925" pos:column="50">-&gt;</op:operator><name pos:line="1925" pos:column="52">getHinst</name></name><argument_list pos:line="1925" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1925" pos:column="64">_pPublicInterface</name><op:operator pos:line="1925" pos:column="81">-&gt;</op:operator><name pos:line="1925" pos:column="83">getHSelf</name></name><argument_list pos:line="1925" pos:column="91">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1925" pos:column="95">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="1926" pos:column="13">_nativeLangSpeaker</name><op:operator pos:line="1926" pos:column="31">.</op:operator><name pos:line="1926" pos:column="32">changeShortcutmapperLang</name></name><argument_list pos:line="1926" pos:column="56">(<argument><expr><op:operator pos:line="1926" pos:column="57">&amp;</op:operator><name pos:line="1926" pos:column="58">shortcutMapper</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1927" pos:column="25">shortcutMapper</name><op:operator pos:line="1927" pos:column="39">.</op:operator><name pos:line="1927" pos:column="40">doDialog</name></name><argument_list pos:line="1927" pos:column="48">(<argument><expr><call><name><name pos:line="1927" pos:column="49">_nativeLangSpeaker</name><op:operator pos:line="1927" pos:column="67">.</op:operator><name pos:line="1927" pos:column="68">isRTL</name></name><argument_list pos:line="1927" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="1928" pos:column="25">shortcutMapper</name><op:operator pos:line="1928" pos:column="39">.</op:operator><name pos:line="1928" pos:column="40">destroy</name></name><argument_list pos:line="1928" pos:column="47">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1929" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="1931" pos:column="17">case <expr><name pos:line="1931" pos:column="22">IDM_SETTING_PREFERECE</name></expr> :
		<block pos:line="1932" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1933" pos:column="25">bool</name></type> <name pos:line="1933" pos:column="30">isFirstTime</name> <init pos:line="1933" pos:column="42">= <expr><op:operator pos:line="1933" pos:column="44">!</op:operator><call><name><name pos:line="1933" pos:column="45">_preference</name><op:operator pos:line="1933" pos:column="56">.</op:operator><name pos:line="1933" pos:column="57">isCreated</name></name><argument_list pos:line="1933" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="1934" pos:column="25">_preference</name><op:operator pos:line="1934" pos:column="36">.</op:operator><name pos:line="1934" pos:column="37">doDialog</name></name><argument_list pos:line="1934" pos:column="45">(<argument><expr><call><name><name pos:line="1934" pos:column="46">_nativeLangSpeaker</name><op:operator pos:line="1934" pos:column="64">.</op:operator><name pos:line="1934" pos:column="65">isRTL</name></name><argument_list pos:line="1934" pos:column="70">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<if pos:line="1936" pos:column="25">if <condition pos:line="1936" pos:column="28">(<expr><name pos:line="1936" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="1936" pos:column="41">
			<block pos:line="1937" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="1938" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="1938" pos:column="51">.</op:operator><name pos:line="1938" pos:column="52">changePrefereceDlgLang</name></name><argument_list pos:line="1938" pos:column="74">(<argument><expr><name pos:line="1938" pos:column="75">_preference</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<break pos:line="1940" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="1943" pos:column="9">case <expr><name pos:line="1943" pos:column="14">IDM_SETTING_EDITCONTEXTMENU</name></expr> :
        <block pos:line="1944" pos:column="9">{
			<comment type="line" pos:line="1945" pos:column="25">//if (contion)</comment>
			<block pos:line="1946" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="1947" pos:column="33">generic_string</name></type> <name pos:line="1947" pos:column="48">warning</name></decl><op:operator pos:line="1947" pos:column="55">,</op:operator> <decl><type ref="prev"/><name pos:line="1947" pos:column="57">title</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="1948" pos:column="33">_nativeLangSpeaker</name><op:operator pos:line="1948" pos:column="51">.</op:operator><name pos:line="1948" pos:column="52">messageBox</name></name><argument_list pos:line="1948" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="1948" pos:column="63">"ContextMenuXmlEditWarning"</lit:literal></expr></argument>,
					<argument><expr><call><name><name pos:line="1949" pos:column="41">_pPublicInterface</name><op:operator pos:line="1949" pos:column="58">-&gt;</op:operator><name pos:line="1949" pos:column="60">getHSelf</name></name><argument_list pos:line="1949" pos:column="68">()</argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="1950" pos:column="41">TEXT</name><argument_list pos:line="1950" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1950" pos:column="46">"Editing contextMenu.xml allows you to modify your Notepad++ popup context menu.\rYou have to restart your Notepad++ to take effect after modifying contextMenu.xml."</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><call><name pos:line="1951" pos:column="41">TEXT</name><argument_list pos:line="1951" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1951" pos:column="46">"Editing contextMenu"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
					<argument><expr><name pos:line="1952" pos:column="41">MB_OK</name><op:operator pos:line="1952" pos:column="46">|</op:operator><name pos:line="1952" pos:column="47">MB_APPLMODAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block>
            <decl_stmt><decl><type><name pos:line="1954" pos:column="13">NppParameters</name> <type:modifier pos:line="1954" pos:column="27">*</type:modifier></type><name pos:line="1954" pos:column="28">pNppParams</name> <init pos:line="1954" pos:column="39">= <expr><call><name><name pos:line="1954" pos:column="41">NppParameters</name><op:operator pos:line="1954" pos:column="54">::</op:operator><name pos:line="1954" pos:column="56">getInstance</name></name><argument_list pos:line="1954" pos:column="67">()</argument_list></call></expr></init></decl>;</decl_stmt>
            <decl_stmt><decl><type><name pos:line="1955" pos:column="13">BufferID</name></type> <name pos:line="1955" pos:column="22">bufID</name> <init pos:line="1955" pos:column="28">= <expr><call><name pos:line="1955" pos:column="30">doOpen</name><argument_list pos:line="1955" pos:column="36">(<argument><expr><op:operator pos:line="1955" pos:column="37">(</op:operator><call><name><name pos:line="1955" pos:column="38">pNppParams</name><op:operator pos:line="1955" pos:column="48">-&gt;</op:operator><name pos:line="1955" pos:column="50">getContextMenuPath</name></name><argument_list pos:line="1955" pos:column="68">()</argument_list></call><op:operator pos:line="1955" pos:column="70">)</op:operator><op:operator pos:line="1955" pos:column="71">.</op:operator><call><name pos:line="1955" pos:column="72">c_str</name><argument_list pos:line="1955" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="1956" pos:column="25">switchToFile</name><argument_list pos:line="1956" pos:column="37">(<argument><expr><name pos:line="1956" pos:column="38">bufID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:line="1957" pos:column="13">break;</break>
        }</block>

        </case><case pos:line="1960" pos:column="9">case <expr><name pos:line="1960" pos:column="14">IDM_VIEW_GOTO_ANOTHER_VIEW</name></expr>:
            <expr_stmt><expr><call><name pos:line="1961" pos:column="13">docGotoAnotherEditView</name><argument_list pos:line="1961" pos:column="35">(<argument><expr><name pos:line="1961" pos:column="36">TransferMove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1962" pos:column="25">checkSyncState</name><argument_list pos:line="1962" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
            <break pos:line="1963" pos:column="13">break;</break>

        </case><case pos:line="1965" pos:column="9">case <expr><name pos:line="1965" pos:column="14">IDM_VIEW_CLONE_TO_ANOTHER_VIEW</name></expr>:
            <expr_stmt><expr><call><name pos:line="1966" pos:column="13">docGotoAnotherEditView</name><argument_list pos:line="1966" pos:column="35">(<argument><expr><name pos:line="1966" pos:column="36">TransferClone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="1967" pos:column="25">checkSyncState</name><argument_list pos:line="1967" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
            <break pos:line="1968" pos:column="13">break;</break>

        </case><case pos:line="1970" pos:column="9">case <expr><name pos:line="1970" pos:column="14">IDM_VIEW_GOTO_NEW_INSTANCE</name></expr> :
            <expr_stmt><expr><call><name pos:line="1971" pos:column="13">docOpenInNewInstance</name><argument_list pos:line="1971" pos:column="33">(<argument><expr><name pos:line="1971" pos:column="34">TransferMove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:line="1972" pos:column="13">break;</break>

        </case><case pos:line="1974" pos:column="9">case <expr><name pos:line="1974" pos:column="14">IDM_VIEW_LOAD_IN_NEW_INSTANCE</name></expr>:
            <expr_stmt><expr><call><name pos:line="1975" pos:column="13">docOpenInNewInstance</name><argument_list pos:line="1975" pos:column="33">(<argument><expr><name pos:line="1975" pos:column="34">TransferClone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:line="1976" pos:column="13">break;</break>

		</case><case pos:line="1978" pos:column="17">case <expr><name pos:line="1978" pos:column="22">IDM_VIEW_SWITCHTO_OTHER_VIEW</name></expr>:
		<block pos:line="1979" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1980" pos:column="25">int</name></type> <name pos:line="1980" pos:column="29">view_to_focus</name></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1981" pos:column="25">HWND</name></type> <name pos:line="1981" pos:column="30">wnd</name> <init pos:line="1981" pos:column="34">= <expr><call><name pos:line="1981" pos:column="36">GetFocus</name><argument_list pos:line="1981" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1982" pos:column="25">if <condition pos:line="1982" pos:column="28">(<expr><call><name><name pos:line="1982" pos:column="29">_pEditView</name><op:operator pos:line="1982" pos:column="39">-&gt;</op:operator><name pos:line="1982" pos:column="41">getHSelf</name></name><argument_list pos:line="1982" pos:column="49">()</argument_list></call> <op:operator pos:line="1982" pos:column="52">==</op:operator> <name pos:line="1982" pos:column="55">wnd</name></expr>)</condition><then pos:line="1982" pos:column="59">
			<block pos:line="1983" pos:column="25">{
				<expr_stmt><expr><name pos:line="1984" pos:column="33">view_to_focus</name> <op:operator pos:line="1984" pos:column="47">=</op:operator> <call><name pos:line="1984" pos:column="49">otherView</name><argument_list pos:line="1984" pos:column="58">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="1985" pos:column="33">if <condition pos:line="1985" pos:column="36">(<expr><op:operator pos:line="1985" pos:column="37">!</op:operator><call><name pos:line="1985" pos:column="38">viewVisible</name><argument_list pos:line="1985" pos:column="49">(<argument><expr><name pos:line="1985" pos:column="50">view_to_focus</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1985" pos:column="65"> <expr_stmt><expr><name pos:line="1985" pos:column="66">view_to_focus</name> <op:operator pos:line="1985" pos:column="80">=</op:operator> <name pos:line="1985" pos:column="82">_activeView</name></expr>;</expr_stmt></then></if>
			}</block></then>
			<else pos:line="1987" pos:column="25">else
			<block pos:line="1988" pos:column="25">{
				<expr_stmt><expr><name pos:line="1989" pos:column="33">view_to_focus</name> <op:operator pos:line="1989" pos:column="47">=</op:operator> <call><name pos:line="1989" pos:column="49">currentView</name><argument_list pos:line="1989" pos:column="60">()</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
			<expr_stmt><expr><call><name pos:line="1991" pos:column="25">switchEditViewTo</name><argument_list pos:line="1991" pos:column="41">(<argument><expr><name pos:line="1991" pos:column="42">view_to_focus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1992" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="1995" pos:column="9">case <expr><name pos:line="1995" pos:column="14">IDM_ABOUT</name></expr>:
		<block pos:line="1996" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1997" pos:column="25">bool</name></type> <name pos:line="1997" pos:column="30">doAboutDlg</name> <init pos:line="1997" pos:column="41">= <expr><lit:literal type="boolean" pos:line="1997" pos:column="43">false</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="1998" pos:column="25">const</specifier> <name pos:line="1998" pos:column="31">int</name></type> <name pos:line="1998" pos:column="35">maxSelLen</name> <init pos:line="1998" pos:column="45">= <expr><lit:literal type="number" pos:line="1998" pos:column="47">32</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="1999" pos:column="25">int</name></type> <name pos:line="1999" pos:column="29">textLen</name> <init pos:line="1999" pos:column="37">= <expr><call><name><name pos:line="1999" pos:column="39">_pEditView</name><op:operator pos:line="1999" pos:column="49">-&gt;</op:operator><name pos:line="1999" pos:column="51">execute</name></name><argument_list pos:line="1999" pos:column="58">(<argument><expr><name pos:line="1999" pos:column="59">SCI_GETSELTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1999" pos:column="75">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="1999" pos:column="78">0</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="1999" pos:column="81">-</op:operator> <lit:literal type="number" pos:line="1999" pos:column="83">1</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="2000" pos:column="25">if <condition pos:line="2000" pos:column="28">(<expr><op:operator pos:line="2000" pos:column="29">!</op:operator><name pos:line="2000" pos:column="30">textLen</name></expr>)</condition><then pos:line="2000" pos:column="38">
				<expr_stmt><expr><name pos:line="2001" pos:column="33">doAboutDlg</name> <op:operator pos:line="2001" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="2001" pos:column="46">true</lit:literal></expr>;</expr_stmt></then></if>
			<if pos:line="2002" pos:column="25">if <condition pos:line="2002" pos:column="28">(<expr><name pos:line="2002" pos:column="29">textLen</name> <op:operator pos:line="2002" pos:column="37">&gt;</op:operator> <name pos:line="2002" pos:column="39">maxSelLen</name></expr>)</condition><then pos:line="2002" pos:column="49">
				<expr_stmt><expr><name pos:line="2003" pos:column="33">doAboutDlg</name> <op:operator pos:line="2003" pos:column="44">=</op:operator> <lit:literal type="boolean" pos:line="2003" pos:column="46">true</lit:literal></expr>;</expr_stmt></then></if>

			<if pos:line="2005" pos:column="25">if <condition pos:line="2005" pos:column="28">(<expr><op:operator pos:line="2005" pos:column="29">!</op:operator><name pos:line="2005" pos:column="30">doAboutDlg</name></expr>)</condition><then pos:line="2005" pos:column="41">
			<block pos:line="2006" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2007" pos:column="33">char</name></type> <name><name pos:line="2007" pos:column="38">author</name><index pos:line="2007" pos:column="44">[<expr><name pos:line="2007" pos:column="45">maxSelLen</name><op:operator pos:line="2007" pos:column="54">+</op:operator><lit:literal type="number" pos:line="2007" pos:column="55">1</lit:literal></expr>]</index></name> <init pos:line="2007" pos:column="58">= <expr><lit:literal type="string" pos:line="2007" pos:column="60">""</lit:literal></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="2008" pos:column="33">_pEditView</name><op:operator pos:line="2008" pos:column="43">-&gt;</op:operator><name pos:line="2008" pos:column="45">getSelectedText</name></name><argument_list pos:line="2008" pos:column="60">(<argument><expr><name pos:line="2008" pos:column="61">author</name></expr></argument>, <argument><expr><name pos:line="2008" pos:column="69">maxSelLen</name> <op:operator pos:line="2008" pos:column="79">+</op:operator> <lit:literal type="number" pos:line="2008" pos:column="81">1</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="2009" pos:column="33">int</name></type> <name pos:line="2009" pos:column="37">iQuote</name> <init pos:line="2009" pos:column="44">= <expr><call><name pos:line="2009" pos:column="46">getQuoteIndexFrom</name><argument_list pos:line="2009" pos:column="63">(<argument><expr><name pos:line="2009" pos:column="64">author</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				
				<if pos:line="2011" pos:column="33">if <condition pos:line="2011" pos:column="36">(<expr><name pos:line="2011" pos:column="37">iQuote</name> <op:operator pos:line="2011" pos:column="44">==</op:operator> <op:operator pos:line="2011" pos:column="47">-</op:operator><lit:literal type="number" pos:line="2011" pos:column="48">1</lit:literal></expr>)</condition><then pos:line="2011" pos:column="50">
				<block pos:line="2012" pos:column="33">{
					<expr_stmt><expr><name pos:line="2013" pos:column="41">doAboutDlg</name> <op:operator pos:line="2013" pos:column="52">=</op:operator> <lit:literal type="boolean" pos:line="2013" pos:column="54">true</lit:literal></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="2015" pos:column="33">else <if pos:line="2015" pos:column="38">if <condition pos:line="2015" pos:column="41">(<expr><name pos:line="2015" pos:column="42">iQuote</name> <op:operator pos:line="2015" pos:column="49">==</op:operator> <op:operator pos:line="2015" pos:column="52">-</op:operator><lit:literal type="number" pos:line="2015" pos:column="53">2</lit:literal></expr>)</condition><then pos:line="2015" pos:column="55">
				<block pos:line="2016" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="2017" pos:column="41">showAllQuotes</name><argument_list pos:line="2017" pos:column="54">()</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2018" pos:column="41">return;</return>
				}</block></then></if></else></if>
				<if pos:line="2020" pos:column="33">if <condition pos:line="2020" pos:column="36">(<expr><name pos:line="2020" pos:column="37">iQuote</name> <op:operator pos:line="2020" pos:column="44">!=</op:operator> <op:operator pos:line="2020" pos:column="47">-</op:operator><lit:literal type="number" pos:line="2020" pos:column="48">1</lit:literal></expr>)</condition><then pos:line="2020" pos:column="50">
				<block pos:line="2021" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="2022" pos:column="41">showQuoteFromIndex</name><argument_list pos:line="2022" pos:column="59">(<argument><expr><name pos:line="2022" pos:column="60">iQuote</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="2023" pos:column="41">return;</return>
				}</block></then></if>	
			}</block></then></if>
			<if pos:line="2026" pos:column="25">if <condition pos:line="2026" pos:column="28">(<expr><name pos:line="2026" pos:column="29">doAboutDlg</name></expr>)</condition><then pos:line="2026" pos:column="40">
			<block pos:line="2027" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2028" pos:column="33">bool</name></type> <name pos:line="2028" pos:column="38">isFirstTime</name> <init pos:line="2028" pos:column="50">= <expr><op:operator pos:line="2028" pos:column="52">!</op:operator><call><name><name pos:line="2028" pos:column="53">_aboutDlg</name><op:operator pos:line="2028" pos:column="62">.</op:operator><name pos:line="2028" pos:column="63">isCreated</name></name><argument_list pos:line="2028" pos:column="72">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="2029" pos:column="33">_aboutDlg</name><op:operator pos:line="2029" pos:column="42">.</op:operator><name pos:line="2029" pos:column="43">doDialog</name></name><argument_list pos:line="2029" pos:column="51">()</argument_list></call></expr>;</expr_stmt>
				<if pos:line="2030" pos:column="33">if <condition pos:line="2030" pos:column="36">(<expr><name pos:line="2030" pos:column="37">isFirstTime</name> <op:operator pos:line="2030" pos:column="49">&amp;&amp;</op:operator> <call><name><name pos:line="2030" pos:column="52">_nativeLangSpeaker</name><op:operator pos:line="2030" pos:column="70">.</op:operator><name pos:line="2030" pos:column="71">getNativeLangA</name></name><argument_list pos:line="2030" pos:column="85">()</argument_list></call></expr>)</condition><then pos:line="2030" pos:column="88">
				<block pos:line="2031" pos:column="33">{
					<if pos:line="2032" pos:column="41">if <condition pos:line="2032" pos:column="44">(<expr><call><name><name pos:line="2032" pos:column="45">_nativeLangSpeaker</name><op:operator pos:line="2032" pos:column="63">.</op:operator><name pos:line="2032" pos:column="64">getLangEncoding</name></name><argument_list pos:line="2032" pos:column="79">()</argument_list></call> <op:operator pos:line="2032" pos:column="82">==</op:operator> <name pos:line="2032" pos:column="85">NPP_CP_BIG5</name></expr>)</condition><then pos:line="2032" pos:column="97">
					<block pos:line="2033" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="2034" pos:column="49">char</name> <type:modifier pos:line="2034" pos:column="54">*</type:modifier></type><name pos:line="2034" pos:column="55">authorName</name> <init pos:line="2034" pos:column="66">= <expr><lit:literal type="string" pos:line="2034" pos:column="68">"«J¤µ§^"</lit:literal></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="2035" pos:column="49">HWND</name></type> <name pos:line="2035" pos:column="54">hItem</name> <init pos:line="2035" pos:column="60">= <expr><call><name><op:operator pos:line="2035" pos:column="62">::</op:operator><name pos:line="2035" pos:column="64">GetDlgItem</name></name><argument_list pos:line="2035" pos:column="74">(<argument><expr><call><name><name pos:line="2035" pos:column="75">_aboutDlg</name><op:operator pos:line="2035" pos:column="84">.</op:operator><name pos:line="2035" pos:column="85">getHSelf</name></name><argument_list pos:line="2035" pos:column="93">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2035" pos:column="97">IDC_AUTHOR_NAME</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:line="2036" pos:column="1">#<cpp:directive pos:line="2036" pos:column="2">ifdef</cpp:directive> <name pos:line="2036" pos:column="8">UNICODE</name></cpp:ifdef>
						<decl_stmt><decl><type><name pos:line="2037" pos:column="49">WcharMbcsConvertor</name> <type:modifier pos:line="2037" pos:column="68">*</type:modifier></type><name pos:line="2037" pos:column="69">wmc</name> <init pos:line="2037" pos:column="73">= <expr><call><name><name pos:line="2037" pos:column="75">WcharMbcsConvertor</name><op:operator pos:line="2037" pos:column="93">::</op:operator><name pos:line="2037" pos:column="95">getInstance</name></name><argument_list pos:line="2037" pos:column="106">()</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><specifier pos:line="2038" pos:column="49">const</specifier> <name pos:line="2038" pos:column="55">wchar_t</name> <type:modifier pos:line="2038" pos:column="63">*</type:modifier></type><name pos:line="2038" pos:column="64">authorNameW</name> <init pos:line="2038" pos:column="76">= <expr><call><name><name pos:line="2038" pos:column="78">wmc</name><op:operator pos:line="2038" pos:column="81">-&gt;</op:operator><name pos:line="2038" pos:column="83">char2wchar</name></name><argument_list pos:line="2038" pos:column="93">(<argument><expr><name pos:line="2038" pos:column="94">authorName</name></expr></argument>, <argument><expr><name pos:line="2038" pos:column="106">NPP_CP_BIG5</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="2039" pos:column="49">::</op:operator><name pos:line="2039" pos:column="51">SetWindowText</name></name><argument_list pos:line="2039" pos:column="64">(<argument><expr><name pos:line="2039" pos:column="65">hItem</name></expr></argument>, <argument><expr><name pos:line="2039" pos:column="72">authorNameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="2040" pos:column="1">#<cpp:directive pos:line="2040" pos:column="2">else</cpp:directive></cpp:else>
						<expr_stmt><expr><call><name><op:operator pos:line="2041" pos:column="49">::</op:operator><name pos:line="2041" pos:column="51">SetWindowText</name></name><argument_list pos:line="2041" pos:column="64">(<argument><expr><name pos:line="2041" pos:column="65">hItem</name></expr></argument>, <argument><expr><name pos:line="2041" pos:column="72">authorName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="2042" pos:column="1">#<cpp:directive pos:line="2042" pos:column="2">endif</cpp:directive></cpp:endif>
					}</block></then></if>
				}</block></then></if>
			}</block></then></if>
			<break pos:line="2046" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="2049" pos:column="17">case <expr><name pos:line="2049" pos:column="22">IDM_HELP</name></expr> :
		<block pos:line="2050" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2051" pos:column="25">generic_string</name></type> <name pos:line="2051" pos:column="40">tmp</name><argument_list pos:line="2051" pos:column="43">(<argument><expr><op:operator pos:line="2051" pos:column="44">(</op:operator><call><name><name pos:line="2051" pos:column="45">NppParameters</name><op:operator pos:line="2051" pos:column="58">::</op:operator><name pos:line="2051" pos:column="60">getInstance</name></name><argument_list pos:line="2051" pos:column="71">()</argument_list></call><op:operator pos:line="2051" pos:column="73">)</op:operator><op:operator pos:line="2051" pos:column="74">-&gt;</op:operator><call><name pos:line="2051" pos:column="76">getNppPath</name><argument_list pos:line="2051" pos:column="86">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2052" pos:column="25">generic_string</name></type> <name pos:line="2052" pos:column="40">nppHelpPath</name> <init pos:line="2052" pos:column="52">= <expr><call><name><name pos:line="2052" pos:column="54">tmp</name><op:operator pos:line="2052" pos:column="57">.</op:operator><name pos:line="2052" pos:column="58">c_str</name></name><argument_list pos:line="2052" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<expr_stmt><expr><name pos:line="2054" pos:column="25">nppHelpPath</name> <op:operator pos:line="2054" pos:column="37">+=</op:operator> <call><name pos:line="2054" pos:column="40">TEXT</name><argument_list pos:line="2054" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="2054" pos:column="45">"\\user.manual\\documentation\\notepad-online-document.html"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2055" pos:column="25">if <condition pos:line="2055" pos:column="28">(<expr><call><name><op:operator pos:line="2055" pos:column="29">::</op:operator><name pos:line="2055" pos:column="31">PathFileExists</name></name><argument_list pos:line="2055" pos:column="45">(<argument><expr><call><name><name pos:line="2055" pos:column="46">nppHelpPath</name><op:operator pos:line="2055" pos:column="57">.</op:operator><name pos:line="2055" pos:column="58">c_str</name></name><argument_list pos:line="2055" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2055" pos:column="67">
				<expr_stmt><expr><call><name><op:operator pos:line="2056" pos:column="33">::</op:operator><name pos:line="2056" pos:column="35">ShellExecute</name></name><argument_list pos:line="2056" pos:column="47">(<argument><expr><name pos:line="2056" pos:column="48">NULL</name></expr></argument>, <argument><expr><call><name pos:line="2056" pos:column="54">TEXT</name><argument_list pos:line="2056" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="2056" pos:column="59">"open"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2056" pos:column="68">nppHelpPath</name><op:operator pos:line="2056" pos:column="79">.</op:operator><name pos:line="2056" pos:column="80">c_str</name></name><argument_list pos:line="2056" pos:column="85">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2056" pos:column="89">NULL</name></expr></argument>, <argument><expr><name pos:line="2056" pos:column="95">NULL</name></expr></argument>, <argument><expr><name pos:line="2056" pos:column="101">SW_SHOWNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
			<else pos:line="2057" pos:column="25">else
			<block pos:line="2058" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2059" pos:column="33">generic_string</name></type> <name pos:line="2059" pos:column="48">msg</name> <init pos:line="2059" pos:column="52">= <expr><name pos:line="2059" pos:column="54">nppHelpPath</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2060" pos:column="33">generic_string</name></type> <name pos:line="2060" pos:column="48">warning</name></decl><op:operator pos:line="2060" pos:column="55">,</op:operator> <decl><type ref="prev"/><name pos:line="2060" pos:column="57">title</name></decl>;</decl_stmt>
				<if pos:line="2061" pos:column="33">if <condition pos:line="2061" pos:column="36">(<expr><op:operator pos:line="2061" pos:column="37">!</op:operator><call><name><name pos:line="2061" pos:column="38">_nativeLangSpeaker</name><op:operator pos:line="2061" pos:column="56">.</op:operator><name pos:line="2061" pos:column="57">getMsgBoxLang</name></name><argument_list pos:line="2061" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="2061" pos:column="71">"NppHelpAbsentWarning"</lit:literal></expr></argument>, <argument><expr><name pos:line="2061" pos:column="95">title</name></expr></argument>, <argument><expr><name pos:line="2061" pos:column="102">warning</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2061" pos:column="111">
				<block pos:line="2062" pos:column="33">{
					<expr_stmt><expr><name pos:line="2063" pos:column="41">title</name> <op:operator pos:line="2063" pos:column="47">=</op:operator> <call><name pos:line="2063" pos:column="49">TEXT</name><argument_list pos:line="2063" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="2063" pos:column="54">"File does not exist"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="2064" pos:column="41">warning</name> <op:operator pos:line="2064" pos:column="49">=</op:operator> <call><name pos:line="2064" pos:column="51">TEXT</name><argument_list pos:line="2064" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="2064" pos:column="56">"\rdoesn't exist. Please download it on Notepad++ site."</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><name pos:line="2066" pos:column="33">msg</name> <op:operator pos:line="2066" pos:column="37">+=</op:operator> <name pos:line="2066" pos:column="40">warning</name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="2067" pos:column="33">::</op:operator><name pos:line="2067" pos:column="35">MessageBox</name></name><argument_list pos:line="2067" pos:column="45">(<argument><expr><call><name><name pos:line="2067" pos:column="46">_pPublicInterface</name><op:operator pos:line="2067" pos:column="63">-&gt;</op:operator><name pos:line="2067" pos:column="65">getHSelf</name></name><argument_list pos:line="2067" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2067" pos:column="77">msg</name><op:operator pos:line="2067" pos:column="80">.</op:operator><name pos:line="2067" pos:column="81">c_str</name></name><argument_list pos:line="2067" pos:column="86">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2067" pos:column="90">title</name><op:operator pos:line="2067" pos:column="95">.</op:operator><name pos:line="2067" pos:column="96">c_str</name></name><argument_list pos:line="2067" pos:column="101">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2067" pos:column="105">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></else></if>
		}</block>
		<break pos:line="2070" pos:column="17">break;</break>

		</case><case pos:line="2072" pos:column="17">case <expr><name pos:line="2072" pos:column="22">IDM_HOMESWEETHOME</name></expr> :
		<block pos:line="2073" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="2074" pos:column="25">::</op:operator><name pos:line="2074" pos:column="27">ShellExecute</name></name><argument_list pos:line="2074" pos:column="39">(<argument><expr><name pos:line="2074" pos:column="40">NULL</name></expr></argument>, <argument><expr><call><name pos:line="2074" pos:column="46">TEXT</name><argument_list pos:line="2074" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2074" pos:column="51">"open"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2074" pos:column="60">TEXT</name><argument_list pos:line="2074" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2074" pos:column="65">"http://notepad-plus-plus.org/"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2074" pos:column="99">NULL</name></expr></argument>, <argument><expr><name pos:line="2074" pos:column="105">NULL</name></expr></argument>, <argument><expr><name pos:line="2074" pos:column="111">SW_SHOWNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2075" pos:column="25">break;</break>
		}</block>
		</case><case pos:line="2077" pos:column="17">case <expr><name pos:line="2077" pos:column="22">IDM_PROJECTPAGE</name></expr> :
		<block pos:line="2078" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="2079" pos:column="25">::</op:operator><name pos:line="2079" pos:column="27">ShellExecute</name></name><argument_list pos:line="2079" pos:column="39">(<argument><expr><name pos:line="2079" pos:column="40">NULL</name></expr></argument>, <argument><expr><call><name pos:line="2079" pos:column="46">TEXT</name><argument_list pos:line="2079" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2079" pos:column="51">"open"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2079" pos:column="60">TEXT</name><argument_list pos:line="2079" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2079" pos:column="65">"http://sourceforge.net/projects/notepad-plus/"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2079" pos:column="115">NULL</name></expr></argument>, <argument><expr><name pos:line="2079" pos:column="121">NULL</name></expr></argument>, <argument><expr><name pos:line="2079" pos:column="127">SW_SHOWNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2080" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="2083" pos:column="17">case <expr><name pos:line="2083" pos:column="22">IDM_ONLINEHELP</name></expr>:
		<block pos:line="2084" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="2085" pos:column="25">::</op:operator><name pos:line="2085" pos:column="27">ShellExecute</name></name><argument_list pos:line="2085" pos:column="39">(<argument><expr><name pos:line="2085" pos:column="40">NULL</name></expr></argument>, <argument><expr><call><name pos:line="2085" pos:column="46">TEXT</name><argument_list pos:line="2085" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2085" pos:column="51">"open"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2085" pos:column="60">TEXT</name><argument_list pos:line="2085" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2085" pos:column="65">"http://npp-community.tuxfamily.org/"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2085" pos:column="105">NULL</name></expr></argument>, <argument><expr><name pos:line="2085" pos:column="111">NULL</name></expr></argument>, <argument><expr><name pos:line="2085" pos:column="117">SW_SHOWNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2086" pos:column="25">break;</break>
		}</block>
	
		</case><case pos:line="2089" pos:column="17">case <expr><name pos:line="2089" pos:column="22">IDM_FORUM</name></expr>:
		<block pos:line="2090" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="2091" pos:column="25">::</op:operator><name pos:line="2091" pos:column="27">ShellExecute</name></name><argument_list pos:line="2091" pos:column="39">(<argument><expr><name pos:line="2091" pos:column="40">NULL</name></expr></argument>, <argument><expr><call><name pos:line="2091" pos:column="46">TEXT</name><argument_list pos:line="2091" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2091" pos:column="51">"open"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2091" pos:column="60">TEXT</name><argument_list pos:line="2091" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2091" pos:column="65">"http://sourceforge.net/forum/?group_id=95717"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2091" pos:column="114">NULL</name></expr></argument>, <argument><expr><name pos:line="2091" pos:column="120">NULL</name></expr></argument>, <argument><expr><name pos:line="2091" pos:column="126">SW_SHOWNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2092" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="2095" pos:column="17">case <expr><name pos:line="2095" pos:column="22">IDM_PLUGINSHOME</name></expr>:
		<block pos:line="2096" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="2097" pos:column="25">::</op:operator><name pos:line="2097" pos:column="27">ShellExecute</name></name><argument_list pos:line="2097" pos:column="39">(<argument><expr><name pos:line="2097" pos:column="40">NULL</name></expr></argument>, <argument><expr><call><name pos:line="2097" pos:column="46">TEXT</name><argument_list pos:line="2097" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="2097" pos:column="51">"open"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="2097" pos:column="60">TEXT</name><argument_list pos:line="2097" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="2097" pos:column="65">"http://sourceforge.net/apps/mediawiki/notepad-plus/index.php?title=Plugin_Central"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="2097" pos:column="151">NULL</name></expr></argument>, <argument><expr><name pos:line="2097" pos:column="157">NULL</name></expr></argument>, <argument><expr><name pos:line="2097" pos:column="163">SW_SHOWNORMAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2098" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="2101" pos:column="17">case <expr><name pos:line="2101" pos:column="22">IDM_UPDATE_NPP</name></expr> :
		<block pos:line="2102" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2103" pos:column="25">generic_string</name></type> <name pos:line="2103" pos:column="40">updaterDir</name> <init pos:line="2103" pos:column="51">= <expr><op:operator pos:line="2103" pos:column="53">(</op:operator><call><name><name pos:line="2103" pos:column="54">NppParameters</name><op:operator pos:line="2103" pos:column="67">::</op:operator><name pos:line="2103" pos:column="69">getInstance</name></name><argument_list pos:line="2103" pos:column="80">()</argument_list></call><op:operator pos:line="2103" pos:column="82">)</op:operator><op:operator pos:line="2103" pos:column="83">-&gt;</op:operator><call><name pos:line="2103" pos:column="85">getNppPath</name><argument_list pos:line="2103" pos:column="95">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="2104" pos:column="25">PathAppend</name><argument_list pos:line="2104" pos:column="35">(<argument><expr><name pos:line="2104" pos:column="36">updaterDir</name></expr></argument> ,<argument><expr><call><name pos:line="2104" pos:column="48">TEXT</name><argument_list pos:line="2104" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="2104" pos:column="53">"updater"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="2106" pos:column="25">generic_string</name></type> <name pos:line="2106" pos:column="40">updaterFullPath</name> <init pos:line="2106" pos:column="56">= <expr><name pos:line="2106" pos:column="58">updaterDir</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name pos:line="2107" pos:column="25">PathAppend</name><argument_list pos:line="2107" pos:column="35">(<argument><expr><name pos:line="2107" pos:column="36">updaterFullPath</name></expr></argument>, <argument><expr><call><name pos:line="2107" pos:column="53">TEXT</name><argument_list pos:line="2107" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="2107" pos:column="58">"gup.exe"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
			<decl_stmt><decl><type><name pos:line="2109" pos:column="25">generic_string</name></type> <name pos:line="2109" pos:column="40">param</name> <init pos:line="2109" pos:column="46">= <expr><call><name pos:line="2109" pos:column="48">TEXT</name><argument_list pos:line="2109" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="2109" pos:column="53">"-verbose -v"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2110" pos:column="25">param</name> <op:operator pos:line="2110" pos:column="31">+=</op:operator> <name pos:line="2110" pos:column="34">VERSION_VALUE</name></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2111" pos:column="25">Process</name></type> <name pos:line="2111" pos:column="33">updater</name><argument_list pos:line="2111" pos:column="40">(<argument><expr><call><name><name pos:line="2111" pos:column="41">updaterFullPath</name><op:operator pos:line="2111" pos:column="56">.</op:operator><name pos:line="2111" pos:column="57">c_str</name></name><argument_list pos:line="2111" pos:column="62">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2111" pos:column="66">param</name><op:operator pos:line="2111" pos:column="71">.</op:operator><name pos:line="2111" pos:column="72">c_str</name></name><argument_list pos:line="2111" pos:column="77">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2111" pos:column="81">updaterDir</name><op:operator pos:line="2111" pos:column="91">.</op:operator><name pos:line="2111" pos:column="92">c_str</name></name><argument_list pos:line="2111" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			
			<expr_stmt><expr><call><name><name pos:line="2113" pos:column="25">updater</name><op:operator pos:line="2113" pos:column="32">.</op:operator><name pos:line="2113" pos:column="33">run</name></name><argument_list pos:line="2113" pos:column="36">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2114" pos:column="25">break;</break>
		}</block>

		</case><case pos:line="2117" pos:column="17">case <expr><name pos:line="2117" pos:column="22">IDM_EDIT_AUTOCOMPLETE</name></expr> :
			<expr_stmt><expr><call><name pos:line="2118" pos:column="25">showAutoComp</name><argument_list pos:line="2118" pos:column="37">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2119" pos:column="25">break;</break>

		</case><case pos:line="2121" pos:column="17">case <expr><name pos:line="2121" pos:column="22">IDM_EDIT_AUTOCOMPLETE_CURRENTFILE</name></expr> :
			<expr_stmt><expr><call><name pos:line="2122" pos:column="25">autoCompFromCurrentFile</name><argument_list pos:line="2122" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2123" pos:column="25">break;</break>

		</case><case pos:line="2125" pos:column="17">case <expr><name pos:line="2125" pos:column="22">IDM_EDIT_FUNCCALLTIP</name></expr> :
			<expr_stmt><expr><call><name pos:line="2126" pos:column="25">showFunctionComp</name><argument_list pos:line="2126" pos:column="41">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2127" pos:column="25">break;</break>

        </case><case pos:line="2129" pos:column="9">case <expr><name pos:line="2129" pos:column="14">IDM_LANGSTYLE_CONFIG_DLG</name></expr> :
		<block pos:line="2130" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2131" pos:column="25">bool</name></type> <name pos:line="2131" pos:column="30">isFirstTime</name> <init pos:line="2131" pos:column="42">= <expr><op:operator pos:line="2131" pos:column="44">!</op:operator><call><name><name pos:line="2131" pos:column="45">_configStyleDlg</name><op:operator pos:line="2131" pos:column="60">.</op:operator><name pos:line="2131" pos:column="61">isCreated</name></name><argument_list pos:line="2131" pos:column="70">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="2132" pos:column="25">_configStyleDlg</name><op:operator pos:line="2132" pos:column="40">.</op:operator><name pos:line="2132" pos:column="41">doDialog</name></name><argument_list pos:line="2132" pos:column="49">(<argument><expr><call><name><name pos:line="2132" pos:column="50">_nativeLangSpeaker</name><op:operator pos:line="2132" pos:column="68">.</op:operator><name pos:line="2132" pos:column="69">isRTL</name></name><argument_list pos:line="2132" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2133" pos:column="25">if <condition pos:line="2133" pos:column="28">(<expr><name pos:line="2133" pos:column="29">isFirstTime</name></expr>)</condition><then pos:line="2133" pos:column="41">
                <expr_stmt><expr><call><name><name pos:line="2134" pos:column="17">_nativeLangSpeaker</name><op:operator pos:line="2134" pos:column="35">.</op:operator><name pos:line="2134" pos:column="36">changeConfigLang</name></name><argument_list pos:line="2134" pos:column="52">(<argument><expr><call><name><name pos:line="2134" pos:column="53">_configStyleDlg</name><op:operator pos:line="2134" pos:column="68">.</op:operator><name pos:line="2134" pos:column="69">getHSelf</name></name><argument_list pos:line="2134" pos:column="77">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			<break pos:line="2135" pos:column="25">break;</break>
		}</block>

        </case><case pos:line="2138" pos:column="9">case <expr><name pos:line="2138" pos:column="14">IDM_LANG_C</name></expr>	:
        </case><case pos:line="2139" pos:column="9">case <expr><name pos:line="2139" pos:column="14">IDM_LANG_CPP</name></expr> :
        </case><case pos:line="2140" pos:column="9">case <expr><name pos:line="2140" pos:column="14">IDM_LANG_JAVA</name></expr> :
        </case><case pos:line="2141" pos:column="9">case <expr><name pos:line="2141" pos:column="14">IDM_LANG_CS</name></expr> :
        </case><case pos:line="2142" pos:column="9">case <expr><name pos:line="2142" pos:column="14">IDM_LANG_HTML</name></expr> :
        </case><case pos:line="2143" pos:column="9">case <expr><name pos:line="2143" pos:column="14">IDM_LANG_XML</name></expr> :
        </case><case pos:line="2144" pos:column="9">case <expr><name pos:line="2144" pos:column="14">IDM_LANG_JS</name></expr> :
        </case><case pos:line="2145" pos:column="9">case <expr><name pos:line="2145" pos:column="14">IDM_LANG_PHP</name></expr> :
        </case><case pos:line="2146" pos:column="9">case <expr><name pos:line="2146" pos:column="14">IDM_LANG_ASP</name></expr> :
        </case><case pos:line="2147" pos:column="9">case <expr><name pos:line="2147" pos:column="14">IDM_LANG_CSS</name></expr> :
        </case><case pos:line="2148" pos:column="9">case <expr><name pos:line="2148" pos:column="14">IDM_LANG_LUA</name></expr> :
        </case><case pos:line="2149" pos:column="9">case <expr><name pos:line="2149" pos:column="14">IDM_LANG_PERL</name></expr> :
        </case><case pos:line="2150" pos:column="9">case <expr><name pos:line="2150" pos:column="14">IDM_LANG_PYTHON</name></expr> :
        </case><case pos:line="2151" pos:column="9">case <expr><name pos:line="2151" pos:column="14">IDM_LANG_PASCAL</name></expr> :
        </case><case pos:line="2152" pos:column="9">case <expr><name pos:line="2152" pos:column="14">IDM_LANG_BATCH</name></expr> :
        </case><case pos:line="2153" pos:column="9">case <expr><name pos:line="2153" pos:column="14">IDM_LANG_OBJC</name></expr> :
        </case><case pos:line="2154" pos:column="9">case <expr><name pos:line="2154" pos:column="14">IDM_LANG_VB</name></expr> :
        </case><case pos:line="2155" pos:column="9">case <expr><name pos:line="2155" pos:column="14">IDM_LANG_SQL</name></expr> :
        </case><case pos:line="2156" pos:column="9">case <expr><name pos:line="2156" pos:column="14">IDM_LANG_ASCII</name></expr> :
        </case><case pos:line="2157" pos:column="9">case <expr><name pos:line="2157" pos:column="14">IDM_LANG_TEXT</name></expr> :
        </case><case pos:line="2158" pos:column="9">case <expr><name pos:line="2158" pos:column="14">IDM_LANG_RC</name></expr> :
        </case><case pos:line="2159" pos:column="9">case <expr><name pos:line="2159" pos:column="14">IDM_LANG_MAKEFILE</name></expr> :
        </case><case pos:line="2160" pos:column="9">case <expr><name pos:line="2160" pos:column="14">IDM_LANG_INI</name></expr> :
        </case><case pos:line="2161" pos:column="9">case <expr><name pos:line="2161" pos:column="14">IDM_LANG_TEX</name></expr> :
        </case><case pos:line="2162" pos:column="9">case <expr><name pos:line="2162" pos:column="14">IDM_LANG_FORTRAN</name></expr> :
        </case><case pos:line="2163" pos:column="9">case <expr><name pos:line="2163" pos:column="14">IDM_LANG_BASH</name></expr> :
        </case><case pos:line="2164" pos:column="9">case <expr><name pos:line="2164" pos:column="14">IDM_LANG_FLASH</name></expr> :
		</case><case pos:line="2165" pos:column="17">case <expr><name pos:line="2165" pos:column="22">IDM_LANG_NSIS</name></expr> :
		</case><case pos:line="2166" pos:column="17">case <expr><name pos:line="2166" pos:column="22">IDM_LANG_TCL</name></expr> :
		</case><case pos:line="2167" pos:column="17">case <expr><name pos:line="2167" pos:column="22">IDM_LANG_LISP</name></expr> :
		</case><case pos:line="2168" pos:column="17">case <expr><name pos:line="2168" pos:column="22">IDM_LANG_SCHEME</name></expr> :
		</case><case pos:line="2169" pos:column="17">case <expr><name pos:line="2169" pos:column="22">IDM_LANG_ASM</name></expr> :
		</case><case pos:line="2170" pos:column="17">case <expr><name pos:line="2170" pos:column="22">IDM_LANG_DIFF</name></expr> :
		</case><case pos:line="2171" pos:column="17">case <expr><name pos:line="2171" pos:column="22">IDM_LANG_PROPS</name></expr> :
		</case><case pos:line="2172" pos:column="17">case <expr><name pos:line="2172" pos:column="22">IDM_LANG_PS</name></expr>:
		</case><case pos:line="2173" pos:column="17">case <expr><name pos:line="2173" pos:column="22">IDM_LANG_RUBY</name></expr>:
		</case><case pos:line="2174" pos:column="17">case <expr><name pos:line="2174" pos:column="22">IDM_LANG_SMALLTALK</name></expr>:
		</case><case pos:line="2175" pos:column="17">case <expr><name pos:line="2175" pos:column="22">IDM_LANG_VHDL</name></expr> :
        </case><case pos:line="2176" pos:column="9">case <expr><name pos:line="2176" pos:column="14">IDM_LANG_KIX</name></expr> :
        </case><case pos:line="2177" pos:column="9">case <expr><name pos:line="2177" pos:column="14">IDM_LANG_CAML</name></expr> :
        </case><case pos:line="2178" pos:column="9">case <expr><name pos:line="2178" pos:column="14">IDM_LANG_ADA</name></expr> :
        </case><case pos:line="2179" pos:column="9">case <expr><name pos:line="2179" pos:column="14">IDM_LANG_VERILOG</name></expr> :
		</case><case pos:line="2180" pos:column="17">case <expr><name pos:line="2180" pos:column="22">IDM_LANG_MATLAB</name></expr> :
		</case><case pos:line="2181" pos:column="17">case <expr><name pos:line="2181" pos:column="22">IDM_LANG_HASKELL</name></expr> :
        </case><case pos:line="2182" pos:column="9">case <expr><name pos:line="2182" pos:column="14">IDM_LANG_AU3</name></expr> :
		</case><case pos:line="2183" pos:column="17">case <expr><name pos:line="2183" pos:column="22">IDM_LANG_INNO</name></expr> :
		</case><case pos:line="2184" pos:column="17">case <expr><name pos:line="2184" pos:column="22">IDM_LANG_CMAKE</name></expr> :
		</case><case pos:line="2185" pos:column="17">case <expr><name pos:line="2185" pos:column="22">IDM_LANG_YAML</name></expr> :
        </case><case pos:line="2186" pos:column="9">case <expr><name pos:line="2186" pos:column="14">IDM_LANG_COBOL</name></expr> :
        </case><case pos:line="2187" pos:column="9">case <expr><name pos:line="2187" pos:column="14">IDM_LANG_D</name></expr> :
        </case><case pos:line="2188" pos:column="9">case <expr><name pos:line="2188" pos:column="14">IDM_LANG_GUI4CLI</name></expr> :
        </case><case pos:line="2189" pos:column="9">case <expr><name pos:line="2189" pos:column="14">IDM_LANG_POWERSHELL</name></expr> :
        </case><case pos:line="2190" pos:column="9">case <expr><name pos:line="2190" pos:column="14">IDM_LANG_R</name></expr> :
        </case><case pos:line="2191" pos:column="9">case <expr><name pos:line="2191" pos:column="14">IDM_LANG_JSP</name></expr> :
		</case><case pos:line="2192" pos:column="17">case <expr><name pos:line="2192" pos:column="22">IDM_LANG_USER</name></expr> :
		<block pos:line="2193" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="2194" pos:column="13">setLanguage</name><argument_list pos:line="2194" pos:column="24">(<argument><expr><call><name pos:line="2194" pos:column="25">menuID2LangType</name><argument_list pos:line="2194" pos:column="40">(<argument><expr><name pos:line="2194" pos:column="41">id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
        <break pos:line="2196" pos:column="9">break;</break>

        </case><case pos:line="2198" pos:column="9">case <expr><name pos:line="2198" pos:column="14">IDC_PREV_DOC</name></expr> :
        </case><case pos:line="2199" pos:column="9">case <expr><name pos:line="2199" pos:column="14">IDC_NEXT_DOC</name></expr> :
        <block pos:line="2200" pos:column="9">{
			<decl_stmt><decl><type><name pos:line="2201" pos:column="25">int</name></type> <name pos:line="2201" pos:column="29">nbDoc</name> <init pos:line="2201" pos:column="35">= <expr><call><name pos:line="2201" pos:column="37">viewVisible</name><argument_list pos:line="2201" pos:column="48">(<argument><expr><name pos:line="2201" pos:column="49">MAIN_VIEW</name></expr></argument>)</argument_list></call><op:operator pos:line="2201" pos:column="59">?</op:operator><call><name><name pos:line="2201" pos:column="60">_mainDocTab</name><op:operator pos:line="2201" pos:column="71">.</op:operator><name pos:line="2201" pos:column="72">nbItem</name></name><argument_list pos:line="2201" pos:column="78">()</argument_list></call><op:operator pos:line="2201" pos:column="80">:</op:operator><lit:literal type="number" pos:line="2201" pos:column="81">0</lit:literal></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2202" pos:column="25">nbDoc</name> <op:operator pos:line="2202" pos:column="31">+=</op:operator> <call><name pos:line="2202" pos:column="34">viewVisible</name><argument_list pos:line="2202" pos:column="45">(<argument><expr><name pos:line="2202" pos:column="46">SUB_VIEW</name></expr></argument>)</argument_list></call><op:operator pos:line="2202" pos:column="55">?</op:operator><call><name><name pos:line="2202" pos:column="56">_subDocTab</name><op:operator pos:line="2202" pos:column="66">.</op:operator><name pos:line="2202" pos:column="67">nbItem</name></name><argument_list pos:line="2202" pos:column="73">()</argument_list></call><op:operator pos:line="2202" pos:column="75">:</op:operator><lit:literal type="number" pos:line="2202" pos:column="76">0</lit:literal></expr>;</expr_stmt>
			
			<decl_stmt><decl><type><name pos:line="2204" pos:column="25">bool</name></type> <name pos:line="2204" pos:column="30">doTaskList</name> <init pos:line="2204" pos:column="41">= <expr><op:operator pos:line="2204" pos:column="43">(</op:operator><op:operator pos:line="2204" pos:column="44">(</op:operator><call><name><name pos:line="2204" pos:column="45">NppParameters</name><op:operator pos:line="2204" pos:column="58">::</op:operator><name pos:line="2204" pos:column="60">getInstance</name></name><argument_list pos:line="2204" pos:column="71">()</argument_list></call><op:operator pos:line="2204" pos:column="73">)</op:operator><op:operator pos:line="2204" pos:column="74">-&gt;</op:operator><call><name pos:line="2204" pos:column="76">getNppGUI</name><argument_list pos:line="2204" pos:column="85">()</argument_list></call><op:operator pos:line="2204" pos:column="87">)</op:operator><op:operator pos:line="2204" pos:column="88">.</op:operator><name pos:line="2204" pos:column="89">_doTaskList</name></expr></init></decl>;</decl_stmt>
			<if pos:line="2205" pos:column="25">if <condition pos:line="2205" pos:column="28">(<expr><name pos:line="2205" pos:column="29">nbDoc</name> <op:operator pos:line="2205" pos:column="35">&gt;</op:operator> <lit:literal type="number" pos:line="2205" pos:column="37">1</lit:literal></expr>)</condition><then pos:line="2205" pos:column="39">
			<block pos:line="2206" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2207" pos:column="33">bool</name></type> <name pos:line="2207" pos:column="38">direction</name> <init pos:line="2207" pos:column="48">= <expr><op:operator pos:line="2207" pos:column="50">(</op:operator><name pos:line="2207" pos:column="51">id</name> <op:operator pos:line="2207" pos:column="54">==</op:operator> <name pos:line="2207" pos:column="57">IDC_NEXT_DOC</name><op:operator pos:line="2207" pos:column="69">)</op:operator><op:operator pos:line="2207" pos:column="70">?</op:operator><name pos:line="2207" pos:column="71">dirDown</name><op:operator pos:line="2207" pos:column="78">:</op:operator><name pos:line="2207" pos:column="79">dirUp</name></expr></init></decl>;</decl_stmt>

				<if pos:line="2209" pos:column="33">if <condition pos:line="2209" pos:column="36">(<expr><op:operator pos:line="2209" pos:column="37">!</op:operator><name pos:line="2209" pos:column="38">doTaskList</name></expr>)</condition><then pos:line="2209" pos:column="49">
				<block pos:line="2210" pos:column="33">{
					<expr_stmt><expr><call><name pos:line="2211" pos:column="41">activateNextDoc</name><argument_list pos:line="2211" pos:column="56">(<argument><expr><name pos:line="2211" pos:column="57">direction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then>
				<else pos:line="2213" pos:column="33">else
				<block pos:line="2214" pos:column="33">{		
					<decl_stmt><decl><type><name pos:line="2215" pos:column="41">TaskListDlg</name></type> <name pos:line="2215" pos:column="53">tld</name></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="2216" pos:column="41">HIMAGELIST</name></type> <name pos:line="2216" pos:column="52">hImgLst</name> <init pos:line="2216" pos:column="60">= <expr><call><name><name pos:line="2216" pos:column="62">_docTabIconList</name><op:operator pos:line="2216" pos:column="77">.</op:operator><name pos:line="2216" pos:column="78">getHandle</name></name><argument_list pos:line="2216" pos:column="87">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="2217" pos:column="41">tld</name><op:operator pos:line="2217" pos:column="44">.</op:operator><name pos:line="2217" pos:column="45">init</name></name><argument_list pos:line="2217" pos:column="49">(<argument><expr><call><name><name pos:line="2217" pos:column="50">_pPublicInterface</name><op:operator pos:line="2217" pos:column="67">-&gt;</op:operator><name pos:line="2217" pos:column="69">getHinst</name></name><argument_list pos:line="2217" pos:column="77">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2217" pos:column="81">_pPublicInterface</name><op:operator pos:line="2217" pos:column="98">-&gt;</op:operator><name pos:line="2217" pos:column="100">getHSelf</name></name><argument_list pos:line="2217" pos:column="108">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2217" pos:column="112">hImgLst</name></expr></argument>, <argument><expr><name pos:line="2217" pos:column="121">direction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="2218" pos:column="41">tld</name><op:operator pos:line="2218" pos:column="44">.</op:operator><name pos:line="2218" pos:column="45">doDialog</name></name><argument_list pos:line="2218" pos:column="53">()</argument_list></call></expr>;</expr_stmt>
				}</block></else></if>
			}</block></then></if>
			<expr_stmt><expr><name pos:line="2221" pos:column="25">_linkTriggered</name> <op:operator pos:line="2221" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="2221" pos:column="42">true</lit:literal></expr>;</expr_stmt>
		}</block>
        <break pos:line="2223" pos:column="9">break;</break>

		</case><case pos:line="2225" pos:column="17">case <expr><name pos:line="2225" pos:column="22">IDM_OPEN_ALL_RECENT_FILE</name></expr> : <block pos:line="2225" pos:column="49">{
			<decl_stmt><decl><type><name pos:line="2226" pos:column="25">BufferID</name></type> <name pos:line="2226" pos:column="34">lastOne</name> <init pos:line="2226" pos:column="42">= <expr><name pos:line="2226" pos:column="44">BUFFER_INVALID</name></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2227" pos:column="25">int</name></type> <name pos:line="2227" pos:column="29">size</name> <init pos:line="2227" pos:column="34">= <expr><call><name><name pos:line="2227" pos:column="36">_lastRecentFileList</name><op:operator pos:line="2227" pos:column="55">.</op:operator><name pos:line="2227" pos:column="56">getSize</name></name><argument_list pos:line="2227" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<for pos:line="2228" pos:column="25">for (<init><decl><type><name pos:line="2228" pos:column="30">int</name></type> <name pos:line="2228" pos:column="34">i</name> <init pos:line="2228" pos:column="36">= <expr><name pos:line="2228" pos:column="38">size</name> <op:operator pos:line="2228" pos:column="43">-</op:operator> <lit:literal type="number" pos:line="2228" pos:column="45">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="2228" pos:column="48">i</name> <op:operator pos:line="2228" pos:column="50">&gt;=</op:operator> <lit:literal type="number" pos:line="2228" pos:column="53">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="2228" pos:column="56">i</name><op:operator pos:line="2228" pos:column="57">--</op:operator></expr></incr>)
			<block pos:line="2229" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2230" pos:column="33">BufferID</name></type> <name pos:line="2230" pos:column="42">test</name> <init pos:line="2230" pos:column="47">= <expr><call><name pos:line="2230" pos:column="49">doOpen</name><argument_list pos:line="2230" pos:column="55">(<argument><expr><call><name><name pos:line="2230" pos:column="56">_lastRecentFileList</name><op:operator pos:line="2230" pos:column="75">.</op:operator><name pos:line="2230" pos:column="76">getIndex</name></name><argument_list pos:line="2230" pos:column="84">(<argument><expr><name pos:line="2230" pos:column="85">i</name></expr></argument>)</argument_list></call><op:operator pos:line="2230" pos:column="87">.</op:operator><call><name pos:line="2230" pos:column="88">c_str</name><argument_list pos:line="2230" pos:column="93">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="2231" pos:column="33">if <condition pos:line="2231" pos:column="36">(<expr><name pos:line="2231" pos:column="37">test</name> <op:operator pos:line="2231" pos:column="42">!=</op:operator> <name pos:line="2231" pos:column="45">BUFFER_INVALID</name></expr>)</condition><then pos:line="2231" pos:column="60">
					<expr_stmt><expr><name pos:line="2232" pos:column="41">lastOne</name> <op:operator pos:line="2232" pos:column="49">=</op:operator> <name pos:line="2232" pos:column="51">test</name></expr>;</expr_stmt></then></if>
			}</block></for>
			<if pos:line="2234" pos:column="25">if <condition pos:line="2234" pos:column="28">(<expr><name pos:line="2234" pos:column="29">lastOne</name> <op:operator pos:line="2234" pos:column="37">!=</op:operator> <name pos:line="2234" pos:column="40">BUFFER_INVALID</name></expr>)</condition><then pos:line="2234" pos:column="55"> <block pos:line="2234" pos:column="56">{
				<expr_stmt><expr><call><name pos:line="2235" pos:column="33">switchToFile</name><argument_list pos:line="2235" pos:column="45">(<argument><expr><name pos:line="2235" pos:column="46">lastOne</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
			<break pos:line="2237" pos:column="25">break;</break> }</block>

		</case><case pos:line="2239" pos:column="17">case <expr><name pos:line="2239" pos:column="22">IDM_CLEAN_RECENT_FILE_LIST</name></expr> :
			<expr_stmt><expr><call><name><name pos:line="2240" pos:column="25">_lastRecentFileList</name><op:operator pos:line="2240" pos:column="44">.</op:operator><name pos:line="2240" pos:column="45">clear</name></name><argument_list pos:line="2240" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
			<break pos:line="2241" pos:column="25">break;</break>

		</case><case pos:line="2243" pos:column="17">case <expr><name pos:line="2243" pos:column="22">IDM_EDIT_RTL</name></expr> :
		</case><case pos:line="2244" pos:column="17">case <expr><name pos:line="2244" pos:column="22">IDM_EDIT_LTR</name></expr> :
		<block pos:line="2245" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2246" pos:column="25">long</name></type> <name pos:line="2246" pos:column="30">exStyle</name> <init pos:line="2246" pos:column="38">= <expr><call><name><op:operator pos:line="2246" pos:column="40">::</op:operator><name pos:line="2246" pos:column="42">GetWindowLongPtr</name></name><argument_list pos:line="2246" pos:column="58">(<argument><expr><call><name><name pos:line="2246" pos:column="59">_pEditView</name><op:operator pos:line="2246" pos:column="69">-&gt;</op:operator><name pos:line="2246" pos:column="71">getHSelf</name></name><argument_list pos:line="2246" pos:column="79">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2246" pos:column="83">GWL_EXSTYLE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="2247" pos:column="25">exStyle</name> <op:operator pos:line="2247" pos:column="33">=</op:operator> <op:operator pos:line="2247" pos:column="35">(</op:operator><name pos:line="2247" pos:column="36">id</name> <op:operator pos:line="2247" pos:column="39">==</op:operator> <name pos:line="2247" pos:column="42">IDM_EDIT_RTL</name><op:operator pos:line="2247" pos:column="54">)</op:operator><op:operator pos:line="2247" pos:column="55">?</op:operator><name pos:line="2247" pos:column="56">exStyle</name><op:operator pos:line="2247" pos:column="63">|</op:operator><name pos:line="2247" pos:column="64">WS_EX_LAYOUTRTL</name><op:operator pos:line="2247" pos:column="79">:</op:operator><name pos:line="2247" pos:column="80">exStyle</name><op:operator pos:line="2247" pos:column="87">&amp;</op:operator><op:operator pos:line="2247" pos:column="88">(</op:operator><op:operator pos:line="2247" pos:column="89">~</op:operator><name pos:line="2247" pos:column="90">WS_EX_LAYOUTRTL</name><op:operator pos:line="2247" pos:column="105">)</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2248" pos:column="25">::</op:operator><name pos:line="2248" pos:column="27">SetWindowLongPtr</name></name><argument_list pos:line="2248" pos:column="43">(<argument><expr><call><name><name pos:line="2248" pos:column="44">_pEditView</name><op:operator pos:line="2248" pos:column="54">-&gt;</op:operator><name pos:line="2248" pos:column="56">getHSelf</name></name><argument_list pos:line="2248" pos:column="64">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2248" pos:column="68">GWL_EXSTYLE</name></expr></argument>, <argument><expr><name pos:line="2248" pos:column="81">exStyle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2249" pos:column="25">_pEditView</name><op:operator pos:line="2249" pos:column="35">-&gt;</op:operator><name pos:line="2249" pos:column="37">redraw</name></name><argument_list pos:line="2249" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="2251" pos:column="17">break;</break>

		</case><case pos:line="2253" pos:column="17">case <expr><name pos:line="2253" pos:column="22">IDM_WINDOW_WINDOWS</name></expr> :
		<block pos:line="2254" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2255" pos:column="25">WindowsDlg</name></type> <name pos:line="2255" pos:column="36">_windowsDlg</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="2256" pos:column="25">_windowsDlg</name><op:operator pos:line="2256" pos:column="36">.</op:operator><name pos:line="2256" pos:column="37">init</name></name><argument_list pos:line="2256" pos:column="41">(<argument><expr><call><name><name pos:line="2256" pos:column="42">_pPublicInterface</name><op:operator pos:line="2256" pos:column="59">-&gt;</op:operator><name pos:line="2256" pos:column="61">getHinst</name></name><argument_list pos:line="2256" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="2256" pos:column="73">_pPublicInterface</name><op:operator pos:line="2256" pos:column="90">-&gt;</op:operator><name pos:line="2256" pos:column="92">getHSelf</name></name><argument_list pos:line="2256" pos:column="100">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2256" pos:column="104">_pDocTab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			
            <decl_stmt><decl><type><specifier pos:line="2258" pos:column="13">const</specifier> <name pos:line="2258" pos:column="19">TiXmlNodeA</name> <type:modifier pos:line="2258" pos:column="30">*</type:modifier></type><name pos:line="2258" pos:column="31">nativeLangA</name> <init pos:line="2258" pos:column="43">= <expr><call><name><name pos:line="2258" pos:column="45">_nativeLangSpeaker</name><op:operator pos:line="2258" pos:column="63">.</op:operator><name pos:line="2258" pos:column="64">getNativeLangA</name></name><argument_list pos:line="2258" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2259" pos:column="25">TiXmlNodeA</name> <type:modifier pos:line="2259" pos:column="36">*</type:modifier></type><name pos:line="2259" pos:column="37">dlgNode</name> <init pos:line="2259" pos:column="45">= <expr><name pos:line="2259" pos:column="47">NULL</name></expr></init></decl>;</decl_stmt>
			<if pos:line="2260" pos:column="25">if <condition pos:line="2260" pos:column="28">(<expr><name pos:line="2260" pos:column="29">nativeLangA</name></expr>)</condition><then pos:line="2260" pos:column="41">
			<block pos:line="2261" pos:column="25">{
				<expr_stmt><expr><name pos:line="2262" pos:column="33">dlgNode</name> <op:operator pos:line="2262" pos:column="41">=</op:operator> <call><name><name pos:line="2262" pos:column="43">nativeLangA</name><op:operator pos:line="2262" pos:column="54">-&gt;</op:operator><name pos:line="2262" pos:column="56">FirstChild</name></name><argument_list pos:line="2262" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="2262" pos:column="67">"Dialog"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="2263" pos:column="33">if <condition pos:line="2263" pos:column="36">(<expr><name pos:line="2263" pos:column="37">dlgNode</name></expr>)</condition><then pos:line="2263" pos:column="45">
					<expr_stmt><expr><name pos:line="2264" pos:column="41">dlgNode</name> <op:operator pos:line="2264" pos:column="49">=</op:operator> <call><name><name pos:line="2264" pos:column="51">_nativeLangSpeaker</name><op:operator pos:line="2264" pos:column="69">.</op:operator><name pos:line="2264" pos:column="70">searchDlgNode</name></name><argument_list pos:line="2264" pos:column="83">(<argument><expr><name pos:line="2264" pos:column="84">dlgNode</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="2264" pos:column="93">"Window"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></then></if>
			<expr_stmt><expr><call><name><name pos:line="2266" pos:column="25">_windowsDlg</name><op:operator pos:line="2266" pos:column="36">.</op:operator><name pos:line="2266" pos:column="37">doDialog</name></name><argument_list pos:line="2266" pos:column="45">(<argument><expr><name pos:line="2266" pos:column="46">dlgNode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="2268" pos:column="17">break;</break>


		</case><case pos:line="2271" pos:column="17">case <expr><name pos:line="2271" pos:column="22">IDM_SYSTRAYPOPUP_NEWDOC</name></expr>:
		<block pos:line="2272" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2273" pos:column="25">NppGUI</name> <type:modifier pos:line="2273" pos:column="32">&amp;</type:modifier></type> <name pos:line="2273" pos:column="34">nppGUI</name> <init pos:line="2273" pos:column="41">= <expr><op:operator pos:line="2273" pos:column="43">(</op:operator><name pos:line="2273" pos:column="44">NppGUI</name> <op:operator pos:line="2273" pos:column="51">&amp;</op:operator><op:operator pos:line="2273" pos:column="52">)</op:operator><op:operator pos:line="2273" pos:column="53">(</op:operator><op:operator pos:line="2273" pos:column="54">(</op:operator><call><name><name pos:line="2273" pos:column="55">NppParameters</name><op:operator pos:line="2273" pos:column="68">::</op:operator><name pos:line="2273" pos:column="70">getInstance</name></name><argument_list pos:line="2273" pos:column="81">()</argument_list></call><op:operator pos:line="2273" pos:column="83">)</op:operator><op:operator pos:line="2273" pos:column="84">-&gt;</op:operator><call><name pos:line="2273" pos:column="86">getNppGUI</name><argument_list pos:line="2273" pos:column="95">()</argument_list></call><op:operator pos:line="2273" pos:column="97">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2274" pos:column="25">::</op:operator><name pos:line="2274" pos:column="27">ShowWindow</name></name><argument_list pos:line="2274" pos:column="37">(<argument><expr><call><name><name pos:line="2274" pos:column="38">_pPublicInterface</name><op:operator pos:line="2274" pos:column="55">-&gt;</op:operator><name pos:line="2274" pos:column="57">getHSelf</name></name><argument_list pos:line="2274" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2274" pos:column="69">nppGUI</name><op:operator pos:line="2274" pos:column="75">.</op:operator><name pos:line="2274" pos:column="76">_isMaximized</name></name><op:operator pos:line="2274" pos:column="88">?</op:operator><name pos:line="2274" pos:column="89">SW_MAXIMIZE</name><op:operator pos:line="2274" pos:column="100">:</op:operator><name pos:line="2274" pos:column="101">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2275" pos:column="25">fileNew</name><argument_list pos:line="2275" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="2277" pos:column="17">break;</break>

		</case><case pos:line="2279" pos:column="17">case <expr><name pos:line="2279" pos:column="22">IDM_SYSTRAYPOPUP_ACTIVATE</name></expr> :
		<block pos:line="2280" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2281" pos:column="25">NppGUI</name> <type:modifier pos:line="2281" pos:column="32">&amp;</type:modifier></type> <name pos:line="2281" pos:column="34">nppGUI</name> <init pos:line="2281" pos:column="41">= <expr><op:operator pos:line="2281" pos:column="43">(</op:operator><name pos:line="2281" pos:column="44">NppGUI</name> <op:operator pos:line="2281" pos:column="51">&amp;</op:operator><op:operator pos:line="2281" pos:column="52">)</op:operator><op:operator pos:line="2281" pos:column="53">(</op:operator><op:operator pos:line="2281" pos:column="54">(</op:operator><call><name><name pos:line="2281" pos:column="55">NppParameters</name><op:operator pos:line="2281" pos:column="68">::</op:operator><name pos:line="2281" pos:column="70">getInstance</name></name><argument_list pos:line="2281" pos:column="81">()</argument_list></call><op:operator pos:line="2281" pos:column="83">)</op:operator><op:operator pos:line="2281" pos:column="84">-&gt;</op:operator><call><name pos:line="2281" pos:column="86">getNppGUI</name><argument_list pos:line="2281" pos:column="95">()</argument_list></call><op:operator pos:line="2281" pos:column="97">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2282" pos:column="25">::</op:operator><name pos:line="2282" pos:column="27">ShowWindow</name></name><argument_list pos:line="2282" pos:column="37">(<argument><expr><call><name><name pos:line="2282" pos:column="38">_pPublicInterface</name><op:operator pos:line="2282" pos:column="55">-&gt;</op:operator><name pos:line="2282" pos:column="57">getHSelf</name></name><argument_list pos:line="2282" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2282" pos:column="69">nppGUI</name><op:operator pos:line="2282" pos:column="75">.</op:operator><name pos:line="2282" pos:column="76">_isMaximized</name></name><op:operator pos:line="2282" pos:column="88">?</op:operator><name pos:line="2282" pos:column="89">SW_MAXIMIZE</name><op:operator pos:line="2282" pos:column="100">:</op:operator><name pos:line="2282" pos:column="101">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="2284" pos:column="17">break;</break>

		</case><case pos:line="2286" pos:column="17">case <expr><name pos:line="2286" pos:column="22">IDM_SYSTRAYPOPUP_NEW_AND_PASTE</name></expr>:
		<block pos:line="2287" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2288" pos:column="25">NppGUI</name> <type:modifier pos:line="2288" pos:column="32">&amp;</type:modifier></type> <name pos:line="2288" pos:column="34">nppGUI</name> <init pos:line="2288" pos:column="41">= <expr><op:operator pos:line="2288" pos:column="43">(</op:operator><name pos:line="2288" pos:column="44">NppGUI</name> <op:operator pos:line="2288" pos:column="51">&amp;</op:operator><op:operator pos:line="2288" pos:column="52">)</op:operator><op:operator pos:line="2288" pos:column="53">(</op:operator><op:operator pos:line="2288" pos:column="54">(</op:operator><call><name><name pos:line="2288" pos:column="55">NppParameters</name><op:operator pos:line="2288" pos:column="68">::</op:operator><name pos:line="2288" pos:column="70">getInstance</name></name><argument_list pos:line="2288" pos:column="81">()</argument_list></call><op:operator pos:line="2288" pos:column="83">)</op:operator><op:operator pos:line="2288" pos:column="84">-&gt;</op:operator><call><name pos:line="2288" pos:column="86">getNppGUI</name><argument_list pos:line="2288" pos:column="95">()</argument_list></call><op:operator pos:line="2288" pos:column="97">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2289" pos:column="25">::</op:operator><name pos:line="2289" pos:column="27">ShowWindow</name></name><argument_list pos:line="2289" pos:column="37">(<argument><expr><call><name><name pos:line="2289" pos:column="38">_pPublicInterface</name><op:operator pos:line="2289" pos:column="55">-&gt;</op:operator><name pos:line="2289" pos:column="57">getHSelf</name></name><argument_list pos:line="2289" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2289" pos:column="69">nppGUI</name><op:operator pos:line="2289" pos:column="75">.</op:operator><name pos:line="2289" pos:column="76">_isMaximized</name></name><op:operator pos:line="2289" pos:column="88">?</op:operator><name pos:line="2289" pos:column="89">SW_MAXIMIZE</name><op:operator pos:line="2289" pos:column="100">:</op:operator><name pos:line="2289" pos:column="101">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="2290" pos:column="25">BufferID</name></type> <name pos:line="2290" pos:column="34">bufferID</name> <init pos:line="2290" pos:column="43">= <expr><call><name><name pos:line="2290" pos:column="45">_pEditView</name><op:operator pos:line="2290" pos:column="55">-&gt;</op:operator><name pos:line="2290" pos:column="57">getCurrentBufferID</name></name><argument_list pos:line="2290" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="2291" pos:column="25">Buffer</name> <type:modifier pos:line="2291" pos:column="32">*</type:modifier></type> <name pos:line="2291" pos:column="34">buf</name> <init pos:line="2291" pos:column="38">= <expr><call><name><name pos:line="2291" pos:column="40">MainFileManager</name><op:operator pos:line="2291" pos:column="55">-&gt;</op:operator><name pos:line="2291" pos:column="57">getBufferByID</name></name><argument_list pos:line="2291" pos:column="70">(<argument><expr><name pos:line="2291" pos:column="71">bufferID</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="2292" pos:column="25">if <condition pos:line="2292" pos:column="28">(<expr><op:operator pos:line="2292" pos:column="29">!</op:operator><call><name><name pos:line="2292" pos:column="30">buf</name><op:operator pos:line="2292" pos:column="33">-&gt;</op:operator><name pos:line="2292" pos:column="35">isUntitled</name></name><argument_list pos:line="2292" pos:column="45">()</argument_list></call> <op:operator pos:line="2292" pos:column="48">||</op:operator> <call><name><name pos:line="2292" pos:column="51">buf</name><op:operator pos:line="2292" pos:column="54">-&gt;</op:operator><name pos:line="2292" pos:column="56">docLength</name></name><argument_list pos:line="2292" pos:column="65">()</argument_list></call> <op:operator pos:line="2292" pos:column="68">!=</op:operator> <lit:literal type="number" pos:line="2292" pos:column="71">0</lit:literal></expr>)</condition><then pos:line="2292" pos:column="73">
			<block pos:line="2293" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="2294" pos:column="33">fileNew</name><argument_list pos:line="2294" pos:column="40">()</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>	
			<expr_stmt><expr><call><name pos:line="2296" pos:column="25">command</name><argument_list pos:line="2296" pos:column="32">(<argument><expr><name pos:line="2296" pos:column="33">IDM_EDIT_PASTE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="2298" pos:column="17">break;</break>
		
		</case><case pos:line="2300" pos:column="17">case <expr><name pos:line="2300" pos:column="22">IDM_SYSTRAYPOPUP_OPENFILE</name></expr>:
		<block pos:line="2301" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="2302" pos:column="25">NppGUI</name> <type:modifier pos:line="2302" pos:column="32">&amp;</type:modifier></type> <name pos:line="2302" pos:column="34">nppGUI</name> <init pos:line="2302" pos:column="41">= <expr><op:operator pos:line="2302" pos:column="43">(</op:operator><name pos:line="2302" pos:column="44">NppGUI</name> <op:operator pos:line="2302" pos:column="51">&amp;</op:operator><op:operator pos:line="2302" pos:column="52">)</op:operator><op:operator pos:line="2302" pos:column="53">(</op:operator><op:operator pos:line="2302" pos:column="54">(</op:operator><call><name><name pos:line="2302" pos:column="55">NppParameters</name><op:operator pos:line="2302" pos:column="68">::</op:operator><name pos:line="2302" pos:column="70">getInstance</name></name><argument_list pos:line="2302" pos:column="81">()</argument_list></call><op:operator pos:line="2302" pos:column="83">)</op:operator><op:operator pos:line="2302" pos:column="84">-&gt;</op:operator><call><name pos:line="2302" pos:column="86">getNppGUI</name><argument_list pos:line="2302" pos:column="95">()</argument_list></call><op:operator pos:line="2302" pos:column="97">)</op:operator></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="2303" pos:column="25">::</op:operator><name pos:line="2303" pos:column="27">ShowWindow</name></name><argument_list pos:line="2303" pos:column="37">(<argument><expr><call><name><name pos:line="2303" pos:column="38">_pPublicInterface</name><op:operator pos:line="2303" pos:column="55">-&gt;</op:operator><name pos:line="2303" pos:column="57">getHSelf</name></name><argument_list pos:line="2303" pos:column="65">()</argument_list></call></expr></argument>, <argument><expr><name><name pos:line="2303" pos:column="69">nppGUI</name><op:operator pos:line="2303" pos:column="75">.</op:operator><name pos:line="2303" pos:column="76">_isMaximized</name></name><op:operator pos:line="2303" pos:column="88">?</op:operator><name pos:line="2303" pos:column="89">SW_MAXIMIZE</name><op:operator pos:line="2303" pos:column="100">:</op:operator><name pos:line="2303" pos:column="101">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="2304" pos:column="25">fileOpen</name><argument_list pos:line="2304" pos:column="33">()</argument_list></call></expr>;</expr_stmt>
		}</block>
		<break pos:line="2306" pos:column="17">break;</break>

		</case><case pos:line="2308" pos:column="17">case <expr><name pos:line="2308" pos:column="22">IDM_SYSTRAYPOPUP_CLOSE</name></expr>:
		<block pos:line="2309" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="2310" pos:column="25">_pPublicInterface</name><op:operator pos:line="2310" pos:column="42">-&gt;</op:operator><name pos:line="2310" pos:column="44">setIsPrelaunch</name></name><argument_list pos:line="2310" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="2310" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="2311" pos:column="25">_pTrayIco</name><op:operator pos:line="2311" pos:column="34">-&gt;</op:operator><name pos:line="2311" pos:column="36">doTrayIcon</name></name><argument_list pos:line="2311" pos:column="46">(<argument><expr><name pos:line="2311" pos:column="47">REMOVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="2312" pos:column="25">if <condition pos:line="2312" pos:column="28">(<expr><op:operator pos:line="2312" pos:column="29">!</op:operator><call><name><op:operator pos:line="2312" pos:column="30">::</op:operator><name pos:line="2312" pos:column="32">IsWindowVisible</name></name><argument_list pos:line="2312" pos:column="47">(<argument><expr><call><name><name pos:line="2312" pos:column="48">_pPublicInterface</name><op:operator pos:line="2312" pos:column="65">-&gt;</op:operator><name pos:line="2312" pos:column="67">getHSelf</name></name><argument_list pos:line="2312" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2312" pos:column="79">
				<expr_stmt><expr><call><name><op:operator pos:line="2313" pos:column="33">::</op:operator><name pos:line="2313" pos:column="35">SendMessage</name></name><argument_list pos:line="2313" pos:column="46">(<argument><expr><call><name><name pos:line="2313" pos:column="47">_pPublicInterface</name><op:operator pos:line="2313" pos:column="64">-&gt;</op:operator><name pos:line="2313" pos:column="66">getHSelf</name></name><argument_list pos:line="2313" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="2313" pos:column="78">WM_CLOSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2313" pos:column="88">0</lit:literal></expr></argument>,<argument><expr><lit:literal type="number" pos:line="2313" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block>
		<break pos:line="2315" pos:column="17">break;</break>

		</case><default pos:line="2317" pos:column="17">default :
			<if pos:line="2318" pos:column="25">if <condition pos:line="2318" pos:column="28">(<expr><name pos:line="2318" pos:column="29">id</name> <op:operator pos:line="2318" pos:column="32">&gt;</op:operator> <name pos:line="2318" pos:column="34">IDM_FILEMENU_LASTONE</name> <op:operator pos:line="2318" pos:column="55">&amp;&amp;</op:operator> <name pos:line="2318" pos:column="58">id</name> <op:operator pos:line="2318" pos:column="61">&lt;</op:operator> <op:operator pos:line="2318" pos:column="63">(</op:operator><name pos:line="2318" pos:column="64">IDM_FILEMENU_LASTONE</name> <op:operator pos:line="2318" pos:column="85">+</op:operator> <call><name><name pos:line="2318" pos:column="87">_lastRecentFileList</name><op:operator pos:line="2318" pos:column="106">.</op:operator><name pos:line="2318" pos:column="107">getMaxNbLRF</name></name><argument_list pos:line="2318" pos:column="118">()</argument_list></call> <op:operator pos:line="2318" pos:column="121">+</op:operator> <lit:literal type="number" pos:line="2318" pos:column="123">1</lit:literal><op:operator pos:line="2318" pos:column="124">)</op:operator></expr>)</condition><then pos:line="2318" pos:column="126">
			<block pos:line="2319" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2320" pos:column="33">BufferID</name></type> <name pos:line="2320" pos:column="42">lastOpened</name> <init pos:line="2320" pos:column="53">= <expr><call><name pos:line="2320" pos:column="55">doOpen</name><argument_list pos:line="2320" pos:column="61">(<argument><expr><call><name><name pos:line="2320" pos:column="62">_lastRecentFileList</name><op:operator pos:line="2320" pos:column="81">.</op:operator><name pos:line="2320" pos:column="82">getItem</name></name><argument_list pos:line="2320" pos:column="89">(<argument><expr><name pos:line="2320" pos:column="90">id</name></expr></argument>)</argument_list></call><op:operator pos:line="2320" pos:column="93">.</op:operator><call><name pos:line="2320" pos:column="94">c_str</name><argument_list pos:line="2320" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="2321" pos:column="33">if <condition pos:line="2321" pos:column="36">(<expr><name pos:line="2321" pos:column="37">lastOpened</name> <op:operator pos:line="2321" pos:column="48">!=</op:operator> <name pos:line="2321" pos:column="51">BUFFER_INVALID</name></expr>)</condition><then pos:line="2321" pos:column="66"> <block pos:line="2321" pos:column="67">{
					<expr_stmt><expr><call><name pos:line="2322" pos:column="41">switchToFile</name><argument_list pos:line="2322" pos:column="53">(<argument><expr><name pos:line="2322" pos:column="54">lastOpened</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then>
			<else pos:line="2325" pos:column="25">else <if pos:line="2325" pos:column="30">if <condition pos:line="2325" pos:column="33">(<expr><op:operator pos:line="2325" pos:column="34">(</op:operator><name pos:line="2325" pos:column="35">id</name> <op:operator pos:line="2325" pos:column="38">&gt;</op:operator> <name pos:line="2325" pos:column="40">IDM_LANG_USER</name><op:operator pos:line="2325" pos:column="53">)</op:operator> <op:operator pos:line="2325" pos:column="55">&amp;&amp;</op:operator> <op:operator pos:line="2325" pos:column="58">(</op:operator><name pos:line="2325" pos:column="59">id</name> <op:operator pos:line="2325" pos:column="62">&lt;</op:operator> <name pos:line="2325" pos:column="64">IDM_LANG_USER_LIMIT</name><op:operator pos:line="2325" pos:column="83">)</op:operator></expr>)</condition><then pos:line="2325" pos:column="85">
			<block pos:line="2326" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2327" pos:column="33">TCHAR</name></type> <name><name pos:line="2327" pos:column="39">langName</name><index pos:line="2327" pos:column="47">[<expr><name pos:line="2327" pos:column="48">langNameLenMax</name></expr>]</index></name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="2328" pos:column="33">::</op:operator><name pos:line="2328" pos:column="35">GetMenuString</name></name><argument_list pos:line="2328" pos:column="48">(<argument><expr><name pos:line="2328" pos:column="49">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="2328" pos:column="66">id</name></expr></argument>, <argument><expr><name pos:line="2328" pos:column="70">langName</name></expr></argument>, <argument><expr><name pos:line="2328" pos:column="80">langNameLenMax</name></expr></argument>, <argument><expr><name pos:line="2328" pos:column="96">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="2329" pos:column="33">_pEditView</name><op:operator pos:line="2329" pos:column="43">-&gt;</op:operator><name pos:line="2329" pos:column="45">getCurrentBuffer</name></name><argument_list pos:line="2329" pos:column="61">()</argument_list></call><op:operator pos:line="2329" pos:column="63">-&gt;</op:operator><call><name pos:line="2329" pos:column="65">setLangType</name><argument_list pos:line="2329" pos:column="76">(<argument><expr><name pos:line="2329" pos:column="77">L_USER</name></expr></argument>, <argument><expr><name pos:line="2329" pos:column="85">langName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="2331" pos:column="25">else <if pos:line="2331" pos:column="30">if <condition pos:line="2331" pos:column="33">(<expr><op:operator pos:line="2331" pos:column="34">(</op:operator><name pos:line="2331" pos:column="35">id</name> <op:operator pos:line="2331" pos:column="38">&gt;=</op:operator> <name pos:line="2331" pos:column="41">IDM_LANG_EXTERNAL</name><op:operator pos:line="2331" pos:column="58">)</op:operator> <op:operator pos:line="2331" pos:column="60">&amp;&amp;</op:operator> <op:operator pos:line="2331" pos:column="63">(</op:operator><name pos:line="2331" pos:column="64">id</name> <op:operator pos:line="2331" pos:column="67">&lt;=</op:operator> <name pos:line="2331" pos:column="70">IDM_LANG_EXTERNAL_LIMIT</name><op:operator pos:line="2331" pos:column="93">)</op:operator></expr>)</condition><then pos:line="2331" pos:column="95">
			<block pos:line="2332" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="2333" pos:column="33">setLanguage</name><argument_list pos:line="2333" pos:column="44">(<argument><expr><call pos:line="2333" pos:column="45">(<name pos:line="2333" pos:column="46">LangType</name>)<argument_list pos:line="2333" pos:column="55">(<argument><expr><name pos:line="2333" pos:column="56">id</name> <op:operator pos:line="2333" pos:column="59">-</op:operator> <name pos:line="2333" pos:column="61">IDM_LANG_EXTERNAL</name> <op:operator pos:line="2333" pos:column="79">+</op:operator> <name pos:line="2333" pos:column="81">L_EXTERNAL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="2335" pos:column="25">else <if pos:line="2335" pos:column="30">if <condition pos:line="2335" pos:column="33">(<expr><op:operator pos:line="2335" pos:column="34">(</op:operator><name pos:line="2335" pos:column="35">id</name> <op:operator pos:line="2335" pos:column="38">&gt;=</op:operator> <name pos:line="2335" pos:column="41">ID_MACRO</name><op:operator pos:line="2335" pos:column="49">)</op:operator> <op:operator pos:line="2335" pos:column="51">&amp;&amp;</op:operator> <op:operator pos:line="2335" pos:column="54">(</op:operator><name pos:line="2335" pos:column="55">id</name> <op:operator pos:line="2335" pos:column="58">&lt;</op:operator> <name pos:line="2335" pos:column="60">ID_MACRO_LIMIT</name><op:operator pos:line="2335" pos:column="74">)</op:operator></expr>)</condition><then pos:line="2335" pos:column="76">
			<block pos:line="2336" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2337" pos:column="33">int</name></type> <name pos:line="2337" pos:column="37">i</name> <init pos:line="2337" pos:column="39">= <expr><name pos:line="2337" pos:column="41">id</name> <op:operator pos:line="2337" pos:column="44">-</op:operator> <name pos:line="2337" pos:column="46">ID_MACRO</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="2338" pos:column="33">vector</name><argument_list pos:line="2338" pos:column="39">&lt;<argument><expr><name pos:line="2338" pos:column="40">MacroShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="2338" pos:column="55">&amp;</type:modifier></type> <name pos:line="2338" pos:column="57">theMacros</name> <init pos:line="2338" pos:column="67">= <expr><op:operator pos:line="2338" pos:column="69">(</op:operator><call><name><name pos:line="2338" pos:column="70">NppParameters</name><op:operator pos:line="2338" pos:column="83">::</op:operator><name pos:line="2338" pos:column="85">getInstance</name></name><argument_list pos:line="2338" pos:column="96">()</argument_list></call><op:operator pos:line="2338" pos:column="98">)</op:operator><op:operator pos:line="2338" pos:column="99">-&gt;</op:operator><call><name pos:line="2338" pos:column="101">getMacroList</name><argument_list pos:line="2338" pos:column="113">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name pos:line="2339" pos:column="33">macroPlayback</name><argument_list pos:line="2339" pos:column="46">(<argument><expr><name><name pos:line="2339" pos:column="47">theMacros</name><index pos:line="2339" pos:column="56">[<expr><name pos:line="2339" pos:column="57">i</name></expr>]</index></name><op:operator pos:line="2339" pos:column="59">.</op:operator><call><name pos:line="2339" pos:column="60">getMacro</name><argument_list pos:line="2339" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
			}</block></then>
			<else pos:line="2341" pos:column="25">else <if pos:line="2341" pos:column="30">if <condition pos:line="2341" pos:column="33">(<expr><op:operator pos:line="2341" pos:column="34">(</op:operator><name pos:line="2341" pos:column="35">id</name> <op:operator pos:line="2341" pos:column="38">&gt;=</op:operator> <name pos:line="2341" pos:column="41">ID_USER_CMD</name><op:operator pos:line="2341" pos:column="52">)</op:operator> <op:operator pos:line="2341" pos:column="54">&amp;&amp;</op:operator> <op:operator pos:line="2341" pos:column="57">(</op:operator><name pos:line="2341" pos:column="58">id</name> <op:operator pos:line="2341" pos:column="61">&lt;</op:operator> <name pos:line="2341" pos:column="63">ID_USER_CMD_LIMIT</name><op:operator pos:line="2341" pos:column="80">)</op:operator></expr>)</condition><then pos:line="2341" pos:column="82">
			<block pos:line="2342" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2343" pos:column="33">int</name></type> <name pos:line="2343" pos:column="37">i</name> <init pos:line="2343" pos:column="39">= <expr><name pos:line="2343" pos:column="41">id</name> <op:operator pos:line="2343" pos:column="44">-</op:operator> <name pos:line="2343" pos:column="46">ID_USER_CMD</name></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name><name pos:line="2344" pos:column="33">vector</name><argument_list pos:line="2344" pos:column="39">&lt;<argument><expr><name pos:line="2344" pos:column="40">UserCommand</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="2344" pos:column="53">&amp;</type:modifier></type> <name pos:line="2344" pos:column="55">theUserCommands</name> <init pos:line="2344" pos:column="71">= <expr><op:operator pos:line="2344" pos:column="73">(</op:operator><call><name><name pos:line="2344" pos:column="74">NppParameters</name><op:operator pos:line="2344" pos:column="87">::</op:operator><name pos:line="2344" pos:column="89">getInstance</name></name><argument_list pos:line="2344" pos:column="100">()</argument_list></call><op:operator pos:line="2344" pos:column="102">)</op:operator><op:operator pos:line="2344" pos:column="103">-&gt;</op:operator><call><name pos:line="2344" pos:column="105">getUserCommandList</name><argument_list pos:line="2344" pos:column="123">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="2345" pos:column="33">UserCommand</name></type> <name pos:line="2345" pos:column="45">ucmd</name> <init pos:line="2345" pos:column="50">= <expr><name><name pos:line="2345" pos:column="52">theUserCommands</name><index pos:line="2345" pos:column="67">[<expr><name pos:line="2345" pos:column="68">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

				<decl_stmt><decl><type><name pos:line="2347" pos:column="33">Command</name></type> <name pos:line="2347" pos:column="41">cmd</name><argument_list pos:line="2347" pos:column="44">(<argument><expr><call><name><name pos:line="2347" pos:column="45">ucmd</name><op:operator pos:line="2347" pos:column="49">.</op:operator><name pos:line="2347" pos:column="50">getCmd</name></name><argument_list pos:line="2347" pos:column="56">()</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="2348" pos:column="33">cmd</name><op:operator pos:line="2348" pos:column="36">.</op:operator><name pos:line="2348" pos:column="37">run</name></name><argument_list pos:line="2348" pos:column="40">(<argument><expr><call><name><name pos:line="2348" pos:column="41">_pPublicInterface</name><op:operator pos:line="2348" pos:column="58">-&gt;</op:operator><name pos:line="2348" pos:column="60">getHSelf</name></name><argument_list pos:line="2348" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="2350" pos:column="25">else <if pos:line="2350" pos:column="30">if <condition pos:line="2350" pos:column="33">(<expr><op:operator pos:line="2350" pos:column="34">(</op:operator><name pos:line="2350" pos:column="35">id</name> <op:operator pos:line="2350" pos:column="38">&gt;=</op:operator> <name pos:line="2350" pos:column="41">ID_PLUGINS_CMD</name><op:operator pos:line="2350" pos:column="55">)</op:operator> <op:operator pos:line="2350" pos:column="57">&amp;&amp;</op:operator> <op:operator pos:line="2350" pos:column="60">(</op:operator><name pos:line="2350" pos:column="61">id</name> <op:operator pos:line="2350" pos:column="64">&lt;</op:operator> <name pos:line="2350" pos:column="66">ID_PLUGINS_CMD_LIMIT</name><op:operator pos:line="2350" pos:column="86">)</op:operator></expr>)</condition><then pos:line="2350" pos:column="88">
			<block pos:line="2351" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="2352" pos:column="33">int</name></type> <name pos:line="2352" pos:column="37">i</name> <init pos:line="2352" pos:column="39">= <expr><name pos:line="2352" pos:column="41">id</name> <op:operator pos:line="2352" pos:column="44">-</op:operator> <name pos:line="2352" pos:column="46">ID_PLUGINS_CMD</name></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="2353" pos:column="33">_pluginsManager</name><op:operator pos:line="2353" pos:column="48">.</op:operator><name pos:line="2353" pos:column="49">runPluginCommand</name></name><argument_list pos:line="2353" pos:column="65">(<argument><expr><name pos:line="2353" pos:column="66">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="2355" pos:column="25">else <if pos:line="2355" pos:column="30">if <condition pos:line="2355" pos:column="33">(<expr><call><name><name pos:line="2355" pos:column="34">_pluginsManager</name><op:operator pos:line="2355" pos:column="49">.</op:operator><name pos:line="2355" pos:column="50">inDynamicRange</name></name><argument_list pos:line="2355" pos:column="64">(<argument><expr><name pos:line="2355" pos:column="65">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="2355" pos:column="69"> <comment type="line" pos:line="2355" pos:column="70">// in the dynamic range allocated with NPPM_ALLOCATECMDID</comment>
			<block pos:line="2356" pos:column="25">{
				<expr_stmt><expr><call><name><name pos:line="2357" pos:column="33">_pluginsManager</name><op:operator pos:line="2357" pos:column="48">.</op:operator><name pos:line="2357" pos:column="49">relayNppMessages</name></name><argument_list pos:line="2357" pos:column="65">(<argument><expr><name pos:line="2357" pos:column="66">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="2357" pos:column="78">id</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="2357" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
<comment type="block" pos:line="2359" pos:column="1">/*UNLOAD 
			else if ((id &gt;= ID_PLUGINS_REMOVING) &amp;&amp; (id &lt; ID_PLUGINS_REMOVING_END))
			{
				int i = id - ID_PLUGINS_REMOVING;
				_pluginsManager.unloadPlugin(i, _pPublicInterface-&gt;getHSelf());
			}
*/</comment>
			<else pos:line="2366" pos:column="25">else <if pos:line="2366" pos:column="30">if <condition pos:line="2366" pos:column="33">(<expr><op:operator pos:line="2366" pos:column="34">(</op:operator><name pos:line="2366" pos:column="35">id</name> <op:operator pos:line="2366" pos:column="38">&gt;=</op:operator> <name pos:line="2366" pos:column="41">IDM_WINDOW_MRU_FIRST</name><op:operator pos:line="2366" pos:column="61">)</op:operator> <op:operator pos:line="2366" pos:column="63">&amp;&amp;</op:operator> <op:operator pos:line="2366" pos:column="66">(</op:operator><name pos:line="2366" pos:column="67">id</name> <op:operator pos:line="2366" pos:column="70">&lt;=</op:operator> <name pos:line="2366" pos:column="73">IDM_WINDOW_MRU_LIMIT</name><op:operator pos:line="2366" pos:column="93">)</op:operator></expr>)</condition><then pos:line="2366" pos:column="95">
			<block pos:line="2367" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="2368" pos:column="33">activateDoc</name><argument_list pos:line="2368" pos:column="44">(<argument><expr><name pos:line="2368" pos:column="45">id</name><op:operator pos:line="2368" pos:column="47">-</op:operator><name pos:line="2368" pos:column="48">IDM_WINDOW_MRU_FIRST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>				
			}</block></then></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if>
	</default>}</block></switch>
	
	<if pos:line="2372" pos:column="9">if <condition pos:line="2372" pos:column="12">(<expr><name pos:line="2372" pos:column="13">_recordingMacro</name></expr>)</condition><then pos:line="2372" pos:column="29"> 
		<switch pos:line="2373" pos:column="17">switch <condition pos:line="2373" pos:column="24">(<expr><name pos:line="2373" pos:column="25">id</name></expr>)</condition>
		<block pos:line="2374" pos:column="17">{
			<case pos:line="2375" pos:column="25">case <expr><name pos:line="2375" pos:column="30">IDM_FILE_NEW</name></expr> :
			</case><case pos:line="2376" pos:column="25">case <expr><name pos:line="2376" pos:column="30">IDM_FILE_CLOSE</name></expr> :
			</case><case pos:line="2377" pos:column="25">case <expr><name pos:line="2377" pos:column="30">IDM_FILE_CLOSEALL</name></expr> :
			</case><case pos:line="2378" pos:column="25">case <expr><name pos:line="2378" pos:column="30">IDM_FILE_CLOSEALL_BUT_CURRENT</name></expr> :
			</case><case pos:line="2379" pos:column="25">case <expr><name pos:line="2379" pos:column="30">IDM_FILE_SAVE</name></expr> :
			</case><case pos:line="2380" pos:column="25">case <expr><name pos:line="2380" pos:column="30">IDM_FILE_SAVEALL</name></expr> :
			</case><case pos:line="2381" pos:column="25">case <expr><name pos:line="2381" pos:column="30">IDM_FILE_RELOAD</name></expr>:
			</case><case pos:line="2382" pos:column="25">case <expr><name pos:line="2382" pos:column="30">IDM_EDIT_UNDO</name></expr>:
			</case><case pos:line="2383" pos:column="25">case <expr><name pos:line="2383" pos:column="30">IDM_EDIT_REDO</name></expr>:
			</case><case pos:line="2384" pos:column="25">case <expr><name pos:line="2384" pos:column="30">IDM_EDIT_CUT</name></expr>:
			</case><case pos:line="2385" pos:column="25">case <expr><name pos:line="2385" pos:column="30">IDM_EDIT_COPY</name></expr>:
			<comment type="line" pos:line="2386" pos:column="25">//case IDM_EDIT_PASTE:</comment>
			</case><case pos:line="2387" pos:column="25">case <expr><name pos:line="2387" pos:column="30">IDM_EDIT_DELETE</name></expr>:
			</case><case pos:line="2388" pos:column="25">case <expr><name pos:line="2388" pos:column="30">IDM_SEARCH_FINDNEXT</name></expr> :
			</case><case pos:line="2389" pos:column="25">case <expr><name pos:line="2389" pos:column="30">IDM_SEARCH_FINDPREV</name></expr> :
            </case><case pos:line="2390" pos:column="13">case <expr><name pos:line="2390" pos:column="18">IDM_SEARCH_SETANDFINDNEXT</name></expr> :
			</case><case pos:line="2391" pos:column="25">case <expr><name pos:line="2391" pos:column="30">IDM_SEARCH_SETANDFINDPREV</name></expr> :
			</case><case pos:line="2392" pos:column="25">case <expr><name pos:line="2392" pos:column="30">IDM_SEARCH_GOTOMATCHINGBRACE</name></expr> :
			</case><case pos:line="2393" pos:column="25">case <expr><name pos:line="2393" pos:column="30">IDM_SEARCH_TOGGLE_BOOKMARK</name></expr> :
			</case><case pos:line="2394" pos:column="25">case <expr><name pos:line="2394" pos:column="30">IDM_SEARCH_NEXT_BOOKMARK</name></expr>:
			</case><case pos:line="2395" pos:column="25">case <expr><name pos:line="2395" pos:column="30">IDM_SEARCH_PREV_BOOKMARK</name></expr>:
			</case><case pos:line="2396" pos:column="25">case <expr><name pos:line="2396" pos:column="30">IDM_SEARCH_CLEAR_BOOKMARKS</name></expr>:
			</case><case pos:line="2397" pos:column="25">case <expr><name pos:line="2397" pos:column="30">IDM_EDIT_SELECTALL</name></expr>:
			</case><case pos:line="2398" pos:column="25">case <expr><name pos:line="2398" pos:column="30">IDM_EDIT_INS_TAB</name></expr>:
			</case><case pos:line="2399" pos:column="25">case <expr><name pos:line="2399" pos:column="30">IDM_EDIT_RMV_TAB</name></expr>:
			</case><case pos:line="2400" pos:column="25">case <expr><name pos:line="2400" pos:column="30">IDM_EDIT_DUP_LINE</name></expr>:
			</case><case pos:line="2401" pos:column="25">case <expr><name pos:line="2401" pos:column="30">IDM_EDIT_TRANSPOSE_LINE</name></expr>:
			</case><case pos:line="2402" pos:column="25">case <expr><name pos:line="2402" pos:column="30">IDM_EDIT_SPLIT_LINES</name></expr>:
			</case><case pos:line="2403" pos:column="25">case <expr><name pos:line="2403" pos:column="30">IDM_EDIT_JOIN_LINES</name></expr>:
			</case><case pos:line="2404" pos:column="25">case <expr><name pos:line="2404" pos:column="30">IDM_EDIT_LINE_UP</name></expr>:
			</case><case pos:line="2405" pos:column="25">case <expr><name pos:line="2405" pos:column="30">IDM_EDIT_LINE_DOWN</name></expr>:
			</case><case pos:line="2406" pos:column="25">case <expr><name pos:line="2406" pos:column="30">IDM_EDIT_UPPERCASE</name></expr>:
			</case><case pos:line="2407" pos:column="25">case <expr><name pos:line="2407" pos:column="30">IDM_EDIT_LOWERCASE</name></expr>:
			</case><case pos:line="2408" pos:column="25">case <expr><name pos:line="2408" pos:column="30">IDM_EDIT_BLOCK_COMMENT</name></expr>:
			</case><case pos:line="2409" pos:column="25">case <expr><name pos:line="2409" pos:column="30">IDM_EDIT_BLOCK_COMMENT_SET</name></expr>:
			</case><case pos:line="2410" pos:column="25">case <expr><name pos:line="2410" pos:column="30">IDM_EDIT_BLOCK_UNCOMMENT</name></expr>:
			</case><case pos:line="2411" pos:column="25">case <expr><name pos:line="2411" pos:column="30">IDM_EDIT_STREAM_COMMENT</name></expr>:
			</case><case pos:line="2412" pos:column="25">case <expr><name pos:line="2412" pos:column="30">IDM_EDIT_TRIMTRAILING</name></expr>:
			</case><case pos:line="2413" pos:column="25">case <expr><name pos:line="2413" pos:column="30">IDM_EDIT_TRIMLINEHEAD</name></expr>:
			</case><case pos:line="2414" pos:column="25">case <expr><name pos:line="2414" pos:column="30">IDM_EDIT_TRIM_BOTH</name></expr>:
			</case><case pos:line="2415" pos:column="25">case <expr><name pos:line="2415" pos:column="30">IDM_EDIT_EOL2WS</name></expr>:
			</case><case pos:line="2416" pos:column="25">case <expr><name pos:line="2416" pos:column="30">IDM_EDIT_TRIMALL</name></expr>:
			</case><case pos:line="2417" pos:column="25">case <expr><name pos:line="2417" pos:column="30">IDM_EDIT_TAB2SW</name></expr>:
			</case><case pos:line="2418" pos:column="25">case <expr><name pos:line="2418" pos:column="30">IDM_EDIT_SW2TAB_ALL</name></expr>:
			</case><case pos:line="2419" pos:column="25">case <expr><name pos:line="2419" pos:column="30">IDM_EDIT_SW2TAB_LEADING</name></expr>:
			</case><case pos:line="2420" pos:column="25">case <expr><name pos:line="2420" pos:column="30">IDM_EDIT_SETREADONLY</name></expr> :
			</case><case pos:line="2421" pos:column="25">case <expr><name pos:line="2421" pos:column="30">IDM_EDIT_FULLPATHTOCLIP</name></expr> :
			</case><case pos:line="2422" pos:column="25">case <expr><name pos:line="2422" pos:column="30">IDM_EDIT_FILENAMETOCLIP</name></expr> :
			</case><case pos:line="2423" pos:column="25">case <expr><name pos:line="2423" pos:column="30">IDM_EDIT_CURRENTDIRTOCLIP</name></expr> :
			</case><case pos:line="2424" pos:column="25">case <expr><name pos:line="2424" pos:column="30">IDM_EDIT_CLEARREADONLY</name></expr> :
			</case><case pos:line="2425" pos:column="25">case <expr><name pos:line="2425" pos:column="30">IDM_EDIT_RTL</name></expr> :
			</case><case pos:line="2426" pos:column="25">case <expr><name pos:line="2426" pos:column="30">IDM_EDIT_LTR</name></expr> :
			</case><case pos:line="2427" pos:column="25">case <expr><name pos:line="2427" pos:column="30">IDM_VIEW_FULLSCREENTOGGLE</name></expr> :
			</case><case pos:line="2428" pos:column="25">case <expr><name pos:line="2428" pos:column="30">IDM_VIEW_ALWAYSONTOP</name></expr> :
			</case><case pos:line="2429" pos:column="25">case <expr><name pos:line="2429" pos:column="30">IDM_VIEW_WRAP</name></expr> :
			</case><case pos:line="2430" pos:column="25">case <expr><name pos:line="2430" pos:column="30">IDM_VIEW_FOLD_CURRENT</name></expr> :
			</case><case pos:line="2431" pos:column="25">case <expr><name pos:line="2431" pos:column="30">IDM_VIEW_UNFOLD_CURRENT</name></expr> :
			</case><case pos:line="2432" pos:column="25">case <expr><name pos:line="2432" pos:column="30">IDM_VIEW_TOGGLE_FOLDALL</name></expr>:
			</case><case pos:line="2433" pos:column="25">case <expr><name pos:line="2433" pos:column="30">IDM_VIEW_TOGGLE_UNFOLDALL</name></expr>:
			</case><case pos:line="2434" pos:column="25">case <expr><name pos:line="2434" pos:column="30">IDM_VIEW_FOLD_1</name></expr>:
			</case><case pos:line="2435" pos:column="25">case <expr><name pos:line="2435" pos:column="30">IDM_VIEW_FOLD_2</name></expr>:
			</case><case pos:line="2436" pos:column="25">case <expr><name pos:line="2436" pos:column="30">IDM_VIEW_FOLD_3</name></expr>:
			</case><case pos:line="2437" pos:column="25">case <expr><name pos:line="2437" pos:column="30">IDM_VIEW_FOLD_4</name></expr>:
			</case><case pos:line="2438" pos:column="25">case <expr><name pos:line="2438" pos:column="30">IDM_VIEW_FOLD_5</name></expr>:
			</case><case pos:line="2439" pos:column="25">case <expr><name pos:line="2439" pos:column="30">IDM_VIEW_FOLD_6</name></expr>:
			</case><case pos:line="2440" pos:column="25">case <expr><name pos:line="2440" pos:column="30">IDM_VIEW_FOLD_7</name></expr>:
			</case><case pos:line="2441" pos:column="25">case <expr><name pos:line="2441" pos:column="30">IDM_VIEW_FOLD_8</name></expr>:
			</case><case pos:line="2442" pos:column="25">case <expr><name pos:line="2442" pos:column="30">IDM_VIEW_UNFOLD_1</name></expr>:
			</case><case pos:line="2443" pos:column="25">case <expr><name pos:line="2443" pos:column="30">IDM_VIEW_UNFOLD_2</name></expr>:
			</case><case pos:line="2444" pos:column="25">case <expr><name pos:line="2444" pos:column="30">IDM_VIEW_UNFOLD_3</name></expr>:
			</case><case pos:line="2445" pos:column="25">case <expr><name pos:line="2445" pos:column="30">IDM_VIEW_UNFOLD_4</name></expr>:
			</case><case pos:line="2446" pos:column="25">case <expr><name pos:line="2446" pos:column="30">IDM_VIEW_UNFOLD_5</name></expr>:
			</case><case pos:line="2447" pos:column="25">case <expr><name pos:line="2447" pos:column="30">IDM_VIEW_UNFOLD_6</name></expr>:
			</case><case pos:line="2448" pos:column="25">case <expr><name pos:line="2448" pos:column="30">IDM_VIEW_UNFOLD_7</name></expr>:
			</case><case pos:line="2449" pos:column="25">case <expr><name pos:line="2449" pos:column="30">IDM_VIEW_UNFOLD_8</name></expr>:
			</case><case pos:line="2450" pos:column="25">case <expr><name pos:line="2450" pos:column="30">IDM_VIEW_GOTO_ANOTHER_VIEW</name></expr>:
			</case><case pos:line="2451" pos:column="25">case <expr><name pos:line="2451" pos:column="30">IDM_VIEW_SYNSCROLLV</name></expr>:
			</case><case pos:line="2452" pos:column="25">case <expr><name pos:line="2452" pos:column="30">IDM_VIEW_SYNSCROLLH</name></expr>:
			</case><case pos:line="2453" pos:column="25">case <expr><name pos:line="2453" pos:column="30">IDC_PREV_DOC</name></expr> :
			</case><case pos:line="2454" pos:column="25">case <expr><name pos:line="2454" pos:column="30">IDC_NEXT_DOC</name></expr> :
			</case><case pos:line="2455" pos:column="25">case <expr><name pos:line="2455" pos:column="30">IDM_SEARCH_GOPREVMARKER1</name></expr>   :
			</case><case pos:line="2456" pos:column="25">case <expr><name pos:line="2456" pos:column="30">IDM_SEARCH_GOPREVMARKER2</name></expr>   :
			</case><case pos:line="2457" pos:column="25">case <expr><name pos:line="2457" pos:column="30">IDM_SEARCH_GOPREVMARKER3</name></expr>   :
			</case><case pos:line="2458" pos:column="25">case <expr><name pos:line="2458" pos:column="30">IDM_SEARCH_GOPREVMARKER4</name></expr>   :
			</case><case pos:line="2459" pos:column="25">case <expr><name pos:line="2459" pos:column="30">IDM_SEARCH_GOPREVMARKER5</name></expr>   :
			</case><case pos:line="2460" pos:column="25">case <expr><name pos:line="2460" pos:column="30">IDM_SEARCH_GOPREVMARKER_DEF</name></expr>:
			</case><case pos:line="2461" pos:column="25">case <expr><name pos:line="2461" pos:column="30">IDM_SEARCH_GONEXTMARKER1</name></expr>   :
			</case><case pos:line="2462" pos:column="25">case <expr><name pos:line="2462" pos:column="30">IDM_SEARCH_GONEXTMARKER2</name></expr>   :
			</case><case pos:line="2463" pos:column="25">case <expr><name pos:line="2463" pos:column="30">IDM_SEARCH_GONEXTMARKER3</name></expr>   :
			</case><case pos:line="2464" pos:column="25">case <expr><name pos:line="2464" pos:column="30">IDM_SEARCH_GONEXTMARKER4</name></expr>   :
			</case><case pos:line="2465" pos:column="25">case <expr><name pos:line="2465" pos:column="30">IDM_SEARCH_GONEXTMARKER5</name></expr>   :
			</case><case pos:line="2466" pos:column="25">case <expr><name pos:line="2466" pos:column="30">IDM_SEARCH_GONEXTMARKER_DEF</name></expr>:
			</case><case pos:line="2467" pos:column="25">case <expr><name pos:line="2467" pos:column="30">IDM_SEARCH_VOLATILE_FINDNEXT</name></expr>:
			</case><case pos:line="2468" pos:column="25">case <expr><name pos:line="2468" pos:column="30">IDM_SEARCH_VOLATILE_FINDPREV</name></expr>:
			</case><case pos:line="2469" pos:column="25">case <expr><name pos:line="2469" pos:column="30">IDM_SEARCH_CUTMARKEDLINES</name></expr>   :
			</case><case pos:line="2470" pos:column="25">case <expr><name pos:line="2470" pos:column="30">IDM_SEARCH_COPYMARKEDLINES</name></expr>     :
			</case><case pos:line="2471" pos:column="25">case <expr><name pos:line="2471" pos:column="30">IDM_SEARCH_PASTEMARKEDLINES</name></expr>    :
			</case><case pos:line="2472" pos:column="25">case <expr><name pos:line="2472" pos:column="30">IDM_SEARCH_DELETEMARKEDLINES</name></expr>   :
			</case><case pos:line="2473" pos:column="25">case <expr><name pos:line="2473" pos:column="30">IDM_SEARCH_DELETEUNMARKEDLINES</name></expr> :
			</case><case pos:line="2474" pos:column="25">case <expr><name pos:line="2474" pos:column="30">IDM_SEARCH_MARKALLEXT1</name></expr>      :
			</case><case pos:line="2475" pos:column="25">case <expr><name pos:line="2475" pos:column="30">IDM_SEARCH_UNMARKALLEXT1</name></expr>    :
			</case><case pos:line="2476" pos:column="25">case <expr><name pos:line="2476" pos:column="30">IDM_SEARCH_MARKALLEXT2</name></expr>      :
			</case><case pos:line="2477" pos:column="25">case <expr><name pos:line="2477" pos:column="30">IDM_SEARCH_UNMARKALLEXT2</name></expr>    :
			</case><case pos:line="2478" pos:column="25">case <expr><name pos:line="2478" pos:column="30">IDM_SEARCH_MARKALLEXT3</name></expr>      :
			</case><case pos:line="2479" pos:column="25">case <expr><name pos:line="2479" pos:column="30">IDM_SEARCH_UNMARKALLEXT3</name></expr>    :
			</case><case pos:line="2480" pos:column="25">case <expr><name pos:line="2480" pos:column="30">IDM_SEARCH_MARKALLEXT4</name></expr>      :
			</case><case pos:line="2481" pos:column="25">case <expr><name pos:line="2481" pos:column="30">IDM_SEARCH_UNMARKALLEXT4</name></expr>    :
			</case><case pos:line="2482" pos:column="25">case <expr><name pos:line="2482" pos:column="30">IDM_SEARCH_MARKALLEXT5</name></expr>      :
			</case><case pos:line="2483" pos:column="25">case <expr><name pos:line="2483" pos:column="30">IDM_SEARCH_UNMARKALLEXT5</name></expr>    :
			</case><case pos:line="2484" pos:column="25">case <expr><name pos:line="2484" pos:column="30">IDM_SEARCH_CLEARALLMARKS</name></expr>    :
				<expr_stmt><expr><call><name><name pos:line="2485" pos:column="33">_macro</name><op:operator pos:line="2485" pos:column="39">.</op:operator><name pos:line="2485" pos:column="40">push_back</name></name><argument_list pos:line="2485" pos:column="49">(<argument><expr><call><name pos:line="2485" pos:column="50">recordedMacroStep</name><argument_list pos:line="2485" pos:column="67">(<argument><expr><name pos:line="2485" pos:column="68">id</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<break pos:line="2486" pos:column="33">break;</break>
		</case>}</block></switch></then></if>
}</block></function>
</unit>
