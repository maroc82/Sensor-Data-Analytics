<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ProjectPanel\ProjectPanel.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">PROJECTPANEL_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive>  <cpp:macro><name pos:line="30" pos:column="10">PROJECTPANEL_H</name></cpp:macro></cpp:define>

<comment type="line" pos:line="32" pos:column="1">//#include &lt;windows.h&gt;</comment>
<cpp:ifndef pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">ifndef</cpp:directive> <name pos:line="33" pos:column="9">DOCKINGDLGINTERFACE_H</name></cpp:ifndef>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"DockingDlgInterface.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="35" pos:column="8">//DOCKINGDLGINTERFACE_H</comment>

<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"TreeView.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="38" pos:column="10">"ProjectPanel_rc.h"</lit:literal></cpp:file></cpp:include>

<cpp:define pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="40" pos:column="9">PM_PROJECTPANELTITLE</name></cpp:macro>     <cpp:value pos:line="40" pos:column="34">TEXT("Project")</cpp:value></cpp:define>
<cpp:define pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="41" pos:column="9">PM_WORKSPACEROOTNAME</name></cpp:macro>     <cpp:value pos:line="41" pos:column="34">TEXT("Workspace")</cpp:value></cpp:define>
<cpp:define pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="42" pos:column="9">PM_NEWFOLDERNAME</name></cpp:macro>         <cpp:value pos:line="42" pos:column="34">TEXT("Folder Name")</cpp:value></cpp:define>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">PM_NEWPROJECTNAME</name></cpp:macro>        <cpp:value pos:line="43" pos:column="34">TEXT("Project Name")</cpp:value></cpp:define>

<cpp:define pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="45" pos:column="9">PM_NEWWORKSPACE</name></cpp:macro>            <cpp:value pos:line="45" pos:column="36">TEXT("New Workspace")</cpp:value></cpp:define>
<cpp:define pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="46" pos:column="9">PM_OPENWORKSPACE</name></cpp:macro>           <cpp:value pos:line="46" pos:column="36">TEXT("Open Workspace")</cpp:value></cpp:define>
<cpp:define pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="47" pos:column="9">PM_RELOADWORKSPACE</name></cpp:macro>         <cpp:value pos:line="47" pos:column="36">TEXT("Reload Workspace")</cpp:value></cpp:define>
<cpp:define pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="48" pos:column="9">PM_SAVEWORKSPACE</name></cpp:macro>           <cpp:value pos:line="48" pos:column="36">TEXT("Save")</cpp:value></cpp:define>
<cpp:define pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="49" pos:column="9">PM_SAVEASWORKSPACE</name></cpp:macro>         <cpp:value pos:line="49" pos:column="36">TEXT("Save As...")</cpp:value></cpp:define>
<cpp:define pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="50" pos:column="9">PM_SAVEACOPYASWORKSPACE</name></cpp:macro>    <cpp:value pos:line="50" pos:column="36">TEXT("Save a Copy As...")</cpp:value></cpp:define>
<cpp:define pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="51" pos:column="9">PM_NEWPROJECTWORKSPACE</name></cpp:macro>     <cpp:value pos:line="51" pos:column="36">TEXT("Add New Project")</cpp:value></cpp:define>

<cpp:define pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="53" pos:column="9">PM_EDITRENAME</name></cpp:macro>              <cpp:value pos:line="53" pos:column="36">TEXT("Rename")</cpp:value></cpp:define>
<cpp:define pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="54" pos:column="9">PM_EDITNEWFOLDER</name></cpp:macro>           <cpp:value pos:line="54" pos:column="36">TEXT("Add Folder")</cpp:value></cpp:define>
<cpp:define pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="55" pos:column="9">PM_EDITADDFILES</name></cpp:macro>            <cpp:value pos:line="55" pos:column="36">TEXT("Add Files...")</cpp:value></cpp:define>
<cpp:define pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="56" pos:column="9">PM_EDITADDFILESRECUSIVELY</name></cpp:macro>  <cpp:value pos:line="56" pos:column="36">TEXT("Add Files from Directory...")</cpp:value></cpp:define>
<cpp:define pos:line="57" pos:column="1">#<cpp:directive pos:line="57" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="57" pos:column="9">PM_EDITREMOVE</name></cpp:macro>              <cpp:value pos:line="57" pos:column="36">TEXT("Remove\tDEL")</cpp:value></cpp:define>
<cpp:define pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="58" pos:column="9">PM_EDITMODIFYFILE</name></cpp:macro>          <cpp:value pos:line="58" pos:column="36">TEXT("Modify File Path")</cpp:value></cpp:define>

<cpp:define pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="60" pos:column="9">PM_WORKSPACEMENUENTRY</name></cpp:macro>      <cpp:value pos:line="60" pos:column="36">TEXT("Workspace")</cpp:value></cpp:define>
<cpp:define pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="61" pos:column="9">PM_EDITMENUENTRY</name></cpp:macro>           <cpp:value pos:line="61" pos:column="36">TEXT("Edit")</cpp:value></cpp:define>

<cpp:define pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="63" pos:column="9">PM_MOVEUPENTRY</name></cpp:macro>             <cpp:value pos:line="63" pos:column="36">TEXT("Move Up\tCtrl+Up")</cpp:value></cpp:define>
<cpp:define pos:line="64" pos:column="1">#<cpp:directive pos:line="64" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="64" pos:column="9">PM_MOVEDOWNENTRY</name></cpp:macro>           <cpp:value pos:line="64" pos:column="36">TEXT("Move Down\tCtrl+Down")</cpp:value></cpp:define>

<enum pos:line="66" pos:column="1">enum <name pos:line="66" pos:column="6">NodeType</name> <block pos:line="66" pos:column="15">{
	<decl><name pos:line="67" pos:column="9">nodeType_root</name> <init pos:line="67" pos:column="23">= <expr><lit:literal type="number" pos:line="67" pos:column="25">0</lit:literal></expr></init></decl><op:operator pos:line="67" pos:column="26">,</op:operator> <decl><name pos:line="67" pos:column="28">nodeType_project</name> <init pos:line="67" pos:column="45">= <expr><lit:literal type="number" pos:line="67" pos:column="47">1</lit:literal></expr></init></decl><op:operator pos:line="67" pos:column="48">,</op:operator> <decl><name pos:line="67" pos:column="50">nodeType_folder</name> <init pos:line="67" pos:column="66">= <expr><lit:literal type="number" pos:line="67" pos:column="68">2</lit:literal></expr></init></decl><op:operator pos:line="67" pos:column="69">,</op:operator> <decl><name pos:line="67" pos:column="71">nodeType_file</name> <init pos:line="67" pos:column="85">= <expr><lit:literal type="number" pos:line="67" pos:column="87">3</lit:literal></expr></init></decl>
}</block>;</enum>

<class_decl pos:line="70" pos:column="1">class <name pos:line="70" pos:column="7">TiXmlNode</name>;</class_decl>

<class pos:line="72" pos:column="1">class <name pos:line="72" pos:column="7">ProjectPanel</name> <super pos:line="72" pos:column="20">: <specifier pos:line="72" pos:column="22">public</specifier> <name pos:line="72" pos:column="29">DockingDlgInterface</name></super> <block pos:line="72" pos:column="49">{<private type="default" pos:line="72" pos:column="50">
</private><public pos:line="73" pos:column="1">public:
	<constructor><name pos:line="74" pos:column="9">ProjectPanel</name><parameter_list pos:line="74" pos:column="21">()</parameter_list><member_list pos:line="74" pos:column="23">: <call><name pos:line="74" pos:column="25">DockingDlgInterface</name><argument_list pos:line="74" pos:column="44">(<argument><expr><name pos:line="74" pos:column="45">IDD_PROJECTPANEL</name></expr></argument>)</argument_list></call><op:operator pos:line="74" pos:column="62">,</op:operator>\
		<call><name pos:line="75" pos:column="17">_hToolbarMenu</name><argument_list pos:line="75" pos:column="30">(<argument><expr><name pos:line="75" pos:column="31">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="75" pos:column="36">,</op:operator> <call><name pos:line="75" pos:column="38">_hWorkSpaceMenu</name><argument_list pos:line="75" pos:column="53">(<argument><expr><name pos:line="75" pos:column="54">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="75" pos:column="59">,</op:operator> <call><name pos:line="75" pos:column="61">_hProjectMenu</name><argument_list pos:line="75" pos:column="74">(<argument><expr><name pos:line="75" pos:column="75">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="75" pos:column="80">,</op:operator>\
		<call><name pos:line="76" pos:column="17">_hFolderMenu</name><argument_list pos:line="76" pos:column="29">(<argument><expr><name pos:line="76" pos:column="30">NULL</name></expr></argument>)</argument_list></call><op:operator pos:line="76" pos:column="35">,</op:operator> <call><name pos:line="76" pos:column="37">_hFileMenu</name><argument_list pos:line="76" pos:column="47">(<argument><expr><name pos:line="76" pos:column="48">NULL</name></expr></argument>)</argument_list></call></member_list><block pos:line="76" pos:column="53">{}</block></constructor><empty_stmt pos:line="76" pos:column="55">;</empty_stmt>


	<function><type><name pos:line="79" pos:column="9">void</name></type> <name pos:line="79" pos:column="14">init</name><parameter_list pos:line="79" pos:column="18">(<param><decl><type><name pos:line="79" pos:column="19">HINSTANCE</name></type> <name pos:line="79" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="36">HWND</name></type> <name pos:line="79" pos:column="41">hPere</name></decl></param>)</parameter_list> <block pos:line="79" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="80" pos:column="17">DockingDlgInterface</name><op:operator pos:line="80" pos:column="36">::</op:operator><name pos:line="80" pos:column="38">init</name></name><argument_list pos:line="80" pos:column="42">(<argument><expr><name pos:line="80" pos:column="43">hInst</name></expr></argument>, <argument><expr><name pos:line="80" pos:column="50">hPere</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function>

    <function><type><specifier pos:line="83" pos:column="5">virtual</specifier> <name pos:line="83" pos:column="13">void</name></type> <name pos:line="83" pos:column="18">display</name><parameter_list pos:line="83" pos:column="25">(<param><decl><type><name pos:line="83" pos:column="26">bool</name></type> <name pos:line="83" pos:column="31">toShow</name> <init pos:line="83" pos:column="38">= <expr><lit:literal type="boolean" pos:line="83" pos:column="40">true</lit:literal></expr></init></decl></param>)</parameter_list> <specifier pos:line="83" pos:column="46">const</specifier> <block pos:line="83" pos:column="52">{
        <expr_stmt><expr><call><name><name pos:line="84" pos:column="9">DockingDlgInterface</name><op:operator pos:line="84" pos:column="28">::</op:operator><name pos:line="84" pos:column="30">display</name></name><argument_list pos:line="84" pos:column="37">(<argument><expr><name pos:line="84" pos:column="38">toShow</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="85" pos:column="6">;</empty_stmt>

    <function><type><name pos:line="87" pos:column="5">void</name></type> <name pos:line="87" pos:column="10">setParent</name><parameter_list pos:line="87" pos:column="19">(<param><decl><type><name pos:line="87" pos:column="20">HWND</name></type> <name pos:line="87" pos:column="25">parent2set</name></decl></param>)</parameter_list><block pos:line="87" pos:column="36">{
        <expr_stmt><expr><name pos:line="88" pos:column="9">_hParent</name> <op:operator pos:line="88" pos:column="18">=</op:operator> <name pos:line="88" pos:column="20">parent2set</name></expr>;</expr_stmt>
    }</block></function><empty_stmt pos:line="89" pos:column="6">;</empty_stmt>

	<function_decl><type><name pos:line="91" pos:column="9">void</name></type> <name pos:line="91" pos:column="14">newWorkSpace</name><parameter_list pos:line="91" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="92" pos:column="9">bool</name></type> <name pos:line="92" pos:column="14">openWorkSpace</name><parameter_list pos:line="92" pos:column="27">(<param><decl><type><specifier pos:line="92" pos:column="28">const</specifier> <name pos:line="92" pos:column="34">TCHAR</name> <type:modifier pos:line="92" pos:column="40">*</type:modifier></type><name pos:line="92" pos:column="41">projectFileName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="93" pos:column="9">bool</name></type> <name pos:line="93" pos:column="14">saveWorkSpace</name><parameter_list pos:line="93" pos:column="27">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="94" pos:column="9">bool</name></type> <name pos:line="94" pos:column="14">saveWorkSpaceAs</name><parameter_list pos:line="94" pos:column="29">(<param><decl><type><name pos:line="94" pos:column="30">bool</name></type> <name pos:line="94" pos:column="35">saveCopyAs</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="95" pos:column="9">void</name></type> <name pos:line="95" pos:column="14">setWorkSpaceFilePath</name><parameter_list pos:line="95" pos:column="34">(<param><decl><type><specifier pos:line="95" pos:column="35">const</specifier> <name pos:line="95" pos:column="41">TCHAR</name> <type:modifier pos:line="95" pos:column="47">*</type:modifier></type><name pos:line="95" pos:column="48">projectFileName</name></decl></param>)</parameter_list><block pos:line="95" pos:column="64">{
		<expr_stmt><expr><name pos:line="96" pos:column="17">_workSpaceFilePath</name> <op:operator pos:line="96" pos:column="36">=</op:operator> <name pos:line="96" pos:column="38">projectFileName</name></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="97" pos:column="10">;</empty_stmt>
	<function><type><specifier pos:line="98" pos:column="9">const</specifier> <name pos:line="98" pos:column="15">TCHAR</name> <type:modifier pos:line="98" pos:column="21">*</type:modifier></type> <name pos:line="98" pos:column="23">getWorkSpaceFilePath</name><parameter_list pos:line="98" pos:column="43">()</parameter_list> <specifier pos:line="98" pos:column="46">const</specifier> <block pos:line="98" pos:column="52">{
		<return pos:line="99" pos:column="17">return <expr><call><name><name pos:line="99" pos:column="24">_workSpaceFilePath</name><op:operator pos:line="99" pos:column="42">.</op:operator><name pos:line="99" pos:column="43">c_str</name></name><argument_list pos:line="99" pos:column="48">()</argument_list></call></expr>;</return>
	}</block></function><empty_stmt pos:line="100" pos:column="10">;</empty_stmt>
	<function><type><name pos:line="101" pos:column="9">bool</name></type> <name pos:line="101" pos:column="14">isDirty</name><parameter_list pos:line="101" pos:column="21">()</parameter_list> <specifier pos:line="101" pos:column="24">const</specifier> <block pos:line="101" pos:column="30">{
		<return pos:line="102" pos:column="17">return <expr><name pos:line="102" pos:column="24">_isDirty</name></expr>;</return>
	}</block></function><empty_stmt pos:line="103" pos:column="10">;</empty_stmt>
	<function_decl><type><name pos:line="104" pos:column="9">void</name></type> <name pos:line="104" pos:column="14">checkIfNeedSave</name><parameter_list pos:line="104" pos:column="29">(<param><decl><type><specifier pos:line="104" pos:column="30">const</specifier> <name pos:line="104" pos:column="36">TCHAR</name> <type:modifier pos:line="104" pos:column="42">*</type:modifier></type><name pos:line="104" pos:column="43">title</name></decl></param>)</parameter_list>;</function_decl>

</public><protected pos:line="106" pos:column="1">protected:
	<decl_stmt><decl><type><name pos:line="107" pos:column="9">TreeView</name></type> <name pos:line="107" pos:column="18">_treeView</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="108" pos:column="9">HIMAGELIST</name></type> <name pos:line="108" pos:column="20">_hImaLst</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="109" pos:column="9">HWND</name></type> <name pos:line="109" pos:column="14">_hToolbarMenu</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="110" pos:column="9">HMENU</name></type> <name pos:line="110" pos:column="15">_hWorkSpaceMenu</name></decl><op:operator pos:line="110" pos:column="30">,</op:operator> <decl><type ref="prev"/><name pos:line="110" pos:column="32">_hProjectMenu</name></decl><op:operator pos:line="110" pos:column="45">,</op:operator> <decl><type ref="prev"/><name pos:line="110" pos:column="47">_hFolderMenu</name></decl><op:operator pos:line="110" pos:column="59">,</op:operator> <decl><type ref="prev"/><name pos:line="110" pos:column="61">_hFileMenu</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="111" pos:column="9">generic_string</name></type> <name pos:line="111" pos:column="24">_workSpaceFilePath</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="112" pos:column="9">generic_string</name></type> <name pos:line="112" pos:column="24">_selDirOfFilesFromDirDlg</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="113" pos:column="9">bool</name></type> <name pos:line="113" pos:column="14">_isDirty</name></decl>;</decl_stmt>

	<function_decl><type><name pos:line="115" pos:column="9">void</name></type> <name pos:line="115" pos:column="14">initMenus</name><parameter_list pos:line="115" pos:column="23">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="116" pos:column="9">void</name></type> <name pos:line="116" pos:column="14">destroyMenus</name><parameter_list pos:line="116" pos:column="26">()</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="117" pos:column="9">BOOL</name></type> <name pos:line="117" pos:column="14">setImageList</name><parameter_list pos:line="117" pos:column="26">(<param><decl><type><name pos:line="117" pos:column="27">int</name></type> <name pos:line="117" pos:column="31">root_clean_id</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="46">int</name></type> <name pos:line="117" pos:column="50">root_dirty_id</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="65">int</name></type> <name pos:line="117" pos:column="69">project_id</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="81">int</name></type> <name pos:line="117" pos:column="85">open_node_id</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="99">int</name></type> <name pos:line="117" pos:column="103">closed_node_id</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="119">int</name></type> <name pos:line="117" pos:column="123">leaf_id</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="132">int</name></type> <name pos:line="117" pos:column="136">ivalid_leaf_id</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="118" pos:column="9">void</name></type> <name pos:line="118" pos:column="14">addFiles</name><parameter_list pos:line="118" pos:column="22">(<param><decl><type><name pos:line="118" pos:column="23">HTREEITEM</name></type> <name pos:line="118" pos:column="33">hTreeItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="119" pos:column="9">void</name></type> <name pos:line="119" pos:column="14">addFilesFromDirectory</name><parameter_list pos:line="119" pos:column="35">(<param><decl><type><name pos:line="119" pos:column="36">HTREEITEM</name></type> <name pos:line="119" pos:column="46">hTreeItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="120" pos:column="9">void</name></type> <name pos:line="120" pos:column="14">recursiveAddFilesFrom</name><parameter_list pos:line="120" pos:column="35">(<param><decl><type><specifier pos:line="120" pos:column="36">const</specifier> <name pos:line="120" pos:column="42">TCHAR</name> <type:modifier pos:line="120" pos:column="48">*</type:modifier></type><name pos:line="120" pos:column="49">folderPath</name></decl></param>, <param><decl><type><name pos:line="120" pos:column="61">HTREEITEM</name></type> <name pos:line="120" pos:column="71">hTreeItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="121" pos:column="9">HTREEITEM</name></type> <name pos:line="121" pos:column="19">addFolder</name><parameter_list pos:line="121" pos:column="28">(<param><decl><type><name pos:line="121" pos:column="29">HTREEITEM</name></type> <name pos:line="121" pos:column="39">hTreeItem</name></decl></param>, <param><decl><type><specifier pos:line="121" pos:column="50">const</specifier> <name pos:line="121" pos:column="56">TCHAR</name> <type:modifier pos:line="121" pos:column="62">*</type:modifier></type><name pos:line="121" pos:column="63">folderName</name></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><name pos:line="123" pos:column="9">bool</name></type> <name pos:line="123" pos:column="14">writeWorkSpace</name><parameter_list pos:line="123" pos:column="28">(<param><decl><type><name pos:line="123" pos:column="29">TCHAR</name> <type:modifier pos:line="123" pos:column="35">*</type:modifier></type><name pos:line="123" pos:column="36">projectFileName</name> <init pos:line="123" pos:column="52">= <expr><name pos:line="123" pos:column="54">NULL</name></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="124" pos:column="9">generic_string</name></type> <name pos:line="124" pos:column="24">getRelativePath</name><parameter_list pos:line="124" pos:column="39">(<param><decl><type><specifier pos:line="124" pos:column="40">const</specifier> <name pos:line="124" pos:column="46">generic_string</name> <type:modifier pos:line="124" pos:column="61">&amp;</type:modifier></type> <name pos:line="124" pos:column="63">fn</name></decl></param>, <param><decl><type><specifier pos:line="124" pos:column="67">const</specifier> <name pos:line="124" pos:column="73">TCHAR</name> <type:modifier pos:line="124" pos:column="79">*</type:modifier></type><name pos:line="124" pos:column="80">workSpaceFileName</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="125" pos:column="9">void</name></type> <name pos:line="125" pos:column="14">buildProjectXml</name><parameter_list pos:line="125" pos:column="29">(<param><decl><type><name pos:line="125" pos:column="30">TiXmlNode</name> <type:modifier pos:line="125" pos:column="40">*</type:modifier></type><name pos:line="125" pos:column="41">root</name></decl></param>, <param><decl><type><name pos:line="125" pos:column="47">HTREEITEM</name></type> <name pos:line="125" pos:column="57">hItem</name></decl></param>, <param><decl><type><specifier pos:line="125" pos:column="64">const</specifier> <name pos:line="125" pos:column="70">TCHAR</name><type:modifier pos:line="125" pos:column="75">*</type:modifier></type> <name pos:line="125" pos:column="77">fn2write</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="126" pos:column="9">NodeType</name></type> <name pos:line="126" pos:column="18">getNodeType</name><parameter_list pos:line="126" pos:column="29">(<param><decl><type><name pos:line="126" pos:column="30">HTREEITEM</name></type> <name pos:line="126" pos:column="40">hItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="127" pos:column="9">void</name></type> <name pos:line="127" pos:column="14">setWorkSpaceDirty</name><parameter_list pos:line="127" pos:column="31">(<param><decl><type><name pos:line="127" pos:column="32">bool</name></type> <name pos:line="127" pos:column="37">isDirty</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="128" pos:column="9">void</name></type> <name pos:line="128" pos:column="14">popupMenuCmd</name><parameter_list pos:line="128" pos:column="26">(<param><decl><type><name pos:line="128" pos:column="27">int</name></type> <name pos:line="128" pos:column="31">cmdID</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="129" pos:column="9">POINT</name></type> <name pos:line="129" pos:column="15">getMenuDisplyPoint</name><parameter_list pos:line="129" pos:column="33">(<param><decl><type><name pos:line="129" pos:column="34">int</name></type> <name pos:line="129" pos:column="38">iButton</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier pos:line="130" pos:column="9">virtual</specifier> <name pos:line="130" pos:column="17">BOOL</name> <name pos:line="130" pos:column="22">CALLBACK</name></type> <name><name pos:line="130" pos:column="31">ProjectPanel</name><op:operator pos:line="130" pos:column="43">::</op:operator><name pos:line="130" pos:column="45">run_dlgProc</name></name><parameter_list pos:line="130" pos:column="56">(<param><decl><type><name pos:line="130" pos:column="57">UINT</name></type> <name pos:line="130" pos:column="62">message</name></decl></param>, <param><decl><type><name pos:line="130" pos:column="71">WPARAM</name></type> <name pos:line="130" pos:column="78">wParam</name></decl></param>, <param><decl><type><name pos:line="130" pos:column="86">LPARAM</name></type> <name pos:line="130" pos:column="93">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="131" pos:column="9">bool</name></type> <name pos:line="131" pos:column="14">buildTreeFrom</name><parameter_list pos:line="131" pos:column="27">(<param><decl><type><name pos:line="131" pos:column="28">TiXmlNode</name> <type:modifier pos:line="131" pos:column="38">*</type:modifier></type><name pos:line="131" pos:column="39">projectRoot</name></decl></param>, <param><decl><type><name pos:line="131" pos:column="52">HTREEITEM</name></type> <name pos:line="131" pos:column="62">hParentItem</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="132" pos:column="9">void</name></type> <name pos:line="132" pos:column="14">notified</name><parameter_list pos:line="132" pos:column="22">(<param><decl><type><name pos:line="132" pos:column="23">LPNMHDR</name></type> <name pos:line="132" pos:column="31">notification</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="133" pos:column="9">void</name></type> <name pos:line="133" pos:column="14">showContextMenu</name><parameter_list pos:line="133" pos:column="29">(<param><decl><type><name pos:line="133" pos:column="30">int</name></type> <name pos:line="133" pos:column="34">x</name></decl></param>, <param><decl><type><name pos:line="133" pos:column="37">int</name></type> <name pos:line="133" pos:column="41">y</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="134" pos:column="9">generic_string</name></type> <name pos:line="134" pos:column="24">getAbsoluteFilePath</name><parameter_list pos:line="134" pos:column="43">(<param><decl><type><specifier pos:line="134" pos:column="44">const</specifier> <name pos:line="134" pos:column="50">TCHAR</name> <type:modifier pos:line="134" pos:column="56">*</type:modifier></type> <name pos:line="134" pos:column="58">relativePath</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="135" pos:column="9">void</name></type> <name pos:line="135" pos:column="14">openSelectFile</name><parameter_list pos:line="135" pos:column="28">()</parameter_list>;</function_decl>
</protected>}</block>;</class>

<class pos:line="138" pos:column="1">class <name pos:line="138" pos:column="7">FileRelocalizerDlg</name> <super pos:line="138" pos:column="26">: <specifier pos:line="138" pos:column="28">public</specifier> <name pos:line="138" pos:column="35">StaticDialog</name></super>
<block pos:line="139" pos:column="1">{<private type="default" pos:line="139" pos:column="2">
</private><public pos:line="140" pos:column="1">public :
	<constructor><name pos:line="141" pos:column="9">FileRelocalizerDlg</name><parameter_list pos:line="141" pos:column="27">()</parameter_list> <member_list pos:line="141" pos:column="30">: <call><name pos:line="141" pos:column="32">StaticDialog</name><argument_list pos:line="141" pos:column="44">()</argument_list></call> </member_list><block pos:line="141" pos:column="47">{}</block></constructor><empty_stmt pos:line="141" pos:column="49">;</empty_stmt>
	<function><type><name pos:line="142" pos:column="9">void</name></type> <name pos:line="142" pos:column="14">init</name><parameter_list pos:line="142" pos:column="18">(<param><decl><type><name pos:line="142" pos:column="19">HINSTANCE</name></type> <name pos:line="142" pos:column="29">hInst</name></decl></param>, <param><decl><type><name pos:line="142" pos:column="36">HWND</name></type> <name pos:line="142" pos:column="41">parent</name></decl></param>)</parameter_list><block pos:line="142" pos:column="48">{
		<expr_stmt><expr><call><name><name pos:line="143" pos:column="17">Window</name><op:operator pos:line="143" pos:column="23">::</op:operator><name pos:line="143" pos:column="25">init</name></name><argument_list pos:line="143" pos:column="29">(<argument><expr><name pos:line="143" pos:column="30">hInst</name></expr></argument>, <argument><expr><name pos:line="143" pos:column="37">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="144" pos:column="10">;</empty_stmt>

	<function_decl><type><name pos:line="146" pos:column="9">int</name></type> <name pos:line="146" pos:column="13">doDialog</name><parameter_list pos:line="146" pos:column="21">(<param><decl><type><specifier pos:line="146" pos:column="22">const</specifier> <name pos:line="146" pos:column="28">TCHAR</name> <type:modifier pos:line="146" pos:column="34">*</type:modifier></type><name pos:line="146" pos:column="35">fn</name></decl></param>, <param><decl><type><name pos:line="146" pos:column="39">bool</name></type> <name pos:line="146" pos:column="44">isRTL</name> <init pos:line="146" pos:column="50">= <expr><lit:literal type="boolean" pos:line="146" pos:column="52">false</lit:literal></expr></init></decl></param>)</parameter_list>;</function_decl>

    <function><type><specifier pos:line="148" pos:column="5">virtual</specifier> <name pos:line="148" pos:column="13">void</name></type> <name pos:line="148" pos:column="18">destroy</name><parameter_list pos:line="148" pos:column="25">()</parameter_list> <block pos:line="148" pos:column="28">{
    }</block></function><empty_stmt pos:line="149" pos:column="6">;</empty_stmt>

	<function><type><name pos:line="151" pos:column="9">generic_string</name></type> <name pos:line="151" pos:column="24">getFullFilePath</name><parameter_list pos:line="151" pos:column="39">()</parameter_list> <block pos:line="151" pos:column="42">{
		<return pos:line="152" pos:column="17">return <expr><name pos:line="152" pos:column="24">_fullFilePath</name></expr>;</return>
	}</block></function><empty_stmt pos:line="153" pos:column="10">;</empty_stmt>

</public><protected pos:line="155" pos:column="1">protected :
	<function_decl><type><specifier pos:line="156" pos:column="9">virtual</specifier> <name pos:line="156" pos:column="17">BOOL</name> <name pos:line="156" pos:column="22">CALLBACK</name></type> <name pos:line="156" pos:column="31">run_dlgProc</name><parameter_list pos:line="156" pos:column="42">(<param><decl><type><name pos:line="156" pos:column="43">UINT</name></type> <name pos:line="156" pos:column="48">message</name></decl></param>, <param><decl><type><name pos:line="156" pos:column="57">WPARAM</name></type> <name pos:line="156" pos:column="64">wParam</name></decl></param>, <param><decl><type><name pos:line="156" pos:column="72">LPARAM</name></type> <name pos:line="156" pos:column="79">lParam</name></decl></param>)</parameter_list>;</function_decl>

</protected><private pos:line="158" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="159" pos:column="9">generic_string</name></type> <name pos:line="159" pos:column="24">_fullFilePath</name></decl>;</decl_stmt>

</private>}</block>;</class>

<cpp:endif pos:line="163" pos:column="1">#<cpp:directive pos:line="163" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="163" pos:column="8">// PROJECTPANEL_H</comment>
</unit>
