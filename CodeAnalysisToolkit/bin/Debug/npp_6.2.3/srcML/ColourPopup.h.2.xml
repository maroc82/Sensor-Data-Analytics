<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\ColourPicker\ColourPopup.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:ifndef pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">ifndef</cpp:directive> <name pos:line="29" pos:column="9">COLOUR_POPUP_H</name></cpp:ifndef>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">COLOUR_POPUP_H</name></cpp:macro></cpp:define>

<cpp:ifndef pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">ifndef</cpp:directive> <name pos:line="32" pos:column="9">COLOUR_POPUP_RESOURCE_H</name></cpp:ifndef>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"ColourPopupResource.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="34" pos:column="8">//COLOUR_POPUP_RESOURCE_H</comment>

<cpp:ifndef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifndef</cpp:directive> <name pos:line="36" pos:column="9">RESOURCE_H</name></cpp:ifndef>
<cpp:include pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="37" pos:column="10">"resource.h"</lit:literal></cpp:file></cpp:include>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="38" pos:column="8">//RESOURCE_H</comment>

<cpp:define pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="40" pos:column="9">WM_PICKUP_COLOR</name></cpp:macro> <cpp:value pos:line="40" pos:column="25">(COLOURPOPUP_USER + 1)</cpp:value></cpp:define>
<cpp:define pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="41" pos:column="9">WM_PICKUP_CANCEL</name></cpp:macro> <cpp:value pos:line="41" pos:column="26">(COLOURPOPUP_USER + 2)</cpp:value></cpp:define>

<class pos:line="43" pos:column="1">class <name pos:line="43" pos:column="7">ColourPopup</name> <super pos:line="43" pos:column="19">: <specifier pos:line="43" pos:column="21">public</specifier> <name pos:line="43" pos:column="28">Window</name></super>
<block pos:line="44" pos:column="1">{<private type="default" pos:line="44" pos:column="2">
</private><public pos:line="45" pos:column="1">public :
    <constructor><name pos:line="46" pos:column="5">ColourPopup</name><parameter_list pos:line="46" pos:column="16">()</parameter_list> <member_list pos:line="46" pos:column="19">: <call><name pos:line="46" pos:column="21">Window</name><argument_list pos:line="46" pos:column="27">()</argument_list></call><op:operator pos:line="46" pos:column="29">,</op:operator> <call><name pos:line="46" pos:column="31">isColourChooserLaunched</name><argument_list pos:line="46" pos:column="54">(<argument><expr><lit:literal type="boolean" pos:line="46" pos:column="55">false</lit:literal></expr></argument>)</argument_list></call> </member_list><block pos:line="46" pos:column="62">{}</block></constructor><empty_stmt pos:line="46" pos:column="64">;</empty_stmt>
	<constructor><name pos:line="47" pos:column="9">ColourPopup</name><parameter_list pos:line="47" pos:column="20">(<param><decl><type><name pos:line="47" pos:column="21">COLORREF</name></type> <name pos:line="47" pos:column="30">defaultColor</name></decl></param>)</parameter_list> <member_list pos:line="47" pos:column="44">: <call><name pos:line="47" pos:column="46">Window</name><argument_list pos:line="47" pos:column="52">()</argument_list></call><op:operator pos:line="47" pos:column="54">,</op:operator> <call><name pos:line="47" pos:column="56">isColourChooserLaunched</name><argument_list pos:line="47" pos:column="79">(<argument><expr><lit:literal type="boolean" pos:line="47" pos:column="80">false</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="47" pos:column="86">,</op:operator> <call><name pos:line="47" pos:column="88">_colour</name><argument_list pos:line="47" pos:column="95">(<argument><expr><name pos:line="47" pos:column="96">defaultColor</name></expr></argument>)</argument_list></call> </member_list><block pos:line="47" pos:column="110">{}</block></constructor><empty_stmt pos:line="47" pos:column="112">;</empty_stmt>
	<destructor><name pos:line="48" pos:column="9">~<name pos:line="48" pos:column="10">ColourPopup</name></name><parameter_list pos:line="48" pos:column="21">()</parameter_list><block pos:line="48" pos:column="23">{}</block></destructor><empty_stmt pos:line="48" pos:column="25">;</empty_stmt>
	
	<function><type><name pos:line="50" pos:column="9">bool</name></type> <name pos:line="50" pos:column="14">isCreated</name><parameter_list pos:line="50" pos:column="23">()</parameter_list> <specifier pos:line="50" pos:column="26">const</specifier> <block pos:line="50" pos:column="32">{
		<return pos:line="51" pos:column="17">return <expr><op:operator pos:line="51" pos:column="24">(</op:operator><name pos:line="51" pos:column="25">_hSelf</name> <op:operator pos:line="51" pos:column="32">!=</op:operator> <name pos:line="51" pos:column="35">NULL</name><op:operator pos:line="51" pos:column="39">)</op:operator></expr>;</return>
	}</block></function><empty_stmt pos:line="52" pos:column="10">;</empty_stmt>
	
	<function_decl><type><name pos:line="54" pos:column="9">void</name></type> <name pos:line="54" pos:column="14">create</name><parameter_list pos:line="54" pos:column="20">(<param><decl><type><name pos:line="54" pos:column="21">int</name></type> <name pos:line="54" pos:column="25">dialogID</name></decl></param>)</parameter_list>;</function_decl>

        <function><type><name pos:line="56" pos:column="9">void</name></type> <name pos:line="56" pos:column="14">doDialog</name><parameter_list pos:line="56" pos:column="22">(<param><decl><type><name pos:line="56" pos:column="23">POINT</name></type> <name pos:line="56" pos:column="29">p</name></decl></param>)</parameter_list> <block pos:line="56" pos:column="32">{
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><op:operator pos:line="57" pos:column="17">!</op:operator><call><name pos:line="57" pos:column="18">isCreated</name><argument_list pos:line="57" pos:column="27">()</argument_list></call></expr>)</condition><then pos:line="57" pos:column="30">
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">create</name><argument_list pos:line="58" pos:column="23">(<argument><expr><name pos:line="58" pos:column="24">IDD_COLOUR_POPUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
            <expr_stmt><expr><call><name><op:operator pos:line="59" pos:column="13">::</op:operator><name pos:line="59" pos:column="15">SetWindowPos</name></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">_hSelf</name></expr></argument>, <argument><expr><name pos:line="59" pos:column="36">HWND_TOP</name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="46">p</name><op:operator pos:line="59" pos:column="47">.</op:operator><name pos:line="59" pos:column="48">x</name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="51">p</name><op:operator pos:line="59" pos:column="52">.</op:operator><name pos:line="59" pos:column="53">y</name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="56">_rc</name><op:operator pos:line="59" pos:column="59">.</op:operator><name pos:line="59" pos:column="60">right</name></name> <op:operator pos:line="59" pos:column="66">-</op:operator> <name><name pos:line="59" pos:column="68">_rc</name><op:operator pos:line="59" pos:column="71">.</op:operator><name pos:line="59" pos:column="72">left</name></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="78">_rc</name><op:operator pos:line="59" pos:column="81">.</op:operator><name pos:line="59" pos:column="82">bottom</name></name> <op:operator pos:line="59" pos:column="89">-</op:operator> <name><name pos:line="59" pos:column="91">_rc</name><op:operator pos:line="59" pos:column="94">.</op:operator><name pos:line="59" pos:column="95">top</name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="100">SWP_SHOWWINDOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="60" pos:column="10">;</empty_stmt>

    <function><type><specifier pos:line="62" pos:column="5">virtual</specifier> <name pos:line="62" pos:column="13">void</name></type> <name pos:line="62" pos:column="18">destroy</name><parameter_list pos:line="62" pos:column="25">()</parameter_list> <block pos:line="62" pos:column="28">{
	    <expr_stmt><expr><call><name><op:operator pos:line="63" pos:column="13">::</op:operator><name pos:line="63" pos:column="15">DestroyWindow</name></name><argument_list pos:line="63" pos:column="28">(<argument><expr><name pos:line="63" pos:column="29">_hSelf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></function><empty_stmt pos:line="64" pos:column="10">;</empty_stmt>
    <function><type><name pos:line="65" pos:column="5">COLORREF</name></type> <name pos:line="65" pos:column="14">getSelColour</name><parameter_list pos:line="65" pos:column="26">()</parameter_list><block pos:line="65" pos:column="28">{<return pos:line="65" pos:column="29">return <expr><name pos:line="65" pos:column="36">_colour</name></expr>;</return>}</block></function><empty_stmt pos:line="65" pos:column="45">;</empty_stmt>

</public><private pos:line="67" pos:column="1">private :
	<decl_stmt><decl><type><name pos:line="68" pos:column="9">RECT</name></type> <name pos:line="68" pos:column="14">_rc</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="69" pos:column="5">COLORREF</name></type> <name pos:line="69" pos:column="14">_colour</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="70" pos:column="9">bool</name></type> <name pos:line="70" pos:column="14">isColourChooserLaunched</name></decl>;</decl_stmt>

	<function_decl><type><specifier pos:line="72" pos:column="9">static</specifier> <name pos:line="72" pos:column="16">BOOL</name> <name pos:line="72" pos:column="21">CALLBACK</name></type> <name pos:line="72" pos:column="30">dlgProc</name><parameter_list pos:line="72" pos:column="37">(<param><decl><type><name pos:line="72" pos:column="38">HWND</name></type> <name pos:line="72" pos:column="43">hwnd</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="49">UINT</name></type> <name pos:line="72" pos:column="54">message</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="63">WPARAM</name></type> <name pos:line="72" pos:column="70">wParam</name></decl></param>, <param><decl><type><name pos:line="72" pos:column="78">LPARAM</name></type> <name pos:line="72" pos:column="85">lParam</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="73" pos:column="9">BOOL</name> <name pos:line="73" pos:column="14">CALLBACK</name></type> <name pos:line="73" pos:column="23">run_dlgProc</name><parameter_list pos:line="73" pos:column="34">(<param><decl><type><name pos:line="73" pos:column="35">UINT</name></type> <name pos:line="73" pos:column="40">message</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="49">WPARAM</name></type> <name pos:line="73" pos:column="56">wParam</name></decl></param>, <param><decl><type><name pos:line="73" pos:column="64">LPARAM</name></type> <name pos:line="73" pos:column="71">lParam</name></decl></param>)</parameter_list>;</function_decl>
</private>}</block>;</class>

<cpp:endif pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="line" pos:line="76" pos:column="8">//COLOUR_POPUP_H</comment>


</unit>
