<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\XPM.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file XPM.h
 ** Define a class that holds data in the X Pixmap (XPM) format.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 1998-2003 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">XPM_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">XPM_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" format="doxygen" pos:line="15" pos:column="1">/**
 * Hold a pixmap in XPM format.
 */</comment>
<class pos:line="18" pos:column="1">class <name pos:line="18" pos:column="7">XPM</name> <block pos:line="18" pos:column="11">{<private type="default" pos:line="18" pos:column="12">
	<decl_stmt><decl><type><name pos:line="19" pos:column="9">int</name></type> <name pos:line="19" pos:column="13">pid</name></decl>;</decl_stmt>		<comment type="line" pos:line="19" pos:column="33">// Assigned by container</comment>
	<decl_stmt><decl><type><name pos:line="20" pos:column="9">int</name></type> <name pos:line="20" pos:column="13">height</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="21" pos:column="9">int</name></type> <name pos:line="21" pos:column="13">width</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="22" pos:column="9">int</name></type> <name pos:line="22" pos:column="13">nColours</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="23" pos:column="9">char</name> <type:modifier pos:line="23" pos:column="14">*</type:modifier></type><name pos:line="23" pos:column="15">data</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="24" pos:column="9">char</name></type> <name pos:line="24" pos:column="14">codeTransparent</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="25" pos:column="9">char</name> <type:modifier pos:line="25" pos:column="14">*</type:modifier></type><name pos:line="25" pos:column="15">codes</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="26" pos:column="9">ColourPair</name> <type:modifier pos:line="26" pos:column="20">*</type:modifier></type><name pos:line="26" pos:column="21">colours</name></decl>;</decl_stmt>
	<function_decl><type><name pos:line="27" pos:column="9">ColourAllocated</name></type> <name pos:line="27" pos:column="25">ColourFromCode</name><parameter_list pos:line="27" pos:column="39">(<param><decl><type><name pos:line="27" pos:column="40">int</name></type> <name pos:line="27" pos:column="44">ch</name></decl></param>)</parameter_list> <specifier pos:line="27" pos:column="48">const</specifier>;</function_decl>
	<function_decl><type><name pos:line="28" pos:column="9">void</name></type> <name pos:line="28" pos:column="14">FillRun</name><parameter_list pos:line="28" pos:column="21">(<param><decl><type><name pos:line="28" pos:column="22">Surface</name> <type:modifier pos:line="28" pos:column="30">*</type:modifier></type><name pos:line="28" pos:column="31">surface</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="40">int</name></type> <name pos:line="28" pos:column="44">code</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="50">int</name></type> <name pos:line="28" pos:column="54">startX</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="62">int</name></type> <name pos:line="28" pos:column="66">y</name></decl></param>, <param><decl><type><name pos:line="28" pos:column="69">int</name></type> <name pos:line="28" pos:column="73">x</name></decl></param>)</parameter_list>;</function_decl>
	<decl_stmt><decl><type><name pos:line="29" pos:column="9">char</name> <type:modifier pos:line="29" pos:column="14">*</type:modifier><type:modifier pos:line="29" pos:column="15">*</type:modifier></type><name pos:line="29" pos:column="16">lines</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="30" pos:column="9">ColourPair</name> <type:modifier pos:line="30" pos:column="20">*</type:modifier></type><name><name pos:line="30" pos:column="21">colourCodeTable</name><index pos:line="30" pos:column="36">[<expr><lit:literal type="number" pos:line="30" pos:column="37">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
</private><public pos:line="31" pos:column="1">public:
	<constructor_decl><name pos:line="32" pos:column="9">XPM</name><parameter_list pos:line="32" pos:column="12">(<param><decl><type><specifier pos:line="32" pos:column="13">const</specifier> <name pos:line="32" pos:column="19">char</name> <type:modifier pos:line="32" pos:column="24">*</type:modifier></type><name pos:line="32" pos:column="25">textForm</name></decl></param>)</parameter_list>;</constructor_decl>
	<constructor_decl><name pos:line="33" pos:column="9">XPM</name><parameter_list pos:line="33" pos:column="12">(<param><decl><type><specifier pos:line="33" pos:column="13">const</specifier> <name pos:line="33" pos:column="19">char</name> <type:modifier pos:line="33" pos:column="24">*</type:modifier><specifier pos:line="33" pos:column="25">const</specifier> <type:modifier pos:line="33" pos:column="31">*</type:modifier></type><name pos:line="33" pos:column="32">linesForm</name></decl></param>)</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="34" pos:column="9">~<name pos:line="34" pos:column="10">XPM</name></name><parameter_list pos:line="34" pos:column="13">()</parameter_list>;</destructor_decl>
	<function_decl><type><name pos:line="35" pos:column="9">void</name></type> <name pos:line="35" pos:column="14">Init</name><parameter_list pos:line="35" pos:column="18">(<param><decl><type><specifier pos:line="35" pos:column="19">const</specifier> <name pos:line="35" pos:column="25">char</name> <type:modifier pos:line="35" pos:column="30">*</type:modifier></type><name pos:line="35" pos:column="31">textForm</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="36" pos:column="9">void</name></type> <name pos:line="36" pos:column="14">Init</name><parameter_list pos:line="36" pos:column="18">(<param><decl><type><specifier pos:line="36" pos:column="19">const</specifier> <name pos:line="36" pos:column="25">char</name> <type:modifier pos:line="36" pos:column="30">*</type:modifier><specifier pos:line="36" pos:column="31">const</specifier> <type:modifier pos:line="36" pos:column="37">*</type:modifier></type><name pos:line="36" pos:column="38">linesForm</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="37" pos:column="9">void</name></type> <name pos:line="37" pos:column="14">Clear</name><parameter_list pos:line="37" pos:column="19">()</parameter_list>;</function_decl>
	<comment type="line" format="doxygen" pos:line="38" pos:column="9">/// Similar to same named method in ViewStyle:</comment>
	<function_decl><type><name pos:line="39" pos:column="9">void</name></type> <name pos:line="39" pos:column="14">RefreshColourPalette</name><parameter_list pos:line="39" pos:column="34">(<param><decl><type><name pos:line="39" pos:column="35">Palette</name> <type:modifier pos:line="39" pos:column="43">&amp;</type:modifier></type><name pos:line="39" pos:column="44">pal</name></decl></param>, <param><decl><type><name pos:line="39" pos:column="49">bool</name></type> <name pos:line="39" pos:column="54">want</name></decl></param>)</parameter_list>;</function_decl>
	<comment type="line" format="doxygen" pos:line="40" pos:column="9">/// No palette used, so just copy the desired colours to the allocated colours</comment>
	<function_decl><type><name pos:line="41" pos:column="9">void</name></type> <name pos:line="41" pos:column="14">CopyDesiredColours</name><parameter_list pos:line="41" pos:column="32">()</parameter_list>;</function_decl>
	<comment type="line" format="doxygen" pos:line="42" pos:column="9">/// Decompose image into runs and use FillRectangle for each run</comment>
	<function_decl><type><name pos:line="43" pos:column="9">void</name></type> <name pos:line="43" pos:column="14">Draw</name><parameter_list pos:line="43" pos:column="18">(<param><decl><type><name pos:line="43" pos:column="19">Surface</name> <type:modifier pos:line="43" pos:column="27">*</type:modifier></type><name pos:line="43" pos:column="28">surface</name></decl></param>, <param><decl><type><name pos:line="43" pos:column="37">PRectangle</name> <type:modifier pos:line="43" pos:column="48">&amp;</type:modifier></type><name pos:line="43" pos:column="49">rc</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="44" pos:column="9">char</name> <type:modifier pos:line="44" pos:column="14">*</type:modifier><type:modifier pos:line="44" pos:column="15">*</type:modifier></type><name pos:line="44" pos:column="16">InLinesForm</name><parameter_list pos:line="44" pos:column="27">()</parameter_list> <block pos:line="44" pos:column="30">{ <return pos:line="44" pos:column="32">return <expr><name pos:line="44" pos:column="39">lines</name></expr>;</return> }</block></function>
	<function><type><name pos:line="45" pos:column="9">void</name></type> <name pos:line="45" pos:column="14">SetId</name><parameter_list pos:line="45" pos:column="19">(<param><decl><type><name pos:line="45" pos:column="20">int</name></type> <name pos:line="45" pos:column="24">pid_</name></decl></param>)</parameter_list> <block pos:line="45" pos:column="30">{ <expr_stmt><expr><name pos:line="45" pos:column="32">pid</name> <op:operator pos:line="45" pos:column="36">=</op:operator> <name pos:line="45" pos:column="38">pid_</name></expr>;</expr_stmt> }</block></function>
	<function><type><name pos:line="46" pos:column="9">int</name></type> <name pos:line="46" pos:column="13">GetId</name><parameter_list pos:line="46" pos:column="18">()</parameter_list> <specifier pos:line="46" pos:column="21">const</specifier> <block pos:line="46" pos:column="27">{ <return pos:line="46" pos:column="29">return <expr><name pos:line="46" pos:column="36">pid</name></expr>;</return> }</block></function>
	<function><type><name pos:line="47" pos:column="9">int</name></type> <name pos:line="47" pos:column="13">GetHeight</name><parameter_list pos:line="47" pos:column="22">()</parameter_list> <specifier pos:line="47" pos:column="25">const</specifier> <block pos:line="47" pos:column="31">{ <return pos:line="47" pos:column="33">return <expr><name pos:line="47" pos:column="40">height</name></expr>;</return> }</block></function>
	<function><type><name pos:line="48" pos:column="9">int</name></type> <name pos:line="48" pos:column="13">GetWidth</name><parameter_list pos:line="48" pos:column="21">()</parameter_list> <specifier pos:line="48" pos:column="24">const</specifier> <block pos:line="48" pos:column="30">{ <return pos:line="48" pos:column="32">return <expr><name pos:line="48" pos:column="39">width</name></expr>;</return> }</block></function>
	<function_decl><type><specifier pos:line="49" pos:column="9">static</specifier> <specifier pos:line="49" pos:column="16">const</specifier> <name pos:line="49" pos:column="22">char</name> <type:modifier pos:line="49" pos:column="27">*</type:modifier><type:modifier pos:line="49" pos:column="28">*</type:modifier></type><name pos:line="49" pos:column="29">LinesFormFromTextForm</name><parameter_list pos:line="49" pos:column="50">(<param><decl><type><specifier pos:line="49" pos:column="51">const</specifier> <name pos:line="49" pos:column="57">char</name> <type:modifier pos:line="49" pos:column="62">*</type:modifier></type><name pos:line="49" pos:column="63">textForm</name></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>

<comment type="block" format="doxygen" pos:line="52" pos:column="1">/**
 * A collection of pixmaps indexed by integer id.
 */</comment>
<class pos:line="55" pos:column="1">class <name pos:line="55" pos:column="7">XPMSet</name> <block pos:line="55" pos:column="14">{<private type="default" pos:line="55" pos:column="15">
	<decl_stmt><decl><type><name pos:line="56" pos:column="9">XPM</name> <type:modifier pos:line="56" pos:column="13">*</type:modifier><type:modifier pos:line="56" pos:column="14">*</type:modifier></type><name pos:line="56" pos:column="15">set</name></decl>;</decl_stmt>	<comment type="line" format="doxygen" pos:line="56" pos:column="25">///&lt; The stored XPMs.</comment>
	<decl_stmt><decl><type><name pos:line="57" pos:column="9">int</name></type> <name pos:line="57" pos:column="13">len</name></decl>;</decl_stmt>	<comment type="line" format="doxygen" pos:line="57" pos:column="25">///&lt; Current number of XPMs.</comment>
	<decl_stmt><decl><type><name pos:line="58" pos:column="9">int</name></type> <name pos:line="58" pos:column="13">maximum</name></decl>;</decl_stmt>	<comment type="line" format="doxygen" pos:line="58" pos:column="25">///&lt; Current maximum number of XPMs, increased by steps if reached.</comment>
	<decl_stmt><decl><type><name pos:line="59" pos:column="9">int</name></type> <name pos:line="59" pos:column="13">height</name></decl>;</decl_stmt>	<comment type="line" format="doxygen" pos:line="59" pos:column="25">///&lt; Memorize largest height of the set.</comment>
	<decl_stmt><decl><type><name pos:line="60" pos:column="9">int</name></type> <name pos:line="60" pos:column="13">width</name></decl>;</decl_stmt>	<comment type="line" format="doxygen" pos:line="60" pos:column="25">///&lt; Memorize largest width of the set.</comment>
</private><public pos:line="61" pos:column="1">public:
	<constructor_decl><name pos:line="62" pos:column="9">XPMSet</name><parameter_list pos:line="62" pos:column="15">()</parameter_list>;</constructor_decl>
	<destructor_decl><name pos:line="63" pos:column="9">~<name pos:line="63" pos:column="10">XPMSet</name></name><parameter_list pos:line="63" pos:column="16">()</parameter_list>;</destructor_decl>
	<comment type="line" format="doxygen" pos:line="64" pos:column="9">/// Remove all XPMs.</comment>
	<function_decl><type><name pos:line="65" pos:column="9">void</name></type> <name pos:line="65" pos:column="14">Clear</name><parameter_list pos:line="65" pos:column="19">()</parameter_list>;</function_decl>
	<comment type="line" format="doxygen" pos:line="66" pos:column="9">/// Add a XPM.</comment>
	<function_decl><type><name pos:line="67" pos:column="9">void</name></type> <name pos:line="67" pos:column="14">Add</name><parameter_list pos:line="67" pos:column="17">(<param><decl><type><name pos:line="67" pos:column="18">int</name></type> <name pos:line="67" pos:column="22">id</name></decl></param>, <param><decl><type><specifier pos:line="67" pos:column="26">const</specifier> <name pos:line="67" pos:column="32">char</name> <type:modifier pos:line="67" pos:column="37">*</type:modifier></type><name pos:line="67" pos:column="38">textForm</name></decl></param>)</parameter_list>;</function_decl>
	<comment type="line" format="doxygen" pos:line="68" pos:column="9">/// Get XPM by id.</comment>
	<function_decl><type><name pos:line="69" pos:column="9">XPM</name> <type:modifier pos:line="69" pos:column="13">*</type:modifier></type><name pos:line="69" pos:column="14">Get</name><parameter_list pos:line="69" pos:column="17">(<param><decl><type><name pos:line="69" pos:column="18">int</name></type> <name pos:line="69" pos:column="22">id</name></decl></param>)</parameter_list>;</function_decl>
	<comment type="line" format="doxygen" pos:line="70" pos:column="9">/// Give the largest height of the set.</comment>
	<function_decl><type><name pos:line="71" pos:column="9">int</name></type> <name pos:line="71" pos:column="13">GetHeight</name><parameter_list pos:line="71" pos:column="22">()</parameter_list>;</function_decl>
	<comment type="line" format="doxygen" pos:line="72" pos:column="9">/// Give the largest width of the set.</comment>
	<function_decl><type><name pos:line="73" pos:column="9">int</name></type> <name pos:line="73" pos:column="13">GetWidth</name><parameter_list pos:line="73" pos:column="21">()</parameter_list>;</function_decl>
</public>}</block>;</class>

<cpp:ifdef pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">ifdef</cpp:directive> <name pos:line="76" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="78" pos:column="1">#<cpp:directive pos:line="78" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="80" pos:column="1">#<cpp:directive pos:line="80" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
