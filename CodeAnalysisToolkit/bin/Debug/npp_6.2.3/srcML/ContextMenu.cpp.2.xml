<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\contextmenu\ContextMenu.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"ContextMenu.h"</lit:literal></cpp:file></cpp:include>

<constructor><name><name pos:line="32" pos:column="1">MenuItemUnit</name><op:operator pos:line="32" pos:column="13">::</op:operator><name pos:line="32" pos:column="15">MenuItemUnit</name></name><parameter_list pos:line="32" pos:column="27">(<param><decl><type><name pos:line="32" pos:column="28">unsigned</name> <name pos:line="32" pos:column="37">long</name></type> <name pos:line="32" pos:column="42">cmdID</name></decl></param>, <param><decl><type><specifier pos:line="32" pos:column="49">const</specifier> <name pos:line="32" pos:column="55">TCHAR</name> <type:modifier pos:line="32" pos:column="61">*</type:modifier></type><name pos:line="32" pos:column="62">itemName</name></decl></param>, <param><decl><type><specifier pos:line="32" pos:column="72">const</specifier> <name pos:line="32" pos:column="78">TCHAR</name> <type:modifier pos:line="32" pos:column="84">*</type:modifier></type><name pos:line="32" pos:column="85">parentFolderName</name></decl></param>)</parameter_list> <member_list pos:line="32" pos:column="103">: <call><name pos:line="32" pos:column="105">_cmdID</name><argument_list pos:line="32" pos:column="111">(<argument><expr><name pos:line="32" pos:column="112">cmdID</name></expr></argument>)</argument_list></call>
</member_list><block pos:line="33" pos:column="1">{
	<if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><op:operator pos:line="34" pos:column="13">!</op:operator><name pos:line="34" pos:column="14">itemName</name></expr>)</condition><then pos:line="34" pos:column="23">
		<expr_stmt><expr><name pos:line="35" pos:column="17">_itemName</name> <op:operator pos:line="35" pos:column="27">=</op:operator> <call><name pos:line="35" pos:column="29">TEXT</name><argument_list pos:line="35" pos:column="33">(<argument><expr><lit:literal type="string" pos:line="35" pos:column="34">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="36" pos:column="9">else
		<expr_stmt><expr><name pos:line="37" pos:column="17">_itemName</name> <op:operator pos:line="37" pos:column="27">=</op:operator> <name pos:line="37" pos:column="29">itemName</name></expr>;</expr_stmt></else></if>

	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><op:operator pos:line="39" pos:column="13">!</op:operator><name pos:line="39" pos:column="14">parentFolderName</name></expr>)</condition><then pos:line="39" pos:column="31">
		<expr_stmt><expr><name pos:line="40" pos:column="17">_parentFolderName</name> <op:operator pos:line="40" pos:column="35">=</op:operator> <call><name pos:line="40" pos:column="37">TEXT</name><argument_list pos:line="40" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="40" pos:column="42">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="41" pos:column="9">else
		<expr_stmt><expr><name pos:line="42" pos:column="17">_parentFolderName</name> <op:operator pos:line="42" pos:column="35">=</op:operator> <name pos:line="42" pos:column="37">parentFolderName</name></expr>;</expr_stmt></else></if>
}</block></constructor>

<destructor><name><name pos:line="45" pos:column="1">ContextMenu</name><op:operator pos:line="45" pos:column="12">::</op:operator>~<name pos:line="45" pos:column="15">ContextMenu</name></name><parameter_list pos:line="45" pos:column="26">()</parameter_list>
<block pos:line="46" pos:column="1">{
	<if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">isCreated</name><argument_list pos:line="47" pos:column="22">()</argument_list></call></expr>)</condition><then pos:line="47" pos:column="25">
	<block pos:line="48" pos:column="9">{
		<for pos:line="49" pos:column="17">for (<init><decl><type><name pos:line="49" pos:column="22">size_t</name></type> <name pos:line="49" pos:column="29">i</name> <init pos:line="49" pos:column="31">= <expr><lit:literal type="number" pos:line="49" pos:column="33">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="49" pos:column="37">i</name> <op:operator pos:line="49" pos:column="39">&lt;</op:operator> <call><name><name pos:line="49" pos:column="41">_subMenus</name><op:operator pos:line="49" pos:column="50">.</op:operator><name pos:line="49" pos:column="51">size</name></name><argument_list pos:line="49" pos:column="55">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="49" pos:column="60">i</name><op:operator pos:line="49" pos:column="61">++</op:operator></expr></incr>)
			<expr_stmt><expr><call><name><op:operator pos:line="50" pos:column="25">::</op:operator><name pos:line="50" pos:column="27">DestroyMenu</name></name><argument_list pos:line="50" pos:column="38">(<argument><expr><name><name pos:line="50" pos:column="39">_subMenus</name><index pos:line="50" pos:column="48">[<expr><name pos:line="50" pos:column="49">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>
		<expr_stmt><expr><call><name><op:operator pos:line="51" pos:column="17">::</op:operator><name pos:line="51" pos:column="19">DestroyMenu</name></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">_hMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></destructor>
	
<function><type><name pos:line="55" pos:column="1">void</name></type> <name><name pos:line="55" pos:column="6">ContextMenu</name><op:operator pos:line="55" pos:column="17">::</op:operator><name pos:line="55" pos:column="19">create</name></name><parameter_list pos:line="55" pos:column="25">(<param><decl><type><name pos:line="55" pos:column="26">HWND</name></type> <name pos:line="55" pos:column="31">hParent</name></decl></param>, <param><decl><type><specifier pos:line="55" pos:column="40">const</specifier> <name><name pos:line="55" pos:column="46">vector</name><argument_list pos:line="55" pos:column="52">&lt;<argument><expr><name pos:line="55" pos:column="53">MenuItemUnit</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="55" pos:column="67">&amp;</type:modifier></type> <name pos:line="55" pos:column="69">menuItemArray</name></decl></param>)</parameter_list>
<block pos:line="56" pos:column="1">{ 
	<expr_stmt><expr><name pos:line="57" pos:column="9">_hParent</name> <op:operator pos:line="57" pos:column="18">=</op:operator> <name pos:line="57" pos:column="20">hParent</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="58" pos:column="9">_hMenu</name> <op:operator pos:line="58" pos:column="16">=</op:operator> <call><name><op:operator pos:line="58" pos:column="18">::</op:operator><name pos:line="58" pos:column="20">CreatePopupMenu</name></name><argument_list pos:line="58" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="59" pos:column="9">bool</name></type> <name pos:line="59" pos:column="14">lastIsSep</name> <init pos:line="59" pos:column="24">= <expr><lit:literal type="boolean" pos:line="59" pos:column="26">false</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="60" pos:column="9">HMENU</name></type> <name pos:line="60" pos:column="15">hParentFolder</name> <init pos:line="60" pos:column="29">= <expr><name pos:line="60" pos:column="31">NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="61" pos:column="9">generic_string</name></type> <name pos:line="61" pos:column="24">currentParentFolderStr</name> <init pos:line="61" pos:column="47">= <expr><call><name pos:line="61" pos:column="49">TEXT</name><argument_list pos:line="61" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="61" pos:column="54">""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="62" pos:column="9">int</name></type> <name pos:line="62" pos:column="13">j</name> <init pos:line="62" pos:column="15">= <expr><lit:literal type="number" pos:line="62" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>

	<for pos:line="64" pos:column="9">for (<init><decl><type><name pos:line="64" pos:column="14">size_t</name></type> <name pos:line="64" pos:column="21">i</name> <init pos:line="64" pos:column="23">= <expr><lit:literal type="number" pos:line="64" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="64" pos:column="29">i</name> <op:operator pos:line="64" pos:column="31">&lt;</op:operator> <call><name><name pos:line="64" pos:column="33">menuItemArray</name><op:operator pos:line="64" pos:column="46">.</op:operator><name pos:line="64" pos:column="47">size</name></name><argument_list pos:line="64" pos:column="51">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="64" pos:column="56">i</name><op:operator pos:line="64" pos:column="57">++</op:operator></expr></incr>)
	<block pos:line="65" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="66" pos:column="17">const</specifier> <name pos:line="66" pos:column="23">MenuItemUnit</name> <type:modifier pos:line="66" pos:column="36">&amp;</type:modifier></type> <name pos:line="66" pos:column="38">item</name> <init pos:line="66" pos:column="43">= <expr><name><name pos:line="66" pos:column="45">menuItemArray</name><index pos:line="66" pos:column="58">[<expr><name pos:line="66" pos:column="59">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
		<if pos:line="67" pos:column="17">if <condition pos:line="67" pos:column="20">(<expr><name><name pos:line="67" pos:column="21">item</name><op:operator pos:line="67" pos:column="25">.</op:operator><name pos:line="67" pos:column="26">_parentFolderName</name></name> <op:operator pos:line="67" pos:column="44">==</op:operator> <call><name pos:line="67" pos:column="47">TEXT</name><argument_list pos:line="67" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="67" pos:column="52">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="67" pos:column="56">
		<block pos:line="68" pos:column="17">{
			<expr_stmt><expr><name pos:line="69" pos:column="25">currentParentFolderStr</name> <op:operator pos:line="69" pos:column="48">=</op:operator> <call><name pos:line="69" pos:column="50">TEXT</name><argument_list pos:line="69" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="69" pos:column="55">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="70" pos:column="25">hParentFolder</name> <op:operator pos:line="70" pos:column="39">=</op:operator> <name pos:line="70" pos:column="41">NULL</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="71" pos:column="25">j</name> <op:operator pos:line="71" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="71" pos:column="29">0</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="73" pos:column="17">else
		<block pos:line="74" pos:column="17">{
			<if pos:line="75" pos:column="25">if <condition pos:line="75" pos:column="28">(<expr><name><name pos:line="75" pos:column="29">item</name><op:operator pos:line="75" pos:column="33">.</op:operator><name pos:line="75" pos:column="34">_parentFolderName</name></name> <op:operator pos:line="75" pos:column="52">!=</op:operator> <name pos:line="75" pos:column="55">currentParentFolderStr</name></expr>)</condition><then pos:line="75" pos:column="78">
			<block pos:line="76" pos:column="25">{
				<expr_stmt><expr><name pos:line="77" pos:column="33">currentParentFolderStr</name> <op:operator pos:line="77" pos:column="56">=</op:operator> <name><name pos:line="77" pos:column="58">item</name><op:operator pos:line="77" pos:column="62">.</op:operator><name pos:line="77" pos:column="63">_parentFolderName</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="78" pos:column="33">hParentFolder</name> <op:operator pos:line="78" pos:column="47">=</op:operator> <call><name><op:operator pos:line="78" pos:column="49">::</op:operator><name pos:line="78" pos:column="51">CreateMenu</name></name><argument_list pos:line="78" pos:column="61">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="79" pos:column="33">j</name> <op:operator pos:line="79" pos:column="35">=</op:operator> <lit:literal type="number" pos:line="79" pos:column="37">0</lit:literal></expr>;</expr_stmt>

				<expr_stmt><expr><call><name><name pos:line="81" pos:column="33">_subMenus</name><op:operator pos:line="81" pos:column="42">.</op:operator><name pos:line="81" pos:column="43">push_back</name></name><argument_list pos:line="81" pos:column="52">(<argument><expr><name pos:line="81" pos:column="53">hParentFolder</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="82" pos:column="33">::</op:operator><name pos:line="82" pos:column="35">InsertMenu</name></name><argument_list pos:line="82" pos:column="45">(<argument><expr><name pos:line="82" pos:column="46">_hMenu</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="54">i</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="57">MF_BYPOSITION</name> <op:operator pos:line="82" pos:column="71">|</op:operator> <name pos:line="82" pos:column="73">MF_POPUP</name></expr></argument>, <argument><expr><op:operator pos:line="82" pos:column="83">(</op:operator><name pos:line="82" pos:column="84">UINT_PTR</name><op:operator pos:line="82" pos:column="92">)</op:operator><name pos:line="82" pos:column="93">hParentFolder</name></expr></argument>, <argument><expr><call><name><name pos:line="82" pos:column="108">currentParentFolderStr</name><op:operator pos:line="82" pos:column="130">.</op:operator><name pos:line="82" pos:column="131">c_str</name></name><argument_list pos:line="82" pos:column="136">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
		}</block></else></if>

		<decl_stmt><decl><type><name pos:line="86" pos:column="17">unsigned</name> <name pos:line="86" pos:column="26">int</name></type> <name pos:line="86" pos:column="30">flag</name> <init pos:line="86" pos:column="35">= <expr><name pos:line="86" pos:column="37">MF_BYPOSITION</name> <op:operator pos:line="86" pos:column="51">|</op:operator> <op:operator pos:line="86" pos:column="53">(</op:operator><op:operator pos:line="86" pos:column="54">(</op:operator><name><name pos:line="86" pos:column="55">item</name><op:operator pos:line="86" pos:column="59">.</op:operator><name pos:line="86" pos:column="60">_cmdID</name></name> <op:operator pos:line="86" pos:column="67">==</op:operator> <lit:literal type="number" pos:line="86" pos:column="70">0</lit:literal><op:operator pos:line="86" pos:column="71">)</op:operator><op:operator pos:line="86" pos:column="72">?</op:operator><name pos:line="86" pos:column="73">MF_SEPARATOR</name><op:operator pos:line="86" pos:column="85">:</op:operator><lit:literal type="number" pos:line="86" pos:column="86">0</lit:literal><op:operator pos:line="86" pos:column="87">)</op:operator></expr></init></decl>;</decl_stmt>
		<if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><name pos:line="87" pos:column="21">hParentFolder</name></expr>)</condition><then pos:line="87" pos:column="35">
		<block pos:line="88" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="89" pos:column="25">::</op:operator><name pos:line="89" pos:column="27">InsertMenu</name></name><argument_list pos:line="89" pos:column="37">(<argument><expr><name pos:line="89" pos:column="38">hParentFolder</name></expr></argument>, <argument><expr><name pos:line="89" pos:column="53">j</name><op:operator pos:line="89" pos:column="54">++</op:operator></expr></argument>, <argument><expr><name pos:line="89" pos:column="58">flag</name></expr></argument>, <argument><expr><name><name pos:line="89" pos:column="64">item</name><op:operator pos:line="89" pos:column="68">.</op:operator><name pos:line="89" pos:column="69">_cmdID</name></name></expr></argument>, <argument><expr><call><name><name pos:line="89" pos:column="77">item</name><op:operator pos:line="89" pos:column="81">.</op:operator><name pos:line="89" pos:column="82">_itemName</name><op:operator pos:line="89" pos:column="91">.</op:operator><name pos:line="89" pos:column="92">c_str</name></name><argument_list pos:line="89" pos:column="97">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="90" pos:column="25">lastIsSep</name> <op:operator pos:line="90" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="90" pos:column="37">false</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="92" pos:column="17">else <if pos:line="92" pos:column="22">if <condition pos:line="92" pos:column="25">(<expr><op:operator pos:line="92" pos:column="26">(</op:operator><name pos:line="92" pos:column="27">i</name> <op:operator pos:line="92" pos:column="29">==</op:operator> <lit:literal type="number" pos:line="92" pos:column="32">0</lit:literal> <op:operator pos:line="92" pos:column="34">||</op:operator> <name pos:line="92" pos:column="37">i</name> <op:operator pos:line="92" pos:column="39">==</op:operator> <call><name><name pos:line="92" pos:column="42">menuItemArray</name><op:operator pos:line="92" pos:column="55">.</op:operator><name pos:line="92" pos:column="56">size</name></name><argument_list pos:line="92" pos:column="60">()</argument_list></call> <op:operator pos:line="92" pos:column="63">-</op:operator> <lit:literal type="number" pos:line="92" pos:column="65">1</lit:literal><op:operator pos:line="92" pos:column="66">)</op:operator> <op:operator pos:line="92" pos:column="68">&amp;&amp;</op:operator> <name><name pos:line="92" pos:column="71">item</name><op:operator pos:line="92" pos:column="75">.</op:operator><name pos:line="92" pos:column="76">_cmdID</name></name> <op:operator pos:line="92" pos:column="83">==</op:operator> <lit:literal type="number" pos:line="92" pos:column="86">0</lit:literal></expr>)</condition><then pos:line="92" pos:column="88">
		<block pos:line="93" pos:column="17">{
			<expr_stmt><expr><name pos:line="94" pos:column="25">lastIsSep</name> <op:operator pos:line="94" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="94" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="96" pos:column="17">else <if pos:line="96" pos:column="22">if <condition pos:line="96" pos:column="25">(<expr><name><name pos:line="96" pos:column="26">item</name><op:operator pos:line="96" pos:column="30">.</op:operator><name pos:line="96" pos:column="31">_cmdID</name></name> <op:operator pos:line="96" pos:column="38">!=</op:operator> <lit:literal type="number" pos:line="96" pos:column="41">0</lit:literal></expr>)</condition><then pos:line="96" pos:column="43">
		<block pos:line="97" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="98" pos:column="25">::</op:operator><name pos:line="98" pos:column="27">InsertMenu</name></name><argument_list pos:line="98" pos:column="37">(<argument><expr><name pos:line="98" pos:column="38">_hMenu</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="46">i</name></expr></argument>, <argument><expr><name pos:line="98" pos:column="49">flag</name></expr></argument>, <argument><expr><name><name pos:line="98" pos:column="55">item</name><op:operator pos:line="98" pos:column="59">.</op:operator><name pos:line="98" pos:column="60">_cmdID</name></name></expr></argument>, <argument><expr><call><name><name pos:line="98" pos:column="68">item</name><op:operator pos:line="98" pos:column="72">.</op:operator><name pos:line="98" pos:column="73">_itemName</name><op:operator pos:line="98" pos:column="82">.</op:operator><name pos:line="98" pos:column="83">c_str</name></name><argument_list pos:line="98" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="99" pos:column="25">lastIsSep</name> <op:operator pos:line="99" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="99" pos:column="37">false</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="101" pos:column="17">else <if pos:line="101" pos:column="22">if <condition pos:line="101" pos:column="25">(<expr><name><name pos:line="101" pos:column="26">item</name><op:operator pos:line="101" pos:column="30">.</op:operator><name pos:line="101" pos:column="31">_cmdID</name></name> <op:operator pos:line="101" pos:column="38">==</op:operator> <lit:literal type="number" pos:line="101" pos:column="41">0</lit:literal> <op:operator pos:line="101" pos:column="43">&amp;&amp;</op:operator> <op:operator pos:line="101" pos:column="46">!</op:operator><name pos:line="101" pos:column="47">lastIsSep</name></expr>)</condition><then pos:line="101" pos:column="57">
		<block pos:line="102" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="103" pos:column="25">::</op:operator><name pos:line="103" pos:column="27">InsertMenu</name></name><argument_list pos:line="103" pos:column="37">(<argument><expr><name pos:line="103" pos:column="38">_hMenu</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="46">i</name></expr></argument>, <argument><expr><name pos:line="103" pos:column="49">flag</name></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="55">item</name><op:operator pos:line="103" pos:column="59">.</op:operator><name pos:line="103" pos:column="60">_cmdID</name></name></expr></argument>, <argument><expr><call><name><name pos:line="103" pos:column="68">item</name><op:operator pos:line="103" pos:column="72">.</op:operator><name pos:line="103" pos:column="73">_itemName</name><op:operator pos:line="103" pos:column="82">.</op:operator><name pos:line="103" pos:column="83">c_str</name></name><argument_list pos:line="103" pos:column="88">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="104" pos:column="25">lastIsSep</name> <op:operator pos:line="104" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="104" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="106" pos:column="17">else <comment type="line" pos:line="106" pos:column="22">// last item is separator and current item is separator</comment>
		<block pos:line="107" pos:column="17">{
			<expr_stmt><expr><name pos:line="108" pos:column="25">lastIsSep</name> <op:operator pos:line="108" pos:column="35">=</op:operator> <lit:literal type="boolean" pos:line="108" pos:column="37">true</lit:literal></expr>;</expr_stmt>
		}</block></else></if></else></if></else></if></else></if>
	}</block></for>
}</block></function>
	</unit>
