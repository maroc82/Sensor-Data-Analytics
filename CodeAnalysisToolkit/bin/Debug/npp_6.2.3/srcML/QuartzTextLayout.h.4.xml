<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\macosx\QuartzTextLayout.h" pos:tabs="8"><comment type="block" pos:line="1" pos:column="1">/*
 *  QuartzTextLayout.h
 *
 *  Original Code by Evan Jones on Wed Oct 02 2002.
 *  Contributors:
 *  Shane Caraveo, ActiveState
 *  Bernd Paradies, Adobe
 *
 */</comment>

<cpp:ifndef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifndef</cpp:directive> <name pos:line="11" pos:column="9">_QUARTZ_TEXT_LAYOUT_H</name></cpp:ifndef>
<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">_QUARTZ_TEXT_LAYOUT_H</name></cpp:macro></cpp:define>

<cpp:include pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">include</cpp:directive> <cpp:file pos:line="14" pos:column="10">&lt;Carbon/Carbon.h&gt;</cpp:file></cpp:include>

<cpp:include pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="16" pos:column="10">"QuartzTextStyle.h"</lit:literal></cpp:file></cpp:include>

<class pos:line="18" pos:column="1">class <name pos:line="18" pos:column="7">QuartzTextLayout</name>
<block pos:line="19" pos:column="1">{<private type="default" pos:line="19" pos:column="2">
</private><public pos:line="20" pos:column="1">public:
    <comment type="block" format="doxygen" pos:line="21" pos:column="5">/** Create a text layout for drawing on the specified context. */</comment>
    <constructor><name pos:line="22" pos:column="5">QuartzTextLayout</name><parameter_list pos:line="22" pos:column="21">( <param><decl><type><name pos:line="22" pos:column="23">CGContextRef</name></type> <name pos:line="22" pos:column="36">context</name></decl></param> )</parameter_list> <member_list pos:line="22" pos:column="46">: <call><name pos:line="22" pos:column="48">layout</name><argument_list pos:line="22" pos:column="54">( <argument><expr><name pos:line="22" pos:column="56">NULL</name></expr></argument> )</argument_list></call><op:operator pos:line="22" pos:column="62">,</op:operator> <call><name pos:line="22" pos:column="64">unicode_string</name><argument_list pos:line="22" pos:column="78">( <argument><expr><name pos:line="22" pos:column="80">NULL</name></expr></argument> )</argument_list></call><op:operator pos:line="22" pos:column="86">,</op:operator> <call><name pos:line="22" pos:column="88">unicode_length</name><argument_list pos:line="22" pos:column="102">( <argument><expr><lit:literal type="number" pos:line="22" pos:column="104">0</lit:literal></expr></argument> )</argument_list></call>
    </member_list><block pos:line="23" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">OSStatus</name></type> <name pos:line="24" pos:column="18">err</name> <init pos:line="24" pos:column="22">= <expr><call><name pos:line="24" pos:column="24">ATSUCreateTextLayout</name><argument_list pos:line="24" pos:column="44">( <argument><expr><op:operator pos:line="24" pos:column="46">&amp;</op:operator><name pos:line="24" pos:column="47">layout</name></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><lit:literal type="number" pos:line="25" pos:column="13">0</lit:literal> <op:operator pos:line="25" pos:column="15">!=</op:operator> <name pos:line="25" pos:column="18">err</name></expr>)</condition><then pos:line="25" pos:column="22">
                <expr_stmt><expr><name pos:line="26" pos:column="17">layout</name> <op:operator pos:line="26" pos:column="24">=</op:operator> <name pos:line="26" pos:column="26">NULL</name></expr>;</expr_stmt></then></if>

        <expr_stmt><expr><call><name pos:line="28" pos:column="9">setContext</name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">context</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="30" pos:column="9">ATSUAttributeTag</name></type> <name pos:line="30" pos:column="26">tag</name> <init pos:line="30" pos:column="30">= <expr><name pos:line="30" pos:column="32">kATSULineLayoutOptionsTag</name></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="31" pos:column="9">ByteCount</name></type> <name pos:line="31" pos:column="19">size</name> <init pos:line="31" pos:column="24">= <expr><sizeof pos:line="31" pos:column="26">sizeof<argument_list pos:line="31" pos:column="32">( <argument><expr><name pos:line="31" pos:column="34">ATSLineLayoutOptions</name></expr></argument> )</argument_list></sizeof></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">ATSLineLayoutOptions</name></type> <name pos:line="32" pos:column="30">rendering</name> <init pos:line="32" pos:column="40">= <expr><name pos:line="32" pos:column="42">kATSLineUseDeviceMetrics</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:line="32" pos:column="68">//| kATSLineFractDisable | kATSLineUseQDRendering</comment>
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">ATSUAttributeValuePtr</name></type> <name pos:line="33" pos:column="31">valuePtr</name> <init pos:line="33" pos:column="40">= <expr><op:operator pos:line="33" pos:column="42">&amp;</op:operator><name pos:line="33" pos:column="43">rendering</name></expr></init></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">err</name> <op:operator pos:line="34" pos:column="13">=</op:operator> <call><name pos:line="34" pos:column="15">ATSUSetLayoutControls</name><argument_list pos:line="34" pos:column="36">( <argument><expr><name pos:line="34" pos:column="38">layout</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="34" pos:column="46">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="34" pos:column="49">&amp;</op:operator><name pos:line="34" pos:column="50">tag</name></expr></argument>, <argument><expr><op:operator pos:line="34" pos:column="55">&amp;</op:operator><name pos:line="34" pos:column="56">size</name></expr></argument>, <argument><expr><op:operator pos:line="34" pos:column="62">&amp;</op:operator><name pos:line="34" pos:column="63">valuePtr</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    }</block></constructor>

    <destructor><name pos:line="37" pos:column="5">~<name pos:line="37" pos:column="6">QuartzTextLayout</name></name><parameter_list pos:line="37" pos:column="22">()</parameter_list>
    <block pos:line="38" pos:column="5">{
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">NULL</name> <op:operator pos:line="39" pos:column="18">!=</op:operator> <name pos:line="39" pos:column="21">layout</name></expr>)</condition><then pos:line="39" pos:column="28">
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">ATSUDisposeTextLayout</name><argument_list pos:line="40" pos:column="34">( <argument><expr><name pos:line="40" pos:column="36">layout</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name pos:line="41" pos:column="9">layout</name> <op:operator pos:line="41" pos:column="16">=</op:operator> <name pos:line="41" pos:column="18">NULL</name></expr>;</expr_stmt>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">( <expr><name pos:line="43" pos:column="14">unicode_string</name> <op:operator pos:line="43" pos:column="29">!=</op:operator> <name pos:line="43" pos:column="32">NULL</name></expr> )</condition><then pos:line="43" pos:column="38">
        <block pos:line="44" pos:column="9">{
            <expr_stmt><expr><op:operator pos:line="45" pos:column="13">delete</op:operator><index pos:line="45" pos:column="19">[]</index> <name pos:line="45" pos:column="22">unicode_string</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="46" pos:column="13">unicode_string</name> <op:operator pos:line="46" pos:column="28">=</op:operator> <name pos:line="46" pos:column="30">NULL</name></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="47" pos:column="13">unicode_length</name> <op:operator pos:line="47" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="47" pos:column="30">0</lit:literal></expr>;</expr_stmt>
        }</block></then></if>
    }</block></destructor>

    <comment type="block" format="doxygen" pos:line="51" pos:column="5">/** Assign a string to the text layout object. */</comment>
    <comment type="line" pos:line="52" pos:column="5">// TODO: Create a UTF8 version</comment>
    <comment type="line" pos:line="53" pos:column="5">// TODO: Optimise the ASCII version by not copying so much</comment>
    <function><type><name pos:line="54" pos:column="5">OSStatus</name></type> <name pos:line="54" pos:column="14">setText</name><parameter_list pos:line="54" pos:column="21">( <param><decl><type><specifier pos:line="54" pos:column="23">const</specifier> <name pos:line="54" pos:column="29">UInt8</name><type:modifier pos:line="54" pos:column="34">*</type:modifier></type> <name pos:line="54" pos:column="36">buffer</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="44">size_t</name></type> <name pos:line="54" pos:column="51">byteLength</name></decl></param>, <param><decl><type><name pos:line="54" pos:column="63">CFStringEncoding</name></type> <name pos:line="54" pos:column="80">encoding</name></decl></param> )</parameter_list>
    <block pos:line="55" pos:column="5">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">NULL</name> <op:operator pos:line="56" pos:column="18">==</op:operator> <name pos:line="56" pos:column="21">layout</name></expr>)</condition><then pos:line="56" pos:column="28">
                <return pos:line="57" pos:column="17">return <expr><op:operator pos:line="57" pos:column="24">-</op:operator><lit:literal type="number" pos:line="57" pos:column="25">1</lit:literal></expr>;</return></then></if>
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">CFStringRef</name></type> <name pos:line="58" pos:column="21">str</name> <init pos:line="58" pos:column="25">= <expr><call><name pos:line="58" pos:column="27">CFStringCreateWithBytes</name><argument_list pos:line="58" pos:column="50">( <argument><expr><name pos:line="58" pos:column="52">NULL</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="58">buffer</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="66">byteLength</name></expr></argument>, <argument><expr><name pos:line="58" pos:column="78">encoding</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="58" pos:column="88">false</lit:literal></expr></argument> )</argument_list></call></expr></init></decl>;</decl_stmt>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><op:operator pos:line="59" pos:column="13">!</op:operator><name pos:line="59" pos:column="14">str</name></expr>)</condition><then pos:line="59" pos:column="18">
            <return pos:line="60" pos:column="13">return <expr><op:operator pos:line="60" pos:column="20">-</op:operator><lit:literal type="number" pos:line="60" pos:column="21">1</lit:literal></expr>;</return></then></if>

        <expr_stmt><expr><name pos:line="62" pos:column="9">unicode_length</name> <op:operator pos:line="62" pos:column="24">=</op:operator> <call><name pos:line="62" pos:column="26">CFStringGetLength</name><argument_list pos:line="62" pos:column="43">( <argument><expr><name pos:line="62" pos:column="45">str</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">unicode_string</name></expr>)</condition><then pos:line="63" pos:column="28">
            <expr_stmt><expr><op:operator pos:line="64" pos:column="13">delete</op:operator><index pos:line="64" pos:column="19">[]</index> <name pos:line="64" pos:column="22">unicode_string</name></expr>;</expr_stmt></then></if>
        <expr_stmt><expr><name pos:line="65" pos:column="9">unicode_string</name> <op:operator pos:line="65" pos:column="24">=</op:operator> <op:operator pos:line="65" pos:column="26">new</op:operator> <name><name pos:line="65" pos:column="30">UniChar</name><index pos:line="65" pos:column="37">[ <expr><name pos:line="65" pos:column="39">unicode_length</name></expr> ]</index></name></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">CFStringGetCharacters</name><argument_list pos:line="66" pos:column="30">( <argument><expr><name pos:line="66" pos:column="32">str</name></expr></argument>, <argument><expr><call><name pos:line="66" pos:column="37">CFRangeMake</name><argument_list pos:line="66" pos:column="48">( <argument><expr><lit:literal type="number" pos:line="66" pos:column="50">0</lit:literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="53">unicode_length</name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><name pos:line="66" pos:column="71">unicode_string</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt><expr><call><name pos:line="68" pos:column="9">CFRelease</name><argument_list pos:line="68" pos:column="18">( <argument><expr><name pos:line="68" pos:column="20">str</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name pos:line="69" pos:column="9">str</name> <op:operator pos:line="69" pos:column="13">=</op:operator> <name pos:line="69" pos:column="15">NULL</name></expr>;</expr_stmt>

        <decl_stmt><decl><type><name pos:line="71" pos:column="9">OSStatus</name></type> <name pos:line="71" pos:column="18">err</name></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">err</name> <op:operator pos:line="72" pos:column="13">=</op:operator> <call><name pos:line="72" pos:column="15">ATSUSetTextPointerLocation</name><argument_list pos:line="72" pos:column="41">( <argument><expr><name pos:line="72" pos:column="43">layout</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="51">unicode_string</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="67">kATSUFromTextBeginning</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="91">kATSUToTextEnd</name></expr></argument>, <argument><expr><name pos:line="72" pos:column="107">unicode_length</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <if pos:line="73" pos:column="9">if<condition pos:line="73" pos:column="11">( <expr><name pos:line="73" pos:column="13">err</name> <op:operator pos:line="73" pos:column="17">!=</op:operator> <name pos:line="73" pos:column="20">noErr</name></expr> )</condition><then pos:line="73" pos:column="27"> <return pos:line="73" pos:column="28">return <expr><name pos:line="73" pos:column="35">err</name></expr>;</return></then></if>

        <comment type="line" pos:line="75" pos:column="9">// Turn on the default font fallbacks</comment>
        <return pos:line="76" pos:column="9">return <expr><call><name pos:line="76" pos:column="16">ATSUSetTransientFontMatching</name><argument_list pos:line="76" pos:column="44">( <argument><expr><name pos:line="76" pos:column="46">layout</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="76" pos:column="54">true</lit:literal></expr></argument> )</argument_list></call></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="79" pos:column="5">inline</specifier> <name pos:line="79" pos:column="12">void</name></type> <name pos:line="79" pos:column="17">setText</name><parameter_list pos:line="79" pos:column="24">( <param><decl><type><specifier pos:line="79" pos:column="26">const</specifier> <name pos:line="79" pos:column="32">UInt8</name><type:modifier pos:line="79" pos:column="37">*</type:modifier></type> <name pos:line="79" pos:column="39">buffer</name></decl></param>, <param><decl><type><name pos:line="79" pos:column="47">size_t</name></type> <name pos:line="79" pos:column="54">byteLength</name></decl></param>, <param><decl><type><specifier pos:line="79" pos:column="66">const</specifier> <name pos:line="79" pos:column="72">QuartzTextStyle</name><type:modifier pos:line="79" pos:column="87">&amp;</type:modifier></type> <name pos:line="79" pos:column="89">r</name></decl></param> )</parameter_list>
    <block pos:line="80" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="81" pos:column="9">this</name><op:operator pos:line="81" pos:column="13">-&gt;</op:operator><name pos:line="81" pos:column="15">setText</name></name><argument_list pos:line="81" pos:column="22">( <argument><expr><name pos:line="81" pos:column="24">buffer</name></expr></argument>, <argument><expr><name pos:line="81" pos:column="32">byteLength</name></expr></argument>, <argument><expr><name pos:line="81" pos:column="44">kCFStringEncodingUTF8</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">ATSUSetRunStyle</name><argument_list pos:line="82" pos:column="24">( <argument><expr><name pos:line="82" pos:column="26">layout</name></expr></argument>, <argument><expr><call><name><name pos:line="82" pos:column="34">r</name><op:operator pos:line="82" pos:column="35">.</op:operator><name pos:line="82" pos:column="36">getATSUStyle</name></name><argument_list pos:line="82" pos:column="48">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="82" pos:column="52">0</lit:literal></expr></argument>, <argument><expr><name pos:line="82" pos:column="55">unicode_length</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="doxygen" pos:line="85" pos:column="5">/** Apply the specified text style on the entire range of text. */</comment>
    <function><type><name pos:line="86" pos:column="5">void</name></type> <name pos:line="86" pos:column="10">setStyle</name><parameter_list pos:line="86" pos:column="18">( <param><decl><type><specifier pos:line="86" pos:column="20">const</specifier> <name pos:line="86" pos:column="26">QuartzTextStyle</name><type:modifier pos:line="86" pos:column="41">&amp;</type:modifier></type> <name pos:line="86" pos:column="43">style</name></decl></param> )</parameter_list>
    <block pos:line="87" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="88" pos:column="9">ATSUSetRunStyle</name><argument_list pos:line="88" pos:column="24">( <argument><expr><name pos:line="88" pos:column="26">layout</name></expr></argument>, <argument><expr><call><name><name pos:line="88" pos:column="34">style</name><op:operator pos:line="88" pos:column="39">.</op:operator><name pos:line="88" pos:column="40">getATSUStyle</name></name><argument_list pos:line="88" pos:column="52">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="88" pos:column="56">kATSUFromTextBeginning</name></expr></argument>, <argument><expr><name pos:line="88" pos:column="80">kATSUToTextEnd</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <comment type="block" format="doxygen" pos:line="91" pos:column="5">/** Draw the text layout into the current CGContext at the specified position, flipping the CGContext's Y axis if required.
    * @param x The x axis position to draw the baseline in the current CGContext.
    * @param y The y axis position to draw the baseline in the current CGContext.
    * @param flipTextYAxis If true, the CGContext's Y axis will be flipped before drawing the text, and restored afterwards. Use this when drawing in an HIView's CGContext, where the origin is the top left corner. */</comment>
    <function><type><name pos:line="95" pos:column="5">void</name></type> <name pos:line="95" pos:column="10">draw</name><parameter_list pos:line="95" pos:column="14">( <param><decl><type><name pos:line="95" pos:column="16">float</name></type> <name pos:line="95" pos:column="22">x</name></decl></param>, <param><decl><type><name pos:line="95" pos:column="25">float</name></type> <name pos:line="95" pos:column="31">y</name></decl></param>, <param><decl><type><name pos:line="95" pos:column="34">bool</name></type> <name pos:line="95" pos:column="39">flipTextYAxis</name> <init pos:line="95" pos:column="53">= <expr><lit:literal type="boolean" pos:line="95" pos:column="55">false</lit:literal></expr></init></decl></param> )</parameter_list>
    <block pos:line="96" pos:column="5">{
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">NULL</name> <op:operator pos:line="97" pos:column="18">==</op:operator> <name pos:line="97" pos:column="21">layout</name> <op:operator pos:line="97" pos:column="28">||</op:operator> <lit:literal type="number" pos:line="97" pos:column="31">0</lit:literal> <op:operator pos:line="97" pos:column="33">==</op:operator> <name pos:line="97" pos:column="36">unicode_length</name></expr>)</condition><then pos:line="97" pos:column="51">
                <return pos:line="98" pos:column="17">return;</return></then></if>
        <if pos:line="99" pos:column="9">if <condition pos:line="99" pos:column="12">( <expr><name pos:line="99" pos:column="14">flipTextYAxis</name></expr> )</condition><then pos:line="99" pos:column="29">
        <block pos:line="100" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">CGContextSaveGState</name><argument_list pos:line="101" pos:column="32">( <argument><expr><name pos:line="101" pos:column="34">gc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">CGContextScaleCTM</name><argument_list pos:line="102" pos:column="30">( <argument><expr><name pos:line="102" pos:column="32">gc</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="102" pos:column="36">1.0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="102" pos:column="41">-</op:operator><lit:literal type="number" pos:line="102" pos:column="42">1.0</lit:literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><name pos:line="103" pos:column="13">y</name> <op:operator pos:line="103" pos:column="15">=</op:operator> <op:operator pos:line="103" pos:column="17">-</op:operator><name pos:line="103" pos:column="18">y</name></expr>;</expr_stmt>
        }</block></then></if>
        
        <decl_stmt><decl><type><name pos:line="106" pos:column="9">OSStatus</name></type> <name pos:line="106" pos:column="18">err</name></decl>;</decl_stmt>
        <expr_stmt><expr><name pos:line="107" pos:column="9">err</name> <op:operator pos:line="107" pos:column="13">=</op:operator> <call><name pos:line="107" pos:column="15">ATSUDrawText</name><argument_list pos:line="107" pos:column="27">( <argument><expr><name pos:line="107" pos:column="29">layout</name></expr></argument>, <argument><expr><name pos:line="107" pos:column="37">kATSUFromTextBeginning</name></expr></argument>, <argument><expr><name pos:line="107" pos:column="61">kATSUToTextEnd</name></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="77">X2Fix</name><argument_list pos:line="107" pos:column="82">( <argument><expr><name pos:line="107" pos:column="84">x</name></expr></argument> )</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="107" pos:column="89">X2Fix</name><argument_list pos:line="107" pos:column="94">( <argument><expr><name pos:line="107" pos:column="96">y</name></expr></argument> )</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">( <expr><name pos:line="109" pos:column="14">flipTextYAxis</name></expr> )</condition><then pos:line="109" pos:column="29"> <expr_stmt><expr><call><name pos:line="109" pos:column="30">CGContextRestoreGState</name><argument_list pos:line="109" pos:column="52">( <argument><expr><name pos:line="109" pos:column="54">gc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></then></if>
    }</block></function>

    <comment type="block" format="doxygen" pos:line="112" pos:column="5">/** Sets a single text layout control on the ATSUTextLayout object.
    * @param tag The control to set.
    * @param size The size of the parameter pointed to by value.
    * @param value A pointer to the new value for the control.
    */</comment>
    <function><type><name pos:line="117" pos:column="5">void</name></type> <name pos:line="117" pos:column="10">setControl</name><parameter_list pos:line="117" pos:column="20">( <param><decl><type><name pos:line="117" pos:column="22">ATSUAttributeTag</name></type> <name pos:line="117" pos:column="39">tag</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="44">ByteCount</name></type> <name pos:line="117" pos:column="54">size</name></decl></param>, <param><decl><type><name pos:line="117" pos:column="60">ATSUAttributeValuePtr</name></type> <name pos:line="117" pos:column="82">value</name></decl></param> )</parameter_list>
    <block pos:line="118" pos:column="5">{
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">ATSUSetLayoutControls</name><argument_list pos:line="119" pos:column="30">( <argument><expr><name pos:line="119" pos:column="32">layout</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="119" pos:column="40">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="119" pos:column="43">&amp;</op:operator><name pos:line="119" pos:column="44">tag</name></expr></argument>, <argument><expr><op:operator pos:line="119" pos:column="49">&amp;</op:operator><name pos:line="119" pos:column="50">size</name></expr></argument>, <argument><expr><op:operator pos:line="119" pos:column="56">&amp;</op:operator><name pos:line="119" pos:column="57">value</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
    }</block></function>

    <function><type><name pos:line="122" pos:column="5">ATSUTextLayout</name></type> <name pos:line="122" pos:column="20">getLayout</name><parameter_list pos:line="122" pos:column="29">()</parameter_list> <block pos:line="122" pos:column="32">{
        <return pos:line="123" pos:column="9">return <expr><name pos:line="123" pos:column="16">layout</name></expr>;</return>
    }</block></function>

    <function><type><specifier pos:line="126" pos:column="5">inline</specifier> <name pos:line="126" pos:column="12">CFIndex</name></type> <name pos:line="126" pos:column="20">getLength</name><parameter_list pos:line="126" pos:column="29">()</parameter_list> <specifier pos:line="126" pos:column="32">const</specifier> <block pos:line="126" pos:column="38">{ <return pos:line="126" pos:column="40">return <expr><name pos:line="126" pos:column="47">unicode_length</name></expr>;</return> }</block></function>
    <function><type><specifier pos:line="127" pos:column="5">inline</specifier> <name pos:line="127" pos:column="12">void</name></type> <name pos:line="127" pos:column="17">setContext</name> <parameter_list pos:line="127" pos:column="28">(<param><decl><type><name pos:line="127" pos:column="29">CGContextRef</name></type> <name pos:line="127" pos:column="42">context</name></decl></param>)</parameter_list>
    <block pos:line="128" pos:column="5">{
        <expr_stmt><expr><name pos:line="129" pos:column="9">gc</name> <op:operator pos:line="129" pos:column="12">=</op:operator> <name pos:line="129" pos:column="14">context</name></expr>;</expr_stmt>
        <if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><name pos:line="130" pos:column="13">NULL</name> <op:operator pos:line="130" pos:column="18">!=</op:operator> <name pos:line="130" pos:column="21">layout</name></expr>)</condition><then pos:line="130" pos:column="28">
            <expr_stmt><expr><call><name pos:line="131" pos:column="13">setControl</name><argument_list pos:line="131" pos:column="23">( <argument><expr><name pos:line="131" pos:column="25">kATSUCGContextTag</name></expr></argument>, <argument><expr><sizeof pos:line="131" pos:column="44">sizeof<argument_list pos:line="131" pos:column="50">( <argument><expr><name pos:line="131" pos:column="52">gc</name></expr></argument> )</argument_list></sizeof></expr></argument>, <argument><expr><op:operator pos:line="131" pos:column="58">&amp;</op:operator><name pos:line="131" pos:column="59">gc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt></then></if>
    }</block></function>

</public><private pos:line="134" pos:column="1">private:
    <decl_stmt><decl><type><name pos:line="135" pos:column="5">ATSUTextLayout</name></type> <name pos:line="135" pos:column="20">layout</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="136" pos:column="5">UniChar</name><type:modifier pos:line="136" pos:column="12">*</type:modifier></type> <name pos:line="136" pos:column="14">unicode_string</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="137" pos:column="5">int</name></type> <name pos:line="137" pos:column="9">unicode_length</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><name pos:line="138" pos:column="5">CGContextRef</name></type> <name pos:line="138" pos:column="18">gc</name></decl>;</decl_stmt>
</private>}</block>;</class>

<cpp:endif pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
