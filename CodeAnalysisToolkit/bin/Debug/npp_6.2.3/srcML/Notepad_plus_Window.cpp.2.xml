<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\Notepad_plus_Window.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Notepad_plus_Window.h"</lit:literal></cpp:file></cpp:include>

<decl_stmt><decl><type><specifier pos:line="32" pos:column="1">const</specifier> <name pos:line="32" pos:column="7">TCHAR</name></type> <name><name pos:line="32" pos:column="13">Notepad_plus_Window</name><op:operator pos:line="32" pos:column="32">::</op:operator><name pos:line="32" pos:column="34">_className</name><index pos:line="32" pos:column="44">[<expr><lit:literal type="number" pos:line="32" pos:column="45">32</lit:literal></expr>]</index></name> <init pos:line="32" pos:column="49">= <expr><call><name pos:line="32" pos:column="51">TEXT</name><argument_list pos:line="32" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="32" pos:column="56">"Notepad++"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name pos:line="33" pos:column="1">HWND</name></type> <name><name pos:line="33" pos:column="6">Notepad_plus_Window</name><op:operator pos:line="33" pos:column="25">::</op:operator><name pos:line="33" pos:column="27">gNppHWND</name></name> <init pos:line="33" pos:column="36">= <expr><name pos:line="33" pos:column="38">NULL</name></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="35" pos:column="1">void</name></type> <name><name pos:line="35" pos:column="6">Notepad_plus_Window</name><op:operator pos:line="35" pos:column="25">::</op:operator><name pos:line="35" pos:column="27">init</name></name><parameter_list pos:line="35" pos:column="31">(<param><decl><type><name pos:line="35" pos:column="32">HINSTANCE</name></type> <name pos:line="35" pos:column="42">hInst</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="49">HWND</name></type> <name pos:line="35" pos:column="54">parent</name></decl></param>, <param><decl><type><specifier pos:line="35" pos:column="62">const</specifier> <name pos:line="35" pos:column="68">TCHAR</name> <type:modifier pos:line="35" pos:column="74">*</type:modifier></type><name pos:line="35" pos:column="75">cmdLine</name></decl></param>, <param><decl><type><name pos:line="35" pos:column="84">CmdLineParams</name> <type:modifier pos:line="35" pos:column="98">*</type:modifier></type><name pos:line="35" pos:column="99">cmdLineParams</name></decl></param>)</parameter_list>
<block pos:line="36" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="37" pos:column="9">time_t</name></type> <name pos:line="37" pos:column="16">timestampBegin</name> <init pos:line="37" pos:column="31">= <expr><lit:literal type="number" pos:line="37" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
	<if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">cmdLineParams</name><op:operator pos:line="38" pos:column="26">-&gt;</op:operator><name pos:line="38" pos:column="28">_showLoadingTime</name></name></expr>)</condition><then pos:line="38" pos:column="45">
		<expr_stmt><expr><name pos:line="39" pos:column="17">timestampBegin</name> <op:operator pos:line="39" pos:column="32">=</op:operator> <call><name pos:line="39" pos:column="34">time</name><argument_list pos:line="39" pos:column="38">(<argument><expr><name pos:line="39" pos:column="39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><call><name><name pos:line="41" pos:column="9">Window</name><op:operator pos:line="41" pos:column="15">::</op:operator><name pos:line="41" pos:column="17">init</name></name><argument_list pos:line="41" pos:column="21">(<argument><expr><name pos:line="41" pos:column="22">hInst</name></expr></argument>, <argument><expr><name pos:line="41" pos:column="29">parent</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">WNDCLASS</name></type> <name pos:line="42" pos:column="18">nppClass</name></decl>;</decl_stmt>

	<expr_stmt><expr><name><name pos:line="44" pos:column="9">nppClass</name><op:operator pos:line="44" pos:column="17">.</op:operator><name pos:line="44" pos:column="18">style</name></name> <op:operator pos:line="44" pos:column="24">=</op:operator> <name pos:line="44" pos:column="26">CS_BYTEALIGNWINDOW</name> <op:operator pos:line="44" pos:column="45">|</op:operator> <name pos:line="44" pos:column="47">CS_DBLCLKS</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="45" pos:column="9">nppClass</name><op:operator pos:line="45" pos:column="17">.</op:operator><name pos:line="45" pos:column="18">lpfnWndProc</name></name> <op:operator pos:line="45" pos:column="30">=</op:operator> <name pos:line="45" pos:column="32">Notepad_plus_Proc</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="46" pos:column="9">nppClass</name><op:operator pos:line="46" pos:column="17">.</op:operator><name pos:line="46" pos:column="18">cbClsExtra</name></name> <op:operator pos:line="46" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="46" pos:column="31">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="47" pos:column="9">nppClass</name><op:operator pos:line="47" pos:column="17">.</op:operator><name pos:line="47" pos:column="18">cbWndExtra</name></name> <op:operator pos:line="47" pos:column="29">=</op:operator> <lit:literal type="number" pos:line="47" pos:column="31">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="48" pos:column="9">nppClass</name><op:operator pos:line="48" pos:column="17">.</op:operator><name pos:line="48" pos:column="18">hInstance</name></name> <op:operator pos:line="48" pos:column="28">=</op:operator> <name pos:line="48" pos:column="30">_hInst</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="49" pos:column="9">nppClass</name><op:operator pos:line="49" pos:column="17">.</op:operator><name pos:line="49" pos:column="18">hIcon</name></name> <op:operator pos:line="49" pos:column="24">=</op:operator> <call><name><op:operator pos:line="49" pos:column="26">::</op:operator><name pos:line="49" pos:column="28">LoadIcon</name></name><argument_list pos:line="49" pos:column="36">(<argument><expr><name pos:line="49" pos:column="37">hInst</name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="44">MAKEINTRESOURCE</name><argument_list pos:line="49" pos:column="59">(<argument><expr><name pos:line="49" pos:column="60">IDI_M30ICON</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="50" pos:column="9">nppClass</name><op:operator pos:line="50" pos:column="17">.</op:operator><name pos:line="50" pos:column="18">hCursor</name></name> <op:operator pos:line="50" pos:column="26">=</op:operator> <call><name><op:operator pos:line="50" pos:column="28">::</op:operator><name pos:line="50" pos:column="30">LoadCursor</name></name><argument_list pos:line="50" pos:column="40">(<argument><expr><name pos:line="50" pos:column="41">NULL</name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">IDC_ARROW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="51" pos:column="9">nppClass</name><op:operator pos:line="51" pos:column="17">.</op:operator><name pos:line="51" pos:column="18">hbrBackground</name></name> <op:operator pos:line="51" pos:column="32">=</op:operator> <call><name><op:operator pos:line="51" pos:column="34">::</op:operator><name pos:line="51" pos:column="36">CreateSolidBrush</name></name><argument_list pos:line="51" pos:column="52">(<argument><expr><call><name><op:operator pos:line="51" pos:column="53">::</op:operator><name pos:line="51" pos:column="55">GetSysColor</name></name><argument_list pos:line="51" pos:column="66">(<argument><expr><name pos:line="51" pos:column="67">COLOR_MENU</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="52" pos:column="9">nppClass</name><op:operator pos:line="52" pos:column="17">.</op:operator><name pos:line="52" pos:column="18">lpszMenuName</name></name> <op:operator pos:line="52" pos:column="31">=</op:operator> <call><name pos:line="52" pos:column="33">MAKEINTRESOURCE</name><argument_list pos:line="52" pos:column="48">(<argument><expr><name pos:line="52" pos:column="49">IDR_M30_MENU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="53" pos:column="9">nppClass</name><op:operator pos:line="53" pos:column="17">.</op:operator><name pos:line="53" pos:column="18">lpszClassName</name></name> <op:operator pos:line="53" pos:column="32">=</op:operator> <name pos:line="53" pos:column="34">_className</name></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="55" pos:column="9">_isPrelaunch</name> <op:operator pos:line="55" pos:column="22">=</op:operator> <name><name pos:line="55" pos:column="24">cmdLineParams</name><op:operator pos:line="55" pos:column="37">-&gt;</op:operator><name pos:line="55" pos:column="39">_isPreLaunch</name></name></expr>;</expr_stmt>

	<if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><op:operator pos:line="57" pos:column="13">!</op:operator><call><name><op:operator pos:line="57" pos:column="14">::</op:operator><name pos:line="57" pos:column="16">RegisterClass</name></name><argument_list pos:line="57" pos:column="29">(<argument><expr><op:operator pos:line="57" pos:column="30">&amp;</op:operator><name pos:line="57" pos:column="31">nppClass</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="57" pos:column="41">
	<block pos:line="58" pos:column="9">{
		<throw pos:line="59" pos:column="17">throw <expr><call><name><name pos:line="59" pos:column="23">std</name><op:operator pos:line="59" pos:column="26">::</op:operator><name pos:line="59" pos:column="28">runtime_error</name></name><argument_list pos:line="59" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="59" pos:column="42">"Notepad_plus_Window::init : RegisterClass() function failed"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<decl_stmt><decl><type><name pos:line="62" pos:column="9">RECT</name></type> <name pos:line="62" pos:column="14">workAreaRect</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="63" pos:column="9">::</op:operator><name pos:line="63" pos:column="11">SystemParametersInfo</name></name><argument_list pos:line="63" pos:column="31">(<argument><expr><name pos:line="63" pos:column="32">SPI_GETWORKAREA</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="63" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="63" pos:column="52">&amp;</op:operator><name pos:line="63" pos:column="53">workAreaRect</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="63" pos:column="67">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="65" pos:column="9">NppParameters</name> <type:modifier pos:line="65" pos:column="23">*</type:modifier></type><name pos:line="65" pos:column="24">pNppParams</name> <init pos:line="65" pos:column="35">= <expr><call><name><name pos:line="65" pos:column="37">NppParameters</name><op:operator pos:line="65" pos:column="50">::</op:operator><name pos:line="65" pos:column="52">getInstance</name></name><argument_list pos:line="65" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="66" pos:column="9">const</specifier> <name pos:line="66" pos:column="15">NppGUI</name> <type:modifier pos:line="66" pos:column="22">&amp;</type:modifier></type> <name pos:line="66" pos:column="24">nppGUI</name> <init pos:line="66" pos:column="31">= <expr><call><name><name pos:line="66" pos:column="33">pNppParams</name><op:operator pos:line="66" pos:column="43">-&gt;</op:operator><name pos:line="66" pos:column="45">getNppGUI</name></name><argument_list pos:line="66" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">cmdLineParams</name><op:operator pos:line="68" pos:column="26">-&gt;</op:operator><name pos:line="68" pos:column="28">_isNoPlugin</name></name></expr>)</condition><then pos:line="68" pos:column="40">
		<expr_stmt><expr><call><name><name pos:line="69" pos:column="17">_notepad_plus_plus_core</name><op:operator pos:line="69" pos:column="40">.</op:operator><name pos:line="69" pos:column="41">_pluginsManager</name><op:operator pos:line="69" pos:column="56">.</op:operator><name pos:line="69" pos:column="57">disable</name></name><argument_list pos:line="69" pos:column="64">()</argument_list></call></expr>;</expr_stmt></then></if>
	
	<expr_stmt><expr><name pos:line="71" pos:column="9">_hSelf</name> <op:operator pos:line="71" pos:column="16">=</op:operator> <call><name><op:operator pos:line="71" pos:column="18">::</op:operator><name pos:line="71" pos:column="20">CreateWindowEx</name></name><argument_list pos:line="71" pos:column="34">(
					<argument><expr><name pos:line="72" pos:column="41">WS_EX_ACCEPTFILES</name> <op:operator pos:line="72" pos:column="59">|</op:operator> <op:operator pos:line="72" pos:column="61">(</op:operator><call><name><name pos:line="72" pos:column="62">_notepad_plus_plus_core</name><op:operator pos:line="72" pos:column="85">.</op:operator><name pos:line="72" pos:column="86">_nativeLangSpeaker</name><op:operator pos:line="72" pos:column="104">.</op:operator><name pos:line="72" pos:column="105">isRTL</name></name><argument_list pos:line="72" pos:column="110">()</argument_list></call><op:operator pos:line="72" pos:column="112">?</op:operator><name pos:line="72" pos:column="113">WS_EX_LAYOUTRTL</name><op:operator pos:line="72" pos:column="128">:</op:operator><lit:literal type="number" pos:line="72" pos:column="129">0</lit:literal><op:operator pos:line="72" pos:column="130">)</op:operator></expr></argument>,\
					<argument><expr><name pos:line="73" pos:column="41">_className</name></expr></argument>,\
					<argument><expr><call><name pos:line="74" pos:column="41">TEXT</name><argument_list pos:line="74" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="74" pos:column="46">"Notepad++"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,\
					<argument><expr><name pos:line="75" pos:column="41">WS_OVERLAPPEDWINDOW</name>	<op:operator pos:line="75" pos:column="65">|</op:operator> <name pos:line="75" pos:column="67">WS_CLIPCHILDREN</name></expr></argument>,\
					<comment type="line" pos:line="76" pos:column="41">// CreateWindowEx bug : set all 0 to walk around the pb</comment>
					<argument><expr><lit:literal type="number" pos:line="77" pos:column="41">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="77" pos:column="44">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="77" pos:column="47">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="77" pos:column="50">0</lit:literal></expr></argument>,\
					<argument><expr><name pos:line="78" pos:column="41">_hParent</name></expr></argument>,\
					<argument><expr><name pos:line="79" pos:column="41">NULL</name></expr></argument>,\
					<argument><expr><name pos:line="80" pos:column="41">_hInst</name></expr></argument>,\
					<argument><expr><op:operator pos:line="81" pos:column="41">(</op:operator><name pos:line="81" pos:column="42">LPVOID</name><op:operator pos:line="81" pos:column="48">)</op:operator><name pos:line="81" pos:column="49">this</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="81" pos:column="56">// pass the ptr of this instantiated object</comment>
                                   <comment type="line" pos:line="82" pos:column="36">// for retrieve it in Notepad_plus_Proc from </comment>
                                   <comment type="line" pos:line="83" pos:column="36">// the CREATESTRUCT.lpCreateParams afterward.</comment>

	<if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><op:operator pos:line="85" pos:column="13">!</op:operator><name pos:line="85" pos:column="14">_hSelf</name></expr>)</condition><then pos:line="85" pos:column="21">
	<block pos:line="86" pos:column="9">{
		<throw pos:line="87" pos:column="17">throw <expr><call><name><name pos:line="87" pos:column="23">std</name><op:operator pos:line="87" pos:column="26">::</op:operator><name pos:line="87" pos:column="28">runtime_error</name></name><argument_list pos:line="87" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="87" pos:column="42">"Notepad_plus_Window::init : CreateWindowEx() function return null"</lit:literal></expr></argument>)</argument_list></call></expr>;</throw>
	}</block></then></if>

	<expr_stmt><expr><call><name><name pos:line="90" pos:column="9">_notepad_plus_plus_core</name><op:operator pos:line="90" pos:column="32">.</op:operator><name pos:line="90" pos:column="33">staticCheckMenuAndTB</name></name><argument_list pos:line="90" pos:column="53">()</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><name pos:line="92" pos:column="9">gNppHWND</name> <op:operator pos:line="92" pos:column="18">=</op:operator> <name pos:line="92" pos:column="20">_hSelf</name></expr>;</expr_stmt>

	<comment type="line" pos:line="94" pos:column="9">// In setting the startup window position, take into account that the last-saved</comment>
	<comment type="line" pos:line="95" pos:column="9">// position might have assumed a second monitor that's no longer available.</comment>
	<decl_stmt><decl><type><name pos:line="96" pos:column="9">POINT</name></type> <name pos:line="96" pos:column="15">newUpperLeft</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="97" pos:column="9">newUpperLeft</name><op:operator pos:line="97" pos:column="21">.</op:operator><name pos:line="97" pos:column="22">x</name></name> <op:operator pos:line="97" pos:column="24">=</op:operator> <name><name pos:line="97" pos:column="26">nppGUI</name><op:operator pos:line="97" pos:column="32">.</op:operator><name pos:line="97" pos:column="33">_appPos</name><op:operator pos:line="97" pos:column="40">.</op:operator><name pos:line="97" pos:column="41">left</name></name> <op:operator pos:line="97" pos:column="46">+</op:operator> <name><name pos:line="97" pos:column="48">workAreaRect</name><op:operator pos:line="97" pos:column="60">.</op:operator><name pos:line="97" pos:column="61">left</name></name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="98" pos:column="9">newUpperLeft</name><op:operator pos:line="98" pos:column="21">.</op:operator><name pos:line="98" pos:column="22">y</name></name> <op:operator pos:line="98" pos:column="24">=</op:operator> <name><name pos:line="98" pos:column="26">nppGUI</name><op:operator pos:line="98" pos:column="32">.</op:operator><name pos:line="98" pos:column="33">_appPos</name><op:operator pos:line="98" pos:column="40">.</op:operator><name pos:line="98" pos:column="41">top</name></name> <op:operator pos:line="98" pos:column="45">+</op:operator> <name><name pos:line="98" pos:column="47">workAreaRect</name><op:operator pos:line="98" pos:column="59">.</op:operator><name pos:line="98" pos:column="60">top</name></name></expr>;</expr_stmt>

	<comment type="line" pos:line="100" pos:column="9">// GetSystemMetrics does not support the multi-monitor values on Windows NT and Windows 95.</comment>
	<decl_stmt><decl><type><name pos:line="101" pos:column="9">winVer</name></type> <name pos:line="101" pos:column="16">winVersion</name> <init pos:line="101" pos:column="27">= <expr><call><name><name pos:line="101" pos:column="29">pNppParams</name><op:operator pos:line="101" pos:column="39">-&gt;</op:operator><name pos:line="101" pos:column="41">getWinVersion</name></name><argument_list pos:line="101" pos:column="54">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="102" pos:column="9">if <condition pos:line="102" pos:column="12">(<expr><op:operator pos:line="102" pos:column="13">(</op:operator><name pos:line="102" pos:column="14">winVersion</name> <op:operator pos:line="102" pos:column="25">!=</op:operator> <name pos:line="102" pos:column="28">WV_95</name><op:operator pos:line="102" pos:column="33">)</op:operator> <op:operator pos:line="102" pos:column="35">&amp;&amp;</op:operator> <op:operator pos:line="102" pos:column="38">(</op:operator><name pos:line="102" pos:column="39">winVersion</name> <op:operator pos:line="102" pos:column="50">!=</op:operator> <name pos:line="102" pos:column="53">WV_NT</name><op:operator pos:line="102" pos:column="58">)</op:operator></expr>)</condition><then pos:line="102" pos:column="60"> 
	<block pos:line="103" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="104" pos:column="17">int</name></type> <name pos:line="104" pos:column="21">margin</name> <init pos:line="104" pos:column="28">= <expr><call><name><op:operator pos:line="104" pos:column="30">::</op:operator><name pos:line="104" pos:column="32">GetSystemMetrics</name></name><argument_list pos:line="104" pos:column="48">(<argument><expr><name pos:line="104" pos:column="49">SM_CYSMCAPTION</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="105" pos:column="17">if <condition pos:line="105" pos:column="20">(<expr><name><name pos:line="105" pos:column="21">newUpperLeft</name><op:operator pos:line="105" pos:column="33">.</op:operator><name pos:line="105" pos:column="34">x</name></name> <op:operator pos:line="105" pos:column="36">&gt;</op:operator> <call><name><op:operator pos:line="105" pos:column="38">::</op:operator><name pos:line="105" pos:column="40">GetSystemMetrics</name></name><argument_list pos:line="105" pos:column="56">(<argument><expr><name pos:line="105" pos:column="57">SM_CXVIRTUALSCREEN</name></expr></argument>)</argument_list></call><op:operator pos:line="105" pos:column="76">-</op:operator><name pos:line="105" pos:column="77">margin</name></expr>)</condition><then pos:line="105" pos:column="84">
			<expr_stmt><expr><name><name pos:line="106" pos:column="25">newUpperLeft</name><op:operator pos:line="106" pos:column="37">.</op:operator><name pos:line="106" pos:column="38">x</name></name> <op:operator pos:line="106" pos:column="40">=</op:operator> <name><name pos:line="106" pos:column="42">workAreaRect</name><op:operator pos:line="106" pos:column="54">.</op:operator><name pos:line="106" pos:column="55">right</name></name> <op:operator pos:line="106" pos:column="61">-</op:operator> <name><name pos:line="106" pos:column="63">nppGUI</name><op:operator pos:line="106" pos:column="69">.</op:operator><name pos:line="106" pos:column="70">_appPos</name><op:operator pos:line="106" pos:column="77">.</op:operator><name pos:line="106" pos:column="78">right</name></name></expr>;</expr_stmt></then></if>
		<if pos:line="107" pos:column="17">if <condition pos:line="107" pos:column="20">(<expr><name><name pos:line="107" pos:column="21">newUpperLeft</name><op:operator pos:line="107" pos:column="33">.</op:operator><name pos:line="107" pos:column="34">x</name></name> <op:operator pos:line="107" pos:column="36">+</op:operator> <name><name pos:line="107" pos:column="38">nppGUI</name><op:operator pos:line="107" pos:column="44">.</op:operator><name pos:line="107" pos:column="45">_appPos</name><op:operator pos:line="107" pos:column="52">.</op:operator><name pos:line="107" pos:column="53">right</name></name> <op:operator pos:line="107" pos:column="59">&lt;</op:operator> <call><name><op:operator pos:line="107" pos:column="61">::</op:operator><name pos:line="107" pos:column="63">GetSystemMetrics</name></name><argument_list pos:line="107" pos:column="79">(<argument><expr><name pos:line="107" pos:column="80">SM_XVIRTUALSCREEN</name></expr></argument>)</argument_list></call><op:operator pos:line="107" pos:column="98">+</op:operator><name pos:line="107" pos:column="99">margin</name></expr>)</condition><then pos:line="107" pos:column="106">
			<expr_stmt><expr><name><name pos:line="108" pos:column="25">newUpperLeft</name><op:operator pos:line="108" pos:column="37">.</op:operator><name pos:line="108" pos:column="38">x</name></name> <op:operator pos:line="108" pos:column="40">=</op:operator> <name><name pos:line="108" pos:column="42">workAreaRect</name><op:operator pos:line="108" pos:column="54">.</op:operator><name pos:line="108" pos:column="55">left</name></name></expr>;</expr_stmt></then></if>
		<if pos:line="109" pos:column="17">if <condition pos:line="109" pos:column="20">(<expr><name><name pos:line="109" pos:column="21">newUpperLeft</name><op:operator pos:line="109" pos:column="33">.</op:operator><name pos:line="109" pos:column="34">y</name></name> <op:operator pos:line="109" pos:column="36">&gt;</op:operator> <call><name><op:operator pos:line="109" pos:column="38">::</op:operator><name pos:line="109" pos:column="40">GetSystemMetrics</name></name><argument_list pos:line="109" pos:column="56">(<argument><expr><name pos:line="109" pos:column="57">SM_CYVIRTUALSCREEN</name></expr></argument>)</argument_list></call><op:operator pos:line="109" pos:column="76">-</op:operator><name pos:line="109" pos:column="77">margin</name></expr>)</condition><then pos:line="109" pos:column="84">
			<expr_stmt><expr><name><name pos:line="110" pos:column="25">newUpperLeft</name><op:operator pos:line="110" pos:column="37">.</op:operator><name pos:line="110" pos:column="38">y</name></name> <op:operator pos:line="110" pos:column="40">=</op:operator> <name><name pos:line="110" pos:column="42">workAreaRect</name><op:operator pos:line="110" pos:column="54">.</op:operator><name pos:line="110" pos:column="55">bottom</name></name> <op:operator pos:line="110" pos:column="62">-</op:operator> <name><name pos:line="110" pos:column="64">nppGUI</name><op:operator pos:line="110" pos:column="70">.</op:operator><name pos:line="110" pos:column="71">_appPos</name><op:operator pos:line="110" pos:column="78">.</op:operator><name pos:line="110" pos:column="79">bottom</name></name></expr>;</expr_stmt></then></if>
		<if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name><name pos:line="111" pos:column="21">newUpperLeft</name><op:operator pos:line="111" pos:column="33">.</op:operator><name pos:line="111" pos:column="34">y</name></name> <op:operator pos:line="111" pos:column="36">+</op:operator> <name><name pos:line="111" pos:column="38">nppGUI</name><op:operator pos:line="111" pos:column="44">.</op:operator><name pos:line="111" pos:column="45">_appPos</name><op:operator pos:line="111" pos:column="52">.</op:operator><name pos:line="111" pos:column="53">bottom</name></name> <op:operator pos:line="111" pos:column="60">&lt;</op:operator> <call><name><op:operator pos:line="111" pos:column="62">::</op:operator><name pos:line="111" pos:column="64">GetSystemMetrics</name></name><argument_list pos:line="111" pos:column="80">(<argument><expr><name pos:line="111" pos:column="81">SM_YVIRTUALSCREEN</name></expr></argument>)</argument_list></call><op:operator pos:line="111" pos:column="99">+</op:operator><name pos:line="111" pos:column="100">margin</name></expr>)</condition><then pos:line="111" pos:column="107">
			<expr_stmt><expr><name><name pos:line="112" pos:column="25">newUpperLeft</name><op:operator pos:line="112" pos:column="37">.</op:operator><name pos:line="112" pos:column="38">y</name></name> <op:operator pos:line="112" pos:column="40">=</op:operator> <name><name pos:line="112" pos:column="42">workAreaRect</name><op:operator pos:line="112" pos:column="54">.</op:operator><name pos:line="112" pos:column="55">top</name></name></expr>;</expr_stmt></then></if>
	}</block></then></if>

	<if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><call><name><name pos:line="115" pos:column="13">cmdLineParams</name><op:operator pos:line="115" pos:column="26">-&gt;</op:operator><name pos:line="115" pos:column="28">isPointValid</name></name><argument_list pos:line="115" pos:column="40">()</argument_list></call></expr>)</condition><then pos:line="115" pos:column="43">
		<expr_stmt><expr><call><name><op:operator pos:line="116" pos:column="17">::</op:operator><name pos:line="116" pos:column="19">MoveWindow</name></name><argument_list pos:line="116" pos:column="29">(<argument><expr><name pos:line="116" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="38">cmdLineParams</name><op:operator pos:line="116" pos:column="51">-&gt;</op:operator><name pos:line="116" pos:column="53">_point</name><op:operator pos:line="116" pos:column="59">.</op:operator><name pos:line="116" pos:column="60">x</name></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="63">cmdLineParams</name><op:operator pos:line="116" pos:column="76">-&gt;</op:operator><name pos:line="116" pos:column="78">_point</name><op:operator pos:line="116" pos:column="84">.</op:operator><name pos:line="116" pos:column="85">y</name></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="88">nppGUI</name><op:operator pos:line="116" pos:column="94">.</op:operator><name pos:line="116" pos:column="95">_appPos</name><op:operator pos:line="116" pos:column="102">.</op:operator><name pos:line="116" pos:column="103">right</name></name></expr></argument>, <argument><expr><name><name pos:line="116" pos:column="110">nppGUI</name><op:operator pos:line="116" pos:column="116">.</op:operator><name pos:line="116" pos:column="117">_appPos</name><op:operator pos:line="116" pos:column="124">.</op:operator><name pos:line="116" pos:column="125">bottom</name></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="133">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
	<else pos:line="117" pos:column="9">else
		<expr_stmt><expr><call><name><op:operator pos:line="118" pos:column="17">::</op:operator><name pos:line="118" pos:column="19">MoveWindow</name></name><argument_list pos:line="118" pos:column="29">(<argument><expr><name pos:line="118" pos:column="30">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="38">newUpperLeft</name><op:operator pos:line="118" pos:column="50">.</op:operator><name pos:line="118" pos:column="51">x</name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="54">newUpperLeft</name><op:operator pos:line="118" pos:column="66">.</op:operator><name pos:line="118" pos:column="67">y</name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="70">nppGUI</name><op:operator pos:line="118" pos:column="76">.</op:operator><name pos:line="118" pos:column="77">_appPos</name><op:operator pos:line="118" pos:column="84">.</op:operator><name pos:line="118" pos:column="85">right</name></name></expr></argument>, <argument><expr><name><name pos:line="118" pos:column="92">nppGUI</name><op:operator pos:line="118" pos:column="98">.</op:operator><name pos:line="118" pos:column="99">_appPos</name><op:operator pos:line="118" pos:column="106">.</op:operator><name pos:line="118" pos:column="107">bottom</name></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="115">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	
	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><name><name pos:line="120" pos:column="13">nppGUI</name><op:operator pos:line="120" pos:column="19">.</op:operator><name pos:line="120" pos:column="20">_tabStatus</name></name> <op:operator pos:line="120" pos:column="31">&amp;</op:operator> <name pos:line="120" pos:column="33">TAB_MULTILINE</name></expr>)</condition><then pos:line="120" pos:column="47">
		<expr_stmt><expr><call><name><op:operator pos:line="121" pos:column="17">::</op:operator><name pos:line="121" pos:column="19">SendMessage</name></name><argument_list pos:line="121" pos:column="30">(<argument><expr><name pos:line="121" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="39">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="121" pos:column="51">IDM_VIEW_DRAWTABBAR_MULTILINE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="121" pos:column="82">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><op:operator pos:line="123" pos:column="13">!</op:operator><name><name pos:line="123" pos:column="14">nppGUI</name><op:operator pos:line="123" pos:column="20">.</op:operator><name pos:line="123" pos:column="21">_menuBarShow</name></name></expr>)</condition><then pos:line="123" pos:column="34">
		<expr_stmt><expr><call><name><op:operator pos:line="124" pos:column="17">::</op:operator><name pos:line="124" pos:column="19">SetMenu</name></name><argument_list pos:line="124" pos:column="26">(<argument><expr><name pos:line="124" pos:column="27">_hSelf</name></expr></argument>, <argument><expr><name pos:line="124" pos:column="35">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	
	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><name><name pos:line="126" pos:column="13">cmdLineParams</name><op:operator pos:line="126" pos:column="26">-&gt;</op:operator><name pos:line="126" pos:column="28">_isNoTab</name></name> <op:operator pos:line="126" pos:column="37">||</op:operator> <op:operator pos:line="126" pos:column="40">(</op:operator><name><name pos:line="126" pos:column="41">nppGUI</name><op:operator pos:line="126" pos:column="47">.</op:operator><name pos:line="126" pos:column="48">_tabStatus</name></name> <op:operator pos:line="126" pos:column="59">&amp;</op:operator> <name pos:line="126" pos:column="61">TAB_HIDE</name><op:operator pos:line="126" pos:column="69">)</op:operator></expr>)</condition><then pos:line="126" pos:column="71">
	<block pos:line="127" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="128" pos:column="17">::</op:operator><name pos:line="128" pos:column="19">SendMessage</name></name><argument_list pos:line="128" pos:column="30">(<argument><expr><name pos:line="128" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="128" pos:column="39">NPPM_HIDETABBAR</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="128" pos:column="56">0</lit:literal></expr></argument>, <argument><expr><name pos:line="128" pos:column="59">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><name><name pos:line="131" pos:column="13">cmdLineParams</name><op:operator pos:line="131" pos:column="26">-&gt;</op:operator><name pos:line="131" pos:column="28">_alwaysOnTop</name></name></expr>)</condition><then pos:line="131" pos:column="41">
	<block pos:line="132" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="133" pos:column="17">::</op:operator><name pos:line="133" pos:column="19">SendMessage</name></name><argument_list pos:line="133" pos:column="30">(<argument><expr><name pos:line="133" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="133" pos:column="39">WM_COMMAND</name></expr></argument>, <argument><expr><name pos:line="133" pos:column="51">IDM_VIEW_ALWAYSONTOP</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="133" pos:column="73">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
    <expr_stmt><expr><name><name pos:line="135" pos:column="5">_notepad_plus_plus_core</name><op:operator pos:line="135" pos:column="28">.</op:operator><name pos:line="135" pos:column="29">_rememberThisSession</name></name> <op:operator pos:line="135" pos:column="50">=</op:operator> <op:operator pos:line="135" pos:column="52">!</op:operator><name><name pos:line="135" pos:column="53">cmdLineParams</name><op:operator pos:line="135" pos:column="66">-&gt;</op:operator><name pos:line="135" pos:column="68">_isNoSession</name></name></expr>;</expr_stmt>
	<if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><name><name pos:line="136" pos:column="13">nppGUI</name><op:operator pos:line="136" pos:column="19">.</op:operator><name pos:line="136" pos:column="20">_rememberLastSession</name></name> <op:operator pos:line="136" pos:column="41">&amp;&amp;</op:operator> <op:operator pos:line="136" pos:column="44">!</op:operator><name><name pos:line="136" pos:column="45">cmdLineParams</name><op:operator pos:line="136" pos:column="58">-&gt;</op:operator><name pos:line="136" pos:column="60">_isNoSession</name></name></expr>)</condition><then pos:line="136" pos:column="73">
	<block pos:line="137" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="138" pos:column="17">_notepad_plus_plus_core</name><op:operator pos:line="138" pos:column="40">.</op:operator><name pos:line="138" pos:column="41">loadLastSession</name></name><argument_list pos:line="138" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><op:operator pos:line="141" pos:column="13">!</op:operator><name><name pos:line="141" pos:column="14">cmdLineParams</name><op:operator pos:line="141" pos:column="27">-&gt;</op:operator><name pos:line="141" pos:column="29">_isPreLaunch</name></name></expr>)</condition><then pos:line="141" pos:column="42">
	<block pos:line="142" pos:column="9">{
		<if pos:line="143" pos:column="17">if <condition pos:line="143" pos:column="20">(<expr><call><name><name pos:line="143" pos:column="21">cmdLineParams</name><op:operator pos:line="143" pos:column="34">-&gt;</op:operator><name pos:line="143" pos:column="36">isPointValid</name></name><argument_list pos:line="143" pos:column="48">()</argument_list></call></expr>)</condition><then pos:line="143" pos:column="51">
			<expr_stmt><expr><call><name><op:operator pos:line="144" pos:column="25">::</op:operator><name pos:line="144" pos:column="27">ShowWindow</name></name><argument_list pos:line="144" pos:column="37">(<argument><expr><name pos:line="144" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="46">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="145" pos:column="17">else
			<expr_stmt><expr><call><name><op:operator pos:line="146" pos:column="25">::</op:operator><name pos:line="146" pos:column="27">ShowWindow</name></name><argument_list pos:line="146" pos:column="37">(<argument><expr><name pos:line="146" pos:column="38">_hSelf</name></expr></argument>, <argument><expr><name><name pos:line="146" pos:column="46">nppGUI</name><op:operator pos:line="146" pos:column="52">.</op:operator><name pos:line="146" pos:column="53">_isMaximized</name></name><op:operator pos:line="146" pos:column="65">?</op:operator><name pos:line="146" pos:column="66">SW_MAXIMIZE</name><op:operator pos:line="146" pos:column="77">:</op:operator><name pos:line="146" pos:column="78">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
	}</block></then>
	<else pos:line="148" pos:column="9">else
	<block pos:line="149" pos:column="9">{
		<expr_stmt><expr><name><name pos:line="150" pos:column="17">_notepad_plus_plus_core</name><op:operator pos:line="150" pos:column="40">.</op:operator><name pos:line="150" pos:column="41">_pTrayIco</name></name> <op:operator pos:line="150" pos:column="51">=</op:operator> <op:operator pos:line="150" pos:column="53">new</op:operator> <call><name pos:line="150" pos:column="57">trayIconControler</name><argument_list pos:line="150" pos:column="74">(<argument><expr><name pos:line="150" pos:column="75">_hSelf</name></expr></argument>, <argument><expr><name pos:line="150" pos:column="83">IDI_M30ICON</name></expr></argument>, <argument><expr><name pos:line="150" pos:column="96">IDC_MINIMIZED_TRAY</name></expr></argument>, <argument><expr><call><name><op:operator pos:line="150" pos:column="116">::</op:operator><name pos:line="150" pos:column="118">LoadIcon</name></name><argument_list pos:line="150" pos:column="126">(<argument><expr><name pos:line="150" pos:column="127">_hInst</name></expr></argument>, <argument><expr><call><name pos:line="150" pos:column="135">MAKEINTRESOURCE</name><argument_list pos:line="150" pos:column="150">(<argument><expr><name pos:line="150" pos:column="151">IDI_M30ICON</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="150" pos:column="166">TEXT</name><argument_list pos:line="150" pos:column="170">(<argument><expr><lit:literal type="string" pos:line="150" pos:column="171">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="151" pos:column="17">_notepad_plus_plus_core</name><op:operator pos:line="151" pos:column="40">.</op:operator><name pos:line="151" pos:column="41">_pTrayIco</name><op:operator pos:line="151" pos:column="50">-&gt;</op:operator><name pos:line="151" pos:column="52">doTrayIcon</name></name><argument_list pos:line="151" pos:column="62">(<argument><expr><name pos:line="151" pos:column="63">ADD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></else></if>

    <if pos:line="154" pos:column="5">if <condition pos:line="154" pos:column="8">(<expr><name pos:line="154" pos:column="9">cmdLine</name></expr>)</condition><then pos:line="154" pos:column="17">
    <block pos:line="155" pos:column="5">{
		<expr_stmt><expr><call><name><name pos:line="156" pos:column="17">_notepad_plus_plus_core</name><op:operator pos:line="156" pos:column="40">.</op:operator><name pos:line="156" pos:column="41">loadCommandlineParams</name></name><argument_list pos:line="156" pos:column="62">(<argument><expr><name pos:line="156" pos:column="63">cmdLine</name></expr></argument>, <argument><expr><name pos:line="156" pos:column="72">cmdLineParams</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>

	<decl_stmt><decl><type><name><name pos:line="159" pos:column="9">vector</name><argument_list pos:line="159" pos:column="15">&lt;<argument><expr><name pos:line="159" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="159" pos:column="32">fileNames</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="160" pos:column="9">vector</name><argument_list pos:line="160" pos:column="15">&lt;<argument><expr><name pos:line="160" pos:column="16">generic_string</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="160" pos:column="32">patterns</name></decl>;</decl_stmt>
	<expr_stmt><expr><call><name><name pos:line="161" pos:column="9">patterns</name><op:operator pos:line="161" pos:column="17">.</op:operator><name pos:line="161" pos:column="18">push_back</name></name><argument_list pos:line="161" pos:column="27">(<argument><expr><call><name pos:line="161" pos:column="28">TEXT</name><argument_list pos:line="161" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="161" pos:column="33">"*.xml"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<decl_stmt><decl><type><name pos:line="163" pos:column="9">generic_string</name></type> <name pos:line="163" pos:column="24">nppDir</name> <init pos:line="163" pos:column="31">= <expr><call><name><name pos:line="163" pos:column="33">pNppParams</name><op:operator pos:line="163" pos:column="43">-&gt;</op:operator><name pos:line="163" pos:column="45">getNppPath</name></name><argument_list pos:line="163" pos:column="55">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">ifdef</cpp:directive> <name pos:line="164" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="165" pos:column="9">LocalizationSwitcher</name> <type:modifier pos:line="165" pos:column="30">&amp;</type:modifier></type> <name pos:line="165" pos:column="32">localizationSwitcher</name> <init pos:line="165" pos:column="53">= <expr><call><name><name pos:line="165" pos:column="55">pNppParams</name><op:operator pos:line="165" pos:column="65">-&gt;</op:operator><name pos:line="165" pos:column="67">getLocalizationSwitcher</name></name><argument_list pos:line="165" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="166" pos:column="9">wstring</name></type> <name pos:line="166" pos:column="17">localizationDir</name> <init pos:line="166" pos:column="33">= <expr><name pos:line="166" pos:column="35">nppDir</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="167" pos:column="9">PathAppend</name><argument_list pos:line="167" pos:column="19">(<argument><expr><name pos:line="167" pos:column="20">localizationDir</name></expr></argument>, <argument><expr><call><name pos:line="167" pos:column="37">TEXT</name><argument_list pos:line="167" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="167" pos:column="42">"localization\\"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt><expr><call><name><name pos:line="169" pos:column="9">_notepad_plus_plus_core</name><op:operator pos:line="169" pos:column="32">.</op:operator><name pos:line="169" pos:column="33">getMatchedFileNames</name></name><argument_list pos:line="169" pos:column="52">(<argument><expr><call><name><name pos:line="169" pos:column="53">localizationDir</name><op:operator pos:line="169" pos:column="68">.</op:operator><name pos:line="169" pos:column="69">c_str</name></name><argument_list pos:line="169" pos:column="74">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="169" pos:column="78">patterns</name></expr></argument>, <argument><expr><name pos:line="169" pos:column="88">fileNames</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="169" pos:column="99">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="169" pos:column="106">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="170" pos:column="9">for (<init><decl><type><name pos:line="170" pos:column="14">size_t</name></type> <name pos:line="170" pos:column="21">i</name> <init pos:line="170" pos:column="23">= <expr><lit:literal type="number" pos:line="170" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="170" pos:column="29">i</name> <op:operator pos:line="170" pos:column="31">&lt;</op:operator> <call><name><name pos:line="170" pos:column="33">fileNames</name><op:operator pos:line="170" pos:column="42">.</op:operator><name pos:line="170" pos:column="43">size</name></name><argument_list pos:line="170" pos:column="47">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="170" pos:column="52">i</name><op:operator pos:line="170" pos:column="53">++</op:operator></expr></incr>)
	<block pos:line="171" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="172" pos:column="17">localizationSwitcher</name><op:operator pos:line="172" pos:column="37">.</op:operator><name pos:line="172" pos:column="38">addLanguageFromXml</name></name><argument_list pos:line="172" pos:column="56">(<argument><expr><name><name pos:line="172" pos:column="57">fileNames</name><index pos:line="172" pos:column="66">[<expr><name pos:line="172" pos:column="67">i</name></expr>]</index></name><op:operator pos:line="172" pos:column="69">.</op:operator><call><name pos:line="172" pos:column="70">c_str</name><argument_list pos:line="172" pos:column="75">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
<cpp:endif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">endif</cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name><name pos:line="176" pos:column="9">fileNames</name><op:operator pos:line="176" pos:column="18">.</op:operator><name pos:line="176" pos:column="19">clear</name></name><argument_list pos:line="176" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="177" pos:column="9">ThemeSwitcher</name> <type:modifier pos:line="177" pos:column="23">&amp;</type:modifier></type> <name pos:line="177" pos:column="25">themeSwitcher</name> <init pos:line="177" pos:column="39">= <expr><call><name><name pos:line="177" pos:column="41">pNppParams</name><op:operator pos:line="177" pos:column="51">-&gt;</op:operator><name pos:line="177" pos:column="53">getThemeSwitcher</name></name><argument_list pos:line="177" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
	
	<comment type="line" pos:line="179" pos:column="9">//  Get themes from both npp install themes dir and app data themes dir with the per user</comment>
	<comment type="line" pos:line="180" pos:column="9">//  overriding default themes of the same name.</comment>

	<decl_stmt><decl><type><name pos:line="182" pos:column="9">generic_string</name></type> <name pos:line="182" pos:column="24">themeDir</name></decl>;</decl_stmt>
    <if pos:line="183" pos:column="5">if <condition pos:line="183" pos:column="8">(<expr><call><name><name pos:line="183" pos:column="9">pNppParams</name><op:operator pos:line="183" pos:column="19">-&gt;</op:operator><name pos:line="183" pos:column="21">getAppDataNppDir</name></name><argument_list pos:line="183" pos:column="37">()</argument_list></call> <op:operator pos:line="183" pos:column="40">&amp;&amp;</op:operator> <call><name><name pos:line="183" pos:column="43">pNppParams</name><op:operator pos:line="183" pos:column="53">-&gt;</op:operator><name pos:line="183" pos:column="55">getAppDataNppDir</name></name><argument_list pos:line="183" pos:column="71">()</argument_list></call><index pos:line="183" pos:column="73">[<expr><lit:literal type="number" pos:line="183" pos:column="74">0</lit:literal></expr>]</index></expr>)</condition><then pos:line="183" pos:column="77">
    <block pos:line="184" pos:column="5">{
        <expr_stmt><expr><name pos:line="185" pos:column="9">themeDir</name> <op:operator pos:line="185" pos:column="18">=</op:operator> <call><name><name pos:line="185" pos:column="20">pNppParams</name><op:operator pos:line="185" pos:column="30">-&gt;</op:operator><name pos:line="185" pos:column="32">getAppDataNppDir</name></name><argument_list pos:line="185" pos:column="48">()</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><call><name pos:line="186" pos:column="13">PathAppend</name><argument_list pos:line="186" pos:column="23">(<argument><expr><name pos:line="186" pos:column="24">themeDir</name></expr></argument>, <argument><expr><call><name pos:line="186" pos:column="34">TEXT</name><argument_list pos:line="186" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="186" pos:column="39">"themes\\"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <expr_stmt><expr><call><name><name pos:line="187" pos:column="13">_notepad_plus_plus_core</name><op:operator pos:line="187" pos:column="36">.</op:operator><name pos:line="187" pos:column="37">getMatchedFileNames</name></name><argument_list pos:line="187" pos:column="56">(<argument><expr><call><name><name pos:line="187" pos:column="57">themeDir</name><op:operator pos:line="187" pos:column="65">.</op:operator><name pos:line="187" pos:column="66">c_str</name></name><argument_list pos:line="187" pos:column="71">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="187" pos:column="75">patterns</name></expr></argument>, <argument><expr><name pos:line="187" pos:column="85">fileNames</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="187" pos:column="96">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="187" pos:column="103">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    <for pos:line="188" pos:column="13">for (<init><decl><type><name pos:line="188" pos:column="18">size_t</name></type> <name pos:line="188" pos:column="25">i</name> <init pos:line="188" pos:column="27">= <expr><lit:literal type="number" pos:line="188" pos:column="29">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="188" pos:column="33">i</name> <op:operator pos:line="188" pos:column="35">&lt;</op:operator> <call><name><name pos:line="188" pos:column="37">fileNames</name><op:operator pos:line="188" pos:column="46">.</op:operator><name pos:line="188" pos:column="47">size</name></name><argument_list pos:line="188" pos:column="51">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="188" pos:column="56">i</name><op:operator pos:line="188" pos:column="57">++</op:operator></expr></incr>)
	    <block pos:line="189" pos:column="13">{
		    <expr_stmt><expr><call><name><name pos:line="190" pos:column="21">themeSwitcher</name><op:operator pos:line="190" pos:column="34">.</op:operator><name pos:line="190" pos:column="35">addThemeFromXml</name></name><argument_list pos:line="190" pos:column="50">(<argument><expr><name><name pos:line="190" pos:column="51">fileNames</name><index pos:line="190" pos:column="60">[<expr><name pos:line="190" pos:column="61">i</name></expr>]</index></name><op:operator pos:line="190" pos:column="63">.</op:operator><call><name pos:line="190" pos:column="64">c_str</name><argument_list pos:line="190" pos:column="69">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	    }</block></for>
    }</block></then></if>
	<expr_stmt><expr><call><name><name pos:line="193" pos:column="9">fileNames</name><op:operator pos:line="193" pos:column="18">.</op:operator><name pos:line="193" pos:column="19">clear</name></name><argument_list pos:line="193" pos:column="24">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="194" pos:column="9">themeDir</name><op:operator pos:line="194" pos:column="17">.</op:operator><name pos:line="194" pos:column="18">clear</name></name><argument_list pos:line="194" pos:column="23">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="195" pos:column="9">themeDir</name> <op:operator pos:line="195" pos:column="18">=</op:operator> <call><name><name pos:line="195" pos:column="20">nppDir</name><op:operator pos:line="195" pos:column="26">.</op:operator><name pos:line="195" pos:column="27">c_str</name></name><argument_list pos:line="195" pos:column="32">()</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:line="195" pos:column="36">// &lt;- should use the pointer to avoid the constructor of copy</comment>
	<expr_stmt><expr><call><name pos:line="196" pos:column="9">PathAppend</name><argument_list pos:line="196" pos:column="19">(<argument><expr><name pos:line="196" pos:column="20">themeDir</name></expr></argument>, <argument><expr><call><name pos:line="196" pos:column="30">TEXT</name><argument_list pos:line="196" pos:column="34">(<argument><expr><lit:literal type="string" pos:line="196" pos:column="35">"themes\\"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="197" pos:column="9">_notepad_plus_plus_core</name><op:operator pos:line="197" pos:column="32">.</op:operator><name pos:line="197" pos:column="33">getMatchedFileNames</name></name><argument_list pos:line="197" pos:column="52">(<argument><expr><call><name><name pos:line="197" pos:column="53">themeDir</name><op:operator pos:line="197" pos:column="61">.</op:operator><name pos:line="197" pos:column="62">c_str</name></name><argument_list pos:line="197" pos:column="67">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="197" pos:column="71">patterns</name></expr></argument>, <argument><expr><name pos:line="197" pos:column="81">fileNames</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="197" pos:column="92">false</lit:literal></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="197" pos:column="99">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<for pos:line="198" pos:column="9">for (<init><decl><type><name pos:line="198" pos:column="14">size_t</name></type> <name pos:line="198" pos:column="21">i</name> <init pos:line="198" pos:column="23">= <expr><lit:literal type="number" pos:line="198" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="198" pos:column="29">i</name> <op:operator pos:line="198" pos:column="31">&lt;</op:operator> <call><name><name pos:line="198" pos:column="33">fileNames</name><op:operator pos:line="198" pos:column="42">.</op:operator><name pos:line="198" pos:column="43">size</name></name><argument_list pos:line="198" pos:column="47">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="198" pos:column="52">i</name><op:operator pos:line="198" pos:column="53">++</op:operator></expr></incr>)
	<block pos:line="199" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="200" pos:column="17">generic_string</name></type> <name pos:line="200" pos:column="32">themeName</name><argument_list pos:line="200" pos:column="41">( <argument><expr><call><name><name pos:line="200" pos:column="43">themeSwitcher</name><op:operator pos:line="200" pos:column="56">.</op:operator><name pos:line="200" pos:column="57">getThemeFromXmlFileName</name></name><argument_list pos:line="200" pos:column="80">(<argument><expr><name><name pos:line="200" pos:column="81">fileNames</name><index pos:line="200" pos:column="90">[<expr><name pos:line="200" pos:column="91">i</name></expr>]</index></name><op:operator pos:line="200" pos:column="93">.</op:operator><call><name pos:line="200" pos:column="94">c_str</name><argument_list pos:line="200" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument> )</argument_list></decl>;</decl_stmt>
		<if pos:line="201" pos:column="17">if <condition pos:line="201" pos:column="20">(<expr><op:operator pos:line="201" pos:column="21">!</op:operator> <call><name><name pos:line="201" pos:column="23">themeSwitcher</name><op:operator pos:line="201" pos:column="36">.</op:operator><name pos:line="201" pos:column="37">themeNameExists</name></name><argument_list pos:line="201" pos:column="52">(<argument><expr><call><name><name pos:line="201" pos:column="53">themeName</name><op:operator pos:line="201" pos:column="62">.</op:operator><name pos:line="201" pos:column="63">c_str</name></name><argument_list pos:line="201" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr> )</condition><then pos:line="201" pos:column="73"> 
		<block pos:line="202" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="203" pos:column="25">themeSwitcher</name><op:operator pos:line="203" pos:column="38">.</op:operator><name pos:line="203" pos:column="39">addThemeFromXml</name></name><argument_list pos:line="203" pos:column="54">(<argument><expr><name><name pos:line="203" pos:column="55">fileNames</name><index pos:line="203" pos:column="64">[<expr><name pos:line="203" pos:column="65">i</name></expr>]</index></name><op:operator pos:line="203" pos:column="67">.</op:operator><call><name pos:line="203" pos:column="68">c_str</name><argument_list pos:line="203" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></for>

	<for pos:line="207" pos:column="9">for (<init><decl><type><name pos:line="207" pos:column="14">size_t</name></type> <name pos:line="207" pos:column="21">i</name> <init pos:line="207" pos:column="23">= <expr><lit:literal type="number" pos:line="207" pos:column="25">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="207" pos:column="29">i</name> <op:operator pos:line="207" pos:column="31">&lt;</op:operator> <call><name><name pos:line="207" pos:column="33">_notepad_plus_plus_core</name><op:operator pos:line="207" pos:column="56">.</op:operator><name pos:line="207" pos:column="57">_internalFuncIDs</name><op:operator pos:line="207" pos:column="73">.</op:operator><name pos:line="207" pos:column="74">size</name></name><argument_list pos:line="207" pos:column="78">()</argument_list></call></expr> ;</condition> <incr><expr><name pos:line="207" pos:column="83">i</name><op:operator pos:line="207" pos:column="84">++</op:operator></expr></incr>)
		<expr_stmt><expr><call><name><op:operator pos:line="208" pos:column="17">::</op:operator><name pos:line="208" pos:column="19">SendMessage</name></name><argument_list pos:line="208" pos:column="30">(<argument><expr><name pos:line="208" pos:column="31">_hSelf</name></expr></argument>, <argument><expr><name pos:line="208" pos:column="39">WM_COMMAND</name></expr></argument>, <argument><expr><name><name pos:line="208" pos:column="51">_notepad_plus_plus_core</name><op:operator pos:line="208" pos:column="74">.</op:operator><name pos:line="208" pos:column="75">_internalFuncIDs</name><index pos:line="208" pos:column="91">[<expr><name pos:line="208" pos:column="92">i</name></expr>]</index></name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="208" pos:column="96">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></for>

	<comment type="line" pos:line="210" pos:column="9">// Notify plugins that Notepad++ is ready</comment>
	<decl_stmt><decl><type><name pos:line="211" pos:column="9">SCNotification</name></type> <name pos:line="211" pos:column="24">scnN</name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="212" pos:column="9">scnN</name><op:operator pos:line="212" pos:column="13">.</op:operator><name pos:line="212" pos:column="14">nmhdr</name><op:operator pos:line="212" pos:column="19">.</op:operator><name pos:line="212" pos:column="20">code</name></name> <op:operator pos:line="212" pos:column="25">=</op:operator> <name pos:line="212" pos:column="27">NPPN_READY</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="213" pos:column="9">scnN</name><op:operator pos:line="213" pos:column="13">.</op:operator><name pos:line="213" pos:column="14">nmhdr</name><op:operator pos:line="213" pos:column="19">.</op:operator><name pos:line="213" pos:column="20">hwndFrom</name></name> <op:operator pos:line="213" pos:column="29">=</op:operator> <name pos:line="213" pos:column="31">_hSelf</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="214" pos:column="9">scnN</name><op:operator pos:line="214" pos:column="13">.</op:operator><name pos:line="214" pos:column="14">nmhdr</name><op:operator pos:line="214" pos:column="19">.</op:operator><name pos:line="214" pos:column="20">idFrom</name></name> <op:operator pos:line="214" pos:column="27">=</op:operator> <lit:literal type="number" pos:line="214" pos:column="29">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><name pos:line="215" pos:column="9">_notepad_plus_plus_core</name><op:operator pos:line="215" pos:column="32">.</op:operator><name pos:line="215" pos:column="33">_pluginsManager</name><op:operator pos:line="215" pos:column="48">.</op:operator><name pos:line="215" pos:column="49">notify</name></name><argument_list pos:line="215" pos:column="55">(<argument><expr><op:operator pos:line="215" pos:column="56">&amp;</op:operator><name pos:line="215" pos:column="57">scnN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="217" pos:column="9">if <condition pos:line="217" pos:column="12">(<expr><name><name pos:line="217" pos:column="13">cmdLineParams</name><op:operator pos:line="217" pos:column="26">-&gt;</op:operator><name pos:line="217" pos:column="28">_showLoadingTime</name></name></expr>)</condition><then pos:line="217" pos:column="45">
	<block pos:line="218" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="219" pos:column="17">time_t</name></type> <name pos:line="219" pos:column="24">timestampEnd</name> <init pos:line="219" pos:column="37">= <expr><call><name pos:line="219" pos:column="39">time</name><argument_list pos:line="219" pos:column="43">(<argument><expr><name pos:line="219" pos:column="44">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="220" pos:column="17">double</name></type> <name pos:line="220" pos:column="24">loadTime</name> <init pos:line="220" pos:column="33">= <expr><call><name pos:line="220" pos:column="35">difftime</name><argument_list pos:line="220" pos:column="43">(<argument><expr><name pos:line="220" pos:column="44">timestampEnd</name></expr></argument>, <argument><expr><name pos:line="220" pos:column="58">timestampBegin</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="222" pos:column="17">char</name></type> <name><name pos:line="222" pos:column="22">dest</name><index pos:line="222" pos:column="26">[<expr><lit:literal type="number" pos:line="222" pos:column="27">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="223" pos:column="17">sprintf</name><argument_list pos:line="223" pos:column="24">(<argument><expr><name pos:line="223" pos:column="25">dest</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="223" pos:column="31">"Loading time : %.2lf seconds"</lit:literal></expr></argument>, <argument><expr><name pos:line="223" pos:column="63">loadTime</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="224" pos:column="17">::</op:operator><name pos:line="224" pos:column="19">MessageBoxA</name></name><argument_list pos:line="224" pos:column="30">(<argument><expr><name pos:line="224" pos:column="31">NULL</name></expr></argument>, <argument><expr><name pos:line="224" pos:column="37">dest</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="224" pos:column="43">""</lit:literal></expr></argument>, <argument><expr><name pos:line="224" pos:column="47">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="228" pos:column="1">bool</name></type> <name><name pos:line="228" pos:column="6">Notepad_plus_Window</name><op:operator pos:line="228" pos:column="25">::</op:operator><name pos:line="228" pos:column="27">isDlgsMsg</name></name><parameter_list pos:line="228" pos:column="36">(<param><decl><type><name pos:line="228" pos:column="37">MSG</name> <type:modifier pos:line="228" pos:column="41">*</type:modifier></type><name pos:line="228" pos:column="42">msg</name></decl></param>, <param><decl><type><name pos:line="228" pos:column="47">bool</name></type> <name pos:line="228" pos:column="52">unicodeSupported</name></decl></param>)</parameter_list> <specifier pos:line="228" pos:column="70">const</specifier> 
<block pos:line="229" pos:column="1">{
	<for pos:line="230" pos:column="9">for (<init><decl><type><name pos:line="230" pos:column="14">size_t</name></type> <name pos:line="230" pos:column="21">i</name> <init pos:line="230" pos:column="23">= <expr><lit:literal type="number" pos:line="230" pos:column="25">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="230" pos:column="28">i</name> <op:operator pos:line="230" pos:column="30">&lt;</op:operator> <call><name><name pos:line="230" pos:column="32">_notepad_plus_plus_core</name><op:operator pos:line="230" pos:column="55">.</op:operator><name pos:line="230" pos:column="56">_hModelessDlgs</name><op:operator pos:line="230" pos:column="70">.</op:operator><name pos:line="230" pos:column="71">size</name></name><argument_list pos:line="230" pos:column="75">()</argument_list></call></expr>;</condition> <incr><expr><name pos:line="230" pos:column="79">i</name><op:operator pos:line="230" pos:column="80">++</op:operator></expr></incr>)
	<block pos:line="231" pos:column="9">{
		<if pos:line="232" pos:column="17">if <condition pos:line="232" pos:column="20">(<expr><name pos:line="232" pos:column="21">unicodeSupported</name><op:operator pos:line="232" pos:column="37">?</op:operator><op:operator pos:line="232" pos:column="38">(</op:operator><call><name><op:operator pos:line="232" pos:column="39">::</op:operator><name pos:line="232" pos:column="41">IsDialogMessageW</name></name><argument_list pos:line="232" pos:column="57">(<argument><expr><name><name pos:line="232" pos:column="58">_notepad_plus_plus_core</name><op:operator pos:line="232" pos:column="81">.</op:operator><name pos:line="232" pos:column="82">_hModelessDlgs</name><index pos:line="232" pos:column="96">[<expr><name pos:line="232" pos:column="97">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="101">msg</name></expr></argument>)</argument_list></call><op:operator pos:line="232" pos:column="105">)</op:operator><op:operator pos:line="232" pos:column="106">:</op:operator><op:operator pos:line="232" pos:column="107">(</op:operator><call><name><op:operator pos:line="232" pos:column="108">::</op:operator><name pos:line="232" pos:column="110">IsDialogMessageA</name></name><argument_list pos:line="232" pos:column="126">(<argument><expr><name><name pos:line="232" pos:column="127">_notepad_plus_plus_core</name><op:operator pos:line="232" pos:column="150">.</op:operator><name pos:line="232" pos:column="151">_hModelessDlgs</name><index pos:line="232" pos:column="165">[<expr><name pos:line="232" pos:column="166">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="232" pos:column="170">msg</name></expr></argument>)</argument_list></call><op:operator pos:line="232" pos:column="174">)</op:operator></expr>)</condition><then pos:line="232" pos:column="176">
			<return pos:line="233" pos:column="25">return <expr><lit:literal type="boolean" pos:line="233" pos:column="32">true</lit:literal></expr>;</return></then></if>
	}</block></for>
	<return pos:line="235" pos:column="9">return <expr><lit:literal type="boolean" pos:line="235" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>
</unit>
