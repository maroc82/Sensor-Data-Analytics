<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\localization.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Notepad_plus.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"ShortcutMapper.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"EncodingMapper.h"</lit:literal></cpp:file></cpp:include>

<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"localization.h"</lit:literal></cpp:file></cpp:include>


<function><type><name pos:line="37" pos:column="1">void</name></type> <name><name pos:line="37" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="37" pos:column="23">::</op:operator><name pos:line="37" pos:column="25">init</name></name><parameter_list pos:line="37" pos:column="29">(<param><decl><type><name pos:line="37" pos:column="30">TiXmlDocumentA</name> <type:modifier pos:line="37" pos:column="45">*</type:modifier></type><name pos:line="37" pos:column="46">nativeLangDocRootA</name></decl></param>, <param><decl><type><name pos:line="37" pos:column="66">bool</name></type> <name pos:line="37" pos:column="71">loadIfEnglish</name></decl></param>)</parameter_list>
<block pos:line="38" pos:column="1">{
	<if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><name pos:line="39" pos:column="13">nativeLangDocRootA</name></expr>)</condition><then pos:line="39" pos:column="32">
	<block pos:line="40" pos:column="9">{
		<expr_stmt><expr><name pos:line="41" pos:column="17">_nativeLangA</name> <op:operator pos:line="41" pos:column="30">=</op:operator>  <call><name><name pos:line="41" pos:column="33">nativeLangDocRootA</name><op:operator pos:line="41" pos:column="51">-&gt;</op:operator><name pos:line="41" pos:column="53">FirstChild</name></name><argument_list pos:line="41" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="41" pos:column="64">"NotepadPlus"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><name pos:line="42" pos:column="21">_nativeLangA</name></expr>)</condition><then pos:line="42" pos:column="34">
		<block pos:line="43" pos:column="17">{
			<expr_stmt><expr><name pos:line="44" pos:column="25">_nativeLangA</name> <op:operator pos:line="44" pos:column="38">=</op:operator> <call><name><name pos:line="44" pos:column="40">_nativeLangA</name><op:operator pos:line="44" pos:column="52">-&gt;</op:operator><name pos:line="44" pos:column="54">FirstChild</name></name><argument_list pos:line="44" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="44" pos:column="65">"Native-Langue"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="45" pos:column="25">if <condition pos:line="45" pos:column="28">(<expr><name pos:line="45" pos:column="29">_nativeLangA</name></expr>)</condition><then pos:line="45" pos:column="42">
			<block pos:line="46" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="47" pos:column="33">TiXmlElementA</name> <type:modifier pos:line="47" pos:column="47">*</type:modifier></type><name pos:line="47" pos:column="48">element</name> <init pos:line="47" pos:column="56">= <expr><call><name><name pos:line="47" pos:column="58">_nativeLangA</name><op:operator pos:line="47" pos:column="70">-&gt;</op:operator><name pos:line="47" pos:column="72">ToElement</name></name><argument_list pos:line="47" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="48" pos:column="33">const</specifier> <name pos:line="48" pos:column="39">char</name> <type:modifier pos:line="48" pos:column="44">*</type:modifier></type><name pos:line="48" pos:column="45">rtl</name> <init pos:line="48" pos:column="49">= <expr><call><name><name pos:line="48" pos:column="51">element</name><op:operator pos:line="48" pos:column="58">-&gt;</op:operator><name pos:line="48" pos:column="60">Attribute</name></name><argument_list pos:line="48" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="48" pos:column="70">"RTL"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="49" pos:column="33">if <condition pos:line="49" pos:column="36">(<expr><name pos:line="49" pos:column="37">rtl</name></expr>)</condition><then pos:line="49" pos:column="41">
					<expr_stmt><expr><name pos:line="50" pos:column="41">_isRTL</name> <op:operator pos:line="50" pos:column="48">=</op:operator> <op:operator pos:line="50" pos:column="50">(</op:operator><call><name pos:line="50" pos:column="51">strcmp</name><argument_list pos:line="50" pos:column="57">(<argument><expr><name pos:line="50" pos:column="58">rtl</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="50" pos:column="63">"yes"</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="50" pos:column="70">==</op:operator> <lit:literal type="number" pos:line="50" pos:column="73">0</lit:literal><op:operator pos:line="50" pos:column="74">)</op:operator></expr>;</expr_stmt></then>
                <else pos:line="51" pos:column="17">else
                    <expr_stmt><expr><name pos:line="52" pos:column="21">_isRTL</name> <op:operator pos:line="52" pos:column="28">=</op:operator> <lit:literal type="boolean" pos:line="52" pos:column="30">false</lit:literal></expr>;</expr_stmt></else></if>

                <comment type="line" pos:line="54" pos:column="17">// get original file name (defined by Notpad++) from the attribute</comment>
                <expr_stmt><expr><name pos:line="55" pos:column="17">_fileName</name> <op:operator pos:line="55" pos:column="27">=</op:operator> <call><name><name pos:line="55" pos:column="29">element</name><op:operator pos:line="55" pos:column="36">-&gt;</op:operator><name pos:line="55" pos:column="38">Attribute</name></name><argument_list pos:line="55" pos:column="47">(<argument><expr><lit:literal type="string" pos:line="55" pos:column="48">"filename"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

				<if pos:line="57" pos:column="33">if <condition pos:line="57" pos:column="36">(<expr><op:operator pos:line="57" pos:column="37">!</op:operator><name pos:line="57" pos:column="38">loadIfEnglish</name> <op:operator pos:line="57" pos:column="52">&amp;&amp;</op:operator> <name pos:line="57" pos:column="55">_fileName</name> <op:operator pos:line="57" pos:column="65">&amp;&amp;</op:operator> <call><name pos:line="57" pos:column="68">stricmp</name><argument_list pos:line="57" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="57" pos:column="76">"english.xml"</lit:literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="91">_fileName</name></expr></argument>)</argument_list></call> <op:operator pos:line="57" pos:column="102">==</op:operator> <lit:literal type="number" pos:line="57" pos:column="105">0</lit:literal></expr>)</condition><then pos:line="57" pos:column="107">
                <block pos:line="58" pos:column="17">{
					<expr_stmt><expr><name pos:line="59" pos:column="41">_nativeLangA</name> <op:operator pos:line="59" pos:column="54">=</op:operator> <name pos:line="59" pos:column="56">NULL</name></expr>;</expr_stmt>
					<return pos:line="60" pos:column="41">return;</return>
				}</block></then></if>
				<comment type="line" pos:line="62" pos:column="33">// get encoding</comment>
				<decl_stmt><decl><type><name pos:line="63" pos:column="33">TiXmlDeclarationA</name> <type:modifier pos:line="63" pos:column="51">*</type:modifier></type><name pos:line="63" pos:column="52">declaration</name> <init pos:line="63" pos:column="64">=  <expr><call><name><name pos:line="63" pos:column="67">_nativeLangA</name><op:operator pos:line="63" pos:column="79">-&gt;</op:operator><name pos:line="63" pos:column="81">GetDocument</name></name><argument_list pos:line="63" pos:column="92">()</argument_list></call><op:operator pos:line="63" pos:column="94">-&gt;</op:operator><call><name pos:line="63" pos:column="96">FirstChild</name><argument_list pos:line="63" pos:column="106">()</argument_list></call><op:operator pos:line="63" pos:column="108">-&gt;</op:operator><call><name pos:line="63" pos:column="110">ToDeclaration</name><argument_list pos:line="63" pos:column="123">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="64" pos:column="33">if <condition pos:line="64" pos:column="36">(<expr><name pos:line="64" pos:column="37">declaration</name></expr>)</condition><then pos:line="64" pos:column="49">
				<block pos:line="65" pos:column="33">{
					<decl_stmt><decl><type><specifier pos:line="66" pos:column="41">const</specifier> <name pos:line="66" pos:column="47">char</name> <type:modifier pos:line="66" pos:column="52">*</type:modifier></type> <name pos:line="66" pos:column="54">encodingStr</name> <init pos:line="66" pos:column="66">= <expr><call><name><name pos:line="66" pos:column="68">declaration</name><op:operator pos:line="66" pos:column="79">-&gt;</op:operator><name pos:line="66" pos:column="81">Encoding</name></name><argument_list pos:line="66" pos:column="89">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="67" pos:column="41">EncodingMapper</name> <type:modifier pos:line="67" pos:column="56">*</type:modifier></type><name pos:line="67" pos:column="57">em</name> <init pos:line="67" pos:column="60">= <expr><call><name><name pos:line="67" pos:column="62">EncodingMapper</name><op:operator pos:line="67" pos:column="76">::</op:operator><name pos:line="67" pos:column="78">getInstance</name></name><argument_list pos:line="67" pos:column="89">()</argument_list></call></expr></init></decl>;</decl_stmt>
                    <decl_stmt><decl><type><name pos:line="68" pos:column="21">int</name></type> <name pos:line="68" pos:column="25">enc</name> <init pos:line="68" pos:column="29">= <expr><call><name><name pos:line="68" pos:column="31">em</name><op:operator pos:line="68" pos:column="33">-&gt;</op:operator><name pos:line="68" pos:column="35">getEncodingFromString</name></name><argument_list pos:line="68" pos:column="56">(<argument><expr><name pos:line="68" pos:column="57">encodingStr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
                    <expr_stmt><expr><name pos:line="69" pos:column="21">_nativeLangEncoding</name> <op:operator pos:line="69" pos:column="41">=</op:operator> <op:operator pos:line="69" pos:column="43">(</op:operator><name pos:line="69" pos:column="44">enc</name> <op:operator pos:line="69" pos:column="48">!=</op:operator> <op:operator pos:line="69" pos:column="51">-</op:operator><lit:literal type="number" pos:line="69" pos:column="52">1</lit:literal><op:operator pos:line="69" pos:column="53">)</op:operator><op:operator pos:line="69" pos:column="54">?</op:operator><name pos:line="69" pos:column="55">enc</name><op:operator pos:line="69" pos:column="58">:</op:operator><name pos:line="69" pos:column="59">CP_ACP</name></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then></if>	
		}</block></then></if>
    }</block></then></if>
}</block></function>

<function><type><name pos:line="76" pos:column="1">generic_string</name></type> <name><name pos:line="76" pos:column="16">NativeLangSpeaker</name><op:operator pos:line="76" pos:column="33">::</op:operator><name pos:line="76" pos:column="35">getSpecialMenuEntryName</name></name><parameter_list pos:line="76" pos:column="58">(<param><decl><type><specifier pos:line="76" pos:column="59">const</specifier> <name pos:line="76" pos:column="65">char</name> <type:modifier pos:line="76" pos:column="70">*</type:modifier></type><name pos:line="76" pos:column="71">entryName</name></decl></param>)</parameter_list>
<block pos:line="77" pos:column="1">{
	<if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><op:operator pos:line="78" pos:column="13">!</op:operator><name pos:line="78" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="78" pos:column="27"> <return pos:line="78" pos:column="28">return <expr><call><name pos:line="78" pos:column="35">TEXT</name><argument_list pos:line="78" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="78" pos:column="40">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="79" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="79" pos:column="20">*</type:modifier></type><name pos:line="79" pos:column="21">mainMenu</name> <init pos:line="79" pos:column="30">= <expr><call><name><name pos:line="79" pos:column="32">_nativeLangA</name><op:operator pos:line="79" pos:column="44">-&gt;</op:operator><name pos:line="79" pos:column="46">FirstChild</name></name><argument_list pos:line="79" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="79" pos:column="57">"Menu"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><op:operator pos:line="80" pos:column="13">!</op:operator><name pos:line="80" pos:column="14">mainMenu</name></expr>)</condition><then pos:line="80" pos:column="23"> <return pos:line="80" pos:column="24">return <expr><call><name pos:line="80" pos:column="31">TEXT</name><argument_list pos:line="80" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="80" pos:column="36">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="81" pos:column="9">mainMenu</name> <op:operator pos:line="81" pos:column="18">=</op:operator> <call><name><name pos:line="81" pos:column="20">mainMenu</name><op:operator pos:line="81" pos:column="28">-&gt;</op:operator><name pos:line="81" pos:column="30">FirstChild</name></name><argument_list pos:line="81" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="81" pos:column="41">"Main"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><op:operator pos:line="82" pos:column="13">!</op:operator><name pos:line="82" pos:column="14">mainMenu</name></expr>)</condition><then pos:line="82" pos:column="23"> <return pos:line="82" pos:column="24">return <expr><call><name pos:line="82" pos:column="31">TEXT</name><argument_list pos:line="82" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="82" pos:column="36">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<decl_stmt><decl><type><name pos:line="83" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="83" pos:column="20">*</type:modifier></type><name pos:line="83" pos:column="21">entriesRoot</name> <init pos:line="83" pos:column="33">= <expr><call><name><name pos:line="83" pos:column="35">mainMenu</name><op:operator pos:line="83" pos:column="43">-&gt;</op:operator><name pos:line="83" pos:column="45">FirstChild</name></name><argument_list pos:line="83" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="83" pos:column="56">"Entries"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><op:operator pos:line="84" pos:column="13">!</op:operator><name pos:line="84" pos:column="14">entriesRoot</name></expr>)</condition><then pos:line="84" pos:column="26"> <return pos:line="84" pos:column="27">return <expr><call><name pos:line="84" pos:column="34">TEXT</name><argument_list pos:line="84" pos:column="38">(<argument><expr><lit:literal type="string" pos:line="84" pos:column="39">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>
	<decl_stmt><decl><type><specifier pos:line="85" pos:column="9">const</specifier> <name pos:line="85" pos:column="15">char</name> <type:modifier pos:line="85" pos:column="20">*</type:modifier></type><name pos:line="85" pos:column="21">idName</name> <init pos:line="85" pos:column="28">= <expr><name pos:line="85" pos:column="30">NULL</name></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:line="87" pos:column="1">#<cpp:directive pos:line="87" pos:column="2">ifdef</cpp:directive> <name pos:line="87" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="88" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="88" pos:column="28">*</type:modifier></type><name pos:line="88" pos:column="29">wmc</name> <init pos:line="88" pos:column="33">= <expr><call><name><name pos:line="88" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="88" pos:column="53">::</op:operator><name pos:line="88" pos:column="55">getInstance</name></name><argument_list pos:line="88" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">endif</cpp:directive></cpp:endif>

	<for pos:line="91" pos:column="9">for (<init><decl><type><name pos:line="91" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="91" pos:column="25">*</type:modifier></type><name pos:line="91" pos:column="26">childNode</name> <init pos:line="91" pos:column="36">= <expr><call><name><name pos:line="91" pos:column="38">entriesRoot</name><op:operator pos:line="91" pos:column="49">-&gt;</op:operator><name pos:line="91" pos:column="51">FirstChildElement</name></name><argument_list pos:line="91" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="91" pos:column="69">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="92" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="93" pos:column="17">childNode</name> <op:operator pos:line="93" pos:column="27">=</op:operator> <call><name><name pos:line="93" pos:column="29">childNode</name><op:operator pos:line="93" pos:column="38">-&gt;</op:operator><name pos:line="93" pos:column="40">NextSibling</name></name><argument_list pos:line="93" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="93" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="94" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="95" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="95" pos:column="31">*</type:modifier></type><name pos:line="95" pos:column="32">element</name> <init pos:line="95" pos:column="40">= <expr><call><name><name pos:line="95" pos:column="42">childNode</name><op:operator pos:line="95" pos:column="51">-&gt;</op:operator><name pos:line="95" pos:column="53">ToElement</name></name><argument_list pos:line="95" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><name pos:line="97" pos:column="17">idName</name> <op:operator pos:line="97" pos:column="24">=</op:operator> <call><name><name pos:line="97" pos:column="26">element</name><op:operator pos:line="97" pos:column="33">-&gt;</op:operator><name pos:line="97" pos:column="35">Attribute</name></name><argument_list pos:line="97" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="97" pos:column="45">"idName"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="98" pos:column="17">if <condition pos:line="98" pos:column="20">(<expr><name pos:line="98" pos:column="21">idName</name></expr>)</condition><then pos:line="98" pos:column="28">
		<block pos:line="99" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="100" pos:column="25">const</specifier> <name pos:line="100" pos:column="31">char</name> <type:modifier pos:line="100" pos:column="36">*</type:modifier></type><name pos:line="100" pos:column="37">name</name> <init pos:line="100" pos:column="42">= <expr><call><name><name pos:line="100" pos:column="44">element</name><op:operator pos:line="100" pos:column="51">-&gt;</op:operator><name pos:line="100" pos:column="53">Attribute</name></name><argument_list pos:line="100" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="100" pos:column="63">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="101" pos:column="25">if <condition pos:line="101" pos:column="28">(<expr><op:operator pos:line="101" pos:column="29">!</op:operator><call><name pos:line="101" pos:column="30">strcmp</name><argument_list pos:line="101" pos:column="36">(<argument><expr><name pos:line="101" pos:column="37">idName</name></expr></argument>, <argument><expr><name pos:line="101" pos:column="45">entryName</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="101" pos:column="56">
			<block pos:line="102" pos:column="25">{
<cpp:ifdef pos:line="103" pos:column="1">#<cpp:directive pos:line="103" pos:column="2">ifdef</cpp:directive> <name pos:line="103" pos:column="8">UNICODE</name></cpp:ifdef>
				<return pos:line="104" pos:column="33">return <expr><call><name><name pos:line="104" pos:column="40">wmc</name><op:operator pos:line="104" pos:column="43">-&gt;</op:operator><name pos:line="104" pos:column="45">char2wchar</name></name><argument_list pos:line="104" pos:column="55">(<argument><expr><name pos:line="104" pos:column="56">name</name></expr></argument>, <argument><expr><name pos:line="104" pos:column="62">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:else pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">else</cpp:directive></cpp:else>
				<return pos:line="106" pos:column="33">return <expr><name pos:line="106" pos:column="40">name</name></expr>;</return>
<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
	<return pos:line="111" pos:column="9">return <expr><call><name pos:line="111" pos:column="16">TEXT</name><argument_list pos:line="111" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="111" pos:column="21">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name pos:line="114" pos:column="1">generic_string</name></type> <name><name pos:line="114" pos:column="16">NativeLangSpeaker</name><op:operator pos:line="114" pos:column="33">::</op:operator><name pos:line="114" pos:column="35">getNativeLangMenuString</name></name><parameter_list pos:line="114" pos:column="58">(<param><decl><type><name pos:line="114" pos:column="59">int</name></type> <name pos:line="114" pos:column="63">itemID</name></decl></param>)</parameter_list> 
<block pos:line="115" pos:column="1">{
	<if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><op:operator pos:line="116" pos:column="13">!</op:operator><name pos:line="116" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="116" pos:column="27">
		<return pos:line="117" pos:column="17">return <expr><call><name pos:line="117" pos:column="24">TEXT</name><argument_list pos:line="117" pos:column="28">(<argument><expr><lit:literal type="string" pos:line="117" pos:column="29">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="119" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="119" pos:column="20">*</type:modifier></type><name pos:line="119" pos:column="21">node</name> <init pos:line="119" pos:column="26">= <expr><call><name><name pos:line="119" pos:column="28">_nativeLangA</name><op:operator pos:line="119" pos:column="40">-&gt;</op:operator><name pos:line="119" pos:column="42">FirstChild</name></name><argument_list pos:line="119" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="119" pos:column="53">"Menu"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="120" pos:column="9">if <condition pos:line="120" pos:column="12">(<expr><op:operator pos:line="120" pos:column="13">!</op:operator><name pos:line="120" pos:column="14">node</name></expr>)</condition><then pos:line="120" pos:column="19"> <return pos:line="120" pos:column="20">return <expr><call><name pos:line="120" pos:column="27">TEXT</name><argument_list pos:line="120" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="120" pos:column="32">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>

	<expr_stmt><expr><name pos:line="122" pos:column="9">node</name> <op:operator pos:line="122" pos:column="14">=</op:operator> <call><name><name pos:line="122" pos:column="16">node</name><op:operator pos:line="122" pos:column="20">-&gt;</op:operator><name pos:line="122" pos:column="22">FirstChild</name></name><argument_list pos:line="122" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="122" pos:column="33">"Main"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><op:operator pos:line="123" pos:column="13">!</op:operator><name pos:line="123" pos:column="14">node</name></expr>)</condition><then pos:line="123" pos:column="19"> <return pos:line="123" pos:column="20">return <expr><call><name pos:line="123" pos:column="27">TEXT</name><argument_list pos:line="123" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="123" pos:column="32">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>

	<expr_stmt><expr><name pos:line="125" pos:column="9">node</name> <op:operator pos:line="125" pos:column="14">=</op:operator> <call><name><name pos:line="125" pos:column="16">node</name><op:operator pos:line="125" pos:column="20">-&gt;</op:operator><name pos:line="125" pos:column="22">FirstChild</name></name><argument_list pos:line="125" pos:column="32">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="33">"Commands"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="126" pos:column="9">if <condition pos:line="126" pos:column="12">(<expr><op:operator pos:line="126" pos:column="13">!</op:operator><name pos:line="126" pos:column="14">node</name></expr>)</condition><then pos:line="126" pos:column="19"> <return pos:line="126" pos:column="20">return <expr><call><name pos:line="126" pos:column="27">TEXT</name><argument_list pos:line="126" pos:column="31">(<argument><expr><lit:literal type="string" pos:line="126" pos:column="32">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return></then></if>

<cpp:ifdef pos:line="128" pos:column="1">#<cpp:directive pos:line="128" pos:column="2">ifdef</cpp:directive> <name pos:line="128" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="129" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="129" pos:column="28">*</type:modifier></type><name pos:line="129" pos:column="29">wmc</name> <init pos:line="129" pos:column="33">= <expr><call><name><name pos:line="129" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="129" pos:column="53">::</op:operator><name pos:line="129" pos:column="55">getInstance</name></name><argument_list pos:line="129" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">endif</cpp:directive></cpp:endif>

	<for pos:line="132" pos:column="9">for (<init><decl><type><name pos:line="132" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="132" pos:column="25">*</type:modifier></type><name pos:line="132" pos:column="26">childNode</name> <init pos:line="132" pos:column="36">= <expr><call><name><name pos:line="132" pos:column="38">node</name><op:operator pos:line="132" pos:column="42">-&gt;</op:operator><name pos:line="132" pos:column="44">FirstChildElement</name></name><argument_list pos:line="132" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="132" pos:column="62">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="133" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="134" pos:column="17">childNode</name> <op:operator pos:line="134" pos:column="27">=</op:operator> <call><name><name pos:line="134" pos:column="29">childNode</name><op:operator pos:line="134" pos:column="38">-&gt;</op:operator><name pos:line="134" pos:column="40">NextSibling</name></name><argument_list pos:line="134" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="134" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="135" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="136" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="136" pos:column="31">*</type:modifier></type><name pos:line="136" pos:column="32">element</name> <init pos:line="136" pos:column="40">= <expr><call><name><name pos:line="136" pos:column="42">childNode</name><op:operator pos:line="136" pos:column="51">-&gt;</op:operator><name pos:line="136" pos:column="53">ToElement</name></name><argument_list pos:line="136" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="137" pos:column="17">int</name></type> <name pos:line="137" pos:column="21">id</name></decl>;</decl_stmt>
		<if pos:line="138" pos:column="17">if <condition pos:line="138" pos:column="20">(<expr><call><name><name pos:line="138" pos:column="21">element</name><op:operator pos:line="138" pos:column="28">-&gt;</op:operator><name pos:line="138" pos:column="30">Attribute</name></name><argument_list pos:line="138" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="138" pos:column="40">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="138" pos:column="46">&amp;</op:operator><name pos:line="138" pos:column="47">id</name></expr></argument>)</argument_list></call> <op:operator pos:line="138" pos:column="51">&amp;&amp;</op:operator> <op:operator pos:line="138" pos:column="54">(</op:operator><name pos:line="138" pos:column="55">id</name> <op:operator pos:line="138" pos:column="58">==</op:operator> <name pos:line="138" pos:column="61">itemID</name><op:operator pos:line="138" pos:column="67">)</op:operator></expr>)</condition><then pos:line="138" pos:column="69">
		<block pos:line="139" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="140" pos:column="25">const</specifier> <name pos:line="140" pos:column="31">char</name> <type:modifier pos:line="140" pos:column="36">*</type:modifier></type><name pos:line="140" pos:column="37">name</name> <init pos:line="140" pos:column="42">= <expr><call><name><name pos:line="140" pos:column="44">element</name><op:operator pos:line="140" pos:column="51">-&gt;</op:operator><name pos:line="140" pos:column="53">Attribute</name></name><argument_list pos:line="140" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="140" pos:column="63">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="141" pos:column="25">if <condition pos:line="141" pos:column="28">(<expr><name pos:line="141" pos:column="29">name</name></expr>)</condition><then pos:line="141" pos:column="34">
			<block pos:line="142" pos:column="25">{
<cpp:ifdef pos:line="143" pos:column="1">#<cpp:directive pos:line="143" pos:column="2">ifdef</cpp:directive> <name pos:line="143" pos:column="8">UNICODE</name></cpp:ifdef>
				<return pos:line="144" pos:column="33">return <expr><call><name><name pos:line="144" pos:column="40">wmc</name><op:operator pos:line="144" pos:column="43">-&gt;</op:operator><name pos:line="144" pos:column="45">char2wchar</name></name><argument_list pos:line="144" pos:column="55">(<argument><expr><name pos:line="144" pos:column="56">name</name></expr></argument>, <argument><expr><name pos:line="144" pos:column="62">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:else pos:line="145" pos:column="1">#<cpp:directive pos:line="145" pos:column="2">else</cpp:directive></cpp:else>
				<return pos:line="146" pos:column="33">return <expr><name pos:line="146" pos:column="40">name</name></expr>;</return>
<cpp:endif pos:line="147" pos:column="1">#<cpp:directive pos:line="147" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
	<return pos:line="151" pos:column="9">return <expr><call><name pos:line="151" pos:column="16">TEXT</name><argument_list pos:line="151" pos:column="20">(<argument><expr><lit:literal type="string" pos:line="151" pos:column="21">""</lit:literal></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<struct pos:line="154" pos:column="1">struct <name pos:line="154" pos:column="8">MenuPosition</name> <block pos:line="154" pos:column="21">{<public type="default" pos:line="154" pos:column="22">
	<decl_stmt><decl><type><name pos:line="155" pos:column="9">int</name></type> <name pos:line="155" pos:column="13">_x</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="156" pos:column="9">int</name></type> <name pos:line="156" pos:column="13">_y</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="157" pos:column="9">int</name></type> <name pos:line="157" pos:column="13">_z</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="158" pos:column="9">char</name></type> <name><name pos:line="158" pos:column="14">_id</name><index pos:line="158" pos:column="17">[<expr><lit:literal type="number" pos:line="158" pos:column="18">64</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<comment type="line" pos:line="159" pos:column="9">//MenuPosition(): _x(-1), _y(-1), _z(-1){_id[0] = '\0';};</comment>
</public>}</block>;</struct>

<decl_stmt><decl><type><name pos:line="162" pos:column="1">MenuPosition</name></type> <name><name pos:line="162" pos:column="14">menuPos</name><index pos:line="162" pos:column="21">[]</index></name> <init pos:line="162" pos:column="24">= <expr><block pos:line="162" pos:column="26">{
<comment type="line" pos:line="163" pos:column="1">//==============================================</comment>
<comment type="line" pos:line="164" pos:column="1">//  {L0,  L1,  L2,    id},</comment>
<comment type="line" pos:line="165" pos:column="1">//==============================================</comment>
	<expr><block pos:line="166" pos:column="9">{ <expr><lit:literal type="number" pos:line="166" pos:column="11">0</lit:literal></expr>,  <expr><op:operator pos:line="166" pos:column="15">-</op:operator><lit:literal type="number" pos:line="166" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="166" pos:column="20">-</op:operator><lit:literal type="number" pos:line="166" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="166" pos:column="27">"file"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="167" pos:column="9">{ <expr><lit:literal type="number" pos:line="167" pos:column="11">1</lit:literal></expr>,  <expr><op:operator pos:line="167" pos:column="15">-</op:operator><lit:literal type="number" pos:line="167" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="167" pos:column="20">-</op:operator><lit:literal type="number" pos:line="167" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="167" pos:column="27">"edit"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="168" pos:column="9">{ <expr><lit:literal type="number" pos:line="168" pos:column="11">2</lit:literal></expr>,  <expr><op:operator pos:line="168" pos:column="15">-</op:operator><lit:literal type="number" pos:line="168" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="168" pos:column="20">-</op:operator><lit:literal type="number" pos:line="168" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="168" pos:column="27">"search"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="169" pos:column="9">{ <expr><lit:literal type="number" pos:line="169" pos:column="11">3</lit:literal></expr>,  <expr><op:operator pos:line="169" pos:column="15">-</op:operator><lit:literal type="number" pos:line="169" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="169" pos:column="20">-</op:operator><lit:literal type="number" pos:line="169" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="169" pos:column="27">"view"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="170" pos:column="9">{ <expr><lit:literal type="number" pos:line="170" pos:column="11">4</lit:literal></expr>,  <expr><op:operator pos:line="170" pos:column="15">-</op:operator><lit:literal type="number" pos:line="170" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="170" pos:column="20">-</op:operator><lit:literal type="number" pos:line="170" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="170" pos:column="27">"encoding"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="171" pos:column="9">{ <expr><lit:literal type="number" pos:line="171" pos:column="11">5</lit:literal></expr>,  <expr><op:operator pos:line="171" pos:column="15">-</op:operator><lit:literal type="number" pos:line="171" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="171" pos:column="20">-</op:operator><lit:literal type="number" pos:line="171" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="171" pos:column="27">"language"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="172" pos:column="9">{ <expr><lit:literal type="number" pos:line="172" pos:column="11">6</lit:literal></expr>,  <expr><op:operator pos:line="172" pos:column="15">-</op:operator><lit:literal type="number" pos:line="172" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="172" pos:column="20">-</op:operator><lit:literal type="number" pos:line="172" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="172" pos:column="27">"settings"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="173" pos:column="9">{ <expr><lit:literal type="number" pos:line="173" pos:column="11">7</lit:literal></expr>,  <expr><op:operator pos:line="173" pos:column="15">-</op:operator><lit:literal type="number" pos:line="173" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="173" pos:column="20">-</op:operator><lit:literal type="number" pos:line="173" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="173" pos:column="27">"macro"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="174" pos:column="9">{ <expr><lit:literal type="number" pos:line="174" pos:column="11">8</lit:literal></expr>,  <expr><op:operator pos:line="174" pos:column="15">-</op:operator><lit:literal type="number" pos:line="174" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="174" pos:column="20">-</op:operator><lit:literal type="number" pos:line="174" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="174" pos:column="27">"run"</lit:literal></expr>}</block></expr>,

	<expr><block pos:line="176" pos:column="9">{ <expr><lit:literal type="number" pos:line="176" pos:column="11">0</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="176" pos:column="15">19</lit:literal></expr>,  <expr><op:operator pos:line="176" pos:column="20">-</op:operator><lit:literal type="number" pos:line="176" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="176" pos:column="27">"file-recentFiles"</lit:literal></expr>}</block></expr>,

	<expr><block pos:line="178" pos:column="9">{ <expr><lit:literal type="number" pos:line="178" pos:column="11">1</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="178" pos:column="16">9</lit:literal></expr>,  <expr><op:operator pos:line="178" pos:column="20">-</op:operator><lit:literal type="number" pos:line="178" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="178" pos:column="27">"edit-copyToClipboard"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="179" pos:column="9">{ <expr><lit:literal type="number" pos:line="179" pos:column="11">1</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="179" pos:column="15">10</lit:literal></expr>,  <expr><op:operator pos:line="179" pos:column="20">-</op:operator><lit:literal type="number" pos:line="179" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="179" pos:column="27">"edit-indent"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="180" pos:column="9">{ <expr><lit:literal type="number" pos:line="180" pos:column="11">1</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="180" pos:column="15">11</lit:literal></expr>,  <expr><op:operator pos:line="180" pos:column="20">-</op:operator><lit:literal type="number" pos:line="180" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="180" pos:column="27">"edit-convertCaseTo"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="181" pos:column="9">{ <expr><lit:literal type="number" pos:line="181" pos:column="11">1</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="181" pos:column="15">12</lit:literal></expr>,  <expr><op:operator pos:line="181" pos:column="20">-</op:operator><lit:literal type="number" pos:line="181" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="181" pos:column="27">"edit-lineOperations"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="182" pos:column="9">{ <expr><lit:literal type="number" pos:line="182" pos:column="11">1</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="182" pos:column="15">13</lit:literal></expr>,  <expr><op:operator pos:line="182" pos:column="20">-</op:operator><lit:literal type="number" pos:line="182" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="182" pos:column="27">"edit-comment"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="183" pos:column="9">{ <expr><lit:literal type="number" pos:line="183" pos:column="11">1</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="183" pos:column="15">14</lit:literal></expr>,  <expr><op:operator pos:line="183" pos:column="20">-</op:operator><lit:literal type="number" pos:line="183" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="183" pos:column="27">"edit-autoCompletion"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="184" pos:column="9">{ <expr><lit:literal type="number" pos:line="184" pos:column="11">1</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="184" pos:column="15">15</lit:literal></expr>,  <expr><op:operator pos:line="184" pos:column="20">-</op:operator><lit:literal type="number" pos:line="184" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="184" pos:column="27">"edit-eolConversion"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="185" pos:column="9">{ <expr><lit:literal type="number" pos:line="185" pos:column="11">1</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="185" pos:column="15">16</lit:literal></expr>,  <expr><op:operator pos:line="185" pos:column="20">-</op:operator><lit:literal type="number" pos:line="185" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="185" pos:column="27">"edit-blankOperations"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="186" pos:column="9">{ <expr><lit:literal type="number" pos:line="186" pos:column="11">1</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="186" pos:column="15">17</lit:literal></expr>,  <expr><op:operator pos:line="186" pos:column="20">-</op:operator><lit:literal type="number" pos:line="186" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="186" pos:column="27">"edit-pasteSpecial"</lit:literal></expr>}</block></expr>,
	
	<expr><block pos:line="188" pos:column="9">{ <expr><lit:literal type="number" pos:line="188" pos:column="11">2</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="188" pos:column="15">16</lit:literal></expr>,  <expr><op:operator pos:line="188" pos:column="20">-</op:operator><lit:literal type="number" pos:line="188" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="188" pos:column="27">"search-markAll"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="189" pos:column="9">{ <expr><lit:literal type="number" pos:line="189" pos:column="11">2</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="189" pos:column="15">17</lit:literal></expr>,  <expr><op:operator pos:line="189" pos:column="20">-</op:operator><lit:literal type="number" pos:line="189" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="189" pos:column="27">"search-unmarkAll"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="190" pos:column="9">{ <expr><lit:literal type="number" pos:line="190" pos:column="11">2</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="190" pos:column="15">18</lit:literal></expr>,  <expr><op:operator pos:line="190" pos:column="20">-</op:operator><lit:literal type="number" pos:line="190" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="190" pos:column="27">"search-jumpUp"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="191" pos:column="9">{ <expr><lit:literal type="number" pos:line="191" pos:column="11">2</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="191" pos:column="15">19</lit:literal></expr>,  <expr><op:operator pos:line="191" pos:column="20">-</op:operator><lit:literal type="number" pos:line="191" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="191" pos:column="27">"search-jumpDown"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="192" pos:column="9">{ <expr><lit:literal type="number" pos:line="192" pos:column="11">2</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="192" pos:column="15">21</lit:literal></expr>,  <expr><op:operator pos:line="192" pos:column="20">-</op:operator><lit:literal type="number" pos:line="192" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="192" pos:column="27">"search-bookmark"</lit:literal></expr>}</block></expr>,
	
	<expr><block pos:line="194" pos:column="9">{ <expr><lit:literal type="number" pos:line="194" pos:column="11">3</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="194" pos:column="16">4</lit:literal></expr>,  <expr><op:operator pos:line="194" pos:column="20">-</op:operator><lit:literal type="number" pos:line="194" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="194" pos:column="27">"view-showSymbol"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="195" pos:column="9">{ <expr><lit:literal type="number" pos:line="195" pos:column="11">3</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="195" pos:column="16">5</lit:literal></expr>,  <expr><op:operator pos:line="195" pos:column="20">-</op:operator><lit:literal type="number" pos:line="195" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="195" pos:column="27">"view-zoom"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="196" pos:column="9">{ <expr><lit:literal type="number" pos:line="196" pos:column="11">3</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="196" pos:column="16">6</lit:literal></expr>,  <expr><op:operator pos:line="196" pos:column="20">-</op:operator><lit:literal type="number" pos:line="196" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="196" pos:column="27">"view-moveCloneDocument"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="197" pos:column="9">{ <expr><lit:literal type="number" pos:line="197" pos:column="11">3</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="197" pos:column="15">15</lit:literal></expr>,  <expr><op:operator pos:line="197" pos:column="20">-</op:operator><lit:literal type="number" pos:line="197" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="197" pos:column="27">"view-collapseLevel"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="198" pos:column="9">{ <expr><lit:literal type="number" pos:line="198" pos:column="11">3</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="198" pos:column="15">16</lit:literal></expr>,  <expr><op:operator pos:line="198" pos:column="20">-</op:operator><lit:literal type="number" pos:line="198" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="198" pos:column="27">"view-uncollapseLevel"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="199" pos:column="9">{ <expr><lit:literal type="number" pos:line="199" pos:column="11">3</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="199" pos:column="15">20</lit:literal></expr>,  <expr><op:operator pos:line="199" pos:column="20">-</op:operator><lit:literal type="number" pos:line="199" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="199" pos:column="27">"view-project"</lit:literal></expr>}</block></expr>,
	
	<expr><block pos:line="201" pos:column="9">{ <expr><lit:literal type="number" pos:line="201" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="201" pos:column="16">5</lit:literal></expr>,  <expr><op:operator pos:line="201" pos:column="20">-</op:operator><lit:literal type="number" pos:line="201" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="201" pos:column="27">"encoding-characterSets"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="202" pos:column="9">{ <expr><lit:literal type="number" pos:line="202" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="202" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="202" pos:column="21">0</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="202" pos:column="27">"encoding-arabic"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="203" pos:column="9">{ <expr><lit:literal type="number" pos:line="203" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="203" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="203" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="203" pos:column="27">"encoding-baltic"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="204" pos:column="9">{ <expr><lit:literal type="number" pos:line="204" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="204" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="204" pos:column="21">2</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="204" pos:column="27">"encoding-celtic"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="205" pos:column="9">{ <expr><lit:literal type="number" pos:line="205" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="205" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="205" pos:column="21">3</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="205" pos:column="27">"encoding-cyrillic"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="206" pos:column="9">{ <expr><lit:literal type="number" pos:line="206" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="206" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="206" pos:column="21">4</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="206" pos:column="27">"encoding-centralEuropean"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="207" pos:column="9">{ <expr><lit:literal type="number" pos:line="207" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="207" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="207" pos:column="21">5</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="207" pos:column="27">"encoding-chinese"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="208" pos:column="9">{ <expr><lit:literal type="number" pos:line="208" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="208" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="208" pos:column="21">6</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="208" pos:column="27">"encoding-easternEuropean"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="209" pos:column="9">{ <expr><lit:literal type="number" pos:line="209" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="209" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="209" pos:column="21">7</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="209" pos:column="27">"encoding-greek"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="210" pos:column="9">{ <expr><lit:literal type="number" pos:line="210" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="210" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="210" pos:column="21">8</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="210" pos:column="27">"encoding-hebrew"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="211" pos:column="9">{ <expr><lit:literal type="number" pos:line="211" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="211" pos:column="16">5</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="211" pos:column="21">9</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="211" pos:column="27">"encoding-japanese"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="212" pos:column="9">{ <expr><lit:literal type="number" pos:line="212" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="212" pos:column="16">5</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="212" pos:column="20">10</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="212" pos:column="27">"encoding-korean"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="213" pos:column="9">{ <expr><lit:literal type="number" pos:line="213" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="213" pos:column="16">5</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="213" pos:column="20">11</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="213" pos:column="27">"encoding-northEuropean"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="214" pos:column="9">{ <expr><lit:literal type="number" pos:line="214" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="214" pos:column="16">5</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="214" pos:column="20">12</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="214" pos:column="27">"encoding-thai"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="215" pos:column="9">{ <expr><lit:literal type="number" pos:line="215" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="215" pos:column="16">5</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="215" pos:column="20">13</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="215" pos:column="27">"encoding-turkish"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="216" pos:column="9">{ <expr><lit:literal type="number" pos:line="216" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="216" pos:column="16">5</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="216" pos:column="20">14</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="216" pos:column="27">"encoding-westernEuropean"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="217" pos:column="9">{ <expr><lit:literal type="number" pos:line="217" pos:column="11">4</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="217" pos:column="16">5</lit:literal></expr>,  <expr><lit:literal type="number" pos:line="217" pos:column="20">15</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="217" pos:column="27">"encoding-vietnamese"</lit:literal></expr>}</block></expr>,

	<expr><block pos:line="219" pos:column="9">{ <expr><lit:literal type="number" pos:line="219" pos:column="11">6</lit:literal></expr>,   <expr><lit:literal type="number" pos:line="219" pos:column="16">4</lit:literal></expr>,  <expr><op:operator pos:line="219" pos:column="20">-</op:operator><lit:literal type="number" pos:line="219" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="219" pos:column="27">"settings-import"</lit:literal></expr>}</block></expr>,
	<expr><block pos:line="220" pos:column="9">{<expr><op:operator pos:line="220" pos:column="10">-</op:operator><lit:literal type="number" pos:line="220" pos:column="11">1</lit:literal></expr>,  <expr><op:operator pos:line="220" pos:column="15">-</op:operator><lit:literal type="number" pos:line="220" pos:column="16">1</lit:literal></expr>,  <expr><op:operator pos:line="220" pos:column="20">-</op:operator><lit:literal type="number" pos:line="220" pos:column="21">1</lit:literal></expr>,    <expr><lit:literal type="string" pos:line="220" pos:column="27">""</lit:literal></expr>}</block></expr> <comment type="line" pos:line="220" pos:column="31">// End of array</comment>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="223" pos:column="1">MenuPosition</name> <type:modifier pos:line="223" pos:column="14">&amp;</type:modifier></type> <name pos:line="223" pos:column="16">getMenuPosition</name><parameter_list pos:line="223" pos:column="31">(<param><decl><type><specifier pos:line="223" pos:column="32">const</specifier> <name pos:line="223" pos:column="38">char</name> <type:modifier pos:line="223" pos:column="43">*</type:modifier></type><name pos:line="223" pos:column="44">id</name></decl></param>)</parameter_list> <block pos:line="223" pos:column="48">{

	<decl_stmt><decl><type><name pos:line="225" pos:column="9">int</name></type> <name pos:line="225" pos:column="13">nbSubMenuPos</name> <init pos:line="225" pos:column="26">= <expr><sizeof pos:line="225" pos:column="28">sizeof<argument_list pos:line="225" pos:column="34">(<argument><expr><name pos:line="225" pos:column="35">menuPos</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="225" pos:column="43">/</op:operator><sizeof pos:line="225" pos:column="44">sizeof<argument_list pos:line="225" pos:column="50">(<argument><expr><name pos:line="225" pos:column="51">MenuPosition</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

	<for pos:line="227" pos:column="9">for(<init><decl><type><name pos:line="227" pos:column="13">int</name></type> <name pos:line="227" pos:column="17">i</name> <init pos:line="227" pos:column="19">= <expr><lit:literal type="number" pos:line="227" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="227" pos:column="24">i</name> <op:operator pos:line="227" pos:column="26">&lt;</op:operator> <name pos:line="227" pos:column="28">nbSubMenuPos</name></expr>;</condition> <incr><expr><name pos:line="227" pos:column="42">i</name><op:operator pos:line="227" pos:column="43">++</op:operator></expr></incr>) 
	<block pos:line="228" pos:column="9">{
		<if pos:line="229" pos:column="17">if <condition pos:line="229" pos:column="20">(<expr><call><name pos:line="229" pos:column="21">strcmp</name><argument_list pos:line="229" pos:column="27">(<argument><expr><name><name pos:line="229" pos:column="28">menuPos</name><index pos:line="229" pos:column="35">[<expr><name pos:line="229" pos:column="36">i</name></expr>]</index></name><op:operator pos:line="229" pos:column="38">.</op:operator><name pos:line="229" pos:column="39">_id</name></expr></argument>, <argument><expr><name pos:line="229" pos:column="44">id</name></expr></argument>)</argument_list></call> <op:operator pos:line="229" pos:column="48">==</op:operator> <lit:literal type="number" pos:line="229" pos:column="51">0</lit:literal></expr>)</condition><then pos:line="229" pos:column="53">
			<return pos:line="230" pos:column="25">return <expr><name><name pos:line="230" pos:column="32">menuPos</name><index pos:line="230" pos:column="39">[<expr><name pos:line="230" pos:column="40">i</name></expr>]</index></name></expr>;</return></then></if>
	}</block></for>
	<return pos:line="232" pos:column="9">return <expr><name><name pos:line="232" pos:column="16">menuPos</name><index pos:line="232" pos:column="23">[<expr><name pos:line="232" pos:column="24">nbSubMenuPos</name><op:operator pos:line="232" pos:column="36">-</op:operator><lit:literal type="number" pos:line="232" pos:column="37">1</lit:literal></expr>]</index></name></expr>;</return>
}</block></function><empty_stmt pos:line="233" pos:column="2">;</empty_stmt>

<function><type><name pos:line="235" pos:column="1">void</name></type> <name><name pos:line="235" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="235" pos:column="23">::</op:operator><name pos:line="235" pos:column="25">changeMenuLang</name></name><parameter_list pos:line="235" pos:column="39">(<param><decl><type><name pos:line="235" pos:column="40">HMENU</name></type> <name pos:line="235" pos:column="46">menuHandle</name></decl></param>, <param><decl><type><name pos:line="235" pos:column="58">generic_string</name> <type:modifier pos:line="235" pos:column="73">&amp;</type:modifier></type> <name pos:line="235" pos:column="75">pluginsTrans</name></decl></param>, <param><decl><type><name pos:line="235" pos:column="89">generic_string</name> <type:modifier pos:line="235" pos:column="104">&amp;</type:modifier></type> <name pos:line="235" pos:column="106">windowTrans</name></decl></param>)</parameter_list>
<block pos:line="236" pos:column="1">{
	<if pos:line="237" pos:column="9">if <condition pos:line="237" pos:column="12">(<expr><op:operator pos:line="237" pos:column="13">!</op:operator><name pos:line="237" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="237" pos:column="27"> <return pos:line="237" pos:column="28">return;</return></then></if>
	<decl_stmt><decl><type><name pos:line="238" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="238" pos:column="20">*</type:modifier></type><name pos:line="238" pos:column="21">mainMenu</name> <init pos:line="238" pos:column="30">= <expr><call><name><name pos:line="238" pos:column="32">_nativeLangA</name><op:operator pos:line="238" pos:column="44">-&gt;</op:operator><name pos:line="238" pos:column="46">FirstChild</name></name><argument_list pos:line="238" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="238" pos:column="57">"Menu"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="239" pos:column="9">if <condition pos:line="239" pos:column="12">(<expr><op:operator pos:line="239" pos:column="13">!</op:operator><name pos:line="239" pos:column="14">mainMenu</name></expr>)</condition><then pos:line="239" pos:column="23"> <return pos:line="239" pos:column="24">return;</return></then></if>
	<expr_stmt><expr><name pos:line="240" pos:column="9">mainMenu</name> <op:operator pos:line="240" pos:column="18">=</op:operator> <call><name><name pos:line="240" pos:column="20">mainMenu</name><op:operator pos:line="240" pos:column="28">-&gt;</op:operator><name pos:line="240" pos:column="30">FirstChild</name></name><argument_list pos:line="240" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="240" pos:column="41">"Main"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="241" pos:column="9">if <condition pos:line="241" pos:column="12">(<expr><op:operator pos:line="241" pos:column="13">!</op:operator><name pos:line="241" pos:column="14">mainMenu</name></expr>)</condition><then pos:line="241" pos:column="23"> <return pos:line="241" pos:column="24">return;</return></then></if>
	<decl_stmt><decl><type><name pos:line="242" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="242" pos:column="20">*</type:modifier></type><name pos:line="242" pos:column="21">entriesRoot</name> <init pos:line="242" pos:column="33">= <expr><call><name><name pos:line="242" pos:column="35">mainMenu</name><op:operator pos:line="242" pos:column="43">-&gt;</op:operator><name pos:line="242" pos:column="45">FirstChild</name></name><argument_list pos:line="242" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="242" pos:column="56">"Entries"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="243" pos:column="9">if <condition pos:line="243" pos:column="12">(<expr><op:operator pos:line="243" pos:column="13">!</op:operator><name pos:line="243" pos:column="14">entriesRoot</name></expr>)</condition><then pos:line="243" pos:column="26"> <return pos:line="243" pos:column="27">return;</return></then></if>
	<decl_stmt><decl><type><specifier pos:line="244" pos:column="9">const</specifier> <name pos:line="244" pos:column="15">char</name> <type:modifier pos:line="244" pos:column="20">*</type:modifier></type><name pos:line="244" pos:column="21">idName</name> <init pos:line="244" pos:column="28">= <expr><name pos:line="244" pos:column="30">NULL</name></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">ifdef</cpp:directive> <name pos:line="246" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="247" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="247" pos:column="28">*</type:modifier></type><name pos:line="247" pos:column="29">wmc</name> <init pos:line="247" pos:column="33">= <expr><call><name><name pos:line="247" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="247" pos:column="53">::</op:operator><name pos:line="247" pos:column="55">getInstance</name></name><argument_list pos:line="247" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="248" pos:column="1">#<cpp:directive pos:line="248" pos:column="2">endif</cpp:directive></cpp:endif>

	<for pos:line="250" pos:column="9">for (<init><decl><type><name pos:line="250" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="250" pos:column="25">*</type:modifier></type><name pos:line="250" pos:column="26">childNode</name> <init pos:line="250" pos:column="36">= <expr><call><name><name pos:line="250" pos:column="38">entriesRoot</name><op:operator pos:line="250" pos:column="49">-&gt;</op:operator><name pos:line="250" pos:column="51">FirstChildElement</name></name><argument_list pos:line="250" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="250" pos:column="69">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="251" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="252" pos:column="17">childNode</name> <op:operator pos:line="252" pos:column="27">=</op:operator> <call><name><name pos:line="252" pos:column="29">childNode</name><op:operator pos:line="252" pos:column="38">-&gt;</op:operator><name pos:line="252" pos:column="40">NextSibling</name></name><argument_list pos:line="252" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="252" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="253" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="254" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="254" pos:column="31">*</type:modifier></type><name pos:line="254" pos:column="32">element</name> <init pos:line="254" pos:column="40">= <expr><call><name><name pos:line="254" pos:column="42">childNode</name><op:operator pos:line="254" pos:column="51">-&gt;</op:operator><name pos:line="254" pos:column="53">ToElement</name></name><argument_list pos:line="254" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="255" pos:column="17">//int id;</comment>
		<decl_stmt><decl><type><specifier pos:line="256" pos:column="17">const</specifier> <name pos:line="256" pos:column="23">char</name> <type:modifier pos:line="256" pos:column="28">*</type:modifier></type><name pos:line="256" pos:column="29">menuIdStr</name> <init pos:line="256" pos:column="39">= <expr><call><name><name pos:line="256" pos:column="41">element</name><op:operator pos:line="256" pos:column="48">-&gt;</op:operator><name pos:line="256" pos:column="50">Attribute</name></name><argument_list pos:line="256" pos:column="59">(<argument><expr><lit:literal type="string" pos:line="256" pos:column="60">"menuId"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<comment type="line" pos:line="257" pos:column="17">//if (element-&gt;Attribute("id", &amp;id))</comment>
		<if pos:line="258" pos:column="17">if <condition pos:line="258" pos:column="20">(<expr><name pos:line="258" pos:column="21">menuIdStr</name></expr>)</condition><then pos:line="258" pos:column="31">
		<block pos:line="259" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="260" pos:column="25">MenuPosition</name> <type:modifier pos:line="260" pos:column="38">&amp;</type:modifier></type> <name pos:line="260" pos:column="40">menuPos</name> <init pos:line="260" pos:column="48">= <expr><call><name pos:line="260" pos:column="50">getMenuPosition</name><argument_list pos:line="260" pos:column="65">(<argument><expr><name pos:line="260" pos:column="66">menuIdStr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="261" pos:column="25">if <condition pos:line="261" pos:column="28">(<expr><name><name pos:line="261" pos:column="29">menuPos</name><op:operator pos:line="261" pos:column="36">.</op:operator><name pos:line="261" pos:column="37">_x</name></name> <op:operator pos:line="261" pos:column="40">!=</op:operator> <op:operator pos:line="261" pos:column="43">-</op:operator><lit:literal type="number" pos:line="261" pos:column="44">1</lit:literal></expr>)</condition><then pos:line="261" pos:column="46">
			<block pos:line="262" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="263" pos:column="33">const</specifier> <name pos:line="263" pos:column="39">char</name> <type:modifier pos:line="263" pos:column="44">*</type:modifier></type><name pos:line="263" pos:column="45">name</name> <init pos:line="263" pos:column="50">= <expr><call><name><name pos:line="263" pos:column="52">element</name><op:operator pos:line="263" pos:column="59">-&gt;</op:operator><name pos:line="263" pos:column="61">Attribute</name></name><argument_list pos:line="263" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="263" pos:column="71">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:line="265" pos:column="1">#<cpp:directive pos:line="265" pos:column="2">ifdef</cpp:directive> <name pos:line="265" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><specifier pos:line="266" pos:column="33">const</specifier> <name pos:line="266" pos:column="39">wchar_t</name> <type:modifier pos:line="266" pos:column="47">*</type:modifier></type><name pos:line="266" pos:column="48">nameW</name> <init pos:line="266" pos:column="54">= <expr><call><name><name pos:line="266" pos:column="56">wmc</name><op:operator pos:line="266" pos:column="59">-&gt;</op:operator><name pos:line="266" pos:column="61">char2wchar</name></name><argument_list pos:line="266" pos:column="71">(<argument><expr><name pos:line="266" pos:column="72">name</name></expr></argument>, <argument><expr><name pos:line="266" pos:column="78">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="267" pos:column="33">::</op:operator><name pos:line="267" pos:column="35">ModifyMenu</name></name><argument_list pos:line="267" pos:column="45">(<argument><expr><name pos:line="267" pos:column="46">menuHandle</name></expr></argument>, <argument><expr><name><name pos:line="267" pos:column="58">menuPos</name><op:operator pos:line="267" pos:column="65">.</op:operator><name pos:line="267" pos:column="66">_x</name></name></expr></argument>, <argument><expr><name pos:line="267" pos:column="70">MF_BYPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="267" pos:column="85">0</lit:literal></expr></argument>, <argument><expr><name pos:line="267" pos:column="88">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><call><name><op:operator pos:line="269" pos:column="33">::</op:operator><name pos:line="269" pos:column="35">ModifyMenu</name></name><argument_list pos:line="269" pos:column="45">(<argument><expr><name pos:line="269" pos:column="46">menuHandle</name></expr></argument>, <argument><expr><name><name pos:line="269" pos:column="58">menuPos</name><op:operator pos:line="269" pos:column="65">.</op:operator><name pos:line="269" pos:column="66">_x</name></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="70">MF_BYPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="269" pos:column="85">0</lit:literal></expr></argument>, <argument><expr><name pos:line="269" pos:column="88">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="270" pos:column="1">#<cpp:directive pos:line="270" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then>
		<else pos:line="273" pos:column="17">else 
		<block pos:line="274" pos:column="17">{
			<expr_stmt><expr><name pos:line="275" pos:column="25">idName</name> <op:operator pos:line="275" pos:column="32">=</op:operator> <call><name><name pos:line="275" pos:column="34">element</name><op:operator pos:line="275" pos:column="41">-&gt;</op:operator><name pos:line="275" pos:column="43">Attribute</name></name><argument_list pos:line="275" pos:column="52">(<argument><expr><lit:literal type="string" pos:line="275" pos:column="53">"idName"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="276" pos:column="25">if <condition pos:line="276" pos:column="28">(<expr><name pos:line="276" pos:column="29">idName</name></expr>)</condition><then pos:line="276" pos:column="36">
			<block pos:line="277" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="278" pos:column="33">const</specifier> <name pos:line="278" pos:column="39">char</name> <type:modifier pos:line="278" pos:column="44">*</type:modifier></type><name pos:line="278" pos:column="45">name</name> <init pos:line="278" pos:column="50">= <expr><call><name><name pos:line="278" pos:column="52">element</name><op:operator pos:line="278" pos:column="59">-&gt;</op:operator><name pos:line="278" pos:column="61">Attribute</name></name><argument_list pos:line="278" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="278" pos:column="71">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="279" pos:column="33">if <condition pos:line="279" pos:column="36">(<expr><op:operator pos:line="279" pos:column="37">!</op:operator><call><name pos:line="279" pos:column="38">strcmp</name><argument_list pos:line="279" pos:column="44">(<argument><expr><name pos:line="279" pos:column="45">idName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="279" pos:column="53">"Plugins"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="279" pos:column="64">
				<block pos:line="280" pos:column="33">{
<cpp:ifdef pos:line="281" pos:column="1">#<cpp:directive pos:line="281" pos:column="2">ifdef</cpp:directive> <name pos:line="281" pos:column="8">UNICODE</name></cpp:ifdef>
					<decl_stmt><decl><type><specifier pos:line="282" pos:column="41">const</specifier> <name pos:line="282" pos:column="47">wchar_t</name> <type:modifier pos:line="282" pos:column="55">*</type:modifier></type><name pos:line="282" pos:column="56">nameW</name> <init pos:line="282" pos:column="62">= <expr><call><name><name pos:line="282" pos:column="64">wmc</name><op:operator pos:line="282" pos:column="67">-&gt;</op:operator><name pos:line="282" pos:column="69">char2wchar</name></name><argument_list pos:line="282" pos:column="79">(<argument><expr><name pos:line="282" pos:column="80">name</name></expr></argument>, <argument><expr><name pos:line="282" pos:column="86">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="283" pos:column="41">pluginsTrans</name> <op:operator pos:line="283" pos:column="54">=</op:operator> <name pos:line="283" pos:column="56">nameW</name></expr>;</expr_stmt>
<cpp:else pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">else</cpp:directive></cpp:else>
					<expr_stmt><expr><name pos:line="285" pos:column="41">pluginsTrans</name> <op:operator pos:line="285" pos:column="54">=</op:operator> <name pos:line="285" pos:column="56">name</name></expr>;</expr_stmt>
<cpp:endif pos:line="286" pos:column="1">#<cpp:directive pos:line="286" pos:column="2">endif</cpp:directive></cpp:endif>
				}</block></then>
				<else pos:line="288" pos:column="33">else <if pos:line="288" pos:column="38">if <condition pos:line="288" pos:column="41">(<expr><op:operator pos:line="288" pos:column="42">!</op:operator><call><name pos:line="288" pos:column="43">strcmp</name><argument_list pos:line="288" pos:column="49">(<argument><expr><name pos:line="288" pos:column="50">idName</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="288" pos:column="58">"Window"</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="288" pos:column="68">
				<block pos:line="289" pos:column="33">{
<cpp:ifdef pos:line="290" pos:column="1">#<cpp:directive pos:line="290" pos:column="2">ifdef</cpp:directive> <name pos:line="290" pos:column="8">UNICODE</name></cpp:ifdef>
					<decl_stmt><decl><type><specifier pos:line="291" pos:column="41">const</specifier> <name pos:line="291" pos:column="47">wchar_t</name> <type:modifier pos:line="291" pos:column="55">*</type:modifier></type><name pos:line="291" pos:column="56">nameW</name> <init pos:line="291" pos:column="62">= <expr><call><name><name pos:line="291" pos:column="64">wmc</name><op:operator pos:line="291" pos:column="67">-&gt;</op:operator><name pos:line="291" pos:column="69">char2wchar</name></name><argument_list pos:line="291" pos:column="79">(<argument><expr><name pos:line="291" pos:column="80">name</name></expr></argument>, <argument><expr><name pos:line="291" pos:column="86">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><name pos:line="292" pos:column="41">windowTrans</name> <op:operator pos:line="292" pos:column="53">=</op:operator> <name pos:line="292" pos:column="55">nameW</name></expr>;</expr_stmt>
<cpp:else pos:line="293" pos:column="1">#<cpp:directive pos:line="293" pos:column="2">else</cpp:directive></cpp:else>
					<expr_stmt><expr><name pos:line="294" pos:column="41">windowTrans</name> <op:operator pos:line="294" pos:column="53">=</op:operator> <name pos:line="294" pos:column="55">name</name></expr>;</expr_stmt>
	<cpp:endif pos:line="295" pos:column="9">#<cpp:directive pos:line="295" pos:column="10">endif</cpp:directive></cpp:endif>
				}</block></then></if></else></if>
			}</block></then></if>
		}</block></else></if>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="301" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="301" pos:column="20">*</type:modifier></type><name pos:line="301" pos:column="21">menuCommandsRoot</name> <init pos:line="301" pos:column="38">= <expr><call><name><name pos:line="301" pos:column="40">mainMenu</name><op:operator pos:line="301" pos:column="48">-&gt;</op:operator><name pos:line="301" pos:column="50">FirstChild</name></name><argument_list pos:line="301" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="301" pos:column="61">"Commands"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<for pos:line="302" pos:column="9">for (<init><decl><type><name pos:line="302" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="302" pos:column="25">*</type:modifier></type><name pos:line="302" pos:column="26">childNode</name> <init pos:line="302" pos:column="36">= <expr><call><name><name pos:line="302" pos:column="38">menuCommandsRoot</name><op:operator pos:line="302" pos:column="54">-&gt;</op:operator><name pos:line="302" pos:column="56">FirstChildElement</name></name><argument_list pos:line="302" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="302" pos:column="74">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="303" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="304" pos:column="17">childNode</name> <op:operator pos:line="304" pos:column="27">=</op:operator> <call><name><name pos:line="304" pos:column="29">childNode</name><op:operator pos:line="304" pos:column="38">-&gt;</op:operator><name pos:line="304" pos:column="40">NextSibling</name></name><argument_list pos:line="304" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="304" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="305" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="306" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="306" pos:column="31">*</type:modifier></type><name pos:line="306" pos:column="32">element</name> <init pos:line="306" pos:column="40">= <expr><call><name><name pos:line="306" pos:column="42">childNode</name><op:operator pos:line="306" pos:column="51">-&gt;</op:operator><name pos:line="306" pos:column="53">ToElement</name></name><argument_list pos:line="306" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="307" pos:column="17">int</name></type> <name pos:line="307" pos:column="21">id</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="308" pos:column="17">element</name><op:operator pos:line="308" pos:column="24">-&gt;</op:operator><name pos:line="308" pos:column="26">Attribute</name></name><argument_list pos:line="308" pos:column="35">(<argument><expr><lit:literal type="string" pos:line="308" pos:column="36">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="308" pos:column="42">&amp;</op:operator><name pos:line="308" pos:column="43">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><specifier pos:line="309" pos:column="17">const</specifier> <name pos:line="309" pos:column="23">char</name> <type:modifier pos:line="309" pos:column="28">*</type:modifier></type><name pos:line="309" pos:column="29">name</name> <init pos:line="309" pos:column="34">= <expr><call><name><name pos:line="309" pos:column="36">element</name><op:operator pos:line="309" pos:column="43">-&gt;</op:operator><name pos:line="309" pos:column="45">Attribute</name></name><argument_list pos:line="309" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="309" pos:column="55">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:line="311" pos:column="1">#<cpp:directive pos:line="311" pos:column="2">ifdef</cpp:directive> <name pos:line="311" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="312" pos:column="17">const</specifier> <name pos:line="312" pos:column="23">wchar_t</name> <type:modifier pos:line="312" pos:column="31">*</type:modifier></type><name pos:line="312" pos:column="32">nameW</name> <init pos:line="312" pos:column="38">= <expr><call><name><name pos:line="312" pos:column="40">wmc</name><op:operator pos:line="312" pos:column="43">-&gt;</op:operator><name pos:line="312" pos:column="45">char2wchar</name></name><argument_list pos:line="312" pos:column="55">(<argument><expr><name pos:line="312" pos:column="56">name</name></expr></argument>, <argument><expr><name pos:line="312" pos:column="62">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="313" pos:column="17">::</op:operator><name pos:line="313" pos:column="19">ModifyMenu</name></name><argument_list pos:line="313" pos:column="29">(<argument><expr><name pos:line="313" pos:column="30">menuHandle</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="42">id</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="46">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="60">id</name></expr></argument>, <argument><expr><name pos:line="313" pos:column="64">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="314" pos:column="1">#<cpp:directive pos:line="314" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><op:operator pos:line="315" pos:column="17">::</op:operator><name pos:line="315" pos:column="19">ModifyMenu</name></name><argument_list pos:line="315" pos:column="29">(<argument><expr><name pos:line="315" pos:column="30">menuHandle</name></expr></argument>, <argument><expr><name pos:line="315" pos:column="42">id</name></expr></argument>, <argument><expr><name pos:line="315" pos:column="46">MF_BYCOMMAND</name></expr></argument>, <argument><expr><name pos:line="315" pos:column="60">id</name></expr></argument>, <argument><expr><name pos:line="315" pos:column="64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="316" pos:column="1">#<cpp:directive pos:line="316" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></for>

	<decl_stmt><decl><type><name pos:line="319" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="319" pos:column="20">*</type:modifier></type><name pos:line="319" pos:column="21">subEntriesRoot</name> <init pos:line="319" pos:column="36">= <expr><call><name><name pos:line="319" pos:column="38">mainMenu</name><op:operator pos:line="319" pos:column="46">-&gt;</op:operator><name pos:line="319" pos:column="48">FirstChild</name></name><argument_list pos:line="319" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="319" pos:column="59">"SubEntries"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<for pos:line="321" pos:column="9">for (<init><decl><type><name pos:line="321" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="321" pos:column="25">*</type:modifier></type><name pos:line="321" pos:column="26">childNode</name> <init pos:line="321" pos:column="36">= <expr><call><name><name pos:line="321" pos:column="38">subEntriesRoot</name><op:operator pos:line="321" pos:column="52">-&gt;</op:operator><name pos:line="321" pos:column="54">FirstChildElement</name></name><argument_list pos:line="321" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="321" pos:column="72">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="322" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="323" pos:column="17">childNode</name> <op:operator pos:line="323" pos:column="27">=</op:operator> <call><name><name pos:line="323" pos:column="29">childNode</name><op:operator pos:line="323" pos:column="38">-&gt;</op:operator><name pos:line="323" pos:column="40">NextSibling</name></name><argument_list pos:line="323" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="323" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="324" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="325" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="325" pos:column="31">*</type:modifier></type><name pos:line="325" pos:column="32">element</name> <init pos:line="325" pos:column="40">= <expr><call><name><name pos:line="325" pos:column="42">childNode</name><op:operator pos:line="325" pos:column="51">-&gt;</op:operator><name pos:line="325" pos:column="53">ToElement</name></name><argument_list pos:line="325" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="326" pos:column="17">int</name></type> <name pos:line="326" pos:column="21">x</name></decl><op:operator pos:line="326" pos:column="22">,</op:operator> <decl><type ref="prev"/><name pos:line="326" pos:column="24">y</name></decl><op:operator pos:line="326" pos:column="25">,</op:operator> <decl><type ref="prev"/><name pos:line="326" pos:column="27">z</name></decl>;</decl_stmt>
		<comment type="line" pos:line="327" pos:column="17">//const char *xStr = element-&gt;Attribute("posX", &amp;x);</comment>
		<comment type="line" pos:line="328" pos:column="17">//const char *yStr = element-&gt;Attribute("posY", &amp;y);</comment>
		<decl_stmt><decl><type><specifier pos:line="329" pos:column="17">const</specifier> <name pos:line="329" pos:column="23">char</name> <type:modifier pos:line="329" pos:column="28">*</type:modifier></type><name pos:line="329" pos:column="29">subMenuIdStr</name> <init pos:line="329" pos:column="42">= <expr><call><name><name pos:line="329" pos:column="44">element</name><op:operator pos:line="329" pos:column="51">-&gt;</op:operator><name pos:line="329" pos:column="53">Attribute</name></name><argument_list pos:line="329" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="329" pos:column="63">"subMenuId"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="330" pos:column="17">const</specifier> <name pos:line="330" pos:column="23">char</name> <type:modifier pos:line="330" pos:column="28">*</type:modifier></type><name pos:line="330" pos:column="29">name</name> <init pos:line="330" pos:column="34">= <expr><call><name><name pos:line="330" pos:column="36">element</name><op:operator pos:line="330" pos:column="43">-&gt;</op:operator><name pos:line="330" pos:column="45">Attribute</name></name><argument_list pos:line="330" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="330" pos:column="55">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="332" pos:column="17">if <condition pos:line="332" pos:column="20">(<expr><op:operator pos:line="332" pos:column="21">!</op:operator><name pos:line="332" pos:column="22">subMenuIdStr</name> <op:operator pos:line="332" pos:column="35">||</op:operator> <op:operator pos:line="332" pos:column="38">!</op:operator><name pos:line="332" pos:column="39">name</name></expr>)</condition><then pos:line="332" pos:column="44">
			<continue pos:line="333" pos:column="25">continue;</continue></then></if>

		<decl_stmt><decl><type><name pos:line="335" pos:column="17">MenuPosition</name> <type:modifier pos:line="335" pos:column="30">&amp;</type:modifier></type> <name pos:line="335" pos:column="32">menuPos</name> <init pos:line="335" pos:column="40">= <expr><call><name pos:line="335" pos:column="42">getMenuPosition</name><argument_list pos:line="335" pos:column="57">(<argument><expr><name pos:line="335" pos:column="58">subMenuIdStr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><name pos:line="336" pos:column="17">x</name> <op:operator pos:line="336" pos:column="19">=</op:operator> <name><name pos:line="336" pos:column="21">menuPos</name><op:operator pos:line="336" pos:column="28">.</op:operator><name pos:line="336" pos:column="29">_x</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="337" pos:column="17">y</name> <op:operator pos:line="337" pos:column="19">=</op:operator> <name><name pos:line="337" pos:column="21">menuPos</name><op:operator pos:line="337" pos:column="28">.</op:operator><name pos:line="337" pos:column="29">_y</name></name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="338" pos:column="17">z</name> <op:operator pos:line="338" pos:column="19">=</op:operator> <name><name pos:line="338" pos:column="21">menuPos</name><op:operator pos:line="338" pos:column="28">.</op:operator><name pos:line="338" pos:column="29">_z</name></name></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="340" pos:column="17">HMENU</name></type> <name pos:line="340" pos:column="23">hSubMenu</name> <init pos:line="340" pos:column="32">= <expr><call><name><op:operator pos:line="340" pos:column="34">::</op:operator><name pos:line="340" pos:column="36">GetSubMenu</name></name><argument_list pos:line="340" pos:column="46">(<argument><expr><name pos:line="340" pos:column="47">menuHandle</name></expr></argument>, <argument><expr><name pos:line="340" pos:column="59">x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="341" pos:column="17">if <condition pos:line="341" pos:column="20">(<expr><op:operator pos:line="341" pos:column="21">!</op:operator><name pos:line="341" pos:column="22">hSubMenu</name></expr>)</condition><then pos:line="341" pos:column="31">
			<continue pos:line="342" pos:column="25">continue;</continue></then></if>
		<decl_stmt><decl><type><name pos:line="343" pos:column="17">HMENU</name></type> <name pos:line="343" pos:column="23">hSubMenu2</name> <init pos:line="343" pos:column="33">= <expr><call><name><op:operator pos:line="343" pos:column="35">::</op:operator><name pos:line="343" pos:column="37">GetSubMenu</name></name><argument_list pos:line="343" pos:column="47">(<argument><expr><name pos:line="343" pos:column="48">hSubMenu</name></expr></argument>, <argument><expr><name pos:line="343" pos:column="58">y</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="344" pos:column="17">if <condition pos:line="344" pos:column="20">(<expr><op:operator pos:line="344" pos:column="21">!</op:operator><name pos:line="344" pos:column="22">hSubMenu2</name></expr>)</condition><then pos:line="344" pos:column="32">
			<continue pos:line="345" pos:column="25">continue;</continue></then></if>

		<decl_stmt><decl><type><name pos:line="347" pos:column="17">HMENU</name></type> <name pos:line="347" pos:column="23">hMenu</name> <init pos:line="347" pos:column="29">= <expr><name pos:line="347" pos:column="31">hSubMenu</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="348" pos:column="17">int</name></type> <name pos:line="348" pos:column="21">pos</name> <init pos:line="348" pos:column="25">= <expr><name pos:line="348" pos:column="27">y</name></expr></init></decl>;</decl_stmt>

		<comment type="line" pos:line="350" pos:column="17">//const char *zStr = element-&gt;Attribute("posZ", &amp;z);</comment>
		<if pos:line="351" pos:column="17">if <condition pos:line="351" pos:column="20">(<expr><name pos:line="351" pos:column="21">z</name> <op:operator pos:line="351" pos:column="23">!=</op:operator> <op:operator pos:line="351" pos:column="26">-</op:operator><lit:literal type="number" pos:line="351" pos:column="27">1</lit:literal></expr>)</condition><then pos:line="351" pos:column="29">
		<block pos:line="352" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="353" pos:column="25">HMENU</name></type> <name pos:line="353" pos:column="31">hSubMenu3</name> <init pos:line="353" pos:column="41">= <expr><call><name><op:operator pos:line="353" pos:column="43">::</op:operator><name pos:line="353" pos:column="45">GetSubMenu</name></name><argument_list pos:line="353" pos:column="55">(<argument><expr><name pos:line="353" pos:column="56">hSubMenu2</name></expr></argument>, <argument><expr><name pos:line="353" pos:column="67">z</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="354" pos:column="25">if <condition pos:line="354" pos:column="28">(<expr><op:operator pos:line="354" pos:column="29">!</op:operator><name pos:line="354" pos:column="30">hSubMenu3</name></expr>)</condition><then pos:line="354" pos:column="40">
				<continue pos:line="355" pos:column="33">continue;</continue></then></if>
			<expr_stmt><expr><name pos:line="356" pos:column="25">hMenu</name> <op:operator pos:line="356" pos:column="31">=</op:operator> <name pos:line="356" pos:column="33">hSubMenu2</name></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="357" pos:column="25">pos</name> <op:operator pos:line="357" pos:column="29">=</op:operator> <name pos:line="357" pos:column="31">z</name></expr>;</expr_stmt>
		}</block></then></if>
<cpp:ifdef pos:line="359" pos:column="1">#<cpp:directive pos:line="359" pos:column="2">ifdef</cpp:directive> <name pos:line="359" pos:column="8">UNICODE</name></cpp:ifdef>

		<decl_stmt><decl><type><specifier pos:line="361" pos:column="17">const</specifier> <name pos:line="361" pos:column="23">wchar_t</name> <type:modifier pos:line="361" pos:column="31">*</type:modifier></type><name pos:line="361" pos:column="32">nameW</name> <init pos:line="361" pos:column="38">= <expr><call><name><name pos:line="361" pos:column="40">wmc</name><op:operator pos:line="361" pos:column="43">-&gt;</op:operator><name pos:line="361" pos:column="45">char2wchar</name></name><argument_list pos:line="361" pos:column="55">(<argument><expr><name pos:line="361" pos:column="56">name</name></expr></argument>, <argument><expr><name pos:line="361" pos:column="62">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="362" pos:column="17">::</op:operator><name pos:line="362" pos:column="19">ModifyMenu</name></name><argument_list pos:line="362" pos:column="29">(<argument><expr><name pos:line="362" pos:column="30">hMenu</name></expr></argument>, <argument><expr><name pos:line="362" pos:column="37">pos</name></expr></argument>, <argument><expr><name pos:line="362" pos:column="42">MF_BYPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="362" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><name pos:line="362" pos:column="60">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="363" pos:column="1">#<cpp:directive pos:line="363" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><op:operator pos:line="364" pos:column="17">::</op:operator><name pos:line="364" pos:column="19">ModifyMenu</name></name><argument_list pos:line="364" pos:column="29">(<argument><expr><name pos:line="364" pos:column="30">hMenu</name></expr></argument>, <argument><expr><name pos:line="364" pos:column="37">pos</name></expr></argument>, <argument><expr><name pos:line="364" pos:column="42">MF_BYPOSITION</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="364" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><name pos:line="364" pos:column="60">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="365" pos:column="1">#<cpp:directive pos:line="365" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></for>
}</block></function>

<decl_stmt><decl><type><name pos:line="369" pos:column="1">int</name></type> <name><name pos:line="369" pos:column="5">tabContextMenuItemPos</name><index pos:line="369" pos:column="26">[]</index></name> <init pos:line="369" pos:column="29">= <expr><block pos:line="369" pos:column="31">{
<expr><lit:literal type="number" pos:line="370" pos:column="1">0</lit:literal></expr>, <comment type="line" pos:line="370" pos:column="4">// 0 : Close </comment>
<expr><lit:literal type="number" pos:line="371" pos:column="1">1</lit:literal></expr>, <comment type="line" pos:line="371" pos:column="4">// 1 : Close ALL BUT This</comment>
<expr><lit:literal type="number" pos:line="372" pos:column="1">2</lit:literal></expr>, <comment type="line" pos:line="372" pos:column="4">// 2 : Save</comment>
<expr><lit:literal type="number" pos:line="373" pos:column="1">3</lit:literal></expr>, <comment type="line" pos:line="373" pos:column="4">// 3 : Save As</comment>
<expr><lit:literal type="number" pos:line="374" pos:column="1">7</lit:literal></expr>, <comment type="line" pos:line="374" pos:column="4">// 4 : Print</comment>
<expr><lit:literal type="number" pos:line="375" pos:column="1">16</lit:literal></expr>,<comment type="line" pos:line="375" pos:column="4">// 5 : Move to Other View</comment>
<expr><lit:literal type="number" pos:line="376" pos:column="1">17</lit:literal></expr>,<comment type="line" pos:line="376" pos:column="4">// 6 : Clone to Other View</comment>
<expr><lit:literal type="number" pos:line="377" pos:column="1">12</lit:literal></expr>,<comment type="line" pos:line="377" pos:column="4">// 7 : Full File Path to Clipboard</comment>
<expr><lit:literal type="number" pos:line="378" pos:column="1">13</lit:literal></expr>,<comment type="line" pos:line="378" pos:column="4">// 8 : Filename to Clipboard</comment>
<expr><lit:literal type="number" pos:line="379" pos:column="1">14</lit:literal></expr>,<comment type="line" pos:line="379" pos:column="4">// 9 : Current Dir. Path to Clipboard</comment>
<expr><lit:literal type="number" pos:line="380" pos:column="1">4</lit:literal></expr>, <comment type="line" pos:line="380" pos:column="4">// 10: Rename</comment>
<expr><lit:literal type="number" pos:line="381" pos:column="1">5</lit:literal></expr>, <comment type="line" pos:line="381" pos:column="4">// 11: Delete</comment>
<expr><lit:literal type="number" pos:line="382" pos:column="1">9</lit:literal></expr>, <comment type="line" pos:line="382" pos:column="4">// 12: Read-Only</comment>
<expr><lit:literal type="number" pos:line="383" pos:column="1">10</lit:literal></expr>,<comment type="line" pos:line="383" pos:column="4">// 13: Clear Read-Only Flag</comment>
<expr><lit:literal type="number" pos:line="384" pos:column="1">18</lit:literal></expr>,<comment type="line" pos:line="384" pos:column="4">// 14: Move to New Instance</comment>
<expr><lit:literal type="number" pos:line="385" pos:column="1">19</lit:literal></expr>,<comment type="line" pos:line="385" pos:column="4">// 15: Open to New Instance</comment>
<expr><lit:literal type="number" pos:line="386" pos:column="1">6</lit:literal></expr>, <comment type="line" pos:line="386" pos:column="4">// 16: Reload</comment>

<expr><op:operator pos:line="388" pos:column="1">-</op:operator><lit:literal type="number" pos:line="388" pos:column="2">1</lit:literal></expr> <comment type="line" pos:line="388" pos:column="4">//-------End</comment>
}</block></expr></init></decl>;</decl_stmt>

<function><type><name pos:line="391" pos:column="1">void</name></type> <name><name pos:line="391" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="391" pos:column="23">::</op:operator><name pos:line="391" pos:column="25">changeLangTabContextMenu</name></name><parameter_list pos:line="391" pos:column="49">(<param><decl><type><name pos:line="391" pos:column="50">HMENU</name></type> <name pos:line="391" pos:column="56">hCM</name></decl></param>)</parameter_list>
<block pos:line="392" pos:column="1">{
	<if pos:line="393" pos:column="9">if <condition pos:line="393" pos:column="12">(<expr><name pos:line="393" pos:column="13">_nativeLangA</name></expr>)</condition><then pos:line="393" pos:column="26">
	<block pos:line="394" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="395" pos:column="17">TiXmlNodeA</name> <type:modifier pos:line="395" pos:column="28">*</type:modifier></type><name pos:line="395" pos:column="29">tabBarMenu</name> <init pos:line="395" pos:column="40">= <expr><call><name><name pos:line="395" pos:column="42">_nativeLangA</name><op:operator pos:line="395" pos:column="54">-&gt;</op:operator><name pos:line="395" pos:column="56">FirstChild</name></name><argument_list pos:line="395" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="395" pos:column="67">"Menu"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="396" pos:column="17">if <condition pos:line="396" pos:column="20">(<expr><name pos:line="396" pos:column="21">tabBarMenu</name></expr>)</condition><then pos:line="396" pos:column="32"> 
		<block pos:line="397" pos:column="17">{
			<expr_stmt><expr><name pos:line="398" pos:column="25">tabBarMenu</name> <op:operator pos:line="398" pos:column="36">=</op:operator> <call><name><name pos:line="398" pos:column="38">tabBarMenu</name><op:operator pos:line="398" pos:column="48">-&gt;</op:operator><name pos:line="398" pos:column="50">FirstChild</name></name><argument_list pos:line="398" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="398" pos:column="61">"TabBar"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="399" pos:column="25">if <condition pos:line="399" pos:column="28">(<expr><name pos:line="399" pos:column="29">tabBarMenu</name></expr>)</condition><then pos:line="399" pos:column="40">
			<block pos:line="400" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="401" pos:column="33">WcharMbcsConvertor</name> <type:modifier pos:line="401" pos:column="52">*</type:modifier></type><name pos:line="401" pos:column="53">wmc</name> <init pos:line="401" pos:column="57">= <expr><call><name><name pos:line="401" pos:column="59">WcharMbcsConvertor</name><op:operator pos:line="401" pos:column="77">::</op:operator><name pos:line="401" pos:column="79">getInstance</name></name><argument_list pos:line="401" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="402" pos:column="33">int</name></type> <name pos:line="402" pos:column="37">nbCMItems</name> <init pos:line="402" pos:column="47">= <expr><sizeof pos:line="402" pos:column="49">sizeof<argument_list pos:line="402" pos:column="55">(<argument><expr><name pos:line="402" pos:column="56">tabContextMenuItemPos</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="402" pos:column="78">/</op:operator><sizeof pos:line="402" pos:column="79">sizeof<argument_list pos:line="402" pos:column="85">(<argument><expr><name pos:line="402" pos:column="86">int</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

				<for pos:line="404" pos:column="33">for (<init><decl><type><name pos:line="404" pos:column="38">TiXmlNodeA</name> <type:modifier pos:line="404" pos:column="49">*</type:modifier></type><name pos:line="404" pos:column="50">childNode</name> <init pos:line="404" pos:column="60">= <expr><call><name><name pos:line="404" pos:column="62">tabBarMenu</name><op:operator pos:line="404" pos:column="72">-&gt;</op:operator><name pos:line="404" pos:column="74">FirstChildElement</name></name><argument_list pos:line="404" pos:column="91">(<argument><expr><lit:literal type="string" pos:line="404" pos:column="92">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
					<condition><expr><name pos:line="405" pos:column="41">childNode</name></expr> ;</condition>
					<incr><expr><name pos:line="406" pos:column="41">childNode</name> <op:operator pos:line="406" pos:column="51">=</op:operator> <call><name><name pos:line="406" pos:column="53">childNode</name><op:operator pos:line="406" pos:column="62">-&gt;</op:operator><name pos:line="406" pos:column="64">NextSibling</name></name><argument_list pos:line="406" pos:column="75">(<argument><expr><lit:literal type="string" pos:line="406" pos:column="76">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
				<block pos:line="407" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="408" pos:column="41">TiXmlElementA</name> <type:modifier pos:line="408" pos:column="55">*</type:modifier></type><name pos:line="408" pos:column="56">element</name> <init pos:line="408" pos:column="64">= <expr><call><name><name pos:line="408" pos:column="66">childNode</name><op:operator pos:line="408" pos:column="75">-&gt;</op:operator><name pos:line="408" pos:column="77">ToElement</name></name><argument_list pos:line="408" pos:column="86">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="409" pos:column="41">int</name></type> <name pos:line="409" pos:column="45">index</name></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="410" pos:column="41">const</specifier> <name pos:line="410" pos:column="47">char</name> <type:modifier pos:line="410" pos:column="52">*</type:modifier></type><name pos:line="410" pos:column="53">indexStr</name> <init pos:line="410" pos:column="62">= <expr><call><name><name pos:line="410" pos:column="64">element</name><op:operator pos:line="410" pos:column="71">-&gt;</op:operator><name pos:line="410" pos:column="73">Attribute</name></name><argument_list pos:line="410" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="410" pos:column="83">"CMID"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="410" pos:column="91">&amp;</op:operator><name pos:line="410" pos:column="92">index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="411" pos:column="41">if <condition pos:line="411" pos:column="44">(<expr><op:operator pos:line="411" pos:column="45">!</op:operator><name pos:line="411" pos:column="46">indexStr</name> <op:operator pos:line="411" pos:column="55">||</op:operator> <op:operator pos:line="411" pos:column="58">(</op:operator><name><name pos:line="411" pos:column="59">index</name> <argument_list pos:line="411" pos:column="65">&lt; <argument><expr><lit:literal type="number" pos:line="411" pos:column="67">0</lit:literal> <op:operator pos:line="411" pos:column="69">||</op:operator> <name pos:line="411" pos:column="72">index</name></expr></argument> &gt;</argument_list></name><op:operator pos:line="411" pos:column="79">=</op:operator> <name pos:line="411" pos:column="81">nbCMItems</name><op:operator pos:line="411" pos:column="90">-</op:operator><lit:literal type="number" pos:line="411" pos:column="91">1</lit:literal><op:operator pos:line="411" pos:column="92">)</op:operator></expr>)</condition><then pos:line="411" pos:column="94">
						<continue pos:line="412" pos:column="49">continue;</continue></then></if>

					<decl_stmt><decl><type><name pos:line="414" pos:column="41">int</name></type> <name pos:line="414" pos:column="45">pos</name> <init pos:line="414" pos:column="49">= <expr><name><name pos:line="414" pos:column="51">tabContextMenuItemPos</name><index pos:line="414" pos:column="72">[<expr><name pos:line="414" pos:column="73">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="415" pos:column="41">const</specifier> <name pos:line="415" pos:column="47">char</name> <type:modifier pos:line="415" pos:column="52">*</type:modifier></type><name pos:line="415" pos:column="53">pName</name> <init pos:line="415" pos:column="59">= <expr><call><name><name pos:line="415" pos:column="61">element</name><op:operator pos:line="415" pos:column="68">-&gt;</op:operator><name pos:line="415" pos:column="70">Attribute</name></name><argument_list pos:line="415" pos:column="79">(<argument><expr><lit:literal type="string" pos:line="415" pos:column="80">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="416" pos:column="41">if <condition pos:line="416" pos:column="44">(<expr><name pos:line="416" pos:column="45">pName</name></expr>)</condition><then pos:line="416" pos:column="51">
					<block pos:line="417" pos:column="41">{
						<decl_stmt><decl><type><specifier pos:line="418" pos:column="49">const</specifier> <name pos:line="418" pos:column="55">wchar_t</name> <type:modifier pos:line="418" pos:column="63">*</type:modifier></type><name pos:line="418" pos:column="64">pNameW</name> <init pos:line="418" pos:column="71">= <expr><call><name><name pos:line="418" pos:column="73">wmc</name><op:operator pos:line="418" pos:column="76">-&gt;</op:operator><name pos:line="418" pos:column="78">char2wchar</name></name><argument_list pos:line="418" pos:column="88">(<argument><expr><name pos:line="418" pos:column="89">pName</name></expr></argument>, <argument><expr><name pos:line="418" pos:column="96">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<decl_stmt><decl><type><name pos:line="419" pos:column="49">int</name></type> <name pos:line="419" pos:column="53">cmdID</name> <init pos:line="419" pos:column="59">= <expr><call><name><op:operator pos:line="419" pos:column="61">::</op:operator><name pos:line="419" pos:column="63">GetMenuItemID</name></name><argument_list pos:line="419" pos:column="76">(<argument><expr><name pos:line="419" pos:column="77">hCM</name></expr></argument>, <argument><expr><name pos:line="419" pos:column="82">pos</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="420" pos:column="49">::</op:operator><name pos:line="420" pos:column="51">ModifyMenu</name></name><argument_list pos:line="420" pos:column="61">(<argument><expr><name pos:line="420" pos:column="62">hCM</name></expr></argument>, <argument><expr><name pos:line="420" pos:column="67">pos</name></expr></argument>, <argument><expr><name pos:line="420" pos:column="72">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="420" pos:column="87">cmdID</name></expr></argument>, <argument><expr><name pos:line="420" pos:column="94">pNameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then></if>
				}</block></for>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="428" pos:column="1">void</name></type> <name><name pos:line="428" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="428" pos:column="23">::</op:operator><name pos:line="428" pos:column="25">changeLangTabDrapContextMenu</name></name><parameter_list pos:line="428" pos:column="53">(<param><decl><type><name pos:line="428" pos:column="54">HMENU</name></type> <name pos:line="428" pos:column="60">hCM</name></decl></param>)</parameter_list>
<block pos:line="429" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="430" pos:column="9">const</specifier> <name pos:line="430" pos:column="15">int</name></type> <name pos:line="430" pos:column="19">POS_GO2VIEW</name> <init pos:line="430" pos:column="31">= <expr><lit:literal type="number" pos:line="430" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="431" pos:column="9">const</specifier> <name pos:line="431" pos:column="15">int</name></type> <name pos:line="431" pos:column="19">POS_CLONE2VIEW</name> <init pos:line="431" pos:column="34">= <expr><lit:literal type="number" pos:line="431" pos:column="36">1</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="432" pos:column="9">const</specifier> <name pos:line="432" pos:column="15">char</name> <type:modifier pos:line="432" pos:column="20">*</type:modifier></type><name pos:line="432" pos:column="21">goToViewA</name> <init pos:line="432" pos:column="31">= <expr><name pos:line="432" pos:column="33">NULL</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="433" pos:column="9">const</specifier> <name pos:line="433" pos:column="15">char</name> <type:modifier pos:line="433" pos:column="20">*</type:modifier></type><name pos:line="433" pos:column="21">cloneToViewA</name> <init pos:line="433" pos:column="34">= <expr><name pos:line="433" pos:column="36">NULL</name></expr></init></decl>;</decl_stmt>

	<if pos:line="435" pos:column="9">if <condition pos:line="435" pos:column="12">(<expr><name pos:line="435" pos:column="13">_nativeLangA</name></expr>)</condition><then pos:line="435" pos:column="26">
	<block pos:line="436" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="437" pos:column="17">TiXmlNodeA</name> <type:modifier pos:line="437" pos:column="28">*</type:modifier></type><name pos:line="437" pos:column="29">tabBarMenu</name> <init pos:line="437" pos:column="40">= <expr><call><name><name pos:line="437" pos:column="42">_nativeLangA</name><op:operator pos:line="437" pos:column="54">-&gt;</op:operator><name pos:line="437" pos:column="56">FirstChild</name></name><argument_list pos:line="437" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="437" pos:column="67">"Menu"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="438" pos:column="17">if <condition pos:line="438" pos:column="20">(<expr><name pos:line="438" pos:column="21">tabBarMenu</name></expr>)</condition><then pos:line="438" pos:column="32">
			<expr_stmt><expr><name pos:line="439" pos:column="25">tabBarMenu</name> <op:operator pos:line="439" pos:column="36">=</op:operator> <call><name><name pos:line="439" pos:column="38">tabBarMenu</name><op:operator pos:line="439" pos:column="48">-&gt;</op:operator><name pos:line="439" pos:column="50">FirstChild</name></name><argument_list pos:line="439" pos:column="60">(<argument><expr><lit:literal type="string" pos:line="439" pos:column="61">"TabBar"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="440" pos:column="17">if <condition pos:line="440" pos:column="20">(<expr><name pos:line="440" pos:column="21">tabBarMenu</name></expr>)</condition><then pos:line="440" pos:column="32">
		<block pos:line="441" pos:column="17">{
			<for pos:line="442" pos:column="25">for (<init><decl><type><name pos:line="442" pos:column="30">TiXmlNodeA</name> <type:modifier pos:line="442" pos:column="41">*</type:modifier></type><name pos:line="442" pos:column="42">childNode</name> <init pos:line="442" pos:column="52">= <expr><call><name><name pos:line="442" pos:column="54">tabBarMenu</name><op:operator pos:line="442" pos:column="64">-&gt;</op:operator><name pos:line="442" pos:column="66">FirstChildElement</name></name><argument_list pos:line="442" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="442" pos:column="84">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
				<condition><expr><name pos:line="443" pos:column="33">childNode</name></expr> ;</condition>
				<incr><expr><name pos:line="444" pos:column="33">childNode</name> <op:operator pos:line="444" pos:column="43">=</op:operator> <call><name><name pos:line="444" pos:column="45">childNode</name><op:operator pos:line="444" pos:column="54">-&gt;</op:operator><name pos:line="444" pos:column="56">NextSibling</name></name><argument_list pos:line="444" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="444" pos:column="68">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
			<block pos:line="445" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="446" pos:column="33">TiXmlElementA</name> <type:modifier pos:line="446" pos:column="47">*</type:modifier></type><name pos:line="446" pos:column="48">element</name> <init pos:line="446" pos:column="56">= <expr><call><name><name pos:line="446" pos:column="58">childNode</name><op:operator pos:line="446" pos:column="67">-&gt;</op:operator><name pos:line="446" pos:column="69">ToElement</name></name><argument_list pos:line="446" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="447" pos:column="33">int</name></type> <name pos:line="447" pos:column="37">ordre</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="448" pos:column="33">element</name><op:operator pos:line="448" pos:column="40">-&gt;</op:operator><name pos:line="448" pos:column="42">Attribute</name></name><argument_list pos:line="448" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="448" pos:column="52">"CMID"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="448" pos:column="60">&amp;</op:operator><name pos:line="448" pos:column="61">ordre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="449" pos:column="33">if <condition pos:line="449" pos:column="36">(<expr><name pos:line="449" pos:column="37">ordre</name> <op:operator pos:line="449" pos:column="43">==</op:operator> <lit:literal type="number" pos:line="449" pos:column="46">5</lit:literal></expr>)</condition><then pos:line="449" pos:column="48">
					<expr_stmt><expr><name pos:line="450" pos:column="41">goToViewA</name> <op:operator pos:line="450" pos:column="51">=</op:operator> <call><name><name pos:line="450" pos:column="53">element</name><op:operator pos:line="450" pos:column="60">-&gt;</op:operator><name pos:line="450" pos:column="62">Attribute</name></name><argument_list pos:line="450" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="450" pos:column="72">"name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
				<else pos:line="451" pos:column="33">else <if pos:line="451" pos:column="38">if <condition pos:line="451" pos:column="41">(<expr><name pos:line="451" pos:column="42">ordre</name> <op:operator pos:line="451" pos:column="48">==</op:operator> <lit:literal type="number" pos:line="451" pos:column="51">6</lit:literal></expr>)</condition><then pos:line="451" pos:column="53">
					<expr_stmt><expr><name pos:line="452" pos:column="41">cloneToViewA</name> <op:operator pos:line="452" pos:column="54">=</op:operator> <call><name><name pos:line="452" pos:column="56">element</name><op:operator pos:line="452" pos:column="63">-&gt;</op:operator><name pos:line="452" pos:column="65">Attribute</name></name><argument_list pos:line="452" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="452" pos:column="75">"name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>
			}</block></for>
		}</block></then></if>
		<comment type="line" pos:line="455" pos:column="17">//HMENU hCM = _tabPopupDropMenu.getMenuHandle();</comment>
<cpp:ifdef pos:line="456" pos:column="1">#<cpp:directive pos:line="456" pos:column="2">ifdef</cpp:directive> <name pos:line="456" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><name pos:line="457" pos:column="17">WcharMbcsConvertor</name> <type:modifier pos:line="457" pos:column="36">*</type:modifier></type><name pos:line="457" pos:column="37">wmc</name> <init pos:line="457" pos:column="41">= <expr><call><name><name pos:line="457" pos:column="43">WcharMbcsConvertor</name><op:operator pos:line="457" pos:column="61">::</op:operator><name pos:line="457" pos:column="63">getInstance</name></name><argument_list pos:line="457" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="458" pos:column="17">if <condition pos:line="458" pos:column="20">(<expr><name pos:line="458" pos:column="21">goToViewA</name> <op:operator pos:line="458" pos:column="31">&amp;&amp;</op:operator> <name><name pos:line="458" pos:column="34">goToViewA</name><index pos:line="458" pos:column="43">[<expr><lit:literal type="number" pos:line="458" pos:column="44">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="458" pos:column="47">
		<block pos:line="459" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="460" pos:column="25">const</specifier> <name pos:line="460" pos:column="31">wchar_t</name> <type:modifier pos:line="460" pos:column="39">*</type:modifier></type><name pos:line="460" pos:column="40">goToViewG</name> <init pos:line="460" pos:column="50">= <expr><call><name><name pos:line="460" pos:column="52">wmc</name><op:operator pos:line="460" pos:column="55">-&gt;</op:operator><name pos:line="460" pos:column="57">char2wchar</name></name><argument_list pos:line="460" pos:column="67">(<argument><expr><name pos:line="460" pos:column="68">goToViewA</name></expr></argument>, <argument><expr><name pos:line="460" pos:column="79">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="461" pos:column="25">int</name></type> <name pos:line="461" pos:column="29">cmdID</name> <init pos:line="461" pos:column="35">= <expr><call><name><op:operator pos:line="461" pos:column="37">::</op:operator><name pos:line="461" pos:column="39">GetMenuItemID</name></name><argument_list pos:line="461" pos:column="52">(<argument><expr><name pos:line="461" pos:column="53">hCM</name></expr></argument>, <argument><expr><name pos:line="461" pos:column="58">POS_GO2VIEW</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="462" pos:column="25">::</op:operator><name pos:line="462" pos:column="27">ModifyMenu</name></name><argument_list pos:line="462" pos:column="37">(<argument><expr><name pos:line="462" pos:column="38">hCM</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="43">POS_GO2VIEW</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="56">MF_BYPOSITION</name><op:operator pos:line="462" pos:column="69">|</op:operator><name pos:line="462" pos:column="70">MF_STRING</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="81">cmdID</name></expr></argument>, <argument><expr><name pos:line="462" pos:column="88">goToViewG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="464" pos:column="17">if <condition pos:line="464" pos:column="20">(<expr><name pos:line="464" pos:column="21">cloneToViewA</name> <op:operator pos:line="464" pos:column="34">&amp;&amp;</op:operator> <name><name pos:line="464" pos:column="37">cloneToViewA</name><index pos:line="464" pos:column="49">[<expr><lit:literal type="number" pos:line="464" pos:column="50">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="464" pos:column="53">
		<block pos:line="465" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="466" pos:column="25">const</specifier> <name pos:line="466" pos:column="31">wchar_t</name> <type:modifier pos:line="466" pos:column="39">*</type:modifier></type><name pos:line="466" pos:column="40">cloneToViewG</name> <init pos:line="466" pos:column="53">= <expr><call><name><name pos:line="466" pos:column="55">wmc</name><op:operator pos:line="466" pos:column="58">-&gt;</op:operator><name pos:line="466" pos:column="60">char2wchar</name></name><argument_list pos:line="466" pos:column="70">(<argument><expr><name pos:line="466" pos:column="71">cloneToViewA</name></expr></argument>, <argument><expr><name pos:line="466" pos:column="85">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="467" pos:column="25">int</name></type> <name pos:line="467" pos:column="29">cmdID</name> <init pos:line="467" pos:column="35">= <expr><call><name><op:operator pos:line="467" pos:column="37">::</op:operator><name pos:line="467" pos:column="39">GetMenuItemID</name></name><argument_list pos:line="467" pos:column="52">(<argument><expr><name pos:line="467" pos:column="53">hCM</name></expr></argument>, <argument><expr><name pos:line="467" pos:column="58">POS_CLONE2VIEW</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="468" pos:column="25">::</op:operator><name pos:line="468" pos:column="27">ModifyMenu</name></name><argument_list pos:line="468" pos:column="37">(<argument><expr><name pos:line="468" pos:column="38">hCM</name></expr></argument>, <argument><expr><name pos:line="468" pos:column="43">POS_CLONE2VIEW</name></expr></argument>, <argument><expr><name pos:line="468" pos:column="59">MF_BYPOSITION</name><op:operator pos:line="468" pos:column="72">|</op:operator><name pos:line="468" pos:column="73">MF_STRING</name></expr></argument>, <argument><expr><name pos:line="468" pos:column="84">cmdID</name></expr></argument>, <argument><expr><name pos:line="468" pos:column="91">cloneToViewG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
<cpp:else pos:line="470" pos:column="1">#<cpp:directive pos:line="470" pos:column="2">else</cpp:directive></cpp:else>
		<if pos:line="471" pos:column="17">if <condition pos:line="471" pos:column="20">(<expr><name pos:line="471" pos:column="21">goToViewA</name> <op:operator pos:line="471" pos:column="31">&amp;&amp;</op:operator> <name><name pos:line="471" pos:column="34">goToViewA</name><index pos:line="471" pos:column="43">[<expr><lit:literal type="number" pos:line="471" pos:column="44">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="471" pos:column="47">
		<block pos:line="472" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="473" pos:column="25">int</name></type> <name pos:line="473" pos:column="29">cmdID</name> <init pos:line="473" pos:column="35">= <expr><call><name><op:operator pos:line="473" pos:column="37">::</op:operator><name pos:line="473" pos:column="39">GetMenuItemID</name></name><argument_list pos:line="473" pos:column="52">(<argument><expr><name pos:line="473" pos:column="53">hCM</name></expr></argument>, <argument><expr><name pos:line="473" pos:column="58">POS_GO2VIEW</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="474" pos:column="25">::</op:operator><name pos:line="474" pos:column="27">ModifyMenu</name></name><argument_list pos:line="474" pos:column="37">(<argument><expr><name pos:line="474" pos:column="38">hCM</name></expr></argument>, <argument><expr><name pos:line="474" pos:column="43">POS_GO2VIEW</name></expr></argument>, <argument><expr><name pos:line="474" pos:column="56">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="474" pos:column="71">cmdID</name></expr></argument>, <argument><expr><name pos:line="474" pos:column="78">goToViewA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<if pos:line="476" pos:column="17">if <condition pos:line="476" pos:column="20">(<expr><name pos:line="476" pos:column="21">cloneToViewA</name> <op:operator pos:line="476" pos:column="34">&amp;&amp;</op:operator> <name><name pos:line="476" pos:column="37">cloneToViewA</name><index pos:line="476" pos:column="49">[<expr><lit:literal type="number" pos:line="476" pos:column="50">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="476" pos:column="53">
		<block pos:line="477" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="478" pos:column="25">int</name></type> <name pos:line="478" pos:column="29">cmdID</name> <init pos:line="478" pos:column="35">= <expr><call><name><op:operator pos:line="478" pos:column="37">::</op:operator><name pos:line="478" pos:column="39">GetMenuItemID</name></name><argument_list pos:line="478" pos:column="52">(<argument><expr><name pos:line="478" pos:column="53">hCM</name></expr></argument>, <argument><expr><name pos:line="478" pos:column="58">POS_CLONE2VIEW</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="479" pos:column="25">::</op:operator><name pos:line="479" pos:column="27">ModifyMenu</name></name><argument_list pos:line="479" pos:column="37">(<argument><expr><name pos:line="479" pos:column="38">hCM</name></expr></argument>, <argument><expr><name pos:line="479" pos:column="43">POS_CLONE2VIEW</name></expr></argument>, <argument><expr><name pos:line="479" pos:column="59">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="479" pos:column="74">cmdID</name></expr></argument>, <argument><expr><name pos:line="479" pos:column="81">cloneToViewA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
<cpp:endif pos:line="481" pos:column="1">#<cpp:directive pos:line="481" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="485" pos:column="1">void</name></type> <name><name pos:line="485" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="485" pos:column="23">::</op:operator><name pos:line="485" pos:column="25">changeConfigLang</name></name><parameter_list pos:line="485" pos:column="41">(<param><decl><type><name pos:line="485" pos:column="42">HWND</name></type> <name pos:line="485" pos:column="47">hDlg</name></decl></param>)</parameter_list>
<block pos:line="486" pos:column="1">{
	<if pos:line="487" pos:column="9">if <condition pos:line="487" pos:column="12">(<expr><op:operator pos:line="487" pos:column="13">!</op:operator><name pos:line="487" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="487" pos:column="27"> <return pos:line="487" pos:column="28">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="489" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="489" pos:column="20">*</type:modifier></type><name pos:line="489" pos:column="21">styleConfDlgNode</name> <init pos:line="489" pos:column="38">= <expr><call><name><name pos:line="489" pos:column="40">_nativeLangA</name><op:operator pos:line="489" pos:column="52">-&gt;</op:operator><name pos:line="489" pos:column="54">FirstChild</name></name><argument_list pos:line="489" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="489" pos:column="65">"Dialog"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="490" pos:column="9">if <condition pos:line="490" pos:column="12">(<expr><op:operator pos:line="490" pos:column="13">!</op:operator><name pos:line="490" pos:column="14">styleConfDlgNode</name></expr>)</condition><then pos:line="490" pos:column="31"> <return pos:line="490" pos:column="32">return;</return></then></if>	
	
	<expr_stmt><expr><name pos:line="492" pos:column="9">styleConfDlgNode</name> <op:operator pos:line="492" pos:column="26">=</op:operator> <call><name><name pos:line="492" pos:column="28">styleConfDlgNode</name><op:operator pos:line="492" pos:column="44">-&gt;</op:operator><name pos:line="492" pos:column="46">FirstChild</name></name><argument_list pos:line="492" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="492" pos:column="57">"StyleConfig"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="493" pos:column="9">if <condition pos:line="493" pos:column="12">(<expr><op:operator pos:line="493" pos:column="13">!</op:operator><name pos:line="493" pos:column="14">styleConfDlgNode</name></expr>)</condition><then pos:line="493" pos:column="31"> <return pos:line="493" pos:column="32">return;</return></then></if>

	<comment type="line" pos:line="495" pos:column="9">//HWND hDlg = _configStyleDlg.getHSelf();</comment>

<cpp:ifdef pos:line="497" pos:column="1">#<cpp:directive pos:line="497" pos:column="2">ifdef</cpp:directive> <name pos:line="497" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="498" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="498" pos:column="28">*</type:modifier></type><name pos:line="498" pos:column="29">wmc</name> <init pos:line="498" pos:column="33">= <expr><call><name><name pos:line="498" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="498" pos:column="53">::</op:operator><name pos:line="498" pos:column="55">getInstance</name></name><argument_list pos:line="498" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="499" pos:column="1">#<cpp:directive pos:line="499" pos:column="2">endif</cpp:directive></cpp:endif>

	<comment type="line" pos:line="501" pos:column="9">// Set Title</comment>
	<decl_stmt><decl><type><specifier pos:line="502" pos:column="9">const</specifier> <name pos:line="502" pos:column="15">char</name> <type:modifier pos:line="502" pos:column="20">*</type:modifier></type><name pos:line="502" pos:column="21">titre</name> <init pos:line="502" pos:column="27">= <expr><op:operator pos:line="502" pos:column="29">(</op:operator><call><name><name pos:line="502" pos:column="30">styleConfDlgNode</name><op:operator pos:line="502" pos:column="46">-&gt;</op:operator><name pos:line="502" pos:column="48">ToElement</name></name><argument_list pos:line="502" pos:column="57">()</argument_list></call><op:operator pos:line="502" pos:column="59">)</op:operator><op:operator pos:line="502" pos:column="60">-&gt;</op:operator><call><name pos:line="502" pos:column="62">Attribute</name><argument_list pos:line="502" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="502" pos:column="72">"title"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="504" pos:column="9">if <condition pos:line="504" pos:column="12">(<expr><op:operator pos:line="504" pos:column="13">(</op:operator><name pos:line="504" pos:column="14">titre</name> <op:operator pos:line="504" pos:column="20">&amp;&amp;</op:operator> <name><name pos:line="504" pos:column="23">titre</name><index pos:line="504" pos:column="28">[<expr><lit:literal type="number" pos:line="504" pos:column="29">0</lit:literal></expr>]</index></name><op:operator pos:line="504" pos:column="31">)</op:operator> <op:operator pos:line="504" pos:column="33">&amp;&amp;</op:operator> <name pos:line="504" pos:column="36">hDlg</name></expr>)</condition><then pos:line="504" pos:column="41">
	<block pos:line="505" pos:column="9">{
<cpp:ifdef pos:line="506" pos:column="1">#<cpp:directive pos:line="506" pos:column="2">ifdef</cpp:directive> <name pos:line="506" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="507" pos:column="17">const</specifier> <name pos:line="507" pos:column="23">wchar_t</name> <type:modifier pos:line="507" pos:column="31">*</type:modifier></type><name pos:line="507" pos:column="32">nameW</name> <init pos:line="507" pos:column="38">= <expr><call><name><name pos:line="507" pos:column="40">wmc</name><op:operator pos:line="507" pos:column="43">-&gt;</op:operator><name pos:line="507" pos:column="45">char2wchar</name></name><argument_list pos:line="507" pos:column="55">(<argument><expr><name pos:line="507" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="507" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="508" pos:column="17">::</op:operator><name pos:line="508" pos:column="19">SetWindowText</name></name><argument_list pos:line="508" pos:column="32">(<argument><expr><name pos:line="508" pos:column="33">hDlg</name></expr></argument>, <argument><expr><name pos:line="508" pos:column="39">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="509" pos:column="1">#<cpp:directive pos:line="509" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><op:operator pos:line="510" pos:column="17">::</op:operator><name pos:line="510" pos:column="19">SetWindowText</name></name><argument_list pos:line="510" pos:column="32">(<argument><expr><name pos:line="510" pos:column="33">hDlg</name></expr></argument>, <argument><expr><name pos:line="510" pos:column="39">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="511" pos:column="1">#<cpp:directive pos:line="511" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
	<for pos:line="513" pos:column="9">for (<init><decl><type><name pos:line="513" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="513" pos:column="25">*</type:modifier></type><name pos:line="513" pos:column="26">childNode</name> <init pos:line="513" pos:column="36">= <expr><call><name><name pos:line="513" pos:column="38">styleConfDlgNode</name><op:operator pos:line="513" pos:column="54">-&gt;</op:operator><name pos:line="513" pos:column="56">FirstChildElement</name></name><argument_list pos:line="513" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="513" pos:column="74">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="514" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="515" pos:column="17">childNode</name> <op:operator pos:line="515" pos:column="27">=</op:operator> <call><name><name pos:line="515" pos:column="29">childNode</name><op:operator pos:line="515" pos:column="38">-&gt;</op:operator><name pos:line="515" pos:column="40">NextSibling</name></name><argument_list pos:line="515" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="515" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="516" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="517" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="517" pos:column="31">*</type:modifier></type><name pos:line="517" pos:column="32">element</name> <init pos:line="517" pos:column="40">= <expr><call><name><name pos:line="517" pos:column="42">childNode</name><op:operator pos:line="517" pos:column="51">-&gt;</op:operator><name pos:line="517" pos:column="53">ToElement</name></name><argument_list pos:line="517" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="518" pos:column="17">int</name></type> <name pos:line="518" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="519" pos:column="17">const</specifier> <name pos:line="519" pos:column="23">char</name> <type:modifier pos:line="519" pos:column="28">*</type:modifier></type><name pos:line="519" pos:column="29">sentinel</name> <init pos:line="519" pos:column="38">= <expr><call><name><name pos:line="519" pos:column="40">element</name><op:operator pos:line="519" pos:column="47">-&gt;</op:operator><name pos:line="519" pos:column="49">Attribute</name></name><argument_list pos:line="519" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="519" pos:column="59">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="519" pos:column="65">&amp;</op:operator><name pos:line="519" pos:column="66">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="520" pos:column="17">const</specifier> <name pos:line="520" pos:column="23">char</name> <type:modifier pos:line="520" pos:column="28">*</type:modifier></type><name pos:line="520" pos:column="29">name</name> <init pos:line="520" pos:column="34">= <expr><call><name><name pos:line="520" pos:column="36">element</name><op:operator pos:line="520" pos:column="43">-&gt;</op:operator><name pos:line="520" pos:column="45">Attribute</name></name><argument_list pos:line="520" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="520" pos:column="55">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="521" pos:column="17">if <condition pos:line="521" pos:column="20">(<expr><name pos:line="521" pos:column="21">sentinel</name> <op:operator pos:line="521" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="521" pos:column="33">(</op:operator><name pos:line="521" pos:column="34">name</name> <op:operator pos:line="521" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="521" pos:column="42">name</name><index pos:line="521" pos:column="46">[<expr><lit:literal type="number" pos:line="521" pos:column="47">0</lit:literal></expr>]</index></name><op:operator pos:line="521" pos:column="49">)</op:operator></expr>)</condition><then pos:line="521" pos:column="51">
		<block pos:line="522" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="523" pos:column="25">HWND</name></type> <name pos:line="523" pos:column="30">hItem</name> <init pos:line="523" pos:column="36">= <expr><call><name><op:operator pos:line="523" pos:column="38">::</op:operator><name pos:line="523" pos:column="40">GetDlgItem</name></name><argument_list pos:line="523" pos:column="50">(<argument><expr><name pos:line="523" pos:column="51">hDlg</name></expr></argument>, <argument><expr><name pos:line="523" pos:column="57">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="524" pos:column="25">if <condition pos:line="524" pos:column="28">(<expr><name pos:line="524" pos:column="29">hItem</name></expr>)</condition><then pos:line="524" pos:column="35">
			<block pos:line="525" pos:column="25">{
<cpp:ifdef pos:line="526" pos:column="1">#<cpp:directive pos:line="526" pos:column="2">ifdef</cpp:directive> <name pos:line="526" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><specifier pos:line="527" pos:column="33">const</specifier> <name pos:line="527" pos:column="39">wchar_t</name> <type:modifier pos:line="527" pos:column="47">*</type:modifier></type><name pos:line="527" pos:column="48">nameW</name> <init pos:line="527" pos:column="54">= <expr><call><name><name pos:line="527" pos:column="56">wmc</name><op:operator pos:line="527" pos:column="59">-&gt;</op:operator><name pos:line="527" pos:column="61">char2wchar</name></name><argument_list pos:line="527" pos:column="71">(<argument><expr><name pos:line="527" pos:column="72">name</name></expr></argument>, <argument><expr><name pos:line="527" pos:column="78">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="528" pos:column="33">::</op:operator><name pos:line="528" pos:column="35">SetWindowText</name></name><argument_list pos:line="528" pos:column="48">(<argument><expr><name pos:line="528" pos:column="49">hItem</name></expr></argument>, <argument><expr><name pos:line="528" pos:column="56">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="529" pos:column="1">#<cpp:directive pos:line="529" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><call><name><op:operator pos:line="530" pos:column="33">::</op:operator><name pos:line="530" pos:column="35">SetWindowText</name></name><argument_list pos:line="530" pos:column="48">(<argument><expr><name pos:line="530" pos:column="49">hItem</name></expr></argument>, <argument><expr><name pos:line="530" pos:column="56">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="531" pos:column="1">#<cpp:directive pos:line="531" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
	<expr_stmt><expr><name pos:line="535" pos:column="9">styleConfDlgNode</name> <op:operator pos:line="535" pos:column="26">=</op:operator> <call><name><name pos:line="535" pos:column="28">styleConfDlgNode</name><op:operator pos:line="535" pos:column="44">-&gt;</op:operator><name pos:line="535" pos:column="46">FirstChild</name></name><argument_list pos:line="535" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="535" pos:column="57">"SubDialog"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
	<for pos:line="537" pos:column="9">for (<init><decl><type><name pos:line="537" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="537" pos:column="25">*</type:modifier></type><name pos:line="537" pos:column="26">childNode</name> <init pos:line="537" pos:column="36">= <expr><call><name><name pos:line="537" pos:column="38">styleConfDlgNode</name><op:operator pos:line="537" pos:column="54">-&gt;</op:operator><name pos:line="537" pos:column="56">FirstChildElement</name></name><argument_list pos:line="537" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="537" pos:column="74">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="538" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="539" pos:column="17">childNode</name> <op:operator pos:line="539" pos:column="27">=</op:operator> <call><name><name pos:line="539" pos:column="29">childNode</name><op:operator pos:line="539" pos:column="38">-&gt;</op:operator><name pos:line="539" pos:column="40">NextSibling</name></name><argument_list pos:line="539" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="539" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="540" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="541" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="541" pos:column="31">*</type:modifier></type><name pos:line="541" pos:column="32">element</name> <init pos:line="541" pos:column="40">= <expr><call><name><name pos:line="541" pos:column="42">childNode</name><op:operator pos:line="541" pos:column="51">-&gt;</op:operator><name pos:line="541" pos:column="53">ToElement</name></name><argument_list pos:line="541" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="542" pos:column="17">int</name></type> <name pos:line="542" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="543" pos:column="17">const</specifier> <name pos:line="543" pos:column="23">char</name> <type:modifier pos:line="543" pos:column="28">*</type:modifier></type><name pos:line="543" pos:column="29">sentinel</name> <init pos:line="543" pos:column="38">= <expr><call><name><name pos:line="543" pos:column="40">element</name><op:operator pos:line="543" pos:column="47">-&gt;</op:operator><name pos:line="543" pos:column="49">Attribute</name></name><argument_list pos:line="543" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="543" pos:column="59">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="543" pos:column="65">&amp;</op:operator><name pos:line="543" pos:column="66">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="544" pos:column="17">const</specifier> <name pos:line="544" pos:column="23">char</name> <type:modifier pos:line="544" pos:column="28">*</type:modifier></type><name pos:line="544" pos:column="29">name</name> <init pos:line="544" pos:column="34">= <expr><call><name><name pos:line="544" pos:column="36">element</name><op:operator pos:line="544" pos:column="43">-&gt;</op:operator><name pos:line="544" pos:column="45">Attribute</name></name><argument_list pos:line="544" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="544" pos:column="55">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="545" pos:column="17">if <condition pos:line="545" pos:column="20">(<expr><name pos:line="545" pos:column="21">sentinel</name> <op:operator pos:line="545" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="545" pos:column="33">(</op:operator><name pos:line="545" pos:column="34">name</name> <op:operator pos:line="545" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="545" pos:column="42">name</name><index pos:line="545" pos:column="46">[<expr><lit:literal type="number" pos:line="545" pos:column="47">0</lit:literal></expr>]</index></name><op:operator pos:line="545" pos:column="49">)</op:operator></expr>)</condition><then pos:line="545" pos:column="51">
		<block pos:line="546" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="547" pos:column="25">HWND</name></type> <name pos:line="547" pos:column="30">hItem</name> <init pos:line="547" pos:column="36">= <expr><call><name><op:operator pos:line="547" pos:column="38">::</op:operator><name pos:line="547" pos:column="40">GetDlgItem</name></name><argument_list pos:line="547" pos:column="50">(<argument><expr><name pos:line="547" pos:column="51">hDlg</name></expr></argument>, <argument><expr><name pos:line="547" pos:column="57">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="548" pos:column="25">if <condition pos:line="548" pos:column="28">(<expr><name pos:line="548" pos:column="29">hItem</name></expr>)</condition><then pos:line="548" pos:column="35">
			<block pos:line="549" pos:column="25">{
<cpp:ifdef pos:line="550" pos:column="1">#<cpp:directive pos:line="550" pos:column="2">ifdef</cpp:directive> <name pos:line="550" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><specifier pos:line="551" pos:column="33">const</specifier> <name pos:line="551" pos:column="39">wchar_t</name> <type:modifier pos:line="551" pos:column="47">*</type:modifier></type><name pos:line="551" pos:column="48">nameW</name> <init pos:line="551" pos:column="54">= <expr><call><name><name pos:line="551" pos:column="56">wmc</name><op:operator pos:line="551" pos:column="59">-&gt;</op:operator><name pos:line="551" pos:column="61">char2wchar</name></name><argument_list pos:line="551" pos:column="71">(<argument><expr><name pos:line="551" pos:column="72">name</name></expr></argument>, <argument><expr><name pos:line="551" pos:column="78">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="552" pos:column="33">::</op:operator><name pos:line="552" pos:column="35">SetWindowText</name></name><argument_list pos:line="552" pos:column="48">(<argument><expr><name pos:line="552" pos:column="49">hItem</name></expr></argument>, <argument><expr><name pos:line="552" pos:column="56">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="553" pos:column="1">#<cpp:directive pos:line="553" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><call><name><op:operator pos:line="554" pos:column="33">::</op:operator><name pos:line="554" pos:column="35">SetWindowText</name></name><argument_list pos:line="554" pos:column="48">(<argument><expr><name pos:line="554" pos:column="49">hItem</name></expr></argument>, <argument><expr><name pos:line="554" pos:column="56">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="555" pos:column="1">#<cpp:directive pos:line="555" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
}</block></function>


<function><type><name pos:line="562" pos:column="1">void</name></type> <name><name pos:line="562" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="562" pos:column="23">::</op:operator><name pos:line="562" pos:column="25">changeStyleCtrlsLang</name></name><parameter_list pos:line="562" pos:column="45">(<param><decl><type><name pos:line="562" pos:column="46">HWND</name></type> <name pos:line="562" pos:column="51">hDlg</name></decl></param>, <param><decl><type><name pos:line="562" pos:column="57">int</name> <type:modifier pos:line="562" pos:column="61">*</type:modifier></type><name pos:line="562" pos:column="62">idArray</name></decl></param>, <param><decl><type><specifier pos:line="562" pos:column="71">const</specifier> <name pos:line="562" pos:column="77">char</name> <type:modifier pos:line="562" pos:column="82">*</type:modifier><type:modifier pos:line="562" pos:column="83">*</type:modifier></type><name pos:line="562" pos:column="84">translatedText</name></decl></param>)</parameter_list>
<block pos:line="563" pos:column="1">{
	<decl_stmt><decl><type><specifier pos:line="564" pos:column="9">const</specifier> <name pos:line="564" pos:column="15">int</name></type> <name pos:line="564" pos:column="19">iColorStyle</name> <init pos:line="564" pos:column="31">= <expr><lit:literal type="number" pos:line="564" pos:column="33">0</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="565" pos:column="9">const</specifier> <name pos:line="565" pos:column="15">int</name></type> <name pos:line="565" pos:column="19">iUnderline</name> <init pos:line="565" pos:column="30">= <expr><lit:literal type="number" pos:line="565" pos:column="32">8</lit:literal></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="567" pos:column="9">HWND</name></type> <name pos:line="567" pos:column="14">hItem</name></decl>;</decl_stmt>
	<for pos:line="568" pos:column="9">for (<init><decl><type><name pos:line="568" pos:column="14">int</name></type> <name pos:line="568" pos:column="18">i</name> <init pos:line="568" pos:column="20">= <expr><name pos:line="568" pos:column="22">iColorStyle</name></expr></init></decl> ;</init> <condition><expr><name pos:line="568" pos:column="36">i</name> <op:operator pos:line="568" pos:column="38">&lt;</op:operator> <op:operator pos:line="568" pos:column="40">(</op:operator><name pos:line="568" pos:column="41">iUnderline</name> <op:operator pos:line="568" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="568" pos:column="54">1</lit:literal><op:operator pos:line="568" pos:column="55">)</op:operator></expr> ;</condition> <incr><expr><name pos:line="568" pos:column="59">i</name><op:operator pos:line="568" pos:column="60">++</op:operator></expr></incr>)
	<block pos:line="569" pos:column="9">{
		<if pos:line="570" pos:column="17">if <condition pos:line="570" pos:column="20">(<expr><name><name pos:line="570" pos:column="21">translatedText</name><index pos:line="570" pos:column="35">[<expr><name pos:line="570" pos:column="36">i</name></expr>]</index></name> <op:operator pos:line="570" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="570" pos:column="42">translatedText</name><index pos:line="570" pos:column="56">[<expr><name pos:line="570" pos:column="57">i</name></expr>]</index><index pos:line="570" pos:column="59">[<expr><lit:literal type="number" pos:line="570" pos:column="60">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="570" pos:column="63">
		<block pos:line="571" pos:column="17">{
			<expr_stmt><expr><name pos:line="572" pos:column="25">hItem</name> <op:operator pos:line="572" pos:column="31">=</op:operator> <call><name><op:operator pos:line="572" pos:column="33">::</op:operator><name pos:line="572" pos:column="35">GetDlgItem</name></name><argument_list pos:line="572" pos:column="45">(<argument><expr><name pos:line="572" pos:column="46">hDlg</name></expr></argument>, <argument><expr><name><name pos:line="572" pos:column="52">idArray</name><index pos:line="572" pos:column="59">[<expr><name pos:line="572" pos:column="60">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="573" pos:column="25">if <condition pos:line="573" pos:column="28">(<expr><name pos:line="573" pos:column="29">hItem</name></expr>)</condition><then pos:line="573" pos:column="35">
			<block pos:line="574" pos:column="25">{
<cpp:ifdef pos:line="575" pos:column="1">#<cpp:directive pos:line="575" pos:column="2">ifdef</cpp:directive> <name pos:line="575" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><name pos:line="576" pos:column="33">WcharMbcsConvertor</name> <type:modifier pos:line="576" pos:column="52">*</type:modifier></type><name pos:line="576" pos:column="53">wmc</name> <init pos:line="576" pos:column="57">= <expr><call><name><name pos:line="576" pos:column="59">WcharMbcsConvertor</name><op:operator pos:line="576" pos:column="77">::</op:operator><name pos:line="576" pos:column="79">getInstance</name></name><argument_list pos:line="576" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="577" pos:column="33">const</specifier> <name pos:line="577" pos:column="39">wchar_t</name> <type:modifier pos:line="577" pos:column="47">*</type:modifier></type><name pos:line="577" pos:column="48">nameW</name> <init pos:line="577" pos:column="54">= <expr><call><name><name pos:line="577" pos:column="56">wmc</name><op:operator pos:line="577" pos:column="59">-&gt;</op:operator><name pos:line="577" pos:column="61">char2wchar</name></name><argument_list pos:line="577" pos:column="71">(<argument><expr><name><name pos:line="577" pos:column="72">translatedText</name><index pos:line="577" pos:column="86">[<expr><name pos:line="577" pos:column="87">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="577" pos:column="91">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="578" pos:column="33">::</op:operator><name pos:line="578" pos:column="35">SetWindowText</name></name><argument_list pos:line="578" pos:column="48">(<argument><expr><name pos:line="578" pos:column="49">hItem</name></expr></argument>, <argument><expr><name pos:line="578" pos:column="56">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="579" pos:column="1">#<cpp:directive pos:line="579" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><call><name><op:operator pos:line="580" pos:column="33">::</op:operator><name pos:line="580" pos:column="35">SetWindowText</name></name><argument_list pos:line="580" pos:column="48">(<argument><expr><name pos:line="580" pos:column="49">hItem</name></expr></argument>, <argument><expr><name><name pos:line="580" pos:column="56">translatedText</name><index pos:line="580" pos:column="70">[<expr><name pos:line="580" pos:column="71">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="581" pos:column="1">#<cpp:directive pos:line="581" pos:column="2">endif</cpp:directive></cpp:endif>
				
			}</block></then></if>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="588" pos:column="1">void</name></type> <name><name pos:line="588" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="588" pos:column="23">::</op:operator><name pos:line="588" pos:column="25">changeUserDefineLangPopupDlg</name></name><parameter_list pos:line="588" pos:column="53">(<param><decl><type><name pos:line="588" pos:column="54">HWND</name></type> <name pos:line="588" pos:column="59">hDlg</name></decl></param>)</parameter_list>
<block pos:line="589" pos:column="1">{
	<if pos:line="590" pos:column="9">if <condition pos:line="590" pos:column="12">(<expr><op:operator pos:line="590" pos:column="13">!</op:operator><name pos:line="590" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="590" pos:column="27"> <return pos:line="590" pos:column="28">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="592" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="592" pos:column="20">*</type:modifier></type><name pos:line="592" pos:column="21">userDefineDlgNode</name> <init pos:line="592" pos:column="39">= <expr><call><name><name pos:line="592" pos:column="41">_nativeLangA</name><op:operator pos:line="592" pos:column="53">-&gt;</op:operator><name pos:line="592" pos:column="55">FirstChild</name></name><argument_list pos:line="592" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="592" pos:column="66">"Dialog"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="593" pos:column="9">if <condition pos:line="593" pos:column="12">(<expr><op:operator pos:line="593" pos:column="13">!</op:operator><name pos:line="593" pos:column="14">userDefineDlgNode</name></expr>)</condition><then pos:line="593" pos:column="32"> <return pos:line="593" pos:column="33">return;</return></then></if>	
	
	<expr_stmt><expr><name pos:line="595" pos:column="9">userDefineDlgNode</name> <op:operator pos:line="595" pos:column="27">=</op:operator> <call><name><name pos:line="595" pos:column="29">userDefineDlgNode</name><op:operator pos:line="595" pos:column="46">-&gt;</op:operator><name pos:line="595" pos:column="48">FirstChild</name></name><argument_list pos:line="595" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="595" pos:column="59">"UserDefine"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="596" pos:column="9">if <condition pos:line="596" pos:column="12">(<expr><op:operator pos:line="596" pos:column="13">!</op:operator><name pos:line="596" pos:column="14">userDefineDlgNode</name></expr>)</condition><then pos:line="596" pos:column="32"> <return pos:line="596" pos:column="33">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="598" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="598" pos:column="28">*</type:modifier></type><name pos:line="598" pos:column="29">wmc</name> <init pos:line="598" pos:column="33">= <expr><call><name><name pos:line="598" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="598" pos:column="53">::</op:operator><name pos:line="598" pos:column="55">getInstance</name></name><argument_list pos:line="598" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="600" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="600" pos:column="20">*</type:modifier></type><name pos:line="600" pos:column="21">stylerDialogNode</name> <init pos:line="600" pos:column="38">= <expr><call><name><name pos:line="600" pos:column="40">userDefineDlgNode</name><op:operator pos:line="600" pos:column="57">-&gt;</op:operator><name pos:line="600" pos:column="59">FirstChild</name></name><argument_list pos:line="600" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="600" pos:column="70">"StylerDialog"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="601" pos:column="9">if <condition pos:line="601" pos:column="12">(<expr><op:operator pos:line="601" pos:column="13">!</op:operator><name pos:line="601" pos:column="14">stylerDialogNode</name></expr>)</condition><then pos:line="601" pos:column="31"> <return pos:line="601" pos:column="32">return;</return></then></if>

	<decl_stmt><decl><type><specifier pos:line="603" pos:column="9">const</specifier> <name pos:line="603" pos:column="15">char</name> <type:modifier pos:line="603" pos:column="20">*</type:modifier></type><name pos:line="603" pos:column="21">titre</name> <init pos:line="603" pos:column="27">= <expr><op:operator pos:line="603" pos:column="29">(</op:operator><call><name><name pos:line="603" pos:column="30">stylerDialogNode</name><op:operator pos:line="603" pos:column="46">-&gt;</op:operator><name pos:line="603" pos:column="48">ToElement</name></name><argument_list pos:line="603" pos:column="57">()</argument_list></call><op:operator pos:line="603" pos:column="59">)</op:operator><op:operator pos:line="603" pos:column="60">-&gt;</op:operator><call><name pos:line="603" pos:column="62">Attribute</name><argument_list pos:line="603" pos:column="71">(<argument><expr><lit:literal type="string" pos:line="603" pos:column="72">"title"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="604" pos:column="9">if <condition pos:line="604" pos:column="12">(<expr><name pos:line="604" pos:column="13">titre</name> <op:operator pos:line="604" pos:column="19">&amp;&amp;</op:operator><name><name pos:line="604" pos:column="21">titre</name><index pos:line="604" pos:column="26">[<expr><lit:literal type="number" pos:line="604" pos:column="27">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="604" pos:column="30">
	<block pos:line="605" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="606" pos:column="17">const</specifier> <name pos:line="606" pos:column="23">wchar_t</name> <type:modifier pos:line="606" pos:column="31">*</type:modifier></type><name pos:line="606" pos:column="32">nameW</name> <init pos:line="606" pos:column="38">= <expr><call><name><name pos:line="606" pos:column="40">wmc</name><op:operator pos:line="606" pos:column="43">-&gt;</op:operator><name pos:line="606" pos:column="45">char2wchar</name></name><argument_list pos:line="606" pos:column="55">(<argument><expr><name pos:line="606" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="606" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="607" pos:column="17">::</op:operator><name pos:line="607" pos:column="19">SetWindowText</name></name><argument_list pos:line="607" pos:column="32">(<argument><expr><name pos:line="607" pos:column="33">hDlg</name></expr></argument>, <argument><expr><name pos:line="607" pos:column="39">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<for pos:line="609" pos:column="9">for (<init><decl><type><name pos:line="609" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="609" pos:column="25">*</type:modifier></type><name pos:line="609" pos:column="26">childNode</name> <init pos:line="609" pos:column="36">= <expr><call><name><name pos:line="609" pos:column="38">stylerDialogNode</name><op:operator pos:line="609" pos:column="54">-&gt;</op:operator><name pos:line="609" pos:column="56">FirstChildElement</name></name><argument_list pos:line="609" pos:column="73">(<argument><expr><lit:literal type="string" pos:line="609" pos:column="74">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="610" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="611" pos:column="17">childNode</name> <op:operator pos:line="611" pos:column="27">=</op:operator> <call><name><name pos:line="611" pos:column="29">childNode</name><op:operator pos:line="611" pos:column="38">-&gt;</op:operator><name pos:line="611" pos:column="40">NextSibling</name></name><argument_list pos:line="611" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="611" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="612" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="613" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="613" pos:column="31">*</type:modifier></type><name pos:line="613" pos:column="32">element</name> <init pos:line="613" pos:column="40">= <expr><call><name><name pos:line="613" pos:column="42">childNode</name><op:operator pos:line="613" pos:column="51">-&gt;</op:operator><name pos:line="613" pos:column="53">ToElement</name></name><argument_list pos:line="613" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="614" pos:column="17">int</name></type> <name pos:line="614" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="615" pos:column="17">const</specifier> <name pos:line="615" pos:column="23">char</name> <type:modifier pos:line="615" pos:column="28">*</type:modifier></type><name pos:line="615" pos:column="29">sentinel</name> <init pos:line="615" pos:column="38">= <expr><call><name><name pos:line="615" pos:column="40">element</name><op:operator pos:line="615" pos:column="47">-&gt;</op:operator><name pos:line="615" pos:column="49">Attribute</name></name><argument_list pos:line="615" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="615" pos:column="59">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="615" pos:column="65">&amp;</op:operator><name pos:line="615" pos:column="66">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="616" pos:column="17">const</specifier> <name pos:line="616" pos:column="23">char</name> <type:modifier pos:line="616" pos:column="28">*</type:modifier></type><name pos:line="616" pos:column="29">name</name> <init pos:line="616" pos:column="34">= <expr><call><name><name pos:line="616" pos:column="36">element</name><op:operator pos:line="616" pos:column="43">-&gt;</op:operator><name pos:line="616" pos:column="45">Attribute</name></name><argument_list pos:line="616" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="616" pos:column="55">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="617" pos:column="17">if <condition pos:line="617" pos:column="20">(<expr><name pos:line="617" pos:column="21">sentinel</name> <op:operator pos:line="617" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="617" pos:column="33">(</op:operator><name pos:line="617" pos:column="34">name</name> <op:operator pos:line="617" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="617" pos:column="42">name</name><index pos:line="617" pos:column="46">[<expr><lit:literal type="number" pos:line="617" pos:column="47">0</lit:literal></expr>]</index></name><op:operator pos:line="617" pos:column="49">)</op:operator></expr>)</condition><then pos:line="617" pos:column="51">
		<block pos:line="618" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="619" pos:column="25">HWND</name></type> <name pos:line="619" pos:column="30">hItem</name> <init pos:line="619" pos:column="36">= <expr><call><name><op:operator pos:line="619" pos:column="38">::</op:operator><name pos:line="619" pos:column="40">GetDlgItem</name></name><argument_list pos:line="619" pos:column="50">(<argument><expr><name pos:line="619" pos:column="51">hDlg</name></expr></argument>, <argument><expr><name pos:line="619" pos:column="57">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="620" pos:column="25">if <condition pos:line="620" pos:column="28">(<expr><name pos:line="620" pos:column="29">hItem</name></expr>)</condition><then pos:line="620" pos:column="35">
			<block pos:line="621" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="622" pos:column="33">const</specifier> <name pos:line="622" pos:column="39">wchar_t</name> <type:modifier pos:line="622" pos:column="47">*</type:modifier></type><name pos:line="622" pos:column="48">nameW</name> <init pos:line="622" pos:column="54">= <expr><call><name><name pos:line="622" pos:column="56">wmc</name><op:operator pos:line="622" pos:column="59">-&gt;</op:operator><name pos:line="622" pos:column="61">char2wchar</name></name><argument_list pos:line="622" pos:column="71">(<argument><expr><name pos:line="622" pos:column="72">name</name></expr></argument>, <argument><expr><name pos:line="622" pos:column="78">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="623" pos:column="33">::</op:operator><name pos:line="623" pos:column="35">SetWindowText</name></name><argument_list pos:line="623" pos:column="48">(<argument><expr><name pos:line="623" pos:column="49">hItem</name></expr></argument>, <argument><expr><name pos:line="623" pos:column="56">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			}</block></then></if>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="630" pos:column="1">void</name></type> <name><name pos:line="630" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="630" pos:column="23">::</op:operator><name pos:line="630" pos:column="25">changeUserDefineLang</name></name><parameter_list pos:line="630" pos:column="45">(<param><decl><type><name pos:line="630" pos:column="46">UserDefineDialog</name> <type:modifier pos:line="630" pos:column="63">*</type:modifier></type><name pos:line="630" pos:column="64">userDefineDlg</name></decl></param>)</parameter_list>
<block pos:line="631" pos:column="1">{
	<if pos:line="632" pos:column="9">if <condition pos:line="632" pos:column="12">(<expr><op:operator pos:line="632" pos:column="13">!</op:operator><name pos:line="632" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="632" pos:column="27"> <return pos:line="632" pos:column="28">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="634" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="634" pos:column="20">*</type:modifier></type><name pos:line="634" pos:column="21">userDefineDlgNode</name> <init pos:line="634" pos:column="39">= <expr><call><name><name pos:line="634" pos:column="41">_nativeLangA</name><op:operator pos:line="634" pos:column="53">-&gt;</op:operator><name pos:line="634" pos:column="55">FirstChild</name></name><argument_list pos:line="634" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="634" pos:column="66">"Dialog"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="635" pos:column="9">if <condition pos:line="635" pos:column="12">(<expr><op:operator pos:line="635" pos:column="13">!</op:operator><name pos:line="635" pos:column="14">userDefineDlgNode</name></expr>)</condition><then pos:line="635" pos:column="32"> <return pos:line="635" pos:column="33">return;</return></then></if>	
	
	<expr_stmt><expr><name pos:line="637" pos:column="9">userDefineDlgNode</name> <op:operator pos:line="637" pos:column="27">=</op:operator> <call><name><name pos:line="637" pos:column="29">userDefineDlgNode</name><op:operator pos:line="637" pos:column="46">-&gt;</op:operator><name pos:line="637" pos:column="48">FirstChild</name></name><argument_list pos:line="637" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="637" pos:column="59">"UserDefine"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="638" pos:column="9">if <condition pos:line="638" pos:column="12">(<expr><op:operator pos:line="638" pos:column="13">!</op:operator><name pos:line="638" pos:column="14">userDefineDlgNode</name></expr>)</condition><then pos:line="638" pos:column="32"> <return pos:line="638" pos:column="33">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="640" pos:column="9">HWND</name></type> <name pos:line="640" pos:column="14">hDlg</name> <init pos:line="640" pos:column="19">= <expr><call><name><name pos:line="640" pos:column="21">userDefineDlg</name><op:operator pos:line="640" pos:column="34">-&gt;</op:operator><name pos:line="640" pos:column="36">getHSelf</name></name><argument_list pos:line="640" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:line="641" pos:column="1">#<cpp:directive pos:line="641" pos:column="2">ifdef</cpp:directive> <name pos:line="641" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="642" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="642" pos:column="28">*</type:modifier></type><name pos:line="642" pos:column="29">wmc</name> <init pos:line="642" pos:column="33">= <expr><call><name><name pos:line="642" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="642" pos:column="53">::</op:operator><name pos:line="642" pos:column="55">getInstance</name></name><argument_list pos:line="642" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="643" pos:column="1">#<cpp:directive pos:line="643" pos:column="2">endif</cpp:directive></cpp:endif>

	<comment type="line" pos:line="645" pos:column="9">// Set Title</comment>
	<decl_stmt><decl><type><specifier pos:line="646" pos:column="9">const</specifier> <name pos:line="646" pos:column="15">char</name> <type:modifier pos:line="646" pos:column="20">*</type:modifier></type><name pos:line="646" pos:column="21">titre</name> <init pos:line="646" pos:column="27">= <expr><op:operator pos:line="646" pos:column="29">(</op:operator><call><name><name pos:line="646" pos:column="30">userDefineDlgNode</name><op:operator pos:line="646" pos:column="47">-&gt;</op:operator><name pos:line="646" pos:column="49">ToElement</name></name><argument_list pos:line="646" pos:column="58">()</argument_list></call><op:operator pos:line="646" pos:column="60">)</op:operator><op:operator pos:line="646" pos:column="61">-&gt;</op:operator><call><name pos:line="646" pos:column="63">Attribute</name><argument_list pos:line="646" pos:column="72">(<argument><expr><lit:literal type="string" pos:line="646" pos:column="73">"title"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="647" pos:column="9">if <condition pos:line="647" pos:column="12">(<expr><name pos:line="647" pos:column="13">titre</name> <op:operator pos:line="647" pos:column="19">&amp;&amp;</op:operator> <name><name pos:line="647" pos:column="22">titre</name><index pos:line="647" pos:column="27">[<expr><lit:literal type="number" pos:line="647" pos:column="28">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="647" pos:column="31">
	<block pos:line="648" pos:column="9">{
<cpp:ifdef pos:line="649" pos:column="1">#<cpp:directive pos:line="649" pos:column="2">ifdef</cpp:directive> <name pos:line="649" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="650" pos:column="17">const</specifier> <name pos:line="650" pos:column="23">wchar_t</name> <type:modifier pos:line="650" pos:column="31">*</type:modifier></type><name pos:line="650" pos:column="32">nameW</name> <init pos:line="650" pos:column="38">= <expr><call><name><name pos:line="650" pos:column="40">wmc</name><op:operator pos:line="650" pos:column="43">-&gt;</op:operator><name pos:line="650" pos:column="45">char2wchar</name></name><argument_list pos:line="650" pos:column="55">(<argument><expr><name pos:line="650" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="650" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="651" pos:column="17">::</op:operator><name pos:line="651" pos:column="19">SetWindowText</name></name><argument_list pos:line="651" pos:column="32">(<argument><expr><name pos:line="651" pos:column="33">hDlg</name></expr></argument>, <argument><expr><name pos:line="651" pos:column="39">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="652" pos:column="1">#<cpp:directive pos:line="652" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><op:operator pos:line="653" pos:column="17">::</op:operator><name pos:line="653" pos:column="19">SetWindowText</name></name><argument_list pos:line="653" pos:column="32">(<argument><expr><name pos:line="653" pos:column="33">hDlg</name></expr></argument>, <argument><expr><name pos:line="653" pos:column="39">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="654" pos:column="1">#<cpp:directive pos:line="654" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
	<comment type="line" pos:line="656" pos:column="9">// for each control</comment>
	<decl_stmt><decl><type><specifier pos:line="657" pos:column="9">const</specifier> <name pos:line="657" pos:column="15">int</name></type> <name pos:line="657" pos:column="19">nbControl</name> <init pos:line="657" pos:column="29">= <expr><lit:literal type="number" pos:line="657" pos:column="31">9</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="658" pos:column="9">const</specifier> <name pos:line="658" pos:column="15">char</name> <type:modifier pos:line="658" pos:column="20">*</type:modifier></type><name><name pos:line="658" pos:column="21">translatedText</name><index pos:line="658" pos:column="35">[<expr><name pos:line="658" pos:column="36">nbControl</name></expr>]</index></name></decl>;</decl_stmt>
	<for pos:line="659" pos:column="9">for (<init><decl><type><name pos:line="659" pos:column="14">int</name></type> <name pos:line="659" pos:column="18">i</name> <init pos:line="659" pos:column="20">= <expr><lit:literal type="number" pos:line="659" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="659" pos:column="26">i</name> <op:operator pos:line="659" pos:column="28">&lt;</op:operator> <name pos:line="659" pos:column="30">nbControl</name></expr> ;</condition> <incr><expr><name pos:line="659" pos:column="42">i</name><op:operator pos:line="659" pos:column="43">++</op:operator></expr></incr>)
		<expr_stmt><expr><name><name pos:line="660" pos:column="17">translatedText</name><index pos:line="660" pos:column="31">[<expr><name pos:line="660" pos:column="32">i</name></expr>]</index></name> <op:operator pos:line="660" pos:column="35">=</op:operator> <name pos:line="660" pos:column="37">NULL</name></expr>;</expr_stmt></for>

	<for pos:line="662" pos:column="9">for (<init><decl><type><name pos:line="662" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="662" pos:column="25">*</type:modifier></type><name pos:line="662" pos:column="26">childNode</name> <init pos:line="662" pos:column="36">= <expr><call><name><name pos:line="662" pos:column="38">userDefineDlgNode</name><op:operator pos:line="662" pos:column="55">-&gt;</op:operator><name pos:line="662" pos:column="57">FirstChildElement</name></name><argument_list pos:line="662" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="662" pos:column="75">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="663" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="664" pos:column="17">childNode</name> <op:operator pos:line="664" pos:column="27">=</op:operator> <call><name><name pos:line="664" pos:column="29">childNode</name><op:operator pos:line="664" pos:column="38">-&gt;</op:operator><name pos:line="664" pos:column="40">NextSibling</name></name><argument_list pos:line="664" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="664" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="665" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="666" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="666" pos:column="31">*</type:modifier></type><name pos:line="666" pos:column="32">element</name> <init pos:line="666" pos:column="40">= <expr><call><name><name pos:line="666" pos:column="42">childNode</name><op:operator pos:line="666" pos:column="51">-&gt;</op:operator><name pos:line="666" pos:column="53">ToElement</name></name><argument_list pos:line="666" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="667" pos:column="17">int</name></type> <name pos:line="667" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="668" pos:column="17">const</specifier> <name pos:line="668" pos:column="23">char</name> <type:modifier pos:line="668" pos:column="28">*</type:modifier></type><name pos:line="668" pos:column="29">sentinel</name> <init pos:line="668" pos:column="38">= <expr><call><name><name pos:line="668" pos:column="40">element</name><op:operator pos:line="668" pos:column="47">-&gt;</op:operator><name pos:line="668" pos:column="49">Attribute</name></name><argument_list pos:line="668" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="668" pos:column="59">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="668" pos:column="65">&amp;</op:operator><name pos:line="668" pos:column="66">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="669" pos:column="17">const</specifier> <name pos:line="669" pos:column="23">char</name> <type:modifier pos:line="669" pos:column="28">*</type:modifier></type><name pos:line="669" pos:column="29">name</name> <init pos:line="669" pos:column="34">= <expr><call><name><name pos:line="669" pos:column="36">element</name><op:operator pos:line="669" pos:column="43">-&gt;</op:operator><name pos:line="669" pos:column="45">Attribute</name></name><argument_list pos:line="669" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="669" pos:column="55">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="671" pos:column="17">if <condition pos:line="671" pos:column="20">(<expr><name pos:line="671" pos:column="21">sentinel</name> <op:operator pos:line="671" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="671" pos:column="33">(</op:operator><name pos:line="671" pos:column="34">name</name> <op:operator pos:line="671" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="671" pos:column="42">name</name><index pos:line="671" pos:column="46">[<expr><lit:literal type="number" pos:line="671" pos:column="47">0</lit:literal></expr>]</index></name><op:operator pos:line="671" pos:column="49">)</op:operator></expr>)</condition><then pos:line="671" pos:column="51">
		<block pos:line="672" pos:column="17">{
			<if pos:line="673" pos:column="25">if <condition pos:line="673" pos:column="28">(<expr><name pos:line="673" pos:column="29">id</name> <op:operator pos:line="673" pos:column="32">&gt;</op:operator> <lit:literal type="number" pos:line="673" pos:column="34">30</lit:literal></expr>)</condition><then pos:line="673" pos:column="37">
			<block pos:line="674" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="675" pos:column="33">HWND</name></type> <name pos:line="675" pos:column="38">hItem</name> <init pos:line="675" pos:column="44">= <expr><call><name><op:operator pos:line="675" pos:column="46">::</op:operator><name pos:line="675" pos:column="48">GetDlgItem</name></name><argument_list pos:line="675" pos:column="58">(<argument><expr><name pos:line="675" pos:column="59">hDlg</name></expr></argument>, <argument><expr><name pos:line="675" pos:column="65">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="676" pos:column="33">if <condition pos:line="676" pos:column="36">(<expr><name pos:line="676" pos:column="37">hItem</name></expr>)</condition><then pos:line="676" pos:column="43">
				<block pos:line="677" pos:column="33">{
<cpp:ifdef pos:line="678" pos:column="1">#<cpp:directive pos:line="678" pos:column="2">ifdef</cpp:directive> <name pos:line="678" pos:column="8">UNICODE</name></cpp:ifdef>
					<decl_stmt><decl><type><specifier pos:line="679" pos:column="41">const</specifier> <name pos:line="679" pos:column="47">wchar_t</name> <type:modifier pos:line="679" pos:column="55">*</type:modifier></type><name pos:line="679" pos:column="56">nameW</name> <init pos:line="679" pos:column="62">= <expr><call><name><name pos:line="679" pos:column="64">wmc</name><op:operator pos:line="679" pos:column="67">-&gt;</op:operator><name pos:line="679" pos:column="69">char2wchar</name></name><argument_list pos:line="679" pos:column="79">(<argument><expr><name pos:line="679" pos:column="80">name</name></expr></argument>, <argument><expr><name pos:line="679" pos:column="86">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><op:operator pos:line="680" pos:column="41">::</op:operator><name pos:line="680" pos:column="43">SetWindowText</name></name><argument_list pos:line="680" pos:column="56">(<argument><expr><name pos:line="680" pos:column="57">hItem</name></expr></argument>, <argument><expr><name pos:line="680" pos:column="64">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="681" pos:column="1">#<cpp:directive pos:line="681" pos:column="2">else</cpp:directive></cpp:else>
					<expr_stmt><expr><call><name><op:operator pos:line="682" pos:column="41">::</op:operator><name pos:line="682" pos:column="43">SetWindowText</name></name><argument_list pos:line="682" pos:column="56">(<argument><expr><name pos:line="682" pos:column="57">hItem</name></expr></argument>, <argument><expr><name pos:line="682" pos:column="64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="683" pos:column="1">#<cpp:directive pos:line="683" pos:column="2">endif</cpp:directive></cpp:endif>
				}</block></then></if>
			}</block></then>
			<else pos:line="686" pos:column="25">else
			<block pos:line="687" pos:column="25">{
				<switch pos:line="688" pos:column="33">switch<condition pos:line="688" pos:column="39">(<expr><name pos:line="688" pos:column="40">id</name></expr>)</condition>
				<block pos:line="689" pos:column="33">{
					<case pos:line="690" pos:column="41">case <expr><lit:literal type="number" pos:line="690" pos:column="46">0</lit:literal></expr>: </case><case pos:line="690" pos:column="49">case <expr><lit:literal type="number" pos:line="690" pos:column="54">1</lit:literal></expr>: </case><case pos:line="690" pos:column="57">case <expr><lit:literal type="number" pos:line="690" pos:column="62">2</lit:literal></expr>: </case><case pos:line="690" pos:column="65">case <expr><lit:literal type="number" pos:line="690" pos:column="70">3</lit:literal></expr>: </case><case pos:line="690" pos:column="73">case <expr><lit:literal type="number" pos:line="690" pos:column="78">4</lit:literal></expr>:
					</case><case pos:line="691" pos:column="41">case <expr><lit:literal type="number" pos:line="691" pos:column="46">5</lit:literal></expr>: </case><case pos:line="691" pos:column="49">case <expr><lit:literal type="number" pos:line="691" pos:column="54">6</lit:literal></expr>: </case><case pos:line="691" pos:column="57">case <expr><lit:literal type="number" pos:line="691" pos:column="62">7</lit:literal></expr>: </case><case pos:line="691" pos:column="65">case <expr><lit:literal type="number" pos:line="691" pos:column="70">8</lit:literal></expr>: 
 						<expr_stmt><expr><name><name pos:line="692" pos:column="49">translatedText</name><index pos:line="692" pos:column="63">[<expr><name pos:line="692" pos:column="64">id</name></expr>]</index></name> <op:operator pos:line="692" pos:column="68">=</op:operator> <name pos:line="692" pos:column="70">name</name></expr>;</expr_stmt> <break pos:line="692" pos:column="76">break;</break>
				</case>}</block></switch>
			}</block></else></if>
		}</block></then></if>
	}</block></for>
	<decl_stmt><decl><type><specifier pos:line="697" pos:column="9">const</specifier> <name pos:line="697" pos:column="15">int</name></type> <name pos:line="697" pos:column="19">nbDlg</name> <init pos:line="697" pos:column="25">= <expr><lit:literal type="number" pos:line="697" pos:column="27">4</lit:literal></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="698" pos:column="9">HWND</name></type> <name><name pos:line="698" pos:column="14">hDlgArrary</name><index pos:line="698" pos:column="24">[<expr><name pos:line="698" pos:column="25">nbDlg</name></expr>]</index></name></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="699" pos:column="9">hDlgArrary</name><index pos:line="699" pos:column="19">[<expr><lit:literal type="number" pos:line="699" pos:column="20">0</lit:literal></expr>]</index></name> <op:operator pos:line="699" pos:column="23">=</op:operator> <call><name><name pos:line="699" pos:column="25">userDefineDlg</name><op:operator pos:line="699" pos:column="38">-&gt;</op:operator><name pos:line="699" pos:column="40">getFolderHandle</name></name><argument_list pos:line="699" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="700" pos:column="9">hDlgArrary</name><index pos:line="700" pos:column="19">[<expr><lit:literal type="number" pos:line="700" pos:column="20">1</lit:literal></expr>]</index></name> <op:operator pos:line="700" pos:column="23">=</op:operator> <call><name><name pos:line="700" pos:column="25">userDefineDlg</name><op:operator pos:line="700" pos:column="38">-&gt;</op:operator><name pos:line="700" pos:column="40">getKeywordsHandle</name></name><argument_list pos:line="700" pos:column="57">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="701" pos:column="9">hDlgArrary</name><index pos:line="701" pos:column="19">[<expr><lit:literal type="number" pos:line="701" pos:column="20">2</lit:literal></expr>]</index></name> <op:operator pos:line="701" pos:column="23">=</op:operator> <call><name><name pos:line="701" pos:column="25">userDefineDlg</name><op:operator pos:line="701" pos:column="38">-&gt;</op:operator><name pos:line="701" pos:column="40">getCommentHandle</name></name><argument_list pos:line="701" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name><name pos:line="702" pos:column="9">hDlgArrary</name><index pos:line="702" pos:column="19">[<expr><lit:literal type="number" pos:line="702" pos:column="20">3</lit:literal></expr>]</index></name> <op:operator pos:line="702" pos:column="23">=</op:operator> <call><name><name pos:line="702" pos:column="25">userDefineDlg</name><op:operator pos:line="702" pos:column="38">-&gt;</op:operator><name pos:line="702" pos:column="40">getSymbolHandle</name></name><argument_list pos:line="702" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
<comment type="block" pos:line="703" pos:column="1">/*	
	const int nbGrpFolder = 3;
	int folderID[nbGrpFolder][nbControl] = {
		//{IDC_DEFAULT_COLORSTYLEGROUP_STATIC, IDC_DEFAULT_FG_STATIC, IDC_DEFAULT_BG_STATIC, IDC_DEFAULT_FONTSTYLEGROUP_STATIC, IDC_DEFAULT_FONTNAME_STATIC, IDC_DEFAULT_FONTSIZE_STATIC, IDC_DEFAULT_BOLD_CHECK, IDC_DEFAULT_ITALIC_CHECK, IDC_DEFAULT_UNDERLINE_CHECK},\
		//{IDC_FOLDEROPEN_COLORSTYLEGROUP_STATIC, IDC_FOLDEROPEN_FG_STATIC, IDC_FOLDEROPEN_BG_STATIC, IDC_FOLDEROPEN_FONTSTYLEGROUP_STATIC, IDC_FOLDEROPEN_FONTNAME_STATIC, IDC_FOLDEROPEN_FONTSIZE_STATIC, IDC_FOLDEROPEN_BOLD_CHECK, IDC_FOLDEROPEN_ITALIC_CHECK, IDC_FOLDEROPEN_UNDERLINE_CHECK},\
		//{IDC_FOLDERCLOSE_COLORSTYLEGROUP_STATIC, IDC_FOLDERCLOSE_FG_STATIC, IDC_FOLDERCLOSE_BG_STATIC, IDC_FOLDERCLOSE_FONTSTYLEGROUP_STATIC, IDC_FOLDERCLOSE_FONTNAME_STATIC, IDC_FOLDERCLOSE_FONTSIZE_STATIC, IDC_FOLDERCLOSE_BOLD_CHECK, IDC_FOLDERCLOSE_ITALIC_CHECK, IDC_FOLDERCLOSE_UNDERLINE_CHECK}
	};

	const int nbGrpKeywords = 4;
	int keywordsID[nbGrpKeywords][nbControl] = {//\
		//{IDC_KEYWORD1_COLORSTYLEGROUP_STATIC, IDC_KEYWORD1_FG_STATIC, IDC_KEYWORD1_BG_STATIC, IDC_KEYWORD1_FONTSTYLEGROUP_STATIC, IDC_KEYWORD1_FONTNAME_STATIC, IDC_KEYWORD1_FONTSIZE_STATIC, IDC_KEYWORD1_BOLD_CHECK, IDC_KEYWORD1_ITALIC_CHECK, IDC_KEYWORD1_UNDERLINE_CHECK},\
		//{IDC_KEYWORD2_COLORSTYLEGROUP_STATIC, IDC_KEYWORD2_FG_STATIC, IDC_KEYWORD2_BG_STATIC, IDC_KEYWORD2_FONTSTYLEGROUP_STATIC, IDC_KEYWORD2_FONTNAME_STATIC, IDC_KEYWORD2_FONTSIZE_STATIC, IDC_KEYWORD2_BOLD_CHECK, IDC_KEYWORD2_ITALIC_CHECK, IDC_KEYWORD2_UNDERLINE_CHECK},\
		//{IDC_KEYWORD3_COLORSTYLEGROUP_STATIC, IDC_KEYWORD3_FG_STATIC, IDC_KEYWORD3_BG_STATIC, IDC_KEYWORD3_FONTSTYLEGROUP_STATIC, IDC_KEYWORD3_FONTNAME_STATIC, IDC_KEYWORD3_FONTSIZE_STATIC, IDC_KEYWORD3_BOLD_CHECK, IDC_KEYWORD3_ITALIC_CHECK, IDC_KEYWORD3_UNDERLINE_CHECK},\
		//{IDC_KEYWORD4_COLORSTYLEGROUP_STATIC, IDC_KEYWORD4_FG_STATIC, IDC_KEYWORD4_BG_STATIC, IDC_KEYWORD4_FONTSTYLEGROUP_STATIC, IDC_KEYWORD4_FONTNAME_STATIC, IDC_KEYWORD4_FONTSIZE_STATIC, IDC_KEYWORD4_BOLD_CHECK, IDC_KEYWORD4_ITALIC_CHECK, IDC_KEYWORD4_UNDERLINE_CHECK}
	};

	const int nbGrpComment = 3;
	int commentID[nbGrpComment][nbControl] = {//\
		//{IDC_COMMENT_COLORSTYLEGROUP_STATIC, IDC_COMMENT_FG_STATIC, IDC_COMMENT_BG_STATIC, IDC_COMMENT_FONTSTYLEGROUP_STATIC, IDC_COMMENT_FONTNAME_STATIC, IDC_COMMENT_FONTSIZE_STATIC, IDC_COMMENT_BOLD_CHECK, IDC_COMMENT_ITALIC_CHECK, IDC_COMMENT_UNDERLINE_CHECK},\
		//{IDC_NUMBER_COLORSTYLEGROUP_STATIC, IDC_NUMBER_FG_STATIC, IDC_NUMBER_BG_STATIC, IDC_NUMBER_FONTSTYLEGROUP_STATIC, IDC_NUMBER_FONTNAME_STATIC, IDC_NUMBER_FONTSIZE_STATIC, IDC_NUMBER_BOLD_CHECK, IDC_NUMBER_ITALIC_CHECK, IDC_NUMBER_UNDERLINE_CHECK},\
		//{IDC_COMMENTLINE_COLORSTYLEGROUP_STATIC, IDC_COMMENTLINE_FG_STATIC, IDC_COMMENTLINE_BG_STATIC, IDC_COMMENTLINE_FONTSTYLEGROUP_STATIC, IDC_COMMENTLINE_FONTNAME_STATIC, IDC_COMMENTLINE_FONTSIZE_STATIC, IDC_COMMENTLINE_BOLD_CHECK, IDC_COMMENTLINE_ITALIC_CHECK, IDC_COMMENTLINE_UNDERLINE_CHECK}
	};

	const int nbGrpOperator = 4;
	int operatorID[nbGrpOperator][nbControl] = {//\
		//{IDC_OPERATOR_COLORSTYLEGROUP_STATIC,   IDC_OPERATOR_FG_STATIC,   IDC_OPERATOR_BG_STATIC,   IDC_OPERATOR_FONTSTYLEGROUP_STATIC,   IDC_OPERATOR_FONTNAME_STATIC,   IDC_OPERATOR_FONTSIZE_STATIC,   IDC_OPERATOR_BOLD_CHECK,   IDC_OPERATOR_ITALIC_CHECK,   IDC_OPERATOR_UNDERLINE_CHECK},\
		//{IDC_DELIMITER1_COLORSTYLEGROUP_STATIC, IDC_DELIMITER1_FG_STATIC, IDC_DELIMITER1_BG_STATIC, IDC_DELIMITER1_FONTSTYLEGROUP_STATIC, IDC_DELIMITER1_FONTNAME_STATIC, IDC_DELIMITER1_FONTSIZE_STATIC, IDC_DELIMITER1_BOLD_CHECK, IDC_DELIMITER1_ITALIC_CHECK, IDC_DELIMITER1_UNDERLINE_CHECK},\
		//{IDC_DELIMITER2_COLORSTYLEGROUP_STATIC, IDC_DELIMITER2_FG_STATIC, IDC_DELIMITER2_BG_STATIC, IDC_DELIMITER2_FONTSTYLEGROUP_STATIC, IDC_DELIMITER2_FONTNAME_STATIC, IDC_DELIMITER2_FONTSIZE_STATIC, IDC_DELIMITER2_BOLD_CHECK, IDC_DELIMITER2_ITALIC_CHECK, IDC_DELIMITER2_UNDERLINE_CHECK},\
		//{IDC_DELIMITER3_COLORSTYLEGROUP_STATIC, IDC_DELIMITER3_FG_STATIC, IDC_DELIMITER3_BG_STATIC, IDC_DELIMITER3_FONTSTYLEGROUP_STATIC, IDC_DELIMITER3_FONTNAME_STATIC, IDC_DELIMITER3_FONTSIZE_STATIC, IDC_DELIMITER3_BOLD_CHECK, IDC_DELIMITER3_ITALIC_CHECK, IDC_DELIMITER3_UNDERLINE_CHECK}
	};

	int nbGpArray[nbDlg] = {nbGrpFolder, nbGrpKeywords, nbGrpComment, nbGrpOperator};
*/</comment>
	<decl_stmt><decl><type><specifier pos:line="736" pos:column="9">const</specifier> <name pos:line="736" pos:column="15">char</name></type> <name><name pos:line="736" pos:column="20">nodeNameArray</name><index pos:line="736" pos:column="33">[<expr><name pos:line="736" pos:column="34">nbDlg</name></expr>]</index><index pos:line="736" pos:column="40">[<expr><lit:literal type="number" pos:line="736" pos:column="41">16</lit:literal></expr>]</index></name> <init pos:line="736" pos:column="45">= <expr><block pos:line="736" pos:column="47">{<expr><lit:literal type="string" pos:line="736" pos:column="48">"Folder"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="736" pos:column="58">"Keywords"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="736" pos:column="70">"Comment"</lit:literal></expr>, <expr><lit:literal type="string" pos:line="736" pos:column="81">"Operator"</lit:literal></expr>}</block></expr></init></decl>;</decl_stmt>

	<for pos:line="738" pos:column="9">for (<init><decl><type><name pos:line="738" pos:column="14">int</name></type> <name pos:line="738" pos:column="18">i</name> <init pos:line="738" pos:column="20">= <expr><lit:literal type="number" pos:line="738" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="738" pos:column="26">i</name> <op:operator pos:line="738" pos:column="28">&lt;</op:operator> <name pos:line="738" pos:column="30">nbDlg</name></expr> ;</condition> <incr><expr><name pos:line="738" pos:column="38">i</name><op:operator pos:line="738" pos:column="39">++</op:operator></expr></incr>)
	<block pos:line="739" pos:column="9">{
<comment type="block" pos:line="740" pos:column="1">/*
		for (int j = 0 ; j &lt; nbGpArray[i] ; j++)
		{
			switch (i)
			{
				case 0 : changeStyleCtrlsLang(hDlgArrary[i], folderID[j], translatedText); break;
				case 1 : changeStyleCtrlsLang(hDlgArrary[i], keywordsID[j], translatedText); break;
				case 2 : changeStyleCtrlsLang(hDlgArrary[i], commentID[j], translatedText); break;
				case 3 : changeStyleCtrlsLang(hDlgArrary[i], operatorID[j], translatedText); break;
			}
		}
*/</comment>
		<decl_stmt><decl><type><name pos:line="752" pos:column="17">TiXmlNodeA</name> <type:modifier pos:line="752" pos:column="28">*</type:modifier></type><name pos:line="752" pos:column="29">node</name> <init pos:line="752" pos:column="34">= <expr><call><name><name pos:line="752" pos:column="36">userDefineDlgNode</name><op:operator pos:line="752" pos:column="53">-&gt;</op:operator><name pos:line="752" pos:column="55">FirstChild</name></name><argument_list pos:line="752" pos:column="65">(<argument><expr><name><name pos:line="752" pos:column="66">nodeNameArray</name><index pos:line="752" pos:column="79">[<expr><name pos:line="752" pos:column="80">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<if pos:line="754" pos:column="17">if <condition pos:line="754" pos:column="20">(<expr><name pos:line="754" pos:column="21">node</name></expr>)</condition><then pos:line="754" pos:column="26"> 
		<block pos:line="755" pos:column="17">{
			<comment type="line" pos:line="756" pos:column="25">// Set Title</comment>
			<expr_stmt><expr><name pos:line="757" pos:column="25">titre</name> <op:operator pos:line="757" pos:column="31">=</op:operator> <op:operator pos:line="757" pos:column="33">(</op:operator><call><name><name pos:line="757" pos:column="34">node</name><op:operator pos:line="757" pos:column="38">-&gt;</op:operator><name pos:line="757" pos:column="40">ToElement</name></name><argument_list pos:line="757" pos:column="49">()</argument_list></call><op:operator pos:line="757" pos:column="51">)</op:operator><op:operator pos:line="757" pos:column="52">-&gt;</op:operator><call><name pos:line="757" pos:column="54">Attribute</name><argument_list pos:line="757" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="757" pos:column="64">"title"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="758" pos:column="25">if <condition pos:line="758" pos:column="28">(<expr><name pos:line="758" pos:column="29">titre</name> <op:operator pos:line="758" pos:column="35">&amp;&amp;</op:operator><name><name pos:line="758" pos:column="37">titre</name><index pos:line="758" pos:column="42">[<expr><lit:literal type="number" pos:line="758" pos:column="43">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="758" pos:column="46">
			<block pos:line="759" pos:column="25">{
<cpp:ifdef pos:line="760" pos:column="1">#<cpp:directive pos:line="760" pos:column="2">ifdef</cpp:directive> <name pos:line="760" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><specifier pos:line="761" pos:column="33">const</specifier> <name pos:line="761" pos:column="39">wchar_t</name> <type:modifier pos:line="761" pos:column="47">*</type:modifier></type><name pos:line="761" pos:column="48">nameW</name> <init pos:line="761" pos:column="54">= <expr><call><name><name pos:line="761" pos:column="56">wmc</name><op:operator pos:line="761" pos:column="59">-&gt;</op:operator><name pos:line="761" pos:column="61">char2wchar</name></name><argument_list pos:line="761" pos:column="71">(<argument><expr><name pos:line="761" pos:column="72">titre</name></expr></argument>, <argument><expr><name pos:line="761" pos:column="79">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="762" pos:column="33">userDefineDlg</name><op:operator pos:line="762" pos:column="46">-&gt;</op:operator><name pos:line="762" pos:column="48">setTabName</name></name><argument_list pos:line="762" pos:column="58">(<argument><expr><name pos:line="762" pos:column="59">i</name></expr></argument>, <argument><expr><name pos:line="762" pos:column="62">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="763" pos:column="1">#<cpp:directive pos:line="763" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><call><name><name pos:line="764" pos:column="33">userDefineDlg</name><op:operator pos:line="764" pos:column="46">-&gt;</op:operator><name pos:line="764" pos:column="48">setTabName</name></name><argument_list pos:line="764" pos:column="58">(<argument><expr><name pos:line="764" pos:column="59">i</name></expr></argument>, <argument><expr><name pos:line="764" pos:column="62">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="765" pos:column="1">#<cpp:directive pos:line="765" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
			<for pos:line="767" pos:column="25">for (<init><decl><type><name pos:line="767" pos:column="30">TiXmlNodeA</name> <type:modifier pos:line="767" pos:column="41">*</type:modifier></type><name pos:line="767" pos:column="42">childNode</name> <init pos:line="767" pos:column="52">= <expr><call><name><name pos:line="767" pos:column="54">node</name><op:operator pos:line="767" pos:column="58">-&gt;</op:operator><name pos:line="767" pos:column="60">FirstChildElement</name></name><argument_list pos:line="767" pos:column="77">(<argument><expr><lit:literal type="string" pos:line="767" pos:column="78">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
				<condition><expr><name pos:line="768" pos:column="33">childNode</name></expr> ;</condition>
				<incr><expr><name pos:line="769" pos:column="33">childNode</name> <op:operator pos:line="769" pos:column="43">=</op:operator> <call><name><name pos:line="769" pos:column="45">childNode</name><op:operator pos:line="769" pos:column="54">-&gt;</op:operator><name pos:line="769" pos:column="56">NextSibling</name></name><argument_list pos:line="769" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="769" pos:column="68">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
			<block pos:line="770" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="771" pos:column="33">TiXmlElementA</name> <type:modifier pos:line="771" pos:column="47">*</type:modifier></type><name pos:line="771" pos:column="48">element</name> <init pos:line="771" pos:column="56">= <expr><call><name><name pos:line="771" pos:column="58">childNode</name><op:operator pos:line="771" pos:column="67">-&gt;</op:operator><name pos:line="771" pos:column="69">ToElement</name></name><argument_list pos:line="771" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="772" pos:column="33">int</name></type> <name pos:line="772" pos:column="37">id</name></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="773" pos:column="33">const</specifier> <name pos:line="773" pos:column="39">char</name> <type:modifier pos:line="773" pos:column="44">*</type:modifier></type><name pos:line="773" pos:column="45">sentinel</name> <init pos:line="773" pos:column="54">= <expr><call><name><name pos:line="773" pos:column="56">element</name><op:operator pos:line="773" pos:column="63">-&gt;</op:operator><name pos:line="773" pos:column="65">Attribute</name></name><argument_list pos:line="773" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="773" pos:column="75">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="773" pos:column="81">&amp;</op:operator><name pos:line="773" pos:column="82">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="774" pos:column="33">const</specifier> <name pos:line="774" pos:column="39">char</name> <type:modifier pos:line="774" pos:column="44">*</type:modifier></type><name pos:line="774" pos:column="45">name</name> <init pos:line="774" pos:column="50">= <expr><call><name><name pos:line="774" pos:column="52">element</name><op:operator pos:line="774" pos:column="59">-&gt;</op:operator><name pos:line="774" pos:column="61">Attribute</name></name><argument_list pos:line="774" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="774" pos:column="71">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<if pos:line="775" pos:column="33">if <condition pos:line="775" pos:column="36">(<expr><name pos:line="775" pos:column="37">sentinel</name> <op:operator pos:line="775" pos:column="46">&amp;&amp;</op:operator> <op:operator pos:line="775" pos:column="49">(</op:operator><name pos:line="775" pos:column="50">name</name> <op:operator pos:line="775" pos:column="55">&amp;&amp;</op:operator> <name><name pos:line="775" pos:column="58">name</name><index pos:line="775" pos:column="62">[<expr><lit:literal type="number" pos:line="775" pos:column="63">0</lit:literal></expr>]</index></name><op:operator pos:line="775" pos:column="65">)</op:operator></expr>)</condition><then pos:line="775" pos:column="67">
				<block pos:line="776" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="777" pos:column="41">HWND</name></type> <name pos:line="777" pos:column="46">hItem</name> <init pos:line="777" pos:column="52">= <expr><call><name><op:operator pos:line="777" pos:column="54">::</op:operator><name pos:line="777" pos:column="56">GetDlgItem</name></name><argument_list pos:line="777" pos:column="66">(<argument><expr><name><name pos:line="777" pos:column="67">hDlgArrary</name><index pos:line="777" pos:column="77">[<expr><name pos:line="777" pos:column="78">i</name></expr>]</index></name></expr></argument>, <argument><expr><name pos:line="777" pos:column="82">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<if pos:line="778" pos:column="41">if <condition pos:line="778" pos:column="44">(<expr><name pos:line="778" pos:column="45">hItem</name></expr>)</condition><then pos:line="778" pos:column="51">
					<block pos:line="779" pos:column="41">{
<cpp:ifdef pos:line="780" pos:column="1">#<cpp:directive pos:line="780" pos:column="2">ifdef</cpp:directive> <name pos:line="780" pos:column="8">UNICODE</name></cpp:ifdef>
						<decl_stmt><decl><type><specifier pos:line="781" pos:column="49">const</specifier> <name pos:line="781" pos:column="55">wchar_t</name> <type:modifier pos:line="781" pos:column="63">*</type:modifier></type><name pos:line="781" pos:column="64">nameW</name> <init pos:line="781" pos:column="70">= <expr><call><name><name pos:line="781" pos:column="72">wmc</name><op:operator pos:line="781" pos:column="75">-&gt;</op:operator><name pos:line="781" pos:column="77">char2wchar</name></name><argument_list pos:line="781" pos:column="87">(<argument><expr><name pos:line="781" pos:column="88">name</name></expr></argument>, <argument><expr><name pos:line="781" pos:column="94">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="782" pos:column="49">::</op:operator><name pos:line="782" pos:column="51">SetWindowText</name></name><argument_list pos:line="782" pos:column="64">(<argument><expr><name pos:line="782" pos:column="65">hItem</name></expr></argument>, <argument><expr><name pos:line="782" pos:column="72">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="783" pos:column="1">#<cpp:directive pos:line="783" pos:column="2">else</cpp:directive></cpp:else>
						<expr_stmt><expr><call><name><op:operator pos:line="784" pos:column="49">::</op:operator><name pos:line="784" pos:column="51">SetWindowText</name></name><argument_list pos:line="784" pos:column="64">(<argument><expr><name pos:line="784" pos:column="65">hItem</name></expr></argument>, <argument><expr><name pos:line="784" pos:column="72">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="785" pos:column="1">#<cpp:directive pos:line="785" pos:column="2">endif</cpp:directive></cpp:endif>
					}</block></then></if>
				}</block></then></if>
			}</block></for>
		}</block></then></if>
	}</block></for>
}</block></function>

<function><type><name pos:line="793" pos:column="1">void</name></type> <name><name pos:line="793" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="793" pos:column="23">::</op:operator><name pos:line="793" pos:column="25">changeFindReplaceDlgLang</name></name><parameter_list pos:line="793" pos:column="49">(<param><decl><type><name pos:line="793" pos:column="50">FindReplaceDlg</name> <type:modifier pos:line="793" pos:column="65">&amp;</type:modifier></type> <name pos:line="793" pos:column="67">findReplaceDlg</name></decl></param>)</parameter_list>
<block pos:line="794" pos:column="1">{
	<if pos:line="795" pos:column="9">if <condition pos:line="795" pos:column="12">(<expr><name pos:line="795" pos:column="13">_nativeLangA</name></expr>)</condition><then pos:line="795" pos:column="26">
	<block pos:line="796" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="797" pos:column="17">TiXmlNodeA</name> <type:modifier pos:line="797" pos:column="28">*</type:modifier></type><name pos:line="797" pos:column="29">dlgNode</name> <init pos:line="797" pos:column="37">= <expr><call><name><name pos:line="797" pos:column="39">_nativeLangA</name><op:operator pos:line="797" pos:column="51">-&gt;</op:operator><name pos:line="797" pos:column="53">FirstChild</name></name><argument_list pos:line="797" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="797" pos:column="64">"Dialog"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="798" pos:column="17">if <condition pos:line="798" pos:column="20">(<expr><name pos:line="798" pos:column="21">dlgNode</name></expr>)</condition><then pos:line="798" pos:column="29">
		<block pos:line="799" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="800" pos:column="25">NppParameters</name> <type:modifier pos:line="800" pos:column="39">*</type:modifier></type><name pos:line="800" pos:column="40">pNppParam</name> <init pos:line="800" pos:column="50">= <expr><call><name><name pos:line="800" pos:column="52">NppParameters</name><op:operator pos:line="800" pos:column="65">::</op:operator><name pos:line="800" pos:column="67">getInstance</name></name><argument_list pos:line="800" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><name pos:line="801" pos:column="25">dlgNode</name> <op:operator pos:line="801" pos:column="33">=</op:operator> <call><name pos:line="801" pos:column="35">searchDlgNode</name><argument_list pos:line="801" pos:column="48">(<argument><expr><name pos:line="801" pos:column="49">dlgNode</name></expr></argument>, <argument><expr><lit:literal type="string" pos:line="801" pos:column="58">"Find"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="802" pos:column="25">if <condition pos:line="802" pos:column="28">(<expr><name pos:line="802" pos:column="29">dlgNode</name></expr>)</condition><then pos:line="802" pos:column="37">
			<block pos:line="803" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="804" pos:column="33">const</specifier> <name pos:line="804" pos:column="39">char</name> <type:modifier pos:line="804" pos:column="44">*</type:modifier></type><name pos:line="804" pos:column="45">titre1</name> <init pos:line="804" pos:column="52">= <expr><op:operator pos:line="804" pos:column="54">(</op:operator><call><name><name pos:line="804" pos:column="55">dlgNode</name><op:operator pos:line="804" pos:column="62">-&gt;</op:operator><name pos:line="804" pos:column="64">ToElement</name></name><argument_list pos:line="804" pos:column="73">()</argument_list></call><op:operator pos:line="804" pos:column="75">)</op:operator><op:operator pos:line="804" pos:column="76">-&gt;</op:operator><call><name pos:line="804" pos:column="78">Attribute</name><argument_list pos:line="804" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="804" pos:column="88">"titleFind"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="805" pos:column="33">const</specifier> <name pos:line="805" pos:column="39">char</name> <type:modifier pos:line="805" pos:column="44">*</type:modifier></type><name pos:line="805" pos:column="45">titre2</name> <init pos:line="805" pos:column="52">= <expr><op:operator pos:line="805" pos:column="54">(</op:operator><call><name><name pos:line="805" pos:column="55">dlgNode</name><op:operator pos:line="805" pos:column="62">-&gt;</op:operator><name pos:line="805" pos:column="64">ToElement</name></name><argument_list pos:line="805" pos:column="73">()</argument_list></call><op:operator pos:line="805" pos:column="75">)</op:operator><op:operator pos:line="805" pos:column="76">-&gt;</op:operator><call><name pos:line="805" pos:column="78">Attribute</name><argument_list pos:line="805" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="805" pos:column="88">"titleReplace"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="806" pos:column="33">const</specifier> <name pos:line="806" pos:column="39">char</name> <type:modifier pos:line="806" pos:column="44">*</type:modifier></type><name pos:line="806" pos:column="45">titre3</name> <init pos:line="806" pos:column="52">= <expr><op:operator pos:line="806" pos:column="54">(</op:operator><call><name><name pos:line="806" pos:column="55">dlgNode</name><op:operator pos:line="806" pos:column="62">-&gt;</op:operator><name pos:line="806" pos:column="64">ToElement</name></name><argument_list pos:line="806" pos:column="73">()</argument_list></call><op:operator pos:line="806" pos:column="75">)</op:operator><op:operator pos:line="806" pos:column="76">-&gt;</op:operator><call><name pos:line="806" pos:column="78">Attribute</name><argument_list pos:line="806" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="806" pos:column="88">"titleFindInFiles"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="807" pos:column="33">const</specifier> <name pos:line="807" pos:column="39">char</name> <type:modifier pos:line="807" pos:column="44">*</type:modifier></type><name pos:line="807" pos:column="45">titre4</name> <init pos:line="807" pos:column="52">= <expr><op:operator pos:line="807" pos:column="54">(</op:operator><call><name><name pos:line="807" pos:column="55">dlgNode</name><op:operator pos:line="807" pos:column="62">-&gt;</op:operator><name pos:line="807" pos:column="64">ToElement</name></name><argument_list pos:line="807" pos:column="73">()</argument_list></call><op:operator pos:line="807" pos:column="75">)</op:operator><op:operator pos:line="807" pos:column="76">-&gt;</op:operator><call><name pos:line="807" pos:column="78">Attribute</name><argument_list pos:line="807" pos:column="87">(<argument><expr><lit:literal type="string" pos:line="807" pos:column="88">"titleMark"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:line="808" pos:column="1">#<cpp:directive pos:line="808" pos:column="2">ifdef</cpp:directive> <name pos:line="808" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><name pos:line="809" pos:column="33">WcharMbcsConvertor</name> <type:modifier pos:line="809" pos:column="52">*</type:modifier></type><name pos:line="809" pos:column="53">wmc</name> <init pos:line="809" pos:column="57">= <expr><call><name><name pos:line="809" pos:column="59">WcharMbcsConvertor</name><op:operator pos:line="809" pos:column="77">::</op:operator><name pos:line="809" pos:column="79">getInstance</name></name><argument_list pos:line="809" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>

				<if pos:line="811" pos:column="33">if <condition pos:line="811" pos:column="36">(<expr><name pos:line="811" pos:column="37">titre1</name> <op:operator pos:line="811" pos:column="44">&amp;&amp;</op:operator> <name><name pos:line="811" pos:column="47">titre1</name><index pos:line="811" pos:column="53">[<expr><lit:literal type="number" pos:line="811" pos:column="54">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="811" pos:column="57">
				<block pos:line="812" pos:column="33">{
					<decl_stmt><decl><type><name><name pos:line="813" pos:column="41">basic_string</name><argument_list pos:line="813" pos:column="53">&lt;<argument><expr><name pos:line="813" pos:column="54">wchar_t</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="813" pos:column="63">nameW</name> <init pos:line="813" pos:column="69">= <expr><call><name><name pos:line="813" pos:column="71">wmc</name><op:operator pos:line="813" pos:column="74">-&gt;</op:operator><name pos:line="813" pos:column="76">char2wchar</name></name><argument_list pos:line="813" pos:column="86">(<argument><expr><name pos:line="813" pos:column="87">titre1</name></expr></argument>, <argument><expr><name pos:line="813" pos:column="95">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="814" pos:column="41">pNppParam</name><op:operator pos:line="814" pos:column="50">-&gt;</op:operator><name pos:line="814" pos:column="52">getFindDlgTabTitiles</name></name><argument_list pos:line="814" pos:column="72">()</argument_list></call><op:operator pos:line="814" pos:column="74">.</op:operator><name pos:line="814" pos:column="75">_find</name> <op:operator pos:line="814" pos:column="81">=</op:operator> <name pos:line="814" pos:column="83">nameW</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="815" pos:column="41">findReplaceDlg</name><op:operator pos:line="815" pos:column="55">.</op:operator><name pos:line="815" pos:column="56">changeTabName</name></name><argument_list pos:line="815" pos:column="69">(<argument><expr><name pos:line="815" pos:column="70">FIND_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="815" pos:column="80">pNppParam</name><op:operator pos:line="815" pos:column="89">-&gt;</op:operator><name pos:line="815" pos:column="91">getFindDlgTabTitiles</name></name><argument_list pos:line="815" pos:column="111">()</argument_list></call><op:operator pos:line="815" pos:column="113">.</op:operator><call><name><name pos:line="815" pos:column="114">_find</name><op:operator pos:line="815" pos:column="119">.</op:operator><name pos:line="815" pos:column="120">c_str</name></name><argument_list pos:line="815" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="817" pos:column="33">if <condition pos:line="817" pos:column="36">(<expr><name pos:line="817" pos:column="37">titre2</name>  <op:operator pos:line="817" pos:column="45">&amp;&amp;</op:operator> <name><name pos:line="817" pos:column="48">titre2</name><index pos:line="817" pos:column="54">[<expr><lit:literal type="number" pos:line="817" pos:column="55">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="817" pos:column="58">
				<block pos:line="818" pos:column="33">{
					<decl_stmt><decl><type><name><name pos:line="819" pos:column="41">basic_string</name><argument_list pos:line="819" pos:column="53">&lt;<argument><expr><name pos:line="819" pos:column="54">wchar_t</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="819" pos:column="63">nameW</name> <init pos:line="819" pos:column="69">= <expr><call><name><name pos:line="819" pos:column="71">wmc</name><op:operator pos:line="819" pos:column="74">-&gt;</op:operator><name pos:line="819" pos:column="76">char2wchar</name></name><argument_list pos:line="819" pos:column="86">(<argument><expr><name pos:line="819" pos:column="87">titre2</name></expr></argument>, <argument><expr><name pos:line="819" pos:column="95">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="820" pos:column="41">pNppParam</name><op:operator pos:line="820" pos:column="50">-&gt;</op:operator><name pos:line="820" pos:column="52">getFindDlgTabTitiles</name></name><argument_list pos:line="820" pos:column="72">()</argument_list></call><op:operator pos:line="820" pos:column="74">.</op:operator><name pos:line="820" pos:column="75">_replace</name> <op:operator pos:line="820" pos:column="84">=</op:operator> <name pos:line="820" pos:column="86">nameW</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="821" pos:column="41">findReplaceDlg</name><op:operator pos:line="821" pos:column="55">.</op:operator><name pos:line="821" pos:column="56">changeTabName</name></name><argument_list pos:line="821" pos:column="69">(<argument><expr><name pos:line="821" pos:column="70">REPLACE_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="821" pos:column="83">pNppParam</name><op:operator pos:line="821" pos:column="92">-&gt;</op:operator><name pos:line="821" pos:column="94">getFindDlgTabTitiles</name></name><argument_list pos:line="821" pos:column="114">()</argument_list></call><op:operator pos:line="821" pos:column="116">.</op:operator><call><name><name pos:line="821" pos:column="117">_replace</name><op:operator pos:line="821" pos:column="125">.</op:operator><name pos:line="821" pos:column="126">c_str</name></name><argument_list pos:line="821" pos:column="131">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="823" pos:column="33">if <condition pos:line="823" pos:column="36">(<expr><name pos:line="823" pos:column="37">titre3</name> <op:operator pos:line="823" pos:column="44">&amp;&amp;</op:operator> <name><name pos:line="823" pos:column="47">titre3</name><index pos:line="823" pos:column="53">[<expr><lit:literal type="number" pos:line="823" pos:column="54">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="823" pos:column="57">
				<block pos:line="824" pos:column="33">{
					<decl_stmt><decl><type><name><name pos:line="825" pos:column="41">basic_string</name><argument_list pos:line="825" pos:column="53">&lt;<argument><expr><name pos:line="825" pos:column="54">wchar_t</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="825" pos:column="63">nameW</name> <init pos:line="825" pos:column="69">= <expr><call><name><name pos:line="825" pos:column="71">wmc</name><op:operator pos:line="825" pos:column="74">-&gt;</op:operator><name pos:line="825" pos:column="76">char2wchar</name></name><argument_list pos:line="825" pos:column="86">(<argument><expr><name pos:line="825" pos:column="87">titre3</name></expr></argument>, <argument><expr><name pos:line="825" pos:column="95">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="826" pos:column="41">pNppParam</name><op:operator pos:line="826" pos:column="50">-&gt;</op:operator><name pos:line="826" pos:column="52">getFindDlgTabTitiles</name></name><argument_list pos:line="826" pos:column="72">()</argument_list></call><op:operator pos:line="826" pos:column="74">.</op:operator><name pos:line="826" pos:column="75">_findInFiles</name> <op:operator pos:line="826" pos:column="88">=</op:operator> <name pos:line="826" pos:column="90">nameW</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="827" pos:column="41">findReplaceDlg</name><op:operator pos:line="827" pos:column="55">.</op:operator><name pos:line="827" pos:column="56">changeTabName</name></name><argument_list pos:line="827" pos:column="69">(<argument><expr><name pos:line="827" pos:column="70">FINDINFILES_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="827" pos:column="87">pNppParam</name><op:operator pos:line="827" pos:column="96">-&gt;</op:operator><name pos:line="827" pos:column="98">getFindDlgTabTitiles</name></name><argument_list pos:line="827" pos:column="118">()</argument_list></call><op:operator pos:line="827" pos:column="120">.</op:operator><call><name><name pos:line="827" pos:column="121">_findInFiles</name><op:operator pos:line="827" pos:column="133">.</op:operator><name pos:line="827" pos:column="134">c_str</name></name><argument_list pos:line="827" pos:column="139">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="829" pos:column="33">if <condition pos:line="829" pos:column="36">(<expr><name pos:line="829" pos:column="37">titre4</name> <op:operator pos:line="829" pos:column="44">&amp;&amp;</op:operator> <name><name pos:line="829" pos:column="47">titre4</name><index pos:line="829" pos:column="53">[<expr><lit:literal type="number" pos:line="829" pos:column="54">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="829" pos:column="57">
				<block pos:line="830" pos:column="33">{
					<decl_stmt><decl><type><name><name pos:line="831" pos:column="41">basic_string</name><argument_list pos:line="831" pos:column="53">&lt;<argument><expr><name pos:line="831" pos:column="54">wchar_t</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="831" pos:column="63">nameW</name> <init pos:line="831" pos:column="69">= <expr><call><name><name pos:line="831" pos:column="71">wmc</name><op:operator pos:line="831" pos:column="74">-&gt;</op:operator><name pos:line="831" pos:column="76">char2wchar</name></name><argument_list pos:line="831" pos:column="86">(<argument><expr><name pos:line="831" pos:column="87">titre4</name></expr></argument>, <argument><expr><name pos:line="831" pos:column="95">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="832" pos:column="41">pNppParam</name><op:operator pos:line="832" pos:column="50">-&gt;</op:operator><name pos:line="832" pos:column="52">getFindDlgTabTitiles</name></name><argument_list pos:line="832" pos:column="72">()</argument_list></call><op:operator pos:line="832" pos:column="74">.</op:operator><name pos:line="832" pos:column="75">_mark</name> <op:operator pos:line="832" pos:column="81">=</op:operator> <name pos:line="832" pos:column="83">nameW</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="833" pos:column="41">findReplaceDlg</name><op:operator pos:line="833" pos:column="55">.</op:operator><name pos:line="833" pos:column="56">changeTabName</name></name><argument_list pos:line="833" pos:column="69">(<argument><expr><name pos:line="833" pos:column="70">MARK_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="833" pos:column="80">pNppParam</name><op:operator pos:line="833" pos:column="89">-&gt;</op:operator><name pos:line="833" pos:column="91">getFindDlgTabTitiles</name></name><argument_list pos:line="833" pos:column="111">()</argument_list></call><op:operator pos:line="833" pos:column="113">.</op:operator><call><name><name pos:line="833" pos:column="114">_mark</name><op:operator pos:line="833" pos:column="119">.</op:operator><name pos:line="833" pos:column="120">c_str</name></name><argument_list pos:line="833" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
<cpp:else pos:line="835" pos:column="1">#<cpp:directive pos:line="835" pos:column="2">else</cpp:directive></cpp:else>
				<if pos:line="836" pos:column="33">if <condition pos:line="836" pos:column="36">(<expr><name pos:line="836" pos:column="37">titre1</name> <op:operator pos:line="836" pos:column="44">&amp;&amp;</op:operator> <name><name pos:line="836" pos:column="47">titre1</name><index pos:line="836" pos:column="53">[<expr><lit:literal type="number" pos:line="836" pos:column="54">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="836" pos:column="57">
				<block pos:line="837" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="838" pos:column="41">pNppParam</name><op:operator pos:line="838" pos:column="50">-&gt;</op:operator><name pos:line="838" pos:column="52">getFindDlgTabTitiles</name></name><argument_list pos:line="838" pos:column="72">()</argument_list></call><op:operator pos:line="838" pos:column="74">.</op:operator><name pos:line="838" pos:column="75">_find</name> <op:operator pos:line="838" pos:column="81">=</op:operator> <name pos:line="838" pos:column="83">titre1</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="839" pos:column="41">findReplaceDlg</name><op:operator pos:line="839" pos:column="55">.</op:operator><name pos:line="839" pos:column="56">changeTabName</name></name><argument_list pos:line="839" pos:column="69">(<argument><expr><name pos:line="839" pos:column="70">FIND_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="839" pos:column="80">pNppParam</name><op:operator pos:line="839" pos:column="89">-&gt;</op:operator><name pos:line="839" pos:column="91">getFindDlgTabTitiles</name></name><argument_list pos:line="839" pos:column="111">()</argument_list></call><op:operator pos:line="839" pos:column="113">.</op:operator><call><name><name pos:line="839" pos:column="114">_find</name><op:operator pos:line="839" pos:column="119">.</op:operator><name pos:line="839" pos:column="120">c_str</name></name><argument_list pos:line="839" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="841" pos:column="33">if <condition pos:line="841" pos:column="36">(<expr><name pos:line="841" pos:column="37">titre2</name> <op:operator pos:line="841" pos:column="44">&amp;&amp;</op:operator> <name><name pos:line="841" pos:column="47">titre2</name><index pos:line="841" pos:column="53">[<expr><lit:literal type="number" pos:line="841" pos:column="54">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="841" pos:column="57">
				<block pos:line="842" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="843" pos:column="41">pNppParam</name><op:operator pos:line="843" pos:column="50">-&gt;</op:operator><name pos:line="843" pos:column="52">getFindDlgTabTitiles</name></name><argument_list pos:line="843" pos:column="72">()</argument_list></call><op:operator pos:line="843" pos:column="74">.</op:operator><name pos:line="843" pos:column="75">_replace</name> <op:operator pos:line="843" pos:column="84">=</op:operator> <name pos:line="843" pos:column="86">titre2</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="844" pos:column="41">findReplaceDlg</name><op:operator pos:line="844" pos:column="55">.</op:operator><name pos:line="844" pos:column="56">changeTabName</name></name><argument_list pos:line="844" pos:column="69">(<argument><expr><name pos:line="844" pos:column="70">REPLACE_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="844" pos:column="83">pNppParam</name><op:operator pos:line="844" pos:column="92">-&gt;</op:operator><name pos:line="844" pos:column="94">getFindDlgTabTitiles</name></name><argument_list pos:line="844" pos:column="114">()</argument_list></call><op:operator pos:line="844" pos:column="116">.</op:operator><call><name><name pos:line="844" pos:column="117">_replace</name><op:operator pos:line="844" pos:column="125">.</op:operator><name pos:line="844" pos:column="126">c_str</name></name><argument_list pos:line="844" pos:column="131">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="846" pos:column="33">if <condition pos:line="846" pos:column="36">(<expr><name pos:line="846" pos:column="37">titre3</name> <op:operator pos:line="846" pos:column="44">&amp;&amp;</op:operator> <name><name pos:line="846" pos:column="47">titre3</name><index pos:line="846" pos:column="53">[<expr><lit:literal type="number" pos:line="846" pos:column="54">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="846" pos:column="57">
				<block pos:line="847" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="848" pos:column="41">pNppParam</name><op:operator pos:line="848" pos:column="50">-&gt;</op:operator><name pos:line="848" pos:column="52">getFindDlgTabTitiles</name></name><argument_list pos:line="848" pos:column="72">()</argument_list></call><op:operator pos:line="848" pos:column="74">.</op:operator><name pos:line="848" pos:column="75">_findInFiles</name> <op:operator pos:line="848" pos:column="88">=</op:operator> <name pos:line="848" pos:column="90">titre3</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="849" pos:column="41">findReplaceDlg</name><op:operator pos:line="849" pos:column="55">.</op:operator><name pos:line="849" pos:column="56">changeTabName</name></name><argument_list pos:line="849" pos:column="69">(<argument><expr><name pos:line="849" pos:column="70">FINDINFILES_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="849" pos:column="87">pNppParam</name><op:operator pos:line="849" pos:column="96">-&gt;</op:operator><name pos:line="849" pos:column="98">getFindDlgTabTitiles</name></name><argument_list pos:line="849" pos:column="118">()</argument_list></call><op:operator pos:line="849" pos:column="120">.</op:operator><call><name><name pos:line="849" pos:column="121">_findInFiles</name><op:operator pos:line="849" pos:column="133">.</op:operator><name pos:line="849" pos:column="134">c_str</name></name><argument_list pos:line="849" pos:column="139">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<if pos:line="851" pos:column="33">if <condition pos:line="851" pos:column="36">(<expr><name pos:line="851" pos:column="37">titre4</name> <op:operator pos:line="851" pos:column="44">&amp;&amp;</op:operator> <name><name pos:line="851" pos:column="47">titre4</name><index pos:line="851" pos:column="53">[<expr><lit:literal type="number" pos:line="851" pos:column="54">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="851" pos:column="57">
				<block pos:line="852" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="853" pos:column="41">pNppParam</name><op:operator pos:line="853" pos:column="50">-&gt;</op:operator><name pos:line="853" pos:column="52">getFindDlgTabTitiles</name></name><argument_list pos:line="853" pos:column="72">()</argument_list></call><op:operator pos:line="853" pos:column="74">.</op:operator><name pos:line="853" pos:column="75">_mark</name> <op:operator pos:line="853" pos:column="81">=</op:operator> <name pos:line="853" pos:column="83">titre4</name></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="854" pos:column="41">findReplaceDlg</name><op:operator pos:line="854" pos:column="55">.</op:operator><name pos:line="854" pos:column="56">changeTabName</name></name><argument_list pos:line="854" pos:column="69">(<argument><expr><name pos:line="854" pos:column="70">MARK_DLG</name></expr></argument>, <argument><expr><call><name><name pos:line="854" pos:column="80">pNppParam</name><op:operator pos:line="854" pos:column="89">-&gt;</op:operator><name pos:line="854" pos:column="91">getFindDlgTabTitiles</name></name><argument_list pos:line="854" pos:column="111">()</argument_list></call><op:operator pos:line="854" pos:column="113">.</op:operator><call><name><name pos:line="854" pos:column="114">_mark</name><op:operator pos:line="854" pos:column="119">.</op:operator><name pos:line="854" pos:column="120">c_str</name></name><argument_list pos:line="854" pos:column="125">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
<cpp:endif pos:line="856" pos:column="1">#<cpp:directive pos:line="856" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then></if>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="860" pos:column="9">changeDlgLang</name><argument_list pos:line="860" pos:column="22">(<argument><expr><call><name><name pos:line="860" pos:column="23">findReplaceDlg</name><op:operator pos:line="860" pos:column="37">.</op:operator><name pos:line="860" pos:column="38">getHSelf</name></name><argument_list pos:line="860" pos:column="46">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="860" pos:column="50">"Find"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="863" pos:column="1">void</name></type> <name><name pos:line="863" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="863" pos:column="23">::</op:operator><name pos:line="863" pos:column="25">changePrefereceDlgLang</name></name><parameter_list pos:line="863" pos:column="47">(<param><decl><type><name pos:line="863" pos:column="48">PreferenceDlg</name> <type:modifier pos:line="863" pos:column="62">&amp;</type:modifier></type> <name pos:line="863" pos:column="64">preference</name></decl></param>)</parameter_list> 
<block pos:line="864" pos:column="1">{
	<expr_stmt><expr><call><name pos:line="865" pos:column="9">changeDlgLang</name><argument_list pos:line="865" pos:column="22">(<argument><expr><call><name><name pos:line="865" pos:column="23">preference</name><op:operator pos:line="865" pos:column="33">.</op:operator><name pos:line="865" pos:column="34">getHSelf</name></name><argument_list pos:line="865" pos:column="42">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="865" pos:column="46">"Preference"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<decl_stmt><decl><type><name pos:line="867" pos:column="9">char</name></type> <name><name pos:line="867" pos:column="14">titre</name><index pos:line="867" pos:column="19">[<expr><lit:literal type="number" pos:line="867" pos:column="20">128</lit:literal></expr>]</index></name></decl>;</decl_stmt>

<cpp:ifdef pos:line="869" pos:column="1">#<cpp:directive pos:line="869" pos:column="2">ifdef</cpp:directive> <name pos:line="869" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="870" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="870" pos:column="28">*</type:modifier></type><name pos:line="870" pos:column="29">wmc</name> <init pos:line="870" pos:column="33">= <expr><call><name><name pos:line="870" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="870" pos:column="53">::</op:operator><name pos:line="870" pos:column="55">getInstance</name></name><argument_list pos:line="870" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="871" pos:column="1">#<cpp:directive pos:line="871" pos:column="2">endif</cpp:directive></cpp:endif>

	<expr_stmt><expr><call><name pos:line="873" pos:column="9">changeDlgLang</name><argument_list pos:line="873" pos:column="22">(<argument><expr><call><name><name pos:line="873" pos:column="23">preference</name><op:operator pos:line="873" pos:column="33">.</op:operator><name pos:line="873" pos:column="34">_barsDlg</name><op:operator pos:line="873" pos:column="42">.</op:operator><name pos:line="873" pos:column="43">getHSelf</name></name><argument_list pos:line="873" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="873" pos:column="55">"Global"</lit:literal></expr></argument>, <argument><expr><name pos:line="873" pos:column="65">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="874" pos:column="9">if <condition pos:line="874" pos:column="12">(<expr><op:operator pos:line="874" pos:column="13">*</op:operator><name pos:line="874" pos:column="14">titre</name></expr>)</condition><then pos:line="874" pos:column="20">
	<block pos:line="875" pos:column="9">{
<cpp:ifdef pos:line="876" pos:column="1">#<cpp:directive pos:line="876" pos:column="2">ifdef</cpp:directive> <name pos:line="876" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="877" pos:column="17">const</specifier> <name pos:line="877" pos:column="23">wchar_t</name> <type:modifier pos:line="877" pos:column="31">*</type:modifier></type><name pos:line="877" pos:column="32">nameW</name> <init pos:line="877" pos:column="38">= <expr><call><name><name pos:line="877" pos:column="40">wmc</name><op:operator pos:line="877" pos:column="43">-&gt;</op:operator><name pos:line="877" pos:column="45">char2wchar</name></name><argument_list pos:line="877" pos:column="55">(<argument><expr><name pos:line="877" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="877" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="878" pos:column="17">preference</name><op:operator pos:line="878" pos:column="27">.</op:operator><name pos:line="878" pos:column="28">_ctrlTab</name><op:operator pos:line="878" pos:column="36">.</op:operator><name pos:line="878" pos:column="37">renameTab</name></name><argument_list pos:line="878" pos:column="46">(<argument><expr><call><name pos:line="878" pos:column="47">TEXT</name><argument_list pos:line="878" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="878" pos:column="52">"Global"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="878" pos:column="63">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="879" pos:column="1">#<cpp:directive pos:line="879" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="880" pos:column="17">preference</name><op:operator pos:line="880" pos:column="27">.</op:operator><name pos:line="880" pos:column="28">_ctrlTab</name><op:operator pos:line="880" pos:column="36">.</op:operator><name pos:line="880" pos:column="37">renameTab</name></name><argument_list pos:line="880" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="880" pos:column="47">"Global"</lit:literal></expr></argument>, <argument><expr><name pos:line="880" pos:column="57">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="881" pos:column="1">#<cpp:directive pos:line="881" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="883" pos:column="9">changeDlgLang</name><argument_list pos:line="883" pos:column="22">(<argument><expr><call><name><name pos:line="883" pos:column="23">preference</name><op:operator pos:line="883" pos:column="33">.</op:operator><name pos:line="883" pos:column="34">_marginsDlg</name><op:operator pos:line="883" pos:column="45">.</op:operator><name pos:line="883" pos:column="46">getHSelf</name></name><argument_list pos:line="883" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="883" pos:column="58">"Scintillas"</lit:literal></expr></argument>, <argument><expr><name pos:line="883" pos:column="72">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="884" pos:column="9">if <condition pos:line="884" pos:column="12">(<expr><op:operator pos:line="884" pos:column="13">*</op:operator><name pos:line="884" pos:column="14">titre</name></expr>)</condition><then pos:line="884" pos:column="20">
	<block pos:line="885" pos:column="9">{
<cpp:ifdef pos:line="886" pos:column="1">#<cpp:directive pos:line="886" pos:column="2">ifdef</cpp:directive> <name pos:line="886" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="887" pos:column="17">const</specifier> <name pos:line="887" pos:column="23">wchar_t</name> <type:modifier pos:line="887" pos:column="31">*</type:modifier></type><name pos:line="887" pos:column="32">nameW</name> <init pos:line="887" pos:column="38">= <expr><call><name><name pos:line="887" pos:column="40">wmc</name><op:operator pos:line="887" pos:column="43">-&gt;</op:operator><name pos:line="887" pos:column="45">char2wchar</name></name><argument_list pos:line="887" pos:column="55">(<argument><expr><name pos:line="887" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="887" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="888" pos:column="17">preference</name><op:operator pos:line="888" pos:column="27">.</op:operator><name pos:line="888" pos:column="28">_ctrlTab</name><op:operator pos:line="888" pos:column="36">.</op:operator><name pos:line="888" pos:column="37">renameTab</name></name><argument_list pos:line="888" pos:column="46">(<argument><expr><call><name pos:line="888" pos:column="47">TEXT</name><argument_list pos:line="888" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="888" pos:column="52">"Scintillas"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="888" pos:column="67">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="889" pos:column="1">#<cpp:directive pos:line="889" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="890" pos:column="17">preference</name><op:operator pos:line="890" pos:column="27">.</op:operator><name pos:line="890" pos:column="28">_ctrlTab</name><op:operator pos:line="890" pos:column="36">.</op:operator><name pos:line="890" pos:column="37">renameTab</name></name><argument_list pos:line="890" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="890" pos:column="47">"Scintillas"</lit:literal></expr></argument>, <argument><expr><name pos:line="890" pos:column="61">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="891" pos:column="1">#<cpp:directive pos:line="891" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="894" pos:column="9">changeDlgLang</name><argument_list pos:line="894" pos:column="22">(<argument><expr><call><name><name pos:line="894" pos:column="23">preference</name><op:operator pos:line="894" pos:column="33">.</op:operator><name pos:line="894" pos:column="34">_defaultNewDocDlg</name><op:operator pos:line="894" pos:column="51">.</op:operator><name pos:line="894" pos:column="52">getHSelf</name></name><argument_list pos:line="894" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="894" pos:column="64">"NewDoc"</lit:literal></expr></argument>, <argument><expr><name pos:line="894" pos:column="74">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="895" pos:column="9">if <condition pos:line="895" pos:column="12">(<expr><op:operator pos:line="895" pos:column="13">*</op:operator><name pos:line="895" pos:column="14">titre</name></expr>)</condition><then pos:line="895" pos:column="20">
	<block pos:line="896" pos:column="9">{
<cpp:ifdef pos:line="897" pos:column="1">#<cpp:directive pos:line="897" pos:column="2">ifdef</cpp:directive> <name pos:line="897" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="898" pos:column="17">const</specifier> <name pos:line="898" pos:column="23">wchar_t</name> <type:modifier pos:line="898" pos:column="31">*</type:modifier></type><name pos:line="898" pos:column="32">nameW</name> <init pos:line="898" pos:column="38">= <expr><call><name><name pos:line="898" pos:column="40">wmc</name><op:operator pos:line="898" pos:column="43">-&gt;</op:operator><name pos:line="898" pos:column="45">char2wchar</name></name><argument_list pos:line="898" pos:column="55">(<argument><expr><name pos:line="898" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="898" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="899" pos:column="17">preference</name><op:operator pos:line="899" pos:column="27">.</op:operator><name pos:line="899" pos:column="28">_ctrlTab</name><op:operator pos:line="899" pos:column="36">.</op:operator><name pos:line="899" pos:column="37">renameTab</name></name><argument_list pos:line="899" pos:column="46">(<argument><expr><call><name pos:line="899" pos:column="47">TEXT</name><argument_list pos:line="899" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="899" pos:column="52">"NewDoc"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="899" pos:column="63">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="900" pos:column="1">#<cpp:directive pos:line="900" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="901" pos:column="17">preference</name><op:operator pos:line="901" pos:column="27">.</op:operator><name pos:line="901" pos:column="28">_ctrlTab</name><op:operator pos:line="901" pos:column="36">.</op:operator><name pos:line="901" pos:column="37">renameTab</name></name><argument_list pos:line="901" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="901" pos:column="47">"NewDoc"</lit:literal></expr></argument>, <argument><expr><name pos:line="901" pos:column="57">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="902" pos:column="1">#<cpp:directive pos:line="902" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="905" pos:column="9">changeDlgLang</name><argument_list pos:line="905" pos:column="22">(<argument><expr><call><name><name pos:line="905" pos:column="23">preference</name><op:operator pos:line="905" pos:column="33">.</op:operator><name pos:line="905" pos:column="34">_fileAssocDlg</name><op:operator pos:line="905" pos:column="47">.</op:operator><name pos:line="905" pos:column="48">getHSelf</name></name><argument_list pos:line="905" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="905" pos:column="60">"FileAssoc"</lit:literal></expr></argument>, <argument><expr><name pos:line="905" pos:column="73">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="906" pos:column="9">if <condition pos:line="906" pos:column="12">(<expr><op:operator pos:line="906" pos:column="13">*</op:operator><name pos:line="906" pos:column="14">titre</name></expr>)</condition><then pos:line="906" pos:column="20">
	<block pos:line="907" pos:column="9">{
<cpp:ifdef pos:line="908" pos:column="1">#<cpp:directive pos:line="908" pos:column="2">ifdef</cpp:directive> <name pos:line="908" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="909" pos:column="17">const</specifier> <name pos:line="909" pos:column="23">wchar_t</name> <type:modifier pos:line="909" pos:column="31">*</type:modifier></type><name pos:line="909" pos:column="32">nameW</name> <init pos:line="909" pos:column="38">= <expr><call><name><name pos:line="909" pos:column="40">wmc</name><op:operator pos:line="909" pos:column="43">-&gt;</op:operator><name pos:line="909" pos:column="45">char2wchar</name></name><argument_list pos:line="909" pos:column="55">(<argument><expr><name pos:line="909" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="909" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="910" pos:column="17">preference</name><op:operator pos:line="910" pos:column="27">.</op:operator><name pos:line="910" pos:column="28">_ctrlTab</name><op:operator pos:line="910" pos:column="36">.</op:operator><name pos:line="910" pos:column="37">renameTab</name></name><argument_list pos:line="910" pos:column="46">(<argument><expr><call><name pos:line="910" pos:column="47">TEXT</name><argument_list pos:line="910" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="910" pos:column="52">"FileAssoc"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="910" pos:column="66">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="911" pos:column="1">#<cpp:directive pos:line="911" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="912" pos:column="17">preference</name><op:operator pos:line="912" pos:column="27">.</op:operator><name pos:line="912" pos:column="28">_ctrlTab</name><op:operator pos:line="912" pos:column="36">.</op:operator><name pos:line="912" pos:column="37">renameTab</name></name><argument_list pos:line="912" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="912" pos:column="47">"FileAssoc"</lit:literal></expr></argument>, <argument><expr><name pos:line="912" pos:column="60">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="913" pos:column="1">#<cpp:directive pos:line="913" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="916" pos:column="9">changeDlgLang</name><argument_list pos:line="916" pos:column="22">(<argument><expr><call><name><name pos:line="916" pos:column="23">preference</name><op:operator pos:line="916" pos:column="33">.</op:operator><name pos:line="916" pos:column="34">_langMenuDlg</name><op:operator pos:line="916" pos:column="46">.</op:operator><name pos:line="916" pos:column="47">getHSelf</name></name><argument_list pos:line="916" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="916" pos:column="59">"LangMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="916" pos:column="71">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="917" pos:column="9">if <condition pos:line="917" pos:column="12">(<expr><op:operator pos:line="917" pos:column="13">*</op:operator><name pos:line="917" pos:column="14">titre</name></expr>)</condition><then pos:line="917" pos:column="20">
	<block pos:line="918" pos:column="9">{
<cpp:ifdef pos:line="919" pos:column="1">#<cpp:directive pos:line="919" pos:column="2">ifdef</cpp:directive> <name pos:line="919" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="920" pos:column="17">const</specifier> <name pos:line="920" pos:column="23">wchar_t</name> <type:modifier pos:line="920" pos:column="31">*</type:modifier></type><name pos:line="920" pos:column="32">nameW</name> <init pos:line="920" pos:column="38">= <expr><call><name><name pos:line="920" pos:column="40">wmc</name><op:operator pos:line="920" pos:column="43">-&gt;</op:operator><name pos:line="920" pos:column="45">char2wchar</name></name><argument_list pos:line="920" pos:column="55">(<argument><expr><name pos:line="920" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="920" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="921" pos:column="17">preference</name><op:operator pos:line="921" pos:column="27">.</op:operator><name pos:line="921" pos:column="28">_ctrlTab</name><op:operator pos:line="921" pos:column="36">.</op:operator><name pos:line="921" pos:column="37">renameTab</name></name><argument_list pos:line="921" pos:column="46">(<argument><expr><call><name pos:line="921" pos:column="47">TEXT</name><argument_list pos:line="921" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="921" pos:column="52">"LangMenu"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="921" pos:column="65">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="922" pos:column="1">#<cpp:directive pos:line="922" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="923" pos:column="17">preference</name><op:operator pos:line="923" pos:column="27">.</op:operator><name pos:line="923" pos:column="28">_ctrlTab</name><op:operator pos:line="923" pos:column="36">.</op:operator><name pos:line="923" pos:column="37">renameTab</name></name><argument_list pos:line="923" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="923" pos:column="47">"LangMenu"</lit:literal></expr></argument>, <argument><expr><name pos:line="923" pos:column="59">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="924" pos:column="1">#<cpp:directive pos:line="924" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>

	<expr_stmt><expr><call><name pos:line="927" pos:column="9">changeDlgLang</name><argument_list pos:line="927" pos:column="22">(<argument><expr><call><name><name pos:line="927" pos:column="23">preference</name><op:operator pos:line="927" pos:column="33">.</op:operator><name pos:line="927" pos:column="34">_printSettingsDlg</name><op:operator pos:line="927" pos:column="51">.</op:operator><name pos:line="927" pos:column="52">getHSelf</name></name><argument_list pos:line="927" pos:column="60">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="927" pos:column="64">"Print"</lit:literal></expr></argument>, <argument><expr><name pos:line="927" pos:column="73">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="928" pos:column="9">if <condition pos:line="928" pos:column="12">(<expr><op:operator pos:line="928" pos:column="13">*</op:operator><name pos:line="928" pos:column="14">titre</name></expr>)</condition><then pos:line="928" pos:column="20">
	<block pos:line="929" pos:column="9">{
<cpp:ifdef pos:line="930" pos:column="1">#<cpp:directive pos:line="930" pos:column="2">ifdef</cpp:directive> <name pos:line="930" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="931" pos:column="17">const</specifier> <name pos:line="931" pos:column="23">wchar_t</name> <type:modifier pos:line="931" pos:column="31">*</type:modifier></type><name pos:line="931" pos:column="32">nameW</name> <init pos:line="931" pos:column="38">= <expr><call><name><name pos:line="931" pos:column="40">wmc</name><op:operator pos:line="931" pos:column="43">-&gt;</op:operator><name pos:line="931" pos:column="45">char2wchar</name></name><argument_list pos:line="931" pos:column="55">(<argument><expr><name pos:line="931" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="931" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="932" pos:column="17">preference</name><op:operator pos:line="932" pos:column="27">.</op:operator><name pos:line="932" pos:column="28">_ctrlTab</name><op:operator pos:line="932" pos:column="36">.</op:operator><name pos:line="932" pos:column="37">renameTab</name></name><argument_list pos:line="932" pos:column="46">(<argument><expr><call><name pos:line="932" pos:column="47">TEXT</name><argument_list pos:line="932" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="932" pos:column="52">"Print"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="932" pos:column="62">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="933" pos:column="1">#<cpp:directive pos:line="933" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="934" pos:column="17">preference</name><op:operator pos:line="934" pos:column="27">.</op:operator><name pos:line="934" pos:column="28">_ctrlTab</name><op:operator pos:line="934" pos:column="36">.</op:operator><name pos:line="934" pos:column="37">renameTab</name></name><argument_list pos:line="934" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="934" pos:column="47">"Print"</lit:literal></expr></argument>, <argument><expr><name pos:line="934" pos:column="56">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="935" pos:column="1">#<cpp:directive pos:line="935" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="937" pos:column="9">changeDlgLang</name><argument_list pos:line="937" pos:column="22">(<argument><expr><call><name><name pos:line="937" pos:column="23">preference</name><op:operator pos:line="937" pos:column="33">.</op:operator><name pos:line="937" pos:column="34">_settingsDlg</name><op:operator pos:line="937" pos:column="46">.</op:operator><name pos:line="937" pos:column="47">getHSelf</name></name><argument_list pos:line="937" pos:column="55">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="937" pos:column="59">"MISC"</lit:literal></expr></argument>, <argument><expr><name pos:line="937" pos:column="67">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="938" pos:column="9">if <condition pos:line="938" pos:column="12">(<expr><op:operator pos:line="938" pos:column="13">*</op:operator><name pos:line="938" pos:column="14">titre</name></expr>)</condition><then pos:line="938" pos:column="20">
	<block pos:line="939" pos:column="9">{
<cpp:ifdef pos:line="940" pos:column="1">#<cpp:directive pos:line="940" pos:column="2">ifdef</cpp:directive> <name pos:line="940" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="941" pos:column="17">const</specifier> <name pos:line="941" pos:column="23">wchar_t</name> <type:modifier pos:line="941" pos:column="31">*</type:modifier></type><name pos:line="941" pos:column="32">nameW</name> <init pos:line="941" pos:column="38">= <expr><call><name><name pos:line="941" pos:column="40">wmc</name><op:operator pos:line="941" pos:column="43">-&gt;</op:operator><name pos:line="941" pos:column="45">char2wchar</name></name><argument_list pos:line="941" pos:column="55">(<argument><expr><name pos:line="941" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="941" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="942" pos:column="17">preference</name><op:operator pos:line="942" pos:column="27">.</op:operator><name pos:line="942" pos:column="28">_ctrlTab</name><op:operator pos:line="942" pos:column="36">.</op:operator><name pos:line="942" pos:column="37">renameTab</name></name><argument_list pos:line="942" pos:column="46">(<argument><expr><call><name pos:line="942" pos:column="47">TEXT</name><argument_list pos:line="942" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="942" pos:column="52">"MISC"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="942" pos:column="61">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="943" pos:column="1">#<cpp:directive pos:line="943" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="944" pos:column="17">preference</name><op:operator pos:line="944" pos:column="27">.</op:operator><name pos:line="944" pos:column="28">_ctrlTab</name><op:operator pos:line="944" pos:column="36">.</op:operator><name pos:line="944" pos:column="37">renameTab</name></name><argument_list pos:line="944" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="944" pos:column="47">"MISC"</lit:literal></expr></argument>, <argument><expr><name pos:line="944" pos:column="55">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="945" pos:column="1">#<cpp:directive pos:line="945" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
	<expr_stmt><expr><call><name pos:line="947" pos:column="9">changeDlgLang</name><argument_list pos:line="947" pos:column="22">(<argument><expr><call><name><name pos:line="947" pos:column="23">preference</name><op:operator pos:line="947" pos:column="33">.</op:operator><name pos:line="947" pos:column="34">_backupDlg</name><op:operator pos:line="947" pos:column="44">.</op:operator><name pos:line="947" pos:column="45">getHSelf</name></name><argument_list pos:line="947" pos:column="53">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="947" pos:column="57">"Backup"</lit:literal></expr></argument>, <argument><expr><name pos:line="947" pos:column="67">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="948" pos:column="9">if <condition pos:line="948" pos:column="12">(<expr><op:operator pos:line="948" pos:column="13">*</op:operator><name pos:line="948" pos:column="14">titre</name></expr>)</condition><then pos:line="948" pos:column="20">
	<block pos:line="949" pos:column="9">{
<cpp:ifdef pos:line="950" pos:column="1">#<cpp:directive pos:line="950" pos:column="2">ifdef</cpp:directive> <name pos:line="950" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="951" pos:column="17">const</specifier> <name pos:line="951" pos:column="23">wchar_t</name> <type:modifier pos:line="951" pos:column="31">*</type:modifier></type><name pos:line="951" pos:column="32">nameW</name> <init pos:line="951" pos:column="38">= <expr><call><name><name pos:line="951" pos:column="40">wmc</name><op:operator pos:line="951" pos:column="43">-&gt;</op:operator><name pos:line="951" pos:column="45">char2wchar</name></name><argument_list pos:line="951" pos:column="55">(<argument><expr><name pos:line="951" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="951" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="952" pos:column="17">preference</name><op:operator pos:line="952" pos:column="27">.</op:operator><name pos:line="952" pos:column="28">_ctrlTab</name><op:operator pos:line="952" pos:column="36">.</op:operator><name pos:line="952" pos:column="37">renameTab</name></name><argument_list pos:line="952" pos:column="46">(<argument><expr><call><name pos:line="952" pos:column="47">TEXT</name><argument_list pos:line="952" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="952" pos:column="52">"Backup"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="952" pos:column="63">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="953" pos:column="1">#<cpp:directive pos:line="953" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><name pos:line="954" pos:column="17">preference</name><op:operator pos:line="954" pos:column="27">.</op:operator><name pos:line="954" pos:column="28">_ctrlTab</name><op:operator pos:line="954" pos:column="36">.</op:operator><name pos:line="954" pos:column="37">renameTab</name></name><argument_list pos:line="954" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="954" pos:column="47">"Backup"</lit:literal></expr></argument>, <argument><expr><name pos:line="954" pos:column="57">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="955" pos:column="1">#<cpp:directive pos:line="955" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
}</block></function>

<function><type><name pos:line="959" pos:column="1">void</name></type> <name><name pos:line="959" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="959" pos:column="23">::</op:operator><name pos:line="959" pos:column="25">changeShortcutLang</name></name><parameter_list pos:line="959" pos:column="43">()</parameter_list>
<block pos:line="960" pos:column="1">{
	<if pos:line="961" pos:column="9">if <condition pos:line="961" pos:column="12">(<expr><op:operator pos:line="961" pos:column="13">!</op:operator><name pos:line="961" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="961" pos:column="27"> <return pos:line="961" pos:column="28">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="963" pos:column="9">NppParameters</name> <type:modifier pos:line="963" pos:column="23">*</type:modifier></type> <name pos:line="963" pos:column="25">pNppParam</name> <init pos:line="963" pos:column="35">= <expr><call><name><name pos:line="963" pos:column="37">NppParameters</name><op:operator pos:line="963" pos:column="50">::</op:operator><name pos:line="963" pos:column="52">getInstance</name></name><argument_list pos:line="963" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="964" pos:column="9">vector</name><argument_list pos:line="964" pos:column="15">&lt;<argument><expr><name pos:line="964" pos:column="16">CommandShortcut</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="964" pos:column="33">&amp;</type:modifier></type> <name pos:line="964" pos:column="35">mainshortcuts</name> <init pos:line="964" pos:column="49">= <expr><call><name><name pos:line="964" pos:column="51">pNppParam</name><op:operator pos:line="964" pos:column="60">-&gt;</op:operator><name pos:line="964" pos:column="62">getUserShortcuts</name></name><argument_list pos:line="964" pos:column="78">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name pos:line="965" pos:column="9">vector</name><argument_list pos:line="965" pos:column="15">&lt;<argument><expr><name pos:line="965" pos:column="16">ScintillaKeyMap</name></expr></argument>&gt;</argument_list></name> <type:modifier pos:line="965" pos:column="33">&amp;</type:modifier></type> <name pos:line="965" pos:column="35">scinshortcuts</name> <init pos:line="965" pos:column="49">= <expr><call><name><name pos:line="965" pos:column="51">pNppParam</name><op:operator pos:line="965" pos:column="60">-&gt;</op:operator><name pos:line="965" pos:column="62">getScintillaKeyList</name></name><argument_list pos:line="965" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="966" pos:column="9">int</name></type> <name pos:line="966" pos:column="13">mainSize</name> <init pos:line="966" pos:column="22">= <expr><op:operator pos:line="966" pos:column="24">(</op:operator><name pos:line="966" pos:column="25">int</name><op:operator pos:line="966" pos:column="28">)</op:operator><call><name><name pos:line="966" pos:column="29">mainshortcuts</name><op:operator pos:line="966" pos:column="42">.</op:operator><name pos:line="966" pos:column="43">size</name></name><argument_list pos:line="966" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="967" pos:column="9">int</name></type> <name pos:line="967" pos:column="13">scinSize</name> <init pos:line="967" pos:column="22">= <expr><op:operator pos:line="967" pos:column="24">(</op:operator><name pos:line="967" pos:column="25">int</name><op:operator pos:line="967" pos:column="28">)</op:operator><call><name><name pos:line="967" pos:column="29">scinshortcuts</name><op:operator pos:line="967" pos:column="42">.</op:operator><name pos:line="967" pos:column="43">size</name></name><argument_list pos:line="967" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="969" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="969" pos:column="20">*</type:modifier></type><name pos:line="969" pos:column="21">shortcuts</name> <init pos:line="969" pos:column="31">= <expr><call><name><name pos:line="969" pos:column="33">_nativeLangA</name><op:operator pos:line="969" pos:column="45">-&gt;</op:operator><name pos:line="969" pos:column="47">FirstChild</name></name><argument_list pos:line="969" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="969" pos:column="58">"Shortcuts"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="970" pos:column="9">if <condition pos:line="970" pos:column="12">(<expr><op:operator pos:line="970" pos:column="13">!</op:operator><name pos:line="970" pos:column="14">shortcuts</name></expr>)</condition><then pos:line="970" pos:column="24"> <return pos:line="970" pos:column="25">return;</return></then></if>

	<expr_stmt><expr><name pos:line="972" pos:column="9">shortcuts</name> <op:operator pos:line="972" pos:column="19">=</op:operator> <call><name><name pos:line="972" pos:column="21">shortcuts</name><op:operator pos:line="972" pos:column="30">-&gt;</op:operator><name pos:line="972" pos:column="32">FirstChild</name></name><argument_list pos:line="972" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="972" pos:column="43">"Main"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="973" pos:column="9">if <condition pos:line="973" pos:column="12">(<expr><op:operator pos:line="973" pos:column="13">!</op:operator><name pos:line="973" pos:column="14">shortcuts</name></expr>)</condition><then pos:line="973" pos:column="24"> <return pos:line="973" pos:column="25">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="975" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="975" pos:column="20">*</type:modifier></type><name pos:line="975" pos:column="21">entriesRoot</name> <init pos:line="975" pos:column="33">= <expr><call><name><name pos:line="975" pos:column="35">shortcuts</name><op:operator pos:line="975" pos:column="44">-&gt;</op:operator><name pos:line="975" pos:column="46">FirstChild</name></name><argument_list pos:line="975" pos:column="56">(<argument><expr><lit:literal type="string" pos:line="975" pos:column="57">"Entries"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="976" pos:column="9">if <condition pos:line="976" pos:column="12">(<expr><op:operator pos:line="976" pos:column="13">!</op:operator><name pos:line="976" pos:column="14">entriesRoot</name></expr>)</condition><then pos:line="976" pos:column="26"> <return pos:line="976" pos:column="27">return;</return></then></if>

	<for pos:line="978" pos:column="9">for (<init><decl><type><name pos:line="978" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="978" pos:column="25">*</type:modifier></type><name pos:line="978" pos:column="26">childNode</name> <init pos:line="978" pos:column="36">= <expr><call><name><name pos:line="978" pos:column="38">entriesRoot</name><op:operator pos:line="978" pos:column="49">-&gt;</op:operator><name pos:line="978" pos:column="51">FirstChildElement</name></name><argument_list pos:line="978" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="978" pos:column="69">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="979" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="980" pos:column="17">childNode</name> <op:operator pos:line="980" pos:column="27">=</op:operator> <call><name><name pos:line="980" pos:column="29">childNode</name><op:operator pos:line="980" pos:column="38">-&gt;</op:operator><name pos:line="980" pos:column="40">NextSibling</name></name><argument_list pos:line="980" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="980" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="981" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="982" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="982" pos:column="31">*</type:modifier></type><name pos:line="982" pos:column="32">element</name> <init pos:line="982" pos:column="40">= <expr><call><name><name pos:line="982" pos:column="42">childNode</name><op:operator pos:line="982" pos:column="51">-&gt;</op:operator><name pos:line="982" pos:column="53">ToElement</name></name><argument_list pos:line="982" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="983" pos:column="17">int</name></type> <name pos:line="983" pos:column="21">index</name></decl><op:operator pos:line="983" pos:column="26">,</op:operator> <decl><type ref="prev"/><name pos:line="983" pos:column="28">id</name></decl>;</decl_stmt>
		<if pos:line="984" pos:column="17">if <condition pos:line="984" pos:column="20">(<expr><call><name><name pos:line="984" pos:column="21">element</name><op:operator pos:line="984" pos:column="28">-&gt;</op:operator><name pos:line="984" pos:column="30">Attribute</name></name><argument_list pos:line="984" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="984" pos:column="40">"index"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="984" pos:column="49">&amp;</op:operator><name pos:line="984" pos:column="50">index</name></expr></argument>)</argument_list></call> <op:operator pos:line="984" pos:column="57">&amp;&amp;</op:operator> <call><name><name pos:line="984" pos:column="60">element</name><op:operator pos:line="984" pos:column="67">-&gt;</op:operator><name pos:line="984" pos:column="69">Attribute</name></name><argument_list pos:line="984" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="984" pos:column="79">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="984" pos:column="85">&amp;</op:operator><name pos:line="984" pos:column="86">id</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="984" pos:column="90">
		<block pos:line="985" pos:column="17">{
			<if pos:line="986" pos:column="25">if <condition pos:line="986" pos:column="28">(<expr><name pos:line="986" pos:column="29">index</name> <op:operator pos:line="986" pos:column="35">&gt;</op:operator> <op:operator pos:line="986" pos:column="37">-</op:operator><lit:literal type="number" pos:line="986" pos:column="38">1</lit:literal> <op:operator pos:line="986" pos:column="40">&amp;&amp;</op:operator> <name pos:line="986" pos:column="43">index</name> <op:operator pos:line="986" pos:column="49">&lt;</op:operator> <name pos:line="986" pos:column="51">mainSize</name></expr>)</condition><then pos:line="986" pos:column="60"> <block pos:line="986" pos:column="61">{ <comment type="line" pos:line="986" pos:column="63">//valid index only</comment>
				<decl_stmt><decl><type><specifier pos:line="987" pos:column="33">const</specifier> <name pos:line="987" pos:column="39">char</name> <type:modifier pos:line="987" pos:column="44">*</type:modifier></type><name pos:line="987" pos:column="45">name</name> <init pos:line="987" pos:column="50">= <expr><call><name><name pos:line="987" pos:column="52">element</name><op:operator pos:line="987" pos:column="59">-&gt;</op:operator><name pos:line="987" pos:column="61">Attribute</name></name><argument_list pos:line="987" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="987" pos:column="71">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="988" pos:column="33">CommandShortcut</name> <type:modifier pos:line="988" pos:column="49">&amp;</type:modifier></type> <name pos:line="988" pos:column="51">csc</name> <init pos:line="988" pos:column="55">= <expr><name><name pos:line="988" pos:column="57">mainshortcuts</name><index pos:line="988" pos:column="70">[<expr><name pos:line="988" pos:column="71">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
				<if pos:line="989" pos:column="33">if <condition pos:line="989" pos:column="36">(<expr><call><name><name pos:line="989" pos:column="37">csc</name><op:operator pos:line="989" pos:column="40">.</op:operator><name pos:line="989" pos:column="41">getID</name></name><argument_list pos:line="989" pos:column="46">()</argument_list></call> <op:operator pos:line="989" pos:column="49">==</op:operator> <op:operator pos:line="989" pos:column="52">(</op:operator><name pos:line="989" pos:column="53">unsigned</name> <name pos:line="989" pos:column="62">long</name><op:operator pos:line="989" pos:column="66">)</op:operator><name pos:line="989" pos:column="67">id</name></expr>)</condition><then pos:line="989" pos:column="70"> 
				<block pos:line="990" pos:column="33">{
<cpp:ifdef pos:line="991" pos:column="1">#<cpp:directive pos:line="991" pos:column="2">ifdef</cpp:directive> <name pos:line="991" pos:column="8">UNICODE</name></cpp:ifdef>
					<decl_stmt><decl><type><name pos:line="992" pos:column="41">WcharMbcsConvertor</name> <type:modifier pos:line="992" pos:column="60">*</type:modifier></type><name pos:line="992" pos:column="61">wmc</name> <init pos:line="992" pos:column="65">= <expr><call><name><name pos:line="992" pos:column="67">WcharMbcsConvertor</name><op:operator pos:line="992" pos:column="85">::</op:operator><name pos:line="992" pos:column="87">getInstance</name></name><argument_list pos:line="992" pos:column="98">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><specifier pos:line="993" pos:column="41">const</specifier> <name pos:line="993" pos:column="47">wchar_t</name> <type:modifier pos:line="993" pos:column="55">*</type:modifier></type> <name pos:line="993" pos:column="57">nameW</name> <init pos:line="993" pos:column="63">= <expr><call><name><name pos:line="993" pos:column="65">wmc</name><op:operator pos:line="993" pos:column="68">-&gt;</op:operator><name pos:line="993" pos:column="70">char2wchar</name></name><argument_list pos:line="993" pos:column="80">(<argument><expr><name pos:line="993" pos:column="81">name</name></expr></argument>, <argument><expr><name pos:line="993" pos:column="87">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="994" pos:column="41">csc</name><op:operator pos:line="994" pos:column="44">.</op:operator><name pos:line="994" pos:column="45">setName</name></name><argument_list pos:line="994" pos:column="52">(<argument><expr><name pos:line="994" pos:column="53">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="995" pos:column="1">#<cpp:directive pos:line="995" pos:column="2">else</cpp:directive></cpp:else>
					<expr_stmt><expr><call><name><name pos:line="996" pos:column="41">csc</name><op:operator pos:line="996" pos:column="44">.</op:operator><name pos:line="996" pos:column="45">setName</name></name><argument_list pos:line="996" pos:column="52">(<argument><expr><name pos:line="996" pos:column="53">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="997" pos:column="1">#<cpp:directive pos:line="997" pos:column="2">endif</cpp:directive></cpp:endif>
				}</block></then></if>
			}</block></then></if>
		}</block></then></if>
	}</block></for>

	<comment type="line" pos:line="1003" pos:column="9">//Scintilla</comment>
	<expr_stmt><expr><name pos:line="1004" pos:column="9">shortcuts</name> <op:operator pos:line="1004" pos:column="19">=</op:operator> <call><name><name pos:line="1004" pos:column="21">_nativeLangA</name><op:operator pos:line="1004" pos:column="33">-&gt;</op:operator><name pos:line="1004" pos:column="35">FirstChild</name></name><argument_list pos:line="1004" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="1004" pos:column="46">"Shortcuts"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1005" pos:column="9">if <condition pos:line="1005" pos:column="12">(<expr><op:operator pos:line="1005" pos:column="13">!</op:operator><name pos:line="1005" pos:column="14">shortcuts</name></expr>)</condition><then pos:line="1005" pos:column="24"> <return pos:line="1005" pos:column="25">return;</return></then></if>

	<expr_stmt><expr><name pos:line="1007" pos:column="9">shortcuts</name> <op:operator pos:line="1007" pos:column="19">=</op:operator> <call><name><name pos:line="1007" pos:column="21">shortcuts</name><op:operator pos:line="1007" pos:column="30">-&gt;</op:operator><name pos:line="1007" pos:column="32">FirstChild</name></name><argument_list pos:line="1007" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="1007" pos:column="43">"Scintilla"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1008" pos:column="9">if <condition pos:line="1008" pos:column="12">(<expr><op:operator pos:line="1008" pos:column="13">!</op:operator><name pos:line="1008" pos:column="14">shortcuts</name></expr>)</condition><then pos:line="1008" pos:column="24"> <return pos:line="1008" pos:column="25">return;</return></then></if>

	<expr_stmt><expr><name pos:line="1010" pos:column="9">entriesRoot</name> <op:operator pos:line="1010" pos:column="21">=</op:operator> <call><name><name pos:line="1010" pos:column="23">shortcuts</name><op:operator pos:line="1010" pos:column="32">-&gt;</op:operator><name pos:line="1010" pos:column="34">FirstChild</name></name><argument_list pos:line="1010" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="1010" pos:column="45">"Entries"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1011" pos:column="9">if <condition pos:line="1011" pos:column="12">(<expr><op:operator pos:line="1011" pos:column="13">!</op:operator><name pos:line="1011" pos:column="14">entriesRoot</name></expr>)</condition><then pos:line="1011" pos:column="26"> <return pos:line="1011" pos:column="27">return;</return></then></if>

	<for pos:line="1013" pos:column="9">for (<init><decl><type><name pos:line="1013" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="1013" pos:column="25">*</type:modifier></type><name pos:line="1013" pos:column="26">childNode</name> <init pos:line="1013" pos:column="36">= <expr><call><name><name pos:line="1013" pos:column="38">entriesRoot</name><op:operator pos:line="1013" pos:column="49">-&gt;</op:operator><name pos:line="1013" pos:column="51">FirstChildElement</name></name><argument_list pos:line="1013" pos:column="68">(<argument><expr><lit:literal type="string" pos:line="1013" pos:column="69">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1014" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1015" pos:column="17">childNode</name> <op:operator pos:line="1015" pos:column="27">=</op:operator> <call><name><name pos:line="1015" pos:column="29">childNode</name><op:operator pos:line="1015" pos:column="38">-&gt;</op:operator><name pos:line="1015" pos:column="40">NextSibling</name></name><argument_list pos:line="1015" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1015" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1016" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1017" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="1017" pos:column="31">*</type:modifier></type><name pos:line="1017" pos:column="32">element</name> <init pos:line="1017" pos:column="40">= <expr><call><name><name pos:line="1017" pos:column="42">childNode</name><op:operator pos:line="1017" pos:column="51">-&gt;</op:operator><name pos:line="1017" pos:column="53">ToElement</name></name><argument_list pos:line="1017" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1018" pos:column="17">int</name></type> <name pos:line="1018" pos:column="21">index</name></decl>;</decl_stmt>
		<if pos:line="1019" pos:column="17">if <condition pos:line="1019" pos:column="20">(<expr><call><name><name pos:line="1019" pos:column="21">element</name><op:operator pos:line="1019" pos:column="28">-&gt;</op:operator><name pos:line="1019" pos:column="30">Attribute</name></name><argument_list pos:line="1019" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1019" pos:column="40">"index"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1019" pos:column="49">&amp;</op:operator><name pos:line="1019" pos:column="50">index</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1019" pos:column="57">
		<block pos:line="1020" pos:column="17">{
			<if pos:line="1021" pos:column="25">if <condition pos:line="1021" pos:column="28">(<expr><name pos:line="1021" pos:column="29">index</name> <op:operator pos:line="1021" pos:column="35">&gt;</op:operator> <op:operator pos:line="1021" pos:column="37">-</op:operator><lit:literal type="number" pos:line="1021" pos:column="38">1</lit:literal> <op:operator pos:line="1021" pos:column="40">&amp;&amp;</op:operator> <name pos:line="1021" pos:column="43">index</name> <op:operator pos:line="1021" pos:column="49">&lt;</op:operator> <name pos:line="1021" pos:column="51">scinSize</name></expr>)</condition><then pos:line="1021" pos:column="60"> <block pos:line="1021" pos:column="61">{ <comment type="line" pos:line="1021" pos:column="63">//valid index only</comment>
				<decl_stmt><decl><type><specifier pos:line="1022" pos:column="33">const</specifier> <name pos:line="1022" pos:column="39">char</name> <type:modifier pos:line="1022" pos:column="44">*</type:modifier></type><name pos:line="1022" pos:column="45">name</name> <init pos:line="1022" pos:column="50">= <expr><call><name><name pos:line="1022" pos:column="52">element</name><op:operator pos:line="1022" pos:column="59">-&gt;</op:operator><name pos:line="1022" pos:column="61">Attribute</name></name><argument_list pos:line="1022" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="1022" pos:column="71">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="1023" pos:column="33">ScintillaKeyMap</name> <type:modifier pos:line="1023" pos:column="49">&amp;</type:modifier></type> <name pos:line="1023" pos:column="51">skm</name> <init pos:line="1023" pos:column="55">= <expr><name><name pos:line="1023" pos:column="57">scinshortcuts</name><index pos:line="1023" pos:column="70">[<expr><name pos:line="1023" pos:column="71">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
<cpp:ifdef pos:line="1024" pos:column="1">#<cpp:directive pos:line="1024" pos:column="2">ifdef</cpp:directive> <name pos:line="1024" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><name pos:line="1025" pos:column="33">WcharMbcsConvertor</name> <type:modifier pos:line="1025" pos:column="52">*</type:modifier></type><name pos:line="1025" pos:column="53">wmc</name> <init pos:line="1025" pos:column="57">= <expr><call><name><name pos:line="1025" pos:column="59">WcharMbcsConvertor</name><op:operator pos:line="1025" pos:column="77">::</op:operator><name pos:line="1025" pos:column="79">getInstance</name></name><argument_list pos:line="1025" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="1026" pos:column="33">const</specifier> <name pos:line="1026" pos:column="39">wchar_t</name> <type:modifier pos:line="1026" pos:column="47">*</type:modifier></type> <name pos:line="1026" pos:column="49">nameW</name> <init pos:line="1026" pos:column="55">= <expr><call><name><name pos:line="1026" pos:column="57">wmc</name><op:operator pos:line="1026" pos:column="60">-&gt;</op:operator><name pos:line="1026" pos:column="62">char2wchar</name></name><argument_list pos:line="1026" pos:column="72">(<argument><expr><name pos:line="1026" pos:column="73">name</name></expr></argument>, <argument><expr><name pos:line="1026" pos:column="79">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="1027" pos:column="33">skm</name><op:operator pos:line="1027" pos:column="36">.</op:operator><name pos:line="1027" pos:column="37">setName</name></name><argument_list pos:line="1027" pos:column="44">(<argument><expr><name pos:line="1027" pos:column="45">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1028" pos:column="1">#<cpp:directive pos:line="1028" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><call><name><name pos:line="1029" pos:column="33">skm</name><op:operator pos:line="1029" pos:column="36">.</op:operator><name pos:line="1029" pos:column="37">setName</name></name><argument_list pos:line="1029" pos:column="44">(<argument><expr><name pos:line="1029" pos:column="45">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1030" pos:column="1">#<cpp:directive pos:line="1030" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then></if>
	}</block></for>

}</block></function>

<function><type><name pos:line="1037" pos:column="1">void</name></type> <name><name pos:line="1037" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="1037" pos:column="23">::</op:operator><name pos:line="1037" pos:column="25">changeShortcutmapperLang</name></name><parameter_list pos:line="1037" pos:column="49">(<param><decl><type><name pos:line="1037" pos:column="50">ShortcutMapper</name> <type:modifier pos:line="1037" pos:column="65">*</type:modifier></type> <name pos:line="1037" pos:column="67">sm</name></decl></param>)</parameter_list>
<block pos:line="1038" pos:column="1">{
	<if pos:line="1039" pos:column="9">if <condition pos:line="1039" pos:column="12">(<expr><op:operator pos:line="1039" pos:column="13">!</op:operator><name pos:line="1039" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="1039" pos:column="27"> <return pos:line="1039" pos:column="28">return;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1041" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="1041" pos:column="20">*</type:modifier></type><name pos:line="1041" pos:column="21">shortcuts</name> <init pos:line="1041" pos:column="31">= <expr><call><name><name pos:line="1041" pos:column="33">_nativeLangA</name><op:operator pos:line="1041" pos:column="45">-&gt;</op:operator><name pos:line="1041" pos:column="47">FirstChild</name></name><argument_list pos:line="1041" pos:column="57">(<argument><expr><lit:literal type="string" pos:line="1041" pos:column="58">"Dialog"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1042" pos:column="9">if <condition pos:line="1042" pos:column="12">(<expr><op:operator pos:line="1042" pos:column="13">!</op:operator><name pos:line="1042" pos:column="14">shortcuts</name></expr>)</condition><then pos:line="1042" pos:column="24"> <return pos:line="1042" pos:column="25">return;</return></then></if>

	<expr_stmt><expr><name pos:line="1044" pos:column="9">shortcuts</name> <op:operator pos:line="1044" pos:column="19">=</op:operator> <call><name><name pos:line="1044" pos:column="21">shortcuts</name><op:operator pos:line="1044" pos:column="30">-&gt;</op:operator><name pos:line="1044" pos:column="32">FirstChild</name></name><argument_list pos:line="1044" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="1044" pos:column="43">"ShortcutMapper"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1045" pos:column="9">if <condition pos:line="1045" pos:column="12">(<expr><op:operator pos:line="1045" pos:column="13">!</op:operator><name pos:line="1045" pos:column="14">shortcuts</name></expr>)</condition><then pos:line="1045" pos:column="24"> <return pos:line="1045" pos:column="25">return;</return></then></if>

	<for pos:line="1047" pos:column="9">for (<init><decl><type><name pos:line="1047" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="1047" pos:column="25">*</type:modifier></type><name pos:line="1047" pos:column="26">childNode</name> <init pos:line="1047" pos:column="36">= <expr><call><name><name pos:line="1047" pos:column="38">shortcuts</name><op:operator pos:line="1047" pos:column="47">-&gt;</op:operator><name pos:line="1047" pos:column="49">FirstChildElement</name></name><argument_list pos:line="1047" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="1047" pos:column="67">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1048" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1049" pos:column="17">childNode</name> <op:operator pos:line="1049" pos:column="27">=</op:operator> <call><name><name pos:line="1049" pos:column="29">childNode</name><op:operator pos:line="1049" pos:column="38">-&gt;</op:operator><name pos:line="1049" pos:column="40">NextSibling</name></name><argument_list pos:line="1049" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1049" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1050" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1051" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="1051" pos:column="31">*</type:modifier></type><name pos:line="1051" pos:column="32">element</name> <init pos:line="1051" pos:column="40">= <expr><call><name><name pos:line="1051" pos:column="42">childNode</name><op:operator pos:line="1051" pos:column="51">-&gt;</op:operator><name pos:line="1051" pos:column="53">ToElement</name></name><argument_list pos:line="1051" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1052" pos:column="17">int</name></type> <name pos:line="1052" pos:column="21">index</name></decl>;</decl_stmt>
		<if pos:line="1053" pos:column="17">if <condition pos:line="1053" pos:column="20">(<expr><call><name><name pos:line="1053" pos:column="21">element</name><op:operator pos:line="1053" pos:column="28">-&gt;</op:operator><name pos:line="1053" pos:column="30">Attribute</name></name><argument_list pos:line="1053" pos:column="39">(<argument><expr><lit:literal type="string" pos:line="1053" pos:column="40">"index"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1053" pos:column="49">&amp;</op:operator><name pos:line="1053" pos:column="50">index</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1053" pos:column="57">
		<block pos:line="1054" pos:column="17">{
			<if pos:line="1055" pos:column="25">if <condition pos:line="1055" pos:column="28">(<expr><name pos:line="1055" pos:column="29">index</name> <op:operator pos:line="1055" pos:column="35">&gt;</op:operator> <op:operator pos:line="1055" pos:column="37">-</op:operator><lit:literal type="number" pos:line="1055" pos:column="38">1</lit:literal> <op:operator pos:line="1055" pos:column="40">&amp;&amp;</op:operator> <name pos:line="1055" pos:column="43">index</name> <op:operator pos:line="1055" pos:column="49">&lt;</op:operator> <lit:literal type="number" pos:line="1055" pos:column="51">5</lit:literal></expr>)</condition><then pos:line="1055" pos:column="53">  <comment type="line" pos:line="1055" pos:column="55">//valid index only</comment>
			<block pos:line="1056" pos:column="25">{
				<decl_stmt><decl><type><specifier pos:line="1057" pos:column="33">const</specifier> <name pos:line="1057" pos:column="39">char</name> <type:modifier pos:line="1057" pos:column="44">*</type:modifier></type><name pos:line="1057" pos:column="45">name</name> <init pos:line="1057" pos:column="50">= <expr><call><name><name pos:line="1057" pos:column="52">element</name><op:operator pos:line="1057" pos:column="59">-&gt;</op:operator><name pos:line="1057" pos:column="61">Attribute</name></name><argument_list pos:line="1057" pos:column="70">(<argument><expr><lit:literal type="string" pos:line="1057" pos:column="71">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

<cpp:ifdef pos:line="1059" pos:column="1">#<cpp:directive pos:line="1059" pos:column="2">ifdef</cpp:directive> <name pos:line="1059" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><name pos:line="1060" pos:column="33">WcharMbcsConvertor</name> <type:modifier pos:line="1060" pos:column="52">*</type:modifier></type><name pos:line="1060" pos:column="53">wmc</name> <init pos:line="1060" pos:column="57">= <expr><call><name><name pos:line="1060" pos:column="59">WcharMbcsConvertor</name><op:operator pos:line="1060" pos:column="77">::</op:operator><name pos:line="1060" pos:column="79">getInstance</name></name><argument_list pos:line="1060" pos:column="90">()</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><specifier pos:line="1061" pos:column="33">const</specifier> <name pos:line="1061" pos:column="39">wchar_t</name> <type:modifier pos:line="1061" pos:column="47">*</type:modifier></type> <name pos:line="1061" pos:column="49">nameW</name> <init pos:line="1061" pos:column="55">= <expr><call><name><name pos:line="1061" pos:column="57">wmc</name><op:operator pos:line="1061" pos:column="60">-&gt;</op:operator><name pos:line="1061" pos:column="62">char2wchar</name></name><argument_list pos:line="1061" pos:column="72">(<argument><expr><name pos:line="1061" pos:column="73">name</name></expr></argument>, <argument><expr><name pos:line="1061" pos:column="79">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="1062" pos:column="33">sm</name><op:operator pos:line="1062" pos:column="35">-&gt;</op:operator><name pos:line="1062" pos:column="37">translateTab</name></name><argument_list pos:line="1062" pos:column="49">(<argument><expr><name pos:line="1062" pos:column="50">index</name></expr></argument>, <argument><expr><name pos:line="1062" pos:column="57">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1063" pos:column="1">#<cpp:directive pos:line="1063" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><call><name><name pos:line="1064" pos:column="33">sm</name><op:operator pos:line="1064" pos:column="35">-&gt;</op:operator><name pos:line="1064" pos:column="37">translateTab</name></name><argument_list pos:line="1064" pos:column="49">(<argument><expr><name pos:line="1064" pos:column="50">index</name></expr></argument>, <argument><expr><name pos:line="1064" pos:column="57">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1065" pos:column="1">#<cpp:directive pos:line="1065" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
}</block></function>


<function><type><name pos:line="1072" pos:column="1">TiXmlNodeA</name> <type:modifier pos:line="1072" pos:column="12">*</type:modifier></type> <name><name pos:line="1072" pos:column="14">NativeLangSpeaker</name><op:operator pos:line="1072" pos:column="31">::</op:operator><name pos:line="1072" pos:column="33">searchDlgNode</name></name><parameter_list pos:line="1072" pos:column="46">(<param><decl><type><name pos:line="1072" pos:column="47">TiXmlNodeA</name> <type:modifier pos:line="1072" pos:column="58">*</type:modifier></type><name pos:line="1072" pos:column="59">node</name></decl></param>, <param><decl><type><specifier pos:line="1072" pos:column="65">const</specifier> <name pos:line="1072" pos:column="71">char</name> <type:modifier pos:line="1072" pos:column="76">*</type:modifier></type><name pos:line="1072" pos:column="77">dlgTagName</name></decl></param>)</parameter_list>
<block pos:line="1073" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1074" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="1074" pos:column="20">*</type:modifier></type><name pos:line="1074" pos:column="21">dlgNode</name> <init pos:line="1074" pos:column="29">= <expr><call><name><name pos:line="1074" pos:column="31">node</name><op:operator pos:line="1074" pos:column="35">-&gt;</op:operator><name pos:line="1074" pos:column="37">FirstChild</name></name><argument_list pos:line="1074" pos:column="47">(<argument><expr><name pos:line="1074" pos:column="48">dlgTagName</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1075" pos:column="9">if <condition pos:line="1075" pos:column="12">(<expr><name pos:line="1075" pos:column="13">dlgNode</name></expr>)</condition><then pos:line="1075" pos:column="21"> <return pos:line="1075" pos:column="22">return <expr><name pos:line="1075" pos:column="29">dlgNode</name></expr>;</return></then></if>
	<for pos:line="1076" pos:column="9">for (<init><decl><type><name pos:line="1076" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="1076" pos:column="25">*</type:modifier></type><name pos:line="1076" pos:column="26">childNode</name> <init pos:line="1076" pos:column="36">= <expr><call><name><name pos:line="1076" pos:column="38">node</name><op:operator pos:line="1076" pos:column="42">-&gt;</op:operator><name pos:line="1076" pos:column="44">FirstChildElement</name></name><argument_list pos:line="1076" pos:column="61">()</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1077" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1078" pos:column="17">childNode</name> <op:operator pos:line="1078" pos:column="27">=</op:operator> <call><name><name pos:line="1078" pos:column="29">childNode</name><op:operator pos:line="1078" pos:column="38">-&gt;</op:operator><name pos:line="1078" pos:column="40">NextSibling</name></name><argument_list pos:line="1078" pos:column="51">()</argument_list></call></expr></incr> )
	<block pos:line="1079" pos:column="9">{
		<expr_stmt><expr><name pos:line="1080" pos:column="17">dlgNode</name> <op:operator pos:line="1080" pos:column="25">=</op:operator> <call><name pos:line="1080" pos:column="27">searchDlgNode</name><argument_list pos:line="1080" pos:column="40">(<argument><expr><name pos:line="1080" pos:column="41">childNode</name></expr></argument>, <argument><expr><name pos:line="1080" pos:column="52">dlgTagName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1081" pos:column="17">if <condition pos:line="1081" pos:column="20">(<expr><name pos:line="1081" pos:column="21">dlgNode</name></expr>)</condition><then pos:line="1081" pos:column="29"> <return pos:line="1081" pos:column="30">return <expr><name pos:line="1081" pos:column="37">dlgNode</name></expr>;</return></then></if>
	}</block></for>
	<return pos:line="1083" pos:column="9">return <expr><name pos:line="1083" pos:column="16">NULL</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1086" pos:column="1">bool</name></type> <name><name pos:line="1086" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="1086" pos:column="23">::</op:operator><name pos:line="1086" pos:column="25">changeDlgLang</name></name><parameter_list pos:line="1086" pos:column="38">(<param><decl><type><name pos:line="1086" pos:column="39">HWND</name></type> <name pos:line="1086" pos:column="44">hDlg</name></decl></param>, <param><decl><type><specifier pos:line="1086" pos:column="50">const</specifier> <name pos:line="1086" pos:column="56">char</name> <type:modifier pos:line="1086" pos:column="61">*</type:modifier></type><name pos:line="1086" pos:column="62">dlgTagName</name></decl></param>, <param><decl><type><name pos:line="1086" pos:column="74">char</name> <type:modifier pos:line="1086" pos:column="79">*</type:modifier></type><name pos:line="1086" pos:column="80">title</name></decl></param>)</parameter_list>
<block pos:line="1087" pos:column="1">{
	<if pos:line="1088" pos:column="9">if <condition pos:line="1088" pos:column="12">(<expr><name pos:line="1088" pos:column="13">title</name></expr>)</condition><then pos:line="1088" pos:column="19">
		<expr_stmt><expr><name><name pos:line="1089" pos:column="17">title</name><index pos:line="1089" pos:column="22">[<expr><lit:literal type="number" pos:line="1089" pos:column="23">0</lit:literal></expr>]</index></name> <op:operator pos:line="1089" pos:column="26">=</op:operator> <lit:literal type="char" pos:line="1089" pos:column="28">'\0'</lit:literal></expr>;</expr_stmt></then></if>

	<if pos:line="1091" pos:column="9">if <condition pos:line="1091" pos:column="12">(<expr><op:operator pos:line="1091" pos:column="13">!</op:operator><name pos:line="1091" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="1091" pos:column="27"> <return pos:line="1091" pos:column="28">return <expr><lit:literal type="boolean" pos:line="1091" pos:column="35">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1093" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="1093" pos:column="20">*</type:modifier></type><name pos:line="1093" pos:column="21">dlgNode</name> <init pos:line="1093" pos:column="29">= <expr><call><name><name pos:line="1093" pos:column="31">_nativeLangA</name><op:operator pos:line="1093" pos:column="43">-&gt;</op:operator><name pos:line="1093" pos:column="45">FirstChild</name></name><argument_list pos:line="1093" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1093" pos:column="56">"Dialog"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1094" pos:column="9">if <condition pos:line="1094" pos:column="12">(<expr><op:operator pos:line="1094" pos:column="13">!</op:operator><name pos:line="1094" pos:column="14">dlgNode</name></expr>)</condition><then pos:line="1094" pos:column="22"> <return pos:line="1094" pos:column="23">return <expr><lit:literal type="boolean" pos:line="1094" pos:column="30">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><name pos:line="1096" pos:column="9">dlgNode</name> <op:operator pos:line="1096" pos:column="17">=</op:operator> <call><name pos:line="1096" pos:column="19">searchDlgNode</name><argument_list pos:line="1096" pos:column="32">(<argument><expr><name pos:line="1096" pos:column="33">dlgNode</name></expr></argument>, <argument><expr><name pos:line="1096" pos:column="42">dlgTagName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1097" pos:column="9">if <condition pos:line="1097" pos:column="12">(<expr><op:operator pos:line="1097" pos:column="13">!</op:operator><name pos:line="1097" pos:column="14">dlgNode</name></expr>)</condition><then pos:line="1097" pos:column="22"> <return pos:line="1097" pos:column="23">return <expr><lit:literal type="boolean" pos:line="1097" pos:column="30">false</lit:literal></expr>;</return></then></if>

<cpp:ifdef pos:line="1099" pos:column="1">#<cpp:directive pos:line="1099" pos:column="2">ifdef</cpp:directive> <name pos:line="1099" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="1100" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="1100" pos:column="28">*</type:modifier></type><name pos:line="1100" pos:column="29">wmc</name> <init pos:line="1100" pos:column="33">= <expr><call><name><name pos:line="1100" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="1100" pos:column="53">::</op:operator><name pos:line="1100" pos:column="55">getInstance</name></name><argument_list pos:line="1100" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="1101" pos:column="1">#<cpp:directive pos:line="1101" pos:column="2">endif</cpp:directive></cpp:endif>

	<comment type="line" pos:line="1103" pos:column="9">// Set Title</comment>
	<decl_stmt><decl><type><specifier pos:line="1104" pos:column="9">const</specifier> <name pos:line="1104" pos:column="15">char</name> <type:modifier pos:line="1104" pos:column="20">*</type:modifier></type><name pos:line="1104" pos:column="21">titre</name> <init pos:line="1104" pos:column="27">= <expr><op:operator pos:line="1104" pos:column="29">(</op:operator><call><name><name pos:line="1104" pos:column="30">dlgNode</name><op:operator pos:line="1104" pos:column="37">-&gt;</op:operator><name pos:line="1104" pos:column="39">ToElement</name></name><argument_list pos:line="1104" pos:column="48">()</argument_list></call><op:operator pos:line="1104" pos:column="50">)</op:operator><op:operator pos:line="1104" pos:column="51">-&gt;</op:operator><call><name pos:line="1104" pos:column="53">Attribute</name><argument_list pos:line="1104" pos:column="62">(<argument><expr><lit:literal type="string" pos:line="1104" pos:column="63">"title"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1105" pos:column="9">if <condition pos:line="1105" pos:column="12">(<expr><op:operator pos:line="1105" pos:column="13">(</op:operator><name pos:line="1105" pos:column="14">titre</name> <op:operator pos:line="1105" pos:column="20">&amp;&amp;</op:operator> <name><name pos:line="1105" pos:column="23">titre</name><index pos:line="1105" pos:column="28">[<expr><lit:literal type="number" pos:line="1105" pos:column="29">0</lit:literal></expr>]</index></name><op:operator pos:line="1105" pos:column="31">)</op:operator> <op:operator pos:line="1105" pos:column="33">&amp;&amp;</op:operator> <name pos:line="1105" pos:column="36">hDlg</name></expr>)</condition><then pos:line="1105" pos:column="41">
	<block pos:line="1106" pos:column="9">{
<cpp:ifdef pos:line="1107" pos:column="1">#<cpp:directive pos:line="1107" pos:column="2">ifdef</cpp:directive> <name pos:line="1107" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><specifier pos:line="1108" pos:column="17">const</specifier> <name pos:line="1108" pos:column="23">wchar_t</name> <type:modifier pos:line="1108" pos:column="31">*</type:modifier></type><name pos:line="1108" pos:column="32">nameW</name> <init pos:line="1108" pos:column="38">= <expr><call><name><name pos:line="1108" pos:column="40">wmc</name><op:operator pos:line="1108" pos:column="43">-&gt;</op:operator><name pos:line="1108" pos:column="45">char2wchar</name></name><argument_list pos:line="1108" pos:column="55">(<argument><expr><name pos:line="1108" pos:column="56">titre</name></expr></argument>, <argument><expr><name pos:line="1108" pos:column="63">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="1109" pos:column="17">::</op:operator><name pos:line="1109" pos:column="19">SetWindowText</name></name><argument_list pos:line="1109" pos:column="32">(<argument><expr><name pos:line="1109" pos:column="33">hDlg</name></expr></argument>, <argument><expr><name pos:line="1109" pos:column="39">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1110" pos:column="1">#<cpp:directive pos:line="1110" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><call><name><op:operator pos:line="1111" pos:column="17">::</op:operator><name pos:line="1111" pos:column="19">SetWindowText</name></name><argument_list pos:line="1111" pos:column="32">(<argument><expr><name pos:line="1111" pos:column="33">hDlg</name></expr></argument>, <argument><expr><name pos:line="1111" pos:column="39">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1112" pos:column="1">#<cpp:directive pos:line="1112" pos:column="2">endif</cpp:directive></cpp:endif>
		<if pos:line="1113" pos:column="17">if <condition pos:line="1113" pos:column="20">(<expr><name pos:line="1113" pos:column="21">title</name></expr>)</condition><then pos:line="1113" pos:column="27">
			<expr_stmt><expr><call><name pos:line="1114" pos:column="25">strcpy</name><argument_list pos:line="1114" pos:column="31">(<argument><expr><name pos:line="1114" pos:column="32">title</name></expr></argument>, <argument><expr><name pos:line="1114" pos:column="39">titre</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>

	<comment type="line" pos:line="1117" pos:column="9">// Set the text of child control</comment>
	<for pos:line="1118" pos:column="9">for (<init><decl><type><name pos:line="1118" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="1118" pos:column="25">*</type:modifier></type><name pos:line="1118" pos:column="26">childNode</name> <init pos:line="1118" pos:column="36">= <expr><call><name><name pos:line="1118" pos:column="38">dlgNode</name><op:operator pos:line="1118" pos:column="45">-&gt;</op:operator><name pos:line="1118" pos:column="47">FirstChildElement</name></name><argument_list pos:line="1118" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1118" pos:column="65">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1119" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1120" pos:column="17">childNode</name> <op:operator pos:line="1120" pos:column="27">=</op:operator> <call><name><name pos:line="1120" pos:column="29">childNode</name><op:operator pos:line="1120" pos:column="38">-&gt;</op:operator><name pos:line="1120" pos:column="40">NextSibling</name></name><argument_list pos:line="1120" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1120" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1121" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1122" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="1122" pos:column="31">*</type:modifier></type><name pos:line="1122" pos:column="32">element</name> <init pos:line="1122" pos:column="40">= <expr><call><name><name pos:line="1122" pos:column="42">childNode</name><op:operator pos:line="1122" pos:column="51">-&gt;</op:operator><name pos:line="1122" pos:column="53">ToElement</name></name><argument_list pos:line="1122" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1123" pos:column="17">int</name></type> <name pos:line="1123" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1124" pos:column="17">const</specifier> <name pos:line="1124" pos:column="23">char</name> <type:modifier pos:line="1124" pos:column="28">*</type:modifier></type><name pos:line="1124" pos:column="29">sentinel</name> <init pos:line="1124" pos:column="38">= <expr><call><name><name pos:line="1124" pos:column="40">element</name><op:operator pos:line="1124" pos:column="47">-&gt;</op:operator><name pos:line="1124" pos:column="49">Attribute</name></name><argument_list pos:line="1124" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1124" pos:column="59">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1124" pos:column="65">&amp;</op:operator><name pos:line="1124" pos:column="66">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1125" pos:column="17">const</specifier> <name pos:line="1125" pos:column="23">char</name> <type:modifier pos:line="1125" pos:column="28">*</type:modifier></type><name pos:line="1125" pos:column="29">name</name> <init pos:line="1125" pos:column="34">= <expr><call><name><name pos:line="1125" pos:column="36">element</name><op:operator pos:line="1125" pos:column="43">-&gt;</op:operator><name pos:line="1125" pos:column="45">Attribute</name></name><argument_list pos:line="1125" pos:column="54">(<argument><expr><lit:literal type="string" pos:line="1125" pos:column="55">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="1126" pos:column="17">if <condition pos:line="1126" pos:column="20">(<expr><name pos:line="1126" pos:column="21">sentinel</name> <op:operator pos:line="1126" pos:column="30">&amp;&amp;</op:operator> <op:operator pos:line="1126" pos:column="33">(</op:operator><name pos:line="1126" pos:column="34">name</name> <op:operator pos:line="1126" pos:column="39">&amp;&amp;</op:operator> <name><name pos:line="1126" pos:column="42">name</name><index pos:line="1126" pos:column="46">[<expr><lit:literal type="number" pos:line="1126" pos:column="47">0</lit:literal></expr>]</index></name><op:operator pos:line="1126" pos:column="49">)</op:operator></expr>)</condition><then pos:line="1126" pos:column="51">
		<block pos:line="1127" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="1128" pos:column="25">HWND</name></type> <name pos:line="1128" pos:column="30">hItem</name> <init pos:line="1128" pos:column="36">= <expr><call><name><op:operator pos:line="1128" pos:column="38">::</op:operator><name pos:line="1128" pos:column="40">GetDlgItem</name></name><argument_list pos:line="1128" pos:column="50">(<argument><expr><name pos:line="1128" pos:column="51">hDlg</name></expr></argument>, <argument><expr><name pos:line="1128" pos:column="57">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="1129" pos:column="25">if <condition pos:line="1129" pos:column="28">(<expr><name pos:line="1129" pos:column="29">hItem</name></expr>)</condition><then pos:line="1129" pos:column="35">
			<block pos:line="1130" pos:column="25">{
<cpp:ifdef pos:line="1131" pos:column="1">#<cpp:directive pos:line="1131" pos:column="2">ifdef</cpp:directive> <name pos:line="1131" pos:column="8">UNICODE</name></cpp:ifdef>
				<decl_stmt><decl><type><specifier pos:line="1132" pos:column="33">const</specifier> <name pos:line="1132" pos:column="39">wchar_t</name> <type:modifier pos:line="1132" pos:column="47">*</type:modifier></type><name pos:line="1132" pos:column="48">nameW</name> <init pos:line="1132" pos:column="54">= <expr><call><name><name pos:line="1132" pos:column="56">wmc</name><op:operator pos:line="1132" pos:column="59">-&gt;</op:operator><name pos:line="1132" pos:column="61">char2wchar</name></name><argument_list pos:line="1132" pos:column="71">(<argument><expr><name pos:line="1132" pos:column="72">name</name></expr></argument>, <argument><expr><name pos:line="1132" pos:column="78">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="1133" pos:column="33">::</op:operator><name pos:line="1133" pos:column="35">SetWindowText</name></name><argument_list pos:line="1133" pos:column="48">(<argument><expr><name pos:line="1133" pos:column="49">hItem</name></expr></argument>, <argument><expr><name pos:line="1133" pos:column="56">nameW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1134" pos:column="1">#<cpp:directive pos:line="1134" pos:column="2">else</cpp:directive></cpp:else>
				<expr_stmt><expr><call><name><op:operator pos:line="1135" pos:column="33">::</op:operator><name pos:line="1135" pos:column="35">SetWindowText</name></name><argument_list pos:line="1135" pos:column="48">(<argument><expr><name pos:line="1135" pos:column="49">hItem</name></expr></argument>, <argument><expr><name pos:line="1135" pos:column="56">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:line="1136" pos:column="1">#<cpp:directive pos:line="1136" pos:column="2">endif</cpp:directive></cpp:endif>
			}</block></then></if>
		}</block></then></if>
	}</block></for>
	<return pos:line="1140" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1140" pos:column="16">true</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1143" pos:column="1">bool</name></type> <name><name pos:line="1143" pos:column="6">NativeLangSpeaker</name><op:operator pos:line="1143" pos:column="23">::</op:operator><name pos:line="1143" pos:column="25">getMsgBoxLang</name></name><parameter_list pos:line="1143" pos:column="38">(<param><decl><type><specifier pos:line="1143" pos:column="39">const</specifier> <name pos:line="1143" pos:column="45">char</name> <type:modifier pos:line="1143" pos:column="50">*</type:modifier></type><name pos:line="1143" pos:column="51">msgBoxTagName</name></decl></param>, <param><decl><type><name pos:line="1143" pos:column="66">generic_string</name> <type:modifier pos:line="1143" pos:column="81">&amp;</type:modifier></type> <name pos:line="1143" pos:column="83">title</name></decl></param>, <param><decl><type><name pos:line="1143" pos:column="90">generic_string</name> <type:modifier pos:line="1143" pos:column="105">&amp;</type:modifier></type> <name pos:line="1143" pos:column="107">message</name></decl></param>)</parameter_list>
<block pos:line="1144" pos:column="1">{
	<expr_stmt><expr><name pos:line="1145" pos:column="9">title</name> <op:operator pos:line="1145" pos:column="15">=</op:operator> <call><name pos:line="1145" pos:column="17">TEXT</name><argument_list pos:line="1145" pos:column="21">(<argument><expr><lit:literal type="string" pos:line="1145" pos:column="22">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="1146" pos:column="9">message</name> <op:operator pos:line="1146" pos:column="17">=</op:operator> <call><name pos:line="1146" pos:column="19">TEXT</name><argument_list pos:line="1146" pos:column="23">(<argument><expr><lit:literal type="string" pos:line="1146" pos:column="24">""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1148" pos:column="9">if <condition pos:line="1148" pos:column="12">(<expr><op:operator pos:line="1148" pos:column="13">!</op:operator><name pos:line="1148" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="1148" pos:column="27"> <return pos:line="1148" pos:column="28">return <expr><lit:literal type="boolean" pos:line="1148" pos:column="35">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1150" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="1150" pos:column="20">*</type:modifier></type><name pos:line="1150" pos:column="21">msgBoxNode</name> <init pos:line="1150" pos:column="32">= <expr><call><name><name pos:line="1150" pos:column="34">_nativeLangA</name><op:operator pos:line="1150" pos:column="46">-&gt;</op:operator><name pos:line="1150" pos:column="48">FirstChild</name></name><argument_list pos:line="1150" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1150" pos:column="59">"MessageBox"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1151" pos:column="9">if <condition pos:line="1151" pos:column="12">(<expr><op:operator pos:line="1151" pos:column="13">!</op:operator><name pos:line="1151" pos:column="14">msgBoxNode</name></expr>)</condition><then pos:line="1151" pos:column="25"> <return pos:line="1151" pos:column="26">return <expr><lit:literal type="boolean" pos:line="1151" pos:column="33">false</lit:literal></expr>;</return></then></if>

	<expr_stmt><expr><name pos:line="1153" pos:column="9">msgBoxNode</name> <op:operator pos:line="1153" pos:column="20">=</op:operator> <call><name pos:line="1153" pos:column="22">searchDlgNode</name><argument_list pos:line="1153" pos:column="35">(<argument><expr><name pos:line="1153" pos:column="36">msgBoxNode</name></expr></argument>, <argument><expr><name pos:line="1153" pos:column="48">msgBoxTagName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1154" pos:column="9">if <condition pos:line="1154" pos:column="12">(<expr><op:operator pos:line="1154" pos:column="13">!</op:operator><name pos:line="1154" pos:column="14">msgBoxNode</name></expr>)</condition><then pos:line="1154" pos:column="25"> <return pos:line="1154" pos:column="26">return <expr><lit:literal type="boolean" pos:line="1154" pos:column="33">false</lit:literal></expr>;</return></then></if>

<cpp:ifdef pos:line="1156" pos:column="1">#<cpp:directive pos:line="1156" pos:column="2">ifdef</cpp:directive> <name pos:line="1156" pos:column="8">UNICODE</name></cpp:ifdef>
	<decl_stmt><decl><type><name pos:line="1157" pos:column="9">WcharMbcsConvertor</name> <type:modifier pos:line="1157" pos:column="28">*</type:modifier></type><name pos:line="1157" pos:column="29">wmc</name> <init pos:line="1157" pos:column="33">= <expr><call><name><name pos:line="1157" pos:column="35">WcharMbcsConvertor</name><op:operator pos:line="1157" pos:column="53">::</op:operator><name pos:line="1157" pos:column="55">getInstance</name></name><argument_list pos:line="1157" pos:column="66">()</argument_list></call></expr></init></decl>;</decl_stmt>
<cpp:endif pos:line="1158" pos:column="1">#<cpp:directive pos:line="1158" pos:column="2">endif</cpp:directive></cpp:endif>

	<comment type="line" pos:line="1160" pos:column="9">// Set Title</comment>
	<decl_stmt><decl><type><specifier pos:line="1161" pos:column="9">const</specifier> <name pos:line="1161" pos:column="15">char</name> <type:modifier pos:line="1161" pos:column="20">*</type:modifier></type><name pos:line="1161" pos:column="21">titre</name> <init pos:line="1161" pos:column="27">= <expr><op:operator pos:line="1161" pos:column="29">(</op:operator><call><name><name pos:line="1161" pos:column="30">msgBoxNode</name><op:operator pos:line="1161" pos:column="40">-&gt;</op:operator><name pos:line="1161" pos:column="42">ToElement</name></name><argument_list pos:line="1161" pos:column="51">()</argument_list></call><op:operator pos:line="1161" pos:column="53">)</op:operator><op:operator pos:line="1161" pos:column="54">-&gt;</op:operator><call><name pos:line="1161" pos:column="56">Attribute</name><argument_list pos:line="1161" pos:column="65">(<argument><expr><lit:literal type="string" pos:line="1161" pos:column="66">"title"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><specifier pos:line="1162" pos:column="9">const</specifier> <name pos:line="1162" pos:column="15">char</name> <type:modifier pos:line="1162" pos:column="20">*</type:modifier></type><name pos:line="1162" pos:column="21">msg</name> <init pos:line="1162" pos:column="25">= <expr><op:operator pos:line="1162" pos:column="27">(</op:operator><call><name><name pos:line="1162" pos:column="28">msgBoxNode</name><op:operator pos:line="1162" pos:column="38">-&gt;</op:operator><name pos:line="1162" pos:column="40">ToElement</name></name><argument_list pos:line="1162" pos:column="49">()</argument_list></call><op:operator pos:line="1162" pos:column="51">)</op:operator><op:operator pos:line="1162" pos:column="52">-&gt;</op:operator><call><name pos:line="1162" pos:column="54">Attribute</name><argument_list pos:line="1162" pos:column="63">(<argument><expr><lit:literal type="string" pos:line="1162" pos:column="64">"message"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1163" pos:column="9">if <condition pos:line="1163" pos:column="12">(<expr><op:operator pos:line="1163" pos:column="13">(</op:operator><name pos:line="1163" pos:column="14">titre</name> <op:operator pos:line="1163" pos:column="20">&amp;&amp;</op:operator> <name><name pos:line="1163" pos:column="23">titre</name><index pos:line="1163" pos:column="28">[<expr><lit:literal type="number" pos:line="1163" pos:column="29">0</lit:literal></expr>]</index></name><op:operator pos:line="1163" pos:column="31">)</op:operator> <op:operator pos:line="1163" pos:column="33">&amp;&amp;</op:operator> <op:operator pos:line="1163" pos:column="36">(</op:operator><name pos:line="1163" pos:column="37">msg</name> <op:operator pos:line="1163" pos:column="41">&amp;&amp;</op:operator> <name><name pos:line="1163" pos:column="44">msg</name><index pos:line="1163" pos:column="47">[<expr><lit:literal type="number" pos:line="1163" pos:column="48">0</lit:literal></expr>]</index></name><op:operator pos:line="1163" pos:column="50">)</op:operator></expr>)</condition><then pos:line="1163" pos:column="52">
	<block pos:line="1164" pos:column="9">{
<cpp:ifdef pos:line="1165" pos:column="1">#<cpp:directive pos:line="1165" pos:column="2">ifdef</cpp:directive> <name pos:line="1165" pos:column="8">UNICODE</name></cpp:ifdef>
		<expr_stmt><expr><name pos:line="1166" pos:column="17">title</name> <op:operator pos:line="1166" pos:column="23">=</op:operator> <call><name><name pos:line="1166" pos:column="25">wmc</name><op:operator pos:line="1166" pos:column="28">-&gt;</op:operator><name pos:line="1166" pos:column="30">char2wchar</name></name><argument_list pos:line="1166" pos:column="40">(<argument><expr><name pos:line="1166" pos:column="41">titre</name></expr></argument>, <argument><expr><name pos:line="1166" pos:column="48">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1167" pos:column="17">message</name> <op:operator pos:line="1167" pos:column="25">=</op:operator> <call><name><name pos:line="1167" pos:column="27">wmc</name><op:operator pos:line="1167" pos:column="30">-&gt;</op:operator><name pos:line="1167" pos:column="32">char2wchar</name></name><argument_list pos:line="1167" pos:column="42">(<argument><expr><name pos:line="1167" pos:column="43">msg</name></expr></argument>, <argument><expr><name pos:line="1167" pos:column="48">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:else pos:line="1168" pos:column="1">#<cpp:directive pos:line="1168" pos:column="2">else</cpp:directive></cpp:else>
		<expr_stmt><expr><name pos:line="1169" pos:column="17">title</name> <op:operator pos:line="1169" pos:column="23">=</op:operator> <name pos:line="1169" pos:column="25">titre</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1170" pos:column="17">message</name> <op:operator pos:line="1170" pos:column="25">=</op:operator> <name pos:line="1170" pos:column="27">msg</name></expr>;</expr_stmt>
<cpp:endif pos:line="1171" pos:column="1">#<cpp:directive pos:line="1171" pos:column="2">endif</cpp:directive></cpp:endif>
		<return pos:line="1172" pos:column="17">return <expr><lit:literal type="boolean" pos:line="1172" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<return pos:line="1174" pos:column="9">return <expr><lit:literal type="boolean" pos:line="1174" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="1177" pos:column="1">generic_string</name></type> <name><name pos:line="1177" pos:column="16">NativeLangSpeaker</name><op:operator pos:line="1177" pos:column="33">::</op:operator><name pos:line="1177" pos:column="35">getProjectPanelLangMenuStr</name></name><parameter_list pos:line="1177" pos:column="61">(<param><decl><type><specifier pos:line="1177" pos:column="62">const</specifier> <name pos:line="1177" pos:column="68">char</name> <type:modifier pos:line="1177" pos:column="73">*</type:modifier></type> <name pos:line="1177" pos:column="75">nodeName</name></decl></param>, <param><decl><type><name pos:line="1177" pos:column="85">int</name></type> <name pos:line="1177" pos:column="89">cmdID</name></decl></param>, <param><decl><type><specifier pos:line="1177" pos:column="96">const</specifier> <name pos:line="1177" pos:column="102">TCHAR</name> <type:modifier pos:line="1177" pos:column="108">*</type:modifier></type><name pos:line="1177" pos:column="109">defaultStr</name></decl></param>)</parameter_list> <specifier pos:line="1177" pos:column="121">const</specifier>
<block pos:line="1178" pos:column="1">{
	<if pos:line="1179" pos:column="9">if <condition pos:line="1179" pos:column="12">(<expr><op:operator pos:line="1179" pos:column="13">!</op:operator><name pos:line="1179" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="1179" pos:column="27"> <return pos:line="1179" pos:column="28">return <expr><name pos:line="1179" pos:column="35">defaultStr</name></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1181" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="1181" pos:column="20">*</type:modifier></type><name pos:line="1181" pos:column="21">targetNode</name> <init pos:line="1181" pos:column="32">= <expr><call><name><name pos:line="1181" pos:column="34">_nativeLangA</name><op:operator pos:line="1181" pos:column="46">-&gt;</op:operator><name pos:line="1181" pos:column="48">FirstChild</name></name><argument_list pos:line="1181" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1181" pos:column="59">"ProjectManager"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1182" pos:column="9">if <condition pos:line="1182" pos:column="12">(<expr><op:operator pos:line="1182" pos:column="13">!</op:operator><name pos:line="1182" pos:column="14">targetNode</name></expr>)</condition><then pos:line="1182" pos:column="25"> <return pos:line="1182" pos:column="26">return <expr><name pos:line="1182" pos:column="33">defaultStr</name></expr>;</return></then></if>

	<expr_stmt><expr><name pos:line="1184" pos:column="9">targetNode</name> <op:operator pos:line="1184" pos:column="20">=</op:operator> <call><name><name pos:line="1184" pos:column="22">targetNode</name><op:operator pos:line="1184" pos:column="32">-&gt;</op:operator><name pos:line="1184" pos:column="34">FirstChild</name></name><argument_list pos:line="1184" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="1184" pos:column="45">"Menus"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1185" pos:column="9">if <condition pos:line="1185" pos:column="12">(<expr><op:operator pos:line="1185" pos:column="13">!</op:operator><name pos:line="1185" pos:column="14">targetNode</name></expr>)</condition><then pos:line="1185" pos:column="25"> <return pos:line="1185" pos:column="26">return <expr><name pos:line="1185" pos:column="33">defaultStr</name></expr>;</return></then></if>

	<expr_stmt><expr><name pos:line="1187" pos:column="9">targetNode</name> <op:operator pos:line="1187" pos:column="20">=</op:operator> <call><name><name pos:line="1187" pos:column="22">targetNode</name><op:operator pos:line="1187" pos:column="32">-&gt;</op:operator><name pos:line="1187" pos:column="34">FirstChild</name></name><argument_list pos:line="1187" pos:column="44">(<argument><expr><name pos:line="1187" pos:column="45">nodeName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1188" pos:column="9">if <condition pos:line="1188" pos:column="12">(<expr><op:operator pos:line="1188" pos:column="13">!</op:operator><name pos:line="1188" pos:column="14">targetNode</name></expr>)</condition><then pos:line="1188" pos:column="25"> <return pos:line="1188" pos:column="26">return <expr><name pos:line="1188" pos:column="33">defaultStr</name></expr>;</return></then></if>

	<decl_stmt><decl><type><specifier pos:line="1190" pos:column="9">const</specifier> <name pos:line="1190" pos:column="15">char</name> <type:modifier pos:line="1190" pos:column="20">*</type:modifier></type><name pos:line="1190" pos:column="21">name</name> <init pos:line="1190" pos:column="26">= <expr><name pos:line="1190" pos:column="28">NULL</name></expr></init></decl>;</decl_stmt>
	<for pos:line="1191" pos:column="9">for (<init><decl><type><name pos:line="1191" pos:column="14">TiXmlNodeA</name> <type:modifier pos:line="1191" pos:column="25">*</type:modifier></type><name pos:line="1191" pos:column="26">childNode</name> <init pos:line="1191" pos:column="36">= <expr><call><name><name pos:line="1191" pos:column="38">targetNode</name><op:operator pos:line="1191" pos:column="48">-&gt;</op:operator><name pos:line="1191" pos:column="50">FirstChildElement</name></name><argument_list pos:line="1191" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="1191" pos:column="68">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</init>
		<condition><expr><name pos:line="1192" pos:column="17">childNode</name></expr> ;</condition>
		<incr><expr><name pos:line="1193" pos:column="17">childNode</name> <op:operator pos:line="1193" pos:column="27">=</op:operator> <call><name><name pos:line="1193" pos:column="29">childNode</name><op:operator pos:line="1193" pos:column="38">-&gt;</op:operator><name pos:line="1193" pos:column="40">NextSibling</name></name><argument_list pos:line="1193" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="1193" pos:column="52">"Item"</lit:literal></expr></argument>)</argument_list></call></expr></incr> )
	<block pos:line="1194" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="1195" pos:column="17">TiXmlElementA</name> <type:modifier pos:line="1195" pos:column="31">*</type:modifier></type><name pos:line="1195" pos:column="32">element</name> <init pos:line="1195" pos:column="40">= <expr><call><name><name pos:line="1195" pos:column="42">childNode</name><op:operator pos:line="1195" pos:column="51">-&gt;</op:operator><name pos:line="1195" pos:column="53">ToElement</name></name><argument_list pos:line="1195" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="1196" pos:column="17">int</name></type> <name pos:line="1196" pos:column="21">id</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><specifier pos:line="1197" pos:column="17">const</specifier> <name pos:line="1197" pos:column="23">char</name> <type:modifier pos:line="1197" pos:column="28">*</type:modifier></type><name pos:line="1197" pos:column="29">idStr</name> <init pos:line="1197" pos:column="35">= <expr><call><name><name pos:line="1197" pos:column="37">element</name><op:operator pos:line="1197" pos:column="44">-&gt;</op:operator><name pos:line="1197" pos:column="46">Attribute</name></name><argument_list pos:line="1197" pos:column="55">(<argument><expr><lit:literal type="string" pos:line="1197" pos:column="56">"id"</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="1197" pos:column="62">&amp;</op:operator><name pos:line="1197" pos:column="63">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="1199" pos:column="17">if <condition pos:line="1199" pos:column="20">(<expr><name pos:line="1199" pos:column="21">idStr</name> <op:operator pos:line="1199" pos:column="27">&amp;&amp;</op:operator> <name pos:line="1199" pos:column="30">id</name> <op:operator pos:line="1199" pos:column="33">==</op:operator> <name pos:line="1199" pos:column="36">cmdID</name></expr>)</condition><then pos:line="1199" pos:column="42">
		<block pos:line="1200" pos:column="17">{
			<expr_stmt><expr><name pos:line="1201" pos:column="25">name</name> <op:operator pos:line="1201" pos:column="30">=</op:operator> <call><name><name pos:line="1201" pos:column="32">element</name><op:operator pos:line="1201" pos:column="39">-&gt;</op:operator><name pos:line="1201" pos:column="41">Attribute</name></name><argument_list pos:line="1201" pos:column="50">(<argument><expr><lit:literal type="string" pos:line="1201" pos:column="51">"name"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="1202" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>

	<if pos:line="1206" pos:column="9">if <condition pos:line="1206" pos:column="12">(<expr><name pos:line="1206" pos:column="13">name</name> <op:operator pos:line="1206" pos:column="18">&amp;&amp;</op:operator> <name><name pos:line="1206" pos:column="21">name</name><index pos:line="1206" pos:column="25">[<expr><lit:literal type="number" pos:line="1206" pos:column="26">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1206" pos:column="29">
	<block pos:line="1207" pos:column="9">{
<cpp:ifdef pos:line="1208" pos:column="1">#<cpp:directive pos:line="1208" pos:column="2">ifdef</cpp:directive> <name pos:line="1208" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><name pos:line="1209" pos:column="17">WcharMbcsConvertor</name> <type:modifier pos:line="1209" pos:column="36">*</type:modifier></type><name pos:line="1209" pos:column="37">wmc</name> <init pos:line="1209" pos:column="41">= <expr><call><name><name pos:line="1209" pos:column="43">WcharMbcsConvertor</name><op:operator pos:line="1209" pos:column="61">::</op:operator><name pos:line="1209" pos:column="63">getInstance</name></name><argument_list pos:line="1209" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:line="1210" pos:column="17">return <expr><call><name><name pos:line="1210" pos:column="24">wmc</name><op:operator pos:line="1210" pos:column="27">-&gt;</op:operator><name pos:line="1210" pos:column="29">char2wchar</name></name><argument_list pos:line="1210" pos:column="39">(<argument><expr><name pos:line="1210" pos:column="40">name</name></expr></argument>, <argument><expr><name pos:line="1210" pos:column="46">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:else pos:line="1211" pos:column="1">#<cpp:directive pos:line="1211" pos:column="2">else</cpp:directive></cpp:else>
		<return pos:line="1212" pos:column="17">return <expr><name pos:line="1212" pos:column="24">name</name></expr>;</return>
<cpp:endif pos:line="1213" pos:column="1">#<cpp:directive pos:line="1213" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
	<return pos:line="1215" pos:column="9">return <expr><name pos:line="1215" pos:column="16">defaultStr</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1218" pos:column="1">generic_string</name></type> <name><name pos:line="1218" pos:column="16">NativeLangSpeaker</name><op:operator pos:line="1218" pos:column="33">::</op:operator><name pos:line="1218" pos:column="35">getProjectPanelLangStr</name></name><parameter_list pos:line="1218" pos:column="57">(<param><decl><type><specifier pos:line="1218" pos:column="58">const</specifier> <name pos:line="1218" pos:column="64">char</name> <type:modifier pos:line="1218" pos:column="69">*</type:modifier></type><name pos:line="1218" pos:column="70">nodeName</name></decl></param>, <param><decl><type><specifier pos:line="1218" pos:column="80">const</specifier> <name pos:line="1218" pos:column="86">TCHAR</name> <type:modifier pos:line="1218" pos:column="92">*</type:modifier></type><name pos:line="1218" pos:column="93">defaultStr</name></decl></param>)</parameter_list> <specifier pos:line="1218" pos:column="105">const</specifier>
<block pos:line="1219" pos:column="1">{
	<if pos:line="1220" pos:column="9">if <condition pos:line="1220" pos:column="12">(<expr><op:operator pos:line="1220" pos:column="13">!</op:operator><name pos:line="1220" pos:column="14">_nativeLangA</name></expr>)</condition><then pos:line="1220" pos:column="27"> <return pos:line="1220" pos:column="28">return <expr><name pos:line="1220" pos:column="35">defaultStr</name></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="1222" pos:column="9">TiXmlNodeA</name> <type:modifier pos:line="1222" pos:column="20">*</type:modifier></type><name pos:line="1222" pos:column="21">targetNode</name> <init pos:line="1222" pos:column="32">= <expr><call><name><name pos:line="1222" pos:column="34">_nativeLangA</name><op:operator pos:line="1222" pos:column="46">-&gt;</op:operator><name pos:line="1222" pos:column="48">FirstChild</name></name><argument_list pos:line="1222" pos:column="58">(<argument><expr><lit:literal type="string" pos:line="1222" pos:column="59">"ProjectManager"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1223" pos:column="9">if <condition pos:line="1223" pos:column="12">(<expr><op:operator pos:line="1223" pos:column="13">!</op:operator><name pos:line="1223" pos:column="14">targetNode</name></expr>)</condition><then pos:line="1223" pos:column="25"> <return pos:line="1223" pos:column="26">return <expr><name pos:line="1223" pos:column="33">defaultStr</name></expr>;</return></then></if>
	<expr_stmt><expr><name pos:line="1224" pos:column="9">targetNode</name> <op:operator pos:line="1224" pos:column="20">=</op:operator> <call><name><name pos:line="1224" pos:column="22">targetNode</name><op:operator pos:line="1224" pos:column="32">-&gt;</op:operator><name pos:line="1224" pos:column="34">FirstChild</name></name><argument_list pos:line="1224" pos:column="44">(<argument><expr><name pos:line="1224" pos:column="45">nodeName</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1225" pos:column="9">if <condition pos:line="1225" pos:column="12">(<expr><op:operator pos:line="1225" pos:column="13">!</op:operator><name pos:line="1225" pos:column="14">targetNode</name></expr>)</condition><then pos:line="1225" pos:column="25"> <return pos:line="1225" pos:column="26">return <expr><name pos:line="1225" pos:column="33">defaultStr</name></expr>;</return></then></if>

	<comment type="line" pos:line="1227" pos:column="9">// Set Title</comment>
	<decl_stmt><decl><type><specifier pos:line="1228" pos:column="9">const</specifier> <name pos:line="1228" pos:column="15">char</name> <type:modifier pos:line="1228" pos:column="20">*</type:modifier></type><name pos:line="1228" pos:column="21">name</name> <init pos:line="1228" pos:column="26">= <expr><op:operator pos:line="1228" pos:column="28">(</op:operator><call><name><name pos:line="1228" pos:column="29">targetNode</name><op:operator pos:line="1228" pos:column="39">-&gt;</op:operator><name pos:line="1228" pos:column="41">ToElement</name></name><argument_list pos:line="1228" pos:column="50">()</argument_list></call><op:operator pos:line="1228" pos:column="52">)</op:operator><op:operator pos:line="1228" pos:column="53">-&gt;</op:operator><call><name pos:line="1228" pos:column="55">Attribute</name><argument_list pos:line="1228" pos:column="64">(<argument><expr><lit:literal type="string" pos:line="1228" pos:column="65">"name"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="1229" pos:column="9">if <condition pos:line="1229" pos:column="12">(<expr><name pos:line="1229" pos:column="13">name</name> <op:operator pos:line="1229" pos:column="18">&amp;&amp;</op:operator> <name><name pos:line="1229" pos:column="21">name</name><index pos:line="1229" pos:column="25">[<expr><lit:literal type="number" pos:line="1229" pos:column="26">0</lit:literal></expr>]</index></name></expr>)</condition><then pos:line="1229" pos:column="29">
	<block pos:line="1230" pos:column="9">{
<cpp:ifdef pos:line="1231" pos:column="1">#<cpp:directive pos:line="1231" pos:column="2">ifdef</cpp:directive> <name pos:line="1231" pos:column="8">UNICODE</name></cpp:ifdef>
		<decl_stmt><decl><type><name pos:line="1232" pos:column="17">WcharMbcsConvertor</name> <type:modifier pos:line="1232" pos:column="36">*</type:modifier></type><name pos:line="1232" pos:column="37">wmc</name> <init pos:line="1232" pos:column="41">= <expr><call><name><name pos:line="1232" pos:column="43">WcharMbcsConvertor</name><op:operator pos:line="1232" pos:column="61">::</op:operator><name pos:line="1232" pos:column="63">getInstance</name></name><argument_list pos:line="1232" pos:column="74">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<return pos:line="1233" pos:column="17">return <expr><call><name><name pos:line="1233" pos:column="24">wmc</name><op:operator pos:line="1233" pos:column="27">-&gt;</op:operator><name pos:line="1233" pos:column="29">char2wchar</name></name><argument_list pos:line="1233" pos:column="39">(<argument><expr><name pos:line="1233" pos:column="40">name</name></expr></argument>, <argument><expr><name pos:line="1233" pos:column="46">_nativeLangEncoding</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:else pos:line="1234" pos:column="1">#<cpp:directive pos:line="1234" pos:column="2">else</cpp:directive></cpp:else>
		<return pos:line="1235" pos:column="17">return <expr><name pos:line="1235" pos:column="24">name</name></expr>;</return>
<cpp:endif pos:line="1236" pos:column="1">#<cpp:directive pos:line="1236" pos:column="2">endif</cpp:directive></cpp:endif>
	}</block></then></if>
	<return pos:line="1238" pos:column="9">return <expr><name pos:line="1238" pos:column="16">defaultStr</name></expr>;</return>
}</block></function>

<function><type><name pos:line="1241" pos:column="1">int</name></type> <name><name pos:line="1241" pos:column="5">NativeLangSpeaker</name><op:operator pos:line="1241" pos:column="22">::</op:operator><name pos:line="1241" pos:column="24">messageBox</name></name><parameter_list pos:line="1241" pos:column="34">(<param><decl><type><specifier pos:line="1241" pos:column="35">const</specifier> <name pos:line="1241" pos:column="41">char</name> <type:modifier pos:line="1241" pos:column="46">*</type:modifier></type><name pos:line="1241" pos:column="47">msgBoxTagName</name></decl></param>, <param><decl><type><name pos:line="1241" pos:column="62">HWND</name></type> <name pos:line="1241" pos:column="67">hWnd</name></decl></param>, <param><decl><type><name pos:line="1241" pos:column="73">TCHAR</name> <type:modifier pos:line="1241" pos:column="79">*</type:modifier></type><name pos:line="1241" pos:column="80">defaultMessage</name></decl></param>, <param><decl><type><name pos:line="1241" pos:column="96">TCHAR</name> <type:modifier pos:line="1241" pos:column="102">*</type:modifier></type><name pos:line="1241" pos:column="103">defaultTitle</name></decl></param>, <param><decl><type><name pos:line="1241" pos:column="117">int</name></type> <name pos:line="1241" pos:column="121">msgBoxType</name></decl></param>, <param><decl><type><name pos:line="1241" pos:column="133">int</name></type> <name pos:line="1241" pos:column="137">intInfo</name></decl></param>, <param><decl><type><name pos:line="1241" pos:column="146">TCHAR</name> <type:modifier pos:line="1241" pos:column="152">*</type:modifier></type><name pos:line="1241" pos:column="153">strInfo</name></decl></param>)</parameter_list>
<block pos:line="1242" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="1243" pos:column="9">generic_string</name></type> <name pos:line="1243" pos:column="24">msg</name></decl><op:operator pos:line="1243" pos:column="27">,</op:operator> <decl><type ref="prev"/><name pos:line="1243" pos:column="29">title</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1244" pos:column="9">size_t</name></type> <name pos:line="1244" pos:column="16">index</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1245" pos:column="9">TCHAR</name></type> <name><name pos:line="1245" pos:column="15">int2Write</name><index pos:line="1245" pos:column="24">[<expr><lit:literal type="number" pos:line="1245" pos:column="25">256</lit:literal></expr>]</index></name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1246" pos:column="9">TCHAR</name></type> <name><name pos:line="1246" pos:column="15">intPlaceHolderSymbol</name><index pos:line="1246" pos:column="35">[]</index></name> <init pos:line="1246" pos:column="38">= <expr><call><name pos:line="1246" pos:column="40">TEXT</name><argument_list pos:line="1246" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="1246" pos:column="45">"$INT_REPLACE$"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1247" pos:column="9">TCHAR</name></type> <name><name pos:line="1247" pos:column="15">strPlaceHolderSymbol</name><index pos:line="1247" pos:column="35">[]</index></name> <init pos:line="1247" pos:column="38">= <expr><call><name pos:line="1247" pos:column="40">TEXT</name><argument_list pos:line="1247" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="1247" pos:column="45">"$STR_REPLACE$"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<decl_stmt><decl><type><name pos:line="1249" pos:column="9">size_t</name></type> <name pos:line="1249" pos:column="16">intPlaceHolderLen</name> <init pos:line="1249" pos:column="34">= <expr><call><name pos:line="1249" pos:column="36">lstrlen</name><argument_list pos:line="1249" pos:column="43">(<argument><expr><name pos:line="1249" pos:column="44">intPlaceHolderSymbol</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="1250" pos:column="9">size_t</name></type> <name pos:line="1250" pos:column="16">strPlaceHolderLen</name> <init pos:line="1250" pos:column="34">= <expr><call><name pos:line="1250" pos:column="36">lstrlen</name><argument_list pos:line="1250" pos:column="43">(<argument><expr><name pos:line="1250" pos:column="44">strPlaceHolderSymbol</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt><expr><call><name pos:line="1252" pos:column="9">generic_sprintf</name><argument_list pos:line="1252" pos:column="24">(<argument><expr><name pos:line="1252" pos:column="25">int2Write</name></expr></argument>, <argument><expr><call><name pos:line="1252" pos:column="36">TEXT</name><argument_list pos:line="1252" pos:column="40">(<argument><expr><lit:literal type="string" pos:line="1252" pos:column="41">"%d"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="1252" pos:column="48">intInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<if pos:line="1254" pos:column="9">if <condition pos:line="1254" pos:column="12">(<expr><op:operator pos:line="1254" pos:column="13">!</op:operator><call><name pos:line="1254" pos:column="14">getMsgBoxLang</name><argument_list pos:line="1254" pos:column="27">(<argument><expr><name pos:line="1254" pos:column="28">msgBoxTagName</name></expr></argument>, <argument><expr><name pos:line="1254" pos:column="43">title</name></expr></argument>, <argument><expr><name pos:line="1254" pos:column="50">msg</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="1254" pos:column="55">
	<block pos:line="1255" pos:column="9">{
		<expr_stmt><expr><name pos:line="1256" pos:column="17">title</name> <op:operator pos:line="1256" pos:column="23">=</op:operator> <name pos:line="1256" pos:column="25">defaultTitle</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="1257" pos:column="17">msg</name> <op:operator pos:line="1257" pos:column="21">=</op:operator> <name pos:line="1257" pos:column="23">defaultMessage</name></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><name pos:line="1259" pos:column="9">index</name> <op:operator pos:line="1259" pos:column="15">=</op:operator> <call><name><name pos:line="1259" pos:column="17">title</name><op:operator pos:line="1259" pos:column="22">.</op:operator><name pos:line="1259" pos:column="23">find</name></name><argument_list pos:line="1259" pos:column="27">(<argument><expr><name pos:line="1259" pos:column="28">intPlaceHolderSymbol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1260" pos:column="9">if <condition pos:line="1260" pos:column="12">(<expr><name pos:line="1260" pos:column="13">index</name> <op:operator pos:line="1260" pos:column="19">!=</op:operator> <name><name pos:line="1260" pos:column="22">string</name><op:operator pos:line="1260" pos:column="28">::</op:operator><name pos:line="1260" pos:column="30">npos</name></name></expr>)</condition><then pos:line="1260" pos:column="35">
		<expr_stmt><expr><call><name><name pos:line="1261" pos:column="17">title</name><op:operator pos:line="1261" pos:column="22">.</op:operator><name pos:line="1261" pos:column="23">replace</name></name><argument_list pos:line="1261" pos:column="30">(<argument><expr><name pos:line="1261" pos:column="31">index</name></expr></argument>, <argument><expr><name pos:line="1261" pos:column="38">intPlaceHolderLen</name></expr></argument>, <argument><expr><name pos:line="1261" pos:column="57">int2Write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<expr_stmt><expr><name pos:line="1263" pos:column="9">index</name> <op:operator pos:line="1263" pos:column="15">=</op:operator> <call><name><name pos:line="1263" pos:column="17">msg</name><op:operator pos:line="1263" pos:column="20">.</op:operator><name pos:line="1263" pos:column="21">find</name></name><argument_list pos:line="1263" pos:column="25">(<argument><expr><name pos:line="1263" pos:column="26">intPlaceHolderSymbol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<if pos:line="1264" pos:column="9">if <condition pos:line="1264" pos:column="12">(<expr><name pos:line="1264" pos:column="13">index</name> <op:operator pos:line="1264" pos:column="19">!=</op:operator> <name><name pos:line="1264" pos:column="22">string</name><op:operator pos:line="1264" pos:column="28">::</op:operator><name pos:line="1264" pos:column="30">npos</name></name></expr>)</condition><then pos:line="1264" pos:column="35">
		<expr_stmt><expr><call><name><name pos:line="1265" pos:column="17">msg</name><op:operator pos:line="1265" pos:column="20">.</op:operator><name pos:line="1265" pos:column="21">replace</name></name><argument_list pos:line="1265" pos:column="28">(<argument><expr><name pos:line="1265" pos:column="29">index</name></expr></argument>, <argument><expr><name pos:line="1265" pos:column="36">intPlaceHolderLen</name></expr></argument>, <argument><expr><name pos:line="1265" pos:column="55">int2Write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

	<if pos:line="1267" pos:column="9">if <condition pos:line="1267" pos:column="12">(<expr><name pos:line="1267" pos:column="13">strInfo</name></expr>)</condition><then pos:line="1267" pos:column="21">
	<block pos:line="1268" pos:column="9">{
		<expr_stmt><expr><name pos:line="1269" pos:column="17">index</name> <op:operator pos:line="1269" pos:column="23">=</op:operator> <call><name><name pos:line="1269" pos:column="25">title</name><op:operator pos:line="1269" pos:column="30">.</op:operator><name pos:line="1269" pos:column="31">find</name></name><argument_list pos:line="1269" pos:column="35">(<argument><expr><name pos:line="1269" pos:column="36">strPlaceHolderSymbol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1270" pos:column="17">if <condition pos:line="1270" pos:column="20">(<expr><name pos:line="1270" pos:column="21">index</name> <op:operator pos:line="1270" pos:column="27">!=</op:operator> <name><name pos:line="1270" pos:column="30">string</name><op:operator pos:line="1270" pos:column="36">::</op:operator><name pos:line="1270" pos:column="38">npos</name></name></expr>)</condition><then pos:line="1270" pos:column="43">
			<expr_stmt><expr><call><name><name pos:line="1271" pos:column="25">title</name><op:operator pos:line="1271" pos:column="30">.</op:operator><name pos:line="1271" pos:column="31">replace</name></name><argument_list pos:line="1271" pos:column="38">(<argument><expr><name pos:line="1271" pos:column="39">index</name></expr></argument>, <argument><expr><name pos:line="1271" pos:column="46">strPlaceHolderLen</name></expr></argument>, <argument><expr><name pos:line="1271" pos:column="65">strInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<expr_stmt><expr><name pos:line="1273" pos:column="17">index</name> <op:operator pos:line="1273" pos:column="23">=</op:operator> <call><name><name pos:line="1273" pos:column="25">msg</name><op:operator pos:line="1273" pos:column="28">.</op:operator><name pos:line="1273" pos:column="29">find</name></name><argument_list pos:line="1273" pos:column="33">(<argument><expr><name pos:line="1273" pos:column="34">strPlaceHolderSymbol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<if pos:line="1274" pos:column="17">if <condition pos:line="1274" pos:column="20">(<expr><name pos:line="1274" pos:column="21">index</name> <op:operator pos:line="1274" pos:column="27">!=</op:operator> <name><name pos:line="1274" pos:column="30">string</name><op:operator pos:line="1274" pos:column="36">::</op:operator><name pos:line="1274" pos:column="38">npos</name></name></expr>)</condition><then pos:line="1274" pos:column="43">
			<expr_stmt><expr><call><name><name pos:line="1275" pos:column="25">msg</name><op:operator pos:line="1275" pos:column="28">.</op:operator><name pos:line="1275" pos:column="29">replace</name></name><argument_list pos:line="1275" pos:column="36">(<argument><expr><name pos:line="1275" pos:column="37">index</name></expr></argument>, <argument><expr><name pos:line="1275" pos:column="44">strPlaceHolderLen</name></expr></argument>, <argument><expr><name pos:line="1275" pos:column="63">strInfo</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	}</block></then></if>
	<return pos:line="1277" pos:column="9">return <expr><call><name><op:operator pos:line="1277" pos:column="16">::</op:operator><name pos:line="1277" pos:column="18">MessageBox</name></name><argument_list pos:line="1277" pos:column="28">(<argument><expr><name pos:line="1277" pos:column="29">hWnd</name></expr></argument>, <argument><expr><call><name><name pos:line="1277" pos:column="35">msg</name><op:operator pos:line="1277" pos:column="38">.</op:operator><name pos:line="1277" pos:column="39">c_str</name></name><argument_list pos:line="1277" pos:column="44">()</argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="1277" pos:column="48">title</name><op:operator pos:line="1277" pos:column="53">.</op:operator><name pos:line="1277" pos:column="54">c_str</name></name><argument_list pos:line="1277" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="1277" pos:column="63">msgBoxType</name></expr></argument>)</argument_list></call></expr>;</return>

	<comment type="block" pos:line="1279" pos:column="9">/*
	defaultTitle.replace(index, len, int2Write);
	defaultTitle.replace(index, len, str2Write);
	defaultMessage.replace(index, len, int2Write);
	defaultMessage.replace(index, len, str2Write);
	return ::MessageBox(hWnd, defaultMessage, defaultTitle, msgBoxType);
	*/</comment>
}</block></function></unit>
