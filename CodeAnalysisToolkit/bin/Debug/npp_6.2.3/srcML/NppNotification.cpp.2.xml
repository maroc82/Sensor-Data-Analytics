<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\NppNotification.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"Notepad_plus_Window.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"xmlMatchedTagsHighlighter.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"VerticalFileSwitcher.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="33" pos:column="10">"ProjectPanel.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="34" pos:column="10">"documentMap.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="36" pos:column="1">BOOL</name></type> <name><name pos:line="36" pos:column="6">Notepad_plus</name><op:operator pos:line="36" pos:column="18">::</op:operator><name pos:line="36" pos:column="20">notify</name></name><parameter_list pos:line="36" pos:column="26">(<param><decl><type><name pos:line="36" pos:column="27">SCNotification</name> <type:modifier pos:line="36" pos:column="42">*</type:modifier></type><name pos:line="36" pos:column="43">notification</name></decl></param>)</parameter_list>
<block pos:line="37" pos:column="1">{
	<comment type="line" pos:line="38" pos:column="9">//Important, keep track of which element generated the message</comment>
	<decl_stmt><decl><type><name pos:line="39" pos:column="9">bool</name></type> <name pos:line="39" pos:column="14">isFromPrimary</name> <init pos:line="39" pos:column="28">= <expr><op:operator pos:line="39" pos:column="30">(</op:operator><call><name><name pos:line="39" pos:column="31">_mainEditView</name><op:operator pos:line="39" pos:column="44">.</op:operator><name pos:line="39" pos:column="45">getHSelf</name></name><argument_list pos:line="39" pos:column="53">()</argument_list></call> <op:operator pos:line="39" pos:column="56">==</op:operator> <name><name pos:line="39" pos:column="59">notification</name><op:operator pos:line="39" pos:column="71">-&gt;</op:operator><name pos:line="39" pos:column="73">nmhdr</name><op:operator pos:line="39" pos:column="78">.</op:operator><name pos:line="39" pos:column="79">hwndFrom</name></name> <op:operator pos:line="39" pos:column="88">||</op:operator> <call><name><name pos:line="39" pos:column="91">_mainDocTab</name><op:operator pos:line="39" pos:column="102">.</op:operator><name pos:line="39" pos:column="103">getHSelf</name></name><argument_list pos:line="39" pos:column="111">()</argument_list></call> <op:operator pos:line="39" pos:column="114">==</op:operator> <name><name pos:line="39" pos:column="117">notification</name><op:operator pos:line="39" pos:column="129">-&gt;</op:operator><name pos:line="39" pos:column="131">nmhdr</name><op:operator pos:line="39" pos:column="136">.</op:operator><name pos:line="39" pos:column="137">hwndFrom</name></name><op:operator pos:line="39" pos:column="145">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="40" pos:column="9">bool</name></type> <name pos:line="40" pos:column="14">isFromSecondary</name> <init pos:line="40" pos:column="30">= <expr><op:operator pos:line="40" pos:column="32">!</op:operator><name pos:line="40" pos:column="33">isFromPrimary</name> <op:operator pos:line="40" pos:column="47">&amp;&amp;</op:operator> <op:operator pos:line="40" pos:column="50">(</op:operator><call><name><name pos:line="40" pos:column="51">_subEditView</name><op:operator pos:line="40" pos:column="63">.</op:operator><name pos:line="40" pos:column="64">getHSelf</name></name><argument_list pos:line="40" pos:column="72">()</argument_list></call> <op:operator pos:line="40" pos:column="75">==</op:operator> <name><name pos:line="40" pos:column="78">notification</name><op:operator pos:line="40" pos:column="90">-&gt;</op:operator><name pos:line="40" pos:column="92">nmhdr</name><op:operator pos:line="40" pos:column="97">.</op:operator><name pos:line="40" pos:column="98">hwndFrom</name></name> <op:operator pos:line="40" pos:column="107">||</op:operator> <call><name><name pos:line="40" pos:column="110">_subDocTab</name><op:operator pos:line="40" pos:column="120">.</op:operator><name pos:line="40" pos:column="121">getHSelf</name></name><argument_list pos:line="40" pos:column="129">()</argument_list></call> <op:operator pos:line="40" pos:column="132">==</op:operator> <name><name pos:line="40" pos:column="135">notification</name><op:operator pos:line="40" pos:column="147">-&gt;</op:operator><name pos:line="40" pos:column="149">nmhdr</name><op:operator pos:line="40" pos:column="154">.</op:operator><name pos:line="40" pos:column="155">hwndFrom</name></name><op:operator pos:line="40" pos:column="163">)</op:operator></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="41" pos:column="9">ScintillaEditView</name> <type:modifier pos:line="41" pos:column="27">*</type:modifier></type> <name pos:line="41" pos:column="29">notifyView</name> <init pos:line="41" pos:column="40">= <expr><name pos:line="41" pos:column="42">isFromPrimary</name><op:operator pos:line="41" pos:column="55">?</op:operator><op:operator pos:line="41" pos:column="56">&amp;</op:operator><name pos:line="41" pos:column="57">_mainEditView</name><op:operator pos:line="41" pos:column="70">:</op:operator><op:operator pos:line="41" pos:column="71">&amp;</op:operator><name pos:line="41" pos:column="72">_subEditView</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="42" pos:column="9">DocTabView</name> <type:modifier pos:line="42" pos:column="20">*</type:modifier></type><name pos:line="42" pos:column="21">notifyDocTab</name> <init pos:line="42" pos:column="34">= <expr><name pos:line="42" pos:column="36">isFromPrimary</name><op:operator pos:line="42" pos:column="49">?</op:operator><op:operator pos:line="42" pos:column="50">&amp;</op:operator><name pos:line="42" pos:column="51">_mainDocTab</name><op:operator pos:line="42" pos:column="62">:</op:operator><op:operator pos:line="42" pos:column="63">&amp;</op:operator><name pos:line="42" pos:column="64">_subDocTab</name></expr></init></decl>;</decl_stmt>
	<decl_stmt><decl><type><name pos:line="43" pos:column="9">TBHDR</name> <type:modifier pos:line="43" pos:column="15">*</type:modifier></type> <name pos:line="43" pos:column="17">tabNotification</name> <init pos:line="43" pos:column="33">= <expr><op:operator pos:line="43" pos:column="35">(</op:operator><name pos:line="43" pos:column="36">TBHDR</name><op:operator pos:line="43" pos:column="41">*</op:operator><op:operator pos:line="43" pos:column="42">)</op:operator> <name pos:line="43" pos:column="44">notification</name></expr></init></decl>;</decl_stmt>
	<switch pos:line="44" pos:column="9">switch <condition pos:line="44" pos:column="16">(<expr><name><name pos:line="44" pos:column="17">notification</name><op:operator pos:line="44" pos:column="29">-&gt;</op:operator><name pos:line="44" pos:column="31">nmhdr</name><op:operator pos:line="44" pos:column="36">.</op:operator><name pos:line="44" pos:column="37">code</name></name></expr>)</condition> 
	<block pos:line="45" pos:column="9">{
		<case pos:line="46" pos:column="17">case <expr><name pos:line="46" pos:column="22">SCN_MODIFIED</name></expr>:
		<block pos:line="47" pos:column="17">{
			<decl_stmt><decl><type><specifier pos:line="48" pos:column="25">static</specifier> <name pos:line="48" pos:column="32">bool</name></type> <name pos:line="48" pos:column="37">prevWasEdit</name> <init pos:line="48" pos:column="49">= <expr><lit:literal type="boolean" pos:line="48" pos:column="51">false</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="49" pos:column="25">if <condition pos:line="49" pos:column="28">(<expr><name><name pos:line="49" pos:column="29">notification</name><op:operator pos:line="49" pos:column="41">-&gt;</op:operator><name pos:line="49" pos:column="43">modificationType</name></name> <op:operator pos:line="49" pos:column="60">&amp;</op:operator> <op:operator pos:line="49" pos:column="62">(</op:operator><name pos:line="49" pos:column="63">SC_MOD_DELETETEXT</name> <op:operator pos:line="49" pos:column="81">|</op:operator> <name pos:line="49" pos:column="83">SC_MOD_INSERTTEXT</name><op:operator pos:line="49" pos:column="100">)</op:operator></expr>)</condition><then pos:line="49" pos:column="102">
			<block pos:line="50" pos:column="25">{
				<expr_stmt><expr><name pos:line="51" pos:column="33">prevWasEdit</name> <op:operator pos:line="51" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="51" pos:column="47">true</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="52" pos:column="33">_linkTriggered</name> <op:operator pos:line="52" pos:column="48">=</op:operator> <lit:literal type="boolean" pos:line="52" pos:column="50">true</lit:literal></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="53" pos:column="33">::</op:operator><name pos:line="53" pos:column="35">InvalidateRect</name></name><argument_list pos:line="53" pos:column="49">(<argument><expr><call><name><name pos:line="53" pos:column="50">notifyView</name><op:operator pos:line="53" pos:column="60">-&gt;</op:operator><name pos:line="53" pos:column="62">getHSelf</name></name><argument_list pos:line="53" pos:column="70">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="53" pos:column="74">NULL</name></expr></argument>, <argument><expr><name pos:line="53" pos:column="80">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>

			<if pos:line="56" pos:column="25">if <condition pos:line="56" pos:column="28">(<expr><name><name pos:line="56" pos:column="29">notification</name><op:operator pos:line="56" pos:column="41">-&gt;</op:operator><name pos:line="56" pos:column="43">modificationType</name></name> <op:operator pos:line="56" pos:column="60">&amp;</op:operator> <name pos:line="56" pos:column="62">SC_MOD_CHANGEFOLD</name></expr>)</condition><then pos:line="56" pos:column="80">
			<block pos:line="57" pos:column="25">{
				<if pos:line="58" pos:column="33">if <condition pos:line="58" pos:column="36">(<expr><name pos:line="58" pos:column="37">prevWasEdit</name></expr>)</condition><then pos:line="58" pos:column="49"> 
				<block pos:line="59" pos:column="33">{
					<expr_stmt><expr><call><name><name pos:line="60" pos:column="41">notifyView</name><op:operator pos:line="60" pos:column="51">-&gt;</op:operator><name pos:line="60" pos:column="53">foldChanged</name></name><argument_list pos:line="60" pos:column="64">(<argument><expr><name><name pos:line="60" pos:column="65">notification</name><op:operator pos:line="60" pos:column="77">-&gt;</op:operator><name pos:line="60" pos:column="79">line</name></name></expr></argument>,
							<argument><expr><name><name pos:line="61" pos:column="57">notification</name><op:operator pos:line="61" pos:column="69">-&gt;</op:operator><name pos:line="61" pos:column="71">foldLevelNow</name></name></expr></argument>, <argument><expr><name><name pos:line="61" pos:column="85">notification</name><op:operator pos:line="61" pos:column="97">-&gt;</op:operator><name pos:line="61" pos:column="99">foldLevelPrev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><name pos:line="62" pos:column="41">prevWasEdit</name> <op:operator pos:line="62" pos:column="53">=</op:operator> <lit:literal type="boolean" pos:line="62" pos:column="55">false</lit:literal></expr>;</expr_stmt>
				}</block></then></if>
			}</block></then>
			<else pos:line="65" pos:column="25">else <if pos:line="65" pos:column="30">if <condition pos:line="65" pos:column="33">(<expr><op:operator pos:line="65" pos:column="34">!</op:operator><op:operator pos:line="65" pos:column="35">(</op:operator><name><name pos:line="65" pos:column="36">notification</name><op:operator pos:line="65" pos:column="48">-&gt;</op:operator><name pos:line="65" pos:column="50">modificationType</name></name> <op:operator pos:line="65" pos:column="67">&amp;</op:operator> <op:operator pos:line="65" pos:column="69">(</op:operator><name pos:line="65" pos:column="70">SC_MOD_DELETETEXT</name> <op:operator pos:line="65" pos:column="88">|</op:operator> <name pos:line="65" pos:column="90">SC_MOD_INSERTTEXT</name><op:operator pos:line="65" pos:column="107">)</op:operator><op:operator pos:line="65" pos:column="108">)</op:operator></expr>)</condition><then pos:line="65" pos:column="110">
			<block pos:line="66" pos:column="25">{
				<expr_stmt><expr><name pos:line="67" pos:column="33">prevWasEdit</name> <op:operator pos:line="67" pos:column="45">=</op:operator> <lit:literal type="boolean" pos:line="67" pos:column="47">false</lit:literal></expr>;</expr_stmt>
			}</block></then></if></else></if>
		}</block>
		<break pos:line="70" pos:column="17">break;</break>

		</case><case pos:line="72" pos:column="17">case <expr><name pos:line="72" pos:column="22">SCN_SAVEPOINTREACHED</name></expr>:
		</case><case pos:line="73" pos:column="17">case <expr><name pos:line="73" pos:column="22">SCN_SAVEPOINTLEFT</name></expr>:
		<block pos:line="74" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="75" pos:column="25">Buffer</name> <type:modifier pos:line="75" pos:column="32">*</type:modifier></type> <name pos:line="75" pos:column="34">buf</name> <init pos:line="75" pos:column="38">= <expr><lit:literal type="number" pos:line="75" pos:column="40">0</lit:literal></expr></init></decl>;</decl_stmt>
			<if pos:line="76" pos:column="25">if <condition pos:line="76" pos:column="28">(<expr><name pos:line="76" pos:column="29">isFromPrimary</name></expr>)</condition><then pos:line="76" pos:column="43"> <block pos:line="76" pos:column="44">{
				<expr_stmt><expr><name pos:line="77" pos:column="33">buf</name> <op:operator pos:line="77" pos:column="37">=</op:operator> <call><name><name pos:line="77" pos:column="39">_mainEditView</name><op:operator pos:line="77" pos:column="52">.</op:operator><name pos:line="77" pos:column="53">getCurrentBuffer</name></name><argument_list pos:line="77" pos:column="69">()</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="78" pos:column="27">else <if pos:line="78" pos:column="32">if <condition pos:line="78" pos:column="35">(<expr><name pos:line="78" pos:column="36">isFromSecondary</name></expr>)</condition><then pos:line="78" pos:column="52"> <block pos:line="78" pos:column="53">{
				<expr_stmt><expr><name pos:line="79" pos:column="33">buf</name> <op:operator pos:line="79" pos:column="37">=</op:operator> <call><name><name pos:line="79" pos:column="39">_subEditView</name><op:operator pos:line="79" pos:column="51">.</op:operator><name pos:line="79" pos:column="52">getCurrentBuffer</name></name><argument_list pos:line="79" pos:column="68">()</argument_list></call></expr>;</expr_stmt>
			}</block></then> <else pos:line="80" pos:column="27">else <block pos:line="80" pos:column="32">{
				<comment type="line" pos:line="81" pos:column="33">//Done by invisibleEditView?</comment>
				<decl_stmt><decl><type><name pos:line="82" pos:column="33">BufferID</name></type> <name pos:line="82" pos:column="42">id</name> <init pos:line="82" pos:column="45">= <expr><name pos:line="82" pos:column="47">BUFFER_INVALID</name></expr></init></decl>;</decl_stmt>
				<if pos:line="83" pos:column="33">if <condition pos:line="83" pos:column="36">(<expr><name><name pos:line="83" pos:column="37">notification</name><op:operator pos:line="83" pos:column="49">-&gt;</op:operator><name pos:line="83" pos:column="51">nmhdr</name><op:operator pos:line="83" pos:column="56">.</op:operator><name pos:line="83" pos:column="57">hwndFrom</name></name> <op:operator pos:line="83" pos:column="66">==</op:operator> <call><name><name pos:line="83" pos:column="69">_invisibleEditView</name><op:operator pos:line="83" pos:column="87">.</op:operator><name pos:line="83" pos:column="88">getHSelf</name></name><argument_list pos:line="83" pos:column="96">()</argument_list></call></expr>)</condition><then pos:line="83" pos:column="99"> <block pos:line="83" pos:column="100">{
					<expr_stmt><expr><name pos:line="84" pos:column="41">id</name> <op:operator pos:line="84" pos:column="44">=</op:operator> <call><name><name pos:line="84" pos:column="46">MainFileManager</name><op:operator pos:line="84" pos:column="61">-&gt;</op:operator><name pos:line="84" pos:column="63">getBufferFromDocument</name></name><argument_list pos:line="84" pos:column="84">(<argument><expr><call><name><name pos:line="84" pos:column="85">_invisibleEditView</name><op:operator pos:line="84" pos:column="103">.</op:operator><name pos:line="84" pos:column="104">execute</name></name><argument_list pos:line="84" pos:column="111">(<argument><expr><name pos:line="84" pos:column="112">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="85" pos:column="35">else <if pos:line="85" pos:column="40">if <condition pos:line="85" pos:column="43">(<expr><name><name pos:line="85" pos:column="44">notification</name><op:operator pos:line="85" pos:column="56">-&gt;</op:operator><name pos:line="85" pos:column="58">nmhdr</name><op:operator pos:line="85" pos:column="63">.</op:operator><name pos:line="85" pos:column="64">hwndFrom</name></name> <op:operator pos:line="85" pos:column="73">==</op:operator> <call><name><name pos:line="85" pos:column="76">_fileEditView</name><op:operator pos:line="85" pos:column="89">.</op:operator><name pos:line="85" pos:column="90">getHSelf</name></name><argument_list pos:line="85" pos:column="98">()</argument_list></call></expr>)</condition><then pos:line="85" pos:column="101"> <block pos:line="85" pos:column="102">{
					<expr_stmt><expr><name pos:line="86" pos:column="41">id</name> <op:operator pos:line="86" pos:column="44">=</op:operator> <call><name><name pos:line="86" pos:column="46">MainFileManager</name><op:operator pos:line="86" pos:column="61">-&gt;</op:operator><name pos:line="86" pos:column="63">getBufferFromDocument</name></name><argument_list pos:line="86" pos:column="84">(<argument><expr><call><name><name pos:line="86" pos:column="85">_fileEditView</name><op:operator pos:line="86" pos:column="98">.</op:operator><name pos:line="86" pos:column="99">execute</name></name><argument_list pos:line="86" pos:column="106">(<argument><expr><name pos:line="86" pos:column="107">SCI_GETDOCPOINTER</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="87" pos:column="35">else <block pos:line="87" pos:column="40">{
					<break pos:line="88" pos:column="41">break;</break>	<comment type="line" pos:line="88" pos:column="49">//wrong scintilla</comment>
				}</block></else></if></else></if>
				<if pos:line="90" pos:column="33">if <condition pos:line="90" pos:column="36">(<expr><name pos:line="90" pos:column="37">id</name> <op:operator pos:line="90" pos:column="40">!=</op:operator> <name pos:line="90" pos:column="43">BUFFER_INVALID</name></expr>)</condition><then pos:line="90" pos:column="58"> <block pos:line="90" pos:column="59">{
					<expr_stmt><expr><name pos:line="91" pos:column="41">buf</name> <op:operator pos:line="91" pos:column="45">=</op:operator> <call><name><name pos:line="91" pos:column="47">MainFileManager</name><op:operator pos:line="91" pos:column="62">-&gt;</op:operator><name pos:line="91" pos:column="64">getBufferByID</name></name><argument_list pos:line="91" pos:column="77">(<argument><expr><name pos:line="91" pos:column="78">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then> <else pos:line="92" pos:column="35">else <block pos:line="92" pos:column="40">{
					<break pos:line="93" pos:column="41">break;</break>
				}</block></else></if>
			}</block></else></if></else></if>
			<decl_stmt><decl><type><name pos:line="96" pos:column="25">bool</name></type> <name pos:line="96" pos:column="30">isDirty</name> <init pos:line="96" pos:column="38">= <expr><name><name pos:line="96" pos:column="40">notification</name><op:operator pos:line="96" pos:column="52">-&gt;</op:operator><name pos:line="96" pos:column="54">nmhdr</name><op:operator pos:line="96" pos:column="59">.</op:operator><name pos:line="96" pos:column="60">code</name></name> <op:operator pos:line="96" pos:column="65">==</op:operator> <name pos:line="96" pos:column="68">SCN_SAVEPOINTLEFT</name></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="97" pos:column="25">buf</name><op:operator pos:line="97" pos:column="28">-&gt;</op:operator><name pos:line="97" pos:column="30">setDirty</name></name><argument_list pos:line="97" pos:column="38">(<argument><expr><name pos:line="97" pos:column="39">isDirty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="98" pos:column="25">break;</break> 
		}</block>

		</case><case pos:line="101" pos:column="17">case  <expr><name pos:line="101" pos:column="23">SCN_MODIFYATTEMPTRO</name></expr> :
			<comment type="line" pos:line="102" pos:column="25">// on fout rien</comment>
			<break pos:line="103" pos:column="25">break;</break>

		</case><case pos:line="105" pos:column="17">case <expr><name pos:line="105" pos:column="22">SCN_KEY</name></expr>:
			<break pos:line="106" pos:column="25">break;</break>

	</case><case pos:line="108" pos:column="9">case <expr><name pos:line="108" pos:column="14">TCN_TABDROPPEDOUTSIDE</name></expr>:
	</case><case pos:line="109" pos:column="9">case <expr><name pos:line="109" pos:column="14">TCN_TABDROPPED</name></expr>:
	<block pos:line="110" pos:column="9">{
        <decl_stmt><decl><type><name pos:line="111" pos:column="9">TabBarPlus</name> <type:modifier pos:line="111" pos:column="20">*</type:modifier></type><name pos:line="111" pos:column="21">sender</name> <init pos:line="111" pos:column="28">= <expr><call><name><name pos:line="111" pos:column="30">reinterpret_cast</name><argument_list pos:line="111" pos:column="46">&lt;<argument><expr><name pos:line="111" pos:column="47">TabBarPlus</name> <op:operator pos:line="111" pos:column="58">*</op:operator></expr></argument>&gt;</argument_list></name><argument_list pos:line="111" pos:column="60">(<argument><expr><name><name pos:line="111" pos:column="61">notification</name><op:operator pos:line="111" pos:column="73">-&gt;</op:operator><name pos:line="111" pos:column="75">nmhdr</name><op:operator pos:line="111" pos:column="80">.</op:operator><name pos:line="111" pos:column="81">idFrom</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt><decl><type><name pos:line="112" pos:column="9">bool</name></type> <name pos:line="112" pos:column="14">isInCtrlStat</name> <init pos:line="112" pos:column="27">= <expr><op:operator pos:line="112" pos:column="29">(</op:operator><call><name><op:operator pos:line="112" pos:column="30">::</op:operator><name pos:line="112" pos:column="32">GetKeyState</name></name><argument_list pos:line="112" pos:column="43">(<argument><expr><name pos:line="112" pos:column="44">VK_LCONTROL</name></expr></argument>)</argument_list></call> <op:operator pos:line="112" pos:column="57">&amp;</op:operator> <lit:literal type="number" pos:line="112" pos:column="59">0x80000000</lit:literal><op:operator pos:line="112" pos:column="69">)</op:operator> <op:operator pos:line="112" pos:column="71">!=</op:operator> <lit:literal type="number" pos:line="112" pos:column="74">0</lit:literal></expr></init></decl>;</decl_stmt>
        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><name><name pos:line="113" pos:column="13">notification</name><op:operator pos:line="113" pos:column="25">-&gt;</op:operator><name pos:line="113" pos:column="27">nmhdr</name><op:operator pos:line="113" pos:column="32">.</op:operator><name pos:line="113" pos:column="33">code</name></name> <op:operator pos:line="113" pos:column="38">==</op:operator> <name pos:line="113" pos:column="41">TCN_TABDROPPEDOUTSIDE</name></expr>)</condition><then pos:line="113" pos:column="63">
        <block pos:line="114" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="115" pos:column="13">POINT</name></type> <name pos:line="115" pos:column="19">p</name> <init pos:line="115" pos:column="21">= <expr><call><name><name pos:line="115" pos:column="23">sender</name><op:operator pos:line="115" pos:column="29">-&gt;</op:operator><name pos:line="115" pos:column="31">getDraggingPoint</name></name><argument_list pos:line="115" pos:column="47">()</argument_list></call></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:line="117" pos:column="25">//It's the coordinate of screen, so we can call </comment>
			<comment type="line" pos:line="118" pos:column="25">//"WindowFromPoint" function without converting the point</comment>
            <decl_stmt><decl><type><name pos:line="119" pos:column="13">HWND</name></type> <name pos:line="119" pos:column="18">hWin</name> <init pos:line="119" pos:column="23">= <expr><call><name><op:operator pos:line="119" pos:column="25">::</op:operator><name pos:line="119" pos:column="27">WindowFromPoint</name></name><argument_list pos:line="119" pos:column="42">(<argument><expr><name pos:line="119" pos:column="43">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<if pos:line="120" pos:column="25">if <condition pos:line="120" pos:column="28">(<expr><name pos:line="120" pos:column="29">hWin</name> <op:operator pos:line="120" pos:column="34">==</op:operator> <call><name><name pos:line="120" pos:column="37">_pEditView</name><op:operator pos:line="120" pos:column="47">-&gt;</op:operator><name pos:line="120" pos:column="49">getHSelf</name></name><argument_list pos:line="120" pos:column="57">()</argument_list></call></expr>)</condition><then pos:line="120" pos:column="60"> <comment type="line" pos:line="120" pos:column="61">// In the same view group</comment>
			<block pos:line="121" pos:column="25">{
				<if pos:line="122" pos:column="33">if <condition pos:line="122" pos:column="36">(<expr><op:operator pos:line="122" pos:column="37">!</op:operator><call><name><name pos:line="122" pos:column="38">_tabPopupDropMenu</name><op:operator pos:line="122" pos:column="55">.</op:operator><name pos:line="122" pos:column="56">isCreated</name></name><argument_list pos:line="122" pos:column="65">()</argument_list></call></expr>)</condition><then pos:line="122" pos:column="68">
				<block pos:line="123" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="124" pos:column="41">TCHAR</name></type> <name><name pos:line="124" pos:column="47">goToView</name><index pos:line="124" pos:column="55">[<expr><lit:literal type="number" pos:line="124" pos:column="56">32</lit:literal></expr>]</index></name> <init pos:line="124" pos:column="60">= <expr><call><name pos:line="124" pos:column="62">TEXT</name><argument_list pos:line="124" pos:column="66">(<argument><expr><lit:literal type="string" pos:line="124" pos:column="67">"Move to other view"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="125" pos:column="41">TCHAR</name></type> <name><name pos:line="125" pos:column="47">cloneToView</name><index pos:line="125" pos:column="58">[<expr><lit:literal type="number" pos:line="125" pos:column="59">32</lit:literal></expr>]</index></name> <init pos:line="125" pos:column="63">= <expr><call><name pos:line="125" pos:column="65">TEXT</name><argument_list pos:line="125" pos:column="69">(<argument><expr><lit:literal type="string" pos:line="125" pos:column="70">"Clone to other View"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name><name pos:line="126" pos:column="41">vector</name><argument_list pos:line="126" pos:column="47">&lt;<argument><expr><name pos:line="126" pos:column="48">MenuItemUnit</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="126" pos:column="62">itemUnitArray</name></decl>;</decl_stmt>
					<expr_stmt><expr><call><name><name pos:line="127" pos:column="41">itemUnitArray</name><op:operator pos:line="127" pos:column="54">.</op:operator><name pos:line="127" pos:column="55">push_back</name></name><argument_list pos:line="127" pos:column="64">(<argument><expr><call><name pos:line="127" pos:column="65">MenuItemUnit</name><argument_list pos:line="127" pos:column="77">(<argument><expr><name pos:line="127" pos:column="78">IDM_VIEW_GOTO_ANOTHER_VIEW</name></expr></argument>, <argument><expr><name pos:line="127" pos:column="106">goToView</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="128" pos:column="41">itemUnitArray</name><op:operator pos:line="128" pos:column="54">.</op:operator><name pos:line="128" pos:column="55">push_back</name></name><argument_list pos:line="128" pos:column="64">(<argument><expr><call><name pos:line="128" pos:column="65">MenuItemUnit</name><argument_list pos:line="128" pos:column="77">(<argument><expr><name pos:line="128" pos:column="78">IDM_VIEW_CLONE_TO_ANOTHER_VIEW</name></expr></argument>, <argument><expr><name pos:line="128" pos:column="110">cloneToView</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="129" pos:column="41">_tabPopupDropMenu</name><op:operator pos:line="129" pos:column="58">.</op:operator><name pos:line="129" pos:column="59">create</name></name><argument_list pos:line="129" pos:column="65">(<argument><expr><call><name><name pos:line="129" pos:column="66">_pPublicInterface</name><op:operator pos:line="129" pos:column="83">-&gt;</op:operator><name pos:line="129" pos:column="85">getHSelf</name></name><argument_list pos:line="129" pos:column="93">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="129" pos:column="97">itemUnitArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name><name pos:line="130" pos:column="41">_nativeLangSpeaker</name><op:operator pos:line="130" pos:column="59">.</op:operator><name pos:line="130" pos:column="60">changeLangTabDrapContextMenu</name></name><argument_list pos:line="130" pos:column="88">(<argument><expr><call><name><name pos:line="130" pos:column="89">_tabPopupDropMenu</name><op:operator pos:line="130" pos:column="106">.</op:operator><name pos:line="130" pos:column="107">getMenuHandle</name></name><argument_list pos:line="130" pos:column="120">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				}</block></then></if>
				<expr_stmt><expr><call><name><name pos:line="132" pos:column="33">_tabPopupDropMenu</name><op:operator pos:line="132" pos:column="50">.</op:operator><name pos:line="132" pos:column="51">display</name></name><argument_list pos:line="132" pos:column="58">(<argument><expr><name pos:line="132" pos:column="59">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then>
			<else pos:line="134" pos:column="25">else <if pos:line="134" pos:column="30">if <condition pos:line="134" pos:column="33">(<expr><op:operator pos:line="134" pos:column="34">(</op:operator><name pos:line="134" pos:column="35">hWin</name> <op:operator pos:line="134" pos:column="40">==</op:operator> <call><name><name pos:line="134" pos:column="43">_pNonDocTab</name><op:operator pos:line="134" pos:column="54">-&gt;</op:operator><name pos:line="134" pos:column="56">getHSelf</name></name><argument_list pos:line="134" pos:column="64">()</argument_list></call><op:operator pos:line="134" pos:column="66">)</op:operator> <op:operator pos:line="134" pos:column="68">||</op:operator> 
				     <op:operator pos:line="135" pos:column="38">(</op:operator><name pos:line="135" pos:column="39">hWin</name> <op:operator pos:line="135" pos:column="44">==</op:operator> <call><name><name pos:line="135" pos:column="47">_pNonEditView</name><op:operator pos:line="135" pos:column="60">-&gt;</op:operator><name pos:line="135" pos:column="62">getHSelf</name></name><argument_list pos:line="135" pos:column="70">()</argument_list></call><op:operator pos:line="135" pos:column="72">)</op:operator></expr>)</condition><then pos:line="135" pos:column="74"> <comment type="line" pos:line="135" pos:column="75">// In the another view group</comment>
			<block pos:line="136" pos:column="25">{
                <expr_stmt><expr><call><name pos:line="137" pos:column="17">docGotoAnotherEditView</name><argument_list pos:line="137" pos:column="39">(<argument><expr><name pos:line="137" pos:column="40">isInCtrlStat</name><op:operator pos:line="137" pos:column="52">?</op:operator><name pos:line="137" pos:column="53">TransferClone</name><op:operator pos:line="137" pos:column="66">:</op:operator><name pos:line="137" pos:column="67">TransferMove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then><comment type="block" pos:line="138" pos:column="26">/*
			else if ((hWin == _pProjectPanel_1-&gt;getTreeHandle()))
			{
				
                //printStr(TEXT("IN!!!"));
			}*/</comment>
			<else pos:line="144" pos:column="25">else
			<block pos:line="145" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="146" pos:column="33">RECT</name></type> <name pos:line="146" pos:column="38">nppZone</name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="147" pos:column="33">::</op:operator><name pos:line="147" pos:column="35">GetWindowRect</name></name><argument_list pos:line="147" pos:column="48">(<argument><expr><call><name><name pos:line="147" pos:column="49">_pPublicInterface</name><op:operator pos:line="147" pos:column="66">-&gt;</op:operator><name pos:line="147" pos:column="68">getHSelf</name></name><argument_list pos:line="147" pos:column="76">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="147" pos:column="80">&amp;</op:operator><name pos:line="147" pos:column="81">nppZone</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="148" pos:column="33">bool</name></type> <name pos:line="148" pos:column="38">isInNppZone</name> <init pos:line="148" pos:column="50">= <expr><op:operator pos:line="148" pos:column="52">(</op:operator><op:operator pos:line="148" pos:column="53">(</op:operator><op:operator pos:line="148" pos:column="54">(</op:operator><name><name pos:line="148" pos:column="55">p</name><op:operator pos:line="148" pos:column="56">.</op:operator><name pos:line="148" pos:column="57">x</name></name> <op:operator pos:line="148" pos:column="59">&gt;=</op:operator> <name><name pos:line="148" pos:column="62">nppZone</name><op:operator pos:line="148" pos:column="69">.</op:operator><name pos:line="148" pos:column="70">left</name></name><op:operator pos:line="148" pos:column="74">)</op:operator> <op:operator pos:line="148" pos:column="76">&amp;&amp;</op:operator> <op:operator pos:line="148" pos:column="79">(</op:operator><name><name pos:line="148" pos:column="80">p</name><op:operator pos:line="148" pos:column="81">.</op:operator><name pos:line="148" pos:column="82">x</name></name> <op:operator pos:line="148" pos:column="84">&lt;=</op:operator> <name><name pos:line="148" pos:column="87">nppZone</name><op:operator pos:line="148" pos:column="94">.</op:operator><name pos:line="148" pos:column="95">right</name></name><op:operator pos:line="148" pos:column="100">)</op:operator><op:operator pos:line="148" pos:column="101">)</op:operator> <op:operator pos:line="148" pos:column="103">&amp;&amp;</op:operator> <op:operator pos:line="148" pos:column="106">(</op:operator><name><name pos:line="148" pos:column="107">p</name><op:operator pos:line="148" pos:column="108">.</op:operator><name pos:line="148" pos:column="109">y</name></name> <op:operator pos:line="148" pos:column="111">&gt;=</op:operator> <name><name pos:line="148" pos:column="114">nppZone</name><op:operator pos:line="148" pos:column="121">.</op:operator><name pos:line="148" pos:column="122">top</name></name><op:operator pos:line="148" pos:column="125">)</op:operator> <op:operator pos:line="148" pos:column="127">&amp;&amp;</op:operator> <op:operator pos:line="148" pos:column="130">(</op:operator><name><name pos:line="148" pos:column="131">p</name><op:operator pos:line="148" pos:column="132">.</op:operator><name pos:line="148" pos:column="133">y</name></name> <op:operator pos:line="148" pos:column="135">&lt;=</op:operator> <name><name pos:line="148" pos:column="138">nppZone</name><op:operator pos:line="148" pos:column="145">.</op:operator><name pos:line="148" pos:column="146">bottom</name></name><op:operator pos:line="148" pos:column="152">)</op:operator><op:operator pos:line="148" pos:column="153">)</op:operator></expr></init></decl>;</decl_stmt>
				<if pos:line="149" pos:column="33">if <condition pos:line="149" pos:column="36">(<expr><name pos:line="149" pos:column="37">isInNppZone</name></expr>)</condition><then pos:line="149" pos:column="49">
				<block pos:line="150" pos:column="33">{
					<comment type="line" pos:line="151" pos:column="41">// Do nothing</comment>
					<return pos:line="152" pos:column="41">return <expr><name pos:line="152" pos:column="48">TRUE</name></expr>;</return>
				}</block></then></if>
				<decl_stmt><decl><type><name pos:line="154" pos:column="33">generic_string</name></type> <name pos:line="154" pos:column="48">quotFileName</name> <init pos:line="154" pos:column="61">= <expr><call><name pos:line="154" pos:column="63">TEXT</name><argument_list pos:line="154" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="154" pos:column="68">"\""</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="155" pos:column="33">quotFileName</name> <op:operator pos:line="155" pos:column="46">+=</op:operator> <call><name><name pos:line="155" pos:column="49">_pEditView</name><op:operator pos:line="155" pos:column="59">-&gt;</op:operator><name pos:line="155" pos:column="61">getCurrentBuffer</name></name><argument_list pos:line="155" pos:column="77">()</argument_list></call><op:operator pos:line="155" pos:column="79">-&gt;</op:operator><call><name pos:line="155" pos:column="81">getFullPathName</name><argument_list pos:line="155" pos:column="96">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name pos:line="156" pos:column="33">quotFileName</name> <op:operator pos:line="156" pos:column="46">+=</op:operator> <call><name pos:line="156" pos:column="49">TEXT</name><argument_list pos:line="156" pos:column="53">(<argument><expr><lit:literal type="string" pos:line="156" pos:column="54">"\""</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<decl_stmt><decl><type><name pos:line="157" pos:column="33">COPYDATASTRUCT</name></type> <name pos:line="157" pos:column="48">fileNamesData</name></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="158" pos:column="33">fileNamesData</name><op:operator pos:line="158" pos:column="46">.</op:operator><name pos:line="158" pos:column="47">dwData</name></name> <op:operator pos:line="158" pos:column="54">=</op:operator> <name pos:line="158" pos:column="56">COPYDATA_FILENAMES</name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="159" pos:column="33">fileNamesData</name><op:operator pos:line="159" pos:column="46">.</op:operator><name pos:line="159" pos:column="47">lpData</name></name> <op:operator pos:line="159" pos:column="54">=</op:operator> <op:operator pos:line="159" pos:column="56">(</op:operator><name pos:line="159" pos:column="57">void</name> <op:operator pos:line="159" pos:column="62">*</op:operator><op:operator pos:line="159" pos:column="63">)</op:operator><call><name><name pos:line="159" pos:column="64">quotFileName</name><op:operator pos:line="159" pos:column="76">.</op:operator><name pos:line="159" pos:column="77">c_str</name></name><argument_list pos:line="159" pos:column="82">()</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="160" pos:column="33">fileNamesData</name><op:operator pos:line="160" pos:column="46">.</op:operator><name pos:line="160" pos:column="47">cbData</name></name> <op:operator pos:line="160" pos:column="54">=</op:operator> <call><name pos:line="160" pos:column="56">long</name><argument_list pos:line="160" pos:column="60">(<argument><expr><call><name><name pos:line="160" pos:column="61">quotFileName</name><op:operator pos:line="160" pos:column="73">.</op:operator><name pos:line="160" pos:column="74">length</name></name><argument_list pos:line="160" pos:column="80">()</argument_list></call> <op:operator pos:line="160" pos:column="83">+</op:operator> <lit:literal type="number" pos:line="160" pos:column="85">1</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="160" pos:column="87">*</op:operator><op:operator pos:line="160" pos:column="88">(</op:operator><sizeof pos:line="160" pos:column="89">sizeof<argument_list pos:line="160" pos:column="95">(<argument><expr><name pos:line="160" pos:column="96">TCHAR</name></expr></argument>)</argument_list></sizeof><op:operator pos:line="160" pos:column="102">)</op:operator></expr>;</expr_stmt>

				<decl_stmt><decl><type><name pos:line="162" pos:column="33">HWND</name></type> <name pos:line="162" pos:column="38">hWinParent</name> <init pos:line="162" pos:column="49">= <expr><call><name><op:operator pos:line="162" pos:column="51">::</op:operator><name pos:line="162" pos:column="53">GetParent</name></name><argument_list pos:line="162" pos:column="62">(<argument><expr><name pos:line="162" pos:column="63">hWin</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="163" pos:column="33">TCHAR</name></type> <name><name pos:line="163" pos:column="39">className</name><index pos:line="163" pos:column="48">[<expr><name pos:line="163" pos:column="49">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><op:operator pos:line="164" pos:column="33">::</op:operator><name pos:line="164" pos:column="35">GetClassName</name></name><argument_list pos:line="164" pos:column="47">(<argument><expr><name pos:line="164" pos:column="48">hWinParent</name></expr></argument>,<argument><expr><name pos:line="164" pos:column="59">className</name></expr></argument>, <argument><expr><sizeof pos:line="164" pos:column="70">sizeof<argument_list pos:line="164" pos:column="76">(<argument><expr><name pos:line="164" pos:column="77">className</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="165" pos:column="33">if <condition pos:line="165" pos:column="36">(<expr><call><name pos:line="165" pos:column="37">lstrcmp</name><argument_list pos:line="165" pos:column="44">(<argument><expr><name pos:line="165" pos:column="45">className</name></expr></argument>, <argument><expr><call><name><name pos:line="165" pos:column="56">_pPublicInterface</name><op:operator pos:line="165" pos:column="73">-&gt;</op:operator><name pos:line="165" pos:column="75">getClassName</name></name><argument_list pos:line="165" pos:column="87">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="165" pos:column="91">==</op:operator> <lit:literal type="number" pos:line="165" pos:column="94">0</lit:literal> <op:operator pos:line="165" pos:column="96">&amp;&amp;</op:operator> <name pos:line="165" pos:column="99">hWinParent</name> <op:operator pos:line="165" pos:column="110">!=</op:operator> <call><name><name pos:line="165" pos:column="113">_pPublicInterface</name><op:operator pos:line="165" pos:column="130">-&gt;</op:operator><name pos:line="165" pos:column="132">getHSelf</name></name><argument_list pos:line="165" pos:column="140">()</argument_list></call></expr>)</condition><then pos:line="165" pos:column="143"> <comment type="line" pos:line="165" pos:column="144">// another Notepad++</comment>
				<block pos:line="166" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="167" pos:column="41">int</name></type> <name pos:line="167" pos:column="45">index</name> <init pos:line="167" pos:column="51">= <expr><call><name><name pos:line="167" pos:column="53">_pDocTab</name><op:operator pos:line="167" pos:column="61">-&gt;</op:operator><name pos:line="167" pos:column="63">getCurrentTabIndex</name></name><argument_list pos:line="167" pos:column="81">()</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="168" pos:column="41">BufferID</name></type> <name pos:line="168" pos:column="50">bufferToClose</name> <init pos:line="168" pos:column="64">= <expr><call><name><name pos:line="168" pos:column="66">notifyDocTab</name><op:operator pos:line="168" pos:column="78">-&gt;</op:operator><name pos:line="168" pos:column="80">getBufferByIndex</name></name><argument_list pos:line="168" pos:column="96">(<argument><expr><name pos:line="168" pos:column="97">index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="169" pos:column="41">Buffer</name> <type:modifier pos:line="169" pos:column="48">*</type:modifier></type> <name pos:line="169" pos:column="50">buf</name> <init pos:line="169" pos:column="54">= <expr><call><name><name pos:line="169" pos:column="56">MainFileManager</name><op:operator pos:line="169" pos:column="71">-&gt;</op:operator><name pos:line="169" pos:column="73">getBufferByID</name></name><argument_list pos:line="169" pos:column="86">(<argument><expr><name pos:line="169" pos:column="87">bufferToClose</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="170" pos:column="41">int</name></type> <name pos:line="170" pos:column="45">iView</name> <init pos:line="170" pos:column="51">= <expr><name pos:line="170" pos:column="53">isFromPrimary</name><op:operator pos:line="170" pos:column="66">?</op:operator><name pos:line="170" pos:column="67">MAIN_VIEW</name><op:operator pos:line="170" pos:column="76">:</op:operator><name pos:line="170" pos:column="77">SUB_VIEW</name></expr></init></decl>;</decl_stmt>
					<if pos:line="171" pos:column="41">if <condition pos:line="171" pos:column="44">(<expr><call><name><name pos:line="171" pos:column="45">buf</name><op:operator pos:line="171" pos:column="48">-&gt;</op:operator><name pos:line="171" pos:column="50">isDirty</name></name><argument_list pos:line="171" pos:column="57">()</argument_list></call></expr>)</condition><then pos:line="171" pos:column="60"> 
					<block pos:line="172" pos:column="41">{
						<decl_stmt><decl><type><name pos:line="173" pos:column="49">generic_string</name></type> <name pos:line="173" pos:column="64">msg</name></decl><op:operator pos:line="173" pos:column="67">,</op:operator> <decl><type ref="prev"/><name pos:line="173" pos:column="69">title</name></decl>;</decl_stmt>
						<expr_stmt><expr><call><name><name pos:line="174" pos:column="49">_nativeLangSpeaker</name><op:operator pos:line="174" pos:column="67">.</op:operator><name pos:line="174" pos:column="68">messageBox</name></name><argument_list pos:line="174" pos:column="78">(<argument><expr><lit:literal type="string" pos:line="174" pos:column="79">"CannotMoveDoc"</lit:literal></expr></argument>,
							<argument><expr><call><name><name pos:line="175" pos:column="57">_pPublicInterface</name><op:operator pos:line="175" pos:column="74">-&gt;</op:operator><name pos:line="175" pos:column="76">getHSelf</name></name><argument_list pos:line="175" pos:column="84">()</argument_list></call></expr></argument>,
							<argument><expr><call><name pos:line="176" pos:column="57">TEXT</name><argument_list pos:line="176" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="176" pos:column="62">"Document is modified, save it then try again."</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
							<argument><expr><call><name pos:line="177" pos:column="57">TEXT</name><argument_list pos:line="177" pos:column="61">(<argument><expr><lit:literal type="string" pos:line="177" pos:column="62">"Move to new Notepad++ Instance"</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
							<argument><expr><name pos:line="178" pos:column="57">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					}</block></then>
					<else pos:line="180" pos:column="41">else
					<block pos:line="181" pos:column="41">{
						<expr_stmt><expr><call><name><op:operator pos:line="182" pos:column="49">::</op:operator><name pos:line="182" pos:column="51">SendMessage</name></name><argument_list pos:line="182" pos:column="62">(<argument><expr><name pos:line="182" pos:column="63">hWinParent</name></expr></argument>, <argument><expr><name pos:line="182" pos:column="75">NPPM_INTERNAL_SWITCHVIEWFROMHWND</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="182" pos:column="109">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="182" pos:column="112">(</op:operator><name pos:line="182" pos:column="113">LPARAM</name><op:operator pos:line="182" pos:column="119">)</op:operator><name pos:line="182" pos:column="120">hWin</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<expr_stmt><expr><call><name><op:operator pos:line="183" pos:column="49">::</op:operator><name pos:line="183" pos:column="51">SendMessage</name></name><argument_list pos:line="183" pos:column="62">(<argument><expr><name pos:line="183" pos:column="63">hWinParent</name></expr></argument>, <argument><expr><name pos:line="183" pos:column="75">WM_COPYDATA</name></expr></argument>, <argument><expr><op:operator pos:line="183" pos:column="88">(</op:operator><name pos:line="183" pos:column="89">WPARAM</name><op:operator pos:line="183" pos:column="95">)</op:operator><call><name><name pos:line="183" pos:column="96">_pPublicInterface</name><op:operator pos:line="183" pos:column="113">-&gt;</op:operator><name pos:line="183" pos:column="115">getHinst</name></name><argument_list pos:line="183" pos:column="123">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="183" pos:column="127">(</op:operator><name pos:line="183" pos:column="128">LPARAM</name><op:operator pos:line="183" pos:column="134">)</op:operator><op:operator pos:line="183" pos:column="135">&amp;</op:operator><name pos:line="183" pos:column="136">fileNamesData</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                        <if pos:line="184" pos:column="25">if <condition pos:line="184" pos:column="28">(<expr><op:operator pos:line="184" pos:column="29">!</op:operator><name pos:line="184" pos:column="30">isInCtrlStat</name></expr>)</condition><then pos:line="184" pos:column="43">
						<block pos:line="185" pos:column="49">{
							<expr_stmt><expr><call><name pos:line="186" pos:column="57">fileClose</name><argument_list pos:line="186" pos:column="66">(<argument><expr><name pos:line="186" pos:column="67">bufferToClose</name></expr></argument>, <argument><expr><name pos:line="186" pos:column="82">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
							<if pos:line="187" pos:column="57">if <condition pos:line="187" pos:column="60">(<expr><call><name pos:line="187" pos:column="61">noOpenedDoc</name><argument_list pos:line="187" pos:column="72">()</argument_list></call></expr>)</condition><then pos:line="187" pos:column="75">
								<expr_stmt><expr><call><name><op:operator pos:line="188" pos:column="65">::</op:operator><name pos:line="188" pos:column="67">SendMessage</name></name><argument_list pos:line="188" pos:column="78">(<argument><expr><call><name><name pos:line="188" pos:column="79">_pPublicInterface</name><op:operator pos:line="188" pos:column="96">-&gt;</op:operator><name pos:line="188" pos:column="98">getHSelf</name></name><argument_list pos:line="188" pos:column="106">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="188" pos:column="110">WM_CLOSE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="188" pos:column="120">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="188" pos:column="123">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
						}</block></then></if>
					}</block></else></if>
				}</block></then>
                <else pos:line="192" pos:column="17">else <comment type="line" pos:line="192" pos:column="22">// Not Notepad++, we open it here</comment>
                <block pos:line="193" pos:column="17">{
					<expr_stmt><expr><call><name pos:line="194" pos:column="41">docOpenInNewInstance</name><argument_list pos:line="194" pos:column="61">(<argument><expr><name pos:line="194" pos:column="62">isInCtrlStat</name><op:operator pos:line="194" pos:column="74">?</op:operator><name pos:line="194" pos:column="75">TransferClone</name><op:operator pos:line="194" pos:column="88">:</op:operator><name pos:line="194" pos:column="89">TransferMove</name></expr></argument>, <argument><expr><name><name pos:line="194" pos:column="103">p</name><op:operator pos:line="194" pos:column="104">.</op:operator><name pos:line="194" pos:column="105">x</name></name></expr></argument>, <argument><expr><name><name pos:line="194" pos:column="108">p</name><op:operator pos:line="194" pos:column="109">.</op:operator><name pos:line="194" pos:column="110">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                }</block></else></if>
			}</block></else></if></else></if>
        }</block></then></if>
		<comment type="line" pos:line="198" pos:column="17">//break;</comment>
		<expr_stmt><expr><call><name><name pos:line="199" pos:column="17">sender</name><op:operator pos:line="199" pos:column="23">-&gt;</op:operator><name pos:line="199" pos:column="25">resetDraggingPoint</name></name><argument_list pos:line="199" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<return pos:line="200" pos:column="17">return <expr><name pos:line="200" pos:column="24">TRUE</name></expr>;</return>
	}</block>

	</case><case pos:line="203" pos:column="9">case <expr><name pos:line="203" pos:column="14">TCN_TABDELETE</name></expr>:
	<block pos:line="204" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="205" pos:column="17">int</name></type> <name pos:line="205" pos:column="21">index</name> <init pos:line="205" pos:column="27">= <expr><name><name pos:line="205" pos:column="29">tabNotification</name><op:operator pos:line="205" pos:column="44">-&gt;</op:operator><name pos:line="205" pos:column="46">tabOrigin</name></name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="206" pos:column="17">BufferID</name></type> <name pos:line="206" pos:column="26">bufferToClose</name> <init pos:line="206" pos:column="40">= <expr><call><name><name pos:line="206" pos:column="42">notifyDocTab</name><op:operator pos:line="206" pos:column="54">-&gt;</op:operator><name pos:line="206" pos:column="56">getBufferByIndex</name></name><argument_list pos:line="206" pos:column="72">(<argument><expr><name pos:line="206" pos:column="73">index</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="207" pos:column="17">Buffer</name> <type:modifier pos:line="207" pos:column="24">*</type:modifier></type> <name pos:line="207" pos:column="26">buf</name> <init pos:line="207" pos:column="30">= <expr><call><name><name pos:line="207" pos:column="32">MainFileManager</name><op:operator pos:line="207" pos:column="47">-&gt;</op:operator><name pos:line="207" pos:column="49">getBufferByID</name></name><argument_list pos:line="207" pos:column="62">(<argument><expr><name pos:line="207" pos:column="63">bufferToClose</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="208" pos:column="17">int</name></type> <name pos:line="208" pos:column="21">iView</name> <init pos:line="208" pos:column="27">= <expr><name pos:line="208" pos:column="29">isFromPrimary</name><op:operator pos:line="208" pos:column="42">?</op:operator><name pos:line="208" pos:column="43">MAIN_VIEW</name><op:operator pos:line="208" pos:column="52">:</op:operator><name pos:line="208" pos:column="53">SUB_VIEW</name></expr></init></decl>;</decl_stmt>
		<if pos:line="209" pos:column="17">if <condition pos:line="209" pos:column="20">(<expr><call><name><name pos:line="209" pos:column="21">buf</name><op:operator pos:line="209" pos:column="24">-&gt;</op:operator><name pos:line="209" pos:column="26">isDirty</name></name><argument_list pos:line="209" pos:column="33">()</argument_list></call></expr>)</condition><then pos:line="209" pos:column="36"> <block pos:line="209" pos:column="37">{	<comment type="line" pos:line="209" pos:column="41">//activate and use fileClose() (for save and abort)</comment>
			<expr_stmt><expr><call><name pos:line="210" pos:column="25">activateBuffer</name><argument_list pos:line="210" pos:column="39">(<argument><expr><name pos:line="210" pos:column="40">bufferToClose</name></expr></argument>, <argument><expr><name pos:line="210" pos:column="55">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="211" pos:column="25">fileClose</name><argument_list pos:line="211" pos:column="34">(<argument><expr><name pos:line="211" pos:column="35">bufferToClose</name></expr></argument>, <argument><expr><name pos:line="211" pos:column="50">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<break pos:line="212" pos:column="25">break;</break>
		}</block></then></if>
		<decl_stmt><decl><type><name pos:line="214" pos:column="17">int</name></type> <name pos:line="214" pos:column="21">open</name> <init pos:line="214" pos:column="26">= <expr><lit:literal type="number" pos:line="214" pos:column="28">1</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="215" pos:column="17">if <condition pos:line="215" pos:column="20">(<expr><name pos:line="215" pos:column="21">isFromPrimary</name> <op:operator pos:line="215" pos:column="35">||</op:operator> <name pos:line="215" pos:column="38">isFromSecondary</name></expr>)</condition><then pos:line="215" pos:column="54">
			<expr_stmt><expr><name pos:line="216" pos:column="25">open</name> <op:operator pos:line="216" pos:column="30">=</op:operator> <call><name><name pos:line="216" pos:column="32">notifyDocTab</name><op:operator pos:line="216" pos:column="44">-&gt;</op:operator><name pos:line="216" pos:column="46">nbItem</name></name><argument_list pos:line="216" pos:column="52">()</argument_list></call></expr>;</expr_stmt></then></if>
		<expr_stmt><expr><call><name pos:line="217" pos:column="17">doClose</name><argument_list pos:line="217" pos:column="24">(<argument><expr><name pos:line="217" pos:column="25">bufferToClose</name></expr></argument>, <argument><expr><name pos:line="217" pos:column="40">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<comment type="line" pos:line="218" pos:column="17">//if (open == 1 &amp;&amp; canHideView(iView))</comment>
		<comment type="line" pos:line="219" pos:column="17">//	hideView(iView);</comment>
		<break pos:line="220" pos:column="17">break;</break>

	}</block>

	</case><case pos:line="224" pos:column="9">case <expr><name pos:line="224" pos:column="14">TCN_SELCHANGE</name></expr>:
	<block pos:line="225" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="226" pos:column="17">int</name></type> <name pos:line="226" pos:column="21">iView</name> <init pos:line="226" pos:column="27">= <expr><op:operator pos:line="226" pos:column="29">-</op:operator><lit:literal type="number" pos:line="226" pos:column="30">1</lit:literal></expr></init></decl>;</decl_stmt>
        <if pos:line="227" pos:column="9">if <condition pos:line="227" pos:column="12">(<expr><name><name pos:line="227" pos:column="13">notification</name><op:operator pos:line="227" pos:column="25">-&gt;</op:operator><name pos:line="227" pos:column="27">nmhdr</name><op:operator pos:line="227" pos:column="32">.</op:operator><name pos:line="227" pos:column="33">hwndFrom</name></name> <op:operator pos:line="227" pos:column="42">==</op:operator> <call><name><name pos:line="227" pos:column="45">_mainDocTab</name><op:operator pos:line="227" pos:column="56">.</op:operator><name pos:line="227" pos:column="57">getHSelf</name></name><argument_list pos:line="227" pos:column="65">()</argument_list></call></expr>)</condition><then pos:line="227" pos:column="68">
		<block pos:line="228" pos:column="17">{
			<expr_stmt><expr><name pos:line="229" pos:column="25">iView</name> <op:operator pos:line="229" pos:column="31">=</op:operator> <name pos:line="229" pos:column="33">MAIN_VIEW</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="231" pos:column="17">else <if pos:line="231" pos:column="22">if <condition pos:line="231" pos:column="25">(<expr><name><name pos:line="231" pos:column="26">notification</name><op:operator pos:line="231" pos:column="38">-&gt;</op:operator><name pos:line="231" pos:column="40">nmhdr</name><op:operator pos:line="231" pos:column="45">.</op:operator><name pos:line="231" pos:column="46">hwndFrom</name></name> <op:operator pos:line="231" pos:column="55">==</op:operator> <call><name><name pos:line="231" pos:column="58">_subDocTab</name><op:operator pos:line="231" pos:column="68">.</op:operator><name pos:line="231" pos:column="69">getHSelf</name></name><argument_list pos:line="231" pos:column="77">()</argument_list></call></expr>)</condition><then pos:line="231" pos:column="80">
		<block pos:line="232" pos:column="17">{
			<expr_stmt><expr><name pos:line="233" pos:column="25">iView</name> <op:operator pos:line="233" pos:column="31">=</op:operator> <name pos:line="233" pos:column="33">SUB_VIEW</name></expr>;</expr_stmt>
		}</block></then>
		<else pos:line="235" pos:column="17">else
		<block pos:line="236" pos:column="17">{
			<break pos:line="237" pos:column="25">break;</break>
		}</block></else></if></else></if>

		<expr_stmt><expr><call><name pos:line="240" pos:column="17">switchEditViewTo</name><argument_list pos:line="240" pos:column="33">(<argument><expr><name pos:line="240" pos:column="34">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="241" pos:column="17">BufferID</name></type> <name pos:line="241" pos:column="26">bufid</name> <init pos:line="241" pos:column="32">= <expr><call><name><name pos:line="241" pos:column="34">_pDocTab</name><op:operator pos:line="241" pos:column="42">-&gt;</op:operator><name pos:line="241" pos:column="44">getBufferByIndex</name></name><argument_list pos:line="241" pos:column="60">(<argument><expr><call><name><name pos:line="241" pos:column="61">_pDocTab</name><op:operator pos:line="241" pos:column="69">-&gt;</op:operator><name pos:line="241" pos:column="71">getCurrentTabIndex</name></name><argument_list pos:line="241" pos:column="89">()</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="242" pos:column="17">if <condition pos:line="242" pos:column="20">(<expr><name pos:line="242" pos:column="21">bufid</name> <op:operator pos:line="242" pos:column="27">!=</op:operator> <name pos:line="242" pos:column="30">BUFFER_INVALID</name></expr>)</condition><then pos:line="242" pos:column="45">
			<expr_stmt><expr><call><name pos:line="243" pos:column="25">activateBuffer</name><argument_list pos:line="243" pos:column="39">(<argument><expr><name pos:line="243" pos:column="40">bufid</name></expr></argument>, <argument><expr><name pos:line="243" pos:column="47">iView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		
		<break pos:line="245" pos:column="17">break;</break>
	}</block>

	</case><case pos:line="248" pos:column="9">case <expr><name pos:line="248" pos:column="14">NM_CLICK</name></expr> :
    <block pos:line="249" pos:column="5">{        
		<if pos:line="250" pos:column="17">if <condition pos:line="250" pos:column="20">(<expr><name><name pos:line="250" pos:column="21">notification</name><op:operator pos:line="250" pos:column="33">-&gt;</op:operator><name pos:line="250" pos:column="35">nmhdr</name><op:operator pos:line="250" pos:column="40">.</op:operator><name pos:line="250" pos:column="41">hwndFrom</name></name> <op:operator pos:line="250" pos:column="50">==</op:operator> <call><name><name pos:line="250" pos:column="53">_statusBar</name><op:operator pos:line="250" pos:column="63">.</op:operator><name pos:line="250" pos:column="64">getHSelf</name></name><argument_list pos:line="250" pos:column="72">()</argument_list></call></expr>)</condition><then pos:line="250" pos:column="75">
        <block pos:line="251" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="252" pos:column="13">LPNMMOUSE</name></type> <name pos:line="252" pos:column="23">lpnm</name> <init pos:line="252" pos:column="28">= <expr><op:operator pos:line="252" pos:column="30">(</op:operator><name pos:line="252" pos:column="31">LPNMMOUSE</name><op:operator pos:line="252" pos:column="40">)</op:operator><name pos:line="252" pos:column="41">notification</name></expr></init></decl>;</decl_stmt>
			<if pos:line="253" pos:column="25">if <condition pos:line="253" pos:column="28">(<expr><name><name pos:line="253" pos:column="29">lpnm</name><op:operator pos:line="253" pos:column="33">-&gt;</op:operator><name pos:line="253" pos:column="35">dwItemSpec</name></name> <op:operator pos:line="253" pos:column="46">==</op:operator> <call><name pos:line="253" pos:column="49">DWORD</name><argument_list pos:line="253" pos:column="54">(<argument><expr><name pos:line="253" pos:column="55">STATUSBAR_TYPING_MODE</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="253" pos:column="78">
			<block pos:line="254" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="255" pos:column="33">bool</name></type> <name pos:line="255" pos:column="38">isOverTypeMode</name> <init pos:line="255" pos:column="53">= <expr><op:operator pos:line="255" pos:column="55">(</op:operator><call><name><name pos:line="255" pos:column="56">_pEditView</name><op:operator pos:line="255" pos:column="66">-&gt;</op:operator><name pos:line="255" pos:column="68">execute</name></name><argument_list pos:line="255" pos:column="75">(<argument><expr><name pos:line="255" pos:column="76">SCI_GETOVERTYPE</name></expr></argument>)</argument_list></call> <op:operator pos:line="255" pos:column="93">!=</op:operator> <lit:literal type="number" pos:line="255" pos:column="96">0</lit:literal><op:operator pos:line="255" pos:column="97">)</op:operator></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><call><name><name pos:line="256" pos:column="33">_pEditView</name><op:operator pos:line="256" pos:column="43">-&gt;</op:operator><name pos:line="256" pos:column="45">execute</name></name><argument_list pos:line="256" pos:column="52">(<argument><expr><name pos:line="256" pos:column="53">SCI_SETOVERTYPE</name></expr></argument>, <argument><expr><op:operator pos:line="256" pos:column="70">!</op:operator><name pos:line="256" pos:column="71">isOverTypeMode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="257" pos:column="33">_statusBar</name><op:operator pos:line="257" pos:column="43">.</op:operator><name pos:line="257" pos:column="44">setText</name></name><argument_list pos:line="257" pos:column="51">(<argument><expr><op:operator pos:line="257" pos:column="52">(</op:operator><call><name><name pos:line="257" pos:column="53">_pEditView</name><op:operator pos:line="257" pos:column="63">-&gt;</op:operator><name pos:line="257" pos:column="65">execute</name></name><argument_list pos:line="257" pos:column="72">(<argument><expr><name pos:line="257" pos:column="73">SCI_GETOVERTYPE</name></expr></argument>)</argument_list></call><op:operator pos:line="257" pos:column="89">)</op:operator><op:operator pos:line="257" pos:column="90">?</op:operator><call><name pos:line="257" pos:column="91">TEXT</name><argument_list pos:line="257" pos:column="95">(<argument><expr><lit:literal type="string" pos:line="257" pos:column="96">"OVR"</lit:literal></expr></argument>)</argument_list></call><op:operator pos:line="257" pos:column="102">:</op:operator><call><name pos:line="257" pos:column="103">TEXT</name><argument_list pos:line="257" pos:column="107">(<argument><expr><lit:literal type="string" pos:line="257" pos:column="108">"INS"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="257" pos:column="116">STATUSBAR_TYPING_MODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if>
        }</block></then>
		<else pos:line="260" pos:column="17">else <if pos:line="260" pos:column="22">if <condition pos:line="260" pos:column="25">(<expr><name><name pos:line="260" pos:column="26">notification</name><op:operator pos:line="260" pos:column="38">-&gt;</op:operator><name pos:line="260" pos:column="40">nmhdr</name><op:operator pos:line="260" pos:column="45">.</op:operator><name pos:line="260" pos:column="46">hwndFrom</name></name> <op:operator pos:line="260" pos:column="55">==</op:operator> <call><name><name pos:line="260" pos:column="58">_mainDocTab</name><op:operator pos:line="260" pos:column="69">.</op:operator><name pos:line="260" pos:column="70">getHSelf</name></name><argument_list pos:line="260" pos:column="78">()</argument_list></call></expr>)</condition><then pos:line="260" pos:column="81">
		<block pos:line="261" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="262" pos:column="13">switchEditViewTo</name><argument_list pos:line="262" pos:column="29">(<argument><expr><name pos:line="262" pos:column="30">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
        <else pos:line="264" pos:column="9">else <if pos:line="264" pos:column="14">if <condition pos:line="264" pos:column="17">(<expr><name><name pos:line="264" pos:column="18">notification</name><op:operator pos:line="264" pos:column="30">-&gt;</op:operator><name pos:line="264" pos:column="32">nmhdr</name><op:operator pos:line="264" pos:column="37">.</op:operator><name pos:line="264" pos:column="38">hwndFrom</name></name> <op:operator pos:line="264" pos:column="47">==</op:operator> <call><name><name pos:line="264" pos:column="50">_subDocTab</name><op:operator pos:line="264" pos:column="60">.</op:operator><name pos:line="264" pos:column="61">getHSelf</name></name><argument_list pos:line="264" pos:column="69">()</argument_list></call></expr>)</condition><then pos:line="264" pos:column="72">
        <block pos:line="265" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="266" pos:column="13">switchEditViewTo</name><argument_list pos:line="266" pos:column="29">(<argument><expr><name pos:line="266" pos:column="30">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then></if></else></if></else></if>

		<break pos:line="269" pos:column="17">break;</break>
	}</block>

	</case><case pos:line="272" pos:column="9">case <expr><name pos:line="272" pos:column="14">NM_DBLCLK</name></expr> :
    <block pos:line="273" pos:column="5">{        
		<if pos:line="274" pos:column="17">if <condition pos:line="274" pos:column="20">(<expr><name><name pos:line="274" pos:column="21">notification</name><op:operator pos:line="274" pos:column="33">-&gt;</op:operator><name pos:line="274" pos:column="35">nmhdr</name><op:operator pos:line="274" pos:column="40">.</op:operator><name pos:line="274" pos:column="41">hwndFrom</name></name> <op:operator pos:line="274" pos:column="50">==</op:operator> <call><name><name pos:line="274" pos:column="53">_statusBar</name><op:operator pos:line="274" pos:column="63">.</op:operator><name pos:line="274" pos:column="64">getHSelf</name></name><argument_list pos:line="274" pos:column="72">()</argument_list></call></expr>)</condition><then pos:line="274" pos:column="75">
        <block pos:line="275" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="276" pos:column="13">LPNMMOUSE</name></type> <name pos:line="276" pos:column="23">lpnm</name> <init pos:line="276" pos:column="28">= <expr><op:operator pos:line="276" pos:column="30">(</op:operator><name pos:line="276" pos:column="31">LPNMMOUSE</name><op:operator pos:line="276" pos:column="40">)</op:operator><name pos:line="276" pos:column="41">notification</name></expr></init></decl>;</decl_stmt>
			<if pos:line="277" pos:column="25">if <condition pos:line="277" pos:column="28">(<expr><name><name pos:line="277" pos:column="29">lpnm</name><op:operator pos:line="277" pos:column="33">-&gt;</op:operator><name pos:line="277" pos:column="35">dwItemSpec</name></name> <op:operator pos:line="277" pos:column="46">==</op:operator> <call><name pos:line="277" pos:column="49">DWORD</name><argument_list pos:line="277" pos:column="54">(<argument><expr><name pos:line="277" pos:column="55">STATUSBAR_CUR_POS</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="277" pos:column="74">
			<block pos:line="278" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="279" pos:column="33">bool</name></type> <name pos:line="279" pos:column="38">isFirstTime</name> <init pos:line="279" pos:column="50">= <expr><op:operator pos:line="279" pos:column="52">!</op:operator><call><name><name pos:line="279" pos:column="53">_goToLineDlg</name><op:operator pos:line="279" pos:column="65">.</op:operator><name pos:line="279" pos:column="66">isCreated</name></name><argument_list pos:line="279" pos:column="75">()</argument_list></call></expr></init></decl>;</decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="280" pos:column="17">_goToLineDlg</name><op:operator pos:line="280" pos:column="29">.</op:operator><name pos:line="280" pos:column="30">doDialog</name></name><argument_list pos:line="280" pos:column="38">(<argument><expr><call><name><name pos:line="280" pos:column="39">_nativeLangSpeaker</name><op:operator pos:line="280" pos:column="57">.</op:operator><name pos:line="280" pos:column="58">isRTL</name></name><argument_list pos:line="280" pos:column="63">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="281" pos:column="33">if <condition pos:line="281" pos:column="36">(<expr><name pos:line="281" pos:column="37">isFirstTime</name></expr>)</condition><then pos:line="281" pos:column="49">
                    <expr_stmt><expr><call><name><name pos:line="282" pos:column="21">_nativeLangSpeaker</name><op:operator pos:line="282" pos:column="39">.</op:operator><name pos:line="282" pos:column="40">changeDlgLang</name></name><argument_list pos:line="282" pos:column="53">(<argument><expr><call><name><name pos:line="282" pos:column="54">_goToLineDlg</name><op:operator pos:line="282" pos:column="66">.</op:operator><name pos:line="282" pos:column="67">getHSelf</name></name><argument_list pos:line="282" pos:column="75">()</argument_list></call></expr></argument>, <argument><expr><lit:literal type="string" pos:line="282" pos:column="79">"GoToLine"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></then>
            <else pos:line="284" pos:column="13">else <if pos:line="284" pos:column="18">if <condition pos:line="284" pos:column="21">(<expr><name><name pos:line="284" pos:column="22">lpnm</name><op:operator pos:line="284" pos:column="26">-&gt;</op:operator><name pos:line="284" pos:column="28">dwItemSpec</name></name> <op:operator pos:line="284" pos:column="39">==</op:operator> <call><name pos:line="284" pos:column="42">DWORD</name><argument_list pos:line="284" pos:column="47">(<argument><expr><name pos:line="284" pos:column="48">STATUSBAR_DOC_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="284" pos:column="68">
			<block pos:line="285" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="286" pos:column="33">command</name><argument_list pos:line="286" pos:column="40">(<argument><expr><name pos:line="286" pos:column="41">IDM_VIEW_SUMMARY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			}</block></then></if></else></if>
        }</block></then></if>
		<break pos:line="289" pos:column="17">break;</break>
	}</block>

    </case><case pos:line="292" pos:column="5">case <expr><name pos:line="292" pos:column="10">NM_RCLICK</name></expr> :
    <block pos:line="293" pos:column="5">{
		<if pos:line="294" pos:column="17">if <condition pos:line="294" pos:column="20">(<expr><name><name pos:line="294" pos:column="21">notification</name><op:operator pos:line="294" pos:column="33">-&gt;</op:operator><name pos:line="294" pos:column="35">nmhdr</name><op:operator pos:line="294" pos:column="40">.</op:operator><name pos:line="294" pos:column="41">hwndFrom</name></name> <op:operator pos:line="294" pos:column="50">==</op:operator> <call><name><name pos:line="294" pos:column="53">_mainDocTab</name><op:operator pos:line="294" pos:column="64">.</op:operator><name pos:line="294" pos:column="65">getHSelf</name></name><argument_list pos:line="294" pos:column="73">()</argument_list></call></expr>)</condition><then pos:line="294" pos:column="76">
		<block pos:line="295" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="296" pos:column="13">switchEditViewTo</name><argument_list pos:line="296" pos:column="29">(<argument><expr><name pos:line="296" pos:column="30">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then>
        <else pos:line="298" pos:column="9">else <if pos:line="298" pos:column="14">if <condition pos:line="298" pos:column="17">(<expr><name><name pos:line="298" pos:column="18">notification</name><op:operator pos:line="298" pos:column="30">-&gt;</op:operator><name pos:line="298" pos:column="32">nmhdr</name><op:operator pos:line="298" pos:column="37">.</op:operator><name pos:line="298" pos:column="38">hwndFrom</name></name> <op:operator pos:line="298" pos:column="47">==</op:operator> <call><name><name pos:line="298" pos:column="50">_subDocTab</name><op:operator pos:line="298" pos:column="60">.</op:operator><name pos:line="298" pos:column="61">getHSelf</name></name><argument_list pos:line="298" pos:column="69">()</argument_list></call></expr>)</condition><then pos:line="298" pos:column="72">
        <block pos:line="299" pos:column="9">{
            <expr_stmt><expr><call><name pos:line="300" pos:column="13">switchEditViewTo</name><argument_list pos:line="300" pos:column="29">(<argument><expr><name pos:line="300" pos:column="30">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        }</block></then>
		<else pos:line="302" pos:column="17">else <if pos:line="302" pos:column="22">if <condition pos:line="302" pos:column="25">(<expr><name pos:line="302" pos:column="26">_pFileSwitcherPanel</name> <op:operator pos:line="302" pos:column="46">&amp;&amp;</op:operator> <name><name pos:line="302" pos:column="49">notification</name><op:operator pos:line="302" pos:column="61">-&gt;</op:operator><name pos:line="302" pos:column="63">nmhdr</name><op:operator pos:line="302" pos:column="68">.</op:operator><name pos:line="302" pos:column="69">hwndFrom</name></name> <op:operator pos:line="302" pos:column="78">==</op:operator> <call><name><name pos:line="302" pos:column="81">_pFileSwitcherPanel</name><op:operator pos:line="302" pos:column="100">-&gt;</op:operator><name pos:line="302" pos:column="102">getHSelf</name></name><argument_list pos:line="302" pos:column="110">()</argument_list></call></expr>)</condition><then pos:line="302" pos:column="113">
        <block pos:line="303" pos:column="9">{
			<comment type="line" pos:line="304" pos:column="25">// Already switched, so do nothing here.</comment>
		}</block></then>
		<else pos:line="306" pos:column="17">else <comment type="line" pos:line="306" pos:column="22">// From tool bar or Status Bar</comment>
			<return pos:line="307" pos:column="25">return <expr><name pos:line="307" pos:column="32">TRUE</name></expr>;</return></else></if></else></if></else></if>
			<comment type="line" pos:line="308" pos:column="25">//break;</comment>
        
		<decl_stmt><decl><type><name pos:line="310" pos:column="17">POINT</name></type> <name pos:line="310" pos:column="23">p</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="311" pos:column="17">::</op:operator><name pos:line="311" pos:column="19">GetCursorPos</name></name><argument_list pos:line="311" pos:column="31">(<argument><expr><op:operator pos:line="311" pos:column="32">&amp;</op:operator><name pos:line="311" pos:column="33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<if pos:line="313" pos:column="17">if <condition pos:line="313" pos:column="20">(<expr><op:operator pos:line="313" pos:column="21">!</op:operator><call><name><name pos:line="313" pos:column="22">_tabPopupMenu</name><op:operator pos:line="313" pos:column="35">.</op:operator><name pos:line="313" pos:column="36">isCreated</name></name><argument_list pos:line="313" pos:column="45">()</argument_list></call></expr>)</condition><then pos:line="313" pos:column="48">
		<block pos:line="314" pos:column="17">{
			<decl_stmt><decl><type><name><name pos:line="315" pos:column="25">vector</name><argument_list pos:line="315" pos:column="31">&lt;<argument><expr><name pos:line="315" pos:column="32">MenuItemUnit</name></expr></argument>&gt;</argument_list></name></type> <name pos:line="315" pos:column="46">itemUnitArray</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="316" pos:column="25">itemUnitArray</name><op:operator pos:line="316" pos:column="38">.</op:operator><name pos:line="316" pos:column="39">push_back</name></name><argument_list pos:line="316" pos:column="48">(<argument><expr><call><name pos:line="316" pos:column="49">MenuItemUnit</name><argument_list pos:line="316" pos:column="61">(<argument><expr><name pos:line="316" pos:column="62">IDM_FILE_CLOSE</name></expr></argument>, <argument><expr><call><name pos:line="316" pos:column="78">TEXT</name><argument_list pos:line="316" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="316" pos:column="83">"Close"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="317" pos:column="25">itemUnitArray</name><op:operator pos:line="317" pos:column="38">.</op:operator><name pos:line="317" pos:column="39">push_back</name></name><argument_list pos:line="317" pos:column="48">(<argument><expr><call><name pos:line="317" pos:column="49">MenuItemUnit</name><argument_list pos:line="317" pos:column="61">(<argument><expr><name pos:line="317" pos:column="62">IDM_FILE_CLOSEALL_BUT_CURRENT</name></expr></argument>, <argument><expr><call><name pos:line="317" pos:column="93">TEXT</name><argument_list pos:line="317" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="317" pos:column="98">"Close All BUT This"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="318" pos:column="25">itemUnitArray</name><op:operator pos:line="318" pos:column="38">.</op:operator><name pos:line="318" pos:column="39">push_back</name></name><argument_list pos:line="318" pos:column="48">(<argument><expr><call><name pos:line="318" pos:column="49">MenuItemUnit</name><argument_list pos:line="318" pos:column="61">(<argument><expr><name pos:line="318" pos:column="62">IDM_FILE_SAVE</name></expr></argument>, <argument><expr><call><name pos:line="318" pos:column="77">TEXT</name><argument_list pos:line="318" pos:column="81">(<argument><expr><lit:literal type="string" pos:line="318" pos:column="82">"Save"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="319" pos:column="25">itemUnitArray</name><op:operator pos:line="319" pos:column="38">.</op:operator><name pos:line="319" pos:column="39">push_back</name></name><argument_list pos:line="319" pos:column="48">(<argument><expr><call><name pos:line="319" pos:column="49">MenuItemUnit</name><argument_list pos:line="319" pos:column="61">(<argument><expr><name pos:line="319" pos:column="62">IDM_FILE_SAVEAS</name></expr></argument>, <argument><expr><call><name pos:line="319" pos:column="79">TEXT</name><argument_list pos:line="319" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="319" pos:column="84">"Save As..."</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="320" pos:column="25">itemUnitArray</name><op:operator pos:line="320" pos:column="38">.</op:operator><name pos:line="320" pos:column="39">push_back</name></name><argument_list pos:line="320" pos:column="48">(<argument><expr><call><name pos:line="320" pos:column="49">MenuItemUnit</name><argument_list pos:line="320" pos:column="61">(<argument><expr><name pos:line="320" pos:column="62">IDM_FILE_RENAME</name></expr></argument>, <argument><expr><call><name pos:line="320" pos:column="79">TEXT</name><argument_list pos:line="320" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="320" pos:column="84">"Rename"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="321" pos:column="25">itemUnitArray</name><op:operator pos:line="321" pos:column="38">.</op:operator><name pos:line="321" pos:column="39">push_back</name></name><argument_list pos:line="321" pos:column="48">(<argument><expr><call><name pos:line="321" pos:column="49">MenuItemUnit</name><argument_list pos:line="321" pos:column="61">(<argument><expr><name pos:line="321" pos:column="62">IDM_FILE_DELETE</name></expr></argument>, <argument><expr><call><name pos:line="321" pos:column="79">TEXT</name><argument_list pos:line="321" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="321" pos:column="84">"Move to Recycle Bin"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="322" pos:column="25">itemUnitArray</name><op:operator pos:line="322" pos:column="38">.</op:operator><name pos:line="322" pos:column="39">push_back</name></name><argument_list pos:line="322" pos:column="48">(<argument><expr><call><name pos:line="322" pos:column="49">MenuItemUnit</name><argument_list pos:line="322" pos:column="61">(<argument><expr><name pos:line="322" pos:column="62">IDM_FILE_RELOAD</name></expr></argument>, <argument><expr><call><name pos:line="322" pos:column="79">TEXT</name><argument_list pos:line="322" pos:column="83">(<argument><expr><lit:literal type="string" pos:line="322" pos:column="84">"Reload"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="323" pos:column="25">itemUnitArray</name><op:operator pos:line="323" pos:column="38">.</op:operator><name pos:line="323" pos:column="39">push_back</name></name><argument_list pos:line="323" pos:column="48">(<argument><expr><call><name pos:line="323" pos:column="49">MenuItemUnit</name><argument_list pos:line="323" pos:column="61">(<argument><expr><name pos:line="323" pos:column="62">IDM_FILE_PRINT</name></expr></argument>, <argument><expr><call><name pos:line="323" pos:column="78">TEXT</name><argument_list pos:line="323" pos:column="82">(<argument><expr><lit:literal type="string" pos:line="323" pos:column="83">"Print"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="324" pos:column="25">itemUnitArray</name><op:operator pos:line="324" pos:column="38">.</op:operator><name pos:line="324" pos:column="39">push_back</name></name><argument_list pos:line="324" pos:column="48">(<argument><expr><call><name pos:line="324" pos:column="49">MenuItemUnit</name><argument_list pos:line="324" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="324" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><name pos:line="324" pos:column="65">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="325" pos:column="25">itemUnitArray</name><op:operator pos:line="325" pos:column="38">.</op:operator><name pos:line="325" pos:column="39">push_back</name></name><argument_list pos:line="325" pos:column="48">(<argument><expr><call><name pos:line="325" pos:column="49">MenuItemUnit</name><argument_list pos:line="325" pos:column="61">(<argument><expr><name pos:line="325" pos:column="62">IDM_EDIT_SETREADONLY</name></expr></argument>, <argument><expr><call><name pos:line="325" pos:column="84">TEXT</name><argument_list pos:line="325" pos:column="88">(<argument><expr><lit:literal type="string" pos:line="325" pos:column="89">"Read-Only"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="326" pos:column="25">itemUnitArray</name><op:operator pos:line="326" pos:column="38">.</op:operator><name pos:line="326" pos:column="39">push_back</name></name><argument_list pos:line="326" pos:column="48">(<argument><expr><call><name pos:line="326" pos:column="49">MenuItemUnit</name><argument_list pos:line="326" pos:column="61">(<argument><expr><name pos:line="326" pos:column="62">IDM_EDIT_CLEARREADONLY</name></expr></argument>, <argument><expr><call><name pos:line="326" pos:column="86">TEXT</name><argument_list pos:line="326" pos:column="90">(<argument><expr><lit:literal type="string" pos:line="326" pos:column="91">"Clear Read-Only Flag"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="327" pos:column="25">itemUnitArray</name><op:operator pos:line="327" pos:column="38">.</op:operator><name pos:line="327" pos:column="39">push_back</name></name><argument_list pos:line="327" pos:column="48">(<argument><expr><call><name pos:line="327" pos:column="49">MenuItemUnit</name><argument_list pos:line="327" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="327" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><name pos:line="327" pos:column="65">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="328" pos:column="25">itemUnitArray</name><op:operator pos:line="328" pos:column="38">.</op:operator><name pos:line="328" pos:column="39">push_back</name></name><argument_list pos:line="328" pos:column="48">(<argument><expr><call><name pos:line="328" pos:column="49">MenuItemUnit</name><argument_list pos:line="328" pos:column="61">(<argument><expr><name pos:line="328" pos:column="62">IDM_EDIT_FULLPATHTOCLIP</name></expr></argument>,	<argument><expr><call><name pos:line="328" pos:column="89">TEXT</name><argument_list pos:line="328" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="328" pos:column="94">"Full File Path to Clipboard"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="329" pos:column="25">itemUnitArray</name><op:operator pos:line="329" pos:column="38">.</op:operator><name pos:line="329" pos:column="39">push_back</name></name><argument_list pos:line="329" pos:column="48">(<argument><expr><call><name pos:line="329" pos:column="49">MenuItemUnit</name><argument_list pos:line="329" pos:column="61">(<argument><expr><name pos:line="329" pos:column="62">IDM_EDIT_FILENAMETOCLIP</name></expr></argument>,   <argument><expr><call><name pos:line="329" pos:column="89">TEXT</name><argument_list pos:line="329" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="329" pos:column="94">"Filename to Clipboard"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="330" pos:column="25">itemUnitArray</name><op:operator pos:line="330" pos:column="38">.</op:operator><name pos:line="330" pos:column="39">push_back</name></name><argument_list pos:line="330" pos:column="48">(<argument><expr><call><name pos:line="330" pos:column="49">MenuItemUnit</name><argument_list pos:line="330" pos:column="61">(<argument><expr><name pos:line="330" pos:column="62">IDM_EDIT_CURRENTDIRTOCLIP</name></expr></argument>, <argument><expr><call><name pos:line="330" pos:column="89">TEXT</name><argument_list pos:line="330" pos:column="93">(<argument><expr><lit:literal type="string" pos:line="330" pos:column="94">"Current Dir. Path to Clipboard"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="331" pos:column="25">itemUnitArray</name><op:operator pos:line="331" pos:column="38">.</op:operator><name pos:line="331" pos:column="39">push_back</name></name><argument_list pos:line="331" pos:column="48">(<argument><expr><call><name pos:line="331" pos:column="49">MenuItemUnit</name><argument_list pos:line="331" pos:column="61">(<argument><expr><lit:literal type="number" pos:line="331" pos:column="62">0</lit:literal></expr></argument>, <argument><expr><name pos:line="331" pos:column="65">NULL</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="332" pos:column="25">itemUnitArray</name><op:operator pos:line="332" pos:column="38">.</op:operator><name pos:line="332" pos:column="39">push_back</name></name><argument_list pos:line="332" pos:column="48">(<argument><expr><call><name pos:line="332" pos:column="49">MenuItemUnit</name><argument_list pos:line="332" pos:column="61">(<argument><expr><name pos:line="332" pos:column="62">IDM_VIEW_GOTO_ANOTHER_VIEW</name></expr></argument>, <argument><expr><call><name pos:line="332" pos:column="90">TEXT</name><argument_list pos:line="332" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="332" pos:column="95">"Move to Other View"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="333" pos:column="25">itemUnitArray</name><op:operator pos:line="333" pos:column="38">.</op:operator><name pos:line="333" pos:column="39">push_back</name></name><argument_list pos:line="333" pos:column="48">(<argument><expr><call><name pos:line="333" pos:column="49">MenuItemUnit</name><argument_list pos:line="333" pos:column="61">(<argument><expr><name pos:line="333" pos:column="62">IDM_VIEW_CLONE_TO_ANOTHER_VIEW</name></expr></argument>, <argument><expr><call><name pos:line="333" pos:column="94">TEXT</name><argument_list pos:line="333" pos:column="98">(<argument><expr><lit:literal type="string" pos:line="333" pos:column="99">"Clone to Other View"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="334" pos:column="25">itemUnitArray</name><op:operator pos:line="334" pos:column="38">.</op:operator><name pos:line="334" pos:column="39">push_back</name></name><argument_list pos:line="334" pos:column="48">(<argument><expr><call><name pos:line="334" pos:column="49">MenuItemUnit</name><argument_list pos:line="334" pos:column="61">(<argument><expr><name pos:line="334" pos:column="62">IDM_VIEW_GOTO_NEW_INSTANCE</name></expr></argument>, <argument><expr><call><name pos:line="334" pos:column="90">TEXT</name><argument_list pos:line="334" pos:column="94">(<argument><expr><lit:literal type="string" pos:line="334" pos:column="95">"Move to New Instance"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="335" pos:column="25">itemUnitArray</name><op:operator pos:line="335" pos:column="38">.</op:operator><name pos:line="335" pos:column="39">push_back</name></name><argument_list pos:line="335" pos:column="48">(<argument><expr><call><name pos:line="335" pos:column="49">MenuItemUnit</name><argument_list pos:line="335" pos:column="61">(<argument><expr><name pos:line="335" pos:column="62">IDM_VIEW_LOAD_IN_NEW_INSTANCE</name></expr></argument>, <argument><expr><call><name pos:line="335" pos:column="93">TEXT</name><argument_list pos:line="335" pos:column="97">(<argument><expr><lit:literal type="string" pos:line="335" pos:column="98">"Open in New Instance"</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt><expr><call><name><name pos:line="337" pos:column="25">_tabPopupMenu</name><op:operator pos:line="337" pos:column="38">.</op:operator><name pos:line="337" pos:column="39">create</name></name><argument_list pos:line="337" pos:column="45">(<argument><expr><call><name><name pos:line="337" pos:column="46">_pPublicInterface</name><op:operator pos:line="337" pos:column="63">-&gt;</op:operator><name pos:line="337" pos:column="65">getHSelf</name></name><argument_list pos:line="337" pos:column="73">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="337" pos:column="77">itemUnitArray</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="338" pos:column="13">_nativeLangSpeaker</name><op:operator pos:line="338" pos:column="31">.</op:operator><name pos:line="338" pos:column="32">changeLangTabContextMenu</name></name><argument_list pos:line="338" pos:column="56">(<argument><expr><call><name><name pos:line="338" pos:column="57">_tabPopupMenu</name><op:operator pos:line="338" pos:column="70">.</op:operator><name pos:line="338" pos:column="71">getMenuHandle</name></name><argument_list pos:line="338" pos:column="84">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<decl_stmt><decl><type><name pos:line="341" pos:column="17">bool</name></type> <name pos:line="341" pos:column="22">isEnable</name> <init pos:line="341" pos:column="31">= <expr><op:operator pos:line="341" pos:column="33">(</op:operator><op:operator pos:line="341" pos:column="34">(</op:operator><call><name><op:operator pos:line="341" pos:column="35">::</op:operator><name pos:line="341" pos:column="37">GetMenuState</name></name><argument_list pos:line="341" pos:column="49">(<argument><expr><name pos:line="341" pos:column="50">_mainMenuHandle</name></expr></argument>, <argument><expr><name pos:line="341" pos:column="67">IDM_FILE_SAVE</name></expr></argument>, <argument><expr><name pos:line="341" pos:column="82">MF_BYCOMMAND</name></expr></argument>)</argument_list></call><op:operator pos:line="341" pos:column="95">&amp;</op:operator><name pos:line="341" pos:column="96">MF_DISABLED</name><op:operator pos:line="341" pos:column="107">)</op:operator> <op:operator pos:line="341" pos:column="109">==</op:operator> <lit:literal type="number" pos:line="341" pos:column="112">0</lit:literal><op:operator pos:line="341" pos:column="113">)</op:operator></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="342" pos:column="17">_tabPopupMenu</name><op:operator pos:line="342" pos:column="30">.</op:operator><name pos:line="342" pos:column="31">enableItem</name></name><argument_list pos:line="342" pos:column="41">(<argument><expr><name pos:line="342" pos:column="42">IDM_FILE_SAVE</name></expr></argument>, <argument><expr><name pos:line="342" pos:column="57">isEnable</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="344" pos:column="17">Buffer</name> <type:modifier pos:line="344" pos:column="24">*</type:modifier></type> <name pos:line="344" pos:column="26">buf</name> <init pos:line="344" pos:column="30">= <expr><call><name><name pos:line="344" pos:column="32">_pEditView</name><op:operator pos:line="344" pos:column="42">-&gt;</op:operator><name pos:line="344" pos:column="44">getCurrentBuffer</name></name><argument_list pos:line="344" pos:column="60">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="345" pos:column="17">bool</name></type> <name pos:line="345" pos:column="22">isUserReadOnly</name> <init pos:line="345" pos:column="37">= <expr><call><name><name pos:line="345" pos:column="39">buf</name><op:operator pos:line="345" pos:column="42">-&gt;</op:operator><name pos:line="345" pos:column="44">getUserReadOnly</name></name><argument_list pos:line="345" pos:column="59">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="346" pos:column="17">_tabPopupMenu</name><op:operator pos:line="346" pos:column="30">.</op:operator><name pos:line="346" pos:column="31">checkItem</name></name><argument_list pos:line="346" pos:column="40">(<argument><expr><name pos:line="346" pos:column="41">IDM_EDIT_SETREADONLY</name></expr></argument>, <argument><expr><name pos:line="346" pos:column="63">isUserReadOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="348" pos:column="17">bool</name></type> <name pos:line="348" pos:column="22">isSysReadOnly</name> <init pos:line="348" pos:column="36">= <expr><call><name><name pos:line="348" pos:column="38">buf</name><op:operator pos:line="348" pos:column="41">-&gt;</op:operator><name pos:line="348" pos:column="43">getFileReadOnly</name></name><argument_list pos:line="348" pos:column="58">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="349" pos:column="17">_tabPopupMenu</name><op:operator pos:line="349" pos:column="30">.</op:operator><name pos:line="349" pos:column="31">enableItem</name></name><argument_list pos:line="349" pos:column="41">(<argument><expr><name pos:line="349" pos:column="42">IDM_EDIT_SETREADONLY</name></expr></argument>, <argument><expr><op:operator pos:line="349" pos:column="64">!</op:operator><name pos:line="349" pos:column="65">isSysReadOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="350" pos:column="17">_tabPopupMenu</name><op:operator pos:line="350" pos:column="30">.</op:operator><name pos:line="350" pos:column="31">enableItem</name></name><argument_list pos:line="350" pos:column="41">(<argument><expr><name pos:line="350" pos:column="42">IDM_EDIT_CLEARREADONLY</name></expr></argument>, <argument><expr><name pos:line="350" pos:column="66">isSysReadOnly</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="352" pos:column="17">bool</name></type> <name pos:line="352" pos:column="22">isFileExisting</name> <init pos:line="352" pos:column="37">= <expr><call><name pos:line="352" pos:column="39">PathFileExists</name><argument_list pos:line="352" pos:column="53">(<argument><expr><call><name><name pos:line="352" pos:column="54">buf</name><op:operator pos:line="352" pos:column="57">-&gt;</op:operator><name pos:line="352" pos:column="59">getFullPathName</name></name><argument_list pos:line="352" pos:column="74">()</argument_list></call></expr></argument>)</argument_list></call> <op:operator pos:line="352" pos:column="78">!=</op:operator> <name pos:line="352" pos:column="81">FALSE</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="353" pos:column="17">_tabPopupMenu</name><op:operator pos:line="353" pos:column="30">.</op:operator><name pos:line="353" pos:column="31">enableItem</name></name><argument_list pos:line="353" pos:column="41">(<argument><expr><name pos:line="353" pos:column="42">IDM_FILE_DELETE</name></expr></argument>, <argument><expr><name pos:line="353" pos:column="59">isFileExisting</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="354" pos:column="17">_tabPopupMenu</name><op:operator pos:line="354" pos:column="30">.</op:operator><name pos:line="354" pos:column="31">enableItem</name></name><argument_list pos:line="354" pos:column="41">(<argument><expr><name pos:line="354" pos:column="42">IDM_FILE_RENAME</name></expr></argument>, <argument><expr><name pos:line="354" pos:column="59">isFileExisting</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="356" pos:column="17">bool</name></type> <name pos:line="356" pos:column="22">isDirty</name> <init pos:line="356" pos:column="30">= <expr><call><name><name pos:line="356" pos:column="32">buf</name><op:operator pos:line="356" pos:column="35">-&gt;</op:operator><name pos:line="356" pos:column="37">isDirty</name></name><argument_list pos:line="356" pos:column="44">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="357" pos:column="17">bool</name></type> <name pos:line="357" pos:column="22">isUntitled</name> <init pos:line="357" pos:column="33">= <expr><call><name><name pos:line="357" pos:column="35">buf</name><op:operator pos:line="357" pos:column="38">-&gt;</op:operator><name pos:line="357" pos:column="40">isUntitled</name></name><argument_list pos:line="357" pos:column="50">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="358" pos:column="17">_tabPopupMenu</name><op:operator pos:line="358" pos:column="30">.</op:operator><name pos:line="358" pos:column="31">enableItem</name></name><argument_list pos:line="358" pos:column="41">(<argument><expr><name pos:line="358" pos:column="42">IDM_VIEW_GOTO_NEW_INSTANCE</name></expr></argument>, <argument><expr><op:operator pos:line="358" pos:column="70">!</op:operator><op:operator pos:line="358" pos:column="71">(</op:operator><name pos:line="358" pos:column="72">isDirty</name><op:operator pos:line="358" pos:column="79">||</op:operator><name pos:line="358" pos:column="81">isUntitled</name><op:operator pos:line="358" pos:column="91">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="359" pos:column="17">_tabPopupMenu</name><op:operator pos:line="359" pos:column="30">.</op:operator><name pos:line="359" pos:column="31">enableItem</name></name><argument_list pos:line="359" pos:column="41">(<argument><expr><name pos:line="359" pos:column="42">IDM_VIEW_LOAD_IN_NEW_INSTANCE</name></expr></argument>, <argument><expr><op:operator pos:line="359" pos:column="73">!</op:operator><op:operator pos:line="359" pos:column="74">(</op:operator><name pos:line="359" pos:column="75">isDirty</name><op:operator pos:line="359" pos:column="82">||</op:operator><name pos:line="359" pos:column="84">isUntitled</name><op:operator pos:line="359" pos:column="94">)</op:operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt><expr><call><name><name pos:line="361" pos:column="17">_tabPopupMenu</name><op:operator pos:line="361" pos:column="30">.</op:operator><name pos:line="361" pos:column="31">display</name></name><argument_list pos:line="361" pos:column="38">(<argument><expr><name pos:line="361" pos:column="39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<return pos:line="362" pos:column="17">return <expr><name pos:line="362" pos:column="24">TRUE</name></expr>;</return>
    }</block>

    
	</case><case pos:line="366" pos:column="9">case <expr><name pos:line="366" pos:column="14">SCN_MARGINCLICK</name></expr>:
    <block pos:line="367" pos:column="5">{
        <if pos:line="368" pos:column="9">if <condition pos:line="368" pos:column="12">(<expr><name><name pos:line="368" pos:column="13">notification</name><op:operator pos:line="368" pos:column="25">-&gt;</op:operator><name pos:line="368" pos:column="27">nmhdr</name><op:operator pos:line="368" pos:column="32">.</op:operator><name pos:line="368" pos:column="33">hwndFrom</name></name> <op:operator pos:line="368" pos:column="42">==</op:operator> <call><name><name pos:line="368" pos:column="45">_mainEditView</name><op:operator pos:line="368" pos:column="58">.</op:operator><name pos:line="368" pos:column="59">getHSelf</name></name><argument_list pos:line="368" pos:column="67">()</argument_list></call></expr>)</condition><then pos:line="368" pos:column="70">
            <expr_stmt><expr><call><name pos:line="369" pos:column="13">switchEditViewTo</name><argument_list pos:line="369" pos:column="29">(<argument><expr><name pos:line="369" pos:column="30">MAIN_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then>
		<else pos:line="370" pos:column="17">else <if pos:line="370" pos:column="22">if <condition pos:line="370" pos:column="25">(<expr><name><name pos:line="370" pos:column="26">notification</name><op:operator pos:line="370" pos:column="38">-&gt;</op:operator><name pos:line="370" pos:column="40">nmhdr</name><op:operator pos:line="370" pos:column="45">.</op:operator><name pos:line="370" pos:column="46">hwndFrom</name></name> <op:operator pos:line="370" pos:column="55">==</op:operator> <call><name><name pos:line="370" pos:column="58">_subEditView</name><op:operator pos:line="370" pos:column="70">.</op:operator><name pos:line="370" pos:column="71">getHSelf</name></name><argument_list pos:line="370" pos:column="79">()</argument_list></call></expr>)</condition><then pos:line="370" pos:column="82">
            <expr_stmt><expr><call><name pos:line="371" pos:column="13">switchEditViewTo</name><argument_list pos:line="371" pos:column="29">(<argument><expr><name pos:line="371" pos:column="30">SUB_VIEW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></else></if>

        <decl_stmt><decl><type><name pos:line="373" pos:column="9">int</name></type> <name pos:line="373" pos:column="13">lineClick</name> <init pos:line="373" pos:column="23">= <expr><call><name pos:line="373" pos:column="25">int</name><argument_list pos:line="373" pos:column="28">(<argument><expr><call><name><name pos:line="373" pos:column="29">_pEditView</name><op:operator pos:line="373" pos:column="39">-&gt;</op:operator><name pos:line="373" pos:column="41">execute</name></name><argument_list pos:line="373" pos:column="48">(<argument><expr><name pos:line="373" pos:column="49">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name><name pos:line="373" pos:column="71">notification</name><op:operator pos:line="373" pos:column="83">-&gt;</op:operator><name pos:line="373" pos:column="85">position</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        
		<if pos:line="375" pos:column="17">if <condition pos:line="375" pos:column="20">(<expr><name><name pos:line="375" pos:column="21">notification</name><op:operator pos:line="375" pos:column="33">-&gt;</op:operator><name pos:line="375" pos:column="35">margin</name></name> <op:operator pos:line="375" pos:column="42">==</op:operator> <name><name pos:line="375" pos:column="45">ScintillaEditView</name><op:operator pos:line="375" pos:column="62">::</op:operator><name pos:line="375" pos:column="64">_SC_MARGE_FOLDER</name></name></expr>)</condition><then pos:line="375" pos:column="81">
        <block pos:line="376" pos:column="9">{
            <expr_stmt><expr><call><name><name pos:line="377" pos:column="13">_pEditView</name><op:operator pos:line="377" pos:column="23">-&gt;</op:operator><name pos:line="377" pos:column="25">marginClick</name></name><argument_list pos:line="377" pos:column="36">(<argument><expr><name><name pos:line="377" pos:column="37">notification</name><op:operator pos:line="377" pos:column="49">-&gt;</op:operator><name pos:line="377" pos:column="51">position</name></name></expr></argument>, <argument><expr><name><name pos:line="377" pos:column="61">notification</name><op:operator pos:line="377" pos:column="73">-&gt;</op:operator><name pos:line="377" pos:column="75">modifiers</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<if pos:line="378" pos:column="25">if <condition pos:line="378" pos:column="28">(<expr><name pos:line="378" pos:column="29">_pDocMap</name></expr>)</condition><then pos:line="378" pos:column="38">
				<expr_stmt><expr><call><name><name pos:line="379" pos:column="33">_pDocMap</name><op:operator pos:line="379" pos:column="41">-&gt;</op:operator><name pos:line="379" pos:column="43">fold</name></name><argument_list pos:line="379" pos:column="47">(<argument><expr><name pos:line="379" pos:column="48">lineClick</name></expr></argument>, <argument><expr><call><name><name pos:line="379" pos:column="59">_pEditView</name><op:operator pos:line="379" pos:column="69">-&gt;</op:operator><name pos:line="379" pos:column="71">isFolded</name></name><argument_list pos:line="379" pos:column="79">(<argument><expr><name pos:line="379" pos:column="80">lineClick</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></then>
        <else pos:line="381" pos:column="9">else <if pos:line="381" pos:column="14">if <condition pos:line="381" pos:column="17">(<expr><op:operator pos:line="381" pos:column="18">(</op:operator><name><name pos:line="381" pos:column="19">notification</name><op:operator pos:line="381" pos:column="31">-&gt;</op:operator><name pos:line="381" pos:column="33">margin</name></name> <op:operator pos:line="381" pos:column="40">==</op:operator> <name><name pos:line="381" pos:column="43">ScintillaEditView</name><op:operator pos:line="381" pos:column="60">::</op:operator><name pos:line="381" pos:column="62">_SC_MARGE_SYBOLE</name></name><op:operator pos:line="381" pos:column="78">)</op:operator> <op:operator pos:line="381" pos:column="80">&amp;&amp;</op:operator> <op:operator pos:line="381" pos:column="83">!</op:operator><name><name pos:line="381" pos:column="84">notification</name><op:operator pos:line="381" pos:column="96">-&gt;</op:operator><name pos:line="381" pos:column="98">modifiers</name></name></expr>)</condition><then pos:line="381" pos:column="108">
        <block pos:line="382" pos:column="9">{
			<if pos:line="383" pos:column="25">if <condition pos:line="383" pos:column="28">(<expr><op:operator pos:line="383" pos:column="29">!</op:operator><call><name><name pos:line="383" pos:column="30">_pEditView</name><op:operator pos:line="383" pos:column="40">-&gt;</op:operator><name pos:line="383" pos:column="42">markerMarginClick</name></name><argument_list pos:line="383" pos:column="59">(<argument><expr><name pos:line="383" pos:column="60">lineClick</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="383" pos:column="71">
				<expr_stmt><expr><call><name pos:line="384" pos:column="33">bookmarkToggle</name><argument_list pos:line="384" pos:column="47">(<argument><expr><name pos:line="384" pos:column="48">lineClick</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
        }</block></then></if></else></if>
		<break pos:line="386" pos:column="17">break;</break>
	}</block>

	</case><case pos:line="389" pos:column="9">case <expr><name pos:line="389" pos:column="14">SCN_FOLDINGSTATECHANGED</name></expr> :
	<block pos:line="390" pos:column="9">{
		<if pos:line="391" pos:column="17">if <condition pos:line="391" pos:column="20">(<expr><op:operator pos:line="391" pos:column="21">(</op:operator><name><name pos:line="391" pos:column="22">notification</name><op:operator pos:line="391" pos:column="34">-&gt;</op:operator><name pos:line="391" pos:column="36">nmhdr</name><op:operator pos:line="391" pos:column="41">.</op:operator><name pos:line="391" pos:column="42">hwndFrom</name></name> <op:operator pos:line="391" pos:column="51">==</op:operator> <call><name><name pos:line="391" pos:column="54">_mainEditView</name><op:operator pos:line="391" pos:column="67">.</op:operator><name pos:line="391" pos:column="68">getHSelf</name></name><argument_list pos:line="391" pos:column="76">()</argument_list></call><op:operator pos:line="391" pos:column="78">)</op:operator>
		<op:operator pos:line="392" pos:column="17">||</op:operator> <op:operator pos:line="392" pos:column="20">(</op:operator><name><name pos:line="392" pos:column="21">notification</name><op:operator pos:line="392" pos:column="33">-&gt;</op:operator><name pos:line="392" pos:column="35">nmhdr</name><op:operator pos:line="392" pos:column="40">.</op:operator><name pos:line="392" pos:column="41">hwndFrom</name></name> <op:operator pos:line="392" pos:column="50">==</op:operator> <call><name><name pos:line="392" pos:column="53">_subEditView</name><op:operator pos:line="392" pos:column="65">.</op:operator><name pos:line="392" pos:column="66">getHSelf</name></name><argument_list pos:line="392" pos:column="74">()</argument_list></call><op:operator pos:line="392" pos:column="76">)</op:operator></expr>)</condition><then pos:line="392" pos:column="78">
		<block pos:line="393" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="394" pos:column="25">int</name></type> <name pos:line="394" pos:column="29">lineClicked</name> <init pos:line="394" pos:column="41">= <expr><name><name pos:line="394" pos:column="43">notification</name><op:operator pos:line="394" pos:column="55">-&gt;</op:operator><name pos:line="394" pos:column="57">line</name></name></expr></init></decl>;</decl_stmt>
			
			<if pos:line="396" pos:column="25">if <condition pos:line="396" pos:column="28">(<expr><op:operator pos:line="396" pos:column="29">!</op:operator><name pos:line="396" pos:column="30">_isFolding</name></expr>)</condition><then pos:line="396" pos:column="41">
			<block pos:line="397" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="398" pos:column="33">int</name></type> <name pos:line="398" pos:column="37">urlAction</name> <init pos:line="398" pos:column="47">= <expr><op:operator pos:line="398" pos:column="49">(</op:operator><call><name><name pos:line="398" pos:column="50">NppParameters</name><op:operator pos:line="398" pos:column="63">::</op:operator><name pos:line="398" pos:column="65">getInstance</name></name><argument_list pos:line="398" pos:column="76">()</argument_list></call><op:operator pos:line="398" pos:column="78">)</op:operator><op:operator pos:line="398" pos:column="79">-&gt;</op:operator><call><name pos:line="398" pos:column="81">getNppGUI</name><argument_list pos:line="398" pos:column="90">()</argument_list></call><op:operator pos:line="398" pos:column="92">.</op:operator><name pos:line="398" pos:column="93">_styleURL</name></expr></init></decl>;</decl_stmt>
				<if pos:line="399" pos:column="33">if <condition pos:line="399" pos:column="36">(<expr><op:operator pos:line="399" pos:column="37">(</op:operator><name pos:line="399" pos:column="38">urlAction</name> <op:operator pos:line="399" pos:column="48">==</op:operator> <lit:literal type="number" pos:line="399" pos:column="51">1</lit:literal><op:operator pos:line="399" pos:column="52">)</op:operator> <op:operator pos:line="399" pos:column="54">||</op:operator> <op:operator pos:line="399" pos:column="57">(</op:operator><name pos:line="399" pos:column="58">urlAction</name> <op:operator pos:line="399" pos:column="68">==</op:operator> <lit:literal type="number" pos:line="399" pos:column="71">2</lit:literal><op:operator pos:line="399" pos:column="72">)</op:operator></expr>)</condition><then pos:line="399" pos:column="74">
					<expr_stmt><expr><call><name pos:line="400" pos:column="41">addHotSpot</name><argument_list pos:line="400" pos:column="51">()</argument_list></call></expr>;</expr_stmt></then></if>
			}</block></then></if>

			<if pos:line="403" pos:column="25">if <condition pos:line="403" pos:column="28">(<expr><name pos:line="403" pos:column="29">_pDocMap</name></expr>)</condition><then pos:line="403" pos:column="38">
				<expr_stmt><expr><call><name><name pos:line="404" pos:column="33">_pDocMap</name><op:operator pos:line="404" pos:column="41">-&gt;</op:operator><name pos:line="404" pos:column="43">fold</name></name><argument_list pos:line="404" pos:column="47">(<argument><expr><name pos:line="404" pos:column="48">lineClicked</name></expr></argument>, <argument><expr><call><name><name pos:line="404" pos:column="61">_pEditView</name><op:operator pos:line="404" pos:column="71">-&gt;</op:operator><name pos:line="404" pos:column="73">isFolded</name></name><argument_list pos:line="404" pos:column="81">(<argument><expr><name pos:line="404" pos:column="82">lineClicked</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		}</block></then></if>
		<return pos:line="406" pos:column="17">return <expr><name pos:line="406" pos:column="24">TRUE</name></expr>;</return>
	}</block>
	
	</case><case pos:line="409" pos:column="9">case <expr><name pos:line="409" pos:column="14">SCN_CHARADDED</name></expr>:
	<block pos:line="410" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="411" pos:column="17">bool</name></type> <name pos:line="411" pos:column="22">indentMaintain</name> <init pos:line="411" pos:column="37">= <expr><call><name><name pos:line="411" pos:column="39">NppParameters</name><op:operator pos:line="411" pos:column="52">::</op:operator><name pos:line="411" pos:column="54">getInstance</name></name><argument_list pos:line="411" pos:column="65">()</argument_list></call><op:operator pos:line="411" pos:column="67">-&gt;</op:operator><call><name pos:line="411" pos:column="69">getNppGUI</name><argument_list pos:line="411" pos:column="78">()</argument_list></call><op:operator pos:line="411" pos:column="80">.</op:operator><name pos:line="411" pos:column="81">_maitainIndent</name></expr></init></decl>;</decl_stmt>
		<if pos:line="412" pos:column="17">if <condition pos:line="412" pos:column="20">(<expr><name pos:line="412" pos:column="21">indentMaintain</name></expr>)</condition><then pos:line="412" pos:column="36">
			<expr_stmt><expr><call><name pos:line="413" pos:column="25">MaintainIndentation</name><argument_list pos:line="413" pos:column="44">(<argument><expr><call><name><name pos:line="413" pos:column="45">static_cast</name><argument_list pos:line="413" pos:column="56">&lt;<argument><expr><name pos:line="413" pos:column="57">TCHAR</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="413" pos:column="63">(<argument><expr><name><name pos:line="413" pos:column="64">notification</name><op:operator pos:line="413" pos:column="76">-&gt;</op:operator><name pos:line="413" pos:column="78">ch</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<decl_stmt><decl><type><name pos:line="414" pos:column="17">AutoCompletion</name> <type:modifier pos:line="414" pos:column="32">*</type:modifier></type> <name pos:line="414" pos:column="34">autoC</name> <init pos:line="414" pos:column="40">= <expr><name pos:line="414" pos:column="42">isFromPrimary</name><op:operator pos:line="414" pos:column="55">?</op:operator><op:operator pos:line="414" pos:column="56">&amp;</op:operator><name pos:line="414" pos:column="57">_autoCompleteMain</name><op:operator pos:line="414" pos:column="74">:</op:operator><op:operator pos:line="414" pos:column="75">&amp;</op:operator><name pos:line="414" pos:column="76">_autoCompleteSub</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="415" pos:column="17">autoC</name><op:operator pos:line="415" pos:column="22">-&gt;</op:operator><name pos:line="415" pos:column="24">update</name></name><argument_list pos:line="415" pos:column="30">(<argument><expr><name><name pos:line="415" pos:column="31">notification</name><op:operator pos:line="415" pos:column="43">-&gt;</op:operator><name pos:line="415" pos:column="45">ch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="416" pos:column="17">break;</break>
	}</block>

	</case><case pos:line="419" pos:column="9">case <expr><name pos:line="419" pos:column="14">SCN_DOUBLECLICK</name></expr> :
	<block pos:line="420" pos:column="9">{
		<if pos:line="421" pos:column="17">if <condition pos:line="421" pos:column="20">(<expr><name pos:line="421" pos:column="21">_isHotspotDblClicked</name></expr>)</condition><then pos:line="421" pos:column="42">
		<block pos:line="422" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="423" pos:column="25">int</name></type> <name pos:line="423" pos:column="29">pos</name> <init pos:line="423" pos:column="33">= <expr><call><name><name pos:line="423" pos:column="35">notifyView</name><op:operator pos:line="423" pos:column="45">-&gt;</op:operator><name pos:line="423" pos:column="47">execute</name></name><argument_list pos:line="423" pos:column="54">(<argument><expr><name pos:line="423" pos:column="55">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><name pos:line="424" pos:column="25">notifyView</name><op:operator pos:line="424" pos:column="35">-&gt;</op:operator><name pos:line="424" pos:column="37">execute</name></name><argument_list pos:line="424" pos:column="44">(<argument><expr><name pos:line="424" pos:column="45">SCI_SETCURRENTPOS</name></expr></argument>, <argument><expr><name pos:line="424" pos:column="64">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="425" pos:column="25">notifyView</name><op:operator pos:line="425" pos:column="35">-&gt;</op:operator><name pos:line="425" pos:column="37">execute</name></name><argument_list pos:line="425" pos:column="44">(<argument><expr><name pos:line="425" pos:column="45">SCI_SETANCHOR</name></expr></argument>, <argument><expr><name pos:line="425" pos:column="60">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="426" pos:column="25">_isHotspotDblClicked</name> <op:operator pos:line="426" pos:column="46">=</op:operator> <lit:literal type="boolean" pos:line="426" pos:column="48">false</lit:literal></expr>;</expr_stmt>
		}</block></then></if>
	}</block>
	<break pos:line="429" pos:column="9">break;</break>

	</case><case pos:line="431" pos:column="9">case <expr><name pos:line="431" pos:column="14">SCN_UPDATEUI</name></expr>:
	<block pos:line="432" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="433" pos:column="17">NppParameters</name> <type:modifier pos:line="433" pos:column="31">*</type:modifier></type><name pos:line="433" pos:column="32">nppParam</name> <init pos:line="433" pos:column="41">= <expr><call><name><name pos:line="433" pos:column="43">NppParameters</name><op:operator pos:line="433" pos:column="56">::</op:operator><name pos:line="433" pos:column="58">getInstance</name></name><argument_list pos:line="433" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<comment type="line" pos:line="435" pos:column="17">// if it's searching/replacing, then do nothing</comment>
		<if pos:line="436" pos:column="17">if <condition pos:line="436" pos:column="20">(<expr><name><name pos:line="436" pos:column="21">nppParam</name><op:operator pos:line="436" pos:column="29">-&gt;</op:operator><name pos:line="436" pos:column="31">_isFindReplacing</name></name></expr>)</condition><then pos:line="436" pos:column="48">
			<break pos:line="437" pos:column="25">break;</break></then></if>

		<if pos:line="439" pos:column="17">if <condition pos:line="439" pos:column="20">(<expr><name><name pos:line="439" pos:column="21">notification</name><op:operator pos:line="439" pos:column="33">-&gt;</op:operator><name pos:line="439" pos:column="35">nmhdr</name><op:operator pos:line="439" pos:column="40">.</op:operator><name pos:line="439" pos:column="41">hwndFrom</name></name> <op:operator pos:line="439" pos:column="50">!=</op:operator> <call><name><name pos:line="439" pos:column="53">_pEditView</name><op:operator pos:line="439" pos:column="63">-&gt;</op:operator><name pos:line="439" pos:column="65">getHSelf</name></name><argument_list pos:line="439" pos:column="73">()</argument_list></call></expr>)</condition><then pos:line="439" pos:column="76">
			<break pos:line="440" pos:column="25">break;</break></then></if>
		
        <expr_stmt><expr><call><name pos:line="442" pos:column="9">braceMatch</name><argument_list pos:line="442" pos:column="19">()</argument_list></call></expr>;</expr_stmt>

		<decl_stmt><decl><type><name pos:line="444" pos:column="17">NppGUI</name> <type:modifier pos:line="444" pos:column="24">&amp;</type:modifier></type> <name pos:line="444" pos:column="26">nppGui</name> <init pos:line="444" pos:column="33">= <expr><op:operator pos:line="444" pos:column="35">(</op:operator><name pos:line="444" pos:column="36">NppGUI</name> <op:operator pos:line="444" pos:column="43">&amp;</op:operator><op:operator pos:line="444" pos:column="44">)</op:operator><call><name><name pos:line="444" pos:column="45">nppParam</name><op:operator pos:line="444" pos:column="53">-&gt;</op:operator><name pos:line="444" pos:column="55">getNppGUI</name></name><argument_list pos:line="444" pos:column="64">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="446" pos:column="17">if <condition pos:line="446" pos:column="20">(<expr><name><name pos:line="446" pos:column="21">nppGui</name><op:operator pos:line="446" pos:column="27">.</op:operator><name pos:line="446" pos:column="28">_enableTagsMatchHilite</name></name></expr>)</condition><then pos:line="446" pos:column="51">
		<block pos:line="447" pos:column="17">{
			<function_decl><type><name pos:line="448" pos:column="25">XmlMatchedTagsHighlighter</name></type> <name pos:line="448" pos:column="51">xmlTagMatchHiliter</name><parameter_list pos:line="448" pos:column="69">(<param><decl><type><name pos:line="448" pos:column="70">_pEditView</name></type></decl></param>)</parameter_list>;</function_decl>
			<expr_stmt><expr><call><name><name pos:line="449" pos:column="25">xmlTagMatchHiliter</name><op:operator pos:line="449" pos:column="43">.</op:operator><name pos:line="449" pos:column="44">tagMatch</name></name><argument_list pos:line="449" pos:column="52">(<argument><expr><name><name pos:line="449" pos:column="53">nppGui</name><op:operator pos:line="449" pos:column="59">.</op:operator><name pos:line="449" pos:column="60">_enableTagAttrsHilite</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		
		<if pos:line="452" pos:column="17">if <condition pos:line="452" pos:column="20">(<expr><name><name pos:line="452" pos:column="21">nppGui</name><op:operator pos:line="452" pos:column="27">.</op:operator><name pos:line="452" pos:column="28">_enableSmartHilite</name></name></expr>)</condition><then pos:line="452" pos:column="47">
		<block pos:line="453" pos:column="17">{
			<if pos:line="454" pos:column="25">if <condition pos:line="454" pos:column="28">(<expr><name><name pos:line="454" pos:column="29">nppGui</name><op:operator pos:line="454" pos:column="35">.</op:operator><name pos:line="454" pos:column="36">_disableSmartHiliteTmp</name></name></expr>)</condition><then pos:line="454" pos:column="59">
				<expr_stmt><expr><name><name pos:line="455" pos:column="33">nppGui</name><op:operator pos:line="455" pos:column="39">.</op:operator><name pos:line="455" pos:column="40">_disableSmartHiliteTmp</name></name> <op:operator pos:line="455" pos:column="63">=</op:operator> <lit:literal type="boolean" pos:line="455" pos:column="65">false</lit:literal></expr>;</expr_stmt></then>
			<else pos:line="456" pos:column="25">else
				<expr_stmt><expr><call><name><name pos:line="457" pos:column="33">_smartHighlighter</name><op:operator pos:line="457" pos:column="50">.</op:operator><name pos:line="457" pos:column="51">highlightView</name></name><argument_list pos:line="457" pos:column="64">(<argument><expr><name pos:line="457" pos:column="65">notifyView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></else></if>
		}</block></then></if>

		<expr_stmt><expr><call><name pos:line="460" pos:column="17">updateStatusBar</name><argument_list pos:line="460" pos:column="32">()</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name pos:line="461" pos:column="17">AutoCompletion</name> <type:modifier pos:line="461" pos:column="32">*</type:modifier></type> <name pos:line="461" pos:column="34">autoC</name> <init pos:line="461" pos:column="40">= <expr><name pos:line="461" pos:column="42">isFromPrimary</name><op:operator pos:line="461" pos:column="55">?</op:operator><op:operator pos:line="461" pos:column="56">&amp;</op:operator><name pos:line="461" pos:column="57">_autoCompleteMain</name><op:operator pos:line="461" pos:column="74">:</op:operator><op:operator pos:line="461" pos:column="75">&amp;</op:operator><name pos:line="461" pos:column="76">_autoCompleteSub</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="462" pos:column="17">autoC</name><op:operator pos:line="462" pos:column="22">-&gt;</op:operator><name pos:line="462" pos:column="24">update</name></name><argument_list pos:line="462" pos:column="30">(<argument><expr><lit:literal type="number" pos:line="462" pos:column="31">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:line="464" pos:column="9">break;</break>
	}</block>

	</case><case pos:line="467" pos:column="9">case <expr><name pos:line="467" pos:column="14">SCN_SCROLLED</name></expr>:
	<block pos:line="468" pos:column="9">{
		<decl_stmt><decl><type><specifier pos:line="469" pos:column="17">const</specifier> <name pos:line="469" pos:column="23">NppGUI</name> <type:modifier pos:line="469" pos:column="30">&amp;</type:modifier></type> <name pos:line="469" pos:column="32">nppGUI</name> <init pos:line="469" pos:column="39">= <expr><op:operator pos:line="469" pos:column="41">(</op:operator><call><name><name pos:line="469" pos:column="42">NppParameters</name><op:operator pos:line="469" pos:column="55">::</op:operator><name pos:line="469" pos:column="57">getInstance</name></name><argument_list pos:line="469" pos:column="68">()</argument_list></call><op:operator pos:line="469" pos:column="70">)</op:operator><op:operator pos:line="469" pos:column="71">-&gt;</op:operator><call><name pos:line="469" pos:column="73">getNppGUI</name><argument_list pos:line="469" pos:column="82">()</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="470" pos:column="17">if <condition pos:line="470" pos:column="20">(<expr><name><name pos:line="470" pos:column="21">nppGUI</name><op:operator pos:line="470" pos:column="27">.</op:operator><name pos:line="470" pos:column="28">_enableSmartHilite</name></name></expr>)</condition><then pos:line="470" pos:column="47">
			<expr_stmt><expr><call><name><name pos:line="471" pos:column="25">_smartHighlighter</name><op:operator pos:line="471" pos:column="42">.</op:operator><name pos:line="471" pos:column="43">highlightView</name></name><argument_list pos:line="471" pos:column="56">(<argument><expr><name pos:line="471" pos:column="57">notifyView</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<decl_stmt><decl><type><name pos:line="473" pos:column="17">int</name></type> <name pos:line="473" pos:column="21">urlAction</name> <init pos:line="473" pos:column="31">= <expr><op:operator pos:line="473" pos:column="33">(</op:operator><call><name><name pos:line="473" pos:column="34">NppParameters</name><op:operator pos:line="473" pos:column="47">::</op:operator><name pos:line="473" pos:column="49">getInstance</name></name><argument_list pos:line="473" pos:column="60">()</argument_list></call><op:operator pos:line="473" pos:column="62">)</op:operator><op:operator pos:line="473" pos:column="63">-&gt;</op:operator><call><name pos:line="473" pos:column="65">getNppGUI</name><argument_list pos:line="473" pos:column="74">()</argument_list></call><op:operator pos:line="473" pos:column="76">.</op:operator><name pos:line="473" pos:column="77">_styleURL</name></expr></init></decl>;</decl_stmt>
		<if pos:line="474" pos:column="17">if <condition pos:line="474" pos:column="20">(<expr><op:operator pos:line="474" pos:column="21">(</op:operator><name pos:line="474" pos:column="22">urlAction</name> <op:operator pos:line="474" pos:column="32">==</op:operator> <lit:literal type="number" pos:line="474" pos:column="35">1</lit:literal><op:operator pos:line="474" pos:column="36">)</op:operator> <op:operator pos:line="474" pos:column="38">||</op:operator> <op:operator pos:line="474" pos:column="41">(</op:operator><name pos:line="474" pos:column="42">urlAction</name> <op:operator pos:line="474" pos:column="52">==</op:operator> <lit:literal type="number" pos:line="474" pos:column="55">2</lit:literal><op:operator pos:line="474" pos:column="56">)</op:operator></expr>)</condition><then pos:line="474" pos:column="58">
			<expr_stmt><expr><call><name pos:line="475" pos:column="25">addHotSpot</name><argument_list pos:line="475" pos:column="35">()</argument_list></call></expr>;</expr_stmt></then></if>

		<break pos:line="477" pos:column="17">break;</break>
	}</block>

    </case><case pos:line="480" pos:column="5">case <expr><name pos:line="480" pos:column="10">TTN_GETDISPINFO</name></expr>:
    <block pos:line="481" pos:column="5">{
		<try pos:line="482" pos:column="17">try <block pos:line="482" pos:column="21">{
			<decl_stmt><decl><type><name pos:line="483" pos:column="25">LPTOOLTIPTEXT</name></type> <name pos:line="483" pos:column="39">lpttt</name> <init pos:line="483" pos:column="45">= <expr><op:operator pos:line="483" pos:column="47">(</op:operator><name pos:line="483" pos:column="48">LPTOOLTIPTEXT</name><op:operator pos:line="483" pos:column="61">)</op:operator><name pos:line="483" pos:column="62">notification</name></expr></init></decl>;</decl_stmt> 

			<comment type="line" pos:line="485" pos:column="25">//Joce's fix</comment>
			<expr_stmt><expr><name><name pos:line="486" pos:column="25">lpttt</name><op:operator pos:line="486" pos:column="30">-&gt;</op:operator><name pos:line="486" pos:column="32">hinst</name></name> <op:operator pos:line="486" pos:column="38">=</op:operator> <name pos:line="486" pos:column="40">NULL</name></expr>;</expr_stmt> 

			<decl_stmt><decl><type><name pos:line="488" pos:column="25">POINT</name></type> <name pos:line="488" pos:column="31">p</name></decl>;</decl_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="489" pos:column="25">::</op:operator><name pos:line="489" pos:column="27">GetCursorPos</name></name><argument_list pos:line="489" pos:column="39">(<argument><expr><op:operator pos:line="489" pos:column="40">&amp;</op:operator><name pos:line="489" pos:column="41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="490" pos:column="25">::</op:operator><name pos:line="490" pos:column="27">ScreenToClient</name></name><argument_list pos:line="490" pos:column="41">(<argument><expr><call><name><name pos:line="490" pos:column="42">_pPublicInterface</name><op:operator pos:line="490" pos:column="59">-&gt;</op:operator><name pos:line="490" pos:column="61">getHSelf</name></name><argument_list pos:line="490" pos:column="69">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="490" pos:column="73">&amp;</op:operator><name pos:line="490" pos:column="74">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<decl_stmt><decl><type><name pos:line="491" pos:column="25">HWND</name></type> <name pos:line="491" pos:column="30">hWin</name> <init pos:line="491" pos:column="35">= <expr><call><name><op:operator pos:line="491" pos:column="37">::</op:operator><name pos:line="491" pos:column="39">RealChildWindowFromPoint</name></name><argument_list pos:line="491" pos:column="63">(<argument><expr><call><name><name pos:line="491" pos:column="64">_pPublicInterface</name><op:operator pos:line="491" pos:column="81">-&gt;</op:operator><name pos:line="491" pos:column="83">getHSelf</name></name><argument_list pos:line="491" pos:column="91">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="491" pos:column="95">p</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="492" pos:column="25">const</specifier> <name pos:line="492" pos:column="31">int</name></type> <name pos:line="492" pos:column="35">tipMaxLen</name> <init pos:line="492" pos:column="45">= <expr><lit:literal type="number" pos:line="492" pos:column="47">1024</lit:literal></expr></init></decl>;</decl_stmt>
			<decl_stmt><decl><type><specifier pos:line="493" pos:column="25">static</specifier> <name pos:line="493" pos:column="32">TCHAR</name></type> <name><name pos:line="493" pos:column="38">docTip</name><index pos:line="493" pos:column="44">[<expr><name pos:line="493" pos:column="45">tipMaxLen</name></expr>]</index></name></decl>;</decl_stmt>
			<expr_stmt><expr><name><name pos:line="494" pos:column="25">docTip</name><index pos:line="494" pos:column="31">[<expr><lit:literal type="number" pos:line="494" pos:column="32">0</lit:literal></expr>]</index></name> <op:operator pos:line="494" pos:column="35">=</op:operator> <lit:literal type="char" pos:line="494" pos:column="37">'\0'</lit:literal></expr>;</expr_stmt>

			<decl_stmt><decl><type><name pos:line="496" pos:column="25">generic_string</name></type> <name pos:line="496" pos:column="40">tipTmp</name><argument_list pos:line="496" pos:column="46">(<argument><expr><call><name pos:line="496" pos:column="47">TEXT</name><argument_list pos:line="496" pos:column="51">(<argument><expr><lit:literal type="string" pos:line="496" pos:column="52">""</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
			<decl_stmt><decl><type><name pos:line="497" pos:column="25">int</name></type> <name pos:line="497" pos:column="29">id</name> <init pos:line="497" pos:column="32">= <expr><call><name pos:line="497" pos:column="34">int</name><argument_list pos:line="497" pos:column="37">(<argument><expr><name><name pos:line="497" pos:column="38">lpttt</name><op:operator pos:line="497" pos:column="43">-&gt;</op:operator><name pos:line="497" pos:column="45">hdr</name><op:operator pos:line="497" pos:column="48">.</op:operator><name pos:line="497" pos:column="49">idFrom</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

			<if pos:line="499" pos:column="25">if <condition pos:line="499" pos:column="28">(<expr><name pos:line="499" pos:column="29">hWin</name> <op:operator pos:line="499" pos:column="34">==</op:operator> <call><name><name pos:line="499" pos:column="37">_rebarTop</name><op:operator pos:line="499" pos:column="46">.</op:operator><name pos:line="499" pos:column="47">getHSelf</name></name><argument_list pos:line="499" pos:column="55">()</argument_list></call></expr>)</condition><then pos:line="499" pos:column="58">
			<block pos:line="500" pos:column="25">{
				<expr_stmt><expr><call><name pos:line="501" pos:column="33">getNameStrFromCmd</name><argument_list pos:line="501" pos:column="50">(<argument><expr><name pos:line="501" pos:column="51">id</name></expr></argument>, <argument><expr><name pos:line="501" pos:column="55">tipTmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<if pos:line="502" pos:column="33">if <condition pos:line="502" pos:column="36">(<expr><call><name><name pos:line="502" pos:column="37">tipTmp</name><op:operator pos:line="502" pos:column="43">.</op:operator><name pos:line="502" pos:column="44">length</name></name><argument_list pos:line="502" pos:column="50">()</argument_list></call> <op:operator pos:line="502" pos:column="53">&gt;=</op:operator> <lit:literal type="number" pos:line="502" pos:column="56">80</lit:literal></expr>)</condition><then pos:line="502" pos:column="59">
					<return pos:line="503" pos:column="41">return <expr><name pos:line="503" pos:column="48">FALSE</name></expr>;</return></then></if>

				<expr_stmt><expr><call><name pos:line="505" pos:column="33">lstrcpy</name><argument_list pos:line="505" pos:column="40">(<argument><expr><name><name pos:line="505" pos:column="41">lpttt</name><op:operator pos:line="505" pos:column="46">-&gt;</op:operator><name pos:line="505" pos:column="48">szText</name></name></expr></argument>, <argument><expr><call><name><name pos:line="505" pos:column="56">tipTmp</name><op:operator pos:line="505" pos:column="62">.</op:operator><name pos:line="505" pos:column="63">c_str</name></name><argument_list pos:line="505" pos:column="68">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="506" pos:column="33">return <expr><name pos:line="506" pos:column="40">TRUE</name></expr>;</return>
			}</block></then>
			<else pos:line="508" pos:column="25">else <if pos:line="508" pos:column="30">if <condition pos:line="508" pos:column="33">(<expr><name pos:line="508" pos:column="34">hWin</name> <op:operator pos:line="508" pos:column="39">==</op:operator> <call><name><name pos:line="508" pos:column="42">_mainDocTab</name><op:operator pos:line="508" pos:column="53">.</op:operator><name pos:line="508" pos:column="54">getHSelf</name></name><argument_list pos:line="508" pos:column="62">()</argument_list></call></expr>)</condition><then pos:line="508" pos:column="65">
			<block pos:line="509" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="510" pos:column="33">BufferID</name></type> <name pos:line="510" pos:column="42">idd</name> <init pos:line="510" pos:column="46">= <expr><call><name><name pos:line="510" pos:column="48">_mainDocTab</name><op:operator pos:line="510" pos:column="59">.</op:operator><name pos:line="510" pos:column="60">getBufferByIndex</name></name><argument_list pos:line="510" pos:column="76">(<argument><expr><name pos:line="510" pos:column="77">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="511" pos:column="33">Buffer</name> <type:modifier pos:line="511" pos:column="40">*</type:modifier></type> <name pos:line="511" pos:column="42">buf</name> <init pos:line="511" pos:column="46">= <expr><call><name><name pos:line="511" pos:column="48">MainFileManager</name><op:operator pos:line="511" pos:column="63">-&gt;</op:operator><name pos:line="511" pos:column="65">getBufferByID</name></name><argument_list pos:line="511" pos:column="78">(<argument><expr><name pos:line="511" pos:column="79">idd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="512" pos:column="33">tipTmp</name> <op:operator pos:line="512" pos:column="40">=</op:operator> <call><name><name pos:line="512" pos:column="42">buf</name><op:operator pos:line="512" pos:column="45">-&gt;</op:operator><name pos:line="512" pos:column="47">getFullPathName</name></name><argument_list pos:line="512" pos:column="62">()</argument_list></call></expr>;</expr_stmt>

				<if pos:line="514" pos:column="33">if <condition pos:line="514" pos:column="36">(<expr><call><name><name pos:line="514" pos:column="37">tipTmp</name><op:operator pos:line="514" pos:column="43">.</op:operator><name pos:line="514" pos:column="44">length</name></name><argument_list pos:line="514" pos:column="50">()</argument_list></call> <op:operator pos:line="514" pos:column="53">&gt;=</op:operator> <name pos:line="514" pos:column="56">tipMaxLen</name></expr>)</condition><then pos:line="514" pos:column="66">
					<return pos:line="515" pos:column="41">return <expr><name pos:line="515" pos:column="48">FALSE</name></expr>;</return></then></if>
				<expr_stmt><expr><call><name pos:line="516" pos:column="33">lstrcpy</name><argument_list pos:line="516" pos:column="40">(<argument><expr><name pos:line="516" pos:column="41">docTip</name></expr></argument>, <argument><expr><call><name><name pos:line="516" pos:column="49">tipTmp</name><op:operator pos:line="516" pos:column="55">.</op:operator><name pos:line="516" pos:column="56">c_str</name></name><argument_list pos:line="516" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="517" pos:column="33">lpttt</name><op:operator pos:line="517" pos:column="38">-&gt;</op:operator><name pos:line="517" pos:column="40">lpszText</name></name> <op:operator pos:line="517" pos:column="49">=</op:operator> <name pos:line="517" pos:column="51">docTip</name></expr>;</expr_stmt>
				<return pos:line="518" pos:column="33">return <expr><name pos:line="518" pos:column="40">TRUE</name></expr>;</return>
			}</block></then>
			<else pos:line="520" pos:column="25">else <if pos:line="520" pos:column="30">if <condition pos:line="520" pos:column="33">(<expr><name pos:line="520" pos:column="34">hWin</name> <op:operator pos:line="520" pos:column="39">==</op:operator> <call><name><name pos:line="520" pos:column="42">_subDocTab</name><op:operator pos:line="520" pos:column="52">.</op:operator><name pos:line="520" pos:column="53">getHSelf</name></name><argument_list pos:line="520" pos:column="61">()</argument_list></call></expr>)</condition><then pos:line="520" pos:column="64">
			<block pos:line="521" pos:column="25">{
				<decl_stmt><decl><type><name pos:line="522" pos:column="33">BufferID</name></type> <name pos:line="522" pos:column="42">idd</name> <init pos:line="522" pos:column="46">= <expr><call><name><name pos:line="522" pos:column="48">_subDocTab</name><op:operator pos:line="522" pos:column="58">.</op:operator><name pos:line="522" pos:column="59">getBufferByIndex</name></name><argument_list pos:line="522" pos:column="75">(<argument><expr><name pos:line="522" pos:column="76">id</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<decl_stmt><decl><type><name pos:line="523" pos:column="33">Buffer</name> <type:modifier pos:line="523" pos:column="40">*</type:modifier></type> <name pos:line="523" pos:column="42">buf</name> <init pos:line="523" pos:column="46">= <expr><call><name><name pos:line="523" pos:column="48">MainFileManager</name><op:operator pos:line="523" pos:column="63">-&gt;</op:operator><name pos:line="523" pos:column="65">getBufferByID</name></name><argument_list pos:line="523" pos:column="78">(<argument><expr><name pos:line="523" pos:column="79">idd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
				<expr_stmt><expr><name pos:line="524" pos:column="33">tipTmp</name> <op:operator pos:line="524" pos:column="40">=</op:operator> <call><name><name pos:line="524" pos:column="42">buf</name><op:operator pos:line="524" pos:column="45">-&gt;</op:operator><name pos:line="524" pos:column="47">getFullPathName</name></name><argument_list pos:line="524" pos:column="62">()</argument_list></call></expr>;</expr_stmt>

				<if pos:line="526" pos:column="33">if <condition pos:line="526" pos:column="36">(<expr><call><name><name pos:line="526" pos:column="37">tipTmp</name><op:operator pos:line="526" pos:column="43">.</op:operator><name pos:line="526" pos:column="44">length</name></name><argument_list pos:line="526" pos:column="50">()</argument_list></call> <op:operator pos:line="526" pos:column="53">&gt;=</op:operator> <name pos:line="526" pos:column="56">tipMaxLen</name></expr>)</condition><then pos:line="526" pos:column="66">
					<return pos:line="527" pos:column="41">return <expr><name pos:line="527" pos:column="48">FALSE</name></expr>;</return></then></if>
				<expr_stmt><expr><call><name pos:line="528" pos:column="33">lstrcpy</name><argument_list pos:line="528" pos:column="40">(<argument><expr><name pos:line="528" pos:column="41">docTip</name></expr></argument>, <argument><expr><call><name><name pos:line="528" pos:column="49">tipTmp</name><op:operator pos:line="528" pos:column="55">.</op:operator><name pos:line="528" pos:column="56">c_str</name></name><argument_list pos:line="528" pos:column="61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="529" pos:column="33">lpttt</name><op:operator pos:line="529" pos:column="38">-&gt;</op:operator><name pos:line="529" pos:column="40">lpszText</name></name> <op:operator pos:line="529" pos:column="49">=</op:operator> <name pos:line="529" pos:column="51">docTip</name></expr>;</expr_stmt>
				<return pos:line="530" pos:column="33">return <expr><name pos:line="530" pos:column="40">TRUE</name></expr>;</return>
			}</block></then>
			<else pos:line="532" pos:column="25">else
			<block pos:line="533" pos:column="25">{
				<return pos:line="534" pos:column="33">return <expr><name pos:line="534" pos:column="40">FALSE</name></expr>;</return>
			}</block></else></if></else></if></else></if>
		}</block> <catch pos:line="536" pos:column="19">catch <parameter_list pos:line="536" pos:column="25">(<param><decl><type><type:modifier pos:line="536" pos:column="26">...</type:modifier></type></decl></param>)</parameter_list> <block pos:line="536" pos:column="31">{
			<comment type="line" pos:line="537" pos:column="25">//printStr(TEXT("ToolTip crash is caught!"));</comment>
		}</block></catch></try>
    }</block>
	<break pos:line="540" pos:column="9">break;</break>


    </case><case pos:line="543" pos:column="5">case <expr><name pos:line="543" pos:column="10">SCN_ZOOM</name></expr>:
		<break pos:line="544" pos:column="17">break;</break>

    </case><case pos:line="546" pos:column="5">case <expr><name pos:line="546" pos:column="10">SCN_MACRORECORD</name></expr>:
        <expr_stmt><expr><call><name><name pos:line="547" pos:column="9">_macro</name><op:operator pos:line="547" pos:column="15">.</op:operator><name pos:line="547" pos:column="16">push_back</name></name><argument_list pos:line="547" pos:column="25">(<argument><expr><call><name pos:line="547" pos:column="26">recordedMacroStep</name><argument_list pos:line="547" pos:column="43">(<argument><expr><name><name pos:line="547" pos:column="44">notification</name><op:operator pos:line="547" pos:column="56">-&gt;</op:operator><name pos:line="547" pos:column="58">message</name></name></expr></argument>, <argument><expr><name><name pos:line="547" pos:column="67">notification</name><op:operator pos:line="547" pos:column="79">-&gt;</op:operator><name pos:line="547" pos:column="81">wParam</name></name></expr></argument>, <argument><expr><name><name pos:line="547" pos:column="89">notification</name><op:operator pos:line="547" pos:column="101">-&gt;</op:operator><name pos:line="547" pos:column="103">lParam</name></name></expr></argument>, <argument><expr><call><name><name pos:line="547" pos:column="111">_pEditView</name><op:operator pos:line="547" pos:column="121">-&gt;</op:operator><name pos:line="547" pos:column="123">execute</name></name><argument_list pos:line="547" pos:column="130">(<argument><expr><name pos:line="547" pos:column="131">SCI_GETCODEPAGE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="548" pos:column="17">break;</break>

	</case><case pos:line="550" pos:column="9">case <expr><name pos:line="550" pos:column="14">SCN_PAINTED</name></expr>:
	<block pos:line="551" pos:column="9">{
		<comment type="line" pos:line="552" pos:column="17">//--FLS: ViewMoveAtWrappingDisableFix: Disable wrapping messes up visible lines. Therefore save view position before in IDM_VIEW_WRAP and restore after SCN_PAINTED, as doc. says</comment>
		<if pos:line="553" pos:column="17">if <condition pos:line="553" pos:column="20">(<expr><call><name><name pos:line="553" pos:column="21">_mainEditView</name><op:operator pos:line="553" pos:column="34">.</op:operator><name pos:line="553" pos:column="35">isWrapRestoreNeeded</name></name><argument_list pos:line="553" pos:column="54">()</argument_list></call></expr>)</condition><then pos:line="553" pos:column="57">
		<block pos:line="554" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="555" pos:column="25">_mainEditView</name><op:operator pos:line="555" pos:column="38">.</op:operator><name pos:line="555" pos:column="39">restoreCurrentPos</name></name><argument_list pos:line="555" pos:column="56">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="556" pos:column="25">_mainEditView</name><op:operator pos:line="556" pos:column="38">.</op:operator><name pos:line="556" pos:column="39">setWrapRestoreNeeded</name></name><argument_list pos:line="556" pos:column="59">(<argument><expr><lit:literal type="boolean" pos:line="556" pos:column="60">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="559" pos:column="17">if <condition pos:line="559" pos:column="20">(<expr><call><name><name pos:line="559" pos:column="21">_subEditView</name><op:operator pos:line="559" pos:column="33">.</op:operator><name pos:line="559" pos:column="34">isWrapRestoreNeeded</name></name><argument_list pos:line="559" pos:column="53">()</argument_list></call></expr>)</condition><then pos:line="559" pos:column="56">
		<block pos:line="560" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="561" pos:column="25">_subEditView</name><op:operator pos:line="561" pos:column="37">.</op:operator><name pos:line="561" pos:column="38">restoreCurrentPos</name></name><argument_list pos:line="561" pos:column="55">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="562" pos:column="25">_subEditView</name><op:operator pos:line="562" pos:column="37">.</op:operator><name pos:line="562" pos:column="38">setWrapRestoreNeeded</name></name><argument_list pos:line="562" pos:column="58">(<argument><expr><lit:literal type="boolean" pos:line="562" pos:column="59">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<expr_stmt><expr><call><name><name pos:line="564" pos:column="17">notifyView</name><op:operator pos:line="564" pos:column="27">-&gt;</op:operator><name pos:line="564" pos:column="29">updateLineNumberWidth</name></name><argument_list pos:line="564" pos:column="50">()</argument_list></call></expr>;</expr_stmt>
		<if pos:line="565" pos:column="17">if <condition pos:line="565" pos:column="20">(<expr><call><name><name pos:line="565" pos:column="21">_syncInfo</name><op:operator pos:line="565" pos:column="30">.</op:operator><name pos:line="565" pos:column="31">doSync</name></name><argument_list pos:line="565" pos:column="37">()</argument_list></call></expr>)</condition><then pos:line="565" pos:column="40"> 
			<expr_stmt><expr><call><name pos:line="566" pos:column="25">doSynScorll</name><argument_list pos:line="566" pos:column="36">(<argument><expr><call><name pos:line="566" pos:column="37">HWND</name><argument_list pos:line="566" pos:column="41">(<argument><expr><name><name pos:line="566" pos:column="42">notification</name><op:operator pos:line="566" pos:column="54">-&gt;</op:operator><name pos:line="566" pos:column="56">nmhdr</name><op:operator pos:line="566" pos:column="61">.</op:operator><name pos:line="566" pos:column="62">hwndFrom</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<decl_stmt><decl><type><name pos:line="568" pos:column="17">NppParameters</name> <type:modifier pos:line="568" pos:column="31">*</type:modifier></type><name pos:line="568" pos:column="32">nppParam</name> <init pos:line="568" pos:column="41">= <expr><call><name><name pos:line="568" pos:column="43">NppParameters</name><op:operator pos:line="568" pos:column="56">::</op:operator><name pos:line="568" pos:column="58">getInstance</name></name><argument_list pos:line="568" pos:column="69">()</argument_list></call></expr></init></decl>;</decl_stmt>
		
		<comment type="line" pos:line="570" pos:column="17">// if it's searching/replacing, then do nothing</comment>
		<if pos:line="571" pos:column="17">if <condition pos:line="571" pos:column="20">(<expr><op:operator pos:line="571" pos:column="21">(</op:operator><name pos:line="571" pos:column="22">_linkTriggered</name> <op:operator pos:line="571" pos:column="37">&amp;&amp;</op:operator> <op:operator pos:line="571" pos:column="40">!</op:operator><name><name pos:line="571" pos:column="41">nppParam</name><op:operator pos:line="571" pos:column="49">-&gt;</op:operator><name pos:line="571" pos:column="51">_isFindReplacing</name></name><op:operator pos:line="571" pos:column="67">)</op:operator> <op:operator pos:line="571" pos:column="69">||</op:operator> <name><name pos:line="571" pos:column="72">notification</name><op:operator pos:line="571" pos:column="84">-&gt;</op:operator><name pos:line="571" pos:column="86">wParam</name></name> <op:operator pos:line="571" pos:column="93">==</op:operator> <name pos:line="571" pos:column="96">LINKTRIGGERED</name></expr>)</condition><then pos:line="571" pos:column="110">
		<block pos:line="572" pos:column="17">{
			<decl_stmt><decl><type><name pos:line="573" pos:column="25">int</name></type> <name pos:line="573" pos:column="29">urlAction</name> <init pos:line="573" pos:column="39">= <expr><op:operator pos:line="573" pos:column="41">(</op:operator><call><name><name pos:line="573" pos:column="42">NppParameters</name><op:operator pos:line="573" pos:column="55">::</op:operator><name pos:line="573" pos:column="57">getInstance</name></name><argument_list pos:line="573" pos:column="68">()</argument_list></call><op:operator pos:line="573" pos:column="70">)</op:operator><op:operator pos:line="573" pos:column="71">-&gt;</op:operator><call><name pos:line="573" pos:column="73">getNppGUI</name><argument_list pos:line="573" pos:column="82">()</argument_list></call><op:operator pos:line="573" pos:column="84">.</op:operator><name pos:line="573" pos:column="85">_styleURL</name></expr></init></decl>;</decl_stmt>
			<if pos:line="574" pos:column="25">if <condition pos:line="574" pos:column="28">(<expr><op:operator pos:line="574" pos:column="29">(</op:operator><name pos:line="574" pos:column="30">urlAction</name> <op:operator pos:line="574" pos:column="40">==</op:operator> <lit:literal type="number" pos:line="574" pos:column="43">1</lit:literal><op:operator pos:line="574" pos:column="44">)</op:operator> <op:operator pos:line="574" pos:column="46">||</op:operator> <op:operator pos:line="574" pos:column="49">(</op:operator><name pos:line="574" pos:column="50">urlAction</name> <op:operator pos:line="574" pos:column="60">==</op:operator> <lit:literal type="number" pos:line="574" pos:column="63">2</lit:literal><op:operator pos:line="574" pos:column="64">)</op:operator></expr>)</condition><then pos:line="574" pos:column="66">
				<expr_stmt><expr><call><name pos:line="575" pos:column="33">addHotSpot</name><argument_list pos:line="575" pos:column="43">()</argument_list></call></expr>;</expr_stmt></then></if>
			<expr_stmt><expr><name pos:line="576" pos:column="25">_linkTriggered</name> <op:operator pos:line="576" pos:column="40">=</op:operator> <lit:literal type="boolean" pos:line="576" pos:column="42">false</lit:literal></expr>;</expr_stmt>
		}</block></then></if>

		<if pos:line="579" pos:column="17">if <condition pos:line="579" pos:column="20">(<expr><name pos:line="579" pos:column="21">_pDocMap</name></expr>)</condition><then pos:line="579" pos:column="30">
		<block pos:line="580" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="581" pos:column="25">_pDocMap</name><op:operator pos:line="581" pos:column="33">-&gt;</op:operator><name pos:line="581" pos:column="35">wrapMap</name></name><argument_list pos:line="581" pos:column="42">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="582" pos:column="25">_pDocMap</name><op:operator pos:line="582" pos:column="33">-&gt;</op:operator><name pos:line="582" pos:column="35">scrollMap</name></name><argument_list pos:line="582" pos:column="44">()</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<break pos:line="584" pos:column="17">break;</break>
	}</block>

	</case><case pos:line="587" pos:column="9">case <expr><name pos:line="587" pos:column="14">SCN_HOTSPOTDOUBLECLICK</name></expr> :
	<block pos:line="588" pos:column="9">{
		<expr_stmt><expr><call><name><name pos:line="589" pos:column="17">notifyView</name><op:operator pos:line="589" pos:column="27">-&gt;</op:operator><name pos:line="589" pos:column="29">execute</name></name><argument_list pos:line="589" pos:column="36">(<argument><expr><name pos:line="589" pos:column="37">SCI_SETWORDCHARS</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="589" pos:column="55">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="589" pos:column="58">(</op:operator><name pos:line="589" pos:column="59">LPARAM</name><op:operator pos:line="589" pos:column="65">)</op:operator><lit:literal type="string" pos:line="589" pos:column="66">"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-+.,:?&amp;@=/%#()"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		
		<decl_stmt><decl><type><name pos:line="591" pos:column="17">int</name></type> <name pos:line="591" pos:column="21">pos</name> <init pos:line="591" pos:column="25">= <expr><call><name><name pos:line="591" pos:column="27">notifyView</name><op:operator pos:line="591" pos:column="37">-&gt;</op:operator><name pos:line="591" pos:column="39">execute</name></name><argument_list pos:line="591" pos:column="46">(<argument><expr><name pos:line="591" pos:column="47">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="592" pos:column="17">int</name></type> <name pos:line="592" pos:column="21">startPos</name> <init pos:line="592" pos:column="30">= <expr><call><name><name pos:line="592" pos:column="32">static_cast</name><argument_list pos:line="592" pos:column="43">&lt;<argument><expr><name pos:line="592" pos:column="44">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="592" pos:column="48">(<argument><expr><call><name><name pos:line="592" pos:column="49">notifyView</name><op:operator pos:line="592" pos:column="59">-&gt;</op:operator><name pos:line="592" pos:column="61">execute</name></name><argument_list pos:line="592" pos:column="68">(<argument><expr><name pos:line="592" pos:column="69">SCI_WORDSTARTPOSITION</name></expr></argument>, <argument><expr><name pos:line="592" pos:column="92">pos</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="592" pos:column="97">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="593" pos:column="17">int</name></type> <name pos:line="593" pos:column="21">endPos</name> <init pos:line="593" pos:column="28">= <expr><call><name><name pos:line="593" pos:column="30">static_cast</name><argument_list pos:line="593" pos:column="41">&lt;<argument><expr><name pos:line="593" pos:column="42">int</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="593" pos:column="46">(<argument><expr><call><name><name pos:line="593" pos:column="47">notifyView</name><op:operator pos:line="593" pos:column="57">-&gt;</op:operator><name pos:line="593" pos:column="59">execute</name></name><argument_list pos:line="593" pos:column="66">(<argument><expr><name pos:line="593" pos:column="67">SCI_WORDENDPOSITION</name></expr></argument>, <argument><expr><name pos:line="593" pos:column="88">pos</name></expr></argument>, <argument><expr><lit:literal type="boolean" pos:line="593" pos:column="93">false</lit:literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<expr_stmt><expr><call><name><name pos:line="595" pos:column="17">notifyView</name><op:operator pos:line="595" pos:column="27">-&gt;</op:operator><name pos:line="595" pos:column="29">execute</name></name><argument_list pos:line="595" pos:column="36">(<argument><expr><name pos:line="595" pos:column="37">SCI_SETTARGETSTART</name></expr></argument>, <argument><expr><name pos:line="595" pos:column="57">startPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="596" pos:column="17">notifyView</name><op:operator pos:line="596" pos:column="27">-&gt;</op:operator><name pos:line="596" pos:column="29">execute</name></name><argument_list pos:line="596" pos:column="36">(<argument><expr><name pos:line="596" pos:column="37">SCI_SETTARGETEND</name></expr></argument>, <argument><expr><name pos:line="596" pos:column="55">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	
		<decl_stmt><decl><type><name pos:line="598" pos:column="17">int</name></type> <name pos:line="598" pos:column="21">posFound</name> <init pos:line="598" pos:column="30">= <expr><call><name><name pos:line="598" pos:column="32">notifyView</name><op:operator pos:line="598" pos:column="42">-&gt;</op:operator><name pos:line="598" pos:column="44">execute</name></name><argument_list pos:line="598" pos:column="51">(<argument><expr><name pos:line="598" pos:column="52">SCI_SEARCHINTARGET</name></expr></argument>, <argument><expr><call><name pos:line="598" pos:column="72">strlen</name><argument_list pos:line="598" pos:column="78">(<argument><expr><name pos:line="598" pos:column="79">URL_REG_EXPR</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="598" pos:column="94">(</op:operator><name pos:line="598" pos:column="95">LPARAM</name><op:operator pos:line="598" pos:column="101">)</op:operator><name pos:line="598" pos:column="102">URL_REG_EXPR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<if pos:line="599" pos:column="17">if <condition pos:line="599" pos:column="20">(<expr><name pos:line="599" pos:column="21">posFound</name> <op:operator pos:line="599" pos:column="30">!=</op:operator> <op:operator pos:line="599" pos:column="33">-</op:operator><lit:literal type="number" pos:line="599" pos:column="34">1</lit:literal></expr>)</condition><then pos:line="599" pos:column="36">
		<block pos:line="600" pos:column="17">{
			<expr_stmt><expr><name pos:line="601" pos:column="25">startPos</name> <op:operator pos:line="601" pos:column="34">=</op:operator> <call><name pos:line="601" pos:column="36">int</name><argument_list pos:line="601" pos:column="39">(<argument><expr><call><name><name pos:line="601" pos:column="40">notifyView</name><op:operator pos:line="601" pos:column="50">-&gt;</op:operator><name pos:line="601" pos:column="52">execute</name></name><argument_list pos:line="601" pos:column="59">(<argument><expr><name pos:line="601" pos:column="60">SCI_GETTARGETSTART</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="602" pos:column="25">endPos</name> <op:operator pos:line="602" pos:column="32">=</op:operator> <call><name pos:line="602" pos:column="34">int</name><argument_list pos:line="602" pos:column="37">(<argument><expr><call><name><name pos:line="602" pos:column="38">notifyView</name><op:operator pos:line="602" pos:column="48">-&gt;</op:operator><name pos:line="602" pos:column="50">execute</name></name><argument_list pos:line="602" pos:column="57">(<argument><expr><name pos:line="602" pos:column="58">SCI_GETTARGETEND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>

		<comment type="line" pos:line="605" pos:column="17">// Prevent buffer overflow in getGenericText().</comment>
		<if pos:line="606" pos:column="17">if<condition pos:line="606" pos:column="19">(<expr><name pos:line="606" pos:column="20">endPos</name> <op:operator pos:line="606" pos:column="27">-</op:operator> <name pos:line="606" pos:column="29">startPos</name> <op:operator pos:line="606" pos:column="38">&gt;</op:operator> <lit:literal type="number" pos:line="606" pos:column="40">2</lit:literal><op:operator pos:line="606" pos:column="41">*</op:operator><name pos:line="606" pos:column="42">MAX_PATH</name></expr>)</condition><then pos:line="606" pos:column="51">
			<expr_stmt><expr><name pos:line="607" pos:column="25">endPos</name> <op:operator pos:line="607" pos:column="32">=</op:operator> <name pos:line="607" pos:column="34">startPos</name> <op:operator pos:line="607" pos:column="43">+</op:operator> <lit:literal type="number" pos:line="607" pos:column="45">2</lit:literal><op:operator pos:line="607" pos:column="46">*</op:operator><name pos:line="607" pos:column="47">MAX_PATH</name></expr>;</expr_stmt></then></if>

		<decl_stmt><decl><type><name pos:line="609" pos:column="17">TCHAR</name></type> <name><name pos:line="609" pos:column="23">currentWord</name><index pos:line="609" pos:column="34">[<expr><lit:literal type="number" pos:line="609" pos:column="35">2</lit:literal><op:operator pos:line="609" pos:column="36">*</op:operator><name pos:line="609" pos:column="37">MAX_PATH</name></expr>]</index></name></decl>;</decl_stmt>

		<expr_stmt><expr><call><name><name pos:line="611" pos:column="17">notifyView</name><op:operator pos:line="611" pos:column="27">-&gt;</op:operator><name pos:line="611" pos:column="29">getGenericText</name></name><argument_list pos:line="611" pos:column="43">(<argument><expr><name pos:line="611" pos:column="44">currentWord</name></expr></argument>, <argument><expr><name pos:line="611" pos:column="57">MAX_PATH</name><op:operator pos:line="611" pos:column="65">*</op:operator><lit:literal type="number" pos:line="611" pos:column="66">2</lit:literal></expr></argument>, <argument><expr><name pos:line="611" pos:column="69">startPos</name></expr></argument>, <argument><expr><name pos:line="611" pos:column="79">endPos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<comment type="line" pos:line="613" pos:column="17">// This treatment would fail on some valid URLs where there's actually supposed to be a comma or parenthesis at the end.</comment>
		<decl_stmt><decl><type><name pos:line="614" pos:column="17">int</name></type> <name pos:line="614" pos:column="21">lastCharIndex</name> <init pos:line="614" pos:column="35">= <expr><call><name pos:line="614" pos:column="37">_tcsnlen</name><argument_list pos:line="614" pos:column="45">(<argument><expr><name pos:line="614" pos:column="46">currentWord</name></expr></argument>, <argument><expr><name pos:line="614" pos:column="59">MAX_PATH</name><op:operator pos:line="614" pos:column="67">*</op:operator><lit:literal type="number" pos:line="614" pos:column="68">2</lit:literal></expr></argument>)</argument_list></call> <op:operator pos:line="614" pos:column="71">-</op:operator> <lit:literal type="number" pos:line="614" pos:column="73">1</lit:literal></expr></init></decl>;</decl_stmt>
		<if pos:line="615" pos:column="17">if<condition pos:line="615" pos:column="19">(<expr><name pos:line="615" pos:column="20">lastCharIndex</name> <op:operator pos:line="615" pos:column="34">&gt;=</op:operator> <lit:literal type="number" pos:line="615" pos:column="37">0</lit:literal> <op:operator pos:line="615" pos:column="39">&amp;&amp;</op:operator> <op:operator pos:line="615" pos:column="42">(</op:operator><name><name pos:line="615" pos:column="43">currentWord</name><index pos:line="615" pos:column="54">[<expr><name pos:line="615" pos:column="55">lastCharIndex</name></expr>]</index></name> <op:operator pos:line="615" pos:column="70">==</op:operator> <lit:literal type="char" pos:line="615" pos:column="73">','</lit:literal> <op:operator pos:line="615" pos:column="77">||</op:operator> <name><name pos:line="615" pos:column="80">currentWord</name><index pos:line="615" pos:column="91">[<expr><name pos:line="615" pos:column="92">lastCharIndex</name></expr>]</index></name> <op:operator pos:line="615" pos:column="107">==</op:operator> <lit:literal type="char" pos:line="615" pos:column="110">')'</lit:literal> <op:operator pos:line="615" pos:column="114">||</op:operator> <name><name pos:line="615" pos:column="117">currentWord</name><index pos:line="615" pos:column="128">[<expr><name pos:line="615" pos:column="129">lastCharIndex</name></expr>]</index></name> <op:operator pos:line="615" pos:column="144">==</op:operator> <lit:literal type="char" pos:line="615" pos:column="147">'('</lit:literal><op:operator pos:line="615" pos:column="150">)</op:operator></expr>)</condition><then pos:line="615" pos:column="152">
			<expr_stmt><expr><name><name pos:line="616" pos:column="25">currentWord</name><index pos:line="616" pos:column="36">[<expr><name pos:line="616" pos:column="37">lastCharIndex</name></expr>]</index></name> <op:operator pos:line="616" pos:column="52">=</op:operator> <lit:literal type="char" pos:line="616" pos:column="54">'\0'</lit:literal></expr>;</expr_stmt></then></if>

		<expr_stmt><expr><call><name><op:operator pos:line="618" pos:column="17">::</op:operator><name pos:line="618" pos:column="19">ShellExecute</name></name><argument_list pos:line="618" pos:column="31">(<argument><expr><call><name><name pos:line="618" pos:column="32">_pPublicInterface</name><op:operator pos:line="618" pos:column="49">-&gt;</op:operator><name pos:line="618" pos:column="51">getHSelf</name></name><argument_list pos:line="618" pos:column="59">()</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="618" pos:column="63">TEXT</name><argument_list pos:line="618" pos:column="67">(<argument><expr><lit:literal type="string" pos:line="618" pos:column="68">"open"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="618" pos:column="77">currentWord</name></expr></argument>, <argument><expr><name pos:line="618" pos:column="90">NULL</name></expr></argument>, <argument><expr><name pos:line="618" pos:column="96">NULL</name></expr></argument>, <argument><expr><name pos:line="618" pos:column="102">SW_SHOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="619" pos:column="17">_isHotspotDblClicked</name> <op:operator pos:line="619" pos:column="38">=</op:operator> <lit:literal type="boolean" pos:line="619" pos:column="40">true</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="620" pos:column="17">notifyView</name><op:operator pos:line="620" pos:column="27">-&gt;</op:operator><name pos:line="620" pos:column="29">execute</name></name><argument_list pos:line="620" pos:column="36">(<argument><expr><name pos:line="620" pos:column="37">SCI_SETCHARSDEFAULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="621" pos:column="17">break;</break>
	}</block>

	</case><case pos:line="624" pos:column="9">case <expr><name pos:line="624" pos:column="14">SCN_NEEDSHOWN</name></expr> :
	<block pos:line="625" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="626" pos:column="17">int</name></type> <name pos:line="626" pos:column="21">begin</name> <init pos:line="626" pos:column="27">= <expr><call><name><name pos:line="626" pos:column="29">notifyView</name><op:operator pos:line="626" pos:column="39">-&gt;</op:operator><name pos:line="626" pos:column="41">execute</name></name><argument_list pos:line="626" pos:column="48">(<argument><expr><name pos:line="626" pos:column="49">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name><name pos:line="626" pos:column="71">notification</name><op:operator pos:line="626" pos:column="83">-&gt;</op:operator><name pos:line="626" pos:column="85">position</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="627" pos:column="17">int</name></type> <name pos:line="627" pos:column="21">end</name> <init pos:line="627" pos:column="25">= <expr><call><name><name pos:line="627" pos:column="27">notifyView</name><op:operator pos:line="627" pos:column="37">-&gt;</op:operator><name pos:line="627" pos:column="39">execute</name></name><argument_list pos:line="627" pos:column="46">(<argument><expr><name pos:line="627" pos:column="47">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name><name pos:line="627" pos:column="69">notification</name><op:operator pos:line="627" pos:column="81">-&gt;</op:operator><name pos:line="627" pos:column="83">position</name></name> <op:operator pos:line="627" pos:column="92">+</op:operator> <name><name pos:line="627" pos:column="94">notification</name><op:operator pos:line="627" pos:column="106">-&gt;</op:operator><name pos:line="627" pos:column="108">length</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="628" pos:column="17">int</name></type> <name pos:line="628" pos:column="21">firstLine</name> <init pos:line="628" pos:column="31">= <expr><name pos:line="628" pos:column="33">begin</name> <op:operator pos:line="628" pos:column="39">&lt;</op:operator> <name pos:line="628" pos:column="41">end</name> <op:operator pos:line="628" pos:column="45">?</op:operator> <name pos:line="628" pos:column="47">begin</name> <op:operator pos:line="628" pos:column="53">:</op:operator> <name pos:line="628" pos:column="55">end</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="629" pos:column="17">int</name></type> <name pos:line="629" pos:column="21">lastLine</name> <init pos:line="629" pos:column="30">= <expr><name pos:line="629" pos:column="32">begin</name> <op:operator pos:line="629" pos:column="38">&gt;</op:operator> <name pos:line="629" pos:column="40">end</name> <op:operator pos:line="629" pos:column="44">?</op:operator> <name pos:line="629" pos:column="46">begin</name> <op:operator pos:line="629" pos:column="52">:</op:operator> <name pos:line="629" pos:column="54">end</name></expr></init></decl>;</decl_stmt>
		<for pos:line="630" pos:column="17">for (<init><decl><type><name pos:line="630" pos:column="22">int</name></type> <name pos:line="630" pos:column="26">line</name> <init pos:line="630" pos:column="31">= <expr><name pos:line="630" pos:column="33">firstLine</name></expr></init></decl>;</init> <condition><expr><name pos:line="630" pos:column="44">line</name> <op:operator pos:line="630" pos:column="49">&lt;=</op:operator> <name pos:line="630" pos:column="52">lastLine</name></expr>;</condition> <incr><expr><name pos:line="630" pos:column="62">line</name><op:operator pos:line="630" pos:column="66">++</op:operator></expr></incr>) <block pos:line="630" pos:column="70">{
			<expr_stmt><expr><call><name><name pos:line="631" pos:column="25">notifyView</name><op:operator pos:line="631" pos:column="35">-&gt;</op:operator><name pos:line="631" pos:column="37">execute</name></name><argument_list pos:line="631" pos:column="44">(<argument><expr><name pos:line="631" pos:column="45">SCI_ENSUREVISIBLE</name></expr></argument>, <argument><expr><name pos:line="631" pos:column="64">line</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="631" pos:column="70">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
		<break pos:line="633" pos:column="17">break;</break>
	}</block>

	</case><case pos:line="636" pos:column="9">case <expr><name pos:line="636" pos:column="14">SCN_CALLTIPCLICK</name></expr>:
	<block pos:line="637" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="638" pos:column="17">AutoCompletion</name> <type:modifier pos:line="638" pos:column="32">*</type:modifier></type> <name pos:line="638" pos:column="34">autoC</name> <init pos:line="638" pos:column="40">= <expr><name pos:line="638" pos:column="42">isFromPrimary</name><op:operator pos:line="638" pos:column="55">?</op:operator><op:operator pos:line="638" pos:column="56">&amp;</op:operator><name pos:line="638" pos:column="57">_autoCompleteMain</name><op:operator pos:line="638" pos:column="74">:</op:operator><op:operator pos:line="638" pos:column="75">&amp;</op:operator><name pos:line="638" pos:column="76">_autoCompleteSub</name></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name pos:line="639" pos:column="17">autoC</name><op:operator pos:line="639" pos:column="22">-&gt;</op:operator><name pos:line="639" pos:column="24">callTipClick</name></name><argument_list pos:line="639" pos:column="36">(<argument><expr><name><name pos:line="639" pos:column="37">notification</name><op:operator pos:line="639" pos:column="49">-&gt;</op:operator><name pos:line="639" pos:column="51">position</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="640" pos:column="17">break;</break>
	}</block>

	</case><case pos:line="643" pos:column="9">case <expr><name pos:line="643" pos:column="14">RBN_HEIGHTCHANGE</name></expr>:
	<block pos:line="644" pos:column="9">{
		<expr_stmt><expr><call><name pos:line="645" pos:column="17">SendMessage</name><argument_list pos:line="645" pos:column="28">(<argument><expr><call><name><name pos:line="645" pos:column="29">_pPublicInterface</name><op:operator pos:line="645" pos:column="46">-&gt;</op:operator><name pos:line="645" pos:column="48">getHSelf</name></name><argument_list pos:line="645" pos:column="56">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="645" pos:column="60">WM_SIZE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="645" pos:column="69">0</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="645" pos:column="72">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="646" pos:column="17">break;</break>
	}</block>
	</case><case pos:line="648" pos:column="9">case <expr><name pos:line="648" pos:column="14">RBN_CHEVRONPUSHED</name></expr>:
	<block pos:line="649" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="650" pos:column="17">NMREBARCHEVRON</name> <type:modifier pos:line="650" pos:column="32">*</type:modifier></type> <name pos:line="650" pos:column="34">lpnm</name> <init pos:line="650" pos:column="39">= <expr><op:operator pos:line="650" pos:column="41">(</op:operator><name pos:line="650" pos:column="42">NMREBARCHEVRON</name><op:operator pos:line="650" pos:column="56">*</op:operator><op:operator pos:line="650" pos:column="57">)</op:operator> <name pos:line="650" pos:column="59">notification</name></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="651" pos:column="17">ReBar</name> <type:modifier pos:line="651" pos:column="23">*</type:modifier></type> <name pos:line="651" pos:column="25">notifRebar</name> <init pos:line="651" pos:column="36">= <expr><op:operator pos:line="651" pos:column="38">&amp;</op:operator><name pos:line="651" pos:column="39">_rebarTop</name></expr></init></decl>;</decl_stmt>
		<if pos:line="652" pos:column="17">if <condition pos:line="652" pos:column="20">(<expr><call><name><name pos:line="652" pos:column="21">_rebarBottom</name><op:operator pos:line="652" pos:column="33">.</op:operator><name pos:line="652" pos:column="34">getHSelf</name></name><argument_list pos:line="652" pos:column="42">()</argument_list></call> <op:operator pos:line="652" pos:column="45">==</op:operator> <name><name pos:line="652" pos:column="48">lpnm</name><op:operator pos:line="652" pos:column="52">-&gt;</op:operator><name pos:line="652" pos:column="54">hdr</name><op:operator pos:line="652" pos:column="57">.</op:operator><name pos:line="652" pos:column="58">hwndFrom</name></name></expr>)</condition><then pos:line="652" pos:column="67">
			<expr_stmt><expr><name pos:line="653" pos:column="25">notifRebar</name> <op:operator pos:line="653" pos:column="36">=</op:operator> <op:operator pos:line="653" pos:column="38">&amp;</op:operator><name pos:line="653" pos:column="39">_rebarBottom</name></expr>;</expr_stmt></then></if>
		<comment type="line" pos:line="654" pos:column="17">//If N++ ID, use proper object</comment>
		<switch pos:line="655" pos:column="17">switch<condition pos:line="655" pos:column="23">(<expr><name><name pos:line="655" pos:column="24">lpnm</name><op:operator pos:line="655" pos:column="28">-&gt;</op:operator><name pos:line="655" pos:column="30">wID</name></name></expr>)</condition> <block pos:line="655" pos:column="35">{
			<case pos:line="656" pos:column="25">case <expr><name pos:line="656" pos:column="30">REBAR_BAR_TOOLBAR</name></expr>: <block pos:line="656" pos:column="49">{
				<decl_stmt><decl><type><name pos:line="657" pos:column="33">POINT</name></type> <name pos:line="657" pos:column="39">pt</name></decl>;</decl_stmt>
				<expr_stmt><expr><name><name pos:line="658" pos:column="33">pt</name><op:operator pos:line="658" pos:column="35">.</op:operator><name pos:line="658" pos:column="36">x</name></name> <op:operator pos:line="658" pos:column="38">=</op:operator> <name><name pos:line="658" pos:column="40">lpnm</name><op:operator pos:line="658" pos:column="44">-&gt;</op:operator><name pos:line="658" pos:column="46">rc</name><op:operator pos:line="658" pos:column="48">.</op:operator><name pos:line="658" pos:column="49">left</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><name><name pos:line="659" pos:column="33">pt</name><op:operator pos:line="659" pos:column="35">.</op:operator><name pos:line="659" pos:column="36">y</name></name> <op:operator pos:line="659" pos:column="38">=</op:operator> <name><name pos:line="659" pos:column="40">lpnm</name><op:operator pos:line="659" pos:column="44">-&gt;</op:operator><name pos:line="659" pos:column="46">rc</name><op:operator pos:line="659" pos:column="48">.</op:operator><name pos:line="659" pos:column="49">bottom</name></name></expr>;</expr_stmt>
				<expr_stmt><expr><call><name pos:line="660" pos:column="33">ClientToScreen</name><argument_list pos:line="660" pos:column="47">(<argument><expr><call><name><name pos:line="660" pos:column="48">notifRebar</name><op:operator pos:line="660" pos:column="58">-&gt;</op:operator><name pos:line="660" pos:column="60">getHSelf</name></name><argument_list pos:line="660" pos:column="68">()</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="660" pos:column="72">&amp;</op:operator><name pos:line="660" pos:column="73">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<expr_stmt><expr><call><name><name pos:line="661" pos:column="33">_toolBar</name><op:operator pos:line="661" pos:column="41">.</op:operator><name pos:line="661" pos:column="42">doPopop</name></name><argument_list pos:line="661" pos:column="49">(<argument><expr><name pos:line="661" pos:column="50">pt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
				<return pos:line="662" pos:column="33">return <expr><name pos:line="662" pos:column="40">TRUE</name></expr>;</return>
				<break pos:line="663" pos:column="33">break;</break> }</block>
		</case>}</block></switch>
		<comment type="line" pos:line="665" pos:column="17">//Else forward notification to window of rebarband</comment>
		<decl_stmt><decl><type><name pos:line="666" pos:column="17">REBARBANDINFO</name></type> <name pos:line="666" pos:column="31">rbBand</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="667" pos:column="17">ZeroMemory</name><argument_list pos:line="667" pos:column="27">(<argument><expr><op:operator pos:line="667" pos:column="28">&amp;</op:operator><name pos:line="667" pos:column="29">rbBand</name></expr></argument>, <argument><expr><name pos:line="667" pos:column="37">REBARBAND_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name><name pos:line="668" pos:column="17">rbBand</name><op:operator pos:line="668" pos:column="23">.</op:operator><name pos:line="668" pos:column="24">cbSize</name></name>  <op:operator pos:line="668" pos:column="32">=</op:operator> <name pos:line="668" pos:column="34">REBARBAND_SIZE</name></expr>;</expr_stmt>

		<expr_stmt><expr><name><name pos:line="670" pos:column="17">rbBand</name><op:operator pos:line="670" pos:column="23">.</op:operator><name pos:line="670" pos:column="24">fMask</name></name> <op:operator pos:line="670" pos:column="30">=</op:operator> <name pos:line="670" pos:column="32">RBBIM_CHILD</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="671" pos:column="17">::</op:operator><name pos:line="671" pos:column="19">SendMessage</name></name><argument_list pos:line="671" pos:column="30">(<argument><expr><call><name><name pos:line="671" pos:column="31">notifRebar</name><op:operator pos:line="671" pos:column="41">-&gt;</op:operator><name pos:line="671" pos:column="43">getHSelf</name></name><argument_list pos:line="671" pos:column="51">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="671" pos:column="55">RB_GETBANDINFO</name></expr></argument>, <argument><expr><name><name pos:line="671" pos:column="71">lpnm</name><op:operator pos:line="671" pos:column="75">-&gt;</op:operator><name pos:line="671" pos:column="77">uBand</name></name></expr></argument>, <argument><expr><op:operator pos:line="671" pos:column="84">(</op:operator><name pos:line="671" pos:column="85">LPARAM</name><op:operator pos:line="671" pos:column="91">)</op:operator><op:operator pos:line="671" pos:column="92">&amp;</op:operator><name pos:line="671" pos:column="93">rbBand</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="672" pos:column="17">::</op:operator><name pos:line="672" pos:column="19">SendMessage</name></name><argument_list pos:line="672" pos:column="30">(<argument><expr><name><name pos:line="672" pos:column="31">rbBand</name><op:operator pos:line="672" pos:column="37">.</op:operator><name pos:line="672" pos:column="38">hwndChild</name></name></expr></argument>, <argument><expr><name pos:line="672" pos:column="49">WM_NOTIFY</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="672" pos:column="60">0</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="672" pos:column="63">(</op:operator><name pos:line="672" pos:column="64">LPARAM</name><op:operator pos:line="672" pos:column="70">)</op:operator><name pos:line="672" pos:column="71">lpnm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<break pos:line="673" pos:column="17">break;</break>
	}</block>

	</case><default pos:line="676" pos:column="9">default :
		<break pos:line="677" pos:column="17">break;</break>

  </default>}</block></switch>
  <return pos:line="680" pos:column="3">return <expr><name pos:line="680" pos:column="10">FALSE</name></expr>;</return>
}</block></function>

</unit>
