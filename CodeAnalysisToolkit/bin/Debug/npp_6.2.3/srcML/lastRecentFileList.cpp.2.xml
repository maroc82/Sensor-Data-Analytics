<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\lastRecentFileList.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"lastRecentFileList.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"menuCmdID.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="32" pos:column="10">"localization.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="34" pos:column="1">void</name></type> <name><name pos:line="34" pos:column="6">LastRecentFileList</name><op:operator pos:line="34" pos:column="24">::</op:operator><name pos:line="34" pos:column="26">initMenu</name></name><parameter_list pos:line="34" pos:column="34">(<param><decl><type><name pos:line="34" pos:column="35">HMENU</name></type> <name pos:line="34" pos:column="41">hMenu</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="48">int</name></type> <name pos:line="34" pos:column="52">idBase</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="60">int</name></type> <name pos:line="34" pos:column="64">posBase</name></decl></param>, <param><decl><type><name pos:line="34" pos:column="73">bool</name></type> <name pos:line="34" pos:column="78">doSubMenu</name></decl></param>)</parameter_list>
<block pos:line="35" pos:column="1">{
	<if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">doSubMenu</name></expr>)</condition><then pos:line="36" pos:column="23">
	<block pos:line="37" pos:column="9">{
		<expr_stmt><expr><name pos:line="38" pos:column="17">_hParentMenu</name> <op:operator pos:line="38" pos:column="30">=</op:operator> <name pos:line="38" pos:column="32">hMenu</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="39" pos:column="17">_hMenu</name> <op:operator pos:line="39" pos:column="24">=</op:operator> <call><name><op:operator pos:line="39" pos:column="26">::</op:operator><name pos:line="39" pos:column="28">CreatePopupMenu</name></name><argument_list pos:line="39" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="41" pos:column="9">else
	<block pos:line="42" pos:column="9">{
		<expr_stmt><expr><name pos:line="43" pos:column="17">_hParentMenu</name> <op:operator pos:line="43" pos:column="30">=</op:operator> <name pos:line="43" pos:column="32">NULL</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="44" pos:column="17">_hMenu</name> <op:operator pos:line="44" pos:column="24">=</op:operator> <name pos:line="44" pos:column="26">hMenu</name></expr>;</expr_stmt>
	}</block></else></if>

	<expr_stmt><expr><name pos:line="47" pos:column="9">_idBase</name> <op:operator pos:line="47" pos:column="17">=</op:operator> <name pos:line="47" pos:column="19">idBase</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="48" pos:column="9">_posBase</name> <op:operator pos:line="48" pos:column="18">=</op:operator> <name pos:line="48" pos:column="20">posBase</name></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="49" pos:column="9">_nativeLangEncoding</name> <op:operator pos:line="49" pos:column="29">=</op:operator> <name pos:line="49" pos:column="31">NPP_CP_WIN_1252</name></expr>;</expr_stmt>

	<for pos:line="51" pos:column="9">for (<init><decl><type><name pos:line="51" pos:column="14">int</name></type> <name pos:line="51" pos:column="18">i</name> <init pos:line="51" pos:column="20">= <expr><lit:literal type="number" pos:line="51" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="51" pos:column="26">i</name> <op:operator pos:line="51" pos:column="28">&lt;</op:operator> <sizeof pos:line="51" pos:column="30">sizeof<argument_list pos:line="51" pos:column="36">(<argument><expr><name pos:line="51" pos:column="37">_idFreeArray</name></expr></argument>)</argument_list></sizeof></expr> ;</condition> <incr><expr><name pos:line="51" pos:column="53">i</name><op:operator pos:line="51" pos:column="54">++</op:operator></expr></incr>)
		<expr_stmt><expr><name><name pos:line="52" pos:column="17">_idFreeArray</name><index pos:line="52" pos:column="29">[<expr><name pos:line="52" pos:column="30">i</name></expr>]</index></name> <op:operator pos:line="52" pos:column="33">=</op:operator> <lit:literal type="boolean" pos:line="52" pos:column="35">true</lit:literal></expr>;</expr_stmt></for>
}</block></function>


<function><type><name pos:line="56" pos:column="1">void</name></type> <name><name pos:line="56" pos:column="6">LastRecentFileList</name><op:operator pos:line="56" pos:column="24">::</op:operator><name pos:line="56" pos:column="26">switchMode</name></name><parameter_list pos:line="56" pos:column="36">()</parameter_list>
<block pos:line="57" pos:column="1">{
	<comment type="line" pos:line="58" pos:column="9">//Remove all menu items</comment>
	<expr_stmt><expr><call><name><op:operator pos:line="59" pos:column="9">::</op:operator><name pos:line="59" pos:column="11">RemoveMenu</name></name><argument_list pos:line="59" pos:column="21">(<argument><expr><name pos:line="59" pos:column="22">_hMenu</name></expr></argument>, <argument><expr><name pos:line="59" pos:column="30">IDM_OPEN_ALL_RECENT_FILE</name></expr></argument>, <argument><expr><name pos:line="59" pos:column="56">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name><op:operator pos:line="60" pos:column="9">::</op:operator><name pos:line="60" pos:column="11">RemoveMenu</name></name><argument_list pos:line="60" pos:column="21">(<argument><expr><name pos:line="60" pos:column="22">_hMenu</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="30">IDM_CLEAN_RECENT_FILE_LIST</name></expr></argument>, <argument><expr><name pos:line="60" pos:column="58">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:line="62" pos:column="9">for(<init><decl><type><name pos:line="62" pos:column="13">int</name></type> <name pos:line="62" pos:column="17">i</name> <init pos:line="62" pos:column="19">= <expr><lit:literal type="number" pos:line="62" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="62" pos:column="24">i</name> <op:operator pos:line="62" pos:column="26">&lt;</op:operator> <name pos:line="62" pos:column="28">_size</name></expr>;</condition> <incr><expr><name pos:line="62" pos:column="35">i</name><op:operator pos:line="62" pos:column="36">++</op:operator></expr></incr>)
	<block pos:line="63" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="64" pos:column="17">::</op:operator><name pos:line="64" pos:column="19">RemoveMenu</name></name><argument_list pos:line="64" pos:column="29">(<argument><expr><name pos:line="64" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><call><name><name pos:line="64" pos:column="38">_lrfl</name><op:operator pos:line="64" pos:column="43">.</op:operator><name pos:line="64" pos:column="44">at</name></name><argument_list pos:line="64" pos:column="46">(<argument><expr><name pos:line="64" pos:column="47">i</name></expr></argument>)</argument_list></call><op:operator pos:line="64" pos:column="49">.</op:operator><name pos:line="64" pos:column="50">_id</name></expr></argument>, <argument><expr><name pos:line="64" pos:column="55">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>

	<if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name pos:line="67" pos:column="13">_hParentMenu</name> <op:operator pos:line="67" pos:column="26">==</op:operator> <name pos:line="67" pos:column="29">NULL</name></expr>)</condition><then pos:line="67" pos:column="34"> <comment type="line" pos:line="67" pos:column="35">// mode main menu</comment>
	<block pos:line="68" pos:column="9">{	<if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><name pos:line="68" pos:column="21">_size</name> <op:operator pos:line="68" pos:column="27">&gt;</op:operator> <lit:literal type="number" pos:line="68" pos:column="29">0</lit:literal></expr>)</condition><then pos:line="68" pos:column="31">
		<block pos:line="69" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="70" pos:column="25">::</op:operator><name pos:line="70" pos:column="27">RemoveMenu</name></name><argument_list pos:line="70" pos:column="37">(<argument><expr><name pos:line="70" pos:column="38">_hMenu</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">_posBase</name></expr></argument>, <argument><expr><name pos:line="70" pos:column="56">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="71" pos:column="25">::</op:operator><name pos:line="71" pos:column="27">RemoveMenu</name></name><argument_list pos:line="71" pos:column="37">(<argument><expr><name pos:line="71" pos:column="38">_hMenu</name></expr></argument>, <argument><expr><name pos:line="71" pos:column="46">_posBase</name></expr></argument>, <argument><expr><name pos:line="71" pos:column="56">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<comment type="line" pos:line="73" pos:column="17">// switch to sub-menu mode</comment>
		<expr_stmt><expr><name pos:line="74" pos:column="17">_hParentMenu</name> <op:operator pos:line="74" pos:column="30">=</op:operator> <name pos:line="74" pos:column="32">_hMenu</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="75" pos:column="17">_hMenu</name> <op:operator pos:line="75" pos:column="24">=</op:operator> <call><name><op:operator pos:line="75" pos:column="26">::</op:operator><name pos:line="75" pos:column="28">CreatePopupMenu</name></name><argument_list pos:line="75" pos:column="43">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="76" pos:column="17">::</op:operator><name pos:line="76" pos:column="19">RemoveMenu</name></name><argument_list pos:line="76" pos:column="29">(<argument><expr><name pos:line="76" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="76" pos:column="38">_posBase</name><op:operator pos:line="76" pos:column="46">+</op:operator><lit:literal type="number" pos:line="76" pos:column="47">1</lit:literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="50">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then>
	<else pos:line="78" pos:column="9">else <comment type="line" pos:line="78" pos:column="14">// mode sub-menu</comment>
	<block pos:line="79" pos:column="9">{
		<if pos:line="80" pos:column="17">if <condition pos:line="80" pos:column="20">(<expr><name pos:line="80" pos:column="21">_size</name> <op:operator pos:line="80" pos:column="27">&gt;</op:operator> <lit:literal type="number" pos:line="80" pos:column="29">0</lit:literal></expr>)</condition><then pos:line="80" pos:column="31">
		<block pos:line="81" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="82" pos:column="25">::</op:operator><name pos:line="82" pos:column="27">RemoveMenu</name></name><argument_list pos:line="82" pos:column="37">(<argument><expr><name pos:line="82" pos:column="38">_hParentMenu</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="52">_posBase</name></expr></argument>, <argument><expr><name pos:line="82" pos:column="62">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="83" pos:column="25">::</op:operator><name pos:line="83" pos:column="27">RemoveMenu</name></name><argument_list pos:line="83" pos:column="37">(<argument><expr><name pos:line="83" pos:column="38">_hParentMenu</name></expr></argument>, <argument><expr><name pos:line="83" pos:column="52">_posBase</name></expr></argument>, <argument><expr><name pos:line="83" pos:column="62">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
		<comment type="line" pos:line="85" pos:column="17">// switch to main menu mode</comment>
		<expr_stmt><expr><call><name><op:operator pos:line="86" pos:column="17">::</op:operator><name pos:line="86" pos:column="19">DestroyMenu</name></name><argument_list pos:line="86" pos:column="30">(<argument><expr><name pos:line="86" pos:column="31">_hMenu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="87" pos:column="17">_hMenu</name> <op:operator pos:line="87" pos:column="24">=</op:operator> <name pos:line="87" pos:column="26">_hParentMenu</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="88" pos:column="17">_hParentMenu</name> <op:operator pos:line="88" pos:column="30">=</op:operator> <name pos:line="88" pos:column="32">NULL</name></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><name pos:line="90" pos:column="9">_hasSeparators</name> <op:operator pos:line="90" pos:column="24">=</op:operator> <lit:literal type="boolean" pos:line="90" pos:column="26">false</lit:literal></expr>;</expr_stmt>
}</block></function><empty_stmt pos:line="91" pos:column="2">;</empty_stmt>

<function><type><name pos:line="93" pos:column="1">void</name></type> <name><name pos:line="93" pos:column="6">LastRecentFileList</name><op:operator pos:line="93" pos:column="24">::</op:operator><name pos:line="93" pos:column="26">updateMenu</name></name><parameter_list pos:line="93" pos:column="36">()</parameter_list>
<block pos:line="94" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="95" pos:column="9">NppParameters</name> <type:modifier pos:line="95" pos:column="23">*</type:modifier></type><name pos:line="95" pos:column="24">pNppParam</name> <init pos:line="95" pos:column="34">= <expr><call><name><name pos:line="95" pos:column="36">NppParameters</name><op:operator pos:line="95" pos:column="49">::</op:operator><name pos:line="95" pos:column="51">getInstance</name></name><argument_list pos:line="95" pos:column="62">()</argument_list></call></expr></init></decl>;</decl_stmt>

	<if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><op:operator pos:line="97" pos:column="13">!</op:operator><name pos:line="97" pos:column="14">_hasSeparators</name> <op:operator pos:line="97" pos:column="29">&amp;&amp;</op:operator> <name pos:line="97" pos:column="32">_size</name> <op:operator pos:line="97" pos:column="38">&gt;</op:operator> <lit:literal type="number" pos:line="97" pos:column="40">0</lit:literal></expr>)</condition><then pos:line="97" pos:column="42"> 
	<block pos:line="98" pos:column="9">{	
		<comment type="line" pos:line="99" pos:column="17">//add separators</comment>
		<decl_stmt><decl><type><name pos:line="100" pos:column="17">NativeLangSpeaker</name> <type:modifier pos:line="100" pos:column="35">*</type:modifier></type><name pos:line="100" pos:column="36">pNativeLangSpeaker</name> <init pos:line="100" pos:column="55">= <expr><call><name><name pos:line="100" pos:column="57">pNppParam</name><op:operator pos:line="100" pos:column="66">-&gt;</op:operator><name pos:line="100" pos:column="68">getNativeLangSpeaker</name></name><argument_list pos:line="100" pos:column="88">()</argument_list></call></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name pos:line="102" pos:column="17">generic_string</name></type> <name pos:line="102" pos:column="32">recentFileList</name> <init pos:line="102" pos:column="47">= <expr><call><name><name pos:line="102" pos:column="49">pNativeLangSpeaker</name><op:operator pos:line="102" pos:column="67">-&gt;</op:operator><name pos:line="102" pos:column="69">getSpecialMenuEntryName</name></name><argument_list pos:line="102" pos:column="92">(<argument><expr><lit:literal type="string" pos:line="102" pos:column="93">"RecentFiles"</lit:literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="103" pos:column="17">generic_string</name></type> <name pos:line="103" pos:column="32">openAllFiles</name> <init pos:line="103" pos:column="45">= <expr><call><name><name pos:line="103" pos:column="47">pNativeLangSpeaker</name><op:operator pos:line="103" pos:column="65">-&gt;</op:operator><name pos:line="103" pos:column="67">getNativeLangMenuString</name></name><argument_list pos:line="103" pos:column="90">(<argument><expr><name pos:line="103" pos:column="91">IDM_OPEN_ALL_RECENT_FILE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="104" pos:column="17">generic_string</name></type> <name pos:line="104" pos:column="32">cleanFileList</name> <init pos:line="104" pos:column="46">= <expr><call><name><name pos:line="104" pos:column="48">pNativeLangSpeaker</name><op:operator pos:line="104" pos:column="66">-&gt;</op:operator><name pos:line="104" pos:column="68">getNativeLangMenuString</name></name><argument_list pos:line="104" pos:column="91">(<argument><expr><name pos:line="104" pos:column="92">IDM_CLEAN_RECENT_FILE_LIST</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="106" pos:column="17">if <condition pos:line="106" pos:column="20">(<expr><name pos:line="106" pos:column="21">recentFileList</name> <op:operator pos:line="106" pos:column="36">==</op:operator> <call><name pos:line="106" pos:column="39">TEXT</name><argument_list pos:line="106" pos:column="43">(<argument><expr><lit:literal type="string" pos:line="106" pos:column="44">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="106" pos:column="48">
			<expr_stmt><expr><name pos:line="107" pos:column="25">recentFileList</name> <op:operator pos:line="107" pos:column="40">=</op:operator> <call><name pos:line="107" pos:column="42">TEXT</name><argument_list pos:line="107" pos:column="46">(<argument><expr><lit:literal type="string" pos:line="107" pos:column="47">"&amp;Recent Files"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">openAllFiles</name> <op:operator pos:line="108" pos:column="34">==</op:operator> <call><name pos:line="108" pos:column="37">TEXT</name><argument_list pos:line="108" pos:column="41">(<argument><expr><lit:literal type="string" pos:line="108" pos:column="42">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="108" pos:column="46">
			<expr_stmt><expr><name pos:line="109" pos:column="25">openAllFiles</name> <op:operator pos:line="109" pos:column="38">=</op:operator> <call><name pos:line="109" pos:column="40">TEXT</name><argument_list pos:line="109" pos:column="44">(<argument><expr><lit:literal type="string" pos:line="109" pos:column="45">"Open All Recent Files"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
		<if pos:line="110" pos:column="17">if <condition pos:line="110" pos:column="20">(<expr><name pos:line="110" pos:column="21">cleanFileList</name> <op:operator pos:line="110" pos:column="35">==</op:operator> <call><name pos:line="110" pos:column="38">TEXT</name><argument_list pos:line="110" pos:column="42">(<argument><expr><lit:literal type="string" pos:line="110" pos:column="43">""</lit:literal></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="110" pos:column="47">
			<expr_stmt><expr><name pos:line="111" pos:column="25">cleanFileList</name> <op:operator pos:line="111" pos:column="39">=</op:operator> <call><name pos:line="111" pos:column="41">TEXT</name><argument_list pos:line="111" pos:column="45">(<argument><expr><lit:literal type="string" pos:line="111" pos:column="46">"Empty Recent Files List"</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<if pos:line="113" pos:column="17">if <condition pos:line="113" pos:column="20">(<expr><op:operator pos:line="113" pos:column="21">!</op:operator><call><name pos:line="113" pos:column="22">isSubMenuMode</name><argument_list pos:line="113" pos:column="35">()</argument_list></call></expr>)</condition><then pos:line="113" pos:column="38">
			<expr_stmt><expr><call><name><op:operator pos:line="114" pos:column="25">::</op:operator><name pos:line="114" pos:column="27">InsertMenu</name></name><argument_list pos:line="114" pos:column="37">(<argument><expr><name pos:line="114" pos:column="38">_hMenu</name></expr></argument>, <argument><expr><name pos:line="114" pos:column="46">_posBase</name> <op:operator pos:line="114" pos:column="55">+</op:operator> <lit:literal type="number" pos:line="114" pos:column="57">0</lit:literal></expr></argument>, <argument><expr><name pos:line="114" pos:column="60">MF_BYPOSITION</name></expr></argument>, <argument><expr><call><name pos:line="114" pos:column="75">UINT</name><argument_list pos:line="114" pos:column="79">(<argument><expr><op:operator pos:line="114" pos:column="80">-</op:operator><lit:literal type="number" pos:line="114" pos:column="81">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="114" pos:column="85">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>

		<expr_stmt><expr><call><name><op:operator pos:line="116" pos:column="17">::</op:operator><name pos:line="116" pos:column="19">InsertMenu</name></name><argument_list pos:line="116" pos:column="29">(<argument><expr><name pos:line="116" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="38">_posBase</name> <op:operator pos:line="116" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="116" pos:column="49">1</lit:literal></expr></argument>, <argument><expr><name pos:line="116" pos:column="52">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="116" pos:column="67">IDM_OPEN_ALL_RECENT_FILE</name></expr></argument>, <argument><expr><call><name><name pos:line="116" pos:column="93">openAllFiles</name><op:operator pos:line="116" pos:column="105">.</op:operator><name pos:line="116" pos:column="106">c_str</name></name><argument_list pos:line="116" pos:column="111">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="117" pos:column="17">::</op:operator><name pos:line="117" pos:column="19">InsertMenu</name></name><argument_list pos:line="117" pos:column="29">(<argument><expr><name pos:line="117" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="117" pos:column="38">_posBase</name> <op:operator pos:line="117" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="117" pos:column="49">2</lit:literal></expr></argument>, <argument><expr><name pos:line="117" pos:column="52">MF_BYPOSITION</name></expr></argument>, <argument><expr><name pos:line="117" pos:column="67">IDM_CLEAN_RECENT_FILE_LIST</name></expr></argument>, <argument><expr><call><name><name pos:line="117" pos:column="95">cleanFileList</name><op:operator pos:line="117" pos:column="108">.</op:operator><name pos:line="117" pos:column="109">c_str</name></name><argument_list pos:line="117" pos:column="114">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="118" pos:column="17">::</op:operator><name pos:line="118" pos:column="19">InsertMenu</name></name><argument_list pos:line="118" pos:column="29">(<argument><expr><name pos:line="118" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="118" pos:column="38">_posBase</name> <op:operator pos:line="118" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="118" pos:column="49">3</lit:literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="52">MF_BYPOSITION</name></expr></argument>, <argument><expr><call><name pos:line="118" pos:column="67">UINT</name><argument_list pos:line="118" pos:column="71">(<argument><expr><op:operator pos:line="118" pos:column="72">-</op:operator><lit:literal type="number" pos:line="118" pos:column="73">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="118" pos:column="77">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="119" pos:column="17">_hasSeparators</name> <op:operator pos:line="119" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="119" pos:column="34">true</lit:literal></expr>;</expr_stmt>

		<if pos:line="121" pos:column="17">if <condition pos:line="121" pos:column="20">(<expr><call><name pos:line="121" pos:column="21">isSubMenuMode</name><argument_list pos:line="121" pos:column="34">()</argument_list></call></expr>)</condition><then pos:line="121" pos:column="37">
		<block pos:line="122" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="123" pos:column="25">::</op:operator><name pos:line="123" pos:column="27">InsertMenu</name></name><argument_list pos:line="123" pos:column="37">(<argument><expr><name pos:line="123" pos:column="38">_hParentMenu</name></expr></argument>, <argument><expr><name pos:line="123" pos:column="52">_posBase</name> <op:operator pos:line="123" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="123" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><name pos:line="123" pos:column="66">MF_BYPOSITION</name> <op:operator pos:line="123" pos:column="80">|</op:operator> <name pos:line="123" pos:column="82">MF_POPUP</name></expr></argument>, <argument><expr><call><name pos:line="123" pos:column="92">UINT</name><argument_list pos:line="123" pos:column="96">(<argument><expr><name pos:line="123" pos:column="97">_hMenu</name></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><op:operator pos:line="123" pos:column="106">(</op:operator><name pos:line="123" pos:column="107">LPCTSTR</name><op:operator pos:line="123" pos:column="114">)</op:operator><call><name><name pos:line="123" pos:column="115">recentFileList</name><op:operator pos:line="123" pos:column="129">.</op:operator><name pos:line="123" pos:column="130">c_str</name></name><argument_list pos:line="123" pos:column="135">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="124" pos:column="25">::</op:operator><name pos:line="124" pos:column="27">InsertMenu</name></name><argument_list pos:line="124" pos:column="37">(<argument><expr><name pos:line="124" pos:column="38">_hParentMenu</name></expr></argument>, <argument><expr><name pos:line="124" pos:column="52">_posBase</name> <op:operator pos:line="124" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="124" pos:column="63">1</lit:literal></expr></argument>, <argument><expr><name pos:line="124" pos:column="66">MF_BYPOSITION</name></expr></argument>, <argument><expr><call><name pos:line="124" pos:column="81">UINT</name><argument_list pos:line="124" pos:column="85">(<argument><expr><op:operator pos:line="124" pos:column="86">-</op:operator><lit:literal type="number" pos:line="124" pos:column="87">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><lit:literal type="number" pos:line="124" pos:column="91">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then>
	<else pos:line="127" pos:column="9">else <if pos:line="127" pos:column="14">if <condition pos:line="127" pos:column="17">(<expr><name pos:line="127" pos:column="18">_hasSeparators</name> <op:operator pos:line="127" pos:column="33">&amp;&amp;</op:operator> <name pos:line="127" pos:column="36">_size</name> <op:operator pos:line="127" pos:column="42">==</op:operator> <lit:literal type="number" pos:line="127" pos:column="45">0</lit:literal></expr>)</condition><then pos:line="127" pos:column="47"> 	<comment type="line" pos:line="127" pos:column="49">//remove separators</comment>
	<block pos:line="128" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="129" pos:column="17">::</op:operator><name pos:line="129" pos:column="19">RemoveMenu</name></name><argument_list pos:line="129" pos:column="29">(<argument><expr><name pos:line="129" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="129" pos:column="38">_posBase</name> <op:operator pos:line="129" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="129" pos:column="49">3</lit:literal></expr></argument>, <argument><expr><name pos:line="129" pos:column="52">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="130" pos:column="17">::</op:operator><name pos:line="130" pos:column="19">RemoveMenu</name></name><argument_list pos:line="130" pos:column="29">(<argument><expr><name pos:line="130" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="130" pos:column="38">IDM_CLEAN_RECENT_FILE_LIST</name></expr></argument>, <argument><expr><name pos:line="130" pos:column="66">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="131" pos:column="17">::</op:operator><name pos:line="131" pos:column="19">RemoveMenu</name></name><argument_list pos:line="131" pos:column="29">(<argument><expr><name pos:line="131" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="38">IDM_OPEN_ALL_RECENT_FILE</name></expr></argument>, <argument><expr><name pos:line="131" pos:column="64">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="132" pos:column="17">::</op:operator><name pos:line="132" pos:column="19">RemoveMenu</name></name><argument_list pos:line="132" pos:column="29">(<argument><expr><name pos:line="132" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="132" pos:column="38">_posBase</name> <op:operator pos:line="132" pos:column="47">+</op:operator> <lit:literal type="number" pos:line="132" pos:column="49">0</lit:literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="52">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="133" pos:column="17">_hasSeparators</name> <op:operator pos:line="133" pos:column="32">=</op:operator> <lit:literal type="boolean" pos:line="133" pos:column="34">false</lit:literal></expr>;</expr_stmt>

		<if pos:line="135" pos:column="17">if <condition pos:line="135" pos:column="20">(<expr><call><name pos:line="135" pos:column="21">isSubMenuMode</name><argument_list pos:line="135" pos:column="34">()</argument_list></call></expr>)</condition><then pos:line="135" pos:column="37">
		<block pos:line="136" pos:column="17">{
			<comment type="line" pos:line="137" pos:column="25">// Remove "Recent Files" Entry and the separator from the main menu</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="138" pos:column="25">::</op:operator><name pos:line="138" pos:column="27">RemoveMenu</name></name><argument_list pos:line="138" pos:column="37">(<argument><expr><name pos:line="138" pos:column="38">_hParentMenu</name></expr></argument>, <argument><expr><name pos:line="138" pos:column="52">_posBase</name> <op:operator pos:line="138" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="138" pos:column="63">1</lit:literal></expr></argument>, <argument><expr><name pos:line="138" pos:column="66">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="139" pos:column="25">::</op:operator><name pos:line="139" pos:column="27">RemoveMenu</name></name><argument_list pos:line="139" pos:column="37">(<argument><expr><name pos:line="139" pos:column="38">_hParentMenu</name></expr></argument>, <argument><expr><name pos:line="139" pos:column="52">_posBase</name> <op:operator pos:line="139" pos:column="61">+</op:operator> <lit:literal type="number" pos:line="139" pos:column="63">0</lit:literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="66">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<comment type="line" pos:line="141" pos:column="25">// Remove the last left separator from the submenu</comment>
			<expr_stmt><expr><call><name><op:operator pos:line="142" pos:column="25">::</op:operator><name pos:line="142" pos:column="27">RemoveMenu</name></name><argument_list pos:line="142" pos:column="37">(<argument><expr><name pos:line="142" pos:column="38">_hMenu</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="142" pos:column="46">0</lit:literal></expr></argument>, <argument><expr><name pos:line="142" pos:column="49">MF_BYPOSITION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></then></if>
	}</block></then></if></else></if>

	<comment type="line" pos:line="146" pos:column="9">//Remove all menu items</comment>
	<for pos:line="147" pos:column="9">for(<init><decl><type><name pos:line="147" pos:column="13">int</name></type> <name pos:line="147" pos:column="17">i</name> <init pos:line="147" pos:column="19">= <expr><lit:literal type="number" pos:line="147" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="147" pos:column="24">i</name> <op:operator pos:line="147" pos:column="26">&lt;</op:operator> <name pos:line="147" pos:column="28">_size</name></expr>;</condition> <incr><expr><name pos:line="147" pos:column="35">i</name><op:operator pos:line="147" pos:column="36">++</op:operator></expr></incr>) 
	<block pos:line="148" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="149" pos:column="17">::</op:operator><name pos:line="149" pos:column="19">RemoveMenu</name></name><argument_list pos:line="149" pos:column="29">(<argument><expr><name pos:line="149" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><call><name><name pos:line="149" pos:column="38">_lrfl</name><op:operator pos:line="149" pos:column="43">.</op:operator><name pos:line="149" pos:column="44">at</name></name><argument_list pos:line="149" pos:column="46">(<argument><expr><name pos:line="149" pos:column="47">i</name></expr></argument>)</argument_list></call><op:operator pos:line="149" pos:column="49">.</op:operator><name pos:line="149" pos:column="50">_id</name></expr></argument>, <argument><expr><name pos:line="149" pos:column="55">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<comment type="line" pos:line="151" pos:column="9">//Then readd them, so everything stays in sync</comment>
	<for pos:line="152" pos:column="9">for(<init><decl><type><name pos:line="152" pos:column="13">int</name></type> <name pos:line="152" pos:column="17">j</name> <init pos:line="152" pos:column="19">= <expr><lit:literal type="number" pos:line="152" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="152" pos:column="24">j</name> <op:operator pos:line="152" pos:column="26">&lt;</op:operator> <name pos:line="152" pos:column="28">_size</name></expr>;</condition> <incr><expr><name pos:line="152" pos:column="35">j</name><op:operator pos:line="152" pos:column="36">++</op:operator></expr></incr>)
	<block pos:line="153" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="154" pos:column="17">generic_string</name></type> <name pos:line="154" pos:column="32">strBuffer</name><argument_list pos:line="154" pos:column="41">(<argument><expr><call><name pos:line="154" pos:column="42">BuildMenuFileName</name><argument_list pos:line="154" pos:column="59">(<argument><expr><call><name><name pos:line="154" pos:column="60">pNppParam</name><op:operator pos:line="154" pos:column="69">-&gt;</op:operator><name pos:line="154" pos:column="71">getRecentFileCustomLength</name></name><argument_list pos:line="154" pos:column="96">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="154" pos:column="100">j</name></expr></argument>, <argument><expr><call><name><name pos:line="154" pos:column="103">_lrfl</name><op:operator pos:line="154" pos:column="108">.</op:operator><name pos:line="154" pos:column="109">at</name></name><argument_list pos:line="154" pos:column="111">(<argument><expr><name pos:line="154" pos:column="112">j</name></expr></argument>)</argument_list></call><op:operator pos:line="154" pos:column="114">.</op:operator><name pos:line="154" pos:column="115">_name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><op:operator pos:line="155" pos:column="17">::</op:operator><name pos:line="155" pos:column="19">InsertMenu</name></name><argument_list pos:line="155" pos:column="29">(<argument><expr><name pos:line="155" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><name pos:line="155" pos:column="38">_posBase</name> <op:operator pos:line="155" pos:column="47">+</op:operator> <name pos:line="155" pos:column="49">j</name></expr></argument>, <argument><expr><name pos:line="155" pos:column="52">MF_BYPOSITION</name></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="67">_lrfl</name><op:operator pos:line="155" pos:column="72">.</op:operator><name pos:line="155" pos:column="73">at</name></name><argument_list pos:line="155" pos:column="75">(<argument><expr><name pos:line="155" pos:column="76">j</name></expr></argument>)</argument_list></call><op:operator pos:line="155" pos:column="78">.</op:operator><name pos:line="155" pos:column="79">_id</name></expr></argument>, <argument><expr><call><name><name pos:line="155" pos:column="84">strBuffer</name><op:operator pos:line="155" pos:column="93">.</op:operator><name pos:line="155" pos:column="94">c_str</name></name><argument_list pos:line="155" pos:column="99">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	
}</block></function>

<function><type><name pos:line="160" pos:column="1">void</name></type> <name><name pos:line="160" pos:column="6">LastRecentFileList</name><op:operator pos:line="160" pos:column="24">::</op:operator><name pos:line="160" pos:column="26">add</name></name><parameter_list pos:line="160" pos:column="29">(<param><decl><type><specifier pos:line="160" pos:column="30">const</specifier> <name pos:line="160" pos:column="36">TCHAR</name> <type:modifier pos:line="160" pos:column="42">*</type:modifier></type><name pos:line="160" pos:column="43">fn</name></decl></param>)</parameter_list> 
<block pos:line="161" pos:column="1">{
	<if pos:line="162" pos:column="9">if <condition pos:line="162" pos:column="12">(<expr><name pos:line="162" pos:column="13">_userMax</name> <op:operator pos:line="162" pos:column="22">==</op:operator> <lit:literal type="number" pos:line="162" pos:column="25">0</lit:literal> <op:operator pos:line="162" pos:column="27">||</op:operator> <name pos:line="162" pos:column="30">_locked</name></expr>)</condition><then pos:line="162" pos:column="38">
		<return pos:line="163" pos:column="17">return;</return></then></if>

	<function_decl><type><name pos:line="165" pos:column="9">RecentItem</name></type> <name pos:line="165" pos:column="20">itemToAdd</name><parameter_list pos:line="165" pos:column="29">(<param><decl><type><name pos:line="165" pos:column="30">fn</name></type></decl></param>)</parameter_list>;</function_decl>

	<decl_stmt><decl><type><name pos:line="167" pos:column="9">int</name></type> <name pos:line="167" pos:column="13">index</name> <init pos:line="167" pos:column="19">= <expr><call><name pos:line="167" pos:column="21">find</name><argument_list pos:line="167" pos:column="25">(<argument><expr><name pos:line="167" pos:column="26">fn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name pos:line="168" pos:column="13">index</name> <op:operator pos:line="168" pos:column="19">!=</op:operator> <op:operator pos:line="168" pos:column="22">-</op:operator><lit:literal type="number" pos:line="168" pos:column="23">1</lit:literal></expr>)</condition><then pos:line="168" pos:column="25"> <block pos:line="168" pos:column="26">{	<comment type="line" pos:line="168" pos:column="33">//already in list, bump upwards</comment>
		<expr_stmt><expr><call><name pos:line="169" pos:column="17">remove</name><argument_list pos:line="169" pos:column="23">(<argument><expr><name pos:line="169" pos:column="24">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>

	<if pos:line="172" pos:column="9">if <condition pos:line="172" pos:column="12">(<expr><name pos:line="172" pos:column="13">_size</name> <op:operator pos:line="172" pos:column="19">==</op:operator> <name pos:line="172" pos:column="22">_userMax</name></expr>)</condition><then pos:line="172" pos:column="31"> <block pos:line="172" pos:column="32">{
		<expr_stmt><expr><name><name pos:line="173" pos:column="17">itemToAdd</name><op:operator pos:line="173" pos:column="26">.</op:operator><name pos:line="173" pos:column="27">_id</name></name> <op:operator pos:line="173" pos:column="31">=</op:operator> <call><name><name pos:line="173" pos:column="33">_lrfl</name><op:operator pos:line="173" pos:column="38">.</op:operator><name pos:line="173" pos:column="39">back</name></name><argument_list pos:line="173" pos:column="43">()</argument_list></call><op:operator pos:line="173" pos:column="45">.</op:operator><name pos:line="173" pos:column="46">_id</name></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="174" pos:column="17">_lrfl</name><op:operator pos:line="174" pos:column="22">.</op:operator><name pos:line="174" pos:column="23">pop_back</name></name><argument_list pos:line="174" pos:column="31">()</argument_list></call></expr>;</expr_stmt>	<comment type="line" pos:line="174" pos:column="41">//remove oldest</comment>
	}</block></then> <else pos:line="175" pos:column="11">else <block pos:line="175" pos:column="16">{
		<expr_stmt><expr><name><name pos:line="176" pos:column="17">itemToAdd</name><op:operator pos:line="176" pos:column="26">.</op:operator><name pos:line="176" pos:column="27">_id</name></name> <op:operator pos:line="176" pos:column="31">=</op:operator> <call><name pos:line="176" pos:column="33">popFirstAvailableID</name><argument_list pos:line="176" pos:column="52">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="177" pos:column="17">_size</name><op:operator pos:line="177" pos:column="22">++</op:operator></expr>;</expr_stmt>
	}</block></else></if>
	<expr_stmt><expr><call><name><name pos:line="179" pos:column="9">_lrfl</name><op:operator pos:line="179" pos:column="14">.</op:operator><name pos:line="179" pos:column="15">push_front</name></name><argument_list pos:line="179" pos:column="25">(<argument><expr><name pos:line="179" pos:column="26">itemToAdd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="180" pos:column="9">updateMenu</name><argument_list pos:line="180" pos:column="19">()</argument_list></call></expr>;</expr_stmt>
}</block></function><empty_stmt pos:line="181" pos:column="2">;</empty_stmt>

<function><type><name pos:line="183" pos:column="1">void</name></type> <name><name pos:line="183" pos:column="6">LastRecentFileList</name><op:operator pos:line="183" pos:column="24">::</op:operator><name pos:line="183" pos:column="26">remove</name></name><parameter_list pos:line="183" pos:column="32">(<param><decl><type><specifier pos:line="183" pos:column="33">const</specifier> <name pos:line="183" pos:column="39">TCHAR</name> <type:modifier pos:line="183" pos:column="45">*</type:modifier></type><name pos:line="183" pos:column="46">fn</name></decl></param>)</parameter_list> 
<block pos:line="184" pos:column="1">{ 
	<decl_stmt><decl><type><name pos:line="185" pos:column="9">int</name></type> <name pos:line="185" pos:column="13">index</name> <init pos:line="185" pos:column="19">= <expr><call><name pos:line="185" pos:column="21">find</name><argument_list pos:line="185" pos:column="25">(<argument><expr><name pos:line="185" pos:column="26">fn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="186" pos:column="9">if <condition pos:line="186" pos:column="12">(<expr><name pos:line="186" pos:column="13">index</name> <op:operator pos:line="186" pos:column="19">!=</op:operator> <op:operator pos:line="186" pos:column="22">-</op:operator><lit:literal type="number" pos:line="186" pos:column="23">1</lit:literal></expr>)</condition><then pos:line="186" pos:column="25">
		<expr_stmt><expr><call><name pos:line="187" pos:column="17">remove</name><argument_list pos:line="187" pos:column="23">(<argument><expr><name pos:line="187" pos:column="24">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
}</block></function><empty_stmt pos:line="188" pos:column="2">;</empty_stmt>

<function><type><name pos:line="190" pos:column="1">void</name></type> <name><name pos:line="190" pos:column="6">LastRecentFileList</name><op:operator pos:line="190" pos:column="24">::</op:operator><name pos:line="190" pos:column="26">remove</name></name><parameter_list pos:line="190" pos:column="32">(<param><decl><type><name pos:line="190" pos:column="33">int</name></type> <name pos:line="190" pos:column="37">index</name></decl></param>)</parameter_list> 
<block pos:line="191" pos:column="1">{
	<if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><name pos:line="192" pos:column="13">_size</name> <op:operator pos:line="192" pos:column="19">==</op:operator> <lit:literal type="number" pos:line="192" pos:column="22">0</lit:literal> <op:operator pos:line="192" pos:column="24">||</op:operator> <name pos:line="192" pos:column="27">_locked</name></expr>)</condition><then pos:line="192" pos:column="35">
		<return pos:line="193" pos:column="17">return;</return></then></if>
	<if pos:line="194" pos:column="9">if <condition pos:line="194" pos:column="12">(<expr><name pos:line="194" pos:column="13">index</name> <op:operator pos:line="194" pos:column="19">&gt;</op:operator> <op:operator pos:line="194" pos:column="21">-</op:operator><lit:literal type="number" pos:line="194" pos:column="22">1</lit:literal> <op:operator pos:line="194" pos:column="24">&amp;&amp;</op:operator> <name pos:line="194" pos:column="27">index</name> <op:operator pos:line="194" pos:column="33">&lt;</op:operator> <op:operator pos:line="194" pos:column="35">(</op:operator><name pos:line="194" pos:column="36">int</name><op:operator pos:line="194" pos:column="39">)</op:operator><call><name><name pos:line="194" pos:column="40">_lrfl</name><op:operator pos:line="194" pos:column="45">.</op:operator><name pos:line="194" pos:column="46">size</name></name><argument_list pos:line="194" pos:column="50">()</argument_list></call></expr>)</condition><then pos:line="194" pos:column="53">
	<block pos:line="195" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="196" pos:column="17">::</op:operator><name pos:line="196" pos:column="19">RemoveMenu</name></name><argument_list pos:line="196" pos:column="29">(<argument><expr><name pos:line="196" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><call><name><name pos:line="196" pos:column="38">_lrfl</name><op:operator pos:line="196" pos:column="43">.</op:operator><name pos:line="196" pos:column="44">at</name></name><argument_list pos:line="196" pos:column="46">(<argument><expr><name pos:line="196" pos:column="47">index</name></expr></argument>)</argument_list></call><op:operator pos:line="196" pos:column="53">.</op:operator><name pos:line="196" pos:column="54">_id</name></expr></argument>, <argument><expr><name pos:line="196" pos:column="59">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="197" pos:column="17">setAvailable</name><argument_list pos:line="197" pos:column="29">(<argument><expr><call><name><name pos:line="197" pos:column="30">_lrfl</name><op:operator pos:line="197" pos:column="35">.</op:operator><name pos:line="197" pos:column="36">at</name></name><argument_list pos:line="197" pos:column="38">(<argument><expr><name pos:line="197" pos:column="39">index</name></expr></argument>)</argument_list></call><op:operator pos:line="197" pos:column="45">.</op:operator><name pos:line="197" pos:column="46">_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="198" pos:column="17">_lrfl</name><op:operator pos:line="198" pos:column="22">.</op:operator><name pos:line="198" pos:column="23">erase</name></name><argument_list pos:line="198" pos:column="28">(<argument><expr><call><name><name pos:line="198" pos:column="29">_lrfl</name><op:operator pos:line="198" pos:column="34">.</op:operator><name pos:line="198" pos:column="35">begin</name></name><argument_list pos:line="198" pos:column="40">()</argument_list></call> <op:operator pos:line="198" pos:column="43">+</op:operator> <name pos:line="198" pos:column="45">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="199" pos:column="17">_size</name><op:operator pos:line="199" pos:column="22">--</op:operator></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="200" pos:column="17">updateMenu</name><argument_list pos:line="200" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
}</block></function><empty_stmt pos:line="202" pos:column="2">;</empty_stmt>


<function><type><name pos:line="205" pos:column="1">void</name></type> <name><name pos:line="205" pos:column="6">LastRecentFileList</name><op:operator pos:line="205" pos:column="24">::</op:operator><name pos:line="205" pos:column="26">clear</name></name><parameter_list pos:line="205" pos:column="31">()</parameter_list> 
<block pos:line="206" pos:column="1">{
	<if pos:line="207" pos:column="9">if <condition pos:line="207" pos:column="12">(<expr><name pos:line="207" pos:column="13">_size</name> <op:operator pos:line="207" pos:column="19">==</op:operator> <lit:literal type="number" pos:line="207" pos:column="22">0</lit:literal></expr>)</condition><then pos:line="207" pos:column="24">
		<return pos:line="208" pos:column="17">return;</return></then></if>

	<for pos:line="210" pos:column="9">for(<init><decl><type><name pos:line="210" pos:column="13">int</name></type> <name pos:line="210" pos:column="17">i</name> <init pos:line="210" pos:column="19">= <expr><op:operator pos:line="210" pos:column="21">(</op:operator><name pos:line="210" pos:column="22">_size</name><op:operator pos:line="210" pos:column="27">-</op:operator><lit:literal type="number" pos:line="210" pos:column="28">1</lit:literal><op:operator pos:line="210" pos:column="29">)</op:operator></expr></init></decl>;</init> <condition><expr><name pos:line="210" pos:column="32">i</name> <op:operator pos:line="210" pos:column="34">&gt;=</op:operator> <lit:literal type="number" pos:line="210" pos:column="37">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="210" pos:column="40">i</name><op:operator pos:line="210" pos:column="41">--</op:operator></expr></incr>) 
	<block pos:line="211" pos:column="9">{
		<expr_stmt><expr><call><name><op:operator pos:line="212" pos:column="17">::</op:operator><name pos:line="212" pos:column="19">RemoveMenu</name></name><argument_list pos:line="212" pos:column="29">(<argument><expr><name pos:line="212" pos:column="30">_hMenu</name></expr></argument>, <argument><expr><call><name><name pos:line="212" pos:column="38">_lrfl</name><op:operator pos:line="212" pos:column="43">.</op:operator><name pos:line="212" pos:column="44">at</name></name><argument_list pos:line="212" pos:column="46">(<argument><expr><name pos:line="212" pos:column="47">i</name></expr></argument>)</argument_list></call><op:operator pos:line="212" pos:column="49">.</op:operator><name pos:line="212" pos:column="50">_id</name></expr></argument>, <argument><expr><name pos:line="212" pos:column="55">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="213" pos:column="17">setAvailable</name><argument_list pos:line="213" pos:column="29">(<argument><expr><call><name><name pos:line="213" pos:column="30">_lrfl</name><op:operator pos:line="213" pos:column="35">.</op:operator><name pos:line="213" pos:column="36">at</name></name><argument_list pos:line="213" pos:column="38">(<argument><expr><name pos:line="213" pos:column="39">i</name></expr></argument>)</argument_list></call><op:operator pos:line="213" pos:column="41">.</op:operator><name pos:line="213" pos:column="42">_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name><name pos:line="214" pos:column="17">_lrfl</name><op:operator pos:line="214" pos:column="22">.</op:operator><name pos:line="214" pos:column="23">erase</name></name><argument_list pos:line="214" pos:column="28">(<argument><expr><call><name><name pos:line="214" pos:column="29">_lrfl</name><op:operator pos:line="214" pos:column="34">.</op:operator><name pos:line="214" pos:column="35">begin</name></name><argument_list pos:line="214" pos:column="40">()</argument_list></call> <op:operator pos:line="214" pos:column="43">+</op:operator> <name pos:line="214" pos:column="45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
	<expr_stmt><expr><name pos:line="216" pos:column="9">_size</name> <op:operator pos:line="216" pos:column="15">=</op:operator> <lit:literal type="number" pos:line="216" pos:column="17">0</lit:literal></expr>;</expr_stmt>
	<expr_stmt><expr><call><name pos:line="217" pos:column="9">updateMenu</name><argument_list pos:line="217" pos:column="19">()</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name pos:line="221" pos:column="1">generic_string</name> <type:modifier pos:line="221" pos:column="16">&amp;</type:modifier></type> <name><name pos:line="221" pos:column="18">LastRecentFileList</name><op:operator pos:line="221" pos:column="36">::</op:operator><name pos:line="221" pos:column="38">getItem</name></name><parameter_list pos:line="221" pos:column="45">(<param><decl><type><name pos:line="221" pos:column="46">int</name></type> <name pos:line="221" pos:column="50">id</name></decl></param>)</parameter_list> 
<block pos:line="222" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="223" pos:column="9">int</name></type> <name pos:line="223" pos:column="13">i</name> <init pos:line="223" pos:column="15">= <expr><lit:literal type="number" pos:line="223" pos:column="17">0</lit:literal></expr></init></decl>;</decl_stmt>
	<for pos:line="224" pos:column="9">for(<init pos:line="224" pos:column="13">;</init> <condition><expr><name pos:line="224" pos:column="15">i</name> <op:operator pos:line="224" pos:column="17">&lt;</op:operator> <name pos:line="224" pos:column="19">_size</name></expr>;</condition> <incr><expr><name pos:line="224" pos:column="26">i</name><op:operator pos:line="224" pos:column="27">++</op:operator></expr></incr>)
	<block pos:line="225" pos:column="9">{
		<if pos:line="226" pos:column="17">if <condition pos:line="226" pos:column="20">(<expr><call><name><name pos:line="226" pos:column="21">_lrfl</name><op:operator pos:line="226" pos:column="26">.</op:operator><name pos:line="226" pos:column="27">at</name></name><argument_list pos:line="226" pos:column="29">(<argument><expr><name pos:line="226" pos:column="30">i</name></expr></argument>)</argument_list></call><op:operator pos:line="226" pos:column="32">.</op:operator><name pos:line="226" pos:column="33">_id</name> <op:operator pos:line="226" pos:column="37">==</op:operator> <name pos:line="226" pos:column="40">id</name></expr>)</condition><then pos:line="226" pos:column="43">
			<break pos:line="227" pos:column="25">break;</break></then></if>
	}</block></for>
	<if pos:line="229" pos:column="9">if <condition pos:line="229" pos:column="12">(<expr><name pos:line="229" pos:column="13">i</name> <op:operator pos:line="229" pos:column="15">==</op:operator> <name pos:line="229" pos:column="18">_size</name></expr>)</condition><then pos:line="229" pos:column="24">
		<expr_stmt><expr><name pos:line="230" pos:column="17">i</name> <op:operator pos:line="230" pos:column="19">=</op:operator> <lit:literal type="number" pos:line="230" pos:column="21">0</lit:literal></expr>;</expr_stmt></then></if>
	<return pos:line="231" pos:column="9">return <expr><call><name><name pos:line="231" pos:column="16">_lrfl</name><op:operator pos:line="231" pos:column="21">.</op:operator><name pos:line="231" pos:column="22">at</name></name><argument_list pos:line="231" pos:column="24">(<argument><expr><name pos:line="231" pos:column="25">i</name></expr></argument>)</argument_list></call><op:operator pos:line="231" pos:column="27">.</op:operator><name pos:line="231" pos:column="28">_name</name></expr>;</return>	<comment type="line" pos:line="231" pos:column="41">//if not found, return first</comment>
}</block></function><empty_stmt pos:line="232" pos:column="2">;</empty_stmt>

<function><type><name pos:line="234" pos:column="1">generic_string</name> <type:modifier pos:line="234" pos:column="16">&amp;</type:modifier></type> <name><name pos:line="234" pos:column="18">LastRecentFileList</name><op:operator pos:line="234" pos:column="36">::</op:operator><name pos:line="234" pos:column="38">getIndex</name></name><parameter_list pos:line="234" pos:column="46">(<param><decl><type><name pos:line="234" pos:column="47">int</name></type> <name pos:line="234" pos:column="51">index</name></decl></param>)</parameter_list>
<block pos:line="235" pos:column="1">{
	<return pos:line="236" pos:column="9">return <expr><call><name><name pos:line="236" pos:column="16">_lrfl</name><op:operator pos:line="236" pos:column="21">.</op:operator><name pos:line="236" pos:column="22">at</name></name><argument_list pos:line="236" pos:column="24">(<argument><expr><name pos:line="236" pos:column="25">index</name></expr></argument>)</argument_list></call><op:operator pos:line="236" pos:column="31">.</op:operator><name pos:line="236" pos:column="32">_name</name></expr>;</return>	<comment type="line" pos:line="236" pos:column="41">//if not found, return first</comment>
}</block></function>


<function><type><name pos:line="240" pos:column="1">void</name></type> <name><name pos:line="240" pos:column="6">LastRecentFileList</name><op:operator pos:line="240" pos:column="24">::</op:operator><name pos:line="240" pos:column="26">setUserMaxNbLRF</name></name><parameter_list pos:line="240" pos:column="41">(<param><decl><type><name pos:line="240" pos:column="42">int</name></type> <name pos:line="240" pos:column="46">size</name></decl></param>)</parameter_list>
<block pos:line="241" pos:column="1">{
	<expr_stmt><expr><name pos:line="242" pos:column="9">_userMax</name> <op:operator pos:line="242" pos:column="18">=</op:operator> <name pos:line="242" pos:column="20">size</name></expr>;</expr_stmt>
	<if pos:line="243" pos:column="9">if <condition pos:line="243" pos:column="12">(<expr><name pos:line="243" pos:column="13">_size</name> <op:operator pos:line="243" pos:column="19">&gt;</op:operator> <name pos:line="243" pos:column="21">_userMax</name></expr>)</condition><then pos:line="243" pos:column="30"> 
	<block pos:line="244" pos:column="9">{	<comment type="line" pos:line="244" pos:column="17">//start popping items</comment>
		<decl_stmt><decl><type><name pos:line="245" pos:column="17">int</name></type> <name pos:line="245" pos:column="21">toPop</name> <init pos:line="245" pos:column="27">= <expr><name pos:line="245" pos:column="29">_size</name><op:operator pos:line="245" pos:column="34">-</op:operator><name pos:line="245" pos:column="35">_userMax</name></expr></init></decl>;</decl_stmt>
		<while pos:line="246" pos:column="17">while<condition pos:line="246" pos:column="22">(<expr><name pos:line="246" pos:column="23">toPop</name> <op:operator pos:line="246" pos:column="29">&gt;</op:operator> <lit:literal type="number" pos:line="246" pos:column="31">0</lit:literal></expr>)</condition> 
		<block pos:line="247" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="248" pos:column="25">::</op:operator><name pos:line="248" pos:column="27">RemoveMenu</name></name><argument_list pos:line="248" pos:column="37">(<argument><expr><name pos:line="248" pos:column="38">_hMenu</name></expr></argument>, <argument><expr><call><name><name pos:line="248" pos:column="46">_lrfl</name><op:operator pos:line="248" pos:column="51">.</op:operator><name pos:line="248" pos:column="52">back</name></name><argument_list pos:line="248" pos:column="56">()</argument_list></call><op:operator pos:line="248" pos:column="58">.</op:operator><name pos:line="248" pos:column="59">_id</name></expr></argument>, <argument><expr><name pos:line="248" pos:column="64">MF_BYCOMMAND</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="249" pos:column="25">setAvailable</name><argument_list pos:line="249" pos:column="37">(<argument><expr><call><name><name pos:line="249" pos:column="38">_lrfl</name><op:operator pos:line="249" pos:column="43">.</op:operator><name pos:line="249" pos:column="44">back</name></name><argument_list pos:line="249" pos:column="48">()</argument_list></call><op:operator pos:line="249" pos:column="50">.</op:operator><name pos:line="249" pos:column="51">_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><name pos:line="250" pos:column="25">_lrfl</name><op:operator pos:line="250" pos:column="30">.</op:operator><name pos:line="250" pos:column="31">pop_back</name></name><argument_list pos:line="250" pos:column="39">()</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="251" pos:column="25">toPop</name><op:operator pos:line="251" pos:column="30">--</op:operator></expr>;</expr_stmt>
			<expr_stmt><expr><name pos:line="252" pos:column="25">_size</name><op:operator pos:line="252" pos:column="30">--</op:operator></expr>;</expr_stmt>
		}</block></while>
		<expr_stmt><expr><call><name pos:line="254" pos:column="17">updateMenu</name><argument_list pos:line="254" pos:column="27">()</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="255" pos:column="17">_size</name> <op:operator pos:line="255" pos:column="23">=</op:operator> <name pos:line="255" pos:column="25">_userMax</name></expr>;</expr_stmt>
	}</block></then></if>
}</block></function>



<function><type><name pos:line="261" pos:column="1">void</name></type> <name><name pos:line="261" pos:column="6">LastRecentFileList</name><op:operator pos:line="261" pos:column="24">::</op:operator><name pos:line="261" pos:column="26">saveLRFL</name></name><parameter_list pos:line="261" pos:column="34">()</parameter_list>
<block pos:line="262" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="263" pos:column="9">NppParameters</name> <type:modifier pos:line="263" pos:column="23">*</type:modifier></type><name pos:line="263" pos:column="24">pNppParams</name> <init pos:line="263" pos:column="35">= <expr><call><name><name pos:line="263" pos:column="37">NppParameters</name><op:operator pos:line="263" pos:column="50">::</op:operator><name pos:line="263" pos:column="52">getInstance</name></name><argument_list pos:line="263" pos:column="63">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="264" pos:column="9">if <condition pos:line="264" pos:column="12">(<expr><call><name><name pos:line="264" pos:column="13">pNppParams</name><op:operator pos:line="264" pos:column="23">-&gt;</op:operator><name pos:line="264" pos:column="25">writeRecentFileHistorySettings</name></name><argument_list pos:line="264" pos:column="55">(<argument><expr><name pos:line="264" pos:column="56">_userMax</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="264" pos:column="66">
	<block pos:line="265" pos:column="9">{
		<for pos:line="266" pos:column="17">for(<init><decl><type><name pos:line="266" pos:column="21">int</name></type> <name pos:line="266" pos:column="25">i</name> <init pos:line="266" pos:column="27">= <expr><name pos:line="266" pos:column="29">_size</name> <op:operator pos:line="266" pos:column="35">-</op:operator> <lit:literal type="number" pos:line="266" pos:column="37">1</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="266" pos:column="40">i</name> <op:operator pos:line="266" pos:column="42">&gt;=</op:operator> <lit:literal type="number" pos:line="266" pos:column="45">0</lit:literal></expr>;</condition> <incr><expr><name pos:line="266" pos:column="48">i</name><op:operator pos:line="266" pos:column="49">--</op:operator></expr></incr>)	<comment type="line" pos:line="266" pos:column="57">//reverse order: so loading goes in correct order</comment>
		<block pos:line="267" pos:column="17">{
			<expr_stmt><expr><call><name><name pos:line="268" pos:column="25">pNppParams</name><op:operator pos:line="268" pos:column="35">-&gt;</op:operator><name pos:line="268" pos:column="37">writeHistory</name></name><argument_list pos:line="268" pos:column="49">(<argument><expr><call><name><name pos:line="268" pos:column="50">_lrfl</name><op:operator pos:line="268" pos:column="55">.</op:operator><name pos:line="268" pos:column="56">at</name></name><argument_list pos:line="268" pos:column="58">(<argument><expr><name pos:line="268" pos:column="59">i</name></expr></argument>)</argument_list></call><op:operator pos:line="268" pos:column="61">.</op:operator><call><name><name pos:line="268" pos:column="62">_name</name><op:operator pos:line="268" pos:column="67">.</op:operator><name pos:line="268" pos:column="68">c_str</name></name><argument_list pos:line="268" pos:column="73">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		}</block></for>
	}</block></then></if>
}</block></function>


<function><type><name pos:line="274" pos:column="1">int</name></type> <name><name pos:line="274" pos:column="5">LastRecentFileList</name><op:operator pos:line="274" pos:column="23">::</op:operator><name pos:line="274" pos:column="25">find</name></name><parameter_list pos:line="274" pos:column="29">(<param><decl><type><specifier pos:line="274" pos:column="30">const</specifier> <name pos:line="274" pos:column="36">TCHAR</name> <type:modifier pos:line="274" pos:column="42">*</type:modifier></type><name pos:line="274" pos:column="43">fn</name></decl></param>)</parameter_list>
<block pos:line="275" pos:column="1">{
	<for pos:line="276" pos:column="9">for(<init><decl><type><name pos:line="276" pos:column="13">int</name></type> <name pos:line="276" pos:column="17">i</name> <init pos:line="276" pos:column="19">= <expr><lit:literal type="number" pos:line="276" pos:column="21">0</lit:literal></expr></init></decl>;</init> <condition><expr><name pos:line="276" pos:column="24">i</name> <op:operator pos:line="276" pos:column="26">&lt;</op:operator> <name pos:line="276" pos:column="28">_size</name></expr>;</condition> <incr><expr><name pos:line="276" pos:column="35">i</name><op:operator pos:line="276" pos:column="36">++</op:operator></expr></incr>)
	<block pos:line="277" pos:column="9">{
		<if pos:line="278" pos:column="17">if <condition pos:line="278" pos:column="20">(<expr><op:operator pos:line="278" pos:column="21">!</op:operator><call><name pos:line="278" pos:column="22">lstrcmpi</name><argument_list pos:line="278" pos:column="30">(<argument><expr><call><name><name pos:line="278" pos:column="31">_lrfl</name><op:operator pos:line="278" pos:column="36">.</op:operator><name pos:line="278" pos:column="37">at</name></name><argument_list pos:line="278" pos:column="39">(<argument><expr><name pos:line="278" pos:column="40">i</name></expr></argument>)</argument_list></call><op:operator pos:line="278" pos:column="42">.</op:operator><call><name><name pos:line="278" pos:column="43">_name</name><op:operator pos:line="278" pos:column="48">.</op:operator><name pos:line="278" pos:column="49">c_str</name></name><argument_list pos:line="278" pos:column="54">()</argument_list></call></expr></argument>, <argument><expr><name pos:line="278" pos:column="58">fn</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="278" pos:column="62">
		<block pos:line="279" pos:column="17">{
			<return pos:line="280" pos:column="25">return <expr><name pos:line="280" pos:column="32">i</name></expr>;</return>
		}</block></then></if>
	}</block></for>
	<return pos:line="283" pos:column="9">return <expr><op:operator pos:line="283" pos:column="16">-</op:operator><lit:literal type="number" pos:line="283" pos:column="17">1</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="286" pos:column="1">int</name></type> <name><name pos:line="286" pos:column="5">LastRecentFileList</name><op:operator pos:line="286" pos:column="23">::</op:operator><name pos:line="286" pos:column="25">popFirstAvailableID</name></name><parameter_list pos:line="286" pos:column="44">()</parameter_list> 
<block pos:line="287" pos:column="1">{
	<for pos:line="288" pos:column="9">for (<init><decl><type><name pos:line="288" pos:column="14">int</name></type> <name pos:line="288" pos:column="18">i</name> <init pos:line="288" pos:column="20">= <expr><lit:literal type="number" pos:line="288" pos:column="22">0</lit:literal></expr></init></decl> ;</init> <condition><expr><name pos:line="288" pos:column="26">i</name> <op:operator pos:line="288" pos:column="28">&lt;</op:operator> <name pos:line="288" pos:column="30">NB_MAX_LRF_FILE</name></expr> ;</condition> <incr><expr><name pos:line="288" pos:column="48">i</name><op:operator pos:line="288" pos:column="49">++</op:operator></expr></incr>)
	<block pos:line="289" pos:column="9">{
		<if pos:line="290" pos:column="17">if <condition pos:line="290" pos:column="20">(<expr><name><name pos:line="290" pos:column="21">_idFreeArray</name><index pos:line="290" pos:column="33">[<expr><name pos:line="290" pos:column="34">i</name></expr>]</index></name></expr>)</condition><then pos:line="290" pos:column="37">
		<block pos:line="291" pos:column="17">{
			<expr_stmt><expr><name><name pos:line="292" pos:column="25">_idFreeArray</name><index pos:line="292" pos:column="37">[<expr><name pos:line="292" pos:column="38">i</name></expr>]</index></name> <op:operator pos:line="292" pos:column="41">=</op:operator> <lit:literal type="boolean" pos:line="292" pos:column="43">false</lit:literal></expr>;</expr_stmt>
			<return pos:line="293" pos:column="25">return <expr><name pos:line="293" pos:column="32">i</name> <op:operator pos:line="293" pos:column="34">+</op:operator> <name pos:line="293" pos:column="36">_idBase</name></expr>;</return>
		}</block></then></if>
	}</block></for>
	<return pos:line="296" pos:column="9">return <expr><lit:literal type="number" pos:line="296" pos:column="16">0</lit:literal></expr>;</return>
}</block></function>

<function><type><name pos:line="299" pos:column="1">void</name></type> <name><name pos:line="299" pos:column="6">LastRecentFileList</name><op:operator pos:line="299" pos:column="24">::</op:operator><name pos:line="299" pos:column="26">setAvailable</name></name><parameter_list pos:line="299" pos:column="38">(<param><decl><type><name pos:line="299" pos:column="39">int</name></type> <name pos:line="299" pos:column="43">id</name></decl></param>)</parameter_list>
<block pos:line="300" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="301" pos:column="9">int</name></type> <name pos:line="301" pos:column="13">index</name> <init pos:line="301" pos:column="19">= <expr><name pos:line="301" pos:column="21">id</name> <op:operator pos:line="301" pos:column="24">-</op:operator> <name pos:line="301" pos:column="26">_idBase</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><name><name pos:line="302" pos:column="9">_idFreeArray</name><index pos:line="302" pos:column="21">[<expr><name pos:line="302" pos:column="22">index</name></expr>]</index></name> <op:operator pos:line="302" pos:column="29">=</op:operator> <lit:literal type="boolean" pos:line="302" pos:column="31">true</lit:literal></expr>;</expr_stmt>
}</block></function>
</unit>
