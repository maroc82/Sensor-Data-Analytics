<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\gtk\scintilla-marshal.c" pos:tabs="8" pos:line="1" pos:column="1">
<cpp:include pos:line="2" pos:column="1">#<cpp:directive pos:line="2" pos:column="2">include</cpp:directive>	<cpp:file pos:line="2" pos:column="17">&lt;glib-object.h&gt;</cpp:file></cpp:include>


<cpp:ifdef pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">ifdef</cpp:directive> <name pos:line="5" pos:column="8">G_ENABLE_DEBUG</name></cpp:ifdef>
<cpp:define pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="6" pos:column="9">g_marshal_value_peek_boolean</name><parameter_list pos:line="6" pos:column="37">(<param><type><name pos:line="6" pos:column="38">v</name></type></param>)</parameter_list></cpp:macro>  <cpp:value pos:line="6" pos:column="42">g_value_get_boolean (v)</cpp:value></cpp:define>
<cpp:define pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="7" pos:column="9">g_marshal_value_peek_char</name><parameter_list pos:line="7" pos:column="34">(<param><type><name pos:line="7" pos:column="35">v</name></type></param>)</parameter_list></cpp:macro>     <cpp:value pos:line="7" pos:column="42">g_value_get_char (v)</cpp:value></cpp:define>
<cpp:define pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="8" pos:column="9">g_marshal_value_peek_uchar</name><parameter_list pos:line="8" pos:column="35">(<param><type><name pos:line="8" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="8" pos:column="42">g_value_get_uchar (v)</cpp:value></cpp:define>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">g_marshal_value_peek_int</name><parameter_list pos:line="9" pos:column="33">(<param><type><name pos:line="9" pos:column="34">v</name></type></param>)</parameter_list></cpp:macro>      <cpp:value pos:line="9" pos:column="42">g_value_get_int (v)</cpp:value></cpp:define>
<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">g_marshal_value_peek_uint</name><parameter_list pos:line="10" pos:column="34">(<param><type><name pos:line="10" pos:column="35">v</name></type></param>)</parameter_list></cpp:macro>     <cpp:value pos:line="10" pos:column="42">g_value_get_uint (v)</cpp:value></cpp:define>
<cpp:define pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="11" pos:column="9">g_marshal_value_peek_long</name><parameter_list pos:line="11" pos:column="34">(<param><type><name pos:line="11" pos:column="35">v</name></type></param>)</parameter_list></cpp:macro>     <cpp:value pos:line="11" pos:column="42">g_value_get_long (v)</cpp:value></cpp:define>
<cpp:define pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="12" pos:column="9">g_marshal_value_peek_ulong</name><parameter_list pos:line="12" pos:column="35">(<param><type><name pos:line="12" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="12" pos:column="42">g_value_get_ulong (v)</cpp:value></cpp:define>
<cpp:define pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="13" pos:column="9">g_marshal_value_peek_int64</name><parameter_list pos:line="13" pos:column="35">(<param><type><name pos:line="13" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="13" pos:column="42">g_value_get_int64 (v)</cpp:value></cpp:define>
<cpp:define pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="14" pos:column="9">g_marshal_value_peek_uint64</name><parameter_list pos:line="14" pos:column="36">(<param><type><name pos:line="14" pos:column="37">v</name></type></param>)</parameter_list></cpp:macro>   <cpp:value pos:line="14" pos:column="42">g_value_get_uint64 (v)</cpp:value></cpp:define>
<cpp:define pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="15" pos:column="9">g_marshal_value_peek_enum</name><parameter_list pos:line="15" pos:column="34">(<param><type><name pos:line="15" pos:column="35">v</name></type></param>)</parameter_list></cpp:macro>     <cpp:value pos:line="15" pos:column="42">g_value_get_enum (v)</cpp:value></cpp:define>
<cpp:define pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="16" pos:column="9">g_marshal_value_peek_flags</name><parameter_list pos:line="16" pos:column="35">(<param><type><name pos:line="16" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="16" pos:column="42">g_value_get_flags (v)</cpp:value></cpp:define>
<cpp:define pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="17" pos:column="9">g_marshal_value_peek_float</name><parameter_list pos:line="17" pos:column="35">(<param><type><name pos:line="17" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="17" pos:column="42">g_value_get_float (v)</cpp:value></cpp:define>
<cpp:define pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="18" pos:column="9">g_marshal_value_peek_double</name><parameter_list pos:line="18" pos:column="36">(<param><type><name pos:line="18" pos:column="37">v</name></type></param>)</parameter_list></cpp:macro>   <cpp:value pos:line="18" pos:column="42">g_value_get_double (v)</cpp:value></cpp:define>
<cpp:define pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="19" pos:column="9">g_marshal_value_peek_string</name><parameter_list pos:line="19" pos:column="36">(<param><type><name pos:line="19" pos:column="37">v</name></type></param>)</parameter_list></cpp:macro>   <cpp:value pos:line="19" pos:column="42">(char*) g_value_get_string (v)</cpp:value></cpp:define>
<cpp:define pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="20" pos:column="9">g_marshal_value_peek_param</name><parameter_list pos:line="20" pos:column="35">(<param><type><name pos:line="20" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="20" pos:column="42">g_value_get_param (v)</cpp:value></cpp:define>
<cpp:define pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="21" pos:column="9">g_marshal_value_peek_boxed</name><parameter_list pos:line="21" pos:column="35">(<param><type><name pos:line="21" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="21" pos:column="42">g_value_get_boxed (v)</cpp:value></cpp:define>
<cpp:define pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="22" pos:column="9">g_marshal_value_peek_pointer</name><parameter_list pos:line="22" pos:column="37">(<param><type><name pos:line="22" pos:column="38">v</name></type></param>)</parameter_list></cpp:macro>  <cpp:value pos:line="22" pos:column="42">g_value_get_pointer (v)</cpp:value></cpp:define>
<cpp:define pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="23" pos:column="9">g_marshal_value_peek_object</name><parameter_list pos:line="23" pos:column="36">(<param><type><name pos:line="23" pos:column="37">v</name></type></param>)</parameter_list></cpp:macro>   <cpp:value pos:line="23" pos:column="42">g_value_get_object (v)</cpp:value></cpp:define>
<cpp:else pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">else</cpp:directive></cpp:else> <comment type="block" pos:line="24" pos:column="7">/* !G_ENABLE_DEBUG */</comment>
<comment type="block" pos:line="25" pos:column="1">/* WARNING: This code accesses GValues directly, which is UNSUPPORTED API.
 *          Do not access GValues directly in your code. Instead, use the
 *          g_value_get_*() functions
 */</comment>
<cpp:define pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="29" pos:column="9">g_marshal_value_peek_boolean</name><parameter_list pos:line="29" pos:column="37">(<param><type><name pos:line="29" pos:column="38">v</name></type></param>)</parameter_list></cpp:macro>  <cpp:value pos:line="29" pos:column="42">(v)-&gt;data[0].v_int</cpp:value></cpp:define>
<cpp:define pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="30" pos:column="9">g_marshal_value_peek_char</name><parameter_list pos:line="30" pos:column="34">(<param><type><name pos:line="30" pos:column="35">v</name></type></param>)</parameter_list></cpp:macro>     <cpp:value pos:line="30" pos:column="42">(v)-&gt;data[0].v_int</cpp:value></cpp:define>
<cpp:define pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="31" pos:column="9">g_marshal_value_peek_uchar</name><parameter_list pos:line="31" pos:column="35">(<param><type><name pos:line="31" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="31" pos:column="42">(v)-&gt;data[0].v_uint</cpp:value></cpp:define>
<cpp:define pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="32" pos:column="9">g_marshal_value_peek_int</name><parameter_list pos:line="32" pos:column="33">(<param><type><name pos:line="32" pos:column="34">v</name></type></param>)</parameter_list></cpp:macro>      <cpp:value pos:line="32" pos:column="42">(v)-&gt;data[0].v_int</cpp:value></cpp:define>
<cpp:define pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="33" pos:column="9">g_marshal_value_peek_uint</name><parameter_list pos:line="33" pos:column="34">(<param><type><name pos:line="33" pos:column="35">v</name></type></param>)</parameter_list></cpp:macro>     <cpp:value pos:line="33" pos:column="42">(v)-&gt;data[0].v_uint</cpp:value></cpp:define>
<cpp:define pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="34" pos:column="9">g_marshal_value_peek_long</name><parameter_list pos:line="34" pos:column="34">(<param><type><name pos:line="34" pos:column="35">v</name></type></param>)</parameter_list></cpp:macro>     <cpp:value pos:line="34" pos:column="42">(v)-&gt;data[0].v_long</cpp:value></cpp:define>
<cpp:define pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="35" pos:column="9">g_marshal_value_peek_ulong</name><parameter_list pos:line="35" pos:column="35">(<param><type><name pos:line="35" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="35" pos:column="42">(v)-&gt;data[0].v_ulong</cpp:value></cpp:define>
<cpp:define pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="36" pos:column="9">g_marshal_value_peek_int64</name><parameter_list pos:line="36" pos:column="35">(<param><type><name pos:line="36" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="36" pos:column="42">(v)-&gt;data[0].v_int64</cpp:value></cpp:define>
<cpp:define pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="37" pos:column="9">g_marshal_value_peek_uint64</name><parameter_list pos:line="37" pos:column="36">(<param><type><name pos:line="37" pos:column="37">v</name></type></param>)</parameter_list></cpp:macro>   <cpp:value pos:line="37" pos:column="42">(v)-&gt;data[0].v_uint64</cpp:value></cpp:define>
<cpp:define pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="38" pos:column="9">g_marshal_value_peek_enum</name><parameter_list pos:line="38" pos:column="34">(<param><type><name pos:line="38" pos:column="35">v</name></type></param>)</parameter_list></cpp:macro>     <cpp:value pos:line="38" pos:column="42">(v)-&gt;data[0].v_int</cpp:value></cpp:define>
<cpp:define pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="39" pos:column="9">g_marshal_value_peek_flags</name><parameter_list pos:line="39" pos:column="35">(<param><type><name pos:line="39" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="39" pos:column="42">(v)-&gt;data[0].v_uint</cpp:value></cpp:define>
<cpp:define pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="40" pos:column="9">g_marshal_value_peek_float</name><parameter_list pos:line="40" pos:column="35">(<param><type><name pos:line="40" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="40" pos:column="42">(v)-&gt;data[0].v_float</cpp:value></cpp:define>
<cpp:define pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="41" pos:column="9">g_marshal_value_peek_double</name><parameter_list pos:line="41" pos:column="36">(<param><type><name pos:line="41" pos:column="37">v</name></type></param>)</parameter_list></cpp:macro>   <cpp:value pos:line="41" pos:column="42">(v)-&gt;data[0].v_double</cpp:value></cpp:define>
<cpp:define pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="42" pos:column="9">g_marshal_value_peek_string</name><parameter_list pos:line="42" pos:column="36">(<param><type><name pos:line="42" pos:column="37">v</name></type></param>)</parameter_list></cpp:macro>   <cpp:value pos:line="42" pos:column="42">(v)-&gt;data[0].v_pointer</cpp:value></cpp:define>
<cpp:define pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="43" pos:column="9">g_marshal_value_peek_param</name><parameter_list pos:line="43" pos:column="35">(<param><type><name pos:line="43" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="43" pos:column="42">(v)-&gt;data[0].v_pointer</cpp:value></cpp:define>
<cpp:define pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="44" pos:column="9">g_marshal_value_peek_boxed</name><parameter_list pos:line="44" pos:column="35">(<param><type><name pos:line="44" pos:column="36">v</name></type></param>)</parameter_list></cpp:macro>    <cpp:value pos:line="44" pos:column="42">(v)-&gt;data[0].v_pointer</cpp:value></cpp:define>
<cpp:define pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="45" pos:column="9">g_marshal_value_peek_pointer</name><parameter_list pos:line="45" pos:column="37">(<param><type><name pos:line="45" pos:column="38">v</name></type></param>)</parameter_list></cpp:macro>  <cpp:value pos:line="45" pos:column="42">(v)-&gt;data[0].v_pointer</cpp:value></cpp:define>
<cpp:define pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="46" pos:column="9">g_marshal_value_peek_object</name><parameter_list pos:line="46" pos:column="36">(<param><type><name pos:line="46" pos:column="37">v</name></type></param>)</parameter_list></cpp:macro>   <cpp:value pos:line="46" pos:column="42">(v)-&gt;data[0].v_pointer</cpp:value></cpp:define>
<cpp:endif pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">endif</cpp:directive></cpp:endif> <comment type="block" pos:line="47" pos:column="8">/* !G_ENABLE_DEBUG */</comment>


<comment type="block" pos:line="50" pos:column="1">/* NONE:INT,POINTER (scintilla-marshal.list:1) */</comment>
<function><type><name pos:line="51" pos:column="1">void</name></type>
<name pos:line="52" pos:column="1">scintilla_marshal_VOID__INT_POINTER</name> <parameter_list pos:line="52" pos:column="37">(<param><decl><type><name pos:line="52" pos:column="38">GClosure</name>     <type:modifier pos:line="52" pos:column="51">*</type:modifier></type><name pos:line="52" pos:column="52">closure</name></decl></param>,
                                     <param><decl><type><name pos:line="53" pos:column="38">GValue</name>       <type:modifier pos:line="53" pos:column="51">*</type:modifier></type><name pos:line="53" pos:column="52">return_value</name></decl></param>,
                                     <param><decl><type><name pos:line="54" pos:column="38">guint</name></type>         <name pos:line="54" pos:column="52">n_param_values</name></decl></param>,
                                     <param><decl><type><specifier pos:line="55" pos:column="38">const</specifier> <name pos:line="55" pos:column="44">GValue</name> <type:modifier pos:line="55" pos:column="51">*</type:modifier></type><name pos:line="55" pos:column="52">param_values</name></decl></param>,
                                     <param><decl><type><name pos:line="56" pos:column="38">gpointer</name></type>      <name pos:line="56" pos:column="52">invocation_hint</name></decl></param>,
                                     <param><decl><type><name pos:line="57" pos:column="38">gpointer</name></type>      <name pos:line="57" pos:column="52">marshal_data</name></decl></param>)</parameter_list>
<block pos:line="58" pos:column="1">{
  <typedef pos:line="59" pos:column="3">typedef <function_decl><type><name pos:line="59" pos:column="11">void</name></type> (<type:modifier pos:line="59" pos:column="17">*</type:modifier><name pos:line="59" pos:column="18">GMarshalFunc_VOID__INT_POINTER</name>) <parameter_list pos:line="59" pos:column="50">(<param><decl><type><name pos:line="59" pos:column="51">gpointer</name></type>     <name pos:line="59" pos:column="64">data1</name></decl></param>,
                                                  <param><decl><type><name pos:line="60" pos:column="51">gint</name></type>         <name pos:line="60" pos:column="64">arg_1</name></decl></param>,
                                                  <param><decl><type><name pos:line="61" pos:column="51">gpointer</name></type>     <name pos:line="61" pos:column="64">arg_2</name></decl></param>,
                                                  <param><decl><type><name pos:line="62" pos:column="51">gpointer</name></type>     <name pos:line="62" pos:column="64">data2</name></decl></param>)</parameter_list>;</function_decl></typedef>
  <decl_stmt><decl><type><name pos:line="63" pos:column="3">register</name> <name pos:line="63" pos:column="12">GMarshalFunc_VOID__INT_POINTER</name></type> <name pos:line="63" pos:column="43">callback</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name pos:line="64" pos:column="3">register</name> <name pos:line="64" pos:column="12">GCClosure</name> <type:modifier pos:line="64" pos:column="22">*</type:modifier></type><name pos:line="64" pos:column="23">cc</name> <init pos:line="64" pos:column="26">= <expr><op:operator pos:line="64" pos:column="28">(</op:operator><name pos:line="64" pos:column="29">GCClosure</name><type:modifier pos:line="64" pos:column="38">*</type:modifier><op:operator pos:line="64" pos:column="39">)</op:operator> <name pos:line="64" pos:column="41">closure</name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name pos:line="65" pos:column="3">register</name> <name pos:line="65" pos:column="12">gpointer</name></type> <name pos:line="65" pos:column="21">data1</name></decl><op:operator pos:line="65" pos:column="26">,</op:operator> <decl><type ref="prev"/><name pos:line="65" pos:column="28">data2</name></decl>;</decl_stmt>

  <expr_stmt><expr><call><name pos:line="67" pos:column="3">g_return_if_fail</name> <argument_list pos:line="67" pos:column="20">(<argument><expr><name pos:line="67" pos:column="21">n_param_values</name> <op:operator pos:line="67" pos:column="36">==</op:operator> <lit:literal type="number" pos:line="67" pos:column="39">3</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if pos:line="69" pos:column="3">if <condition pos:line="69" pos:column="6">(<expr><call><name pos:line="69" pos:column="7">G_CCLOSURE_SWAP_DATA</name> <argument_list pos:line="69" pos:column="28">(<argument><expr><name pos:line="69" pos:column="29">closure</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="69" pos:column="38">
    <block pos:line="70" pos:column="5">{
      <expr_stmt><expr><name pos:line="71" pos:column="7">data1</name> <op:operator pos:line="71" pos:column="13">=</op:operator> <name><name pos:line="71" pos:column="15">closure</name><op:operator pos:line="71" pos:column="22">-&gt;</op:operator><name pos:line="71" pos:column="24">data</name></name></expr>;</expr_stmt>
      <expr_stmt><expr><name pos:line="72" pos:column="7">data2</name> <op:operator pos:line="72" pos:column="13">=</op:operator> <call><name pos:line="72" pos:column="15">g_value_peek_pointer</name> <argument_list pos:line="72" pos:column="36">(<argument><expr><name pos:line="72" pos:column="37">param_values</name> <op:operator pos:line="72" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="72" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then>
  <else pos:line="74" pos:column="3">else
    <block pos:line="75" pos:column="5">{
      <expr_stmt><expr><name pos:line="76" pos:column="7">data1</name> <op:operator pos:line="76" pos:column="13">=</op:operator> <call><name pos:line="76" pos:column="15">g_value_peek_pointer</name> <argument_list pos:line="76" pos:column="36">(<argument><expr><name pos:line="76" pos:column="37">param_values</name> <op:operator pos:line="76" pos:column="50">+</op:operator> <lit:literal type="number" pos:line="76" pos:column="52">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><name pos:line="77" pos:column="7">data2</name> <op:operator pos:line="77" pos:column="13">=</op:operator> <name><name pos:line="77" pos:column="15">closure</name><op:operator pos:line="77" pos:column="22">-&gt;</op:operator><name pos:line="77" pos:column="24">data</name></name></expr>;</expr_stmt>
    }</block></else></if>
  <expr_stmt><expr><name pos:line="79" pos:column="3">callback</name> <op:operator pos:line="79" pos:column="12">=</op:operator> <call pos:line="79" pos:column="14">(<name pos:line="79" pos:column="15">GMarshalFunc_VOID__INT_POINTER</name>) <argument_list pos:line="79" pos:column="47">(<argument><expr><name pos:line="79" pos:column="48">marshal_data</name> <op:operator pos:line="79" pos:column="61">?</op:operator> <name pos:line="79" pos:column="63">marshal_data</name> <op:operator pos:line="79" pos:column="76">:</op:operator> <name><name pos:line="79" pos:column="78">cc</name><op:operator pos:line="79" pos:column="80">-&gt;</op:operator><name pos:line="79" pos:column="82">callback</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt><expr><call><name pos:line="81" pos:column="3">callback</name> <argument_list pos:line="81" pos:column="12">(<argument><expr><name pos:line="81" pos:column="13">data1</name></expr></argument>,
            <argument><expr><call><name pos:line="82" pos:column="13">g_marshal_value_peek_int</name> <argument_list pos:line="82" pos:column="38">(<argument><expr><name pos:line="82" pos:column="39">param_values</name> <op:operator pos:line="82" pos:column="52">+</op:operator> <lit:literal type="number" pos:line="82" pos:column="54">1</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><call><name pos:line="83" pos:column="13">g_marshal_value_peek_pointer</name> <argument_list pos:line="83" pos:column="42">(<argument><expr><name pos:line="83" pos:column="43">param_values</name> <op:operator pos:line="83" pos:column="56">+</op:operator> <lit:literal type="number" pos:line="83" pos:column="58">2</lit:literal></expr></argument>)</argument_list></call></expr></argument>,
            <argument><expr><name pos:line="84" pos:column="13">data2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

</unit>
