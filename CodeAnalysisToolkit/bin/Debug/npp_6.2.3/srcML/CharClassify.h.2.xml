<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\scintilla\src\CharClassify.h" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// Scintilla source code edit control</comment>
<comment type="block" format="doxygen" pos:line="2" pos:column="1">/** @file CharClassify.h
 ** Character classifications used by Document and RESearch.
 **/</comment>
<comment type="line" pos:line="5" pos:column="1">// Copyright 2006-2009 by Neil Hodgson &lt;neilh@scintilla.org&gt;</comment>
<comment type="line" pos:line="6" pos:column="1">// The License.txt file describes the conditions under which this software may be distributed.</comment>

<cpp:ifndef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifndef</cpp:directive> <name pos:line="8" pos:column="9">CHARCLASSIFY_H</name></cpp:ifndef>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define</cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">CHARCLASSIFY_H</name></cpp:macro></cpp:define>

<cpp:ifdef pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">ifdef</cpp:directive> <name pos:line="11" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
<namespace pos:line="12" pos:column="1">namespace <name pos:line="12" pos:column="11">Scintilla</name> <block pos:line="12" pos:column="21">{
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif</cpp:directive></cpp:endif>

<class pos:line="15" pos:column="1">class <name pos:line="15" pos:column="7">CharClassify</name> <block pos:line="15" pos:column="20">{<private type="default" pos:line="15" pos:column="21">
</private><public pos:line="16" pos:column="1">public:
	<constructor_decl><name pos:line="17" pos:column="9">CharClassify</name><parameter_list pos:line="17" pos:column="21">()</parameter_list>;</constructor_decl>

	<enum pos:line="19" pos:column="9">enum <name pos:line="19" pos:column="14">cc</name> <block pos:line="19" pos:column="17">{ <decl><name pos:line="19" pos:column="19">ccSpace</name></decl><op:operator pos:line="19" pos:column="26">,</op:operator> <decl><name pos:line="19" pos:column="28">ccNewLine</name></decl><op:operator pos:line="19" pos:column="37">,</op:operator> <decl><name pos:line="19" pos:column="39">ccWord</name></decl><op:operator pos:line="19" pos:column="45">,</op:operator> <decl><name pos:line="19" pos:column="47">ccPunctuation</name></decl> }</block>;</enum>
	<function_decl><type><name pos:line="20" pos:column="9">void</name></type> <name pos:line="20" pos:column="14">SetDefaultCharClasses</name><parameter_list pos:line="20" pos:column="35">(<param><decl><type><name pos:line="20" pos:column="36">bool</name></type> <name pos:line="20" pos:column="41">includeWordClass</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name pos:line="21" pos:column="9">void</name></type> <name pos:line="21" pos:column="14">SetCharClasses</name><parameter_list pos:line="21" pos:column="28">(<param><decl><type><specifier pos:line="21" pos:column="29">const</specifier> <name pos:line="21" pos:column="35">unsigned</name> <name pos:line="21" pos:column="44">char</name> <type:modifier pos:line="21" pos:column="49">*</type:modifier></type><name pos:line="21" pos:column="50">chars</name></decl></param>, <param><decl><type><name pos:line="21" pos:column="57">cc</name></type> <name pos:line="21" pos:column="60">newCharClass</name></decl></param>)</parameter_list>;</function_decl>
	<function><type><name pos:line="22" pos:column="9">cc</name></type> <name pos:line="22" pos:column="12">GetClass</name><parameter_list pos:line="22" pos:column="20">(<param><decl><type><name pos:line="22" pos:column="21">unsigned</name> <name pos:line="22" pos:column="30">char</name></type> <name pos:line="22" pos:column="35">ch</name></decl></param>)</parameter_list> <specifier pos:line="22" pos:column="39">const</specifier> <block pos:line="22" pos:column="45">{ <return pos:line="22" pos:column="47">return <expr><call><name><name pos:line="22" pos:column="54">static_cast</name><argument_list pos:line="22" pos:column="65">&lt;<argument><expr><name pos:line="22" pos:column="66">cc</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="22" pos:column="69">(<argument><expr><name><name pos:line="22" pos:column="70">charClass</name><index pos:line="22" pos:column="79">[<expr><name pos:line="22" pos:column="80">ch</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</return>}</block></function>
	<function><type><name pos:line="23" pos:column="9">bool</name></type> <name pos:line="23" pos:column="14">IsWord</name><parameter_list pos:line="23" pos:column="20">(<param><decl><type><name pos:line="23" pos:column="21">unsigned</name> <name pos:line="23" pos:column="30">char</name></type> <name pos:line="23" pos:column="35">ch</name></decl></param>)</parameter_list> <specifier pos:line="23" pos:column="39">const</specifier> <block pos:line="23" pos:column="45">{ <return pos:line="23" pos:column="47">return <expr><call><name><name pos:line="23" pos:column="54">static_cast</name><argument_list pos:line="23" pos:column="65">&lt;<argument><expr><name pos:line="23" pos:column="66">cc</name></expr></argument>&gt;</argument_list></name><argument_list pos:line="23" pos:column="69">(<argument><expr><name><name pos:line="23" pos:column="70">charClass</name><index pos:line="23" pos:column="79">[<expr><name pos:line="23" pos:column="80">ch</name></expr>]</index></name></expr></argument>)</argument_list></call> <op:operator pos:line="23" pos:column="85">==</op:operator> <name pos:line="23" pos:column="88">ccWord</name></expr>;</return>}</block></function>

</public><private pos:line="25" pos:column="1">private:
	<enum pos:line="26" pos:column="9">enum <block pos:line="26" pos:column="14">{ <decl><name pos:line="26" pos:column="16">maxChar</name><init pos:line="26" pos:column="23">=<expr><lit:literal type="number" pos:line="26" pos:column="24">256</lit:literal></expr></init></decl> }</block>;</enum>
	<decl_stmt><decl><type><name pos:line="27" pos:column="9">unsigned</name> <name pos:line="27" pos:column="18">char</name></type> <name><name pos:line="27" pos:column="23">charClass</name><index pos:line="27" pos:column="32">[<expr><name pos:line="27" pos:column="33">maxChar</name></expr>]</index></name></decl>;</decl_stmt>    <comment type="line" pos:line="27" pos:column="46">// not type cc to save space</comment>
</private>}</block>;</class>

<cpp:ifdef pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">ifdef</cpp:directive> <name pos:line="30" pos:column="8">SCI_NAMESPACE</name></cpp:ifdef>
}</block></namespace>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif</cpp:directive></cpp:endif>
</unit>
