<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:lit="http://www.sdml.info/srcML/literal" xmlns:op="http://www.sdml.info/srcML/operator" xmlns:type="http://www.sdml.info/srcML/modifier" xmlns:pos="http://www.sdml.info/srcML/position" language="C++" filename="C:\School\Grad School (Comp Sci)\CSCI 685 (Software Engneering)\CodeAnalysisToolkit\projects\npp_6.2.3\PowerEditor\src\WinControls\FindCharsInRange\FindCharsInRange.cpp" pos:tabs="8"><comment type="line" pos:line="1" pos:column="1">// This file is part of Notepad++ project</comment>
<comment type="line" pos:line="2" pos:column="1">// Copyright (C)2003 Don HO &lt;don.h@free.fr&gt;</comment>
<comment type="line" pos:line="3" pos:column="1">//</comment>
<comment type="line" pos:line="4" pos:column="1">// This program is free software; you can redistribute it and/or</comment>
<comment type="line" pos:line="5" pos:column="1">// modify it under the terms of the GNU General Public License</comment>
<comment type="line" pos:line="6" pos:column="1">// as published by the Free Software Foundation; either</comment>
<comment type="line" pos:line="7" pos:column="1">// version 2 of the License, or (at your option) any later version.</comment>
<comment type="line" pos:line="8" pos:column="1">//</comment>
<comment type="line" pos:line="9" pos:column="1">// Note that the GPL places important restrictions on "derived works", yet</comment>
<comment type="line" pos:line="10" pos:column="1">// it does not provide a detailed definition of that term.  To avoid      </comment>
<comment type="line" pos:line="11" pos:column="1">// misunderstandings, we consider an application to constitute a          </comment>
<comment type="line" pos:line="12" pos:column="1">// "derivative work" for the purpose of this license if it does any of the</comment>
<comment type="line" pos:line="13" pos:column="1">// following:                                                             </comment>
<comment type="line" pos:line="14" pos:column="1">// 1. Integrates source code from Notepad++.</comment>
<comment type="line" pos:line="15" pos:column="1">// 2. Integrates/includes/aggregates Notepad++ into a proprietary executable</comment>
<comment type="line" pos:line="16" pos:column="1">//    installer, such as those produced by InstallShield.</comment>
<comment type="line" pos:line="17" pos:column="1">// 3. Links to a library or executes a program that does any of the above.</comment>
<comment type="line" pos:line="18" pos:column="1">//</comment>
<comment type="line" pos:line="19" pos:column="1">// This program is distributed in the hope that it will be useful,</comment>
<comment type="line" pos:line="20" pos:column="1">// but WITHOUT ANY WARRANTY; without even the implied warranty of</comment>
<comment type="line" pos:line="21" pos:column="1">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</comment>
<comment type="line" pos:line="22" pos:column="1">// GNU General Public License for more details.</comment>
<comment type="line" pos:line="23" pos:column="1">//</comment>
<comment type="line" pos:line="24" pos:column="1">// You should have received a copy of the GNU General Public License</comment>
<comment type="line" pos:line="25" pos:column="1">// along with this program; if not, write to the Free Software</comment>
<comment type="line" pos:line="26" pos:column="1">// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.</comment>


<cpp:include pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="29" pos:column="10">"precompiledHeaders.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="30" pos:column="10">"FindCharsInRange.h"</lit:literal></cpp:file></cpp:include>
<cpp:include pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">include</cpp:directive> <cpp:file><lit:literal type="string" pos:line="31" pos:column="10">"FindCharsInRange_rc.h"</lit:literal></cpp:file></cpp:include>

<function><type><name pos:line="33" pos:column="1">BOOL</name> <name pos:line="33" pos:column="6">CALLBACK</name></type> <name><name pos:line="33" pos:column="15">FindCharsInRangeDlg</name><op:operator pos:line="33" pos:column="34">::</op:operator><name pos:line="33" pos:column="36">run_dlgProc</name></name><parameter_list pos:line="33" pos:column="47">(<param><decl><type><name pos:line="33" pos:column="48">UINT</name></type> <name pos:line="33" pos:column="53">message</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="62">WPARAM</name></type> <name pos:line="33" pos:column="69">wParam</name></decl></param>, <param><decl><type><name pos:line="33" pos:column="77">LPARAM</name></type></decl></param>)</parameter_list>
<block pos:line="34" pos:column="1">{
	<switch pos:line="35" pos:column="9">switch <condition pos:line="35" pos:column="16">(<expr><name pos:line="35" pos:column="17">message</name></expr>)</condition> 
	<block pos:line="36" pos:column="9">{
		<case pos:line="37" pos:column="17">case <expr><name pos:line="37" pos:column="22">WM_INITDIALOG</name></expr> :
		<block pos:line="38" pos:column="17">{
			<expr_stmt><expr><call><name><op:operator pos:line="39" pos:column="25">::</op:operator><name pos:line="39" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="39" pos:column="45">(<argument><expr><name pos:line="39" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="54">IDC_RANGESTART_EDIT</name></expr></argument>, <argument><expr><name pos:line="39" pos:column="75">EM_LIMITTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="39" pos:column="89">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="39" pos:column="92">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="40" pos:column="25">::</op:operator><name pos:line="40" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="40" pos:column="45">(<argument><expr><name pos:line="40" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">IDC_RANGEEND_EDIT</name></expr></argument>, <argument><expr><name pos:line="40" pos:column="73">EM_LIMITTEXT</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="40" pos:column="87">3</lit:literal></expr></argument>, <argument><expr><lit:literal type="number" pos:line="40" pos:column="90">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="41" pos:column="25">::</op:operator><name pos:line="41" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="41" pos:column="45">(<argument><expr><name pos:line="41" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="41" pos:column="54">IDC_NONASCCI_RADIO</name></expr></argument>, <argument><expr><name pos:line="41" pos:column="74">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="41" pos:column="87">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="41" pos:column="93">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name><op:operator pos:line="42" pos:column="25">::</op:operator><name pos:line="42" pos:column="27">SendDlgItemMessage</name></name><argument_list pos:line="42" pos:column="45">(<argument><expr><name pos:line="42" pos:column="46">_hSelf</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="54">ID_FINDCHAR_DIRDOWN</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="75">BM_SETCHECK</name></expr></argument>, <argument><expr><name pos:line="42" pos:column="88">TRUE</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="42" pos:column="94">0</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
			<expr_stmt><expr><call><name pos:line="43" pos:column="25">goToCenter</name><argument_list pos:line="43" pos:column="35">()</argument_list></call></expr>;</expr_stmt>
			<return pos:line="44" pos:column="25">return <expr><name pos:line="44" pos:column="32">TRUE</name></expr>;</return>
		}</block>
		</case><case pos:line="46" pos:column="17">case <expr><name pos:line="46" pos:column="22">WM_COMMAND</name></expr> :
		<block pos:line="47" pos:column="17">{
			<switch pos:line="48" pos:column="25">switch <condition pos:line="48" pos:column="32">(<expr><name pos:line="48" pos:column="33">wParam</name></expr>)</condition>
			<block pos:line="49" pos:column="25">{
				<case pos:line="50" pos:column="33">case <expr><name pos:line="50" pos:column="38">IDCANCEL</name></expr> : <comment type="line" pos:line="50" pos:column="49">// Close</comment>
					<expr_stmt><expr><call><name pos:line="51" pos:column="41">display</name><argument_list pos:line="51" pos:column="48">(<argument><expr><lit:literal type="boolean" pos:line="51" pos:column="49">false</lit:literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="52" pos:column="41">return <expr><name pos:line="52" pos:column="48">TRUE</name></expr>;</return>

				</case><case pos:line="54" pos:column="33">case <expr><name pos:line="54" pos:column="38">ID_FINDCHAR_NEXT</name></expr>:
				<block pos:line="55" pos:column="33">{
					<decl_stmt><decl><type><name pos:line="56" pos:column="41">int</name></type> <name pos:line="56" pos:column="45">currentPos</name> <init pos:line="56" pos:column="56">= <expr><call><name pos:line="56" pos:column="58">(<type:modifier pos:line="56" pos:column="59">*</type:modifier><name pos:line="56" pos:column="60">_ppEditView</name>)<op:operator pos:line="56" pos:column="72">-&gt;</op:operator><name pos:line="56" pos:column="74">execute</name></name><argument_list pos:line="56" pos:column="81">(<argument><expr><name pos:line="56" pos:column="82">SCI_GETCURRENTPOS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="57" pos:column="41">unsigned</name> <name pos:line="57" pos:column="50">char</name></type> <name pos:line="57" pos:column="55">startRange</name> <init pos:line="57" pos:column="66">= <expr><lit:literal type="number" pos:line="57" pos:column="68">0</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="58" pos:column="41">unsigned</name> <name pos:line="58" pos:column="50">char</name></type> <name pos:line="58" pos:column="55">endRange</name> <init pos:line="58" pos:column="64">= <expr><lit:literal type="number" pos:line="58" pos:column="66">255</lit:literal></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="59" pos:column="41">bool</name></type> <name pos:line="59" pos:column="46">direction</name> <init pos:line="59" pos:column="56">= <expr><name pos:line="59" pos:column="58">dirDown</name></expr></init></decl>;</decl_stmt>
					<decl_stmt><decl><type><name pos:line="60" pos:column="41">bool</name></type> <name pos:line="60" pos:column="46">isWrap</name> <init pos:line="60" pos:column="53">= <expr><lit:literal type="boolean" pos:line="60" pos:column="55">true</lit:literal></expr></init></decl>;</decl_stmt>
					<if pos:line="61" pos:column="41">if <condition pos:line="61" pos:column="44">(<expr><op:operator pos:line="61" pos:column="45">!</op:operator><call><name pos:line="61" pos:column="46">getRangeFromUI</name><argument_list pos:line="61" pos:column="60">(<argument><expr><name pos:line="61" pos:column="61">startRange</name></expr></argument>, <argument><expr><name pos:line="61" pos:column="73">endRange</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="61" pos:column="83">
					<block pos:line="62" pos:column="41">{
						<comment type="line" pos:line="63" pos:column="49">//STOP!</comment>
						<expr_stmt><expr><call><name><op:operator pos:line="64" pos:column="49">::</op:operator><name pos:line="64" pos:column="51">MessageBox</name></name><argument_list pos:line="64" pos:column="61">(<argument><expr><name pos:line="64" pos:column="62">_hSelf</name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="70">TEXT</name><argument_list pos:line="64" pos:column="74">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="75">"You should type between from 0 to 255."</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="118">TEXT</name><argument_list pos:line="64" pos:column="122">(<argument><expr><lit:literal type="string" pos:line="64" pos:column="123">"Range Value problem"</lit:literal></expr></argument>)</argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="147">MB_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
						<return pos:line="65" pos:column="49">return <expr><name pos:line="65" pos:column="56">TRUE</name></expr>;</return>
					}</block></then></if>
					<expr_stmt><expr><call><name pos:line="67" pos:column="41">getDirectionFromUI</name><argument_list pos:line="67" pos:column="59">(<argument><expr><name pos:line="67" pos:column="60">direction</name></expr></argument>, <argument><expr><name pos:line="67" pos:column="71">isWrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<expr_stmt><expr><call><name pos:line="68" pos:column="41">findCharInRange</name><argument_list pos:line="68" pos:column="56">(<argument><expr><name pos:line="68" pos:column="57">startRange</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="69">endRange</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="79">currentPos</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="91">direction</name></expr></argument>, <argument><expr><name pos:line="68" pos:column="102">isWrap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
					<return pos:line="69" pos:column="41">return <expr><name pos:line="69" pos:column="48">TRUE</name></expr>;</return>
				}</block>

				</case><default pos:line="72" pos:column="33">default :
				<block pos:line="73" pos:column="33">{
					<break pos:line="74" pos:column="41">break;</break>
				}</block>
			</default>}</block></switch>
		}</block>
		</case><default pos:line="78" pos:column="17">default :
			<return pos:line="79" pos:column="25">return <expr><name pos:line="79" pos:column="32">FALSE</name></expr>;</return>
	</default>}</block></switch>
}</block></function>

<function><type><name pos:line="83" pos:column="1">bool</name></type> <name><name pos:line="83" pos:column="6">FindCharsInRangeDlg</name><op:operator pos:line="83" pos:column="25">::</op:operator><name pos:line="83" pos:column="27">findCharInRange</name></name><parameter_list pos:line="83" pos:column="42">(<param><decl><type><name pos:line="83" pos:column="43">unsigned</name> <name pos:line="83" pos:column="52">char</name></type> <name pos:line="83" pos:column="57">beginRange</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="69">unsigned</name> <name pos:line="83" pos:column="78">char</name></type> <name pos:line="83" pos:column="83">endRange</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="93">int</name></type> <name pos:line="83" pos:column="97">startPos</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="107">bool</name></type> <name pos:line="83" pos:column="112">direction</name></decl></param>, <param><decl><type><name pos:line="83" pos:column="123">bool</name></type> <name pos:line="83" pos:column="128">wrap</name></decl></param>)</parameter_list>
<block pos:line="84" pos:column="1">{
	<decl_stmt><decl><type><name pos:line="85" pos:column="9">int</name></type> <name pos:line="85" pos:column="13">totalSize</name> <init pos:line="85" pos:column="23">= <expr><call><name pos:line="85" pos:column="25">(<type:modifier pos:line="85" pos:column="26">*</type:modifier><name pos:line="85" pos:column="27">_ppEditView</name>)<op:operator pos:line="85" pos:column="39">-&gt;</op:operator><name pos:line="85" pos:column="41">getCurrentDocLen</name></name><argument_list pos:line="85" pos:column="57">()</argument_list></call></expr></init></decl>;</decl_stmt>
	<if pos:line="86" pos:column="9">if <condition pos:line="86" pos:column="12">(<expr><name pos:line="86" pos:column="13">startPos</name> <op:operator pos:line="86" pos:column="22">==</op:operator> <op:operator pos:line="86" pos:column="25">-</op:operator><lit:literal type="number" pos:line="86" pos:column="26">1</lit:literal></expr>)</condition><then pos:line="86" pos:column="28">
		<expr_stmt><expr><name pos:line="87" pos:column="17">startPos</name> <op:operator pos:line="87" pos:column="26">=</op:operator> <name pos:line="87" pos:column="28">direction</name><op:operator pos:line="87" pos:column="37">==</op:operator><name pos:line="87" pos:column="39">dirDown</name><op:operator pos:line="87" pos:column="46">?</op:operator><lit:literal type="number" pos:line="87" pos:column="47">0</lit:literal><op:operator pos:line="87" pos:column="48">:</op:operator><name pos:line="87" pos:column="49">totalSize</name><op:operator pos:line="87" pos:column="58">-</op:operator><lit:literal type="number" pos:line="87" pos:column="59">1</lit:literal></expr>;</expr_stmt></then></if>
	<if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><name pos:line="88" pos:column="13">startPos</name> <op:operator pos:line="88" pos:column="22">&gt;</op:operator> <name pos:line="88" pos:column="24">totalSize</name></expr>)</condition><then pos:line="88" pos:column="34">
		<return pos:line="89" pos:column="17">return <expr><lit:literal type="boolean" pos:line="89" pos:column="24">false</lit:literal></expr>;</return></then></if>

	<decl_stmt><decl><type><name pos:line="91" pos:column="9">char</name> <type:modifier pos:line="91" pos:column="14">*</type:modifier></type><name pos:line="91" pos:column="15">content</name> <init pos:line="91" pos:column="23">= <expr><op:operator pos:line="91" pos:column="25">new</op:operator> <name><name pos:line="91" pos:column="29">char</name><index pos:line="91" pos:column="33">[<expr><name pos:line="91" pos:column="34">totalSize</name><op:operator pos:line="91" pos:column="43">+</op:operator><lit:literal type="number" pos:line="91" pos:column="44">1</lit:literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name pos:line="92" pos:column="9">(<type:modifier pos:line="92" pos:column="10">*</type:modifier><name pos:line="92" pos:column="11">_ppEditView</name>)<op:operator pos:line="92" pos:column="23">-&gt;</op:operator><name pos:line="92" pos:column="25">getText</name></name><argument_list pos:line="92" pos:column="32">(<argument><expr><name pos:line="92" pos:column="33">content</name></expr></argument>, <argument><expr><lit:literal type="number" pos:line="92" pos:column="42">0</lit:literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="45">totalSize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<decl_stmt><decl><type><name pos:line="93" pos:column="9">int</name></type> <name pos:line="93" pos:column="13">found</name> <init pos:line="93" pos:column="19">= <expr><op:operator pos:line="93" pos:column="21">-</op:operator><lit:literal type="number" pos:line="93" pos:column="22">1</lit:literal></expr></init></decl>;</decl_stmt>

	<for pos:line="95" pos:column="9">for (<init><decl><type><name pos:line="95" pos:column="14">int</name></type> <name pos:line="95" pos:column="18">i</name> <init pos:line="95" pos:column="20">= <expr><name pos:line="95" pos:column="22">startPos</name><op:operator pos:line="95" pos:column="30">-</op:operator><op:operator pos:line="95" pos:column="31">(</op:operator><name pos:line="95" pos:column="32">direction</name> <op:operator pos:line="95" pos:column="42">==</op:operator> <name pos:line="95" pos:column="45">dirUp</name><op:operator pos:line="95" pos:column="50">?</op:operator><lit:literal type="number" pos:line="95" pos:column="51">1</lit:literal><op:operator pos:line="95" pos:column="52">:</op:operator><lit:literal type="number" pos:line="95" pos:column="53">0</lit:literal><op:operator pos:line="95" pos:column="54">)</op:operator></expr></init></decl>;</init> 
		<condition><expr><op:operator pos:line="96" pos:column="17">(</op:operator><name pos:line="96" pos:column="18">direction</name> <op:operator pos:line="96" pos:column="28">==</op:operator> <name pos:line="96" pos:column="31">dirDown</name><op:operator pos:line="96" pos:column="38">)</op:operator><op:operator pos:line="96" pos:column="39">?</op:operator><name pos:line="96" pos:column="40">i</name> <op:operator pos:line="96" pos:column="42">&lt;</op:operator> <name pos:line="96" pos:column="44">totalSize</name><op:operator pos:line="96" pos:column="53">:</op:operator><name pos:line="96" pos:column="54">i</name> <op:operator pos:line="96" pos:column="56">&gt;=</op:operator> <lit:literal type="number" pos:line="96" pos:column="59">0</lit:literal></expr> ;</condition>
		<incr><expr><op:operator pos:line="97" pos:column="17">(</op:operator><name pos:line="97" pos:column="18">direction</name> <op:operator pos:line="97" pos:column="28">==</op:operator> <name pos:line="97" pos:column="31">dirDown</name><op:operator pos:line="97" pos:column="38">)</op:operator><op:operator pos:line="97" pos:column="39">?</op:operator><op:operator pos:line="97" pos:column="40">(</op:operator><name pos:line="97" pos:column="41">i</name><op:operator pos:line="97" pos:column="42">++</op:operator><op:operator pos:line="97" pos:column="44">)</op:operator><op:operator pos:line="97" pos:column="45">:</op:operator><op:operator pos:line="97" pos:column="46">(</op:operator><name pos:line="97" pos:column="47">i</name><op:operator pos:line="97" pos:column="48">--</op:operator><op:operator pos:line="97" pos:column="50">)</op:operator></expr></incr>)
	<block pos:line="98" pos:column="9">{
		<if pos:line="99" pos:column="17">if <condition pos:line="99" pos:column="20">(<expr><op:operator pos:line="99" pos:column="21">(</op:operator><name pos:line="99" pos:column="22">unsigned</name> <name pos:line="99" pos:column="31">char</name><op:operator pos:line="99" pos:column="35">)</op:operator><name><name pos:line="99" pos:column="36">content</name><index pos:line="99" pos:column="43">[<expr><name pos:line="99" pos:column="44">i</name></expr>]</index></name> <op:operator pos:line="99" pos:column="47">&gt;=</op:operator> <name pos:line="99" pos:column="50">beginRange</name> <op:operator pos:line="99" pos:column="61">&amp;&amp;</op:operator> <op:operator pos:line="99" pos:column="64">(</op:operator><name pos:line="99" pos:column="65">unsigned</name> <name pos:line="99" pos:column="74">char</name><op:operator pos:line="99" pos:column="78">)</op:operator><name><name pos:line="99" pos:column="79">content</name><index pos:line="99" pos:column="86">[<expr><name pos:line="99" pos:column="87">i</name></expr>]</index></name> <op:operator pos:line="99" pos:column="90">&lt;=</op:operator> <name pos:line="99" pos:column="93">endRange</name></expr>)</condition><then pos:line="99" pos:column="102">
		<block pos:line="100" pos:column="17">{
			<expr_stmt><expr><name pos:line="101" pos:column="25">found</name> <op:operator pos:line="101" pos:column="31">=</op:operator> <name pos:line="101" pos:column="33">i</name></expr>;</expr_stmt>
			<break pos:line="102" pos:column="25">break;</break>
		}</block></then></if>
	}</block></for>
	
	<if pos:line="106" pos:column="9">if <condition pos:line="106" pos:column="12">(<expr><name pos:line="106" pos:column="13">found</name> <op:operator pos:line="106" pos:column="19">==</op:operator> <op:operator pos:line="106" pos:column="22">-</op:operator><lit:literal type="number" pos:line="106" pos:column="23">1</lit:literal></expr>)</condition><then pos:line="106" pos:column="25">
	<block pos:line="107" pos:column="9">{
		<if pos:line="108" pos:column="17">if <condition pos:line="108" pos:column="20">(<expr><name pos:line="108" pos:column="21">wrap</name></expr>)</condition><then pos:line="108" pos:column="26">
		<block pos:line="109" pos:column="17">{
			<for pos:line="110" pos:column="25">for (<init><decl><type><name pos:line="110" pos:column="30">int</name></type> <name pos:line="110" pos:column="34">i</name> <init pos:line="110" pos:column="36">= <expr><op:operator pos:line="110" pos:column="38">(</op:operator><name pos:line="110" pos:column="39">direction</name> <op:operator pos:line="110" pos:column="49">==</op:operator> <name pos:line="110" pos:column="52">dirUp</name><op:operator pos:line="110" pos:column="57">?</op:operator><name pos:line="110" pos:column="58">totalSize</name><op:operator pos:line="110" pos:column="67">-</op:operator><lit:literal type="number" pos:line="110" pos:column="68">1</lit:literal><op:operator pos:line="110" pos:column="69">:</op:operator><lit:literal type="number" pos:line="110" pos:column="70">0</lit:literal><op:operator pos:line="110" pos:column="71">)</op:operator></expr></init></decl>;</init> 
				<condition><expr><op:operator pos:line="111" pos:column="33">(</op:operator><name pos:line="111" pos:column="34">direction</name> <op:operator pos:line="111" pos:column="44">==</op:operator> <name pos:line="111" pos:column="47">dirDown</name><op:operator pos:line="111" pos:column="54">)</op:operator><op:operator pos:line="111" pos:column="55">?</op:operator><name pos:line="111" pos:column="56">i</name> <op:operator pos:line="111" pos:column="58">&lt;</op:operator> <name pos:line="111" pos:column="60">totalSize</name><op:operator pos:line="111" pos:column="69">:</op:operator><name pos:line="111" pos:column="70">i</name> <op:operator pos:line="111" pos:column="72">&gt;=</op:operator> <lit:literal type="number" pos:line="111" pos:column="75">0</lit:literal></expr> ;</condition>
				<incr><expr><op:operator pos:line="112" pos:column="33">(</op:operator><name pos:line="112" pos:column="34">direction</name> <op:operator pos:line="112" pos:column="44">==</op:operator> <name pos:line="112" pos:column="47">dirDown</name><op:operator pos:line="112" pos:column="54">)</op:operator><op:operator pos:line="112" pos:column="55">?</op:operator><op:operator pos:line="112" pos:column="56">(</op:operator><name pos:line="112" pos:column="57">i</name><op:operator pos:line="112" pos:column="58">++</op:operator><op:operator pos:line="112" pos:column="60">)</op:operator><op:operator pos:line="112" pos:column="61">:</op:operator><op:operator pos:line="112" pos:column="62">(</op:operator><name pos:line="112" pos:column="63">i</name><op:operator pos:line="112" pos:column="64">--</op:operator><op:operator pos:line="112" pos:column="66">)</op:operator></expr></incr>)
			<block pos:line="113" pos:column="25">{
				<if pos:line="114" pos:column="33">if <condition pos:line="114" pos:column="36">(<expr><op:operator pos:line="114" pos:column="37">(</op:operator><name pos:line="114" pos:column="38">unsigned</name> <name pos:line="114" pos:column="47">char</name><op:operator pos:line="114" pos:column="51">)</op:operator><name><name pos:line="114" pos:column="52">content</name><index pos:line="114" pos:column="59">[<expr><name pos:line="114" pos:column="60">i</name></expr>]</index></name> <op:operator pos:line="114" pos:column="63">&gt;=</op:operator> <name pos:line="114" pos:column="66">beginRange</name> <op:operator pos:line="114" pos:column="77">&amp;&amp;</op:operator> <op:operator pos:line="114" pos:column="80">(</op:operator><name pos:line="114" pos:column="81">unsigned</name> <name pos:line="114" pos:column="90">char</name><op:operator pos:line="114" pos:column="94">)</op:operator><name><name pos:line="114" pos:column="95">content</name><index pos:line="114" pos:column="102">[<expr><name pos:line="114" pos:column="103">i</name></expr>]</index></name> <op:operator pos:line="114" pos:column="106">&lt;=</op:operator> <name pos:line="114" pos:column="109">endRange</name></expr>)</condition><then pos:line="114" pos:column="118">
				<block pos:line="115" pos:column="33">{
					<expr_stmt><expr><name pos:line="116" pos:column="41">found</name> <op:operator pos:line="116" pos:column="47">=</op:operator> <name pos:line="116" pos:column="49">i</name></expr>;</expr_stmt>
					<break pos:line="117" pos:column="41">break;</break>
				}</block></then></if>
			}</block></for>
		}</block></then></if>
	}</block></then></if>

	<if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><name pos:line="123" pos:column="13">found</name> <op:operator pos:line="123" pos:column="19">!=</op:operator> <op:operator pos:line="123" pos:column="22">-</op:operator><lit:literal type="number" pos:line="123" pos:column="23">1</lit:literal></expr>)</condition><then pos:line="123" pos:column="25">
	<block pos:line="124" pos:column="9">{
		<comment type="line" pos:line="125" pos:column="17">//printInt(found);</comment>
		<decl_stmt><decl><type><name pos:line="126" pos:column="17">int</name></type> <name pos:line="126" pos:column="21">sci_line</name> <init pos:line="126" pos:column="30">= <expr><call><name pos:line="126" pos:column="32">(<type:modifier pos:line="126" pos:column="33">*</type:modifier><name pos:line="126" pos:column="34">_ppEditView</name>)<op:operator pos:line="126" pos:column="46">-&gt;</op:operator><name pos:line="126" pos:column="48">execute</name></name><argument_list pos:line="126" pos:column="55">(<argument><expr><name pos:line="126" pos:column="56">SCI_LINEFROMPOSITION</name></expr></argument>, <argument><expr><name pos:line="126" pos:column="78">found</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<expr_stmt><expr><call><name pos:line="127" pos:column="17">(<type:modifier pos:line="127" pos:column="18">*</type:modifier><name pos:line="127" pos:column="19">_ppEditView</name>)<op:operator pos:line="127" pos:column="31">-&gt;</op:operator><name pos:line="127" pos:column="33">execute</name></name><argument_list pos:line="127" pos:column="40">(<argument><expr><name pos:line="127" pos:column="41">SCI_ENSUREVISIBLE</name></expr></argument>, <argument><expr><name pos:line="127" pos:column="60">sci_line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="128" pos:column="17">(<type:modifier pos:line="128" pos:column="18">*</type:modifier><name pos:line="128" pos:column="19">_ppEditView</name>)<op:operator pos:line="128" pos:column="31">-&gt;</op:operator><name pos:line="128" pos:column="33">execute</name></name><argument_list pos:line="128" pos:column="40">(<argument><expr><name pos:line="128" pos:column="41">SCI_GOTOPOS</name></expr></argument>, <argument><expr><name pos:line="128" pos:column="54">found</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<expr_stmt><expr><call><name pos:line="129" pos:column="17">(<type:modifier pos:line="129" pos:column="18">*</type:modifier><name pos:line="129" pos:column="19">_ppEditView</name>)<op:operator pos:line="129" pos:column="31">-&gt;</op:operator><name pos:line="129" pos:column="33">execute</name></name><argument_list pos:line="129" pos:column="40">(<argument><expr><name pos:line="129" pos:column="41">SCI_SETSEL</name></expr></argument>, <argument><expr><op:operator pos:line="129" pos:column="53">(</op:operator><name pos:line="129" pos:column="54">direction</name> <op:operator pos:line="129" pos:column="64">==</op:operator> <name pos:line="129" pos:column="67">dirDown</name><op:operator pos:line="129" pos:column="74">)</op:operator><op:operator pos:line="129" pos:column="75">?</op:operator><name pos:line="129" pos:column="76">found</name><op:operator pos:line="129" pos:column="81">:</op:operator><name pos:line="129" pos:column="82">found</name><op:operator pos:line="129" pos:column="87">+</op:operator><lit:literal type="number" pos:line="129" pos:column="88">1</lit:literal></expr></argument>, <argument><expr><op:operator pos:line="129" pos:column="91">(</op:operator><name pos:line="129" pos:column="92">direction</name> <op:operator pos:line="129" pos:column="102">==</op:operator> <name pos:line="129" pos:column="105">dirDown</name><op:operator pos:line="129" pos:column="112">)</op:operator><op:operator pos:line="129" pos:column="113">?</op:operator><name pos:line="129" pos:column="114">found</name><op:operator pos:line="129" pos:column="119">+</op:operator><lit:literal type="number" pos:line="129" pos:column="120">1</lit:literal><op:operator pos:line="129" pos:column="121">:</op:operator><name pos:line="129" pos:column="122">found</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></then></if>
	<expr_stmt><expr><op:operator pos:line="131" pos:column="9">delete</op:operator> <index pos:line="131" pos:column="16">[]</index> <name pos:line="131" pos:column="19">content</name></expr>;</expr_stmt>
	<return pos:line="132" pos:column="9">return <expr><op:operator pos:line="132" pos:column="16">(</op:operator><name pos:line="132" pos:column="17">found</name> <op:operator pos:line="132" pos:column="23">!=</op:operator> <op:operator pos:line="132" pos:column="26">-</op:operator><lit:literal type="number" pos:line="132" pos:column="27">1</lit:literal><op:operator pos:line="132" pos:column="28">)</op:operator></expr>;</return>
}</block></function>

<function><type><name pos:line="135" pos:column="1">void</name></type> <name><name pos:line="135" pos:column="6">FindCharsInRangeDlg</name><op:operator pos:line="135" pos:column="25">::</op:operator><name pos:line="135" pos:column="27">getDirectionFromUI</name></name><parameter_list pos:line="135" pos:column="45">(<param><decl><type><name pos:line="135" pos:column="46">bool</name> <type:modifier pos:line="135" pos:column="51">&amp;</type:modifier></type> <name pos:line="135" pos:column="53">whichDirection</name></decl></param>, <param><decl><type><name pos:line="135" pos:column="69">bool</name> <type:modifier pos:line="135" pos:column="74">&amp;</type:modifier></type> <name pos:line="135" pos:column="76">isWrap</name></decl></param>)</parameter_list>
<block pos:line="136" pos:column="1">{
	<expr_stmt><expr><name pos:line="137" pos:column="9">whichDirection</name> <op:operator pos:line="137" pos:column="24">=</op:operator> <call><name pos:line="137" pos:column="26">isCheckedOrNot</name><argument_list pos:line="137" pos:column="40">(<argument><expr><name pos:line="137" pos:column="41">ID_FINDCHAR_DIRUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr><name pos:line="138" pos:column="9">isWrap</name> <op:operator pos:line="138" pos:column="16">=</op:operator> <call><name pos:line="138" pos:column="18">isCheckedOrNot</name><argument_list pos:line="138" pos:column="32">(<argument><expr><name pos:line="138" pos:column="33">ID_FINDCHAR_WRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name pos:line="141" pos:column="1">bool</name></type> <name><name pos:line="141" pos:column="6">FindCharsInRangeDlg</name><op:operator pos:line="141" pos:column="25">::</op:operator><name pos:line="141" pos:column="27">getRangeFromUI</name></name><parameter_list pos:line="141" pos:column="41">(<param><decl><type><name pos:line="141" pos:column="42">unsigned</name> <name pos:line="141" pos:column="51">char</name> <type:modifier pos:line="141" pos:column="56">&amp;</type:modifier></type> <name pos:line="141" pos:column="58">startRange</name></decl></param>, <param><decl><type><name pos:line="141" pos:column="70">unsigned</name> <name pos:line="141" pos:column="79">char</name> <type:modifier pos:line="141" pos:column="84">&amp;</type:modifier></type> <name pos:line="141" pos:column="86">endRange</name></decl></param>)</parameter_list>
<block pos:line="142" pos:column="1">{
	<if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><call><name pos:line="143" pos:column="13">isCheckedOrNot</name><argument_list pos:line="143" pos:column="27">(<argument><expr><name pos:line="143" pos:column="28">IDC_NONASCCI_RADIO</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="143" pos:column="48">
	<block pos:line="144" pos:column="9">{
		<expr_stmt><expr><name pos:line="145" pos:column="17">startRange</name> <op:operator pos:line="145" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="145" pos:column="30">128</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="146" pos:column="17">endRange</name> <op:operator pos:line="146" pos:column="26">=</op:operator> <lit:literal type="number" pos:line="146" pos:column="28">255</lit:literal></expr>;</expr_stmt>
		<return pos:line="147" pos:column="17">return <expr><lit:literal type="boolean" pos:line="147" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	<if pos:line="149" pos:column="9">if <condition pos:line="149" pos:column="12">(<expr><call><name pos:line="149" pos:column="13">isCheckedOrNot</name><argument_list pos:line="149" pos:column="27">(<argument><expr><name pos:line="149" pos:column="28">IDC_ASCCI_RADIO</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="149" pos:column="45">
	<block pos:line="150" pos:column="9">{
		<expr_stmt><expr><name pos:line="151" pos:column="17">startRange</name> <op:operator pos:line="151" pos:column="28">=</op:operator> <lit:literal type="number" pos:line="151" pos:column="30">0</lit:literal></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="152" pos:column="17">endRange</name> <op:operator pos:line="152" pos:column="26">=</op:operator> <lit:literal type="number" pos:line="152" pos:column="28">127</lit:literal></expr>;</expr_stmt>
		<return pos:line="153" pos:column="17">return <expr><lit:literal type="boolean" pos:line="153" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	
	<if pos:line="156" pos:column="9">if <condition pos:line="156" pos:column="12">(<expr><call><name pos:line="156" pos:column="13">isCheckedOrNot</name><argument_list pos:line="156" pos:column="27">(<argument><expr><name pos:line="156" pos:column="28">IDC_MYRANGE_RADIO</name></expr></argument>)</argument_list></call></expr>)</condition><then pos:line="156" pos:column="47">
	<block pos:line="157" pos:column="9">{
		<decl_stmt><decl><type><name pos:line="158" pos:column="17">BOOL</name></type> <name pos:line="158" pos:column="22">startBool</name></decl><op:operator pos:line="158" pos:column="31">,</op:operator> <decl><type ref="prev"/><name pos:line="158" pos:column="33">endBool</name></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="159" pos:column="17">int</name></type> <name pos:line="159" pos:column="21">start</name> <init pos:line="159" pos:column="27">= <expr><call><name><op:operator pos:line="159" pos:column="29">::</op:operator><name pos:line="159" pos:column="31">GetDlgItemInt</name></name><argument_list pos:line="159" pos:column="44">(<argument><expr><name pos:line="159" pos:column="45">_hSelf</name></expr></argument>, <argument><expr><name pos:line="159" pos:column="53">IDC_RANGESTART_EDIT</name></expr></argument>, <argument><expr><op:operator pos:line="159" pos:column="74">&amp;</op:operator><name pos:line="159" pos:column="75">startBool</name></expr></argument>, <argument><expr><name pos:line="159" pos:column="86">FALSE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name pos:line="160" pos:column="17">int</name></type> <name pos:line="160" pos:column="21">end</name> <init pos:line="160" pos:column="25">= <expr><call><name><op:operator pos:line="160" pos:column="27">::</op:operator><name pos:line="160" pos:column="29">GetDlgItemInt</name></name><argument_list pos:line="160" pos:column="42">(<argument><expr><name pos:line="160" pos:column="43">_hSelf</name></expr></argument>, <argument><expr><name pos:line="160" pos:column="51">IDC_RANGEEND_EDIT</name></expr></argument>, <argument><expr><op:operator pos:line="160" pos:column="70">&amp;</op:operator><name pos:line="160" pos:column="71">endBool</name></expr></argument>, <argument><expr><name pos:line="160" pos:column="80">FALSE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if pos:line="162" pos:column="17">if <condition pos:line="162" pos:column="20">(<expr><op:operator pos:line="162" pos:column="21">!</op:operator><name pos:line="162" pos:column="22">startBool</name> <op:operator pos:line="162" pos:column="32">||</op:operator> <op:operator pos:line="162" pos:column="35">!</op:operator><name pos:line="162" pos:column="36">endBool</name></expr>)</condition><then pos:line="162" pos:column="44">
			<return pos:line="163" pos:column="25">return <expr><lit:literal type="boolean" pos:line="163" pos:column="32">false</lit:literal></expr>;</return></then></if>
		<if pos:line="164" pos:column="17">if <condition pos:line="164" pos:column="20">(<expr><name pos:line="164" pos:column="21">start</name> <op:operator pos:line="164" pos:column="27">&gt;</op:operator> <lit:literal type="number" pos:line="164" pos:column="29">255</lit:literal> <op:operator pos:line="164" pos:column="33">||</op:operator> <name pos:line="164" pos:column="36">end</name> <op:operator pos:line="164" pos:column="40">&gt;</op:operator> <lit:literal type="number" pos:line="164" pos:column="42">255</lit:literal></expr>)</condition><then pos:line="164" pos:column="46">
			<return pos:line="165" pos:column="25">return <expr><lit:literal type="boolean" pos:line="165" pos:column="32">false</lit:literal></expr>;</return></then></if>
		<if pos:line="166" pos:column="17">if <condition pos:line="166" pos:column="20">(<expr><name pos:line="166" pos:column="21">start</name> <op:operator pos:line="166" pos:column="27">&gt;</op:operator> <name pos:line="166" pos:column="29">end</name></expr>)</condition><then pos:line="166" pos:column="33">
			<return pos:line="167" pos:column="25">return <expr><lit:literal type="boolean" pos:line="167" pos:column="32">false</lit:literal></expr>;</return></then></if>
		<expr_stmt><expr><name pos:line="168" pos:column="17">startRange</name> <op:operator pos:line="168" pos:column="28">=</op:operator> <op:operator pos:line="168" pos:column="30">(</op:operator><name pos:line="168" pos:column="31">unsigned</name> <name pos:line="168" pos:column="40">char</name><op:operator pos:line="168" pos:column="44">)</op:operator><name pos:line="168" pos:column="45">start</name></expr>;</expr_stmt>
		<expr_stmt><expr><name pos:line="169" pos:column="17">endRange</name> <op:operator pos:line="169" pos:column="26">=</op:operator> <op:operator pos:line="169" pos:column="28">(</op:operator><name pos:line="169" pos:column="29">unsigned</name> <name pos:line="169" pos:column="38">char</name><op:operator pos:line="169" pos:column="42">)</op:operator><name pos:line="169" pos:column="43">end</name></expr>;</expr_stmt>
		<return pos:line="170" pos:column="17">return <expr><lit:literal type="boolean" pos:line="170" pos:column="24">true</lit:literal></expr>;</return>
	}</block></then></if>
	
	<return pos:line="173" pos:column="9">return <expr><lit:literal type="boolean" pos:line="173" pos:column="16">false</lit:literal></expr>;</return>
}</block></function>
</unit>
